; ModuleID = '../bcout/drivers/net/ethernet/synopsys/dwc-xlgmac-hw.llvm.bc'
source_filename = "drivers/net/ethernet/synopsys/dwc-xlgmac-hw.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64"

%struct.softnet_data = type { %struct.list_head, %struct.sk_buff_head, i32, i32, i32, %struct.Qdisc*, %struct.Qdisc**, %struct.sk_buff*, %struct.anon.131, i32, %struct.sk_buff_head, %struct.napi_struct }
%struct.list_head = type { %struct.list_head*, %struct.list_head* }
%struct.Qdisc = type opaque
%struct.sk_buff = type { %union.anon, %union.anon.2, %union.anon.3, [48 x i8], %union.anon.4, i32, i32, i16, i16, i16, [0 x i8], i8, [0 x i32], [0 x i8], i16, [0 x i8], i16, %union.anon.6, i32, i32, i32, i16, i16, %union.anon.8, %union.anon.9, %union.anon.10, i16, i16, i16, i16, i16, i16, i16, [0 x i32], i32, i32, i8*, i8*, i32, %struct.refcount_struct }
%union.anon = type { %struct.anon.0 }
%struct.anon.0 = type { %struct.sk_buff*, %struct.sk_buff*, %union.anon.1 }
%union.anon.1 = type { %struct.net_device* }
%struct.net_device = type { [16 x i8], %struct.netdev_name_node*, %struct.dev_ifalias*, i64, i64, i64, i32, i64, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.anon, i64, i64, i64, i64, i64, i64, i64, i32, i32, %struct.net_device_stats, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.iw_handler_def*, %struct.iw_public_data*, %struct.net_device_ops*, %struct.ethtool_ops*, %struct.ndisc_ops*, %struct.header_ops*, i32, i32, i16, i16, i8, i8, i8, i8, i32, i32, i32, i16, i16, i8, i8, i16, i16, [32 x i8], i8, i8, i8, i8, i16, i16, i16, %struct.spinlock, %struct.netdev_hw_addr_list, %struct.netdev_hw_addr_list, %struct.netdev_hw_addr_list, %struct.kset*, i32, i32, i8, %struct.vlan_info*, %struct.in_device*, %struct.inet6_dev*, %struct.wireless_dev*, %struct.wpan_dev*, i8*, %struct.netdev_rx_queue*, i32, i32, %struct.bpf_prog*, i64, i32, i32 (%struct.sk_buff**)*, i8*, %struct.netdev_queue*, [32 x i8], %struct.hlist_node, %struct.netdev_queue*, i32, i32, %struct.Qdisc*, i32, %struct.spinlock, %struct.xdp_dev_bulk_queue*, %struct.timer_list, i32, i32, %struct.list_head, i32*, %struct.list_head, i8, i8, i16, i8, void (%struct.net_device*)*, %struct.possible_net_t, %union.anon.127, %struct.device, [4 x %struct.attribute_group*], %struct.attribute_group*, %struct.rtnl_link_ops*, i32, i16, i16, [16 x %struct.netdev_tc_txq], [16 x i8], %struct.phy_device*, %struct.sfp_bus*, %struct.lock_class_key*, %struct.lock_class_key*, i8, i8, %struct.list_head, %struct.udp_tunnel_nic_info*, %struct.udp_tunnel_nic*, [3 x %struct.bpf_xdp_entity] }
%struct.netdev_name_node = type { %struct.hlist_node, %struct.list_head, %struct.net_device*, i8* }
%struct.dev_ifalias = type { %struct.callback_head, [0 x i8] }
%struct.callback_head = type { %struct.callback_head*, void (%struct.callback_head*)* }
%struct.anon = type { %struct.list_head, %struct.list_head }
%struct.net_device_stats = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.atomic64_t = type { i64 }
%struct.atomic_t = type { i32 }
%struct.iw_handler_def = type opaque
%struct.iw_public_data = type opaque
%struct.net_device_ops = type { i32 (%struct.net_device*)*, void (%struct.net_device*)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*)*, i32 (%struct.sk_buff*, %struct.net_device*)*, i64 (%struct.sk_buff*, %struct.net_device*, i64)*, i16 (%struct.net_device*, %struct.sk_buff*, %struct.net_device*)*, void (%struct.net_device*, i32)*, void (%struct.net_device*)*, i32 (%struct.net_device*, i8*)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*, %struct.ifreq*, i32)*, i32 (%struct.net_device*, %struct.ifmap*)*, i32 (%struct.net_device*, i32)*, i32 (%struct.net_device*, %struct.neigh_parms*)*, void (%struct.net_device*, i32)*, void (%struct.net_device*, %struct.rtnl_link_stats64*)*, i1 (%struct.net_device*, i32)*, i32 (i32, %struct.net_device*, i8*)*, %struct.net_device_stats* (%struct.net_device*)*, i32 (%struct.net_device*, i16, i16)*, i32 (%struct.net_device*, i16, i16)*, i32 (%struct.net_device*, i32, i8*)*, i32 (%struct.net_device*, i32, i16, i8, i16)*, i32 (%struct.net_device*, i32, i32, i32)*, i32 (%struct.net_device*, i32, i1)*, i32 (%struct.net_device*, i32, i1)*, i32 (%struct.net_device*, i32, %struct.ifla_vf_info*)*, i32 (%struct.net_device*, i32, i32)*, i32 (%struct.net_device*, i32, %struct.ifla_vf_stats*)*, i32 (%struct.net_device*, i32, %struct.nlattr**)*, i32 (%struct.net_device*, i32, %struct.sk_buff*)*, i32 (%struct.net_device*, i32, %struct.ifla_vf_guid*, %struct.ifla_vf_guid*)*, i32 (%struct.net_device*, i32, i64, i32)*, i32 (%struct.net_device*, i32, i1)*, i32 (%struct.net_device*, i32, i8*)*, i32 (%struct.net_device*, %struct.net_device*, %struct.netlink_ext_ack*)*, i32 (%struct.net_device*, %struct.net_device*)*, %struct.net_device* (%struct.net_device*, %struct.sk_buff*, i1)*, i64 (%struct.net_device*, i64)*, i32 (%struct.net_device*, i64)*, i32 (%struct.net_device*, %struct.neighbour*)*, void (%struct.net_device*, %struct.neighbour*)*, i32 (%struct.ndmsg*, %struct.nlattr**, %struct.net_device*, i8*, i16, i16, %struct.netlink_ext_ack*)*, i32 (%struct.ndmsg*, %struct.nlattr**, %struct.net_device*, i8*, i16)*, i32 (%struct.sk_buff*, %struct.netlink_callback*, %struct.net_device*, %struct.net_device*, i32*)*, i32 (%struct.sk_buff*, %struct.nlattr**, %struct.net_device*, i8*, i16, i32, i32, %struct.netlink_ext_ack*)*, i32 (%struct.net_device*, %struct.nlmsghdr*, i16, %struct.netlink_ext_ack*)*, i32 (%struct.sk_buff*, i32, i32, %struct.net_device*, i32, i32)*, i32 (%struct.net_device*, %struct.nlmsghdr*, i16)*, i32 (%struct.net_device*, i1)*, i32 (%struct.net_device*, %struct.netdev_phys_item_id*)*, i32 (%struct.net_device*, %struct.netdev_phys_item_id*)*, i32 (%struct.net_device*, i8*, i64)*, void (%struct.net_device*, %struct.udp_tunnel_info*)*, void (%struct.net_device*, %struct.udp_tunnel_info*)*, i8* (%struct.net_device*, %struct.net_device*)*, void (%struct.net_device*, i8*)*, i32 (%struct.net_device*, i32, i32)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*, i1)*, i32 (%struct.net_device*, %struct.sk_buff*)*, void (%struct.net_device*, i32)*, i32 (%struct.net_device*, %struct.netdev_bpf*)*, i32 (%struct.net_device*, i32, %struct.xdp_frame**, i32)*, i32 (%struct.net_device*, i32, i32)*, %struct.devlink_port* (%struct.net_device*)*, i32 (%struct.net_device*, %struct.ip_tunnel_parm*, i32)*, %struct.net_device* (%struct.net_device*)* }
%struct.ifreq = type { %union.anon.11, %union.anon.12 }
%union.anon.11 = type { [16 x i8] }
%union.anon.12 = type { %struct.ifmap }
%struct.ifmap = type { i64, i64, i16, i8, i8, i8 }
%struct.neigh_parms = type opaque
%struct.rtnl_link_stats64 = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.ifla_vf_info = type { i32, [32 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i16 }
%struct.ifla_vf_stats = type { i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.nlattr = type { i16, i16 }
%struct.ifla_vf_guid = type { i32, i64 }
%struct.netlink_ext_ack = type { i8*, %struct.nlattr*, %struct.nla_policy*, [20 x i8], i8 }
%struct.nla_policy = type opaque
%struct.neighbour = type opaque
%struct.ndmsg = type { i8, i8, i16, i32, i16, i8, i8 }
%struct.netlink_callback = type { %struct.sk_buff*, %struct.nlmsghdr*, i32 (%struct.sk_buff*, %struct.netlink_callback*)*, i32 (%struct.netlink_callback*)*, i8*, %struct.module*, %struct.netlink_ext_ack*, i16, i16, i32, i32, i32, i8, %union.anon.14 }
%struct.nlmsghdr = type { i32, i16, i16, i32, i32 }
%struct.module = type opaque
%union.anon.14 = type { [6 x i64] }
%struct.netdev_phys_item_id = type { [32 x i8], i8 }
%struct.udp_tunnel_info = type opaque
%struct.netdev_bpf = type { i32, %union.anon.15 }
%union.anon.15 = type { %struct.anon.16 }
%struct.anon.16 = type { i32, %struct.bpf_prog*, %struct.netlink_ext_ack* }
%struct.xdp_frame = type { i8*, i16, i16, i32, %struct.xdp_mem_info, %struct.net_device* }
%struct.xdp_mem_info = type { i32, i32 }
%struct.devlink_port = type opaque
%struct.ip_tunnel_parm = type opaque
%struct.ethtool_ops = type { i32, void (%struct.net_device*, %struct.ethtool_drvinfo*)*, i32 (%struct.net_device*)*, void (%struct.net_device*, %struct.ethtool_regs*, i8*)*, void (%struct.net_device*, %struct.ethtool_wolinfo*)*, i32 (%struct.net_device*, %struct.ethtool_wolinfo*)*, i32 (%struct.net_device*)*, void (%struct.net_device*, i32)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*, %struct.ethtool_link_ext_state_info*)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*, %struct.ethtool_eeprom*, i8*)*, i32 (%struct.net_device*, %struct.ethtool_eeprom*, i8*)*, i32 (%struct.net_device*, %struct.ethtool_coalesce*)*, i32 (%struct.net_device*, %struct.ethtool_coalesce*)*, void (%struct.net_device*, %struct.ethtool_ringparam*)*, i32 (%struct.net_device*, %struct.ethtool_ringparam*)*, void (%struct.net_device*, %struct.ethtool_pause_stats*)*, void (%struct.net_device*, %struct.ethtool_pauseparam*)*, i32 (%struct.net_device*, %struct.ethtool_pauseparam*)*, void (%struct.net_device*, %struct.ethtool_test*, i64*)*, void (%struct.net_device*, i32, i8*)*, i32 (%struct.net_device*, i32)*, void (%struct.net_device*, %struct.ethtool_stats*, i64*)*, i32 (%struct.net_device*)*, void (%struct.net_device*)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*, i32)*, i32 (%struct.net_device*, i32)*, i32 (%struct.net_device*, %struct.ethtool_rxnfc*, i32*)*, i32 (%struct.net_device*, %struct.ethtool_rxnfc*)*, i32 (%struct.net_device*, %struct.ethtool_flash*)*, i32 (%struct.net_device*, i32*)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*, i32*, i8*, i8*)*, i32 (%struct.net_device*, i32*, i8*, i8)*, i32 (%struct.net_device*, i32*, i8*, i8*, i32)*, i32 (%struct.net_device*, i32*, i8*, i8, i32*, i1)*, void (%struct.net_device*, %struct.ethtool_channels*)*, i32 (%struct.net_device*, %struct.ethtool_channels*)*, i32 (%struct.net_device*, %struct.ethtool_dump*)*, i32 (%struct.net_device*, %struct.ethtool_dump*, i8*)*, i32 (%struct.net_device*, %struct.ethtool_dump*)*, i32 (%struct.net_device*, %struct.ethtool_ts_info*)*, i32 (%struct.net_device*, %struct.ethtool_modinfo*)*, i32 (%struct.net_device*, %struct.ethtool_eeprom*, i8*)*, i32 (%struct.net_device*, %struct.ethtool_eee*)*, i32 (%struct.net_device*, %struct.ethtool_eee*)*, i32 (%struct.net_device*, %struct.ethtool_tunable*, i8*)*, i32 (%struct.net_device*, %struct.ethtool_tunable*, i8*)*, i32 (%struct.net_device*, i32, %struct.ethtool_coalesce*)*, i32 (%struct.net_device*, i32, %struct.ethtool_coalesce*)*, i32 (%struct.net_device*, %struct.ethtool_link_ksettings*)*, i32 (%struct.net_device*, %struct.ethtool_link_ksettings*)*, i32 (%struct.net_device*, %struct.ethtool_fecparam*)*, i32 (%struct.net_device*, %struct.ethtool_fecparam*)*, void (%struct.net_device*, %struct.ethtool_stats*, i64*)*, i32 (%struct.net_device*, %struct.ethtool_tunable*, i8*)*, i32 (%struct.net_device*, %struct.ethtool_tunable*, i8*)* }
%struct.ethtool_drvinfo = type { i32, [32 x i8], [32 x i8], [32 x i8], [32 x i8], [32 x i8], [12 x i8], i32, i32, i32, i32, i32 }
%struct.ethtool_regs = type { i32, i32, i32, [0 x i8] }
%struct.ethtool_wolinfo = type { i32, i32, i32, [6 x i8] }
%struct.ethtool_link_ext_state_info = type { i32, %union.anon.123 }
%union.anon.123 = type { i32 }
%struct.ethtool_coalesce = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.ethtool_ringparam = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.ethtool_pause_stats = type { i64, i64 }
%struct.ethtool_pauseparam = type { i32, i32, i32, i32 }
%struct.ethtool_test = type { i32, i32, i32, i32, [0 x i64] }
%struct.ethtool_rxnfc = type { i32, i32, i64, %struct.ethtool_rx_flow_spec, %union.anon.124, [0 x i32] }
%struct.ethtool_rx_flow_spec = type { i32, %union.ethtool_flow_union, %struct.ethtool_flow_ext, %union.ethtool_flow_union, %struct.ethtool_flow_ext, i64, i32 }
%union.ethtool_flow_union = type { %struct.ethtool_tcpip6_spec, [12 x i8] }
%struct.ethtool_tcpip6_spec = type { [4 x i32], [4 x i32], i16, i16, i8 }
%struct.ethtool_flow_ext = type { [2 x i8], [6 x i8], i16, i16, [2 x i32] }
%union.anon.124 = type { i32 }
%struct.ethtool_flash = type { i32, i32, [128 x i8] }
%struct.ethtool_channels = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.ethtool_dump = type { i32, i32, i32, i32, [0 x i8] }
%struct.ethtool_ts_info = type { i32, i32, i32, i32, [3 x i32], i32, [3 x i32] }
%struct.ethtool_modinfo = type { i32, i32, i32, [8 x i32] }
%struct.ethtool_eeprom = type { i32, i32, i32, i32, [0 x i8] }
%struct.ethtool_eee = type { i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%struct.ethtool_link_ksettings = type { %struct.ethtool_link_settings, %struct.anon.125 }
%struct.ethtool_link_settings = type { i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [1 x i8], [7 x i32], [0 x i32] }
%struct.anon.125 = type { [2 x i64], [2 x i64], [2 x i64] }
%struct.ethtool_fecparam = type { i32, i32, i32, i32 }
%struct.ethtool_stats = type { i32, i32, [0 x i64] }
%struct.ethtool_tunable = type { i32, i32, i32, i32, [0 x i8*] }
%struct.ndisc_ops = type opaque
%struct.header_ops = type { i32 (%struct.sk_buff*, %struct.net_device*, i16, i8*, i8*, i32)*, i32 (%struct.sk_buff*, i8*)*, i32 (%struct.neighbour*, %struct.hh_cache*, i16)*, void (%struct.hh_cache*, %struct.net_device*, i8*)*, i1 (i8*, i32)*, i16 (%struct.sk_buff*)* }
%struct.hh_cache = type { i32, %struct.seqlock_t, [12 x i64] }
%struct.seqlock_t = type { %struct.seqcount_spinlock, %struct.spinlock }
%struct.seqcount_spinlock = type { %struct.seqcount }
%struct.seqcount = type { i32 }
%struct.netdev_hw_addr_list = type { %struct.list_head, i32 }
%struct.kset = type { %struct.list_head, %struct.spinlock, %struct.kobject, %struct.kset_uevent_ops* }
%struct.kobject = type { i8*, %struct.list_head, %struct.kobject*, %struct.kset*, %struct.kobj_type*, %struct.kernfs_node*, %struct.kref, i8 }
%struct.kobj_type = type { void (%struct.kobject*)*, %struct.sysfs_ops*, %struct.attribute**, %struct.attribute_group**, %struct.kobj_ns_type_operations* (%struct.kobject*)*, i8* (%struct.kobject*)*, void (%struct.kobject*, %struct.kuid_t*, %struct.kgid_t*)* }
%struct.sysfs_ops = type { i64 (%struct.kobject*, %struct.attribute*, i8*)*, i64 (%struct.kobject*, %struct.attribute*, i8*, i64)* }
%struct.attribute = type { i8*, i16 }
%struct.kobj_ns_type_operations = type { i32, i1 ()*, i8* ()*, i8* (%struct.sock*)*, i8* ()*, void (i8*)* }
%struct.sock = type opaque
%struct.kuid_t = type { i32 }
%struct.kgid_t = type { i32 }
%struct.kernfs_node = type { %struct.atomic_t, %struct.atomic_t, %struct.kernfs_node*, i8*, %struct.rb_node, i8*, i32, %union.anon.126, i8*, i64, i16, i16, %struct.kernfs_iattrs* }
%struct.rb_node = type { i64, %struct.rb_node*, %struct.rb_node* }
%union.anon.126 = type { %struct.kernfs_elem_attr }
%struct.kernfs_elem_attr = type { %struct.kernfs_ops*, %struct.kernfs_open_node*, i64, %struct.kernfs_node* }
%struct.kernfs_ops = type { i32 (%struct.kernfs_open_file*)*, void (%struct.kernfs_open_file*)*, i32 (%struct.seq_file*, i8*)*, i8* (%struct.seq_file*, i64*)*, i8* (%struct.seq_file*, i8*, i64*)*, void (%struct.seq_file*, i8*)*, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i64, i8, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i32 (%struct.kernfs_open_file*, %struct.poll_table_struct*)*, i32 (%struct.kernfs_open_file*, %struct.vm_area_struct*)* }
%struct.kernfs_open_file = type { %struct.kernfs_node*, %struct.file*, %struct.seq_file*, i8*, %struct.mutex, %struct.mutex, i32, %struct.list_head, i8*, i64, i8, %struct.vm_operations_struct* }
%struct.file = type { %union.anon.42, %struct.path, %struct.inode*, %struct.file_operations*, %struct.spinlock, i32, %struct.atomic64_t, i32, i32, %struct.mutex, i64, %struct.fown_struct, %struct.cred*, %struct.file_ra_state, i64, i8*, %struct.list_head, %struct.list_head, %struct.address_space*, i32, i32 }
%union.anon.42 = type { %struct.callback_head }
%struct.path = type { %struct.vfsmount*, %struct.dentry* }
%struct.vfsmount = type opaque
%struct.dentry = type { i32, %struct.seqcount_spinlock, %struct.hlist_bl_node, %struct.dentry*, %struct.qstr, %struct.inode*, [32 x i8], %struct.lockref, %struct.dentry_operations*, %struct.super_block*, i64, i8*, %union.anon.116, %struct.list_head, %struct.list_head, %union.anon.117 }
%struct.hlist_bl_node = type { %struct.hlist_bl_node*, %struct.hlist_bl_node** }
%struct.qstr = type { %union.anon.43, i8* }
%union.anon.43 = type { i64 }
%struct.lockref = type { %union.anon.114 }
%union.anon.114 = type { %struct.anon.115 }
%struct.anon.115 = type { %struct.spinlock, i32 }
%struct.dentry_operations = type { i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.qstr*)*, i32 (%struct.dentry*, i32, i8*, %struct.qstr*)*, i32 (%struct.dentry*)*, i32 (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*, %struct.inode*)*, i8* (%struct.dentry*, i8*, i32)*, %struct.vfsmount* (%struct.path*)*, i32 (%struct.path*, i1)*, %struct.dentry* (%struct.dentry*, %struct.inode*)*, [24 x i8] }
%struct.super_block = type { %struct.list_head, i32, i8, i64, i64, %struct.file_system_type*, %struct.super_operations*, %struct.dquot_operations*, %struct.quotactl_ops*, %struct.export_operations*, i64, i64, i64, %struct.dentry*, %struct.rw_semaphore, i32, %struct.atomic_t, %struct.xattr_handler**, %struct.hlist_bl_head, %struct.list_head, %struct.block_device*, %struct.backing_dev_info*, %struct.mtd_info*, %struct.hlist_node, i32, %struct.quota_info, %struct.sb_writers, i8*, i32, i64, i64, i32, %struct.fsnotify_mark_connector*, [32 x i8], %struct.uuid_t, i32, i32, %struct.mutex, i8*, %struct.dentry_operations*, i32, %struct.shrinker, %struct.atomic64_t, %struct.atomic64_t, i32, i32, %struct.workqueue_struct*, %struct.hlist_head, %struct.user_namespace*, %struct.list_lru, %struct.list_lru, %struct.callback_head, %struct.work_struct, %struct.mutex, i32, %struct.spinlock, %struct.list_head, %struct.spinlock, %struct.list_head }
%struct.file_system_type = type { i8*, i32, i32 (%struct.fs_context*)*, %struct.fs_parameter_spec*, %struct.dentry* (%struct.file_system_type*, i32, i8*, i8*)*, void (%struct.super_block*)*, %struct.module*, %struct.file_system_type*, %struct.hlist_head, %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key, [3 x %struct.lock_class_key], %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key }
%struct.fs_context = type opaque
%struct.fs_parameter_spec = type opaque
%struct.lock_class_key = type {}
%struct.super_operations = type { %struct.inode* (%struct.super_block*)*, void (%struct.inode*)*, void (%struct.inode*)*, void (%struct.inode*, i32)*, i32 (%struct.inode*, %struct.writeback_control*)*, i32 (%struct.inode*)*, void (%struct.inode*)*, void (%struct.super_block*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.dentry*, %struct.kstatfs*)*, i32 (%struct.super_block*, i32*, i8*)*, void (%struct.super_block*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.super_block*, %struct.page*, i32)*, i64 (%struct.super_block*, %struct.shrink_control*)*, i64 (%struct.super_block*, %struct.shrink_control*)* }
%struct.writeback_control = type opaque
%struct.kstatfs = type opaque
%struct.page = type { i64, %union.anon.46, %union.anon.106, %struct.atomic_t, [8 x i8] }
%union.anon.46 = type { %struct.anon.47 }
%struct.anon.47 = type { %struct.list_head, %struct.address_space*, i64, i64 }
%union.anon.106 = type { %struct.atomic_t }
%struct.shrink_control = type { i32, i32, i64, i64, %struct.mem_cgroup* }
%struct.mem_cgroup = type opaque
%struct.dquot_operations = type { i32 (%struct.dquot*)*, %struct.dquot* (%struct.super_block*, i32)*, void (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, i32)*, i64* (%struct.inode*)*, i32 (%struct.inode*, %struct.kprojid_t*)*, i32 (%struct.inode*, i64*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.dquot = type { %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.mutex, %struct.spinlock, %struct.atomic_t, %struct.super_block*, %struct.kqid, i64, i64, %struct.mem_dqblk }
%struct.kqid = type { %union.anon.107, i32 }
%union.anon.107 = type { %struct.kuid_t }
%struct.mem_dqblk = type { i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.kprojid_t = type { i32 }
%struct.quotactl_ops = type { i32 (%struct.super_block*, i32, i32, %struct.path*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32, %struct.qc_info*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.kqid*, %struct.qc_dqblk*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.qc_state*)*, i32 (%struct.super_block*, i32)* }
%struct.qc_info = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.qc_dqblk = type { i32, i64, i64, i64, i64, i64, i64, i64, i64, i32, i32, i64, i64, i64, i64, i32 }
%struct.qc_state = type { i32, [3 x %struct.qc_type_state] }
%struct.qc_type_state = type { i32, i32, i32, i32, i32, i32, i32, i64, i64, i64 }
%struct.export_operations = type opaque
%struct.rw_semaphore = type { %struct.atomic64_t, %struct.atomic64_t, %struct.raw_spinlock, %struct.list_head }
%struct.raw_spinlock = type { %struct.arch_spinlock_t }
%struct.arch_spinlock_t = type {}
%struct.xattr_handler = type opaque
%struct.hlist_bl_head = type { %struct.hlist_bl_node* }
%struct.block_device = type opaque
%struct.backing_dev_info = type opaque
%struct.mtd_info = type opaque
%struct.quota_info = type { i32, %struct.rw_semaphore, [3 x %struct.inode*], [3 x %struct.mem_dqinfo], [3 x %struct.quota_format_ops*] }
%struct.mem_dqinfo = type { %struct.quota_format_type*, i32, %struct.list_head, i64, i32, i32, i64, i64, i8* }
%struct.quota_format_type = type { i32, %struct.quota_format_ops*, %struct.module*, %struct.quota_format_type* }
%struct.quota_format_ops = type { i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.sb_writers = type { i32, %struct.wait_queue_head, [3 x %struct.percpu_rw_semaphore] }
%struct.wait_queue_head = type { %struct.spinlock, %struct.list_head }
%struct.percpu_rw_semaphore = type { %struct.rcu_sync, i32*, %struct.rcuwait, %struct.wait_queue_head, %struct.atomic_t }
%struct.rcu_sync = type { i32, i32, %struct.wait_queue_head, %struct.callback_head }
%struct.rcuwait = type { %struct.task_struct* }
%struct.task_struct = type { %struct.thread_info, i64, i8*, %struct.refcount_struct, i32, i32, i32, i32, i32, i32, i32, %struct.sched_class*, %struct.sched_entity, %struct.sched_rt_entity, %struct.sched_dl_entity, i32, i32, %struct.cpumask*, %struct.cpumask, %struct.sched_info, %struct.list_head, %struct.mm_struct*, %struct.mm_struct*, %struct.vmacache, i32, i32, i32, i32, i64, i32, i8, [3 x i8], i8, i64, %struct.restart_block, i32, i32, i64, %struct.task_struct*, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.pid*, [4 x %struct.hlist_node], %struct.list_head, %struct.list_head, %struct.completion*, i32*, i32*, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, %struct.posix_cputimers, %struct.posix_cputimers_work, %struct.cred*, %struct.cred*, %struct.cred*, %struct.key*, [16 x i8], %struct.nameidata*, %struct.fs_struct*, %struct.files_struct*, %struct.io_uring_task*, %struct.nsproxy*, %struct.signal_struct*, %struct.sighand_struct*, %struct.sigset_t, %struct.sigset_t, %struct.sigset_t, %struct.sigpending, i64, i64, i32, %struct.callback_head*, %struct.seccomp, i64, i64, %struct.spinlock, %struct.raw_spinlock, %struct.wake_q_node, %struct.rb_root_cached, %struct.task_struct*, %struct.rt_mutex_waiter*, i8*, %struct.bio_list*, %struct.blk_plug*, %struct.reclaim_state*, %struct.backing_dev_info*, %struct.io_context*, %struct.capture_control*, i64, %struct.kernel_siginfo*, %struct.task_io_accounting, %struct.robust_list_head*, %struct.list_head, %struct.futex_pi_state*, %struct.mutex, i32, [2 x %struct.perf_event_context*], %struct.mutex, %struct.list_head, %struct.rseq*, i32, i64, %struct.tlbflush_unmap_batch, %union.anon.99, %struct.pipe_inode_info*, %struct.page_frag, i32, i32, i64, i64, i64, i32, %struct.task_struct*, %struct.vm_struct*, %struct.refcount_struct, i8*, i64, i64, i64, %struct.callback_head, [24 x i8], %struct.thread_struct }
%struct.thread_info = type { i64, i32 }
%struct.sched_class = type opaque
%struct.sched_entity = type { %struct.load_weight, %struct.rb_node, %struct.list_head, i32, i64, i64, i64, i64, i64, %struct.sched_statistics }
%struct.load_weight = type { i64, i32 }
%struct.sched_statistics = type {}
%struct.sched_rt_entity = type { %struct.list_head, i64, i64, i32, i16, i16, %struct.sched_rt_entity* }
%struct.sched_dl_entity = type { %struct.rb_node, i64, i64, i64, i64, i64, i64, i64, i32, i8, %struct.hrtimer, %struct.hrtimer, %struct.sched_dl_entity* }
%struct.hrtimer = type { %struct.timerqueue_node, i64, i32 (%struct.hrtimer*)*, %struct.hrtimer_clock_base*, i8, i8, i8, i8 }
%struct.timerqueue_node = type { %struct.rb_node, i64 }
%struct.hrtimer_clock_base = type { %struct.hrtimer_cpu_base*, i32, i32, %struct.seqcount_raw_spinlock, %struct.hrtimer*, %struct.timerqueue_head, i64 ()*, i64 }
%struct.hrtimer_cpu_base = type { %struct.raw_spinlock, i32, i32, i32, i8, i64, %struct.hrtimer*, i64, %struct.hrtimer*, [16 x i8], [8 x %struct.hrtimer_clock_base] }
%struct.seqcount_raw_spinlock = type { %struct.seqcount }
%struct.timerqueue_head = type { %struct.rb_root_cached }
%struct.cpumask = type { [1 x i64] }
%struct.sched_info = type {}
%struct.mm_struct = type { %struct.anon.62, [0 x i64] }
%struct.anon.62 = type { %struct.vm_area_struct*, %struct.rb_root, i64, i64 (%struct.file*, i64, i64, i64, i64)*, i64, i64, i64, i64, %struct.pgd_t*, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i32, %struct.spinlock, %struct.rw_semaphore, %struct.list_head, i64, i64, i64, i64, %struct.atomic64_t, i64, i64, i64, i64, %struct.spinlock, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, [44 x i64], %struct.mm_rss_stat, %struct.linux_binfmt*, %struct.mm_context_t, i64, %struct.core_state*, %struct.spinlock, %struct.kioctx_table*, %struct.user_namespace*, %struct.file*, %struct.mmu_notifier_subscriptions*, %struct.atomic_t, i8, %struct.uprobes_state, %struct.work_struct, i32 }
%struct.vm_area_struct = type { i64, i64, %struct.vm_area_struct*, %struct.vm_area_struct*, %struct.rb_node, i64, %struct.mm_struct*, %struct.pgprot, i64, %struct.anon.63, %struct.list_head, %struct.anon_vma*, %struct.vm_operations_struct*, i64, %struct.file*, i8*, %struct.atomic64_t, %struct.vm_userfaultfd_ctx }
%struct.pgprot = type { i64 }
%struct.anon.63 = type { %struct.rb_node, i64 }
%struct.anon_vma = type opaque
%struct.vm_userfaultfd_ctx = type {}
%struct.rb_root = type { %struct.rb_node* }
%struct.pgd_t = type { i64 }
%struct.mm_rss_stat = type { [4 x %struct.atomic64_t] }
%struct.linux_binfmt = type opaque
%struct.mm_context_t = type { i64, %struct.atomic64_t, %struct.rw_semaphore, %struct.ldt_struct*, i16, %struct.mutex, i8*, %struct.vdso_image*, %struct.atomic_t, i16, i16 }
%struct.ldt_struct = type opaque
%struct.vdso_image = type { i8*, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.core_state = type { %struct.atomic_t, %struct.core_thread, %struct.completion }
%struct.core_thread = type { %struct.task_struct*, %struct.core_thread* }
%struct.completion = type { i32, %struct.swait_queue_head }
%struct.swait_queue_head = type { %struct.raw_spinlock, %struct.list_head }
%struct.kioctx_table = type opaque
%struct.mmu_notifier_subscriptions = type opaque
%struct.uprobes_state = type {}
%struct.vmacache = type { i64, [4 x %struct.vm_area_struct*] }
%struct.restart_block = type { i64 (%struct.restart_block*)*, %union.anon.64 }
%union.anon.64 = type { %struct.anon.65 }
%struct.anon.65 = type { i32*, i32, i32, i32, i64, i32* }
%struct.pid = type { %struct.refcount_struct, i32, %struct.spinlock, [4 x %struct.hlist_head], %struct.hlist_head, %struct.wait_queue_head, %struct.callback_head, [1 x %struct.upid] }
%struct.upid = type { i32, %struct.pid_namespace* }
%struct.pid_namespace = type opaque
%struct.prev_cputime = type { i64, i64, %struct.raw_spinlock }
%struct.posix_cputimers = type { [3 x %struct.posix_cputimer_base], i32, i32 }
%struct.posix_cputimer_base = type { i64, %struct.timerqueue_head }
%struct.posix_cputimers_work = type { %struct.callback_head, i32 }
%struct.key = type { %struct.refcount_struct, i32, %union.anon.69, %struct.rw_semaphore, %struct.key_user*, i8*, %union.anon.70, i64, %struct.kuid_t, %struct.kgid_t, i32, i16, i16, i16, i64, %union.anon.71, %union.anon.75, %struct.key_restriction* }
%union.anon.69 = type { %struct.rb_node }
%struct.key_user = type opaque
%union.anon.70 = type { i64 }
%union.anon.71 = type { %struct.keyring_index_key }
%struct.keyring_index_key = type { i64, %union.anon.72, %struct.key_type*, %struct.key_tag*, i8* }
%union.anon.72 = type { i64 }
%struct.key_type = type opaque
%struct.key_tag = type { %struct.callback_head, %struct.refcount_struct, i8 }
%union.anon.75 = type { %union.key_payload }
%union.key_payload = type { [4 x i8*] }
%struct.key_restriction = type { i32 (%struct.key*, %struct.key_type*, %union.key_payload*, %struct.key*)*, %struct.key*, %struct.key_type* }
%struct.nameidata = type opaque
%struct.fs_struct = type opaque
%struct.files_struct = type opaque
%struct.io_uring_task = type opaque
%struct.nsproxy = type { %struct.atomic_t, %struct.uts_namespace*, %struct.ipc_namespace*, %struct.mnt_namespace*, %struct.pid_namespace*, %struct.net*, %struct.time_namespace*, %struct.time_namespace*, %struct.cgroup_namespace* }
%struct.uts_namespace = type opaque
%struct.ipc_namespace = type opaque
%struct.mnt_namespace = type opaque
%struct.net = type { %struct.refcount_struct, %struct.refcount_struct, %struct.spinlock, i32, i32, i32, %struct.spinlock, %struct.atomic_t, %struct.list_head, %struct.list_head, %struct.llist_node, %struct.key_tag*, %struct.user_namespace*, %struct.ucounts*, %struct.idr, %struct.ns_common, %struct.list_head, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.ctl_table_set, %struct.sock*, %struct.sock*, %struct.uevent_sock*, %struct.hlist_head*, %struct.hlist_head*, %struct.raw_notifier_head, i32, %struct.net_device*, %struct.list_head, %struct.netns_core, %struct.netns_mib, %struct.netns_packet, %struct.netns_unix, %struct.netns_nexthop, %struct.netns_ipv4, %struct.netns_ipv6, %struct.sk_buff_head, %struct.net_generic*, %struct.netns_bpf, %struct.atomic64_t, %struct.netns_can, %struct.sock* }
%struct.llist_node = type { %struct.llist_node* }
%struct.ucounts = type { %struct.hlist_node, %struct.user_namespace*, %struct.kuid_t, i32, [10 x %struct.atomic_t] }
%struct.idr = type { %struct.xarray, i32, i32 }
%struct.xarray = type { %struct.spinlock, i32, i8* }
%struct.ns_common = type { %struct.atomic64_t, %struct.proc_ns_operations*, i32 }
%struct.proc_ns_operations = type opaque
%struct.proc_dir_entry = type opaque
%struct.ctl_table_set = type { i32 (%struct.ctl_table_set*)*, %struct.ctl_dir }
%struct.ctl_dir = type { %struct.ctl_table_header, %struct.rb_root }
%struct.ctl_table_header = type { %union.anon.79, %struct.completion*, %struct.ctl_table*, %struct.ctl_table_root*, %struct.ctl_table_set*, %struct.ctl_dir*, %struct.ctl_node*, %struct.hlist_head }
%union.anon.79 = type { %struct.anon.80 }
%struct.anon.80 = type { %struct.ctl_table*, i32, i32, i32 }
%struct.ctl_table = type { i8*, i8*, i32, i16, %struct.ctl_table*, i32 (%struct.ctl_table*, i32, i8*, i64*, i64*)*, %struct.ctl_table_poll*, i8*, i8* }
%struct.ctl_table_poll = type { %struct.atomic_t, %struct.wait_queue_head }
%struct.ctl_table_root = type { %struct.ctl_table_set, %struct.ctl_table_set* (%struct.ctl_table_root*)*, void (%struct.ctl_table_header*, %struct.ctl_table*, %struct.kuid_t*, %struct.kgid_t*)*, i32 (%struct.ctl_table_header*, %struct.ctl_table*)* }
%struct.ctl_node = type { %struct.rb_node, %struct.ctl_table_header* }
%struct.uevent_sock = type opaque
%struct.raw_notifier_head = type { %struct.notifier_block* }
%struct.notifier_block = type { i32 (%struct.notifier_block*, i64, i8*)*, %struct.notifier_block*, i32 }
%struct.netns_core = type { %struct.ctl_table_header*, i32, i32*, %struct.prot_inuse* }
%struct.prot_inuse = type opaque
%struct.netns_mib = type { %struct.tcp_mib*, %struct.ipstats_mib*, %struct.linux_mib*, %struct.udp_mib*, %struct.udp_mib*, %struct.icmp_mib*, %struct.icmpmsg_mib*, %struct.proc_dir_entry*, %struct.udp_mib*, %struct.udp_mib*, %struct.ipstats_mib*, %struct.icmpv6_mib*, %struct.icmpv6msg_mib* }
%struct.tcp_mib = type { [16 x i64] }
%struct.linux_mib = type { [124 x i64] }
%struct.icmp_mib = type { [28 x i64] }
%struct.icmpmsg_mib = type { [512 x %struct.atomic64_t] }
%struct.udp_mib = type { [9 x i64] }
%struct.ipstats_mib = type { [37 x i64], %struct.u64_stats_sync }
%struct.u64_stats_sync = type {}
%struct.icmpv6_mib = type { [6 x i64] }
%struct.icmpv6msg_mib = type { [512 x %struct.atomic64_t] }
%struct.netns_packet = type { %struct.mutex, %struct.hlist_head }
%struct.netns_unix = type { i32, %struct.ctl_table_header* }
%struct.netns_nexthop = type { %struct.rb_root, %struct.hlist_head*, i32, i32, %struct.blocking_notifier_head }
%struct.blocking_notifier_head = type { %struct.rw_semaphore, %struct.notifier_block* }
%struct.netns_ipv4 = type { %struct.ctl_table_header*, %struct.ctl_table_header*, %struct.ctl_table_header*, %struct.ctl_table_header*, %struct.ctl_table_header*, %struct.ipv4_devconf*, %struct.ipv4_devconf*, %struct.ip_ra_chain*, %struct.mutex, i8, %struct.hlist_head*, i8, %struct.sock*, %struct.sock**, %struct.sock*, %struct.inet_peer_base*, %struct.sock**, %struct.fqdir*, i32, i32, i32, i32, i32, i32, %struct.local_ports, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [3 x i32], [3 x i32], i32, i64, i64, %struct.inet_timewait_death_row, i32, i32, %struct.tcp_congestion_ops*, %struct.tcp_fastopen_context*, %struct.spinlock, i32, %struct.atomic_t, i64, i32, i32, i32, i32, i32, i32, i32, %struct.ping_group_range, %struct.atomic_t, i64*, i32, %struct.fib_notifier_ops*, i32, %struct.fib_notifier_ops*, i32, %struct.atomic_t, %struct.siphash_key_t }
%struct.ipv4_devconf = type opaque
%struct.ip_ra_chain = type opaque
%struct.inet_peer_base = type opaque
%struct.fqdir = type { i64, i64, i32, i32, %struct.inet_frags*, %struct.net*, i8, %struct.rhashtable, %struct.atomic64_t, %struct.work_struct }
%struct.inet_frags = type { i32, void (%struct.inet_frag_queue*, i8*)*, void (%struct.inet_frag_queue*)*, void (%struct.timer_list*)*, %struct.kmem_cache*, i8*, %struct.rhashtable_params, %struct.refcount_struct, %struct.completion }
%struct.inet_frag_queue = type { %struct.rhash_head, %union.anon.82, %struct.timer_list, %struct.spinlock, %struct.refcount_struct, %struct.rb_root, %struct.sk_buff*, %struct.sk_buff*, i64, i32, i32, i8, i16, %struct.fqdir*, %struct.callback_head }
%struct.rhash_head = type { %struct.rhash_head* }
%union.anon.82 = type { %struct.frag_v6_compare_key }
%struct.frag_v6_compare_key = type { %struct.in6_addr, %struct.in6_addr, i32, i32, i32 }
%struct.in6_addr = type { %union.anon.83 }
%union.anon.83 = type { [4 x i32] }
%struct.kmem_cache = type opaque
%struct.rhashtable_params = type { i16, i16, i16, i16, i32, i16, i8, i32 (i8*, i32, i32)*, i32 (i8*, i32, i32)*, i32 (%struct.rhashtable_compare_arg*, i8*)* }
%struct.rhashtable_compare_arg = type { %struct.rhashtable*, i8* }
%struct.rhashtable = type { %struct.bucket_table*, i32, i32, %struct.rhashtable_params, i8, %struct.work_struct, %struct.mutex, %struct.spinlock, %struct.atomic_t }
%struct.bucket_table = type opaque
%struct.local_ports = type { %struct.seqlock_t, [2 x i32], i8 }
%struct.inet_timewait_death_row = type { %struct.atomic_t, %struct.inet_hashinfo*, i32 }
%struct.inet_hashinfo = type opaque
%struct.tcp_congestion_ops = type opaque
%struct.tcp_fastopen_context = type opaque
%struct.ping_group_range = type { %struct.seqlock_t, [2 x %struct.kgid_t] }
%struct.fib_notifier_ops = type opaque
%struct.siphash_key_t = type { [2 x i64] }
%struct.netns_ipv6 = type { %struct.netns_sysctl_ipv6, %struct.ipv6_devconf*, %struct.ipv6_devconf*, %struct.inet_peer_base*, %struct.fqdir*, %struct.fib6_info*, %struct.rt6_info*, %struct.rt6_statistics*, %struct.timer_list, %struct.hlist_head*, %struct.fib6_table*, %struct.list_head, %struct.dst_ops, %struct.rwlock_t, %struct.spinlock, i32, i64, %struct.sock**, %struct.sock*, %struct.sock*, %struct.sock*, %struct.sock*, %struct.atomic_t, %struct.atomic_t, %struct.seg6_pernet_data*, %struct.fib_notifier_ops*, %struct.fib_notifier_ops*, i32, %struct.anon.84 }
%struct.netns_sysctl_ipv6 = type { %struct.ctl_table_header*, %struct.ctl_table_header*, %struct.ctl_table_header*, %struct.ctl_table_header*, %struct.ctl_table_header*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i64], i64*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8 }
%struct.ipv6_devconf = type opaque
%struct.fib6_info = type opaque
%struct.rt6_info = type opaque
%struct.rt6_statistics = type opaque
%struct.fib6_table = type opaque
%struct.dst_ops = type { i16, i32, i32 (%struct.dst_ops*)*, %struct.dst_entry* (%struct.dst_entry*, i32)*, i32 (%struct.dst_entry*)*, i32 (%struct.dst_entry*)*, i32* (%struct.dst_entry*, i64)*, void (%struct.dst_entry*)*, void (%struct.dst_entry*, %struct.net_device*, i32)*, %struct.dst_entry* (%struct.dst_entry*)*, void (%struct.sk_buff*)*, void (%struct.dst_entry*, %struct.sock*, %struct.sk_buff*, i32, i1)*, void (%struct.dst_entry*, %struct.sock*, %struct.sk_buff*)*, i32 (%struct.net*, %struct.sock*, %struct.sk_buff*)*, %struct.neighbour* (%struct.dst_entry*, %struct.sk_buff*, i8*)*, void (%struct.dst_entry*, i8*)*, %struct.kmem_cache*, %struct.percpu_counter }
%struct.dst_entry = type opaque
%struct.percpu_counter = type { i64 }
%struct.rwlock_t = type { %struct.arch_rwlock_t }
%struct.arch_rwlock_t = type {}
%struct.seg6_pernet_data = type opaque
%struct.anon.84 = type { %struct.hlist_head, %struct.spinlock, i32 }
%struct.net_generic = type opaque
%struct.netns_bpf = type { [2 x %struct.bpf_prog_array*], [2 x %struct.bpf_prog*], [2 x %struct.list_head] }
%struct.bpf_prog_array = type { %struct.callback_head, [0 x %struct.bpf_prog_array_item] }
%struct.bpf_prog_array_item = type { %struct.bpf_prog*, [2 x %struct.bpf_cgroup_storage*] }
%struct.bpf_cgroup_storage = type opaque
%struct.netns_can = type { %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.can_dev_rcv_lists*, %struct.spinlock, %struct.timer_list, %struct.can_pkg_stats*, %struct.can_rcv_lists_stats*, %struct.hlist_head }
%struct.can_dev_rcv_lists = type opaque
%struct.can_pkg_stats = type opaque
%struct.can_rcv_lists_stats = type opaque
%struct.time_namespace = type opaque
%struct.cgroup_namespace = type { %struct.refcount_struct, %struct.ns_common, %struct.user_namespace*, %struct.ucounts*, %struct.css_set* }
%struct.css_set = type opaque
%struct.signal_struct = type { %struct.refcount_struct, %struct.atomic_t, i32, %struct.list_head, %struct.wait_queue_head, %struct.task_struct*, %struct.sigpending, %struct.hlist_head, i32, i32, %struct.task_struct*, i32, i32, i8, i32, %struct.list_head, %struct.hrtimer, i64, [2 x %struct.cpu_itimer], %struct.thread_group_cputimer, %struct.posix_cputimers, [4 x %struct.pid*], %struct.pid*, i32, %struct.tty_struct*, %struct.seqlock_t, i64, i64, i64, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.task_io_accounting, i64, [16 x %struct.rlimit], i8, i16, i16, %struct.mm_struct*, %struct.mutex, %struct.mutex }
%struct.cpu_itimer = type { i64, i64 }
%struct.thread_group_cputimer = type { %struct.task_cputime_atomic }
%struct.task_cputime_atomic = type { %struct.atomic64_t, %struct.atomic64_t, %struct.atomic64_t }
%struct.tty_struct = type opaque
%struct.rlimit = type { i64, i64 }
%struct.sighand_struct = type { %struct.spinlock, %struct.refcount_struct, %struct.wait_queue_head, [64 x %struct.k_sigaction] }
%struct.k_sigaction = type { %struct.sigaction }
%struct.sigaction = type { void (i32)*, i64, void ()*, %struct.sigset_t }
%struct.sigset_t = type { [1 x i64] }
%struct.sigpending = type { %struct.list_head, %struct.sigset_t }
%struct.seccomp = type { i32, %struct.atomic_t, %struct.seccomp_filter* }
%struct.seccomp_filter = type opaque
%struct.wake_q_node = type { %struct.wake_q_node* }
%struct.rb_root_cached = type { %struct.rb_root, %struct.rb_node* }
%struct.rt_mutex_waiter = type opaque
%struct.bio_list = type opaque
%struct.blk_plug = type opaque
%struct.reclaim_state = type opaque
%struct.io_context = type { %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.spinlock, i16, %struct.xarray, %struct.io_cq*, %struct.hlist_head, %struct.work_struct }
%struct.io_cq = type { %struct.request_queue*, %struct.io_context*, %union.anon.85, %union.anon.86, i32 }
%struct.request_queue = type opaque
%union.anon.85 = type { %struct.list_head }
%union.anon.86 = type { %struct.hlist_node }
%struct.capture_control = type opaque
%struct.kernel_siginfo = type { %struct.anon.87 }
%struct.anon.87 = type { i32, i32, i32, %union.__sifields }
%union.__sifields = type { %struct.anon.91 }
%struct.anon.91 = type { i32, i32, i32, i64, i64 }
%struct.task_io_accounting = type {}
%struct.robust_list_head = type opaque
%struct.futex_pi_state = type opaque
%struct.perf_event_context = type opaque
%struct.rseq = type { i32, i32, %union.anon.98, i32, [12 x i8] }
%union.anon.98 = type { i64 }
%struct.tlbflush_unmap_batch = type { %struct.arch_tlbflush_unmap_batch, i8, i8 }
%struct.arch_tlbflush_unmap_batch = type { %struct.cpumask }
%union.anon.99 = type { %struct.callback_head }
%struct.pipe_inode_info = type { %struct.mutex, %struct.wait_queue_head, %struct.wait_queue_head, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.page*, %struct.fasync_struct*, %struct.fasync_struct*, %struct.pipe_buffer*, %struct.user_struct* }
%struct.fasync_struct = type { %struct.rwlock_t, i32, i32, %struct.fasync_struct*, %struct.file*, %struct.callback_head }
%struct.pipe_buffer = type { %struct.page*, i32, i32, %struct.pipe_buf_operations*, i32, i64 }
%struct.pipe_buf_operations = type { i32 (%struct.pipe_inode_info*, %struct.pipe_buffer*)*, void (%struct.pipe_inode_info*, %struct.pipe_buffer*)*, i1 (%struct.pipe_inode_info*, %struct.pipe_buffer*)*, i1 (%struct.pipe_inode_info*, %struct.pipe_buffer*)* }
%struct.user_struct = type { %struct.refcount_struct, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i64, i64, %struct.atomic64_t, %struct.hlist_node, %struct.kuid_t, %struct.atomic64_t, %struct.ratelimit_state }
%struct.ratelimit_state = type { %struct.raw_spinlock, i32, i32, i32, i32, i64, i64 }
%struct.page_frag = type { %struct.page*, i32, i32 }
%struct.vm_struct = type { %struct.vm_struct*, i8*, i64, i64, %struct.page**, i32, i64, i8* }
%struct.thread_struct = type { [3 x %struct.desc_struct], i64, i16, i16, i16, i16, i64, i64, [4 x %struct.perf_event*], i64, i64, i64, i64, i64, %struct.io_bitmap*, i64, i8, [47 x i8], %struct.fpu }
%struct.desc_struct = type { i16, i16, i32 }
%struct.perf_event = type opaque
%struct.io_bitmap = type opaque
%struct.fpu = type { i32, i64, [48 x i8], %union.fpregs_state }
%union.fpregs_state = type { %struct.xregs_state, [3520 x i8] }
%struct.xregs_state = type { %struct.fxregs_state, %struct.xstate_header, [0 x i8] }
%struct.fxregs_state = type { i16, i16, i16, i16, %union.anon.100, i32, i32, [32 x i32], [64 x i32], [12 x i32], %union.anon.103 }
%union.anon.100 = type { %struct.anon.101 }
%struct.anon.101 = type { i64, i64 }
%union.anon.103 = type { [12 x i32] }
%struct.xstate_header = type { i64, i64, [6 x i64] }
%struct.fsnotify_mark_connector = type opaque
%struct.uuid_t = type { [16 x i8] }
%struct.shrinker = type { i64 (%struct.shrinker*, %struct.shrink_control*)*, i64 (%struct.shrinker*, %struct.shrink_control*)*, i64, i32, i32, %struct.list_head, %struct.atomic64_t* }
%struct.workqueue_struct = type opaque
%struct.hlist_head = type { %struct.hlist_node* }
%struct.user_namespace = type { %struct.uid_gid_map, %struct.uid_gid_map, %struct.uid_gid_map, %struct.atomic_t, %struct.user_namespace*, i32, %struct.kuid_t, %struct.kgid_t, %struct.ns_common, i64, %struct.list_head, %struct.key*, %struct.rw_semaphore, %struct.work_struct, %struct.ctl_table_set, %struct.ctl_table_header*, %struct.ucounts*, [10 x i32] }
%struct.uid_gid_map = type { i32, %union.anon.77 }
%union.anon.77 = type { %struct.anon.78, [48 x i8] }
%struct.anon.78 = type { %struct.uid_gid_extent*, %struct.uid_gid_extent* }
%struct.uid_gid_extent = type { i32, i32, i32 }
%struct.list_lru = type { %struct.list_lru_node* }
%struct.list_lru_node = type { %struct.spinlock, %struct.list_lru_one, i64 }
%struct.list_lru_one = type { %struct.list_head, i64 }
%struct.work_struct = type { %struct.atomic64_t, %struct.list_head, void (%struct.work_struct*)* }
%union.anon.116 = type { %struct.list_head }
%union.anon.117 = type { %struct.hlist_node }
%struct.inode = type { i16, i16, %struct.kuid_t, %struct.kgid_t, i32, %struct.inode_operations*, %struct.super_block*, %struct.address_space*, i64, %union.anon.108, i32, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.spinlock, i16, i8, i8, i64, i64, %struct.rw_semaphore, i64, i64, %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %union.anon.109, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %union.anon.110, %struct.file_lock_context*, %struct.address_space, %struct.list_head, %union.anon.113, i32, i32, %struct.fsnotify_mark_connector*, i8* }
%struct.inode_operations = type { %struct.dentry* (%struct.inode*, %struct.dentry*, i32)*, i8* (%struct.dentry*, %struct.inode*, %struct.delayed_call*)*, i32 (%struct.inode*, i32)*, %struct.posix_acl* (%struct.inode*, i32)*, i32 (%struct.dentry*, i8*, i32)*, i32 (%struct.inode*, %struct.dentry*, i16, i1)*, i32 (%struct.dentry*, %struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i8*)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i16, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.inode*, %struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.iattr*)*, i32 (%struct.path*, %struct.kstat*, i32, i32)*, i64 (%struct.dentry*, i8*, i64)*, i32 (%struct.inode*, %struct.fiemap_extent_info*, i64, i64)*, i32 (%struct.inode*, %struct.timespec64*, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.file*, i32, i16)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.posix_acl*, i32)*, [24 x i8] }
%struct.delayed_call = type { void (i8*)*, i8* }
%struct.posix_acl = type opaque
%struct.iattr = type { i32, i16, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.file* }
%struct.kstat = type { i32, i16, i32, i32, i64, i64, i64, i32, i32, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.timespec64, i64, i64 }
%struct.fiemap_extent_info = type opaque
%union.anon.108 = type { i32 }
%struct.timespec64 = type { i64, i64 }
%union.anon.109 = type { %struct.callback_head }
%union.anon.110 = type { %struct.file_operations* }
%struct.file_lock_context = type { %struct.spinlock, %struct.list_head, %struct.list_head, %struct.list_head }
%struct.address_space = type { %struct.inode*, %struct.xarray, i32, %struct.atomic_t, %struct.rb_root_cached, %struct.rw_semaphore, i64, i64, i64, %struct.address_space_operations*, i64, i32, %struct.spinlock, %struct.list_head, i8* }
%struct.address_space_operations = type { i32 (%struct.page*, %struct.writeback_control*)*, i32 (%struct.file*, %struct.page*)*, i32 (%struct.address_space*, %struct.writeback_control*)*, i32 (%struct.page*)*, i32 (%struct.file*, %struct.address_space*, %struct.list_head*, i32)*, void (%struct.readahead_control*)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page**, i8**)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page*, i8*)*, i64 (%struct.address_space*, i64)*, void (%struct.page*, i32, i32)*, i32 (%struct.page*, i32)*, void (%struct.page*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.address_space*, %struct.page*, %struct.page*, i32)*, i1 (%struct.page*, i32)*, void (%struct.page*)*, i32 (%struct.page*)*, i32 (%struct.page*, i64, i64)*, void (%struct.page*, i8*, i8*)*, i32 (%struct.address_space*, %struct.page*)*, i32 (%struct.swap_info_struct*, %struct.file*, i64*)*, void (%struct.file*)* }
%struct.readahead_control = type opaque
%struct.kiocb = type { %struct.file*, i64, void (%struct.kiocb*, i64, i64)*, i8*, i32, i16, i16, %union.anon.48 }
%union.anon.48 = type { %struct.wait_page_queue* }
%struct.wait_page_queue = type opaque
%struct.iov_iter = type { i32, i64, i64, %union.anon.49, %union.anon.50 }
%union.anon.49 = type { %struct.iovec* }
%struct.iovec = type { i8*, i64 }
%union.anon.50 = type { i64 }
%struct.swap_info_struct = type opaque
%union.anon.113 = type { %struct.pipe_inode_info* }
%struct.file_operations = type { %struct.module*, i64 (%struct.file*, i64, i32)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.kiocb*, i1)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.poll_table_struct*)*, i64 (%struct.file*, i32, i64)*, i64 (%struct.file*, i32, i64)*, i32 (%struct.file*, %struct.vm_area_struct*)*, i64, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i8*)*, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i64, i64, i32)*, i32 (i32, %struct.file*, i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.file*, %struct.page*, i32, i64, i64*, i32)*, i64 (%struct.file*, i64, i64, i64, i64)*, i32 (i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.pipe_inode_info*, %struct.file*, i64*, i64, i32)*, i64 (%struct.file*, i64*, %struct.pipe_inode_info*, i64, i32)*, i32 (%struct.file*, i64, %struct.file_lock**, i8**)*, i64 (%struct.file*, i32, i64, i64)*, void (%struct.seq_file*, %struct.file*)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i32 (%struct.file*, i64, i64, i32)* }
%struct.dir_context = type { i32 (%struct.dir_context*, i8*, i32, i64, i64, i32)*, i64 }
%struct.poll_table_struct = type opaque
%struct.file_lock = type { %struct.file_lock*, %struct.list_head, %struct.hlist_node, %struct.list_head, %struct.list_head, i8*, i32, i8, i32, i32, %struct.wait_queue_head, %struct.file*, i64, i64, %struct.fasync_struct*, i64, i64, %struct.file_lock_operations*, %struct.lock_manager_operations*, %union.anon.111 }
%struct.file_lock_operations = type { void (%struct.file_lock*, %struct.file_lock*)*, void (%struct.file_lock*)* }
%struct.lock_manager_operations = type { i8* (i8*)*, void (i8*)*, void (%struct.file_lock*)*, i32 (%struct.file_lock*, i32)*, i1 (%struct.file_lock*)*, i32 (%struct.file_lock*, i32, %struct.list_head*)*, void (%struct.file_lock*, i8**)*, i1 (%struct.file_lock*)* }
%union.anon.111 = type { %struct.nfs_lock_info }
%struct.nfs_lock_info = type { i32, %struct.nlm_lockowner*, %struct.list_head }
%struct.nlm_lockowner = type opaque
%struct.fown_struct = type { %struct.rwlock_t, %struct.pid*, i32, %struct.kuid_t, %struct.kuid_t, i32 }
%struct.cred = type { %struct.atomic_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, i32, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, i8, %struct.key*, %struct.key*, %struct.key*, %struct.key*, %struct.user_struct*, %struct.user_namespace*, %struct.group_info*, %union.anon.81 }
%struct.kernel_cap_struct = type { [2 x i32] }
%struct.group_info = type { %struct.atomic_t, i32, [0 x %struct.kgid_t] }
%union.anon.81 = type { %struct.callback_head }
%struct.file_ra_state = type { i64, i32, i32, i32, i32, i64 }
%struct.seq_file = type { i8*, i64, i64, i64, i64, i64, i64, %struct.mutex, %struct.seq_operations*, i32, %struct.file*, i8* }
%struct.seq_operations = type { i8* (%struct.seq_file*, i64*)*, void (%struct.seq_file*, i8*)*, i8* (%struct.seq_file*, i8*, i64*)*, i32 (%struct.seq_file*, i8*)* }
%struct.mutex = type { %struct.atomic64_t, %struct.spinlock, %struct.list_head }
%struct.vm_operations_struct = type { void (%struct.vm_area_struct*)*, void (%struct.vm_area_struct*)*, i32 (%struct.vm_area_struct*, i64)*, i32 (%struct.vm_area_struct*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_fault*, i32)*, void (%struct.vm_fault*, i64, i64)*, i64 (%struct.vm_area_struct*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_area_struct*, i64, i8*, i32, i32)*, i8* (%struct.vm_area_struct*)*, %struct.page* (%struct.vm_area_struct*, i64)* }
%struct.vm_fault = type { %struct.vm_area_struct*, i32, i32, i64, i64, %struct.pmd_t*, %struct.pud_t*, %struct.pte_t, %struct.page*, %struct.page*, %struct.pte_t*, %struct.spinlock*, %struct.page* }
%struct.pmd_t = type { i64 }
%struct.pud_t = type { i64 }
%struct.pte_t = type { i64 }
%struct.kernfs_open_node = type opaque
%struct.kernfs_iattrs = type opaque
%struct.kref = type { %struct.refcount_struct }
%struct.kset_uevent_ops = type { i32 (%struct.kset*, %struct.kobject*)*, i8* (%struct.kset*, %struct.kobject*)*, i32 (%struct.kset*, %struct.kobject*, %struct.kobj_uevent_env*)* }
%struct.kobj_uevent_env = type { [3 x i8*], [64 x i8*], i32, [2048 x i8], i32 }
%struct.vlan_info = type opaque
%struct.in_device = type opaque
%struct.inet6_dev = type opaque
%struct.wireless_dev = type opaque
%struct.wpan_dev = type opaque
%struct.netdev_rx_queue = type { %struct.kobject, %struct.net_device*, [56 x i8], %struct.xdp_rxq_info }
%struct.xdp_rxq_info = type { %struct.net_device*, i32, i32, %struct.xdp_mem_info, [40 x i8] }
%struct.bpf_prog = type opaque
%struct.hlist_node = type { %struct.hlist_node*, %struct.hlist_node** }
%struct.netdev_queue = type { %struct.net_device*, %struct.Qdisc*, %struct.Qdisc*, %struct.kobject, i64, i64, %struct.net_device*, %struct.spinlock, i32, i64, i64, %struct.dql }
%struct.dql = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32 }
%struct.spinlock = type { %union.anon.45 }
%union.anon.45 = type { %struct.raw_spinlock }
%struct.xdp_dev_bulk_queue = type opaque
%struct.timer_list = type { %struct.hlist_node, i64, void (%struct.timer_list*)*, i32 }
%struct.possible_net_t = type { %struct.net* }
%union.anon.127 = type { i8* }
%struct.device = type { %struct.kobject, %struct.device*, %struct.device_private*, i8*, %struct.device_type*, %struct.bus_type*, %struct.device_driver*, i8*, i8*, %struct.mutex, %struct.dev_links_info, %struct.dev_pm_info, %struct.dev_pm_domain*, %struct.irq_domain*, %struct.list_head, %struct.dma_map_ops*, i64*, i64, i64, %struct.bus_dma_region*, %struct.device_dma_parameters*, %struct.list_head, %struct.dev_archdata, %struct.device_node*, %struct.fwnode_handle*, i32, i32, %struct.spinlock, %struct.list_head, %struct.class*, %struct.attribute_group**, void (%struct.device*)*, %struct.iommu_group*, %struct.dev_iommu*, i8 }
%struct.device_private = type opaque
%struct.device_type = type { i8*, %struct.attribute_group**, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*, %struct.kuid_t*, %struct.kgid_t*)*, void (%struct.device*)*, %struct.dev_pm_ops* }
%struct.dev_pm_ops = type { i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)* }
%struct.bus_type = type { i8*, i8*, %struct.device*, %struct.attribute_group**, %struct.attribute_group**, %struct.attribute_group**, i32 (%struct.device*, %struct.device_driver*)*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, %struct.dev_pm_ops*, %struct.iommu_ops*, %struct.subsys_private*, %struct.lock_class_key, i8 }
%struct.iommu_ops = type opaque
%struct.subsys_private = type opaque
%struct.device_driver = type { i8*, %struct.bus_type*, %struct.module*, i8*, i8, i32, %struct.of_device_id*, %struct.acpi_device_id*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, %struct.attribute_group**, %struct.attribute_group**, %struct.dev_pm_ops*, void (%struct.device*)*, %struct.driver_private* }
%struct.of_device_id = type { [32 x i8], [32 x i8], [128 x i8], i8* }
%struct.acpi_device_id = type { [9 x i8], i64, i32, i32 }
%struct.driver_private = type opaque
%struct.dev_links_info = type { %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, i8, i32 }
%struct.dev_pm_info = type { %struct.pm_message, i16, i32, %struct.spinlock, %struct.list_head, %struct.completion, %struct.wakeup_source*, i8, %struct.hrtimer, i64, %struct.work_struct, %struct.wait_queue_head, %struct.wake_irq*, %struct.atomic_t, %struct.atomic_t, i16, i32, i32, i32, i32, i32, i64, i64, i64, i64, %struct.pm_subsys_data*, void (%struct.device*, i32)*, %struct.dev_pm_qos* }
%struct.pm_message = type { i32 }
%struct.wakeup_source = type { i8*, i32, %struct.list_head, %struct.spinlock, %struct.wake_irq*, %struct.timer_list, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.device*, i8 }
%struct.wake_irq = type opaque
%struct.pm_subsys_data = type { %struct.spinlock, i32, %struct.list_head, %struct.pm_domain_data* }
%struct.pm_domain_data = type opaque
%struct.dev_pm_qos = type opaque
%struct.dev_pm_domain = type { %struct.dev_pm_ops, i32 (%struct.device*)*, void (%struct.device*, i1)*, i32 (%struct.device*)*, void (%struct.device*)*, void (%struct.device*)* }
%struct.irq_domain = type opaque
%struct.dma_map_ops = type opaque
%struct.bus_dma_region = type opaque
%struct.device_dma_parameters = type { i32, i64 }
%struct.dev_archdata = type {}
%struct.device_node = type opaque
%struct.fwnode_handle = type { %struct.fwnode_handle*, %struct.fwnode_operations*, %struct.device* }
%struct.fwnode_operations = type { %struct.fwnode_handle* (%struct.fwnode_handle*)*, void (%struct.fwnode_handle*)*, i1 (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*, %struct.device*)*, i1 (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i32, i8*, i64)*, i32 (%struct.fwnode_handle*, i8*, i8**, i64)*, i8* (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i8*, i32, i32, %struct.fwnode_reference_args*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, i32 (%struct.fwnode_handle*, %struct.fwnode_endpoint*)*, i32 (%struct.fwnode_handle*, %struct.device*)* }
%struct.fwnode_reference_args = type { %struct.fwnode_handle*, i32, [8 x i64] }
%struct.fwnode_endpoint = type { i32, i32, %struct.fwnode_handle* }
%struct.class = type { i8*, %struct.module*, %struct.attribute_group**, %struct.attribute_group**, %struct.kobject*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*)*, void (%struct.class*)*, void (%struct.device*)*, i32 (%struct.device*)*, %struct.kobj_ns_type_operations*, i8* (%struct.device*)*, void (%struct.device*, %struct.kuid_t*, %struct.kgid_t*)*, %struct.dev_pm_ops*, %struct.subsys_private* }
%struct.iommu_group = type opaque
%struct.dev_iommu = type opaque
%struct.attribute_group = type { i8*, i16 (%struct.kobject*, %struct.attribute*, i32)*, i16 (%struct.kobject*, %struct.bin_attribute*, i32)*, %struct.attribute**, %struct.bin_attribute** }
%struct.bin_attribute = type { %struct.attribute, i64, i8*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i32 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, %struct.vm_area_struct*)* }
%struct.rtnl_link_ops = type opaque
%struct.netdev_tc_txq = type { i16, i16 }
%struct.phy_device = type { %struct.mdio_device, %struct.phy_driver*, i32, %struct.phy_c45_device_ids, i16, i32, i32, i32, i32, i32, i32, i32, i8, i8, i8, [2 x i64], [2 x i64], [2 x i64], [2 x i64], i32, i32, i8*, %struct.phy_package_shared*, %struct.sk_buff*, i8*, %struct.nlattr*, %struct.delayed_work, %struct.mutex, i8, %struct.sfp_bus*, %struct.phylink*, %struct.net_device*, %struct.mii_timestamper*, i8, i8, void (%struct.phy_device*, i1)*, void (%struct.net_device*)* }
%struct.mdio_device = type { %struct.device, %struct.mii_bus*, [32 x i8], i32 (%struct.device*, %struct.device_driver*)*, void (%struct.mdio_device*)*, void (%struct.mdio_device*)*, i32, i32, %struct.gpio_desc*, %struct.reset_control*, i32, i32 }
%struct.mii_bus = type { %struct.module*, i8*, [61 x i8], i8*, i32 (%struct.mii_bus*, i32, i32)*, i32 (%struct.mii_bus*, i32, i32, i16)*, i32 (%struct.mii_bus*)*, [32 x %struct.mdio_bus_stats], %struct.mutex, %struct.device*, i32, %struct.device, [32 x %struct.mdio_device*], i32, i32, [32 x i32], i32, i32, %struct.gpio_desc*, i32, %struct.mutex, [32 x %struct.phy_package_shared*] }
%struct.mdio_bus_stats = type { %struct.u64_stats_t, %struct.u64_stats_t, %struct.u64_stats_t, %struct.u64_stats_t, %struct.u64_stats_sync }
%struct.u64_stats_t = type { %struct.local64_t }
%struct.local64_t = type { %struct.local_t }
%struct.local_t = type { %struct.atomic64_t }
%struct.gpio_desc = type opaque
%struct.reset_control = type opaque
%struct.phy_driver = type { %struct.mdio_driver_common, i32, i8*, i32, i64*, i32, i8*, i32 (%struct.phy_device*)*, i32 (%struct.phy_device*)*, i32 (%struct.phy_device*)*, i32 (%struct.phy_device*)*, i32 (%struct.phy_device*)*, i32 (%struct.phy_device*)*, i32 (%struct.phy_device*)*, i32 (%struct.phy_device*)*, i32 (%struct.phy_device*)*, i32 (%struct.phy_device*)*, i32 (%struct.phy_device*)*, i32 (%struct.phy_device*)*, i32 (%struct.phy_device*)*, void (%struct.phy_device*)*, i32 (%struct.phy_device*)*, i32 (%struct.phy_device*, %struct.ethtool_wolinfo*)*, void (%struct.phy_device*, %struct.ethtool_wolinfo*)*, void (%struct.phy_device*)*, i32 (%struct.phy_device*, i32, i16)*, i32 (%struct.phy_device*, i32, i16, i16)*, i32 (%struct.phy_device*)*, i32 (%struct.phy_device*, i32)*, i32 (%struct.phy_device*, %struct.ethtool_modinfo*)*, i32 (%struct.phy_device*, %struct.ethtool_eeprom*, i8*)*, i32 (%struct.phy_device*)*, i32 (%struct.phy_device*, %struct.phy_tdr_config*)*, i32 (%struct.phy_device*, i8*)*, i32 (%struct.phy_device*)*, void (%struct.phy_device*, i8*)*, void (%struct.phy_device*, %struct.ethtool_stats*, i64*)*, i32 (%struct.phy_device*, %struct.ethtool_tunable*, i8*)*, i32 (%struct.phy_device*, %struct.ethtool_tunable*, i8*)*, i32 (%struct.phy_device*, i1)*, i32 (%struct.phy_device*)*, i32 (%struct.phy_device*)* }
%struct.mdio_driver_common = type { %struct.device_driver, i32 }
%struct.phy_tdr_config = type { i32, i32, i32, i8 }
%struct.phy_c45_device_ids = type { i32, i32, [32 x i32] }
%struct.phy_package_shared = type { i32, %struct.refcount_struct, i64, i64, i8* }
%struct.delayed_work = type { %struct.work_struct, %struct.timer_list, %struct.workqueue_struct*, i32 }
%struct.phylink = type opaque
%struct.mii_timestamper = type { i1 (%struct.mii_timestamper*, %struct.sk_buff*, i32)*, void (%struct.mii_timestamper*, %struct.sk_buff*, i32)*, i32 (%struct.mii_timestamper*, %struct.ifreq*)*, void (%struct.mii_timestamper*, %struct.phy_device*)*, i32 (%struct.mii_timestamper*, %struct.ethtool_ts_info*)*, %struct.device* }
%struct.sfp_bus = type opaque
%struct.udp_tunnel_nic_info = type opaque
%struct.udp_tunnel_nic = type opaque
%struct.bpf_xdp_entity = type { %struct.bpf_prog*, %struct.bpf_xdp_link* }
%struct.bpf_xdp_link = type opaque
%union.anon.2 = type { %struct.sock* }
%union.anon.3 = type { i64 }
%union.anon.4 = type { %struct.anon.5 }
%struct.anon.5 = type { i64, void (%struct.sk_buff*)* }
%union.anon.6 = type { i32 }
%union.anon.8 = type { i32 }
%union.anon.9 = type { i32 }
%union.anon.10 = type { i16 }
%struct.refcount_struct = type { %struct.atomic_t }
%struct.anon.131 = type { i16, i8 }
%struct.sk_buff_head = type { %struct.sk_buff*, %struct.sk_buff*, i32, %struct.spinlock }
%struct.napi_struct = type { %struct.list_head, i64, i32, i32, i64, i32 (%struct.napi_struct*, i32)*, %struct.net_device*, [8 x %struct.gro_list], %struct.sk_buff*, %struct.list_head, i32, %struct.hrtimer, %struct.list_head, %struct.hlist_node, i32 }
%struct.gro_list = type { %struct.list_head, i32 }
%struct.xlgmac_hw_ops = type { i32 (%struct.xlgmac_pdata*)*, i32 (%struct.xlgmac_pdata*)*, i32 (%struct.xlgmac_dma_desc*)*, void (%struct.xlgmac_pdata*)*, void (%struct.xlgmac_pdata*)*, void (%struct.xlgmac_pdata*)*, void (%struct.xlgmac_pdata*)*, i32 (%struct.xlgmac_channel*, i32)*, i32 (%struct.xlgmac_channel*, i32)*, void (%struct.xlgmac_channel*)*, i32 (%struct.xlgmac_channel*)*, i32 (%struct.xlgmac_pdata*, i8*)*, i32 (%struct.xlgmac_pdata*)*, i32 (%struct.xlgmac_pdata*)*, i32 (%struct.xlgmac_pdata*)*, i32 (%struct.xlgmac_pdata*)*, i32 (%struct.xlgmac_pdata*)*, i32 (%struct.xlgmac_pdata*)*, i32 (%struct.xlgmac_pdata*)*, void (%struct.xlgmac_channel*)*, void (%struct.xlgmac_channel*)*, void (%struct.xlgmac_desc_data*)*, void (%struct.xlgmac_pdata*, %struct.xlgmac_desc_data*, i32)*, i32 (%struct.xlgmac_dma_desc*)*, i32 (%struct.xlgmac_dma_desc*)*, void (%struct.xlgmac_channel*, %struct.xlgmac_ring*)*, i32 (%struct.xlgmac_pdata*)*, i32 (%struct.xlgmac_pdata*)*, i32 (%struct.xlgmac_pdata*)*, i32 (%struct.xlgmac_pdata*)*, i32 (%struct.xlgmac_pdata*)*, i32 (%struct.xlgmac_pdata*)*, i32 (%struct.xlgmac_pdata*)*, i32 (%struct.xlgmac_pdata*)*, i32 (%struct.xlgmac_pdata*)*, i32 (%struct.xlgmac_pdata*, i32)*, i32 (%struct.xlgmac_pdata*, i32)*, i32 (%struct.xlgmac_pdata*, i32)*, i32 (%struct.xlgmac_pdata*, i32)*, i32 (%struct.xlgmac_pdata*, i32)*, i32 (%struct.xlgmac_pdata*, i32)*, i32 (%struct.xlgmac_pdata*)*, i32 (%struct.xlgmac_pdata*)*, i32 (%struct.xlgmac_pdata*)*, i32 (%struct.xlgmac_pdata*)*, i32 (%struct.xlgmac_pdata*)*, i32 (%struct.xlgmac_pdata*)*, void (%struct.xlgmac_pdata*)*, void (%struct.xlgmac_pdata*)*, void (%struct.xlgmac_pdata*)*, i32 (%struct.xlgmac_pdata*)*, i32 (%struct.xlgmac_pdata*)*, i32 (%struct.xlgmac_pdata*, i8*)*, i32 (%struct.xlgmac_pdata*, i32*)* }
%struct.xlgmac_channel = type { [16 x i8], %struct.xlgmac_pdata*, i32, i8*, i32, [48 x i8], %struct.napi_struct, i32, i32, %struct.timer_list, %struct.xlgmac_ring*, %struct.xlgmac_ring*, [32 x i8] }
%struct.xlgmac_pdata = type { %struct.net_device*, %struct.device*, %struct.xlgmac_hw_ops, %struct.xlgmac_desc_ops, %struct.xlgmac_stats, i32, i8*, %struct.xlgmac_hw_features, %struct.work_struct, %struct.xlgmac_channel*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [16 x i32], [6 x i8], i64, %struct.napi_struct, [64 x i64], i64, %struct.mutex, [40 x i8], [256 x i32], i32, i32, [32 x i8], [32 x i8] }
%struct.xlgmac_desc_ops = type { i32 (%struct.xlgmac_pdata*)*, void (%struct.xlgmac_pdata*)*, i32 (%struct.xlgmac_channel*, %struct.sk_buff*)*, i32 (%struct.xlgmac_pdata*, %struct.xlgmac_ring*, %struct.xlgmac_desc_data*)*, void (%struct.xlgmac_pdata*, %struct.xlgmac_desc_data*)*, void (%struct.xlgmac_pdata*)*, void (%struct.xlgmac_pdata*)* }
%struct.xlgmac_desc_data = type { %struct.xlgmac_dma_desc*, i64, %struct.sk_buff*, i64, i32, %struct.xlgmac_tx_desc_data, %struct.xlgmac_rx_desc_data, i32, i32, %struct.anon.128 }
%struct.xlgmac_dma_desc = type { i32, i32, i32, i32 }
%struct.xlgmac_tx_desc_data = type { i32, i32 }
%struct.xlgmac_rx_desc_data = type { %struct.xlgmac_buffer_data, %struct.xlgmac_buffer_data, i16, i16 }
%struct.xlgmac_buffer_data = type { %struct.xlgmac_page_alloc, %struct.xlgmac_page_alloc, i64, i64, i32 }
%struct.xlgmac_page_alloc = type { %struct.page*, i32, i32, i64 }
%struct.anon.128 = type { %struct.sk_buff*, i32, i32 }
%struct.xlgmac_stats = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.xlgmac_hw_features = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.xlgmac_ring = type { %struct.xlgmac_pkt_info, %struct.xlgmac_dma_desc*, i64, i32, %struct.xlgmac_desc_data*, %struct.xlgmac_page_alloc, %struct.xlgmac_page_alloc, i32, i32, i32, %union.anon.129, [24 x i8] }
%struct.xlgmac_pkt_info = type { %struct.sk_buff*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i64, i32, i32 }
%union.anon.129 = type { %struct.anon.130 }
%struct.anon.130 = type { i32, i32, i16, i16 }
%struct.netdev_hw_addr = type { %struct.list_head, [32 x i8], i8, i8, i32, i32, i32, %struct.callback_head }

@.str = private unnamed_addr constant [37 x i8] c"error configuring RSS, RSS disabled\0A\00", align 1
@.str.1 = private unnamed_addr constant [47 x i8] c"%d Tx hardware queues, %d byte fifo per queue\0A\00", align 1
@.str.2 = private unnamed_addr constant [47 x i8] c"%d Rx hardware queues, %d byte fifo per queue\0A\00", align 1
@jiffies = external dso_local global i64, align 8
@.str.3 = private unnamed_addr constant [49 x i8] c"timed out waiting for Tx DMA channel %u to stop\0A\00", align 1
@.str.4 = private unnamed_addr constant [44 x i8] c"timed out waiting for Rx queue %u to empty\0A\00", align 1
@.str.5 = private unnamed_addr constant [5 x i8] c"read\00", align 1
@softnet_data = external dso_local global %struct.softnet_data, section ".data..shared_aligned", align 64
@byte_rev_table = external dso_local constant [256 x i8], align 16

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @xlgmac_init_hw_ops(%struct.xlgmac_hw_ops* %hw_ops) #0 !dbg !7545 {
entry:
  %hw_ops.addr = alloca %struct.xlgmac_hw_ops*, align 8
  store %struct.xlgmac_hw_ops* %hw_ops, %struct.xlgmac_hw_ops** %hw_ops.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xlgmac_hw_ops** %hw_ops.addr, metadata !7942, metadata !DIExpression()), !dbg !7943
  %0 = load %struct.xlgmac_hw_ops*, %struct.xlgmac_hw_ops** %hw_ops.addr, align 8, !dbg !7944
  %init = getelementptr inbounds %struct.xlgmac_hw_ops, %struct.xlgmac_hw_ops* %0, i32 0, i32 0, !dbg !7945
  store i32 (%struct.xlgmac_pdata*)* @xlgmac_hw_init, i32 (%struct.xlgmac_pdata*)** %init, align 8, !dbg !7946
  %1 = load %struct.xlgmac_hw_ops*, %struct.xlgmac_hw_ops** %hw_ops.addr, align 8, !dbg !7947
  %exit = getelementptr inbounds %struct.xlgmac_hw_ops, %struct.xlgmac_hw_ops* %1, i32 0, i32 1, !dbg !7948
  store i32 (%struct.xlgmac_pdata*)* @xlgmac_hw_exit, i32 (%struct.xlgmac_pdata*)** %exit, align 8, !dbg !7949
  %2 = load %struct.xlgmac_hw_ops*, %struct.xlgmac_hw_ops** %hw_ops.addr, align 8, !dbg !7950
  %tx_complete = getelementptr inbounds %struct.xlgmac_hw_ops, %struct.xlgmac_hw_ops* %2, i32 0, i32 2, !dbg !7951
  store i32 (%struct.xlgmac_dma_desc*)* @xlgmac_tx_complete, i32 (%struct.xlgmac_dma_desc*)** %tx_complete, align 8, !dbg !7952
  %3 = load %struct.xlgmac_hw_ops*, %struct.xlgmac_hw_ops** %hw_ops.addr, align 8, !dbg !7953
  %enable_tx = getelementptr inbounds %struct.xlgmac_hw_ops, %struct.xlgmac_hw_ops* %3, i32 0, i32 3, !dbg !7954
  store void (%struct.xlgmac_pdata*)* @xlgmac_enable_tx, void (%struct.xlgmac_pdata*)** %enable_tx, align 8, !dbg !7955
  %4 = load %struct.xlgmac_hw_ops*, %struct.xlgmac_hw_ops** %hw_ops.addr, align 8, !dbg !7956
  %disable_tx = getelementptr inbounds %struct.xlgmac_hw_ops, %struct.xlgmac_hw_ops* %4, i32 0, i32 4, !dbg !7957
  store void (%struct.xlgmac_pdata*)* @xlgmac_disable_tx, void (%struct.xlgmac_pdata*)** %disable_tx, align 8, !dbg !7958
  %5 = load %struct.xlgmac_hw_ops*, %struct.xlgmac_hw_ops** %hw_ops.addr, align 8, !dbg !7959
  %enable_rx = getelementptr inbounds %struct.xlgmac_hw_ops, %struct.xlgmac_hw_ops* %5, i32 0, i32 5, !dbg !7960
  store void (%struct.xlgmac_pdata*)* @xlgmac_enable_rx, void (%struct.xlgmac_pdata*)** %enable_rx, align 8, !dbg !7961
  %6 = load %struct.xlgmac_hw_ops*, %struct.xlgmac_hw_ops** %hw_ops.addr, align 8, !dbg !7962
  %disable_rx = getelementptr inbounds %struct.xlgmac_hw_ops, %struct.xlgmac_hw_ops* %6, i32 0, i32 6, !dbg !7963
  store void (%struct.xlgmac_pdata*)* @xlgmac_disable_rx, void (%struct.xlgmac_pdata*)** %disable_rx, align 8, !dbg !7964
  %7 = load %struct.xlgmac_hw_ops*, %struct.xlgmac_hw_ops** %hw_ops.addr, align 8, !dbg !7965
  %dev_xmit = getelementptr inbounds %struct.xlgmac_hw_ops, %struct.xlgmac_hw_ops* %7, i32 0, i32 9, !dbg !7966
  store void (%struct.xlgmac_channel*)* @xlgmac_dev_xmit, void (%struct.xlgmac_channel*)** %dev_xmit, align 8, !dbg !7967
  %8 = load %struct.xlgmac_hw_ops*, %struct.xlgmac_hw_ops** %hw_ops.addr, align 8, !dbg !7968
  %dev_read = getelementptr inbounds %struct.xlgmac_hw_ops, %struct.xlgmac_hw_ops* %8, i32 0, i32 10, !dbg !7969
  store i32 (%struct.xlgmac_channel*)* @xlgmac_dev_read, i32 (%struct.xlgmac_channel*)** %dev_read, align 8, !dbg !7970
  %9 = load %struct.xlgmac_hw_ops*, %struct.xlgmac_hw_ops** %hw_ops.addr, align 8, !dbg !7971
  %enable_int = getelementptr inbounds %struct.xlgmac_hw_ops, %struct.xlgmac_hw_ops* %9, i32 0, i32 7, !dbg !7972
  store i32 (%struct.xlgmac_channel*, i32)* @xlgmac_enable_int, i32 (%struct.xlgmac_channel*, i32)** %enable_int, align 8, !dbg !7973
  %10 = load %struct.xlgmac_hw_ops*, %struct.xlgmac_hw_ops** %hw_ops.addr, align 8, !dbg !7974
  %disable_int = getelementptr inbounds %struct.xlgmac_hw_ops, %struct.xlgmac_hw_ops* %10, i32 0, i32 8, !dbg !7975
  store i32 (%struct.xlgmac_channel*, i32)* @xlgmac_disable_int, i32 (%struct.xlgmac_channel*, i32)** %disable_int, align 8, !dbg !7976
  %11 = load %struct.xlgmac_hw_ops*, %struct.xlgmac_hw_ops** %hw_ops.addr, align 8, !dbg !7977
  %set_mac_address = getelementptr inbounds %struct.xlgmac_hw_ops, %struct.xlgmac_hw_ops* %11, i32 0, i32 11, !dbg !7978
  store i32 (%struct.xlgmac_pdata*, i8*)* @xlgmac_set_mac_address, i32 (%struct.xlgmac_pdata*, i8*)** %set_mac_address, align 8, !dbg !7979
  %12 = load %struct.xlgmac_hw_ops*, %struct.xlgmac_hw_ops** %hw_ops.addr, align 8, !dbg !7980
  %config_rx_mode = getelementptr inbounds %struct.xlgmac_hw_ops, %struct.xlgmac_hw_ops* %12, i32 0, i32 12, !dbg !7981
  store i32 (%struct.xlgmac_pdata*)* @xlgmac_config_rx_mode, i32 (%struct.xlgmac_pdata*)** %config_rx_mode, align 8, !dbg !7982
  %13 = load %struct.xlgmac_hw_ops*, %struct.xlgmac_hw_ops** %hw_ops.addr, align 8, !dbg !7983
  %enable_rx_csum = getelementptr inbounds %struct.xlgmac_hw_ops, %struct.xlgmac_hw_ops* %13, i32 0, i32 13, !dbg !7984
  store i32 (%struct.xlgmac_pdata*)* @xlgmac_enable_rx_csum, i32 (%struct.xlgmac_pdata*)** %enable_rx_csum, align 8, !dbg !7985
  %14 = load %struct.xlgmac_hw_ops*, %struct.xlgmac_hw_ops** %hw_ops.addr, align 8, !dbg !7986
  %disable_rx_csum = getelementptr inbounds %struct.xlgmac_hw_ops, %struct.xlgmac_hw_ops* %14, i32 0, i32 14, !dbg !7987
  store i32 (%struct.xlgmac_pdata*)* @xlgmac_disable_rx_csum, i32 (%struct.xlgmac_pdata*)** %disable_rx_csum, align 8, !dbg !7988
  %15 = load %struct.xlgmac_hw_ops*, %struct.xlgmac_hw_ops** %hw_ops.addr, align 8, !dbg !7989
  %set_xlgmii_25000_speed = getelementptr inbounds %struct.xlgmac_hw_ops, %struct.xlgmac_hw_ops* %15, i32 0, i32 15, !dbg !7990
  store i32 (%struct.xlgmac_pdata*)* @xlgmac_set_xlgmii_25000_speed, i32 (%struct.xlgmac_pdata*)** %set_xlgmii_25000_speed, align 8, !dbg !7991
  %16 = load %struct.xlgmac_hw_ops*, %struct.xlgmac_hw_ops** %hw_ops.addr, align 8, !dbg !7992
  %set_xlgmii_40000_speed = getelementptr inbounds %struct.xlgmac_hw_ops, %struct.xlgmac_hw_ops* %16, i32 0, i32 16, !dbg !7993
  store i32 (%struct.xlgmac_pdata*)* @xlgmac_set_xlgmii_40000_speed, i32 (%struct.xlgmac_pdata*)** %set_xlgmii_40000_speed, align 8, !dbg !7994
  %17 = load %struct.xlgmac_hw_ops*, %struct.xlgmac_hw_ops** %hw_ops.addr, align 8, !dbg !7995
  %set_xlgmii_50000_speed = getelementptr inbounds %struct.xlgmac_hw_ops, %struct.xlgmac_hw_ops* %17, i32 0, i32 17, !dbg !7996
  store i32 (%struct.xlgmac_pdata*)* @xlgmac_set_xlgmii_50000_speed, i32 (%struct.xlgmac_pdata*)** %set_xlgmii_50000_speed, align 8, !dbg !7997
  %18 = load %struct.xlgmac_hw_ops*, %struct.xlgmac_hw_ops** %hw_ops.addr, align 8, !dbg !7998
  %set_xlgmii_100000_speed = getelementptr inbounds %struct.xlgmac_hw_ops, %struct.xlgmac_hw_ops* %18, i32 0, i32 18, !dbg !7999
  store i32 (%struct.xlgmac_pdata*)* @xlgmac_set_xlgmii_100000_speed, i32 (%struct.xlgmac_pdata*)** %set_xlgmii_100000_speed, align 8, !dbg !8000
  %19 = load %struct.xlgmac_hw_ops*, %struct.xlgmac_hw_ops** %hw_ops.addr, align 8, !dbg !8001
  %tx_desc_init = getelementptr inbounds %struct.xlgmac_hw_ops, %struct.xlgmac_hw_ops* %19, i32 0, i32 19, !dbg !8002
  store void (%struct.xlgmac_channel*)* @xlgmac_tx_desc_init, void (%struct.xlgmac_channel*)** %tx_desc_init, align 8, !dbg !8003
  %20 = load %struct.xlgmac_hw_ops*, %struct.xlgmac_hw_ops** %hw_ops.addr, align 8, !dbg !8004
  %rx_desc_init = getelementptr inbounds %struct.xlgmac_hw_ops, %struct.xlgmac_hw_ops* %20, i32 0, i32 20, !dbg !8005
  store void (%struct.xlgmac_channel*)* @xlgmac_rx_desc_init, void (%struct.xlgmac_channel*)** %rx_desc_init, align 8, !dbg !8006
  %21 = load %struct.xlgmac_hw_ops*, %struct.xlgmac_hw_ops** %hw_ops.addr, align 8, !dbg !8007
  %tx_desc_reset = getelementptr inbounds %struct.xlgmac_hw_ops, %struct.xlgmac_hw_ops* %21, i32 0, i32 21, !dbg !8008
  store void (%struct.xlgmac_desc_data*)* @xlgmac_tx_desc_reset, void (%struct.xlgmac_desc_data*)** %tx_desc_reset, align 8, !dbg !8009
  %22 = load %struct.xlgmac_hw_ops*, %struct.xlgmac_hw_ops** %hw_ops.addr, align 8, !dbg !8010
  %rx_desc_reset = getelementptr inbounds %struct.xlgmac_hw_ops, %struct.xlgmac_hw_ops* %22, i32 0, i32 22, !dbg !8011
  store void (%struct.xlgmac_pdata*, %struct.xlgmac_desc_data*, i32)* @xlgmac_rx_desc_reset, void (%struct.xlgmac_pdata*, %struct.xlgmac_desc_data*, i32)** %rx_desc_reset, align 8, !dbg !8012
  %23 = load %struct.xlgmac_hw_ops*, %struct.xlgmac_hw_ops** %hw_ops.addr, align 8, !dbg !8013
  %is_last_desc = getelementptr inbounds %struct.xlgmac_hw_ops, %struct.xlgmac_hw_ops* %23, i32 0, i32 23, !dbg !8014
  store i32 (%struct.xlgmac_dma_desc*)* @xlgmac_is_last_desc, i32 (%struct.xlgmac_dma_desc*)** %is_last_desc, align 8, !dbg !8015
  %24 = load %struct.xlgmac_hw_ops*, %struct.xlgmac_hw_ops** %hw_ops.addr, align 8, !dbg !8016
  %is_context_desc = getelementptr inbounds %struct.xlgmac_hw_ops, %struct.xlgmac_hw_ops* %24, i32 0, i32 24, !dbg !8017
  store i32 (%struct.xlgmac_dma_desc*)* @xlgmac_is_context_desc, i32 (%struct.xlgmac_dma_desc*)** %is_context_desc, align 8, !dbg !8018
  %25 = load %struct.xlgmac_hw_ops*, %struct.xlgmac_hw_ops** %hw_ops.addr, align 8, !dbg !8019
  %tx_start_xmit = getelementptr inbounds %struct.xlgmac_hw_ops, %struct.xlgmac_hw_ops* %25, i32 0, i32 25, !dbg !8020
  store void (%struct.xlgmac_channel*, %struct.xlgmac_ring*)* @xlgmac_tx_start_xmit, void (%struct.xlgmac_channel*, %struct.xlgmac_ring*)** %tx_start_xmit, align 8, !dbg !8021
  %26 = load %struct.xlgmac_hw_ops*, %struct.xlgmac_hw_ops** %hw_ops.addr, align 8, !dbg !8022
  %config_tx_flow_control = getelementptr inbounds %struct.xlgmac_hw_ops, %struct.xlgmac_hw_ops* %26, i32 0, i32 26, !dbg !8023
  store i32 (%struct.xlgmac_pdata*)* @xlgmac_config_tx_flow_control, i32 (%struct.xlgmac_pdata*)** %config_tx_flow_control, align 8, !dbg !8024
  %27 = load %struct.xlgmac_hw_ops*, %struct.xlgmac_hw_ops** %hw_ops.addr, align 8, !dbg !8025
  %config_rx_flow_control = getelementptr inbounds %struct.xlgmac_hw_ops, %struct.xlgmac_hw_ops* %27, i32 0, i32 27, !dbg !8026
  store i32 (%struct.xlgmac_pdata*)* @xlgmac_config_rx_flow_control, i32 (%struct.xlgmac_pdata*)** %config_rx_flow_control, align 8, !dbg !8027
  %28 = load %struct.xlgmac_hw_ops*, %struct.xlgmac_hw_ops** %hw_ops.addr, align 8, !dbg !8028
  %enable_rx_vlan_stripping = getelementptr inbounds %struct.xlgmac_hw_ops, %struct.xlgmac_hw_ops* %28, i32 0, i32 28, !dbg !8029
  store i32 (%struct.xlgmac_pdata*)* @xlgmac_enable_rx_vlan_stripping, i32 (%struct.xlgmac_pdata*)** %enable_rx_vlan_stripping, align 8, !dbg !8030
  %29 = load %struct.xlgmac_hw_ops*, %struct.xlgmac_hw_ops** %hw_ops.addr, align 8, !dbg !8031
  %disable_rx_vlan_stripping = getelementptr inbounds %struct.xlgmac_hw_ops, %struct.xlgmac_hw_ops* %29, i32 0, i32 29, !dbg !8032
  store i32 (%struct.xlgmac_pdata*)* @xlgmac_disable_rx_vlan_stripping, i32 (%struct.xlgmac_pdata*)** %disable_rx_vlan_stripping, align 8, !dbg !8033
  %30 = load %struct.xlgmac_hw_ops*, %struct.xlgmac_hw_ops** %hw_ops.addr, align 8, !dbg !8034
  %enable_rx_vlan_filtering = getelementptr inbounds %struct.xlgmac_hw_ops, %struct.xlgmac_hw_ops* %30, i32 0, i32 30, !dbg !8035
  store i32 (%struct.xlgmac_pdata*)* @xlgmac_enable_rx_vlan_filtering, i32 (%struct.xlgmac_pdata*)** %enable_rx_vlan_filtering, align 8, !dbg !8036
  %31 = load %struct.xlgmac_hw_ops*, %struct.xlgmac_hw_ops** %hw_ops.addr, align 8, !dbg !8037
  %disable_rx_vlan_filtering = getelementptr inbounds %struct.xlgmac_hw_ops, %struct.xlgmac_hw_ops* %31, i32 0, i32 31, !dbg !8038
  store i32 (%struct.xlgmac_pdata*)* @xlgmac_disable_rx_vlan_filtering, i32 (%struct.xlgmac_pdata*)** %disable_rx_vlan_filtering, align 8, !dbg !8039
  %32 = load %struct.xlgmac_hw_ops*, %struct.xlgmac_hw_ops** %hw_ops.addr, align 8, !dbg !8040
  %update_vlan_hash_table = getelementptr inbounds %struct.xlgmac_hw_ops, %struct.xlgmac_hw_ops* %32, i32 0, i32 32, !dbg !8041
  store i32 (%struct.xlgmac_pdata*)* @xlgmac_update_vlan_hash_table, i32 (%struct.xlgmac_pdata*)** %update_vlan_hash_table, align 8, !dbg !8042
  %33 = load %struct.xlgmac_hw_ops*, %struct.xlgmac_hw_ops** %hw_ops.addr, align 8, !dbg !8043
  %config_rx_coalesce = getelementptr inbounds %struct.xlgmac_hw_ops, %struct.xlgmac_hw_ops* %33, i32 0, i32 33, !dbg !8044
  store i32 (%struct.xlgmac_pdata*)* @xlgmac_config_rx_coalesce, i32 (%struct.xlgmac_pdata*)** %config_rx_coalesce, align 8, !dbg !8045
  %34 = load %struct.xlgmac_hw_ops*, %struct.xlgmac_hw_ops** %hw_ops.addr, align 8, !dbg !8046
  %config_tx_coalesce = getelementptr inbounds %struct.xlgmac_hw_ops, %struct.xlgmac_hw_ops* %34, i32 0, i32 34, !dbg !8047
  store i32 (%struct.xlgmac_pdata*)* @xlgmac_config_tx_coalesce, i32 (%struct.xlgmac_pdata*)** %config_tx_coalesce, align 8, !dbg !8048
  %35 = load %struct.xlgmac_hw_ops*, %struct.xlgmac_hw_ops** %hw_ops.addr, align 8, !dbg !8049
  %usec_to_riwt = getelementptr inbounds %struct.xlgmac_hw_ops, %struct.xlgmac_hw_ops* %35, i32 0, i32 35, !dbg !8050
  store i32 (%struct.xlgmac_pdata*, i32)* @xlgmac_usec_to_riwt, i32 (%struct.xlgmac_pdata*, i32)** %usec_to_riwt, align 8, !dbg !8051
  %36 = load %struct.xlgmac_hw_ops*, %struct.xlgmac_hw_ops** %hw_ops.addr, align 8, !dbg !8052
  %riwt_to_usec = getelementptr inbounds %struct.xlgmac_hw_ops, %struct.xlgmac_hw_ops* %36, i32 0, i32 36, !dbg !8053
  store i32 (%struct.xlgmac_pdata*, i32)* @xlgmac_riwt_to_usec, i32 (%struct.xlgmac_pdata*, i32)** %riwt_to_usec, align 8, !dbg !8054
  %37 = load %struct.xlgmac_hw_ops*, %struct.xlgmac_hw_ops** %hw_ops.addr, align 8, !dbg !8055
  %config_rx_threshold = getelementptr inbounds %struct.xlgmac_hw_ops, %struct.xlgmac_hw_ops* %37, i32 0, i32 37, !dbg !8056
  store i32 (%struct.xlgmac_pdata*, i32)* @xlgmac_config_rx_threshold, i32 (%struct.xlgmac_pdata*, i32)** %config_rx_threshold, align 8, !dbg !8057
  %38 = load %struct.xlgmac_hw_ops*, %struct.xlgmac_hw_ops** %hw_ops.addr, align 8, !dbg !8058
  %config_tx_threshold = getelementptr inbounds %struct.xlgmac_hw_ops, %struct.xlgmac_hw_ops* %38, i32 0, i32 38, !dbg !8059
  store i32 (%struct.xlgmac_pdata*, i32)* @xlgmac_config_tx_threshold, i32 (%struct.xlgmac_pdata*, i32)** %config_tx_threshold, align 8, !dbg !8060
  %39 = load %struct.xlgmac_hw_ops*, %struct.xlgmac_hw_ops** %hw_ops.addr, align 8, !dbg !8061
  %config_rsf_mode = getelementptr inbounds %struct.xlgmac_hw_ops, %struct.xlgmac_hw_ops* %39, i32 0, i32 39, !dbg !8062
  store i32 (%struct.xlgmac_pdata*, i32)* @xlgmac_config_rsf_mode, i32 (%struct.xlgmac_pdata*, i32)** %config_rsf_mode, align 8, !dbg !8063
  %40 = load %struct.xlgmac_hw_ops*, %struct.xlgmac_hw_ops** %hw_ops.addr, align 8, !dbg !8064
  %config_tsf_mode = getelementptr inbounds %struct.xlgmac_hw_ops, %struct.xlgmac_hw_ops* %40, i32 0, i32 40, !dbg !8065
  store i32 (%struct.xlgmac_pdata*, i32)* @xlgmac_config_tsf_mode, i32 (%struct.xlgmac_pdata*, i32)** %config_tsf_mode, align 8, !dbg !8066
  %41 = load %struct.xlgmac_hw_ops*, %struct.xlgmac_hw_ops** %hw_ops.addr, align 8, !dbg !8067
  %config_osp_mode = getelementptr inbounds %struct.xlgmac_hw_ops, %struct.xlgmac_hw_ops* %41, i32 0, i32 41, !dbg !8068
  store i32 (%struct.xlgmac_pdata*)* @xlgmac_config_osp_mode, i32 (%struct.xlgmac_pdata*)** %config_osp_mode, align 8, !dbg !8069
  %42 = load %struct.xlgmac_hw_ops*, %struct.xlgmac_hw_ops** %hw_ops.addr, align 8, !dbg !8070
  %config_rx_pbl_val = getelementptr inbounds %struct.xlgmac_hw_ops, %struct.xlgmac_hw_ops* %42, i32 0, i32 42, !dbg !8071
  store i32 (%struct.xlgmac_pdata*)* @xlgmac_config_rx_pbl_val, i32 (%struct.xlgmac_pdata*)** %config_rx_pbl_val, align 8, !dbg !8072
  %43 = load %struct.xlgmac_hw_ops*, %struct.xlgmac_hw_ops** %hw_ops.addr, align 8, !dbg !8073
  %get_rx_pbl_val = getelementptr inbounds %struct.xlgmac_hw_ops, %struct.xlgmac_hw_ops* %43, i32 0, i32 43, !dbg !8074
  store i32 (%struct.xlgmac_pdata*)* @xlgmac_get_rx_pbl_val, i32 (%struct.xlgmac_pdata*)** %get_rx_pbl_val, align 8, !dbg !8075
  %44 = load %struct.xlgmac_hw_ops*, %struct.xlgmac_hw_ops** %hw_ops.addr, align 8, !dbg !8076
  %config_tx_pbl_val = getelementptr inbounds %struct.xlgmac_hw_ops, %struct.xlgmac_hw_ops* %44, i32 0, i32 44, !dbg !8077
  store i32 (%struct.xlgmac_pdata*)* @xlgmac_config_tx_pbl_val, i32 (%struct.xlgmac_pdata*)** %config_tx_pbl_val, align 8, !dbg !8078
  %45 = load %struct.xlgmac_hw_ops*, %struct.xlgmac_hw_ops** %hw_ops.addr, align 8, !dbg !8079
  %get_tx_pbl_val = getelementptr inbounds %struct.xlgmac_hw_ops, %struct.xlgmac_hw_ops* %45, i32 0, i32 45, !dbg !8080
  store i32 (%struct.xlgmac_pdata*)* @xlgmac_get_tx_pbl_val, i32 (%struct.xlgmac_pdata*)** %get_tx_pbl_val, align 8, !dbg !8081
  %46 = load %struct.xlgmac_hw_ops*, %struct.xlgmac_hw_ops** %hw_ops.addr, align 8, !dbg !8082
  %config_pblx8 = getelementptr inbounds %struct.xlgmac_hw_ops, %struct.xlgmac_hw_ops* %46, i32 0, i32 46, !dbg !8083
  store i32 (%struct.xlgmac_pdata*)* @xlgmac_config_pblx8, i32 (%struct.xlgmac_pdata*)** %config_pblx8, align 8, !dbg !8084
  %47 = load %struct.xlgmac_hw_ops*, %struct.xlgmac_hw_ops** %hw_ops.addr, align 8, !dbg !8085
  %tx_mmc_int = getelementptr inbounds %struct.xlgmac_hw_ops, %struct.xlgmac_hw_ops* %47, i32 0, i32 48, !dbg !8086
  store void (%struct.xlgmac_pdata*)* @xlgmac_tx_mmc_int, void (%struct.xlgmac_pdata*)** %tx_mmc_int, align 8, !dbg !8087
  %48 = load %struct.xlgmac_hw_ops*, %struct.xlgmac_hw_ops** %hw_ops.addr, align 8, !dbg !8088
  %rx_mmc_int = getelementptr inbounds %struct.xlgmac_hw_ops, %struct.xlgmac_hw_ops* %48, i32 0, i32 47, !dbg !8089
  store void (%struct.xlgmac_pdata*)* @xlgmac_rx_mmc_int, void (%struct.xlgmac_pdata*)** %rx_mmc_int, align 8, !dbg !8090
  %49 = load %struct.xlgmac_hw_ops*, %struct.xlgmac_hw_ops** %hw_ops.addr, align 8, !dbg !8091
  %read_mmc_stats = getelementptr inbounds %struct.xlgmac_hw_ops, %struct.xlgmac_hw_ops* %49, i32 0, i32 49, !dbg !8092
  store void (%struct.xlgmac_pdata*)* @xlgmac_read_mmc_stats, void (%struct.xlgmac_pdata*)** %read_mmc_stats, align 8, !dbg !8093
  %50 = load %struct.xlgmac_hw_ops*, %struct.xlgmac_hw_ops** %hw_ops.addr, align 8, !dbg !8094
  %enable_rss = getelementptr inbounds %struct.xlgmac_hw_ops, %struct.xlgmac_hw_ops* %50, i32 0, i32 50, !dbg !8095
  store i32 (%struct.xlgmac_pdata*)* @xlgmac_enable_rss, i32 (%struct.xlgmac_pdata*)** %enable_rss, align 8, !dbg !8096
  %51 = load %struct.xlgmac_hw_ops*, %struct.xlgmac_hw_ops** %hw_ops.addr, align 8, !dbg !8097
  %disable_rss = getelementptr inbounds %struct.xlgmac_hw_ops, %struct.xlgmac_hw_ops* %51, i32 0, i32 51, !dbg !8098
  store i32 (%struct.xlgmac_pdata*)* @xlgmac_disable_rss, i32 (%struct.xlgmac_pdata*)** %disable_rss, align 8, !dbg !8099
  %52 = load %struct.xlgmac_hw_ops*, %struct.xlgmac_hw_ops** %hw_ops.addr, align 8, !dbg !8100
  %set_rss_hash_key = getelementptr inbounds %struct.xlgmac_hw_ops, %struct.xlgmac_hw_ops* %52, i32 0, i32 52, !dbg !8101
  store i32 (%struct.xlgmac_pdata*, i8*)* @xlgmac_set_rss_hash_key, i32 (%struct.xlgmac_pdata*, i8*)** %set_rss_hash_key, align 8, !dbg !8102
  %53 = load %struct.xlgmac_hw_ops*, %struct.xlgmac_hw_ops** %hw_ops.addr, align 8, !dbg !8103
  %set_rss_lookup_table = getelementptr inbounds %struct.xlgmac_hw_ops, %struct.xlgmac_hw_ops* %53, i32 0, i32 53, !dbg !8104
  store i32 (%struct.xlgmac_pdata*, i32*)* @xlgmac_set_rss_lookup_table, i32 (%struct.xlgmac_pdata*, i32*)** %set_rss_lookup_table, align 8, !dbg !8105
  ret void, !dbg !8106
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @xlgmac_hw_init(%struct.xlgmac_pdata* %pdata) #0 !dbg !8107 {
entry:
  %retval = alloca i32, align 4
  %pdata.addr = alloca %struct.xlgmac_pdata*, align 8
  %desc_ops = alloca %struct.xlgmac_desc_ops*, align 8
  %ret = alloca i32, align 4
  store %struct.xlgmac_pdata* %pdata, %struct.xlgmac_pdata** %pdata.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xlgmac_pdata** %pdata.addr, metadata !8108, metadata !DIExpression()), !dbg !8109
  call void @llvm.dbg.declare(metadata %struct.xlgmac_desc_ops** %desc_ops, metadata !8110, metadata !DIExpression()), !dbg !8112
  %0 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !8113
  %desc_ops1 = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %0, i32 0, i32 3, !dbg !8114
  store %struct.xlgmac_desc_ops* %desc_ops1, %struct.xlgmac_desc_ops** %desc_ops, align 8, !dbg !8112
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !8115, metadata !DIExpression()), !dbg !8116
  %1 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !8117
  %call = call i32 @xlgmac_flush_tx_queues(%struct.xlgmac_pdata* %1) #7, !dbg !8118
  store i32 %call, i32* %ret, align 4, !dbg !8119
  %2 = load i32, i32* %ret, align 4, !dbg !8120
  %tobool = icmp ne i32 %2, 0, !dbg !8120
  br i1 %tobool, label %if.then, label %if.end, !dbg !8122

if.then:                                          ; preds = %entry
  %3 = load i32, i32* %ret, align 4, !dbg !8123
  store i32 %3, i32* %retval, align 4, !dbg !8124
  br label %return, !dbg !8124

if.end:                                           ; preds = %entry
  %4 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !8125
  call void @xlgmac_config_dma_bus(%struct.xlgmac_pdata* %4) #7, !dbg !8126
  %5 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !8127
  %call2 = call i32 @xlgmac_config_osp_mode(%struct.xlgmac_pdata* %5) #7, !dbg !8128
  %6 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !8129
  %call3 = call i32 @xlgmac_config_pblx8(%struct.xlgmac_pdata* %6) #7, !dbg !8130
  %7 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !8131
  %call4 = call i32 @xlgmac_config_tx_pbl_val(%struct.xlgmac_pdata* %7) #7, !dbg !8132
  %8 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !8133
  %call5 = call i32 @xlgmac_config_rx_pbl_val(%struct.xlgmac_pdata* %8) #7, !dbg !8134
  %9 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !8135
  %call6 = call i32 @xlgmac_config_rx_coalesce(%struct.xlgmac_pdata* %9) #7, !dbg !8136
  %10 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !8137
  %call7 = call i32 @xlgmac_config_tx_coalesce(%struct.xlgmac_pdata* %10) #7, !dbg !8138
  %11 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !8139
  call void @xlgmac_config_rx_buffer_size(%struct.xlgmac_pdata* %11) #7, !dbg !8140
  %12 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !8141
  call void @xlgmac_config_tso_mode(%struct.xlgmac_pdata* %12) #7, !dbg !8142
  %13 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !8143
  call void @xlgmac_config_sph_mode(%struct.xlgmac_pdata* %13) #7, !dbg !8144
  %14 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !8145
  call void @xlgmac_config_rss(%struct.xlgmac_pdata* %14) #7, !dbg !8146
  %15 = load %struct.xlgmac_desc_ops*, %struct.xlgmac_desc_ops** %desc_ops, align 8, !dbg !8147
  %tx_desc_init = getelementptr inbounds %struct.xlgmac_desc_ops, %struct.xlgmac_desc_ops* %15, i32 0, i32 5, !dbg !8148
  %16 = load void (%struct.xlgmac_pdata*)*, void (%struct.xlgmac_pdata*)** %tx_desc_init, align 8, !dbg !8148
  %17 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !8149
  call void %16(%struct.xlgmac_pdata* %17) #7, !dbg !8147
  %18 = load %struct.xlgmac_desc_ops*, %struct.xlgmac_desc_ops** %desc_ops, align 8, !dbg !8150
  %rx_desc_init = getelementptr inbounds %struct.xlgmac_desc_ops, %struct.xlgmac_desc_ops* %18, i32 0, i32 6, !dbg !8151
  %19 = load void (%struct.xlgmac_pdata*)*, void (%struct.xlgmac_pdata*)** %rx_desc_init, align 8, !dbg !8151
  %20 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !8152
  call void %19(%struct.xlgmac_pdata* %20) #7, !dbg !8150
  %21 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !8153
  call void @xlgmac_enable_dma_interrupts(%struct.xlgmac_pdata* %21) #7, !dbg !8154
  %22 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !8155
  call void @xlgmac_config_mtl_mode(%struct.xlgmac_pdata* %22) #7, !dbg !8156
  %23 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !8157
  call void @xlgmac_config_queue_mapping(%struct.xlgmac_pdata* %23) #7, !dbg !8158
  %24 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !8159
  %25 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !8160
  %tx_sf_mode = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %25, i32 0, i32 18, !dbg !8161
  %26 = load i32, i32* %tx_sf_mode, align 8, !dbg !8161
  %call8 = call i32 @xlgmac_config_tsf_mode(%struct.xlgmac_pdata* %24, i32 %26) #7, !dbg !8162
  %27 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !8163
  %28 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !8164
  %rx_sf_mode = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %28, i32 0, i32 22, !dbg !8165
  %29 = load i32, i32* %rx_sf_mode, align 8, !dbg !8165
  %call9 = call i32 @xlgmac_config_rsf_mode(%struct.xlgmac_pdata* %27, i32 %29) #7, !dbg !8166
  %30 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !8167
  %31 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !8168
  %tx_threshold = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %31, i32 0, i32 19, !dbg !8169
  %32 = load i32, i32* %tx_threshold, align 4, !dbg !8169
  %call10 = call i32 @xlgmac_config_tx_threshold(%struct.xlgmac_pdata* %30, i32 %32) #7, !dbg !8170
  %33 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !8171
  %34 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !8172
  %rx_threshold = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %34, i32 0, i32 23, !dbg !8173
  %35 = load i32, i32* %rx_threshold, align 4, !dbg !8173
  %call11 = call i32 @xlgmac_config_rx_threshold(%struct.xlgmac_pdata* %33, i32 %35) #7, !dbg !8174
  %36 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !8175
  call void @xlgmac_config_tx_fifo_size(%struct.xlgmac_pdata* %36) #7, !dbg !8176
  %37 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !8177
  call void @xlgmac_config_rx_fifo_size(%struct.xlgmac_pdata* %37) #7, !dbg !8178
  %38 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !8179
  call void @xlgmac_config_flow_control_threshold(%struct.xlgmac_pdata* %38) #7, !dbg !8180
  %39 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !8181
  call void @xlgmac_config_rx_fep_enable(%struct.xlgmac_pdata* %39) #7, !dbg !8182
  %40 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !8183
  call void @xlgmac_config_rx_fup_enable(%struct.xlgmac_pdata* %40) #7, !dbg !8184
  %41 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !8185
  call void @xlgmac_enable_mtl_interrupts(%struct.xlgmac_pdata* %41) #7, !dbg !8186
  %42 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !8187
  call void @xlgmac_config_mac_address(%struct.xlgmac_pdata* %42) #7, !dbg !8188
  %43 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !8189
  %call12 = call i32 @xlgmac_config_rx_mode(%struct.xlgmac_pdata* %43) #7, !dbg !8190
  %44 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !8191
  call void @xlgmac_config_jumbo_enable(%struct.xlgmac_pdata* %44) #7, !dbg !8192
  %45 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !8193
  call void @xlgmac_config_flow_control(%struct.xlgmac_pdata* %45) #7, !dbg !8194
  %46 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !8195
  call void @xlgmac_config_mac_speed(%struct.xlgmac_pdata* %46) #7, !dbg !8196
  %47 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !8197
  call void @xlgmac_config_checksum_offload(%struct.xlgmac_pdata* %47) #7, !dbg !8198
  %48 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !8199
  call void @xlgmac_config_vlan_support(%struct.xlgmac_pdata* %48) #7, !dbg !8200
  %49 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !8201
  call void @xlgmac_config_mmc(%struct.xlgmac_pdata* %49) #7, !dbg !8202
  %50 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !8203
  call void @xlgmac_enable_mac_interrupts(%struct.xlgmac_pdata* %50) #7, !dbg !8204
  store i32 0, i32* %retval, align 4, !dbg !8205
  br label %return, !dbg !8205

return:                                           ; preds = %if.end, %if.then
  %51 = load i32, i32* %retval, align 4, !dbg !8206
  ret i32 %51, !dbg !8206
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @xlgmac_hw_exit(%struct.xlgmac_pdata* %pdata) #0 !dbg !8207 {
entry:
  %retval = alloca i32, align 4
  %pdata.addr = alloca %struct.xlgmac_pdata*, align 8
  %count = alloca i32, align 4
  %regval = alloca i32, align 4
  %_var = alloca i32, align 4
  %_pos = alloca i32, align 4
  %_len = alloca i32, align 4
  %_val = alloca i32, align 4
  %tmp = alloca i32, align 4
  %_pos26 = alloca i32, align 4
  %_len27 = alloca i32, align 4
  %tmp28 = alloca i64, align 8
  store %struct.xlgmac_pdata* %pdata, %struct.xlgmac_pdata** %pdata.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xlgmac_pdata** %pdata.addr, metadata !8208, metadata !DIExpression()), !dbg !8209
  call void @llvm.dbg.declare(metadata i32* %count, metadata !8210, metadata !DIExpression()), !dbg !8211
  store i32 2000, i32* %count, align 4, !dbg !8211
  call void @llvm.dbg.declare(metadata i32* %regval, metadata !8212, metadata !DIExpression()), !dbg !8213
  %0 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !8214
  %mac_regs = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %0, i32 0, i32 6, !dbg !8215
  %1 = load i8*, i8** %mac_regs, align 8, !dbg !8215
  %add.ptr = getelementptr i8, i8* %1, i64 12288, !dbg !8216
  %call = call i32 @readl(i8* %add.ptr) #7, !dbg !8217
  store i32 %call, i32* %regval, align 4, !dbg !8218
  call void @llvm.dbg.declare(metadata i32* %_var, metadata !8219, metadata !DIExpression()), !dbg !8221
  %2 = load i32, i32* %regval, align 4, !dbg !8221
  store i32 %2, i32* %_var, align 4, !dbg !8221
  call void @llvm.dbg.declare(metadata i32* %_pos, metadata !8222, metadata !DIExpression()), !dbg !8221
  store i32 0, i32* %_pos, align 4, !dbg !8221
  call void @llvm.dbg.declare(metadata i32* %_len, metadata !8223, metadata !DIExpression()), !dbg !8221
  store i32 1, i32* %_len, align 4, !dbg !8221
  call void @llvm.dbg.declare(metadata i32* %_val, metadata !8224, metadata !DIExpression()), !dbg !8221
  store i32 1, i32* %_val, align 4, !dbg !8221
  %3 = load i32, i32* %_val, align 4, !dbg !8221
  %4 = load i32, i32* %_pos, align 4, !dbg !8221
  %shl = shl i32 %3, %4, !dbg !8221
  %conv = sext i32 %shl to i64, !dbg !8221
  %5 = load i32, i32* %_pos, align 4, !dbg !8221
  %sh_prom = zext i32 %5 to i64, !dbg !8221
  %shl1 = shl i64 1, %sh_prom, !dbg !8221
  %sub = sub i64 -1, %shl1, !dbg !8221
  %add = add i64 %sub, 1, !dbg !8221
  %6 = load i32, i32* %_pos, align 4, !dbg !8221
  %7 = load i32, i32* %_len, align 4, !dbg !8221
  %add2 = add i32 %6, %7, !dbg !8221
  %sub3 = sub i32 %add2, 1, !dbg !8221
  %sub4 = sub i32 63, %sub3, !dbg !8221
  %sh_prom5 = zext i32 %sub4 to i64, !dbg !8221
  %shr = lshr i64 -1, %sh_prom5, !dbg !8221
  %and = and i64 %add, %shr, !dbg !8221
  %add6 = add i64 0, %and, !dbg !8221
  %and7 = and i64 %conv, %add6, !dbg !8221
  %conv8 = trunc i64 %and7 to i32, !dbg !8221
  store i32 %conv8, i32* %_val, align 4, !dbg !8221
  %8 = load i32, i32* %_var, align 4, !dbg !8221
  %conv9 = zext i32 %8 to i64, !dbg !8221
  %9 = load i32, i32* %_pos, align 4, !dbg !8221
  %sh_prom10 = zext i32 %9 to i64, !dbg !8221
  %shl11 = shl i64 1, %sh_prom10, !dbg !8221
  %sub12 = sub i64 -1, %shl11, !dbg !8221
  %add13 = add i64 %sub12, 1, !dbg !8221
  %10 = load i32, i32* %_pos, align 4, !dbg !8221
  %11 = load i32, i32* %_len, align 4, !dbg !8221
  %add14 = add i32 %10, %11, !dbg !8221
  %sub15 = sub i32 %add14, 1, !dbg !8221
  %sub16 = sub i32 63, %sub15, !dbg !8221
  %sh_prom17 = zext i32 %sub16 to i64, !dbg !8221
  %shr18 = lshr i64 -1, %sh_prom17, !dbg !8221
  %and19 = and i64 %add13, %shr18, !dbg !8221
  %add20 = add i64 0, %and19, !dbg !8221
  %neg = xor i64 %add20, -1, !dbg !8221
  %and21 = and i64 %conv9, %neg, !dbg !8221
  %12 = load i32, i32* %_val, align 4, !dbg !8221
  %conv22 = sext i32 %12 to i64, !dbg !8221
  %or = or i64 %and21, %conv22, !dbg !8221
  %conv23 = trunc i64 %or to i32, !dbg !8221
  store i32 %conv23, i32* %_var, align 4, !dbg !8221
  store i32 %conv23, i32* %tmp, align 4, !dbg !8221
  %13 = load i32, i32* %tmp, align 4, !dbg !8221
  store i32 %13, i32* %regval, align 4, !dbg !8225
  %14 = load i32, i32* %regval, align 4, !dbg !8226
  %15 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !8227
  %mac_regs24 = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %15, i32 0, i32 6, !dbg !8228
  %16 = load i8*, i8** %mac_regs24, align 8, !dbg !8228
  %add.ptr25 = getelementptr i8, i8* %16, i64 12288, !dbg !8229
  call void @writel(i32 %14, i8* %add.ptr25) #7, !dbg !8230
  call void @usleep_range(i64 10, i64 15) #7, !dbg !8231
  br label %while.cond, !dbg !8232

while.cond:                                       ; preds = %while.body, %entry
  %17 = load i32, i32* %count, align 4, !dbg !8233
  %dec = add i32 %17, -1, !dbg !8233
  store i32 %dec, i32* %count, align 4, !dbg !8233
  %tobool = icmp ne i32 %dec, 0, !dbg !8233
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !8234

land.rhs:                                         ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i32* %_pos26, metadata !8235, metadata !DIExpression()), !dbg !8237
  store i32 0, i32* %_pos26, align 4, !dbg !8237
  call void @llvm.dbg.declare(metadata i32* %_len27, metadata !8238, metadata !DIExpression()), !dbg !8237
  store i32 1, i32* %_len27, align 4, !dbg !8237
  %18 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !8237
  %mac_regs29 = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %18, i32 0, i32 6, !dbg !8237
  %19 = load i8*, i8** %mac_regs29, align 8, !dbg !8237
  %add.ptr30 = getelementptr i8, i8* %19, i64 12288, !dbg !8237
  %call31 = call i32 @readl(i8* %add.ptr30) #7, !dbg !8237
  %conv32 = zext i32 %call31 to i64, !dbg !8237
  %20 = load i32, i32* %_pos26, align 4, !dbg !8237
  %sh_prom33 = zext i32 %20 to i64, !dbg !8237
  %shl34 = shl i64 1, %sh_prom33, !dbg !8237
  %sub35 = sub i64 -1, %shl34, !dbg !8237
  %add36 = add i64 %sub35, 1, !dbg !8237
  %21 = load i32, i32* %_pos26, align 4, !dbg !8237
  %22 = load i32, i32* %_len27, align 4, !dbg !8237
  %add37 = add i32 %21, %22, !dbg !8237
  %sub38 = sub i32 %add37, 1, !dbg !8237
  %sub39 = sub i32 63, %sub38, !dbg !8237
  %sh_prom40 = zext i32 %sub39 to i64, !dbg !8237
  %shr41 = lshr i64 -1, %sh_prom40, !dbg !8237
  %and42 = and i64 %add36, %shr41, !dbg !8237
  %add43 = add i64 0, %and42, !dbg !8237
  %and44 = and i64 %conv32, %add43, !dbg !8237
  %23 = load i32, i32* %_pos26, align 4, !dbg !8237
  %sh_prom45 = zext i32 %23 to i64, !dbg !8237
  %shr46 = lshr i64 %and44, %sh_prom45, !dbg !8237
  store i64 %shr46, i64* %tmp28, align 8, !dbg !8237
  %24 = load i64, i64* %tmp28, align 8, !dbg !8237
  %tobool47 = icmp ne i64 %24, 0, !dbg !8234
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %25 = phi i1 [ false, %while.cond ], [ %tobool47, %land.rhs ], !dbg !8239
  br i1 %25, label %while.body, label %while.end, !dbg !8232

while.body:                                       ; preds = %land.end
  call void @usleep_range(i64 500, i64 600) #7, !dbg !8240
  br label %while.cond, !dbg !8232, !llvm.loop !8241

while.end:                                        ; preds = %land.end
  %26 = load i32, i32* %count, align 4, !dbg !8243
  %tobool48 = icmp ne i32 %26, 0, !dbg !8243
  br i1 %tobool48, label %if.end, label %if.then, !dbg !8245

if.then:                                          ; preds = %while.end
  store i32 -16, i32* %retval, align 4, !dbg !8246
  br label %return, !dbg !8246

if.end:                                           ; preds = %while.end
  store i32 0, i32* %retval, align 4, !dbg !8247
  br label %return, !dbg !8247

return:                                           ; preds = %if.end, %if.then
  %27 = load i32, i32* %retval, align 4, !dbg !8248
  ret i32 %27, !dbg !8248
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @xlgmac_tx_complete(%struct.xlgmac_dma_desc* %dma_desc) #0 !dbg !8249 {
entry:
  %dma_desc.addr = alloca %struct.xlgmac_dma_desc*, align 8
  %_pos = alloca i32, align 4
  %_len = alloca i32, align 4
  %_var = alloca i32, align 4
  %tmp = alloca i64, align 8
  store %struct.xlgmac_dma_desc* %dma_desc, %struct.xlgmac_dma_desc** %dma_desc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xlgmac_dma_desc** %dma_desc.addr, metadata !8250, metadata !DIExpression()), !dbg !8251
  call void @llvm.dbg.declare(metadata i32* %_pos, metadata !8252, metadata !DIExpression()), !dbg !8254
  store i32 31, i32* %_pos, align 4, !dbg !8254
  call void @llvm.dbg.declare(metadata i32* %_len, metadata !8255, metadata !DIExpression()), !dbg !8254
  store i32 1, i32* %_len, align 4, !dbg !8254
  call void @llvm.dbg.declare(metadata i32* %_var, metadata !8256, metadata !DIExpression()), !dbg !8254
  %0 = load %struct.xlgmac_dma_desc*, %struct.xlgmac_dma_desc** %dma_desc.addr, align 8, !dbg !8254
  %desc3 = getelementptr inbounds %struct.xlgmac_dma_desc, %struct.xlgmac_dma_desc* %0, i32 0, i32 3, !dbg !8254
  %1 = load i32, i32* %desc3, align 4, !dbg !8254
  store i32 %1, i32* %_var, align 4, !dbg !8254
  %2 = load i32, i32* %_var, align 4, !dbg !8254
  %conv = zext i32 %2 to i64, !dbg !8254
  %3 = load i32, i32* %_pos, align 4, !dbg !8254
  %sh_prom = zext i32 %3 to i64, !dbg !8254
  %shl = shl i64 1, %sh_prom, !dbg !8254
  %sub = sub i64 -1, %shl, !dbg !8254
  %add = add i64 %sub, 1, !dbg !8254
  %4 = load i32, i32* %_pos, align 4, !dbg !8254
  %5 = load i32, i32* %_len, align 4, !dbg !8254
  %add1 = add i32 %4, %5, !dbg !8254
  %sub2 = sub i32 %add1, 1, !dbg !8254
  %sub3 = sub i32 63, %sub2, !dbg !8254
  %sh_prom4 = zext i32 %sub3 to i64, !dbg !8254
  %shr = lshr i64 -1, %sh_prom4, !dbg !8254
  %and = and i64 %add, %shr, !dbg !8254
  %add5 = add i64 0, %and, !dbg !8254
  %and6 = and i64 %conv, %add5, !dbg !8254
  %6 = load i32, i32* %_pos, align 4, !dbg !8254
  %sh_prom7 = zext i32 %6 to i64, !dbg !8254
  %shr8 = lshr i64 %and6, %sh_prom7, !dbg !8254
  store i64 %shr8, i64* %tmp, align 8, !dbg !8254
  %7 = load i64, i64* %tmp, align 8, !dbg !8254
  %tobool = icmp ne i64 %7, 0, !dbg !8257
  %lnot = xor i1 %tobool, true, !dbg !8257
  %lnot.ext = zext i1 %lnot to i32, !dbg !8257
  ret i32 %lnot.ext, !dbg !8258
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @xlgmac_enable_tx(%struct.xlgmac_pdata* %pdata) #0 !dbg !8259 {
entry:
  %pdata.addr = alloca %struct.xlgmac_pdata*, align 8
  %channel = alloca %struct.xlgmac_channel*, align 8
  %i = alloca i32, align 4
  %regval = alloca i32, align 4
  %_var = alloca i32, align 4
  %_pos = alloca i32, align 4
  %_len = alloca i32, align 4
  %_val = alloca i32, align 4
  %tmp = alloca i32, align 4
  %_var34 = alloca i32, align 4
  %_pos35 = alloca i32, align 4
  %_len36 = alloca i32, align 4
  %_val37 = alloca i32, align 4
  %tmp53 = alloca i32, align 4
  %_var83 = alloca i32, align 4
  %_pos84 = alloca i32, align 4
  %_len85 = alloca i32, align 4
  %_val86 = alloca i32, align 4
  %tmp102 = alloca i32, align 4
  store %struct.xlgmac_pdata* %pdata, %struct.xlgmac_pdata** %pdata.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xlgmac_pdata** %pdata.addr, metadata !8260, metadata !DIExpression()), !dbg !8261
  call void @llvm.dbg.declare(metadata %struct.xlgmac_channel** %channel, metadata !8262, metadata !DIExpression()), !dbg !8263
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8264, metadata !DIExpression()), !dbg !8265
  call void @llvm.dbg.declare(metadata i32* %regval, metadata !8266, metadata !DIExpression()), !dbg !8267
  %0 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !8268
  %channel_head = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %0, i32 0, i32 9, !dbg !8269
  %1 = load %struct.xlgmac_channel*, %struct.xlgmac_channel** %channel_head, align 8, !dbg !8269
  store %struct.xlgmac_channel* %1, %struct.xlgmac_channel** %channel, align 8, !dbg !8270
  store i32 0, i32* %i, align 4, !dbg !8271
  br label %for.cond, !dbg !8273

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i32, i32* %i, align 4, !dbg !8274
  %3 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !8276
  %channel_count = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %3, i32 0, i32 10, !dbg !8277
  %4 = load i32, i32* %channel_count, align 8, !dbg !8277
  %cmp = icmp ult i32 %2, %4, !dbg !8278
  br i1 %cmp, label %for.body, label %for.end, !dbg !8279

for.body:                                         ; preds = %for.cond
  %5 = load %struct.xlgmac_channel*, %struct.xlgmac_channel** %channel, align 8, !dbg !8280
  %tx_ring = getelementptr inbounds %struct.xlgmac_channel, %struct.xlgmac_channel* %5, i32 0, i32 10, !dbg !8283
  %6 = load %struct.xlgmac_ring*, %struct.xlgmac_ring** %tx_ring, align 16, !dbg !8283
  %tobool = icmp ne %struct.xlgmac_ring* %6, null, !dbg !8280
  br i1 %tobool, label %if.end, label %if.then, !dbg !8284

if.then:                                          ; preds = %for.body
  br label %for.end, !dbg !8285

if.end:                                           ; preds = %for.body
  %7 = load %struct.xlgmac_channel*, %struct.xlgmac_channel** %channel, align 8, !dbg !8286
  %dma_regs = getelementptr inbounds %struct.xlgmac_channel, %struct.xlgmac_channel* %7, i32 0, i32 3, !dbg !8286
  %8 = load i8*, i8** %dma_regs, align 32, !dbg !8286
  %add.ptr = getelementptr i8, i8* %8, i64 4, !dbg !8286
  %call = call i32 @readl(i8* %add.ptr) #7, !dbg !8287
  store i32 %call, i32* %regval, align 4, !dbg !8288
  call void @llvm.dbg.declare(metadata i32* %_var, metadata !8289, metadata !DIExpression()), !dbg !8291
  %9 = load i32, i32* %regval, align 4, !dbg !8291
  store i32 %9, i32* %_var, align 4, !dbg !8291
  call void @llvm.dbg.declare(metadata i32* %_pos, metadata !8292, metadata !DIExpression()), !dbg !8291
  store i32 0, i32* %_pos, align 4, !dbg !8291
  call void @llvm.dbg.declare(metadata i32* %_len, metadata !8293, metadata !DIExpression()), !dbg !8291
  store i32 1, i32* %_len, align 4, !dbg !8291
  call void @llvm.dbg.declare(metadata i32* %_val, metadata !8294, metadata !DIExpression()), !dbg !8291
  store i32 1, i32* %_val, align 4, !dbg !8291
  %10 = load i32, i32* %_val, align 4, !dbg !8291
  %11 = load i32, i32* %_pos, align 4, !dbg !8291
  %shl = shl i32 %10, %11, !dbg !8291
  %conv = sext i32 %shl to i64, !dbg !8291
  %12 = load i32, i32* %_pos, align 4, !dbg !8291
  %sh_prom = zext i32 %12 to i64, !dbg !8291
  %shl1 = shl i64 1, %sh_prom, !dbg !8291
  %sub = sub i64 -1, %shl1, !dbg !8291
  %add = add i64 %sub, 1, !dbg !8291
  %13 = load i32, i32* %_pos, align 4, !dbg !8291
  %14 = load i32, i32* %_len, align 4, !dbg !8291
  %add2 = add i32 %13, %14, !dbg !8291
  %sub3 = sub i32 %add2, 1, !dbg !8291
  %sub4 = sub i32 63, %sub3, !dbg !8291
  %sh_prom5 = zext i32 %sub4 to i64, !dbg !8291
  %shr = lshr i64 -1, %sh_prom5, !dbg !8291
  %and = and i64 %add, %shr, !dbg !8291
  %add6 = add i64 0, %and, !dbg !8291
  %and7 = and i64 %conv, %add6, !dbg !8291
  %conv8 = trunc i64 %and7 to i32, !dbg !8291
  store i32 %conv8, i32* %_val, align 4, !dbg !8291
  %15 = load i32, i32* %_var, align 4, !dbg !8291
  %conv9 = zext i32 %15 to i64, !dbg !8291
  %16 = load i32, i32* %_pos, align 4, !dbg !8291
  %sh_prom10 = zext i32 %16 to i64, !dbg !8291
  %shl11 = shl i64 1, %sh_prom10, !dbg !8291
  %sub12 = sub i64 -1, %shl11, !dbg !8291
  %add13 = add i64 %sub12, 1, !dbg !8291
  %17 = load i32, i32* %_pos, align 4, !dbg !8291
  %18 = load i32, i32* %_len, align 4, !dbg !8291
  %add14 = add i32 %17, %18, !dbg !8291
  %sub15 = sub i32 %add14, 1, !dbg !8291
  %sub16 = sub i32 63, %sub15, !dbg !8291
  %sh_prom17 = zext i32 %sub16 to i64, !dbg !8291
  %shr18 = lshr i64 -1, %sh_prom17, !dbg !8291
  %and19 = and i64 %add13, %shr18, !dbg !8291
  %add20 = add i64 0, %and19, !dbg !8291
  %neg = xor i64 %add20, -1, !dbg !8291
  %and21 = and i64 %conv9, %neg, !dbg !8291
  %19 = load i32, i32* %_val, align 4, !dbg !8291
  %conv22 = sext i32 %19 to i64, !dbg !8291
  %or = or i64 %and21, %conv22, !dbg !8291
  %conv23 = trunc i64 %or to i32, !dbg !8291
  store i32 %conv23, i32* %_var, align 4, !dbg !8291
  store i32 %conv23, i32* %tmp, align 4, !dbg !8291
  %20 = load i32, i32* %tmp, align 4, !dbg !8291
  store i32 %20, i32* %regval, align 4, !dbg !8295
  %21 = load i32, i32* %regval, align 4, !dbg !8296
  %22 = load %struct.xlgmac_channel*, %struct.xlgmac_channel** %channel, align 8, !dbg !8297
  %dma_regs24 = getelementptr inbounds %struct.xlgmac_channel, %struct.xlgmac_channel* %22, i32 0, i32 3, !dbg !8297
  %23 = load i8*, i8** %dma_regs24, align 32, !dbg !8297
  %add.ptr25 = getelementptr i8, i8* %23, i64 4, !dbg !8297
  call void @writel(i32 %21, i8* %add.ptr25) #7, !dbg !8298
  br label %for.inc, !dbg !8299

for.inc:                                          ; preds = %if.end
  %24 = load i32, i32* %i, align 4, !dbg !8300
  %inc = add i32 %24, 1, !dbg !8300
  store i32 %inc, i32* %i, align 4, !dbg !8300
  %25 = load %struct.xlgmac_channel*, %struct.xlgmac_channel** %channel, align 8, !dbg !8301
  %incdec.ptr = getelementptr %struct.xlgmac_channel, %struct.xlgmac_channel* %25, i32 1, !dbg !8301
  store %struct.xlgmac_channel* %incdec.ptr, %struct.xlgmac_channel** %channel, align 8, !dbg !8301
  br label %for.cond, !dbg !8302, !llvm.loop !8303

for.end:                                          ; preds = %if.then, %for.cond
  store i32 0, i32* %i, align 4, !dbg !8305
  br label %for.cond26, !dbg !8307

for.cond26:                                       ; preds = %for.inc77, %for.end
  %26 = load i32, i32* %i, align 4, !dbg !8308
  %27 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !8310
  %tx_q_count = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %27, i32 0, i32 15, !dbg !8311
  %28 = load i32, i32* %tx_q_count, align 4, !dbg !8311
  %cmp27 = icmp ult i32 %26, %28, !dbg !8312
  br i1 %cmp27, label %for.body29, label %for.end79, !dbg !8313

for.body29:                                       ; preds = %for.cond26
  %29 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !8314
  %mac_regs = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %29, i32 0, i32 6, !dbg !8314
  %30 = load i8*, i8** %mac_regs, align 8, !dbg !8314
  %add.ptr30 = getelementptr i8, i8* %30, i64 4352, !dbg !8314
  %31 = load i32, i32* %i, align 4, !dbg !8314
  %mul = mul i32 %31, 128, !dbg !8314
  %idx.ext = zext i32 %mul to i64, !dbg !8314
  %add.ptr31 = getelementptr i8, i8* %add.ptr30, i64 %idx.ext, !dbg !8314
  %add.ptr32 = getelementptr i8, i8* %add.ptr31, i64 0, !dbg !8314
  %call33 = call i32 @readl(i8* %add.ptr32) #7, !dbg !8316
  store i32 %call33, i32* %regval, align 4, !dbg !8317
  call void @llvm.dbg.declare(metadata i32* %_var34, metadata !8318, metadata !DIExpression()), !dbg !8320
  %32 = load i32, i32* %regval, align 4, !dbg !8320
  store i32 %32, i32* %_var34, align 4, !dbg !8320
  call void @llvm.dbg.declare(metadata i32* %_pos35, metadata !8321, metadata !DIExpression()), !dbg !8320
  store i32 2, i32* %_pos35, align 4, !dbg !8320
  call void @llvm.dbg.declare(metadata i32* %_len36, metadata !8322, metadata !DIExpression()), !dbg !8320
  store i32 2, i32* %_len36, align 4, !dbg !8320
  call void @llvm.dbg.declare(metadata i32* %_val37, metadata !8323, metadata !DIExpression()), !dbg !8320
  store i32 2, i32* %_val37, align 4, !dbg !8320
  %33 = load i32, i32* %_val37, align 4, !dbg !8320
  %34 = load i32, i32* %_pos35, align 4, !dbg !8320
  %shl38 = shl i32 %33, %34, !dbg !8320
  %conv39 = sext i32 %shl38 to i64, !dbg !8320
  %35 = load i32, i32* %_pos35, align 4, !dbg !8320
  %sh_prom40 = zext i32 %35 to i64, !dbg !8320
  %shl41 = shl i64 1, %sh_prom40, !dbg !8320
  %sub42 = sub i64 -1, %shl41, !dbg !8320
  %add43 = add i64 %sub42, 1, !dbg !8320
  %36 = load i32, i32* %_pos35, align 4, !dbg !8320
  %37 = load i32, i32* %_len36, align 4, !dbg !8320
  %add44 = add i32 %36, %37, !dbg !8320
  %sub45 = sub i32 %add44, 1, !dbg !8320
  %sub46 = sub i32 63, %sub45, !dbg !8320
  %sh_prom47 = zext i32 %sub46 to i64, !dbg !8320
  %shr48 = lshr i64 -1, %sh_prom47, !dbg !8320
  %and49 = and i64 %add43, %shr48, !dbg !8320
  %add50 = add i64 0, %and49, !dbg !8320
  %and51 = and i64 %conv39, %add50, !dbg !8320
  %conv52 = trunc i64 %and51 to i32, !dbg !8320
  store i32 %conv52, i32* %_val37, align 4, !dbg !8320
  %38 = load i32, i32* %_var34, align 4, !dbg !8320
  %conv54 = zext i32 %38 to i64, !dbg !8320
  %39 = load i32, i32* %_pos35, align 4, !dbg !8320
  %sh_prom55 = zext i32 %39 to i64, !dbg !8320
  %shl56 = shl i64 1, %sh_prom55, !dbg !8320
  %sub57 = sub i64 -1, %shl56, !dbg !8320
  %add58 = add i64 %sub57, 1, !dbg !8320
  %40 = load i32, i32* %_pos35, align 4, !dbg !8320
  %41 = load i32, i32* %_len36, align 4, !dbg !8320
  %add59 = add i32 %40, %41, !dbg !8320
  %sub60 = sub i32 %add59, 1, !dbg !8320
  %sub61 = sub i32 63, %sub60, !dbg !8320
  %sh_prom62 = zext i32 %sub61 to i64, !dbg !8320
  %shr63 = lshr i64 -1, %sh_prom62, !dbg !8320
  %and64 = and i64 %add58, %shr63, !dbg !8320
  %add65 = add i64 0, %and64, !dbg !8320
  %neg66 = xor i64 %add65, -1, !dbg !8320
  %and67 = and i64 %conv54, %neg66, !dbg !8320
  %42 = load i32, i32* %_val37, align 4, !dbg !8320
  %conv68 = sext i32 %42 to i64, !dbg !8320
  %or69 = or i64 %and67, %conv68, !dbg !8320
  %conv70 = trunc i64 %or69 to i32, !dbg !8320
  store i32 %conv70, i32* %_var34, align 4, !dbg !8320
  store i32 %conv70, i32* %tmp53, align 4, !dbg !8320
  %43 = load i32, i32* %tmp53, align 4, !dbg !8320
  store i32 %43, i32* %regval, align 4, !dbg !8324
  %44 = load i32, i32* %regval, align 4, !dbg !8325
  %45 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !8326
  %mac_regs71 = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %45, i32 0, i32 6, !dbg !8326
  %46 = load i8*, i8** %mac_regs71, align 8, !dbg !8326
  %add.ptr72 = getelementptr i8, i8* %46, i64 4352, !dbg !8326
  %47 = load i32, i32* %i, align 4, !dbg !8326
  %mul73 = mul i32 %47, 128, !dbg !8326
  %idx.ext74 = zext i32 %mul73 to i64, !dbg !8326
  %add.ptr75 = getelementptr i8, i8* %add.ptr72, i64 %idx.ext74, !dbg !8326
  %add.ptr76 = getelementptr i8, i8* %add.ptr75, i64 0, !dbg !8326
  call void @writel(i32 %44, i8* %add.ptr76) #7, !dbg !8327
  br label %for.inc77, !dbg !8328

for.inc77:                                        ; preds = %for.body29
  %48 = load i32, i32* %i, align 4, !dbg !8329
  %inc78 = add i32 %48, 1, !dbg !8329
  store i32 %inc78, i32* %i, align 4, !dbg !8329
  br label %for.cond26, !dbg !8330, !llvm.loop !8331

for.end79:                                        ; preds = %for.cond26
  %49 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !8333
  %mac_regs80 = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %49, i32 0, i32 6, !dbg !8334
  %50 = load i8*, i8** %mac_regs80, align 8, !dbg !8334
  %add.ptr81 = getelementptr i8, i8* %50, i64 0, !dbg !8335
  %call82 = call i32 @readl(i8* %add.ptr81) #7, !dbg !8336
  store i32 %call82, i32* %regval, align 4, !dbg !8337
  call void @llvm.dbg.declare(metadata i32* %_var83, metadata !8338, metadata !DIExpression()), !dbg !8340
  %51 = load i32, i32* %regval, align 4, !dbg !8340
  store i32 %51, i32* %_var83, align 4, !dbg !8340
  call void @llvm.dbg.declare(metadata i32* %_pos84, metadata !8341, metadata !DIExpression()), !dbg !8340
  store i32 0, i32* %_pos84, align 4, !dbg !8340
  call void @llvm.dbg.declare(metadata i32* %_len85, metadata !8342, metadata !DIExpression()), !dbg !8340
  store i32 1, i32* %_len85, align 4, !dbg !8340
  call void @llvm.dbg.declare(metadata i32* %_val86, metadata !8343, metadata !DIExpression()), !dbg !8340
  store i32 1, i32* %_val86, align 4, !dbg !8340
  %52 = load i32, i32* %_val86, align 4, !dbg !8340
  %53 = load i32, i32* %_pos84, align 4, !dbg !8340
  %shl87 = shl i32 %52, %53, !dbg !8340
  %conv88 = sext i32 %shl87 to i64, !dbg !8340
  %54 = load i32, i32* %_pos84, align 4, !dbg !8340
  %sh_prom89 = zext i32 %54 to i64, !dbg !8340
  %shl90 = shl i64 1, %sh_prom89, !dbg !8340
  %sub91 = sub i64 -1, %shl90, !dbg !8340
  %add92 = add i64 %sub91, 1, !dbg !8340
  %55 = load i32, i32* %_pos84, align 4, !dbg !8340
  %56 = load i32, i32* %_len85, align 4, !dbg !8340
  %add93 = add i32 %55, %56, !dbg !8340
  %sub94 = sub i32 %add93, 1, !dbg !8340
  %sub95 = sub i32 63, %sub94, !dbg !8340
  %sh_prom96 = zext i32 %sub95 to i64, !dbg !8340
  %shr97 = lshr i64 -1, %sh_prom96, !dbg !8340
  %and98 = and i64 %add92, %shr97, !dbg !8340
  %add99 = add i64 0, %and98, !dbg !8340
  %and100 = and i64 %conv88, %add99, !dbg !8340
  %conv101 = trunc i64 %and100 to i32, !dbg !8340
  store i32 %conv101, i32* %_val86, align 4, !dbg !8340
  %57 = load i32, i32* %_var83, align 4, !dbg !8340
  %conv103 = zext i32 %57 to i64, !dbg !8340
  %58 = load i32, i32* %_pos84, align 4, !dbg !8340
  %sh_prom104 = zext i32 %58 to i64, !dbg !8340
  %shl105 = shl i64 1, %sh_prom104, !dbg !8340
  %sub106 = sub i64 -1, %shl105, !dbg !8340
  %add107 = add i64 %sub106, 1, !dbg !8340
  %59 = load i32, i32* %_pos84, align 4, !dbg !8340
  %60 = load i32, i32* %_len85, align 4, !dbg !8340
  %add108 = add i32 %59, %60, !dbg !8340
  %sub109 = sub i32 %add108, 1, !dbg !8340
  %sub110 = sub i32 63, %sub109, !dbg !8340
  %sh_prom111 = zext i32 %sub110 to i64, !dbg !8340
  %shr112 = lshr i64 -1, %sh_prom111, !dbg !8340
  %and113 = and i64 %add107, %shr112, !dbg !8340
  %add114 = add i64 0, %and113, !dbg !8340
  %neg115 = xor i64 %add114, -1, !dbg !8340
  %and116 = and i64 %conv103, %neg115, !dbg !8340
  %61 = load i32, i32* %_val86, align 4, !dbg !8340
  %conv117 = sext i32 %61 to i64, !dbg !8340
  %or118 = or i64 %and116, %conv117, !dbg !8340
  %conv119 = trunc i64 %or118 to i32, !dbg !8340
  store i32 %conv119, i32* %_var83, align 4, !dbg !8340
  store i32 %conv119, i32* %tmp102, align 4, !dbg !8340
  %62 = load i32, i32* %tmp102, align 4, !dbg !8340
  store i32 %62, i32* %regval, align 4, !dbg !8344
  %63 = load i32, i32* %regval, align 4, !dbg !8345
  %64 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !8346
  %mac_regs120 = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %64, i32 0, i32 6, !dbg !8347
  %65 = load i8*, i8** %mac_regs120, align 8, !dbg !8347
  %add.ptr121 = getelementptr i8, i8* %65, i64 0, !dbg !8348
  call void @writel(i32 %63, i8* %add.ptr121) #7, !dbg !8349
  ret void, !dbg !8350
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @xlgmac_disable_tx(%struct.xlgmac_pdata* %pdata) #0 !dbg !8351 {
entry:
  %pdata.addr = alloca %struct.xlgmac_pdata*, align 8
  %channel = alloca %struct.xlgmac_channel*, align 8
  %i = alloca i32, align 4
  %regval = alloca i32, align 4
  %_var = alloca i32, align 4
  %_pos = alloca i32, align 4
  %_len = alloca i32, align 4
  %_val = alloca i32, align 4
  %tmp = alloca i32, align 4
  %_var35 = alloca i32, align 4
  %_pos36 = alloca i32, align 4
  %_len37 = alloca i32, align 4
  %_val38 = alloca i32, align 4
  %tmp54 = alloca i32, align 4
  %_var93 = alloca i32, align 4
  %_pos94 = alloca i32, align 4
  %_len95 = alloca i32, align 4
  %_val96 = alloca i32, align 4
  %tmp112 = alloca i32, align 4
  store %struct.xlgmac_pdata* %pdata, %struct.xlgmac_pdata** %pdata.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xlgmac_pdata** %pdata.addr, metadata !8352, metadata !DIExpression()), !dbg !8353
  call void @llvm.dbg.declare(metadata %struct.xlgmac_channel** %channel, metadata !8354, metadata !DIExpression()), !dbg !8355
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8356, metadata !DIExpression()), !dbg !8357
  call void @llvm.dbg.declare(metadata i32* %regval, metadata !8358, metadata !DIExpression()), !dbg !8359
  %0 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !8360
  %channel_head = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %0, i32 0, i32 9, !dbg !8361
  %1 = load %struct.xlgmac_channel*, %struct.xlgmac_channel** %channel_head, align 8, !dbg !8361
  store %struct.xlgmac_channel* %1, %struct.xlgmac_channel** %channel, align 8, !dbg !8362
  store i32 0, i32* %i, align 4, !dbg !8363
  br label %for.cond, !dbg !8365

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i32, i32* %i, align 4, !dbg !8366
  %3 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !8368
  %channel_count = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %3, i32 0, i32 10, !dbg !8369
  %4 = load i32, i32* %channel_count, align 8, !dbg !8369
  %cmp = icmp ult i32 %2, %4, !dbg !8370
  br i1 %cmp, label %for.body, label %for.end, !dbg !8371

for.body:                                         ; preds = %for.cond
  %5 = load %struct.xlgmac_channel*, %struct.xlgmac_channel** %channel, align 8, !dbg !8372
  %tx_ring = getelementptr inbounds %struct.xlgmac_channel, %struct.xlgmac_channel* %5, i32 0, i32 10, !dbg !8375
  %6 = load %struct.xlgmac_ring*, %struct.xlgmac_ring** %tx_ring, align 16, !dbg !8375
  %tobool = icmp ne %struct.xlgmac_ring* %6, null, !dbg !8372
  br i1 %tobool, label %if.end, label %if.then, !dbg !8376

if.then:                                          ; preds = %for.body
  br label %for.end, !dbg !8377

if.end:                                           ; preds = %for.body
  %7 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !8378
  %8 = load %struct.xlgmac_channel*, %struct.xlgmac_channel** %channel, align 8, !dbg !8379
  call void @xlgmac_prepare_tx_stop(%struct.xlgmac_pdata* %7, %struct.xlgmac_channel* %8) #7, !dbg !8380
  br label %for.inc, !dbg !8381

for.inc:                                          ; preds = %if.end
  %9 = load i32, i32* %i, align 4, !dbg !8382
  %inc = add i32 %9, 1, !dbg !8382
  store i32 %inc, i32* %i, align 4, !dbg !8382
  %10 = load %struct.xlgmac_channel*, %struct.xlgmac_channel** %channel, align 8, !dbg !8383
  %incdec.ptr = getelementptr %struct.xlgmac_channel, %struct.xlgmac_channel* %10, i32 1, !dbg !8383
  store %struct.xlgmac_channel* %incdec.ptr, %struct.xlgmac_channel** %channel, align 8, !dbg !8383
  br label %for.cond, !dbg !8384, !llvm.loop !8385

for.end:                                          ; preds = %if.then, %for.cond
  %11 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !8387
  %mac_regs = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %11, i32 0, i32 6, !dbg !8388
  %12 = load i8*, i8** %mac_regs, align 8, !dbg !8388
  %add.ptr = getelementptr i8, i8* %12, i64 0, !dbg !8389
  %call = call i32 @readl(i8* %add.ptr) #7, !dbg !8390
  store i32 %call, i32* %regval, align 4, !dbg !8391
  call void @llvm.dbg.declare(metadata i32* %_var, metadata !8392, metadata !DIExpression()), !dbg !8394
  %13 = load i32, i32* %regval, align 4, !dbg !8394
  store i32 %13, i32* %_var, align 4, !dbg !8394
  call void @llvm.dbg.declare(metadata i32* %_pos, metadata !8395, metadata !DIExpression()), !dbg !8394
  store i32 0, i32* %_pos, align 4, !dbg !8394
  call void @llvm.dbg.declare(metadata i32* %_len, metadata !8396, metadata !DIExpression()), !dbg !8394
  store i32 1, i32* %_len, align 4, !dbg !8394
  call void @llvm.dbg.declare(metadata i32* %_val, metadata !8397, metadata !DIExpression()), !dbg !8394
  store i32 0, i32* %_val, align 4, !dbg !8394
  %14 = load i32, i32* %_val, align 4, !dbg !8394
  %15 = load i32, i32* %_pos, align 4, !dbg !8394
  %shl = shl i32 %14, %15, !dbg !8394
  %conv = sext i32 %shl to i64, !dbg !8394
  %16 = load i32, i32* %_pos, align 4, !dbg !8394
  %sh_prom = zext i32 %16 to i64, !dbg !8394
  %shl1 = shl i64 1, %sh_prom, !dbg !8394
  %sub = sub i64 -1, %shl1, !dbg !8394
  %add = add i64 %sub, 1, !dbg !8394
  %17 = load i32, i32* %_pos, align 4, !dbg !8394
  %18 = load i32, i32* %_len, align 4, !dbg !8394
  %add2 = add i32 %17, %18, !dbg !8394
  %sub3 = sub i32 %add2, 1, !dbg !8394
  %sub4 = sub i32 63, %sub3, !dbg !8394
  %sh_prom5 = zext i32 %sub4 to i64, !dbg !8394
  %shr = lshr i64 -1, %sh_prom5, !dbg !8394
  %and = and i64 %add, %shr, !dbg !8394
  %add6 = add i64 0, %and, !dbg !8394
  %and7 = and i64 %conv, %add6, !dbg !8394
  %conv8 = trunc i64 %and7 to i32, !dbg !8394
  store i32 %conv8, i32* %_val, align 4, !dbg !8394
  %19 = load i32, i32* %_var, align 4, !dbg !8394
  %conv9 = zext i32 %19 to i64, !dbg !8394
  %20 = load i32, i32* %_pos, align 4, !dbg !8394
  %sh_prom10 = zext i32 %20 to i64, !dbg !8394
  %shl11 = shl i64 1, %sh_prom10, !dbg !8394
  %sub12 = sub i64 -1, %shl11, !dbg !8394
  %add13 = add i64 %sub12, 1, !dbg !8394
  %21 = load i32, i32* %_pos, align 4, !dbg !8394
  %22 = load i32, i32* %_len, align 4, !dbg !8394
  %add14 = add i32 %21, %22, !dbg !8394
  %sub15 = sub i32 %add14, 1, !dbg !8394
  %sub16 = sub i32 63, %sub15, !dbg !8394
  %sh_prom17 = zext i32 %sub16 to i64, !dbg !8394
  %shr18 = lshr i64 -1, %sh_prom17, !dbg !8394
  %and19 = and i64 %add13, %shr18, !dbg !8394
  %add20 = add i64 0, %and19, !dbg !8394
  %neg = xor i64 %add20, -1, !dbg !8394
  %and21 = and i64 %conv9, %neg, !dbg !8394
  %23 = load i32, i32* %_val, align 4, !dbg !8394
  %conv22 = sext i32 %23 to i64, !dbg !8394
  %or = or i64 %and21, %conv22, !dbg !8394
  %conv23 = trunc i64 %or to i32, !dbg !8394
  store i32 %conv23, i32* %_var, align 4, !dbg !8394
  store i32 %conv23, i32* %tmp, align 4, !dbg !8394
  %24 = load i32, i32* %tmp, align 4, !dbg !8394
  store i32 %24, i32* %regval, align 4, !dbg !8398
  %25 = load i32, i32* %regval, align 4, !dbg !8399
  %26 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !8400
  %mac_regs24 = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %26, i32 0, i32 6, !dbg !8401
  %27 = load i8*, i8** %mac_regs24, align 8, !dbg !8401
  %add.ptr25 = getelementptr i8, i8* %27, i64 0, !dbg !8402
  call void @writel(i32 %25, i8* %add.ptr25) #7, !dbg !8403
  store i32 0, i32* %i, align 4, !dbg !8404
  br label %for.cond26, !dbg !8406

for.cond26:                                       ; preds = %for.inc78, %for.end
  %28 = load i32, i32* %i, align 4, !dbg !8407
  %29 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !8409
  %tx_q_count = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %29, i32 0, i32 15, !dbg !8410
  %30 = load i32, i32* %tx_q_count, align 4, !dbg !8410
  %cmp27 = icmp ult i32 %28, %30, !dbg !8411
  br i1 %cmp27, label %for.body29, label %for.end80, !dbg !8412

for.body29:                                       ; preds = %for.cond26
  %31 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !8413
  %mac_regs30 = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %31, i32 0, i32 6, !dbg !8413
  %32 = load i8*, i8** %mac_regs30, align 8, !dbg !8413
  %add.ptr31 = getelementptr i8, i8* %32, i64 4352, !dbg !8413
  %33 = load i32, i32* %i, align 4, !dbg !8413
  %mul = mul i32 %33, 128, !dbg !8413
  %idx.ext = zext i32 %mul to i64, !dbg !8413
  %add.ptr32 = getelementptr i8, i8* %add.ptr31, i64 %idx.ext, !dbg !8413
  %add.ptr33 = getelementptr i8, i8* %add.ptr32, i64 0, !dbg !8413
  %call34 = call i32 @readl(i8* %add.ptr33) #7, !dbg !8415
  store i32 %call34, i32* %regval, align 4, !dbg !8416
  call void @llvm.dbg.declare(metadata i32* %_var35, metadata !8417, metadata !DIExpression()), !dbg !8419
  %34 = load i32, i32* %regval, align 4, !dbg !8419
  store i32 %34, i32* %_var35, align 4, !dbg !8419
  call void @llvm.dbg.declare(metadata i32* %_pos36, metadata !8420, metadata !DIExpression()), !dbg !8419
  store i32 2, i32* %_pos36, align 4, !dbg !8419
  call void @llvm.dbg.declare(metadata i32* %_len37, metadata !8421, metadata !DIExpression()), !dbg !8419
  store i32 2, i32* %_len37, align 4, !dbg !8419
  call void @llvm.dbg.declare(metadata i32* %_val38, metadata !8422, metadata !DIExpression()), !dbg !8419
  store i32 0, i32* %_val38, align 4, !dbg !8419
  %35 = load i32, i32* %_val38, align 4, !dbg !8419
  %36 = load i32, i32* %_pos36, align 4, !dbg !8419
  %shl39 = shl i32 %35, %36, !dbg !8419
  %conv40 = sext i32 %shl39 to i64, !dbg !8419
  %37 = load i32, i32* %_pos36, align 4, !dbg !8419
  %sh_prom41 = zext i32 %37 to i64, !dbg !8419
  %shl42 = shl i64 1, %sh_prom41, !dbg !8419
  %sub43 = sub i64 -1, %shl42, !dbg !8419
  %add44 = add i64 %sub43, 1, !dbg !8419
  %38 = load i32, i32* %_pos36, align 4, !dbg !8419
  %39 = load i32, i32* %_len37, align 4, !dbg !8419
  %add45 = add i32 %38, %39, !dbg !8419
  %sub46 = sub i32 %add45, 1, !dbg !8419
  %sub47 = sub i32 63, %sub46, !dbg !8419
  %sh_prom48 = zext i32 %sub47 to i64, !dbg !8419
  %shr49 = lshr i64 -1, %sh_prom48, !dbg !8419
  %and50 = and i64 %add44, %shr49, !dbg !8419
  %add51 = add i64 0, %and50, !dbg !8419
  %and52 = and i64 %conv40, %add51, !dbg !8419
  %conv53 = trunc i64 %and52 to i32, !dbg !8419
  store i32 %conv53, i32* %_val38, align 4, !dbg !8419
  %40 = load i32, i32* %_var35, align 4, !dbg !8419
  %conv55 = zext i32 %40 to i64, !dbg !8419
  %41 = load i32, i32* %_pos36, align 4, !dbg !8419
  %sh_prom56 = zext i32 %41 to i64, !dbg !8419
  %shl57 = shl i64 1, %sh_prom56, !dbg !8419
  %sub58 = sub i64 -1, %shl57, !dbg !8419
  %add59 = add i64 %sub58, 1, !dbg !8419
  %42 = load i32, i32* %_pos36, align 4, !dbg !8419
  %43 = load i32, i32* %_len37, align 4, !dbg !8419
  %add60 = add i32 %42, %43, !dbg !8419
  %sub61 = sub i32 %add60, 1, !dbg !8419
  %sub62 = sub i32 63, %sub61, !dbg !8419
  %sh_prom63 = zext i32 %sub62 to i64, !dbg !8419
  %shr64 = lshr i64 -1, %sh_prom63, !dbg !8419
  %and65 = and i64 %add59, %shr64, !dbg !8419
  %add66 = add i64 0, %and65, !dbg !8419
  %neg67 = xor i64 %add66, -1, !dbg !8419
  %and68 = and i64 %conv55, %neg67, !dbg !8419
  %44 = load i32, i32* %_val38, align 4, !dbg !8419
  %conv69 = sext i32 %44 to i64, !dbg !8419
  %or70 = or i64 %and68, %conv69, !dbg !8419
  %conv71 = trunc i64 %or70 to i32, !dbg !8419
  store i32 %conv71, i32* %_var35, align 4, !dbg !8419
  store i32 %conv71, i32* %tmp54, align 4, !dbg !8419
  %45 = load i32, i32* %tmp54, align 4, !dbg !8419
  store i32 %45, i32* %regval, align 4, !dbg !8423
  %46 = load i32, i32* %regval, align 4, !dbg !8424
  %47 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !8425
  %mac_regs72 = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %47, i32 0, i32 6, !dbg !8425
  %48 = load i8*, i8** %mac_regs72, align 8, !dbg !8425
  %add.ptr73 = getelementptr i8, i8* %48, i64 4352, !dbg !8425
  %49 = load i32, i32* %i, align 4, !dbg !8425
  %mul74 = mul i32 %49, 128, !dbg !8425
  %idx.ext75 = zext i32 %mul74 to i64, !dbg !8425
  %add.ptr76 = getelementptr i8, i8* %add.ptr73, i64 %idx.ext75, !dbg !8425
  %add.ptr77 = getelementptr i8, i8* %add.ptr76, i64 0, !dbg !8425
  call void @writel(i32 %46, i8* %add.ptr77) #7, !dbg !8426
  br label %for.inc78, !dbg !8427

for.inc78:                                        ; preds = %for.body29
  %50 = load i32, i32* %i, align 4, !dbg !8428
  %inc79 = add i32 %50, 1, !dbg !8428
  store i32 %inc79, i32* %i, align 4, !dbg !8428
  br label %for.cond26, !dbg !8429, !llvm.loop !8430

for.end80:                                        ; preds = %for.cond26
  %51 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !8432
  %channel_head81 = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %51, i32 0, i32 9, !dbg !8433
  %52 = load %struct.xlgmac_channel*, %struct.xlgmac_channel** %channel_head81, align 8, !dbg !8433
  store %struct.xlgmac_channel* %52, %struct.xlgmac_channel** %channel, align 8, !dbg !8434
  store i32 0, i32* %i, align 4, !dbg !8435
  br label %for.cond82, !dbg !8437

for.cond82:                                       ; preds = %for.inc132, %for.end80
  %53 = load i32, i32* %i, align 4, !dbg !8438
  %54 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !8440
  %channel_count83 = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %54, i32 0, i32 10, !dbg !8441
  %55 = load i32, i32* %channel_count83, align 8, !dbg !8441
  %cmp84 = icmp ult i32 %53, %55, !dbg !8442
  br i1 %cmp84, label %for.body86, label %for.end135, !dbg !8443

for.body86:                                       ; preds = %for.cond82
  %56 = load %struct.xlgmac_channel*, %struct.xlgmac_channel** %channel, align 8, !dbg !8444
  %tx_ring87 = getelementptr inbounds %struct.xlgmac_channel, %struct.xlgmac_channel* %56, i32 0, i32 10, !dbg !8447
  %57 = load %struct.xlgmac_ring*, %struct.xlgmac_ring** %tx_ring87, align 16, !dbg !8447
  %tobool88 = icmp ne %struct.xlgmac_ring* %57, null, !dbg !8444
  br i1 %tobool88, label %if.end90, label %if.then89, !dbg !8448

if.then89:                                        ; preds = %for.body86
  br label %for.end135, !dbg !8449

if.end90:                                         ; preds = %for.body86
  %58 = load %struct.xlgmac_channel*, %struct.xlgmac_channel** %channel, align 8, !dbg !8450
  %dma_regs = getelementptr inbounds %struct.xlgmac_channel, %struct.xlgmac_channel* %58, i32 0, i32 3, !dbg !8450
  %59 = load i8*, i8** %dma_regs, align 32, !dbg !8450
  %add.ptr91 = getelementptr i8, i8* %59, i64 4, !dbg !8450
  %call92 = call i32 @readl(i8* %add.ptr91) #7, !dbg !8451
  store i32 %call92, i32* %regval, align 4, !dbg !8452
  call void @llvm.dbg.declare(metadata i32* %_var93, metadata !8453, metadata !DIExpression()), !dbg !8455
  %60 = load i32, i32* %regval, align 4, !dbg !8455
  store i32 %60, i32* %_var93, align 4, !dbg !8455
  call void @llvm.dbg.declare(metadata i32* %_pos94, metadata !8456, metadata !DIExpression()), !dbg !8455
  store i32 0, i32* %_pos94, align 4, !dbg !8455
  call void @llvm.dbg.declare(metadata i32* %_len95, metadata !8457, metadata !DIExpression()), !dbg !8455
  store i32 1, i32* %_len95, align 4, !dbg !8455
  call void @llvm.dbg.declare(metadata i32* %_val96, metadata !8458, metadata !DIExpression()), !dbg !8455
  store i32 0, i32* %_val96, align 4, !dbg !8455
  %61 = load i32, i32* %_val96, align 4, !dbg !8455
  %62 = load i32, i32* %_pos94, align 4, !dbg !8455
  %shl97 = shl i32 %61, %62, !dbg !8455
  %conv98 = sext i32 %shl97 to i64, !dbg !8455
  %63 = load i32, i32* %_pos94, align 4, !dbg !8455
  %sh_prom99 = zext i32 %63 to i64, !dbg !8455
  %shl100 = shl i64 1, %sh_prom99, !dbg !8455
  %sub101 = sub i64 -1, %shl100, !dbg !8455
  %add102 = add i64 %sub101, 1, !dbg !8455
  %64 = load i32, i32* %_pos94, align 4, !dbg !8455
  %65 = load i32, i32* %_len95, align 4, !dbg !8455
  %add103 = add i32 %64, %65, !dbg !8455
  %sub104 = sub i32 %add103, 1, !dbg !8455
  %sub105 = sub i32 63, %sub104, !dbg !8455
  %sh_prom106 = zext i32 %sub105 to i64, !dbg !8455
  %shr107 = lshr i64 -1, %sh_prom106, !dbg !8455
  %and108 = and i64 %add102, %shr107, !dbg !8455
  %add109 = add i64 0, %and108, !dbg !8455
  %and110 = and i64 %conv98, %add109, !dbg !8455
  %conv111 = trunc i64 %and110 to i32, !dbg !8455
  store i32 %conv111, i32* %_val96, align 4, !dbg !8455
  %66 = load i32, i32* %_var93, align 4, !dbg !8455
  %conv113 = zext i32 %66 to i64, !dbg !8455
  %67 = load i32, i32* %_pos94, align 4, !dbg !8455
  %sh_prom114 = zext i32 %67 to i64, !dbg !8455
  %shl115 = shl i64 1, %sh_prom114, !dbg !8455
  %sub116 = sub i64 -1, %shl115, !dbg !8455
  %add117 = add i64 %sub116, 1, !dbg !8455
  %68 = load i32, i32* %_pos94, align 4, !dbg !8455
  %69 = load i32, i32* %_len95, align 4, !dbg !8455
  %add118 = add i32 %68, %69, !dbg !8455
  %sub119 = sub i32 %add118, 1, !dbg !8455
  %sub120 = sub i32 63, %sub119, !dbg !8455
  %sh_prom121 = zext i32 %sub120 to i64, !dbg !8455
  %shr122 = lshr i64 -1, %sh_prom121, !dbg !8455
  %and123 = and i64 %add117, %shr122, !dbg !8455
  %add124 = add i64 0, %and123, !dbg !8455
  %neg125 = xor i64 %add124, -1, !dbg !8455
  %and126 = and i64 %conv113, %neg125, !dbg !8455
  %70 = load i32, i32* %_val96, align 4, !dbg !8455
  %conv127 = sext i32 %70 to i64, !dbg !8455
  %or128 = or i64 %and126, %conv127, !dbg !8455
  %conv129 = trunc i64 %or128 to i32, !dbg !8455
  store i32 %conv129, i32* %_var93, align 4, !dbg !8455
  store i32 %conv129, i32* %tmp112, align 4, !dbg !8455
  %71 = load i32, i32* %tmp112, align 4, !dbg !8455
  store i32 %71, i32* %regval, align 4, !dbg !8459
  %72 = load i32, i32* %regval, align 4, !dbg !8460
  %73 = load %struct.xlgmac_channel*, %struct.xlgmac_channel** %channel, align 8, !dbg !8461
  %dma_regs130 = getelementptr inbounds %struct.xlgmac_channel, %struct.xlgmac_channel* %73, i32 0, i32 3, !dbg !8461
  %74 = load i8*, i8** %dma_regs130, align 32, !dbg !8461
  %add.ptr131 = getelementptr i8, i8* %74, i64 4, !dbg !8461
  call void @writel(i32 %72, i8* %add.ptr131) #7, !dbg !8462
  br label %for.inc132, !dbg !8463

for.inc132:                                       ; preds = %if.end90
  %75 = load i32, i32* %i, align 4, !dbg !8464
  %inc133 = add i32 %75, 1, !dbg !8464
  store i32 %inc133, i32* %i, align 4, !dbg !8464
  %76 = load %struct.xlgmac_channel*, %struct.xlgmac_channel** %channel, align 8, !dbg !8465
  %incdec.ptr134 = getelementptr %struct.xlgmac_channel, %struct.xlgmac_channel* %76, i32 1, !dbg !8465
  store %struct.xlgmac_channel* %incdec.ptr134, %struct.xlgmac_channel** %channel, align 8, !dbg !8465
  br label %for.cond82, !dbg !8466, !llvm.loop !8467

for.end135:                                       ; preds = %if.then89, %for.cond82
  ret void, !dbg !8469
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @xlgmac_enable_rx(%struct.xlgmac_pdata* %pdata) #0 !dbg !8470 {
entry:
  %pdata.addr = alloca %struct.xlgmac_pdata*, align 8
  %channel = alloca %struct.xlgmac_channel*, align 8
  %regval = alloca i32, align 4
  %i = alloca i32, align 4
  %_var = alloca i32, align 4
  %_pos = alloca i32, align 4
  %_len = alloca i32, align 4
  %_val = alloca i32, align 4
  %tmp = alloca i32, align 4
  %_var40 = alloca i32, align 4
  %_pos41 = alloca i32, align 4
  %_len42 = alloca i32, align 4
  %_val43 = alloca i32, align 4
  %tmp59 = alloca i32, align 4
  %_var77 = alloca i32, align 4
  %_pos78 = alloca i32, align 4
  %_len79 = alloca i32, align 4
  %_val80 = alloca i32, align 4
  %tmp96 = alloca i32, align 4
  %_var114 = alloca i32, align 4
  %_pos115 = alloca i32, align 4
  %_len116 = alloca i32, align 4
  %_val117 = alloca i32, align 4
  %tmp133 = alloca i32, align 4
  %_var151 = alloca i32, align 4
  %_pos152 = alloca i32, align 4
  %_len153 = alloca i32, align 4
  %_val154 = alloca i32, align 4
  %tmp170 = alloca i32, align 4
  store %struct.xlgmac_pdata* %pdata, %struct.xlgmac_pdata** %pdata.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xlgmac_pdata** %pdata.addr, metadata !8471, metadata !DIExpression()), !dbg !8472
  call void @llvm.dbg.declare(metadata %struct.xlgmac_channel** %channel, metadata !8473, metadata !DIExpression()), !dbg !8474
  call void @llvm.dbg.declare(metadata i32* %regval, metadata !8475, metadata !DIExpression()), !dbg !8476
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8477, metadata !DIExpression()), !dbg !8478
  %0 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !8479
  %channel_head = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %0, i32 0, i32 9, !dbg !8480
  %1 = load %struct.xlgmac_channel*, %struct.xlgmac_channel** %channel_head, align 8, !dbg !8480
  store %struct.xlgmac_channel* %1, %struct.xlgmac_channel** %channel, align 8, !dbg !8481
  store i32 0, i32* %i, align 4, !dbg !8482
  br label %for.cond, !dbg !8484

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i32, i32* %i, align 4, !dbg !8485
  %3 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !8487
  %channel_count = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %3, i32 0, i32 10, !dbg !8488
  %4 = load i32, i32* %channel_count, align 8, !dbg !8488
  %cmp = icmp ult i32 %2, %4, !dbg !8489
  br i1 %cmp, label %for.body, label %for.end, !dbg !8490

for.body:                                         ; preds = %for.cond
  %5 = load %struct.xlgmac_channel*, %struct.xlgmac_channel** %channel, align 8, !dbg !8491
  %rx_ring = getelementptr inbounds %struct.xlgmac_channel, %struct.xlgmac_channel* %5, i32 0, i32 11, !dbg !8494
  %6 = load %struct.xlgmac_ring*, %struct.xlgmac_ring** %rx_ring, align 8, !dbg !8494
  %tobool = icmp ne %struct.xlgmac_ring* %6, null, !dbg !8491
  br i1 %tobool, label %if.end, label %if.then, !dbg !8495

if.then:                                          ; preds = %for.body
  br label %for.end, !dbg !8496

if.end:                                           ; preds = %for.body
  %7 = load %struct.xlgmac_channel*, %struct.xlgmac_channel** %channel, align 8, !dbg !8497
  %dma_regs = getelementptr inbounds %struct.xlgmac_channel, %struct.xlgmac_channel* %7, i32 0, i32 3, !dbg !8497
  %8 = load i8*, i8** %dma_regs, align 32, !dbg !8497
  %add.ptr = getelementptr i8, i8* %8, i64 8, !dbg !8497
  %call = call i32 @readl(i8* %add.ptr) #7, !dbg !8498
  store i32 %call, i32* %regval, align 4, !dbg !8499
  call void @llvm.dbg.declare(metadata i32* %_var, metadata !8500, metadata !DIExpression()), !dbg !8502
  %9 = load i32, i32* %regval, align 4, !dbg !8502
  store i32 %9, i32* %_var, align 4, !dbg !8502
  call void @llvm.dbg.declare(metadata i32* %_pos, metadata !8503, metadata !DIExpression()), !dbg !8502
  store i32 0, i32* %_pos, align 4, !dbg !8502
  call void @llvm.dbg.declare(metadata i32* %_len, metadata !8504, metadata !DIExpression()), !dbg !8502
  store i32 1, i32* %_len, align 4, !dbg !8502
  call void @llvm.dbg.declare(metadata i32* %_val, metadata !8505, metadata !DIExpression()), !dbg !8502
  store i32 1, i32* %_val, align 4, !dbg !8502
  %10 = load i32, i32* %_val, align 4, !dbg !8502
  %11 = load i32, i32* %_pos, align 4, !dbg !8502
  %shl = shl i32 %10, %11, !dbg !8502
  %conv = sext i32 %shl to i64, !dbg !8502
  %12 = load i32, i32* %_pos, align 4, !dbg !8502
  %sh_prom = zext i32 %12 to i64, !dbg !8502
  %shl1 = shl i64 1, %sh_prom, !dbg !8502
  %sub = sub i64 -1, %shl1, !dbg !8502
  %add = add i64 %sub, 1, !dbg !8502
  %13 = load i32, i32* %_pos, align 4, !dbg !8502
  %14 = load i32, i32* %_len, align 4, !dbg !8502
  %add2 = add i32 %13, %14, !dbg !8502
  %sub3 = sub i32 %add2, 1, !dbg !8502
  %sub4 = sub i32 63, %sub3, !dbg !8502
  %sh_prom5 = zext i32 %sub4 to i64, !dbg !8502
  %shr = lshr i64 -1, %sh_prom5, !dbg !8502
  %and = and i64 %add, %shr, !dbg !8502
  %add6 = add i64 0, %and, !dbg !8502
  %and7 = and i64 %conv, %add6, !dbg !8502
  %conv8 = trunc i64 %and7 to i32, !dbg !8502
  store i32 %conv8, i32* %_val, align 4, !dbg !8502
  %15 = load i32, i32* %_var, align 4, !dbg !8502
  %conv9 = zext i32 %15 to i64, !dbg !8502
  %16 = load i32, i32* %_pos, align 4, !dbg !8502
  %sh_prom10 = zext i32 %16 to i64, !dbg !8502
  %shl11 = shl i64 1, %sh_prom10, !dbg !8502
  %sub12 = sub i64 -1, %shl11, !dbg !8502
  %add13 = add i64 %sub12, 1, !dbg !8502
  %17 = load i32, i32* %_pos, align 4, !dbg !8502
  %18 = load i32, i32* %_len, align 4, !dbg !8502
  %add14 = add i32 %17, %18, !dbg !8502
  %sub15 = sub i32 %add14, 1, !dbg !8502
  %sub16 = sub i32 63, %sub15, !dbg !8502
  %sh_prom17 = zext i32 %sub16 to i64, !dbg !8502
  %shr18 = lshr i64 -1, %sh_prom17, !dbg !8502
  %and19 = and i64 %add13, %shr18, !dbg !8502
  %add20 = add i64 0, %and19, !dbg !8502
  %neg = xor i64 %add20, -1, !dbg !8502
  %and21 = and i64 %conv9, %neg, !dbg !8502
  %19 = load i32, i32* %_val, align 4, !dbg !8502
  %conv22 = sext i32 %19 to i64, !dbg !8502
  %or = or i64 %and21, %conv22, !dbg !8502
  %conv23 = trunc i64 %or to i32, !dbg !8502
  store i32 %conv23, i32* %_var, align 4, !dbg !8502
  store i32 %conv23, i32* %tmp, align 4, !dbg !8502
  %20 = load i32, i32* %tmp, align 4, !dbg !8502
  store i32 %20, i32* %regval, align 4, !dbg !8506
  %21 = load i32, i32* %regval, align 4, !dbg !8507
  %22 = load %struct.xlgmac_channel*, %struct.xlgmac_channel** %channel, align 8, !dbg !8508
  %dma_regs24 = getelementptr inbounds %struct.xlgmac_channel, %struct.xlgmac_channel* %22, i32 0, i32 3, !dbg !8508
  %23 = load i8*, i8** %dma_regs24, align 32, !dbg !8508
  %add.ptr25 = getelementptr i8, i8* %23, i64 8, !dbg !8508
  call void @writel(i32 %21, i8* %add.ptr25) #7, !dbg !8509
  br label %for.inc, !dbg !8510

for.inc:                                          ; preds = %if.end
  %24 = load i32, i32* %i, align 4, !dbg !8511
  %inc = add i32 %24, 1, !dbg !8511
  store i32 %inc, i32* %i, align 4, !dbg !8511
  %25 = load %struct.xlgmac_channel*, %struct.xlgmac_channel** %channel, align 8, !dbg !8512
  %incdec.ptr = getelementptr %struct.xlgmac_channel, %struct.xlgmac_channel* %25, i32 1, !dbg !8512
  store %struct.xlgmac_channel* %incdec.ptr, %struct.xlgmac_channel** %channel, align 8, !dbg !8512
  br label %for.cond, !dbg !8513, !llvm.loop !8514

for.end:                                          ; preds = %if.then, %for.cond
  store i32 0, i32* %regval, align 4, !dbg !8516
  store i32 0, i32* %i, align 4, !dbg !8517
  br label %for.cond26, !dbg !8519

for.cond26:                                       ; preds = %for.inc33, %for.end
  %26 = load i32, i32* %i, align 4, !dbg !8520
  %27 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !8522
  %rx_q_count = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %27, i32 0, i32 16, !dbg !8523
  %28 = load i32, i32* %rx_q_count, align 8, !dbg !8523
  %cmp27 = icmp ult i32 %26, %28, !dbg !8524
  br i1 %cmp27, label %for.body29, label %for.end35, !dbg !8525

for.body29:                                       ; preds = %for.cond26
  %29 = load i32, i32* %i, align 4, !dbg !8526
  %shl30 = shl i32 %29, 1, !dbg !8527
  %shl31 = shl i32 2, %shl30, !dbg !8528
  %30 = load i32, i32* %regval, align 4, !dbg !8529
  %or32 = or i32 %30, %shl31, !dbg !8529
  store i32 %or32, i32* %regval, align 4, !dbg !8529
  br label %for.inc33, !dbg !8530

for.inc33:                                        ; preds = %for.body29
  %31 = load i32, i32* %i, align 4, !dbg !8531
  %inc34 = add i32 %31, 1, !dbg !8531
  store i32 %inc34, i32* %i, align 4, !dbg !8531
  br label %for.cond26, !dbg !8532, !llvm.loop !8533

for.end35:                                        ; preds = %for.cond26
  %32 = load i32, i32* %regval, align 4, !dbg !8535
  %33 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !8536
  %mac_regs = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %33, i32 0, i32 6, !dbg !8537
  %34 = load i8*, i8** %mac_regs, align 8, !dbg !8537
  %add.ptr36 = getelementptr i8, i8* %34, i64 160, !dbg !8538
  call void @writel(i32 %32, i8* %add.ptr36) #7, !dbg !8539
  %35 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !8540
  %mac_regs37 = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %35, i32 0, i32 6, !dbg !8541
  %36 = load i8*, i8** %mac_regs37, align 8, !dbg !8541
  %add.ptr38 = getelementptr i8, i8* %36, i64 4, !dbg !8542
  %call39 = call i32 @readl(i8* %add.ptr38) #7, !dbg !8543
  store i32 %call39, i32* %regval, align 4, !dbg !8544
  call void @llvm.dbg.declare(metadata i32* %_var40, metadata !8545, metadata !DIExpression()), !dbg !8547
  %37 = load i32, i32* %regval, align 4, !dbg !8547
  store i32 %37, i32* %_var40, align 4, !dbg !8547
  call void @llvm.dbg.declare(metadata i32* %_pos41, metadata !8548, metadata !DIExpression()), !dbg !8547
  store i32 3, i32* %_pos41, align 4, !dbg !8547
  call void @llvm.dbg.declare(metadata i32* %_len42, metadata !8549, metadata !DIExpression()), !dbg !8547
  store i32 1, i32* %_len42, align 4, !dbg !8547
  call void @llvm.dbg.declare(metadata i32* %_val43, metadata !8550, metadata !DIExpression()), !dbg !8547
  store i32 1, i32* %_val43, align 4, !dbg !8547
  %38 = load i32, i32* %_val43, align 4, !dbg !8547
  %39 = load i32, i32* %_pos41, align 4, !dbg !8547
  %shl44 = shl i32 %38, %39, !dbg !8547
  %conv45 = sext i32 %shl44 to i64, !dbg !8547
  %40 = load i32, i32* %_pos41, align 4, !dbg !8547
  %sh_prom46 = zext i32 %40 to i64, !dbg !8547
  %shl47 = shl i64 1, %sh_prom46, !dbg !8547
  %sub48 = sub i64 -1, %shl47, !dbg !8547
  %add49 = add i64 %sub48, 1, !dbg !8547
  %41 = load i32, i32* %_pos41, align 4, !dbg !8547
  %42 = load i32, i32* %_len42, align 4, !dbg !8547
  %add50 = add i32 %41, %42, !dbg !8547
  %sub51 = sub i32 %add50, 1, !dbg !8547
  %sub52 = sub i32 63, %sub51, !dbg !8547
  %sh_prom53 = zext i32 %sub52 to i64, !dbg !8547
  %shr54 = lshr i64 -1, %sh_prom53, !dbg !8547
  %and55 = and i64 %add49, %shr54, !dbg !8547
  %add56 = add i64 0, %and55, !dbg !8547
  %and57 = and i64 %conv45, %add56, !dbg !8547
  %conv58 = trunc i64 %and57 to i32, !dbg !8547
  store i32 %conv58, i32* %_val43, align 4, !dbg !8547
  %43 = load i32, i32* %_var40, align 4, !dbg !8547
  %conv60 = zext i32 %43 to i64, !dbg !8547
  %44 = load i32, i32* %_pos41, align 4, !dbg !8547
  %sh_prom61 = zext i32 %44 to i64, !dbg !8547
  %shl62 = shl i64 1, %sh_prom61, !dbg !8547
  %sub63 = sub i64 -1, %shl62, !dbg !8547
  %add64 = add i64 %sub63, 1, !dbg !8547
  %45 = load i32, i32* %_pos41, align 4, !dbg !8547
  %46 = load i32, i32* %_len42, align 4, !dbg !8547
  %add65 = add i32 %45, %46, !dbg !8547
  %sub66 = sub i32 %add65, 1, !dbg !8547
  %sub67 = sub i32 63, %sub66, !dbg !8547
  %sh_prom68 = zext i32 %sub67 to i64, !dbg !8547
  %shr69 = lshr i64 -1, %sh_prom68, !dbg !8547
  %and70 = and i64 %add64, %shr69, !dbg !8547
  %add71 = add i64 0, %and70, !dbg !8547
  %neg72 = xor i64 %add71, -1, !dbg !8547
  %and73 = and i64 %conv60, %neg72, !dbg !8547
  %47 = load i32, i32* %_val43, align 4, !dbg !8547
  %conv74 = sext i32 %47 to i64, !dbg !8547
  %or75 = or i64 %and73, %conv74, !dbg !8547
  %conv76 = trunc i64 %or75 to i32, !dbg !8547
  store i32 %conv76, i32* %_var40, align 4, !dbg !8547
  store i32 %conv76, i32* %tmp59, align 4, !dbg !8547
  %48 = load i32, i32* %tmp59, align 4, !dbg !8547
  store i32 %48, i32* %regval, align 4, !dbg !8551
  call void @llvm.dbg.declare(metadata i32* %_var77, metadata !8552, metadata !DIExpression()), !dbg !8554
  %49 = load i32, i32* %regval, align 4, !dbg !8554
  store i32 %49, i32* %_var77, align 4, !dbg !8554
  call void @llvm.dbg.declare(metadata i32* %_pos78, metadata !8555, metadata !DIExpression()), !dbg !8554
  store i32 2, i32* %_pos78, align 4, !dbg !8554
  call void @llvm.dbg.declare(metadata i32* %_len79, metadata !8556, metadata !DIExpression()), !dbg !8554
  store i32 1, i32* %_len79, align 4, !dbg !8554
  call void @llvm.dbg.declare(metadata i32* %_val80, metadata !8557, metadata !DIExpression()), !dbg !8554
  store i32 1, i32* %_val80, align 4, !dbg !8554
  %50 = load i32, i32* %_val80, align 4, !dbg !8554
  %51 = load i32, i32* %_pos78, align 4, !dbg !8554
  %shl81 = shl i32 %50, %51, !dbg !8554
  %conv82 = sext i32 %shl81 to i64, !dbg !8554
  %52 = load i32, i32* %_pos78, align 4, !dbg !8554
  %sh_prom83 = zext i32 %52 to i64, !dbg !8554
  %shl84 = shl i64 1, %sh_prom83, !dbg !8554
  %sub85 = sub i64 -1, %shl84, !dbg !8554
  %add86 = add i64 %sub85, 1, !dbg !8554
  %53 = load i32, i32* %_pos78, align 4, !dbg !8554
  %54 = load i32, i32* %_len79, align 4, !dbg !8554
  %add87 = add i32 %53, %54, !dbg !8554
  %sub88 = sub i32 %add87, 1, !dbg !8554
  %sub89 = sub i32 63, %sub88, !dbg !8554
  %sh_prom90 = zext i32 %sub89 to i64, !dbg !8554
  %shr91 = lshr i64 -1, %sh_prom90, !dbg !8554
  %and92 = and i64 %add86, %shr91, !dbg !8554
  %add93 = add i64 0, %and92, !dbg !8554
  %and94 = and i64 %conv82, %add93, !dbg !8554
  %conv95 = trunc i64 %and94 to i32, !dbg !8554
  store i32 %conv95, i32* %_val80, align 4, !dbg !8554
  %55 = load i32, i32* %_var77, align 4, !dbg !8554
  %conv97 = zext i32 %55 to i64, !dbg !8554
  %56 = load i32, i32* %_pos78, align 4, !dbg !8554
  %sh_prom98 = zext i32 %56 to i64, !dbg !8554
  %shl99 = shl i64 1, %sh_prom98, !dbg !8554
  %sub100 = sub i64 -1, %shl99, !dbg !8554
  %add101 = add i64 %sub100, 1, !dbg !8554
  %57 = load i32, i32* %_pos78, align 4, !dbg !8554
  %58 = load i32, i32* %_len79, align 4, !dbg !8554
  %add102 = add i32 %57, %58, !dbg !8554
  %sub103 = sub i32 %add102, 1, !dbg !8554
  %sub104 = sub i32 63, %sub103, !dbg !8554
  %sh_prom105 = zext i32 %sub104 to i64, !dbg !8554
  %shr106 = lshr i64 -1, %sh_prom105, !dbg !8554
  %and107 = and i64 %add101, %shr106, !dbg !8554
  %add108 = add i64 0, %and107, !dbg !8554
  %neg109 = xor i64 %add108, -1, !dbg !8554
  %and110 = and i64 %conv97, %neg109, !dbg !8554
  %59 = load i32, i32* %_val80, align 4, !dbg !8554
  %conv111 = sext i32 %59 to i64, !dbg !8554
  %or112 = or i64 %and110, %conv111, !dbg !8554
  %conv113 = trunc i64 %or112 to i32, !dbg !8554
  store i32 %conv113, i32* %_var77, align 4, !dbg !8554
  store i32 %conv113, i32* %tmp96, align 4, !dbg !8554
  %60 = load i32, i32* %tmp96, align 4, !dbg !8554
  store i32 %60, i32* %regval, align 4, !dbg !8558
  call void @llvm.dbg.declare(metadata i32* %_var114, metadata !8559, metadata !DIExpression()), !dbg !8561
  %61 = load i32, i32* %regval, align 4, !dbg !8561
  store i32 %61, i32* %_var114, align 4, !dbg !8561
  call void @llvm.dbg.declare(metadata i32* %_pos115, metadata !8562, metadata !DIExpression()), !dbg !8561
  store i32 1, i32* %_pos115, align 4, !dbg !8561
  call void @llvm.dbg.declare(metadata i32* %_len116, metadata !8563, metadata !DIExpression()), !dbg !8561
  store i32 1, i32* %_len116, align 4, !dbg !8561
  call void @llvm.dbg.declare(metadata i32* %_val117, metadata !8564, metadata !DIExpression()), !dbg !8561
  store i32 1, i32* %_val117, align 4, !dbg !8561
  %62 = load i32, i32* %_val117, align 4, !dbg !8561
  %63 = load i32, i32* %_pos115, align 4, !dbg !8561
  %shl118 = shl i32 %62, %63, !dbg !8561
  %conv119 = sext i32 %shl118 to i64, !dbg !8561
  %64 = load i32, i32* %_pos115, align 4, !dbg !8561
  %sh_prom120 = zext i32 %64 to i64, !dbg !8561
  %shl121 = shl i64 1, %sh_prom120, !dbg !8561
  %sub122 = sub i64 -1, %shl121, !dbg !8561
  %add123 = add i64 %sub122, 1, !dbg !8561
  %65 = load i32, i32* %_pos115, align 4, !dbg !8561
  %66 = load i32, i32* %_len116, align 4, !dbg !8561
  %add124 = add i32 %65, %66, !dbg !8561
  %sub125 = sub i32 %add124, 1, !dbg !8561
  %sub126 = sub i32 63, %sub125, !dbg !8561
  %sh_prom127 = zext i32 %sub126 to i64, !dbg !8561
  %shr128 = lshr i64 -1, %sh_prom127, !dbg !8561
  %and129 = and i64 %add123, %shr128, !dbg !8561
  %add130 = add i64 0, %and129, !dbg !8561
  %and131 = and i64 %conv119, %add130, !dbg !8561
  %conv132 = trunc i64 %and131 to i32, !dbg !8561
  store i32 %conv132, i32* %_val117, align 4, !dbg !8561
  %67 = load i32, i32* %_var114, align 4, !dbg !8561
  %conv134 = zext i32 %67 to i64, !dbg !8561
  %68 = load i32, i32* %_pos115, align 4, !dbg !8561
  %sh_prom135 = zext i32 %68 to i64, !dbg !8561
  %shl136 = shl i64 1, %sh_prom135, !dbg !8561
  %sub137 = sub i64 -1, %shl136, !dbg !8561
  %add138 = add i64 %sub137, 1, !dbg !8561
  %69 = load i32, i32* %_pos115, align 4, !dbg !8561
  %70 = load i32, i32* %_len116, align 4, !dbg !8561
  %add139 = add i32 %69, %70, !dbg !8561
  %sub140 = sub i32 %add139, 1, !dbg !8561
  %sub141 = sub i32 63, %sub140, !dbg !8561
  %sh_prom142 = zext i32 %sub141 to i64, !dbg !8561
  %shr143 = lshr i64 -1, %sh_prom142, !dbg !8561
  %and144 = and i64 %add138, %shr143, !dbg !8561
  %add145 = add i64 0, %and144, !dbg !8561
  %neg146 = xor i64 %add145, -1, !dbg !8561
  %and147 = and i64 %conv134, %neg146, !dbg !8561
  %71 = load i32, i32* %_val117, align 4, !dbg !8561
  %conv148 = sext i32 %71 to i64, !dbg !8561
  %or149 = or i64 %and147, %conv148, !dbg !8561
  %conv150 = trunc i64 %or149 to i32, !dbg !8561
  store i32 %conv150, i32* %_var114, align 4, !dbg !8561
  store i32 %conv150, i32* %tmp133, align 4, !dbg !8561
  %72 = load i32, i32* %tmp133, align 4, !dbg !8561
  store i32 %72, i32* %regval, align 4, !dbg !8565
  call void @llvm.dbg.declare(metadata i32* %_var151, metadata !8566, metadata !DIExpression()), !dbg !8568
  %73 = load i32, i32* %regval, align 4, !dbg !8568
  store i32 %73, i32* %_var151, align 4, !dbg !8568
  call void @llvm.dbg.declare(metadata i32* %_pos152, metadata !8569, metadata !DIExpression()), !dbg !8568
  store i32 0, i32* %_pos152, align 4, !dbg !8568
  call void @llvm.dbg.declare(metadata i32* %_len153, metadata !8570, metadata !DIExpression()), !dbg !8568
  store i32 1, i32* %_len153, align 4, !dbg !8568
  call void @llvm.dbg.declare(metadata i32* %_val154, metadata !8571, metadata !DIExpression()), !dbg !8568
  store i32 1, i32* %_val154, align 4, !dbg !8568
  %74 = load i32, i32* %_val154, align 4, !dbg !8568
  %75 = load i32, i32* %_pos152, align 4, !dbg !8568
  %shl155 = shl i32 %74, %75, !dbg !8568
  %conv156 = sext i32 %shl155 to i64, !dbg !8568
  %76 = load i32, i32* %_pos152, align 4, !dbg !8568
  %sh_prom157 = zext i32 %76 to i64, !dbg !8568
  %shl158 = shl i64 1, %sh_prom157, !dbg !8568
  %sub159 = sub i64 -1, %shl158, !dbg !8568
  %add160 = add i64 %sub159, 1, !dbg !8568
  %77 = load i32, i32* %_pos152, align 4, !dbg !8568
  %78 = load i32, i32* %_len153, align 4, !dbg !8568
  %add161 = add i32 %77, %78, !dbg !8568
  %sub162 = sub i32 %add161, 1, !dbg !8568
  %sub163 = sub i32 63, %sub162, !dbg !8568
  %sh_prom164 = zext i32 %sub163 to i64, !dbg !8568
  %shr165 = lshr i64 -1, %sh_prom164, !dbg !8568
  %and166 = and i64 %add160, %shr165, !dbg !8568
  %add167 = add i64 0, %and166, !dbg !8568
  %and168 = and i64 %conv156, %add167, !dbg !8568
  %conv169 = trunc i64 %and168 to i32, !dbg !8568
  store i32 %conv169, i32* %_val154, align 4, !dbg !8568
  %79 = load i32, i32* %_var151, align 4, !dbg !8568
  %conv171 = zext i32 %79 to i64, !dbg !8568
  %80 = load i32, i32* %_pos152, align 4, !dbg !8568
  %sh_prom172 = zext i32 %80 to i64, !dbg !8568
  %shl173 = shl i64 1, %sh_prom172, !dbg !8568
  %sub174 = sub i64 -1, %shl173, !dbg !8568
  %add175 = add i64 %sub174, 1, !dbg !8568
  %81 = load i32, i32* %_pos152, align 4, !dbg !8568
  %82 = load i32, i32* %_len153, align 4, !dbg !8568
  %add176 = add i32 %81, %82, !dbg !8568
  %sub177 = sub i32 %add176, 1, !dbg !8568
  %sub178 = sub i32 63, %sub177, !dbg !8568
  %sh_prom179 = zext i32 %sub178 to i64, !dbg !8568
  %shr180 = lshr i64 -1, %sh_prom179, !dbg !8568
  %and181 = and i64 %add175, %shr180, !dbg !8568
  %add182 = add i64 0, %and181, !dbg !8568
  %neg183 = xor i64 %add182, -1, !dbg !8568
  %and184 = and i64 %conv171, %neg183, !dbg !8568
  %83 = load i32, i32* %_val154, align 4, !dbg !8568
  %conv185 = sext i32 %83 to i64, !dbg !8568
  %or186 = or i64 %and184, %conv185, !dbg !8568
  %conv187 = trunc i64 %or186 to i32, !dbg !8568
  store i32 %conv187, i32* %_var151, align 4, !dbg !8568
  store i32 %conv187, i32* %tmp170, align 4, !dbg !8568
  %84 = load i32, i32* %tmp170, align 4, !dbg !8568
  store i32 %84, i32* %regval, align 4, !dbg !8572
  %85 = load i32, i32* %regval, align 4, !dbg !8573
  %86 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !8574
  %mac_regs188 = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %86, i32 0, i32 6, !dbg !8575
  %87 = load i8*, i8** %mac_regs188, align 8, !dbg !8575
  %add.ptr189 = getelementptr i8, i8* %87, i64 4, !dbg !8576
  call void @writel(i32 %85, i8* %add.ptr189) #7, !dbg !8577
  ret void, !dbg !8578
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @xlgmac_disable_rx(%struct.xlgmac_pdata* %pdata) #0 !dbg !8579 {
entry:
  %pdata.addr = alloca %struct.xlgmac_pdata*, align 8
  %channel = alloca %struct.xlgmac_channel*, align 8
  %i = alloca i32, align 4
  %regval = alloca i32, align 4
  %_var = alloca i32, align 4
  %_pos = alloca i32, align 4
  %_len = alloca i32, align 4
  %_val = alloca i32, align 4
  %tmp = alloca i32, align 4
  %_var24 = alloca i32, align 4
  %_pos25 = alloca i32, align 4
  %_len26 = alloca i32, align 4
  %_val27 = alloca i32, align 4
  %tmp43 = alloca i32, align 4
  %_var61 = alloca i32, align 4
  %_pos62 = alloca i32, align 4
  %_len63 = alloca i32, align 4
  %_val64 = alloca i32, align 4
  %tmp80 = alloca i32, align 4
  %_var98 = alloca i32, align 4
  %_pos99 = alloca i32, align 4
  %_len100 = alloca i32, align 4
  %_val101 = alloca i32, align 4
  %tmp117 = alloca i32, align 4
  %_var146 = alloca i32, align 4
  %_pos147 = alloca i32, align 4
  %_len148 = alloca i32, align 4
  %_val149 = alloca i32, align 4
  %tmp165 = alloca i32, align 4
  store %struct.xlgmac_pdata* %pdata, %struct.xlgmac_pdata** %pdata.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xlgmac_pdata** %pdata.addr, metadata !8580, metadata !DIExpression()), !dbg !8581
  call void @llvm.dbg.declare(metadata %struct.xlgmac_channel** %channel, metadata !8582, metadata !DIExpression()), !dbg !8583
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8584, metadata !DIExpression()), !dbg !8585
  call void @llvm.dbg.declare(metadata i32* %regval, metadata !8586, metadata !DIExpression()), !dbg !8587
  %0 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !8588
  %mac_regs = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %0, i32 0, i32 6, !dbg !8589
  %1 = load i8*, i8** %mac_regs, align 8, !dbg !8589
  %add.ptr = getelementptr i8, i8* %1, i64 4, !dbg !8590
  %call = call i32 @readl(i8* %add.ptr) #7, !dbg !8591
  store i32 %call, i32* %regval, align 4, !dbg !8592
  call void @llvm.dbg.declare(metadata i32* %_var, metadata !8593, metadata !DIExpression()), !dbg !8595
  %2 = load i32, i32* %regval, align 4, !dbg !8595
  store i32 %2, i32* %_var, align 4, !dbg !8595
  call void @llvm.dbg.declare(metadata i32* %_pos, metadata !8596, metadata !DIExpression()), !dbg !8595
  store i32 3, i32* %_pos, align 4, !dbg !8595
  call void @llvm.dbg.declare(metadata i32* %_len, metadata !8597, metadata !DIExpression()), !dbg !8595
  store i32 1, i32* %_len, align 4, !dbg !8595
  call void @llvm.dbg.declare(metadata i32* %_val, metadata !8598, metadata !DIExpression()), !dbg !8595
  store i32 0, i32* %_val, align 4, !dbg !8595
  %3 = load i32, i32* %_val, align 4, !dbg !8595
  %4 = load i32, i32* %_pos, align 4, !dbg !8595
  %shl = shl i32 %3, %4, !dbg !8595
  %conv = sext i32 %shl to i64, !dbg !8595
  %5 = load i32, i32* %_pos, align 4, !dbg !8595
  %sh_prom = zext i32 %5 to i64, !dbg !8595
  %shl1 = shl i64 1, %sh_prom, !dbg !8595
  %sub = sub i64 -1, %shl1, !dbg !8595
  %add = add i64 %sub, 1, !dbg !8595
  %6 = load i32, i32* %_pos, align 4, !dbg !8595
  %7 = load i32, i32* %_len, align 4, !dbg !8595
  %add2 = add i32 %6, %7, !dbg !8595
  %sub3 = sub i32 %add2, 1, !dbg !8595
  %sub4 = sub i32 63, %sub3, !dbg !8595
  %sh_prom5 = zext i32 %sub4 to i64, !dbg !8595
  %shr = lshr i64 -1, %sh_prom5, !dbg !8595
  %and = and i64 %add, %shr, !dbg !8595
  %add6 = add i64 0, %and, !dbg !8595
  %and7 = and i64 %conv, %add6, !dbg !8595
  %conv8 = trunc i64 %and7 to i32, !dbg !8595
  store i32 %conv8, i32* %_val, align 4, !dbg !8595
  %8 = load i32, i32* %_var, align 4, !dbg !8595
  %conv9 = zext i32 %8 to i64, !dbg !8595
  %9 = load i32, i32* %_pos, align 4, !dbg !8595
  %sh_prom10 = zext i32 %9 to i64, !dbg !8595
  %shl11 = shl i64 1, %sh_prom10, !dbg !8595
  %sub12 = sub i64 -1, %shl11, !dbg !8595
  %add13 = add i64 %sub12, 1, !dbg !8595
  %10 = load i32, i32* %_pos, align 4, !dbg !8595
  %11 = load i32, i32* %_len, align 4, !dbg !8595
  %add14 = add i32 %10, %11, !dbg !8595
  %sub15 = sub i32 %add14, 1, !dbg !8595
  %sub16 = sub i32 63, %sub15, !dbg !8595
  %sh_prom17 = zext i32 %sub16 to i64, !dbg !8595
  %shr18 = lshr i64 -1, %sh_prom17, !dbg !8595
  %and19 = and i64 %add13, %shr18, !dbg !8595
  %add20 = add i64 0, %and19, !dbg !8595
  %neg = xor i64 %add20, -1, !dbg !8595
  %and21 = and i64 %conv9, %neg, !dbg !8595
  %12 = load i32, i32* %_val, align 4, !dbg !8595
  %conv22 = sext i32 %12 to i64, !dbg !8595
  %or = or i64 %and21, %conv22, !dbg !8595
  %conv23 = trunc i64 %or to i32, !dbg !8595
  store i32 %conv23, i32* %_var, align 4, !dbg !8595
  store i32 %conv23, i32* %tmp, align 4, !dbg !8595
  %13 = load i32, i32* %tmp, align 4, !dbg !8595
  store i32 %13, i32* %regval, align 4, !dbg !8599
  call void @llvm.dbg.declare(metadata i32* %_var24, metadata !8600, metadata !DIExpression()), !dbg !8602
  %14 = load i32, i32* %regval, align 4, !dbg !8602
  store i32 %14, i32* %_var24, align 4, !dbg !8602
  call void @llvm.dbg.declare(metadata i32* %_pos25, metadata !8603, metadata !DIExpression()), !dbg !8602
  store i32 2, i32* %_pos25, align 4, !dbg !8602
  call void @llvm.dbg.declare(metadata i32* %_len26, metadata !8604, metadata !DIExpression()), !dbg !8602
  store i32 1, i32* %_len26, align 4, !dbg !8602
  call void @llvm.dbg.declare(metadata i32* %_val27, metadata !8605, metadata !DIExpression()), !dbg !8602
  store i32 0, i32* %_val27, align 4, !dbg !8602
  %15 = load i32, i32* %_val27, align 4, !dbg !8602
  %16 = load i32, i32* %_pos25, align 4, !dbg !8602
  %shl28 = shl i32 %15, %16, !dbg !8602
  %conv29 = sext i32 %shl28 to i64, !dbg !8602
  %17 = load i32, i32* %_pos25, align 4, !dbg !8602
  %sh_prom30 = zext i32 %17 to i64, !dbg !8602
  %shl31 = shl i64 1, %sh_prom30, !dbg !8602
  %sub32 = sub i64 -1, %shl31, !dbg !8602
  %add33 = add i64 %sub32, 1, !dbg !8602
  %18 = load i32, i32* %_pos25, align 4, !dbg !8602
  %19 = load i32, i32* %_len26, align 4, !dbg !8602
  %add34 = add i32 %18, %19, !dbg !8602
  %sub35 = sub i32 %add34, 1, !dbg !8602
  %sub36 = sub i32 63, %sub35, !dbg !8602
  %sh_prom37 = zext i32 %sub36 to i64, !dbg !8602
  %shr38 = lshr i64 -1, %sh_prom37, !dbg !8602
  %and39 = and i64 %add33, %shr38, !dbg !8602
  %add40 = add i64 0, %and39, !dbg !8602
  %and41 = and i64 %conv29, %add40, !dbg !8602
  %conv42 = trunc i64 %and41 to i32, !dbg !8602
  store i32 %conv42, i32* %_val27, align 4, !dbg !8602
  %20 = load i32, i32* %_var24, align 4, !dbg !8602
  %conv44 = zext i32 %20 to i64, !dbg !8602
  %21 = load i32, i32* %_pos25, align 4, !dbg !8602
  %sh_prom45 = zext i32 %21 to i64, !dbg !8602
  %shl46 = shl i64 1, %sh_prom45, !dbg !8602
  %sub47 = sub i64 -1, %shl46, !dbg !8602
  %add48 = add i64 %sub47, 1, !dbg !8602
  %22 = load i32, i32* %_pos25, align 4, !dbg !8602
  %23 = load i32, i32* %_len26, align 4, !dbg !8602
  %add49 = add i32 %22, %23, !dbg !8602
  %sub50 = sub i32 %add49, 1, !dbg !8602
  %sub51 = sub i32 63, %sub50, !dbg !8602
  %sh_prom52 = zext i32 %sub51 to i64, !dbg !8602
  %shr53 = lshr i64 -1, %sh_prom52, !dbg !8602
  %and54 = and i64 %add48, %shr53, !dbg !8602
  %add55 = add i64 0, %and54, !dbg !8602
  %neg56 = xor i64 %add55, -1, !dbg !8602
  %and57 = and i64 %conv44, %neg56, !dbg !8602
  %24 = load i32, i32* %_val27, align 4, !dbg !8602
  %conv58 = sext i32 %24 to i64, !dbg !8602
  %or59 = or i64 %and57, %conv58, !dbg !8602
  %conv60 = trunc i64 %or59 to i32, !dbg !8602
  store i32 %conv60, i32* %_var24, align 4, !dbg !8602
  store i32 %conv60, i32* %tmp43, align 4, !dbg !8602
  %25 = load i32, i32* %tmp43, align 4, !dbg !8602
  store i32 %25, i32* %regval, align 4, !dbg !8606
  call void @llvm.dbg.declare(metadata i32* %_var61, metadata !8607, metadata !DIExpression()), !dbg !8609
  %26 = load i32, i32* %regval, align 4, !dbg !8609
  store i32 %26, i32* %_var61, align 4, !dbg !8609
  call void @llvm.dbg.declare(metadata i32* %_pos62, metadata !8610, metadata !DIExpression()), !dbg !8609
  store i32 1, i32* %_pos62, align 4, !dbg !8609
  call void @llvm.dbg.declare(metadata i32* %_len63, metadata !8611, metadata !DIExpression()), !dbg !8609
  store i32 1, i32* %_len63, align 4, !dbg !8609
  call void @llvm.dbg.declare(metadata i32* %_val64, metadata !8612, metadata !DIExpression()), !dbg !8609
  store i32 0, i32* %_val64, align 4, !dbg !8609
  %27 = load i32, i32* %_val64, align 4, !dbg !8609
  %28 = load i32, i32* %_pos62, align 4, !dbg !8609
  %shl65 = shl i32 %27, %28, !dbg !8609
  %conv66 = sext i32 %shl65 to i64, !dbg !8609
  %29 = load i32, i32* %_pos62, align 4, !dbg !8609
  %sh_prom67 = zext i32 %29 to i64, !dbg !8609
  %shl68 = shl i64 1, %sh_prom67, !dbg !8609
  %sub69 = sub i64 -1, %shl68, !dbg !8609
  %add70 = add i64 %sub69, 1, !dbg !8609
  %30 = load i32, i32* %_pos62, align 4, !dbg !8609
  %31 = load i32, i32* %_len63, align 4, !dbg !8609
  %add71 = add i32 %30, %31, !dbg !8609
  %sub72 = sub i32 %add71, 1, !dbg !8609
  %sub73 = sub i32 63, %sub72, !dbg !8609
  %sh_prom74 = zext i32 %sub73 to i64, !dbg !8609
  %shr75 = lshr i64 -1, %sh_prom74, !dbg !8609
  %and76 = and i64 %add70, %shr75, !dbg !8609
  %add77 = add i64 0, %and76, !dbg !8609
  %and78 = and i64 %conv66, %add77, !dbg !8609
  %conv79 = trunc i64 %and78 to i32, !dbg !8609
  store i32 %conv79, i32* %_val64, align 4, !dbg !8609
  %32 = load i32, i32* %_var61, align 4, !dbg !8609
  %conv81 = zext i32 %32 to i64, !dbg !8609
  %33 = load i32, i32* %_pos62, align 4, !dbg !8609
  %sh_prom82 = zext i32 %33 to i64, !dbg !8609
  %shl83 = shl i64 1, %sh_prom82, !dbg !8609
  %sub84 = sub i64 -1, %shl83, !dbg !8609
  %add85 = add i64 %sub84, 1, !dbg !8609
  %34 = load i32, i32* %_pos62, align 4, !dbg !8609
  %35 = load i32, i32* %_len63, align 4, !dbg !8609
  %add86 = add i32 %34, %35, !dbg !8609
  %sub87 = sub i32 %add86, 1, !dbg !8609
  %sub88 = sub i32 63, %sub87, !dbg !8609
  %sh_prom89 = zext i32 %sub88 to i64, !dbg !8609
  %shr90 = lshr i64 -1, %sh_prom89, !dbg !8609
  %and91 = and i64 %add85, %shr90, !dbg !8609
  %add92 = add i64 0, %and91, !dbg !8609
  %neg93 = xor i64 %add92, -1, !dbg !8609
  %and94 = and i64 %conv81, %neg93, !dbg !8609
  %36 = load i32, i32* %_val64, align 4, !dbg !8609
  %conv95 = sext i32 %36 to i64, !dbg !8609
  %or96 = or i64 %and94, %conv95, !dbg !8609
  %conv97 = trunc i64 %or96 to i32, !dbg !8609
  store i32 %conv97, i32* %_var61, align 4, !dbg !8609
  store i32 %conv97, i32* %tmp80, align 4, !dbg !8609
  %37 = load i32, i32* %tmp80, align 4, !dbg !8609
  store i32 %37, i32* %regval, align 4, !dbg !8613
  call void @llvm.dbg.declare(metadata i32* %_var98, metadata !8614, metadata !DIExpression()), !dbg !8616
  %38 = load i32, i32* %regval, align 4, !dbg !8616
  store i32 %38, i32* %_var98, align 4, !dbg !8616
  call void @llvm.dbg.declare(metadata i32* %_pos99, metadata !8617, metadata !DIExpression()), !dbg !8616
  store i32 0, i32* %_pos99, align 4, !dbg !8616
  call void @llvm.dbg.declare(metadata i32* %_len100, metadata !8618, metadata !DIExpression()), !dbg !8616
  store i32 1, i32* %_len100, align 4, !dbg !8616
  call void @llvm.dbg.declare(metadata i32* %_val101, metadata !8619, metadata !DIExpression()), !dbg !8616
  store i32 0, i32* %_val101, align 4, !dbg !8616
  %39 = load i32, i32* %_val101, align 4, !dbg !8616
  %40 = load i32, i32* %_pos99, align 4, !dbg !8616
  %shl102 = shl i32 %39, %40, !dbg !8616
  %conv103 = sext i32 %shl102 to i64, !dbg !8616
  %41 = load i32, i32* %_pos99, align 4, !dbg !8616
  %sh_prom104 = zext i32 %41 to i64, !dbg !8616
  %shl105 = shl i64 1, %sh_prom104, !dbg !8616
  %sub106 = sub i64 -1, %shl105, !dbg !8616
  %add107 = add i64 %sub106, 1, !dbg !8616
  %42 = load i32, i32* %_pos99, align 4, !dbg !8616
  %43 = load i32, i32* %_len100, align 4, !dbg !8616
  %add108 = add i32 %42, %43, !dbg !8616
  %sub109 = sub i32 %add108, 1, !dbg !8616
  %sub110 = sub i32 63, %sub109, !dbg !8616
  %sh_prom111 = zext i32 %sub110 to i64, !dbg !8616
  %shr112 = lshr i64 -1, %sh_prom111, !dbg !8616
  %and113 = and i64 %add107, %shr112, !dbg !8616
  %add114 = add i64 0, %and113, !dbg !8616
  %and115 = and i64 %conv103, %add114, !dbg !8616
  %conv116 = trunc i64 %and115 to i32, !dbg !8616
  store i32 %conv116, i32* %_val101, align 4, !dbg !8616
  %44 = load i32, i32* %_var98, align 4, !dbg !8616
  %conv118 = zext i32 %44 to i64, !dbg !8616
  %45 = load i32, i32* %_pos99, align 4, !dbg !8616
  %sh_prom119 = zext i32 %45 to i64, !dbg !8616
  %shl120 = shl i64 1, %sh_prom119, !dbg !8616
  %sub121 = sub i64 -1, %shl120, !dbg !8616
  %add122 = add i64 %sub121, 1, !dbg !8616
  %46 = load i32, i32* %_pos99, align 4, !dbg !8616
  %47 = load i32, i32* %_len100, align 4, !dbg !8616
  %add123 = add i32 %46, %47, !dbg !8616
  %sub124 = sub i32 %add123, 1, !dbg !8616
  %sub125 = sub i32 63, %sub124, !dbg !8616
  %sh_prom126 = zext i32 %sub125 to i64, !dbg !8616
  %shr127 = lshr i64 -1, %sh_prom126, !dbg !8616
  %and128 = and i64 %add122, %shr127, !dbg !8616
  %add129 = add i64 0, %and128, !dbg !8616
  %neg130 = xor i64 %add129, -1, !dbg !8616
  %and131 = and i64 %conv118, %neg130, !dbg !8616
  %48 = load i32, i32* %_val101, align 4, !dbg !8616
  %conv132 = sext i32 %48 to i64, !dbg !8616
  %or133 = or i64 %and131, %conv132, !dbg !8616
  %conv134 = trunc i64 %or133 to i32, !dbg !8616
  store i32 %conv134, i32* %_var98, align 4, !dbg !8616
  store i32 %conv134, i32* %tmp117, align 4, !dbg !8616
  %49 = load i32, i32* %tmp117, align 4, !dbg !8616
  store i32 %49, i32* %regval, align 4, !dbg !8620
  %50 = load i32, i32* %regval, align 4, !dbg !8621
  %51 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !8622
  %mac_regs135 = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %51, i32 0, i32 6, !dbg !8623
  %52 = load i8*, i8** %mac_regs135, align 8, !dbg !8623
  %add.ptr136 = getelementptr i8, i8* %52, i64 4, !dbg !8624
  call void @writel(i32 %50, i8* %add.ptr136) #7, !dbg !8625
  store i32 0, i32* %i, align 4, !dbg !8626
  br label %for.cond, !dbg !8628

for.cond:                                         ; preds = %for.inc, %entry
  %53 = load i32, i32* %i, align 4, !dbg !8629
  %54 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !8631
  %rx_q_count = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %54, i32 0, i32 16, !dbg !8632
  %55 = load i32, i32* %rx_q_count, align 8, !dbg !8632
  %cmp = icmp ult i32 %53, %55, !dbg !8633
  br i1 %cmp, label %for.body, label %for.end, !dbg !8634

for.body:                                         ; preds = %for.cond
  %56 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !8635
  %57 = load i32, i32* %i, align 4, !dbg !8636
  call void @xlgmac_prepare_rx_stop(%struct.xlgmac_pdata* %56, i32 %57) #7, !dbg !8637
  br label %for.inc, !dbg !8637

for.inc:                                          ; preds = %for.body
  %58 = load i32, i32* %i, align 4, !dbg !8638
  %inc = add i32 %58, 1, !dbg !8638
  store i32 %inc, i32* %i, align 4, !dbg !8638
  br label %for.cond, !dbg !8639, !llvm.loop !8640

for.end:                                          ; preds = %for.cond
  %59 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !8642
  %mac_regs138 = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %59, i32 0, i32 6, !dbg !8643
  %60 = load i8*, i8** %mac_regs138, align 8, !dbg !8643
  %add.ptr139 = getelementptr i8, i8* %60, i64 160, !dbg !8644
  call void @writel(i32 0, i8* %add.ptr139) #7, !dbg !8645
  %61 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !8646
  %channel_head = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %61, i32 0, i32 9, !dbg !8647
  %62 = load %struct.xlgmac_channel*, %struct.xlgmac_channel** %channel_head, align 8, !dbg !8647
  store %struct.xlgmac_channel* %62, %struct.xlgmac_channel** %channel, align 8, !dbg !8648
  store i32 0, i32* %i, align 4, !dbg !8649
  br label %for.cond140, !dbg !8651

for.cond140:                                      ; preds = %for.inc185, %for.end
  %63 = load i32, i32* %i, align 4, !dbg !8652
  %64 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !8654
  %channel_count = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %64, i32 0, i32 10, !dbg !8655
  %65 = load i32, i32* %channel_count, align 8, !dbg !8655
  %cmp141 = icmp ult i32 %63, %65, !dbg !8656
  br i1 %cmp141, label %for.body143, label %for.end187, !dbg !8657

for.body143:                                      ; preds = %for.cond140
  %66 = load %struct.xlgmac_channel*, %struct.xlgmac_channel** %channel, align 8, !dbg !8658
  %rx_ring = getelementptr inbounds %struct.xlgmac_channel, %struct.xlgmac_channel* %66, i32 0, i32 11, !dbg !8661
  %67 = load %struct.xlgmac_ring*, %struct.xlgmac_ring** %rx_ring, align 8, !dbg !8661
  %tobool = icmp ne %struct.xlgmac_ring* %67, null, !dbg !8658
  br i1 %tobool, label %if.end, label %if.then, !dbg !8662

if.then:                                          ; preds = %for.body143
  br label %for.end187, !dbg !8663

if.end:                                           ; preds = %for.body143
  %68 = load %struct.xlgmac_channel*, %struct.xlgmac_channel** %channel, align 8, !dbg !8664
  %dma_regs = getelementptr inbounds %struct.xlgmac_channel, %struct.xlgmac_channel* %68, i32 0, i32 3, !dbg !8664
  %69 = load i8*, i8** %dma_regs, align 32, !dbg !8664
  %add.ptr144 = getelementptr i8, i8* %69, i64 8, !dbg !8664
  %call145 = call i32 @readl(i8* %add.ptr144) #7, !dbg !8665
  store i32 %call145, i32* %regval, align 4, !dbg !8666
  call void @llvm.dbg.declare(metadata i32* %_var146, metadata !8667, metadata !DIExpression()), !dbg !8669
  %70 = load i32, i32* %regval, align 4, !dbg !8669
  store i32 %70, i32* %_var146, align 4, !dbg !8669
  call void @llvm.dbg.declare(metadata i32* %_pos147, metadata !8670, metadata !DIExpression()), !dbg !8669
  store i32 0, i32* %_pos147, align 4, !dbg !8669
  call void @llvm.dbg.declare(metadata i32* %_len148, metadata !8671, metadata !DIExpression()), !dbg !8669
  store i32 1, i32* %_len148, align 4, !dbg !8669
  call void @llvm.dbg.declare(metadata i32* %_val149, metadata !8672, metadata !DIExpression()), !dbg !8669
  store i32 0, i32* %_val149, align 4, !dbg !8669
  %71 = load i32, i32* %_val149, align 4, !dbg !8669
  %72 = load i32, i32* %_pos147, align 4, !dbg !8669
  %shl150 = shl i32 %71, %72, !dbg !8669
  %conv151 = sext i32 %shl150 to i64, !dbg !8669
  %73 = load i32, i32* %_pos147, align 4, !dbg !8669
  %sh_prom152 = zext i32 %73 to i64, !dbg !8669
  %shl153 = shl i64 1, %sh_prom152, !dbg !8669
  %sub154 = sub i64 -1, %shl153, !dbg !8669
  %add155 = add i64 %sub154, 1, !dbg !8669
  %74 = load i32, i32* %_pos147, align 4, !dbg !8669
  %75 = load i32, i32* %_len148, align 4, !dbg !8669
  %add156 = add i32 %74, %75, !dbg !8669
  %sub157 = sub i32 %add156, 1, !dbg !8669
  %sub158 = sub i32 63, %sub157, !dbg !8669
  %sh_prom159 = zext i32 %sub158 to i64, !dbg !8669
  %shr160 = lshr i64 -1, %sh_prom159, !dbg !8669
  %and161 = and i64 %add155, %shr160, !dbg !8669
  %add162 = add i64 0, %and161, !dbg !8669
  %and163 = and i64 %conv151, %add162, !dbg !8669
  %conv164 = trunc i64 %and163 to i32, !dbg !8669
  store i32 %conv164, i32* %_val149, align 4, !dbg !8669
  %76 = load i32, i32* %_var146, align 4, !dbg !8669
  %conv166 = zext i32 %76 to i64, !dbg !8669
  %77 = load i32, i32* %_pos147, align 4, !dbg !8669
  %sh_prom167 = zext i32 %77 to i64, !dbg !8669
  %shl168 = shl i64 1, %sh_prom167, !dbg !8669
  %sub169 = sub i64 -1, %shl168, !dbg !8669
  %add170 = add i64 %sub169, 1, !dbg !8669
  %78 = load i32, i32* %_pos147, align 4, !dbg !8669
  %79 = load i32, i32* %_len148, align 4, !dbg !8669
  %add171 = add i32 %78, %79, !dbg !8669
  %sub172 = sub i32 %add171, 1, !dbg !8669
  %sub173 = sub i32 63, %sub172, !dbg !8669
  %sh_prom174 = zext i32 %sub173 to i64, !dbg !8669
  %shr175 = lshr i64 -1, %sh_prom174, !dbg !8669
  %and176 = and i64 %add170, %shr175, !dbg !8669
  %add177 = add i64 0, %and176, !dbg !8669
  %neg178 = xor i64 %add177, -1, !dbg !8669
  %and179 = and i64 %conv166, %neg178, !dbg !8669
  %80 = load i32, i32* %_val149, align 4, !dbg !8669
  %conv180 = sext i32 %80 to i64, !dbg !8669
  %or181 = or i64 %and179, %conv180, !dbg !8669
  %conv182 = trunc i64 %or181 to i32, !dbg !8669
  store i32 %conv182, i32* %_var146, align 4, !dbg !8669
  store i32 %conv182, i32* %tmp165, align 4, !dbg !8669
  %81 = load i32, i32* %tmp165, align 4, !dbg !8669
  store i32 %81, i32* %regval, align 4, !dbg !8673
  %82 = load i32, i32* %regval, align 4, !dbg !8674
  %83 = load %struct.xlgmac_channel*, %struct.xlgmac_channel** %channel, align 8, !dbg !8675
  %dma_regs183 = getelementptr inbounds %struct.xlgmac_channel, %struct.xlgmac_channel* %83, i32 0, i32 3, !dbg !8675
  %84 = load i8*, i8** %dma_regs183, align 32, !dbg !8675
  %add.ptr184 = getelementptr i8, i8* %84, i64 8, !dbg !8675
  call void @writel(i32 %82, i8* %add.ptr184) #7, !dbg !8676
  br label %for.inc185, !dbg !8677

for.inc185:                                       ; preds = %if.end
  %85 = load i32, i32* %i, align 4, !dbg !8678
  %inc186 = add i32 %85, 1, !dbg !8678
  store i32 %inc186, i32* %i, align 4, !dbg !8678
  %86 = load %struct.xlgmac_channel*, %struct.xlgmac_channel** %channel, align 8, !dbg !8679
  %incdec.ptr = getelementptr %struct.xlgmac_channel, %struct.xlgmac_channel* %86, i32 1, !dbg !8679
  store %struct.xlgmac_channel* %incdec.ptr, %struct.xlgmac_channel** %channel, align 8, !dbg !8679
  br label %for.cond140, !dbg !8680, !llvm.loop !8681

for.end187:                                       ; preds = %if.then, %for.cond140
  ret void, !dbg !8683
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @xlgmac_dev_xmit(%struct.xlgmac_channel* %channel) #0 !dbg !8684 {
entry:
  %channel.addr = alloca %struct.xlgmac_channel*, align 8
  %pdata = alloca %struct.xlgmac_pdata*, align 8
  %ring = alloca %struct.xlgmac_ring*, align 8
  %tso_context = alloca i32, align 4
  %vlan_context = alloca i32, align 4
  %desc_data = alloca %struct.xlgmac_desc_data*, align 8
  %dma_desc = alloca %struct.xlgmac_dma_desc*, align 8
  %pkt_info = alloca %struct.xlgmac_pkt_info*, align 8
  %csum = alloca i32, align 4
  %tso = alloca i32, align 4
  %vlan = alloca i32, align 4
  %start_index = alloca i32, align 4
  %cur_index = alloca i32, align 4
  %tx_set_ic = alloca i32, align 4
  %i = alloca i32, align 4
  %_pos = alloca i32, align 4
  %_len = alloca i32, align 4
  %tmp = alloca i64, align 8
  %_pos13 = alloca i32, align 4
  %_len14 = alloca i32, align 4
  %tmp15 = alloca i64, align 8
  %_pos33 = alloca i32, align 4
  %_len34 = alloca i32, align 4
  %tmp35 = alloca i64, align 8
  %_ring = alloca %struct.xlgmac_ring*, align 8
  %tmp86 = alloca %struct.xlgmac_desc_data*, align 8
  %tmp95 = alloca i32, align 4
  %_var = alloca i32, align 4
  %_pos96 = alloca i32, align 4
  %_len97 = alloca i32, align 4
  %_val = alloca i16, align 2
  %tmp130 = alloca i32, align 4
  %_var132 = alloca i32, align 4
  %_pos133 = alloca i32, align 4
  %_len134 = alloca i32, align 4
  %_val135 = alloca i32, align 4
  %tmp168 = alloca i32, align 4
  %_var170 = alloca i32, align 4
  %_pos172 = alloca i32, align 4
  %_len173 = alloca i32, align 4
  %_val174 = alloca i32, align 4
  %tmp207 = alloca i32, align 4
  %tmp215 = alloca i32, align 4
  %_var216 = alloca i32, align 4
  %_pos218 = alloca i32, align 4
  %_len219 = alloca i32, align 4
  %_val220 = alloca i32, align 4
  %tmp253 = alloca i32, align 4
  %_var255 = alloca i32, align 4
  %_pos257 = alloca i32, align 4
  %_len258 = alloca i32, align 4
  %_val259 = alloca i16, align 2
  %tmp294 = alloca i32, align 4
  %_var296 = alloca i32, align 4
  %_pos298 = alloca i32, align 4
  %_len299 = alloca i32, align 4
  %_val300 = alloca i32, align 4
  %tmp333 = alloca i32, align 4
  %_ring339 = alloca %struct.xlgmac_ring*, align 8
  %tmp340 = alloca %struct.xlgmac_desc_data*, align 8
  %_var355 = alloca i32, align 4
  %_pos357 = alloca i32, align 4
  %_len358 = alloca i32, align 4
  %_val359 = alloca i32, align 4
  %tmp392 = alloca i32, align 4
  %_var396 = alloca i32, align 4
  %_pos398 = alloca i32, align 4
  %_len399 = alloca i32, align 4
  %_val400 = alloca i32, align 4
  %tmp433 = alloca i32, align 4
  %_pos437 = alloca i32, align 4
  %_len438 = alloca i32, align 4
  %tmp439 = alloca i64, align 8
  %_var458 = alloca i32, align 4
  %_pos460 = alloca i32, align 4
  %_len461 = alloca i32, align 4
  %_val462 = alloca i32, align 4
  %tmp495 = alloca i32, align 4
  %_var498 = alloca i32, align 4
  %_pos500 = alloca i32, align 4
  %_len501 = alloca i32, align 4
  %_val502 = alloca i32, align 4
  %tmp535 = alloca i32, align 4
  %_var537 = alloca i32, align 4
  %_pos539 = alloca i32, align 4
  %_len540 = alloca i32, align 4
  %_val541 = alloca i32, align 4
  %tmp574 = alloca i32, align 4
  %_var579 = alloca i32, align 4
  %_pos581 = alloca i32, align 4
  %_len582 = alloca i32, align 4
  %_val583 = alloca i32, align 4
  %tmp616 = alloca i32, align 4
  %_var621 = alloca i32, align 4
  %_pos623 = alloca i32, align 4
  %_len624 = alloca i32, align 4
  %_val625 = alloca i32, align 4
  %tmp658 = alloca i32, align 4
  %_var660 = alloca i32, align 4
  %_pos662 = alloca i32, align 4
  %_len663 = alloca i32, align 4
  %_val664 = alloca i32, align 4
  %tmp697 = alloca i32, align 4
  %_var699 = alloca i32, align 4
  %_pos701 = alloca i32, align 4
  %_len702 = alloca i32, align 4
  %_val703 = alloca i32, align 4
  %tmp736 = alloca i32, align 4
  %_var741 = alloca i32, align 4
  %_pos743 = alloca i32, align 4
  %_len744 = alloca i32, align 4
  %_val745 = alloca i32, align 4
  %tmp778 = alloca i32, align 4
  %_var782 = alloca i32, align 4
  %_pos784 = alloca i32, align 4
  %_len785 = alloca i32, align 4
  %_val786 = alloca i32, align 4
  %tmp819 = alloca i32, align 4
  %_var822 = alloca i32, align 4
  %_pos824 = alloca i32, align 4
  %_len825 = alloca i32, align 4
  %_val826 = alloca i32, align 4
  %tmp859 = alloca i32, align 4
  %_ring867 = alloca %struct.xlgmac_ring*, align 8
  %tmp868 = alloca %struct.xlgmac_desc_data*, align 8
  %_var885 = alloca i32, align 4
  %_pos887 = alloca i32, align 4
  %_len888 = alloca i32, align 4
  %_val889 = alloca i32, align 4
  %tmp923 = alloca i32, align 4
  %_var925 = alloca i32, align 4
  %_pos927 = alloca i32, align 4
  %_len928 = alloca i32, align 4
  %_val929 = alloca i32, align 4
  %tmp962 = alloca i32, align 4
  %_var964 = alloca i32, align 4
  %_pos966 = alloca i32, align 4
  %_len967 = alloca i32, align 4
  %_val968 = alloca i32, align 4
  %tmp1001 = alloca i32, align 4
  %_var1005 = alloca i32, align 4
  %_pos1007 = alloca i32, align 4
  %_len1008 = alloca i32, align 4
  %_val1009 = alloca i32, align 4
  %tmp1042 = alloca i32, align 4
  %_var1046 = alloca i32, align 4
  %_pos1048 = alloca i32, align 4
  %_len1049 = alloca i32, align 4
  %_val1050 = alloca i32, align 4
  %tmp1083 = alloca i32, align 4
  %_var1087 = alloca i32, align 4
  %_pos1089 = alloca i32, align 4
  %_len1090 = alloca i32, align 4
  %_val1091 = alloca i32, align 4
  %tmp1124 = alloca i32, align 4
  %_ring1130 = alloca %struct.xlgmac_ring*, align 8
  %tmp1131 = alloca %struct.xlgmac_desc_data*, align 8
  %_var1139 = alloca i32, align 4
  %_pos1141 = alloca i32, align 4
  %_len1142 = alloca i32, align 4
  %_val1143 = alloca i32, align 4
  %tmp1176 = alloca i32, align 4
  store %struct.xlgmac_channel* %channel, %struct.xlgmac_channel** %channel.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xlgmac_channel** %channel.addr, metadata !8685, metadata !DIExpression()), !dbg !8686
  call void @llvm.dbg.declare(metadata %struct.xlgmac_pdata** %pdata, metadata !8687, metadata !DIExpression()), !dbg !8688
  %0 = load %struct.xlgmac_channel*, %struct.xlgmac_channel** %channel.addr, align 8, !dbg !8689
  %pdata1 = getelementptr inbounds %struct.xlgmac_channel, %struct.xlgmac_channel* %0, i32 0, i32 1, !dbg !8690
  %1 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata1, align 16, !dbg !8690
  store %struct.xlgmac_pdata* %1, %struct.xlgmac_pdata** %pdata, align 8, !dbg !8688
  call void @llvm.dbg.declare(metadata %struct.xlgmac_ring** %ring, metadata !8691, metadata !DIExpression()), !dbg !8692
  %2 = load %struct.xlgmac_channel*, %struct.xlgmac_channel** %channel.addr, align 8, !dbg !8693
  %tx_ring = getelementptr inbounds %struct.xlgmac_channel, %struct.xlgmac_channel* %2, i32 0, i32 10, !dbg !8694
  %3 = load %struct.xlgmac_ring*, %struct.xlgmac_ring** %tx_ring, align 16, !dbg !8694
  store %struct.xlgmac_ring* %3, %struct.xlgmac_ring** %ring, align 8, !dbg !8692
  call void @llvm.dbg.declare(metadata i32* %tso_context, metadata !8695, metadata !DIExpression()), !dbg !8696
  call void @llvm.dbg.declare(metadata i32* %vlan_context, metadata !8697, metadata !DIExpression()), !dbg !8698
  call void @llvm.dbg.declare(metadata %struct.xlgmac_desc_data** %desc_data, metadata !8699, metadata !DIExpression()), !dbg !8700
  call void @llvm.dbg.declare(metadata %struct.xlgmac_dma_desc** %dma_desc, metadata !8701, metadata !DIExpression()), !dbg !8702
  call void @llvm.dbg.declare(metadata %struct.xlgmac_pkt_info** %pkt_info, metadata !8703, metadata !DIExpression()), !dbg !8705
  call void @llvm.dbg.declare(metadata i32* %csum, metadata !8706, metadata !DIExpression()), !dbg !8707
  call void @llvm.dbg.declare(metadata i32* %tso, metadata !8708, metadata !DIExpression()), !dbg !8709
  call void @llvm.dbg.declare(metadata i32* %vlan, metadata !8710, metadata !DIExpression()), !dbg !8711
  call void @llvm.dbg.declare(metadata i32* %start_index, metadata !8712, metadata !DIExpression()), !dbg !8713
  %4 = load %struct.xlgmac_ring*, %struct.xlgmac_ring** %ring, align 8, !dbg !8714
  %cur = getelementptr inbounds %struct.xlgmac_ring, %struct.xlgmac_ring* %4, i32 0, i32 7, !dbg !8715
  %5 = load i32, i32* %cur, align 16, !dbg !8715
  store i32 %5, i32* %start_index, align 4, !dbg !8713
  call void @llvm.dbg.declare(metadata i32* %cur_index, metadata !8716, metadata !DIExpression()), !dbg !8717
  %6 = load %struct.xlgmac_ring*, %struct.xlgmac_ring** %ring, align 8, !dbg !8718
  %cur2 = getelementptr inbounds %struct.xlgmac_ring, %struct.xlgmac_ring* %6, i32 0, i32 7, !dbg !8719
  %7 = load i32, i32* %cur2, align 16, !dbg !8719
  store i32 %7, i32* %cur_index, align 4, !dbg !8717
  call void @llvm.dbg.declare(metadata i32* %tx_set_ic, metadata !8720, metadata !DIExpression()), !dbg !8721
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8722, metadata !DIExpression()), !dbg !8723
  %8 = load %struct.xlgmac_ring*, %struct.xlgmac_ring** %ring, align 8, !dbg !8724
  %pkt_info3 = getelementptr inbounds %struct.xlgmac_ring, %struct.xlgmac_ring* %8, i32 0, i32 0, !dbg !8725
  store %struct.xlgmac_pkt_info* %pkt_info3, %struct.xlgmac_pkt_info** %pkt_info, align 8, !dbg !8726
  call void @llvm.dbg.declare(metadata i32* %_pos, metadata !8727, metadata !DIExpression()), !dbg !8729
  store i32 0, i32* %_pos, align 4, !dbg !8729
  call void @llvm.dbg.declare(metadata i32* %_len, metadata !8730, metadata !DIExpression()), !dbg !8729
  store i32 1, i32* %_len, align 4, !dbg !8729
  %9 = load %struct.xlgmac_pkt_info*, %struct.xlgmac_pkt_info** %pkt_info, align 8, !dbg !8729
  %attributes = getelementptr inbounds %struct.xlgmac_pkt_info, %struct.xlgmac_pkt_info* %9, i32 0, i32 1, !dbg !8729
  %10 = load i32, i32* %attributes, align 8, !dbg !8729
  %conv = zext i32 %10 to i64, !dbg !8729
  %11 = load i32, i32* %_pos, align 4, !dbg !8729
  %sh_prom = zext i32 %11 to i64, !dbg !8729
  %shl = shl i64 1, %sh_prom, !dbg !8729
  %sub = sub i64 -1, %shl, !dbg !8729
  %add = add i64 %sub, 1, !dbg !8729
  %12 = load i32, i32* %_pos, align 4, !dbg !8729
  %13 = load i32, i32* %_len, align 4, !dbg !8729
  %add4 = add i32 %12, %13, !dbg !8729
  %sub5 = sub i32 %add4, 1, !dbg !8729
  %sub6 = sub i32 63, %sub5, !dbg !8729
  %sh_prom7 = zext i32 %sub6 to i64, !dbg !8729
  %shr = lshr i64 -1, %sh_prom7, !dbg !8729
  %and = and i64 %add, %shr, !dbg !8729
  %add8 = add i64 0, %and, !dbg !8729
  %and9 = and i64 %conv, %add8, !dbg !8729
  %14 = load i32, i32* %_pos, align 4, !dbg !8729
  %sh_prom10 = zext i32 %14 to i64, !dbg !8729
  %shr11 = lshr i64 %and9, %sh_prom10, !dbg !8729
  store i64 %shr11, i64* %tmp, align 8, !dbg !8729
  %15 = load i64, i64* %tmp, align 8, !dbg !8729
  %conv12 = trunc i64 %15 to i32, !dbg !8731
  store i32 %conv12, i32* %csum, align 4, !dbg !8732
  call void @llvm.dbg.declare(metadata i32* %_pos13, metadata !8733, metadata !DIExpression()), !dbg !8735
  store i32 1, i32* %_pos13, align 4, !dbg !8735
  call void @llvm.dbg.declare(metadata i32* %_len14, metadata !8736, metadata !DIExpression()), !dbg !8735
  store i32 1, i32* %_len14, align 4, !dbg !8735
  %16 = load %struct.xlgmac_pkt_info*, %struct.xlgmac_pkt_info** %pkt_info, align 8, !dbg !8735
  %attributes16 = getelementptr inbounds %struct.xlgmac_pkt_info, %struct.xlgmac_pkt_info* %16, i32 0, i32 1, !dbg !8735
  %17 = load i32, i32* %attributes16, align 8, !dbg !8735
  %conv17 = zext i32 %17 to i64, !dbg !8735
  %18 = load i32, i32* %_pos13, align 4, !dbg !8735
  %sh_prom18 = zext i32 %18 to i64, !dbg !8735
  %shl19 = shl i64 1, %sh_prom18, !dbg !8735
  %sub20 = sub i64 -1, %shl19, !dbg !8735
  %add21 = add i64 %sub20, 1, !dbg !8735
  %19 = load i32, i32* %_pos13, align 4, !dbg !8735
  %20 = load i32, i32* %_len14, align 4, !dbg !8735
  %add22 = add i32 %19, %20, !dbg !8735
  %sub23 = sub i32 %add22, 1, !dbg !8735
  %sub24 = sub i32 63, %sub23, !dbg !8735
  %sh_prom25 = zext i32 %sub24 to i64, !dbg !8735
  %shr26 = lshr i64 -1, %sh_prom25, !dbg !8735
  %and27 = and i64 %add21, %shr26, !dbg !8735
  %add28 = add i64 0, %and27, !dbg !8735
  %and29 = and i64 %conv17, %add28, !dbg !8735
  %21 = load i32, i32* %_pos13, align 4, !dbg !8735
  %sh_prom30 = zext i32 %21 to i64, !dbg !8735
  %shr31 = lshr i64 %and29, %sh_prom30, !dbg !8735
  store i64 %shr31, i64* %tmp15, align 8, !dbg !8735
  %22 = load i64, i64* %tmp15, align 8, !dbg !8735
  %conv32 = trunc i64 %22 to i32, !dbg !8737
  store i32 %conv32, i32* %tso, align 4, !dbg !8738
  call void @llvm.dbg.declare(metadata i32* %_pos33, metadata !8739, metadata !DIExpression()), !dbg !8741
  store i32 2, i32* %_pos33, align 4, !dbg !8741
  call void @llvm.dbg.declare(metadata i32* %_len34, metadata !8742, metadata !DIExpression()), !dbg !8741
  store i32 1, i32* %_len34, align 4, !dbg !8741
  %23 = load %struct.xlgmac_pkt_info*, %struct.xlgmac_pkt_info** %pkt_info, align 8, !dbg !8741
  %attributes36 = getelementptr inbounds %struct.xlgmac_pkt_info, %struct.xlgmac_pkt_info* %23, i32 0, i32 1, !dbg !8741
  %24 = load i32, i32* %attributes36, align 8, !dbg !8741
  %conv37 = zext i32 %24 to i64, !dbg !8741
  %25 = load i32, i32* %_pos33, align 4, !dbg !8741
  %sh_prom38 = zext i32 %25 to i64, !dbg !8741
  %shl39 = shl i64 1, %sh_prom38, !dbg !8741
  %sub40 = sub i64 -1, %shl39, !dbg !8741
  %add41 = add i64 %sub40, 1, !dbg !8741
  %26 = load i32, i32* %_pos33, align 4, !dbg !8741
  %27 = load i32, i32* %_len34, align 4, !dbg !8741
  %add42 = add i32 %26, %27, !dbg !8741
  %sub43 = sub i32 %add42, 1, !dbg !8741
  %sub44 = sub i32 63, %sub43, !dbg !8741
  %sh_prom45 = zext i32 %sub44 to i64, !dbg !8741
  %shr46 = lshr i64 -1, %sh_prom45, !dbg !8741
  %and47 = and i64 %add41, %shr46, !dbg !8741
  %add48 = add i64 0, %and47, !dbg !8741
  %and49 = and i64 %conv37, %add48, !dbg !8741
  %28 = load i32, i32* %_pos33, align 4, !dbg !8741
  %sh_prom50 = zext i32 %28 to i64, !dbg !8741
  %shr51 = lshr i64 %and49, %sh_prom50, !dbg !8741
  store i64 %shr51, i64* %tmp35, align 8, !dbg !8741
  %29 = load i64, i64* %tmp35, align 8, !dbg !8741
  %conv52 = trunc i64 %29 to i32, !dbg !8743
  store i32 %conv52, i32* %vlan, align 4, !dbg !8744
  %30 = load i32, i32* %tso, align 4, !dbg !8745
  %tobool = icmp ne i32 %30, 0, !dbg !8745
  br i1 %tobool, label %land.lhs.true, label %if.else, !dbg !8747

land.lhs.true:                                    ; preds = %entry
  %31 = load %struct.xlgmac_pkt_info*, %struct.xlgmac_pkt_info** %pkt_info, align 8, !dbg !8748
  %mss = getelementptr inbounds %struct.xlgmac_pkt_info, %struct.xlgmac_pkt_info* %31, i32 0, i32 10, !dbg !8749
  %32 = load i16, i16* %mss, align 4, !dbg !8749
  %conv53 = zext i16 %32 to i32, !dbg !8748
  %33 = load %struct.xlgmac_ring*, %struct.xlgmac_ring** %ring, align 8, !dbg !8750
  %34 = getelementptr inbounds %struct.xlgmac_ring, %struct.xlgmac_ring* %33, i32 0, i32 10, !dbg !8751
  %tx = bitcast %union.anon.129* %34 to %struct.anon.130*, !dbg !8751
  %cur_mss = getelementptr inbounds %struct.anon.130, %struct.anon.130* %tx, i32 0, i32 2, !dbg !8752
  %35 = load i16, i16* %cur_mss, align 4, !dbg !8752
  %conv54 = zext i16 %35 to i32, !dbg !8750
  %cmp = icmp ne i32 %conv53, %conv54, !dbg !8753
  br i1 %cmp, label %if.then, label %if.else, !dbg !8754

if.then:                                          ; preds = %land.lhs.true
  store i32 1, i32* %tso_context, align 4, !dbg !8755
  br label %if.end, !dbg !8756

if.else:                                          ; preds = %land.lhs.true, %entry
  store i32 0, i32* %tso_context, align 4, !dbg !8757
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %36 = load i32, i32* %vlan, align 4, !dbg !8758
  %tobool56 = icmp ne i32 %36, 0, !dbg !8758
  br i1 %tobool56, label %land.lhs.true57, label %if.else64, !dbg !8760

land.lhs.true57:                                  ; preds = %if.end
  %37 = load %struct.xlgmac_pkt_info*, %struct.xlgmac_pkt_info** %pkt_info, align 8, !dbg !8761
  %vlan_ctag = getelementptr inbounds %struct.xlgmac_pkt_info, %struct.xlgmac_pkt_info* %37, i32 0, i32 11, !dbg !8762
  %38 = load i16, i16* %vlan_ctag, align 2, !dbg !8762
  %conv58 = zext i16 %38 to i32, !dbg !8761
  %39 = load %struct.xlgmac_ring*, %struct.xlgmac_ring** %ring, align 8, !dbg !8763
  %40 = getelementptr inbounds %struct.xlgmac_ring, %struct.xlgmac_ring* %39, i32 0, i32 10, !dbg !8764
  %tx59 = bitcast %union.anon.129* %40 to %struct.anon.130*, !dbg !8764
  %cur_vlan_ctag = getelementptr inbounds %struct.anon.130, %struct.anon.130* %tx59, i32 0, i32 3, !dbg !8765
  %41 = load i16, i16* %cur_vlan_ctag, align 2, !dbg !8765
  %conv60 = zext i16 %41 to i32, !dbg !8763
  %cmp61 = icmp ne i32 %conv58, %conv60, !dbg !8766
  br i1 %cmp61, label %if.then63, label %if.else64, !dbg !8767

if.then63:                                        ; preds = %land.lhs.true57
  store i32 1, i32* %vlan_context, align 4, !dbg !8768
  br label %if.end65, !dbg !8769

if.else64:                                        ; preds = %land.lhs.true57, %if.end
  store i32 0, i32* %vlan_context, align 4, !dbg !8770
  br label %if.end65

if.end65:                                         ; preds = %if.else64, %if.then63
  %42 = load %struct.xlgmac_pkt_info*, %struct.xlgmac_pkt_info** %pkt_info, align 8, !dbg !8771
  %tx_packets = getelementptr inbounds %struct.xlgmac_pkt_info, %struct.xlgmac_pkt_info* %42, i32 0, i32 5, !dbg !8772
  %43 = load i32, i32* %tx_packets, align 8, !dbg !8772
  %44 = load %struct.xlgmac_ring*, %struct.xlgmac_ring** %ring, align 8, !dbg !8773
  %coalesce_count = getelementptr inbounds %struct.xlgmac_ring, %struct.xlgmac_ring* %44, i32 0, i32 9, !dbg !8774
  %45 = load i32, i32* %coalesce_count, align 8, !dbg !8775
  %add66 = add i32 %45, %43, !dbg !8775
  store i32 %add66, i32* %coalesce_count, align 8, !dbg !8775
  %46 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata, align 8, !dbg !8776
  %tx_frames = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %46, i32 0, i32 26, !dbg !8778
  %47 = load i32, i32* %tx_frames, align 8, !dbg !8778
  %tobool67 = icmp ne i32 %47, 0, !dbg !8776
  br i1 %tobool67, label %if.else69, label %if.then68, !dbg !8779

if.then68:                                        ; preds = %if.end65
  store i32 0, i32* %tx_set_ic, align 4, !dbg !8780
  br label %if.end85, !dbg !8781

if.else69:                                        ; preds = %if.end65
  %48 = load %struct.xlgmac_pkt_info*, %struct.xlgmac_pkt_info** %pkt_info, align 8, !dbg !8782
  %tx_packets70 = getelementptr inbounds %struct.xlgmac_pkt_info, %struct.xlgmac_pkt_info* %48, i32 0, i32 5, !dbg !8784
  %49 = load i32, i32* %tx_packets70, align 8, !dbg !8784
  %50 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata, align 8, !dbg !8785
  %tx_frames71 = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %50, i32 0, i32 26, !dbg !8786
  %51 = load i32, i32* %tx_frames71, align 8, !dbg !8786
  %cmp72 = icmp ugt i32 %49, %51, !dbg !8787
  br i1 %cmp72, label %if.then74, label %if.else75, !dbg !8788

if.then74:                                        ; preds = %if.else69
  store i32 1, i32* %tx_set_ic, align 4, !dbg !8789
  br label %if.end84, !dbg !8790

if.else75:                                        ; preds = %if.else69
  %52 = load %struct.xlgmac_ring*, %struct.xlgmac_ring** %ring, align 8, !dbg !8791
  %coalesce_count76 = getelementptr inbounds %struct.xlgmac_ring, %struct.xlgmac_ring* %52, i32 0, i32 9, !dbg !8793
  %53 = load i32, i32* %coalesce_count76, align 8, !dbg !8793
  %54 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata, align 8, !dbg !8794
  %tx_frames77 = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %54, i32 0, i32 26, !dbg !8795
  %55 = load i32, i32* %tx_frames77, align 8, !dbg !8795
  %rem = urem i32 %53, %55, !dbg !8796
  %56 = load %struct.xlgmac_pkt_info*, %struct.xlgmac_pkt_info** %pkt_info, align 8, !dbg !8797
  %tx_packets78 = getelementptr inbounds %struct.xlgmac_pkt_info, %struct.xlgmac_pkt_info* %56, i32 0, i32 5, !dbg !8798
  %57 = load i32, i32* %tx_packets78, align 8, !dbg !8798
  %cmp79 = icmp ult i32 %rem, %57, !dbg !8799
  br i1 %cmp79, label %if.then81, label %if.else82, !dbg !8800

if.then81:                                        ; preds = %if.else75
  store i32 1, i32* %tx_set_ic, align 4, !dbg !8801
  br label %if.end83, !dbg !8802

if.else82:                                        ; preds = %if.else75
  store i32 0, i32* %tx_set_ic, align 4, !dbg !8803
  br label %if.end83

if.end83:                                         ; preds = %if.else82, %if.then81
  br label %if.end84

if.end84:                                         ; preds = %if.end83, %if.then74
  br label %if.end85

if.end85:                                         ; preds = %if.end84, %if.then68
  call void @llvm.dbg.declare(metadata %struct.xlgmac_ring** %_ring, metadata !8804, metadata !DIExpression()), !dbg !8806
  %58 = load %struct.xlgmac_ring*, %struct.xlgmac_ring** %ring, align 8, !dbg !8806
  store %struct.xlgmac_ring* %58, %struct.xlgmac_ring** %_ring, align 8, !dbg !8806
  %59 = load %struct.xlgmac_ring*, %struct.xlgmac_ring** %_ring, align 8, !dbg !8806
  %desc_data_head = getelementptr inbounds %struct.xlgmac_ring, %struct.xlgmac_ring* %59, i32 0, i32 4, !dbg !8806
  %60 = load %struct.xlgmac_desc_data*, %struct.xlgmac_desc_data** %desc_data_head, align 8, !dbg !8806
  %61 = load i32, i32* %cur_index, align 4, !dbg !8806
  %62 = load %struct.xlgmac_ring*, %struct.xlgmac_ring** %_ring, align 8, !dbg !8806
  %dma_desc_count = getelementptr inbounds %struct.xlgmac_ring, %struct.xlgmac_ring* %62, i32 0, i32 3, !dbg !8806
  %63 = load i32, i32* %dma_desc_count, align 16, !dbg !8806
  %sub87 = sub i32 %63, 1, !dbg !8806
  %and88 = and i32 %61, %sub87, !dbg !8806
  %idx.ext = zext i32 %and88 to i64, !dbg !8806
  %add.ptr = getelementptr %struct.xlgmac_desc_data, %struct.xlgmac_desc_data* %60, i64 %idx.ext, !dbg !8806
  store %struct.xlgmac_desc_data* %add.ptr, %struct.xlgmac_desc_data** %tmp86, align 8, !dbg !8806
  %64 = load %struct.xlgmac_desc_data*, %struct.xlgmac_desc_data** %tmp86, align 8, !dbg !8806
  store %struct.xlgmac_desc_data* %64, %struct.xlgmac_desc_data** %desc_data, align 8, !dbg !8807
  %65 = load %struct.xlgmac_desc_data*, %struct.xlgmac_desc_data** %desc_data, align 8, !dbg !8808
  %dma_desc89 = getelementptr inbounds %struct.xlgmac_desc_data, %struct.xlgmac_desc_data* %65, i32 0, i32 0, !dbg !8809
  %66 = load %struct.xlgmac_dma_desc*, %struct.xlgmac_dma_desc** %dma_desc89, align 8, !dbg !8809
  store %struct.xlgmac_dma_desc* %66, %struct.xlgmac_dma_desc** %dma_desc, align 8, !dbg !8810
  %67 = load i32, i32* %tso_context, align 4, !dbg !8811
  %tobool90 = icmp ne i32 %67, 0, !dbg !8811
  br i1 %tobool90, label %if.then92, label %lor.lhs.false, !dbg !8813

lor.lhs.false:                                    ; preds = %if.end85
  %68 = load i32, i32* %vlan_context, align 4, !dbg !8814
  %tobool91 = icmp ne i32 %68, 0, !dbg !8814
  br i1 %tobool91, label %if.then92, label %if.end348, !dbg !8815

if.then92:                                        ; preds = %lor.lhs.false, %if.end85
  %69 = load i32, i32* %tso_context, align 4, !dbg !8816
  %tobool93 = icmp ne i32 %69, 0, !dbg !8816
  br i1 %tobool93, label %if.then94, label %if.end212, !dbg !8819

if.then94:                                        ; preds = %if.then92
  store i32 0, i32* %tmp95, align 4, !dbg !8820
  %70 = load i32, i32* %tmp95, align 4, !dbg !8824
  call void @llvm.dbg.declare(metadata i32* %_var, metadata !8825, metadata !DIExpression()), !dbg !8827
  %71 = load %struct.xlgmac_dma_desc*, %struct.xlgmac_dma_desc** %dma_desc, align 8, !dbg !8827
  %desc2 = getelementptr inbounds %struct.xlgmac_dma_desc, %struct.xlgmac_dma_desc* %71, i32 0, i32 2, !dbg !8827
  %72 = load i32, i32* %desc2, align 4, !dbg !8827
  store i32 %72, i32* %_var, align 4, !dbg !8827
  call void @llvm.dbg.declare(metadata i32* %_pos96, metadata !8828, metadata !DIExpression()), !dbg !8827
  store i32 0, i32* %_pos96, align 4, !dbg !8827
  call void @llvm.dbg.declare(metadata i32* %_len97, metadata !8829, metadata !DIExpression()), !dbg !8827
  store i32 15, i32* %_len97, align 4, !dbg !8827
  call void @llvm.dbg.declare(metadata i16* %_val, metadata !8830, metadata !DIExpression()), !dbg !8827
  %73 = load %struct.xlgmac_pkt_info*, %struct.xlgmac_pkt_info** %pkt_info, align 8, !dbg !8827
  %mss98 = getelementptr inbounds %struct.xlgmac_pkt_info, %struct.xlgmac_pkt_info* %73, i32 0, i32 10, !dbg !8827
  %74 = load i16, i16* %mss98, align 4, !dbg !8827
  store i16 %74, i16* %_val, align 2, !dbg !8827
  %75 = load i16, i16* %_val, align 2, !dbg !8827
  %conv99 = zext i16 %75 to i32, !dbg !8827
  %76 = load i32, i32* %_pos96, align 4, !dbg !8827
  %shl100 = shl i32 %conv99, %76, !dbg !8827
  %conv101 = sext i32 %shl100 to i64, !dbg !8827
  %77 = load i32, i32* %_pos96, align 4, !dbg !8827
  %sh_prom102 = zext i32 %77 to i64, !dbg !8827
  %shl103 = shl i64 1, %sh_prom102, !dbg !8827
  %sub104 = sub i64 -1, %shl103, !dbg !8827
  %add105 = add i64 %sub104, 1, !dbg !8827
  %78 = load i32, i32* %_pos96, align 4, !dbg !8827
  %79 = load i32, i32* %_len97, align 4, !dbg !8827
  %add106 = add i32 %78, %79, !dbg !8827
  %sub107 = sub i32 %add106, 1, !dbg !8827
  %sub108 = sub i32 63, %sub107, !dbg !8827
  %sh_prom109 = zext i32 %sub108 to i64, !dbg !8827
  %shr110 = lshr i64 -1, %sh_prom109, !dbg !8827
  %and111 = and i64 %add105, %shr110, !dbg !8827
  %add112 = add i64 0, %and111, !dbg !8827
  %and113 = and i64 %conv101, %add112, !dbg !8827
  %conv114 = trunc i64 %and113 to i16, !dbg !8827
  store i16 %conv114, i16* %_val, align 2, !dbg !8827
  %80 = load i32, i32* %_var, align 4, !dbg !8827
  %conv115 = zext i32 %80 to i64, !dbg !8827
  %81 = load i32, i32* %_pos96, align 4, !dbg !8827
  %sh_prom116 = zext i32 %81 to i64, !dbg !8827
  %shl117 = shl i64 1, %sh_prom116, !dbg !8827
  %sub118 = sub i64 -1, %shl117, !dbg !8827
  %add119 = add i64 %sub118, 1, !dbg !8827
  %82 = load i32, i32* %_pos96, align 4, !dbg !8827
  %83 = load i32, i32* %_len97, align 4, !dbg !8827
  %add120 = add i32 %82, %83, !dbg !8827
  %sub121 = sub i32 %add120, 1, !dbg !8827
  %sub122 = sub i32 63, %sub121, !dbg !8827
  %sh_prom123 = zext i32 %sub122 to i64, !dbg !8827
  %shr124 = lshr i64 -1, %sh_prom123, !dbg !8827
  %and125 = and i64 %add119, %shr124, !dbg !8827
  %add126 = add i64 0, %and125, !dbg !8827
  %neg = xor i64 %add126, -1, !dbg !8827
  %and127 = and i64 %conv115, %neg, !dbg !8827
  %84 = load i16, i16* %_val, align 2, !dbg !8827
  %conv128 = zext i16 %84 to i64, !dbg !8827
  %or = or i64 %and127, %conv128, !dbg !8827
  %conv129 = trunc i64 %or to i32, !dbg !8827
  store i32 %conv129, i32* %_var, align 4, !dbg !8827
  %85 = load i32, i32* %_var, align 4, !dbg !8827
  store i32 %85, i32* %tmp130, align 4, !dbg !8827
  %86 = load i32, i32* %tmp130, align 4, !dbg !8827
  %87 = load %struct.xlgmac_dma_desc*, %struct.xlgmac_dma_desc** %dma_desc, align 8, !dbg !8831
  %desc2131 = getelementptr inbounds %struct.xlgmac_dma_desc, %struct.xlgmac_dma_desc* %87, i32 0, i32 2, !dbg !8832
  store i32 %86, i32* %desc2131, align 4, !dbg !8833
  call void @llvm.dbg.declare(metadata i32* %_var132, metadata !8834, metadata !DIExpression()), !dbg !8836
  %88 = load %struct.xlgmac_dma_desc*, %struct.xlgmac_dma_desc** %dma_desc, align 8, !dbg !8836
  %desc3 = getelementptr inbounds %struct.xlgmac_dma_desc, %struct.xlgmac_dma_desc* %88, i32 0, i32 3, !dbg !8836
  %89 = load i32, i32* %desc3, align 4, !dbg !8836
  store i32 %89, i32* %_var132, align 4, !dbg !8836
  call void @llvm.dbg.declare(metadata i32* %_pos133, metadata !8837, metadata !DIExpression()), !dbg !8836
  store i32 30, i32* %_pos133, align 4, !dbg !8836
  call void @llvm.dbg.declare(metadata i32* %_len134, metadata !8838, metadata !DIExpression()), !dbg !8836
  store i32 1, i32* %_len134, align 4, !dbg !8836
  call void @llvm.dbg.declare(metadata i32* %_val135, metadata !8839, metadata !DIExpression()), !dbg !8836
  store i32 1, i32* %_val135, align 4, !dbg !8836
  %90 = load i32, i32* %_val135, align 4, !dbg !8836
  %91 = load i32, i32* %_pos133, align 4, !dbg !8836
  %shl136 = shl i32 %90, %91, !dbg !8836
  %conv137 = sext i32 %shl136 to i64, !dbg !8836
  %92 = load i32, i32* %_pos133, align 4, !dbg !8836
  %sh_prom138 = zext i32 %92 to i64, !dbg !8836
  %shl139 = shl i64 1, %sh_prom138, !dbg !8836
  %sub140 = sub i64 -1, %shl139, !dbg !8836
  %add141 = add i64 %sub140, 1, !dbg !8836
  %93 = load i32, i32* %_pos133, align 4, !dbg !8836
  %94 = load i32, i32* %_len134, align 4, !dbg !8836
  %add142 = add i32 %93, %94, !dbg !8836
  %sub143 = sub i32 %add142, 1, !dbg !8836
  %sub144 = sub i32 63, %sub143, !dbg !8836
  %sh_prom145 = zext i32 %sub144 to i64, !dbg !8836
  %shr146 = lshr i64 -1, %sh_prom145, !dbg !8836
  %and147 = and i64 %add141, %shr146, !dbg !8836
  %add148 = add i64 0, %and147, !dbg !8836
  %and149 = and i64 %conv137, %add148, !dbg !8836
  %conv150 = trunc i64 %and149 to i32, !dbg !8836
  store i32 %conv150, i32* %_val135, align 4, !dbg !8836
  %95 = load i32, i32* %_var132, align 4, !dbg !8836
  %conv151 = zext i32 %95 to i64, !dbg !8836
  %96 = load i32, i32* %_pos133, align 4, !dbg !8836
  %sh_prom152 = zext i32 %96 to i64, !dbg !8836
  %shl153 = shl i64 1, %sh_prom152, !dbg !8836
  %sub154 = sub i64 -1, %shl153, !dbg !8836
  %add155 = add i64 %sub154, 1, !dbg !8836
  %97 = load i32, i32* %_pos133, align 4, !dbg !8836
  %98 = load i32, i32* %_len134, align 4, !dbg !8836
  %add156 = add i32 %97, %98, !dbg !8836
  %sub157 = sub i32 %add156, 1, !dbg !8836
  %sub158 = sub i32 63, %sub157, !dbg !8836
  %sh_prom159 = zext i32 %sub158 to i64, !dbg !8836
  %shr160 = lshr i64 -1, %sh_prom159, !dbg !8836
  %and161 = and i64 %add155, %shr160, !dbg !8836
  %add162 = add i64 0, %and161, !dbg !8836
  %neg163 = xor i64 %add162, -1, !dbg !8836
  %and164 = and i64 %conv151, %neg163, !dbg !8836
  %99 = load i32, i32* %_val135, align 4, !dbg !8836
  %conv165 = sext i32 %99 to i64, !dbg !8836
  %or166 = or i64 %and164, %conv165, !dbg !8836
  %conv167 = trunc i64 %or166 to i32, !dbg !8836
  store i32 %conv167, i32* %_var132, align 4, !dbg !8836
  %100 = load i32, i32* %_var132, align 4, !dbg !8836
  store i32 %100, i32* %tmp168, align 4, !dbg !8836
  %101 = load i32, i32* %tmp168, align 4, !dbg !8836
  %102 = load %struct.xlgmac_dma_desc*, %struct.xlgmac_dma_desc** %dma_desc, align 8, !dbg !8840
  %desc3169 = getelementptr inbounds %struct.xlgmac_dma_desc, %struct.xlgmac_dma_desc* %102, i32 0, i32 3, !dbg !8841
  store i32 %101, i32* %desc3169, align 4, !dbg !8842
  call void @llvm.dbg.declare(metadata i32* %_var170, metadata !8843, metadata !DIExpression()), !dbg !8845
  %103 = load %struct.xlgmac_dma_desc*, %struct.xlgmac_dma_desc** %dma_desc, align 8, !dbg !8845
  %desc3171 = getelementptr inbounds %struct.xlgmac_dma_desc, %struct.xlgmac_dma_desc* %103, i32 0, i32 3, !dbg !8845
  %104 = load i32, i32* %desc3171, align 4, !dbg !8845
  store i32 %104, i32* %_var170, align 4, !dbg !8845
  call void @llvm.dbg.declare(metadata i32* %_pos172, metadata !8846, metadata !DIExpression()), !dbg !8845
  store i32 26, i32* %_pos172, align 4, !dbg !8845
  call void @llvm.dbg.declare(metadata i32* %_len173, metadata !8847, metadata !DIExpression()), !dbg !8845
  store i32 1, i32* %_len173, align 4, !dbg !8845
  call void @llvm.dbg.declare(metadata i32* %_val174, metadata !8848, metadata !DIExpression()), !dbg !8845
  store i32 1, i32* %_val174, align 4, !dbg !8845
  %105 = load i32, i32* %_val174, align 4, !dbg !8845
  %106 = load i32, i32* %_pos172, align 4, !dbg !8845
  %shl175 = shl i32 %105, %106, !dbg !8845
  %conv176 = sext i32 %shl175 to i64, !dbg !8845
  %107 = load i32, i32* %_pos172, align 4, !dbg !8845
  %sh_prom177 = zext i32 %107 to i64, !dbg !8845
  %shl178 = shl i64 1, %sh_prom177, !dbg !8845
  %sub179 = sub i64 -1, %shl178, !dbg !8845
  %add180 = add i64 %sub179, 1, !dbg !8845
  %108 = load i32, i32* %_pos172, align 4, !dbg !8845
  %109 = load i32, i32* %_len173, align 4, !dbg !8845
  %add181 = add i32 %108, %109, !dbg !8845
  %sub182 = sub i32 %add181, 1, !dbg !8845
  %sub183 = sub i32 63, %sub182, !dbg !8845
  %sh_prom184 = zext i32 %sub183 to i64, !dbg !8845
  %shr185 = lshr i64 -1, %sh_prom184, !dbg !8845
  %and186 = and i64 %add180, %shr185, !dbg !8845
  %add187 = add i64 0, %and186, !dbg !8845
  %and188 = and i64 %conv176, %add187, !dbg !8845
  %conv189 = trunc i64 %and188 to i32, !dbg !8845
  store i32 %conv189, i32* %_val174, align 4, !dbg !8845
  %110 = load i32, i32* %_var170, align 4, !dbg !8845
  %conv190 = zext i32 %110 to i64, !dbg !8845
  %111 = load i32, i32* %_pos172, align 4, !dbg !8845
  %sh_prom191 = zext i32 %111 to i64, !dbg !8845
  %shl192 = shl i64 1, %sh_prom191, !dbg !8845
  %sub193 = sub i64 -1, %shl192, !dbg !8845
  %add194 = add i64 %sub193, 1, !dbg !8845
  %112 = load i32, i32* %_pos172, align 4, !dbg !8845
  %113 = load i32, i32* %_len173, align 4, !dbg !8845
  %add195 = add i32 %112, %113, !dbg !8845
  %sub196 = sub i32 %add195, 1, !dbg !8845
  %sub197 = sub i32 63, %sub196, !dbg !8845
  %sh_prom198 = zext i32 %sub197 to i64, !dbg !8845
  %shr199 = lshr i64 -1, %sh_prom198, !dbg !8845
  %and200 = and i64 %add194, %shr199, !dbg !8845
  %add201 = add i64 0, %and200, !dbg !8845
  %neg202 = xor i64 %add201, -1, !dbg !8845
  %and203 = and i64 %conv190, %neg202, !dbg !8845
  %114 = load i32, i32* %_val174, align 4, !dbg !8845
  %conv204 = sext i32 %114 to i64, !dbg !8845
  %or205 = or i64 %and203, %conv204, !dbg !8845
  %conv206 = trunc i64 %or205 to i32, !dbg !8845
  store i32 %conv206, i32* %_var170, align 4, !dbg !8845
  %115 = load i32, i32* %_var170, align 4, !dbg !8845
  store i32 %115, i32* %tmp207, align 4, !dbg !8845
  %116 = load i32, i32* %tmp207, align 4, !dbg !8845
  %117 = load %struct.xlgmac_dma_desc*, %struct.xlgmac_dma_desc** %dma_desc, align 8, !dbg !8849
  %desc3208 = getelementptr inbounds %struct.xlgmac_dma_desc, %struct.xlgmac_dma_desc* %117, i32 0, i32 3, !dbg !8850
  store i32 %116, i32* %desc3208, align 4, !dbg !8851
  %118 = load %struct.xlgmac_pkt_info*, %struct.xlgmac_pkt_info** %pkt_info, align 8, !dbg !8852
  %mss209 = getelementptr inbounds %struct.xlgmac_pkt_info, %struct.xlgmac_pkt_info* %118, i32 0, i32 10, !dbg !8853
  %119 = load i16, i16* %mss209, align 4, !dbg !8853
  %120 = load %struct.xlgmac_ring*, %struct.xlgmac_ring** %ring, align 8, !dbg !8854
  %121 = getelementptr inbounds %struct.xlgmac_ring, %struct.xlgmac_ring* %120, i32 0, i32 10, !dbg !8855
  %tx210 = bitcast %union.anon.129* %121 to %struct.anon.130*, !dbg !8855
  %cur_mss211 = getelementptr inbounds %struct.anon.130, %struct.anon.130* %tx210, i32 0, i32 2, !dbg !8856
  store i16 %119, i16* %cur_mss211, align 4, !dbg !8857
  br label %if.end212, !dbg !8858

if.end212:                                        ; preds = %if.then94, %if.then92
  %122 = load i32, i32* %vlan_context, align 4, !dbg !8859
  %tobool213 = icmp ne i32 %122, 0, !dbg !8859
  br i1 %tobool213, label %if.then214, label %if.end338, !dbg !8861

if.then214:                                       ; preds = %if.end212
  store i32 0, i32* %tmp215, align 4, !dbg !8862
  %123 = load i32, i32* %tmp215, align 4, !dbg !8866
  call void @llvm.dbg.declare(metadata i32* %_var216, metadata !8867, metadata !DIExpression()), !dbg !8869
  %124 = load %struct.xlgmac_dma_desc*, %struct.xlgmac_dma_desc** %dma_desc, align 8, !dbg !8869
  %desc3217 = getelementptr inbounds %struct.xlgmac_dma_desc, %struct.xlgmac_dma_desc* %124, i32 0, i32 3, !dbg !8869
  %125 = load i32, i32* %desc3217, align 4, !dbg !8869
  store i32 %125, i32* %_var216, align 4, !dbg !8869
  call void @llvm.dbg.declare(metadata i32* %_pos218, metadata !8870, metadata !DIExpression()), !dbg !8869
  store i32 30, i32* %_pos218, align 4, !dbg !8869
  call void @llvm.dbg.declare(metadata i32* %_len219, metadata !8871, metadata !DIExpression()), !dbg !8869
  store i32 1, i32* %_len219, align 4, !dbg !8869
  call void @llvm.dbg.declare(metadata i32* %_val220, metadata !8872, metadata !DIExpression()), !dbg !8869
  store i32 1, i32* %_val220, align 4, !dbg !8869
  %126 = load i32, i32* %_val220, align 4, !dbg !8869
  %127 = load i32, i32* %_pos218, align 4, !dbg !8869
  %shl221 = shl i32 %126, %127, !dbg !8869
  %conv222 = sext i32 %shl221 to i64, !dbg !8869
  %128 = load i32, i32* %_pos218, align 4, !dbg !8869
  %sh_prom223 = zext i32 %128 to i64, !dbg !8869
  %shl224 = shl i64 1, %sh_prom223, !dbg !8869
  %sub225 = sub i64 -1, %shl224, !dbg !8869
  %add226 = add i64 %sub225, 1, !dbg !8869
  %129 = load i32, i32* %_pos218, align 4, !dbg !8869
  %130 = load i32, i32* %_len219, align 4, !dbg !8869
  %add227 = add i32 %129, %130, !dbg !8869
  %sub228 = sub i32 %add227, 1, !dbg !8869
  %sub229 = sub i32 63, %sub228, !dbg !8869
  %sh_prom230 = zext i32 %sub229 to i64, !dbg !8869
  %shr231 = lshr i64 -1, %sh_prom230, !dbg !8869
  %and232 = and i64 %add226, %shr231, !dbg !8869
  %add233 = add i64 0, %and232, !dbg !8869
  %and234 = and i64 %conv222, %add233, !dbg !8869
  %conv235 = trunc i64 %and234 to i32, !dbg !8869
  store i32 %conv235, i32* %_val220, align 4, !dbg !8869
  %131 = load i32, i32* %_var216, align 4, !dbg !8869
  %conv236 = zext i32 %131 to i64, !dbg !8869
  %132 = load i32, i32* %_pos218, align 4, !dbg !8869
  %sh_prom237 = zext i32 %132 to i64, !dbg !8869
  %shl238 = shl i64 1, %sh_prom237, !dbg !8869
  %sub239 = sub i64 -1, %shl238, !dbg !8869
  %add240 = add i64 %sub239, 1, !dbg !8869
  %133 = load i32, i32* %_pos218, align 4, !dbg !8869
  %134 = load i32, i32* %_len219, align 4, !dbg !8869
  %add241 = add i32 %133, %134, !dbg !8869
  %sub242 = sub i32 %add241, 1, !dbg !8869
  %sub243 = sub i32 63, %sub242, !dbg !8869
  %sh_prom244 = zext i32 %sub243 to i64, !dbg !8869
  %shr245 = lshr i64 -1, %sh_prom244, !dbg !8869
  %and246 = and i64 %add240, %shr245, !dbg !8869
  %add247 = add i64 0, %and246, !dbg !8869
  %neg248 = xor i64 %add247, -1, !dbg !8869
  %and249 = and i64 %conv236, %neg248, !dbg !8869
  %135 = load i32, i32* %_val220, align 4, !dbg !8869
  %conv250 = sext i32 %135 to i64, !dbg !8869
  %or251 = or i64 %and249, %conv250, !dbg !8869
  %conv252 = trunc i64 %or251 to i32, !dbg !8869
  store i32 %conv252, i32* %_var216, align 4, !dbg !8869
  %136 = load i32, i32* %_var216, align 4, !dbg !8869
  store i32 %136, i32* %tmp253, align 4, !dbg !8869
  %137 = load i32, i32* %tmp253, align 4, !dbg !8869
  %138 = load %struct.xlgmac_dma_desc*, %struct.xlgmac_dma_desc** %dma_desc, align 8, !dbg !8873
  %desc3254 = getelementptr inbounds %struct.xlgmac_dma_desc, %struct.xlgmac_dma_desc* %138, i32 0, i32 3, !dbg !8874
  store i32 %137, i32* %desc3254, align 4, !dbg !8875
  call void @llvm.dbg.declare(metadata i32* %_var255, metadata !8876, metadata !DIExpression()), !dbg !8878
  %139 = load %struct.xlgmac_dma_desc*, %struct.xlgmac_dma_desc** %dma_desc, align 8, !dbg !8878
  %desc3256 = getelementptr inbounds %struct.xlgmac_dma_desc, %struct.xlgmac_dma_desc* %139, i32 0, i32 3, !dbg !8878
  %140 = load i32, i32* %desc3256, align 4, !dbg !8878
  store i32 %140, i32* %_var255, align 4, !dbg !8878
  call void @llvm.dbg.declare(metadata i32* %_pos257, metadata !8879, metadata !DIExpression()), !dbg !8878
  store i32 0, i32* %_pos257, align 4, !dbg !8878
  call void @llvm.dbg.declare(metadata i32* %_len258, metadata !8880, metadata !DIExpression()), !dbg !8878
  store i32 16, i32* %_len258, align 4, !dbg !8878
  call void @llvm.dbg.declare(metadata i16* %_val259, metadata !8881, metadata !DIExpression()), !dbg !8878
  %141 = load %struct.xlgmac_pkt_info*, %struct.xlgmac_pkt_info** %pkt_info, align 8, !dbg !8878
  %vlan_ctag260 = getelementptr inbounds %struct.xlgmac_pkt_info, %struct.xlgmac_pkt_info* %141, i32 0, i32 11, !dbg !8878
  %142 = load i16, i16* %vlan_ctag260, align 2, !dbg !8878
  store i16 %142, i16* %_val259, align 2, !dbg !8878
  %143 = load i16, i16* %_val259, align 2, !dbg !8878
  %conv261 = zext i16 %143 to i32, !dbg !8878
  %144 = load i32, i32* %_pos257, align 4, !dbg !8878
  %shl262 = shl i32 %conv261, %144, !dbg !8878
  %conv263 = sext i32 %shl262 to i64, !dbg !8878
  %145 = load i32, i32* %_pos257, align 4, !dbg !8878
  %sh_prom264 = zext i32 %145 to i64, !dbg !8878
  %shl265 = shl i64 1, %sh_prom264, !dbg !8878
  %sub266 = sub i64 -1, %shl265, !dbg !8878
  %add267 = add i64 %sub266, 1, !dbg !8878
  %146 = load i32, i32* %_pos257, align 4, !dbg !8878
  %147 = load i32, i32* %_len258, align 4, !dbg !8878
  %add268 = add i32 %146, %147, !dbg !8878
  %sub269 = sub i32 %add268, 1, !dbg !8878
  %sub270 = sub i32 63, %sub269, !dbg !8878
  %sh_prom271 = zext i32 %sub270 to i64, !dbg !8878
  %shr272 = lshr i64 -1, %sh_prom271, !dbg !8878
  %and273 = and i64 %add267, %shr272, !dbg !8878
  %add274 = add i64 0, %and273, !dbg !8878
  %and275 = and i64 %conv263, %add274, !dbg !8878
  %conv276 = trunc i64 %and275 to i16, !dbg !8878
  store i16 %conv276, i16* %_val259, align 2, !dbg !8878
  %148 = load i32, i32* %_var255, align 4, !dbg !8878
  %conv277 = zext i32 %148 to i64, !dbg !8878
  %149 = load i32, i32* %_pos257, align 4, !dbg !8878
  %sh_prom278 = zext i32 %149 to i64, !dbg !8878
  %shl279 = shl i64 1, %sh_prom278, !dbg !8878
  %sub280 = sub i64 -1, %shl279, !dbg !8878
  %add281 = add i64 %sub280, 1, !dbg !8878
  %150 = load i32, i32* %_pos257, align 4, !dbg !8878
  %151 = load i32, i32* %_len258, align 4, !dbg !8878
  %add282 = add i32 %150, %151, !dbg !8878
  %sub283 = sub i32 %add282, 1, !dbg !8878
  %sub284 = sub i32 63, %sub283, !dbg !8878
  %sh_prom285 = zext i32 %sub284 to i64, !dbg !8878
  %shr286 = lshr i64 -1, %sh_prom285, !dbg !8878
  %and287 = and i64 %add281, %shr286, !dbg !8878
  %add288 = add i64 0, %and287, !dbg !8878
  %neg289 = xor i64 %add288, -1, !dbg !8878
  %and290 = and i64 %conv277, %neg289, !dbg !8878
  %152 = load i16, i16* %_val259, align 2, !dbg !8878
  %conv291 = zext i16 %152 to i64, !dbg !8878
  %or292 = or i64 %and290, %conv291, !dbg !8878
  %conv293 = trunc i64 %or292 to i32, !dbg !8878
  store i32 %conv293, i32* %_var255, align 4, !dbg !8878
  %153 = load i32, i32* %_var255, align 4, !dbg !8878
  store i32 %153, i32* %tmp294, align 4, !dbg !8878
  %154 = load i32, i32* %tmp294, align 4, !dbg !8878
  %155 = load %struct.xlgmac_dma_desc*, %struct.xlgmac_dma_desc** %dma_desc, align 8, !dbg !8882
  %desc3295 = getelementptr inbounds %struct.xlgmac_dma_desc, %struct.xlgmac_dma_desc* %155, i32 0, i32 3, !dbg !8883
  store i32 %154, i32* %desc3295, align 4, !dbg !8884
  call void @llvm.dbg.declare(metadata i32* %_var296, metadata !8885, metadata !DIExpression()), !dbg !8887
  %156 = load %struct.xlgmac_dma_desc*, %struct.xlgmac_dma_desc** %dma_desc, align 8, !dbg !8887
  %desc3297 = getelementptr inbounds %struct.xlgmac_dma_desc, %struct.xlgmac_dma_desc* %156, i32 0, i32 3, !dbg !8887
  %157 = load i32, i32* %desc3297, align 4, !dbg !8887
  store i32 %157, i32* %_var296, align 4, !dbg !8887
  call void @llvm.dbg.declare(metadata i32* %_pos298, metadata !8888, metadata !DIExpression()), !dbg !8887
  store i32 16, i32* %_pos298, align 4, !dbg !8887
  call void @llvm.dbg.declare(metadata i32* %_len299, metadata !8889, metadata !DIExpression()), !dbg !8887
  store i32 1, i32* %_len299, align 4, !dbg !8887
  call void @llvm.dbg.declare(metadata i32* %_val300, metadata !8890, metadata !DIExpression()), !dbg !8887
  store i32 1, i32* %_val300, align 4, !dbg !8887
  %158 = load i32, i32* %_val300, align 4, !dbg !8887
  %159 = load i32, i32* %_pos298, align 4, !dbg !8887
  %shl301 = shl i32 %158, %159, !dbg !8887
  %conv302 = sext i32 %shl301 to i64, !dbg !8887
  %160 = load i32, i32* %_pos298, align 4, !dbg !8887
  %sh_prom303 = zext i32 %160 to i64, !dbg !8887
  %shl304 = shl i64 1, %sh_prom303, !dbg !8887
  %sub305 = sub i64 -1, %shl304, !dbg !8887
  %add306 = add i64 %sub305, 1, !dbg !8887
  %161 = load i32, i32* %_pos298, align 4, !dbg !8887
  %162 = load i32, i32* %_len299, align 4, !dbg !8887
  %add307 = add i32 %161, %162, !dbg !8887
  %sub308 = sub i32 %add307, 1, !dbg !8887
  %sub309 = sub i32 63, %sub308, !dbg !8887
  %sh_prom310 = zext i32 %sub309 to i64, !dbg !8887
  %shr311 = lshr i64 -1, %sh_prom310, !dbg !8887
  %and312 = and i64 %add306, %shr311, !dbg !8887
  %add313 = add i64 0, %and312, !dbg !8887
  %and314 = and i64 %conv302, %add313, !dbg !8887
  %conv315 = trunc i64 %and314 to i32, !dbg !8887
  store i32 %conv315, i32* %_val300, align 4, !dbg !8887
  %163 = load i32, i32* %_var296, align 4, !dbg !8887
  %conv316 = zext i32 %163 to i64, !dbg !8887
  %164 = load i32, i32* %_pos298, align 4, !dbg !8887
  %sh_prom317 = zext i32 %164 to i64, !dbg !8887
  %shl318 = shl i64 1, %sh_prom317, !dbg !8887
  %sub319 = sub i64 -1, %shl318, !dbg !8887
  %add320 = add i64 %sub319, 1, !dbg !8887
  %165 = load i32, i32* %_pos298, align 4, !dbg !8887
  %166 = load i32, i32* %_len299, align 4, !dbg !8887
  %add321 = add i32 %165, %166, !dbg !8887
  %sub322 = sub i32 %add321, 1, !dbg !8887
  %sub323 = sub i32 63, %sub322, !dbg !8887
  %sh_prom324 = zext i32 %sub323 to i64, !dbg !8887
  %shr325 = lshr i64 -1, %sh_prom324, !dbg !8887
  %and326 = and i64 %add320, %shr325, !dbg !8887
  %add327 = add i64 0, %and326, !dbg !8887
  %neg328 = xor i64 %add327, -1, !dbg !8887
  %and329 = and i64 %conv316, %neg328, !dbg !8887
  %167 = load i32, i32* %_val300, align 4, !dbg !8887
  %conv330 = sext i32 %167 to i64, !dbg !8887
  %or331 = or i64 %and329, %conv330, !dbg !8887
  %conv332 = trunc i64 %or331 to i32, !dbg !8887
  store i32 %conv332, i32* %_var296, align 4, !dbg !8887
  %168 = load i32, i32* %_var296, align 4, !dbg !8887
  store i32 %168, i32* %tmp333, align 4, !dbg !8887
  %169 = load i32, i32* %tmp333, align 4, !dbg !8887
  %170 = load %struct.xlgmac_dma_desc*, %struct.xlgmac_dma_desc** %dma_desc, align 8, !dbg !8891
  %desc3334 = getelementptr inbounds %struct.xlgmac_dma_desc, %struct.xlgmac_dma_desc* %170, i32 0, i32 3, !dbg !8892
  store i32 %169, i32* %desc3334, align 4, !dbg !8893
  %171 = load %struct.xlgmac_pkt_info*, %struct.xlgmac_pkt_info** %pkt_info, align 8, !dbg !8894
  %vlan_ctag335 = getelementptr inbounds %struct.xlgmac_pkt_info, %struct.xlgmac_pkt_info* %171, i32 0, i32 11, !dbg !8895
  %172 = load i16, i16* %vlan_ctag335, align 2, !dbg !8895
  %173 = load %struct.xlgmac_ring*, %struct.xlgmac_ring** %ring, align 8, !dbg !8896
  %174 = getelementptr inbounds %struct.xlgmac_ring, %struct.xlgmac_ring* %173, i32 0, i32 10, !dbg !8897
  %tx336 = bitcast %union.anon.129* %174 to %struct.anon.130*, !dbg !8897
  %cur_vlan_ctag337 = getelementptr inbounds %struct.anon.130, %struct.anon.130* %tx336, i32 0, i32 3, !dbg !8898
  store i16 %172, i16* %cur_vlan_ctag337, align 2, !dbg !8899
  br label %if.end338, !dbg !8900

if.end338:                                        ; preds = %if.then214, %if.end212
  %175 = load i32, i32* %cur_index, align 4, !dbg !8901
  %inc = add i32 %175, 1, !dbg !8901
  store i32 %inc, i32* %cur_index, align 4, !dbg !8901
  call void @llvm.dbg.declare(metadata %struct.xlgmac_ring** %_ring339, metadata !8902, metadata !DIExpression()), !dbg !8904
  %176 = load %struct.xlgmac_ring*, %struct.xlgmac_ring** %ring, align 8, !dbg !8904
  store %struct.xlgmac_ring* %176, %struct.xlgmac_ring** %_ring339, align 8, !dbg !8904
  %177 = load %struct.xlgmac_ring*, %struct.xlgmac_ring** %_ring339, align 8, !dbg !8904
  %desc_data_head341 = getelementptr inbounds %struct.xlgmac_ring, %struct.xlgmac_ring* %177, i32 0, i32 4, !dbg !8904
  %178 = load %struct.xlgmac_desc_data*, %struct.xlgmac_desc_data** %desc_data_head341, align 8, !dbg !8904
  %179 = load i32, i32* %cur_index, align 4, !dbg !8904
  %180 = load %struct.xlgmac_ring*, %struct.xlgmac_ring** %_ring339, align 8, !dbg !8904
  %dma_desc_count342 = getelementptr inbounds %struct.xlgmac_ring, %struct.xlgmac_ring* %180, i32 0, i32 3, !dbg !8904
  %181 = load i32, i32* %dma_desc_count342, align 16, !dbg !8904
  %sub343 = sub i32 %181, 1, !dbg !8904
  %and344 = and i32 %179, %sub343, !dbg !8904
  %idx.ext345 = zext i32 %and344 to i64, !dbg !8904
  %add.ptr346 = getelementptr %struct.xlgmac_desc_data, %struct.xlgmac_desc_data* %178, i64 %idx.ext345, !dbg !8904
  store %struct.xlgmac_desc_data* %add.ptr346, %struct.xlgmac_desc_data** %tmp340, align 8, !dbg !8904
  %182 = load %struct.xlgmac_desc_data*, %struct.xlgmac_desc_data** %tmp340, align 8, !dbg !8904
  store %struct.xlgmac_desc_data* %182, %struct.xlgmac_desc_data** %desc_data, align 8, !dbg !8905
  %183 = load %struct.xlgmac_desc_data*, %struct.xlgmac_desc_data** %desc_data, align 8, !dbg !8906
  %dma_desc347 = getelementptr inbounds %struct.xlgmac_desc_data, %struct.xlgmac_desc_data* %183, i32 0, i32 0, !dbg !8907
  %184 = load %struct.xlgmac_dma_desc*, %struct.xlgmac_dma_desc** %dma_desc347, align 8, !dbg !8907
  store %struct.xlgmac_dma_desc* %184, %struct.xlgmac_dma_desc** %dma_desc, align 8, !dbg !8908
  br label %if.end348, !dbg !8909

if.end348:                                        ; preds = %if.end338, %lor.lhs.false
  %185 = load %struct.xlgmac_desc_data*, %struct.xlgmac_desc_data** %desc_data, align 8, !dbg !8910
  %skb_dma = getelementptr inbounds %struct.xlgmac_desc_data, %struct.xlgmac_desc_data* %185, i32 0, i32 3, !dbg !8910
  %186 = load i64, i64* %skb_dma, align 8, !dbg !8910
  %and349 = and i64 %186, 4294967295, !dbg !8910
  %conv350 = trunc i64 %and349 to i32, !dbg !8910
  %187 = load %struct.xlgmac_dma_desc*, %struct.xlgmac_dma_desc** %dma_desc, align 8, !dbg !8911
  %desc0 = getelementptr inbounds %struct.xlgmac_dma_desc, %struct.xlgmac_dma_desc* %187, i32 0, i32 0, !dbg !8912
  store i32 %conv350, i32* %desc0, align 4, !dbg !8913
  %188 = load %struct.xlgmac_desc_data*, %struct.xlgmac_desc_data** %desc_data, align 8, !dbg !8914
  %skb_dma351 = getelementptr inbounds %struct.xlgmac_desc_data, %struct.xlgmac_desc_data* %188, i32 0, i32 3, !dbg !8914
  %189 = load i64, i64* %skb_dma351, align 8, !dbg !8914
  %shr352 = lshr i64 %189, 16, !dbg !8914
  %shr353 = lshr i64 %shr352, 16, !dbg !8914
  %conv354 = trunc i64 %shr353 to i32, !dbg !8914
  %190 = load %struct.xlgmac_dma_desc*, %struct.xlgmac_dma_desc** %dma_desc, align 8, !dbg !8915
  %desc1 = getelementptr inbounds %struct.xlgmac_dma_desc, %struct.xlgmac_dma_desc* %190, i32 0, i32 1, !dbg !8916
  store i32 %conv354, i32* %desc1, align 4, !dbg !8917
  call void @llvm.dbg.declare(metadata i32* %_var355, metadata !8918, metadata !DIExpression()), !dbg !8920
  %191 = load %struct.xlgmac_dma_desc*, %struct.xlgmac_dma_desc** %dma_desc, align 8, !dbg !8920
  %desc2356 = getelementptr inbounds %struct.xlgmac_dma_desc, %struct.xlgmac_dma_desc* %191, i32 0, i32 2, !dbg !8920
  %192 = load i32, i32* %desc2356, align 4, !dbg !8920
  store i32 %192, i32* %_var355, align 4, !dbg !8920
  call void @llvm.dbg.declare(metadata i32* %_pos357, metadata !8921, metadata !DIExpression()), !dbg !8920
  store i32 0, i32* %_pos357, align 4, !dbg !8920
  call void @llvm.dbg.declare(metadata i32* %_len358, metadata !8922, metadata !DIExpression()), !dbg !8920
  store i32 14, i32* %_len358, align 4, !dbg !8920
  call void @llvm.dbg.declare(metadata i32* %_val359, metadata !8923, metadata !DIExpression()), !dbg !8920
  %193 = load %struct.xlgmac_desc_data*, %struct.xlgmac_desc_data** %desc_data, align 8, !dbg !8920
  %skb_dma_len = getelementptr inbounds %struct.xlgmac_desc_data, %struct.xlgmac_desc_data* %193, i32 0, i32 4, !dbg !8920
  %194 = load i32, i32* %skb_dma_len, align 8, !dbg !8920
  store i32 %194, i32* %_val359, align 4, !dbg !8920
  %195 = load i32, i32* %_val359, align 4, !dbg !8920
  %196 = load i32, i32* %_pos357, align 4, !dbg !8920
  %shl360 = shl i32 %195, %196, !dbg !8920
  %conv361 = zext i32 %shl360 to i64, !dbg !8920
  %197 = load i32, i32* %_pos357, align 4, !dbg !8920
  %sh_prom362 = zext i32 %197 to i64, !dbg !8920
  %shl363 = shl i64 1, %sh_prom362, !dbg !8920
  %sub364 = sub i64 -1, %shl363, !dbg !8920
  %add365 = add i64 %sub364, 1, !dbg !8920
  %198 = load i32, i32* %_pos357, align 4, !dbg !8920
  %199 = load i32, i32* %_len358, align 4, !dbg !8920
  %add366 = add i32 %198, %199, !dbg !8920
  %sub367 = sub i32 %add366, 1, !dbg !8920
  %sub368 = sub i32 63, %sub367, !dbg !8920
  %sh_prom369 = zext i32 %sub368 to i64, !dbg !8920
  %shr370 = lshr i64 -1, %sh_prom369, !dbg !8920
  %and371 = and i64 %add365, %shr370, !dbg !8920
  %add372 = add i64 0, %and371, !dbg !8920
  %and373 = and i64 %conv361, %add372, !dbg !8920
  %conv374 = trunc i64 %and373 to i32, !dbg !8920
  store i32 %conv374, i32* %_val359, align 4, !dbg !8920
  %200 = load i32, i32* %_var355, align 4, !dbg !8920
  %conv375 = zext i32 %200 to i64, !dbg !8920
  %201 = load i32, i32* %_pos357, align 4, !dbg !8920
  %sh_prom376 = zext i32 %201 to i64, !dbg !8920
  %shl377 = shl i64 1, %sh_prom376, !dbg !8920
  %sub378 = sub i64 -1, %shl377, !dbg !8920
  %add379 = add i64 %sub378, 1, !dbg !8920
  %202 = load i32, i32* %_pos357, align 4, !dbg !8920
  %203 = load i32, i32* %_len358, align 4, !dbg !8920
  %add380 = add i32 %202, %203, !dbg !8920
  %sub381 = sub i32 %add380, 1, !dbg !8920
  %sub382 = sub i32 63, %sub381, !dbg !8920
  %sh_prom383 = zext i32 %sub382 to i64, !dbg !8920
  %shr384 = lshr i64 -1, %sh_prom383, !dbg !8920
  %and385 = and i64 %add379, %shr384, !dbg !8920
  %add386 = add i64 0, %and385, !dbg !8920
  %neg387 = xor i64 %add386, -1, !dbg !8920
  %and388 = and i64 %conv375, %neg387, !dbg !8920
  %204 = load i32, i32* %_val359, align 4, !dbg !8920
  %conv389 = zext i32 %204 to i64, !dbg !8920
  %or390 = or i64 %and388, %conv389, !dbg !8920
  %conv391 = trunc i64 %or390 to i32, !dbg !8920
  store i32 %conv391, i32* %_var355, align 4, !dbg !8920
  %205 = load i32, i32* %_var355, align 4, !dbg !8920
  store i32 %205, i32* %tmp392, align 4, !dbg !8920
  %206 = load i32, i32* %tmp392, align 4, !dbg !8920
  %207 = load %struct.xlgmac_dma_desc*, %struct.xlgmac_dma_desc** %dma_desc, align 8, !dbg !8924
  %desc2393 = getelementptr inbounds %struct.xlgmac_dma_desc, %struct.xlgmac_dma_desc* %207, i32 0, i32 2, !dbg !8925
  store i32 %206, i32* %desc2393, align 4, !dbg !8926
  %208 = load i32, i32* %vlan, align 4, !dbg !8927
  %tobool394 = icmp ne i32 %208, 0, !dbg !8927
  br i1 %tobool394, label %if.then395, label %if.end436, !dbg !8929

if.then395:                                       ; preds = %if.end348
  call void @llvm.dbg.declare(metadata i32* %_var396, metadata !8930, metadata !DIExpression()), !dbg !8933
  %209 = load %struct.xlgmac_dma_desc*, %struct.xlgmac_dma_desc** %dma_desc, align 8, !dbg !8933
  %desc2397 = getelementptr inbounds %struct.xlgmac_dma_desc, %struct.xlgmac_dma_desc* %209, i32 0, i32 2, !dbg !8933
  %210 = load i32, i32* %desc2397, align 4, !dbg !8933
  store i32 %210, i32* %_var396, align 4, !dbg !8933
  call void @llvm.dbg.declare(metadata i32* %_pos398, metadata !8934, metadata !DIExpression()), !dbg !8933
  store i32 14, i32* %_pos398, align 4, !dbg !8933
  call void @llvm.dbg.declare(metadata i32* %_len399, metadata !8935, metadata !DIExpression()), !dbg !8933
  store i32 2, i32* %_len399, align 4, !dbg !8933
  call void @llvm.dbg.declare(metadata i32* %_val400, metadata !8936, metadata !DIExpression()), !dbg !8933
  store i32 2, i32* %_val400, align 4, !dbg !8933
  %211 = load i32, i32* %_val400, align 4, !dbg !8933
  %212 = load i32, i32* %_pos398, align 4, !dbg !8933
  %shl401 = shl i32 %211, %212, !dbg !8933
  %conv402 = sext i32 %shl401 to i64, !dbg !8933
  %213 = load i32, i32* %_pos398, align 4, !dbg !8933
  %sh_prom403 = zext i32 %213 to i64, !dbg !8933
  %shl404 = shl i64 1, %sh_prom403, !dbg !8933
  %sub405 = sub i64 -1, %shl404, !dbg !8933
  %add406 = add i64 %sub405, 1, !dbg !8933
  %214 = load i32, i32* %_pos398, align 4, !dbg !8933
  %215 = load i32, i32* %_len399, align 4, !dbg !8933
  %add407 = add i32 %214, %215, !dbg !8933
  %sub408 = sub i32 %add407, 1, !dbg !8933
  %sub409 = sub i32 63, %sub408, !dbg !8933
  %sh_prom410 = zext i32 %sub409 to i64, !dbg !8933
  %shr411 = lshr i64 -1, %sh_prom410, !dbg !8933
  %and412 = and i64 %add406, %shr411, !dbg !8933
  %add413 = add i64 0, %and412, !dbg !8933
  %and414 = and i64 %conv402, %add413, !dbg !8933
  %conv415 = trunc i64 %and414 to i32, !dbg !8933
  store i32 %conv415, i32* %_val400, align 4, !dbg !8933
  %216 = load i32, i32* %_var396, align 4, !dbg !8933
  %conv416 = zext i32 %216 to i64, !dbg !8933
  %217 = load i32, i32* %_pos398, align 4, !dbg !8933
  %sh_prom417 = zext i32 %217 to i64, !dbg !8933
  %shl418 = shl i64 1, %sh_prom417, !dbg !8933
  %sub419 = sub i64 -1, %shl418, !dbg !8933
  %add420 = add i64 %sub419, 1, !dbg !8933
  %218 = load i32, i32* %_pos398, align 4, !dbg !8933
  %219 = load i32, i32* %_len399, align 4, !dbg !8933
  %add421 = add i32 %218, %219, !dbg !8933
  %sub422 = sub i32 %add421, 1, !dbg !8933
  %sub423 = sub i32 63, %sub422, !dbg !8933
  %sh_prom424 = zext i32 %sub423 to i64, !dbg !8933
  %shr425 = lshr i64 -1, %sh_prom424, !dbg !8933
  %and426 = and i64 %add420, %shr425, !dbg !8933
  %add427 = add i64 0, %and426, !dbg !8933
  %neg428 = xor i64 %add427, -1, !dbg !8933
  %and429 = and i64 %conv416, %neg428, !dbg !8933
  %220 = load i32, i32* %_val400, align 4, !dbg !8933
  %conv430 = sext i32 %220 to i64, !dbg !8933
  %or431 = or i64 %and429, %conv430, !dbg !8933
  %conv432 = trunc i64 %or431 to i32, !dbg !8933
  store i32 %conv432, i32* %_var396, align 4, !dbg !8933
  %221 = load i32, i32* %_var396, align 4, !dbg !8933
  store i32 %221, i32* %tmp433, align 4, !dbg !8933
  %222 = load i32, i32* %tmp433, align 4, !dbg !8933
  %223 = load %struct.xlgmac_dma_desc*, %struct.xlgmac_dma_desc** %dma_desc, align 8, !dbg !8937
  %desc2434 = getelementptr inbounds %struct.xlgmac_dma_desc, %struct.xlgmac_dma_desc* %223, i32 0, i32 2, !dbg !8938
  store i32 %222, i32* %desc2434, align 4, !dbg !8939
  %224 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata, align 8, !dbg !8940
  %stats = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %224, i32 0, i32 4, !dbg !8941
  %tx_vlan_packets = getelementptr inbounds %struct.xlgmac_stats, %struct.xlgmac_stats* %stats, i32 0, i32 48, !dbg !8942
  %225 = load i64, i64* %tx_vlan_packets, align 8, !dbg !8943
  %inc435 = add i64 %225, 1, !dbg !8943
  store i64 %inc435, i64* %tx_vlan_packets, align 8, !dbg !8943
  br label %if.end436, !dbg !8944

if.end436:                                        ; preds = %if.then395, %if.end348
  call void @llvm.dbg.declare(metadata i32* %_pos437, metadata !8945, metadata !DIExpression()), !dbg !8948
  store i32 3, i32* %_pos437, align 4, !dbg !8948
  call void @llvm.dbg.declare(metadata i32* %_len438, metadata !8949, metadata !DIExpression()), !dbg !8948
  store i32 1, i32* %_len438, align 4, !dbg !8948
  %226 = load %struct.xlgmac_pkt_info*, %struct.xlgmac_pkt_info** %pkt_info, align 8, !dbg !8948
  %attributes440 = getelementptr inbounds %struct.xlgmac_pkt_info, %struct.xlgmac_pkt_info* %226, i32 0, i32 1, !dbg !8948
  %227 = load i32, i32* %attributes440, align 8, !dbg !8948
  %conv441 = zext i32 %227 to i64, !dbg !8948
  %228 = load i32, i32* %_pos437, align 4, !dbg !8948
  %sh_prom442 = zext i32 %228 to i64, !dbg !8948
  %shl443 = shl i64 1, %sh_prom442, !dbg !8948
  %sub444 = sub i64 -1, %shl443, !dbg !8948
  %add445 = add i64 %sub444, 1, !dbg !8948
  %229 = load i32, i32* %_pos437, align 4, !dbg !8948
  %230 = load i32, i32* %_len438, align 4, !dbg !8948
  %add446 = add i32 %229, %230, !dbg !8948
  %sub447 = sub i32 %add446, 1, !dbg !8948
  %sub448 = sub i32 63, %sub447, !dbg !8948
  %sh_prom449 = zext i32 %sub448 to i64, !dbg !8948
  %shr450 = lshr i64 -1, %sh_prom449, !dbg !8948
  %and451 = and i64 %add445, %shr450, !dbg !8948
  %add452 = add i64 0, %and451, !dbg !8948
  %and453 = and i64 %conv441, %add452, !dbg !8948
  %231 = load i32, i32* %_pos437, align 4, !dbg !8948
  %sh_prom454 = zext i32 %231 to i64, !dbg !8948
  %shr455 = lshr i64 %and453, %sh_prom454, !dbg !8948
  store i64 %shr455, i64* %tmp439, align 8, !dbg !8948
  %232 = load i64, i64* %tmp439, align 8, !dbg !8948
  %tobool456 = icmp ne i64 %232, 0, !dbg !8950
  br i1 %tobool456, label %if.then457, label %if.end497, !dbg !8951

if.then457:                                       ; preds = %if.end436
  call void @llvm.dbg.declare(metadata i32* %_var458, metadata !8952, metadata !DIExpression()), !dbg !8954
  %233 = load %struct.xlgmac_dma_desc*, %struct.xlgmac_dma_desc** %dma_desc, align 8, !dbg !8954
  %desc2459 = getelementptr inbounds %struct.xlgmac_dma_desc, %struct.xlgmac_dma_desc* %233, i32 0, i32 2, !dbg !8954
  %234 = load i32, i32* %desc2459, align 4, !dbg !8954
  store i32 %234, i32* %_var458, align 4, !dbg !8954
  call void @llvm.dbg.declare(metadata i32* %_pos460, metadata !8955, metadata !DIExpression()), !dbg !8954
  store i32 30, i32* %_pos460, align 4, !dbg !8954
  call void @llvm.dbg.declare(metadata i32* %_len461, metadata !8956, metadata !DIExpression()), !dbg !8954
  store i32 1, i32* %_len461, align 4, !dbg !8954
  call void @llvm.dbg.declare(metadata i32* %_val462, metadata !8957, metadata !DIExpression()), !dbg !8954
  store i32 1, i32* %_val462, align 4, !dbg !8954
  %235 = load i32, i32* %_val462, align 4, !dbg !8954
  %236 = load i32, i32* %_pos460, align 4, !dbg !8954
  %shl463 = shl i32 %235, %236, !dbg !8954
  %conv464 = sext i32 %shl463 to i64, !dbg !8954
  %237 = load i32, i32* %_pos460, align 4, !dbg !8954
  %sh_prom465 = zext i32 %237 to i64, !dbg !8954
  %shl466 = shl i64 1, %sh_prom465, !dbg !8954
  %sub467 = sub i64 -1, %shl466, !dbg !8954
  %add468 = add i64 %sub467, 1, !dbg !8954
  %238 = load i32, i32* %_pos460, align 4, !dbg !8954
  %239 = load i32, i32* %_len461, align 4, !dbg !8954
  %add469 = add i32 %238, %239, !dbg !8954
  %sub470 = sub i32 %add469, 1, !dbg !8954
  %sub471 = sub i32 63, %sub470, !dbg !8954
  %sh_prom472 = zext i32 %sub471 to i64, !dbg !8954
  %shr473 = lshr i64 -1, %sh_prom472, !dbg !8954
  %and474 = and i64 %add468, %shr473, !dbg !8954
  %add475 = add i64 0, %and474, !dbg !8954
  %and476 = and i64 %conv464, %add475, !dbg !8954
  %conv477 = trunc i64 %and476 to i32, !dbg !8954
  store i32 %conv477, i32* %_val462, align 4, !dbg !8954
  %240 = load i32, i32* %_var458, align 4, !dbg !8954
  %conv478 = zext i32 %240 to i64, !dbg !8954
  %241 = load i32, i32* %_pos460, align 4, !dbg !8954
  %sh_prom479 = zext i32 %241 to i64, !dbg !8954
  %shl480 = shl i64 1, %sh_prom479, !dbg !8954
  %sub481 = sub i64 -1, %shl480, !dbg !8954
  %add482 = add i64 %sub481, 1, !dbg !8954
  %242 = load i32, i32* %_pos460, align 4, !dbg !8954
  %243 = load i32, i32* %_len461, align 4, !dbg !8954
  %add483 = add i32 %242, %243, !dbg !8954
  %sub484 = sub i32 %add483, 1, !dbg !8954
  %sub485 = sub i32 63, %sub484, !dbg !8954
  %sh_prom486 = zext i32 %sub485 to i64, !dbg !8954
  %shr487 = lshr i64 -1, %sh_prom486, !dbg !8954
  %and488 = and i64 %add482, %shr487, !dbg !8954
  %add489 = add i64 0, %and488, !dbg !8954
  %neg490 = xor i64 %add489, -1, !dbg !8954
  %and491 = and i64 %conv478, %neg490, !dbg !8954
  %244 = load i32, i32* %_val462, align 4, !dbg !8954
  %conv492 = sext i32 %244 to i64, !dbg !8954
  %or493 = or i64 %and491, %conv492, !dbg !8954
  %conv494 = trunc i64 %or493 to i32, !dbg !8954
  store i32 %conv494, i32* %_var458, align 4, !dbg !8954
  %245 = load i32, i32* %_var458, align 4, !dbg !8954
  store i32 %245, i32* %tmp495, align 4, !dbg !8954
  %246 = load i32, i32* %tmp495, align 4, !dbg !8954
  %247 = load %struct.xlgmac_dma_desc*, %struct.xlgmac_dma_desc** %dma_desc, align 8, !dbg !8958
  %desc2496 = getelementptr inbounds %struct.xlgmac_dma_desc, %struct.xlgmac_dma_desc* %247, i32 0, i32 2, !dbg !8959
  store i32 %246, i32* %desc2496, align 4, !dbg !8960
  br label %if.end497, !dbg !8958

if.end497:                                        ; preds = %if.then457, %if.end436
  call void @llvm.dbg.declare(metadata i32* %_var498, metadata !8961, metadata !DIExpression()), !dbg !8963
  %248 = load %struct.xlgmac_dma_desc*, %struct.xlgmac_dma_desc** %dma_desc, align 8, !dbg !8963
  %desc3499 = getelementptr inbounds %struct.xlgmac_dma_desc, %struct.xlgmac_dma_desc* %248, i32 0, i32 3, !dbg !8963
  %249 = load i32, i32* %desc3499, align 4, !dbg !8963
  store i32 %249, i32* %_var498, align 4, !dbg !8963
  call void @llvm.dbg.declare(metadata i32* %_pos500, metadata !8964, metadata !DIExpression()), !dbg !8963
  store i32 29, i32* %_pos500, align 4, !dbg !8963
  call void @llvm.dbg.declare(metadata i32* %_len501, metadata !8965, metadata !DIExpression()), !dbg !8963
  store i32 1, i32* %_len501, align 4, !dbg !8963
  call void @llvm.dbg.declare(metadata i32* %_val502, metadata !8966, metadata !DIExpression()), !dbg !8963
  store i32 1, i32* %_val502, align 4, !dbg !8963
  %250 = load i32, i32* %_val502, align 4, !dbg !8963
  %251 = load i32, i32* %_pos500, align 4, !dbg !8963
  %shl503 = shl i32 %250, %251, !dbg !8963
  %conv504 = sext i32 %shl503 to i64, !dbg !8963
  %252 = load i32, i32* %_pos500, align 4, !dbg !8963
  %sh_prom505 = zext i32 %252 to i64, !dbg !8963
  %shl506 = shl i64 1, %sh_prom505, !dbg !8963
  %sub507 = sub i64 -1, %shl506, !dbg !8963
  %add508 = add i64 %sub507, 1, !dbg !8963
  %253 = load i32, i32* %_pos500, align 4, !dbg !8963
  %254 = load i32, i32* %_len501, align 4, !dbg !8963
  %add509 = add i32 %253, %254, !dbg !8963
  %sub510 = sub i32 %add509, 1, !dbg !8963
  %sub511 = sub i32 63, %sub510, !dbg !8963
  %sh_prom512 = zext i32 %sub511 to i64, !dbg !8963
  %shr513 = lshr i64 -1, %sh_prom512, !dbg !8963
  %and514 = and i64 %add508, %shr513, !dbg !8963
  %add515 = add i64 0, %and514, !dbg !8963
  %and516 = and i64 %conv504, %add515, !dbg !8963
  %conv517 = trunc i64 %and516 to i32, !dbg !8963
  store i32 %conv517, i32* %_val502, align 4, !dbg !8963
  %255 = load i32, i32* %_var498, align 4, !dbg !8963
  %conv518 = zext i32 %255 to i64, !dbg !8963
  %256 = load i32, i32* %_pos500, align 4, !dbg !8963
  %sh_prom519 = zext i32 %256 to i64, !dbg !8963
  %shl520 = shl i64 1, %sh_prom519, !dbg !8963
  %sub521 = sub i64 -1, %shl520, !dbg !8963
  %add522 = add i64 %sub521, 1, !dbg !8963
  %257 = load i32, i32* %_pos500, align 4, !dbg !8963
  %258 = load i32, i32* %_len501, align 4, !dbg !8963
  %add523 = add i32 %257, %258, !dbg !8963
  %sub524 = sub i32 %add523, 1, !dbg !8963
  %sub525 = sub i32 63, %sub524, !dbg !8963
  %sh_prom526 = zext i32 %sub525 to i64, !dbg !8963
  %shr527 = lshr i64 -1, %sh_prom526, !dbg !8963
  %and528 = and i64 %add522, %shr527, !dbg !8963
  %add529 = add i64 0, %and528, !dbg !8963
  %neg530 = xor i64 %add529, -1, !dbg !8963
  %and531 = and i64 %conv518, %neg530, !dbg !8963
  %259 = load i32, i32* %_val502, align 4, !dbg !8963
  %conv532 = sext i32 %259 to i64, !dbg !8963
  %or533 = or i64 %and531, %conv532, !dbg !8963
  %conv534 = trunc i64 %or533 to i32, !dbg !8963
  store i32 %conv534, i32* %_var498, align 4, !dbg !8963
  %260 = load i32, i32* %_var498, align 4, !dbg !8963
  store i32 %260, i32* %tmp535, align 4, !dbg !8963
  %261 = load i32, i32* %tmp535, align 4, !dbg !8963
  %262 = load %struct.xlgmac_dma_desc*, %struct.xlgmac_dma_desc** %dma_desc, align 8, !dbg !8967
  %desc3536 = getelementptr inbounds %struct.xlgmac_dma_desc, %struct.xlgmac_dma_desc* %262, i32 0, i32 3, !dbg !8968
  store i32 %261, i32* %desc3536, align 4, !dbg !8969
  call void @llvm.dbg.declare(metadata i32* %_var537, metadata !8970, metadata !DIExpression()), !dbg !8972
  %263 = load %struct.xlgmac_dma_desc*, %struct.xlgmac_dma_desc** %dma_desc, align 8, !dbg !8972
  %desc3538 = getelementptr inbounds %struct.xlgmac_dma_desc, %struct.xlgmac_dma_desc* %263, i32 0, i32 3, !dbg !8972
  %264 = load i32, i32* %desc3538, align 4, !dbg !8972
  store i32 %264, i32* %_var537, align 4, !dbg !8972
  call void @llvm.dbg.declare(metadata i32* %_pos539, metadata !8973, metadata !DIExpression()), !dbg !8972
  store i32 30, i32* %_pos539, align 4, !dbg !8972
  call void @llvm.dbg.declare(metadata i32* %_len540, metadata !8974, metadata !DIExpression()), !dbg !8972
  store i32 1, i32* %_len540, align 4, !dbg !8972
  call void @llvm.dbg.declare(metadata i32* %_val541, metadata !8975, metadata !DIExpression()), !dbg !8972
  store i32 0, i32* %_val541, align 4, !dbg !8972
  %265 = load i32, i32* %_val541, align 4, !dbg !8972
  %266 = load i32, i32* %_pos539, align 4, !dbg !8972
  %shl542 = shl i32 %265, %266, !dbg !8972
  %conv543 = sext i32 %shl542 to i64, !dbg !8972
  %267 = load i32, i32* %_pos539, align 4, !dbg !8972
  %sh_prom544 = zext i32 %267 to i64, !dbg !8972
  %shl545 = shl i64 1, %sh_prom544, !dbg !8972
  %sub546 = sub i64 -1, %shl545, !dbg !8972
  %add547 = add i64 %sub546, 1, !dbg !8972
  %268 = load i32, i32* %_pos539, align 4, !dbg !8972
  %269 = load i32, i32* %_len540, align 4, !dbg !8972
  %add548 = add i32 %268, %269, !dbg !8972
  %sub549 = sub i32 %add548, 1, !dbg !8972
  %sub550 = sub i32 63, %sub549, !dbg !8972
  %sh_prom551 = zext i32 %sub550 to i64, !dbg !8972
  %shr552 = lshr i64 -1, %sh_prom551, !dbg !8972
  %and553 = and i64 %add547, %shr552, !dbg !8972
  %add554 = add i64 0, %and553, !dbg !8972
  %and555 = and i64 %conv543, %add554, !dbg !8972
  %conv556 = trunc i64 %and555 to i32, !dbg !8972
  store i32 %conv556, i32* %_val541, align 4, !dbg !8972
  %270 = load i32, i32* %_var537, align 4, !dbg !8972
  %conv557 = zext i32 %270 to i64, !dbg !8972
  %271 = load i32, i32* %_pos539, align 4, !dbg !8972
  %sh_prom558 = zext i32 %271 to i64, !dbg !8972
  %shl559 = shl i64 1, %sh_prom558, !dbg !8972
  %sub560 = sub i64 -1, %shl559, !dbg !8972
  %add561 = add i64 %sub560, 1, !dbg !8972
  %272 = load i32, i32* %_pos539, align 4, !dbg !8972
  %273 = load i32, i32* %_len540, align 4, !dbg !8972
  %add562 = add i32 %272, %273, !dbg !8972
  %sub563 = sub i32 %add562, 1, !dbg !8972
  %sub564 = sub i32 63, %sub563, !dbg !8972
  %sh_prom565 = zext i32 %sub564 to i64, !dbg !8972
  %shr566 = lshr i64 -1, %sh_prom565, !dbg !8972
  %and567 = and i64 %add561, %shr566, !dbg !8972
  %add568 = add i64 0, %and567, !dbg !8972
  %neg569 = xor i64 %add568, -1, !dbg !8972
  %and570 = and i64 %conv557, %neg569, !dbg !8972
  %274 = load i32, i32* %_val541, align 4, !dbg !8972
  %conv571 = sext i32 %274 to i64, !dbg !8972
  %or572 = or i64 %and570, %conv571, !dbg !8972
  %conv573 = trunc i64 %or572 to i32, !dbg !8972
  store i32 %conv573, i32* %_var537, align 4, !dbg !8972
  %275 = load i32, i32* %_var537, align 4, !dbg !8972
  store i32 %275, i32* %tmp574, align 4, !dbg !8972
  %276 = load i32, i32* %tmp574, align 4, !dbg !8972
  %277 = load %struct.xlgmac_dma_desc*, %struct.xlgmac_dma_desc** %dma_desc, align 8, !dbg !8976
  %desc3575 = getelementptr inbounds %struct.xlgmac_dma_desc, %struct.xlgmac_dma_desc* %277, i32 0, i32 3, !dbg !8977
  store i32 %276, i32* %desc3575, align 4, !dbg !8978
  %278 = load i32, i32* %cur_index, align 4, !dbg !8979
  %279 = load i32, i32* %start_index, align 4, !dbg !8981
  %cmp576 = icmp ne i32 %278, %279, !dbg !8982
  br i1 %cmp576, label %if.then578, label %if.end618, !dbg !8983

if.then578:                                       ; preds = %if.end497
  call void @llvm.dbg.declare(metadata i32* %_var579, metadata !8984, metadata !DIExpression()), !dbg !8986
  %280 = load %struct.xlgmac_dma_desc*, %struct.xlgmac_dma_desc** %dma_desc, align 8, !dbg !8986
  %desc3580 = getelementptr inbounds %struct.xlgmac_dma_desc, %struct.xlgmac_dma_desc* %280, i32 0, i32 3, !dbg !8986
  %281 = load i32, i32* %desc3580, align 4, !dbg !8986
  store i32 %281, i32* %_var579, align 4, !dbg !8986
  call void @llvm.dbg.declare(metadata i32* %_pos581, metadata !8987, metadata !DIExpression()), !dbg !8986
  store i32 31, i32* %_pos581, align 4, !dbg !8986
  call void @llvm.dbg.declare(metadata i32* %_len582, metadata !8988, metadata !DIExpression()), !dbg !8986
  store i32 1, i32* %_len582, align 4, !dbg !8986
  call void @llvm.dbg.declare(metadata i32* %_val583, metadata !8989, metadata !DIExpression()), !dbg !8986
  store i32 1, i32* %_val583, align 4, !dbg !8986
  %282 = load i32, i32* %_val583, align 4, !dbg !8986
  %283 = load i32, i32* %_pos581, align 4, !dbg !8986
  %shl584 = shl i32 %282, %283, !dbg !8986
  %conv585 = sext i32 %shl584 to i64, !dbg !8986
  %284 = load i32, i32* %_pos581, align 4, !dbg !8986
  %sh_prom586 = zext i32 %284 to i64, !dbg !8986
  %shl587 = shl i64 1, %sh_prom586, !dbg !8986
  %sub588 = sub i64 -1, %shl587, !dbg !8986
  %add589 = add i64 %sub588, 1, !dbg !8986
  %285 = load i32, i32* %_pos581, align 4, !dbg !8986
  %286 = load i32, i32* %_len582, align 4, !dbg !8986
  %add590 = add i32 %285, %286, !dbg !8986
  %sub591 = sub i32 %add590, 1, !dbg !8986
  %sub592 = sub i32 63, %sub591, !dbg !8986
  %sh_prom593 = zext i32 %sub592 to i64, !dbg !8986
  %shr594 = lshr i64 -1, %sh_prom593, !dbg !8986
  %and595 = and i64 %add589, %shr594, !dbg !8986
  %add596 = add i64 0, %and595, !dbg !8986
  %and597 = and i64 %conv585, %add596, !dbg !8986
  %conv598 = trunc i64 %and597 to i32, !dbg !8986
  store i32 %conv598, i32* %_val583, align 4, !dbg !8986
  %287 = load i32, i32* %_var579, align 4, !dbg !8986
  %conv599 = zext i32 %287 to i64, !dbg !8986
  %288 = load i32, i32* %_pos581, align 4, !dbg !8986
  %sh_prom600 = zext i32 %288 to i64, !dbg !8986
  %shl601 = shl i64 1, %sh_prom600, !dbg !8986
  %sub602 = sub i64 -1, %shl601, !dbg !8986
  %add603 = add i64 %sub602, 1, !dbg !8986
  %289 = load i32, i32* %_pos581, align 4, !dbg !8986
  %290 = load i32, i32* %_len582, align 4, !dbg !8986
  %add604 = add i32 %289, %290, !dbg !8986
  %sub605 = sub i32 %add604, 1, !dbg !8986
  %sub606 = sub i32 63, %sub605, !dbg !8986
  %sh_prom607 = zext i32 %sub606 to i64, !dbg !8986
  %shr608 = lshr i64 -1, %sh_prom607, !dbg !8986
  %and609 = and i64 %add603, %shr608, !dbg !8986
  %add610 = add i64 0, %and609, !dbg !8986
  %neg611 = xor i64 %add610, -1, !dbg !8986
  %and612 = and i64 %conv599, %neg611, !dbg !8986
  %291 = load i32, i32* %_val583, align 4, !dbg !8986
  %conv613 = sext i32 %291 to i64, !dbg !8986
  %or614 = or i64 %and612, %conv613, !dbg !8986
  %conv615 = trunc i64 %or614 to i32, !dbg !8986
  store i32 %conv615, i32* %_var579, align 4, !dbg !8986
  %292 = load i32, i32* %_var579, align 4, !dbg !8986
  store i32 %292, i32* %tmp616, align 4, !dbg !8986
  %293 = load i32, i32* %tmp616, align 4, !dbg !8986
  %294 = load %struct.xlgmac_dma_desc*, %struct.xlgmac_dma_desc** %dma_desc, align 8, !dbg !8990
  %desc3617 = getelementptr inbounds %struct.xlgmac_dma_desc, %struct.xlgmac_dma_desc* %294, i32 0, i32 3, !dbg !8991
  store i32 %293, i32* %desc3617, align 4, !dbg !8992
  br label %if.end618, !dbg !8990

if.end618:                                        ; preds = %if.then578, %if.end497
  %295 = load i32, i32* %tso, align 4, !dbg !8993
  %tobool619 = icmp ne i32 %295, 0, !dbg !8993
  br i1 %tobool619, label %if.then620, label %if.else740, !dbg !8995

if.then620:                                       ; preds = %if.end618
  call void @llvm.dbg.declare(metadata i32* %_var621, metadata !8996, metadata !DIExpression()), !dbg !8999
  %296 = load %struct.xlgmac_dma_desc*, %struct.xlgmac_dma_desc** %dma_desc, align 8, !dbg !8999
  %desc3622 = getelementptr inbounds %struct.xlgmac_dma_desc, %struct.xlgmac_dma_desc* %296, i32 0, i32 3, !dbg !8999
  %297 = load i32, i32* %desc3622, align 4, !dbg !8999
  store i32 %297, i32* %_var621, align 4, !dbg !8999
  call void @llvm.dbg.declare(metadata i32* %_pos623, metadata !9000, metadata !DIExpression()), !dbg !8999
  store i32 18, i32* %_pos623, align 4, !dbg !8999
  call void @llvm.dbg.declare(metadata i32* %_len624, metadata !9001, metadata !DIExpression()), !dbg !8999
  store i32 1, i32* %_len624, align 4, !dbg !8999
  call void @llvm.dbg.declare(metadata i32* %_val625, metadata !9002, metadata !DIExpression()), !dbg !8999
  store i32 1, i32* %_val625, align 4, !dbg !8999
  %298 = load i32, i32* %_val625, align 4, !dbg !8999
  %299 = load i32, i32* %_pos623, align 4, !dbg !8999
  %shl626 = shl i32 %298, %299, !dbg !8999
  %conv627 = sext i32 %shl626 to i64, !dbg !8999
  %300 = load i32, i32* %_pos623, align 4, !dbg !8999
  %sh_prom628 = zext i32 %300 to i64, !dbg !8999
  %shl629 = shl i64 1, %sh_prom628, !dbg !8999
  %sub630 = sub i64 -1, %shl629, !dbg !8999
  %add631 = add i64 %sub630, 1, !dbg !8999
  %301 = load i32, i32* %_pos623, align 4, !dbg !8999
  %302 = load i32, i32* %_len624, align 4, !dbg !8999
  %add632 = add i32 %301, %302, !dbg !8999
  %sub633 = sub i32 %add632, 1, !dbg !8999
  %sub634 = sub i32 63, %sub633, !dbg !8999
  %sh_prom635 = zext i32 %sub634 to i64, !dbg !8999
  %shr636 = lshr i64 -1, %sh_prom635, !dbg !8999
  %and637 = and i64 %add631, %shr636, !dbg !8999
  %add638 = add i64 0, %and637, !dbg !8999
  %and639 = and i64 %conv627, %add638, !dbg !8999
  %conv640 = trunc i64 %and639 to i32, !dbg !8999
  store i32 %conv640, i32* %_val625, align 4, !dbg !8999
  %303 = load i32, i32* %_var621, align 4, !dbg !8999
  %conv641 = zext i32 %303 to i64, !dbg !8999
  %304 = load i32, i32* %_pos623, align 4, !dbg !8999
  %sh_prom642 = zext i32 %304 to i64, !dbg !8999
  %shl643 = shl i64 1, %sh_prom642, !dbg !8999
  %sub644 = sub i64 -1, %shl643, !dbg !8999
  %add645 = add i64 %sub644, 1, !dbg !8999
  %305 = load i32, i32* %_pos623, align 4, !dbg !8999
  %306 = load i32, i32* %_len624, align 4, !dbg !8999
  %add646 = add i32 %305, %306, !dbg !8999
  %sub647 = sub i32 %add646, 1, !dbg !8999
  %sub648 = sub i32 63, %sub647, !dbg !8999
  %sh_prom649 = zext i32 %sub648 to i64, !dbg !8999
  %shr650 = lshr i64 -1, %sh_prom649, !dbg !8999
  %and651 = and i64 %add645, %shr650, !dbg !8999
  %add652 = add i64 0, %and651, !dbg !8999
  %neg653 = xor i64 %add652, -1, !dbg !8999
  %and654 = and i64 %conv641, %neg653, !dbg !8999
  %307 = load i32, i32* %_val625, align 4, !dbg !8999
  %conv655 = sext i32 %307 to i64, !dbg !8999
  %or656 = or i64 %and654, %conv655, !dbg !8999
  %conv657 = trunc i64 %or656 to i32, !dbg !8999
  store i32 %conv657, i32* %_var621, align 4, !dbg !8999
  %308 = load i32, i32* %_var621, align 4, !dbg !8999
  store i32 %308, i32* %tmp658, align 4, !dbg !8999
  %309 = load i32, i32* %tmp658, align 4, !dbg !8999
  %310 = load %struct.xlgmac_dma_desc*, %struct.xlgmac_dma_desc** %dma_desc, align 8, !dbg !9003
  %desc3659 = getelementptr inbounds %struct.xlgmac_dma_desc, %struct.xlgmac_dma_desc* %310, i32 0, i32 3, !dbg !9004
  store i32 %309, i32* %desc3659, align 4, !dbg !9005
  call void @llvm.dbg.declare(metadata i32* %_var660, metadata !9006, metadata !DIExpression()), !dbg !9008
  %311 = load %struct.xlgmac_dma_desc*, %struct.xlgmac_dma_desc** %dma_desc, align 8, !dbg !9008
  %desc3661 = getelementptr inbounds %struct.xlgmac_dma_desc, %struct.xlgmac_dma_desc* %311, i32 0, i32 3, !dbg !9008
  %312 = load i32, i32* %desc3661, align 4, !dbg !9008
  store i32 %312, i32* %_var660, align 4, !dbg !9008
  call void @llvm.dbg.declare(metadata i32* %_pos662, metadata !9009, metadata !DIExpression()), !dbg !9008
  store i32 0, i32* %_pos662, align 4, !dbg !9008
  call void @llvm.dbg.declare(metadata i32* %_len663, metadata !9010, metadata !DIExpression()), !dbg !9008
  store i32 18, i32* %_len663, align 4, !dbg !9008
  call void @llvm.dbg.declare(metadata i32* %_val664, metadata !9011, metadata !DIExpression()), !dbg !9008
  %313 = load %struct.xlgmac_pkt_info*, %struct.xlgmac_pkt_info** %pkt_info, align 8, !dbg !9008
  %tcp_payload_len = getelementptr inbounds %struct.xlgmac_pkt_info, %struct.xlgmac_pkt_info* %313, i32 0, i32 9, !dbg !9008
  %314 = load i32, i32* %tcp_payload_len, align 8, !dbg !9008
  store i32 %314, i32* %_val664, align 4, !dbg !9008
  %315 = load i32, i32* %_val664, align 4, !dbg !9008
  %316 = load i32, i32* %_pos662, align 4, !dbg !9008
  %shl665 = shl i32 %315, %316, !dbg !9008
  %conv666 = zext i32 %shl665 to i64, !dbg !9008
  %317 = load i32, i32* %_pos662, align 4, !dbg !9008
  %sh_prom667 = zext i32 %317 to i64, !dbg !9008
  %shl668 = shl i64 1, %sh_prom667, !dbg !9008
  %sub669 = sub i64 -1, %shl668, !dbg !9008
  %add670 = add i64 %sub669, 1, !dbg !9008
  %318 = load i32, i32* %_pos662, align 4, !dbg !9008
  %319 = load i32, i32* %_len663, align 4, !dbg !9008
  %add671 = add i32 %318, %319, !dbg !9008
  %sub672 = sub i32 %add671, 1, !dbg !9008
  %sub673 = sub i32 63, %sub672, !dbg !9008
  %sh_prom674 = zext i32 %sub673 to i64, !dbg !9008
  %shr675 = lshr i64 -1, %sh_prom674, !dbg !9008
  %and676 = and i64 %add670, %shr675, !dbg !9008
  %add677 = add i64 0, %and676, !dbg !9008
  %and678 = and i64 %conv666, %add677, !dbg !9008
  %conv679 = trunc i64 %and678 to i32, !dbg !9008
  store i32 %conv679, i32* %_val664, align 4, !dbg !9008
  %320 = load i32, i32* %_var660, align 4, !dbg !9008
  %conv680 = zext i32 %320 to i64, !dbg !9008
  %321 = load i32, i32* %_pos662, align 4, !dbg !9008
  %sh_prom681 = zext i32 %321 to i64, !dbg !9008
  %shl682 = shl i64 1, %sh_prom681, !dbg !9008
  %sub683 = sub i64 -1, %shl682, !dbg !9008
  %add684 = add i64 %sub683, 1, !dbg !9008
  %322 = load i32, i32* %_pos662, align 4, !dbg !9008
  %323 = load i32, i32* %_len663, align 4, !dbg !9008
  %add685 = add i32 %322, %323, !dbg !9008
  %sub686 = sub i32 %add685, 1, !dbg !9008
  %sub687 = sub i32 63, %sub686, !dbg !9008
  %sh_prom688 = zext i32 %sub687 to i64, !dbg !9008
  %shr689 = lshr i64 -1, %sh_prom688, !dbg !9008
  %and690 = and i64 %add684, %shr689, !dbg !9008
  %add691 = add i64 0, %and690, !dbg !9008
  %neg692 = xor i64 %add691, -1, !dbg !9008
  %and693 = and i64 %conv680, %neg692, !dbg !9008
  %324 = load i32, i32* %_val664, align 4, !dbg !9008
  %conv694 = zext i32 %324 to i64, !dbg !9008
  %or695 = or i64 %and693, %conv694, !dbg !9008
  %conv696 = trunc i64 %or695 to i32, !dbg !9008
  store i32 %conv696, i32* %_var660, align 4, !dbg !9008
  %325 = load i32, i32* %_var660, align 4, !dbg !9008
  store i32 %325, i32* %tmp697, align 4, !dbg !9008
  %326 = load i32, i32* %tmp697, align 4, !dbg !9008
  %327 = load %struct.xlgmac_dma_desc*, %struct.xlgmac_dma_desc** %dma_desc, align 8, !dbg !9012
  %desc3698 = getelementptr inbounds %struct.xlgmac_dma_desc, %struct.xlgmac_dma_desc* %327, i32 0, i32 3, !dbg !9013
  store i32 %326, i32* %desc3698, align 4, !dbg !9014
  call void @llvm.dbg.declare(metadata i32* %_var699, metadata !9015, metadata !DIExpression()), !dbg !9017
  %328 = load %struct.xlgmac_dma_desc*, %struct.xlgmac_dma_desc** %dma_desc, align 8, !dbg !9017
  %desc3700 = getelementptr inbounds %struct.xlgmac_dma_desc, %struct.xlgmac_dma_desc* %328, i32 0, i32 3, !dbg !9017
  %329 = load i32, i32* %desc3700, align 4, !dbg !9017
  store i32 %329, i32* %_var699, align 4, !dbg !9017
  call void @llvm.dbg.declare(metadata i32* %_pos701, metadata !9018, metadata !DIExpression()), !dbg !9017
  store i32 19, i32* %_pos701, align 4, !dbg !9017
  call void @llvm.dbg.declare(metadata i32* %_len702, metadata !9019, metadata !DIExpression()), !dbg !9017
  store i32 4, i32* %_len702, align 4, !dbg !9017
  call void @llvm.dbg.declare(metadata i32* %_val703, metadata !9020, metadata !DIExpression()), !dbg !9017
  %330 = load %struct.xlgmac_pkt_info*, %struct.xlgmac_pkt_info** %pkt_info, align 8, !dbg !9017
  %tcp_header_len = getelementptr inbounds %struct.xlgmac_pkt_info, %struct.xlgmac_pkt_info* %330, i32 0, i32 8, !dbg !9017
  %331 = load i32, i32* %tcp_header_len, align 4, !dbg !9017
  %div = udiv i32 %331, 4, !dbg !9017
  store i32 %div, i32* %_val703, align 4, !dbg !9017
  %332 = load i32, i32* %_val703, align 4, !dbg !9017
  %333 = load i32, i32* %_pos701, align 4, !dbg !9017
  %shl704 = shl i32 %332, %333, !dbg !9017
  %conv705 = zext i32 %shl704 to i64, !dbg !9017
  %334 = load i32, i32* %_pos701, align 4, !dbg !9017
  %sh_prom706 = zext i32 %334 to i64, !dbg !9017
  %shl707 = shl i64 1, %sh_prom706, !dbg !9017
  %sub708 = sub i64 -1, %shl707, !dbg !9017
  %add709 = add i64 %sub708, 1, !dbg !9017
  %335 = load i32, i32* %_pos701, align 4, !dbg !9017
  %336 = load i32, i32* %_len702, align 4, !dbg !9017
  %add710 = add i32 %335, %336, !dbg !9017
  %sub711 = sub i32 %add710, 1, !dbg !9017
  %sub712 = sub i32 63, %sub711, !dbg !9017
  %sh_prom713 = zext i32 %sub712 to i64, !dbg !9017
  %shr714 = lshr i64 -1, %sh_prom713, !dbg !9017
  %and715 = and i64 %add709, %shr714, !dbg !9017
  %add716 = add i64 0, %and715, !dbg !9017
  %and717 = and i64 %conv705, %add716, !dbg !9017
  %conv718 = trunc i64 %and717 to i32, !dbg !9017
  store i32 %conv718, i32* %_val703, align 4, !dbg !9017
  %337 = load i32, i32* %_var699, align 4, !dbg !9017
  %conv719 = zext i32 %337 to i64, !dbg !9017
  %338 = load i32, i32* %_pos701, align 4, !dbg !9017
  %sh_prom720 = zext i32 %338 to i64, !dbg !9017
  %shl721 = shl i64 1, %sh_prom720, !dbg !9017
  %sub722 = sub i64 -1, %shl721, !dbg !9017
  %add723 = add i64 %sub722, 1, !dbg !9017
  %339 = load i32, i32* %_pos701, align 4, !dbg !9017
  %340 = load i32, i32* %_len702, align 4, !dbg !9017
  %add724 = add i32 %339, %340, !dbg !9017
  %sub725 = sub i32 %add724, 1, !dbg !9017
  %sub726 = sub i32 63, %sub725, !dbg !9017
  %sh_prom727 = zext i32 %sub726 to i64, !dbg !9017
  %shr728 = lshr i64 -1, %sh_prom727, !dbg !9017
  %and729 = and i64 %add723, %shr728, !dbg !9017
  %add730 = add i64 0, %and729, !dbg !9017
  %neg731 = xor i64 %add730, -1, !dbg !9017
  %and732 = and i64 %conv719, %neg731, !dbg !9017
  %341 = load i32, i32* %_val703, align 4, !dbg !9017
  %conv733 = zext i32 %341 to i64, !dbg !9017
  %or734 = or i64 %and732, %conv733, !dbg !9017
  %conv735 = trunc i64 %or734 to i32, !dbg !9017
  store i32 %conv735, i32* %_var699, align 4, !dbg !9017
  %342 = load i32, i32* %_var699, align 4, !dbg !9017
  store i32 %342, i32* %tmp736, align 4, !dbg !9017
  %343 = load i32, i32* %tmp736, align 4, !dbg !9017
  %344 = load %struct.xlgmac_dma_desc*, %struct.xlgmac_dma_desc** %dma_desc, align 8, !dbg !9021
  %desc3737 = getelementptr inbounds %struct.xlgmac_dma_desc, %struct.xlgmac_dma_desc* %344, i32 0, i32 3, !dbg !9022
  store i32 %343, i32* %desc3737, align 4, !dbg !9023
  %345 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata, align 8, !dbg !9024
  %stats738 = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %345, i32 0, i32 4, !dbg !9025
  %tx_tso_packets = getelementptr inbounds %struct.xlgmac_stats, %struct.xlgmac_stats* %stats738, i32 0, i32 41, !dbg !9026
  %346 = load i64, i64* %tx_tso_packets, align 8, !dbg !9027
  %inc739 = add i64 %346, 1, !dbg !9027
  store i64 %inc739, i64* %tx_tso_packets, align 8, !dbg !9027
  br label %if.end861, !dbg !9028

if.else740:                                       ; preds = %if.end618
  call void @llvm.dbg.declare(metadata i32* %_var741, metadata !9029, metadata !DIExpression()), !dbg !9032
  %347 = load %struct.xlgmac_dma_desc*, %struct.xlgmac_dma_desc** %dma_desc, align 8, !dbg !9032
  %desc3742 = getelementptr inbounds %struct.xlgmac_dma_desc, %struct.xlgmac_dma_desc* %347, i32 0, i32 3, !dbg !9032
  %348 = load i32, i32* %desc3742, align 4, !dbg !9032
  store i32 %348, i32* %_var741, align 4, !dbg !9032
  call void @llvm.dbg.declare(metadata i32* %_pos743, metadata !9033, metadata !DIExpression()), !dbg !9032
  store i32 26, i32* %_pos743, align 4, !dbg !9032
  call void @llvm.dbg.declare(metadata i32* %_len744, metadata !9034, metadata !DIExpression()), !dbg !9032
  store i32 2, i32* %_len744, align 4, !dbg !9032
  call void @llvm.dbg.declare(metadata i32* %_val745, metadata !9035, metadata !DIExpression()), !dbg !9032
  store i32 0, i32* %_val745, align 4, !dbg !9032
  %349 = load i32, i32* %_val745, align 4, !dbg !9032
  %350 = load i32, i32* %_pos743, align 4, !dbg !9032
  %shl746 = shl i32 %349, %350, !dbg !9032
  %conv747 = sext i32 %shl746 to i64, !dbg !9032
  %351 = load i32, i32* %_pos743, align 4, !dbg !9032
  %sh_prom748 = zext i32 %351 to i64, !dbg !9032
  %shl749 = shl i64 1, %sh_prom748, !dbg !9032
  %sub750 = sub i64 -1, %shl749, !dbg !9032
  %add751 = add i64 %sub750, 1, !dbg !9032
  %352 = load i32, i32* %_pos743, align 4, !dbg !9032
  %353 = load i32, i32* %_len744, align 4, !dbg !9032
  %add752 = add i32 %352, %353, !dbg !9032
  %sub753 = sub i32 %add752, 1, !dbg !9032
  %sub754 = sub i32 63, %sub753, !dbg !9032
  %sh_prom755 = zext i32 %sub754 to i64, !dbg !9032
  %shr756 = lshr i64 -1, %sh_prom755, !dbg !9032
  %and757 = and i64 %add751, %shr756, !dbg !9032
  %add758 = add i64 0, %and757, !dbg !9032
  %and759 = and i64 %conv747, %add758, !dbg !9032
  %conv760 = trunc i64 %and759 to i32, !dbg !9032
  store i32 %conv760, i32* %_val745, align 4, !dbg !9032
  %354 = load i32, i32* %_var741, align 4, !dbg !9032
  %conv761 = zext i32 %354 to i64, !dbg !9032
  %355 = load i32, i32* %_pos743, align 4, !dbg !9032
  %sh_prom762 = zext i32 %355 to i64, !dbg !9032
  %shl763 = shl i64 1, %sh_prom762, !dbg !9032
  %sub764 = sub i64 -1, %shl763, !dbg !9032
  %add765 = add i64 %sub764, 1, !dbg !9032
  %356 = load i32, i32* %_pos743, align 4, !dbg !9032
  %357 = load i32, i32* %_len744, align 4, !dbg !9032
  %add766 = add i32 %356, %357, !dbg !9032
  %sub767 = sub i32 %add766, 1, !dbg !9032
  %sub768 = sub i32 63, %sub767, !dbg !9032
  %sh_prom769 = zext i32 %sub768 to i64, !dbg !9032
  %shr770 = lshr i64 -1, %sh_prom769, !dbg !9032
  %and771 = and i64 %add765, %shr770, !dbg !9032
  %add772 = add i64 0, %and771, !dbg !9032
  %neg773 = xor i64 %add772, -1, !dbg !9032
  %and774 = and i64 %conv761, %neg773, !dbg !9032
  %358 = load i32, i32* %_val745, align 4, !dbg !9032
  %conv775 = sext i32 %358 to i64, !dbg !9032
  %or776 = or i64 %and774, %conv775, !dbg !9032
  %conv777 = trunc i64 %or776 to i32, !dbg !9032
  store i32 %conv777, i32* %_var741, align 4, !dbg !9032
  %359 = load i32, i32* %_var741, align 4, !dbg !9032
  store i32 %359, i32* %tmp778, align 4, !dbg !9032
  %360 = load i32, i32* %tmp778, align 4, !dbg !9032
  %361 = load %struct.xlgmac_dma_desc*, %struct.xlgmac_dma_desc** %dma_desc, align 8, !dbg !9036
  %desc3779 = getelementptr inbounds %struct.xlgmac_dma_desc, %struct.xlgmac_dma_desc* %361, i32 0, i32 3, !dbg !9037
  store i32 %360, i32* %desc3779, align 4, !dbg !9038
  %362 = load i32, i32* %csum, align 4, !dbg !9039
  %tobool780 = icmp ne i32 %362, 0, !dbg !9039
  br i1 %tobool780, label %if.then781, label %if.end821, !dbg !9041

if.then781:                                       ; preds = %if.else740
  call void @llvm.dbg.declare(metadata i32* %_var782, metadata !9042, metadata !DIExpression()), !dbg !9044
  %363 = load %struct.xlgmac_dma_desc*, %struct.xlgmac_dma_desc** %dma_desc, align 8, !dbg !9044
  %desc3783 = getelementptr inbounds %struct.xlgmac_dma_desc, %struct.xlgmac_dma_desc* %363, i32 0, i32 3, !dbg !9044
  %364 = load i32, i32* %desc3783, align 4, !dbg !9044
  store i32 %364, i32* %_var782, align 4, !dbg !9044
  call void @llvm.dbg.declare(metadata i32* %_pos784, metadata !9045, metadata !DIExpression()), !dbg !9044
  store i32 16, i32* %_pos784, align 4, !dbg !9044
  call void @llvm.dbg.declare(metadata i32* %_len785, metadata !9046, metadata !DIExpression()), !dbg !9044
  store i32 2, i32* %_len785, align 4, !dbg !9044
  call void @llvm.dbg.declare(metadata i32* %_val786, metadata !9047, metadata !DIExpression()), !dbg !9044
  store i32 3, i32* %_val786, align 4, !dbg !9044
  %365 = load i32, i32* %_val786, align 4, !dbg !9044
  %366 = load i32, i32* %_pos784, align 4, !dbg !9044
  %shl787 = shl i32 %365, %366, !dbg !9044
  %conv788 = sext i32 %shl787 to i64, !dbg !9044
  %367 = load i32, i32* %_pos784, align 4, !dbg !9044
  %sh_prom789 = zext i32 %367 to i64, !dbg !9044
  %shl790 = shl i64 1, %sh_prom789, !dbg !9044
  %sub791 = sub i64 -1, %shl790, !dbg !9044
  %add792 = add i64 %sub791, 1, !dbg !9044
  %368 = load i32, i32* %_pos784, align 4, !dbg !9044
  %369 = load i32, i32* %_len785, align 4, !dbg !9044
  %add793 = add i32 %368, %369, !dbg !9044
  %sub794 = sub i32 %add793, 1, !dbg !9044
  %sub795 = sub i32 63, %sub794, !dbg !9044
  %sh_prom796 = zext i32 %sub795 to i64, !dbg !9044
  %shr797 = lshr i64 -1, %sh_prom796, !dbg !9044
  %and798 = and i64 %add792, %shr797, !dbg !9044
  %add799 = add i64 0, %and798, !dbg !9044
  %and800 = and i64 %conv788, %add799, !dbg !9044
  %conv801 = trunc i64 %and800 to i32, !dbg !9044
  store i32 %conv801, i32* %_val786, align 4, !dbg !9044
  %370 = load i32, i32* %_var782, align 4, !dbg !9044
  %conv802 = zext i32 %370 to i64, !dbg !9044
  %371 = load i32, i32* %_pos784, align 4, !dbg !9044
  %sh_prom803 = zext i32 %371 to i64, !dbg !9044
  %shl804 = shl i64 1, %sh_prom803, !dbg !9044
  %sub805 = sub i64 -1, %shl804, !dbg !9044
  %add806 = add i64 %sub805, 1, !dbg !9044
  %372 = load i32, i32* %_pos784, align 4, !dbg !9044
  %373 = load i32, i32* %_len785, align 4, !dbg !9044
  %add807 = add i32 %372, %373, !dbg !9044
  %sub808 = sub i32 %add807, 1, !dbg !9044
  %sub809 = sub i32 63, %sub808, !dbg !9044
  %sh_prom810 = zext i32 %sub809 to i64, !dbg !9044
  %shr811 = lshr i64 -1, %sh_prom810, !dbg !9044
  %and812 = and i64 %add806, %shr811, !dbg !9044
  %add813 = add i64 0, %and812, !dbg !9044
  %neg814 = xor i64 %add813, -1, !dbg !9044
  %and815 = and i64 %conv802, %neg814, !dbg !9044
  %374 = load i32, i32* %_val786, align 4, !dbg !9044
  %conv816 = sext i32 %374 to i64, !dbg !9044
  %or817 = or i64 %and815, %conv816, !dbg !9044
  %conv818 = trunc i64 %or817 to i32, !dbg !9044
  store i32 %conv818, i32* %_var782, align 4, !dbg !9044
  %375 = load i32, i32* %_var782, align 4, !dbg !9044
  store i32 %375, i32* %tmp819, align 4, !dbg !9044
  %376 = load i32, i32* %tmp819, align 4, !dbg !9044
  %377 = load %struct.xlgmac_dma_desc*, %struct.xlgmac_dma_desc** %dma_desc, align 8, !dbg !9048
  %desc3820 = getelementptr inbounds %struct.xlgmac_dma_desc, %struct.xlgmac_dma_desc* %377, i32 0, i32 3, !dbg !9049
  store i32 %376, i32* %desc3820, align 4, !dbg !9050
  br label %if.end821, !dbg !9048

if.end821:                                        ; preds = %if.then781, %if.else740
  call void @llvm.dbg.declare(metadata i32* %_var822, metadata !9051, metadata !DIExpression()), !dbg !9053
  %378 = load %struct.xlgmac_dma_desc*, %struct.xlgmac_dma_desc** %dma_desc, align 8, !dbg !9053
  %desc3823 = getelementptr inbounds %struct.xlgmac_dma_desc, %struct.xlgmac_dma_desc* %378, i32 0, i32 3, !dbg !9053
  %379 = load i32, i32* %desc3823, align 4, !dbg !9053
  store i32 %379, i32* %_var822, align 4, !dbg !9053
  call void @llvm.dbg.declare(metadata i32* %_pos824, metadata !9054, metadata !DIExpression()), !dbg !9053
  store i32 0, i32* %_pos824, align 4, !dbg !9053
  call void @llvm.dbg.declare(metadata i32* %_len825, metadata !9055, metadata !DIExpression()), !dbg !9053
  store i32 15, i32* %_len825, align 4, !dbg !9053
  call void @llvm.dbg.declare(metadata i32* %_val826, metadata !9056, metadata !DIExpression()), !dbg !9053
  %380 = load %struct.xlgmac_pkt_info*, %struct.xlgmac_pkt_info** %pkt_info, align 8, !dbg !9053
  %length = getelementptr inbounds %struct.xlgmac_pkt_info, %struct.xlgmac_pkt_info* %380, i32 0, i32 4, !dbg !9053
  %381 = load i32, i32* %length, align 4, !dbg !9053
  store i32 %381, i32* %_val826, align 4, !dbg !9053
  %382 = load i32, i32* %_val826, align 4, !dbg !9053
  %383 = load i32, i32* %_pos824, align 4, !dbg !9053
  %shl827 = shl i32 %382, %383, !dbg !9053
  %conv828 = zext i32 %shl827 to i64, !dbg !9053
  %384 = load i32, i32* %_pos824, align 4, !dbg !9053
  %sh_prom829 = zext i32 %384 to i64, !dbg !9053
  %shl830 = shl i64 1, %sh_prom829, !dbg !9053
  %sub831 = sub i64 -1, %shl830, !dbg !9053
  %add832 = add i64 %sub831, 1, !dbg !9053
  %385 = load i32, i32* %_pos824, align 4, !dbg !9053
  %386 = load i32, i32* %_len825, align 4, !dbg !9053
  %add833 = add i32 %385, %386, !dbg !9053
  %sub834 = sub i32 %add833, 1, !dbg !9053
  %sub835 = sub i32 63, %sub834, !dbg !9053
  %sh_prom836 = zext i32 %sub835 to i64, !dbg !9053
  %shr837 = lshr i64 -1, %sh_prom836, !dbg !9053
  %and838 = and i64 %add832, %shr837, !dbg !9053
  %add839 = add i64 0, %and838, !dbg !9053
  %and840 = and i64 %conv828, %add839, !dbg !9053
  %conv841 = trunc i64 %and840 to i32, !dbg !9053
  store i32 %conv841, i32* %_val826, align 4, !dbg !9053
  %387 = load i32, i32* %_var822, align 4, !dbg !9053
  %conv842 = zext i32 %387 to i64, !dbg !9053
  %388 = load i32, i32* %_pos824, align 4, !dbg !9053
  %sh_prom843 = zext i32 %388 to i64, !dbg !9053
  %shl844 = shl i64 1, %sh_prom843, !dbg !9053
  %sub845 = sub i64 -1, %shl844, !dbg !9053
  %add846 = add i64 %sub845, 1, !dbg !9053
  %389 = load i32, i32* %_pos824, align 4, !dbg !9053
  %390 = load i32, i32* %_len825, align 4, !dbg !9053
  %add847 = add i32 %389, %390, !dbg !9053
  %sub848 = sub i32 %add847, 1, !dbg !9053
  %sub849 = sub i32 63, %sub848, !dbg !9053
  %sh_prom850 = zext i32 %sub849 to i64, !dbg !9053
  %shr851 = lshr i64 -1, %sh_prom850, !dbg !9053
  %and852 = and i64 %add846, %shr851, !dbg !9053
  %add853 = add i64 0, %and852, !dbg !9053
  %neg854 = xor i64 %add853, -1, !dbg !9053
  %and855 = and i64 %conv842, %neg854, !dbg !9053
  %391 = load i32, i32* %_val826, align 4, !dbg !9053
  %conv856 = zext i32 %391 to i64, !dbg !9053
  %or857 = or i64 %and855, %conv856, !dbg !9053
  %conv858 = trunc i64 %or857 to i32, !dbg !9053
  store i32 %conv858, i32* %_var822, align 4, !dbg !9053
  %392 = load i32, i32* %_var822, align 4, !dbg !9053
  store i32 %392, i32* %tmp859, align 4, !dbg !9053
  %393 = load i32, i32* %tmp859, align 4, !dbg !9053
  %394 = load %struct.xlgmac_dma_desc*, %struct.xlgmac_dma_desc** %dma_desc, align 8, !dbg !9057
  %desc3860 = getelementptr inbounds %struct.xlgmac_dma_desc, %struct.xlgmac_dma_desc* %394, i32 0, i32 3, !dbg !9058
  store i32 %393, i32* %desc3860, align 4, !dbg !9059
  br label %if.end861

if.end861:                                        ; preds = %if.end821, %if.then620
  %395 = load i32, i32* %cur_index, align 4, !dbg !9060
  %396 = load i32, i32* %start_index, align 4, !dbg !9062
  %sub862 = sub i32 %395, %396, !dbg !9063
  %add863 = add i32 %sub862, 1, !dbg !9064
  store i32 %add863, i32* %i, align 4, !dbg !9065
  br label %for.cond, !dbg !9066

for.cond:                                         ; preds = %for.inc, %if.end861
  %397 = load i32, i32* %i, align 4, !dbg !9067
  %398 = load %struct.xlgmac_pkt_info*, %struct.xlgmac_pkt_info** %pkt_info, align 8, !dbg !9069
  %desc_count = getelementptr inbounds %struct.xlgmac_pkt_info, %struct.xlgmac_pkt_info* %398, i32 0, i32 3, !dbg !9070
  %399 = load i32, i32* %desc_count, align 8, !dbg !9070
  %cmp864 = icmp ult i32 %397, %399, !dbg !9071
  br i1 %cmp864, label %for.body, label %for.end, !dbg !9072

for.body:                                         ; preds = %for.cond
  %400 = load i32, i32* %cur_index, align 4, !dbg !9073
  %inc866 = add i32 %400, 1, !dbg !9073
  store i32 %inc866, i32* %cur_index, align 4, !dbg !9073
  call void @llvm.dbg.declare(metadata %struct.xlgmac_ring** %_ring867, metadata !9075, metadata !DIExpression()), !dbg !9077
  %401 = load %struct.xlgmac_ring*, %struct.xlgmac_ring** %ring, align 8, !dbg !9077
  store %struct.xlgmac_ring* %401, %struct.xlgmac_ring** %_ring867, align 8, !dbg !9077
  %402 = load %struct.xlgmac_ring*, %struct.xlgmac_ring** %_ring867, align 8, !dbg !9077
  %desc_data_head869 = getelementptr inbounds %struct.xlgmac_ring, %struct.xlgmac_ring* %402, i32 0, i32 4, !dbg !9077
  %403 = load %struct.xlgmac_desc_data*, %struct.xlgmac_desc_data** %desc_data_head869, align 8, !dbg !9077
  %404 = load i32, i32* %cur_index, align 4, !dbg !9077
  %405 = load %struct.xlgmac_ring*, %struct.xlgmac_ring** %_ring867, align 8, !dbg !9077
  %dma_desc_count870 = getelementptr inbounds %struct.xlgmac_ring, %struct.xlgmac_ring* %405, i32 0, i32 3, !dbg !9077
  %406 = load i32, i32* %dma_desc_count870, align 16, !dbg !9077
  %sub871 = sub i32 %406, 1, !dbg !9077
  %and872 = and i32 %404, %sub871, !dbg !9077
  %idx.ext873 = zext i32 %and872 to i64, !dbg !9077
  %add.ptr874 = getelementptr %struct.xlgmac_desc_data, %struct.xlgmac_desc_data* %403, i64 %idx.ext873, !dbg !9077
  store %struct.xlgmac_desc_data* %add.ptr874, %struct.xlgmac_desc_data** %tmp868, align 8, !dbg !9077
  %407 = load %struct.xlgmac_desc_data*, %struct.xlgmac_desc_data** %tmp868, align 8, !dbg !9077
  store %struct.xlgmac_desc_data* %407, %struct.xlgmac_desc_data** %desc_data, align 8, !dbg !9078
  %408 = load %struct.xlgmac_desc_data*, %struct.xlgmac_desc_data** %desc_data, align 8, !dbg !9079
  %dma_desc875 = getelementptr inbounds %struct.xlgmac_desc_data, %struct.xlgmac_desc_data* %408, i32 0, i32 0, !dbg !9080
  %409 = load %struct.xlgmac_dma_desc*, %struct.xlgmac_dma_desc** %dma_desc875, align 8, !dbg !9080
  store %struct.xlgmac_dma_desc* %409, %struct.xlgmac_dma_desc** %dma_desc, align 8, !dbg !9081
  %410 = load %struct.xlgmac_desc_data*, %struct.xlgmac_desc_data** %desc_data, align 8, !dbg !9082
  %skb_dma876 = getelementptr inbounds %struct.xlgmac_desc_data, %struct.xlgmac_desc_data* %410, i32 0, i32 3, !dbg !9082
  %411 = load i64, i64* %skb_dma876, align 8, !dbg !9082
  %and877 = and i64 %411, 4294967295, !dbg !9082
  %conv878 = trunc i64 %and877 to i32, !dbg !9082
  %412 = load %struct.xlgmac_dma_desc*, %struct.xlgmac_dma_desc** %dma_desc, align 8, !dbg !9083
  %desc0879 = getelementptr inbounds %struct.xlgmac_dma_desc, %struct.xlgmac_dma_desc* %412, i32 0, i32 0, !dbg !9084
  store i32 %conv878, i32* %desc0879, align 4, !dbg !9085
  %413 = load %struct.xlgmac_desc_data*, %struct.xlgmac_desc_data** %desc_data, align 8, !dbg !9086
  %skb_dma880 = getelementptr inbounds %struct.xlgmac_desc_data, %struct.xlgmac_desc_data* %413, i32 0, i32 3, !dbg !9086
  %414 = load i64, i64* %skb_dma880, align 8, !dbg !9086
  %shr881 = lshr i64 %414, 16, !dbg !9086
  %shr882 = lshr i64 %shr881, 16, !dbg !9086
  %conv883 = trunc i64 %shr882 to i32, !dbg !9086
  %415 = load %struct.xlgmac_dma_desc*, %struct.xlgmac_dma_desc** %dma_desc, align 8, !dbg !9087
  %desc1884 = getelementptr inbounds %struct.xlgmac_dma_desc, %struct.xlgmac_dma_desc* %415, i32 0, i32 1, !dbg !9088
  store i32 %conv883, i32* %desc1884, align 4, !dbg !9089
  call void @llvm.dbg.declare(metadata i32* %_var885, metadata !9090, metadata !DIExpression()), !dbg !9092
  %416 = load %struct.xlgmac_dma_desc*, %struct.xlgmac_dma_desc** %dma_desc, align 8, !dbg !9092
  %desc2886 = getelementptr inbounds %struct.xlgmac_dma_desc, %struct.xlgmac_dma_desc* %416, i32 0, i32 2, !dbg !9092
  %417 = load i32, i32* %desc2886, align 4, !dbg !9092
  store i32 %417, i32* %_var885, align 4, !dbg !9092
  call void @llvm.dbg.declare(metadata i32* %_pos887, metadata !9093, metadata !DIExpression()), !dbg !9092
  store i32 0, i32* %_pos887, align 4, !dbg !9092
  call void @llvm.dbg.declare(metadata i32* %_len888, metadata !9094, metadata !DIExpression()), !dbg !9092
  store i32 14, i32* %_len888, align 4, !dbg !9092
  call void @llvm.dbg.declare(metadata i32* %_val889, metadata !9095, metadata !DIExpression()), !dbg !9092
  %418 = load %struct.xlgmac_desc_data*, %struct.xlgmac_desc_data** %desc_data, align 8, !dbg !9092
  %skb_dma_len890 = getelementptr inbounds %struct.xlgmac_desc_data, %struct.xlgmac_desc_data* %418, i32 0, i32 4, !dbg !9092
  %419 = load i32, i32* %skb_dma_len890, align 8, !dbg !9092
  store i32 %419, i32* %_val889, align 4, !dbg !9092
  %420 = load i32, i32* %_val889, align 4, !dbg !9092
  %421 = load i32, i32* %_pos887, align 4, !dbg !9092
  %shl891 = shl i32 %420, %421, !dbg !9092
  %conv892 = zext i32 %shl891 to i64, !dbg !9092
  %422 = load i32, i32* %_pos887, align 4, !dbg !9092
  %sh_prom893 = zext i32 %422 to i64, !dbg !9092
  %shl894 = shl i64 1, %sh_prom893, !dbg !9092
  %sub895 = sub i64 -1, %shl894, !dbg !9092
  %add896 = add i64 %sub895, 1, !dbg !9092
  %423 = load i32, i32* %_pos887, align 4, !dbg !9092
  %424 = load i32, i32* %_len888, align 4, !dbg !9092
  %add897 = add i32 %423, %424, !dbg !9092
  %sub898 = sub i32 %add897, 1, !dbg !9092
  %sub899 = sub i32 63, %sub898, !dbg !9092
  %sh_prom900 = zext i32 %sub899 to i64, !dbg !9092
  %shr901 = lshr i64 -1, %sh_prom900, !dbg !9092
  %and902 = and i64 %add896, %shr901, !dbg !9092
  %add903 = add i64 0, %and902, !dbg !9092
  %and904 = and i64 %conv892, %add903, !dbg !9092
  %conv905 = trunc i64 %and904 to i32, !dbg !9092
  store i32 %conv905, i32* %_val889, align 4, !dbg !9092
  %425 = load i32, i32* %_var885, align 4, !dbg !9092
  %conv906 = zext i32 %425 to i64, !dbg !9092
  %426 = load i32, i32* %_pos887, align 4, !dbg !9092
  %sh_prom907 = zext i32 %426 to i64, !dbg !9092
  %shl908 = shl i64 1, %sh_prom907, !dbg !9092
  %sub909 = sub i64 -1, %shl908, !dbg !9092
  %add910 = add i64 %sub909, 1, !dbg !9092
  %427 = load i32, i32* %_pos887, align 4, !dbg !9092
  %428 = load i32, i32* %_len888, align 4, !dbg !9092
  %add911 = add i32 %427, %428, !dbg !9092
  %sub912 = sub i32 %add911, 1, !dbg !9092
  %sub913 = sub i32 63, %sub912, !dbg !9092
  %sh_prom914 = zext i32 %sub913 to i64, !dbg !9092
  %shr915 = lshr i64 -1, %sh_prom914, !dbg !9092
  %and916 = and i64 %add910, %shr915, !dbg !9092
  %add917 = add i64 0, %and916, !dbg !9092
  %neg918 = xor i64 %add917, -1, !dbg !9092
  %and919 = and i64 %conv906, %neg918, !dbg !9092
  %429 = load i32, i32* %_val889, align 4, !dbg !9092
  %conv920 = zext i32 %429 to i64, !dbg !9092
  %or921 = or i64 %and919, %conv920, !dbg !9092
  %conv922 = trunc i64 %or921 to i32, !dbg !9092
  store i32 %conv922, i32* %_var885, align 4, !dbg !9092
  %430 = load i32, i32* %_var885, align 4, !dbg !9092
  store i32 %430, i32* %tmp923, align 4, !dbg !9092
  %431 = load i32, i32* %tmp923, align 4, !dbg !9092
  %432 = load %struct.xlgmac_dma_desc*, %struct.xlgmac_dma_desc** %dma_desc, align 8, !dbg !9096
  %desc2924 = getelementptr inbounds %struct.xlgmac_dma_desc, %struct.xlgmac_dma_desc* %432, i32 0, i32 2, !dbg !9097
  store i32 %431, i32* %desc2924, align 4, !dbg !9098
  call void @llvm.dbg.declare(metadata i32* %_var925, metadata !9099, metadata !DIExpression()), !dbg !9101
  %433 = load %struct.xlgmac_dma_desc*, %struct.xlgmac_dma_desc** %dma_desc, align 8, !dbg !9101
  %desc3926 = getelementptr inbounds %struct.xlgmac_dma_desc, %struct.xlgmac_dma_desc* %433, i32 0, i32 3, !dbg !9101
  %434 = load i32, i32* %desc3926, align 4, !dbg !9101
  store i32 %434, i32* %_var925, align 4, !dbg !9101
  call void @llvm.dbg.declare(metadata i32* %_pos927, metadata !9102, metadata !DIExpression()), !dbg !9101
  store i32 31, i32* %_pos927, align 4, !dbg !9101
  call void @llvm.dbg.declare(metadata i32* %_len928, metadata !9103, metadata !DIExpression()), !dbg !9101
  store i32 1, i32* %_len928, align 4, !dbg !9101
  call void @llvm.dbg.declare(metadata i32* %_val929, metadata !9104, metadata !DIExpression()), !dbg !9101
  store i32 1, i32* %_val929, align 4, !dbg !9101
  %435 = load i32, i32* %_val929, align 4, !dbg !9101
  %436 = load i32, i32* %_pos927, align 4, !dbg !9101
  %shl930 = shl i32 %435, %436, !dbg !9101
  %conv931 = sext i32 %shl930 to i64, !dbg !9101
  %437 = load i32, i32* %_pos927, align 4, !dbg !9101
  %sh_prom932 = zext i32 %437 to i64, !dbg !9101
  %shl933 = shl i64 1, %sh_prom932, !dbg !9101
  %sub934 = sub i64 -1, %shl933, !dbg !9101
  %add935 = add i64 %sub934, 1, !dbg !9101
  %438 = load i32, i32* %_pos927, align 4, !dbg !9101
  %439 = load i32, i32* %_len928, align 4, !dbg !9101
  %add936 = add i32 %438, %439, !dbg !9101
  %sub937 = sub i32 %add936, 1, !dbg !9101
  %sub938 = sub i32 63, %sub937, !dbg !9101
  %sh_prom939 = zext i32 %sub938 to i64, !dbg !9101
  %shr940 = lshr i64 -1, %sh_prom939, !dbg !9101
  %and941 = and i64 %add935, %shr940, !dbg !9101
  %add942 = add i64 0, %and941, !dbg !9101
  %and943 = and i64 %conv931, %add942, !dbg !9101
  %conv944 = trunc i64 %and943 to i32, !dbg !9101
  store i32 %conv944, i32* %_val929, align 4, !dbg !9101
  %440 = load i32, i32* %_var925, align 4, !dbg !9101
  %conv945 = zext i32 %440 to i64, !dbg !9101
  %441 = load i32, i32* %_pos927, align 4, !dbg !9101
  %sh_prom946 = zext i32 %441 to i64, !dbg !9101
  %shl947 = shl i64 1, %sh_prom946, !dbg !9101
  %sub948 = sub i64 -1, %shl947, !dbg !9101
  %add949 = add i64 %sub948, 1, !dbg !9101
  %442 = load i32, i32* %_pos927, align 4, !dbg !9101
  %443 = load i32, i32* %_len928, align 4, !dbg !9101
  %add950 = add i32 %442, %443, !dbg !9101
  %sub951 = sub i32 %add950, 1, !dbg !9101
  %sub952 = sub i32 63, %sub951, !dbg !9101
  %sh_prom953 = zext i32 %sub952 to i64, !dbg !9101
  %shr954 = lshr i64 -1, %sh_prom953, !dbg !9101
  %and955 = and i64 %add949, %shr954, !dbg !9101
  %add956 = add i64 0, %and955, !dbg !9101
  %neg957 = xor i64 %add956, -1, !dbg !9101
  %and958 = and i64 %conv945, %neg957, !dbg !9101
  %444 = load i32, i32* %_val929, align 4, !dbg !9101
  %conv959 = sext i32 %444 to i64, !dbg !9101
  %or960 = or i64 %and958, %conv959, !dbg !9101
  %conv961 = trunc i64 %or960 to i32, !dbg !9101
  store i32 %conv961, i32* %_var925, align 4, !dbg !9101
  %445 = load i32, i32* %_var925, align 4, !dbg !9101
  store i32 %445, i32* %tmp962, align 4, !dbg !9101
  %446 = load i32, i32* %tmp962, align 4, !dbg !9101
  %447 = load %struct.xlgmac_dma_desc*, %struct.xlgmac_dma_desc** %dma_desc, align 8, !dbg !9105
  %desc3963 = getelementptr inbounds %struct.xlgmac_dma_desc, %struct.xlgmac_dma_desc* %447, i32 0, i32 3, !dbg !9106
  store i32 %446, i32* %desc3963, align 4, !dbg !9107
  call void @llvm.dbg.declare(metadata i32* %_var964, metadata !9108, metadata !DIExpression()), !dbg !9110
  %448 = load %struct.xlgmac_dma_desc*, %struct.xlgmac_dma_desc** %dma_desc, align 8, !dbg !9110
  %desc3965 = getelementptr inbounds %struct.xlgmac_dma_desc, %struct.xlgmac_dma_desc* %448, i32 0, i32 3, !dbg !9110
  %449 = load i32, i32* %desc3965, align 4, !dbg !9110
  store i32 %449, i32* %_var964, align 4, !dbg !9110
  call void @llvm.dbg.declare(metadata i32* %_pos966, metadata !9111, metadata !DIExpression()), !dbg !9110
  store i32 30, i32* %_pos966, align 4, !dbg !9110
  call void @llvm.dbg.declare(metadata i32* %_len967, metadata !9112, metadata !DIExpression()), !dbg !9110
  store i32 1, i32* %_len967, align 4, !dbg !9110
  call void @llvm.dbg.declare(metadata i32* %_val968, metadata !9113, metadata !DIExpression()), !dbg !9110
  store i32 0, i32* %_val968, align 4, !dbg !9110
  %450 = load i32, i32* %_val968, align 4, !dbg !9110
  %451 = load i32, i32* %_pos966, align 4, !dbg !9110
  %shl969 = shl i32 %450, %451, !dbg !9110
  %conv970 = sext i32 %shl969 to i64, !dbg !9110
  %452 = load i32, i32* %_pos966, align 4, !dbg !9110
  %sh_prom971 = zext i32 %452 to i64, !dbg !9110
  %shl972 = shl i64 1, %sh_prom971, !dbg !9110
  %sub973 = sub i64 -1, %shl972, !dbg !9110
  %add974 = add i64 %sub973, 1, !dbg !9110
  %453 = load i32, i32* %_pos966, align 4, !dbg !9110
  %454 = load i32, i32* %_len967, align 4, !dbg !9110
  %add975 = add i32 %453, %454, !dbg !9110
  %sub976 = sub i32 %add975, 1, !dbg !9110
  %sub977 = sub i32 63, %sub976, !dbg !9110
  %sh_prom978 = zext i32 %sub977 to i64, !dbg !9110
  %shr979 = lshr i64 -1, %sh_prom978, !dbg !9110
  %and980 = and i64 %add974, %shr979, !dbg !9110
  %add981 = add i64 0, %and980, !dbg !9110
  %and982 = and i64 %conv970, %add981, !dbg !9110
  %conv983 = trunc i64 %and982 to i32, !dbg !9110
  store i32 %conv983, i32* %_val968, align 4, !dbg !9110
  %455 = load i32, i32* %_var964, align 4, !dbg !9110
  %conv984 = zext i32 %455 to i64, !dbg !9110
  %456 = load i32, i32* %_pos966, align 4, !dbg !9110
  %sh_prom985 = zext i32 %456 to i64, !dbg !9110
  %shl986 = shl i64 1, %sh_prom985, !dbg !9110
  %sub987 = sub i64 -1, %shl986, !dbg !9110
  %add988 = add i64 %sub987, 1, !dbg !9110
  %457 = load i32, i32* %_pos966, align 4, !dbg !9110
  %458 = load i32, i32* %_len967, align 4, !dbg !9110
  %add989 = add i32 %457, %458, !dbg !9110
  %sub990 = sub i32 %add989, 1, !dbg !9110
  %sub991 = sub i32 63, %sub990, !dbg !9110
  %sh_prom992 = zext i32 %sub991 to i64, !dbg !9110
  %shr993 = lshr i64 -1, %sh_prom992, !dbg !9110
  %and994 = and i64 %add988, %shr993, !dbg !9110
  %add995 = add i64 0, %and994, !dbg !9110
  %neg996 = xor i64 %add995, -1, !dbg !9110
  %and997 = and i64 %conv984, %neg996, !dbg !9110
  %459 = load i32, i32* %_val968, align 4, !dbg !9110
  %conv998 = sext i32 %459 to i64, !dbg !9110
  %or999 = or i64 %and997, %conv998, !dbg !9110
  %conv1000 = trunc i64 %or999 to i32, !dbg !9110
  store i32 %conv1000, i32* %_var964, align 4, !dbg !9110
  %460 = load i32, i32* %_var964, align 4, !dbg !9110
  store i32 %460, i32* %tmp1001, align 4, !dbg !9110
  %461 = load i32, i32* %tmp1001, align 4, !dbg !9110
  %462 = load %struct.xlgmac_dma_desc*, %struct.xlgmac_dma_desc** %dma_desc, align 8, !dbg !9114
  %desc31002 = getelementptr inbounds %struct.xlgmac_dma_desc, %struct.xlgmac_dma_desc* %462, i32 0, i32 3, !dbg !9115
  store i32 %461, i32* %desc31002, align 4, !dbg !9116
  %463 = load i32, i32* %csum, align 4, !dbg !9117
  %tobool1003 = icmp ne i32 %463, 0, !dbg !9117
  br i1 %tobool1003, label %if.then1004, label %if.end1044, !dbg !9119

if.then1004:                                      ; preds = %for.body
  call void @llvm.dbg.declare(metadata i32* %_var1005, metadata !9120, metadata !DIExpression()), !dbg !9122
  %464 = load %struct.xlgmac_dma_desc*, %struct.xlgmac_dma_desc** %dma_desc, align 8, !dbg !9122
  %desc31006 = getelementptr inbounds %struct.xlgmac_dma_desc, %struct.xlgmac_dma_desc* %464, i32 0, i32 3, !dbg !9122
  %465 = load i32, i32* %desc31006, align 4, !dbg !9122
  store i32 %465, i32* %_var1005, align 4, !dbg !9122
  call void @llvm.dbg.declare(metadata i32* %_pos1007, metadata !9123, metadata !DIExpression()), !dbg !9122
  store i32 16, i32* %_pos1007, align 4, !dbg !9122
  call void @llvm.dbg.declare(metadata i32* %_len1008, metadata !9124, metadata !DIExpression()), !dbg !9122
  store i32 2, i32* %_len1008, align 4, !dbg !9122
  call void @llvm.dbg.declare(metadata i32* %_val1009, metadata !9125, metadata !DIExpression()), !dbg !9122
  store i32 3, i32* %_val1009, align 4, !dbg !9122
  %466 = load i32, i32* %_val1009, align 4, !dbg !9122
  %467 = load i32, i32* %_pos1007, align 4, !dbg !9122
  %shl1010 = shl i32 %466, %467, !dbg !9122
  %conv1011 = sext i32 %shl1010 to i64, !dbg !9122
  %468 = load i32, i32* %_pos1007, align 4, !dbg !9122
  %sh_prom1012 = zext i32 %468 to i64, !dbg !9122
  %shl1013 = shl i64 1, %sh_prom1012, !dbg !9122
  %sub1014 = sub i64 -1, %shl1013, !dbg !9122
  %add1015 = add i64 %sub1014, 1, !dbg !9122
  %469 = load i32, i32* %_pos1007, align 4, !dbg !9122
  %470 = load i32, i32* %_len1008, align 4, !dbg !9122
  %add1016 = add i32 %469, %470, !dbg !9122
  %sub1017 = sub i32 %add1016, 1, !dbg !9122
  %sub1018 = sub i32 63, %sub1017, !dbg !9122
  %sh_prom1019 = zext i32 %sub1018 to i64, !dbg !9122
  %shr1020 = lshr i64 -1, %sh_prom1019, !dbg !9122
  %and1021 = and i64 %add1015, %shr1020, !dbg !9122
  %add1022 = add i64 0, %and1021, !dbg !9122
  %and1023 = and i64 %conv1011, %add1022, !dbg !9122
  %conv1024 = trunc i64 %and1023 to i32, !dbg !9122
  store i32 %conv1024, i32* %_val1009, align 4, !dbg !9122
  %471 = load i32, i32* %_var1005, align 4, !dbg !9122
  %conv1025 = zext i32 %471 to i64, !dbg !9122
  %472 = load i32, i32* %_pos1007, align 4, !dbg !9122
  %sh_prom1026 = zext i32 %472 to i64, !dbg !9122
  %shl1027 = shl i64 1, %sh_prom1026, !dbg !9122
  %sub1028 = sub i64 -1, %shl1027, !dbg !9122
  %add1029 = add i64 %sub1028, 1, !dbg !9122
  %473 = load i32, i32* %_pos1007, align 4, !dbg !9122
  %474 = load i32, i32* %_len1008, align 4, !dbg !9122
  %add1030 = add i32 %473, %474, !dbg !9122
  %sub1031 = sub i32 %add1030, 1, !dbg !9122
  %sub1032 = sub i32 63, %sub1031, !dbg !9122
  %sh_prom1033 = zext i32 %sub1032 to i64, !dbg !9122
  %shr1034 = lshr i64 -1, %sh_prom1033, !dbg !9122
  %and1035 = and i64 %add1029, %shr1034, !dbg !9122
  %add1036 = add i64 0, %and1035, !dbg !9122
  %neg1037 = xor i64 %add1036, -1, !dbg !9122
  %and1038 = and i64 %conv1025, %neg1037, !dbg !9122
  %475 = load i32, i32* %_val1009, align 4, !dbg !9122
  %conv1039 = sext i32 %475 to i64, !dbg !9122
  %or1040 = or i64 %and1038, %conv1039, !dbg !9122
  %conv1041 = trunc i64 %or1040 to i32, !dbg !9122
  store i32 %conv1041, i32* %_var1005, align 4, !dbg !9122
  %476 = load i32, i32* %_var1005, align 4, !dbg !9122
  store i32 %476, i32* %tmp1042, align 4, !dbg !9122
  %477 = load i32, i32* %tmp1042, align 4, !dbg !9122
  %478 = load %struct.xlgmac_dma_desc*, %struct.xlgmac_dma_desc** %dma_desc, align 8, !dbg !9126
  %desc31043 = getelementptr inbounds %struct.xlgmac_dma_desc, %struct.xlgmac_dma_desc* %478, i32 0, i32 3, !dbg !9127
  store i32 %477, i32* %desc31043, align 4, !dbg !9128
  br label %if.end1044, !dbg !9126

if.end1044:                                       ; preds = %if.then1004, %for.body
  br label %for.inc, !dbg !9129

for.inc:                                          ; preds = %if.end1044
  %479 = load i32, i32* %i, align 4, !dbg !9130
  %inc1045 = add i32 %479, 1, !dbg !9130
  store i32 %inc1045, i32* %i, align 4, !dbg !9130
  br label %for.cond, !dbg !9131, !llvm.loop !9132

for.end:                                          ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %_var1046, metadata !9134, metadata !DIExpression()), !dbg !9136
  %480 = load %struct.xlgmac_dma_desc*, %struct.xlgmac_dma_desc** %dma_desc, align 8, !dbg !9136
  %desc31047 = getelementptr inbounds %struct.xlgmac_dma_desc, %struct.xlgmac_dma_desc* %480, i32 0, i32 3, !dbg !9136
  %481 = load i32, i32* %desc31047, align 4, !dbg !9136
  store i32 %481, i32* %_var1046, align 4, !dbg !9136
  call void @llvm.dbg.declare(metadata i32* %_pos1048, metadata !9137, metadata !DIExpression()), !dbg !9136
  store i32 28, i32* %_pos1048, align 4, !dbg !9136
  call void @llvm.dbg.declare(metadata i32* %_len1049, metadata !9138, metadata !DIExpression()), !dbg !9136
  store i32 1, i32* %_len1049, align 4, !dbg !9136
  call void @llvm.dbg.declare(metadata i32* %_val1050, metadata !9139, metadata !DIExpression()), !dbg !9136
  store i32 1, i32* %_val1050, align 4, !dbg !9136
  %482 = load i32, i32* %_val1050, align 4, !dbg !9136
  %483 = load i32, i32* %_pos1048, align 4, !dbg !9136
  %shl1051 = shl i32 %482, %483, !dbg !9136
  %conv1052 = sext i32 %shl1051 to i64, !dbg !9136
  %484 = load i32, i32* %_pos1048, align 4, !dbg !9136
  %sh_prom1053 = zext i32 %484 to i64, !dbg !9136
  %shl1054 = shl i64 1, %sh_prom1053, !dbg !9136
  %sub1055 = sub i64 -1, %shl1054, !dbg !9136
  %add1056 = add i64 %sub1055, 1, !dbg !9136
  %485 = load i32, i32* %_pos1048, align 4, !dbg !9136
  %486 = load i32, i32* %_len1049, align 4, !dbg !9136
  %add1057 = add i32 %485, %486, !dbg !9136
  %sub1058 = sub i32 %add1057, 1, !dbg !9136
  %sub1059 = sub i32 63, %sub1058, !dbg !9136
  %sh_prom1060 = zext i32 %sub1059 to i64, !dbg !9136
  %shr1061 = lshr i64 -1, %sh_prom1060, !dbg !9136
  %and1062 = and i64 %add1056, %shr1061, !dbg !9136
  %add1063 = add i64 0, %and1062, !dbg !9136
  %and1064 = and i64 %conv1052, %add1063, !dbg !9136
  %conv1065 = trunc i64 %and1064 to i32, !dbg !9136
  store i32 %conv1065, i32* %_val1050, align 4, !dbg !9136
  %487 = load i32, i32* %_var1046, align 4, !dbg !9136
  %conv1066 = zext i32 %487 to i64, !dbg !9136
  %488 = load i32, i32* %_pos1048, align 4, !dbg !9136
  %sh_prom1067 = zext i32 %488 to i64, !dbg !9136
  %shl1068 = shl i64 1, %sh_prom1067, !dbg !9136
  %sub1069 = sub i64 -1, %shl1068, !dbg !9136
  %add1070 = add i64 %sub1069, 1, !dbg !9136
  %489 = load i32, i32* %_pos1048, align 4, !dbg !9136
  %490 = load i32, i32* %_len1049, align 4, !dbg !9136
  %add1071 = add i32 %489, %490, !dbg !9136
  %sub1072 = sub i32 %add1071, 1, !dbg !9136
  %sub1073 = sub i32 63, %sub1072, !dbg !9136
  %sh_prom1074 = zext i32 %sub1073 to i64, !dbg !9136
  %shr1075 = lshr i64 -1, %sh_prom1074, !dbg !9136
  %and1076 = and i64 %add1070, %shr1075, !dbg !9136
  %add1077 = add i64 0, %and1076, !dbg !9136
  %neg1078 = xor i64 %add1077, -1, !dbg !9136
  %and1079 = and i64 %conv1066, %neg1078, !dbg !9136
  %491 = load i32, i32* %_val1050, align 4, !dbg !9136
  %conv1080 = sext i32 %491 to i64, !dbg !9136
  %or1081 = or i64 %and1079, %conv1080, !dbg !9136
  %conv1082 = trunc i64 %or1081 to i32, !dbg !9136
  store i32 %conv1082, i32* %_var1046, align 4, !dbg !9136
  %492 = load i32, i32* %_var1046, align 4, !dbg !9136
  store i32 %492, i32* %tmp1083, align 4, !dbg !9136
  %493 = load i32, i32* %tmp1083, align 4, !dbg !9136
  %494 = load %struct.xlgmac_dma_desc*, %struct.xlgmac_dma_desc** %dma_desc, align 8, !dbg !9140
  %desc31084 = getelementptr inbounds %struct.xlgmac_dma_desc, %struct.xlgmac_dma_desc* %494, i32 0, i32 3, !dbg !9141
  store i32 %493, i32* %desc31084, align 4, !dbg !9142
  %495 = load i32, i32* %tx_set_ic, align 4, !dbg !9143
  %tobool1085 = icmp ne i32 %495, 0, !dbg !9143
  br i1 %tobool1085, label %if.then1086, label %if.end1126, !dbg !9145

if.then1086:                                      ; preds = %for.end
  call void @llvm.dbg.declare(metadata i32* %_var1087, metadata !9146, metadata !DIExpression()), !dbg !9148
  %496 = load %struct.xlgmac_dma_desc*, %struct.xlgmac_dma_desc** %dma_desc, align 8, !dbg !9148
  %desc21088 = getelementptr inbounds %struct.xlgmac_dma_desc, %struct.xlgmac_dma_desc* %496, i32 0, i32 2, !dbg !9148
  %497 = load i32, i32* %desc21088, align 4, !dbg !9148
  store i32 %497, i32* %_var1087, align 4, !dbg !9148
  call void @llvm.dbg.declare(metadata i32* %_pos1089, metadata !9149, metadata !DIExpression()), !dbg !9148
  store i32 31, i32* %_pos1089, align 4, !dbg !9148
  call void @llvm.dbg.declare(metadata i32* %_len1090, metadata !9150, metadata !DIExpression()), !dbg !9148
  store i32 1, i32* %_len1090, align 4, !dbg !9148
  call void @llvm.dbg.declare(metadata i32* %_val1091, metadata !9151, metadata !DIExpression()), !dbg !9148
  store i32 1, i32* %_val1091, align 4, !dbg !9148
  %498 = load i32, i32* %_val1091, align 4, !dbg !9148
  %499 = load i32, i32* %_pos1089, align 4, !dbg !9148
  %shl1092 = shl i32 %498, %499, !dbg !9148
  %conv1093 = sext i32 %shl1092 to i64, !dbg !9148
  %500 = load i32, i32* %_pos1089, align 4, !dbg !9148
  %sh_prom1094 = zext i32 %500 to i64, !dbg !9148
  %shl1095 = shl i64 1, %sh_prom1094, !dbg !9148
  %sub1096 = sub i64 -1, %shl1095, !dbg !9148
  %add1097 = add i64 %sub1096, 1, !dbg !9148
  %501 = load i32, i32* %_pos1089, align 4, !dbg !9148
  %502 = load i32, i32* %_len1090, align 4, !dbg !9148
  %add1098 = add i32 %501, %502, !dbg !9148
  %sub1099 = sub i32 %add1098, 1, !dbg !9148
  %sub1100 = sub i32 63, %sub1099, !dbg !9148
  %sh_prom1101 = zext i32 %sub1100 to i64, !dbg !9148
  %shr1102 = lshr i64 -1, %sh_prom1101, !dbg !9148
  %and1103 = and i64 %add1097, %shr1102, !dbg !9148
  %add1104 = add i64 0, %and1103, !dbg !9148
  %and1105 = and i64 %conv1093, %add1104, !dbg !9148
  %conv1106 = trunc i64 %and1105 to i32, !dbg !9148
  store i32 %conv1106, i32* %_val1091, align 4, !dbg !9148
  %503 = load i32, i32* %_var1087, align 4, !dbg !9148
  %conv1107 = zext i32 %503 to i64, !dbg !9148
  %504 = load i32, i32* %_pos1089, align 4, !dbg !9148
  %sh_prom1108 = zext i32 %504 to i64, !dbg !9148
  %shl1109 = shl i64 1, %sh_prom1108, !dbg !9148
  %sub1110 = sub i64 -1, %shl1109, !dbg !9148
  %add1111 = add i64 %sub1110, 1, !dbg !9148
  %505 = load i32, i32* %_pos1089, align 4, !dbg !9148
  %506 = load i32, i32* %_len1090, align 4, !dbg !9148
  %add1112 = add i32 %505, %506, !dbg !9148
  %sub1113 = sub i32 %add1112, 1, !dbg !9148
  %sub1114 = sub i32 63, %sub1113, !dbg !9148
  %sh_prom1115 = zext i32 %sub1114 to i64, !dbg !9148
  %shr1116 = lshr i64 -1, %sh_prom1115, !dbg !9148
  %and1117 = and i64 %add1111, %shr1116, !dbg !9148
  %add1118 = add i64 0, %and1117, !dbg !9148
  %neg1119 = xor i64 %add1118, -1, !dbg !9148
  %and1120 = and i64 %conv1107, %neg1119, !dbg !9148
  %507 = load i32, i32* %_val1091, align 4, !dbg !9148
  %conv1121 = sext i32 %507 to i64, !dbg !9148
  %or1122 = or i64 %and1120, %conv1121, !dbg !9148
  %conv1123 = trunc i64 %or1122 to i32, !dbg !9148
  store i32 %conv1123, i32* %_var1087, align 4, !dbg !9148
  %508 = load i32, i32* %_var1087, align 4, !dbg !9148
  store i32 %508, i32* %tmp1124, align 4, !dbg !9148
  %509 = load i32, i32* %tmp1124, align 4, !dbg !9148
  %510 = load %struct.xlgmac_dma_desc*, %struct.xlgmac_dma_desc** %dma_desc, align 8, !dbg !9152
  %desc21125 = getelementptr inbounds %struct.xlgmac_dma_desc, %struct.xlgmac_dma_desc* %510, i32 0, i32 2, !dbg !9153
  store i32 %509, i32* %desc21125, align 4, !dbg !9154
  br label %if.end1126, !dbg !9152

if.end1126:                                       ; preds = %if.then1086, %for.end
  %511 = load %struct.xlgmac_pkt_info*, %struct.xlgmac_pkt_info** %pkt_info, align 8, !dbg !9155
  %tx_packets1127 = getelementptr inbounds %struct.xlgmac_pkt_info, %struct.xlgmac_pkt_info* %511, i32 0, i32 5, !dbg !9156
  %512 = load i32, i32* %tx_packets1127, align 8, !dbg !9156
  %513 = load %struct.xlgmac_desc_data*, %struct.xlgmac_desc_data** %desc_data, align 8, !dbg !9157
  %tx1128 = getelementptr inbounds %struct.xlgmac_desc_data, %struct.xlgmac_desc_data* %513, i32 0, i32 5, !dbg !9158
  %packets = getelementptr inbounds %struct.xlgmac_tx_desc_data, %struct.xlgmac_tx_desc_data* %tx1128, i32 0, i32 0, !dbg !9159
  store i32 %512, i32* %packets, align 4, !dbg !9160
  %514 = load %struct.xlgmac_pkt_info*, %struct.xlgmac_pkt_info** %pkt_info, align 8, !dbg !9161
  %tx_bytes = getelementptr inbounds %struct.xlgmac_pkt_info, %struct.xlgmac_pkt_info* %514, i32 0, i32 6, !dbg !9162
  %515 = load i32, i32* %tx_bytes, align 4, !dbg !9162
  %516 = load %struct.xlgmac_desc_data*, %struct.xlgmac_desc_data** %desc_data, align 8, !dbg !9163
  %tx1129 = getelementptr inbounds %struct.xlgmac_desc_data, %struct.xlgmac_desc_data* %516, i32 0, i32 5, !dbg !9164
  %bytes = getelementptr inbounds %struct.xlgmac_tx_desc_data, %struct.xlgmac_tx_desc_data* %tx1129, i32 0, i32 1, !dbg !9165
  store i32 %515, i32* %bytes, align 4, !dbg !9166
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !9167, !srcloc !9168
  call void @llvm.dbg.declare(metadata %struct.xlgmac_ring** %_ring1130, metadata !9169, metadata !DIExpression()), !dbg !9171
  %517 = load %struct.xlgmac_ring*, %struct.xlgmac_ring** %ring, align 8, !dbg !9171
  store %struct.xlgmac_ring* %517, %struct.xlgmac_ring** %_ring1130, align 8, !dbg !9171
  %518 = load %struct.xlgmac_ring*, %struct.xlgmac_ring** %_ring1130, align 8, !dbg !9171
  %desc_data_head1132 = getelementptr inbounds %struct.xlgmac_ring, %struct.xlgmac_ring* %518, i32 0, i32 4, !dbg !9171
  %519 = load %struct.xlgmac_desc_data*, %struct.xlgmac_desc_data** %desc_data_head1132, align 8, !dbg !9171
  %520 = load i32, i32* %start_index, align 4, !dbg !9171
  %521 = load %struct.xlgmac_ring*, %struct.xlgmac_ring** %_ring1130, align 8, !dbg !9171
  %dma_desc_count1133 = getelementptr inbounds %struct.xlgmac_ring, %struct.xlgmac_ring* %521, i32 0, i32 3, !dbg !9171
  %522 = load i32, i32* %dma_desc_count1133, align 16, !dbg !9171
  %sub1134 = sub i32 %522, 1, !dbg !9171
  %and1135 = and i32 %520, %sub1134, !dbg !9171
  %idx.ext1136 = zext i32 %and1135 to i64, !dbg !9171
  %add.ptr1137 = getelementptr %struct.xlgmac_desc_data, %struct.xlgmac_desc_data* %519, i64 %idx.ext1136, !dbg !9171
  store %struct.xlgmac_desc_data* %add.ptr1137, %struct.xlgmac_desc_data** %tmp1131, align 8, !dbg !9171
  %523 = load %struct.xlgmac_desc_data*, %struct.xlgmac_desc_data** %tmp1131, align 8, !dbg !9171
  store %struct.xlgmac_desc_data* %523, %struct.xlgmac_desc_data** %desc_data, align 8, !dbg !9172
  %524 = load %struct.xlgmac_desc_data*, %struct.xlgmac_desc_data** %desc_data, align 8, !dbg !9173
  %dma_desc1138 = getelementptr inbounds %struct.xlgmac_desc_data, %struct.xlgmac_desc_data* %524, i32 0, i32 0, !dbg !9174
  %525 = load %struct.xlgmac_dma_desc*, %struct.xlgmac_dma_desc** %dma_desc1138, align 8, !dbg !9174
  store %struct.xlgmac_dma_desc* %525, %struct.xlgmac_dma_desc** %dma_desc, align 8, !dbg !9175
  call void @llvm.dbg.declare(metadata i32* %_var1139, metadata !9176, metadata !DIExpression()), !dbg !9178
  %526 = load %struct.xlgmac_dma_desc*, %struct.xlgmac_dma_desc** %dma_desc, align 8, !dbg !9178
  %desc31140 = getelementptr inbounds %struct.xlgmac_dma_desc, %struct.xlgmac_dma_desc* %526, i32 0, i32 3, !dbg !9178
  %527 = load i32, i32* %desc31140, align 4, !dbg !9178
  store i32 %527, i32* %_var1139, align 4, !dbg !9178
  call void @llvm.dbg.declare(metadata i32* %_pos1141, metadata !9179, metadata !DIExpression()), !dbg !9178
  store i32 31, i32* %_pos1141, align 4, !dbg !9178
  call void @llvm.dbg.declare(metadata i32* %_len1142, metadata !9180, metadata !DIExpression()), !dbg !9178
  store i32 1, i32* %_len1142, align 4, !dbg !9178
  call void @llvm.dbg.declare(metadata i32* %_val1143, metadata !9181, metadata !DIExpression()), !dbg !9178
  store i32 1, i32* %_val1143, align 4, !dbg !9178
  %528 = load i32, i32* %_val1143, align 4, !dbg !9178
  %529 = load i32, i32* %_pos1141, align 4, !dbg !9178
  %shl1144 = shl i32 %528, %529, !dbg !9178
  %conv1145 = sext i32 %shl1144 to i64, !dbg !9178
  %530 = load i32, i32* %_pos1141, align 4, !dbg !9178
  %sh_prom1146 = zext i32 %530 to i64, !dbg !9178
  %shl1147 = shl i64 1, %sh_prom1146, !dbg !9178
  %sub1148 = sub i64 -1, %shl1147, !dbg !9178
  %add1149 = add i64 %sub1148, 1, !dbg !9178
  %531 = load i32, i32* %_pos1141, align 4, !dbg !9178
  %532 = load i32, i32* %_len1142, align 4, !dbg !9178
  %add1150 = add i32 %531, %532, !dbg !9178
  %sub1151 = sub i32 %add1150, 1, !dbg !9178
  %sub1152 = sub i32 63, %sub1151, !dbg !9178
  %sh_prom1153 = zext i32 %sub1152 to i64, !dbg !9178
  %shr1154 = lshr i64 -1, %sh_prom1153, !dbg !9178
  %and1155 = and i64 %add1149, %shr1154, !dbg !9178
  %add1156 = add i64 0, %and1155, !dbg !9178
  %and1157 = and i64 %conv1145, %add1156, !dbg !9178
  %conv1158 = trunc i64 %and1157 to i32, !dbg !9178
  store i32 %conv1158, i32* %_val1143, align 4, !dbg !9178
  %533 = load i32, i32* %_var1139, align 4, !dbg !9178
  %conv1159 = zext i32 %533 to i64, !dbg !9178
  %534 = load i32, i32* %_pos1141, align 4, !dbg !9178
  %sh_prom1160 = zext i32 %534 to i64, !dbg !9178
  %shl1161 = shl i64 1, %sh_prom1160, !dbg !9178
  %sub1162 = sub i64 -1, %shl1161, !dbg !9178
  %add1163 = add i64 %sub1162, 1, !dbg !9178
  %535 = load i32, i32* %_pos1141, align 4, !dbg !9178
  %536 = load i32, i32* %_len1142, align 4, !dbg !9178
  %add1164 = add i32 %535, %536, !dbg !9178
  %sub1165 = sub i32 %add1164, 1, !dbg !9178
  %sub1166 = sub i32 63, %sub1165, !dbg !9178
  %sh_prom1167 = zext i32 %sub1166 to i64, !dbg !9178
  %shr1168 = lshr i64 -1, %sh_prom1167, !dbg !9178
  %and1169 = and i64 %add1163, %shr1168, !dbg !9178
  %add1170 = add i64 0, %and1169, !dbg !9178
  %neg1171 = xor i64 %add1170, -1, !dbg !9178
  %and1172 = and i64 %conv1159, %neg1171, !dbg !9178
  %537 = load i32, i32* %_val1143, align 4, !dbg !9178
  %conv1173 = sext i32 %537 to i64, !dbg !9178
  %or1174 = or i64 %and1172, %conv1173, !dbg !9178
  %conv1175 = trunc i64 %or1174 to i32, !dbg !9178
  store i32 %conv1175, i32* %_var1139, align 4, !dbg !9178
  %538 = load i32, i32* %_var1139, align 4, !dbg !9178
  store i32 %538, i32* %tmp1176, align 4, !dbg !9178
  %539 = load i32, i32* %tmp1176, align 4, !dbg !9178
  %540 = load %struct.xlgmac_dma_desc*, %struct.xlgmac_dma_desc** %dma_desc, align 8, !dbg !9182
  %desc31177 = getelementptr inbounds %struct.xlgmac_dma_desc, %struct.xlgmac_dma_desc* %540, i32 0, i32 3, !dbg !9183
  store i32 %539, i32* %desc31177, align 4, !dbg !9184
  %541 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata, align 8, !dbg !9185
  %msg_enable = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %541, i32 0, i32 5, !dbg !9185
  %542 = load i32, i32* %msg_enable, align 8, !dbg !9185
  %and1178 = and i32 %542, 256, !dbg !9185
  %tobool1179 = icmp ne i32 %and1178, 0, !dbg !9185
  br i1 %tobool1179, label %if.then1180, label %if.end1182, !dbg !9187

if.then1180:                                      ; preds = %if.end1126
  %543 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata, align 8, !dbg !9188
  %544 = load %struct.xlgmac_ring*, %struct.xlgmac_ring** %ring, align 8, !dbg !9189
  %545 = load i32, i32* %start_index, align 4, !dbg !9190
  %546 = load %struct.xlgmac_pkt_info*, %struct.xlgmac_pkt_info** %pkt_info, align 8, !dbg !9191
  %desc_count1181 = getelementptr inbounds %struct.xlgmac_pkt_info, %struct.xlgmac_pkt_info* %546, i32 0, i32 3, !dbg !9192
  %547 = load i32, i32* %desc_count1181, align 8, !dbg !9192
  call void @xlgmac_dump_tx_desc(%struct.xlgmac_pdata* %543, %struct.xlgmac_ring* %544, i32 %545, i32 %547, i32 1) #7, !dbg !9193
  br label %if.end1182, !dbg !9193

if.end1182:                                       ; preds = %if.then1180, %if.end1126
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !9194, !srcloc !9195
  %548 = load i32, i32* %cur_index, align 4, !dbg !9196
  %add1183 = add i32 %548, 1, !dbg !9197
  %549 = load %struct.xlgmac_ring*, %struct.xlgmac_ring** %ring, align 8, !dbg !9198
  %cur1184 = getelementptr inbounds %struct.xlgmac_ring, %struct.xlgmac_ring* %549, i32 0, i32 7, !dbg !9199
  store i32 %add1183, i32* %cur1184, align 16, !dbg !9200
  %call = call zeroext i1 @netdev_xmit_more() #7, !dbg !9201
  br i1 %call, label %lor.lhs.false1185, label %if.then1189, !dbg !9203

lor.lhs.false1185:                                ; preds = %if.end1182
  %550 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata, align 8, !dbg !9204
  %netdev = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %550, i32 0, i32 0, !dbg !9205
  %551 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !9205
  %552 = load %struct.xlgmac_channel*, %struct.xlgmac_channel** %channel.addr, align 8, !dbg !9206
  %queue_index = getelementptr inbounds %struct.xlgmac_channel, %struct.xlgmac_channel* %552, i32 0, i32 2, !dbg !9207
  %553 = load i32, i32* %queue_index, align 8, !dbg !9207
  %call1186 = call %struct.netdev_queue* @netdev_get_tx_queue(%struct.net_device* %551, i32 %553) #7, !dbg !9208
  %call1187 = call zeroext i1 @netif_xmit_stopped(%struct.netdev_queue* %call1186) #7, !dbg !9209
  br i1 %call1187, label %if.then1189, label %if.else1190, !dbg !9210

if.then1189:                                      ; preds = %lor.lhs.false1185, %if.end1182
  %554 = load %struct.xlgmac_channel*, %struct.xlgmac_channel** %channel.addr, align 8, !dbg !9211
  %555 = load %struct.xlgmac_ring*, %struct.xlgmac_ring** %ring, align 8, !dbg !9212
  call void @xlgmac_tx_start_xmit(%struct.xlgmac_channel* %554, %struct.xlgmac_ring* %555) #7, !dbg !9213
  br label %if.end1192, !dbg !9213

if.else1190:                                      ; preds = %lor.lhs.false1185
  %556 = load %struct.xlgmac_ring*, %struct.xlgmac_ring** %ring, align 8, !dbg !9214
  %557 = getelementptr inbounds %struct.xlgmac_ring, %struct.xlgmac_ring* %556, i32 0, i32 10, !dbg !9215
  %tx1191 = bitcast %union.anon.129* %557 to %struct.anon.130*, !dbg !9215
  %xmit_more = getelementptr inbounds %struct.anon.130, %struct.anon.130* %tx1191, i32 0, i32 0, !dbg !9216
  store i32 1, i32* %xmit_more, align 4, !dbg !9217
  br label %if.end1192

if.end1192:                                       ; preds = %if.else1190, %if.then1189
  br label %do.body, !dbg !9218

do.body:                                          ; preds = %if.end1192
  br label %do.end, !dbg !9219

do.end:                                           ; preds = %do.body
  ret void, !dbg !9221
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @xlgmac_dev_read(%struct.xlgmac_channel* %channel) #0 !dbg !9222 {
entry:
  %retval = alloca i32, align 4
  %channel.addr = alloca %struct.xlgmac_channel*, align 8
  %pdata = alloca %struct.xlgmac_pdata*, align 8
  %ring = alloca %struct.xlgmac_ring*, align 8
  %netdev = alloca %struct.net_device*, align 8
  %desc_data = alloca %struct.xlgmac_desc_data*, align 8
  %dma_desc = alloca %struct.xlgmac_dma_desc*, align 8
  %pkt_info = alloca %struct.xlgmac_pkt_info*, align 8
  %err = alloca i32, align 4
  %etlt = alloca i32, align 4
  %l34t = alloca i32, align 4
  %_ring = alloca %struct.xlgmac_ring*, align 8
  %tmp = alloca %struct.xlgmac_desc_data*, align 8
  %_pos = alloca i32, align 4
  %_len = alloca i32, align 4
  %_var = alloca i32, align 4
  %tmp5 = alloca i64, align 8
  %_pos21 = alloca i32, align 4
  %_len22 = alloca i32, align 4
  %_var23 = alloca i32, align 4
  %tmp25 = alloca i64, align 8
  %_var43 = alloca i32, align 4
  %_pos44 = alloca i32, align 4
  %_len45 = alloca i32, align 4
  %_val = alloca i32, align 4
  %tmp61 = alloca i32, align 4
  %_var78 = alloca i32, align 4
  %_pos80 = alloca i32, align 4
  %_len81 = alloca i32, align 4
  %_val82 = alloca i32, align 4
  %tmp98 = alloca i32, align 4
  %_var118 = alloca i32, align 4
  %_pos120 = alloca i32, align 4
  %_len121 = alloca i32, align 4
  %_val122 = alloca i32, align 4
  %tmp138 = alloca i32, align 4
  %_pos157 = alloca i32, align 4
  %_len158 = alloca i32, align 4
  %_var159 = alloca i32, align 4
  %tmp161 = alloca i64, align 8
  %_var179 = alloca i32, align 4
  %_pos181 = alloca i32, align 4
  %_len182 = alloca i32, align 4
  %_val183 = alloca i32, align 4
  %tmp199 = alloca i32, align 4
  %_pos219 = alloca i32, align 4
  %_len220 = alloca i32, align 4
  %_var221 = alloca i32, align 4
  %tmp223 = alloca i64, align 8
  %_pos241 = alloca i32, align 4
  %_len242 = alloca i32, align 4
  %_var243 = alloca i32, align 4
  %tmp244 = alloca i64, align 8
  %_pos267 = alloca i32, align 4
  %_len268 = alloca i32, align 4
  %_var269 = alloca i32, align 4
  %tmp271 = alloca i64, align 8
  %_var289 = alloca i32, align 4
  %_pos291 = alloca i32, align 4
  %_len292 = alloca i32, align 4
  %_val293 = alloca i32, align 4
  %tmp309 = alloca i32, align 4
  %_pos328 = alloca i32, align 4
  %_len329 = alloca i32, align 4
  %_var330 = alloca i32, align 4
  %tmp332 = alloca i64, align 8
  %_pos351 = alloca i32, align 4
  %_len352 = alloca i32, align 4
  %_var353 = alloca i32, align 4
  %tmp355 = alloca i64, align 8
  %_pos373 = alloca i32, align 4
  %_len374 = alloca i32, align 4
  %_var375 = alloca i32, align 4
  %tmp377 = alloca i64, align 8
  %_var395 = alloca i32, align 4
  %_pos397 = alloca i32, align 4
  %_len398 = alloca i32, align 4
  %_val399 = alloca i32, align 4
  %tmp415 = alloca i32, align 4
  %_var435 = alloca i32, align 4
  %_pos437 = alloca i32, align 4
  %_len438 = alloca i32, align 4
  %_val439 = alloca i32, align 4
  %tmp455 = alloca i32, align 4
  %_var477 = alloca i32, align 4
  %_pos479 = alloca i32, align 4
  %_len480 = alloca i32, align 4
  %_val481 = alloca i32, align 4
  %tmp497 = alloca i32, align 4
  %_pos517 = alloca i32, align 4
  %_len518 = alloca i32, align 4
  %_var519 = alloca i32, align 4
  %tmp521 = alloca i64, align 8
  %_pos538 = alloca i32, align 4
  %_len539 = alloca i32, align 4
  %_var540 = alloca i32, align 4
  %tmp542 = alloca i64, align 8
  %tmp559 = alloca i32, align 4
  %_var568 = alloca i32, align 4
  %_pos570 = alloca i32, align 4
  %_len571 = alloca i32, align 4
  %_val572 = alloca i32, align 4
  %tmp588 = alloca i32, align 4
  %_pos607 = alloca i32, align 4
  %_len608 = alloca i32, align 4
  %_var609 = alloca i32, align 4
  %tmp610 = alloca i64, align 8
  %tmp627 = alloca i32, align 4
  %_var635 = alloca i32, align 4
  %_pos637 = alloca i32, align 4
  %_len638 = alloca i32, align 4
  %_val639 = alloca i32, align 4
  %tmp655 = alloca i32, align 4
  %_var675 = alloca i32, align 4
  %_pos676 = alloca i32, align 4
  %_len677 = alloca i32, align 4
  %_val678 = alloca i32, align 4
  %tmp694 = alloca i32, align 4
  store %struct.xlgmac_channel* %channel, %struct.xlgmac_channel** %channel.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xlgmac_channel** %channel.addr, metadata !9223, metadata !DIExpression()), !dbg !9224
  call void @llvm.dbg.declare(metadata %struct.xlgmac_pdata** %pdata, metadata !9225, metadata !DIExpression()), !dbg !9226
  %0 = load %struct.xlgmac_channel*, %struct.xlgmac_channel** %channel.addr, align 8, !dbg !9227
  %pdata1 = getelementptr inbounds %struct.xlgmac_channel, %struct.xlgmac_channel* %0, i32 0, i32 1, !dbg !9228
  %1 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata1, align 16, !dbg !9228
  store %struct.xlgmac_pdata* %1, %struct.xlgmac_pdata** %pdata, align 8, !dbg !9226
  call void @llvm.dbg.declare(metadata %struct.xlgmac_ring** %ring, metadata !9229, metadata !DIExpression()), !dbg !9230
  %2 = load %struct.xlgmac_channel*, %struct.xlgmac_channel** %channel.addr, align 8, !dbg !9231
  %rx_ring = getelementptr inbounds %struct.xlgmac_channel, %struct.xlgmac_channel* %2, i32 0, i32 11, !dbg !9232
  %3 = load %struct.xlgmac_ring*, %struct.xlgmac_ring** %rx_ring, align 8, !dbg !9232
  store %struct.xlgmac_ring* %3, %struct.xlgmac_ring** %ring, align 8, !dbg !9230
  call void @llvm.dbg.declare(metadata %struct.net_device** %netdev, metadata !9233, metadata !DIExpression()), !dbg !9234
  %4 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata, align 8, !dbg !9235
  %netdev2 = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %4, i32 0, i32 0, !dbg !9236
  %5 = load %struct.net_device*, %struct.net_device** %netdev2, align 8, !dbg !9236
  store %struct.net_device* %5, %struct.net_device** %netdev, align 8, !dbg !9234
  call void @llvm.dbg.declare(metadata %struct.xlgmac_desc_data** %desc_data, metadata !9237, metadata !DIExpression()), !dbg !9238
  call void @llvm.dbg.declare(metadata %struct.xlgmac_dma_desc** %dma_desc, metadata !9239, metadata !DIExpression()), !dbg !9240
  call void @llvm.dbg.declare(metadata %struct.xlgmac_pkt_info** %pkt_info, metadata !9241, metadata !DIExpression()), !dbg !9242
  call void @llvm.dbg.declare(metadata i32* %err, metadata !9243, metadata !DIExpression()), !dbg !9244
  call void @llvm.dbg.declare(metadata i32* %etlt, metadata !9245, metadata !DIExpression()), !dbg !9246
  call void @llvm.dbg.declare(metadata i32* %l34t, metadata !9247, metadata !DIExpression()), !dbg !9248
  call void @llvm.dbg.declare(metadata %struct.xlgmac_ring** %_ring, metadata !9249, metadata !DIExpression()), !dbg !9251
  %6 = load %struct.xlgmac_ring*, %struct.xlgmac_ring** %ring, align 8, !dbg !9251
  store %struct.xlgmac_ring* %6, %struct.xlgmac_ring** %_ring, align 8, !dbg !9251
  %7 = load %struct.xlgmac_ring*, %struct.xlgmac_ring** %_ring, align 8, !dbg !9251
  %desc_data_head = getelementptr inbounds %struct.xlgmac_ring, %struct.xlgmac_ring* %7, i32 0, i32 4, !dbg !9251
  %8 = load %struct.xlgmac_desc_data*, %struct.xlgmac_desc_data** %desc_data_head, align 8, !dbg !9251
  %9 = load %struct.xlgmac_ring*, %struct.xlgmac_ring** %ring, align 8, !dbg !9251
  %cur = getelementptr inbounds %struct.xlgmac_ring, %struct.xlgmac_ring* %9, i32 0, i32 7, !dbg !9251
  %10 = load i32, i32* %cur, align 16, !dbg !9251
  %11 = load %struct.xlgmac_ring*, %struct.xlgmac_ring** %_ring, align 8, !dbg !9251
  %dma_desc_count = getelementptr inbounds %struct.xlgmac_ring, %struct.xlgmac_ring* %11, i32 0, i32 3, !dbg !9251
  %12 = load i32, i32* %dma_desc_count, align 16, !dbg !9251
  %sub = sub i32 %12, 1, !dbg !9251
  %and = and i32 %10, %sub, !dbg !9251
  %idx.ext = zext i32 %and to i64, !dbg !9251
  %add.ptr = getelementptr %struct.xlgmac_desc_data, %struct.xlgmac_desc_data* %8, i64 %idx.ext, !dbg !9251
  store %struct.xlgmac_desc_data* %add.ptr, %struct.xlgmac_desc_data** %tmp, align 8, !dbg !9251
  %13 = load %struct.xlgmac_desc_data*, %struct.xlgmac_desc_data** %tmp, align 8, !dbg !9251
  store %struct.xlgmac_desc_data* %13, %struct.xlgmac_desc_data** %desc_data, align 8, !dbg !9252
  %14 = load %struct.xlgmac_desc_data*, %struct.xlgmac_desc_data** %desc_data, align 8, !dbg !9253
  %dma_desc3 = getelementptr inbounds %struct.xlgmac_desc_data, %struct.xlgmac_desc_data* %14, i32 0, i32 0, !dbg !9254
  %15 = load %struct.xlgmac_dma_desc*, %struct.xlgmac_dma_desc** %dma_desc3, align 8, !dbg !9254
  store %struct.xlgmac_dma_desc* %15, %struct.xlgmac_dma_desc** %dma_desc, align 8, !dbg !9255
  %16 = load %struct.xlgmac_ring*, %struct.xlgmac_ring** %ring, align 8, !dbg !9256
  %pkt_info4 = getelementptr inbounds %struct.xlgmac_ring, %struct.xlgmac_ring* %16, i32 0, i32 0, !dbg !9257
  store %struct.xlgmac_pkt_info* %pkt_info4, %struct.xlgmac_pkt_info** %pkt_info, align 8, !dbg !9258
  call void @llvm.dbg.declare(metadata i32* %_pos, metadata !9259, metadata !DIExpression()), !dbg !9262
  store i32 31, i32* %_pos, align 4, !dbg !9262
  call void @llvm.dbg.declare(metadata i32* %_len, metadata !9263, metadata !DIExpression()), !dbg !9262
  store i32 1, i32* %_len, align 4, !dbg !9262
  call void @llvm.dbg.declare(metadata i32* %_var, metadata !9264, metadata !DIExpression()), !dbg !9262
  %17 = load %struct.xlgmac_dma_desc*, %struct.xlgmac_dma_desc** %dma_desc, align 8, !dbg !9262
  %desc3 = getelementptr inbounds %struct.xlgmac_dma_desc, %struct.xlgmac_dma_desc* %17, i32 0, i32 3, !dbg !9262
  %18 = load i32, i32* %desc3, align 4, !dbg !9262
  store i32 %18, i32* %_var, align 4, !dbg !9262
  %19 = load i32, i32* %_var, align 4, !dbg !9262
  %conv = zext i32 %19 to i64, !dbg !9262
  %20 = load i32, i32* %_pos, align 4, !dbg !9262
  %sh_prom = zext i32 %20 to i64, !dbg !9262
  %shl = shl i64 1, %sh_prom, !dbg !9262
  %sub6 = sub i64 -1, %shl, !dbg !9262
  %add = add i64 %sub6, 1, !dbg !9262
  %21 = load i32, i32* %_pos, align 4, !dbg !9262
  %22 = load i32, i32* %_len, align 4, !dbg !9262
  %add7 = add i32 %21, %22, !dbg !9262
  %sub8 = sub i32 %add7, 1, !dbg !9262
  %sub9 = sub i32 63, %sub8, !dbg !9262
  %sh_prom10 = zext i32 %sub9 to i64, !dbg !9262
  %shr = lshr i64 -1, %sh_prom10, !dbg !9262
  %and11 = and i64 %add, %shr, !dbg !9262
  %add12 = add i64 0, %and11, !dbg !9262
  %and13 = and i64 %conv, %add12, !dbg !9262
  %23 = load i32, i32* %_pos, align 4, !dbg !9262
  %sh_prom14 = zext i32 %23 to i64, !dbg !9262
  %shr15 = lshr i64 %and13, %sh_prom14, !dbg !9262
  store i64 %shr15, i64* %tmp5, align 8, !dbg !9262
  %24 = load i64, i64* %tmp5, align 8, !dbg !9262
  %tobool = icmp ne i64 %24, 0, !dbg !9265
  br i1 %tobool, label %if.then, label %if.end, !dbg !9266

if.then:                                          ; preds = %entry
  store i32 1, i32* %retval, align 4, !dbg !9267
  br label %return, !dbg !9267

if.end:                                           ; preds = %entry
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !9268, !srcloc !9269
  %25 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata, align 8, !dbg !9270
  %msg_enable = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %25, i32 0, i32 5, !dbg !9270
  %26 = load i32, i32* %msg_enable, align 8, !dbg !9270
  %and16 = and i32 %26, 2048, !dbg !9270
  %tobool17 = icmp ne i32 %and16, 0, !dbg !9270
  br i1 %tobool17, label %if.then18, label %if.end20, !dbg !9272

if.then18:                                        ; preds = %if.end
  %27 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata, align 8, !dbg !9273
  %28 = load %struct.xlgmac_ring*, %struct.xlgmac_ring** %ring, align 8, !dbg !9274
  %29 = load %struct.xlgmac_ring*, %struct.xlgmac_ring** %ring, align 8, !dbg !9275
  %cur19 = getelementptr inbounds %struct.xlgmac_ring, %struct.xlgmac_ring* %29, i32 0, i32 7, !dbg !9276
  %30 = load i32, i32* %cur19, align 16, !dbg !9276
  call void @xlgmac_dump_rx_desc(%struct.xlgmac_pdata* %27, %struct.xlgmac_ring* %28, i32 %30) #7, !dbg !9277
  br label %if.end20, !dbg !9277

if.end20:                                         ; preds = %if.then18, %if.end
  call void @llvm.dbg.declare(metadata i32* %_pos21, metadata !9278, metadata !DIExpression()), !dbg !9281
  store i32 30, i32* %_pos21, align 4, !dbg !9281
  call void @llvm.dbg.declare(metadata i32* %_len22, metadata !9282, metadata !DIExpression()), !dbg !9281
  store i32 1, i32* %_len22, align 4, !dbg !9281
  call void @llvm.dbg.declare(metadata i32* %_var23, metadata !9283, metadata !DIExpression()), !dbg !9281
  %31 = load %struct.xlgmac_dma_desc*, %struct.xlgmac_dma_desc** %dma_desc, align 8, !dbg !9281
  %desc324 = getelementptr inbounds %struct.xlgmac_dma_desc, %struct.xlgmac_dma_desc* %31, i32 0, i32 3, !dbg !9281
  %32 = load i32, i32* %desc324, align 4, !dbg !9281
  store i32 %32, i32* %_var23, align 4, !dbg !9281
  %33 = load i32, i32* %_var23, align 4, !dbg !9281
  %conv26 = zext i32 %33 to i64, !dbg !9281
  %34 = load i32, i32* %_pos21, align 4, !dbg !9281
  %sh_prom27 = zext i32 %34 to i64, !dbg !9281
  %shl28 = shl i64 1, %sh_prom27, !dbg !9281
  %sub29 = sub i64 -1, %shl28, !dbg !9281
  %add30 = add i64 %sub29, 1, !dbg !9281
  %35 = load i32, i32* %_pos21, align 4, !dbg !9281
  %36 = load i32, i32* %_len22, align 4, !dbg !9281
  %add31 = add i32 %35, %36, !dbg !9281
  %sub32 = sub i32 %add31, 1, !dbg !9281
  %sub33 = sub i32 63, %sub32, !dbg !9281
  %sh_prom34 = zext i32 %sub33 to i64, !dbg !9281
  %shr35 = lshr i64 -1, %sh_prom34, !dbg !9281
  %and36 = and i64 %add30, %shr35, !dbg !9281
  %add37 = add i64 0, %and36, !dbg !9281
  %and38 = and i64 %conv26, %add37, !dbg !9281
  %37 = load i32, i32* %_pos21, align 4, !dbg !9281
  %sh_prom39 = zext i32 %37 to i64, !dbg !9281
  %shr40 = lshr i64 %and38, %sh_prom39, !dbg !9281
  store i64 %shr40, i64* %tmp25, align 8, !dbg !9281
  %38 = load i64, i64* %tmp25, align 8, !dbg !9281
  %tobool41 = icmp ne i64 %38, 0, !dbg !9284
  br i1 %tobool41, label %if.then42, label %if.end117, !dbg !9285

if.then42:                                        ; preds = %if.end20
  %39 = load %struct.xlgmac_pkt_info*, %struct.xlgmac_pkt_info** %pkt_info, align 8, !dbg !9286
  %40 = load %struct.xlgmac_dma_desc*, %struct.xlgmac_dma_desc** %dma_desc, align 8, !dbg !9288
  call void @xlgmac_get_rx_tstamp(%struct.xlgmac_pkt_info* %39, %struct.xlgmac_dma_desc* %40) #7, !dbg !9289
  call void @llvm.dbg.declare(metadata i32* %_var43, metadata !9290, metadata !DIExpression()), !dbg !9292
  %41 = load %struct.xlgmac_pkt_info*, %struct.xlgmac_pkt_info** %pkt_info, align 8, !dbg !9292
  %attributes = getelementptr inbounds %struct.xlgmac_pkt_info, %struct.xlgmac_pkt_info* %41, i32 0, i32 1, !dbg !9292
  %42 = load i32, i32* %attributes, align 8, !dbg !9292
  store i32 %42, i32* %_var43, align 4, !dbg !9292
  call void @llvm.dbg.declare(metadata i32* %_pos44, metadata !9293, metadata !DIExpression()), !dbg !9292
  store i32 4, i32* %_pos44, align 4, !dbg !9292
  call void @llvm.dbg.declare(metadata i32* %_len45, metadata !9294, metadata !DIExpression()), !dbg !9292
  store i32 1, i32* %_len45, align 4, !dbg !9292
  call void @llvm.dbg.declare(metadata i32* %_val, metadata !9295, metadata !DIExpression()), !dbg !9292
  store i32 1, i32* %_val, align 4, !dbg !9292
  %43 = load i32, i32* %_val, align 4, !dbg !9292
  %44 = load i32, i32* %_pos44, align 4, !dbg !9292
  %shl46 = shl i32 %43, %44, !dbg !9292
  %conv47 = sext i32 %shl46 to i64, !dbg !9292
  %45 = load i32, i32* %_pos44, align 4, !dbg !9292
  %sh_prom48 = zext i32 %45 to i64, !dbg !9292
  %shl49 = shl i64 1, %sh_prom48, !dbg !9292
  %sub50 = sub i64 -1, %shl49, !dbg !9292
  %add51 = add i64 %sub50, 1, !dbg !9292
  %46 = load i32, i32* %_pos44, align 4, !dbg !9292
  %47 = load i32, i32* %_len45, align 4, !dbg !9292
  %add52 = add i32 %46, %47, !dbg !9292
  %sub53 = sub i32 %add52, 1, !dbg !9292
  %sub54 = sub i32 63, %sub53, !dbg !9292
  %sh_prom55 = zext i32 %sub54 to i64, !dbg !9292
  %shr56 = lshr i64 -1, %sh_prom55, !dbg !9292
  %and57 = and i64 %add51, %shr56, !dbg !9292
  %add58 = add i64 0, %and57, !dbg !9292
  %and59 = and i64 %conv47, %add58, !dbg !9292
  %conv60 = trunc i64 %and59 to i32, !dbg !9292
  store i32 %conv60, i32* %_val, align 4, !dbg !9292
  %48 = load i32, i32* %_var43, align 4, !dbg !9292
  %conv62 = zext i32 %48 to i64, !dbg !9292
  %49 = load i32, i32* %_pos44, align 4, !dbg !9292
  %sh_prom63 = zext i32 %49 to i64, !dbg !9292
  %shl64 = shl i64 1, %sh_prom63, !dbg !9292
  %sub65 = sub i64 -1, %shl64, !dbg !9292
  %add66 = add i64 %sub65, 1, !dbg !9292
  %50 = load i32, i32* %_pos44, align 4, !dbg !9292
  %51 = load i32, i32* %_len45, align 4, !dbg !9292
  %add67 = add i32 %50, %51, !dbg !9292
  %sub68 = sub i32 %add67, 1, !dbg !9292
  %sub69 = sub i32 63, %sub68, !dbg !9292
  %sh_prom70 = zext i32 %sub69 to i64, !dbg !9292
  %shr71 = lshr i64 -1, %sh_prom70, !dbg !9292
  %and72 = and i64 %add66, %shr71, !dbg !9292
  %add73 = add i64 0, %and72, !dbg !9292
  %neg = xor i64 %add73, -1, !dbg !9292
  %and74 = and i64 %conv62, %neg, !dbg !9292
  %52 = load i32, i32* %_val, align 4, !dbg !9292
  %conv75 = sext i32 %52 to i64, !dbg !9292
  %or = or i64 %and74, %conv75, !dbg !9292
  %conv76 = trunc i64 %or to i32, !dbg !9292
  store i32 %conv76, i32* %_var43, align 4, !dbg !9292
  store i32 %conv76, i32* %tmp61, align 4, !dbg !9292
  %53 = load i32, i32* %tmp61, align 4, !dbg !9292
  %54 = load %struct.xlgmac_pkt_info*, %struct.xlgmac_pkt_info** %pkt_info, align 8, !dbg !9296
  %attributes77 = getelementptr inbounds %struct.xlgmac_pkt_info, %struct.xlgmac_pkt_info* %54, i32 0, i32 1, !dbg !9297
  store i32 %53, i32* %attributes77, align 8, !dbg !9298
  call void @llvm.dbg.declare(metadata i32* %_var78, metadata !9299, metadata !DIExpression()), !dbg !9301
  %55 = load %struct.xlgmac_pkt_info*, %struct.xlgmac_pkt_info** %pkt_info, align 8, !dbg !9301
  %attributes79 = getelementptr inbounds %struct.xlgmac_pkt_info, %struct.xlgmac_pkt_info* %55, i32 0, i32 1, !dbg !9301
  %56 = load i32, i32* %attributes79, align 8, !dbg !9301
  store i32 %56, i32* %_var78, align 4, !dbg !9301
  call void @llvm.dbg.declare(metadata i32* %_pos80, metadata !9302, metadata !DIExpression()), !dbg !9301
  store i32 3, i32* %_pos80, align 4, !dbg !9301
  call void @llvm.dbg.declare(metadata i32* %_len81, metadata !9303, metadata !DIExpression()), !dbg !9301
  store i32 1, i32* %_len81, align 4, !dbg !9301
  call void @llvm.dbg.declare(metadata i32* %_val82, metadata !9304, metadata !DIExpression()), !dbg !9301
  store i32 0, i32* %_val82, align 4, !dbg !9301
  %57 = load i32, i32* %_val82, align 4, !dbg !9301
  %58 = load i32, i32* %_pos80, align 4, !dbg !9301
  %shl83 = shl i32 %57, %58, !dbg !9301
  %conv84 = sext i32 %shl83 to i64, !dbg !9301
  %59 = load i32, i32* %_pos80, align 4, !dbg !9301
  %sh_prom85 = zext i32 %59 to i64, !dbg !9301
  %shl86 = shl i64 1, %sh_prom85, !dbg !9301
  %sub87 = sub i64 -1, %shl86, !dbg !9301
  %add88 = add i64 %sub87, 1, !dbg !9301
  %60 = load i32, i32* %_pos80, align 4, !dbg !9301
  %61 = load i32, i32* %_len81, align 4, !dbg !9301
  %add89 = add i32 %60, %61, !dbg !9301
  %sub90 = sub i32 %add89, 1, !dbg !9301
  %sub91 = sub i32 63, %sub90, !dbg !9301
  %sh_prom92 = zext i32 %sub91 to i64, !dbg !9301
  %shr93 = lshr i64 -1, %sh_prom92, !dbg !9301
  %and94 = and i64 %add88, %shr93, !dbg !9301
  %add95 = add i64 0, %and94, !dbg !9301
  %and96 = and i64 %conv84, %add95, !dbg !9301
  %conv97 = trunc i64 %and96 to i32, !dbg !9301
  store i32 %conv97, i32* %_val82, align 4, !dbg !9301
  %62 = load i32, i32* %_var78, align 4, !dbg !9301
  %conv99 = zext i32 %62 to i64, !dbg !9301
  %63 = load i32, i32* %_pos80, align 4, !dbg !9301
  %sh_prom100 = zext i32 %63 to i64, !dbg !9301
  %shl101 = shl i64 1, %sh_prom100, !dbg !9301
  %sub102 = sub i64 -1, %shl101, !dbg !9301
  %add103 = add i64 %sub102, 1, !dbg !9301
  %64 = load i32, i32* %_pos80, align 4, !dbg !9301
  %65 = load i32, i32* %_len81, align 4, !dbg !9301
  %add104 = add i32 %64, %65, !dbg !9301
  %sub105 = sub i32 %add104, 1, !dbg !9301
  %sub106 = sub i32 63, %sub105, !dbg !9301
  %sh_prom107 = zext i32 %sub106 to i64, !dbg !9301
  %shr108 = lshr i64 -1, %sh_prom107, !dbg !9301
  %and109 = and i64 %add103, %shr108, !dbg !9301
  %add110 = add i64 0, %and109, !dbg !9301
  %neg111 = xor i64 %add110, -1, !dbg !9301
  %and112 = and i64 %conv99, %neg111, !dbg !9301
  %66 = load i32, i32* %_val82, align 4, !dbg !9301
  %conv113 = sext i32 %66 to i64, !dbg !9301
  %or114 = or i64 %and112, %conv113, !dbg !9301
  %conv115 = trunc i64 %or114 to i32, !dbg !9301
  store i32 %conv115, i32* %_var78, align 4, !dbg !9301
  store i32 %conv115, i32* %tmp98, align 4, !dbg !9301
  %67 = load i32, i32* %tmp98, align 4, !dbg !9301
  %68 = load %struct.xlgmac_pkt_info*, %struct.xlgmac_pkt_info** %pkt_info, align 8, !dbg !9305
  %attributes116 = getelementptr inbounds %struct.xlgmac_pkt_info, %struct.xlgmac_pkt_info* %68, i32 0, i32 1, !dbg !9306
  store i32 %67, i32* %attributes116, align 8, !dbg !9307
  store i32 0, i32* %retval, align 4, !dbg !9308
  br label %return, !dbg !9308

if.end117:                                        ; preds = %if.end20
  call void @llvm.dbg.declare(metadata i32* %_var118, metadata !9309, metadata !DIExpression()), !dbg !9311
  %69 = load %struct.xlgmac_pkt_info*, %struct.xlgmac_pkt_info** %pkt_info, align 8, !dbg !9311
  %attributes119 = getelementptr inbounds %struct.xlgmac_pkt_info, %struct.xlgmac_pkt_info* %69, i32 0, i32 1, !dbg !9311
  %70 = load i32, i32* %attributes119, align 8, !dbg !9311
  store i32 %70, i32* %_var118, align 4, !dbg !9311
  call void @llvm.dbg.declare(metadata i32* %_pos120, metadata !9312, metadata !DIExpression()), !dbg !9311
  store i32 4, i32* %_pos120, align 4, !dbg !9311
  call void @llvm.dbg.declare(metadata i32* %_len121, metadata !9313, metadata !DIExpression()), !dbg !9311
  store i32 1, i32* %_len121, align 4, !dbg !9311
  call void @llvm.dbg.declare(metadata i32* %_val122, metadata !9314, metadata !DIExpression()), !dbg !9311
  store i32 0, i32* %_val122, align 4, !dbg !9311
  %71 = load i32, i32* %_val122, align 4, !dbg !9311
  %72 = load i32, i32* %_pos120, align 4, !dbg !9311
  %shl123 = shl i32 %71, %72, !dbg !9311
  %conv124 = sext i32 %shl123 to i64, !dbg !9311
  %73 = load i32, i32* %_pos120, align 4, !dbg !9311
  %sh_prom125 = zext i32 %73 to i64, !dbg !9311
  %shl126 = shl i64 1, %sh_prom125, !dbg !9311
  %sub127 = sub i64 -1, %shl126, !dbg !9311
  %add128 = add i64 %sub127, 1, !dbg !9311
  %74 = load i32, i32* %_pos120, align 4, !dbg !9311
  %75 = load i32, i32* %_len121, align 4, !dbg !9311
  %add129 = add i32 %74, %75, !dbg !9311
  %sub130 = sub i32 %add129, 1, !dbg !9311
  %sub131 = sub i32 63, %sub130, !dbg !9311
  %sh_prom132 = zext i32 %sub131 to i64, !dbg !9311
  %shr133 = lshr i64 -1, %sh_prom132, !dbg !9311
  %and134 = and i64 %add128, %shr133, !dbg !9311
  %add135 = add i64 0, %and134, !dbg !9311
  %and136 = and i64 %conv124, %add135, !dbg !9311
  %conv137 = trunc i64 %and136 to i32, !dbg !9311
  store i32 %conv137, i32* %_val122, align 4, !dbg !9311
  %76 = load i32, i32* %_var118, align 4, !dbg !9311
  %conv139 = zext i32 %76 to i64, !dbg !9311
  %77 = load i32, i32* %_pos120, align 4, !dbg !9311
  %sh_prom140 = zext i32 %77 to i64, !dbg !9311
  %shl141 = shl i64 1, %sh_prom140, !dbg !9311
  %sub142 = sub i64 -1, %shl141, !dbg !9311
  %add143 = add i64 %sub142, 1, !dbg !9311
  %78 = load i32, i32* %_pos120, align 4, !dbg !9311
  %79 = load i32, i32* %_len121, align 4, !dbg !9311
  %add144 = add i32 %78, %79, !dbg !9311
  %sub145 = sub i32 %add144, 1, !dbg !9311
  %sub146 = sub i32 63, %sub145, !dbg !9311
  %sh_prom147 = zext i32 %sub146 to i64, !dbg !9311
  %shr148 = lshr i64 -1, %sh_prom147, !dbg !9311
  %and149 = and i64 %add143, %shr148, !dbg !9311
  %add150 = add i64 0, %and149, !dbg !9311
  %neg151 = xor i64 %add150, -1, !dbg !9311
  %and152 = and i64 %conv139, %neg151, !dbg !9311
  %80 = load i32, i32* %_val122, align 4, !dbg !9311
  %conv153 = sext i32 %80 to i64, !dbg !9311
  %or154 = or i64 %and152, %conv153, !dbg !9311
  %conv155 = trunc i64 %or154 to i32, !dbg !9311
  store i32 %conv155, i32* %_var118, align 4, !dbg !9311
  store i32 %conv155, i32* %tmp138, align 4, !dbg !9311
  %81 = load i32, i32* %tmp138, align 4, !dbg !9311
  %82 = load %struct.xlgmac_pkt_info*, %struct.xlgmac_pkt_info** %pkt_info, align 8, !dbg !9315
  %attributes156 = getelementptr inbounds %struct.xlgmac_pkt_info, %struct.xlgmac_pkt_info* %82, i32 0, i32 1, !dbg !9316
  store i32 %81, i32* %attributes156, align 8, !dbg !9317
  call void @llvm.dbg.declare(metadata i32* %_pos157, metadata !9318, metadata !DIExpression()), !dbg !9321
  store i32 27, i32* %_pos157, align 4, !dbg !9321
  call void @llvm.dbg.declare(metadata i32* %_len158, metadata !9322, metadata !DIExpression()), !dbg !9321
  store i32 1, i32* %_len158, align 4, !dbg !9321
  call void @llvm.dbg.declare(metadata i32* %_var159, metadata !9323, metadata !DIExpression()), !dbg !9321
  %83 = load %struct.xlgmac_dma_desc*, %struct.xlgmac_dma_desc** %dma_desc, align 8, !dbg !9321
  %desc3160 = getelementptr inbounds %struct.xlgmac_dma_desc, %struct.xlgmac_dma_desc* %83, i32 0, i32 3, !dbg !9321
  %84 = load i32, i32* %desc3160, align 4, !dbg !9321
  store i32 %84, i32* %_var159, align 4, !dbg !9321
  %85 = load i32, i32* %_var159, align 4, !dbg !9321
  %conv162 = zext i32 %85 to i64, !dbg !9321
  %86 = load i32, i32* %_pos157, align 4, !dbg !9321
  %sh_prom163 = zext i32 %86 to i64, !dbg !9321
  %shl164 = shl i64 1, %sh_prom163, !dbg !9321
  %sub165 = sub i64 -1, %shl164, !dbg !9321
  %add166 = add i64 %sub165, 1, !dbg !9321
  %87 = load i32, i32* %_pos157, align 4, !dbg !9321
  %88 = load i32, i32* %_len158, align 4, !dbg !9321
  %add167 = add i32 %87, %88, !dbg !9321
  %sub168 = sub i32 %add167, 1, !dbg !9321
  %sub169 = sub i32 63, %sub168, !dbg !9321
  %sh_prom170 = zext i32 %sub169 to i64, !dbg !9321
  %shr171 = lshr i64 -1, %sh_prom170, !dbg !9321
  %and172 = and i64 %add166, %shr171, !dbg !9321
  %add173 = add i64 0, %and172, !dbg !9321
  %and174 = and i64 %conv162, %add173, !dbg !9321
  %89 = load i32, i32* %_pos157, align 4, !dbg !9321
  %sh_prom175 = zext i32 %89 to i64, !dbg !9321
  %shr176 = lshr i64 %and174, %sh_prom175, !dbg !9321
  store i64 %shr176, i64* %tmp161, align 8, !dbg !9321
  %90 = load i64, i64* %tmp161, align 8, !dbg !9321
  %tobool177 = icmp ne i64 %90, 0, !dbg !9324
  br i1 %tobool177, label %if.then178, label %if.end218, !dbg !9325

if.then178:                                       ; preds = %if.end117
  call void @llvm.dbg.declare(metadata i32* %_var179, metadata !9326, metadata !DIExpression()), !dbg !9328
  %91 = load %struct.xlgmac_pkt_info*, %struct.xlgmac_pkt_info** %pkt_info, align 8, !dbg !9328
  %attributes180 = getelementptr inbounds %struct.xlgmac_pkt_info, %struct.xlgmac_pkt_info* %91, i32 0, i32 1, !dbg !9328
  %92 = load i32, i32* %attributes180, align 8, !dbg !9328
  store i32 %92, i32* %_var179, align 4, !dbg !9328
  call void @llvm.dbg.declare(metadata i32* %_pos181, metadata !9329, metadata !DIExpression()), !dbg !9328
  store i32 3, i32* %_pos181, align 4, !dbg !9328
  call void @llvm.dbg.declare(metadata i32* %_len182, metadata !9330, metadata !DIExpression()), !dbg !9328
  store i32 1, i32* %_len182, align 4, !dbg !9328
  call void @llvm.dbg.declare(metadata i32* %_val183, metadata !9331, metadata !DIExpression()), !dbg !9328
  store i32 1, i32* %_val183, align 4, !dbg !9328
  %93 = load i32, i32* %_val183, align 4, !dbg !9328
  %94 = load i32, i32* %_pos181, align 4, !dbg !9328
  %shl184 = shl i32 %93, %94, !dbg !9328
  %conv185 = sext i32 %shl184 to i64, !dbg !9328
  %95 = load i32, i32* %_pos181, align 4, !dbg !9328
  %sh_prom186 = zext i32 %95 to i64, !dbg !9328
  %shl187 = shl i64 1, %sh_prom186, !dbg !9328
  %sub188 = sub i64 -1, %shl187, !dbg !9328
  %add189 = add i64 %sub188, 1, !dbg !9328
  %96 = load i32, i32* %_pos181, align 4, !dbg !9328
  %97 = load i32, i32* %_len182, align 4, !dbg !9328
  %add190 = add i32 %96, %97, !dbg !9328
  %sub191 = sub i32 %add190, 1, !dbg !9328
  %sub192 = sub i32 63, %sub191, !dbg !9328
  %sh_prom193 = zext i32 %sub192 to i64, !dbg !9328
  %shr194 = lshr i64 -1, %sh_prom193, !dbg !9328
  %and195 = and i64 %add189, %shr194, !dbg !9328
  %add196 = add i64 0, %and195, !dbg !9328
  %and197 = and i64 %conv185, %add196, !dbg !9328
  %conv198 = trunc i64 %and197 to i32, !dbg !9328
  store i32 %conv198, i32* %_val183, align 4, !dbg !9328
  %98 = load i32, i32* %_var179, align 4, !dbg !9328
  %conv200 = zext i32 %98 to i64, !dbg !9328
  %99 = load i32, i32* %_pos181, align 4, !dbg !9328
  %sh_prom201 = zext i32 %99 to i64, !dbg !9328
  %shl202 = shl i64 1, %sh_prom201, !dbg !9328
  %sub203 = sub i64 -1, %shl202, !dbg !9328
  %add204 = add i64 %sub203, 1, !dbg !9328
  %100 = load i32, i32* %_pos181, align 4, !dbg !9328
  %101 = load i32, i32* %_len182, align 4, !dbg !9328
  %add205 = add i32 %100, %101, !dbg !9328
  %sub206 = sub i32 %add205, 1, !dbg !9328
  %sub207 = sub i32 63, %sub206, !dbg !9328
  %sh_prom208 = zext i32 %sub207 to i64, !dbg !9328
  %shr209 = lshr i64 -1, %sh_prom208, !dbg !9328
  %and210 = and i64 %add204, %shr209, !dbg !9328
  %add211 = add i64 0, %and210, !dbg !9328
  %neg212 = xor i64 %add211, -1, !dbg !9328
  %and213 = and i64 %conv200, %neg212, !dbg !9328
  %102 = load i32, i32* %_val183, align 4, !dbg !9328
  %conv214 = sext i32 %102 to i64, !dbg !9328
  %or215 = or i64 %and213, %conv214, !dbg !9328
  %conv216 = trunc i64 %or215 to i32, !dbg !9328
  store i32 %conv216, i32* %_var179, align 4, !dbg !9328
  store i32 %conv216, i32* %tmp199, align 4, !dbg !9328
  %103 = load i32, i32* %tmp199, align 4, !dbg !9328
  %104 = load %struct.xlgmac_pkt_info*, %struct.xlgmac_pkt_info** %pkt_info, align 8, !dbg !9332
  %attributes217 = getelementptr inbounds %struct.xlgmac_pkt_info, %struct.xlgmac_pkt_info* %104, i32 0, i32 1, !dbg !9333
  store i32 %103, i32* %attributes217, align 8, !dbg !9334
  br label %if.end218, !dbg !9332

if.end218:                                        ; preds = %if.then178, %if.end117
  call void @llvm.dbg.declare(metadata i32* %_pos219, metadata !9335, metadata !DIExpression()), !dbg !9338
  store i32 29, i32* %_pos219, align 4, !dbg !9338
  call void @llvm.dbg.declare(metadata i32* %_len220, metadata !9339, metadata !DIExpression()), !dbg !9338
  store i32 1, i32* %_len220, align 4, !dbg !9338
  call void @llvm.dbg.declare(metadata i32* %_var221, metadata !9340, metadata !DIExpression()), !dbg !9338
  %105 = load %struct.xlgmac_dma_desc*, %struct.xlgmac_dma_desc** %dma_desc, align 8, !dbg !9338
  %desc3222 = getelementptr inbounds %struct.xlgmac_dma_desc, %struct.xlgmac_dma_desc* %105, i32 0, i32 3, !dbg !9338
  %106 = load i32, i32* %desc3222, align 4, !dbg !9338
  store i32 %106, i32* %_var221, align 4, !dbg !9338
  %107 = load i32, i32* %_var221, align 4, !dbg !9338
  %conv224 = zext i32 %107 to i64, !dbg !9338
  %108 = load i32, i32* %_pos219, align 4, !dbg !9338
  %sh_prom225 = zext i32 %108 to i64, !dbg !9338
  %shl226 = shl i64 1, %sh_prom225, !dbg !9338
  %sub227 = sub i64 -1, %shl226, !dbg !9338
  %add228 = add i64 %sub227, 1, !dbg !9338
  %109 = load i32, i32* %_pos219, align 4, !dbg !9338
  %110 = load i32, i32* %_len220, align 4, !dbg !9338
  %add229 = add i32 %109, %110, !dbg !9338
  %sub230 = sub i32 %add229, 1, !dbg !9338
  %sub231 = sub i32 63, %sub230, !dbg !9338
  %sh_prom232 = zext i32 %sub231 to i64, !dbg !9338
  %shr233 = lshr i64 -1, %sh_prom232, !dbg !9338
  %and234 = and i64 %add228, %shr233, !dbg !9338
  %add235 = add i64 0, %and234, !dbg !9338
  %and236 = and i64 %conv224, %add235, !dbg !9338
  %111 = load i32, i32* %_pos219, align 4, !dbg !9338
  %sh_prom237 = zext i32 %111 to i64, !dbg !9338
  %shr238 = lshr i64 %and236, %sh_prom237, !dbg !9338
  store i64 %shr238, i64* %tmp223, align 8, !dbg !9338
  %112 = load i64, i64* %tmp223, align 8, !dbg !9338
  %tobool239 = icmp ne i64 %112, 0, !dbg !9341
  br i1 %tobool239, label %if.then240, label %if.end266, !dbg !9342

if.then240:                                       ; preds = %if.end218
  call void @llvm.dbg.declare(metadata i32* %_pos241, metadata !9343, metadata !DIExpression()), !dbg !9346
  store i32 0, i32* %_pos241, align 4, !dbg !9346
  call void @llvm.dbg.declare(metadata i32* %_len242, metadata !9347, metadata !DIExpression()), !dbg !9346
  store i32 10, i32* %_len242, align 4, !dbg !9346
  call void @llvm.dbg.declare(metadata i32* %_var243, metadata !9348, metadata !DIExpression()), !dbg !9346
  %113 = load %struct.xlgmac_dma_desc*, %struct.xlgmac_dma_desc** %dma_desc, align 8, !dbg !9346
  %desc2 = getelementptr inbounds %struct.xlgmac_dma_desc, %struct.xlgmac_dma_desc* %113, i32 0, i32 2, !dbg !9346
  %114 = load i32, i32* %desc2, align 4, !dbg !9346
  store i32 %114, i32* %_var243, align 4, !dbg !9346
  %115 = load i32, i32* %_var243, align 4, !dbg !9346
  %conv245 = zext i32 %115 to i64, !dbg !9346
  %116 = load i32, i32* %_pos241, align 4, !dbg !9346
  %sh_prom246 = zext i32 %116 to i64, !dbg !9346
  %shl247 = shl i64 1, %sh_prom246, !dbg !9346
  %sub248 = sub i64 -1, %shl247, !dbg !9346
  %add249 = add i64 %sub248, 1, !dbg !9346
  %117 = load i32, i32* %_pos241, align 4, !dbg !9346
  %118 = load i32, i32* %_len242, align 4, !dbg !9346
  %add250 = add i32 %117, %118, !dbg !9346
  %sub251 = sub i32 %add250, 1, !dbg !9346
  %sub252 = sub i32 63, %sub251, !dbg !9346
  %sh_prom253 = zext i32 %sub252 to i64, !dbg !9346
  %shr254 = lshr i64 -1, %sh_prom253, !dbg !9346
  %and255 = and i64 %add249, %shr254, !dbg !9346
  %add256 = add i64 0, %and255, !dbg !9346
  %and257 = and i64 %conv245, %add256, !dbg !9346
  %119 = load i32, i32* %_pos241, align 4, !dbg !9346
  %sh_prom258 = zext i32 %119 to i64, !dbg !9346
  %shr259 = lshr i64 %and257, %sh_prom258, !dbg !9346
  store i64 %shr259, i64* %tmp244, align 8, !dbg !9346
  %120 = load i64, i64* %tmp244, align 8, !dbg !9346
  %conv260 = trunc i64 %120 to i16, !dbg !9349
  %121 = load %struct.xlgmac_desc_data*, %struct.xlgmac_desc_data** %desc_data, align 8, !dbg !9350
  %rx = getelementptr inbounds %struct.xlgmac_desc_data, %struct.xlgmac_desc_data* %121, i32 0, i32 6, !dbg !9351
  %hdr_len = getelementptr inbounds %struct.xlgmac_rx_desc_data, %struct.xlgmac_rx_desc_data* %rx, i32 0, i32 2, !dbg !9352
  store i16 %conv260, i16* %hdr_len, align 8, !dbg !9353
  %122 = load %struct.xlgmac_desc_data*, %struct.xlgmac_desc_data** %desc_data, align 8, !dbg !9354
  %rx261 = getelementptr inbounds %struct.xlgmac_desc_data, %struct.xlgmac_desc_data* %122, i32 0, i32 6, !dbg !9356
  %hdr_len262 = getelementptr inbounds %struct.xlgmac_rx_desc_data, %struct.xlgmac_rx_desc_data* %rx261, i32 0, i32 2, !dbg !9357
  %123 = load i16, i16* %hdr_len262, align 8, !dbg !9357
  %tobool263 = icmp ne i16 %123, 0, !dbg !9354
  br i1 %tobool263, label %if.then264, label %if.end265, !dbg !9358

if.then264:                                       ; preds = %if.then240
  %124 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata, align 8, !dbg !9359
  %stats = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %124, i32 0, i32 4, !dbg !9360
  %rx_split_header_packets = getelementptr inbounds %struct.xlgmac_stats, %struct.xlgmac_stats* %stats, i32 0, i32 42, !dbg !9361
  %125 = load i64, i64* %rx_split_header_packets, align 8, !dbg !9362
  %inc = add i64 %125, 1, !dbg !9362
  store i64 %inc, i64* %rx_split_header_packets, align 8, !dbg !9362
  br label %if.end265, !dbg !9359

if.end265:                                        ; preds = %if.then264, %if.then240
  br label %if.end266, !dbg !9363

if.end266:                                        ; preds = %if.end265, %if.end218
  call void @llvm.dbg.declare(metadata i32* %_pos267, metadata !9364, metadata !DIExpression()), !dbg !9367
  store i32 26, i32* %_pos267, align 4, !dbg !9367
  call void @llvm.dbg.declare(metadata i32* %_len268, metadata !9368, metadata !DIExpression()), !dbg !9367
  store i32 1, i32* %_len268, align 4, !dbg !9367
  call void @llvm.dbg.declare(metadata i32* %_var269, metadata !9369, metadata !DIExpression()), !dbg !9367
  %126 = load %struct.xlgmac_dma_desc*, %struct.xlgmac_dma_desc** %dma_desc, align 8, !dbg !9367
  %desc3270 = getelementptr inbounds %struct.xlgmac_dma_desc, %struct.xlgmac_dma_desc* %126, i32 0, i32 3, !dbg !9367
  %127 = load i32, i32* %desc3270, align 4, !dbg !9367
  store i32 %127, i32* %_var269, align 4, !dbg !9367
  %128 = load i32, i32* %_var269, align 4, !dbg !9367
  %conv272 = zext i32 %128 to i64, !dbg !9367
  %129 = load i32, i32* %_pos267, align 4, !dbg !9367
  %sh_prom273 = zext i32 %129 to i64, !dbg !9367
  %shl274 = shl i64 1, %sh_prom273, !dbg !9367
  %sub275 = sub i64 -1, %shl274, !dbg !9367
  %add276 = add i64 %sub275, 1, !dbg !9367
  %130 = load i32, i32* %_pos267, align 4, !dbg !9367
  %131 = load i32, i32* %_len268, align 4, !dbg !9367
  %add277 = add i32 %130, %131, !dbg !9367
  %sub278 = sub i32 %add277, 1, !dbg !9367
  %sub279 = sub i32 63, %sub278, !dbg !9367
  %sh_prom280 = zext i32 %sub279 to i64, !dbg !9367
  %shr281 = lshr i64 -1, %sh_prom280, !dbg !9367
  %and282 = and i64 %add276, %shr281, !dbg !9367
  %add283 = add i64 0, %and282, !dbg !9367
  %and284 = and i64 %conv272, %add283, !dbg !9367
  %132 = load i32, i32* %_pos267, align 4, !dbg !9367
  %sh_prom285 = zext i32 %132 to i64, !dbg !9367
  %shr286 = lshr i64 %and284, %sh_prom285, !dbg !9367
  store i64 %shr286, i64* %tmp271, align 8, !dbg !9367
  %133 = load i64, i64* %tmp271, align 8, !dbg !9367
  %tobool287 = icmp ne i64 %133, 0, !dbg !9370
  br i1 %tobool287, label %if.then288, label %if.end350, !dbg !9371

if.then288:                                       ; preds = %if.end266
  call void @llvm.dbg.declare(metadata i32* %_var289, metadata !9372, metadata !DIExpression()), !dbg !9375
  %134 = load %struct.xlgmac_pkt_info*, %struct.xlgmac_pkt_info** %pkt_info, align 8, !dbg !9375
  %attributes290 = getelementptr inbounds %struct.xlgmac_pkt_info, %struct.xlgmac_pkt_info* %134, i32 0, i32 1, !dbg !9375
  %135 = load i32, i32* %attributes290, align 8, !dbg !9375
  store i32 %135, i32* %_var289, align 4, !dbg !9375
  call void @llvm.dbg.declare(metadata i32* %_pos291, metadata !9376, metadata !DIExpression()), !dbg !9375
  store i32 6, i32* %_pos291, align 4, !dbg !9375
  call void @llvm.dbg.declare(metadata i32* %_len292, metadata !9377, metadata !DIExpression()), !dbg !9375
  store i32 1, i32* %_len292, align 4, !dbg !9375
  call void @llvm.dbg.declare(metadata i32* %_val293, metadata !9378, metadata !DIExpression()), !dbg !9375
  store i32 1, i32* %_val293, align 4, !dbg !9375
  %136 = load i32, i32* %_val293, align 4, !dbg !9375
  %137 = load i32, i32* %_pos291, align 4, !dbg !9375
  %shl294 = shl i32 %136, %137, !dbg !9375
  %conv295 = sext i32 %shl294 to i64, !dbg !9375
  %138 = load i32, i32* %_pos291, align 4, !dbg !9375
  %sh_prom296 = zext i32 %138 to i64, !dbg !9375
  %shl297 = shl i64 1, %sh_prom296, !dbg !9375
  %sub298 = sub i64 -1, %shl297, !dbg !9375
  %add299 = add i64 %sub298, 1, !dbg !9375
  %139 = load i32, i32* %_pos291, align 4, !dbg !9375
  %140 = load i32, i32* %_len292, align 4, !dbg !9375
  %add300 = add i32 %139, %140, !dbg !9375
  %sub301 = sub i32 %add300, 1, !dbg !9375
  %sub302 = sub i32 63, %sub301, !dbg !9375
  %sh_prom303 = zext i32 %sub302 to i64, !dbg !9375
  %shr304 = lshr i64 -1, %sh_prom303, !dbg !9375
  %and305 = and i64 %add299, %shr304, !dbg !9375
  %add306 = add i64 0, %and305, !dbg !9375
  %and307 = and i64 %conv295, %add306, !dbg !9375
  %conv308 = trunc i64 %and307 to i32, !dbg !9375
  store i32 %conv308, i32* %_val293, align 4, !dbg !9375
  %141 = load i32, i32* %_var289, align 4, !dbg !9375
  %conv310 = zext i32 %141 to i64, !dbg !9375
  %142 = load i32, i32* %_pos291, align 4, !dbg !9375
  %sh_prom311 = zext i32 %142 to i64, !dbg !9375
  %shl312 = shl i64 1, %sh_prom311, !dbg !9375
  %sub313 = sub i64 -1, %shl312, !dbg !9375
  %add314 = add i64 %sub313, 1, !dbg !9375
  %143 = load i32, i32* %_pos291, align 4, !dbg !9375
  %144 = load i32, i32* %_len292, align 4, !dbg !9375
  %add315 = add i32 %143, %144, !dbg !9375
  %sub316 = sub i32 %add315, 1, !dbg !9375
  %sub317 = sub i32 63, %sub316, !dbg !9375
  %sh_prom318 = zext i32 %sub317 to i64, !dbg !9375
  %shr319 = lshr i64 -1, %sh_prom318, !dbg !9375
  %and320 = and i64 %add314, %shr319, !dbg !9375
  %add321 = add i64 0, %and320, !dbg !9375
  %neg322 = xor i64 %add321, -1, !dbg !9375
  %and323 = and i64 %conv310, %neg322, !dbg !9375
  %145 = load i32, i32* %_val293, align 4, !dbg !9375
  %conv324 = sext i32 %145 to i64, !dbg !9375
  %or325 = or i64 %and323, %conv324, !dbg !9375
  %conv326 = trunc i64 %or325 to i32, !dbg !9375
  store i32 %conv326, i32* %_var289, align 4, !dbg !9375
  store i32 %conv326, i32* %tmp309, align 4, !dbg !9375
  %146 = load i32, i32* %tmp309, align 4, !dbg !9375
  %147 = load %struct.xlgmac_pkt_info*, %struct.xlgmac_pkt_info** %pkt_info, align 8, !dbg !9379
  %attributes327 = getelementptr inbounds %struct.xlgmac_pkt_info, %struct.xlgmac_pkt_info* %147, i32 0, i32 1, !dbg !9380
  store i32 %146, i32* %attributes327, align 8, !dbg !9381
  %148 = load %struct.xlgmac_dma_desc*, %struct.xlgmac_dma_desc** %dma_desc, align 8, !dbg !9382
  %desc1 = getelementptr inbounds %struct.xlgmac_dma_desc, %struct.xlgmac_dma_desc* %148, i32 0, i32 1, !dbg !9382
  %149 = load i32, i32* %desc1, align 4, !dbg !9382
  %150 = load %struct.xlgmac_pkt_info*, %struct.xlgmac_pkt_info** %pkt_info, align 8, !dbg !9383
  %rss_hash = getelementptr inbounds %struct.xlgmac_pkt_info, %struct.xlgmac_pkt_info* %150, i32 0, i32 13, !dbg !9384
  store i32 %149, i32* %rss_hash, align 8, !dbg !9385
  call void @llvm.dbg.declare(metadata i32* %_pos328, metadata !9386, metadata !DIExpression()), !dbg !9388
  store i32 20, i32* %_pos328, align 4, !dbg !9388
  call void @llvm.dbg.declare(metadata i32* %_len329, metadata !9389, metadata !DIExpression()), !dbg !9388
  store i32 4, i32* %_len329, align 4, !dbg !9388
  call void @llvm.dbg.declare(metadata i32* %_var330, metadata !9390, metadata !DIExpression()), !dbg !9388
  %151 = load %struct.xlgmac_dma_desc*, %struct.xlgmac_dma_desc** %dma_desc, align 8, !dbg !9388
  %desc3331 = getelementptr inbounds %struct.xlgmac_dma_desc, %struct.xlgmac_dma_desc* %151, i32 0, i32 3, !dbg !9388
  %152 = load i32, i32* %desc3331, align 4, !dbg !9388
  store i32 %152, i32* %_var330, align 4, !dbg !9388
  %153 = load i32, i32* %_var330, align 4, !dbg !9388
  %conv333 = zext i32 %153 to i64, !dbg !9388
  %154 = load i32, i32* %_pos328, align 4, !dbg !9388
  %sh_prom334 = zext i32 %154 to i64, !dbg !9388
  %shl335 = shl i64 1, %sh_prom334, !dbg !9388
  %sub336 = sub i64 -1, %shl335, !dbg !9388
  %add337 = add i64 %sub336, 1, !dbg !9388
  %155 = load i32, i32* %_pos328, align 4, !dbg !9388
  %156 = load i32, i32* %_len329, align 4, !dbg !9388
  %add338 = add i32 %155, %156, !dbg !9388
  %sub339 = sub i32 %add338, 1, !dbg !9388
  %sub340 = sub i32 63, %sub339, !dbg !9388
  %sh_prom341 = zext i32 %sub340 to i64, !dbg !9388
  %shr342 = lshr i64 -1, %sh_prom341, !dbg !9388
  %and343 = and i64 %add337, %shr342, !dbg !9388
  %add344 = add i64 0, %and343, !dbg !9388
  %and345 = and i64 %conv333, %add344, !dbg !9388
  %157 = load i32, i32* %_pos328, align 4, !dbg !9388
  %sh_prom346 = zext i32 %157 to i64, !dbg !9388
  %shr347 = lshr i64 %and345, %sh_prom346, !dbg !9388
  store i64 %shr347, i64* %tmp332, align 8, !dbg !9388
  %158 = load i64, i64* %tmp332, align 8, !dbg !9388
  %conv348 = trunc i64 %158 to i32, !dbg !9391
  store i32 %conv348, i32* %l34t, align 4, !dbg !9392
  %159 = load i32, i32* %l34t, align 4, !dbg !9393
  switch i32 %159, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb
    i32 9, label %sw.bb
    i32 10, label %sw.bb
  ], !dbg !9394

sw.bb:                                            ; preds = %if.then288, %if.then288, %if.then288, %if.then288
  %160 = load %struct.xlgmac_pkt_info*, %struct.xlgmac_pkt_info** %pkt_info, align 8, !dbg !9395
  %rss_hash_type = getelementptr inbounds %struct.xlgmac_pkt_info, %struct.xlgmac_pkt_info* %160, i32 0, i32 14, !dbg !9397
  store i32 3, i32* %rss_hash_type, align 4, !dbg !9398
  br label %sw.epilog, !dbg !9399

sw.default:                                       ; preds = %if.then288
  %161 = load %struct.xlgmac_pkt_info*, %struct.xlgmac_pkt_info** %pkt_info, align 8, !dbg !9400
  %rss_hash_type349 = getelementptr inbounds %struct.xlgmac_pkt_info, %struct.xlgmac_pkt_info* %161, i32 0, i32 14, !dbg !9401
  store i32 2, i32* %rss_hash_type349, align 4, !dbg !9402
  br label %sw.epilog, !dbg !9403

sw.epilog:                                        ; preds = %sw.default, %sw.bb
  br label %if.end350, !dbg !9404

if.end350:                                        ; preds = %sw.epilog, %if.end266
  call void @llvm.dbg.declare(metadata i32* %_pos351, metadata !9405, metadata !DIExpression()), !dbg !9407
  store i32 0, i32* %_pos351, align 4, !dbg !9407
  call void @llvm.dbg.declare(metadata i32* %_len352, metadata !9408, metadata !DIExpression()), !dbg !9407
  store i32 14, i32* %_len352, align 4, !dbg !9407
  call void @llvm.dbg.declare(metadata i32* %_var353, metadata !9409, metadata !DIExpression()), !dbg !9407
  %162 = load %struct.xlgmac_dma_desc*, %struct.xlgmac_dma_desc** %dma_desc, align 8, !dbg !9407
  %desc3354 = getelementptr inbounds %struct.xlgmac_dma_desc, %struct.xlgmac_dma_desc* %162, i32 0, i32 3, !dbg !9407
  %163 = load i32, i32* %desc3354, align 4, !dbg !9407
  store i32 %163, i32* %_var353, align 4, !dbg !9407
  %164 = load i32, i32* %_var353, align 4, !dbg !9407
  %conv356 = zext i32 %164 to i64, !dbg !9407
  %165 = load i32, i32* %_pos351, align 4, !dbg !9407
  %sh_prom357 = zext i32 %165 to i64, !dbg !9407
  %shl358 = shl i64 1, %sh_prom357, !dbg !9407
  %sub359 = sub i64 -1, %shl358, !dbg !9407
  %add360 = add i64 %sub359, 1, !dbg !9407
  %166 = load i32, i32* %_pos351, align 4, !dbg !9407
  %167 = load i32, i32* %_len352, align 4, !dbg !9407
  %add361 = add i32 %166, %167, !dbg !9407
  %sub362 = sub i32 %add361, 1, !dbg !9407
  %sub363 = sub i32 63, %sub362, !dbg !9407
  %sh_prom364 = zext i32 %sub363 to i64, !dbg !9407
  %shr365 = lshr i64 -1, %sh_prom364, !dbg !9407
  %and366 = and i64 %add360, %shr365, !dbg !9407
  %add367 = add i64 0, %and366, !dbg !9407
  %and368 = and i64 %conv356, %add367, !dbg !9407
  %168 = load i32, i32* %_pos351, align 4, !dbg !9407
  %sh_prom369 = zext i32 %168 to i64, !dbg !9407
  %shr370 = lshr i64 %and368, %sh_prom369, !dbg !9407
  store i64 %shr370, i64* %tmp355, align 8, !dbg !9407
  %169 = load i64, i64* %tmp355, align 8, !dbg !9407
  %conv371 = trunc i64 %169 to i16, !dbg !9410
  %170 = load %struct.xlgmac_desc_data*, %struct.xlgmac_desc_data** %desc_data, align 8, !dbg !9411
  %rx372 = getelementptr inbounds %struct.xlgmac_desc_data, %struct.xlgmac_desc_data* %170, i32 0, i32 6, !dbg !9412
  %len = getelementptr inbounds %struct.xlgmac_rx_desc_data, %struct.xlgmac_rx_desc_data* %rx372, i32 0, i32 3, !dbg !9413
  store i16 %conv371, i16* %len, align 2, !dbg !9414
  call void @llvm.dbg.declare(metadata i32* %_pos373, metadata !9415, metadata !DIExpression()), !dbg !9418
  store i32 28, i32* %_pos373, align 4, !dbg !9418
  call void @llvm.dbg.declare(metadata i32* %_len374, metadata !9419, metadata !DIExpression()), !dbg !9418
  store i32 1, i32* %_len374, align 4, !dbg !9418
  call void @llvm.dbg.declare(metadata i32* %_var375, metadata !9420, metadata !DIExpression()), !dbg !9418
  %171 = load %struct.xlgmac_dma_desc*, %struct.xlgmac_dma_desc** %dma_desc, align 8, !dbg !9418
  %desc3376 = getelementptr inbounds %struct.xlgmac_dma_desc, %struct.xlgmac_dma_desc* %171, i32 0, i32 3, !dbg !9418
  %172 = load i32, i32* %desc3376, align 4, !dbg !9418
  store i32 %172, i32* %_var375, align 4, !dbg !9418
  %173 = load i32, i32* %_var375, align 4, !dbg !9418
  %conv378 = zext i32 %173 to i64, !dbg !9418
  %174 = load i32, i32* %_pos373, align 4, !dbg !9418
  %sh_prom379 = zext i32 %174 to i64, !dbg !9418
  %shl380 = shl i64 1, %sh_prom379, !dbg !9418
  %sub381 = sub i64 -1, %shl380, !dbg !9418
  %add382 = add i64 %sub381, 1, !dbg !9418
  %175 = load i32, i32* %_pos373, align 4, !dbg !9418
  %176 = load i32, i32* %_len374, align 4, !dbg !9418
  %add383 = add i32 %175, %176, !dbg !9418
  %sub384 = sub i32 %add383, 1, !dbg !9418
  %sub385 = sub i32 63, %sub384, !dbg !9418
  %sh_prom386 = zext i32 %sub385 to i64, !dbg !9418
  %shr387 = lshr i64 -1, %sh_prom386, !dbg !9418
  %and388 = and i64 %add382, %shr387, !dbg !9418
  %add389 = add i64 0, %and388, !dbg !9418
  %and390 = and i64 %conv378, %add389, !dbg !9418
  %177 = load i32, i32* %_pos373, align 4, !dbg !9418
  %sh_prom391 = zext i32 %177 to i64, !dbg !9418
  %shr392 = lshr i64 %and390, %sh_prom391, !dbg !9418
  store i64 %shr392, i64* %tmp377, align 8, !dbg !9418
  %178 = load i64, i64* %tmp377, align 8, !dbg !9418
  %tobool393 = icmp ne i64 %178, 0, !dbg !9421
  br i1 %tobool393, label %if.end434, label %if.then394, !dbg !9422

if.then394:                                       ; preds = %if.end350
  call void @llvm.dbg.declare(metadata i32* %_var395, metadata !9423, metadata !DIExpression()), !dbg !9426
  %179 = load %struct.xlgmac_pkt_info*, %struct.xlgmac_pkt_info** %pkt_info, align 8, !dbg !9426
  %attributes396 = getelementptr inbounds %struct.xlgmac_pkt_info, %struct.xlgmac_pkt_info* %179, i32 0, i32 1, !dbg !9426
  %180 = load i32, i32* %attributes396, align 8, !dbg !9426
  store i32 %180, i32* %_var395, align 4, !dbg !9426
  call void @llvm.dbg.declare(metadata i32* %_pos397, metadata !9427, metadata !DIExpression()), !dbg !9426
  store i32 2, i32* %_pos397, align 4, !dbg !9426
  call void @llvm.dbg.declare(metadata i32* %_len398, metadata !9428, metadata !DIExpression()), !dbg !9426
  store i32 1, i32* %_len398, align 4, !dbg !9426
  call void @llvm.dbg.declare(metadata i32* %_val399, metadata !9429, metadata !DIExpression()), !dbg !9426
  store i32 1, i32* %_val399, align 4, !dbg !9426
  %181 = load i32, i32* %_val399, align 4, !dbg !9426
  %182 = load i32, i32* %_pos397, align 4, !dbg !9426
  %shl400 = shl i32 %181, %182, !dbg !9426
  %conv401 = sext i32 %shl400 to i64, !dbg !9426
  %183 = load i32, i32* %_pos397, align 4, !dbg !9426
  %sh_prom402 = zext i32 %183 to i64, !dbg !9426
  %shl403 = shl i64 1, %sh_prom402, !dbg !9426
  %sub404 = sub i64 -1, %shl403, !dbg !9426
  %add405 = add i64 %sub404, 1, !dbg !9426
  %184 = load i32, i32* %_pos397, align 4, !dbg !9426
  %185 = load i32, i32* %_len398, align 4, !dbg !9426
  %add406 = add i32 %184, %185, !dbg !9426
  %sub407 = sub i32 %add406, 1, !dbg !9426
  %sub408 = sub i32 63, %sub407, !dbg !9426
  %sh_prom409 = zext i32 %sub408 to i64, !dbg !9426
  %shr410 = lshr i64 -1, %sh_prom409, !dbg !9426
  %and411 = and i64 %add405, %shr410, !dbg !9426
  %add412 = add i64 0, %and411, !dbg !9426
  %and413 = and i64 %conv401, %add412, !dbg !9426
  %conv414 = trunc i64 %and413 to i32, !dbg !9426
  store i32 %conv414, i32* %_val399, align 4, !dbg !9426
  %186 = load i32, i32* %_var395, align 4, !dbg !9426
  %conv416 = zext i32 %186 to i64, !dbg !9426
  %187 = load i32, i32* %_pos397, align 4, !dbg !9426
  %sh_prom417 = zext i32 %187 to i64, !dbg !9426
  %shl418 = shl i64 1, %sh_prom417, !dbg !9426
  %sub419 = sub i64 -1, %shl418, !dbg !9426
  %add420 = add i64 %sub419, 1, !dbg !9426
  %188 = load i32, i32* %_pos397, align 4, !dbg !9426
  %189 = load i32, i32* %_len398, align 4, !dbg !9426
  %add421 = add i32 %188, %189, !dbg !9426
  %sub422 = sub i32 %add421, 1, !dbg !9426
  %sub423 = sub i32 63, %sub422, !dbg !9426
  %sh_prom424 = zext i32 %sub423 to i64, !dbg !9426
  %shr425 = lshr i64 -1, %sh_prom424, !dbg !9426
  %and426 = and i64 %add420, %shr425, !dbg !9426
  %add427 = add i64 0, %and426, !dbg !9426
  %neg428 = xor i64 %add427, -1, !dbg !9426
  %and429 = and i64 %conv416, %neg428, !dbg !9426
  %190 = load i32, i32* %_val399, align 4, !dbg !9426
  %conv430 = sext i32 %190 to i64, !dbg !9426
  %or431 = or i64 %and429, %conv430, !dbg !9426
  %conv432 = trunc i64 %or431 to i32, !dbg !9426
  store i32 %conv432, i32* %_var395, align 4, !dbg !9426
  store i32 %conv432, i32* %tmp415, align 4, !dbg !9426
  %191 = load i32, i32* %tmp415, align 4, !dbg !9426
  %192 = load %struct.xlgmac_pkt_info*, %struct.xlgmac_pkt_info** %pkt_info, align 8, !dbg !9430
  %attributes433 = getelementptr inbounds %struct.xlgmac_pkt_info, %struct.xlgmac_pkt_info* %192, i32 0, i32 1, !dbg !9431
  store i32 %191, i32* %attributes433, align 8, !dbg !9432
  store i32 0, i32* %retval, align 4, !dbg !9433
  br label %return, !dbg !9433

if.end434:                                        ; preds = %if.end350
  call void @llvm.dbg.declare(metadata i32* %_var435, metadata !9434, metadata !DIExpression()), !dbg !9436
  %193 = load %struct.xlgmac_pkt_info*, %struct.xlgmac_pkt_info** %pkt_info, align 8, !dbg !9436
  %attributes436 = getelementptr inbounds %struct.xlgmac_pkt_info, %struct.xlgmac_pkt_info* %193, i32 0, i32 1, !dbg !9436
  %194 = load i32, i32* %attributes436, align 8, !dbg !9436
  store i32 %194, i32* %_var435, align 4, !dbg !9436
  call void @llvm.dbg.declare(metadata i32* %_pos437, metadata !9437, metadata !DIExpression()), !dbg !9436
  store i32 2, i32* %_pos437, align 4, !dbg !9436
  call void @llvm.dbg.declare(metadata i32* %_len438, metadata !9438, metadata !DIExpression()), !dbg !9436
  store i32 1, i32* %_len438, align 4, !dbg !9436
  call void @llvm.dbg.declare(metadata i32* %_val439, metadata !9439, metadata !DIExpression()), !dbg !9436
  store i32 0, i32* %_val439, align 4, !dbg !9436
  %195 = load i32, i32* %_val439, align 4, !dbg !9436
  %196 = load i32, i32* %_pos437, align 4, !dbg !9436
  %shl440 = shl i32 %195, %196, !dbg !9436
  %conv441 = sext i32 %shl440 to i64, !dbg !9436
  %197 = load i32, i32* %_pos437, align 4, !dbg !9436
  %sh_prom442 = zext i32 %197 to i64, !dbg !9436
  %shl443 = shl i64 1, %sh_prom442, !dbg !9436
  %sub444 = sub i64 -1, %shl443, !dbg !9436
  %add445 = add i64 %sub444, 1, !dbg !9436
  %198 = load i32, i32* %_pos437, align 4, !dbg !9436
  %199 = load i32, i32* %_len438, align 4, !dbg !9436
  %add446 = add i32 %198, %199, !dbg !9436
  %sub447 = sub i32 %add446, 1, !dbg !9436
  %sub448 = sub i32 63, %sub447, !dbg !9436
  %sh_prom449 = zext i32 %sub448 to i64, !dbg !9436
  %shr450 = lshr i64 -1, %sh_prom449, !dbg !9436
  %and451 = and i64 %add445, %shr450, !dbg !9436
  %add452 = add i64 0, %and451, !dbg !9436
  %and453 = and i64 %conv441, %add452, !dbg !9436
  %conv454 = trunc i64 %and453 to i32, !dbg !9436
  store i32 %conv454, i32* %_val439, align 4, !dbg !9436
  %200 = load i32, i32* %_var435, align 4, !dbg !9436
  %conv456 = zext i32 %200 to i64, !dbg !9436
  %201 = load i32, i32* %_pos437, align 4, !dbg !9436
  %sh_prom457 = zext i32 %201 to i64, !dbg !9436
  %shl458 = shl i64 1, %sh_prom457, !dbg !9436
  %sub459 = sub i64 -1, %shl458, !dbg !9436
  %add460 = add i64 %sub459, 1, !dbg !9436
  %202 = load i32, i32* %_pos437, align 4, !dbg !9436
  %203 = load i32, i32* %_len438, align 4, !dbg !9436
  %add461 = add i32 %202, %203, !dbg !9436
  %sub462 = sub i32 %add461, 1, !dbg !9436
  %sub463 = sub i32 63, %sub462, !dbg !9436
  %sh_prom464 = zext i32 %sub463 to i64, !dbg !9436
  %shr465 = lshr i64 -1, %sh_prom464, !dbg !9436
  %and466 = and i64 %add460, %shr465, !dbg !9436
  %add467 = add i64 0, %and466, !dbg !9436
  %neg468 = xor i64 %add467, -1, !dbg !9436
  %and469 = and i64 %conv456, %neg468, !dbg !9436
  %204 = load i32, i32* %_val439, align 4, !dbg !9436
  %conv470 = sext i32 %204 to i64, !dbg !9436
  %or471 = or i64 %and469, %conv470, !dbg !9436
  %conv472 = trunc i64 %or471 to i32, !dbg !9436
  store i32 %conv472, i32* %_var435, align 4, !dbg !9436
  store i32 %conv472, i32* %tmp455, align 4, !dbg !9436
  %205 = load i32, i32* %tmp455, align 4, !dbg !9436
  %206 = load %struct.xlgmac_pkt_info*, %struct.xlgmac_pkt_info** %pkt_info, align 8, !dbg !9440
  %attributes473 = getelementptr inbounds %struct.xlgmac_pkt_info, %struct.xlgmac_pkt_info* %206, i32 0, i32 1, !dbg !9441
  store i32 %205, i32* %attributes473, align 8, !dbg !9442
  %207 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !9443
  %features = getelementptr inbounds %struct.net_device, %struct.net_device* %207, i32 0, i32 15, !dbg !9445
  %208 = load i64, i64* %features, align 8, !dbg !9445
  %and474 = and i64 %208, 1099511627776, !dbg !9446
  %tobool475 = icmp ne i64 %and474, 0, !dbg !9446
  br i1 %tobool475, label %if.then476, label %if.end516, !dbg !9447

if.then476:                                       ; preds = %if.end434
  call void @llvm.dbg.declare(metadata i32* %_var477, metadata !9448, metadata !DIExpression()), !dbg !9450
  %209 = load %struct.xlgmac_pkt_info*, %struct.xlgmac_pkt_info** %pkt_info, align 8, !dbg !9450
  %attributes478 = getelementptr inbounds %struct.xlgmac_pkt_info, %struct.xlgmac_pkt_info* %209, i32 0, i32 1, !dbg !9450
  %210 = load i32, i32* %attributes478, align 8, !dbg !9450
  store i32 %210, i32* %_var477, align 4, !dbg !9450
  call void @llvm.dbg.declare(metadata i32* %_pos479, metadata !9451, metadata !DIExpression()), !dbg !9450
  store i32 0, i32* %_pos479, align 4, !dbg !9450
  call void @llvm.dbg.declare(metadata i32* %_len480, metadata !9452, metadata !DIExpression()), !dbg !9450
  store i32 1, i32* %_len480, align 4, !dbg !9450
  call void @llvm.dbg.declare(metadata i32* %_val481, metadata !9453, metadata !DIExpression()), !dbg !9450
  store i32 1, i32* %_val481, align 4, !dbg !9450
  %211 = load i32, i32* %_val481, align 4, !dbg !9450
  %212 = load i32, i32* %_pos479, align 4, !dbg !9450
  %shl482 = shl i32 %211, %212, !dbg !9450
  %conv483 = sext i32 %shl482 to i64, !dbg !9450
  %213 = load i32, i32* %_pos479, align 4, !dbg !9450
  %sh_prom484 = zext i32 %213 to i64, !dbg !9450
  %shl485 = shl i64 1, %sh_prom484, !dbg !9450
  %sub486 = sub i64 -1, %shl485, !dbg !9450
  %add487 = add i64 %sub486, 1, !dbg !9450
  %214 = load i32, i32* %_pos479, align 4, !dbg !9450
  %215 = load i32, i32* %_len480, align 4, !dbg !9450
  %add488 = add i32 %214, %215, !dbg !9450
  %sub489 = sub i32 %add488, 1, !dbg !9450
  %sub490 = sub i32 63, %sub489, !dbg !9450
  %sh_prom491 = zext i32 %sub490 to i64, !dbg !9450
  %shr492 = lshr i64 -1, %sh_prom491, !dbg !9450
  %and493 = and i64 %add487, %shr492, !dbg !9450
  %add494 = add i64 0, %and493, !dbg !9450
  %and495 = and i64 %conv483, %add494, !dbg !9450
  %conv496 = trunc i64 %and495 to i32, !dbg !9450
  store i32 %conv496, i32* %_val481, align 4, !dbg !9450
  %216 = load i32, i32* %_var477, align 4, !dbg !9450
  %conv498 = zext i32 %216 to i64, !dbg !9450
  %217 = load i32, i32* %_pos479, align 4, !dbg !9450
  %sh_prom499 = zext i32 %217 to i64, !dbg !9450
  %shl500 = shl i64 1, %sh_prom499, !dbg !9450
  %sub501 = sub i64 -1, %shl500, !dbg !9450
  %add502 = add i64 %sub501, 1, !dbg !9450
  %218 = load i32, i32* %_pos479, align 4, !dbg !9450
  %219 = load i32, i32* %_len480, align 4, !dbg !9450
  %add503 = add i32 %218, %219, !dbg !9450
  %sub504 = sub i32 %add503, 1, !dbg !9450
  %sub505 = sub i32 63, %sub504, !dbg !9450
  %sh_prom506 = zext i32 %sub505 to i64, !dbg !9450
  %shr507 = lshr i64 -1, %sh_prom506, !dbg !9450
  %and508 = and i64 %add502, %shr507, !dbg !9450
  %add509 = add i64 0, %and508, !dbg !9450
  %neg510 = xor i64 %add509, -1, !dbg !9450
  %and511 = and i64 %conv498, %neg510, !dbg !9450
  %220 = load i32, i32* %_val481, align 4, !dbg !9450
  %conv512 = sext i32 %220 to i64, !dbg !9450
  %or513 = or i64 %and511, %conv512, !dbg !9450
  %conv514 = trunc i64 %or513 to i32, !dbg !9450
  store i32 %conv514, i32* %_var477, align 4, !dbg !9450
  store i32 %conv514, i32* %tmp497, align 4, !dbg !9450
  %221 = load i32, i32* %tmp497, align 4, !dbg !9450
  %222 = load %struct.xlgmac_pkt_info*, %struct.xlgmac_pkt_info** %pkt_info, align 8, !dbg !9454
  %attributes515 = getelementptr inbounds %struct.xlgmac_pkt_info, %struct.xlgmac_pkt_info* %222, i32 0, i32 1, !dbg !9455
  store i32 %221, i32* %attributes515, align 8, !dbg !9456
  br label %if.end516, !dbg !9454

if.end516:                                        ; preds = %if.then476, %if.end434
  call void @llvm.dbg.declare(metadata i32* %_pos517, metadata !9457, metadata !DIExpression()), !dbg !9459
  store i32 15, i32* %_pos517, align 4, !dbg !9459
  call void @llvm.dbg.declare(metadata i32* %_len518, metadata !9460, metadata !DIExpression()), !dbg !9459
  store i32 1, i32* %_len518, align 4, !dbg !9459
  call void @llvm.dbg.declare(metadata i32* %_var519, metadata !9461, metadata !DIExpression()), !dbg !9459
  %223 = load %struct.xlgmac_dma_desc*, %struct.xlgmac_dma_desc** %dma_desc, align 8, !dbg !9459
  %desc3520 = getelementptr inbounds %struct.xlgmac_dma_desc, %struct.xlgmac_dma_desc* %223, i32 0, i32 3, !dbg !9459
  %224 = load i32, i32* %desc3520, align 4, !dbg !9459
  store i32 %224, i32* %_var519, align 4, !dbg !9459
  %225 = load i32, i32* %_var519, align 4, !dbg !9459
  %conv522 = zext i32 %225 to i64, !dbg !9459
  %226 = load i32, i32* %_pos517, align 4, !dbg !9459
  %sh_prom523 = zext i32 %226 to i64, !dbg !9459
  %shl524 = shl i64 1, %sh_prom523, !dbg !9459
  %sub525 = sub i64 -1, %shl524, !dbg !9459
  %add526 = add i64 %sub525, 1, !dbg !9459
  %227 = load i32, i32* %_pos517, align 4, !dbg !9459
  %228 = load i32, i32* %_len518, align 4, !dbg !9459
  %add527 = add i32 %227, %228, !dbg !9459
  %sub528 = sub i32 %add527, 1, !dbg !9459
  %sub529 = sub i32 63, %sub528, !dbg !9459
  %sh_prom530 = zext i32 %sub529 to i64, !dbg !9459
  %shr531 = lshr i64 -1, %sh_prom530, !dbg !9459
  %and532 = and i64 %add526, %shr531, !dbg !9459
  %add533 = add i64 0, %and532, !dbg !9459
  %and534 = and i64 %conv522, %add533, !dbg !9459
  %229 = load i32, i32* %_pos517, align 4, !dbg !9459
  %sh_prom535 = zext i32 %229 to i64, !dbg !9459
  %shr536 = lshr i64 %and534, %sh_prom535, !dbg !9459
  store i64 %shr536, i64* %tmp521, align 8, !dbg !9459
  %230 = load i64, i64* %tmp521, align 8, !dbg !9459
  %conv537 = trunc i64 %230 to i32, !dbg !9462
  store i32 %conv537, i32* %err, align 4, !dbg !9463
  call void @llvm.dbg.declare(metadata i32* %_pos538, metadata !9464, metadata !DIExpression()), !dbg !9466
  store i32 16, i32* %_pos538, align 4, !dbg !9466
  call void @llvm.dbg.declare(metadata i32* %_len539, metadata !9467, metadata !DIExpression()), !dbg !9466
  store i32 4, i32* %_len539, align 4, !dbg !9466
  call void @llvm.dbg.declare(metadata i32* %_var540, metadata !9468, metadata !DIExpression()), !dbg !9466
  %231 = load %struct.xlgmac_dma_desc*, %struct.xlgmac_dma_desc** %dma_desc, align 8, !dbg !9466
  %desc3541 = getelementptr inbounds %struct.xlgmac_dma_desc, %struct.xlgmac_dma_desc* %231, i32 0, i32 3, !dbg !9466
  %232 = load i32, i32* %desc3541, align 4, !dbg !9466
  store i32 %232, i32* %_var540, align 4, !dbg !9466
  %233 = load i32, i32* %_var540, align 4, !dbg !9466
  %conv543 = zext i32 %233 to i64, !dbg !9466
  %234 = load i32, i32* %_pos538, align 4, !dbg !9466
  %sh_prom544 = zext i32 %234 to i64, !dbg !9466
  %shl545 = shl i64 1, %sh_prom544, !dbg !9466
  %sub546 = sub i64 -1, %shl545, !dbg !9466
  %add547 = add i64 %sub546, 1, !dbg !9466
  %235 = load i32, i32* %_pos538, align 4, !dbg !9466
  %236 = load i32, i32* %_len539, align 4, !dbg !9466
  %add548 = add i32 %235, %236, !dbg !9466
  %sub549 = sub i32 %add548, 1, !dbg !9466
  %sub550 = sub i32 63, %sub549, !dbg !9466
  %sh_prom551 = zext i32 %sub550 to i64, !dbg !9466
  %shr552 = lshr i64 -1, %sh_prom551, !dbg !9466
  %and553 = and i64 %add547, %shr552, !dbg !9466
  %add554 = add i64 0, %and553, !dbg !9466
  %and555 = and i64 %conv543, %add554, !dbg !9466
  %237 = load i32, i32* %_pos538, align 4, !dbg !9466
  %sh_prom556 = zext i32 %237 to i64, !dbg !9466
  %shr557 = lshr i64 %and555, %sh_prom556, !dbg !9466
  store i64 %shr557, i64* %tmp542, align 8, !dbg !9466
  %238 = load i64, i64* %tmp542, align 8, !dbg !9466
  %conv558 = trunc i64 %238 to i32, !dbg !9469
  store i32 %conv558, i32* %etlt, align 4, !dbg !9470
  store i32 0, i32* %tmp559, align 4, !dbg !9471
  %239 = load i32, i32* %tmp559, align 4, !dbg !9474
  %240 = load i32, i32* %err, align 4, !dbg !9475
  %tobool560 = icmp ne i32 %240, 0, !dbg !9475
  br i1 %tobool560, label %lor.lhs.false, label %if.then562, !dbg !9477

lor.lhs.false:                                    ; preds = %if.end516
  %241 = load i32, i32* %etlt, align 4, !dbg !9478
  %tobool561 = icmp ne i32 %241, 0, !dbg !9478
  br i1 %tobool561, label %if.else, label %if.then562, !dbg !9479

if.then562:                                       ; preds = %lor.lhs.false, %if.end516
  %242 = load i32, i32* %etlt, align 4, !dbg !9480
  %cmp = icmp eq i32 %242, 9, !dbg !9483
  br i1 %cmp, label %land.lhs.true, label %if.end628, !dbg !9484

land.lhs.true:                                    ; preds = %if.then562
  %243 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !9485
  %features564 = getelementptr inbounds %struct.net_device, %struct.net_device* %243, i32 0, i32 15, !dbg !9486
  %244 = load i64, i64* %features564, align 8, !dbg !9486
  %and565 = and i64 %244, 256, !dbg !9487
  %tobool566 = icmp ne i64 %and565, 0, !dbg !9487
  br i1 %tobool566, label %if.then567, label %if.end628, !dbg !9488

if.then567:                                       ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i32* %_var568, metadata !9489, metadata !DIExpression()), !dbg !9492
  %245 = load %struct.xlgmac_pkt_info*, %struct.xlgmac_pkt_info** %pkt_info, align 8, !dbg !9492
  %attributes569 = getelementptr inbounds %struct.xlgmac_pkt_info, %struct.xlgmac_pkt_info* %245, i32 0, i32 1, !dbg !9492
  %246 = load i32, i32* %attributes569, align 8, !dbg !9492
  store i32 %246, i32* %_var568, align 4, !dbg !9492
  call void @llvm.dbg.declare(metadata i32* %_pos570, metadata !9493, metadata !DIExpression()), !dbg !9492
  store i32 1, i32* %_pos570, align 4, !dbg !9492
  call void @llvm.dbg.declare(metadata i32* %_len571, metadata !9494, metadata !DIExpression()), !dbg !9492
  store i32 1, i32* %_len571, align 4, !dbg !9492
  call void @llvm.dbg.declare(metadata i32* %_val572, metadata !9495, metadata !DIExpression()), !dbg !9492
  store i32 1, i32* %_val572, align 4, !dbg !9492
  %247 = load i32, i32* %_val572, align 4, !dbg !9492
  %248 = load i32, i32* %_pos570, align 4, !dbg !9492
  %shl573 = shl i32 %247, %248, !dbg !9492
  %conv574 = sext i32 %shl573 to i64, !dbg !9492
  %249 = load i32, i32* %_pos570, align 4, !dbg !9492
  %sh_prom575 = zext i32 %249 to i64, !dbg !9492
  %shl576 = shl i64 1, %sh_prom575, !dbg !9492
  %sub577 = sub i64 -1, %shl576, !dbg !9492
  %add578 = add i64 %sub577, 1, !dbg !9492
  %250 = load i32, i32* %_pos570, align 4, !dbg !9492
  %251 = load i32, i32* %_len571, align 4, !dbg !9492
  %add579 = add i32 %250, %251, !dbg !9492
  %sub580 = sub i32 %add579, 1, !dbg !9492
  %sub581 = sub i32 63, %sub580, !dbg !9492
  %sh_prom582 = zext i32 %sub581 to i64, !dbg !9492
  %shr583 = lshr i64 -1, %sh_prom582, !dbg !9492
  %and584 = and i64 %add578, %shr583, !dbg !9492
  %add585 = add i64 0, %and584, !dbg !9492
  %and586 = and i64 %conv574, %add585, !dbg !9492
  %conv587 = trunc i64 %and586 to i32, !dbg !9492
  store i32 %conv587, i32* %_val572, align 4, !dbg !9492
  %252 = load i32, i32* %_var568, align 4, !dbg !9492
  %conv589 = zext i32 %252 to i64, !dbg !9492
  %253 = load i32, i32* %_pos570, align 4, !dbg !9492
  %sh_prom590 = zext i32 %253 to i64, !dbg !9492
  %shl591 = shl i64 1, %sh_prom590, !dbg !9492
  %sub592 = sub i64 -1, %shl591, !dbg !9492
  %add593 = add i64 %sub592, 1, !dbg !9492
  %254 = load i32, i32* %_pos570, align 4, !dbg !9492
  %255 = load i32, i32* %_len571, align 4, !dbg !9492
  %add594 = add i32 %254, %255, !dbg !9492
  %sub595 = sub i32 %add594, 1, !dbg !9492
  %sub596 = sub i32 63, %sub595, !dbg !9492
  %sh_prom597 = zext i32 %sub596 to i64, !dbg !9492
  %shr598 = lshr i64 -1, %sh_prom597, !dbg !9492
  %and599 = and i64 %add593, %shr598, !dbg !9492
  %add600 = add i64 0, %and599, !dbg !9492
  %neg601 = xor i64 %add600, -1, !dbg !9492
  %and602 = and i64 %conv589, %neg601, !dbg !9492
  %256 = load i32, i32* %_val572, align 4, !dbg !9492
  %conv603 = sext i32 %256 to i64, !dbg !9492
  %or604 = or i64 %and602, %conv603, !dbg !9492
  %conv605 = trunc i64 %or604 to i32, !dbg !9492
  store i32 %conv605, i32* %_var568, align 4, !dbg !9492
  store i32 %conv605, i32* %tmp588, align 4, !dbg !9492
  %257 = load i32, i32* %tmp588, align 4, !dbg !9492
  %258 = load %struct.xlgmac_pkt_info*, %struct.xlgmac_pkt_info** %pkt_info, align 8, !dbg !9496
  %attributes606 = getelementptr inbounds %struct.xlgmac_pkt_info, %struct.xlgmac_pkt_info* %258, i32 0, i32 1, !dbg !9497
  store i32 %257, i32* %attributes606, align 8, !dbg !9498
  call void @llvm.dbg.declare(metadata i32* %_pos607, metadata !9499, metadata !DIExpression()), !dbg !9501
  store i32 0, i32* %_pos607, align 4, !dbg !9501
  call void @llvm.dbg.declare(metadata i32* %_len608, metadata !9502, metadata !DIExpression()), !dbg !9501
  store i32 16, i32* %_len608, align 4, !dbg !9501
  call void @llvm.dbg.declare(metadata i32* %_var609, metadata !9503, metadata !DIExpression()), !dbg !9501
  %259 = load %struct.xlgmac_dma_desc*, %struct.xlgmac_dma_desc** %dma_desc, align 8, !dbg !9501
  %desc0 = getelementptr inbounds %struct.xlgmac_dma_desc, %struct.xlgmac_dma_desc* %259, i32 0, i32 0, !dbg !9501
  %260 = load i32, i32* %desc0, align 4, !dbg !9501
  store i32 %260, i32* %_var609, align 4, !dbg !9501
  %261 = load i32, i32* %_var609, align 4, !dbg !9501
  %conv611 = zext i32 %261 to i64, !dbg !9501
  %262 = load i32, i32* %_pos607, align 4, !dbg !9501
  %sh_prom612 = zext i32 %262 to i64, !dbg !9501
  %shl613 = shl i64 1, %sh_prom612, !dbg !9501
  %sub614 = sub i64 -1, %shl613, !dbg !9501
  %add615 = add i64 %sub614, 1, !dbg !9501
  %263 = load i32, i32* %_pos607, align 4, !dbg !9501
  %264 = load i32, i32* %_len608, align 4, !dbg !9501
  %add616 = add i32 %263, %264, !dbg !9501
  %sub617 = sub i32 %add616, 1, !dbg !9501
  %sub618 = sub i32 63, %sub617, !dbg !9501
  %sh_prom619 = zext i32 %sub618 to i64, !dbg !9501
  %shr620 = lshr i64 -1, %sh_prom619, !dbg !9501
  %and621 = and i64 %add615, %shr620, !dbg !9501
  %add622 = add i64 0, %and621, !dbg !9501
  %and623 = and i64 %conv611, %add622, !dbg !9501
  %265 = load i32, i32* %_pos607, align 4, !dbg !9501
  %sh_prom624 = zext i32 %265 to i64, !dbg !9501
  %shr625 = lshr i64 %and623, %sh_prom624, !dbg !9501
  store i64 %shr625, i64* %tmp610, align 8, !dbg !9501
  %266 = load i64, i64* %tmp610, align 8, !dbg !9501
  %conv626 = trunc i64 %266 to i16, !dbg !9504
  %267 = load %struct.xlgmac_pkt_info*, %struct.xlgmac_pkt_info** %pkt_info, align 8, !dbg !9505
  %vlan_ctag = getelementptr inbounds %struct.xlgmac_pkt_info, %struct.xlgmac_pkt_info* %267, i32 0, i32 11, !dbg !9506
  store i16 %conv626, i16* %vlan_ctag, align 2, !dbg !9507
  store i32 0, i32* %tmp627, align 4, !dbg !9508
  %268 = load i32, i32* %tmp627, align 4, !dbg !9511
  br label %if.end628, !dbg !9512

if.end628:                                        ; preds = %if.then567, %land.lhs.true, %if.then562
  br label %if.end714, !dbg !9513

if.else:                                          ; preds = %lor.lhs.false
  %269 = load i32, i32* %etlt, align 4, !dbg !9514
  %cmp629 = icmp eq i32 %269, 5, !dbg !9517
  br i1 %cmp629, label %if.then634, label %lor.lhs.false631, !dbg !9518

lor.lhs.false631:                                 ; preds = %if.else
  %270 = load i32, i32* %etlt, align 4, !dbg !9519
  %cmp632 = icmp eq i32 %270, 6, !dbg !9520
  br i1 %cmp632, label %if.then634, label %if.else674, !dbg !9521

if.then634:                                       ; preds = %lor.lhs.false631, %if.else
  call void @llvm.dbg.declare(metadata i32* %_var635, metadata !9522, metadata !DIExpression()), !dbg !9524
  %271 = load %struct.xlgmac_pkt_info*, %struct.xlgmac_pkt_info** %pkt_info, align 8, !dbg !9524
  %attributes636 = getelementptr inbounds %struct.xlgmac_pkt_info, %struct.xlgmac_pkt_info* %271, i32 0, i32 1, !dbg !9524
  %272 = load i32, i32* %attributes636, align 8, !dbg !9524
  store i32 %272, i32* %_var635, align 4, !dbg !9524
  call void @llvm.dbg.declare(metadata i32* %_pos637, metadata !9525, metadata !DIExpression()), !dbg !9524
  store i32 0, i32* %_pos637, align 4, !dbg !9524
  call void @llvm.dbg.declare(metadata i32* %_len638, metadata !9526, metadata !DIExpression()), !dbg !9524
  store i32 1, i32* %_len638, align 4, !dbg !9524
  call void @llvm.dbg.declare(metadata i32* %_val639, metadata !9527, metadata !DIExpression()), !dbg !9524
  store i32 0, i32* %_val639, align 4, !dbg !9524
  %273 = load i32, i32* %_val639, align 4, !dbg !9524
  %274 = load i32, i32* %_pos637, align 4, !dbg !9524
  %shl640 = shl i32 %273, %274, !dbg !9524
  %conv641 = sext i32 %shl640 to i64, !dbg !9524
  %275 = load i32, i32* %_pos637, align 4, !dbg !9524
  %sh_prom642 = zext i32 %275 to i64, !dbg !9524
  %shl643 = shl i64 1, %sh_prom642, !dbg !9524
  %sub644 = sub i64 -1, %shl643, !dbg !9524
  %add645 = add i64 %sub644, 1, !dbg !9524
  %276 = load i32, i32* %_pos637, align 4, !dbg !9524
  %277 = load i32, i32* %_len638, align 4, !dbg !9524
  %add646 = add i32 %276, %277, !dbg !9524
  %sub647 = sub i32 %add646, 1, !dbg !9524
  %sub648 = sub i32 63, %sub647, !dbg !9524
  %sh_prom649 = zext i32 %sub648 to i64, !dbg !9524
  %shr650 = lshr i64 -1, %sh_prom649, !dbg !9524
  %and651 = and i64 %add645, %shr650, !dbg !9524
  %add652 = add i64 0, %and651, !dbg !9524
  %and653 = and i64 %conv641, %add652, !dbg !9524
  %conv654 = trunc i64 %and653 to i32, !dbg !9524
  store i32 %conv654, i32* %_val639, align 4, !dbg !9524
  %278 = load i32, i32* %_var635, align 4, !dbg !9524
  %conv656 = zext i32 %278 to i64, !dbg !9524
  %279 = load i32, i32* %_pos637, align 4, !dbg !9524
  %sh_prom657 = zext i32 %279 to i64, !dbg !9524
  %shl658 = shl i64 1, %sh_prom657, !dbg !9524
  %sub659 = sub i64 -1, %shl658, !dbg !9524
  %add660 = add i64 %sub659, 1, !dbg !9524
  %280 = load i32, i32* %_pos637, align 4, !dbg !9524
  %281 = load i32, i32* %_len638, align 4, !dbg !9524
  %add661 = add i32 %280, %281, !dbg !9524
  %sub662 = sub i32 %add661, 1, !dbg !9524
  %sub663 = sub i32 63, %sub662, !dbg !9524
  %sh_prom664 = zext i32 %sub663 to i64, !dbg !9524
  %shr665 = lshr i64 -1, %sh_prom664, !dbg !9524
  %and666 = and i64 %add660, %shr665, !dbg !9524
  %add667 = add i64 0, %and666, !dbg !9524
  %neg668 = xor i64 %add667, -1, !dbg !9524
  %and669 = and i64 %conv656, %neg668, !dbg !9524
  %282 = load i32, i32* %_val639, align 4, !dbg !9524
  %conv670 = sext i32 %282 to i64, !dbg !9524
  %or671 = or i64 %and669, %conv670, !dbg !9524
  %conv672 = trunc i64 %or671 to i32, !dbg !9524
  store i32 %conv672, i32* %_var635, align 4, !dbg !9524
  store i32 %conv672, i32* %tmp655, align 4, !dbg !9524
  %283 = load i32, i32* %tmp655, align 4, !dbg !9524
  %284 = load %struct.xlgmac_pkt_info*, %struct.xlgmac_pkt_info** %pkt_info, align 8, !dbg !9528
  %attributes673 = getelementptr inbounds %struct.xlgmac_pkt_info, %struct.xlgmac_pkt_info* %284, i32 0, i32 1, !dbg !9529
  store i32 %283, i32* %attributes673, align 8, !dbg !9530
  br label %if.end713, !dbg !9528

if.else674:                                       ; preds = %lor.lhs.false631
  call void @llvm.dbg.declare(metadata i32* %_var675, metadata !9531, metadata !DIExpression()), !dbg !9533
  %285 = load %struct.xlgmac_pkt_info*, %struct.xlgmac_pkt_info** %pkt_info, align 8, !dbg !9533
  %errors = getelementptr inbounds %struct.xlgmac_pkt_info, %struct.xlgmac_pkt_info* %285, i32 0, i32 2, !dbg !9533
  %286 = load i32, i32* %errors, align 4, !dbg !9533
  store i32 %286, i32* %_var675, align 4, !dbg !9533
  call void @llvm.dbg.declare(metadata i32* %_pos676, metadata !9534, metadata !DIExpression()), !dbg !9533
  store i32 3, i32* %_pos676, align 4, !dbg !9533
  call void @llvm.dbg.declare(metadata i32* %_len677, metadata !9535, metadata !DIExpression()), !dbg !9533
  store i32 1, i32* %_len677, align 4, !dbg !9533
  call void @llvm.dbg.declare(metadata i32* %_val678, metadata !9536, metadata !DIExpression()), !dbg !9533
  store i32 1, i32* %_val678, align 4, !dbg !9533
  %287 = load i32, i32* %_val678, align 4, !dbg !9533
  %288 = load i32, i32* %_pos676, align 4, !dbg !9533
  %shl679 = shl i32 %287, %288, !dbg !9533
  %conv680 = sext i32 %shl679 to i64, !dbg !9533
  %289 = load i32, i32* %_pos676, align 4, !dbg !9533
  %sh_prom681 = zext i32 %289 to i64, !dbg !9533
  %shl682 = shl i64 1, %sh_prom681, !dbg !9533
  %sub683 = sub i64 -1, %shl682, !dbg !9533
  %add684 = add i64 %sub683, 1, !dbg !9533
  %290 = load i32, i32* %_pos676, align 4, !dbg !9533
  %291 = load i32, i32* %_len677, align 4, !dbg !9533
  %add685 = add i32 %290, %291, !dbg !9533
  %sub686 = sub i32 %add685, 1, !dbg !9533
  %sub687 = sub i32 63, %sub686, !dbg !9533
  %sh_prom688 = zext i32 %sub687 to i64, !dbg !9533
  %shr689 = lshr i64 -1, %sh_prom688, !dbg !9533
  %and690 = and i64 %add684, %shr689, !dbg !9533
  %add691 = add i64 0, %and690, !dbg !9533
  %and692 = and i64 %conv680, %add691, !dbg !9533
  %conv693 = trunc i64 %and692 to i32, !dbg !9533
  store i32 %conv693, i32* %_val678, align 4, !dbg !9533
  %292 = load i32, i32* %_var675, align 4, !dbg !9533
  %conv695 = zext i32 %292 to i64, !dbg !9533
  %293 = load i32, i32* %_pos676, align 4, !dbg !9533
  %sh_prom696 = zext i32 %293 to i64, !dbg !9533
  %shl697 = shl i64 1, %sh_prom696, !dbg !9533
  %sub698 = sub i64 -1, %shl697, !dbg !9533
  %add699 = add i64 %sub698, 1, !dbg !9533
  %294 = load i32, i32* %_pos676, align 4, !dbg !9533
  %295 = load i32, i32* %_len677, align 4, !dbg !9533
  %add700 = add i32 %294, %295, !dbg !9533
  %sub701 = sub i32 %add700, 1, !dbg !9533
  %sub702 = sub i32 63, %sub701, !dbg !9533
  %sh_prom703 = zext i32 %sub702 to i64, !dbg !9533
  %shr704 = lshr i64 -1, %sh_prom703, !dbg !9533
  %and705 = and i64 %add699, %shr704, !dbg !9533
  %add706 = add i64 0, %and705, !dbg !9533
  %neg707 = xor i64 %add706, -1, !dbg !9533
  %and708 = and i64 %conv695, %neg707, !dbg !9533
  %296 = load i32, i32* %_val678, align 4, !dbg !9533
  %conv709 = sext i32 %296 to i64, !dbg !9533
  %or710 = or i64 %and708, %conv709, !dbg !9533
  %conv711 = trunc i64 %or710 to i32, !dbg !9533
  store i32 %conv711, i32* %_var675, align 4, !dbg !9533
  store i32 %conv711, i32* %tmp694, align 4, !dbg !9533
  %297 = load i32, i32* %tmp694, align 4, !dbg !9533
  %298 = load %struct.xlgmac_pkt_info*, %struct.xlgmac_pkt_info** %pkt_info, align 8, !dbg !9537
  %errors712 = getelementptr inbounds %struct.xlgmac_pkt_info, %struct.xlgmac_pkt_info* %298, i32 0, i32 2, !dbg !9538
  store i32 %297, i32* %errors712, align 4, !dbg !9539
  br label %if.end713

if.end713:                                        ; preds = %if.else674, %if.then634
  br label %if.end714

if.end714:                                        ; preds = %if.end713, %if.end628
  br label %do.body, !dbg !9540

do.body:                                          ; preds = %if.end714
  br label %do.end, !dbg !9541

do.end:                                           ; preds = %do.body
  store i32 0, i32* %retval, align 4, !dbg !9543
  br label %return, !dbg !9543

return:                                           ; preds = %do.end, %if.then394, %if.then42, %if.then
  %299 = load i32, i32* %retval, align 4, !dbg !9544
  ret i32 %299, !dbg !9544
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @xlgmac_enable_int(%struct.xlgmac_channel* %channel, i32 %int_id) #0 !dbg !9545 {
entry:
  %retval = alloca i32, align 4
  %channel.addr = alloca %struct.xlgmac_channel*, align 8
  %int_id.addr = alloca i32, align 4
  %dma_ch_ier = alloca i32, align 4
  %_var = alloca i32, align 4
  %_pos = alloca i32, align 4
  %_len = alloca i32, align 4
  %_val = alloca i32, align 4
  %tmp = alloca i32, align 4
  %_var25 = alloca i32, align 4
  %_pos26 = alloca i32, align 4
  %_len27 = alloca i32, align 4
  %_val28 = alloca i32, align 4
  %tmp44 = alloca i32, align 4
  %_var63 = alloca i32, align 4
  %_pos64 = alloca i32, align 4
  %_len65 = alloca i32, align 4
  %_val66 = alloca i32, align 4
  %tmp82 = alloca i32, align 4
  %_var101 = alloca i32, align 4
  %_pos102 = alloca i32, align 4
  %_len103 = alloca i32, align 4
  %_val104 = alloca i32, align 4
  %tmp120 = alloca i32, align 4
  %_var139 = alloca i32, align 4
  %_pos140 = alloca i32, align 4
  %_len141 = alloca i32, align 4
  %_val142 = alloca i32, align 4
  %tmp158 = alloca i32, align 4
  %_var177 = alloca i32, align 4
  %_pos178 = alloca i32, align 4
  %_len179 = alloca i32, align 4
  %_val180 = alloca i32, align 4
  %tmp196 = alloca i32, align 4
  %_var215 = alloca i32, align 4
  %_pos216 = alloca i32, align 4
  %_len217 = alloca i32, align 4
  %_val218 = alloca i32, align 4
  %tmp234 = alloca i32, align 4
  %_var252 = alloca i32, align 4
  %_pos253 = alloca i32, align 4
  %_len254 = alloca i32, align 4
  %_val255 = alloca i32, align 4
  %tmp271 = alloca i32, align 4
  %_var290 = alloca i32, align 4
  %_pos291 = alloca i32, align 4
  %_len292 = alloca i32, align 4
  %_val293 = alloca i32, align 4
  %tmp309 = alloca i32, align 4
  store %struct.xlgmac_channel* %channel, %struct.xlgmac_channel** %channel.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xlgmac_channel** %channel.addr, metadata !9546, metadata !DIExpression()), !dbg !9547
  store i32 %int_id, i32* %int_id.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %int_id.addr, metadata !9548, metadata !DIExpression()), !dbg !9549
  call void @llvm.dbg.declare(metadata i32* %dma_ch_ier, metadata !9550, metadata !DIExpression()), !dbg !9551
  %0 = load %struct.xlgmac_channel*, %struct.xlgmac_channel** %channel.addr, align 8, !dbg !9552
  %dma_regs = getelementptr inbounds %struct.xlgmac_channel, %struct.xlgmac_channel* %0, i32 0, i32 3, !dbg !9552
  %1 = load i8*, i8** %dma_regs, align 32, !dbg !9552
  %add.ptr = getelementptr i8, i8* %1, i64 56, !dbg !9552
  %call = call i32 @readl(i8* %add.ptr) #7, !dbg !9553
  store i32 %call, i32* %dma_ch_ier, align 4, !dbg !9554
  %2 = load i32, i32* %int_id.addr, align 4, !dbg !9555
  switch i32 %2, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb24
    i32 2, label %sw.bb62
    i32 3, label %sw.bb100
    i32 4, label %sw.bb138
    i32 5, label %sw.bb176
    i32 6, label %sw.bb214
    i32 7, label %sw.bb289
    i32 8, label %sw.bb327
  ], !dbg !9556

sw.bb:                                            ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %_var, metadata !9557, metadata !DIExpression()), !dbg !9560
  %3 = load i32, i32* %dma_ch_ier, align 4, !dbg !9560
  store i32 %3, i32* %_var, align 4, !dbg !9560
  call void @llvm.dbg.declare(metadata i32* %_pos, metadata !9561, metadata !DIExpression()), !dbg !9560
  store i32 0, i32* %_pos, align 4, !dbg !9560
  call void @llvm.dbg.declare(metadata i32* %_len, metadata !9562, metadata !DIExpression()), !dbg !9560
  store i32 1, i32* %_len, align 4, !dbg !9560
  call void @llvm.dbg.declare(metadata i32* %_val, metadata !9563, metadata !DIExpression()), !dbg !9560
  store i32 1, i32* %_val, align 4, !dbg !9560
  %4 = load i32, i32* %_val, align 4, !dbg !9560
  %5 = load i32, i32* %_pos, align 4, !dbg !9560
  %shl = shl i32 %4, %5, !dbg !9560
  %conv = sext i32 %shl to i64, !dbg !9560
  %6 = load i32, i32* %_pos, align 4, !dbg !9560
  %sh_prom = zext i32 %6 to i64, !dbg !9560
  %shl1 = shl i64 1, %sh_prom, !dbg !9560
  %sub = sub i64 -1, %shl1, !dbg !9560
  %add = add i64 %sub, 1, !dbg !9560
  %7 = load i32, i32* %_pos, align 4, !dbg !9560
  %8 = load i32, i32* %_len, align 4, !dbg !9560
  %add2 = add i32 %7, %8, !dbg !9560
  %sub3 = sub i32 %add2, 1, !dbg !9560
  %sub4 = sub i32 63, %sub3, !dbg !9560
  %sh_prom5 = zext i32 %sub4 to i64, !dbg !9560
  %shr = lshr i64 -1, %sh_prom5, !dbg !9560
  %and = and i64 %add, %shr, !dbg !9560
  %add6 = add i64 0, %and, !dbg !9560
  %and7 = and i64 %conv, %add6, !dbg !9560
  %conv8 = trunc i64 %and7 to i32, !dbg !9560
  store i32 %conv8, i32* %_val, align 4, !dbg !9560
  %9 = load i32, i32* %_var, align 4, !dbg !9560
  %conv9 = zext i32 %9 to i64, !dbg !9560
  %10 = load i32, i32* %_pos, align 4, !dbg !9560
  %sh_prom10 = zext i32 %10 to i64, !dbg !9560
  %shl11 = shl i64 1, %sh_prom10, !dbg !9560
  %sub12 = sub i64 -1, %shl11, !dbg !9560
  %add13 = add i64 %sub12, 1, !dbg !9560
  %11 = load i32, i32* %_pos, align 4, !dbg !9560
  %12 = load i32, i32* %_len, align 4, !dbg !9560
  %add14 = add i32 %11, %12, !dbg !9560
  %sub15 = sub i32 %add14, 1, !dbg !9560
  %sub16 = sub i32 63, %sub15, !dbg !9560
  %sh_prom17 = zext i32 %sub16 to i64, !dbg !9560
  %shr18 = lshr i64 -1, %sh_prom17, !dbg !9560
  %and19 = and i64 %add13, %shr18, !dbg !9560
  %add20 = add i64 0, %and19, !dbg !9560
  %neg = xor i64 %add20, -1, !dbg !9560
  %and21 = and i64 %conv9, %neg, !dbg !9560
  %13 = load i32, i32* %_val, align 4, !dbg !9560
  %conv22 = sext i32 %13 to i64, !dbg !9560
  %or = or i64 %and21, %conv22, !dbg !9560
  %conv23 = trunc i64 %or to i32, !dbg !9560
  store i32 %conv23, i32* %_var, align 4, !dbg !9560
  store i32 %conv23, i32* %tmp, align 4, !dbg !9560
  %14 = load i32, i32* %tmp, align 4, !dbg !9560
  store i32 %14, i32* %dma_ch_ier, align 4, !dbg !9564
  br label %sw.epilog, !dbg !9565

sw.bb24:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %_var25, metadata !9566, metadata !DIExpression()), !dbg !9568
  %15 = load i32, i32* %dma_ch_ier, align 4, !dbg !9568
  store i32 %15, i32* %_var25, align 4, !dbg !9568
  call void @llvm.dbg.declare(metadata i32* %_pos26, metadata !9569, metadata !DIExpression()), !dbg !9568
  store i32 1, i32* %_pos26, align 4, !dbg !9568
  call void @llvm.dbg.declare(metadata i32* %_len27, metadata !9570, metadata !DIExpression()), !dbg !9568
  store i32 1, i32* %_len27, align 4, !dbg !9568
  call void @llvm.dbg.declare(metadata i32* %_val28, metadata !9571, metadata !DIExpression()), !dbg !9568
  store i32 1, i32* %_val28, align 4, !dbg !9568
  %16 = load i32, i32* %_val28, align 4, !dbg !9568
  %17 = load i32, i32* %_pos26, align 4, !dbg !9568
  %shl29 = shl i32 %16, %17, !dbg !9568
  %conv30 = sext i32 %shl29 to i64, !dbg !9568
  %18 = load i32, i32* %_pos26, align 4, !dbg !9568
  %sh_prom31 = zext i32 %18 to i64, !dbg !9568
  %shl32 = shl i64 1, %sh_prom31, !dbg !9568
  %sub33 = sub i64 -1, %shl32, !dbg !9568
  %add34 = add i64 %sub33, 1, !dbg !9568
  %19 = load i32, i32* %_pos26, align 4, !dbg !9568
  %20 = load i32, i32* %_len27, align 4, !dbg !9568
  %add35 = add i32 %19, %20, !dbg !9568
  %sub36 = sub i32 %add35, 1, !dbg !9568
  %sub37 = sub i32 63, %sub36, !dbg !9568
  %sh_prom38 = zext i32 %sub37 to i64, !dbg !9568
  %shr39 = lshr i64 -1, %sh_prom38, !dbg !9568
  %and40 = and i64 %add34, %shr39, !dbg !9568
  %add41 = add i64 0, %and40, !dbg !9568
  %and42 = and i64 %conv30, %add41, !dbg !9568
  %conv43 = trunc i64 %and42 to i32, !dbg !9568
  store i32 %conv43, i32* %_val28, align 4, !dbg !9568
  %21 = load i32, i32* %_var25, align 4, !dbg !9568
  %conv45 = zext i32 %21 to i64, !dbg !9568
  %22 = load i32, i32* %_pos26, align 4, !dbg !9568
  %sh_prom46 = zext i32 %22 to i64, !dbg !9568
  %shl47 = shl i64 1, %sh_prom46, !dbg !9568
  %sub48 = sub i64 -1, %shl47, !dbg !9568
  %add49 = add i64 %sub48, 1, !dbg !9568
  %23 = load i32, i32* %_pos26, align 4, !dbg !9568
  %24 = load i32, i32* %_len27, align 4, !dbg !9568
  %add50 = add i32 %23, %24, !dbg !9568
  %sub51 = sub i32 %add50, 1, !dbg !9568
  %sub52 = sub i32 63, %sub51, !dbg !9568
  %sh_prom53 = zext i32 %sub52 to i64, !dbg !9568
  %shr54 = lshr i64 -1, %sh_prom53, !dbg !9568
  %and55 = and i64 %add49, %shr54, !dbg !9568
  %add56 = add i64 0, %and55, !dbg !9568
  %neg57 = xor i64 %add56, -1, !dbg !9568
  %and58 = and i64 %conv45, %neg57, !dbg !9568
  %25 = load i32, i32* %_val28, align 4, !dbg !9568
  %conv59 = sext i32 %25 to i64, !dbg !9568
  %or60 = or i64 %and58, %conv59, !dbg !9568
  %conv61 = trunc i64 %or60 to i32, !dbg !9568
  store i32 %conv61, i32* %_var25, align 4, !dbg !9568
  store i32 %conv61, i32* %tmp44, align 4, !dbg !9568
  %26 = load i32, i32* %tmp44, align 4, !dbg !9568
  store i32 %26, i32* %dma_ch_ier, align 4, !dbg !9572
  br label %sw.epilog, !dbg !9573

sw.bb62:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %_var63, metadata !9574, metadata !DIExpression()), !dbg !9576
  %27 = load i32, i32* %dma_ch_ier, align 4, !dbg !9576
  store i32 %27, i32* %_var63, align 4, !dbg !9576
  call void @llvm.dbg.declare(metadata i32* %_pos64, metadata !9577, metadata !DIExpression()), !dbg !9576
  store i32 2, i32* %_pos64, align 4, !dbg !9576
  call void @llvm.dbg.declare(metadata i32* %_len65, metadata !9578, metadata !DIExpression()), !dbg !9576
  store i32 1, i32* %_len65, align 4, !dbg !9576
  call void @llvm.dbg.declare(metadata i32* %_val66, metadata !9579, metadata !DIExpression()), !dbg !9576
  store i32 1, i32* %_val66, align 4, !dbg !9576
  %28 = load i32, i32* %_val66, align 4, !dbg !9576
  %29 = load i32, i32* %_pos64, align 4, !dbg !9576
  %shl67 = shl i32 %28, %29, !dbg !9576
  %conv68 = sext i32 %shl67 to i64, !dbg !9576
  %30 = load i32, i32* %_pos64, align 4, !dbg !9576
  %sh_prom69 = zext i32 %30 to i64, !dbg !9576
  %shl70 = shl i64 1, %sh_prom69, !dbg !9576
  %sub71 = sub i64 -1, %shl70, !dbg !9576
  %add72 = add i64 %sub71, 1, !dbg !9576
  %31 = load i32, i32* %_pos64, align 4, !dbg !9576
  %32 = load i32, i32* %_len65, align 4, !dbg !9576
  %add73 = add i32 %31, %32, !dbg !9576
  %sub74 = sub i32 %add73, 1, !dbg !9576
  %sub75 = sub i32 63, %sub74, !dbg !9576
  %sh_prom76 = zext i32 %sub75 to i64, !dbg !9576
  %shr77 = lshr i64 -1, %sh_prom76, !dbg !9576
  %and78 = and i64 %add72, %shr77, !dbg !9576
  %add79 = add i64 0, %and78, !dbg !9576
  %and80 = and i64 %conv68, %add79, !dbg !9576
  %conv81 = trunc i64 %and80 to i32, !dbg !9576
  store i32 %conv81, i32* %_val66, align 4, !dbg !9576
  %33 = load i32, i32* %_var63, align 4, !dbg !9576
  %conv83 = zext i32 %33 to i64, !dbg !9576
  %34 = load i32, i32* %_pos64, align 4, !dbg !9576
  %sh_prom84 = zext i32 %34 to i64, !dbg !9576
  %shl85 = shl i64 1, %sh_prom84, !dbg !9576
  %sub86 = sub i64 -1, %shl85, !dbg !9576
  %add87 = add i64 %sub86, 1, !dbg !9576
  %35 = load i32, i32* %_pos64, align 4, !dbg !9576
  %36 = load i32, i32* %_len65, align 4, !dbg !9576
  %add88 = add i32 %35, %36, !dbg !9576
  %sub89 = sub i32 %add88, 1, !dbg !9576
  %sub90 = sub i32 63, %sub89, !dbg !9576
  %sh_prom91 = zext i32 %sub90 to i64, !dbg !9576
  %shr92 = lshr i64 -1, %sh_prom91, !dbg !9576
  %and93 = and i64 %add87, %shr92, !dbg !9576
  %add94 = add i64 0, %and93, !dbg !9576
  %neg95 = xor i64 %add94, -1, !dbg !9576
  %and96 = and i64 %conv83, %neg95, !dbg !9576
  %37 = load i32, i32* %_val66, align 4, !dbg !9576
  %conv97 = sext i32 %37 to i64, !dbg !9576
  %or98 = or i64 %and96, %conv97, !dbg !9576
  %conv99 = trunc i64 %or98 to i32, !dbg !9576
  store i32 %conv99, i32* %_var63, align 4, !dbg !9576
  store i32 %conv99, i32* %tmp82, align 4, !dbg !9576
  %38 = load i32, i32* %tmp82, align 4, !dbg !9576
  store i32 %38, i32* %dma_ch_ier, align 4, !dbg !9580
  br label %sw.epilog, !dbg !9581

sw.bb100:                                         ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %_var101, metadata !9582, metadata !DIExpression()), !dbg !9584
  %39 = load i32, i32* %dma_ch_ier, align 4, !dbg !9584
  store i32 %39, i32* %_var101, align 4, !dbg !9584
  call void @llvm.dbg.declare(metadata i32* %_pos102, metadata !9585, metadata !DIExpression()), !dbg !9584
  store i32 6, i32* %_pos102, align 4, !dbg !9584
  call void @llvm.dbg.declare(metadata i32* %_len103, metadata !9586, metadata !DIExpression()), !dbg !9584
  store i32 1, i32* %_len103, align 4, !dbg !9584
  call void @llvm.dbg.declare(metadata i32* %_val104, metadata !9587, metadata !DIExpression()), !dbg !9584
  store i32 1, i32* %_val104, align 4, !dbg !9584
  %40 = load i32, i32* %_val104, align 4, !dbg !9584
  %41 = load i32, i32* %_pos102, align 4, !dbg !9584
  %shl105 = shl i32 %40, %41, !dbg !9584
  %conv106 = sext i32 %shl105 to i64, !dbg !9584
  %42 = load i32, i32* %_pos102, align 4, !dbg !9584
  %sh_prom107 = zext i32 %42 to i64, !dbg !9584
  %shl108 = shl i64 1, %sh_prom107, !dbg !9584
  %sub109 = sub i64 -1, %shl108, !dbg !9584
  %add110 = add i64 %sub109, 1, !dbg !9584
  %43 = load i32, i32* %_pos102, align 4, !dbg !9584
  %44 = load i32, i32* %_len103, align 4, !dbg !9584
  %add111 = add i32 %43, %44, !dbg !9584
  %sub112 = sub i32 %add111, 1, !dbg !9584
  %sub113 = sub i32 63, %sub112, !dbg !9584
  %sh_prom114 = zext i32 %sub113 to i64, !dbg !9584
  %shr115 = lshr i64 -1, %sh_prom114, !dbg !9584
  %and116 = and i64 %add110, %shr115, !dbg !9584
  %add117 = add i64 0, %and116, !dbg !9584
  %and118 = and i64 %conv106, %add117, !dbg !9584
  %conv119 = trunc i64 %and118 to i32, !dbg !9584
  store i32 %conv119, i32* %_val104, align 4, !dbg !9584
  %45 = load i32, i32* %_var101, align 4, !dbg !9584
  %conv121 = zext i32 %45 to i64, !dbg !9584
  %46 = load i32, i32* %_pos102, align 4, !dbg !9584
  %sh_prom122 = zext i32 %46 to i64, !dbg !9584
  %shl123 = shl i64 1, %sh_prom122, !dbg !9584
  %sub124 = sub i64 -1, %shl123, !dbg !9584
  %add125 = add i64 %sub124, 1, !dbg !9584
  %47 = load i32, i32* %_pos102, align 4, !dbg !9584
  %48 = load i32, i32* %_len103, align 4, !dbg !9584
  %add126 = add i32 %47, %48, !dbg !9584
  %sub127 = sub i32 %add126, 1, !dbg !9584
  %sub128 = sub i32 63, %sub127, !dbg !9584
  %sh_prom129 = zext i32 %sub128 to i64, !dbg !9584
  %shr130 = lshr i64 -1, %sh_prom129, !dbg !9584
  %and131 = and i64 %add125, %shr130, !dbg !9584
  %add132 = add i64 0, %and131, !dbg !9584
  %neg133 = xor i64 %add132, -1, !dbg !9584
  %and134 = and i64 %conv121, %neg133, !dbg !9584
  %49 = load i32, i32* %_val104, align 4, !dbg !9584
  %conv135 = sext i32 %49 to i64, !dbg !9584
  %or136 = or i64 %and134, %conv135, !dbg !9584
  %conv137 = trunc i64 %or136 to i32, !dbg !9584
  store i32 %conv137, i32* %_var101, align 4, !dbg !9584
  store i32 %conv137, i32* %tmp120, align 4, !dbg !9584
  %50 = load i32, i32* %tmp120, align 4, !dbg !9584
  store i32 %50, i32* %dma_ch_ier, align 4, !dbg !9588
  br label %sw.epilog, !dbg !9589

sw.bb138:                                         ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %_var139, metadata !9590, metadata !DIExpression()), !dbg !9592
  %51 = load i32, i32* %dma_ch_ier, align 4, !dbg !9592
  store i32 %51, i32* %_var139, align 4, !dbg !9592
  call void @llvm.dbg.declare(metadata i32* %_pos140, metadata !9593, metadata !DIExpression()), !dbg !9592
  store i32 7, i32* %_pos140, align 4, !dbg !9592
  call void @llvm.dbg.declare(metadata i32* %_len141, metadata !9594, metadata !DIExpression()), !dbg !9592
  store i32 1, i32* %_len141, align 4, !dbg !9592
  call void @llvm.dbg.declare(metadata i32* %_val142, metadata !9595, metadata !DIExpression()), !dbg !9592
  store i32 1, i32* %_val142, align 4, !dbg !9592
  %52 = load i32, i32* %_val142, align 4, !dbg !9592
  %53 = load i32, i32* %_pos140, align 4, !dbg !9592
  %shl143 = shl i32 %52, %53, !dbg !9592
  %conv144 = sext i32 %shl143 to i64, !dbg !9592
  %54 = load i32, i32* %_pos140, align 4, !dbg !9592
  %sh_prom145 = zext i32 %54 to i64, !dbg !9592
  %shl146 = shl i64 1, %sh_prom145, !dbg !9592
  %sub147 = sub i64 -1, %shl146, !dbg !9592
  %add148 = add i64 %sub147, 1, !dbg !9592
  %55 = load i32, i32* %_pos140, align 4, !dbg !9592
  %56 = load i32, i32* %_len141, align 4, !dbg !9592
  %add149 = add i32 %55, %56, !dbg !9592
  %sub150 = sub i32 %add149, 1, !dbg !9592
  %sub151 = sub i32 63, %sub150, !dbg !9592
  %sh_prom152 = zext i32 %sub151 to i64, !dbg !9592
  %shr153 = lshr i64 -1, %sh_prom152, !dbg !9592
  %and154 = and i64 %add148, %shr153, !dbg !9592
  %add155 = add i64 0, %and154, !dbg !9592
  %and156 = and i64 %conv144, %add155, !dbg !9592
  %conv157 = trunc i64 %and156 to i32, !dbg !9592
  store i32 %conv157, i32* %_val142, align 4, !dbg !9592
  %57 = load i32, i32* %_var139, align 4, !dbg !9592
  %conv159 = zext i32 %57 to i64, !dbg !9592
  %58 = load i32, i32* %_pos140, align 4, !dbg !9592
  %sh_prom160 = zext i32 %58 to i64, !dbg !9592
  %shl161 = shl i64 1, %sh_prom160, !dbg !9592
  %sub162 = sub i64 -1, %shl161, !dbg !9592
  %add163 = add i64 %sub162, 1, !dbg !9592
  %59 = load i32, i32* %_pos140, align 4, !dbg !9592
  %60 = load i32, i32* %_len141, align 4, !dbg !9592
  %add164 = add i32 %59, %60, !dbg !9592
  %sub165 = sub i32 %add164, 1, !dbg !9592
  %sub166 = sub i32 63, %sub165, !dbg !9592
  %sh_prom167 = zext i32 %sub166 to i64, !dbg !9592
  %shr168 = lshr i64 -1, %sh_prom167, !dbg !9592
  %and169 = and i64 %add163, %shr168, !dbg !9592
  %add170 = add i64 0, %and169, !dbg !9592
  %neg171 = xor i64 %add170, -1, !dbg !9592
  %and172 = and i64 %conv159, %neg171, !dbg !9592
  %61 = load i32, i32* %_val142, align 4, !dbg !9592
  %conv173 = sext i32 %61 to i64, !dbg !9592
  %or174 = or i64 %and172, %conv173, !dbg !9592
  %conv175 = trunc i64 %or174 to i32, !dbg !9592
  store i32 %conv175, i32* %_var139, align 4, !dbg !9592
  store i32 %conv175, i32* %tmp158, align 4, !dbg !9592
  %62 = load i32, i32* %tmp158, align 4, !dbg !9592
  store i32 %62, i32* %dma_ch_ier, align 4, !dbg !9596
  br label %sw.epilog, !dbg !9597

sw.bb176:                                         ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %_var177, metadata !9598, metadata !DIExpression()), !dbg !9600
  %63 = load i32, i32* %dma_ch_ier, align 4, !dbg !9600
  store i32 %63, i32* %_var177, align 4, !dbg !9600
  call void @llvm.dbg.declare(metadata i32* %_pos178, metadata !9601, metadata !DIExpression()), !dbg !9600
  store i32 8, i32* %_pos178, align 4, !dbg !9600
  call void @llvm.dbg.declare(metadata i32* %_len179, metadata !9602, metadata !DIExpression()), !dbg !9600
  store i32 1, i32* %_len179, align 4, !dbg !9600
  call void @llvm.dbg.declare(metadata i32* %_val180, metadata !9603, metadata !DIExpression()), !dbg !9600
  store i32 1, i32* %_val180, align 4, !dbg !9600
  %64 = load i32, i32* %_val180, align 4, !dbg !9600
  %65 = load i32, i32* %_pos178, align 4, !dbg !9600
  %shl181 = shl i32 %64, %65, !dbg !9600
  %conv182 = sext i32 %shl181 to i64, !dbg !9600
  %66 = load i32, i32* %_pos178, align 4, !dbg !9600
  %sh_prom183 = zext i32 %66 to i64, !dbg !9600
  %shl184 = shl i64 1, %sh_prom183, !dbg !9600
  %sub185 = sub i64 -1, %shl184, !dbg !9600
  %add186 = add i64 %sub185, 1, !dbg !9600
  %67 = load i32, i32* %_pos178, align 4, !dbg !9600
  %68 = load i32, i32* %_len179, align 4, !dbg !9600
  %add187 = add i32 %67, %68, !dbg !9600
  %sub188 = sub i32 %add187, 1, !dbg !9600
  %sub189 = sub i32 63, %sub188, !dbg !9600
  %sh_prom190 = zext i32 %sub189 to i64, !dbg !9600
  %shr191 = lshr i64 -1, %sh_prom190, !dbg !9600
  %and192 = and i64 %add186, %shr191, !dbg !9600
  %add193 = add i64 0, %and192, !dbg !9600
  %and194 = and i64 %conv182, %add193, !dbg !9600
  %conv195 = trunc i64 %and194 to i32, !dbg !9600
  store i32 %conv195, i32* %_val180, align 4, !dbg !9600
  %69 = load i32, i32* %_var177, align 4, !dbg !9600
  %conv197 = zext i32 %69 to i64, !dbg !9600
  %70 = load i32, i32* %_pos178, align 4, !dbg !9600
  %sh_prom198 = zext i32 %70 to i64, !dbg !9600
  %shl199 = shl i64 1, %sh_prom198, !dbg !9600
  %sub200 = sub i64 -1, %shl199, !dbg !9600
  %add201 = add i64 %sub200, 1, !dbg !9600
  %71 = load i32, i32* %_pos178, align 4, !dbg !9600
  %72 = load i32, i32* %_len179, align 4, !dbg !9600
  %add202 = add i32 %71, %72, !dbg !9600
  %sub203 = sub i32 %add202, 1, !dbg !9600
  %sub204 = sub i32 63, %sub203, !dbg !9600
  %sh_prom205 = zext i32 %sub204 to i64, !dbg !9600
  %shr206 = lshr i64 -1, %sh_prom205, !dbg !9600
  %and207 = and i64 %add201, %shr206, !dbg !9600
  %add208 = add i64 0, %and207, !dbg !9600
  %neg209 = xor i64 %add208, -1, !dbg !9600
  %and210 = and i64 %conv197, %neg209, !dbg !9600
  %73 = load i32, i32* %_val180, align 4, !dbg !9600
  %conv211 = sext i32 %73 to i64, !dbg !9600
  %or212 = or i64 %and210, %conv211, !dbg !9600
  %conv213 = trunc i64 %or212 to i32, !dbg !9600
  store i32 %conv213, i32* %_var177, align 4, !dbg !9600
  store i32 %conv213, i32* %tmp196, align 4, !dbg !9600
  %74 = load i32, i32* %tmp196, align 4, !dbg !9600
  store i32 %74, i32* %dma_ch_ier, align 4, !dbg !9604
  br label %sw.epilog, !dbg !9605

sw.bb214:                                         ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %_var215, metadata !9606, metadata !DIExpression()), !dbg !9608
  %75 = load i32, i32* %dma_ch_ier, align 4, !dbg !9608
  store i32 %75, i32* %_var215, align 4, !dbg !9608
  call void @llvm.dbg.declare(metadata i32* %_pos216, metadata !9609, metadata !DIExpression()), !dbg !9608
  store i32 0, i32* %_pos216, align 4, !dbg !9608
  call void @llvm.dbg.declare(metadata i32* %_len217, metadata !9610, metadata !DIExpression()), !dbg !9608
  store i32 1, i32* %_len217, align 4, !dbg !9608
  call void @llvm.dbg.declare(metadata i32* %_val218, metadata !9611, metadata !DIExpression()), !dbg !9608
  store i32 1, i32* %_val218, align 4, !dbg !9608
  %76 = load i32, i32* %_val218, align 4, !dbg !9608
  %77 = load i32, i32* %_pos216, align 4, !dbg !9608
  %shl219 = shl i32 %76, %77, !dbg !9608
  %conv220 = sext i32 %shl219 to i64, !dbg !9608
  %78 = load i32, i32* %_pos216, align 4, !dbg !9608
  %sh_prom221 = zext i32 %78 to i64, !dbg !9608
  %shl222 = shl i64 1, %sh_prom221, !dbg !9608
  %sub223 = sub i64 -1, %shl222, !dbg !9608
  %add224 = add i64 %sub223, 1, !dbg !9608
  %79 = load i32, i32* %_pos216, align 4, !dbg !9608
  %80 = load i32, i32* %_len217, align 4, !dbg !9608
  %add225 = add i32 %79, %80, !dbg !9608
  %sub226 = sub i32 %add225, 1, !dbg !9608
  %sub227 = sub i32 63, %sub226, !dbg !9608
  %sh_prom228 = zext i32 %sub227 to i64, !dbg !9608
  %shr229 = lshr i64 -1, %sh_prom228, !dbg !9608
  %and230 = and i64 %add224, %shr229, !dbg !9608
  %add231 = add i64 0, %and230, !dbg !9608
  %and232 = and i64 %conv220, %add231, !dbg !9608
  %conv233 = trunc i64 %and232 to i32, !dbg !9608
  store i32 %conv233, i32* %_val218, align 4, !dbg !9608
  %81 = load i32, i32* %_var215, align 4, !dbg !9608
  %conv235 = zext i32 %81 to i64, !dbg !9608
  %82 = load i32, i32* %_pos216, align 4, !dbg !9608
  %sh_prom236 = zext i32 %82 to i64, !dbg !9608
  %shl237 = shl i64 1, %sh_prom236, !dbg !9608
  %sub238 = sub i64 -1, %shl237, !dbg !9608
  %add239 = add i64 %sub238, 1, !dbg !9608
  %83 = load i32, i32* %_pos216, align 4, !dbg !9608
  %84 = load i32, i32* %_len217, align 4, !dbg !9608
  %add240 = add i32 %83, %84, !dbg !9608
  %sub241 = sub i32 %add240, 1, !dbg !9608
  %sub242 = sub i32 63, %sub241, !dbg !9608
  %sh_prom243 = zext i32 %sub242 to i64, !dbg !9608
  %shr244 = lshr i64 -1, %sh_prom243, !dbg !9608
  %and245 = and i64 %add239, %shr244, !dbg !9608
  %add246 = add i64 0, %and245, !dbg !9608
  %neg247 = xor i64 %add246, -1, !dbg !9608
  %and248 = and i64 %conv235, %neg247, !dbg !9608
  %85 = load i32, i32* %_val218, align 4, !dbg !9608
  %conv249 = sext i32 %85 to i64, !dbg !9608
  %or250 = or i64 %and248, %conv249, !dbg !9608
  %conv251 = trunc i64 %or250 to i32, !dbg !9608
  store i32 %conv251, i32* %_var215, align 4, !dbg !9608
  store i32 %conv251, i32* %tmp234, align 4, !dbg !9608
  %86 = load i32, i32* %tmp234, align 4, !dbg !9608
  store i32 %86, i32* %dma_ch_ier, align 4, !dbg !9612
  call void @llvm.dbg.declare(metadata i32* %_var252, metadata !9613, metadata !DIExpression()), !dbg !9615
  %87 = load i32, i32* %dma_ch_ier, align 4, !dbg !9615
  store i32 %87, i32* %_var252, align 4, !dbg !9615
  call void @llvm.dbg.declare(metadata i32* %_pos253, metadata !9616, metadata !DIExpression()), !dbg !9615
  store i32 6, i32* %_pos253, align 4, !dbg !9615
  call void @llvm.dbg.declare(metadata i32* %_len254, metadata !9617, metadata !DIExpression()), !dbg !9615
  store i32 1, i32* %_len254, align 4, !dbg !9615
  call void @llvm.dbg.declare(metadata i32* %_val255, metadata !9618, metadata !DIExpression()), !dbg !9615
  store i32 1, i32* %_val255, align 4, !dbg !9615
  %88 = load i32, i32* %_val255, align 4, !dbg !9615
  %89 = load i32, i32* %_pos253, align 4, !dbg !9615
  %shl256 = shl i32 %88, %89, !dbg !9615
  %conv257 = sext i32 %shl256 to i64, !dbg !9615
  %90 = load i32, i32* %_pos253, align 4, !dbg !9615
  %sh_prom258 = zext i32 %90 to i64, !dbg !9615
  %shl259 = shl i64 1, %sh_prom258, !dbg !9615
  %sub260 = sub i64 -1, %shl259, !dbg !9615
  %add261 = add i64 %sub260, 1, !dbg !9615
  %91 = load i32, i32* %_pos253, align 4, !dbg !9615
  %92 = load i32, i32* %_len254, align 4, !dbg !9615
  %add262 = add i32 %91, %92, !dbg !9615
  %sub263 = sub i32 %add262, 1, !dbg !9615
  %sub264 = sub i32 63, %sub263, !dbg !9615
  %sh_prom265 = zext i32 %sub264 to i64, !dbg !9615
  %shr266 = lshr i64 -1, %sh_prom265, !dbg !9615
  %and267 = and i64 %add261, %shr266, !dbg !9615
  %add268 = add i64 0, %and267, !dbg !9615
  %and269 = and i64 %conv257, %add268, !dbg !9615
  %conv270 = trunc i64 %and269 to i32, !dbg !9615
  store i32 %conv270, i32* %_val255, align 4, !dbg !9615
  %93 = load i32, i32* %_var252, align 4, !dbg !9615
  %conv272 = zext i32 %93 to i64, !dbg !9615
  %94 = load i32, i32* %_pos253, align 4, !dbg !9615
  %sh_prom273 = zext i32 %94 to i64, !dbg !9615
  %shl274 = shl i64 1, %sh_prom273, !dbg !9615
  %sub275 = sub i64 -1, %shl274, !dbg !9615
  %add276 = add i64 %sub275, 1, !dbg !9615
  %95 = load i32, i32* %_pos253, align 4, !dbg !9615
  %96 = load i32, i32* %_len254, align 4, !dbg !9615
  %add277 = add i32 %95, %96, !dbg !9615
  %sub278 = sub i32 %add277, 1, !dbg !9615
  %sub279 = sub i32 63, %sub278, !dbg !9615
  %sh_prom280 = zext i32 %sub279 to i64, !dbg !9615
  %shr281 = lshr i64 -1, %sh_prom280, !dbg !9615
  %and282 = and i64 %add276, %shr281, !dbg !9615
  %add283 = add i64 0, %and282, !dbg !9615
  %neg284 = xor i64 %add283, -1, !dbg !9615
  %and285 = and i64 %conv272, %neg284, !dbg !9615
  %97 = load i32, i32* %_val255, align 4, !dbg !9615
  %conv286 = sext i32 %97 to i64, !dbg !9615
  %or287 = or i64 %and285, %conv286, !dbg !9615
  %conv288 = trunc i64 %or287 to i32, !dbg !9615
  store i32 %conv288, i32* %_var252, align 4, !dbg !9615
  store i32 %conv288, i32* %tmp271, align 4, !dbg !9615
  %98 = load i32, i32* %tmp271, align 4, !dbg !9615
  store i32 %98, i32* %dma_ch_ier, align 4, !dbg !9619
  br label %sw.epilog, !dbg !9620

sw.bb289:                                         ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %_var290, metadata !9621, metadata !DIExpression()), !dbg !9623
  %99 = load i32, i32* %dma_ch_ier, align 4, !dbg !9623
  store i32 %99, i32* %_var290, align 4, !dbg !9623
  call void @llvm.dbg.declare(metadata i32* %_pos291, metadata !9624, metadata !DIExpression()), !dbg !9623
  store i32 12, i32* %_pos291, align 4, !dbg !9623
  call void @llvm.dbg.declare(metadata i32* %_len292, metadata !9625, metadata !DIExpression()), !dbg !9623
  store i32 1, i32* %_len292, align 4, !dbg !9623
  call void @llvm.dbg.declare(metadata i32* %_val293, metadata !9626, metadata !DIExpression()), !dbg !9623
  store i32 1, i32* %_val293, align 4, !dbg !9623
  %100 = load i32, i32* %_val293, align 4, !dbg !9623
  %101 = load i32, i32* %_pos291, align 4, !dbg !9623
  %shl294 = shl i32 %100, %101, !dbg !9623
  %conv295 = sext i32 %shl294 to i64, !dbg !9623
  %102 = load i32, i32* %_pos291, align 4, !dbg !9623
  %sh_prom296 = zext i32 %102 to i64, !dbg !9623
  %shl297 = shl i64 1, %sh_prom296, !dbg !9623
  %sub298 = sub i64 -1, %shl297, !dbg !9623
  %add299 = add i64 %sub298, 1, !dbg !9623
  %103 = load i32, i32* %_pos291, align 4, !dbg !9623
  %104 = load i32, i32* %_len292, align 4, !dbg !9623
  %add300 = add i32 %103, %104, !dbg !9623
  %sub301 = sub i32 %add300, 1, !dbg !9623
  %sub302 = sub i32 63, %sub301, !dbg !9623
  %sh_prom303 = zext i32 %sub302 to i64, !dbg !9623
  %shr304 = lshr i64 -1, %sh_prom303, !dbg !9623
  %and305 = and i64 %add299, %shr304, !dbg !9623
  %add306 = add i64 0, %and305, !dbg !9623
  %and307 = and i64 %conv295, %add306, !dbg !9623
  %conv308 = trunc i64 %and307 to i32, !dbg !9623
  store i32 %conv308, i32* %_val293, align 4, !dbg !9623
  %105 = load i32, i32* %_var290, align 4, !dbg !9623
  %conv310 = zext i32 %105 to i64, !dbg !9623
  %106 = load i32, i32* %_pos291, align 4, !dbg !9623
  %sh_prom311 = zext i32 %106 to i64, !dbg !9623
  %shl312 = shl i64 1, %sh_prom311, !dbg !9623
  %sub313 = sub i64 -1, %shl312, !dbg !9623
  %add314 = add i64 %sub313, 1, !dbg !9623
  %107 = load i32, i32* %_pos291, align 4, !dbg !9623
  %108 = load i32, i32* %_len292, align 4, !dbg !9623
  %add315 = add i32 %107, %108, !dbg !9623
  %sub316 = sub i32 %add315, 1, !dbg !9623
  %sub317 = sub i32 63, %sub316, !dbg !9623
  %sh_prom318 = zext i32 %sub317 to i64, !dbg !9623
  %shr319 = lshr i64 -1, %sh_prom318, !dbg !9623
  %and320 = and i64 %add314, %shr319, !dbg !9623
  %add321 = add i64 0, %and320, !dbg !9623
  %neg322 = xor i64 %add321, -1, !dbg !9623
  %and323 = and i64 %conv310, %neg322, !dbg !9623
  %109 = load i32, i32* %_val293, align 4, !dbg !9623
  %conv324 = sext i32 %109 to i64, !dbg !9623
  %or325 = or i64 %and323, %conv324, !dbg !9623
  %conv326 = trunc i64 %or325 to i32, !dbg !9623
  store i32 %conv326, i32* %_var290, align 4, !dbg !9623
  store i32 %conv326, i32* %tmp309, align 4, !dbg !9623
  %110 = load i32, i32* %tmp309, align 4, !dbg !9623
  store i32 %110, i32* %dma_ch_ier, align 4, !dbg !9627
  br label %sw.epilog, !dbg !9628

sw.bb327:                                         ; preds = %entry
  %111 = load %struct.xlgmac_channel*, %struct.xlgmac_channel** %channel.addr, align 8, !dbg !9629
  %saved_ier = getelementptr inbounds %struct.xlgmac_channel, %struct.xlgmac_channel* %111, i32 0, i32 7, !dbg !9630
  %112 = load i32, i32* %saved_ier, align 32, !dbg !9630
  %113 = load i32, i32* %dma_ch_ier, align 4, !dbg !9631
  %or328 = or i32 %113, %112, !dbg !9631
  store i32 %or328, i32* %dma_ch_ier, align 4, !dbg !9631
  br label %sw.epilog, !dbg !9632

sw.default:                                       ; preds = %entry
  store i32 -1, i32* %retval, align 4, !dbg !9633
  br label %return, !dbg !9633

sw.epilog:                                        ; preds = %sw.bb327, %sw.bb289, %sw.bb214, %sw.bb176, %sw.bb138, %sw.bb100, %sw.bb62, %sw.bb24, %sw.bb
  %114 = load i32, i32* %dma_ch_ier, align 4, !dbg !9634
  %115 = load %struct.xlgmac_channel*, %struct.xlgmac_channel** %channel.addr, align 8, !dbg !9635
  %dma_regs329 = getelementptr inbounds %struct.xlgmac_channel, %struct.xlgmac_channel* %115, i32 0, i32 3, !dbg !9635
  %116 = load i8*, i8** %dma_regs329, align 32, !dbg !9635
  %add.ptr330 = getelementptr i8, i8* %116, i64 56, !dbg !9635
  call void @writel(i32 %114, i8* %add.ptr330) #7, !dbg !9636
  store i32 0, i32* %retval, align 4, !dbg !9637
  br label %return, !dbg !9637

return:                                           ; preds = %sw.epilog, %sw.default
  %117 = load i32, i32* %retval, align 4, !dbg !9638
  ret i32 %117, !dbg !9638
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @xlgmac_disable_int(%struct.xlgmac_channel* %channel, i32 %int_id) #0 !dbg !9639 {
entry:
  %retval = alloca i32, align 4
  %channel.addr = alloca %struct.xlgmac_channel*, align 8
  %int_id.addr = alloca i32, align 4
  %dma_ch_ier = alloca i32, align 4
  %_var = alloca i32, align 4
  %_pos = alloca i32, align 4
  %_len = alloca i32, align 4
  %_val = alloca i32, align 4
  %tmp = alloca i32, align 4
  %_var25 = alloca i32, align 4
  %_pos26 = alloca i32, align 4
  %_len27 = alloca i32, align 4
  %_val28 = alloca i32, align 4
  %tmp44 = alloca i32, align 4
  %_var63 = alloca i32, align 4
  %_pos64 = alloca i32, align 4
  %_len65 = alloca i32, align 4
  %_val66 = alloca i32, align 4
  %tmp82 = alloca i32, align 4
  %_var101 = alloca i32, align 4
  %_pos102 = alloca i32, align 4
  %_len103 = alloca i32, align 4
  %_val104 = alloca i32, align 4
  %tmp120 = alloca i32, align 4
  %_var139 = alloca i32, align 4
  %_pos140 = alloca i32, align 4
  %_len141 = alloca i32, align 4
  %_val142 = alloca i32, align 4
  %tmp158 = alloca i32, align 4
  %_var177 = alloca i32, align 4
  %_pos178 = alloca i32, align 4
  %_len179 = alloca i32, align 4
  %_val180 = alloca i32, align 4
  %tmp196 = alloca i32, align 4
  %_var215 = alloca i32, align 4
  %_pos216 = alloca i32, align 4
  %_len217 = alloca i32, align 4
  %_val218 = alloca i32, align 4
  %tmp234 = alloca i32, align 4
  %_var252 = alloca i32, align 4
  %_pos253 = alloca i32, align 4
  %_len254 = alloca i32, align 4
  %_val255 = alloca i32, align 4
  %tmp271 = alloca i32, align 4
  %_var290 = alloca i32, align 4
  %_pos291 = alloca i32, align 4
  %_len292 = alloca i32, align 4
  %_val293 = alloca i32, align 4
  %tmp309 = alloca i32, align 4
  store %struct.xlgmac_channel* %channel, %struct.xlgmac_channel** %channel.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xlgmac_channel** %channel.addr, metadata !9640, metadata !DIExpression()), !dbg !9641
  store i32 %int_id, i32* %int_id.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %int_id.addr, metadata !9642, metadata !DIExpression()), !dbg !9643
  call void @llvm.dbg.declare(metadata i32* %dma_ch_ier, metadata !9644, metadata !DIExpression()), !dbg !9645
  %0 = load %struct.xlgmac_channel*, %struct.xlgmac_channel** %channel.addr, align 8, !dbg !9646
  %dma_regs = getelementptr inbounds %struct.xlgmac_channel, %struct.xlgmac_channel* %0, i32 0, i32 3, !dbg !9646
  %1 = load i8*, i8** %dma_regs, align 32, !dbg !9646
  %add.ptr = getelementptr i8, i8* %1, i64 56, !dbg !9646
  %call = call i32 @readl(i8* %add.ptr) #7, !dbg !9647
  store i32 %call, i32* %dma_ch_ier, align 4, !dbg !9648
  %2 = load i32, i32* %int_id.addr, align 4, !dbg !9649
  switch i32 %2, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb24
    i32 2, label %sw.bb62
    i32 3, label %sw.bb100
    i32 4, label %sw.bb138
    i32 5, label %sw.bb176
    i32 6, label %sw.bb214
    i32 7, label %sw.bb289
    i32 8, label %sw.bb327
  ], !dbg !9650

sw.bb:                                            ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %_var, metadata !9651, metadata !DIExpression()), !dbg !9654
  %3 = load i32, i32* %dma_ch_ier, align 4, !dbg !9654
  store i32 %3, i32* %_var, align 4, !dbg !9654
  call void @llvm.dbg.declare(metadata i32* %_pos, metadata !9655, metadata !DIExpression()), !dbg !9654
  store i32 0, i32* %_pos, align 4, !dbg !9654
  call void @llvm.dbg.declare(metadata i32* %_len, metadata !9656, metadata !DIExpression()), !dbg !9654
  store i32 1, i32* %_len, align 4, !dbg !9654
  call void @llvm.dbg.declare(metadata i32* %_val, metadata !9657, metadata !DIExpression()), !dbg !9654
  store i32 0, i32* %_val, align 4, !dbg !9654
  %4 = load i32, i32* %_val, align 4, !dbg !9654
  %5 = load i32, i32* %_pos, align 4, !dbg !9654
  %shl = shl i32 %4, %5, !dbg !9654
  %conv = sext i32 %shl to i64, !dbg !9654
  %6 = load i32, i32* %_pos, align 4, !dbg !9654
  %sh_prom = zext i32 %6 to i64, !dbg !9654
  %shl1 = shl i64 1, %sh_prom, !dbg !9654
  %sub = sub i64 -1, %shl1, !dbg !9654
  %add = add i64 %sub, 1, !dbg !9654
  %7 = load i32, i32* %_pos, align 4, !dbg !9654
  %8 = load i32, i32* %_len, align 4, !dbg !9654
  %add2 = add i32 %7, %8, !dbg !9654
  %sub3 = sub i32 %add2, 1, !dbg !9654
  %sub4 = sub i32 63, %sub3, !dbg !9654
  %sh_prom5 = zext i32 %sub4 to i64, !dbg !9654
  %shr = lshr i64 -1, %sh_prom5, !dbg !9654
  %and = and i64 %add, %shr, !dbg !9654
  %add6 = add i64 0, %and, !dbg !9654
  %and7 = and i64 %conv, %add6, !dbg !9654
  %conv8 = trunc i64 %and7 to i32, !dbg !9654
  store i32 %conv8, i32* %_val, align 4, !dbg !9654
  %9 = load i32, i32* %_var, align 4, !dbg !9654
  %conv9 = zext i32 %9 to i64, !dbg !9654
  %10 = load i32, i32* %_pos, align 4, !dbg !9654
  %sh_prom10 = zext i32 %10 to i64, !dbg !9654
  %shl11 = shl i64 1, %sh_prom10, !dbg !9654
  %sub12 = sub i64 -1, %shl11, !dbg !9654
  %add13 = add i64 %sub12, 1, !dbg !9654
  %11 = load i32, i32* %_pos, align 4, !dbg !9654
  %12 = load i32, i32* %_len, align 4, !dbg !9654
  %add14 = add i32 %11, %12, !dbg !9654
  %sub15 = sub i32 %add14, 1, !dbg !9654
  %sub16 = sub i32 63, %sub15, !dbg !9654
  %sh_prom17 = zext i32 %sub16 to i64, !dbg !9654
  %shr18 = lshr i64 -1, %sh_prom17, !dbg !9654
  %and19 = and i64 %add13, %shr18, !dbg !9654
  %add20 = add i64 0, %and19, !dbg !9654
  %neg = xor i64 %add20, -1, !dbg !9654
  %and21 = and i64 %conv9, %neg, !dbg !9654
  %13 = load i32, i32* %_val, align 4, !dbg !9654
  %conv22 = sext i32 %13 to i64, !dbg !9654
  %or = or i64 %and21, %conv22, !dbg !9654
  %conv23 = trunc i64 %or to i32, !dbg !9654
  store i32 %conv23, i32* %_var, align 4, !dbg !9654
  store i32 %conv23, i32* %tmp, align 4, !dbg !9654
  %14 = load i32, i32* %tmp, align 4, !dbg !9654
  store i32 %14, i32* %dma_ch_ier, align 4, !dbg !9658
  br label %sw.epilog, !dbg !9659

sw.bb24:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %_var25, metadata !9660, metadata !DIExpression()), !dbg !9662
  %15 = load i32, i32* %dma_ch_ier, align 4, !dbg !9662
  store i32 %15, i32* %_var25, align 4, !dbg !9662
  call void @llvm.dbg.declare(metadata i32* %_pos26, metadata !9663, metadata !DIExpression()), !dbg !9662
  store i32 1, i32* %_pos26, align 4, !dbg !9662
  call void @llvm.dbg.declare(metadata i32* %_len27, metadata !9664, metadata !DIExpression()), !dbg !9662
  store i32 1, i32* %_len27, align 4, !dbg !9662
  call void @llvm.dbg.declare(metadata i32* %_val28, metadata !9665, metadata !DIExpression()), !dbg !9662
  store i32 0, i32* %_val28, align 4, !dbg !9662
  %16 = load i32, i32* %_val28, align 4, !dbg !9662
  %17 = load i32, i32* %_pos26, align 4, !dbg !9662
  %shl29 = shl i32 %16, %17, !dbg !9662
  %conv30 = sext i32 %shl29 to i64, !dbg !9662
  %18 = load i32, i32* %_pos26, align 4, !dbg !9662
  %sh_prom31 = zext i32 %18 to i64, !dbg !9662
  %shl32 = shl i64 1, %sh_prom31, !dbg !9662
  %sub33 = sub i64 -1, %shl32, !dbg !9662
  %add34 = add i64 %sub33, 1, !dbg !9662
  %19 = load i32, i32* %_pos26, align 4, !dbg !9662
  %20 = load i32, i32* %_len27, align 4, !dbg !9662
  %add35 = add i32 %19, %20, !dbg !9662
  %sub36 = sub i32 %add35, 1, !dbg !9662
  %sub37 = sub i32 63, %sub36, !dbg !9662
  %sh_prom38 = zext i32 %sub37 to i64, !dbg !9662
  %shr39 = lshr i64 -1, %sh_prom38, !dbg !9662
  %and40 = and i64 %add34, %shr39, !dbg !9662
  %add41 = add i64 0, %and40, !dbg !9662
  %and42 = and i64 %conv30, %add41, !dbg !9662
  %conv43 = trunc i64 %and42 to i32, !dbg !9662
  store i32 %conv43, i32* %_val28, align 4, !dbg !9662
  %21 = load i32, i32* %_var25, align 4, !dbg !9662
  %conv45 = zext i32 %21 to i64, !dbg !9662
  %22 = load i32, i32* %_pos26, align 4, !dbg !9662
  %sh_prom46 = zext i32 %22 to i64, !dbg !9662
  %shl47 = shl i64 1, %sh_prom46, !dbg !9662
  %sub48 = sub i64 -1, %shl47, !dbg !9662
  %add49 = add i64 %sub48, 1, !dbg !9662
  %23 = load i32, i32* %_pos26, align 4, !dbg !9662
  %24 = load i32, i32* %_len27, align 4, !dbg !9662
  %add50 = add i32 %23, %24, !dbg !9662
  %sub51 = sub i32 %add50, 1, !dbg !9662
  %sub52 = sub i32 63, %sub51, !dbg !9662
  %sh_prom53 = zext i32 %sub52 to i64, !dbg !9662
  %shr54 = lshr i64 -1, %sh_prom53, !dbg !9662
  %and55 = and i64 %add49, %shr54, !dbg !9662
  %add56 = add i64 0, %and55, !dbg !9662
  %neg57 = xor i64 %add56, -1, !dbg !9662
  %and58 = and i64 %conv45, %neg57, !dbg !9662
  %25 = load i32, i32* %_val28, align 4, !dbg !9662
  %conv59 = sext i32 %25 to i64, !dbg !9662
  %or60 = or i64 %and58, %conv59, !dbg !9662
  %conv61 = trunc i64 %or60 to i32, !dbg !9662
  store i32 %conv61, i32* %_var25, align 4, !dbg !9662
  store i32 %conv61, i32* %tmp44, align 4, !dbg !9662
  %26 = load i32, i32* %tmp44, align 4, !dbg !9662
  store i32 %26, i32* %dma_ch_ier, align 4, !dbg !9666
  br label %sw.epilog, !dbg !9667

sw.bb62:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %_var63, metadata !9668, metadata !DIExpression()), !dbg !9670
  %27 = load i32, i32* %dma_ch_ier, align 4, !dbg !9670
  store i32 %27, i32* %_var63, align 4, !dbg !9670
  call void @llvm.dbg.declare(metadata i32* %_pos64, metadata !9671, metadata !DIExpression()), !dbg !9670
  store i32 2, i32* %_pos64, align 4, !dbg !9670
  call void @llvm.dbg.declare(metadata i32* %_len65, metadata !9672, metadata !DIExpression()), !dbg !9670
  store i32 1, i32* %_len65, align 4, !dbg !9670
  call void @llvm.dbg.declare(metadata i32* %_val66, metadata !9673, metadata !DIExpression()), !dbg !9670
  store i32 0, i32* %_val66, align 4, !dbg !9670
  %28 = load i32, i32* %_val66, align 4, !dbg !9670
  %29 = load i32, i32* %_pos64, align 4, !dbg !9670
  %shl67 = shl i32 %28, %29, !dbg !9670
  %conv68 = sext i32 %shl67 to i64, !dbg !9670
  %30 = load i32, i32* %_pos64, align 4, !dbg !9670
  %sh_prom69 = zext i32 %30 to i64, !dbg !9670
  %shl70 = shl i64 1, %sh_prom69, !dbg !9670
  %sub71 = sub i64 -1, %shl70, !dbg !9670
  %add72 = add i64 %sub71, 1, !dbg !9670
  %31 = load i32, i32* %_pos64, align 4, !dbg !9670
  %32 = load i32, i32* %_len65, align 4, !dbg !9670
  %add73 = add i32 %31, %32, !dbg !9670
  %sub74 = sub i32 %add73, 1, !dbg !9670
  %sub75 = sub i32 63, %sub74, !dbg !9670
  %sh_prom76 = zext i32 %sub75 to i64, !dbg !9670
  %shr77 = lshr i64 -1, %sh_prom76, !dbg !9670
  %and78 = and i64 %add72, %shr77, !dbg !9670
  %add79 = add i64 0, %and78, !dbg !9670
  %and80 = and i64 %conv68, %add79, !dbg !9670
  %conv81 = trunc i64 %and80 to i32, !dbg !9670
  store i32 %conv81, i32* %_val66, align 4, !dbg !9670
  %33 = load i32, i32* %_var63, align 4, !dbg !9670
  %conv83 = zext i32 %33 to i64, !dbg !9670
  %34 = load i32, i32* %_pos64, align 4, !dbg !9670
  %sh_prom84 = zext i32 %34 to i64, !dbg !9670
  %shl85 = shl i64 1, %sh_prom84, !dbg !9670
  %sub86 = sub i64 -1, %shl85, !dbg !9670
  %add87 = add i64 %sub86, 1, !dbg !9670
  %35 = load i32, i32* %_pos64, align 4, !dbg !9670
  %36 = load i32, i32* %_len65, align 4, !dbg !9670
  %add88 = add i32 %35, %36, !dbg !9670
  %sub89 = sub i32 %add88, 1, !dbg !9670
  %sub90 = sub i32 63, %sub89, !dbg !9670
  %sh_prom91 = zext i32 %sub90 to i64, !dbg !9670
  %shr92 = lshr i64 -1, %sh_prom91, !dbg !9670
  %and93 = and i64 %add87, %shr92, !dbg !9670
  %add94 = add i64 0, %and93, !dbg !9670
  %neg95 = xor i64 %add94, -1, !dbg !9670
  %and96 = and i64 %conv83, %neg95, !dbg !9670
  %37 = load i32, i32* %_val66, align 4, !dbg !9670
  %conv97 = sext i32 %37 to i64, !dbg !9670
  %or98 = or i64 %and96, %conv97, !dbg !9670
  %conv99 = trunc i64 %or98 to i32, !dbg !9670
  store i32 %conv99, i32* %_var63, align 4, !dbg !9670
  store i32 %conv99, i32* %tmp82, align 4, !dbg !9670
  %38 = load i32, i32* %tmp82, align 4, !dbg !9670
  store i32 %38, i32* %dma_ch_ier, align 4, !dbg !9674
  br label %sw.epilog, !dbg !9675

sw.bb100:                                         ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %_var101, metadata !9676, metadata !DIExpression()), !dbg !9678
  %39 = load i32, i32* %dma_ch_ier, align 4, !dbg !9678
  store i32 %39, i32* %_var101, align 4, !dbg !9678
  call void @llvm.dbg.declare(metadata i32* %_pos102, metadata !9679, metadata !DIExpression()), !dbg !9678
  store i32 6, i32* %_pos102, align 4, !dbg !9678
  call void @llvm.dbg.declare(metadata i32* %_len103, metadata !9680, metadata !DIExpression()), !dbg !9678
  store i32 1, i32* %_len103, align 4, !dbg !9678
  call void @llvm.dbg.declare(metadata i32* %_val104, metadata !9681, metadata !DIExpression()), !dbg !9678
  store i32 0, i32* %_val104, align 4, !dbg !9678
  %40 = load i32, i32* %_val104, align 4, !dbg !9678
  %41 = load i32, i32* %_pos102, align 4, !dbg !9678
  %shl105 = shl i32 %40, %41, !dbg !9678
  %conv106 = sext i32 %shl105 to i64, !dbg !9678
  %42 = load i32, i32* %_pos102, align 4, !dbg !9678
  %sh_prom107 = zext i32 %42 to i64, !dbg !9678
  %shl108 = shl i64 1, %sh_prom107, !dbg !9678
  %sub109 = sub i64 -1, %shl108, !dbg !9678
  %add110 = add i64 %sub109, 1, !dbg !9678
  %43 = load i32, i32* %_pos102, align 4, !dbg !9678
  %44 = load i32, i32* %_len103, align 4, !dbg !9678
  %add111 = add i32 %43, %44, !dbg !9678
  %sub112 = sub i32 %add111, 1, !dbg !9678
  %sub113 = sub i32 63, %sub112, !dbg !9678
  %sh_prom114 = zext i32 %sub113 to i64, !dbg !9678
  %shr115 = lshr i64 -1, %sh_prom114, !dbg !9678
  %and116 = and i64 %add110, %shr115, !dbg !9678
  %add117 = add i64 0, %and116, !dbg !9678
  %and118 = and i64 %conv106, %add117, !dbg !9678
  %conv119 = trunc i64 %and118 to i32, !dbg !9678
  store i32 %conv119, i32* %_val104, align 4, !dbg !9678
  %45 = load i32, i32* %_var101, align 4, !dbg !9678
  %conv121 = zext i32 %45 to i64, !dbg !9678
  %46 = load i32, i32* %_pos102, align 4, !dbg !9678
  %sh_prom122 = zext i32 %46 to i64, !dbg !9678
  %shl123 = shl i64 1, %sh_prom122, !dbg !9678
  %sub124 = sub i64 -1, %shl123, !dbg !9678
  %add125 = add i64 %sub124, 1, !dbg !9678
  %47 = load i32, i32* %_pos102, align 4, !dbg !9678
  %48 = load i32, i32* %_len103, align 4, !dbg !9678
  %add126 = add i32 %47, %48, !dbg !9678
  %sub127 = sub i32 %add126, 1, !dbg !9678
  %sub128 = sub i32 63, %sub127, !dbg !9678
  %sh_prom129 = zext i32 %sub128 to i64, !dbg !9678
  %shr130 = lshr i64 -1, %sh_prom129, !dbg !9678
  %and131 = and i64 %add125, %shr130, !dbg !9678
  %add132 = add i64 0, %and131, !dbg !9678
  %neg133 = xor i64 %add132, -1, !dbg !9678
  %and134 = and i64 %conv121, %neg133, !dbg !9678
  %49 = load i32, i32* %_val104, align 4, !dbg !9678
  %conv135 = sext i32 %49 to i64, !dbg !9678
  %or136 = or i64 %and134, %conv135, !dbg !9678
  %conv137 = trunc i64 %or136 to i32, !dbg !9678
  store i32 %conv137, i32* %_var101, align 4, !dbg !9678
  store i32 %conv137, i32* %tmp120, align 4, !dbg !9678
  %50 = load i32, i32* %tmp120, align 4, !dbg !9678
  store i32 %50, i32* %dma_ch_ier, align 4, !dbg !9682
  br label %sw.epilog, !dbg !9683

sw.bb138:                                         ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %_var139, metadata !9684, metadata !DIExpression()), !dbg !9686
  %51 = load i32, i32* %dma_ch_ier, align 4, !dbg !9686
  store i32 %51, i32* %_var139, align 4, !dbg !9686
  call void @llvm.dbg.declare(metadata i32* %_pos140, metadata !9687, metadata !DIExpression()), !dbg !9686
  store i32 7, i32* %_pos140, align 4, !dbg !9686
  call void @llvm.dbg.declare(metadata i32* %_len141, metadata !9688, metadata !DIExpression()), !dbg !9686
  store i32 1, i32* %_len141, align 4, !dbg !9686
  call void @llvm.dbg.declare(metadata i32* %_val142, metadata !9689, metadata !DIExpression()), !dbg !9686
  store i32 0, i32* %_val142, align 4, !dbg !9686
  %52 = load i32, i32* %_val142, align 4, !dbg !9686
  %53 = load i32, i32* %_pos140, align 4, !dbg !9686
  %shl143 = shl i32 %52, %53, !dbg !9686
  %conv144 = sext i32 %shl143 to i64, !dbg !9686
  %54 = load i32, i32* %_pos140, align 4, !dbg !9686
  %sh_prom145 = zext i32 %54 to i64, !dbg !9686
  %shl146 = shl i64 1, %sh_prom145, !dbg !9686
  %sub147 = sub i64 -1, %shl146, !dbg !9686
  %add148 = add i64 %sub147, 1, !dbg !9686
  %55 = load i32, i32* %_pos140, align 4, !dbg !9686
  %56 = load i32, i32* %_len141, align 4, !dbg !9686
  %add149 = add i32 %55, %56, !dbg !9686
  %sub150 = sub i32 %add149, 1, !dbg !9686
  %sub151 = sub i32 63, %sub150, !dbg !9686
  %sh_prom152 = zext i32 %sub151 to i64, !dbg !9686
  %shr153 = lshr i64 -1, %sh_prom152, !dbg !9686
  %and154 = and i64 %add148, %shr153, !dbg !9686
  %add155 = add i64 0, %and154, !dbg !9686
  %and156 = and i64 %conv144, %add155, !dbg !9686
  %conv157 = trunc i64 %and156 to i32, !dbg !9686
  store i32 %conv157, i32* %_val142, align 4, !dbg !9686
  %57 = load i32, i32* %_var139, align 4, !dbg !9686
  %conv159 = zext i32 %57 to i64, !dbg !9686
  %58 = load i32, i32* %_pos140, align 4, !dbg !9686
  %sh_prom160 = zext i32 %58 to i64, !dbg !9686
  %shl161 = shl i64 1, %sh_prom160, !dbg !9686
  %sub162 = sub i64 -1, %shl161, !dbg !9686
  %add163 = add i64 %sub162, 1, !dbg !9686
  %59 = load i32, i32* %_pos140, align 4, !dbg !9686
  %60 = load i32, i32* %_len141, align 4, !dbg !9686
  %add164 = add i32 %59, %60, !dbg !9686
  %sub165 = sub i32 %add164, 1, !dbg !9686
  %sub166 = sub i32 63, %sub165, !dbg !9686
  %sh_prom167 = zext i32 %sub166 to i64, !dbg !9686
  %shr168 = lshr i64 -1, %sh_prom167, !dbg !9686
  %and169 = and i64 %add163, %shr168, !dbg !9686
  %add170 = add i64 0, %and169, !dbg !9686
  %neg171 = xor i64 %add170, -1, !dbg !9686
  %and172 = and i64 %conv159, %neg171, !dbg !9686
  %61 = load i32, i32* %_val142, align 4, !dbg !9686
  %conv173 = sext i32 %61 to i64, !dbg !9686
  %or174 = or i64 %and172, %conv173, !dbg !9686
  %conv175 = trunc i64 %or174 to i32, !dbg !9686
  store i32 %conv175, i32* %_var139, align 4, !dbg !9686
  store i32 %conv175, i32* %tmp158, align 4, !dbg !9686
  %62 = load i32, i32* %tmp158, align 4, !dbg !9686
  store i32 %62, i32* %dma_ch_ier, align 4, !dbg !9690
  br label %sw.epilog, !dbg !9691

sw.bb176:                                         ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %_var177, metadata !9692, metadata !DIExpression()), !dbg !9694
  %63 = load i32, i32* %dma_ch_ier, align 4, !dbg !9694
  store i32 %63, i32* %_var177, align 4, !dbg !9694
  call void @llvm.dbg.declare(metadata i32* %_pos178, metadata !9695, metadata !DIExpression()), !dbg !9694
  store i32 8, i32* %_pos178, align 4, !dbg !9694
  call void @llvm.dbg.declare(metadata i32* %_len179, metadata !9696, metadata !DIExpression()), !dbg !9694
  store i32 1, i32* %_len179, align 4, !dbg !9694
  call void @llvm.dbg.declare(metadata i32* %_val180, metadata !9697, metadata !DIExpression()), !dbg !9694
  store i32 0, i32* %_val180, align 4, !dbg !9694
  %64 = load i32, i32* %_val180, align 4, !dbg !9694
  %65 = load i32, i32* %_pos178, align 4, !dbg !9694
  %shl181 = shl i32 %64, %65, !dbg !9694
  %conv182 = sext i32 %shl181 to i64, !dbg !9694
  %66 = load i32, i32* %_pos178, align 4, !dbg !9694
  %sh_prom183 = zext i32 %66 to i64, !dbg !9694
  %shl184 = shl i64 1, %sh_prom183, !dbg !9694
  %sub185 = sub i64 -1, %shl184, !dbg !9694
  %add186 = add i64 %sub185, 1, !dbg !9694
  %67 = load i32, i32* %_pos178, align 4, !dbg !9694
  %68 = load i32, i32* %_len179, align 4, !dbg !9694
  %add187 = add i32 %67, %68, !dbg !9694
  %sub188 = sub i32 %add187, 1, !dbg !9694
  %sub189 = sub i32 63, %sub188, !dbg !9694
  %sh_prom190 = zext i32 %sub189 to i64, !dbg !9694
  %shr191 = lshr i64 -1, %sh_prom190, !dbg !9694
  %and192 = and i64 %add186, %shr191, !dbg !9694
  %add193 = add i64 0, %and192, !dbg !9694
  %and194 = and i64 %conv182, %add193, !dbg !9694
  %conv195 = trunc i64 %and194 to i32, !dbg !9694
  store i32 %conv195, i32* %_val180, align 4, !dbg !9694
  %69 = load i32, i32* %_var177, align 4, !dbg !9694
  %conv197 = zext i32 %69 to i64, !dbg !9694
  %70 = load i32, i32* %_pos178, align 4, !dbg !9694
  %sh_prom198 = zext i32 %70 to i64, !dbg !9694
  %shl199 = shl i64 1, %sh_prom198, !dbg !9694
  %sub200 = sub i64 -1, %shl199, !dbg !9694
  %add201 = add i64 %sub200, 1, !dbg !9694
  %71 = load i32, i32* %_pos178, align 4, !dbg !9694
  %72 = load i32, i32* %_len179, align 4, !dbg !9694
  %add202 = add i32 %71, %72, !dbg !9694
  %sub203 = sub i32 %add202, 1, !dbg !9694
  %sub204 = sub i32 63, %sub203, !dbg !9694
  %sh_prom205 = zext i32 %sub204 to i64, !dbg !9694
  %shr206 = lshr i64 -1, %sh_prom205, !dbg !9694
  %and207 = and i64 %add201, %shr206, !dbg !9694
  %add208 = add i64 0, %and207, !dbg !9694
  %neg209 = xor i64 %add208, -1, !dbg !9694
  %and210 = and i64 %conv197, %neg209, !dbg !9694
  %73 = load i32, i32* %_val180, align 4, !dbg !9694
  %conv211 = sext i32 %73 to i64, !dbg !9694
  %or212 = or i64 %and210, %conv211, !dbg !9694
  %conv213 = trunc i64 %or212 to i32, !dbg !9694
  store i32 %conv213, i32* %_var177, align 4, !dbg !9694
  store i32 %conv213, i32* %tmp196, align 4, !dbg !9694
  %74 = load i32, i32* %tmp196, align 4, !dbg !9694
  store i32 %74, i32* %dma_ch_ier, align 4, !dbg !9698
  br label %sw.epilog, !dbg !9699

sw.bb214:                                         ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %_var215, metadata !9700, metadata !DIExpression()), !dbg !9702
  %75 = load i32, i32* %dma_ch_ier, align 4, !dbg !9702
  store i32 %75, i32* %_var215, align 4, !dbg !9702
  call void @llvm.dbg.declare(metadata i32* %_pos216, metadata !9703, metadata !DIExpression()), !dbg !9702
  store i32 0, i32* %_pos216, align 4, !dbg !9702
  call void @llvm.dbg.declare(metadata i32* %_len217, metadata !9704, metadata !DIExpression()), !dbg !9702
  store i32 1, i32* %_len217, align 4, !dbg !9702
  call void @llvm.dbg.declare(metadata i32* %_val218, metadata !9705, metadata !DIExpression()), !dbg !9702
  store i32 0, i32* %_val218, align 4, !dbg !9702
  %76 = load i32, i32* %_val218, align 4, !dbg !9702
  %77 = load i32, i32* %_pos216, align 4, !dbg !9702
  %shl219 = shl i32 %76, %77, !dbg !9702
  %conv220 = sext i32 %shl219 to i64, !dbg !9702
  %78 = load i32, i32* %_pos216, align 4, !dbg !9702
  %sh_prom221 = zext i32 %78 to i64, !dbg !9702
  %shl222 = shl i64 1, %sh_prom221, !dbg !9702
  %sub223 = sub i64 -1, %shl222, !dbg !9702
  %add224 = add i64 %sub223, 1, !dbg !9702
  %79 = load i32, i32* %_pos216, align 4, !dbg !9702
  %80 = load i32, i32* %_len217, align 4, !dbg !9702
  %add225 = add i32 %79, %80, !dbg !9702
  %sub226 = sub i32 %add225, 1, !dbg !9702
  %sub227 = sub i32 63, %sub226, !dbg !9702
  %sh_prom228 = zext i32 %sub227 to i64, !dbg !9702
  %shr229 = lshr i64 -1, %sh_prom228, !dbg !9702
  %and230 = and i64 %add224, %shr229, !dbg !9702
  %add231 = add i64 0, %and230, !dbg !9702
  %and232 = and i64 %conv220, %add231, !dbg !9702
  %conv233 = trunc i64 %and232 to i32, !dbg !9702
  store i32 %conv233, i32* %_val218, align 4, !dbg !9702
  %81 = load i32, i32* %_var215, align 4, !dbg !9702
  %conv235 = zext i32 %81 to i64, !dbg !9702
  %82 = load i32, i32* %_pos216, align 4, !dbg !9702
  %sh_prom236 = zext i32 %82 to i64, !dbg !9702
  %shl237 = shl i64 1, %sh_prom236, !dbg !9702
  %sub238 = sub i64 -1, %shl237, !dbg !9702
  %add239 = add i64 %sub238, 1, !dbg !9702
  %83 = load i32, i32* %_pos216, align 4, !dbg !9702
  %84 = load i32, i32* %_len217, align 4, !dbg !9702
  %add240 = add i32 %83, %84, !dbg !9702
  %sub241 = sub i32 %add240, 1, !dbg !9702
  %sub242 = sub i32 63, %sub241, !dbg !9702
  %sh_prom243 = zext i32 %sub242 to i64, !dbg !9702
  %shr244 = lshr i64 -1, %sh_prom243, !dbg !9702
  %and245 = and i64 %add239, %shr244, !dbg !9702
  %add246 = add i64 0, %and245, !dbg !9702
  %neg247 = xor i64 %add246, -1, !dbg !9702
  %and248 = and i64 %conv235, %neg247, !dbg !9702
  %85 = load i32, i32* %_val218, align 4, !dbg !9702
  %conv249 = sext i32 %85 to i64, !dbg !9702
  %or250 = or i64 %and248, %conv249, !dbg !9702
  %conv251 = trunc i64 %or250 to i32, !dbg !9702
  store i32 %conv251, i32* %_var215, align 4, !dbg !9702
  store i32 %conv251, i32* %tmp234, align 4, !dbg !9702
  %86 = load i32, i32* %tmp234, align 4, !dbg !9702
  store i32 %86, i32* %dma_ch_ier, align 4, !dbg !9706
  call void @llvm.dbg.declare(metadata i32* %_var252, metadata !9707, metadata !DIExpression()), !dbg !9709
  %87 = load i32, i32* %dma_ch_ier, align 4, !dbg !9709
  store i32 %87, i32* %_var252, align 4, !dbg !9709
  call void @llvm.dbg.declare(metadata i32* %_pos253, metadata !9710, metadata !DIExpression()), !dbg !9709
  store i32 6, i32* %_pos253, align 4, !dbg !9709
  call void @llvm.dbg.declare(metadata i32* %_len254, metadata !9711, metadata !DIExpression()), !dbg !9709
  store i32 1, i32* %_len254, align 4, !dbg !9709
  call void @llvm.dbg.declare(metadata i32* %_val255, metadata !9712, metadata !DIExpression()), !dbg !9709
  store i32 0, i32* %_val255, align 4, !dbg !9709
  %88 = load i32, i32* %_val255, align 4, !dbg !9709
  %89 = load i32, i32* %_pos253, align 4, !dbg !9709
  %shl256 = shl i32 %88, %89, !dbg !9709
  %conv257 = sext i32 %shl256 to i64, !dbg !9709
  %90 = load i32, i32* %_pos253, align 4, !dbg !9709
  %sh_prom258 = zext i32 %90 to i64, !dbg !9709
  %shl259 = shl i64 1, %sh_prom258, !dbg !9709
  %sub260 = sub i64 -1, %shl259, !dbg !9709
  %add261 = add i64 %sub260, 1, !dbg !9709
  %91 = load i32, i32* %_pos253, align 4, !dbg !9709
  %92 = load i32, i32* %_len254, align 4, !dbg !9709
  %add262 = add i32 %91, %92, !dbg !9709
  %sub263 = sub i32 %add262, 1, !dbg !9709
  %sub264 = sub i32 63, %sub263, !dbg !9709
  %sh_prom265 = zext i32 %sub264 to i64, !dbg !9709
  %shr266 = lshr i64 -1, %sh_prom265, !dbg !9709
  %and267 = and i64 %add261, %shr266, !dbg !9709
  %add268 = add i64 0, %and267, !dbg !9709
  %and269 = and i64 %conv257, %add268, !dbg !9709
  %conv270 = trunc i64 %and269 to i32, !dbg !9709
  store i32 %conv270, i32* %_val255, align 4, !dbg !9709
  %93 = load i32, i32* %_var252, align 4, !dbg !9709
  %conv272 = zext i32 %93 to i64, !dbg !9709
  %94 = load i32, i32* %_pos253, align 4, !dbg !9709
  %sh_prom273 = zext i32 %94 to i64, !dbg !9709
  %shl274 = shl i64 1, %sh_prom273, !dbg !9709
  %sub275 = sub i64 -1, %shl274, !dbg !9709
  %add276 = add i64 %sub275, 1, !dbg !9709
  %95 = load i32, i32* %_pos253, align 4, !dbg !9709
  %96 = load i32, i32* %_len254, align 4, !dbg !9709
  %add277 = add i32 %95, %96, !dbg !9709
  %sub278 = sub i32 %add277, 1, !dbg !9709
  %sub279 = sub i32 63, %sub278, !dbg !9709
  %sh_prom280 = zext i32 %sub279 to i64, !dbg !9709
  %shr281 = lshr i64 -1, %sh_prom280, !dbg !9709
  %and282 = and i64 %add276, %shr281, !dbg !9709
  %add283 = add i64 0, %and282, !dbg !9709
  %neg284 = xor i64 %add283, -1, !dbg !9709
  %and285 = and i64 %conv272, %neg284, !dbg !9709
  %97 = load i32, i32* %_val255, align 4, !dbg !9709
  %conv286 = sext i32 %97 to i64, !dbg !9709
  %or287 = or i64 %and285, %conv286, !dbg !9709
  %conv288 = trunc i64 %or287 to i32, !dbg !9709
  store i32 %conv288, i32* %_var252, align 4, !dbg !9709
  store i32 %conv288, i32* %tmp271, align 4, !dbg !9709
  %98 = load i32, i32* %tmp271, align 4, !dbg !9709
  store i32 %98, i32* %dma_ch_ier, align 4, !dbg !9713
  br label %sw.epilog, !dbg !9714

sw.bb289:                                         ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %_var290, metadata !9715, metadata !DIExpression()), !dbg !9717
  %99 = load i32, i32* %dma_ch_ier, align 4, !dbg !9717
  store i32 %99, i32* %_var290, align 4, !dbg !9717
  call void @llvm.dbg.declare(metadata i32* %_pos291, metadata !9718, metadata !DIExpression()), !dbg !9717
  store i32 12, i32* %_pos291, align 4, !dbg !9717
  call void @llvm.dbg.declare(metadata i32* %_len292, metadata !9719, metadata !DIExpression()), !dbg !9717
  store i32 1, i32* %_len292, align 4, !dbg !9717
  call void @llvm.dbg.declare(metadata i32* %_val293, metadata !9720, metadata !DIExpression()), !dbg !9717
  store i32 0, i32* %_val293, align 4, !dbg !9717
  %100 = load i32, i32* %_val293, align 4, !dbg !9717
  %101 = load i32, i32* %_pos291, align 4, !dbg !9717
  %shl294 = shl i32 %100, %101, !dbg !9717
  %conv295 = sext i32 %shl294 to i64, !dbg !9717
  %102 = load i32, i32* %_pos291, align 4, !dbg !9717
  %sh_prom296 = zext i32 %102 to i64, !dbg !9717
  %shl297 = shl i64 1, %sh_prom296, !dbg !9717
  %sub298 = sub i64 -1, %shl297, !dbg !9717
  %add299 = add i64 %sub298, 1, !dbg !9717
  %103 = load i32, i32* %_pos291, align 4, !dbg !9717
  %104 = load i32, i32* %_len292, align 4, !dbg !9717
  %add300 = add i32 %103, %104, !dbg !9717
  %sub301 = sub i32 %add300, 1, !dbg !9717
  %sub302 = sub i32 63, %sub301, !dbg !9717
  %sh_prom303 = zext i32 %sub302 to i64, !dbg !9717
  %shr304 = lshr i64 -1, %sh_prom303, !dbg !9717
  %and305 = and i64 %add299, %shr304, !dbg !9717
  %add306 = add i64 0, %and305, !dbg !9717
  %and307 = and i64 %conv295, %add306, !dbg !9717
  %conv308 = trunc i64 %and307 to i32, !dbg !9717
  store i32 %conv308, i32* %_val293, align 4, !dbg !9717
  %105 = load i32, i32* %_var290, align 4, !dbg !9717
  %conv310 = zext i32 %105 to i64, !dbg !9717
  %106 = load i32, i32* %_pos291, align 4, !dbg !9717
  %sh_prom311 = zext i32 %106 to i64, !dbg !9717
  %shl312 = shl i64 1, %sh_prom311, !dbg !9717
  %sub313 = sub i64 -1, %shl312, !dbg !9717
  %add314 = add i64 %sub313, 1, !dbg !9717
  %107 = load i32, i32* %_pos291, align 4, !dbg !9717
  %108 = load i32, i32* %_len292, align 4, !dbg !9717
  %add315 = add i32 %107, %108, !dbg !9717
  %sub316 = sub i32 %add315, 1, !dbg !9717
  %sub317 = sub i32 63, %sub316, !dbg !9717
  %sh_prom318 = zext i32 %sub317 to i64, !dbg !9717
  %shr319 = lshr i64 -1, %sh_prom318, !dbg !9717
  %and320 = and i64 %add314, %shr319, !dbg !9717
  %add321 = add i64 0, %and320, !dbg !9717
  %neg322 = xor i64 %add321, -1, !dbg !9717
  %and323 = and i64 %conv310, %neg322, !dbg !9717
  %109 = load i32, i32* %_val293, align 4, !dbg !9717
  %conv324 = sext i32 %109 to i64, !dbg !9717
  %or325 = or i64 %and323, %conv324, !dbg !9717
  %conv326 = trunc i64 %or325 to i32, !dbg !9717
  store i32 %conv326, i32* %_var290, align 4, !dbg !9717
  store i32 %conv326, i32* %tmp309, align 4, !dbg !9717
  %110 = load i32, i32* %tmp309, align 4, !dbg !9717
  store i32 %110, i32* %dma_ch_ier, align 4, !dbg !9721
  br label %sw.epilog, !dbg !9722

sw.bb327:                                         ; preds = %entry
  %111 = load i32, i32* %dma_ch_ier, align 4, !dbg !9723
  %and328 = and i32 %111, 12743, !dbg !9724
  %112 = load %struct.xlgmac_channel*, %struct.xlgmac_channel** %channel.addr, align 8, !dbg !9725
  %saved_ier = getelementptr inbounds %struct.xlgmac_channel, %struct.xlgmac_channel* %112, i32 0, i32 7, !dbg !9726
  store i32 %and328, i32* %saved_ier, align 32, !dbg !9727
  %113 = load i32, i32* %dma_ch_ier, align 4, !dbg !9728
  %and329 = and i32 %113, -12744, !dbg !9728
  store i32 %and329, i32* %dma_ch_ier, align 4, !dbg !9728
  br label %sw.epilog, !dbg !9729

sw.default:                                       ; preds = %entry
  store i32 -1, i32* %retval, align 4, !dbg !9730
  br label %return, !dbg !9730

sw.epilog:                                        ; preds = %sw.bb327, %sw.bb289, %sw.bb214, %sw.bb176, %sw.bb138, %sw.bb100, %sw.bb62, %sw.bb24, %sw.bb
  %114 = load i32, i32* %dma_ch_ier, align 4, !dbg !9731
  %115 = load %struct.xlgmac_channel*, %struct.xlgmac_channel** %channel.addr, align 8, !dbg !9732
  %dma_regs330 = getelementptr inbounds %struct.xlgmac_channel, %struct.xlgmac_channel* %115, i32 0, i32 3, !dbg !9732
  %116 = load i8*, i8** %dma_regs330, align 32, !dbg !9732
  %add.ptr331 = getelementptr i8, i8* %116, i64 56, !dbg !9732
  call void @writel(i32 %114, i8* %add.ptr331) #7, !dbg !9733
  store i32 0, i32* %retval, align 4, !dbg !9734
  br label %return, !dbg !9734

return:                                           ; preds = %sw.epilog, %sw.default
  %117 = load i32, i32* %retval, align 4, !dbg !9735
  ret i32 %117, !dbg !9735
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @xlgmac_set_mac_address(%struct.xlgmac_pdata* %pdata, i8* %addr) #0 !dbg !9736 {
entry:
  %pdata.addr = alloca %struct.xlgmac_pdata*, align 8
  %addr.addr = alloca i8*, align 8
  %mac_addr_hi = alloca i32, align 4
  %mac_addr_lo = alloca i32, align 4
  store %struct.xlgmac_pdata* %pdata, %struct.xlgmac_pdata** %pdata.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xlgmac_pdata** %pdata.addr, metadata !9737, metadata !DIExpression()), !dbg !9738
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !9739, metadata !DIExpression()), !dbg !9740
  call void @llvm.dbg.declare(metadata i32* %mac_addr_hi, metadata !9741, metadata !DIExpression()), !dbg !9742
  call void @llvm.dbg.declare(metadata i32* %mac_addr_lo, metadata !9743, metadata !DIExpression()), !dbg !9744
  %0 = load i8*, i8** %addr.addr, align 8, !dbg !9745
  %arrayidx = getelementptr i8, i8* %0, i64 5, !dbg !9745
  %1 = load i8, i8* %arrayidx, align 1, !dbg !9745
  %conv = zext i8 %1 to i32, !dbg !9745
  %shl = shl i32 %conv, 8, !dbg !9746
  %2 = load i8*, i8** %addr.addr, align 8, !dbg !9747
  %arrayidx1 = getelementptr i8, i8* %2, i64 4, !dbg !9747
  %3 = load i8, i8* %arrayidx1, align 1, !dbg !9747
  %conv2 = zext i8 %3 to i32, !dbg !9747
  %shl3 = shl i32 %conv2, 0, !dbg !9748
  %or = or i32 %shl, %shl3, !dbg !9749
  store i32 %or, i32* %mac_addr_hi, align 4, !dbg !9750
  %4 = load i8*, i8** %addr.addr, align 8, !dbg !9751
  %arrayidx4 = getelementptr i8, i8* %4, i64 3, !dbg !9751
  %5 = load i8, i8* %arrayidx4, align 1, !dbg !9751
  %conv5 = zext i8 %5 to i32, !dbg !9751
  %shl6 = shl i32 %conv5, 24, !dbg !9752
  %6 = load i8*, i8** %addr.addr, align 8, !dbg !9753
  %arrayidx7 = getelementptr i8, i8* %6, i64 2, !dbg !9753
  %7 = load i8, i8* %arrayidx7, align 1, !dbg !9753
  %conv8 = zext i8 %7 to i32, !dbg !9753
  %shl9 = shl i32 %conv8, 16, !dbg !9754
  %or10 = or i32 %shl6, %shl9, !dbg !9755
  %8 = load i8*, i8** %addr.addr, align 8, !dbg !9756
  %arrayidx11 = getelementptr i8, i8* %8, i64 1, !dbg !9756
  %9 = load i8, i8* %arrayidx11, align 1, !dbg !9756
  %conv12 = zext i8 %9 to i32, !dbg !9756
  %shl13 = shl i32 %conv12, 8, !dbg !9757
  %or14 = or i32 %or10, %shl13, !dbg !9758
  %10 = load i8*, i8** %addr.addr, align 8, !dbg !9759
  %arrayidx15 = getelementptr i8, i8* %10, i64 0, !dbg !9759
  %11 = load i8, i8* %arrayidx15, align 1, !dbg !9759
  %conv16 = zext i8 %11 to i32, !dbg !9759
  %shl17 = shl i32 %conv16, 0, !dbg !9760
  %or18 = or i32 %or14, %shl17, !dbg !9761
  store i32 %or18, i32* %mac_addr_lo, align 4, !dbg !9762
  %12 = load i32, i32* %mac_addr_hi, align 4, !dbg !9763
  %13 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !9764
  %mac_regs = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %13, i32 0, i32 6, !dbg !9765
  %14 = load i8*, i8** %mac_regs, align 8, !dbg !9765
  %add.ptr = getelementptr i8, i8* %14, i64 768, !dbg !9766
  call void @writel(i32 %12, i8* %add.ptr) #7, !dbg !9767
  %15 = load i32, i32* %mac_addr_lo, align 4, !dbg !9768
  %16 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !9769
  %mac_regs19 = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %16, i32 0, i32 6, !dbg !9770
  %17 = load i8*, i8** %mac_regs19, align 8, !dbg !9770
  %add.ptr20 = getelementptr i8, i8* %17, i64 772, !dbg !9771
  call void @writel(i32 %15, i8* %add.ptr20) #7, !dbg !9772
  ret i32 0, !dbg !9773
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @xlgmac_config_rx_mode(%struct.xlgmac_pdata* %pdata) #0 !dbg !9774 {
entry:
  %pdata.addr = alloca %struct.xlgmac_pdata*, align 8
  %netdev = alloca %struct.net_device*, align 8
  %pr_mode = alloca i32, align 4
  %am_mode = alloca i32, align 4
  store %struct.xlgmac_pdata* %pdata, %struct.xlgmac_pdata** %pdata.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xlgmac_pdata** %pdata.addr, metadata !9775, metadata !DIExpression()), !dbg !9776
  call void @llvm.dbg.declare(metadata %struct.net_device** %netdev, metadata !9777, metadata !DIExpression()), !dbg !9778
  %0 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !9779
  %netdev1 = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %0, i32 0, i32 0, !dbg !9780
  %1 = load %struct.net_device*, %struct.net_device** %netdev1, align 8, !dbg !9780
  store %struct.net_device* %1, %struct.net_device** %netdev, align 8, !dbg !9778
  call void @llvm.dbg.declare(metadata i32* %pr_mode, metadata !9781, metadata !DIExpression()), !dbg !9782
  call void @llvm.dbg.declare(metadata i32* %am_mode, metadata !9783, metadata !DIExpression()), !dbg !9784
  %2 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !9785
  %flags = getelementptr inbounds %struct.net_device, %struct.net_device* %2, i32 0, i32 36, !dbg !9786
  %3 = load i32, i32* %flags, align 8, !dbg !9786
  %and = and i32 %3, 256, !dbg !9787
  %cmp = icmp ne i32 %and, 0, !dbg !9788
  %conv = zext i1 %cmp to i32, !dbg !9788
  store i32 %conv, i32* %pr_mode, align 4, !dbg !9789
  %4 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !9790
  %flags2 = getelementptr inbounds %struct.net_device, %struct.net_device* %4, i32 0, i32 36, !dbg !9791
  %5 = load i32, i32* %flags2, align 8, !dbg !9791
  %and3 = and i32 %5, 512, !dbg !9792
  %cmp4 = icmp ne i32 %and3, 0, !dbg !9793
  %conv5 = zext i1 %cmp4 to i32, !dbg !9793
  store i32 %conv5, i32* %am_mode, align 4, !dbg !9794
  %6 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !9795
  %7 = load i32, i32* %pr_mode, align 4, !dbg !9796
  %call = call i32 @xlgmac_set_promiscuous_mode(%struct.xlgmac_pdata* %6, i32 %7) #7, !dbg !9797
  %8 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !9798
  %9 = load i32, i32* %am_mode, align 4, !dbg !9799
  %call6 = call i32 @xlgmac_set_all_multicast_mode(%struct.xlgmac_pdata* %8, i32 %9) #7, !dbg !9800
  %10 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !9801
  %call7 = call i32 @xlgmac_add_mac_addresses(%struct.xlgmac_pdata* %10) #7, !dbg !9802
  ret i32 0, !dbg !9803
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @xlgmac_enable_rx_csum(%struct.xlgmac_pdata* %pdata) #0 !dbg !9804 {
entry:
  %pdata.addr = alloca %struct.xlgmac_pdata*, align 8
  %regval = alloca i32, align 4
  %_var = alloca i32, align 4
  %_pos = alloca i32, align 4
  %_len = alloca i32, align 4
  %_val = alloca i32, align 4
  %tmp = alloca i32, align 4
  store %struct.xlgmac_pdata* %pdata, %struct.xlgmac_pdata** %pdata.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xlgmac_pdata** %pdata.addr, metadata !9805, metadata !DIExpression()), !dbg !9806
  call void @llvm.dbg.declare(metadata i32* %regval, metadata !9807, metadata !DIExpression()), !dbg !9808
  %0 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !9809
  %mac_regs = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %0, i32 0, i32 6, !dbg !9810
  %1 = load i8*, i8** %mac_regs, align 8, !dbg !9810
  %add.ptr = getelementptr i8, i8* %1, i64 4, !dbg !9811
  %call = call i32 @readl(i8* %add.ptr) #7, !dbg !9812
  store i32 %call, i32* %regval, align 4, !dbg !9813
  call void @llvm.dbg.declare(metadata i32* %_var, metadata !9814, metadata !DIExpression()), !dbg !9816
  %2 = load i32, i32* %regval, align 4, !dbg !9816
  store i32 %2, i32* %_var, align 4, !dbg !9816
  call void @llvm.dbg.declare(metadata i32* %_pos, metadata !9817, metadata !DIExpression()), !dbg !9816
  store i32 9, i32* %_pos, align 4, !dbg !9816
  call void @llvm.dbg.declare(metadata i32* %_len, metadata !9818, metadata !DIExpression()), !dbg !9816
  store i32 1, i32* %_len, align 4, !dbg !9816
  call void @llvm.dbg.declare(metadata i32* %_val, metadata !9819, metadata !DIExpression()), !dbg !9816
  store i32 1, i32* %_val, align 4, !dbg !9816
  %3 = load i32, i32* %_val, align 4, !dbg !9816
  %4 = load i32, i32* %_pos, align 4, !dbg !9816
  %shl = shl i32 %3, %4, !dbg !9816
  %conv = sext i32 %shl to i64, !dbg !9816
  %5 = load i32, i32* %_pos, align 4, !dbg !9816
  %sh_prom = zext i32 %5 to i64, !dbg !9816
  %shl1 = shl i64 1, %sh_prom, !dbg !9816
  %sub = sub i64 -1, %shl1, !dbg !9816
  %add = add i64 %sub, 1, !dbg !9816
  %6 = load i32, i32* %_pos, align 4, !dbg !9816
  %7 = load i32, i32* %_len, align 4, !dbg !9816
  %add2 = add i32 %6, %7, !dbg !9816
  %sub3 = sub i32 %add2, 1, !dbg !9816
  %sub4 = sub i32 63, %sub3, !dbg !9816
  %sh_prom5 = zext i32 %sub4 to i64, !dbg !9816
  %shr = lshr i64 -1, %sh_prom5, !dbg !9816
  %and = and i64 %add, %shr, !dbg !9816
  %add6 = add i64 0, %and, !dbg !9816
  %and7 = and i64 %conv, %add6, !dbg !9816
  %conv8 = trunc i64 %and7 to i32, !dbg !9816
  store i32 %conv8, i32* %_val, align 4, !dbg !9816
  %8 = load i32, i32* %_var, align 4, !dbg !9816
  %conv9 = zext i32 %8 to i64, !dbg !9816
  %9 = load i32, i32* %_pos, align 4, !dbg !9816
  %sh_prom10 = zext i32 %9 to i64, !dbg !9816
  %shl11 = shl i64 1, %sh_prom10, !dbg !9816
  %sub12 = sub i64 -1, %shl11, !dbg !9816
  %add13 = add i64 %sub12, 1, !dbg !9816
  %10 = load i32, i32* %_pos, align 4, !dbg !9816
  %11 = load i32, i32* %_len, align 4, !dbg !9816
  %add14 = add i32 %10, %11, !dbg !9816
  %sub15 = sub i32 %add14, 1, !dbg !9816
  %sub16 = sub i32 63, %sub15, !dbg !9816
  %sh_prom17 = zext i32 %sub16 to i64, !dbg !9816
  %shr18 = lshr i64 -1, %sh_prom17, !dbg !9816
  %and19 = and i64 %add13, %shr18, !dbg !9816
  %add20 = add i64 0, %and19, !dbg !9816
  %neg = xor i64 %add20, -1, !dbg !9816
  %and21 = and i64 %conv9, %neg, !dbg !9816
  %12 = load i32, i32* %_val, align 4, !dbg !9816
  %conv22 = sext i32 %12 to i64, !dbg !9816
  %or = or i64 %and21, %conv22, !dbg !9816
  %conv23 = trunc i64 %or to i32, !dbg !9816
  store i32 %conv23, i32* %_var, align 4, !dbg !9816
  store i32 %conv23, i32* %tmp, align 4, !dbg !9816
  %13 = load i32, i32* %tmp, align 4, !dbg !9816
  store i32 %13, i32* %regval, align 4, !dbg !9820
  %14 = load i32, i32* %regval, align 4, !dbg !9821
  %15 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !9822
  %mac_regs24 = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %15, i32 0, i32 6, !dbg !9823
  %16 = load i8*, i8** %mac_regs24, align 8, !dbg !9823
  %add.ptr25 = getelementptr i8, i8* %16, i64 4, !dbg !9824
  call void @writel(i32 %14, i8* %add.ptr25) #7, !dbg !9825
  ret i32 0, !dbg !9826
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @xlgmac_disable_rx_csum(%struct.xlgmac_pdata* %pdata) #0 !dbg !9827 {
entry:
  %pdata.addr = alloca %struct.xlgmac_pdata*, align 8
  %regval = alloca i32, align 4
  %_var = alloca i32, align 4
  %_pos = alloca i32, align 4
  %_len = alloca i32, align 4
  %_val = alloca i32, align 4
  %tmp = alloca i32, align 4
  store %struct.xlgmac_pdata* %pdata, %struct.xlgmac_pdata** %pdata.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xlgmac_pdata** %pdata.addr, metadata !9828, metadata !DIExpression()), !dbg !9829
  call void @llvm.dbg.declare(metadata i32* %regval, metadata !9830, metadata !DIExpression()), !dbg !9831
  %0 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !9832
  %mac_regs = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %0, i32 0, i32 6, !dbg !9833
  %1 = load i8*, i8** %mac_regs, align 8, !dbg !9833
  %add.ptr = getelementptr i8, i8* %1, i64 4, !dbg !9834
  %call = call i32 @readl(i8* %add.ptr) #7, !dbg !9835
  store i32 %call, i32* %regval, align 4, !dbg !9836
  call void @llvm.dbg.declare(metadata i32* %_var, metadata !9837, metadata !DIExpression()), !dbg !9839
  %2 = load i32, i32* %regval, align 4, !dbg !9839
  store i32 %2, i32* %_var, align 4, !dbg !9839
  call void @llvm.dbg.declare(metadata i32* %_pos, metadata !9840, metadata !DIExpression()), !dbg !9839
  store i32 9, i32* %_pos, align 4, !dbg !9839
  call void @llvm.dbg.declare(metadata i32* %_len, metadata !9841, metadata !DIExpression()), !dbg !9839
  store i32 1, i32* %_len, align 4, !dbg !9839
  call void @llvm.dbg.declare(metadata i32* %_val, metadata !9842, metadata !DIExpression()), !dbg !9839
  store i32 0, i32* %_val, align 4, !dbg !9839
  %3 = load i32, i32* %_val, align 4, !dbg !9839
  %4 = load i32, i32* %_pos, align 4, !dbg !9839
  %shl = shl i32 %3, %4, !dbg !9839
  %conv = sext i32 %shl to i64, !dbg !9839
  %5 = load i32, i32* %_pos, align 4, !dbg !9839
  %sh_prom = zext i32 %5 to i64, !dbg !9839
  %shl1 = shl i64 1, %sh_prom, !dbg !9839
  %sub = sub i64 -1, %shl1, !dbg !9839
  %add = add i64 %sub, 1, !dbg !9839
  %6 = load i32, i32* %_pos, align 4, !dbg !9839
  %7 = load i32, i32* %_len, align 4, !dbg !9839
  %add2 = add i32 %6, %7, !dbg !9839
  %sub3 = sub i32 %add2, 1, !dbg !9839
  %sub4 = sub i32 63, %sub3, !dbg !9839
  %sh_prom5 = zext i32 %sub4 to i64, !dbg !9839
  %shr = lshr i64 -1, %sh_prom5, !dbg !9839
  %and = and i64 %add, %shr, !dbg !9839
  %add6 = add i64 0, %and, !dbg !9839
  %and7 = and i64 %conv, %add6, !dbg !9839
  %conv8 = trunc i64 %and7 to i32, !dbg !9839
  store i32 %conv8, i32* %_val, align 4, !dbg !9839
  %8 = load i32, i32* %_var, align 4, !dbg !9839
  %conv9 = zext i32 %8 to i64, !dbg !9839
  %9 = load i32, i32* %_pos, align 4, !dbg !9839
  %sh_prom10 = zext i32 %9 to i64, !dbg !9839
  %shl11 = shl i64 1, %sh_prom10, !dbg !9839
  %sub12 = sub i64 -1, %shl11, !dbg !9839
  %add13 = add i64 %sub12, 1, !dbg !9839
  %10 = load i32, i32* %_pos, align 4, !dbg !9839
  %11 = load i32, i32* %_len, align 4, !dbg !9839
  %add14 = add i32 %10, %11, !dbg !9839
  %sub15 = sub i32 %add14, 1, !dbg !9839
  %sub16 = sub i32 63, %sub15, !dbg !9839
  %sh_prom17 = zext i32 %sub16 to i64, !dbg !9839
  %shr18 = lshr i64 -1, %sh_prom17, !dbg !9839
  %and19 = and i64 %add13, %shr18, !dbg !9839
  %add20 = add i64 0, %and19, !dbg !9839
  %neg = xor i64 %add20, -1, !dbg !9839
  %and21 = and i64 %conv9, %neg, !dbg !9839
  %12 = load i32, i32* %_val, align 4, !dbg !9839
  %conv22 = sext i32 %12 to i64, !dbg !9839
  %or = or i64 %and21, %conv22, !dbg !9839
  %conv23 = trunc i64 %or to i32, !dbg !9839
  store i32 %conv23, i32* %_var, align 4, !dbg !9839
  store i32 %conv23, i32* %tmp, align 4, !dbg !9839
  %13 = load i32, i32* %tmp, align 4, !dbg !9839
  store i32 %13, i32* %regval, align 4, !dbg !9843
  %14 = load i32, i32* %regval, align 4, !dbg !9844
  %15 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !9845
  %mac_regs24 = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %15, i32 0, i32 6, !dbg !9846
  %16 = load i8*, i8** %mac_regs24, align 8, !dbg !9846
  %add.ptr25 = getelementptr i8, i8* %16, i64 4, !dbg !9847
  call void @writel(i32 %14, i8* %add.ptr25) #7, !dbg !9848
  ret i32 0, !dbg !9849
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @xlgmac_set_xlgmii_25000_speed(%struct.xlgmac_pdata* %pdata) #0 !dbg !9850 {
entry:
  %retval = alloca i32, align 4
  %pdata.addr = alloca %struct.xlgmac_pdata*, align 8
  %regval = alloca i32, align 4
  %_pos = alloca i32, align 4
  %_len = alloca i32, align 4
  %tmp = alloca i64, align 8
  %_var = alloca i32, align 4
  %_pos14 = alloca i32, align 4
  %_len15 = alloca i32, align 4
  %_val = alloca i32, align 4
  %tmp31 = alloca i32, align 4
  store %struct.xlgmac_pdata* %pdata, %struct.xlgmac_pdata** %pdata.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xlgmac_pdata** %pdata.addr, metadata !9851, metadata !DIExpression()), !dbg !9852
  call void @llvm.dbg.declare(metadata i32* %regval, metadata !9853, metadata !DIExpression()), !dbg !9854
  call void @llvm.dbg.declare(metadata i32* %_pos, metadata !9855, metadata !DIExpression()), !dbg !9857
  store i32 28, i32* %_pos, align 4, !dbg !9857
  call void @llvm.dbg.declare(metadata i32* %_len, metadata !9858, metadata !DIExpression()), !dbg !9857
  store i32 3, i32* %_len, align 4, !dbg !9857
  %0 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !9857
  %mac_regs = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %0, i32 0, i32 6, !dbg !9857
  %1 = load i8*, i8** %mac_regs, align 8, !dbg !9857
  %add.ptr = getelementptr i8, i8* %1, i64 0, !dbg !9857
  %call = call i32 @readl(i8* %add.ptr) #7, !dbg !9857
  %conv = zext i32 %call to i64, !dbg !9857
  %2 = load i32, i32* %_pos, align 4, !dbg !9857
  %sh_prom = zext i32 %2 to i64, !dbg !9857
  %shl = shl i64 1, %sh_prom, !dbg !9857
  %sub = sub i64 -1, %shl, !dbg !9857
  %add = add i64 %sub, 1, !dbg !9857
  %3 = load i32, i32* %_pos, align 4, !dbg !9857
  %4 = load i32, i32* %_len, align 4, !dbg !9857
  %add1 = add i32 %3, %4, !dbg !9857
  %sub2 = sub i32 %add1, 1, !dbg !9857
  %sub3 = sub i32 63, %sub2, !dbg !9857
  %sh_prom4 = zext i32 %sub3 to i64, !dbg !9857
  %shr = lshr i64 -1, %sh_prom4, !dbg !9857
  %and = and i64 %add, %shr, !dbg !9857
  %add5 = add i64 0, %and, !dbg !9857
  %and6 = and i64 %conv, %add5, !dbg !9857
  %5 = load i32, i32* %_pos, align 4, !dbg !9857
  %sh_prom7 = zext i32 %5 to i64, !dbg !9857
  %shr8 = lshr i64 %and6, %sh_prom7, !dbg !9857
  store i64 %shr8, i64* %tmp, align 8, !dbg !9857
  %6 = load i64, i64* %tmp, align 8, !dbg !9857
  %conv9 = trunc i64 %6 to i32, !dbg !9859
  store i32 %conv9, i32* %regval, align 4, !dbg !9860
  %7 = load i32, i32* %regval, align 4, !dbg !9861
  %cmp = icmp eq i32 %7, 1, !dbg !9863
  br i1 %cmp, label %if.then, label %if.end, !dbg !9864

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !9865
  br label %return, !dbg !9865

if.end:                                           ; preds = %entry
  %8 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !9866
  %mac_regs11 = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %8, i32 0, i32 6, !dbg !9867
  %9 = load i8*, i8** %mac_regs11, align 8, !dbg !9867
  %add.ptr12 = getelementptr i8, i8* %9, i64 0, !dbg !9868
  %call13 = call i32 @readl(i8* %add.ptr12) #7, !dbg !9869
  store i32 %call13, i32* %regval, align 4, !dbg !9870
  call void @llvm.dbg.declare(metadata i32* %_var, metadata !9871, metadata !DIExpression()), !dbg !9873
  %10 = load i32, i32* %regval, align 4, !dbg !9873
  store i32 %10, i32* %_var, align 4, !dbg !9873
  call void @llvm.dbg.declare(metadata i32* %_pos14, metadata !9874, metadata !DIExpression()), !dbg !9873
  store i32 28, i32* %_pos14, align 4, !dbg !9873
  call void @llvm.dbg.declare(metadata i32* %_len15, metadata !9875, metadata !DIExpression()), !dbg !9873
  store i32 3, i32* %_len15, align 4, !dbg !9873
  call void @llvm.dbg.declare(metadata i32* %_val, metadata !9876, metadata !DIExpression()), !dbg !9873
  store i32 1, i32* %_val, align 4, !dbg !9873
  %11 = load i32, i32* %_val, align 4, !dbg !9873
  %12 = load i32, i32* %_pos14, align 4, !dbg !9873
  %shl16 = shl i32 %11, %12, !dbg !9873
  %conv17 = sext i32 %shl16 to i64, !dbg !9873
  %13 = load i32, i32* %_pos14, align 4, !dbg !9873
  %sh_prom18 = zext i32 %13 to i64, !dbg !9873
  %shl19 = shl i64 1, %sh_prom18, !dbg !9873
  %sub20 = sub i64 -1, %shl19, !dbg !9873
  %add21 = add i64 %sub20, 1, !dbg !9873
  %14 = load i32, i32* %_pos14, align 4, !dbg !9873
  %15 = load i32, i32* %_len15, align 4, !dbg !9873
  %add22 = add i32 %14, %15, !dbg !9873
  %sub23 = sub i32 %add22, 1, !dbg !9873
  %sub24 = sub i32 63, %sub23, !dbg !9873
  %sh_prom25 = zext i32 %sub24 to i64, !dbg !9873
  %shr26 = lshr i64 -1, %sh_prom25, !dbg !9873
  %and27 = and i64 %add21, %shr26, !dbg !9873
  %add28 = add i64 0, %and27, !dbg !9873
  %and29 = and i64 %conv17, %add28, !dbg !9873
  %conv30 = trunc i64 %and29 to i32, !dbg !9873
  store i32 %conv30, i32* %_val, align 4, !dbg !9873
  %16 = load i32, i32* %_var, align 4, !dbg !9873
  %conv32 = zext i32 %16 to i64, !dbg !9873
  %17 = load i32, i32* %_pos14, align 4, !dbg !9873
  %sh_prom33 = zext i32 %17 to i64, !dbg !9873
  %shl34 = shl i64 1, %sh_prom33, !dbg !9873
  %sub35 = sub i64 -1, %shl34, !dbg !9873
  %add36 = add i64 %sub35, 1, !dbg !9873
  %18 = load i32, i32* %_pos14, align 4, !dbg !9873
  %19 = load i32, i32* %_len15, align 4, !dbg !9873
  %add37 = add i32 %18, %19, !dbg !9873
  %sub38 = sub i32 %add37, 1, !dbg !9873
  %sub39 = sub i32 63, %sub38, !dbg !9873
  %sh_prom40 = zext i32 %sub39 to i64, !dbg !9873
  %shr41 = lshr i64 -1, %sh_prom40, !dbg !9873
  %and42 = and i64 %add36, %shr41, !dbg !9873
  %add43 = add i64 0, %and42, !dbg !9873
  %neg = xor i64 %add43, -1, !dbg !9873
  %and44 = and i64 %conv32, %neg, !dbg !9873
  %20 = load i32, i32* %_val, align 4, !dbg !9873
  %conv45 = sext i32 %20 to i64, !dbg !9873
  %or = or i64 %and44, %conv45, !dbg !9873
  %conv46 = trunc i64 %or to i32, !dbg !9873
  store i32 %conv46, i32* %_var, align 4, !dbg !9873
  store i32 %conv46, i32* %tmp31, align 4, !dbg !9873
  %21 = load i32, i32* %tmp31, align 4, !dbg !9873
  store i32 %21, i32* %regval, align 4, !dbg !9877
  %22 = load i32, i32* %regval, align 4, !dbg !9878
  %23 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !9879
  %mac_regs47 = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %23, i32 0, i32 6, !dbg !9880
  %24 = load i8*, i8** %mac_regs47, align 8, !dbg !9880
  %add.ptr48 = getelementptr i8, i8* %24, i64 0, !dbg !9881
  call void @writel(i32 %22, i8* %add.ptr48) #7, !dbg !9882
  store i32 0, i32* %retval, align 4, !dbg !9883
  br label %return, !dbg !9883

return:                                           ; preds = %if.end, %if.then
  %25 = load i32, i32* %retval, align 4, !dbg !9884
  ret i32 %25, !dbg !9884
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @xlgmac_set_xlgmii_40000_speed(%struct.xlgmac_pdata* %pdata) #0 !dbg !9885 {
entry:
  %retval = alloca i32, align 4
  %pdata.addr = alloca %struct.xlgmac_pdata*, align 8
  %regval = alloca i32, align 4
  %_pos = alloca i32, align 4
  %_len = alloca i32, align 4
  %tmp = alloca i64, align 8
  %_var = alloca i32, align 4
  %_pos14 = alloca i32, align 4
  %_len15 = alloca i32, align 4
  %_val = alloca i32, align 4
  %tmp31 = alloca i32, align 4
  store %struct.xlgmac_pdata* %pdata, %struct.xlgmac_pdata** %pdata.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xlgmac_pdata** %pdata.addr, metadata !9886, metadata !DIExpression()), !dbg !9887
  call void @llvm.dbg.declare(metadata i32* %regval, metadata !9888, metadata !DIExpression()), !dbg !9889
  call void @llvm.dbg.declare(metadata i32* %_pos, metadata !9890, metadata !DIExpression()), !dbg !9892
  store i32 28, i32* %_pos, align 4, !dbg !9892
  call void @llvm.dbg.declare(metadata i32* %_len, metadata !9893, metadata !DIExpression()), !dbg !9892
  store i32 3, i32* %_len, align 4, !dbg !9892
  %0 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !9892
  %mac_regs = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %0, i32 0, i32 6, !dbg !9892
  %1 = load i8*, i8** %mac_regs, align 8, !dbg !9892
  %add.ptr = getelementptr i8, i8* %1, i64 0, !dbg !9892
  %call = call i32 @readl(i8* %add.ptr) #7, !dbg !9892
  %conv = zext i32 %call to i64, !dbg !9892
  %2 = load i32, i32* %_pos, align 4, !dbg !9892
  %sh_prom = zext i32 %2 to i64, !dbg !9892
  %shl = shl i64 1, %sh_prom, !dbg !9892
  %sub = sub i64 -1, %shl, !dbg !9892
  %add = add i64 %sub, 1, !dbg !9892
  %3 = load i32, i32* %_pos, align 4, !dbg !9892
  %4 = load i32, i32* %_len, align 4, !dbg !9892
  %add1 = add i32 %3, %4, !dbg !9892
  %sub2 = sub i32 %add1, 1, !dbg !9892
  %sub3 = sub i32 63, %sub2, !dbg !9892
  %sh_prom4 = zext i32 %sub3 to i64, !dbg !9892
  %shr = lshr i64 -1, %sh_prom4, !dbg !9892
  %and = and i64 %add, %shr, !dbg !9892
  %add5 = add i64 0, %and, !dbg !9892
  %and6 = and i64 %conv, %add5, !dbg !9892
  %5 = load i32, i32* %_pos, align 4, !dbg !9892
  %sh_prom7 = zext i32 %5 to i64, !dbg !9892
  %shr8 = lshr i64 %and6, %sh_prom7, !dbg !9892
  store i64 %shr8, i64* %tmp, align 8, !dbg !9892
  %6 = load i64, i64* %tmp, align 8, !dbg !9892
  %conv9 = trunc i64 %6 to i32, !dbg !9894
  store i32 %conv9, i32* %regval, align 4, !dbg !9895
  %7 = load i32, i32* %regval, align 4, !dbg !9896
  %cmp = icmp eq i32 %7, 0, !dbg !9898
  br i1 %cmp, label %if.then, label %if.end, !dbg !9899

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !9900
  br label %return, !dbg !9900

if.end:                                           ; preds = %entry
  %8 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !9901
  %mac_regs11 = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %8, i32 0, i32 6, !dbg !9902
  %9 = load i8*, i8** %mac_regs11, align 8, !dbg !9902
  %add.ptr12 = getelementptr i8, i8* %9, i64 0, !dbg !9903
  %call13 = call i32 @readl(i8* %add.ptr12) #7, !dbg !9904
  store i32 %call13, i32* %regval, align 4, !dbg !9905
  call void @llvm.dbg.declare(metadata i32* %_var, metadata !9906, metadata !DIExpression()), !dbg !9908
  %10 = load i32, i32* %regval, align 4, !dbg !9908
  store i32 %10, i32* %_var, align 4, !dbg !9908
  call void @llvm.dbg.declare(metadata i32* %_pos14, metadata !9909, metadata !DIExpression()), !dbg !9908
  store i32 28, i32* %_pos14, align 4, !dbg !9908
  call void @llvm.dbg.declare(metadata i32* %_len15, metadata !9910, metadata !DIExpression()), !dbg !9908
  store i32 3, i32* %_len15, align 4, !dbg !9908
  call void @llvm.dbg.declare(metadata i32* %_val, metadata !9911, metadata !DIExpression()), !dbg !9908
  store i32 0, i32* %_val, align 4, !dbg !9908
  %11 = load i32, i32* %_val, align 4, !dbg !9908
  %12 = load i32, i32* %_pos14, align 4, !dbg !9908
  %shl16 = shl i32 %11, %12, !dbg !9908
  %conv17 = sext i32 %shl16 to i64, !dbg !9908
  %13 = load i32, i32* %_pos14, align 4, !dbg !9908
  %sh_prom18 = zext i32 %13 to i64, !dbg !9908
  %shl19 = shl i64 1, %sh_prom18, !dbg !9908
  %sub20 = sub i64 -1, %shl19, !dbg !9908
  %add21 = add i64 %sub20, 1, !dbg !9908
  %14 = load i32, i32* %_pos14, align 4, !dbg !9908
  %15 = load i32, i32* %_len15, align 4, !dbg !9908
  %add22 = add i32 %14, %15, !dbg !9908
  %sub23 = sub i32 %add22, 1, !dbg !9908
  %sub24 = sub i32 63, %sub23, !dbg !9908
  %sh_prom25 = zext i32 %sub24 to i64, !dbg !9908
  %shr26 = lshr i64 -1, %sh_prom25, !dbg !9908
  %and27 = and i64 %add21, %shr26, !dbg !9908
  %add28 = add i64 0, %and27, !dbg !9908
  %and29 = and i64 %conv17, %add28, !dbg !9908
  %conv30 = trunc i64 %and29 to i32, !dbg !9908
  store i32 %conv30, i32* %_val, align 4, !dbg !9908
  %16 = load i32, i32* %_var, align 4, !dbg !9908
  %conv32 = zext i32 %16 to i64, !dbg !9908
  %17 = load i32, i32* %_pos14, align 4, !dbg !9908
  %sh_prom33 = zext i32 %17 to i64, !dbg !9908
  %shl34 = shl i64 1, %sh_prom33, !dbg !9908
  %sub35 = sub i64 -1, %shl34, !dbg !9908
  %add36 = add i64 %sub35, 1, !dbg !9908
  %18 = load i32, i32* %_pos14, align 4, !dbg !9908
  %19 = load i32, i32* %_len15, align 4, !dbg !9908
  %add37 = add i32 %18, %19, !dbg !9908
  %sub38 = sub i32 %add37, 1, !dbg !9908
  %sub39 = sub i32 63, %sub38, !dbg !9908
  %sh_prom40 = zext i32 %sub39 to i64, !dbg !9908
  %shr41 = lshr i64 -1, %sh_prom40, !dbg !9908
  %and42 = and i64 %add36, %shr41, !dbg !9908
  %add43 = add i64 0, %and42, !dbg !9908
  %neg = xor i64 %add43, -1, !dbg !9908
  %and44 = and i64 %conv32, %neg, !dbg !9908
  %20 = load i32, i32* %_val, align 4, !dbg !9908
  %conv45 = sext i32 %20 to i64, !dbg !9908
  %or = or i64 %and44, %conv45, !dbg !9908
  %conv46 = trunc i64 %or to i32, !dbg !9908
  store i32 %conv46, i32* %_var, align 4, !dbg !9908
  store i32 %conv46, i32* %tmp31, align 4, !dbg !9908
  %21 = load i32, i32* %tmp31, align 4, !dbg !9908
  store i32 %21, i32* %regval, align 4, !dbg !9912
  %22 = load i32, i32* %regval, align 4, !dbg !9913
  %23 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !9914
  %mac_regs47 = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %23, i32 0, i32 6, !dbg !9915
  %24 = load i8*, i8** %mac_regs47, align 8, !dbg !9915
  %add.ptr48 = getelementptr i8, i8* %24, i64 0, !dbg !9916
  call void @writel(i32 %22, i8* %add.ptr48) #7, !dbg !9917
  store i32 0, i32* %retval, align 4, !dbg !9918
  br label %return, !dbg !9918

return:                                           ; preds = %if.end, %if.then
  %25 = load i32, i32* %retval, align 4, !dbg !9919
  ret i32 %25, !dbg !9919
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @xlgmac_set_xlgmii_50000_speed(%struct.xlgmac_pdata* %pdata) #0 !dbg !9920 {
entry:
  %retval = alloca i32, align 4
  %pdata.addr = alloca %struct.xlgmac_pdata*, align 8
  %regval = alloca i32, align 4
  %_pos = alloca i32, align 4
  %_len = alloca i32, align 4
  %tmp = alloca i64, align 8
  %_var = alloca i32, align 4
  %_pos14 = alloca i32, align 4
  %_len15 = alloca i32, align 4
  %_val = alloca i32, align 4
  %tmp31 = alloca i32, align 4
  store %struct.xlgmac_pdata* %pdata, %struct.xlgmac_pdata** %pdata.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xlgmac_pdata** %pdata.addr, metadata !9921, metadata !DIExpression()), !dbg !9922
  call void @llvm.dbg.declare(metadata i32* %regval, metadata !9923, metadata !DIExpression()), !dbg !9924
  call void @llvm.dbg.declare(metadata i32* %_pos, metadata !9925, metadata !DIExpression()), !dbg !9927
  store i32 28, i32* %_pos, align 4, !dbg !9927
  call void @llvm.dbg.declare(metadata i32* %_len, metadata !9928, metadata !DIExpression()), !dbg !9927
  store i32 3, i32* %_len, align 4, !dbg !9927
  %0 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !9927
  %mac_regs = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %0, i32 0, i32 6, !dbg !9927
  %1 = load i8*, i8** %mac_regs, align 8, !dbg !9927
  %add.ptr = getelementptr i8, i8* %1, i64 0, !dbg !9927
  %call = call i32 @readl(i8* %add.ptr) #7, !dbg !9927
  %conv = zext i32 %call to i64, !dbg !9927
  %2 = load i32, i32* %_pos, align 4, !dbg !9927
  %sh_prom = zext i32 %2 to i64, !dbg !9927
  %shl = shl i64 1, %sh_prom, !dbg !9927
  %sub = sub i64 -1, %shl, !dbg !9927
  %add = add i64 %sub, 1, !dbg !9927
  %3 = load i32, i32* %_pos, align 4, !dbg !9927
  %4 = load i32, i32* %_len, align 4, !dbg !9927
  %add1 = add i32 %3, %4, !dbg !9927
  %sub2 = sub i32 %add1, 1, !dbg !9927
  %sub3 = sub i32 63, %sub2, !dbg !9927
  %sh_prom4 = zext i32 %sub3 to i64, !dbg !9927
  %shr = lshr i64 -1, %sh_prom4, !dbg !9927
  %and = and i64 %add, %shr, !dbg !9927
  %add5 = add i64 0, %and, !dbg !9927
  %and6 = and i64 %conv, %add5, !dbg !9927
  %5 = load i32, i32* %_pos, align 4, !dbg !9927
  %sh_prom7 = zext i32 %5 to i64, !dbg !9927
  %shr8 = lshr i64 %and6, %sh_prom7, !dbg !9927
  store i64 %shr8, i64* %tmp, align 8, !dbg !9927
  %6 = load i64, i64* %tmp, align 8, !dbg !9927
  %conv9 = trunc i64 %6 to i32, !dbg !9929
  store i32 %conv9, i32* %regval, align 4, !dbg !9930
  %7 = load i32, i32* %regval, align 4, !dbg !9931
  %cmp = icmp eq i32 %7, 2, !dbg !9933
  br i1 %cmp, label %if.then, label %if.end, !dbg !9934

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !9935
  br label %return, !dbg !9935

if.end:                                           ; preds = %entry
  %8 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !9936
  %mac_regs11 = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %8, i32 0, i32 6, !dbg !9937
  %9 = load i8*, i8** %mac_regs11, align 8, !dbg !9937
  %add.ptr12 = getelementptr i8, i8* %9, i64 0, !dbg !9938
  %call13 = call i32 @readl(i8* %add.ptr12) #7, !dbg !9939
  store i32 %call13, i32* %regval, align 4, !dbg !9940
  call void @llvm.dbg.declare(metadata i32* %_var, metadata !9941, metadata !DIExpression()), !dbg !9943
  %10 = load i32, i32* %regval, align 4, !dbg !9943
  store i32 %10, i32* %_var, align 4, !dbg !9943
  call void @llvm.dbg.declare(metadata i32* %_pos14, metadata !9944, metadata !DIExpression()), !dbg !9943
  store i32 28, i32* %_pos14, align 4, !dbg !9943
  call void @llvm.dbg.declare(metadata i32* %_len15, metadata !9945, metadata !DIExpression()), !dbg !9943
  store i32 3, i32* %_len15, align 4, !dbg !9943
  call void @llvm.dbg.declare(metadata i32* %_val, metadata !9946, metadata !DIExpression()), !dbg !9943
  store i32 2, i32* %_val, align 4, !dbg !9943
  %11 = load i32, i32* %_val, align 4, !dbg !9943
  %12 = load i32, i32* %_pos14, align 4, !dbg !9943
  %shl16 = shl i32 %11, %12, !dbg !9943
  %conv17 = sext i32 %shl16 to i64, !dbg !9943
  %13 = load i32, i32* %_pos14, align 4, !dbg !9943
  %sh_prom18 = zext i32 %13 to i64, !dbg !9943
  %shl19 = shl i64 1, %sh_prom18, !dbg !9943
  %sub20 = sub i64 -1, %shl19, !dbg !9943
  %add21 = add i64 %sub20, 1, !dbg !9943
  %14 = load i32, i32* %_pos14, align 4, !dbg !9943
  %15 = load i32, i32* %_len15, align 4, !dbg !9943
  %add22 = add i32 %14, %15, !dbg !9943
  %sub23 = sub i32 %add22, 1, !dbg !9943
  %sub24 = sub i32 63, %sub23, !dbg !9943
  %sh_prom25 = zext i32 %sub24 to i64, !dbg !9943
  %shr26 = lshr i64 -1, %sh_prom25, !dbg !9943
  %and27 = and i64 %add21, %shr26, !dbg !9943
  %add28 = add i64 0, %and27, !dbg !9943
  %and29 = and i64 %conv17, %add28, !dbg !9943
  %conv30 = trunc i64 %and29 to i32, !dbg !9943
  store i32 %conv30, i32* %_val, align 4, !dbg !9943
  %16 = load i32, i32* %_var, align 4, !dbg !9943
  %conv32 = zext i32 %16 to i64, !dbg !9943
  %17 = load i32, i32* %_pos14, align 4, !dbg !9943
  %sh_prom33 = zext i32 %17 to i64, !dbg !9943
  %shl34 = shl i64 1, %sh_prom33, !dbg !9943
  %sub35 = sub i64 -1, %shl34, !dbg !9943
  %add36 = add i64 %sub35, 1, !dbg !9943
  %18 = load i32, i32* %_pos14, align 4, !dbg !9943
  %19 = load i32, i32* %_len15, align 4, !dbg !9943
  %add37 = add i32 %18, %19, !dbg !9943
  %sub38 = sub i32 %add37, 1, !dbg !9943
  %sub39 = sub i32 63, %sub38, !dbg !9943
  %sh_prom40 = zext i32 %sub39 to i64, !dbg !9943
  %shr41 = lshr i64 -1, %sh_prom40, !dbg !9943
  %and42 = and i64 %add36, %shr41, !dbg !9943
  %add43 = add i64 0, %and42, !dbg !9943
  %neg = xor i64 %add43, -1, !dbg !9943
  %and44 = and i64 %conv32, %neg, !dbg !9943
  %20 = load i32, i32* %_val, align 4, !dbg !9943
  %conv45 = sext i32 %20 to i64, !dbg !9943
  %or = or i64 %and44, %conv45, !dbg !9943
  %conv46 = trunc i64 %or to i32, !dbg !9943
  store i32 %conv46, i32* %_var, align 4, !dbg !9943
  store i32 %conv46, i32* %tmp31, align 4, !dbg !9943
  %21 = load i32, i32* %tmp31, align 4, !dbg !9943
  store i32 %21, i32* %regval, align 4, !dbg !9947
  %22 = load i32, i32* %regval, align 4, !dbg !9948
  %23 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !9949
  %mac_regs47 = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %23, i32 0, i32 6, !dbg !9950
  %24 = load i8*, i8** %mac_regs47, align 8, !dbg !9950
  %add.ptr48 = getelementptr i8, i8* %24, i64 0, !dbg !9951
  call void @writel(i32 %22, i8* %add.ptr48) #7, !dbg !9952
  store i32 0, i32* %retval, align 4, !dbg !9953
  br label %return, !dbg !9953

return:                                           ; preds = %if.end, %if.then
  %25 = load i32, i32* %retval, align 4, !dbg !9954
  ret i32 %25, !dbg !9954
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @xlgmac_set_xlgmii_100000_speed(%struct.xlgmac_pdata* %pdata) #0 !dbg !9955 {
entry:
  %retval = alloca i32, align 4
  %pdata.addr = alloca %struct.xlgmac_pdata*, align 8
  %regval = alloca i32, align 4
  %_pos = alloca i32, align 4
  %_len = alloca i32, align 4
  %tmp = alloca i64, align 8
  %_var = alloca i32, align 4
  %_pos14 = alloca i32, align 4
  %_len15 = alloca i32, align 4
  %_val = alloca i32, align 4
  %tmp31 = alloca i32, align 4
  store %struct.xlgmac_pdata* %pdata, %struct.xlgmac_pdata** %pdata.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xlgmac_pdata** %pdata.addr, metadata !9956, metadata !DIExpression()), !dbg !9957
  call void @llvm.dbg.declare(metadata i32* %regval, metadata !9958, metadata !DIExpression()), !dbg !9959
  call void @llvm.dbg.declare(metadata i32* %_pos, metadata !9960, metadata !DIExpression()), !dbg !9962
  store i32 28, i32* %_pos, align 4, !dbg !9962
  call void @llvm.dbg.declare(metadata i32* %_len, metadata !9963, metadata !DIExpression()), !dbg !9962
  store i32 3, i32* %_len, align 4, !dbg !9962
  %0 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !9962
  %mac_regs = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %0, i32 0, i32 6, !dbg !9962
  %1 = load i8*, i8** %mac_regs, align 8, !dbg !9962
  %add.ptr = getelementptr i8, i8* %1, i64 0, !dbg !9962
  %call = call i32 @readl(i8* %add.ptr) #7, !dbg !9962
  %conv = zext i32 %call to i64, !dbg !9962
  %2 = load i32, i32* %_pos, align 4, !dbg !9962
  %sh_prom = zext i32 %2 to i64, !dbg !9962
  %shl = shl i64 1, %sh_prom, !dbg !9962
  %sub = sub i64 -1, %shl, !dbg !9962
  %add = add i64 %sub, 1, !dbg !9962
  %3 = load i32, i32* %_pos, align 4, !dbg !9962
  %4 = load i32, i32* %_len, align 4, !dbg !9962
  %add1 = add i32 %3, %4, !dbg !9962
  %sub2 = sub i32 %add1, 1, !dbg !9962
  %sub3 = sub i32 63, %sub2, !dbg !9962
  %sh_prom4 = zext i32 %sub3 to i64, !dbg !9962
  %shr = lshr i64 -1, %sh_prom4, !dbg !9962
  %and = and i64 %add, %shr, !dbg !9962
  %add5 = add i64 0, %and, !dbg !9962
  %and6 = and i64 %conv, %add5, !dbg !9962
  %5 = load i32, i32* %_pos, align 4, !dbg !9962
  %sh_prom7 = zext i32 %5 to i64, !dbg !9962
  %shr8 = lshr i64 %and6, %sh_prom7, !dbg !9962
  store i64 %shr8, i64* %tmp, align 8, !dbg !9962
  %6 = load i64, i64* %tmp, align 8, !dbg !9962
  %conv9 = trunc i64 %6 to i32, !dbg !9964
  store i32 %conv9, i32* %regval, align 4, !dbg !9965
  %7 = load i32, i32* %regval, align 4, !dbg !9966
  %cmp = icmp eq i32 %7, 3, !dbg !9968
  br i1 %cmp, label %if.then, label %if.end, !dbg !9969

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !9970
  br label %return, !dbg !9970

if.end:                                           ; preds = %entry
  %8 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !9971
  %mac_regs11 = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %8, i32 0, i32 6, !dbg !9972
  %9 = load i8*, i8** %mac_regs11, align 8, !dbg !9972
  %add.ptr12 = getelementptr i8, i8* %9, i64 0, !dbg !9973
  %call13 = call i32 @readl(i8* %add.ptr12) #7, !dbg !9974
  store i32 %call13, i32* %regval, align 4, !dbg !9975
  call void @llvm.dbg.declare(metadata i32* %_var, metadata !9976, metadata !DIExpression()), !dbg !9978
  %10 = load i32, i32* %regval, align 4, !dbg !9978
  store i32 %10, i32* %_var, align 4, !dbg !9978
  call void @llvm.dbg.declare(metadata i32* %_pos14, metadata !9979, metadata !DIExpression()), !dbg !9978
  store i32 28, i32* %_pos14, align 4, !dbg !9978
  call void @llvm.dbg.declare(metadata i32* %_len15, metadata !9980, metadata !DIExpression()), !dbg !9978
  store i32 3, i32* %_len15, align 4, !dbg !9978
  call void @llvm.dbg.declare(metadata i32* %_val, metadata !9981, metadata !DIExpression()), !dbg !9978
  store i32 3, i32* %_val, align 4, !dbg !9978
  %11 = load i32, i32* %_val, align 4, !dbg !9978
  %12 = load i32, i32* %_pos14, align 4, !dbg !9978
  %shl16 = shl i32 %11, %12, !dbg !9978
  %conv17 = sext i32 %shl16 to i64, !dbg !9978
  %13 = load i32, i32* %_pos14, align 4, !dbg !9978
  %sh_prom18 = zext i32 %13 to i64, !dbg !9978
  %shl19 = shl i64 1, %sh_prom18, !dbg !9978
  %sub20 = sub i64 -1, %shl19, !dbg !9978
  %add21 = add i64 %sub20, 1, !dbg !9978
  %14 = load i32, i32* %_pos14, align 4, !dbg !9978
  %15 = load i32, i32* %_len15, align 4, !dbg !9978
  %add22 = add i32 %14, %15, !dbg !9978
  %sub23 = sub i32 %add22, 1, !dbg !9978
  %sub24 = sub i32 63, %sub23, !dbg !9978
  %sh_prom25 = zext i32 %sub24 to i64, !dbg !9978
  %shr26 = lshr i64 -1, %sh_prom25, !dbg !9978
  %and27 = and i64 %add21, %shr26, !dbg !9978
  %add28 = add i64 0, %and27, !dbg !9978
  %and29 = and i64 %conv17, %add28, !dbg !9978
  %conv30 = trunc i64 %and29 to i32, !dbg !9978
  store i32 %conv30, i32* %_val, align 4, !dbg !9978
  %16 = load i32, i32* %_var, align 4, !dbg !9978
  %conv32 = zext i32 %16 to i64, !dbg !9978
  %17 = load i32, i32* %_pos14, align 4, !dbg !9978
  %sh_prom33 = zext i32 %17 to i64, !dbg !9978
  %shl34 = shl i64 1, %sh_prom33, !dbg !9978
  %sub35 = sub i64 -1, %shl34, !dbg !9978
  %add36 = add i64 %sub35, 1, !dbg !9978
  %18 = load i32, i32* %_pos14, align 4, !dbg !9978
  %19 = load i32, i32* %_len15, align 4, !dbg !9978
  %add37 = add i32 %18, %19, !dbg !9978
  %sub38 = sub i32 %add37, 1, !dbg !9978
  %sub39 = sub i32 63, %sub38, !dbg !9978
  %sh_prom40 = zext i32 %sub39 to i64, !dbg !9978
  %shr41 = lshr i64 -1, %sh_prom40, !dbg !9978
  %and42 = and i64 %add36, %shr41, !dbg !9978
  %add43 = add i64 0, %and42, !dbg !9978
  %neg = xor i64 %add43, -1, !dbg !9978
  %and44 = and i64 %conv32, %neg, !dbg !9978
  %20 = load i32, i32* %_val, align 4, !dbg !9978
  %conv45 = sext i32 %20 to i64, !dbg !9978
  %or = or i64 %and44, %conv45, !dbg !9978
  %conv46 = trunc i64 %or to i32, !dbg !9978
  store i32 %conv46, i32* %_var, align 4, !dbg !9978
  store i32 %conv46, i32* %tmp31, align 4, !dbg !9978
  %21 = load i32, i32* %tmp31, align 4, !dbg !9978
  store i32 %21, i32* %regval, align 4, !dbg !9982
  %22 = load i32, i32* %regval, align 4, !dbg !9983
  %23 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !9984
  %mac_regs47 = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %23, i32 0, i32 6, !dbg !9985
  %24 = load i8*, i8** %mac_regs47, align 8, !dbg !9985
  %add.ptr48 = getelementptr i8, i8* %24, i64 0, !dbg !9986
  call void @writel(i32 %22, i8* %add.ptr48) #7, !dbg !9987
  store i32 0, i32* %retval, align 4, !dbg !9988
  br label %return, !dbg !9988

return:                                           ; preds = %if.end, %if.then
  %25 = load i32, i32* %retval, align 4, !dbg !9989
  ret i32 %25, !dbg !9989
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @xlgmac_tx_desc_init(%struct.xlgmac_channel* %channel) #0 !dbg !9990 {
entry:
  %channel.addr = alloca %struct.xlgmac_channel*, align 8
  %ring = alloca %struct.xlgmac_ring*, align 8
  %desc_data = alloca %struct.xlgmac_desc_data*, align 8
  %start_index = alloca i32, align 4
  %i = alloca i32, align 4
  %_ring = alloca %struct.xlgmac_ring*, align 8
  %tmp = alloca %struct.xlgmac_desc_data*, align 8
  %_ring5 = alloca %struct.xlgmac_ring*, align 8
  %tmp6 = alloca %struct.xlgmac_desc_data*, align 8
  store %struct.xlgmac_channel* %channel, %struct.xlgmac_channel** %channel.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xlgmac_channel** %channel.addr, metadata !9991, metadata !DIExpression()), !dbg !9992
  call void @llvm.dbg.declare(metadata %struct.xlgmac_ring** %ring, metadata !9993, metadata !DIExpression()), !dbg !9994
  %0 = load %struct.xlgmac_channel*, %struct.xlgmac_channel** %channel.addr, align 8, !dbg !9995
  %tx_ring = getelementptr inbounds %struct.xlgmac_channel, %struct.xlgmac_channel* %0, i32 0, i32 10, !dbg !9996
  %1 = load %struct.xlgmac_ring*, %struct.xlgmac_ring** %tx_ring, align 16, !dbg !9996
  store %struct.xlgmac_ring* %1, %struct.xlgmac_ring** %ring, align 8, !dbg !9994
  call void @llvm.dbg.declare(metadata %struct.xlgmac_desc_data** %desc_data, metadata !9997, metadata !DIExpression()), !dbg !9998
  call void @llvm.dbg.declare(metadata i32* %start_index, metadata !9999, metadata !DIExpression()), !dbg !10000
  %2 = load %struct.xlgmac_ring*, %struct.xlgmac_ring** %ring, align 8, !dbg !10001
  %cur = getelementptr inbounds %struct.xlgmac_ring, %struct.xlgmac_ring* %2, i32 0, i32 7, !dbg !10002
  %3 = load i32, i32* %cur, align 16, !dbg !10002
  store i32 %3, i32* %start_index, align 4, !dbg !10000
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10003, metadata !DIExpression()), !dbg !10004
  store i32 0, i32* %i, align 4, !dbg !10005
  br label %for.cond, !dbg !10007

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load i32, i32* %i, align 4, !dbg !10008
  %5 = load %struct.xlgmac_ring*, %struct.xlgmac_ring** %ring, align 8, !dbg !10010
  %dma_desc_count = getelementptr inbounds %struct.xlgmac_ring, %struct.xlgmac_ring* %5, i32 0, i32 3, !dbg !10011
  %6 = load i32, i32* %dma_desc_count, align 16, !dbg !10011
  %cmp = icmp ult i32 %4, %6, !dbg !10012
  br i1 %cmp, label %for.body, label %for.end, !dbg !10013

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.xlgmac_ring** %_ring, metadata !10014, metadata !DIExpression()), !dbg !10017
  %7 = load %struct.xlgmac_ring*, %struct.xlgmac_ring** %ring, align 8, !dbg !10017
  store %struct.xlgmac_ring* %7, %struct.xlgmac_ring** %_ring, align 8, !dbg !10017
  %8 = load %struct.xlgmac_ring*, %struct.xlgmac_ring** %_ring, align 8, !dbg !10017
  %desc_data_head = getelementptr inbounds %struct.xlgmac_ring, %struct.xlgmac_ring* %8, i32 0, i32 4, !dbg !10017
  %9 = load %struct.xlgmac_desc_data*, %struct.xlgmac_desc_data** %desc_data_head, align 8, !dbg !10017
  %10 = load i32, i32* %i, align 4, !dbg !10017
  %11 = load %struct.xlgmac_ring*, %struct.xlgmac_ring** %_ring, align 8, !dbg !10017
  %dma_desc_count1 = getelementptr inbounds %struct.xlgmac_ring, %struct.xlgmac_ring* %11, i32 0, i32 3, !dbg !10017
  %12 = load i32, i32* %dma_desc_count1, align 16, !dbg !10017
  %sub = sub i32 %12, 1, !dbg !10017
  %and = and i32 %10, %sub, !dbg !10017
  %idx.ext = zext i32 %and to i64, !dbg !10017
  %add.ptr = getelementptr %struct.xlgmac_desc_data, %struct.xlgmac_desc_data* %9, i64 %idx.ext, !dbg !10017
  store %struct.xlgmac_desc_data* %add.ptr, %struct.xlgmac_desc_data** %tmp, align 8, !dbg !10017
  %13 = load %struct.xlgmac_desc_data*, %struct.xlgmac_desc_data** %tmp, align 8, !dbg !10017
  store %struct.xlgmac_desc_data* %13, %struct.xlgmac_desc_data** %desc_data, align 8, !dbg !10018
  %14 = load %struct.xlgmac_desc_data*, %struct.xlgmac_desc_data** %desc_data, align 8, !dbg !10019
  call void @xlgmac_tx_desc_reset(%struct.xlgmac_desc_data* %14) #7, !dbg !10020
  br label %for.inc, !dbg !10021

for.inc:                                          ; preds = %for.body
  %15 = load i32, i32* %i, align 4, !dbg !10022
  %inc = add i32 %15, 1, !dbg !10022
  store i32 %inc, i32* %i, align 4, !dbg !10022
  br label %for.cond, !dbg !10023, !llvm.loop !10024

for.end:                                          ; preds = %for.cond
  %16 = load %struct.xlgmac_ring*, %struct.xlgmac_ring** %ring, align 8, !dbg !10026
  %dma_desc_count2 = getelementptr inbounds %struct.xlgmac_ring, %struct.xlgmac_ring* %16, i32 0, i32 3, !dbg !10027
  %17 = load i32, i32* %dma_desc_count2, align 16, !dbg !10027
  %sub3 = sub i32 %17, 1, !dbg !10028
  %18 = load %struct.xlgmac_channel*, %struct.xlgmac_channel** %channel.addr, align 8, !dbg !10029
  %dma_regs = getelementptr inbounds %struct.xlgmac_channel, %struct.xlgmac_channel* %18, i32 0, i32 3, !dbg !10029
  %19 = load i8*, i8** %dma_regs, align 32, !dbg !10029
  %add.ptr4 = getelementptr i8, i8* %19, i64 48, !dbg !10029
  call void @writel(i32 %sub3, i8* %add.ptr4) #7, !dbg !10030
  call void @llvm.dbg.declare(metadata %struct.xlgmac_ring** %_ring5, metadata !10031, metadata !DIExpression()), !dbg !10033
  %20 = load %struct.xlgmac_ring*, %struct.xlgmac_ring** %ring, align 8, !dbg !10033
  store %struct.xlgmac_ring* %20, %struct.xlgmac_ring** %_ring5, align 8, !dbg !10033
  %21 = load %struct.xlgmac_ring*, %struct.xlgmac_ring** %_ring5, align 8, !dbg !10033
  %desc_data_head7 = getelementptr inbounds %struct.xlgmac_ring, %struct.xlgmac_ring* %21, i32 0, i32 4, !dbg !10033
  %22 = load %struct.xlgmac_desc_data*, %struct.xlgmac_desc_data** %desc_data_head7, align 8, !dbg !10033
  %23 = load i32, i32* %start_index, align 4, !dbg !10033
  %24 = load %struct.xlgmac_ring*, %struct.xlgmac_ring** %_ring5, align 8, !dbg !10033
  %dma_desc_count8 = getelementptr inbounds %struct.xlgmac_ring, %struct.xlgmac_ring* %24, i32 0, i32 3, !dbg !10033
  %25 = load i32, i32* %dma_desc_count8, align 16, !dbg !10033
  %sub9 = sub i32 %25, 1, !dbg !10033
  %and10 = and i32 %23, %sub9, !dbg !10033
  %idx.ext11 = zext i32 %and10 to i64, !dbg !10033
  %add.ptr12 = getelementptr %struct.xlgmac_desc_data, %struct.xlgmac_desc_data* %22, i64 %idx.ext11, !dbg !10033
  store %struct.xlgmac_desc_data* %add.ptr12, %struct.xlgmac_desc_data** %tmp6, align 8, !dbg !10033
  %26 = load %struct.xlgmac_desc_data*, %struct.xlgmac_desc_data** %tmp6, align 8, !dbg !10033
  store %struct.xlgmac_desc_data* %26, %struct.xlgmac_desc_data** %desc_data, align 8, !dbg !10034
  %27 = load %struct.xlgmac_desc_data*, %struct.xlgmac_desc_data** %desc_data, align 8, !dbg !10035
  %dma_desc_addr = getelementptr inbounds %struct.xlgmac_desc_data, %struct.xlgmac_desc_data* %27, i32 0, i32 1, !dbg !10035
  %28 = load i64, i64* %dma_desc_addr, align 8, !dbg !10035
  %shr = lshr i64 %28, 16, !dbg !10035
  %shr13 = lshr i64 %shr, 16, !dbg !10035
  %conv = trunc i64 %shr13 to i32, !dbg !10035
  %29 = load %struct.xlgmac_channel*, %struct.xlgmac_channel** %channel.addr, align 8, !dbg !10036
  %dma_regs14 = getelementptr inbounds %struct.xlgmac_channel, %struct.xlgmac_channel* %29, i32 0, i32 3, !dbg !10036
  %30 = load i8*, i8** %dma_regs14, align 32, !dbg !10036
  %add.ptr15 = getelementptr i8, i8* %30, i64 16, !dbg !10036
  call void @writel(i32 %conv, i8* %add.ptr15) #7, !dbg !10037
  %31 = load %struct.xlgmac_desc_data*, %struct.xlgmac_desc_data** %desc_data, align 8, !dbg !10038
  %dma_desc_addr16 = getelementptr inbounds %struct.xlgmac_desc_data, %struct.xlgmac_desc_data* %31, i32 0, i32 1, !dbg !10038
  %32 = load i64, i64* %dma_desc_addr16, align 8, !dbg !10038
  %and17 = and i64 %32, 4294967295, !dbg !10038
  %conv18 = trunc i64 %and17 to i32, !dbg !10038
  %33 = load %struct.xlgmac_channel*, %struct.xlgmac_channel** %channel.addr, align 8, !dbg !10039
  %dma_regs19 = getelementptr inbounds %struct.xlgmac_channel, %struct.xlgmac_channel* %33, i32 0, i32 3, !dbg !10039
  %34 = load i8*, i8** %dma_regs19, align 32, !dbg !10039
  %add.ptr20 = getelementptr i8, i8* %34, i64 20, !dbg !10039
  call void @writel(i32 %conv18, i8* %add.ptr20) #7, !dbg !10040
  ret void, !dbg !10041
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @xlgmac_rx_desc_init(%struct.xlgmac_channel* %channel) #0 !dbg !10042 {
entry:
  %channel.addr = alloca %struct.xlgmac_channel*, align 8
  %pdata = alloca %struct.xlgmac_pdata*, align 8
  %ring = alloca %struct.xlgmac_ring*, align 8
  %start_index = alloca i32, align 4
  %desc_data = alloca %struct.xlgmac_desc_data*, align 8
  %i = alloca i32, align 4
  %_ring = alloca %struct.xlgmac_ring*, align 8
  %tmp = alloca %struct.xlgmac_desc_data*, align 8
  %_ring6 = alloca %struct.xlgmac_ring*, align 8
  %tmp7 = alloca %struct.xlgmac_desc_data*, align 8
  %_ring22 = alloca %struct.xlgmac_ring*, align 8
  %tmp23 = alloca %struct.xlgmac_desc_data*, align 8
  store %struct.xlgmac_channel* %channel, %struct.xlgmac_channel** %channel.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xlgmac_channel** %channel.addr, metadata !10043, metadata !DIExpression()), !dbg !10044
  call void @llvm.dbg.declare(metadata %struct.xlgmac_pdata** %pdata, metadata !10045, metadata !DIExpression()), !dbg !10046
  %0 = load %struct.xlgmac_channel*, %struct.xlgmac_channel** %channel.addr, align 8, !dbg !10047
  %pdata1 = getelementptr inbounds %struct.xlgmac_channel, %struct.xlgmac_channel* %0, i32 0, i32 1, !dbg !10048
  %1 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata1, align 16, !dbg !10048
  store %struct.xlgmac_pdata* %1, %struct.xlgmac_pdata** %pdata, align 8, !dbg !10046
  call void @llvm.dbg.declare(metadata %struct.xlgmac_ring** %ring, metadata !10049, metadata !DIExpression()), !dbg !10050
  %2 = load %struct.xlgmac_channel*, %struct.xlgmac_channel** %channel.addr, align 8, !dbg !10051
  %rx_ring = getelementptr inbounds %struct.xlgmac_channel, %struct.xlgmac_channel* %2, i32 0, i32 11, !dbg !10052
  %3 = load %struct.xlgmac_ring*, %struct.xlgmac_ring** %rx_ring, align 8, !dbg !10052
  store %struct.xlgmac_ring* %3, %struct.xlgmac_ring** %ring, align 8, !dbg !10050
  call void @llvm.dbg.declare(metadata i32* %start_index, metadata !10053, metadata !DIExpression()), !dbg !10054
  %4 = load %struct.xlgmac_ring*, %struct.xlgmac_ring** %ring, align 8, !dbg !10055
  %cur = getelementptr inbounds %struct.xlgmac_ring, %struct.xlgmac_ring* %4, i32 0, i32 7, !dbg !10056
  %5 = load i32, i32* %cur, align 16, !dbg !10056
  store i32 %5, i32* %start_index, align 4, !dbg !10054
  call void @llvm.dbg.declare(metadata %struct.xlgmac_desc_data** %desc_data, metadata !10057, metadata !DIExpression()), !dbg !10058
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10059, metadata !DIExpression()), !dbg !10060
  store i32 0, i32* %i, align 4, !dbg !10061
  br label %for.cond, !dbg !10063

for.cond:                                         ; preds = %for.inc, %entry
  %6 = load i32, i32* %i, align 4, !dbg !10064
  %7 = load %struct.xlgmac_ring*, %struct.xlgmac_ring** %ring, align 8, !dbg !10066
  %dma_desc_count = getelementptr inbounds %struct.xlgmac_ring, %struct.xlgmac_ring* %7, i32 0, i32 3, !dbg !10067
  %8 = load i32, i32* %dma_desc_count, align 16, !dbg !10067
  %cmp = icmp ult i32 %6, %8, !dbg !10068
  br i1 %cmp, label %for.body, label %for.end, !dbg !10069

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.xlgmac_ring** %_ring, metadata !10070, metadata !DIExpression()), !dbg !10073
  %9 = load %struct.xlgmac_ring*, %struct.xlgmac_ring** %ring, align 8, !dbg !10073
  store %struct.xlgmac_ring* %9, %struct.xlgmac_ring** %_ring, align 8, !dbg !10073
  %10 = load %struct.xlgmac_ring*, %struct.xlgmac_ring** %_ring, align 8, !dbg !10073
  %desc_data_head = getelementptr inbounds %struct.xlgmac_ring, %struct.xlgmac_ring* %10, i32 0, i32 4, !dbg !10073
  %11 = load %struct.xlgmac_desc_data*, %struct.xlgmac_desc_data** %desc_data_head, align 8, !dbg !10073
  %12 = load i32, i32* %i, align 4, !dbg !10073
  %13 = load %struct.xlgmac_ring*, %struct.xlgmac_ring** %_ring, align 8, !dbg !10073
  %dma_desc_count2 = getelementptr inbounds %struct.xlgmac_ring, %struct.xlgmac_ring* %13, i32 0, i32 3, !dbg !10073
  %14 = load i32, i32* %dma_desc_count2, align 16, !dbg !10073
  %sub = sub i32 %14, 1, !dbg !10073
  %and = and i32 %12, %sub, !dbg !10073
  %idx.ext = zext i32 %and to i64, !dbg !10073
  %add.ptr = getelementptr %struct.xlgmac_desc_data, %struct.xlgmac_desc_data* %11, i64 %idx.ext, !dbg !10073
  store %struct.xlgmac_desc_data* %add.ptr, %struct.xlgmac_desc_data** %tmp, align 8, !dbg !10073
  %15 = load %struct.xlgmac_desc_data*, %struct.xlgmac_desc_data** %tmp, align 8, !dbg !10073
  store %struct.xlgmac_desc_data* %15, %struct.xlgmac_desc_data** %desc_data, align 8, !dbg !10074
  %16 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata, align 8, !dbg !10075
  %17 = load %struct.xlgmac_desc_data*, %struct.xlgmac_desc_data** %desc_data, align 8, !dbg !10076
  %18 = load i32, i32* %i, align 4, !dbg !10077
  call void @xlgmac_rx_desc_reset(%struct.xlgmac_pdata* %16, %struct.xlgmac_desc_data* %17, i32 %18) #7, !dbg !10078
  br label %for.inc, !dbg !10079

for.inc:                                          ; preds = %for.body
  %19 = load i32, i32* %i, align 4, !dbg !10080
  %inc = add i32 %19, 1, !dbg !10080
  store i32 %inc, i32* %i, align 4, !dbg !10080
  br label %for.cond, !dbg !10081, !llvm.loop !10082

for.end:                                          ; preds = %for.cond
  %20 = load %struct.xlgmac_ring*, %struct.xlgmac_ring** %ring, align 8, !dbg !10084
  %dma_desc_count3 = getelementptr inbounds %struct.xlgmac_ring, %struct.xlgmac_ring* %20, i32 0, i32 3, !dbg !10085
  %21 = load i32, i32* %dma_desc_count3, align 16, !dbg !10085
  %sub4 = sub i32 %21, 1, !dbg !10086
  %22 = load %struct.xlgmac_channel*, %struct.xlgmac_channel** %channel.addr, align 8, !dbg !10087
  %dma_regs = getelementptr inbounds %struct.xlgmac_channel, %struct.xlgmac_channel* %22, i32 0, i32 3, !dbg !10087
  %23 = load i8*, i8** %dma_regs, align 32, !dbg !10087
  %add.ptr5 = getelementptr i8, i8* %23, i64 52, !dbg !10087
  call void @writel(i32 %sub4, i8* %add.ptr5) #7, !dbg !10088
  call void @llvm.dbg.declare(metadata %struct.xlgmac_ring** %_ring6, metadata !10089, metadata !DIExpression()), !dbg !10091
  %24 = load %struct.xlgmac_ring*, %struct.xlgmac_ring** %ring, align 8, !dbg !10091
  store %struct.xlgmac_ring* %24, %struct.xlgmac_ring** %_ring6, align 8, !dbg !10091
  %25 = load %struct.xlgmac_ring*, %struct.xlgmac_ring** %_ring6, align 8, !dbg !10091
  %desc_data_head8 = getelementptr inbounds %struct.xlgmac_ring, %struct.xlgmac_ring* %25, i32 0, i32 4, !dbg !10091
  %26 = load %struct.xlgmac_desc_data*, %struct.xlgmac_desc_data** %desc_data_head8, align 8, !dbg !10091
  %27 = load i32, i32* %start_index, align 4, !dbg !10091
  %28 = load %struct.xlgmac_ring*, %struct.xlgmac_ring** %_ring6, align 8, !dbg !10091
  %dma_desc_count9 = getelementptr inbounds %struct.xlgmac_ring, %struct.xlgmac_ring* %28, i32 0, i32 3, !dbg !10091
  %29 = load i32, i32* %dma_desc_count9, align 16, !dbg !10091
  %sub10 = sub i32 %29, 1, !dbg !10091
  %and11 = and i32 %27, %sub10, !dbg !10091
  %idx.ext12 = zext i32 %and11 to i64, !dbg !10091
  %add.ptr13 = getelementptr %struct.xlgmac_desc_data, %struct.xlgmac_desc_data* %26, i64 %idx.ext12, !dbg !10091
  store %struct.xlgmac_desc_data* %add.ptr13, %struct.xlgmac_desc_data** %tmp7, align 8, !dbg !10091
  %30 = load %struct.xlgmac_desc_data*, %struct.xlgmac_desc_data** %tmp7, align 8, !dbg !10091
  store %struct.xlgmac_desc_data* %30, %struct.xlgmac_desc_data** %desc_data, align 8, !dbg !10092
  %31 = load %struct.xlgmac_desc_data*, %struct.xlgmac_desc_data** %desc_data, align 8, !dbg !10093
  %dma_desc_addr = getelementptr inbounds %struct.xlgmac_desc_data, %struct.xlgmac_desc_data* %31, i32 0, i32 1, !dbg !10093
  %32 = load i64, i64* %dma_desc_addr, align 8, !dbg !10093
  %shr = lshr i64 %32, 16, !dbg !10093
  %shr14 = lshr i64 %shr, 16, !dbg !10093
  %conv = trunc i64 %shr14 to i32, !dbg !10093
  %33 = load %struct.xlgmac_channel*, %struct.xlgmac_channel** %channel.addr, align 8, !dbg !10094
  %dma_regs15 = getelementptr inbounds %struct.xlgmac_channel, %struct.xlgmac_channel* %33, i32 0, i32 3, !dbg !10094
  %34 = load i8*, i8** %dma_regs15, align 32, !dbg !10094
  %add.ptr16 = getelementptr i8, i8* %34, i64 24, !dbg !10094
  call void @writel(i32 %conv, i8* %add.ptr16) #7, !dbg !10095
  %35 = load %struct.xlgmac_desc_data*, %struct.xlgmac_desc_data** %desc_data, align 8, !dbg !10096
  %dma_desc_addr17 = getelementptr inbounds %struct.xlgmac_desc_data, %struct.xlgmac_desc_data* %35, i32 0, i32 1, !dbg !10096
  %36 = load i64, i64* %dma_desc_addr17, align 8, !dbg !10096
  %and18 = and i64 %36, 4294967295, !dbg !10096
  %conv19 = trunc i64 %and18 to i32, !dbg !10096
  %37 = load %struct.xlgmac_channel*, %struct.xlgmac_channel** %channel.addr, align 8, !dbg !10097
  %dma_regs20 = getelementptr inbounds %struct.xlgmac_channel, %struct.xlgmac_channel* %37, i32 0, i32 3, !dbg !10097
  %38 = load i8*, i8** %dma_regs20, align 32, !dbg !10097
  %add.ptr21 = getelementptr i8, i8* %38, i64 28, !dbg !10097
  call void @writel(i32 %conv19, i8* %add.ptr21) #7, !dbg !10098
  call void @llvm.dbg.declare(metadata %struct.xlgmac_ring** %_ring22, metadata !10099, metadata !DIExpression()), !dbg !10101
  %39 = load %struct.xlgmac_ring*, %struct.xlgmac_ring** %ring, align 8, !dbg !10101
  store %struct.xlgmac_ring* %39, %struct.xlgmac_ring** %_ring22, align 8, !dbg !10101
  %40 = load %struct.xlgmac_ring*, %struct.xlgmac_ring** %_ring22, align 8, !dbg !10101
  %desc_data_head24 = getelementptr inbounds %struct.xlgmac_ring, %struct.xlgmac_ring* %40, i32 0, i32 4, !dbg !10101
  %41 = load %struct.xlgmac_desc_data*, %struct.xlgmac_desc_data** %desc_data_head24, align 8, !dbg !10101
  %42 = load i32, i32* %start_index, align 4, !dbg !10101
  %43 = load %struct.xlgmac_ring*, %struct.xlgmac_ring** %ring, align 8, !dbg !10101
  %dma_desc_count25 = getelementptr inbounds %struct.xlgmac_ring, %struct.xlgmac_ring* %43, i32 0, i32 3, !dbg !10101
  %44 = load i32, i32* %dma_desc_count25, align 16, !dbg !10101
  %add = add i32 %42, %44, !dbg !10101
  %sub26 = sub i32 %add, 1, !dbg !10101
  %45 = load %struct.xlgmac_ring*, %struct.xlgmac_ring** %_ring22, align 8, !dbg !10101
  %dma_desc_count27 = getelementptr inbounds %struct.xlgmac_ring, %struct.xlgmac_ring* %45, i32 0, i32 3, !dbg !10101
  %46 = load i32, i32* %dma_desc_count27, align 16, !dbg !10101
  %sub28 = sub i32 %46, 1, !dbg !10101
  %and29 = and i32 %sub26, %sub28, !dbg !10101
  %idx.ext30 = zext i32 %and29 to i64, !dbg !10101
  %add.ptr31 = getelementptr %struct.xlgmac_desc_data, %struct.xlgmac_desc_data* %41, i64 %idx.ext30, !dbg !10101
  store %struct.xlgmac_desc_data* %add.ptr31, %struct.xlgmac_desc_data** %tmp23, align 8, !dbg !10101
  %47 = load %struct.xlgmac_desc_data*, %struct.xlgmac_desc_data** %tmp23, align 8, !dbg !10101
  store %struct.xlgmac_desc_data* %47, %struct.xlgmac_desc_data** %desc_data, align 8, !dbg !10102
  %48 = load %struct.xlgmac_desc_data*, %struct.xlgmac_desc_data** %desc_data, align 8, !dbg !10103
  %dma_desc_addr32 = getelementptr inbounds %struct.xlgmac_desc_data, %struct.xlgmac_desc_data* %48, i32 0, i32 1, !dbg !10103
  %49 = load i64, i64* %dma_desc_addr32, align 8, !dbg !10103
  %and33 = and i64 %49, 4294967295, !dbg !10103
  %conv34 = trunc i64 %and33 to i32, !dbg !10103
  %50 = load %struct.xlgmac_channel*, %struct.xlgmac_channel** %channel.addr, align 8, !dbg !10104
  %dma_regs35 = getelementptr inbounds %struct.xlgmac_channel, %struct.xlgmac_channel* %50, i32 0, i32 3, !dbg !10104
  %51 = load i8*, i8** %dma_regs35, align 32, !dbg !10104
  %add.ptr36 = getelementptr i8, i8* %51, i64 44, !dbg !10104
  call void @writel(i32 %conv34, i8* %add.ptr36) #7, !dbg !10105
  ret void, !dbg !10106
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @xlgmac_tx_desc_reset(%struct.xlgmac_desc_data* %desc_data) #0 !dbg !10107 {
entry:
  %desc_data.addr = alloca %struct.xlgmac_desc_data*, align 8
  %dma_desc = alloca %struct.xlgmac_dma_desc*, align 8
  store %struct.xlgmac_desc_data* %desc_data, %struct.xlgmac_desc_data** %desc_data.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xlgmac_desc_data** %desc_data.addr, metadata !10108, metadata !DIExpression()), !dbg !10109
  call void @llvm.dbg.declare(metadata %struct.xlgmac_dma_desc** %dma_desc, metadata !10110, metadata !DIExpression()), !dbg !10111
  %0 = load %struct.xlgmac_desc_data*, %struct.xlgmac_desc_data** %desc_data.addr, align 8, !dbg !10112
  %dma_desc1 = getelementptr inbounds %struct.xlgmac_desc_data, %struct.xlgmac_desc_data* %0, i32 0, i32 0, !dbg !10113
  %1 = load %struct.xlgmac_dma_desc*, %struct.xlgmac_dma_desc** %dma_desc1, align 8, !dbg !10113
  store %struct.xlgmac_dma_desc* %1, %struct.xlgmac_dma_desc** %dma_desc, align 8, !dbg !10111
  %2 = load %struct.xlgmac_dma_desc*, %struct.xlgmac_dma_desc** %dma_desc, align 8, !dbg !10114
  %desc0 = getelementptr inbounds %struct.xlgmac_dma_desc, %struct.xlgmac_dma_desc* %2, i32 0, i32 0, !dbg !10115
  store i32 0, i32* %desc0, align 4, !dbg !10116
  %3 = load %struct.xlgmac_dma_desc*, %struct.xlgmac_dma_desc** %dma_desc, align 8, !dbg !10117
  %desc1 = getelementptr inbounds %struct.xlgmac_dma_desc, %struct.xlgmac_dma_desc* %3, i32 0, i32 1, !dbg !10118
  store i32 0, i32* %desc1, align 4, !dbg !10119
  %4 = load %struct.xlgmac_dma_desc*, %struct.xlgmac_dma_desc** %dma_desc, align 8, !dbg !10120
  %desc2 = getelementptr inbounds %struct.xlgmac_dma_desc, %struct.xlgmac_dma_desc* %4, i32 0, i32 2, !dbg !10121
  store i32 0, i32* %desc2, align 4, !dbg !10122
  %5 = load %struct.xlgmac_dma_desc*, %struct.xlgmac_dma_desc** %dma_desc, align 8, !dbg !10123
  %desc3 = getelementptr inbounds %struct.xlgmac_dma_desc, %struct.xlgmac_dma_desc* %5, i32 0, i32 3, !dbg !10124
  store i32 0, i32* %desc3, align 4, !dbg !10125
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !10126, !srcloc !10127
  ret void, !dbg !10128
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @xlgmac_rx_desc_reset(%struct.xlgmac_pdata* %pdata, %struct.xlgmac_desc_data* %desc_data, i32 %index) #0 !dbg !10129 {
entry:
  %pdata.addr = alloca %struct.xlgmac_pdata*, align 8
  %desc_data.addr = alloca %struct.xlgmac_desc_data*, align 8
  %index.addr = alloca i32, align 4
  %dma_desc = alloca %struct.xlgmac_dma_desc*, align 8
  %rx_frames = alloca i32, align 4
  %rx_usecs = alloca i32, align 4
  %hdr_dma = alloca i64, align 8
  %buf_dma = alloca i64, align 8
  %inte = alloca i32, align 4
  %_var = alloca i32, align 4
  %_pos = alloca i32, align 4
  %_len = alloca i32, align 4
  %_val = alloca i32, align 4
  %tmp = alloca i32, align 4
  %_var56 = alloca i32, align 4
  %_pos58 = alloca i32, align 4
  %_len59 = alloca i32, align 4
  %_val60 = alloca i32, align 4
  %tmp93 = alloca i32, align 4
  store %struct.xlgmac_pdata* %pdata, %struct.xlgmac_pdata** %pdata.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xlgmac_pdata** %pdata.addr, metadata !10130, metadata !DIExpression()), !dbg !10131
  store %struct.xlgmac_desc_data* %desc_data, %struct.xlgmac_desc_data** %desc_data.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xlgmac_desc_data** %desc_data.addr, metadata !10132, metadata !DIExpression()), !dbg !10133
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !10134, metadata !DIExpression()), !dbg !10135
  call void @llvm.dbg.declare(metadata %struct.xlgmac_dma_desc** %dma_desc, metadata !10136, metadata !DIExpression()), !dbg !10137
  %0 = load %struct.xlgmac_desc_data*, %struct.xlgmac_desc_data** %desc_data.addr, align 8, !dbg !10138
  %dma_desc1 = getelementptr inbounds %struct.xlgmac_desc_data, %struct.xlgmac_desc_data* %0, i32 0, i32 0, !dbg !10139
  %1 = load %struct.xlgmac_dma_desc*, %struct.xlgmac_dma_desc** %dma_desc1, align 8, !dbg !10139
  store %struct.xlgmac_dma_desc* %1, %struct.xlgmac_dma_desc** %dma_desc, align 8, !dbg !10137
  call void @llvm.dbg.declare(metadata i32* %rx_frames, metadata !10140, metadata !DIExpression()), !dbg !10141
  %2 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !10142
  %rx_frames2 = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %2, i32 0, i32 29, !dbg !10143
  %3 = load i32, i32* %rx_frames2, align 4, !dbg !10143
  store i32 %3, i32* %rx_frames, align 4, !dbg !10141
  call void @llvm.dbg.declare(metadata i32* %rx_usecs, metadata !10144, metadata !DIExpression()), !dbg !10145
  %4 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !10146
  %rx_usecs3 = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %4, i32 0, i32 28, !dbg !10147
  %5 = load i32, i32* %rx_usecs3, align 8, !dbg !10147
  store i32 %5, i32* %rx_usecs, align 4, !dbg !10145
  call void @llvm.dbg.declare(metadata i64* %hdr_dma, metadata !10148, metadata !DIExpression()), !dbg !10149
  call void @llvm.dbg.declare(metadata i64* %buf_dma, metadata !10150, metadata !DIExpression()), !dbg !10151
  call void @llvm.dbg.declare(metadata i32* %inte, metadata !10152, metadata !DIExpression()), !dbg !10153
  %6 = load i32, i32* %rx_usecs, align 4, !dbg !10154
  %tobool = icmp ne i32 %6, 0, !dbg !10154
  br i1 %tobool, label %if.else, label %land.lhs.true, !dbg !10156

land.lhs.true:                                    ; preds = %entry
  %7 = load i32, i32* %rx_frames, align 4, !dbg !10157
  %tobool4 = icmp ne i32 %7, 0, !dbg !10157
  br i1 %tobool4, label %if.else, label %if.then, !dbg !10158

if.then:                                          ; preds = %land.lhs.true
  store i32 1, i32* %inte, align 4, !dbg !10159
  br label %if.end10, !dbg !10161

if.else:                                          ; preds = %land.lhs.true, %entry
  %8 = load i32, i32* %rx_frames, align 4, !dbg !10162
  %tobool5 = icmp ne i32 %8, 0, !dbg !10162
  br i1 %tobool5, label %land.lhs.true6, label %if.else9, !dbg !10165

land.lhs.true6:                                   ; preds = %if.else
  %9 = load i32, i32* %index.addr, align 4, !dbg !10166
  %add = add i32 %9, 1, !dbg !10167
  %10 = load i32, i32* %rx_frames, align 4, !dbg !10168
  %rem = urem i32 %add, %10, !dbg !10169
  %tobool7 = icmp ne i32 %rem, 0, !dbg !10169
  br i1 %tobool7, label %if.else9, label %if.then8, !dbg !10170

if.then8:                                         ; preds = %land.lhs.true6
  store i32 1, i32* %inte, align 4, !dbg !10171
  br label %if.end, !dbg !10172

if.else9:                                         ; preds = %land.lhs.true6, %if.else
  store i32 0, i32* %inte, align 4, !dbg !10173
  br label %if.end

if.end:                                           ; preds = %if.else9, %if.then8
  br label %if.end10

if.end10:                                         ; preds = %if.end, %if.then
  %11 = load %struct.xlgmac_desc_data*, %struct.xlgmac_desc_data** %desc_data.addr, align 8, !dbg !10174
  %rx = getelementptr inbounds %struct.xlgmac_desc_data, %struct.xlgmac_desc_data* %11, i32 0, i32 6, !dbg !10175
  %hdr = getelementptr inbounds %struct.xlgmac_rx_desc_data, %struct.xlgmac_rx_desc_data* %rx, i32 0, i32 0, !dbg !10176
  %dma_base = getelementptr inbounds %struct.xlgmac_buffer_data, %struct.xlgmac_buffer_data* %hdr, i32 0, i32 2, !dbg !10177
  %12 = load i64, i64* %dma_base, align 8, !dbg !10177
  %13 = load %struct.xlgmac_desc_data*, %struct.xlgmac_desc_data** %desc_data.addr, align 8, !dbg !10178
  %rx11 = getelementptr inbounds %struct.xlgmac_desc_data, %struct.xlgmac_desc_data* %13, i32 0, i32 6, !dbg !10179
  %hdr12 = getelementptr inbounds %struct.xlgmac_rx_desc_data, %struct.xlgmac_rx_desc_data* %rx11, i32 0, i32 0, !dbg !10180
  %dma_off = getelementptr inbounds %struct.xlgmac_buffer_data, %struct.xlgmac_buffer_data* %hdr12, i32 0, i32 3, !dbg !10181
  %14 = load i64, i64* %dma_off, align 8, !dbg !10181
  %add13 = add i64 %12, %14, !dbg !10182
  store i64 %add13, i64* %hdr_dma, align 8, !dbg !10183
  %15 = load %struct.xlgmac_desc_data*, %struct.xlgmac_desc_data** %desc_data.addr, align 8, !dbg !10184
  %rx14 = getelementptr inbounds %struct.xlgmac_desc_data, %struct.xlgmac_desc_data* %15, i32 0, i32 6, !dbg !10185
  %buf = getelementptr inbounds %struct.xlgmac_rx_desc_data, %struct.xlgmac_rx_desc_data* %rx14, i32 0, i32 1, !dbg !10186
  %dma_base15 = getelementptr inbounds %struct.xlgmac_buffer_data, %struct.xlgmac_buffer_data* %buf, i32 0, i32 2, !dbg !10187
  %16 = load i64, i64* %dma_base15, align 8, !dbg !10187
  %17 = load %struct.xlgmac_desc_data*, %struct.xlgmac_desc_data** %desc_data.addr, align 8, !dbg !10188
  %rx16 = getelementptr inbounds %struct.xlgmac_desc_data, %struct.xlgmac_desc_data* %17, i32 0, i32 6, !dbg !10189
  %buf17 = getelementptr inbounds %struct.xlgmac_rx_desc_data, %struct.xlgmac_rx_desc_data* %rx16, i32 0, i32 1, !dbg !10190
  %dma_off18 = getelementptr inbounds %struct.xlgmac_buffer_data, %struct.xlgmac_buffer_data* %buf17, i32 0, i32 3, !dbg !10191
  %18 = load i64, i64* %dma_off18, align 8, !dbg !10191
  %add19 = add i64 %16, %18, !dbg !10192
  store i64 %add19, i64* %buf_dma, align 8, !dbg !10193
  %19 = load i64, i64* %hdr_dma, align 8, !dbg !10194
  %and = and i64 %19, 4294967295, !dbg !10194
  %conv = trunc i64 %and to i32, !dbg !10194
  %20 = load %struct.xlgmac_dma_desc*, %struct.xlgmac_dma_desc** %dma_desc, align 8, !dbg !10195
  %desc0 = getelementptr inbounds %struct.xlgmac_dma_desc, %struct.xlgmac_dma_desc* %20, i32 0, i32 0, !dbg !10196
  store i32 %conv, i32* %desc0, align 4, !dbg !10197
  %21 = load i64, i64* %hdr_dma, align 8, !dbg !10198
  %shr = lshr i64 %21, 16, !dbg !10198
  %shr20 = lshr i64 %shr, 16, !dbg !10198
  %conv21 = trunc i64 %shr20 to i32, !dbg !10198
  %22 = load %struct.xlgmac_dma_desc*, %struct.xlgmac_dma_desc** %dma_desc, align 8, !dbg !10199
  %desc1 = getelementptr inbounds %struct.xlgmac_dma_desc, %struct.xlgmac_dma_desc* %22, i32 0, i32 1, !dbg !10200
  store i32 %conv21, i32* %desc1, align 4, !dbg !10201
  %23 = load i64, i64* %buf_dma, align 8, !dbg !10202
  %and22 = and i64 %23, 4294967295, !dbg !10202
  %conv23 = trunc i64 %and22 to i32, !dbg !10202
  %24 = load %struct.xlgmac_dma_desc*, %struct.xlgmac_dma_desc** %dma_desc, align 8, !dbg !10203
  %desc2 = getelementptr inbounds %struct.xlgmac_dma_desc, %struct.xlgmac_dma_desc* %24, i32 0, i32 2, !dbg !10204
  store i32 %conv23, i32* %desc2, align 4, !dbg !10205
  %25 = load i64, i64* %buf_dma, align 8, !dbg !10206
  %shr24 = lshr i64 %25, 16, !dbg !10206
  %shr25 = lshr i64 %shr24, 16, !dbg !10206
  %conv26 = trunc i64 %shr25 to i32, !dbg !10206
  %26 = load %struct.xlgmac_dma_desc*, %struct.xlgmac_dma_desc** %dma_desc, align 8, !dbg !10207
  %desc3 = getelementptr inbounds %struct.xlgmac_dma_desc, %struct.xlgmac_dma_desc* %26, i32 0, i32 3, !dbg !10208
  store i32 %conv26, i32* %desc3, align 4, !dbg !10209
  call void @llvm.dbg.declare(metadata i32* %_var, metadata !10210, metadata !DIExpression()), !dbg !10212
  %27 = load %struct.xlgmac_dma_desc*, %struct.xlgmac_dma_desc** %dma_desc, align 8, !dbg !10212
  %desc327 = getelementptr inbounds %struct.xlgmac_dma_desc, %struct.xlgmac_dma_desc* %27, i32 0, i32 3, !dbg !10212
  %28 = load i32, i32* %desc327, align 4, !dbg !10212
  store i32 %28, i32* %_var, align 4, !dbg !10212
  call void @llvm.dbg.declare(metadata i32* %_pos, metadata !10213, metadata !DIExpression()), !dbg !10212
  store i32 30, i32* %_pos, align 4, !dbg !10212
  call void @llvm.dbg.declare(metadata i32* %_len, metadata !10214, metadata !DIExpression()), !dbg !10212
  store i32 1, i32* %_len, align 4, !dbg !10212
  call void @llvm.dbg.declare(metadata i32* %_val, metadata !10215, metadata !DIExpression()), !dbg !10212
  %29 = load i32, i32* %inte, align 4, !dbg !10212
  store i32 %29, i32* %_val, align 4, !dbg !10212
  %30 = load i32, i32* %_val, align 4, !dbg !10212
  %31 = load i32, i32* %_pos, align 4, !dbg !10212
  %shl = shl i32 %30, %31, !dbg !10212
  %conv28 = zext i32 %shl to i64, !dbg !10212
  %32 = load i32, i32* %_pos, align 4, !dbg !10212
  %sh_prom = zext i32 %32 to i64, !dbg !10212
  %shl29 = shl i64 1, %sh_prom, !dbg !10212
  %sub = sub i64 -1, %shl29, !dbg !10212
  %add30 = add i64 %sub, 1, !dbg !10212
  %33 = load i32, i32* %_pos, align 4, !dbg !10212
  %34 = load i32, i32* %_len, align 4, !dbg !10212
  %add31 = add i32 %33, %34, !dbg !10212
  %sub32 = sub i32 %add31, 1, !dbg !10212
  %sub33 = sub i32 63, %sub32, !dbg !10212
  %sh_prom34 = zext i32 %sub33 to i64, !dbg !10212
  %shr35 = lshr i64 -1, %sh_prom34, !dbg !10212
  %and36 = and i64 %add30, %shr35, !dbg !10212
  %add37 = add i64 0, %and36, !dbg !10212
  %and38 = and i64 %conv28, %add37, !dbg !10212
  %conv39 = trunc i64 %and38 to i32, !dbg !10212
  store i32 %conv39, i32* %_val, align 4, !dbg !10212
  %35 = load i32, i32* %_var, align 4, !dbg !10212
  %conv40 = zext i32 %35 to i64, !dbg !10212
  %36 = load i32, i32* %_pos, align 4, !dbg !10212
  %sh_prom41 = zext i32 %36 to i64, !dbg !10212
  %shl42 = shl i64 1, %sh_prom41, !dbg !10212
  %sub43 = sub i64 -1, %shl42, !dbg !10212
  %add44 = add i64 %sub43, 1, !dbg !10212
  %37 = load i32, i32* %_pos, align 4, !dbg !10212
  %38 = load i32, i32* %_len, align 4, !dbg !10212
  %add45 = add i32 %37, %38, !dbg !10212
  %sub46 = sub i32 %add45, 1, !dbg !10212
  %sub47 = sub i32 63, %sub46, !dbg !10212
  %sh_prom48 = zext i32 %sub47 to i64, !dbg !10212
  %shr49 = lshr i64 -1, %sh_prom48, !dbg !10212
  %and50 = and i64 %add44, %shr49, !dbg !10212
  %add51 = add i64 0, %and50, !dbg !10212
  %neg = xor i64 %add51, -1, !dbg !10212
  %and52 = and i64 %conv40, %neg, !dbg !10212
  %39 = load i32, i32* %_val, align 4, !dbg !10212
  %conv53 = zext i32 %39 to i64, !dbg !10212
  %or = or i64 %and52, %conv53, !dbg !10212
  %conv54 = trunc i64 %or to i32, !dbg !10212
  store i32 %conv54, i32* %_var, align 4, !dbg !10212
  %40 = load i32, i32* %_var, align 4, !dbg !10212
  store i32 %40, i32* %tmp, align 4, !dbg !10212
  %41 = load i32, i32* %tmp, align 4, !dbg !10212
  %42 = load %struct.xlgmac_dma_desc*, %struct.xlgmac_dma_desc** %dma_desc, align 8, !dbg !10216
  %desc355 = getelementptr inbounds %struct.xlgmac_dma_desc, %struct.xlgmac_dma_desc* %42, i32 0, i32 3, !dbg !10217
  store i32 %41, i32* %desc355, align 4, !dbg !10218
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !10219, !srcloc !10220
  call void @llvm.dbg.declare(metadata i32* %_var56, metadata !10221, metadata !DIExpression()), !dbg !10223
  %43 = load %struct.xlgmac_dma_desc*, %struct.xlgmac_dma_desc** %dma_desc, align 8, !dbg !10223
  %desc357 = getelementptr inbounds %struct.xlgmac_dma_desc, %struct.xlgmac_dma_desc* %43, i32 0, i32 3, !dbg !10223
  %44 = load i32, i32* %desc357, align 4, !dbg !10223
  store i32 %44, i32* %_var56, align 4, !dbg !10223
  call void @llvm.dbg.declare(metadata i32* %_pos58, metadata !10224, metadata !DIExpression()), !dbg !10223
  store i32 31, i32* %_pos58, align 4, !dbg !10223
  call void @llvm.dbg.declare(metadata i32* %_len59, metadata !10225, metadata !DIExpression()), !dbg !10223
  store i32 1, i32* %_len59, align 4, !dbg !10223
  call void @llvm.dbg.declare(metadata i32* %_val60, metadata !10226, metadata !DIExpression()), !dbg !10223
  store i32 1, i32* %_val60, align 4, !dbg !10223
  %45 = load i32, i32* %_val60, align 4, !dbg !10223
  %46 = load i32, i32* %_pos58, align 4, !dbg !10223
  %shl61 = shl i32 %45, %46, !dbg !10223
  %conv62 = sext i32 %shl61 to i64, !dbg !10223
  %47 = load i32, i32* %_pos58, align 4, !dbg !10223
  %sh_prom63 = zext i32 %47 to i64, !dbg !10223
  %shl64 = shl i64 1, %sh_prom63, !dbg !10223
  %sub65 = sub i64 -1, %shl64, !dbg !10223
  %add66 = add i64 %sub65, 1, !dbg !10223
  %48 = load i32, i32* %_pos58, align 4, !dbg !10223
  %49 = load i32, i32* %_len59, align 4, !dbg !10223
  %add67 = add i32 %48, %49, !dbg !10223
  %sub68 = sub i32 %add67, 1, !dbg !10223
  %sub69 = sub i32 63, %sub68, !dbg !10223
  %sh_prom70 = zext i32 %sub69 to i64, !dbg !10223
  %shr71 = lshr i64 -1, %sh_prom70, !dbg !10223
  %and72 = and i64 %add66, %shr71, !dbg !10223
  %add73 = add i64 0, %and72, !dbg !10223
  %and74 = and i64 %conv62, %add73, !dbg !10223
  %conv75 = trunc i64 %and74 to i32, !dbg !10223
  store i32 %conv75, i32* %_val60, align 4, !dbg !10223
  %50 = load i32, i32* %_var56, align 4, !dbg !10223
  %conv76 = zext i32 %50 to i64, !dbg !10223
  %51 = load i32, i32* %_pos58, align 4, !dbg !10223
  %sh_prom77 = zext i32 %51 to i64, !dbg !10223
  %shl78 = shl i64 1, %sh_prom77, !dbg !10223
  %sub79 = sub i64 -1, %shl78, !dbg !10223
  %add80 = add i64 %sub79, 1, !dbg !10223
  %52 = load i32, i32* %_pos58, align 4, !dbg !10223
  %53 = load i32, i32* %_len59, align 4, !dbg !10223
  %add81 = add i32 %52, %53, !dbg !10223
  %sub82 = sub i32 %add81, 1, !dbg !10223
  %sub83 = sub i32 63, %sub82, !dbg !10223
  %sh_prom84 = zext i32 %sub83 to i64, !dbg !10223
  %shr85 = lshr i64 -1, %sh_prom84, !dbg !10223
  %and86 = and i64 %add80, %shr85, !dbg !10223
  %add87 = add i64 0, %and86, !dbg !10223
  %neg88 = xor i64 %add87, -1, !dbg !10223
  %and89 = and i64 %conv76, %neg88, !dbg !10223
  %54 = load i32, i32* %_val60, align 4, !dbg !10223
  %conv90 = sext i32 %54 to i64, !dbg !10223
  %or91 = or i64 %and89, %conv90, !dbg !10223
  %conv92 = trunc i64 %or91 to i32, !dbg !10223
  store i32 %conv92, i32* %_var56, align 4, !dbg !10223
  %55 = load i32, i32* %_var56, align 4, !dbg !10223
  store i32 %55, i32* %tmp93, align 4, !dbg !10223
  %56 = load i32, i32* %tmp93, align 4, !dbg !10223
  %57 = load %struct.xlgmac_dma_desc*, %struct.xlgmac_dma_desc** %dma_desc, align 8, !dbg !10227
  %desc394 = getelementptr inbounds %struct.xlgmac_dma_desc, %struct.xlgmac_dma_desc* %57, i32 0, i32 3, !dbg !10228
  store i32 %56, i32* %desc394, align 4, !dbg !10229
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !10230, !srcloc !10231
  ret void, !dbg !10232
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @xlgmac_is_last_desc(%struct.xlgmac_dma_desc* %dma_desc) #0 !dbg !10233 {
entry:
  %dma_desc.addr = alloca %struct.xlgmac_dma_desc*, align 8
  %_pos = alloca i32, align 4
  %_len = alloca i32, align 4
  %_var = alloca i32, align 4
  %tmp = alloca i64, align 8
  store %struct.xlgmac_dma_desc* %dma_desc, %struct.xlgmac_dma_desc** %dma_desc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xlgmac_dma_desc** %dma_desc.addr, metadata !10234, metadata !DIExpression()), !dbg !10235
  call void @llvm.dbg.declare(metadata i32* %_pos, metadata !10236, metadata !DIExpression()), !dbg !10238
  store i32 28, i32* %_pos, align 4, !dbg !10238
  call void @llvm.dbg.declare(metadata i32* %_len, metadata !10239, metadata !DIExpression()), !dbg !10238
  store i32 1, i32* %_len, align 4, !dbg !10238
  call void @llvm.dbg.declare(metadata i32* %_var, metadata !10240, metadata !DIExpression()), !dbg !10238
  %0 = load %struct.xlgmac_dma_desc*, %struct.xlgmac_dma_desc** %dma_desc.addr, align 8, !dbg !10238
  %desc3 = getelementptr inbounds %struct.xlgmac_dma_desc, %struct.xlgmac_dma_desc* %0, i32 0, i32 3, !dbg !10238
  %1 = load i32, i32* %desc3, align 4, !dbg !10238
  store i32 %1, i32* %_var, align 4, !dbg !10238
  %2 = load i32, i32* %_var, align 4, !dbg !10238
  %conv = zext i32 %2 to i64, !dbg !10238
  %3 = load i32, i32* %_pos, align 4, !dbg !10238
  %sh_prom = zext i32 %3 to i64, !dbg !10238
  %shl = shl i64 1, %sh_prom, !dbg !10238
  %sub = sub i64 -1, %shl, !dbg !10238
  %add = add i64 %sub, 1, !dbg !10238
  %4 = load i32, i32* %_pos, align 4, !dbg !10238
  %5 = load i32, i32* %_len, align 4, !dbg !10238
  %add1 = add i32 %4, %5, !dbg !10238
  %sub2 = sub i32 %add1, 1, !dbg !10238
  %sub3 = sub i32 63, %sub2, !dbg !10238
  %sh_prom4 = zext i32 %sub3 to i64, !dbg !10238
  %shr = lshr i64 -1, %sh_prom4, !dbg !10238
  %and = and i64 %add, %shr, !dbg !10238
  %add5 = add i64 0, %and, !dbg !10238
  %and6 = and i64 %conv, %add5, !dbg !10238
  %6 = load i32, i32* %_pos, align 4, !dbg !10238
  %sh_prom7 = zext i32 %6 to i64, !dbg !10238
  %shr8 = lshr i64 %and6, %sh_prom7, !dbg !10238
  store i64 %shr8, i64* %tmp, align 8, !dbg !10238
  %7 = load i64, i64* %tmp, align 8, !dbg !10238
  %conv9 = trunc i64 %7 to i32, !dbg !10241
  ret i32 %conv9, !dbg !10242
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @xlgmac_is_context_desc(%struct.xlgmac_dma_desc* %dma_desc) #0 !dbg !10243 {
entry:
  %dma_desc.addr = alloca %struct.xlgmac_dma_desc*, align 8
  %_pos = alloca i32, align 4
  %_len = alloca i32, align 4
  %_var = alloca i32, align 4
  %tmp = alloca i64, align 8
  store %struct.xlgmac_dma_desc* %dma_desc, %struct.xlgmac_dma_desc** %dma_desc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xlgmac_dma_desc** %dma_desc.addr, metadata !10244, metadata !DIExpression()), !dbg !10245
  call void @llvm.dbg.declare(metadata i32* %_pos, metadata !10246, metadata !DIExpression()), !dbg !10248
  store i32 30, i32* %_pos, align 4, !dbg !10248
  call void @llvm.dbg.declare(metadata i32* %_len, metadata !10249, metadata !DIExpression()), !dbg !10248
  store i32 1, i32* %_len, align 4, !dbg !10248
  call void @llvm.dbg.declare(metadata i32* %_var, metadata !10250, metadata !DIExpression()), !dbg !10248
  %0 = load %struct.xlgmac_dma_desc*, %struct.xlgmac_dma_desc** %dma_desc.addr, align 8, !dbg !10248
  %desc3 = getelementptr inbounds %struct.xlgmac_dma_desc, %struct.xlgmac_dma_desc* %0, i32 0, i32 3, !dbg !10248
  %1 = load i32, i32* %desc3, align 4, !dbg !10248
  store i32 %1, i32* %_var, align 4, !dbg !10248
  %2 = load i32, i32* %_var, align 4, !dbg !10248
  %conv = zext i32 %2 to i64, !dbg !10248
  %3 = load i32, i32* %_pos, align 4, !dbg !10248
  %sh_prom = zext i32 %3 to i64, !dbg !10248
  %shl = shl i64 1, %sh_prom, !dbg !10248
  %sub = sub i64 -1, %shl, !dbg !10248
  %add = add i64 %sub, 1, !dbg !10248
  %4 = load i32, i32* %_pos, align 4, !dbg !10248
  %5 = load i32, i32* %_len, align 4, !dbg !10248
  %add1 = add i32 %4, %5, !dbg !10248
  %sub2 = sub i32 %add1, 1, !dbg !10248
  %sub3 = sub i32 63, %sub2, !dbg !10248
  %sh_prom4 = zext i32 %sub3 to i64, !dbg !10248
  %shr = lshr i64 -1, %sh_prom4, !dbg !10248
  %and = and i64 %add, %shr, !dbg !10248
  %add5 = add i64 0, %and, !dbg !10248
  %and6 = and i64 %conv, %add5, !dbg !10248
  %6 = load i32, i32* %_pos, align 4, !dbg !10248
  %sh_prom7 = zext i32 %6 to i64, !dbg !10248
  %shr8 = lshr i64 %and6, %sh_prom7, !dbg !10248
  store i64 %shr8, i64* %tmp, align 8, !dbg !10248
  %7 = load i64, i64* %tmp, align 8, !dbg !10248
  %conv9 = trunc i64 %7 to i32, !dbg !10251
  ret i32 %conv9, !dbg !10252
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @xlgmac_tx_start_xmit(%struct.xlgmac_channel* %channel, %struct.xlgmac_ring* %ring) #0 !dbg !10253 {
entry:
  %retval.i = alloca i64, align 8
  %u.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %u.addr.i, metadata !10254, metadata !DIExpression()), !dbg !10259
  %channel.addr = alloca %struct.xlgmac_channel*, align 8
  %ring.addr = alloca %struct.xlgmac_ring*, align 8
  %pdata = alloca %struct.xlgmac_pdata*, align 8
  %desc_data = alloca %struct.xlgmac_desc_data*, align 8
  %_ring = alloca %struct.xlgmac_ring*, align 8
  %tmp = alloca %struct.xlgmac_desc_data*, align 8
  store %struct.xlgmac_channel* %channel, %struct.xlgmac_channel** %channel.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xlgmac_channel** %channel.addr, metadata !10263, metadata !DIExpression()), !dbg !10264
  store %struct.xlgmac_ring* %ring, %struct.xlgmac_ring** %ring.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xlgmac_ring** %ring.addr, metadata !10265, metadata !DIExpression()), !dbg !10266
  call void @llvm.dbg.declare(metadata %struct.xlgmac_pdata** %pdata, metadata !10267, metadata !DIExpression()), !dbg !10268
  %0 = load %struct.xlgmac_channel*, %struct.xlgmac_channel** %channel.addr, align 8, !dbg !10269
  %pdata1 = getelementptr inbounds %struct.xlgmac_channel, %struct.xlgmac_channel* %0, i32 0, i32 1, !dbg !10270
  %1 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata1, align 16, !dbg !10270
  store %struct.xlgmac_pdata* %1, %struct.xlgmac_pdata** %pdata, align 8, !dbg !10268
  call void @llvm.dbg.declare(metadata %struct.xlgmac_desc_data** %desc_data, metadata !10271, metadata !DIExpression()), !dbg !10272
  call void asm sideeffect "sfence", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !10273, !srcloc !10274
  call void @llvm.dbg.declare(metadata %struct.xlgmac_ring** %_ring, metadata !10275, metadata !DIExpression()), !dbg !10277
  %2 = load %struct.xlgmac_ring*, %struct.xlgmac_ring** %ring.addr, align 8, !dbg !10277
  store %struct.xlgmac_ring* %2, %struct.xlgmac_ring** %_ring, align 8, !dbg !10277
  %3 = load %struct.xlgmac_ring*, %struct.xlgmac_ring** %_ring, align 8, !dbg !10277
  %desc_data_head = getelementptr inbounds %struct.xlgmac_ring, %struct.xlgmac_ring* %3, i32 0, i32 4, !dbg !10277
  %4 = load %struct.xlgmac_desc_data*, %struct.xlgmac_desc_data** %desc_data_head, align 8, !dbg !10277
  %5 = load %struct.xlgmac_ring*, %struct.xlgmac_ring** %ring.addr, align 8, !dbg !10277
  %cur = getelementptr inbounds %struct.xlgmac_ring, %struct.xlgmac_ring* %5, i32 0, i32 7, !dbg !10277
  %6 = load i32, i32* %cur, align 16, !dbg !10277
  %7 = load %struct.xlgmac_ring*, %struct.xlgmac_ring** %_ring, align 8, !dbg !10277
  %dma_desc_count = getelementptr inbounds %struct.xlgmac_ring, %struct.xlgmac_ring* %7, i32 0, i32 3, !dbg !10277
  %8 = load i32, i32* %dma_desc_count, align 16, !dbg !10277
  %sub = sub i32 %8, 1, !dbg !10277
  %and = and i32 %6, %sub, !dbg !10277
  %idx.ext = zext i32 %and to i64, !dbg !10277
  %add.ptr = getelementptr %struct.xlgmac_desc_data, %struct.xlgmac_desc_data* %4, i64 %idx.ext, !dbg !10277
  store %struct.xlgmac_desc_data* %add.ptr, %struct.xlgmac_desc_data** %tmp, align 8, !dbg !10277
  %9 = load %struct.xlgmac_desc_data*, %struct.xlgmac_desc_data** %tmp, align 8, !dbg !10277
  store %struct.xlgmac_desc_data* %9, %struct.xlgmac_desc_data** %desc_data, align 8, !dbg !10278
  %10 = load %struct.xlgmac_desc_data*, %struct.xlgmac_desc_data** %desc_data, align 8, !dbg !10279
  %dma_desc_addr = getelementptr inbounds %struct.xlgmac_desc_data, %struct.xlgmac_desc_data* %10, i32 0, i32 1, !dbg !10279
  %11 = load i64, i64* %dma_desc_addr, align 8, !dbg !10279
  %and2 = and i64 %11, 4294967295, !dbg !10279
  %conv = trunc i64 %and2 to i32, !dbg !10279
  %12 = load %struct.xlgmac_channel*, %struct.xlgmac_channel** %channel.addr, align 8, !dbg !10280
  %dma_regs = getelementptr inbounds %struct.xlgmac_channel, %struct.xlgmac_channel* %12, i32 0, i32 3, !dbg !10280
  %13 = load i8*, i8** %dma_regs, align 32, !dbg !10280
  %add.ptr3 = getelementptr i8, i8* %13, i64 36, !dbg !10280
  call void @writel(i32 %conv, i8* %add.ptr3) #7, !dbg !10281
  %14 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata, align 8, !dbg !10282
  %tx_usecs = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %14, i32 0, i32 25, !dbg !10283
  %15 = load i32, i32* %tx_usecs, align 4, !dbg !10283
  %tobool = icmp ne i32 %15, 0, !dbg !10282
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !10284

land.lhs.true:                                    ; preds = %entry
  %16 = load %struct.xlgmac_channel*, %struct.xlgmac_channel** %channel.addr, align 8, !dbg !10285
  %tx_timer_active = getelementptr inbounds %struct.xlgmac_channel, %struct.xlgmac_channel* %16, i32 0, i32 8, !dbg !10286
  %17 = load i32, i32* %tx_timer_active, align 4, !dbg !10286
  %tobool4 = icmp ne i32 %17, 0, !dbg !10285
  br i1 %tobool4, label %if.end, label %if.then, !dbg !10287

if.then:                                          ; preds = %land.lhs.true
  %18 = load %struct.xlgmac_channel*, %struct.xlgmac_channel** %channel.addr, align 8, !dbg !10288
  %tx_timer_active5 = getelementptr inbounds %struct.xlgmac_channel, %struct.xlgmac_channel* %18, i32 0, i32 8, !dbg !10289
  store i32 1, i32* %tx_timer_active5, align 4, !dbg !10290
  %19 = load %struct.xlgmac_channel*, %struct.xlgmac_channel** %channel.addr, align 8, !dbg !10291
  %tx_timer = getelementptr inbounds %struct.xlgmac_channel, %struct.xlgmac_channel* %19, i32 0, i32 9, !dbg !10292
  %20 = load volatile i64, i64* @jiffies, align 8, !dbg !10293
  %21 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata, align 8, !dbg !10294
  %tx_usecs6 = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %21, i32 0, i32 25, !dbg !10295
  %22 = load i32, i32* %tx_usecs6, align 4, !dbg !10295
  store i32 %22, i32* %u.addr.i, align 4
  %23 = load i32, i32* %u.addr.i, align 4, !dbg !10296
  %24 = call i1 @llvm.is.constant.i32(i32 %23) #8, !dbg !10298
  br i1 %24, label %if.then.i, label %if.else.i, !dbg !10299

if.then.i:                                        ; preds = %if.then
  %25 = load i32, i32* %u.addr.i, align 4, !dbg !10300
  %call.i = call i32 @jiffies_to_usecs(i64 4611686018427387902) #9, !dbg !10303
  %cmp.i = icmp ugt i32 %25, %call.i, !dbg !10304
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !10305

if.then1.i:                                       ; preds = %if.then.i
  store i64 4611686018427387902, i64* %retval.i, align 8, !dbg !10306
  br label %usecs_to_jiffies.exit, !dbg !10306

if.end.i:                                         ; preds = %if.then.i
  %26 = load i32, i32* %u.addr.i, align 4, !dbg !10307
  %call2.i = call i64 @_usecs_to_jiffies(i32 %26) #9, !dbg !10308
  store i64 %call2.i, i64* %retval.i, align 8, !dbg !10309
  br label %usecs_to_jiffies.exit, !dbg !10309

if.else.i:                                        ; preds = %if.then
  %27 = load i32, i32* %u.addr.i, align 4, !dbg !10310
  %call3.i = call i64 @__usecs_to_jiffies(i32 %27) #9, !dbg !10312
  store i64 %call3.i, i64* %retval.i, align 8, !dbg !10313
  br label %usecs_to_jiffies.exit, !dbg !10313

usecs_to_jiffies.exit:                            ; preds = %if.then1.i, %if.end.i, %if.else.i
  %28 = load i64, i64* %retval.i, align 8, !dbg !10314
  %add = add i64 %20, %28, !dbg !10315
  %call7 = call i32 @mod_timer(%struct.timer_list* %tx_timer, i64 %add) #7, !dbg !10316
  br label %if.end, !dbg !10317

if.end:                                           ; preds = %usecs_to_jiffies.exit, %land.lhs.true, %entry
  %29 = load %struct.xlgmac_ring*, %struct.xlgmac_ring** %ring.addr, align 8, !dbg !10318
  %30 = getelementptr inbounds %struct.xlgmac_ring, %struct.xlgmac_ring* %29, i32 0, i32 10, !dbg !10319
  %tx = bitcast %union.anon.129* %30 to %struct.anon.130*, !dbg !10319
  %xmit_more = getelementptr inbounds %struct.anon.130, %struct.anon.130* %tx, i32 0, i32 0, !dbg !10320
  store i32 0, i32* %xmit_more, align 4, !dbg !10321
  ret void, !dbg !10322
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @xlgmac_config_tx_flow_control(%struct.xlgmac_pdata* %pdata) #0 !dbg !10323 {
entry:
  %pdata.addr = alloca %struct.xlgmac_pdata*, align 8
  store %struct.xlgmac_pdata* %pdata, %struct.xlgmac_pdata** %pdata.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xlgmac_pdata** %pdata.addr, metadata !10324, metadata !DIExpression()), !dbg !10325
  %0 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !10326
  %tx_pause = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %0, i32 0, i32 31, !dbg !10328
  %1 = load i32, i32* %tx_pause, align 4, !dbg !10328
  %tobool = icmp ne i32 %1, 0, !dbg !10326
  br i1 %tobool, label %if.then, label %if.else, !dbg !10329

if.then:                                          ; preds = %entry
  %2 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !10330
  %call = call i32 @xlgmac_enable_tx_flow_control(%struct.xlgmac_pdata* %2) #7, !dbg !10331
  br label %if.end, !dbg !10331

if.else:                                          ; preds = %entry
  %3 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !10332
  %call1 = call i32 @xlgmac_disable_tx_flow_control(%struct.xlgmac_pdata* %3) #7, !dbg !10333
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret i32 0, !dbg !10334
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @xlgmac_config_rx_flow_control(%struct.xlgmac_pdata* %pdata) #0 !dbg !10335 {
entry:
  %pdata.addr = alloca %struct.xlgmac_pdata*, align 8
  store %struct.xlgmac_pdata* %pdata, %struct.xlgmac_pdata** %pdata.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xlgmac_pdata** %pdata.addr, metadata !10336, metadata !DIExpression()), !dbg !10337
  %0 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !10338
  %rx_pause = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %0, i32 0, i32 32, !dbg !10340
  %1 = load i32, i32* %rx_pause, align 8, !dbg !10340
  %tobool = icmp ne i32 %1, 0, !dbg !10338
  br i1 %tobool, label %if.then, label %if.else, !dbg !10341

if.then:                                          ; preds = %entry
  %2 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !10342
  %call = call i32 @xlgmac_enable_rx_flow_control(%struct.xlgmac_pdata* %2) #7, !dbg !10343
  br label %if.end, !dbg !10343

if.else:                                          ; preds = %entry
  %3 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !10344
  %call1 = call i32 @xlgmac_disable_rx_flow_control(%struct.xlgmac_pdata* %3) #7, !dbg !10345
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret i32 0, !dbg !10346
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @xlgmac_enable_rx_vlan_stripping(%struct.xlgmac_pdata* %pdata) #0 !dbg !10347 {
entry:
  %pdata.addr = alloca %struct.xlgmac_pdata*, align 8
  %regval = alloca i32, align 4
  %_var = alloca i32, align 4
  %_pos = alloca i32, align 4
  %_len = alloca i32, align 4
  %_val = alloca i32, align 4
  %tmp = alloca i32, align 4
  %_var24 = alloca i32, align 4
  %_pos25 = alloca i32, align 4
  %_len26 = alloca i32, align 4
  %_val27 = alloca i32, align 4
  %tmp43 = alloca i32, align 4
  %_var61 = alloca i32, align 4
  %_pos62 = alloca i32, align 4
  %_len63 = alloca i32, align 4
  %_val64 = alloca i32, align 4
  %tmp80 = alloca i32, align 4
  %_var98 = alloca i32, align 4
  %_pos99 = alloca i32, align 4
  %_len100 = alloca i32, align 4
  %_val101 = alloca i32, align 4
  %tmp117 = alloca i32, align 4
  %_var135 = alloca i32, align 4
  %_pos136 = alloca i32, align 4
  %_len137 = alloca i32, align 4
  %_val138 = alloca i32, align 4
  %tmp154 = alloca i32, align 4
  store %struct.xlgmac_pdata* %pdata, %struct.xlgmac_pdata** %pdata.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xlgmac_pdata** %pdata.addr, metadata !10348, metadata !DIExpression()), !dbg !10349
  call void @llvm.dbg.declare(metadata i32* %regval, metadata !10350, metadata !DIExpression()), !dbg !10351
  %0 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !10352
  %mac_regs = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %0, i32 0, i32 6, !dbg !10353
  %1 = load i8*, i8** %mac_regs, align 8, !dbg !10353
  %add.ptr = getelementptr i8, i8* %1, i64 80, !dbg !10354
  %call = call i32 @readl(i8* %add.ptr) #7, !dbg !10355
  store i32 %call, i32* %regval, align 4, !dbg !10356
  call void @llvm.dbg.declare(metadata i32* %_var, metadata !10357, metadata !DIExpression()), !dbg !10359
  %2 = load i32, i32* %regval, align 4, !dbg !10359
  store i32 %2, i32* %_var, align 4, !dbg !10359
  call void @llvm.dbg.declare(metadata i32* %_pos, metadata !10360, metadata !DIExpression()), !dbg !10359
  store i32 24, i32* %_pos, align 4, !dbg !10359
  call void @llvm.dbg.declare(metadata i32* %_len, metadata !10361, metadata !DIExpression()), !dbg !10359
  store i32 1, i32* %_len, align 4, !dbg !10359
  call void @llvm.dbg.declare(metadata i32* %_val, metadata !10362, metadata !DIExpression()), !dbg !10359
  store i32 1, i32* %_val, align 4, !dbg !10359
  %3 = load i32, i32* %_val, align 4, !dbg !10359
  %4 = load i32, i32* %_pos, align 4, !dbg !10359
  %shl = shl i32 %3, %4, !dbg !10359
  %conv = sext i32 %shl to i64, !dbg !10359
  %5 = load i32, i32* %_pos, align 4, !dbg !10359
  %sh_prom = zext i32 %5 to i64, !dbg !10359
  %shl1 = shl i64 1, %sh_prom, !dbg !10359
  %sub = sub i64 -1, %shl1, !dbg !10359
  %add = add i64 %sub, 1, !dbg !10359
  %6 = load i32, i32* %_pos, align 4, !dbg !10359
  %7 = load i32, i32* %_len, align 4, !dbg !10359
  %add2 = add i32 %6, %7, !dbg !10359
  %sub3 = sub i32 %add2, 1, !dbg !10359
  %sub4 = sub i32 63, %sub3, !dbg !10359
  %sh_prom5 = zext i32 %sub4 to i64, !dbg !10359
  %shr = lshr i64 -1, %sh_prom5, !dbg !10359
  %and = and i64 %add, %shr, !dbg !10359
  %add6 = add i64 0, %and, !dbg !10359
  %and7 = and i64 %conv, %add6, !dbg !10359
  %conv8 = trunc i64 %and7 to i32, !dbg !10359
  store i32 %conv8, i32* %_val, align 4, !dbg !10359
  %8 = load i32, i32* %_var, align 4, !dbg !10359
  %conv9 = zext i32 %8 to i64, !dbg !10359
  %9 = load i32, i32* %_pos, align 4, !dbg !10359
  %sh_prom10 = zext i32 %9 to i64, !dbg !10359
  %shl11 = shl i64 1, %sh_prom10, !dbg !10359
  %sub12 = sub i64 -1, %shl11, !dbg !10359
  %add13 = add i64 %sub12, 1, !dbg !10359
  %10 = load i32, i32* %_pos, align 4, !dbg !10359
  %11 = load i32, i32* %_len, align 4, !dbg !10359
  %add14 = add i32 %10, %11, !dbg !10359
  %sub15 = sub i32 %add14, 1, !dbg !10359
  %sub16 = sub i32 63, %sub15, !dbg !10359
  %sh_prom17 = zext i32 %sub16 to i64, !dbg !10359
  %shr18 = lshr i64 -1, %sh_prom17, !dbg !10359
  %and19 = and i64 %add13, %shr18, !dbg !10359
  %add20 = add i64 0, %and19, !dbg !10359
  %neg = xor i64 %add20, -1, !dbg !10359
  %and21 = and i64 %conv9, %neg, !dbg !10359
  %12 = load i32, i32* %_val, align 4, !dbg !10359
  %conv22 = sext i32 %12 to i64, !dbg !10359
  %or = or i64 %and21, %conv22, !dbg !10359
  %conv23 = trunc i64 %or to i32, !dbg !10359
  store i32 %conv23, i32* %_var, align 4, !dbg !10359
  store i32 %conv23, i32* %tmp, align 4, !dbg !10359
  %13 = load i32, i32* %tmp, align 4, !dbg !10359
  store i32 %13, i32* %regval, align 4, !dbg !10363
  call void @llvm.dbg.declare(metadata i32* %_var24, metadata !10364, metadata !DIExpression()), !dbg !10366
  %14 = load i32, i32* %regval, align 4, !dbg !10366
  store i32 %14, i32* %_var24, align 4, !dbg !10366
  call void @llvm.dbg.declare(metadata i32* %_pos25, metadata !10367, metadata !DIExpression()), !dbg !10366
  store i32 20, i32* %_pos25, align 4, !dbg !10366
  call void @llvm.dbg.declare(metadata i32* %_len26, metadata !10368, metadata !DIExpression()), !dbg !10366
  store i32 1, i32* %_len26, align 4, !dbg !10366
  call void @llvm.dbg.declare(metadata i32* %_val27, metadata !10369, metadata !DIExpression()), !dbg !10366
  store i32 1, i32* %_val27, align 4, !dbg !10366
  %15 = load i32, i32* %_val27, align 4, !dbg !10366
  %16 = load i32, i32* %_pos25, align 4, !dbg !10366
  %shl28 = shl i32 %15, %16, !dbg !10366
  %conv29 = sext i32 %shl28 to i64, !dbg !10366
  %17 = load i32, i32* %_pos25, align 4, !dbg !10366
  %sh_prom30 = zext i32 %17 to i64, !dbg !10366
  %shl31 = shl i64 1, %sh_prom30, !dbg !10366
  %sub32 = sub i64 -1, %shl31, !dbg !10366
  %add33 = add i64 %sub32, 1, !dbg !10366
  %18 = load i32, i32* %_pos25, align 4, !dbg !10366
  %19 = load i32, i32* %_len26, align 4, !dbg !10366
  %add34 = add i32 %18, %19, !dbg !10366
  %sub35 = sub i32 %add34, 1, !dbg !10366
  %sub36 = sub i32 63, %sub35, !dbg !10366
  %sh_prom37 = zext i32 %sub36 to i64, !dbg !10366
  %shr38 = lshr i64 -1, %sh_prom37, !dbg !10366
  %and39 = and i64 %add33, %shr38, !dbg !10366
  %add40 = add i64 0, %and39, !dbg !10366
  %and41 = and i64 %conv29, %add40, !dbg !10366
  %conv42 = trunc i64 %and41 to i32, !dbg !10366
  store i32 %conv42, i32* %_val27, align 4, !dbg !10366
  %20 = load i32, i32* %_var24, align 4, !dbg !10366
  %conv44 = zext i32 %20 to i64, !dbg !10366
  %21 = load i32, i32* %_pos25, align 4, !dbg !10366
  %sh_prom45 = zext i32 %21 to i64, !dbg !10366
  %shl46 = shl i64 1, %sh_prom45, !dbg !10366
  %sub47 = sub i64 -1, %shl46, !dbg !10366
  %add48 = add i64 %sub47, 1, !dbg !10366
  %22 = load i32, i32* %_pos25, align 4, !dbg !10366
  %23 = load i32, i32* %_len26, align 4, !dbg !10366
  %add49 = add i32 %22, %23, !dbg !10366
  %sub50 = sub i32 %add49, 1, !dbg !10366
  %sub51 = sub i32 63, %sub50, !dbg !10366
  %sh_prom52 = zext i32 %sub51 to i64, !dbg !10366
  %shr53 = lshr i64 -1, %sh_prom52, !dbg !10366
  %and54 = and i64 %add48, %shr53, !dbg !10366
  %add55 = add i64 0, %and54, !dbg !10366
  %neg56 = xor i64 %add55, -1, !dbg !10366
  %and57 = and i64 %conv44, %neg56, !dbg !10366
  %24 = load i32, i32* %_val27, align 4, !dbg !10366
  %conv58 = sext i32 %24 to i64, !dbg !10366
  %or59 = or i64 %and57, %conv58, !dbg !10366
  %conv60 = trunc i64 %or59 to i32, !dbg !10366
  store i32 %conv60, i32* %_var24, align 4, !dbg !10366
  store i32 %conv60, i32* %tmp43, align 4, !dbg !10366
  %25 = load i32, i32* %tmp43, align 4, !dbg !10366
  store i32 %25, i32* %regval, align 4, !dbg !10370
  call void @llvm.dbg.declare(metadata i32* %_var61, metadata !10371, metadata !DIExpression()), !dbg !10373
  %26 = load i32, i32* %regval, align 4, !dbg !10373
  store i32 %26, i32* %_var61, align 4, !dbg !10373
  call void @llvm.dbg.declare(metadata i32* %_pos62, metadata !10374, metadata !DIExpression()), !dbg !10373
  store i32 19, i32* %_pos62, align 4, !dbg !10373
  call void @llvm.dbg.declare(metadata i32* %_len63, metadata !10375, metadata !DIExpression()), !dbg !10373
  store i32 1, i32* %_len63, align 4, !dbg !10373
  call void @llvm.dbg.declare(metadata i32* %_val64, metadata !10376, metadata !DIExpression()), !dbg !10373
  store i32 0, i32* %_val64, align 4, !dbg !10373
  %27 = load i32, i32* %_val64, align 4, !dbg !10373
  %28 = load i32, i32* %_pos62, align 4, !dbg !10373
  %shl65 = shl i32 %27, %28, !dbg !10373
  %conv66 = sext i32 %shl65 to i64, !dbg !10373
  %29 = load i32, i32* %_pos62, align 4, !dbg !10373
  %sh_prom67 = zext i32 %29 to i64, !dbg !10373
  %shl68 = shl i64 1, %sh_prom67, !dbg !10373
  %sub69 = sub i64 -1, %shl68, !dbg !10373
  %add70 = add i64 %sub69, 1, !dbg !10373
  %30 = load i32, i32* %_pos62, align 4, !dbg !10373
  %31 = load i32, i32* %_len63, align 4, !dbg !10373
  %add71 = add i32 %30, %31, !dbg !10373
  %sub72 = sub i32 %add71, 1, !dbg !10373
  %sub73 = sub i32 63, %sub72, !dbg !10373
  %sh_prom74 = zext i32 %sub73 to i64, !dbg !10373
  %shr75 = lshr i64 -1, %sh_prom74, !dbg !10373
  %and76 = and i64 %add70, %shr75, !dbg !10373
  %add77 = add i64 0, %and76, !dbg !10373
  %and78 = and i64 %conv66, %add77, !dbg !10373
  %conv79 = trunc i64 %and78 to i32, !dbg !10373
  store i32 %conv79, i32* %_val64, align 4, !dbg !10373
  %32 = load i32, i32* %_var61, align 4, !dbg !10373
  %conv81 = zext i32 %32 to i64, !dbg !10373
  %33 = load i32, i32* %_pos62, align 4, !dbg !10373
  %sh_prom82 = zext i32 %33 to i64, !dbg !10373
  %shl83 = shl i64 1, %sh_prom82, !dbg !10373
  %sub84 = sub i64 -1, %shl83, !dbg !10373
  %add85 = add i64 %sub84, 1, !dbg !10373
  %34 = load i32, i32* %_pos62, align 4, !dbg !10373
  %35 = load i32, i32* %_len63, align 4, !dbg !10373
  %add86 = add i32 %34, %35, !dbg !10373
  %sub87 = sub i32 %add86, 1, !dbg !10373
  %sub88 = sub i32 63, %sub87, !dbg !10373
  %sh_prom89 = zext i32 %sub88 to i64, !dbg !10373
  %shr90 = lshr i64 -1, %sh_prom89, !dbg !10373
  %and91 = and i64 %add85, %shr90, !dbg !10373
  %add92 = add i64 0, %and91, !dbg !10373
  %neg93 = xor i64 %add92, -1, !dbg !10373
  %and94 = and i64 %conv81, %neg93, !dbg !10373
  %36 = load i32, i32* %_val64, align 4, !dbg !10373
  %conv95 = sext i32 %36 to i64, !dbg !10373
  %or96 = or i64 %and94, %conv95, !dbg !10373
  %conv97 = trunc i64 %or96 to i32, !dbg !10373
  store i32 %conv97, i32* %_var61, align 4, !dbg !10373
  store i32 %conv97, i32* %tmp80, align 4, !dbg !10373
  %37 = load i32, i32* %tmp80, align 4, !dbg !10373
  store i32 %37, i32* %regval, align 4, !dbg !10377
  call void @llvm.dbg.declare(metadata i32* %_var98, metadata !10378, metadata !DIExpression()), !dbg !10380
  %38 = load i32, i32* %regval, align 4, !dbg !10380
  store i32 %38, i32* %_var98, align 4, !dbg !10380
  call void @llvm.dbg.declare(metadata i32* %_pos99, metadata !10381, metadata !DIExpression()), !dbg !10380
  store i32 18, i32* %_pos99, align 4, !dbg !10380
  call void @llvm.dbg.declare(metadata i32* %_len100, metadata !10382, metadata !DIExpression()), !dbg !10380
  store i32 1, i32* %_len100, align 4, !dbg !10380
  call void @llvm.dbg.declare(metadata i32* %_val101, metadata !10383, metadata !DIExpression()), !dbg !10380
  store i32 0, i32* %_val101, align 4, !dbg !10380
  %39 = load i32, i32* %_val101, align 4, !dbg !10380
  %40 = load i32, i32* %_pos99, align 4, !dbg !10380
  %shl102 = shl i32 %39, %40, !dbg !10380
  %conv103 = sext i32 %shl102 to i64, !dbg !10380
  %41 = load i32, i32* %_pos99, align 4, !dbg !10380
  %sh_prom104 = zext i32 %41 to i64, !dbg !10380
  %shl105 = shl i64 1, %sh_prom104, !dbg !10380
  %sub106 = sub i64 -1, %shl105, !dbg !10380
  %add107 = add i64 %sub106, 1, !dbg !10380
  %42 = load i32, i32* %_pos99, align 4, !dbg !10380
  %43 = load i32, i32* %_len100, align 4, !dbg !10380
  %add108 = add i32 %42, %43, !dbg !10380
  %sub109 = sub i32 %add108, 1, !dbg !10380
  %sub110 = sub i32 63, %sub109, !dbg !10380
  %sh_prom111 = zext i32 %sub110 to i64, !dbg !10380
  %shr112 = lshr i64 -1, %sh_prom111, !dbg !10380
  %and113 = and i64 %add107, %shr112, !dbg !10380
  %add114 = add i64 0, %and113, !dbg !10380
  %and115 = and i64 %conv103, %add114, !dbg !10380
  %conv116 = trunc i64 %and115 to i32, !dbg !10380
  store i32 %conv116, i32* %_val101, align 4, !dbg !10380
  %44 = load i32, i32* %_var98, align 4, !dbg !10380
  %conv118 = zext i32 %44 to i64, !dbg !10380
  %45 = load i32, i32* %_pos99, align 4, !dbg !10380
  %sh_prom119 = zext i32 %45 to i64, !dbg !10380
  %shl120 = shl i64 1, %sh_prom119, !dbg !10380
  %sub121 = sub i64 -1, %shl120, !dbg !10380
  %add122 = add i64 %sub121, 1, !dbg !10380
  %46 = load i32, i32* %_pos99, align 4, !dbg !10380
  %47 = load i32, i32* %_len100, align 4, !dbg !10380
  %add123 = add i32 %46, %47, !dbg !10380
  %sub124 = sub i32 %add123, 1, !dbg !10380
  %sub125 = sub i32 63, %sub124, !dbg !10380
  %sh_prom126 = zext i32 %sub125 to i64, !dbg !10380
  %shr127 = lshr i64 -1, %sh_prom126, !dbg !10380
  %and128 = and i64 %add122, %shr127, !dbg !10380
  %add129 = add i64 0, %and128, !dbg !10380
  %neg130 = xor i64 %add129, -1, !dbg !10380
  %and131 = and i64 %conv118, %neg130, !dbg !10380
  %48 = load i32, i32* %_val101, align 4, !dbg !10380
  %conv132 = sext i32 %48 to i64, !dbg !10380
  %or133 = or i64 %and131, %conv132, !dbg !10380
  %conv134 = trunc i64 %or133 to i32, !dbg !10380
  store i32 %conv134, i32* %_var98, align 4, !dbg !10380
  store i32 %conv134, i32* %tmp117, align 4, !dbg !10380
  %49 = load i32, i32* %tmp117, align 4, !dbg !10380
  store i32 %49, i32* %regval, align 4, !dbg !10384
  call void @llvm.dbg.declare(metadata i32* %_var135, metadata !10385, metadata !DIExpression()), !dbg !10387
  %50 = load i32, i32* %regval, align 4, !dbg !10387
  store i32 %50, i32* %_var135, align 4, !dbg !10387
  call void @llvm.dbg.declare(metadata i32* %_pos136, metadata !10388, metadata !DIExpression()), !dbg !10387
  store i32 21, i32* %_pos136, align 4, !dbg !10387
  call void @llvm.dbg.declare(metadata i32* %_len137, metadata !10389, metadata !DIExpression()), !dbg !10387
  store i32 2, i32* %_len137, align 4, !dbg !10387
  call void @llvm.dbg.declare(metadata i32* %_val138, metadata !10390, metadata !DIExpression()), !dbg !10387
  store i32 3, i32* %_val138, align 4, !dbg !10387
  %51 = load i32, i32* %_val138, align 4, !dbg !10387
  %52 = load i32, i32* %_pos136, align 4, !dbg !10387
  %shl139 = shl i32 %51, %52, !dbg !10387
  %conv140 = sext i32 %shl139 to i64, !dbg !10387
  %53 = load i32, i32* %_pos136, align 4, !dbg !10387
  %sh_prom141 = zext i32 %53 to i64, !dbg !10387
  %shl142 = shl i64 1, %sh_prom141, !dbg !10387
  %sub143 = sub i64 -1, %shl142, !dbg !10387
  %add144 = add i64 %sub143, 1, !dbg !10387
  %54 = load i32, i32* %_pos136, align 4, !dbg !10387
  %55 = load i32, i32* %_len137, align 4, !dbg !10387
  %add145 = add i32 %54, %55, !dbg !10387
  %sub146 = sub i32 %add145, 1, !dbg !10387
  %sub147 = sub i32 63, %sub146, !dbg !10387
  %sh_prom148 = zext i32 %sub147 to i64, !dbg !10387
  %shr149 = lshr i64 -1, %sh_prom148, !dbg !10387
  %and150 = and i64 %add144, %shr149, !dbg !10387
  %add151 = add i64 0, %and150, !dbg !10387
  %and152 = and i64 %conv140, %add151, !dbg !10387
  %conv153 = trunc i64 %and152 to i32, !dbg !10387
  store i32 %conv153, i32* %_val138, align 4, !dbg !10387
  %56 = load i32, i32* %_var135, align 4, !dbg !10387
  %conv155 = zext i32 %56 to i64, !dbg !10387
  %57 = load i32, i32* %_pos136, align 4, !dbg !10387
  %sh_prom156 = zext i32 %57 to i64, !dbg !10387
  %shl157 = shl i64 1, %sh_prom156, !dbg !10387
  %sub158 = sub i64 -1, %shl157, !dbg !10387
  %add159 = add i64 %sub158, 1, !dbg !10387
  %58 = load i32, i32* %_pos136, align 4, !dbg !10387
  %59 = load i32, i32* %_len137, align 4, !dbg !10387
  %add160 = add i32 %58, %59, !dbg !10387
  %sub161 = sub i32 %add160, 1, !dbg !10387
  %sub162 = sub i32 63, %sub161, !dbg !10387
  %sh_prom163 = zext i32 %sub162 to i64, !dbg !10387
  %shr164 = lshr i64 -1, %sh_prom163, !dbg !10387
  %and165 = and i64 %add159, %shr164, !dbg !10387
  %add166 = add i64 0, %and165, !dbg !10387
  %neg167 = xor i64 %add166, -1, !dbg !10387
  %and168 = and i64 %conv155, %neg167, !dbg !10387
  %60 = load i32, i32* %_val138, align 4, !dbg !10387
  %conv169 = sext i32 %60 to i64, !dbg !10387
  %or170 = or i64 %and168, %conv169, !dbg !10387
  %conv171 = trunc i64 %or170 to i32, !dbg !10387
  store i32 %conv171, i32* %_var135, align 4, !dbg !10387
  store i32 %conv171, i32* %tmp154, align 4, !dbg !10387
  %61 = load i32, i32* %tmp154, align 4, !dbg !10387
  store i32 %61, i32* %regval, align 4, !dbg !10391
  %62 = load i32, i32* %regval, align 4, !dbg !10392
  %63 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !10393
  %mac_regs172 = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %63, i32 0, i32 6, !dbg !10394
  %64 = load i8*, i8** %mac_regs172, align 8, !dbg !10394
  %add.ptr173 = getelementptr i8, i8* %64, i64 80, !dbg !10395
  call void @writel(i32 %62, i8* %add.ptr173) #7, !dbg !10396
  ret i32 0, !dbg !10397
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @xlgmac_disable_rx_vlan_stripping(%struct.xlgmac_pdata* %pdata) #0 !dbg !10398 {
entry:
  %pdata.addr = alloca %struct.xlgmac_pdata*, align 8
  %regval = alloca i32, align 4
  %_var = alloca i32, align 4
  %_pos = alloca i32, align 4
  %_len = alloca i32, align 4
  %_val = alloca i32, align 4
  %tmp = alloca i32, align 4
  store %struct.xlgmac_pdata* %pdata, %struct.xlgmac_pdata** %pdata.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xlgmac_pdata** %pdata.addr, metadata !10399, metadata !DIExpression()), !dbg !10400
  call void @llvm.dbg.declare(metadata i32* %regval, metadata !10401, metadata !DIExpression()), !dbg !10402
  %0 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !10403
  %mac_regs = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %0, i32 0, i32 6, !dbg !10404
  %1 = load i8*, i8** %mac_regs, align 8, !dbg !10404
  %add.ptr = getelementptr i8, i8* %1, i64 80, !dbg !10405
  %call = call i32 @readl(i8* %add.ptr) #7, !dbg !10406
  store i32 %call, i32* %regval, align 4, !dbg !10407
  call void @llvm.dbg.declare(metadata i32* %_var, metadata !10408, metadata !DIExpression()), !dbg !10410
  %2 = load i32, i32* %regval, align 4, !dbg !10410
  store i32 %2, i32* %_var, align 4, !dbg !10410
  call void @llvm.dbg.declare(metadata i32* %_pos, metadata !10411, metadata !DIExpression()), !dbg !10410
  store i32 21, i32* %_pos, align 4, !dbg !10410
  call void @llvm.dbg.declare(metadata i32* %_len, metadata !10412, metadata !DIExpression()), !dbg !10410
  store i32 2, i32* %_len, align 4, !dbg !10410
  call void @llvm.dbg.declare(metadata i32* %_val, metadata !10413, metadata !DIExpression()), !dbg !10410
  store i32 0, i32* %_val, align 4, !dbg !10410
  %3 = load i32, i32* %_val, align 4, !dbg !10410
  %4 = load i32, i32* %_pos, align 4, !dbg !10410
  %shl = shl i32 %3, %4, !dbg !10410
  %conv = sext i32 %shl to i64, !dbg !10410
  %5 = load i32, i32* %_pos, align 4, !dbg !10410
  %sh_prom = zext i32 %5 to i64, !dbg !10410
  %shl1 = shl i64 1, %sh_prom, !dbg !10410
  %sub = sub i64 -1, %shl1, !dbg !10410
  %add = add i64 %sub, 1, !dbg !10410
  %6 = load i32, i32* %_pos, align 4, !dbg !10410
  %7 = load i32, i32* %_len, align 4, !dbg !10410
  %add2 = add i32 %6, %7, !dbg !10410
  %sub3 = sub i32 %add2, 1, !dbg !10410
  %sub4 = sub i32 63, %sub3, !dbg !10410
  %sh_prom5 = zext i32 %sub4 to i64, !dbg !10410
  %shr = lshr i64 -1, %sh_prom5, !dbg !10410
  %and = and i64 %add, %shr, !dbg !10410
  %add6 = add i64 0, %and, !dbg !10410
  %and7 = and i64 %conv, %add6, !dbg !10410
  %conv8 = trunc i64 %and7 to i32, !dbg !10410
  store i32 %conv8, i32* %_val, align 4, !dbg !10410
  %8 = load i32, i32* %_var, align 4, !dbg !10410
  %conv9 = zext i32 %8 to i64, !dbg !10410
  %9 = load i32, i32* %_pos, align 4, !dbg !10410
  %sh_prom10 = zext i32 %9 to i64, !dbg !10410
  %shl11 = shl i64 1, %sh_prom10, !dbg !10410
  %sub12 = sub i64 -1, %shl11, !dbg !10410
  %add13 = add i64 %sub12, 1, !dbg !10410
  %10 = load i32, i32* %_pos, align 4, !dbg !10410
  %11 = load i32, i32* %_len, align 4, !dbg !10410
  %add14 = add i32 %10, %11, !dbg !10410
  %sub15 = sub i32 %add14, 1, !dbg !10410
  %sub16 = sub i32 63, %sub15, !dbg !10410
  %sh_prom17 = zext i32 %sub16 to i64, !dbg !10410
  %shr18 = lshr i64 -1, %sh_prom17, !dbg !10410
  %and19 = and i64 %add13, %shr18, !dbg !10410
  %add20 = add i64 0, %and19, !dbg !10410
  %neg = xor i64 %add20, -1, !dbg !10410
  %and21 = and i64 %conv9, %neg, !dbg !10410
  %12 = load i32, i32* %_val, align 4, !dbg !10410
  %conv22 = sext i32 %12 to i64, !dbg !10410
  %or = or i64 %and21, %conv22, !dbg !10410
  %conv23 = trunc i64 %or to i32, !dbg !10410
  store i32 %conv23, i32* %_var, align 4, !dbg !10410
  store i32 %conv23, i32* %tmp, align 4, !dbg !10410
  %13 = load i32, i32* %tmp, align 4, !dbg !10410
  store i32 %13, i32* %regval, align 4, !dbg !10414
  %14 = load i32, i32* %regval, align 4, !dbg !10415
  %15 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !10416
  %mac_regs24 = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %15, i32 0, i32 6, !dbg !10417
  %16 = load i8*, i8** %mac_regs24, align 8, !dbg !10417
  %add.ptr25 = getelementptr i8, i8* %16, i64 80, !dbg !10418
  call void @writel(i32 %14, i8* %add.ptr25) #7, !dbg !10419
  ret i32 0, !dbg !10420
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @xlgmac_enable_rx_vlan_filtering(%struct.xlgmac_pdata* %pdata) #0 !dbg !10421 {
entry:
  %pdata.addr = alloca %struct.xlgmac_pdata*, align 8
  %regval = alloca i32, align 4
  %_var = alloca i32, align 4
  %_pos = alloca i32, align 4
  %_len = alloca i32, align 4
  %_val = alloca i32, align 4
  %tmp = alloca i32, align 4
  %_var29 = alloca i32, align 4
  %_pos30 = alloca i32, align 4
  %_len31 = alloca i32, align 4
  %_val32 = alloca i32, align 4
  %tmp48 = alloca i32, align 4
  %_var66 = alloca i32, align 4
  %_pos67 = alloca i32, align 4
  %_len68 = alloca i32, align 4
  %_val69 = alloca i32, align 4
  %tmp85 = alloca i32, align 4
  %_var103 = alloca i32, align 4
  %_pos104 = alloca i32, align 4
  %_len105 = alloca i32, align 4
  %_val106 = alloca i32, align 4
  %tmp122 = alloca i32, align 4
  %_var140 = alloca i32, align 4
  %_pos141 = alloca i32, align 4
  %_len142 = alloca i32, align 4
  %_val143 = alloca i32, align 4
  %tmp159 = alloca i32, align 4
  store %struct.xlgmac_pdata* %pdata, %struct.xlgmac_pdata** %pdata.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xlgmac_pdata** %pdata.addr, metadata !10422, metadata !DIExpression()), !dbg !10423
  call void @llvm.dbg.declare(metadata i32* %regval, metadata !10424, metadata !DIExpression()), !dbg !10425
  %0 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !10426
  %mac_regs = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %0, i32 0, i32 6, !dbg !10427
  %1 = load i8*, i8** %mac_regs, align 8, !dbg !10427
  %add.ptr = getelementptr i8, i8* %1, i64 8, !dbg !10428
  %call = call i32 @readl(i8* %add.ptr) #7, !dbg !10429
  store i32 %call, i32* %regval, align 4, !dbg !10430
  call void @llvm.dbg.declare(metadata i32* %_var, metadata !10431, metadata !DIExpression()), !dbg !10433
  %2 = load i32, i32* %regval, align 4, !dbg !10433
  store i32 %2, i32* %_var, align 4, !dbg !10433
  call void @llvm.dbg.declare(metadata i32* %_pos, metadata !10434, metadata !DIExpression()), !dbg !10433
  store i32 16, i32* %_pos, align 4, !dbg !10433
  call void @llvm.dbg.declare(metadata i32* %_len, metadata !10435, metadata !DIExpression()), !dbg !10433
  store i32 1, i32* %_len, align 4, !dbg !10433
  call void @llvm.dbg.declare(metadata i32* %_val, metadata !10436, metadata !DIExpression()), !dbg !10433
  store i32 1, i32* %_val, align 4, !dbg !10433
  %3 = load i32, i32* %_val, align 4, !dbg !10433
  %4 = load i32, i32* %_pos, align 4, !dbg !10433
  %shl = shl i32 %3, %4, !dbg !10433
  %conv = sext i32 %shl to i64, !dbg !10433
  %5 = load i32, i32* %_pos, align 4, !dbg !10433
  %sh_prom = zext i32 %5 to i64, !dbg !10433
  %shl1 = shl i64 1, %sh_prom, !dbg !10433
  %sub = sub i64 -1, %shl1, !dbg !10433
  %add = add i64 %sub, 1, !dbg !10433
  %6 = load i32, i32* %_pos, align 4, !dbg !10433
  %7 = load i32, i32* %_len, align 4, !dbg !10433
  %add2 = add i32 %6, %7, !dbg !10433
  %sub3 = sub i32 %add2, 1, !dbg !10433
  %sub4 = sub i32 63, %sub3, !dbg !10433
  %sh_prom5 = zext i32 %sub4 to i64, !dbg !10433
  %shr = lshr i64 -1, %sh_prom5, !dbg !10433
  %and = and i64 %add, %shr, !dbg !10433
  %add6 = add i64 0, %and, !dbg !10433
  %and7 = and i64 %conv, %add6, !dbg !10433
  %conv8 = trunc i64 %and7 to i32, !dbg !10433
  store i32 %conv8, i32* %_val, align 4, !dbg !10433
  %8 = load i32, i32* %_var, align 4, !dbg !10433
  %conv9 = zext i32 %8 to i64, !dbg !10433
  %9 = load i32, i32* %_pos, align 4, !dbg !10433
  %sh_prom10 = zext i32 %9 to i64, !dbg !10433
  %shl11 = shl i64 1, %sh_prom10, !dbg !10433
  %sub12 = sub i64 -1, %shl11, !dbg !10433
  %add13 = add i64 %sub12, 1, !dbg !10433
  %10 = load i32, i32* %_pos, align 4, !dbg !10433
  %11 = load i32, i32* %_len, align 4, !dbg !10433
  %add14 = add i32 %10, %11, !dbg !10433
  %sub15 = sub i32 %add14, 1, !dbg !10433
  %sub16 = sub i32 63, %sub15, !dbg !10433
  %sh_prom17 = zext i32 %sub16 to i64, !dbg !10433
  %shr18 = lshr i64 -1, %sh_prom17, !dbg !10433
  %and19 = and i64 %add13, %shr18, !dbg !10433
  %add20 = add i64 0, %and19, !dbg !10433
  %neg = xor i64 %add20, -1, !dbg !10433
  %and21 = and i64 %conv9, %neg, !dbg !10433
  %12 = load i32, i32* %_val, align 4, !dbg !10433
  %conv22 = sext i32 %12 to i64, !dbg !10433
  %or = or i64 %and21, %conv22, !dbg !10433
  %conv23 = trunc i64 %or to i32, !dbg !10433
  store i32 %conv23, i32* %_var, align 4, !dbg !10433
  store i32 %conv23, i32* %tmp, align 4, !dbg !10433
  %13 = load i32, i32* %tmp, align 4, !dbg !10433
  store i32 %13, i32* %regval, align 4, !dbg !10437
  %14 = load i32, i32* %regval, align 4, !dbg !10438
  %15 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !10439
  %mac_regs24 = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %15, i32 0, i32 6, !dbg !10440
  %16 = load i8*, i8** %mac_regs24, align 8, !dbg !10440
  %add.ptr25 = getelementptr i8, i8* %16, i64 8, !dbg !10441
  call void @writel(i32 %14, i8* %add.ptr25) #7, !dbg !10442
  %17 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !10443
  %mac_regs26 = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %17, i32 0, i32 6, !dbg !10444
  %18 = load i8*, i8** %mac_regs26, align 8, !dbg !10444
  %add.ptr27 = getelementptr i8, i8* %18, i64 80, !dbg !10445
  %call28 = call i32 @readl(i8* %add.ptr27) #7, !dbg !10446
  store i32 %call28, i32* %regval, align 4, !dbg !10447
  call void @llvm.dbg.declare(metadata i32* %_var29, metadata !10448, metadata !DIExpression()), !dbg !10450
  %19 = load i32, i32* %regval, align 4, !dbg !10450
  store i32 %19, i32* %_var29, align 4, !dbg !10450
  call void @llvm.dbg.declare(metadata i32* %_pos30, metadata !10451, metadata !DIExpression()), !dbg !10450
  store i32 25, i32* %_pos30, align 4, !dbg !10450
  call void @llvm.dbg.declare(metadata i32* %_len31, metadata !10452, metadata !DIExpression()), !dbg !10450
  store i32 1, i32* %_len31, align 4, !dbg !10450
  call void @llvm.dbg.declare(metadata i32* %_val32, metadata !10453, metadata !DIExpression()), !dbg !10450
  store i32 1, i32* %_val32, align 4, !dbg !10450
  %20 = load i32, i32* %_val32, align 4, !dbg !10450
  %21 = load i32, i32* %_pos30, align 4, !dbg !10450
  %shl33 = shl i32 %20, %21, !dbg !10450
  %conv34 = sext i32 %shl33 to i64, !dbg !10450
  %22 = load i32, i32* %_pos30, align 4, !dbg !10450
  %sh_prom35 = zext i32 %22 to i64, !dbg !10450
  %shl36 = shl i64 1, %sh_prom35, !dbg !10450
  %sub37 = sub i64 -1, %shl36, !dbg !10450
  %add38 = add i64 %sub37, 1, !dbg !10450
  %23 = load i32, i32* %_pos30, align 4, !dbg !10450
  %24 = load i32, i32* %_len31, align 4, !dbg !10450
  %add39 = add i32 %23, %24, !dbg !10450
  %sub40 = sub i32 %add39, 1, !dbg !10450
  %sub41 = sub i32 63, %sub40, !dbg !10450
  %sh_prom42 = zext i32 %sub41 to i64, !dbg !10450
  %shr43 = lshr i64 -1, %sh_prom42, !dbg !10450
  %and44 = and i64 %add38, %shr43, !dbg !10450
  %add45 = add i64 0, %and44, !dbg !10450
  %and46 = and i64 %conv34, %add45, !dbg !10450
  %conv47 = trunc i64 %and46 to i32, !dbg !10450
  store i32 %conv47, i32* %_val32, align 4, !dbg !10450
  %25 = load i32, i32* %_var29, align 4, !dbg !10450
  %conv49 = zext i32 %25 to i64, !dbg !10450
  %26 = load i32, i32* %_pos30, align 4, !dbg !10450
  %sh_prom50 = zext i32 %26 to i64, !dbg !10450
  %shl51 = shl i64 1, %sh_prom50, !dbg !10450
  %sub52 = sub i64 -1, %shl51, !dbg !10450
  %add53 = add i64 %sub52, 1, !dbg !10450
  %27 = load i32, i32* %_pos30, align 4, !dbg !10450
  %28 = load i32, i32* %_len31, align 4, !dbg !10450
  %add54 = add i32 %27, %28, !dbg !10450
  %sub55 = sub i32 %add54, 1, !dbg !10450
  %sub56 = sub i32 63, %sub55, !dbg !10450
  %sh_prom57 = zext i32 %sub56 to i64, !dbg !10450
  %shr58 = lshr i64 -1, %sh_prom57, !dbg !10450
  %and59 = and i64 %add53, %shr58, !dbg !10450
  %add60 = add i64 0, %and59, !dbg !10450
  %neg61 = xor i64 %add60, -1, !dbg !10450
  %and62 = and i64 %conv49, %neg61, !dbg !10450
  %29 = load i32, i32* %_val32, align 4, !dbg !10450
  %conv63 = sext i32 %29 to i64, !dbg !10450
  %or64 = or i64 %and62, %conv63, !dbg !10450
  %conv65 = trunc i64 %or64 to i32, !dbg !10450
  store i32 %conv65, i32* %_var29, align 4, !dbg !10450
  store i32 %conv65, i32* %tmp48, align 4, !dbg !10450
  %30 = load i32, i32* %tmp48, align 4, !dbg !10450
  store i32 %30, i32* %regval, align 4, !dbg !10454
  call void @llvm.dbg.declare(metadata i32* %_var66, metadata !10455, metadata !DIExpression()), !dbg !10457
  %31 = load i32, i32* %regval, align 4, !dbg !10457
  store i32 %31, i32* %_var66, align 4, !dbg !10457
  call void @llvm.dbg.declare(metadata i32* %_pos67, metadata !10458, metadata !DIExpression()), !dbg !10457
  store i32 17, i32* %_pos67, align 4, !dbg !10457
  call void @llvm.dbg.declare(metadata i32* %_len68, metadata !10459, metadata !DIExpression()), !dbg !10457
  store i32 1, i32* %_len68, align 4, !dbg !10457
  call void @llvm.dbg.declare(metadata i32* %_val69, metadata !10460, metadata !DIExpression()), !dbg !10457
  store i32 0, i32* %_val69, align 4, !dbg !10457
  %32 = load i32, i32* %_val69, align 4, !dbg !10457
  %33 = load i32, i32* %_pos67, align 4, !dbg !10457
  %shl70 = shl i32 %32, %33, !dbg !10457
  %conv71 = sext i32 %shl70 to i64, !dbg !10457
  %34 = load i32, i32* %_pos67, align 4, !dbg !10457
  %sh_prom72 = zext i32 %34 to i64, !dbg !10457
  %shl73 = shl i64 1, %sh_prom72, !dbg !10457
  %sub74 = sub i64 -1, %shl73, !dbg !10457
  %add75 = add i64 %sub74, 1, !dbg !10457
  %35 = load i32, i32* %_pos67, align 4, !dbg !10457
  %36 = load i32, i32* %_len68, align 4, !dbg !10457
  %add76 = add i32 %35, %36, !dbg !10457
  %sub77 = sub i32 %add76, 1, !dbg !10457
  %sub78 = sub i32 63, %sub77, !dbg !10457
  %sh_prom79 = zext i32 %sub78 to i64, !dbg !10457
  %shr80 = lshr i64 -1, %sh_prom79, !dbg !10457
  %and81 = and i64 %add75, %shr80, !dbg !10457
  %add82 = add i64 0, %and81, !dbg !10457
  %and83 = and i64 %conv71, %add82, !dbg !10457
  %conv84 = trunc i64 %and83 to i32, !dbg !10457
  store i32 %conv84, i32* %_val69, align 4, !dbg !10457
  %37 = load i32, i32* %_var66, align 4, !dbg !10457
  %conv86 = zext i32 %37 to i64, !dbg !10457
  %38 = load i32, i32* %_pos67, align 4, !dbg !10457
  %sh_prom87 = zext i32 %38 to i64, !dbg !10457
  %shl88 = shl i64 1, %sh_prom87, !dbg !10457
  %sub89 = sub i64 -1, %shl88, !dbg !10457
  %add90 = add i64 %sub89, 1, !dbg !10457
  %39 = load i32, i32* %_pos67, align 4, !dbg !10457
  %40 = load i32, i32* %_len68, align 4, !dbg !10457
  %add91 = add i32 %39, %40, !dbg !10457
  %sub92 = sub i32 %add91, 1, !dbg !10457
  %sub93 = sub i32 63, %sub92, !dbg !10457
  %sh_prom94 = zext i32 %sub93 to i64, !dbg !10457
  %shr95 = lshr i64 -1, %sh_prom94, !dbg !10457
  %and96 = and i64 %add90, %shr95, !dbg !10457
  %add97 = add i64 0, %and96, !dbg !10457
  %neg98 = xor i64 %add97, -1, !dbg !10457
  %and99 = and i64 %conv86, %neg98, !dbg !10457
  %41 = load i32, i32* %_val69, align 4, !dbg !10457
  %conv100 = sext i32 %41 to i64, !dbg !10457
  %or101 = or i64 %and99, %conv100, !dbg !10457
  %conv102 = trunc i64 %or101 to i32, !dbg !10457
  store i32 %conv102, i32* %_var66, align 4, !dbg !10457
  store i32 %conv102, i32* %tmp85, align 4, !dbg !10457
  %42 = load i32, i32* %tmp85, align 4, !dbg !10457
  store i32 %42, i32* %regval, align 4, !dbg !10461
  call void @llvm.dbg.declare(metadata i32* %_var103, metadata !10462, metadata !DIExpression()), !dbg !10464
  %43 = load i32, i32* %regval, align 4, !dbg !10464
  store i32 %43, i32* %_var103, align 4, !dbg !10464
  call void @llvm.dbg.declare(metadata i32* %_pos104, metadata !10465, metadata !DIExpression()), !dbg !10464
  store i32 16, i32* %_pos104, align 4, !dbg !10464
  call void @llvm.dbg.declare(metadata i32* %_len105, metadata !10466, metadata !DIExpression()), !dbg !10464
  store i32 1, i32* %_len105, align 4, !dbg !10464
  call void @llvm.dbg.declare(metadata i32* %_val106, metadata !10467, metadata !DIExpression()), !dbg !10464
  store i32 1, i32* %_val106, align 4, !dbg !10464
  %44 = load i32, i32* %_val106, align 4, !dbg !10464
  %45 = load i32, i32* %_pos104, align 4, !dbg !10464
  %shl107 = shl i32 %44, %45, !dbg !10464
  %conv108 = sext i32 %shl107 to i64, !dbg !10464
  %46 = load i32, i32* %_pos104, align 4, !dbg !10464
  %sh_prom109 = zext i32 %46 to i64, !dbg !10464
  %shl110 = shl i64 1, %sh_prom109, !dbg !10464
  %sub111 = sub i64 -1, %shl110, !dbg !10464
  %add112 = add i64 %sub111, 1, !dbg !10464
  %47 = load i32, i32* %_pos104, align 4, !dbg !10464
  %48 = load i32, i32* %_len105, align 4, !dbg !10464
  %add113 = add i32 %47, %48, !dbg !10464
  %sub114 = sub i32 %add113, 1, !dbg !10464
  %sub115 = sub i32 63, %sub114, !dbg !10464
  %sh_prom116 = zext i32 %sub115 to i64, !dbg !10464
  %shr117 = lshr i64 -1, %sh_prom116, !dbg !10464
  %and118 = and i64 %add112, %shr117, !dbg !10464
  %add119 = add i64 0, %and118, !dbg !10464
  %and120 = and i64 %conv108, %add119, !dbg !10464
  %conv121 = trunc i64 %and120 to i32, !dbg !10464
  store i32 %conv121, i32* %_val106, align 4, !dbg !10464
  %49 = load i32, i32* %_var103, align 4, !dbg !10464
  %conv123 = zext i32 %49 to i64, !dbg !10464
  %50 = load i32, i32* %_pos104, align 4, !dbg !10464
  %sh_prom124 = zext i32 %50 to i64, !dbg !10464
  %shl125 = shl i64 1, %sh_prom124, !dbg !10464
  %sub126 = sub i64 -1, %shl125, !dbg !10464
  %add127 = add i64 %sub126, 1, !dbg !10464
  %51 = load i32, i32* %_pos104, align 4, !dbg !10464
  %52 = load i32, i32* %_len105, align 4, !dbg !10464
  %add128 = add i32 %51, %52, !dbg !10464
  %sub129 = sub i32 %add128, 1, !dbg !10464
  %sub130 = sub i32 63, %sub129, !dbg !10464
  %sh_prom131 = zext i32 %sub130 to i64, !dbg !10464
  %shr132 = lshr i64 -1, %sh_prom131, !dbg !10464
  %and133 = and i64 %add127, %shr132, !dbg !10464
  %add134 = add i64 0, %and133, !dbg !10464
  %neg135 = xor i64 %add134, -1, !dbg !10464
  %and136 = and i64 %conv123, %neg135, !dbg !10464
  %53 = load i32, i32* %_val106, align 4, !dbg !10464
  %conv137 = sext i32 %53 to i64, !dbg !10464
  %or138 = or i64 %and136, %conv137, !dbg !10464
  %conv139 = trunc i64 %or138 to i32, !dbg !10464
  store i32 %conv139, i32* %_var103, align 4, !dbg !10464
  store i32 %conv139, i32* %tmp122, align 4, !dbg !10464
  %54 = load i32, i32* %tmp122, align 4, !dbg !10464
  store i32 %54, i32* %regval, align 4, !dbg !10468
  call void @llvm.dbg.declare(metadata i32* %_var140, metadata !10469, metadata !DIExpression()), !dbg !10471
  %55 = load i32, i32* %regval, align 4, !dbg !10471
  store i32 %55, i32* %_var140, align 4, !dbg !10471
  call void @llvm.dbg.declare(metadata i32* %_pos141, metadata !10472, metadata !DIExpression()), !dbg !10471
  store i32 0, i32* %_pos141, align 4, !dbg !10471
  call void @llvm.dbg.declare(metadata i32* %_len142, metadata !10473, metadata !DIExpression()), !dbg !10471
  store i32 16, i32* %_len142, align 4, !dbg !10471
  call void @llvm.dbg.declare(metadata i32* %_val143, metadata !10474, metadata !DIExpression()), !dbg !10471
  store i32 1, i32* %_val143, align 4, !dbg !10471
  %56 = load i32, i32* %_val143, align 4, !dbg !10471
  %57 = load i32, i32* %_pos141, align 4, !dbg !10471
  %shl144 = shl i32 %56, %57, !dbg !10471
  %conv145 = sext i32 %shl144 to i64, !dbg !10471
  %58 = load i32, i32* %_pos141, align 4, !dbg !10471
  %sh_prom146 = zext i32 %58 to i64, !dbg !10471
  %shl147 = shl i64 1, %sh_prom146, !dbg !10471
  %sub148 = sub i64 -1, %shl147, !dbg !10471
  %add149 = add i64 %sub148, 1, !dbg !10471
  %59 = load i32, i32* %_pos141, align 4, !dbg !10471
  %60 = load i32, i32* %_len142, align 4, !dbg !10471
  %add150 = add i32 %59, %60, !dbg !10471
  %sub151 = sub i32 %add150, 1, !dbg !10471
  %sub152 = sub i32 63, %sub151, !dbg !10471
  %sh_prom153 = zext i32 %sub152 to i64, !dbg !10471
  %shr154 = lshr i64 -1, %sh_prom153, !dbg !10471
  %and155 = and i64 %add149, %shr154, !dbg !10471
  %add156 = add i64 0, %and155, !dbg !10471
  %and157 = and i64 %conv145, %add156, !dbg !10471
  %conv158 = trunc i64 %and157 to i32, !dbg !10471
  store i32 %conv158, i32* %_val143, align 4, !dbg !10471
  %61 = load i32, i32* %_var140, align 4, !dbg !10471
  %conv160 = zext i32 %61 to i64, !dbg !10471
  %62 = load i32, i32* %_pos141, align 4, !dbg !10471
  %sh_prom161 = zext i32 %62 to i64, !dbg !10471
  %shl162 = shl i64 1, %sh_prom161, !dbg !10471
  %sub163 = sub i64 -1, %shl162, !dbg !10471
  %add164 = add i64 %sub163, 1, !dbg !10471
  %63 = load i32, i32* %_pos141, align 4, !dbg !10471
  %64 = load i32, i32* %_len142, align 4, !dbg !10471
  %add165 = add i32 %63, %64, !dbg !10471
  %sub166 = sub i32 %add165, 1, !dbg !10471
  %sub167 = sub i32 63, %sub166, !dbg !10471
  %sh_prom168 = zext i32 %sub167 to i64, !dbg !10471
  %shr169 = lshr i64 -1, %sh_prom168, !dbg !10471
  %and170 = and i64 %add164, %shr169, !dbg !10471
  %add171 = add i64 0, %and170, !dbg !10471
  %neg172 = xor i64 %add171, -1, !dbg !10471
  %and173 = and i64 %conv160, %neg172, !dbg !10471
  %65 = load i32, i32* %_val143, align 4, !dbg !10471
  %conv174 = sext i32 %65 to i64, !dbg !10471
  %or175 = or i64 %and173, %conv174, !dbg !10471
  %conv176 = trunc i64 %or175 to i32, !dbg !10471
  store i32 %conv176, i32* %_var140, align 4, !dbg !10471
  store i32 %conv176, i32* %tmp159, align 4, !dbg !10471
  %66 = load i32, i32* %tmp159, align 4, !dbg !10471
  store i32 %66, i32* %regval, align 4, !dbg !10475
  %67 = load i32, i32* %regval, align 4, !dbg !10476
  %68 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !10477
  %mac_regs177 = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %68, i32 0, i32 6, !dbg !10478
  %69 = load i8*, i8** %mac_regs177, align 8, !dbg !10478
  %add.ptr178 = getelementptr i8, i8* %69, i64 80, !dbg !10479
  call void @writel(i32 %67, i8* %add.ptr178) #7, !dbg !10480
  ret i32 0, !dbg !10481
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @xlgmac_disable_rx_vlan_filtering(%struct.xlgmac_pdata* %pdata) #0 !dbg !10482 {
entry:
  %pdata.addr = alloca %struct.xlgmac_pdata*, align 8
  %regval = alloca i32, align 4
  %_var = alloca i32, align 4
  %_pos = alloca i32, align 4
  %_len = alloca i32, align 4
  %_val = alloca i32, align 4
  %tmp = alloca i32, align 4
  store %struct.xlgmac_pdata* %pdata, %struct.xlgmac_pdata** %pdata.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xlgmac_pdata** %pdata.addr, metadata !10483, metadata !DIExpression()), !dbg !10484
  call void @llvm.dbg.declare(metadata i32* %regval, metadata !10485, metadata !DIExpression()), !dbg !10486
  %0 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !10487
  %mac_regs = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %0, i32 0, i32 6, !dbg !10488
  %1 = load i8*, i8** %mac_regs, align 8, !dbg !10488
  %add.ptr = getelementptr i8, i8* %1, i64 8, !dbg !10489
  %call = call i32 @readl(i8* %add.ptr) #7, !dbg !10490
  store i32 %call, i32* %regval, align 4, !dbg !10491
  call void @llvm.dbg.declare(metadata i32* %_var, metadata !10492, metadata !DIExpression()), !dbg !10494
  %2 = load i32, i32* %regval, align 4, !dbg !10494
  store i32 %2, i32* %_var, align 4, !dbg !10494
  call void @llvm.dbg.declare(metadata i32* %_pos, metadata !10495, metadata !DIExpression()), !dbg !10494
  store i32 16, i32* %_pos, align 4, !dbg !10494
  call void @llvm.dbg.declare(metadata i32* %_len, metadata !10496, metadata !DIExpression()), !dbg !10494
  store i32 1, i32* %_len, align 4, !dbg !10494
  call void @llvm.dbg.declare(metadata i32* %_val, metadata !10497, metadata !DIExpression()), !dbg !10494
  store i32 0, i32* %_val, align 4, !dbg !10494
  %3 = load i32, i32* %_val, align 4, !dbg !10494
  %4 = load i32, i32* %_pos, align 4, !dbg !10494
  %shl = shl i32 %3, %4, !dbg !10494
  %conv = sext i32 %shl to i64, !dbg !10494
  %5 = load i32, i32* %_pos, align 4, !dbg !10494
  %sh_prom = zext i32 %5 to i64, !dbg !10494
  %shl1 = shl i64 1, %sh_prom, !dbg !10494
  %sub = sub i64 -1, %shl1, !dbg !10494
  %add = add i64 %sub, 1, !dbg !10494
  %6 = load i32, i32* %_pos, align 4, !dbg !10494
  %7 = load i32, i32* %_len, align 4, !dbg !10494
  %add2 = add i32 %6, %7, !dbg !10494
  %sub3 = sub i32 %add2, 1, !dbg !10494
  %sub4 = sub i32 63, %sub3, !dbg !10494
  %sh_prom5 = zext i32 %sub4 to i64, !dbg !10494
  %shr = lshr i64 -1, %sh_prom5, !dbg !10494
  %and = and i64 %add, %shr, !dbg !10494
  %add6 = add i64 0, %and, !dbg !10494
  %and7 = and i64 %conv, %add6, !dbg !10494
  %conv8 = trunc i64 %and7 to i32, !dbg !10494
  store i32 %conv8, i32* %_val, align 4, !dbg !10494
  %8 = load i32, i32* %_var, align 4, !dbg !10494
  %conv9 = zext i32 %8 to i64, !dbg !10494
  %9 = load i32, i32* %_pos, align 4, !dbg !10494
  %sh_prom10 = zext i32 %9 to i64, !dbg !10494
  %shl11 = shl i64 1, %sh_prom10, !dbg !10494
  %sub12 = sub i64 -1, %shl11, !dbg !10494
  %add13 = add i64 %sub12, 1, !dbg !10494
  %10 = load i32, i32* %_pos, align 4, !dbg !10494
  %11 = load i32, i32* %_len, align 4, !dbg !10494
  %add14 = add i32 %10, %11, !dbg !10494
  %sub15 = sub i32 %add14, 1, !dbg !10494
  %sub16 = sub i32 63, %sub15, !dbg !10494
  %sh_prom17 = zext i32 %sub16 to i64, !dbg !10494
  %shr18 = lshr i64 -1, %sh_prom17, !dbg !10494
  %and19 = and i64 %add13, %shr18, !dbg !10494
  %add20 = add i64 0, %and19, !dbg !10494
  %neg = xor i64 %add20, -1, !dbg !10494
  %and21 = and i64 %conv9, %neg, !dbg !10494
  %12 = load i32, i32* %_val, align 4, !dbg !10494
  %conv22 = sext i32 %12 to i64, !dbg !10494
  %or = or i64 %and21, %conv22, !dbg !10494
  %conv23 = trunc i64 %or to i32, !dbg !10494
  store i32 %conv23, i32* %_var, align 4, !dbg !10494
  store i32 %conv23, i32* %tmp, align 4, !dbg !10494
  %13 = load i32, i32* %tmp, align 4, !dbg !10494
  store i32 %13, i32* %regval, align 4, !dbg !10498
  %14 = load i32, i32* %regval, align 4, !dbg !10499
  %15 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !10500
  %mac_regs24 = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %15, i32 0, i32 6, !dbg !10501
  %16 = load i8*, i8** %mac_regs24, align 8, !dbg !10501
  %add.ptr25 = getelementptr i8, i8* %16, i64 8, !dbg !10502
  call void @writel(i32 %14, i8* %add.ptr25) #7, !dbg !10503
  ret i32 0, !dbg !10504
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @xlgmac_update_vlan_hash_table(%struct.xlgmac_pdata* %pdata) #0 !dbg !10505 {
entry:
  %pdata.addr = alloca %struct.xlgmac_pdata*, align 8
  %vlan_hash_table = alloca i16, align 2
  %vid_le = alloca i16, align 2
  %regval = alloca i32, align 4
  %crc = alloca i32, align 4
  %vid = alloca i16, align 2
  %__x = alloca i32, align 4
  %tmp = alloca i32, align 4
  %___x = alloca i32, align 4
  %tmp23 = alloca i32, align 4
  %_var = alloca i32, align 4
  %_pos = alloca i32, align 4
  %_len = alloca i32, align 4
  %_val = alloca i16, align 2
  %tmp51 = alloca i32, align 4
  store %struct.xlgmac_pdata* %pdata, %struct.xlgmac_pdata** %pdata.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xlgmac_pdata** %pdata.addr, metadata !10506, metadata !DIExpression()), !dbg !10507
  call void @llvm.dbg.declare(metadata i16* %vlan_hash_table, metadata !10508, metadata !DIExpression()), !dbg !10509
  store i16 0, i16* %vlan_hash_table, align 2, !dbg !10509
  call void @llvm.dbg.declare(metadata i16* %vid_le, metadata !10510, metadata !DIExpression()), !dbg !10511
  call void @llvm.dbg.declare(metadata i32* %regval, metadata !10512, metadata !DIExpression()), !dbg !10513
  call void @llvm.dbg.declare(metadata i32* %crc, metadata !10514, metadata !DIExpression()), !dbg !10515
  call void @llvm.dbg.declare(metadata i16* %vid, metadata !10516, metadata !DIExpression()), !dbg !10517
  %0 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !10518
  %active_vlans = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %0, i32 0, i32 39, !dbg !10518
  %arraydecay = getelementptr inbounds [64 x i64], [64 x i64]* %active_vlans, i64 0, i64 0, !dbg !10518
  %call = call i64 @find_first_bit(i64* %arraydecay, i64 4096) #7, !dbg !10518
  %conv = trunc i64 %call to i16, !dbg !10518
  store i16 %conv, i16* %vid, align 2, !dbg !10518
  br label %for.cond, !dbg !10518

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i16, i16* %vid, align 2, !dbg !10520
  %conv1 = zext i16 %1 to i32, !dbg !10520
  %cmp = icmp slt i32 %conv1, 4096, !dbg !10520
  br i1 %cmp, label %for.body, label %for.end, !dbg !10518

for.body:                                         ; preds = %for.cond
  %2 = load i16, i16* %vid, align 2, !dbg !10522
  store i16 %2, i16* %vid_le, align 2, !dbg !10524
  call void @llvm.dbg.declare(metadata i32* %__x, metadata !10525, metadata !DIExpression()), !dbg !10527
  %3 = load i16, i16* %vid_le, align 2, !dbg !10527
  %call3 = call i32 @xlgmac_vid_crc32_le(i16 zeroext %3) #7, !dbg !10527
  %neg = xor i32 %call3, -1, !dbg !10527
  store i32 %neg, i32* %__x, align 4, !dbg !10527
  %4 = load i32, i32* %__x, align 4, !dbg !10527
  %5 = call i1 @llvm.is.constant.i32(i32 %4), !dbg !10527
  br i1 %5, label %cond.true, label %cond.false, !dbg !10527

cond.true:                                        ; preds = %for.body
  call void @llvm.dbg.declare(metadata i32* %___x, metadata !10528, metadata !DIExpression()), !dbg !10530
  %6 = load i32, i32* %__x, align 4, !dbg !10530
  store i32 %6, i32* %___x, align 4, !dbg !10530
  %7 = load i32, i32* %___x, align 4, !dbg !10530
  %shr = lshr i32 %7, 16, !dbg !10530
  %8 = load i32, i32* %___x, align 4, !dbg !10530
  %shl = shl i32 %8, 16, !dbg !10530
  %or = or i32 %shr, %shl, !dbg !10530
  store i32 %or, i32* %___x, align 4, !dbg !10530
  %9 = load i32, i32* %___x, align 4, !dbg !10530
  %and = and i32 %9, -16711936, !dbg !10530
  %shr4 = lshr i32 %and, 8, !dbg !10530
  %10 = load i32, i32* %___x, align 4, !dbg !10530
  %and5 = and i32 %10, 16711935, !dbg !10530
  %shl6 = shl i32 %and5, 8, !dbg !10530
  %or7 = or i32 %shr4, %shl6, !dbg !10530
  store i32 %or7, i32* %___x, align 4, !dbg !10530
  %11 = load i32, i32* %___x, align 4, !dbg !10530
  %and8 = and i32 %11, -252645136, !dbg !10530
  %shr9 = lshr i32 %and8, 4, !dbg !10530
  %12 = load i32, i32* %___x, align 4, !dbg !10530
  %and10 = and i32 %12, 252645135, !dbg !10530
  %shl11 = shl i32 %and10, 4, !dbg !10530
  %or12 = or i32 %shr9, %shl11, !dbg !10530
  store i32 %or12, i32* %___x, align 4, !dbg !10530
  %13 = load i32, i32* %___x, align 4, !dbg !10530
  %and13 = and i32 %13, -858993460, !dbg !10530
  %shr14 = lshr i32 %and13, 2, !dbg !10530
  %14 = load i32, i32* %___x, align 4, !dbg !10530
  %and15 = and i32 %14, 858993459, !dbg !10530
  %shl16 = shl i32 %and15, 2, !dbg !10530
  %or17 = or i32 %shr14, %shl16, !dbg !10530
  store i32 %or17, i32* %___x, align 4, !dbg !10530
  %15 = load i32, i32* %___x, align 4, !dbg !10530
  %and18 = and i32 %15, -1431655766, !dbg !10530
  %shr19 = lshr i32 %and18, 1, !dbg !10530
  %16 = load i32, i32* %___x, align 4, !dbg !10530
  %and20 = and i32 %16, 1431655765, !dbg !10530
  %shl21 = shl i32 %and20, 1, !dbg !10530
  %or22 = or i32 %shr19, %shl21, !dbg !10530
  store i32 %or22, i32* %___x, align 4, !dbg !10530
  %17 = load i32, i32* %___x, align 4, !dbg !10530
  store i32 %17, i32* %tmp23, align 4, !dbg !10530
  %18 = load i32, i32* %tmp23, align 4, !dbg !10530
  br label %cond.end, !dbg !10527

cond.false:                                       ; preds = %for.body
  %19 = load i32, i32* %__x, align 4, !dbg !10527
  %call24 = call i32 @__bitrev32(i32 %19) #7, !dbg !10527
  br label %cond.end, !dbg !10527

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %18, %cond.true ], [ %call24, %cond.false ], !dbg !10527
  store i32 %cond, i32* %tmp, align 4, !dbg !10527
  %20 = load i32, i32* %tmp, align 4, !dbg !10527
  %shr25 = lshr i32 %20, 28, !dbg !10531
  store i32 %shr25, i32* %crc, align 4, !dbg !10532
  %21 = load i32, i32* %crc, align 4, !dbg !10533
  %shl26 = shl i32 1, %21, !dbg !10534
  %22 = load i16, i16* %vlan_hash_table, align 2, !dbg !10535
  %conv27 = zext i16 %22 to i32, !dbg !10535
  %or28 = or i32 %conv27, %shl26, !dbg !10535
  %conv29 = trunc i32 %or28 to i16, !dbg !10535
  store i16 %conv29, i16* %vlan_hash_table, align 2, !dbg !10535
  br label %for.inc, !dbg !10536

for.inc:                                          ; preds = %cond.end
  %23 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !10520
  %active_vlans30 = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %23, i32 0, i32 39, !dbg !10520
  %arraydecay31 = getelementptr inbounds [64 x i64], [64 x i64]* %active_vlans30, i64 0, i64 0, !dbg !10520
  %24 = load i16, i16* %vid, align 2, !dbg !10520
  %conv32 = zext i16 %24 to i32, !dbg !10520
  %add = add i32 %conv32, 1, !dbg !10520
  %conv33 = sext i32 %add to i64, !dbg !10520
  %call34 = call i64 @find_next_bit(i64* %arraydecay31, i64 4096, i64 %conv33) #7, !dbg !10520
  %conv35 = trunc i64 %call34 to i16, !dbg !10520
  store i16 %conv35, i16* %vid, align 2, !dbg !10520
  br label %for.cond, !dbg !10520, !llvm.loop !10537

for.end:                                          ; preds = %for.cond
  %25 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !10539
  %mac_regs = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %25, i32 0, i32 6, !dbg !10540
  %26 = load i8*, i8** %mac_regs, align 8, !dbg !10540
  %add.ptr = getelementptr i8, i8* %26, i64 88, !dbg !10541
  %call36 = call i32 @readl(i8* %add.ptr) #7, !dbg !10542
  store i32 %call36, i32* %regval, align 4, !dbg !10543
  call void @llvm.dbg.declare(metadata i32* %_var, metadata !10544, metadata !DIExpression()), !dbg !10546
  %27 = load i32, i32* %regval, align 4, !dbg !10546
  store i32 %27, i32* %_var, align 4, !dbg !10546
  call void @llvm.dbg.declare(metadata i32* %_pos, metadata !10547, metadata !DIExpression()), !dbg !10546
  store i32 0, i32* %_pos, align 4, !dbg !10546
  call void @llvm.dbg.declare(metadata i32* %_len, metadata !10548, metadata !DIExpression()), !dbg !10546
  store i32 16, i32* %_len, align 4, !dbg !10546
  call void @llvm.dbg.declare(metadata i16* %_val, metadata !10549, metadata !DIExpression()), !dbg !10546
  %28 = load i16, i16* %vlan_hash_table, align 2, !dbg !10546
  store i16 %28, i16* %_val, align 2, !dbg !10546
  %29 = load i16, i16* %_val, align 2, !dbg !10546
  %conv37 = zext i16 %29 to i32, !dbg !10546
  %30 = load i32, i32* %_pos, align 4, !dbg !10546
  %shl38 = shl i32 %conv37, %30, !dbg !10546
  %conv39 = sext i32 %shl38 to i64, !dbg !10546
  %31 = load i32, i32* %_pos, align 4, !dbg !10546
  %sh_prom = zext i32 %31 to i64, !dbg !10546
  %shl40 = shl i64 1, %sh_prom, !dbg !10546
  %sub = sub i64 -1, %shl40, !dbg !10546
  %add41 = add i64 %sub, 1, !dbg !10546
  %32 = load i32, i32* %_pos, align 4, !dbg !10546
  %33 = load i32, i32* %_len, align 4, !dbg !10546
  %add42 = add i32 %32, %33, !dbg !10546
  %sub43 = sub i32 %add42, 1, !dbg !10546
  %sub44 = sub i32 63, %sub43, !dbg !10546
  %sh_prom45 = zext i32 %sub44 to i64, !dbg !10546
  %shr46 = lshr i64 -1, %sh_prom45, !dbg !10546
  %and47 = and i64 %add41, %shr46, !dbg !10546
  %add48 = add i64 0, %and47, !dbg !10546
  %and49 = and i64 %conv39, %add48, !dbg !10546
  %conv50 = trunc i64 %and49 to i16, !dbg !10546
  store i16 %conv50, i16* %_val, align 2, !dbg !10546
  %34 = load i32, i32* %_var, align 4, !dbg !10546
  %conv52 = zext i32 %34 to i64, !dbg !10546
  %35 = load i32, i32* %_pos, align 4, !dbg !10546
  %sh_prom53 = zext i32 %35 to i64, !dbg !10546
  %shl54 = shl i64 1, %sh_prom53, !dbg !10546
  %sub55 = sub i64 -1, %shl54, !dbg !10546
  %add56 = add i64 %sub55, 1, !dbg !10546
  %36 = load i32, i32* %_pos, align 4, !dbg !10546
  %37 = load i32, i32* %_len, align 4, !dbg !10546
  %add57 = add i32 %36, %37, !dbg !10546
  %sub58 = sub i32 %add57, 1, !dbg !10546
  %sub59 = sub i32 63, %sub58, !dbg !10546
  %sh_prom60 = zext i32 %sub59 to i64, !dbg !10546
  %shr61 = lshr i64 -1, %sh_prom60, !dbg !10546
  %and62 = and i64 %add56, %shr61, !dbg !10546
  %add63 = add i64 0, %and62, !dbg !10546
  %neg64 = xor i64 %add63, -1, !dbg !10546
  %and65 = and i64 %conv52, %neg64, !dbg !10546
  %38 = load i16, i16* %_val, align 2, !dbg !10546
  %conv66 = zext i16 %38 to i64, !dbg !10546
  %or67 = or i64 %and65, %conv66, !dbg !10546
  %conv68 = trunc i64 %or67 to i32, !dbg !10546
  store i32 %conv68, i32* %_var, align 4, !dbg !10546
  store i32 %conv68, i32* %tmp51, align 4, !dbg !10546
  %39 = load i32, i32* %tmp51, align 4, !dbg !10546
  store i32 %39, i32* %regval, align 4, !dbg !10550
  %40 = load i32, i32* %regval, align 4, !dbg !10551
  %41 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !10552
  %mac_regs69 = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %41, i32 0, i32 6, !dbg !10553
  %42 = load i8*, i8** %mac_regs69, align 8, !dbg !10553
  %add.ptr70 = getelementptr i8, i8* %42, i64 88, !dbg !10554
  call void @writel(i32 %40, i8* %add.ptr70) #7, !dbg !10555
  ret i32 0, !dbg !10556
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @xlgmac_config_rx_coalesce(%struct.xlgmac_pdata* %pdata) #0 !dbg !10557 {
entry:
  %pdata.addr = alloca %struct.xlgmac_pdata*, align 8
  %channel = alloca %struct.xlgmac_channel*, align 8
  %i = alloca i32, align 4
  %regval = alloca i32, align 4
  %_var = alloca i32, align 4
  %_pos = alloca i32, align 4
  %_len = alloca i32, align 4
  %_val = alloca i32, align 4
  %tmp = alloca i32, align 4
  store %struct.xlgmac_pdata* %pdata, %struct.xlgmac_pdata** %pdata.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xlgmac_pdata** %pdata.addr, metadata !10558, metadata !DIExpression()), !dbg !10559
  call void @llvm.dbg.declare(metadata %struct.xlgmac_channel** %channel, metadata !10560, metadata !DIExpression()), !dbg !10561
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10562, metadata !DIExpression()), !dbg !10563
  call void @llvm.dbg.declare(metadata i32* %regval, metadata !10564, metadata !DIExpression()), !dbg !10565
  %0 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !10566
  %channel_head = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %0, i32 0, i32 9, !dbg !10567
  %1 = load %struct.xlgmac_channel*, %struct.xlgmac_channel** %channel_head, align 8, !dbg !10567
  store %struct.xlgmac_channel* %1, %struct.xlgmac_channel** %channel, align 8, !dbg !10568
  store i32 0, i32* %i, align 4, !dbg !10569
  br label %for.cond, !dbg !10571

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i32, i32* %i, align 4, !dbg !10572
  %3 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !10574
  %channel_count = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %3, i32 0, i32 10, !dbg !10575
  %4 = load i32, i32* %channel_count, align 8, !dbg !10575
  %cmp = icmp ult i32 %2, %4, !dbg !10576
  br i1 %cmp, label %for.body, label %for.end, !dbg !10577

for.body:                                         ; preds = %for.cond
  %5 = load %struct.xlgmac_channel*, %struct.xlgmac_channel** %channel, align 8, !dbg !10578
  %rx_ring = getelementptr inbounds %struct.xlgmac_channel, %struct.xlgmac_channel* %5, i32 0, i32 11, !dbg !10581
  %6 = load %struct.xlgmac_ring*, %struct.xlgmac_ring** %rx_ring, align 8, !dbg !10581
  %tobool = icmp ne %struct.xlgmac_ring* %6, null, !dbg !10578
  br i1 %tobool, label %if.end, label %if.then, !dbg !10582

if.then:                                          ; preds = %for.body
  br label %for.end, !dbg !10583

if.end:                                           ; preds = %for.body
  %7 = load %struct.xlgmac_channel*, %struct.xlgmac_channel** %channel, align 8, !dbg !10584
  %dma_regs = getelementptr inbounds %struct.xlgmac_channel, %struct.xlgmac_channel* %7, i32 0, i32 3, !dbg !10584
  %8 = load i8*, i8** %dma_regs, align 32, !dbg !10584
  %add.ptr = getelementptr i8, i8* %8, i64 60, !dbg !10584
  %call = call i32 @readl(i8* %add.ptr) #7, !dbg !10585
  store i32 %call, i32* %regval, align 4, !dbg !10586
  call void @llvm.dbg.declare(metadata i32* %_var, metadata !10587, metadata !DIExpression()), !dbg !10589
  %9 = load i32, i32* %regval, align 4, !dbg !10589
  store i32 %9, i32* %_var, align 4, !dbg !10589
  call void @llvm.dbg.declare(metadata i32* %_pos, metadata !10590, metadata !DIExpression()), !dbg !10589
  store i32 0, i32* %_pos, align 4, !dbg !10589
  call void @llvm.dbg.declare(metadata i32* %_len, metadata !10591, metadata !DIExpression()), !dbg !10589
  store i32 8, i32* %_len, align 4, !dbg !10589
  call void @llvm.dbg.declare(metadata i32* %_val, metadata !10592, metadata !DIExpression()), !dbg !10589
  %10 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !10589
  %rx_riwt = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %10, i32 0, i32 27, !dbg !10589
  %11 = load i32, i32* %rx_riwt, align 4, !dbg !10589
  store i32 %11, i32* %_val, align 4, !dbg !10589
  %12 = load i32, i32* %_val, align 4, !dbg !10589
  %13 = load i32, i32* %_pos, align 4, !dbg !10589
  %shl = shl i32 %12, %13, !dbg !10589
  %conv = zext i32 %shl to i64, !dbg !10589
  %14 = load i32, i32* %_pos, align 4, !dbg !10589
  %sh_prom = zext i32 %14 to i64, !dbg !10589
  %shl1 = shl i64 1, %sh_prom, !dbg !10589
  %sub = sub i64 -1, %shl1, !dbg !10589
  %add = add i64 %sub, 1, !dbg !10589
  %15 = load i32, i32* %_pos, align 4, !dbg !10589
  %16 = load i32, i32* %_len, align 4, !dbg !10589
  %add2 = add i32 %15, %16, !dbg !10589
  %sub3 = sub i32 %add2, 1, !dbg !10589
  %sub4 = sub i32 63, %sub3, !dbg !10589
  %sh_prom5 = zext i32 %sub4 to i64, !dbg !10589
  %shr = lshr i64 -1, %sh_prom5, !dbg !10589
  %and = and i64 %add, %shr, !dbg !10589
  %add6 = add i64 0, %and, !dbg !10589
  %and7 = and i64 %conv, %add6, !dbg !10589
  %conv8 = trunc i64 %and7 to i32, !dbg !10589
  store i32 %conv8, i32* %_val, align 4, !dbg !10589
  %17 = load i32, i32* %_var, align 4, !dbg !10589
  %conv9 = zext i32 %17 to i64, !dbg !10589
  %18 = load i32, i32* %_pos, align 4, !dbg !10589
  %sh_prom10 = zext i32 %18 to i64, !dbg !10589
  %shl11 = shl i64 1, %sh_prom10, !dbg !10589
  %sub12 = sub i64 -1, %shl11, !dbg !10589
  %add13 = add i64 %sub12, 1, !dbg !10589
  %19 = load i32, i32* %_pos, align 4, !dbg !10589
  %20 = load i32, i32* %_len, align 4, !dbg !10589
  %add14 = add i32 %19, %20, !dbg !10589
  %sub15 = sub i32 %add14, 1, !dbg !10589
  %sub16 = sub i32 63, %sub15, !dbg !10589
  %sh_prom17 = zext i32 %sub16 to i64, !dbg !10589
  %shr18 = lshr i64 -1, %sh_prom17, !dbg !10589
  %and19 = and i64 %add13, %shr18, !dbg !10589
  %add20 = add i64 0, %and19, !dbg !10589
  %neg = xor i64 %add20, -1, !dbg !10589
  %and21 = and i64 %conv9, %neg, !dbg !10589
  %21 = load i32, i32* %_val, align 4, !dbg !10589
  %conv22 = zext i32 %21 to i64, !dbg !10589
  %or = or i64 %and21, %conv22, !dbg !10589
  %conv23 = trunc i64 %or to i32, !dbg !10589
  store i32 %conv23, i32* %_var, align 4, !dbg !10589
  store i32 %conv23, i32* %tmp, align 4, !dbg !10589
  %22 = load i32, i32* %tmp, align 4, !dbg !10589
  store i32 %22, i32* %regval, align 4, !dbg !10593
  %23 = load i32, i32* %regval, align 4, !dbg !10594
  %24 = load %struct.xlgmac_channel*, %struct.xlgmac_channel** %channel, align 8, !dbg !10595
  %dma_regs24 = getelementptr inbounds %struct.xlgmac_channel, %struct.xlgmac_channel* %24, i32 0, i32 3, !dbg !10595
  %25 = load i8*, i8** %dma_regs24, align 32, !dbg !10595
  %add.ptr25 = getelementptr i8, i8* %25, i64 60, !dbg !10595
  call void @writel(i32 %23, i8* %add.ptr25) #7, !dbg !10596
  br label %for.inc, !dbg !10597

for.inc:                                          ; preds = %if.end
  %26 = load i32, i32* %i, align 4, !dbg !10598
  %inc = add i32 %26, 1, !dbg !10598
  store i32 %inc, i32* %i, align 4, !dbg !10598
  %27 = load %struct.xlgmac_channel*, %struct.xlgmac_channel** %channel, align 8, !dbg !10599
  %incdec.ptr = getelementptr %struct.xlgmac_channel, %struct.xlgmac_channel* %27, i32 1, !dbg !10599
  store %struct.xlgmac_channel* %incdec.ptr, %struct.xlgmac_channel** %channel, align 8, !dbg !10599
  br label %for.cond, !dbg !10600, !llvm.loop !10601

for.end:                                          ; preds = %if.then, %for.cond
  ret i32 0, !dbg !10603
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @xlgmac_config_tx_coalesce(%struct.xlgmac_pdata* %pdata) #0 !dbg !10604 {
entry:
  %pdata.addr = alloca %struct.xlgmac_pdata*, align 8
  store %struct.xlgmac_pdata* %pdata, %struct.xlgmac_pdata** %pdata.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xlgmac_pdata** %pdata.addr, metadata !10605, metadata !DIExpression()), !dbg !10606
  ret i32 0, !dbg !10607
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @xlgmac_usec_to_riwt(%struct.xlgmac_pdata* %pdata, i32 %usec) #0 !dbg !10608 {
entry:
  %pdata.addr = alloca %struct.xlgmac_pdata*, align 8
  %usec.addr = alloca i32, align 4
  %rate = alloca i64, align 8
  %ret = alloca i32, align 4
  store %struct.xlgmac_pdata* %pdata, %struct.xlgmac_pdata** %pdata.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xlgmac_pdata** %pdata.addr, metadata !10609, metadata !DIExpression()), !dbg !10610
  store i32 %usec, i32* %usec.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %usec.addr, metadata !10611, metadata !DIExpression()), !dbg !10612
  call void @llvm.dbg.declare(metadata i64* %rate, metadata !10613, metadata !DIExpression()), !dbg !10614
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !10615, metadata !DIExpression()), !dbg !10616
  %0 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !10617
  %sysclk_rate = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %0, i32 0, i32 40, !dbg !10618
  %1 = load i64, i64* %sysclk_rate, align 8, !dbg !10618
  store i64 %1, i64* %rate, align 8, !dbg !10619
  %2 = load i32, i32* %usec.addr, align 4, !dbg !10620
  %conv = zext i32 %2 to i64, !dbg !10620
  %3 = load i64, i64* %rate, align 8, !dbg !10621
  %div = udiv i64 %3, 1000000, !dbg !10622
  %mul = mul i64 %conv, %div, !dbg !10623
  %div1 = udiv i64 %mul, 256, !dbg !10624
  %conv2 = trunc i64 %div1 to i32, !dbg !10625
  store i32 %conv2, i32* %ret, align 4, !dbg !10626
  %4 = load i32, i32* %ret, align 4, !dbg !10627
  ret i32 %4, !dbg !10628
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @xlgmac_riwt_to_usec(%struct.xlgmac_pdata* %pdata, i32 %riwt) #0 !dbg !10629 {
entry:
  %pdata.addr = alloca %struct.xlgmac_pdata*, align 8
  %riwt.addr = alloca i32, align 4
  %rate = alloca i64, align 8
  %ret = alloca i32, align 4
  store %struct.xlgmac_pdata* %pdata, %struct.xlgmac_pdata** %pdata.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xlgmac_pdata** %pdata.addr, metadata !10630, metadata !DIExpression()), !dbg !10631
  store i32 %riwt, i32* %riwt.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %riwt.addr, metadata !10632, metadata !DIExpression()), !dbg !10633
  call void @llvm.dbg.declare(metadata i64* %rate, metadata !10634, metadata !DIExpression()), !dbg !10635
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !10636, metadata !DIExpression()), !dbg !10637
  %0 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !10638
  %sysclk_rate = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %0, i32 0, i32 40, !dbg !10639
  %1 = load i64, i64* %sysclk_rate, align 8, !dbg !10639
  store i64 %1, i64* %rate, align 8, !dbg !10640
  %2 = load i32, i32* %riwt.addr, align 4, !dbg !10641
  %mul = mul i32 %2, 256, !dbg !10642
  %conv = zext i32 %mul to i64, !dbg !10643
  %3 = load i64, i64* %rate, align 8, !dbg !10644
  %div = udiv i64 %3, 1000000, !dbg !10645
  %div1 = udiv i64 %conv, %div, !dbg !10646
  %conv2 = trunc i64 %div1 to i32, !dbg !10643
  store i32 %conv2, i32* %ret, align 4, !dbg !10647
  %4 = load i32, i32* %ret, align 4, !dbg !10648
  ret i32 %4, !dbg !10649
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @xlgmac_config_rx_threshold(%struct.xlgmac_pdata* %pdata, i32 %val) #0 !dbg !10650 {
entry:
  %pdata.addr = alloca %struct.xlgmac_pdata*, align 8
  %val.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %regval = alloca i32, align 4
  %_var = alloca i32, align 4
  %_pos = alloca i32, align 4
  %_len = alloca i32, align 4
  %_val = alloca i32, align 4
  %tmp = alloca i32, align 4
  store %struct.xlgmac_pdata* %pdata, %struct.xlgmac_pdata** %pdata.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xlgmac_pdata** %pdata.addr, metadata !10651, metadata !DIExpression()), !dbg !10652
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !10653, metadata !DIExpression()), !dbg !10654
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10655, metadata !DIExpression()), !dbg !10656
  call void @llvm.dbg.declare(metadata i32* %regval, metadata !10657, metadata !DIExpression()), !dbg !10658
  store i32 0, i32* %i, align 4, !dbg !10659
  br label %for.cond, !dbg !10661

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !10662
  %1 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !10664
  %rx_q_count = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %1, i32 0, i32 16, !dbg !10665
  %2 = load i32, i32* %rx_q_count, align 8, !dbg !10665
  %cmp = icmp ult i32 %0, %2, !dbg !10666
  br i1 %cmp, label %for.body, label %for.end, !dbg !10667

for.body:                                         ; preds = %for.cond
  %3 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !10668
  %mac_regs = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %3, i32 0, i32 6, !dbg !10668
  %4 = load i8*, i8** %mac_regs, align 8, !dbg !10668
  %add.ptr = getelementptr i8, i8* %4, i64 4352, !dbg !10668
  %5 = load i32, i32* %i, align 4, !dbg !10668
  %mul = mul i32 %5, 128, !dbg !10668
  %idx.ext = zext i32 %mul to i64, !dbg !10668
  %add.ptr1 = getelementptr i8, i8* %add.ptr, i64 %idx.ext, !dbg !10668
  %add.ptr2 = getelementptr i8, i8* %add.ptr1, i64 64, !dbg !10668
  %call = call i32 @readl(i8* %add.ptr2) #7, !dbg !10670
  store i32 %call, i32* %regval, align 4, !dbg !10671
  call void @llvm.dbg.declare(metadata i32* %_var, metadata !10672, metadata !DIExpression()), !dbg !10674
  %6 = load i32, i32* %regval, align 4, !dbg !10674
  store i32 %6, i32* %_var, align 4, !dbg !10674
  call void @llvm.dbg.declare(metadata i32* %_pos, metadata !10675, metadata !DIExpression()), !dbg !10674
  store i32 0, i32* %_pos, align 4, !dbg !10674
  call void @llvm.dbg.declare(metadata i32* %_len, metadata !10676, metadata !DIExpression()), !dbg !10674
  store i32 2, i32* %_len, align 4, !dbg !10674
  call void @llvm.dbg.declare(metadata i32* %_val, metadata !10677, metadata !DIExpression()), !dbg !10674
  %7 = load i32, i32* %val.addr, align 4, !dbg !10674
  store i32 %7, i32* %_val, align 4, !dbg !10674
  %8 = load i32, i32* %_val, align 4, !dbg !10674
  %9 = load i32, i32* %_pos, align 4, !dbg !10674
  %shl = shl i32 %8, %9, !dbg !10674
  %conv = zext i32 %shl to i64, !dbg !10674
  %10 = load i32, i32* %_pos, align 4, !dbg !10674
  %sh_prom = zext i32 %10 to i64, !dbg !10674
  %shl3 = shl i64 1, %sh_prom, !dbg !10674
  %sub = sub i64 -1, %shl3, !dbg !10674
  %add = add i64 %sub, 1, !dbg !10674
  %11 = load i32, i32* %_pos, align 4, !dbg !10674
  %12 = load i32, i32* %_len, align 4, !dbg !10674
  %add4 = add i32 %11, %12, !dbg !10674
  %sub5 = sub i32 %add4, 1, !dbg !10674
  %sub6 = sub i32 63, %sub5, !dbg !10674
  %sh_prom7 = zext i32 %sub6 to i64, !dbg !10674
  %shr = lshr i64 -1, %sh_prom7, !dbg !10674
  %and = and i64 %add, %shr, !dbg !10674
  %add8 = add i64 0, %and, !dbg !10674
  %and9 = and i64 %conv, %add8, !dbg !10674
  %conv10 = trunc i64 %and9 to i32, !dbg !10674
  store i32 %conv10, i32* %_val, align 4, !dbg !10674
  %13 = load i32, i32* %_var, align 4, !dbg !10674
  %conv11 = zext i32 %13 to i64, !dbg !10674
  %14 = load i32, i32* %_pos, align 4, !dbg !10674
  %sh_prom12 = zext i32 %14 to i64, !dbg !10674
  %shl13 = shl i64 1, %sh_prom12, !dbg !10674
  %sub14 = sub i64 -1, %shl13, !dbg !10674
  %add15 = add i64 %sub14, 1, !dbg !10674
  %15 = load i32, i32* %_pos, align 4, !dbg !10674
  %16 = load i32, i32* %_len, align 4, !dbg !10674
  %add16 = add i32 %15, %16, !dbg !10674
  %sub17 = sub i32 %add16, 1, !dbg !10674
  %sub18 = sub i32 63, %sub17, !dbg !10674
  %sh_prom19 = zext i32 %sub18 to i64, !dbg !10674
  %shr20 = lshr i64 -1, %sh_prom19, !dbg !10674
  %and21 = and i64 %add15, %shr20, !dbg !10674
  %add22 = add i64 0, %and21, !dbg !10674
  %neg = xor i64 %add22, -1, !dbg !10674
  %and23 = and i64 %conv11, %neg, !dbg !10674
  %17 = load i32, i32* %_val, align 4, !dbg !10674
  %conv24 = zext i32 %17 to i64, !dbg !10674
  %or = or i64 %and23, %conv24, !dbg !10674
  %conv25 = trunc i64 %or to i32, !dbg !10674
  store i32 %conv25, i32* %_var, align 4, !dbg !10674
  store i32 %conv25, i32* %tmp, align 4, !dbg !10674
  %18 = load i32, i32* %tmp, align 4, !dbg !10674
  store i32 %18, i32* %regval, align 4, !dbg !10678
  %19 = load i32, i32* %regval, align 4, !dbg !10679
  %20 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !10680
  %mac_regs26 = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %20, i32 0, i32 6, !dbg !10680
  %21 = load i8*, i8** %mac_regs26, align 8, !dbg !10680
  %add.ptr27 = getelementptr i8, i8* %21, i64 4352, !dbg !10680
  %22 = load i32, i32* %i, align 4, !dbg !10680
  %mul28 = mul i32 %22, 128, !dbg !10680
  %idx.ext29 = zext i32 %mul28 to i64, !dbg !10680
  %add.ptr30 = getelementptr i8, i8* %add.ptr27, i64 %idx.ext29, !dbg !10680
  %add.ptr31 = getelementptr i8, i8* %add.ptr30, i64 64, !dbg !10680
  call void @writel(i32 %19, i8* %add.ptr31) #7, !dbg !10681
  br label %for.inc, !dbg !10682

for.inc:                                          ; preds = %for.body
  %23 = load i32, i32* %i, align 4, !dbg !10683
  %inc = add i32 %23, 1, !dbg !10683
  store i32 %inc, i32* %i, align 4, !dbg !10683
  br label %for.cond, !dbg !10684, !llvm.loop !10685

for.end:                                          ; preds = %for.cond
  ret i32 0, !dbg !10687
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @xlgmac_config_tx_threshold(%struct.xlgmac_pdata* %pdata, i32 %val) #0 !dbg !10688 {
entry:
  %pdata.addr = alloca %struct.xlgmac_pdata*, align 8
  %val.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %regval = alloca i32, align 4
  %_var = alloca i32, align 4
  %_pos = alloca i32, align 4
  %_len = alloca i32, align 4
  %_val = alloca i32, align 4
  %tmp = alloca i32, align 4
  store %struct.xlgmac_pdata* %pdata, %struct.xlgmac_pdata** %pdata.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xlgmac_pdata** %pdata.addr, metadata !10689, metadata !DIExpression()), !dbg !10690
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !10691, metadata !DIExpression()), !dbg !10692
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10693, metadata !DIExpression()), !dbg !10694
  call void @llvm.dbg.declare(metadata i32* %regval, metadata !10695, metadata !DIExpression()), !dbg !10696
  store i32 0, i32* %i, align 4, !dbg !10697
  br label %for.cond, !dbg !10699

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !10700
  %1 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !10702
  %tx_q_count = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %1, i32 0, i32 15, !dbg !10703
  %2 = load i32, i32* %tx_q_count, align 4, !dbg !10703
  %cmp = icmp ult i32 %0, %2, !dbg !10704
  br i1 %cmp, label %for.body, label %for.end, !dbg !10705

for.body:                                         ; preds = %for.cond
  %3 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !10706
  %mac_regs = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %3, i32 0, i32 6, !dbg !10706
  %4 = load i8*, i8** %mac_regs, align 8, !dbg !10706
  %add.ptr = getelementptr i8, i8* %4, i64 4352, !dbg !10706
  %5 = load i32, i32* %i, align 4, !dbg !10706
  %mul = mul i32 %5, 128, !dbg !10706
  %idx.ext = zext i32 %mul to i64, !dbg !10706
  %add.ptr1 = getelementptr i8, i8* %add.ptr, i64 %idx.ext, !dbg !10706
  %add.ptr2 = getelementptr i8, i8* %add.ptr1, i64 0, !dbg !10706
  %call = call i32 @readl(i8* %add.ptr2) #7, !dbg !10708
  store i32 %call, i32* %regval, align 4, !dbg !10709
  call void @llvm.dbg.declare(metadata i32* %_var, metadata !10710, metadata !DIExpression()), !dbg !10712
  %6 = load i32, i32* %regval, align 4, !dbg !10712
  store i32 %6, i32* %_var, align 4, !dbg !10712
  call void @llvm.dbg.declare(metadata i32* %_pos, metadata !10713, metadata !DIExpression()), !dbg !10712
  store i32 4, i32* %_pos, align 4, !dbg !10712
  call void @llvm.dbg.declare(metadata i32* %_len, metadata !10714, metadata !DIExpression()), !dbg !10712
  store i32 3, i32* %_len, align 4, !dbg !10712
  call void @llvm.dbg.declare(metadata i32* %_val, metadata !10715, metadata !DIExpression()), !dbg !10712
  %7 = load i32, i32* %val.addr, align 4, !dbg !10712
  store i32 %7, i32* %_val, align 4, !dbg !10712
  %8 = load i32, i32* %_val, align 4, !dbg !10712
  %9 = load i32, i32* %_pos, align 4, !dbg !10712
  %shl = shl i32 %8, %9, !dbg !10712
  %conv = zext i32 %shl to i64, !dbg !10712
  %10 = load i32, i32* %_pos, align 4, !dbg !10712
  %sh_prom = zext i32 %10 to i64, !dbg !10712
  %shl3 = shl i64 1, %sh_prom, !dbg !10712
  %sub = sub i64 -1, %shl3, !dbg !10712
  %add = add i64 %sub, 1, !dbg !10712
  %11 = load i32, i32* %_pos, align 4, !dbg !10712
  %12 = load i32, i32* %_len, align 4, !dbg !10712
  %add4 = add i32 %11, %12, !dbg !10712
  %sub5 = sub i32 %add4, 1, !dbg !10712
  %sub6 = sub i32 63, %sub5, !dbg !10712
  %sh_prom7 = zext i32 %sub6 to i64, !dbg !10712
  %shr = lshr i64 -1, %sh_prom7, !dbg !10712
  %and = and i64 %add, %shr, !dbg !10712
  %add8 = add i64 0, %and, !dbg !10712
  %and9 = and i64 %conv, %add8, !dbg !10712
  %conv10 = trunc i64 %and9 to i32, !dbg !10712
  store i32 %conv10, i32* %_val, align 4, !dbg !10712
  %13 = load i32, i32* %_var, align 4, !dbg !10712
  %conv11 = zext i32 %13 to i64, !dbg !10712
  %14 = load i32, i32* %_pos, align 4, !dbg !10712
  %sh_prom12 = zext i32 %14 to i64, !dbg !10712
  %shl13 = shl i64 1, %sh_prom12, !dbg !10712
  %sub14 = sub i64 -1, %shl13, !dbg !10712
  %add15 = add i64 %sub14, 1, !dbg !10712
  %15 = load i32, i32* %_pos, align 4, !dbg !10712
  %16 = load i32, i32* %_len, align 4, !dbg !10712
  %add16 = add i32 %15, %16, !dbg !10712
  %sub17 = sub i32 %add16, 1, !dbg !10712
  %sub18 = sub i32 63, %sub17, !dbg !10712
  %sh_prom19 = zext i32 %sub18 to i64, !dbg !10712
  %shr20 = lshr i64 -1, %sh_prom19, !dbg !10712
  %and21 = and i64 %add15, %shr20, !dbg !10712
  %add22 = add i64 0, %and21, !dbg !10712
  %neg = xor i64 %add22, -1, !dbg !10712
  %and23 = and i64 %conv11, %neg, !dbg !10712
  %17 = load i32, i32* %_val, align 4, !dbg !10712
  %conv24 = zext i32 %17 to i64, !dbg !10712
  %or = or i64 %and23, %conv24, !dbg !10712
  %conv25 = trunc i64 %or to i32, !dbg !10712
  store i32 %conv25, i32* %_var, align 4, !dbg !10712
  store i32 %conv25, i32* %tmp, align 4, !dbg !10712
  %18 = load i32, i32* %tmp, align 4, !dbg !10712
  store i32 %18, i32* %regval, align 4, !dbg !10716
  %19 = load i32, i32* %regval, align 4, !dbg !10717
  %20 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !10718
  %mac_regs26 = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %20, i32 0, i32 6, !dbg !10718
  %21 = load i8*, i8** %mac_regs26, align 8, !dbg !10718
  %add.ptr27 = getelementptr i8, i8* %21, i64 4352, !dbg !10718
  %22 = load i32, i32* %i, align 4, !dbg !10718
  %mul28 = mul i32 %22, 128, !dbg !10718
  %idx.ext29 = zext i32 %mul28 to i64, !dbg !10718
  %add.ptr30 = getelementptr i8, i8* %add.ptr27, i64 %idx.ext29, !dbg !10718
  %add.ptr31 = getelementptr i8, i8* %add.ptr30, i64 0, !dbg !10718
  call void @writel(i32 %19, i8* %add.ptr31) #7, !dbg !10719
  br label %for.inc, !dbg !10720

for.inc:                                          ; preds = %for.body
  %23 = load i32, i32* %i, align 4, !dbg !10721
  %inc = add i32 %23, 1, !dbg !10721
  store i32 %inc, i32* %i, align 4, !dbg !10721
  br label %for.cond, !dbg !10722, !llvm.loop !10723

for.end:                                          ; preds = %for.cond
  ret i32 0, !dbg !10725
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @xlgmac_config_rsf_mode(%struct.xlgmac_pdata* %pdata, i32 %val) #0 !dbg !10726 {
entry:
  %pdata.addr = alloca %struct.xlgmac_pdata*, align 8
  %val.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %regval = alloca i32, align 4
  %_var = alloca i32, align 4
  %_pos = alloca i32, align 4
  %_len = alloca i32, align 4
  %_val = alloca i32, align 4
  %tmp = alloca i32, align 4
  store %struct.xlgmac_pdata* %pdata, %struct.xlgmac_pdata** %pdata.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xlgmac_pdata** %pdata.addr, metadata !10727, metadata !DIExpression()), !dbg !10728
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !10729, metadata !DIExpression()), !dbg !10730
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10731, metadata !DIExpression()), !dbg !10732
  call void @llvm.dbg.declare(metadata i32* %regval, metadata !10733, metadata !DIExpression()), !dbg !10734
  store i32 0, i32* %i, align 4, !dbg !10735
  br label %for.cond, !dbg !10737

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !10738
  %1 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !10740
  %rx_q_count = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %1, i32 0, i32 16, !dbg !10741
  %2 = load i32, i32* %rx_q_count, align 8, !dbg !10741
  %cmp = icmp ult i32 %0, %2, !dbg !10742
  br i1 %cmp, label %for.body, label %for.end, !dbg !10743

for.body:                                         ; preds = %for.cond
  %3 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !10744
  %mac_regs = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %3, i32 0, i32 6, !dbg !10744
  %4 = load i8*, i8** %mac_regs, align 8, !dbg !10744
  %add.ptr = getelementptr i8, i8* %4, i64 4352, !dbg !10744
  %5 = load i32, i32* %i, align 4, !dbg !10744
  %mul = mul i32 %5, 128, !dbg !10744
  %idx.ext = zext i32 %mul to i64, !dbg !10744
  %add.ptr1 = getelementptr i8, i8* %add.ptr, i64 %idx.ext, !dbg !10744
  %add.ptr2 = getelementptr i8, i8* %add.ptr1, i64 64, !dbg !10744
  %call = call i32 @readl(i8* %add.ptr2) #7, !dbg !10746
  store i32 %call, i32* %regval, align 4, !dbg !10747
  call void @llvm.dbg.declare(metadata i32* %_var, metadata !10748, metadata !DIExpression()), !dbg !10750
  %6 = load i32, i32* %regval, align 4, !dbg !10750
  store i32 %6, i32* %_var, align 4, !dbg !10750
  call void @llvm.dbg.declare(metadata i32* %_pos, metadata !10751, metadata !DIExpression()), !dbg !10750
  store i32 5, i32* %_pos, align 4, !dbg !10750
  call void @llvm.dbg.declare(metadata i32* %_len, metadata !10752, metadata !DIExpression()), !dbg !10750
  store i32 1, i32* %_len, align 4, !dbg !10750
  call void @llvm.dbg.declare(metadata i32* %_val, metadata !10753, metadata !DIExpression()), !dbg !10750
  %7 = load i32, i32* %val.addr, align 4, !dbg !10750
  store i32 %7, i32* %_val, align 4, !dbg !10750
  %8 = load i32, i32* %_val, align 4, !dbg !10750
  %9 = load i32, i32* %_pos, align 4, !dbg !10750
  %shl = shl i32 %8, %9, !dbg !10750
  %conv = zext i32 %shl to i64, !dbg !10750
  %10 = load i32, i32* %_pos, align 4, !dbg !10750
  %sh_prom = zext i32 %10 to i64, !dbg !10750
  %shl3 = shl i64 1, %sh_prom, !dbg !10750
  %sub = sub i64 -1, %shl3, !dbg !10750
  %add = add i64 %sub, 1, !dbg !10750
  %11 = load i32, i32* %_pos, align 4, !dbg !10750
  %12 = load i32, i32* %_len, align 4, !dbg !10750
  %add4 = add i32 %11, %12, !dbg !10750
  %sub5 = sub i32 %add4, 1, !dbg !10750
  %sub6 = sub i32 63, %sub5, !dbg !10750
  %sh_prom7 = zext i32 %sub6 to i64, !dbg !10750
  %shr = lshr i64 -1, %sh_prom7, !dbg !10750
  %and = and i64 %add, %shr, !dbg !10750
  %add8 = add i64 0, %and, !dbg !10750
  %and9 = and i64 %conv, %add8, !dbg !10750
  %conv10 = trunc i64 %and9 to i32, !dbg !10750
  store i32 %conv10, i32* %_val, align 4, !dbg !10750
  %13 = load i32, i32* %_var, align 4, !dbg !10750
  %conv11 = zext i32 %13 to i64, !dbg !10750
  %14 = load i32, i32* %_pos, align 4, !dbg !10750
  %sh_prom12 = zext i32 %14 to i64, !dbg !10750
  %shl13 = shl i64 1, %sh_prom12, !dbg !10750
  %sub14 = sub i64 -1, %shl13, !dbg !10750
  %add15 = add i64 %sub14, 1, !dbg !10750
  %15 = load i32, i32* %_pos, align 4, !dbg !10750
  %16 = load i32, i32* %_len, align 4, !dbg !10750
  %add16 = add i32 %15, %16, !dbg !10750
  %sub17 = sub i32 %add16, 1, !dbg !10750
  %sub18 = sub i32 63, %sub17, !dbg !10750
  %sh_prom19 = zext i32 %sub18 to i64, !dbg !10750
  %shr20 = lshr i64 -1, %sh_prom19, !dbg !10750
  %and21 = and i64 %add15, %shr20, !dbg !10750
  %add22 = add i64 0, %and21, !dbg !10750
  %neg = xor i64 %add22, -1, !dbg !10750
  %and23 = and i64 %conv11, %neg, !dbg !10750
  %17 = load i32, i32* %_val, align 4, !dbg !10750
  %conv24 = zext i32 %17 to i64, !dbg !10750
  %or = or i64 %and23, %conv24, !dbg !10750
  %conv25 = trunc i64 %or to i32, !dbg !10750
  store i32 %conv25, i32* %_var, align 4, !dbg !10750
  store i32 %conv25, i32* %tmp, align 4, !dbg !10750
  %18 = load i32, i32* %tmp, align 4, !dbg !10750
  store i32 %18, i32* %regval, align 4, !dbg !10754
  %19 = load i32, i32* %regval, align 4, !dbg !10755
  %20 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !10756
  %mac_regs26 = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %20, i32 0, i32 6, !dbg !10756
  %21 = load i8*, i8** %mac_regs26, align 8, !dbg !10756
  %add.ptr27 = getelementptr i8, i8* %21, i64 4352, !dbg !10756
  %22 = load i32, i32* %i, align 4, !dbg !10756
  %mul28 = mul i32 %22, 128, !dbg !10756
  %idx.ext29 = zext i32 %mul28 to i64, !dbg !10756
  %add.ptr30 = getelementptr i8, i8* %add.ptr27, i64 %idx.ext29, !dbg !10756
  %add.ptr31 = getelementptr i8, i8* %add.ptr30, i64 64, !dbg !10756
  call void @writel(i32 %19, i8* %add.ptr31) #7, !dbg !10757
  br label %for.inc, !dbg !10758

for.inc:                                          ; preds = %for.body
  %23 = load i32, i32* %i, align 4, !dbg !10759
  %inc = add i32 %23, 1, !dbg !10759
  store i32 %inc, i32* %i, align 4, !dbg !10759
  br label %for.cond, !dbg !10760, !llvm.loop !10761

for.end:                                          ; preds = %for.cond
  ret i32 0, !dbg !10763
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @xlgmac_config_tsf_mode(%struct.xlgmac_pdata* %pdata, i32 %val) #0 !dbg !10764 {
entry:
  %pdata.addr = alloca %struct.xlgmac_pdata*, align 8
  %val.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %regval = alloca i32, align 4
  %_var = alloca i32, align 4
  %_pos = alloca i32, align 4
  %_len = alloca i32, align 4
  %_val = alloca i32, align 4
  %tmp = alloca i32, align 4
  store %struct.xlgmac_pdata* %pdata, %struct.xlgmac_pdata** %pdata.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xlgmac_pdata** %pdata.addr, metadata !10765, metadata !DIExpression()), !dbg !10766
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !10767, metadata !DIExpression()), !dbg !10768
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10769, metadata !DIExpression()), !dbg !10770
  call void @llvm.dbg.declare(metadata i32* %regval, metadata !10771, metadata !DIExpression()), !dbg !10772
  store i32 0, i32* %i, align 4, !dbg !10773
  br label %for.cond, !dbg !10775

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !10776
  %1 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !10778
  %tx_q_count = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %1, i32 0, i32 15, !dbg !10779
  %2 = load i32, i32* %tx_q_count, align 4, !dbg !10779
  %cmp = icmp ult i32 %0, %2, !dbg !10780
  br i1 %cmp, label %for.body, label %for.end, !dbg !10781

for.body:                                         ; preds = %for.cond
  %3 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !10782
  %mac_regs = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %3, i32 0, i32 6, !dbg !10782
  %4 = load i8*, i8** %mac_regs, align 8, !dbg !10782
  %add.ptr = getelementptr i8, i8* %4, i64 4352, !dbg !10782
  %5 = load i32, i32* %i, align 4, !dbg !10782
  %mul = mul i32 %5, 128, !dbg !10782
  %idx.ext = zext i32 %mul to i64, !dbg !10782
  %add.ptr1 = getelementptr i8, i8* %add.ptr, i64 %idx.ext, !dbg !10782
  %add.ptr2 = getelementptr i8, i8* %add.ptr1, i64 0, !dbg !10782
  %call = call i32 @readl(i8* %add.ptr2) #7, !dbg !10784
  store i32 %call, i32* %regval, align 4, !dbg !10785
  call void @llvm.dbg.declare(metadata i32* %_var, metadata !10786, metadata !DIExpression()), !dbg !10788
  %6 = load i32, i32* %regval, align 4, !dbg !10788
  store i32 %6, i32* %_var, align 4, !dbg !10788
  call void @llvm.dbg.declare(metadata i32* %_pos, metadata !10789, metadata !DIExpression()), !dbg !10788
  store i32 1, i32* %_pos, align 4, !dbg !10788
  call void @llvm.dbg.declare(metadata i32* %_len, metadata !10790, metadata !DIExpression()), !dbg !10788
  store i32 1, i32* %_len, align 4, !dbg !10788
  call void @llvm.dbg.declare(metadata i32* %_val, metadata !10791, metadata !DIExpression()), !dbg !10788
  %7 = load i32, i32* %val.addr, align 4, !dbg !10788
  store i32 %7, i32* %_val, align 4, !dbg !10788
  %8 = load i32, i32* %_val, align 4, !dbg !10788
  %9 = load i32, i32* %_pos, align 4, !dbg !10788
  %shl = shl i32 %8, %9, !dbg !10788
  %conv = zext i32 %shl to i64, !dbg !10788
  %10 = load i32, i32* %_pos, align 4, !dbg !10788
  %sh_prom = zext i32 %10 to i64, !dbg !10788
  %shl3 = shl i64 1, %sh_prom, !dbg !10788
  %sub = sub i64 -1, %shl3, !dbg !10788
  %add = add i64 %sub, 1, !dbg !10788
  %11 = load i32, i32* %_pos, align 4, !dbg !10788
  %12 = load i32, i32* %_len, align 4, !dbg !10788
  %add4 = add i32 %11, %12, !dbg !10788
  %sub5 = sub i32 %add4, 1, !dbg !10788
  %sub6 = sub i32 63, %sub5, !dbg !10788
  %sh_prom7 = zext i32 %sub6 to i64, !dbg !10788
  %shr = lshr i64 -1, %sh_prom7, !dbg !10788
  %and = and i64 %add, %shr, !dbg !10788
  %add8 = add i64 0, %and, !dbg !10788
  %and9 = and i64 %conv, %add8, !dbg !10788
  %conv10 = trunc i64 %and9 to i32, !dbg !10788
  store i32 %conv10, i32* %_val, align 4, !dbg !10788
  %13 = load i32, i32* %_var, align 4, !dbg !10788
  %conv11 = zext i32 %13 to i64, !dbg !10788
  %14 = load i32, i32* %_pos, align 4, !dbg !10788
  %sh_prom12 = zext i32 %14 to i64, !dbg !10788
  %shl13 = shl i64 1, %sh_prom12, !dbg !10788
  %sub14 = sub i64 -1, %shl13, !dbg !10788
  %add15 = add i64 %sub14, 1, !dbg !10788
  %15 = load i32, i32* %_pos, align 4, !dbg !10788
  %16 = load i32, i32* %_len, align 4, !dbg !10788
  %add16 = add i32 %15, %16, !dbg !10788
  %sub17 = sub i32 %add16, 1, !dbg !10788
  %sub18 = sub i32 63, %sub17, !dbg !10788
  %sh_prom19 = zext i32 %sub18 to i64, !dbg !10788
  %shr20 = lshr i64 -1, %sh_prom19, !dbg !10788
  %and21 = and i64 %add15, %shr20, !dbg !10788
  %add22 = add i64 0, %and21, !dbg !10788
  %neg = xor i64 %add22, -1, !dbg !10788
  %and23 = and i64 %conv11, %neg, !dbg !10788
  %17 = load i32, i32* %_val, align 4, !dbg !10788
  %conv24 = zext i32 %17 to i64, !dbg !10788
  %or = or i64 %and23, %conv24, !dbg !10788
  %conv25 = trunc i64 %or to i32, !dbg !10788
  store i32 %conv25, i32* %_var, align 4, !dbg !10788
  store i32 %conv25, i32* %tmp, align 4, !dbg !10788
  %18 = load i32, i32* %tmp, align 4, !dbg !10788
  store i32 %18, i32* %regval, align 4, !dbg !10792
  %19 = load i32, i32* %regval, align 4, !dbg !10793
  %20 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !10794
  %mac_regs26 = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %20, i32 0, i32 6, !dbg !10794
  %21 = load i8*, i8** %mac_regs26, align 8, !dbg !10794
  %add.ptr27 = getelementptr i8, i8* %21, i64 4352, !dbg !10794
  %22 = load i32, i32* %i, align 4, !dbg !10794
  %mul28 = mul i32 %22, 128, !dbg !10794
  %idx.ext29 = zext i32 %mul28 to i64, !dbg !10794
  %add.ptr30 = getelementptr i8, i8* %add.ptr27, i64 %idx.ext29, !dbg !10794
  %add.ptr31 = getelementptr i8, i8* %add.ptr30, i64 0, !dbg !10794
  call void @writel(i32 %19, i8* %add.ptr31) #7, !dbg !10795
  br label %for.inc, !dbg !10796

for.inc:                                          ; preds = %for.body
  %23 = load i32, i32* %i, align 4, !dbg !10797
  %inc = add i32 %23, 1, !dbg !10797
  store i32 %inc, i32* %i, align 4, !dbg !10797
  br label %for.cond, !dbg !10798, !llvm.loop !10799

for.end:                                          ; preds = %for.cond
  ret i32 0, !dbg !10801
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @xlgmac_config_osp_mode(%struct.xlgmac_pdata* %pdata) #0 !dbg !10802 {
entry:
  %pdata.addr = alloca %struct.xlgmac_pdata*, align 8
  %channel = alloca %struct.xlgmac_channel*, align 8
  %i = alloca i32, align 4
  %regval = alloca i32, align 4
  %_var = alloca i32, align 4
  %_pos = alloca i32, align 4
  %_len = alloca i32, align 4
  %_val = alloca i32, align 4
  %tmp = alloca i32, align 4
  store %struct.xlgmac_pdata* %pdata, %struct.xlgmac_pdata** %pdata.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xlgmac_pdata** %pdata.addr, metadata !10803, metadata !DIExpression()), !dbg !10804
  call void @llvm.dbg.declare(metadata %struct.xlgmac_channel** %channel, metadata !10805, metadata !DIExpression()), !dbg !10806
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10807, metadata !DIExpression()), !dbg !10808
  call void @llvm.dbg.declare(metadata i32* %regval, metadata !10809, metadata !DIExpression()), !dbg !10810
  %0 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !10811
  %channel_head = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %0, i32 0, i32 9, !dbg !10812
  %1 = load %struct.xlgmac_channel*, %struct.xlgmac_channel** %channel_head, align 8, !dbg !10812
  store %struct.xlgmac_channel* %1, %struct.xlgmac_channel** %channel, align 8, !dbg !10813
  store i32 0, i32* %i, align 4, !dbg !10814
  br label %for.cond, !dbg !10816

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i32, i32* %i, align 4, !dbg !10817
  %3 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !10819
  %channel_count = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %3, i32 0, i32 10, !dbg !10820
  %4 = load i32, i32* %channel_count, align 8, !dbg !10820
  %cmp = icmp ult i32 %2, %4, !dbg !10821
  br i1 %cmp, label %for.body, label %for.end, !dbg !10822

for.body:                                         ; preds = %for.cond
  %5 = load %struct.xlgmac_channel*, %struct.xlgmac_channel** %channel, align 8, !dbg !10823
  %tx_ring = getelementptr inbounds %struct.xlgmac_channel, %struct.xlgmac_channel* %5, i32 0, i32 10, !dbg !10826
  %6 = load %struct.xlgmac_ring*, %struct.xlgmac_ring** %tx_ring, align 16, !dbg !10826
  %tobool = icmp ne %struct.xlgmac_ring* %6, null, !dbg !10823
  br i1 %tobool, label %if.end, label %if.then, !dbg !10827

if.then:                                          ; preds = %for.body
  br label %for.end, !dbg !10828

if.end:                                           ; preds = %for.body
  %7 = load %struct.xlgmac_channel*, %struct.xlgmac_channel** %channel, align 8, !dbg !10829
  %dma_regs = getelementptr inbounds %struct.xlgmac_channel, %struct.xlgmac_channel* %7, i32 0, i32 3, !dbg !10829
  %8 = load i8*, i8** %dma_regs, align 32, !dbg !10829
  %add.ptr = getelementptr i8, i8* %8, i64 4, !dbg !10829
  %call = call i32 @readl(i8* %add.ptr) #7, !dbg !10830
  store i32 %call, i32* %regval, align 4, !dbg !10831
  call void @llvm.dbg.declare(metadata i32* %_var, metadata !10832, metadata !DIExpression()), !dbg !10834
  %9 = load i32, i32* %regval, align 4, !dbg !10834
  store i32 %9, i32* %_var, align 4, !dbg !10834
  call void @llvm.dbg.declare(metadata i32* %_pos, metadata !10835, metadata !DIExpression()), !dbg !10834
  store i32 4, i32* %_pos, align 4, !dbg !10834
  call void @llvm.dbg.declare(metadata i32* %_len, metadata !10836, metadata !DIExpression()), !dbg !10834
  store i32 1, i32* %_len, align 4, !dbg !10834
  call void @llvm.dbg.declare(metadata i32* %_val, metadata !10837, metadata !DIExpression()), !dbg !10834
  %10 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !10834
  %tx_osp_mode = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %10, i32 0, i32 21, !dbg !10834
  %11 = load i32, i32* %tx_osp_mode, align 4, !dbg !10834
  store i32 %11, i32* %_val, align 4, !dbg !10834
  %12 = load i32, i32* %_val, align 4, !dbg !10834
  %13 = load i32, i32* %_pos, align 4, !dbg !10834
  %shl = shl i32 %12, %13, !dbg !10834
  %conv = zext i32 %shl to i64, !dbg !10834
  %14 = load i32, i32* %_pos, align 4, !dbg !10834
  %sh_prom = zext i32 %14 to i64, !dbg !10834
  %shl1 = shl i64 1, %sh_prom, !dbg !10834
  %sub = sub i64 -1, %shl1, !dbg !10834
  %add = add i64 %sub, 1, !dbg !10834
  %15 = load i32, i32* %_pos, align 4, !dbg !10834
  %16 = load i32, i32* %_len, align 4, !dbg !10834
  %add2 = add i32 %15, %16, !dbg !10834
  %sub3 = sub i32 %add2, 1, !dbg !10834
  %sub4 = sub i32 63, %sub3, !dbg !10834
  %sh_prom5 = zext i32 %sub4 to i64, !dbg !10834
  %shr = lshr i64 -1, %sh_prom5, !dbg !10834
  %and = and i64 %add, %shr, !dbg !10834
  %add6 = add i64 0, %and, !dbg !10834
  %and7 = and i64 %conv, %add6, !dbg !10834
  %conv8 = trunc i64 %and7 to i32, !dbg !10834
  store i32 %conv8, i32* %_val, align 4, !dbg !10834
  %17 = load i32, i32* %_var, align 4, !dbg !10834
  %conv9 = zext i32 %17 to i64, !dbg !10834
  %18 = load i32, i32* %_pos, align 4, !dbg !10834
  %sh_prom10 = zext i32 %18 to i64, !dbg !10834
  %shl11 = shl i64 1, %sh_prom10, !dbg !10834
  %sub12 = sub i64 -1, %shl11, !dbg !10834
  %add13 = add i64 %sub12, 1, !dbg !10834
  %19 = load i32, i32* %_pos, align 4, !dbg !10834
  %20 = load i32, i32* %_len, align 4, !dbg !10834
  %add14 = add i32 %19, %20, !dbg !10834
  %sub15 = sub i32 %add14, 1, !dbg !10834
  %sub16 = sub i32 63, %sub15, !dbg !10834
  %sh_prom17 = zext i32 %sub16 to i64, !dbg !10834
  %shr18 = lshr i64 -1, %sh_prom17, !dbg !10834
  %and19 = and i64 %add13, %shr18, !dbg !10834
  %add20 = add i64 0, %and19, !dbg !10834
  %neg = xor i64 %add20, -1, !dbg !10834
  %and21 = and i64 %conv9, %neg, !dbg !10834
  %21 = load i32, i32* %_val, align 4, !dbg !10834
  %conv22 = zext i32 %21 to i64, !dbg !10834
  %or = or i64 %and21, %conv22, !dbg !10834
  %conv23 = trunc i64 %or to i32, !dbg !10834
  store i32 %conv23, i32* %_var, align 4, !dbg !10834
  store i32 %conv23, i32* %tmp, align 4, !dbg !10834
  %22 = load i32, i32* %tmp, align 4, !dbg !10834
  store i32 %22, i32* %regval, align 4, !dbg !10838
  %23 = load i32, i32* %regval, align 4, !dbg !10839
  %24 = load %struct.xlgmac_channel*, %struct.xlgmac_channel** %channel, align 8, !dbg !10840
  %dma_regs24 = getelementptr inbounds %struct.xlgmac_channel, %struct.xlgmac_channel* %24, i32 0, i32 3, !dbg !10840
  %25 = load i8*, i8** %dma_regs24, align 32, !dbg !10840
  %add.ptr25 = getelementptr i8, i8* %25, i64 4, !dbg !10840
  call void @writel(i32 %23, i8* %add.ptr25) #7, !dbg !10841
  br label %for.inc, !dbg !10842

for.inc:                                          ; preds = %if.end
  %26 = load i32, i32* %i, align 4, !dbg !10843
  %inc = add i32 %26, 1, !dbg !10843
  store i32 %inc, i32* %i, align 4, !dbg !10843
  %27 = load %struct.xlgmac_channel*, %struct.xlgmac_channel** %channel, align 8, !dbg !10844
  %incdec.ptr = getelementptr %struct.xlgmac_channel, %struct.xlgmac_channel* %27, i32 1, !dbg !10844
  store %struct.xlgmac_channel* %incdec.ptr, %struct.xlgmac_channel** %channel, align 8, !dbg !10844
  br label %for.cond, !dbg !10845, !llvm.loop !10846

for.end:                                          ; preds = %if.then, %for.cond
  ret i32 0, !dbg !10848
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @xlgmac_config_rx_pbl_val(%struct.xlgmac_pdata* %pdata) #0 !dbg !10849 {
entry:
  %pdata.addr = alloca %struct.xlgmac_pdata*, align 8
  %channel = alloca %struct.xlgmac_channel*, align 8
  %i = alloca i32, align 4
  %regval = alloca i32, align 4
  %_var = alloca i32, align 4
  %_pos = alloca i32, align 4
  %_len = alloca i32, align 4
  %_val = alloca i32, align 4
  %tmp = alloca i32, align 4
  store %struct.xlgmac_pdata* %pdata, %struct.xlgmac_pdata** %pdata.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xlgmac_pdata** %pdata.addr, metadata !10850, metadata !DIExpression()), !dbg !10851
  call void @llvm.dbg.declare(metadata %struct.xlgmac_channel** %channel, metadata !10852, metadata !DIExpression()), !dbg !10853
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10854, metadata !DIExpression()), !dbg !10855
  call void @llvm.dbg.declare(metadata i32* %regval, metadata !10856, metadata !DIExpression()), !dbg !10857
  %0 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !10858
  %channel_head = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %0, i32 0, i32 9, !dbg !10859
  %1 = load %struct.xlgmac_channel*, %struct.xlgmac_channel** %channel_head, align 8, !dbg !10859
  store %struct.xlgmac_channel* %1, %struct.xlgmac_channel** %channel, align 8, !dbg !10860
  store i32 0, i32* %i, align 4, !dbg !10861
  br label %for.cond, !dbg !10863

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i32, i32* %i, align 4, !dbg !10864
  %3 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !10866
  %channel_count = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %3, i32 0, i32 10, !dbg !10867
  %4 = load i32, i32* %channel_count, align 8, !dbg !10867
  %cmp = icmp ult i32 %2, %4, !dbg !10868
  br i1 %cmp, label %for.body, label %for.end, !dbg !10869

for.body:                                         ; preds = %for.cond
  %5 = load %struct.xlgmac_channel*, %struct.xlgmac_channel** %channel, align 8, !dbg !10870
  %rx_ring = getelementptr inbounds %struct.xlgmac_channel, %struct.xlgmac_channel* %5, i32 0, i32 11, !dbg !10873
  %6 = load %struct.xlgmac_ring*, %struct.xlgmac_ring** %rx_ring, align 8, !dbg !10873
  %tobool = icmp ne %struct.xlgmac_ring* %6, null, !dbg !10870
  br i1 %tobool, label %if.end, label %if.then, !dbg !10874

if.then:                                          ; preds = %for.body
  br label %for.end, !dbg !10875

if.end:                                           ; preds = %for.body
  %7 = load %struct.xlgmac_channel*, %struct.xlgmac_channel** %channel, align 8, !dbg !10876
  %dma_regs = getelementptr inbounds %struct.xlgmac_channel, %struct.xlgmac_channel* %7, i32 0, i32 3, !dbg !10876
  %8 = load i8*, i8** %dma_regs, align 32, !dbg !10876
  %add.ptr = getelementptr i8, i8* %8, i64 8, !dbg !10876
  %call = call i32 @readl(i8* %add.ptr) #7, !dbg !10877
  store i32 %call, i32* %regval, align 4, !dbg !10878
  call void @llvm.dbg.declare(metadata i32* %_var, metadata !10879, metadata !DIExpression()), !dbg !10881
  %9 = load i32, i32* %regval, align 4, !dbg !10881
  store i32 %9, i32* %_var, align 4, !dbg !10881
  call void @llvm.dbg.declare(metadata i32* %_pos, metadata !10882, metadata !DIExpression()), !dbg !10881
  store i32 16, i32* %_pos, align 4, !dbg !10881
  call void @llvm.dbg.declare(metadata i32* %_len, metadata !10883, metadata !DIExpression()), !dbg !10881
  store i32 6, i32* %_len, align 4, !dbg !10881
  call void @llvm.dbg.declare(metadata i32* %_val, metadata !10884, metadata !DIExpression()), !dbg !10881
  %10 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !10881
  %rx_pbl = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %10, i32 0, i32 24, !dbg !10881
  %11 = load i32, i32* %rx_pbl, align 8, !dbg !10881
  store i32 %11, i32* %_val, align 4, !dbg !10881
  %12 = load i32, i32* %_val, align 4, !dbg !10881
  %13 = load i32, i32* %_pos, align 4, !dbg !10881
  %shl = shl i32 %12, %13, !dbg !10881
  %conv = zext i32 %shl to i64, !dbg !10881
  %14 = load i32, i32* %_pos, align 4, !dbg !10881
  %sh_prom = zext i32 %14 to i64, !dbg !10881
  %shl1 = shl i64 1, %sh_prom, !dbg !10881
  %sub = sub i64 -1, %shl1, !dbg !10881
  %add = add i64 %sub, 1, !dbg !10881
  %15 = load i32, i32* %_pos, align 4, !dbg !10881
  %16 = load i32, i32* %_len, align 4, !dbg !10881
  %add2 = add i32 %15, %16, !dbg !10881
  %sub3 = sub i32 %add2, 1, !dbg !10881
  %sub4 = sub i32 63, %sub3, !dbg !10881
  %sh_prom5 = zext i32 %sub4 to i64, !dbg !10881
  %shr = lshr i64 -1, %sh_prom5, !dbg !10881
  %and = and i64 %add, %shr, !dbg !10881
  %add6 = add i64 0, %and, !dbg !10881
  %and7 = and i64 %conv, %add6, !dbg !10881
  %conv8 = trunc i64 %and7 to i32, !dbg !10881
  store i32 %conv8, i32* %_val, align 4, !dbg !10881
  %17 = load i32, i32* %_var, align 4, !dbg !10881
  %conv9 = zext i32 %17 to i64, !dbg !10881
  %18 = load i32, i32* %_pos, align 4, !dbg !10881
  %sh_prom10 = zext i32 %18 to i64, !dbg !10881
  %shl11 = shl i64 1, %sh_prom10, !dbg !10881
  %sub12 = sub i64 -1, %shl11, !dbg !10881
  %add13 = add i64 %sub12, 1, !dbg !10881
  %19 = load i32, i32* %_pos, align 4, !dbg !10881
  %20 = load i32, i32* %_len, align 4, !dbg !10881
  %add14 = add i32 %19, %20, !dbg !10881
  %sub15 = sub i32 %add14, 1, !dbg !10881
  %sub16 = sub i32 63, %sub15, !dbg !10881
  %sh_prom17 = zext i32 %sub16 to i64, !dbg !10881
  %shr18 = lshr i64 -1, %sh_prom17, !dbg !10881
  %and19 = and i64 %add13, %shr18, !dbg !10881
  %add20 = add i64 0, %and19, !dbg !10881
  %neg = xor i64 %add20, -1, !dbg !10881
  %and21 = and i64 %conv9, %neg, !dbg !10881
  %21 = load i32, i32* %_val, align 4, !dbg !10881
  %conv22 = zext i32 %21 to i64, !dbg !10881
  %or = or i64 %and21, %conv22, !dbg !10881
  %conv23 = trunc i64 %or to i32, !dbg !10881
  store i32 %conv23, i32* %_var, align 4, !dbg !10881
  store i32 %conv23, i32* %tmp, align 4, !dbg !10881
  %22 = load i32, i32* %tmp, align 4, !dbg !10881
  store i32 %22, i32* %regval, align 4, !dbg !10885
  %23 = load i32, i32* %regval, align 4, !dbg !10886
  %24 = load %struct.xlgmac_channel*, %struct.xlgmac_channel** %channel, align 8, !dbg !10887
  %dma_regs24 = getelementptr inbounds %struct.xlgmac_channel, %struct.xlgmac_channel* %24, i32 0, i32 3, !dbg !10887
  %25 = load i8*, i8** %dma_regs24, align 32, !dbg !10887
  %add.ptr25 = getelementptr i8, i8* %25, i64 8, !dbg !10887
  call void @writel(i32 %23, i8* %add.ptr25) #7, !dbg !10888
  br label %for.inc, !dbg !10889

for.inc:                                          ; preds = %if.end
  %26 = load i32, i32* %i, align 4, !dbg !10890
  %inc = add i32 %26, 1, !dbg !10890
  store i32 %inc, i32* %i, align 4, !dbg !10890
  %27 = load %struct.xlgmac_channel*, %struct.xlgmac_channel** %channel, align 8, !dbg !10891
  %incdec.ptr = getelementptr %struct.xlgmac_channel, %struct.xlgmac_channel* %27, i32 1, !dbg !10891
  store %struct.xlgmac_channel* %incdec.ptr, %struct.xlgmac_channel** %channel, align 8, !dbg !10891
  br label %for.cond, !dbg !10892, !llvm.loop !10893

for.end:                                          ; preds = %if.then, %for.cond
  ret i32 0, !dbg !10895
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @xlgmac_get_rx_pbl_val(%struct.xlgmac_pdata* %pdata) #0 !dbg !10896 {
entry:
  %pdata.addr = alloca %struct.xlgmac_pdata*, align 8
  %regval = alloca i32, align 4
  %_pos = alloca i32, align 4
  %_len = alloca i32, align 4
  %tmp = alloca i64, align 8
  store %struct.xlgmac_pdata* %pdata, %struct.xlgmac_pdata** %pdata.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xlgmac_pdata** %pdata.addr, metadata !10897, metadata !DIExpression()), !dbg !10898
  call void @llvm.dbg.declare(metadata i32* %regval, metadata !10899, metadata !DIExpression()), !dbg !10900
  %0 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !10901
  %channel_head = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %0, i32 0, i32 9, !dbg !10901
  %1 = load %struct.xlgmac_channel*, %struct.xlgmac_channel** %channel_head, align 8, !dbg !10901
  %dma_regs = getelementptr inbounds %struct.xlgmac_channel, %struct.xlgmac_channel* %1, i32 0, i32 3, !dbg !10901
  %2 = load i8*, i8** %dma_regs, align 32, !dbg !10901
  %add.ptr = getelementptr i8, i8* %2, i64 8, !dbg !10901
  %call = call i32 @readl(i8* %add.ptr) #7, !dbg !10902
  store i32 %call, i32* %regval, align 4, !dbg !10903
  call void @llvm.dbg.declare(metadata i32* %_pos, metadata !10904, metadata !DIExpression()), !dbg !10906
  store i32 16, i32* %_pos, align 4, !dbg !10906
  call void @llvm.dbg.declare(metadata i32* %_len, metadata !10907, metadata !DIExpression()), !dbg !10906
  store i32 6, i32* %_len, align 4, !dbg !10906
  %3 = load i32, i32* %regval, align 4, !dbg !10906
  %conv = zext i32 %3 to i64, !dbg !10906
  %4 = load i32, i32* %_pos, align 4, !dbg !10906
  %sh_prom = zext i32 %4 to i64, !dbg !10906
  %shl = shl i64 1, %sh_prom, !dbg !10906
  %sub = sub i64 -1, %shl, !dbg !10906
  %add = add i64 %sub, 1, !dbg !10906
  %5 = load i32, i32* %_pos, align 4, !dbg !10906
  %6 = load i32, i32* %_len, align 4, !dbg !10906
  %add1 = add i32 %5, %6, !dbg !10906
  %sub2 = sub i32 %add1, 1, !dbg !10906
  %sub3 = sub i32 63, %sub2, !dbg !10906
  %sh_prom4 = zext i32 %sub3 to i64, !dbg !10906
  %shr = lshr i64 -1, %sh_prom4, !dbg !10906
  %and = and i64 %add, %shr, !dbg !10906
  %add5 = add i64 0, %and, !dbg !10906
  %and6 = and i64 %conv, %add5, !dbg !10906
  %7 = load i32, i32* %_pos, align 4, !dbg !10906
  %sh_prom7 = zext i32 %7 to i64, !dbg !10906
  %shr8 = lshr i64 %and6, %sh_prom7, !dbg !10906
  store i64 %shr8, i64* %tmp, align 8, !dbg !10906
  %8 = load i64, i64* %tmp, align 8, !dbg !10906
  %conv9 = trunc i64 %8 to i32, !dbg !10908
  store i32 %conv9, i32* %regval, align 4, !dbg !10909
  %9 = load i32, i32* %regval, align 4, !dbg !10910
  ret i32 %9, !dbg !10911
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @xlgmac_config_tx_pbl_val(%struct.xlgmac_pdata* %pdata) #0 !dbg !10912 {
entry:
  %pdata.addr = alloca %struct.xlgmac_pdata*, align 8
  %channel = alloca %struct.xlgmac_channel*, align 8
  %i = alloca i32, align 4
  %regval = alloca i32, align 4
  %_var = alloca i32, align 4
  %_pos = alloca i32, align 4
  %_len = alloca i32, align 4
  %_val = alloca i32, align 4
  %tmp = alloca i32, align 4
  store %struct.xlgmac_pdata* %pdata, %struct.xlgmac_pdata** %pdata.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xlgmac_pdata** %pdata.addr, metadata !10913, metadata !DIExpression()), !dbg !10914
  call void @llvm.dbg.declare(metadata %struct.xlgmac_channel** %channel, metadata !10915, metadata !DIExpression()), !dbg !10916
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10917, metadata !DIExpression()), !dbg !10918
  call void @llvm.dbg.declare(metadata i32* %regval, metadata !10919, metadata !DIExpression()), !dbg !10920
  %0 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !10921
  %channel_head = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %0, i32 0, i32 9, !dbg !10922
  %1 = load %struct.xlgmac_channel*, %struct.xlgmac_channel** %channel_head, align 8, !dbg !10922
  store %struct.xlgmac_channel* %1, %struct.xlgmac_channel** %channel, align 8, !dbg !10923
  store i32 0, i32* %i, align 4, !dbg !10924
  br label %for.cond, !dbg !10926

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i32, i32* %i, align 4, !dbg !10927
  %3 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !10929
  %channel_count = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %3, i32 0, i32 10, !dbg !10930
  %4 = load i32, i32* %channel_count, align 8, !dbg !10930
  %cmp = icmp ult i32 %2, %4, !dbg !10931
  br i1 %cmp, label %for.body, label %for.end, !dbg !10932

for.body:                                         ; preds = %for.cond
  %5 = load %struct.xlgmac_channel*, %struct.xlgmac_channel** %channel, align 8, !dbg !10933
  %tx_ring = getelementptr inbounds %struct.xlgmac_channel, %struct.xlgmac_channel* %5, i32 0, i32 10, !dbg !10936
  %6 = load %struct.xlgmac_ring*, %struct.xlgmac_ring** %tx_ring, align 16, !dbg !10936
  %tobool = icmp ne %struct.xlgmac_ring* %6, null, !dbg !10933
  br i1 %tobool, label %if.end, label %if.then, !dbg !10937

if.then:                                          ; preds = %for.body
  br label %for.end, !dbg !10938

if.end:                                           ; preds = %for.body
  %7 = load %struct.xlgmac_channel*, %struct.xlgmac_channel** %channel, align 8, !dbg !10939
  %dma_regs = getelementptr inbounds %struct.xlgmac_channel, %struct.xlgmac_channel* %7, i32 0, i32 3, !dbg !10939
  %8 = load i8*, i8** %dma_regs, align 32, !dbg !10939
  %add.ptr = getelementptr i8, i8* %8, i64 4, !dbg !10939
  %call = call i32 @readl(i8* %add.ptr) #7, !dbg !10940
  store i32 %call, i32* %regval, align 4, !dbg !10941
  call void @llvm.dbg.declare(metadata i32* %_var, metadata !10942, metadata !DIExpression()), !dbg !10944
  %9 = load i32, i32* %regval, align 4, !dbg !10944
  store i32 %9, i32* %_var, align 4, !dbg !10944
  call void @llvm.dbg.declare(metadata i32* %_pos, metadata !10945, metadata !DIExpression()), !dbg !10944
  store i32 16, i32* %_pos, align 4, !dbg !10944
  call void @llvm.dbg.declare(metadata i32* %_len, metadata !10946, metadata !DIExpression()), !dbg !10944
  store i32 6, i32* %_len, align 4, !dbg !10944
  call void @llvm.dbg.declare(metadata i32* %_val, metadata !10947, metadata !DIExpression()), !dbg !10944
  %10 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !10944
  %tx_pbl = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %10, i32 0, i32 20, !dbg !10944
  %11 = load i32, i32* %tx_pbl, align 8, !dbg !10944
  store i32 %11, i32* %_val, align 4, !dbg !10944
  %12 = load i32, i32* %_val, align 4, !dbg !10944
  %13 = load i32, i32* %_pos, align 4, !dbg !10944
  %shl = shl i32 %12, %13, !dbg !10944
  %conv = zext i32 %shl to i64, !dbg !10944
  %14 = load i32, i32* %_pos, align 4, !dbg !10944
  %sh_prom = zext i32 %14 to i64, !dbg !10944
  %shl1 = shl i64 1, %sh_prom, !dbg !10944
  %sub = sub i64 -1, %shl1, !dbg !10944
  %add = add i64 %sub, 1, !dbg !10944
  %15 = load i32, i32* %_pos, align 4, !dbg !10944
  %16 = load i32, i32* %_len, align 4, !dbg !10944
  %add2 = add i32 %15, %16, !dbg !10944
  %sub3 = sub i32 %add2, 1, !dbg !10944
  %sub4 = sub i32 63, %sub3, !dbg !10944
  %sh_prom5 = zext i32 %sub4 to i64, !dbg !10944
  %shr = lshr i64 -1, %sh_prom5, !dbg !10944
  %and = and i64 %add, %shr, !dbg !10944
  %add6 = add i64 0, %and, !dbg !10944
  %and7 = and i64 %conv, %add6, !dbg !10944
  %conv8 = trunc i64 %and7 to i32, !dbg !10944
  store i32 %conv8, i32* %_val, align 4, !dbg !10944
  %17 = load i32, i32* %_var, align 4, !dbg !10944
  %conv9 = zext i32 %17 to i64, !dbg !10944
  %18 = load i32, i32* %_pos, align 4, !dbg !10944
  %sh_prom10 = zext i32 %18 to i64, !dbg !10944
  %shl11 = shl i64 1, %sh_prom10, !dbg !10944
  %sub12 = sub i64 -1, %shl11, !dbg !10944
  %add13 = add i64 %sub12, 1, !dbg !10944
  %19 = load i32, i32* %_pos, align 4, !dbg !10944
  %20 = load i32, i32* %_len, align 4, !dbg !10944
  %add14 = add i32 %19, %20, !dbg !10944
  %sub15 = sub i32 %add14, 1, !dbg !10944
  %sub16 = sub i32 63, %sub15, !dbg !10944
  %sh_prom17 = zext i32 %sub16 to i64, !dbg !10944
  %shr18 = lshr i64 -1, %sh_prom17, !dbg !10944
  %and19 = and i64 %add13, %shr18, !dbg !10944
  %add20 = add i64 0, %and19, !dbg !10944
  %neg = xor i64 %add20, -1, !dbg !10944
  %and21 = and i64 %conv9, %neg, !dbg !10944
  %21 = load i32, i32* %_val, align 4, !dbg !10944
  %conv22 = zext i32 %21 to i64, !dbg !10944
  %or = or i64 %and21, %conv22, !dbg !10944
  %conv23 = trunc i64 %or to i32, !dbg !10944
  store i32 %conv23, i32* %_var, align 4, !dbg !10944
  store i32 %conv23, i32* %tmp, align 4, !dbg !10944
  %22 = load i32, i32* %tmp, align 4, !dbg !10944
  store i32 %22, i32* %regval, align 4, !dbg !10948
  %23 = load i32, i32* %regval, align 4, !dbg !10949
  %24 = load %struct.xlgmac_channel*, %struct.xlgmac_channel** %channel, align 8, !dbg !10950
  %dma_regs24 = getelementptr inbounds %struct.xlgmac_channel, %struct.xlgmac_channel* %24, i32 0, i32 3, !dbg !10950
  %25 = load i8*, i8** %dma_regs24, align 32, !dbg !10950
  %add.ptr25 = getelementptr i8, i8* %25, i64 4, !dbg !10950
  call void @writel(i32 %23, i8* %add.ptr25) #7, !dbg !10951
  br label %for.inc, !dbg !10952

for.inc:                                          ; preds = %if.end
  %26 = load i32, i32* %i, align 4, !dbg !10953
  %inc = add i32 %26, 1, !dbg !10953
  store i32 %inc, i32* %i, align 4, !dbg !10953
  %27 = load %struct.xlgmac_channel*, %struct.xlgmac_channel** %channel, align 8, !dbg !10954
  %incdec.ptr = getelementptr %struct.xlgmac_channel, %struct.xlgmac_channel* %27, i32 1, !dbg !10954
  store %struct.xlgmac_channel* %incdec.ptr, %struct.xlgmac_channel** %channel, align 8, !dbg !10954
  br label %for.cond, !dbg !10955, !llvm.loop !10956

for.end:                                          ; preds = %if.then, %for.cond
  ret i32 0, !dbg !10958
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @xlgmac_get_tx_pbl_val(%struct.xlgmac_pdata* %pdata) #0 !dbg !10959 {
entry:
  %pdata.addr = alloca %struct.xlgmac_pdata*, align 8
  %regval = alloca i32, align 4
  %_pos = alloca i32, align 4
  %_len = alloca i32, align 4
  %tmp = alloca i64, align 8
  store %struct.xlgmac_pdata* %pdata, %struct.xlgmac_pdata** %pdata.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xlgmac_pdata** %pdata.addr, metadata !10960, metadata !DIExpression()), !dbg !10961
  call void @llvm.dbg.declare(metadata i32* %regval, metadata !10962, metadata !DIExpression()), !dbg !10963
  %0 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !10964
  %channel_head = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %0, i32 0, i32 9, !dbg !10964
  %1 = load %struct.xlgmac_channel*, %struct.xlgmac_channel** %channel_head, align 8, !dbg !10964
  %dma_regs = getelementptr inbounds %struct.xlgmac_channel, %struct.xlgmac_channel* %1, i32 0, i32 3, !dbg !10964
  %2 = load i8*, i8** %dma_regs, align 32, !dbg !10964
  %add.ptr = getelementptr i8, i8* %2, i64 4, !dbg !10964
  %call = call i32 @readl(i8* %add.ptr) #7, !dbg !10965
  store i32 %call, i32* %regval, align 4, !dbg !10966
  call void @llvm.dbg.declare(metadata i32* %_pos, metadata !10967, metadata !DIExpression()), !dbg !10969
  store i32 16, i32* %_pos, align 4, !dbg !10969
  call void @llvm.dbg.declare(metadata i32* %_len, metadata !10970, metadata !DIExpression()), !dbg !10969
  store i32 6, i32* %_len, align 4, !dbg !10969
  %3 = load i32, i32* %regval, align 4, !dbg !10969
  %conv = zext i32 %3 to i64, !dbg !10969
  %4 = load i32, i32* %_pos, align 4, !dbg !10969
  %sh_prom = zext i32 %4 to i64, !dbg !10969
  %shl = shl i64 1, %sh_prom, !dbg !10969
  %sub = sub i64 -1, %shl, !dbg !10969
  %add = add i64 %sub, 1, !dbg !10969
  %5 = load i32, i32* %_pos, align 4, !dbg !10969
  %6 = load i32, i32* %_len, align 4, !dbg !10969
  %add1 = add i32 %5, %6, !dbg !10969
  %sub2 = sub i32 %add1, 1, !dbg !10969
  %sub3 = sub i32 63, %sub2, !dbg !10969
  %sh_prom4 = zext i32 %sub3 to i64, !dbg !10969
  %shr = lshr i64 -1, %sh_prom4, !dbg !10969
  %and = and i64 %add, %shr, !dbg !10969
  %add5 = add i64 0, %and, !dbg !10969
  %and6 = and i64 %conv, %add5, !dbg !10969
  %7 = load i32, i32* %_pos, align 4, !dbg !10969
  %sh_prom7 = zext i32 %7 to i64, !dbg !10969
  %shr8 = lshr i64 %and6, %sh_prom7, !dbg !10969
  store i64 %shr8, i64* %tmp, align 8, !dbg !10969
  %8 = load i64, i64* %tmp, align 8, !dbg !10969
  %conv9 = trunc i64 %8 to i32, !dbg !10971
  store i32 %conv9, i32* %regval, align 4, !dbg !10972
  %9 = load i32, i32* %regval, align 4, !dbg !10973
  ret i32 %9, !dbg !10974
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @xlgmac_config_pblx8(%struct.xlgmac_pdata* %pdata) #0 !dbg !10975 {
entry:
  %pdata.addr = alloca %struct.xlgmac_pdata*, align 8
  %channel = alloca %struct.xlgmac_channel*, align 8
  %i = alloca i32, align 4
  %regval = alloca i32, align 4
  %_var = alloca i32, align 4
  %_pos = alloca i32, align 4
  %_len = alloca i32, align 4
  %_val = alloca i32, align 4
  %tmp = alloca i32, align 4
  store %struct.xlgmac_pdata* %pdata, %struct.xlgmac_pdata** %pdata.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xlgmac_pdata** %pdata.addr, metadata !10976, metadata !DIExpression()), !dbg !10977
  call void @llvm.dbg.declare(metadata %struct.xlgmac_channel** %channel, metadata !10978, metadata !DIExpression()), !dbg !10979
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10980, metadata !DIExpression()), !dbg !10981
  call void @llvm.dbg.declare(metadata i32* %regval, metadata !10982, metadata !DIExpression()), !dbg !10983
  %0 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !10984
  %channel_head = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %0, i32 0, i32 9, !dbg !10985
  %1 = load %struct.xlgmac_channel*, %struct.xlgmac_channel** %channel_head, align 8, !dbg !10985
  store %struct.xlgmac_channel* %1, %struct.xlgmac_channel** %channel, align 8, !dbg !10986
  store i32 0, i32* %i, align 4, !dbg !10987
  br label %for.cond, !dbg !10989

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i32, i32* %i, align 4, !dbg !10990
  %3 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !10992
  %channel_count = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %3, i32 0, i32 10, !dbg !10993
  %4 = load i32, i32* %channel_count, align 8, !dbg !10993
  %cmp = icmp ult i32 %2, %4, !dbg !10994
  br i1 %cmp, label %for.body, label %for.end, !dbg !10995

for.body:                                         ; preds = %for.cond
  %5 = load %struct.xlgmac_channel*, %struct.xlgmac_channel** %channel, align 8, !dbg !10996
  %dma_regs = getelementptr inbounds %struct.xlgmac_channel, %struct.xlgmac_channel* %5, i32 0, i32 3, !dbg !10996
  %6 = load i8*, i8** %dma_regs, align 32, !dbg !10996
  %add.ptr = getelementptr i8, i8* %6, i64 0, !dbg !10996
  %call = call i32 @readl(i8* %add.ptr) #7, !dbg !10998
  store i32 %call, i32* %regval, align 4, !dbg !10999
  call void @llvm.dbg.declare(metadata i32* %_var, metadata !11000, metadata !DIExpression()), !dbg !11002
  %7 = load i32, i32* %regval, align 4, !dbg !11002
  store i32 %7, i32* %_var, align 4, !dbg !11002
  call void @llvm.dbg.declare(metadata i32* %_pos, metadata !11003, metadata !DIExpression()), !dbg !11002
  store i32 16, i32* %_pos, align 4, !dbg !11002
  call void @llvm.dbg.declare(metadata i32* %_len, metadata !11004, metadata !DIExpression()), !dbg !11002
  store i32 1, i32* %_len, align 4, !dbg !11002
  call void @llvm.dbg.declare(metadata i32* %_val, metadata !11005, metadata !DIExpression()), !dbg !11002
  %8 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !11002
  %pblx8 = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %8, i32 0, i32 17, !dbg !11002
  %9 = load i32, i32* %pblx8, align 4, !dbg !11002
  store i32 %9, i32* %_val, align 4, !dbg !11002
  %10 = load i32, i32* %_val, align 4, !dbg !11002
  %11 = load i32, i32* %_pos, align 4, !dbg !11002
  %shl = shl i32 %10, %11, !dbg !11002
  %conv = zext i32 %shl to i64, !dbg !11002
  %12 = load i32, i32* %_pos, align 4, !dbg !11002
  %sh_prom = zext i32 %12 to i64, !dbg !11002
  %shl1 = shl i64 1, %sh_prom, !dbg !11002
  %sub = sub i64 -1, %shl1, !dbg !11002
  %add = add i64 %sub, 1, !dbg !11002
  %13 = load i32, i32* %_pos, align 4, !dbg !11002
  %14 = load i32, i32* %_len, align 4, !dbg !11002
  %add2 = add i32 %13, %14, !dbg !11002
  %sub3 = sub i32 %add2, 1, !dbg !11002
  %sub4 = sub i32 63, %sub3, !dbg !11002
  %sh_prom5 = zext i32 %sub4 to i64, !dbg !11002
  %shr = lshr i64 -1, %sh_prom5, !dbg !11002
  %and = and i64 %add, %shr, !dbg !11002
  %add6 = add i64 0, %and, !dbg !11002
  %and7 = and i64 %conv, %add6, !dbg !11002
  %conv8 = trunc i64 %and7 to i32, !dbg !11002
  store i32 %conv8, i32* %_val, align 4, !dbg !11002
  %15 = load i32, i32* %_var, align 4, !dbg !11002
  %conv9 = zext i32 %15 to i64, !dbg !11002
  %16 = load i32, i32* %_pos, align 4, !dbg !11002
  %sh_prom10 = zext i32 %16 to i64, !dbg !11002
  %shl11 = shl i64 1, %sh_prom10, !dbg !11002
  %sub12 = sub i64 -1, %shl11, !dbg !11002
  %add13 = add i64 %sub12, 1, !dbg !11002
  %17 = load i32, i32* %_pos, align 4, !dbg !11002
  %18 = load i32, i32* %_len, align 4, !dbg !11002
  %add14 = add i32 %17, %18, !dbg !11002
  %sub15 = sub i32 %add14, 1, !dbg !11002
  %sub16 = sub i32 63, %sub15, !dbg !11002
  %sh_prom17 = zext i32 %sub16 to i64, !dbg !11002
  %shr18 = lshr i64 -1, %sh_prom17, !dbg !11002
  %and19 = and i64 %add13, %shr18, !dbg !11002
  %add20 = add i64 0, %and19, !dbg !11002
  %neg = xor i64 %add20, -1, !dbg !11002
  %and21 = and i64 %conv9, %neg, !dbg !11002
  %19 = load i32, i32* %_val, align 4, !dbg !11002
  %conv22 = zext i32 %19 to i64, !dbg !11002
  %or = or i64 %and21, %conv22, !dbg !11002
  %conv23 = trunc i64 %or to i32, !dbg !11002
  store i32 %conv23, i32* %_var, align 4, !dbg !11002
  store i32 %conv23, i32* %tmp, align 4, !dbg !11002
  %20 = load i32, i32* %tmp, align 4, !dbg !11002
  store i32 %20, i32* %regval, align 4, !dbg !11006
  %21 = load i32, i32* %regval, align 4, !dbg !11007
  %22 = load %struct.xlgmac_channel*, %struct.xlgmac_channel** %channel, align 8, !dbg !11008
  %dma_regs24 = getelementptr inbounds %struct.xlgmac_channel, %struct.xlgmac_channel* %22, i32 0, i32 3, !dbg !11008
  %23 = load i8*, i8** %dma_regs24, align 32, !dbg !11008
  %add.ptr25 = getelementptr i8, i8* %23, i64 0, !dbg !11008
  call void @writel(i32 %21, i8* %add.ptr25) #7, !dbg !11009
  br label %for.inc, !dbg !11010

for.inc:                                          ; preds = %for.body
  %24 = load i32, i32* %i, align 4, !dbg !11011
  %inc = add i32 %24, 1, !dbg !11011
  store i32 %inc, i32* %i, align 4, !dbg !11011
  %25 = load %struct.xlgmac_channel*, %struct.xlgmac_channel** %channel, align 8, !dbg !11012
  %incdec.ptr = getelementptr %struct.xlgmac_channel, %struct.xlgmac_channel* %25, i32 1, !dbg !11012
  store %struct.xlgmac_channel* %incdec.ptr, %struct.xlgmac_channel** %channel, align 8, !dbg !11012
  br label %for.cond, !dbg !11013, !llvm.loop !11014

for.end:                                          ; preds = %for.cond
  ret i32 0, !dbg !11016
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @xlgmac_tx_mmc_int(%struct.xlgmac_pdata* %pdata) #0 !dbg !11017 {
entry:
  %pdata.addr = alloca %struct.xlgmac_pdata*, align 8
  %mmc_isr = alloca i32, align 4
  %stats = alloca %struct.xlgmac_stats*, align 8
  %_pos = alloca i32, align 4
  %_len = alloca i32, align 4
  %tmp = alloca i64, align 8
  %_pos12 = alloca i32, align 4
  %_len13 = alloca i32, align 4
  %tmp14 = alloca i64, align 8
  %_pos35 = alloca i32, align 4
  %_len36 = alloca i32, align 4
  %tmp37 = alloca i64, align 8
  %_pos58 = alloca i32, align 4
  %_len59 = alloca i32, align 4
  %tmp60 = alloca i64, align 8
  %_pos81 = alloca i32, align 4
  %_len82 = alloca i32, align 4
  %tmp83 = alloca i64, align 8
  %_pos104 = alloca i32, align 4
  %_len105 = alloca i32, align 4
  %tmp106 = alloca i64, align 8
  %_pos127 = alloca i32, align 4
  %_len128 = alloca i32, align 4
  %tmp129 = alloca i64, align 8
  %_pos150 = alloca i32, align 4
  %_len151 = alloca i32, align 4
  %tmp152 = alloca i64, align 8
  %_pos173 = alloca i32, align 4
  %_len174 = alloca i32, align 4
  %tmp175 = alloca i64, align 8
  %_pos196 = alloca i32, align 4
  %_len197 = alloca i32, align 4
  %tmp198 = alloca i64, align 8
  %_pos219 = alloca i32, align 4
  %_len220 = alloca i32, align 4
  %tmp221 = alloca i64, align 8
  %_pos242 = alloca i32, align 4
  %_len243 = alloca i32, align 4
  %tmp244 = alloca i64, align 8
  %_pos265 = alloca i32, align 4
  %_len266 = alloca i32, align 4
  %tmp267 = alloca i64, align 8
  %_pos289 = alloca i32, align 4
  %_len290 = alloca i32, align 4
  %tmp291 = alloca i64, align 8
  %_pos312 = alloca i32, align 4
  %_len313 = alloca i32, align 4
  %tmp314 = alloca i64, align 8
  %_pos335 = alloca i32, align 4
  %_len336 = alloca i32, align 4
  %tmp337 = alloca i64, align 8
  %_pos358 = alloca i32, align 4
  %_len359 = alloca i32, align 4
  %tmp360 = alloca i64, align 8
  %_pos381 = alloca i32, align 4
  %_len382 = alloca i32, align 4
  %tmp383 = alloca i64, align 8
  store %struct.xlgmac_pdata* %pdata, %struct.xlgmac_pdata** %pdata.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xlgmac_pdata** %pdata.addr, metadata !11018, metadata !DIExpression()), !dbg !11019
  call void @llvm.dbg.declare(metadata i32* %mmc_isr, metadata !11020, metadata !DIExpression()), !dbg !11021
  %0 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !11022
  %mac_regs = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %0, i32 0, i32 6, !dbg !11023
  %1 = load i8*, i8** %mac_regs, align 8, !dbg !11023
  %add.ptr = getelementptr i8, i8* %1, i64 2056, !dbg !11024
  %call = call i32 @readl(i8* %add.ptr) #7, !dbg !11025
  store i32 %call, i32* %mmc_isr, align 4, !dbg !11021
  call void @llvm.dbg.declare(metadata %struct.xlgmac_stats** %stats, metadata !11026, metadata !DIExpression()), !dbg !11028
  %2 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !11029
  %stats1 = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %2, i32 0, i32 4, !dbg !11030
  store %struct.xlgmac_stats* %stats1, %struct.xlgmac_stats** %stats, align 8, !dbg !11028
  call void @llvm.dbg.declare(metadata i32* %_pos, metadata !11031, metadata !DIExpression()), !dbg !11034
  store i32 0, i32* %_pos, align 4, !dbg !11034
  call void @llvm.dbg.declare(metadata i32* %_len, metadata !11035, metadata !DIExpression()), !dbg !11034
  store i32 1, i32* %_len, align 4, !dbg !11034
  %3 = load i32, i32* %mmc_isr, align 4, !dbg !11034
  %conv = zext i32 %3 to i64, !dbg !11034
  %4 = load i32, i32* %_pos, align 4, !dbg !11034
  %sh_prom = zext i32 %4 to i64, !dbg !11034
  %shl = shl i64 1, %sh_prom, !dbg !11034
  %sub = sub i64 -1, %shl, !dbg !11034
  %add = add i64 %sub, 1, !dbg !11034
  %5 = load i32, i32* %_pos, align 4, !dbg !11034
  %6 = load i32, i32* %_len, align 4, !dbg !11034
  %add2 = add i32 %5, %6, !dbg !11034
  %sub3 = sub i32 %add2, 1, !dbg !11034
  %sub4 = sub i32 63, %sub3, !dbg !11034
  %sh_prom5 = zext i32 %sub4 to i64, !dbg !11034
  %shr = lshr i64 -1, %sh_prom5, !dbg !11034
  %and = and i64 %add, %shr, !dbg !11034
  %add6 = add i64 0, %and, !dbg !11034
  %and7 = and i64 %conv, %add6, !dbg !11034
  %7 = load i32, i32* %_pos, align 4, !dbg !11034
  %sh_prom8 = zext i32 %7 to i64, !dbg !11034
  %shr9 = lshr i64 %and7, %sh_prom8, !dbg !11034
  store i64 %shr9, i64* %tmp, align 8, !dbg !11034
  %8 = load i64, i64* %tmp, align 8, !dbg !11034
  %tobool = icmp ne i64 %8, 0, !dbg !11036
  br i1 %tobool, label %if.then, label %if.end, !dbg !11037

if.then:                                          ; preds = %entry
  %9 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !11038
  %call10 = call i64 @xlgmac_mmc_read(%struct.xlgmac_pdata* %9, i32 2068) #7, !dbg !11039
  %10 = load %struct.xlgmac_stats*, %struct.xlgmac_stats** %stats, align 8, !dbg !11040
  %txoctetcount_gb = getelementptr inbounds %struct.xlgmac_stats, %struct.xlgmac_stats* %10, i32 0, i32 0, !dbg !11041
  %11 = load i64, i64* %txoctetcount_gb, align 8, !dbg !11042
  %add11 = add i64 %11, %call10, !dbg !11042
  store i64 %add11, i64* %txoctetcount_gb, align 8, !dbg !11042
  br label %if.end, !dbg !11040

if.end:                                           ; preds = %if.then, %entry
  call void @llvm.dbg.declare(metadata i32* %_pos12, metadata !11043, metadata !DIExpression()), !dbg !11046
  store i32 1, i32* %_pos12, align 4, !dbg !11046
  call void @llvm.dbg.declare(metadata i32* %_len13, metadata !11047, metadata !DIExpression()), !dbg !11046
  store i32 1, i32* %_len13, align 4, !dbg !11046
  %12 = load i32, i32* %mmc_isr, align 4, !dbg !11046
  %conv15 = zext i32 %12 to i64, !dbg !11046
  %13 = load i32, i32* %_pos12, align 4, !dbg !11046
  %sh_prom16 = zext i32 %13 to i64, !dbg !11046
  %shl17 = shl i64 1, %sh_prom16, !dbg !11046
  %sub18 = sub i64 -1, %shl17, !dbg !11046
  %add19 = add i64 %sub18, 1, !dbg !11046
  %14 = load i32, i32* %_pos12, align 4, !dbg !11046
  %15 = load i32, i32* %_len13, align 4, !dbg !11046
  %add20 = add i32 %14, %15, !dbg !11046
  %sub21 = sub i32 %add20, 1, !dbg !11046
  %sub22 = sub i32 63, %sub21, !dbg !11046
  %sh_prom23 = zext i32 %sub22 to i64, !dbg !11046
  %shr24 = lshr i64 -1, %sh_prom23, !dbg !11046
  %and25 = and i64 %add19, %shr24, !dbg !11046
  %add26 = add i64 0, %and25, !dbg !11046
  %and27 = and i64 %conv15, %add26, !dbg !11046
  %16 = load i32, i32* %_pos12, align 4, !dbg !11046
  %sh_prom28 = zext i32 %16 to i64, !dbg !11046
  %shr29 = lshr i64 %and27, %sh_prom28, !dbg !11046
  store i64 %shr29, i64* %tmp14, align 8, !dbg !11046
  %17 = load i64, i64* %tmp14, align 8, !dbg !11046
  %tobool30 = icmp ne i64 %17, 0, !dbg !11048
  br i1 %tobool30, label %if.then31, label %if.end34, !dbg !11049

if.then31:                                        ; preds = %if.end
  %18 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !11050
  %call32 = call i64 @xlgmac_mmc_read(%struct.xlgmac_pdata* %18, i32 2076) #7, !dbg !11051
  %19 = load %struct.xlgmac_stats*, %struct.xlgmac_stats** %stats, align 8, !dbg !11052
  %txframecount_gb = getelementptr inbounds %struct.xlgmac_stats, %struct.xlgmac_stats* %19, i32 0, i32 1, !dbg !11053
  %20 = load i64, i64* %txframecount_gb, align 8, !dbg !11054
  %add33 = add i64 %20, %call32, !dbg !11054
  store i64 %add33, i64* %txframecount_gb, align 8, !dbg !11054
  br label %if.end34, !dbg !11052

if.end34:                                         ; preds = %if.then31, %if.end
  call void @llvm.dbg.declare(metadata i32* %_pos35, metadata !11055, metadata !DIExpression()), !dbg !11058
  store i32 2, i32* %_pos35, align 4, !dbg !11058
  call void @llvm.dbg.declare(metadata i32* %_len36, metadata !11059, metadata !DIExpression()), !dbg !11058
  store i32 1, i32* %_len36, align 4, !dbg !11058
  %21 = load i32, i32* %mmc_isr, align 4, !dbg !11058
  %conv38 = zext i32 %21 to i64, !dbg !11058
  %22 = load i32, i32* %_pos35, align 4, !dbg !11058
  %sh_prom39 = zext i32 %22 to i64, !dbg !11058
  %shl40 = shl i64 1, %sh_prom39, !dbg !11058
  %sub41 = sub i64 -1, %shl40, !dbg !11058
  %add42 = add i64 %sub41, 1, !dbg !11058
  %23 = load i32, i32* %_pos35, align 4, !dbg !11058
  %24 = load i32, i32* %_len36, align 4, !dbg !11058
  %add43 = add i32 %23, %24, !dbg !11058
  %sub44 = sub i32 %add43, 1, !dbg !11058
  %sub45 = sub i32 63, %sub44, !dbg !11058
  %sh_prom46 = zext i32 %sub45 to i64, !dbg !11058
  %shr47 = lshr i64 -1, %sh_prom46, !dbg !11058
  %and48 = and i64 %add42, %shr47, !dbg !11058
  %add49 = add i64 0, %and48, !dbg !11058
  %and50 = and i64 %conv38, %add49, !dbg !11058
  %25 = load i32, i32* %_pos35, align 4, !dbg !11058
  %sh_prom51 = zext i32 %25 to i64, !dbg !11058
  %shr52 = lshr i64 %and50, %sh_prom51, !dbg !11058
  store i64 %shr52, i64* %tmp37, align 8, !dbg !11058
  %26 = load i64, i64* %tmp37, align 8, !dbg !11058
  %tobool53 = icmp ne i64 %26, 0, !dbg !11060
  br i1 %tobool53, label %if.then54, label %if.end57, !dbg !11061

if.then54:                                        ; preds = %if.end34
  %27 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !11062
  %call55 = call i64 @xlgmac_mmc_read(%struct.xlgmac_pdata* %27, i32 2084) #7, !dbg !11063
  %28 = load %struct.xlgmac_stats*, %struct.xlgmac_stats** %stats, align 8, !dbg !11064
  %txbroadcastframes_g = getelementptr inbounds %struct.xlgmac_stats, %struct.xlgmac_stats* %28, i32 0, i32 2, !dbg !11065
  %29 = load i64, i64* %txbroadcastframes_g, align 8, !dbg !11066
  %add56 = add i64 %29, %call55, !dbg !11066
  store i64 %add56, i64* %txbroadcastframes_g, align 8, !dbg !11066
  br label %if.end57, !dbg !11064

if.end57:                                         ; preds = %if.then54, %if.end34
  call void @llvm.dbg.declare(metadata i32* %_pos58, metadata !11067, metadata !DIExpression()), !dbg !11070
  store i32 3, i32* %_pos58, align 4, !dbg !11070
  call void @llvm.dbg.declare(metadata i32* %_len59, metadata !11071, metadata !DIExpression()), !dbg !11070
  store i32 1, i32* %_len59, align 4, !dbg !11070
  %30 = load i32, i32* %mmc_isr, align 4, !dbg !11070
  %conv61 = zext i32 %30 to i64, !dbg !11070
  %31 = load i32, i32* %_pos58, align 4, !dbg !11070
  %sh_prom62 = zext i32 %31 to i64, !dbg !11070
  %shl63 = shl i64 1, %sh_prom62, !dbg !11070
  %sub64 = sub i64 -1, %shl63, !dbg !11070
  %add65 = add i64 %sub64, 1, !dbg !11070
  %32 = load i32, i32* %_pos58, align 4, !dbg !11070
  %33 = load i32, i32* %_len59, align 4, !dbg !11070
  %add66 = add i32 %32, %33, !dbg !11070
  %sub67 = sub i32 %add66, 1, !dbg !11070
  %sub68 = sub i32 63, %sub67, !dbg !11070
  %sh_prom69 = zext i32 %sub68 to i64, !dbg !11070
  %shr70 = lshr i64 -1, %sh_prom69, !dbg !11070
  %and71 = and i64 %add65, %shr70, !dbg !11070
  %add72 = add i64 0, %and71, !dbg !11070
  %and73 = and i64 %conv61, %add72, !dbg !11070
  %34 = load i32, i32* %_pos58, align 4, !dbg !11070
  %sh_prom74 = zext i32 %34 to i64, !dbg !11070
  %shr75 = lshr i64 %and73, %sh_prom74, !dbg !11070
  store i64 %shr75, i64* %tmp60, align 8, !dbg !11070
  %35 = load i64, i64* %tmp60, align 8, !dbg !11070
  %tobool76 = icmp ne i64 %35, 0, !dbg !11072
  br i1 %tobool76, label %if.then77, label %if.end80, !dbg !11073

if.then77:                                        ; preds = %if.end57
  %36 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !11074
  %call78 = call i64 @xlgmac_mmc_read(%struct.xlgmac_pdata* %36, i32 2092) #7, !dbg !11075
  %37 = load %struct.xlgmac_stats*, %struct.xlgmac_stats** %stats, align 8, !dbg !11076
  %txmulticastframes_g = getelementptr inbounds %struct.xlgmac_stats, %struct.xlgmac_stats* %37, i32 0, i32 3, !dbg !11077
  %38 = load i64, i64* %txmulticastframes_g, align 8, !dbg !11078
  %add79 = add i64 %38, %call78, !dbg !11078
  store i64 %add79, i64* %txmulticastframes_g, align 8, !dbg !11078
  br label %if.end80, !dbg !11076

if.end80:                                         ; preds = %if.then77, %if.end57
  call void @llvm.dbg.declare(metadata i32* %_pos81, metadata !11079, metadata !DIExpression()), !dbg !11082
  store i32 4, i32* %_pos81, align 4, !dbg !11082
  call void @llvm.dbg.declare(metadata i32* %_len82, metadata !11083, metadata !DIExpression()), !dbg !11082
  store i32 1, i32* %_len82, align 4, !dbg !11082
  %39 = load i32, i32* %mmc_isr, align 4, !dbg !11082
  %conv84 = zext i32 %39 to i64, !dbg !11082
  %40 = load i32, i32* %_pos81, align 4, !dbg !11082
  %sh_prom85 = zext i32 %40 to i64, !dbg !11082
  %shl86 = shl i64 1, %sh_prom85, !dbg !11082
  %sub87 = sub i64 -1, %shl86, !dbg !11082
  %add88 = add i64 %sub87, 1, !dbg !11082
  %41 = load i32, i32* %_pos81, align 4, !dbg !11082
  %42 = load i32, i32* %_len82, align 4, !dbg !11082
  %add89 = add i32 %41, %42, !dbg !11082
  %sub90 = sub i32 %add89, 1, !dbg !11082
  %sub91 = sub i32 63, %sub90, !dbg !11082
  %sh_prom92 = zext i32 %sub91 to i64, !dbg !11082
  %shr93 = lshr i64 -1, %sh_prom92, !dbg !11082
  %and94 = and i64 %add88, %shr93, !dbg !11082
  %add95 = add i64 0, %and94, !dbg !11082
  %and96 = and i64 %conv84, %add95, !dbg !11082
  %43 = load i32, i32* %_pos81, align 4, !dbg !11082
  %sh_prom97 = zext i32 %43 to i64, !dbg !11082
  %shr98 = lshr i64 %and96, %sh_prom97, !dbg !11082
  store i64 %shr98, i64* %tmp83, align 8, !dbg !11082
  %44 = load i64, i64* %tmp83, align 8, !dbg !11082
  %tobool99 = icmp ne i64 %44, 0, !dbg !11084
  br i1 %tobool99, label %if.then100, label %if.end103, !dbg !11085

if.then100:                                       ; preds = %if.end80
  %45 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !11086
  %call101 = call i64 @xlgmac_mmc_read(%struct.xlgmac_pdata* %45, i32 2100) #7, !dbg !11087
  %46 = load %struct.xlgmac_stats*, %struct.xlgmac_stats** %stats, align 8, !dbg !11088
  %tx64octets_gb = getelementptr inbounds %struct.xlgmac_stats, %struct.xlgmac_stats* %46, i32 0, i32 4, !dbg !11089
  %47 = load i64, i64* %tx64octets_gb, align 8, !dbg !11090
  %add102 = add i64 %47, %call101, !dbg !11090
  store i64 %add102, i64* %tx64octets_gb, align 8, !dbg !11090
  br label %if.end103, !dbg !11088

if.end103:                                        ; preds = %if.then100, %if.end80
  call void @llvm.dbg.declare(metadata i32* %_pos104, metadata !11091, metadata !DIExpression()), !dbg !11094
  store i32 5, i32* %_pos104, align 4, !dbg !11094
  call void @llvm.dbg.declare(metadata i32* %_len105, metadata !11095, metadata !DIExpression()), !dbg !11094
  store i32 1, i32* %_len105, align 4, !dbg !11094
  %48 = load i32, i32* %mmc_isr, align 4, !dbg !11094
  %conv107 = zext i32 %48 to i64, !dbg !11094
  %49 = load i32, i32* %_pos104, align 4, !dbg !11094
  %sh_prom108 = zext i32 %49 to i64, !dbg !11094
  %shl109 = shl i64 1, %sh_prom108, !dbg !11094
  %sub110 = sub i64 -1, %shl109, !dbg !11094
  %add111 = add i64 %sub110, 1, !dbg !11094
  %50 = load i32, i32* %_pos104, align 4, !dbg !11094
  %51 = load i32, i32* %_len105, align 4, !dbg !11094
  %add112 = add i32 %50, %51, !dbg !11094
  %sub113 = sub i32 %add112, 1, !dbg !11094
  %sub114 = sub i32 63, %sub113, !dbg !11094
  %sh_prom115 = zext i32 %sub114 to i64, !dbg !11094
  %shr116 = lshr i64 -1, %sh_prom115, !dbg !11094
  %and117 = and i64 %add111, %shr116, !dbg !11094
  %add118 = add i64 0, %and117, !dbg !11094
  %and119 = and i64 %conv107, %add118, !dbg !11094
  %52 = load i32, i32* %_pos104, align 4, !dbg !11094
  %sh_prom120 = zext i32 %52 to i64, !dbg !11094
  %shr121 = lshr i64 %and119, %sh_prom120, !dbg !11094
  store i64 %shr121, i64* %tmp106, align 8, !dbg !11094
  %53 = load i64, i64* %tmp106, align 8, !dbg !11094
  %tobool122 = icmp ne i64 %53, 0, !dbg !11096
  br i1 %tobool122, label %if.then123, label %if.end126, !dbg !11097

if.then123:                                       ; preds = %if.end103
  %54 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !11098
  %call124 = call i64 @xlgmac_mmc_read(%struct.xlgmac_pdata* %54, i32 2108) #7, !dbg !11099
  %55 = load %struct.xlgmac_stats*, %struct.xlgmac_stats** %stats, align 8, !dbg !11100
  %tx65to127octets_gb = getelementptr inbounds %struct.xlgmac_stats, %struct.xlgmac_stats* %55, i32 0, i32 5, !dbg !11101
  %56 = load i64, i64* %tx65to127octets_gb, align 8, !dbg !11102
  %add125 = add i64 %56, %call124, !dbg !11102
  store i64 %add125, i64* %tx65to127octets_gb, align 8, !dbg !11102
  br label %if.end126, !dbg !11100

if.end126:                                        ; preds = %if.then123, %if.end103
  call void @llvm.dbg.declare(metadata i32* %_pos127, metadata !11103, metadata !DIExpression()), !dbg !11106
  store i32 6, i32* %_pos127, align 4, !dbg !11106
  call void @llvm.dbg.declare(metadata i32* %_len128, metadata !11107, metadata !DIExpression()), !dbg !11106
  store i32 1, i32* %_len128, align 4, !dbg !11106
  %57 = load i32, i32* %mmc_isr, align 4, !dbg !11106
  %conv130 = zext i32 %57 to i64, !dbg !11106
  %58 = load i32, i32* %_pos127, align 4, !dbg !11106
  %sh_prom131 = zext i32 %58 to i64, !dbg !11106
  %shl132 = shl i64 1, %sh_prom131, !dbg !11106
  %sub133 = sub i64 -1, %shl132, !dbg !11106
  %add134 = add i64 %sub133, 1, !dbg !11106
  %59 = load i32, i32* %_pos127, align 4, !dbg !11106
  %60 = load i32, i32* %_len128, align 4, !dbg !11106
  %add135 = add i32 %59, %60, !dbg !11106
  %sub136 = sub i32 %add135, 1, !dbg !11106
  %sub137 = sub i32 63, %sub136, !dbg !11106
  %sh_prom138 = zext i32 %sub137 to i64, !dbg !11106
  %shr139 = lshr i64 -1, %sh_prom138, !dbg !11106
  %and140 = and i64 %add134, %shr139, !dbg !11106
  %add141 = add i64 0, %and140, !dbg !11106
  %and142 = and i64 %conv130, %add141, !dbg !11106
  %61 = load i32, i32* %_pos127, align 4, !dbg !11106
  %sh_prom143 = zext i32 %61 to i64, !dbg !11106
  %shr144 = lshr i64 %and142, %sh_prom143, !dbg !11106
  store i64 %shr144, i64* %tmp129, align 8, !dbg !11106
  %62 = load i64, i64* %tmp129, align 8, !dbg !11106
  %tobool145 = icmp ne i64 %62, 0, !dbg !11108
  br i1 %tobool145, label %if.then146, label %if.end149, !dbg !11109

if.then146:                                       ; preds = %if.end126
  %63 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !11110
  %call147 = call i64 @xlgmac_mmc_read(%struct.xlgmac_pdata* %63, i32 2116) #7, !dbg !11111
  %64 = load %struct.xlgmac_stats*, %struct.xlgmac_stats** %stats, align 8, !dbg !11112
  %tx128to255octets_gb = getelementptr inbounds %struct.xlgmac_stats, %struct.xlgmac_stats* %64, i32 0, i32 6, !dbg !11113
  %65 = load i64, i64* %tx128to255octets_gb, align 8, !dbg !11114
  %add148 = add i64 %65, %call147, !dbg !11114
  store i64 %add148, i64* %tx128to255octets_gb, align 8, !dbg !11114
  br label %if.end149, !dbg !11112

if.end149:                                        ; preds = %if.then146, %if.end126
  call void @llvm.dbg.declare(metadata i32* %_pos150, metadata !11115, metadata !DIExpression()), !dbg !11118
  store i32 7, i32* %_pos150, align 4, !dbg !11118
  call void @llvm.dbg.declare(metadata i32* %_len151, metadata !11119, metadata !DIExpression()), !dbg !11118
  store i32 1, i32* %_len151, align 4, !dbg !11118
  %66 = load i32, i32* %mmc_isr, align 4, !dbg !11118
  %conv153 = zext i32 %66 to i64, !dbg !11118
  %67 = load i32, i32* %_pos150, align 4, !dbg !11118
  %sh_prom154 = zext i32 %67 to i64, !dbg !11118
  %shl155 = shl i64 1, %sh_prom154, !dbg !11118
  %sub156 = sub i64 -1, %shl155, !dbg !11118
  %add157 = add i64 %sub156, 1, !dbg !11118
  %68 = load i32, i32* %_pos150, align 4, !dbg !11118
  %69 = load i32, i32* %_len151, align 4, !dbg !11118
  %add158 = add i32 %68, %69, !dbg !11118
  %sub159 = sub i32 %add158, 1, !dbg !11118
  %sub160 = sub i32 63, %sub159, !dbg !11118
  %sh_prom161 = zext i32 %sub160 to i64, !dbg !11118
  %shr162 = lshr i64 -1, %sh_prom161, !dbg !11118
  %and163 = and i64 %add157, %shr162, !dbg !11118
  %add164 = add i64 0, %and163, !dbg !11118
  %and165 = and i64 %conv153, %add164, !dbg !11118
  %70 = load i32, i32* %_pos150, align 4, !dbg !11118
  %sh_prom166 = zext i32 %70 to i64, !dbg !11118
  %shr167 = lshr i64 %and165, %sh_prom166, !dbg !11118
  store i64 %shr167, i64* %tmp152, align 8, !dbg !11118
  %71 = load i64, i64* %tmp152, align 8, !dbg !11118
  %tobool168 = icmp ne i64 %71, 0, !dbg !11120
  br i1 %tobool168, label %if.then169, label %if.end172, !dbg !11121

if.then169:                                       ; preds = %if.end149
  %72 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !11122
  %call170 = call i64 @xlgmac_mmc_read(%struct.xlgmac_pdata* %72, i32 2124) #7, !dbg !11123
  %73 = load %struct.xlgmac_stats*, %struct.xlgmac_stats** %stats, align 8, !dbg !11124
  %tx256to511octets_gb = getelementptr inbounds %struct.xlgmac_stats, %struct.xlgmac_stats* %73, i32 0, i32 7, !dbg !11125
  %74 = load i64, i64* %tx256to511octets_gb, align 8, !dbg !11126
  %add171 = add i64 %74, %call170, !dbg !11126
  store i64 %add171, i64* %tx256to511octets_gb, align 8, !dbg !11126
  br label %if.end172, !dbg !11124

if.end172:                                        ; preds = %if.then169, %if.end149
  call void @llvm.dbg.declare(metadata i32* %_pos173, metadata !11127, metadata !DIExpression()), !dbg !11130
  store i32 8, i32* %_pos173, align 4, !dbg !11130
  call void @llvm.dbg.declare(metadata i32* %_len174, metadata !11131, metadata !DIExpression()), !dbg !11130
  store i32 1, i32* %_len174, align 4, !dbg !11130
  %75 = load i32, i32* %mmc_isr, align 4, !dbg !11130
  %conv176 = zext i32 %75 to i64, !dbg !11130
  %76 = load i32, i32* %_pos173, align 4, !dbg !11130
  %sh_prom177 = zext i32 %76 to i64, !dbg !11130
  %shl178 = shl i64 1, %sh_prom177, !dbg !11130
  %sub179 = sub i64 -1, %shl178, !dbg !11130
  %add180 = add i64 %sub179, 1, !dbg !11130
  %77 = load i32, i32* %_pos173, align 4, !dbg !11130
  %78 = load i32, i32* %_len174, align 4, !dbg !11130
  %add181 = add i32 %77, %78, !dbg !11130
  %sub182 = sub i32 %add181, 1, !dbg !11130
  %sub183 = sub i32 63, %sub182, !dbg !11130
  %sh_prom184 = zext i32 %sub183 to i64, !dbg !11130
  %shr185 = lshr i64 -1, %sh_prom184, !dbg !11130
  %and186 = and i64 %add180, %shr185, !dbg !11130
  %add187 = add i64 0, %and186, !dbg !11130
  %and188 = and i64 %conv176, %add187, !dbg !11130
  %79 = load i32, i32* %_pos173, align 4, !dbg !11130
  %sh_prom189 = zext i32 %79 to i64, !dbg !11130
  %shr190 = lshr i64 %and188, %sh_prom189, !dbg !11130
  store i64 %shr190, i64* %tmp175, align 8, !dbg !11130
  %80 = load i64, i64* %tmp175, align 8, !dbg !11130
  %tobool191 = icmp ne i64 %80, 0, !dbg !11132
  br i1 %tobool191, label %if.then192, label %if.end195, !dbg !11133

if.then192:                                       ; preds = %if.end172
  %81 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !11134
  %call193 = call i64 @xlgmac_mmc_read(%struct.xlgmac_pdata* %81, i32 2132) #7, !dbg !11135
  %82 = load %struct.xlgmac_stats*, %struct.xlgmac_stats** %stats, align 8, !dbg !11136
  %tx512to1023octets_gb = getelementptr inbounds %struct.xlgmac_stats, %struct.xlgmac_stats* %82, i32 0, i32 8, !dbg !11137
  %83 = load i64, i64* %tx512to1023octets_gb, align 8, !dbg !11138
  %add194 = add i64 %83, %call193, !dbg !11138
  store i64 %add194, i64* %tx512to1023octets_gb, align 8, !dbg !11138
  br label %if.end195, !dbg !11136

if.end195:                                        ; preds = %if.then192, %if.end172
  call void @llvm.dbg.declare(metadata i32* %_pos196, metadata !11139, metadata !DIExpression()), !dbg !11142
  store i32 9, i32* %_pos196, align 4, !dbg !11142
  call void @llvm.dbg.declare(metadata i32* %_len197, metadata !11143, metadata !DIExpression()), !dbg !11142
  store i32 1, i32* %_len197, align 4, !dbg !11142
  %84 = load i32, i32* %mmc_isr, align 4, !dbg !11142
  %conv199 = zext i32 %84 to i64, !dbg !11142
  %85 = load i32, i32* %_pos196, align 4, !dbg !11142
  %sh_prom200 = zext i32 %85 to i64, !dbg !11142
  %shl201 = shl i64 1, %sh_prom200, !dbg !11142
  %sub202 = sub i64 -1, %shl201, !dbg !11142
  %add203 = add i64 %sub202, 1, !dbg !11142
  %86 = load i32, i32* %_pos196, align 4, !dbg !11142
  %87 = load i32, i32* %_len197, align 4, !dbg !11142
  %add204 = add i32 %86, %87, !dbg !11142
  %sub205 = sub i32 %add204, 1, !dbg !11142
  %sub206 = sub i32 63, %sub205, !dbg !11142
  %sh_prom207 = zext i32 %sub206 to i64, !dbg !11142
  %shr208 = lshr i64 -1, %sh_prom207, !dbg !11142
  %and209 = and i64 %add203, %shr208, !dbg !11142
  %add210 = add i64 0, %and209, !dbg !11142
  %and211 = and i64 %conv199, %add210, !dbg !11142
  %88 = load i32, i32* %_pos196, align 4, !dbg !11142
  %sh_prom212 = zext i32 %88 to i64, !dbg !11142
  %shr213 = lshr i64 %and211, %sh_prom212, !dbg !11142
  store i64 %shr213, i64* %tmp198, align 8, !dbg !11142
  %89 = load i64, i64* %tmp198, align 8, !dbg !11142
  %tobool214 = icmp ne i64 %89, 0, !dbg !11144
  br i1 %tobool214, label %if.then215, label %if.end218, !dbg !11145

if.then215:                                       ; preds = %if.end195
  %90 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !11146
  %call216 = call i64 @xlgmac_mmc_read(%struct.xlgmac_pdata* %90, i32 2140) #7, !dbg !11147
  %91 = load %struct.xlgmac_stats*, %struct.xlgmac_stats** %stats, align 8, !dbg !11148
  %tx1024tomaxoctets_gb = getelementptr inbounds %struct.xlgmac_stats, %struct.xlgmac_stats* %91, i32 0, i32 9, !dbg !11149
  %92 = load i64, i64* %tx1024tomaxoctets_gb, align 8, !dbg !11150
  %add217 = add i64 %92, %call216, !dbg !11150
  store i64 %add217, i64* %tx1024tomaxoctets_gb, align 8, !dbg !11150
  br label %if.end218, !dbg !11148

if.end218:                                        ; preds = %if.then215, %if.end195
  call void @llvm.dbg.declare(metadata i32* %_pos219, metadata !11151, metadata !DIExpression()), !dbg !11154
  store i32 10, i32* %_pos219, align 4, !dbg !11154
  call void @llvm.dbg.declare(metadata i32* %_len220, metadata !11155, metadata !DIExpression()), !dbg !11154
  store i32 1, i32* %_len220, align 4, !dbg !11154
  %93 = load i32, i32* %mmc_isr, align 4, !dbg !11154
  %conv222 = zext i32 %93 to i64, !dbg !11154
  %94 = load i32, i32* %_pos219, align 4, !dbg !11154
  %sh_prom223 = zext i32 %94 to i64, !dbg !11154
  %shl224 = shl i64 1, %sh_prom223, !dbg !11154
  %sub225 = sub i64 -1, %shl224, !dbg !11154
  %add226 = add i64 %sub225, 1, !dbg !11154
  %95 = load i32, i32* %_pos219, align 4, !dbg !11154
  %96 = load i32, i32* %_len220, align 4, !dbg !11154
  %add227 = add i32 %95, %96, !dbg !11154
  %sub228 = sub i32 %add227, 1, !dbg !11154
  %sub229 = sub i32 63, %sub228, !dbg !11154
  %sh_prom230 = zext i32 %sub229 to i64, !dbg !11154
  %shr231 = lshr i64 -1, %sh_prom230, !dbg !11154
  %and232 = and i64 %add226, %shr231, !dbg !11154
  %add233 = add i64 0, %and232, !dbg !11154
  %and234 = and i64 %conv222, %add233, !dbg !11154
  %97 = load i32, i32* %_pos219, align 4, !dbg !11154
  %sh_prom235 = zext i32 %97 to i64, !dbg !11154
  %shr236 = lshr i64 %and234, %sh_prom235, !dbg !11154
  store i64 %shr236, i64* %tmp221, align 8, !dbg !11154
  %98 = load i64, i64* %tmp221, align 8, !dbg !11154
  %tobool237 = icmp ne i64 %98, 0, !dbg !11156
  br i1 %tobool237, label %if.then238, label %if.end241, !dbg !11157

if.then238:                                       ; preds = %if.end218
  %99 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !11158
  %call239 = call i64 @xlgmac_mmc_read(%struct.xlgmac_pdata* %99, i32 2148) #7, !dbg !11159
  %100 = load %struct.xlgmac_stats*, %struct.xlgmac_stats** %stats, align 8, !dbg !11160
  %txunicastframes_gb = getelementptr inbounds %struct.xlgmac_stats, %struct.xlgmac_stats* %100, i32 0, i32 10, !dbg !11161
  %101 = load i64, i64* %txunicastframes_gb, align 8, !dbg !11162
  %add240 = add i64 %101, %call239, !dbg !11162
  store i64 %add240, i64* %txunicastframes_gb, align 8, !dbg !11162
  br label %if.end241, !dbg !11160

if.end241:                                        ; preds = %if.then238, %if.end218
  call void @llvm.dbg.declare(metadata i32* %_pos242, metadata !11163, metadata !DIExpression()), !dbg !11166
  store i32 11, i32* %_pos242, align 4, !dbg !11166
  call void @llvm.dbg.declare(metadata i32* %_len243, metadata !11167, metadata !DIExpression()), !dbg !11166
  store i32 1, i32* %_len243, align 4, !dbg !11166
  %102 = load i32, i32* %mmc_isr, align 4, !dbg !11166
  %conv245 = zext i32 %102 to i64, !dbg !11166
  %103 = load i32, i32* %_pos242, align 4, !dbg !11166
  %sh_prom246 = zext i32 %103 to i64, !dbg !11166
  %shl247 = shl i64 1, %sh_prom246, !dbg !11166
  %sub248 = sub i64 -1, %shl247, !dbg !11166
  %add249 = add i64 %sub248, 1, !dbg !11166
  %104 = load i32, i32* %_pos242, align 4, !dbg !11166
  %105 = load i32, i32* %_len243, align 4, !dbg !11166
  %add250 = add i32 %104, %105, !dbg !11166
  %sub251 = sub i32 %add250, 1, !dbg !11166
  %sub252 = sub i32 63, %sub251, !dbg !11166
  %sh_prom253 = zext i32 %sub252 to i64, !dbg !11166
  %shr254 = lshr i64 -1, %sh_prom253, !dbg !11166
  %and255 = and i64 %add249, %shr254, !dbg !11166
  %add256 = add i64 0, %and255, !dbg !11166
  %and257 = and i64 %conv245, %add256, !dbg !11166
  %106 = load i32, i32* %_pos242, align 4, !dbg !11166
  %sh_prom258 = zext i32 %106 to i64, !dbg !11166
  %shr259 = lshr i64 %and257, %sh_prom258, !dbg !11166
  store i64 %shr259, i64* %tmp244, align 8, !dbg !11166
  %107 = load i64, i64* %tmp244, align 8, !dbg !11166
  %tobool260 = icmp ne i64 %107, 0, !dbg !11168
  br i1 %tobool260, label %if.then261, label %if.end264, !dbg !11169

if.then261:                                       ; preds = %if.end241
  %108 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !11170
  %call262 = call i64 @xlgmac_mmc_read(%struct.xlgmac_pdata* %108, i32 2156) #7, !dbg !11171
  %109 = load %struct.xlgmac_stats*, %struct.xlgmac_stats** %stats, align 8, !dbg !11172
  %txmulticastframes_gb = getelementptr inbounds %struct.xlgmac_stats, %struct.xlgmac_stats* %109, i32 0, i32 11, !dbg !11173
  %110 = load i64, i64* %txmulticastframes_gb, align 8, !dbg !11174
  %add263 = add i64 %110, %call262, !dbg !11174
  store i64 %add263, i64* %txmulticastframes_gb, align 8, !dbg !11174
  br label %if.end264, !dbg !11172

if.end264:                                        ; preds = %if.then261, %if.end241
  call void @llvm.dbg.declare(metadata i32* %_pos265, metadata !11175, metadata !DIExpression()), !dbg !11178
  store i32 12, i32* %_pos265, align 4, !dbg !11178
  call void @llvm.dbg.declare(metadata i32* %_len266, metadata !11179, metadata !DIExpression()), !dbg !11178
  store i32 1, i32* %_len266, align 4, !dbg !11178
  %111 = load i32, i32* %mmc_isr, align 4, !dbg !11178
  %conv268 = zext i32 %111 to i64, !dbg !11178
  %112 = load i32, i32* %_pos265, align 4, !dbg !11178
  %sh_prom269 = zext i32 %112 to i64, !dbg !11178
  %shl270 = shl i64 1, %sh_prom269, !dbg !11178
  %sub271 = sub i64 -1, %shl270, !dbg !11178
  %add272 = add i64 %sub271, 1, !dbg !11178
  %113 = load i32, i32* %_pos265, align 4, !dbg !11178
  %114 = load i32, i32* %_len266, align 4, !dbg !11178
  %add273 = add i32 %113, %114, !dbg !11178
  %sub274 = sub i32 %add273, 1, !dbg !11178
  %sub275 = sub i32 63, %sub274, !dbg !11178
  %sh_prom276 = zext i32 %sub275 to i64, !dbg !11178
  %shr277 = lshr i64 -1, %sh_prom276, !dbg !11178
  %and278 = and i64 %add272, %shr277, !dbg !11178
  %add279 = add i64 0, %and278, !dbg !11178
  %and280 = and i64 %conv268, %add279, !dbg !11178
  %115 = load i32, i32* %_pos265, align 4, !dbg !11178
  %sh_prom281 = zext i32 %115 to i64, !dbg !11178
  %shr282 = lshr i64 %and280, %sh_prom281, !dbg !11178
  store i64 %shr282, i64* %tmp267, align 8, !dbg !11178
  %116 = load i64, i64* %tmp267, align 8, !dbg !11178
  %tobool283 = icmp ne i64 %116, 0, !dbg !11180
  br i1 %tobool283, label %if.then284, label %if.end288, !dbg !11181

if.then284:                                       ; preds = %if.end264
  %117 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !11182
  %call285 = call i64 @xlgmac_mmc_read(%struct.xlgmac_pdata* %117, i32 2164) #7, !dbg !11183
  %118 = load %struct.xlgmac_stats*, %struct.xlgmac_stats** %stats, align 8, !dbg !11184
  %txbroadcastframes_g286 = getelementptr inbounds %struct.xlgmac_stats, %struct.xlgmac_stats* %118, i32 0, i32 2, !dbg !11185
  %119 = load i64, i64* %txbroadcastframes_g286, align 8, !dbg !11186
  %add287 = add i64 %119, %call285, !dbg !11186
  store i64 %add287, i64* %txbroadcastframes_g286, align 8, !dbg !11186
  br label %if.end288, !dbg !11184

if.end288:                                        ; preds = %if.then284, %if.end264
  call void @llvm.dbg.declare(metadata i32* %_pos289, metadata !11187, metadata !DIExpression()), !dbg !11190
  store i32 13, i32* %_pos289, align 4, !dbg !11190
  call void @llvm.dbg.declare(metadata i32* %_len290, metadata !11191, metadata !DIExpression()), !dbg !11190
  store i32 1, i32* %_len290, align 4, !dbg !11190
  %120 = load i32, i32* %mmc_isr, align 4, !dbg !11190
  %conv292 = zext i32 %120 to i64, !dbg !11190
  %121 = load i32, i32* %_pos289, align 4, !dbg !11190
  %sh_prom293 = zext i32 %121 to i64, !dbg !11190
  %shl294 = shl i64 1, %sh_prom293, !dbg !11190
  %sub295 = sub i64 -1, %shl294, !dbg !11190
  %add296 = add i64 %sub295, 1, !dbg !11190
  %122 = load i32, i32* %_pos289, align 4, !dbg !11190
  %123 = load i32, i32* %_len290, align 4, !dbg !11190
  %add297 = add i32 %122, %123, !dbg !11190
  %sub298 = sub i32 %add297, 1, !dbg !11190
  %sub299 = sub i32 63, %sub298, !dbg !11190
  %sh_prom300 = zext i32 %sub299 to i64, !dbg !11190
  %shr301 = lshr i64 -1, %sh_prom300, !dbg !11190
  %and302 = and i64 %add296, %shr301, !dbg !11190
  %add303 = add i64 0, %and302, !dbg !11190
  %and304 = and i64 %conv292, %add303, !dbg !11190
  %124 = load i32, i32* %_pos289, align 4, !dbg !11190
  %sh_prom305 = zext i32 %124 to i64, !dbg !11190
  %shr306 = lshr i64 %and304, %sh_prom305, !dbg !11190
  store i64 %shr306, i64* %tmp291, align 8, !dbg !11190
  %125 = load i64, i64* %tmp291, align 8, !dbg !11190
  %tobool307 = icmp ne i64 %125, 0, !dbg !11192
  br i1 %tobool307, label %if.then308, label %if.end311, !dbg !11193

if.then308:                                       ; preds = %if.end288
  %126 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !11194
  %call309 = call i64 @xlgmac_mmc_read(%struct.xlgmac_pdata* %126, i32 2172) #7, !dbg !11195
  %127 = load %struct.xlgmac_stats*, %struct.xlgmac_stats** %stats, align 8, !dbg !11196
  %txunderflowerror = getelementptr inbounds %struct.xlgmac_stats, %struct.xlgmac_stats* %127, i32 0, i32 13, !dbg !11197
  %128 = load i64, i64* %txunderflowerror, align 8, !dbg !11198
  %add310 = add i64 %128, %call309, !dbg !11198
  store i64 %add310, i64* %txunderflowerror, align 8, !dbg !11198
  br label %if.end311, !dbg !11196

if.end311:                                        ; preds = %if.then308, %if.end288
  call void @llvm.dbg.declare(metadata i32* %_pos312, metadata !11199, metadata !DIExpression()), !dbg !11202
  store i32 14, i32* %_pos312, align 4, !dbg !11202
  call void @llvm.dbg.declare(metadata i32* %_len313, metadata !11203, metadata !DIExpression()), !dbg !11202
  store i32 1, i32* %_len313, align 4, !dbg !11202
  %129 = load i32, i32* %mmc_isr, align 4, !dbg !11202
  %conv315 = zext i32 %129 to i64, !dbg !11202
  %130 = load i32, i32* %_pos312, align 4, !dbg !11202
  %sh_prom316 = zext i32 %130 to i64, !dbg !11202
  %shl317 = shl i64 1, %sh_prom316, !dbg !11202
  %sub318 = sub i64 -1, %shl317, !dbg !11202
  %add319 = add i64 %sub318, 1, !dbg !11202
  %131 = load i32, i32* %_pos312, align 4, !dbg !11202
  %132 = load i32, i32* %_len313, align 4, !dbg !11202
  %add320 = add i32 %131, %132, !dbg !11202
  %sub321 = sub i32 %add320, 1, !dbg !11202
  %sub322 = sub i32 63, %sub321, !dbg !11202
  %sh_prom323 = zext i32 %sub322 to i64, !dbg !11202
  %shr324 = lshr i64 -1, %sh_prom323, !dbg !11202
  %and325 = and i64 %add319, %shr324, !dbg !11202
  %add326 = add i64 0, %and325, !dbg !11202
  %and327 = and i64 %conv315, %add326, !dbg !11202
  %133 = load i32, i32* %_pos312, align 4, !dbg !11202
  %sh_prom328 = zext i32 %133 to i64, !dbg !11202
  %shr329 = lshr i64 %and327, %sh_prom328, !dbg !11202
  store i64 %shr329, i64* %tmp314, align 8, !dbg !11202
  %134 = load i64, i64* %tmp314, align 8, !dbg !11202
  %tobool330 = icmp ne i64 %134, 0, !dbg !11204
  br i1 %tobool330, label %if.then331, label %if.end334, !dbg !11205

if.then331:                                       ; preds = %if.end311
  %135 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !11206
  %call332 = call i64 @xlgmac_mmc_read(%struct.xlgmac_pdata* %135, i32 2180) #7, !dbg !11207
  %136 = load %struct.xlgmac_stats*, %struct.xlgmac_stats** %stats, align 8, !dbg !11208
  %txoctetcount_g = getelementptr inbounds %struct.xlgmac_stats, %struct.xlgmac_stats* %136, i32 0, i32 14, !dbg !11209
  %137 = load i64, i64* %txoctetcount_g, align 8, !dbg !11210
  %add333 = add i64 %137, %call332, !dbg !11210
  store i64 %add333, i64* %txoctetcount_g, align 8, !dbg !11210
  br label %if.end334, !dbg !11208

if.end334:                                        ; preds = %if.then331, %if.end311
  call void @llvm.dbg.declare(metadata i32* %_pos335, metadata !11211, metadata !DIExpression()), !dbg !11214
  store i32 15, i32* %_pos335, align 4, !dbg !11214
  call void @llvm.dbg.declare(metadata i32* %_len336, metadata !11215, metadata !DIExpression()), !dbg !11214
  store i32 1, i32* %_len336, align 4, !dbg !11214
  %138 = load i32, i32* %mmc_isr, align 4, !dbg !11214
  %conv338 = zext i32 %138 to i64, !dbg !11214
  %139 = load i32, i32* %_pos335, align 4, !dbg !11214
  %sh_prom339 = zext i32 %139 to i64, !dbg !11214
  %shl340 = shl i64 1, %sh_prom339, !dbg !11214
  %sub341 = sub i64 -1, %shl340, !dbg !11214
  %add342 = add i64 %sub341, 1, !dbg !11214
  %140 = load i32, i32* %_pos335, align 4, !dbg !11214
  %141 = load i32, i32* %_len336, align 4, !dbg !11214
  %add343 = add i32 %140, %141, !dbg !11214
  %sub344 = sub i32 %add343, 1, !dbg !11214
  %sub345 = sub i32 63, %sub344, !dbg !11214
  %sh_prom346 = zext i32 %sub345 to i64, !dbg !11214
  %shr347 = lshr i64 -1, %sh_prom346, !dbg !11214
  %and348 = and i64 %add342, %shr347, !dbg !11214
  %add349 = add i64 0, %and348, !dbg !11214
  %and350 = and i64 %conv338, %add349, !dbg !11214
  %142 = load i32, i32* %_pos335, align 4, !dbg !11214
  %sh_prom351 = zext i32 %142 to i64, !dbg !11214
  %shr352 = lshr i64 %and350, %sh_prom351, !dbg !11214
  store i64 %shr352, i64* %tmp337, align 8, !dbg !11214
  %143 = load i64, i64* %tmp337, align 8, !dbg !11214
  %tobool353 = icmp ne i64 %143, 0, !dbg !11216
  br i1 %tobool353, label %if.then354, label %if.end357, !dbg !11217

if.then354:                                       ; preds = %if.end334
  %144 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !11218
  %call355 = call i64 @xlgmac_mmc_read(%struct.xlgmac_pdata* %144, i32 2188) #7, !dbg !11219
  %145 = load %struct.xlgmac_stats*, %struct.xlgmac_stats** %stats, align 8, !dbg !11220
  %txframecount_g = getelementptr inbounds %struct.xlgmac_stats, %struct.xlgmac_stats* %145, i32 0, i32 15, !dbg !11221
  %146 = load i64, i64* %txframecount_g, align 8, !dbg !11222
  %add356 = add i64 %146, %call355, !dbg !11222
  store i64 %add356, i64* %txframecount_g, align 8, !dbg !11222
  br label %if.end357, !dbg !11220

if.end357:                                        ; preds = %if.then354, %if.end334
  call void @llvm.dbg.declare(metadata i32* %_pos358, metadata !11223, metadata !DIExpression()), !dbg !11226
  store i32 16, i32* %_pos358, align 4, !dbg !11226
  call void @llvm.dbg.declare(metadata i32* %_len359, metadata !11227, metadata !DIExpression()), !dbg !11226
  store i32 1, i32* %_len359, align 4, !dbg !11226
  %147 = load i32, i32* %mmc_isr, align 4, !dbg !11226
  %conv361 = zext i32 %147 to i64, !dbg !11226
  %148 = load i32, i32* %_pos358, align 4, !dbg !11226
  %sh_prom362 = zext i32 %148 to i64, !dbg !11226
  %shl363 = shl i64 1, %sh_prom362, !dbg !11226
  %sub364 = sub i64 -1, %shl363, !dbg !11226
  %add365 = add i64 %sub364, 1, !dbg !11226
  %149 = load i32, i32* %_pos358, align 4, !dbg !11226
  %150 = load i32, i32* %_len359, align 4, !dbg !11226
  %add366 = add i32 %149, %150, !dbg !11226
  %sub367 = sub i32 %add366, 1, !dbg !11226
  %sub368 = sub i32 63, %sub367, !dbg !11226
  %sh_prom369 = zext i32 %sub368 to i64, !dbg !11226
  %shr370 = lshr i64 -1, %sh_prom369, !dbg !11226
  %and371 = and i64 %add365, %shr370, !dbg !11226
  %add372 = add i64 0, %and371, !dbg !11226
  %and373 = and i64 %conv361, %add372, !dbg !11226
  %151 = load i32, i32* %_pos358, align 4, !dbg !11226
  %sh_prom374 = zext i32 %151 to i64, !dbg !11226
  %shr375 = lshr i64 %and373, %sh_prom374, !dbg !11226
  store i64 %shr375, i64* %tmp360, align 8, !dbg !11226
  %152 = load i64, i64* %tmp360, align 8, !dbg !11226
  %tobool376 = icmp ne i64 %152, 0, !dbg !11228
  br i1 %tobool376, label %if.then377, label %if.end380, !dbg !11229

if.then377:                                       ; preds = %if.end357
  %153 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !11230
  %call378 = call i64 @xlgmac_mmc_read(%struct.xlgmac_pdata* %153, i32 2196) #7, !dbg !11231
  %154 = load %struct.xlgmac_stats*, %struct.xlgmac_stats** %stats, align 8, !dbg !11232
  %txpauseframes = getelementptr inbounds %struct.xlgmac_stats, %struct.xlgmac_stats* %154, i32 0, i32 16, !dbg !11233
  %155 = load i64, i64* %txpauseframes, align 8, !dbg !11234
  %add379 = add i64 %155, %call378, !dbg !11234
  store i64 %add379, i64* %txpauseframes, align 8, !dbg !11234
  br label %if.end380, !dbg !11232

if.end380:                                        ; preds = %if.then377, %if.end357
  call void @llvm.dbg.declare(metadata i32* %_pos381, metadata !11235, metadata !DIExpression()), !dbg !11238
  store i32 17, i32* %_pos381, align 4, !dbg !11238
  call void @llvm.dbg.declare(metadata i32* %_len382, metadata !11239, metadata !DIExpression()), !dbg !11238
  store i32 1, i32* %_len382, align 4, !dbg !11238
  %156 = load i32, i32* %mmc_isr, align 4, !dbg !11238
  %conv384 = zext i32 %156 to i64, !dbg !11238
  %157 = load i32, i32* %_pos381, align 4, !dbg !11238
  %sh_prom385 = zext i32 %157 to i64, !dbg !11238
  %shl386 = shl i64 1, %sh_prom385, !dbg !11238
  %sub387 = sub i64 -1, %shl386, !dbg !11238
  %add388 = add i64 %sub387, 1, !dbg !11238
  %158 = load i32, i32* %_pos381, align 4, !dbg !11238
  %159 = load i32, i32* %_len382, align 4, !dbg !11238
  %add389 = add i32 %158, %159, !dbg !11238
  %sub390 = sub i32 %add389, 1, !dbg !11238
  %sub391 = sub i32 63, %sub390, !dbg !11238
  %sh_prom392 = zext i32 %sub391 to i64, !dbg !11238
  %shr393 = lshr i64 -1, %sh_prom392, !dbg !11238
  %and394 = and i64 %add388, %shr393, !dbg !11238
  %add395 = add i64 0, %and394, !dbg !11238
  %and396 = and i64 %conv384, %add395, !dbg !11238
  %160 = load i32, i32* %_pos381, align 4, !dbg !11238
  %sh_prom397 = zext i32 %160 to i64, !dbg !11238
  %shr398 = lshr i64 %and396, %sh_prom397, !dbg !11238
  store i64 %shr398, i64* %tmp383, align 8, !dbg !11238
  %161 = load i64, i64* %tmp383, align 8, !dbg !11238
  %tobool399 = icmp ne i64 %161, 0, !dbg !11240
  br i1 %tobool399, label %if.then400, label %if.end403, !dbg !11241

if.then400:                                       ; preds = %if.end380
  %162 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !11242
  %call401 = call i64 @xlgmac_mmc_read(%struct.xlgmac_pdata* %162, i32 2204) #7, !dbg !11243
  %163 = load %struct.xlgmac_stats*, %struct.xlgmac_stats** %stats, align 8, !dbg !11244
  %txvlanframes_g = getelementptr inbounds %struct.xlgmac_stats, %struct.xlgmac_stats* %163, i32 0, i32 17, !dbg !11245
  %164 = load i64, i64* %txvlanframes_g, align 8, !dbg !11246
  %add402 = add i64 %164, %call401, !dbg !11246
  store i64 %add402, i64* %txvlanframes_g, align 8, !dbg !11246
  br label %if.end403, !dbg !11244

if.end403:                                        ; preds = %if.then400, %if.end380
  ret void, !dbg !11247
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @xlgmac_rx_mmc_int(%struct.xlgmac_pdata* %pdata) #0 !dbg !11248 {
entry:
  %pdata.addr = alloca %struct.xlgmac_pdata*, align 8
  %mmc_isr = alloca i32, align 4
  %stats = alloca %struct.xlgmac_stats*, align 8
  %_pos = alloca i32, align 4
  %_len = alloca i32, align 4
  %tmp = alloca i64, align 8
  %_pos12 = alloca i32, align 4
  %_len13 = alloca i32, align 4
  %tmp14 = alloca i64, align 8
  %_pos35 = alloca i32, align 4
  %_len36 = alloca i32, align 4
  %tmp37 = alloca i64, align 8
  %_pos58 = alloca i32, align 4
  %_len59 = alloca i32, align 4
  %tmp60 = alloca i64, align 8
  %_pos81 = alloca i32, align 4
  %_len82 = alloca i32, align 4
  %tmp83 = alloca i64, align 8
  %_pos104 = alloca i32, align 4
  %_len105 = alloca i32, align 4
  %tmp106 = alloca i64, align 8
  %_pos127 = alloca i32, align 4
  %_len128 = alloca i32, align 4
  %tmp129 = alloca i64, align 8
  %_pos150 = alloca i32, align 4
  %_len151 = alloca i32, align 4
  %tmp152 = alloca i64, align 8
  %_pos173 = alloca i32, align 4
  %_len174 = alloca i32, align 4
  %tmp175 = alloca i64, align 8
  %_pos196 = alloca i32, align 4
  %_len197 = alloca i32, align 4
  %tmp198 = alloca i64, align 8
  %_pos219 = alloca i32, align 4
  %_len220 = alloca i32, align 4
  %tmp221 = alloca i64, align 8
  %_pos242 = alloca i32, align 4
  %_len243 = alloca i32, align 4
  %tmp244 = alloca i64, align 8
  %_pos265 = alloca i32, align 4
  %_len266 = alloca i32, align 4
  %tmp267 = alloca i64, align 8
  %_pos288 = alloca i32, align 4
  %_len289 = alloca i32, align 4
  %tmp290 = alloca i64, align 8
  %_pos311 = alloca i32, align 4
  %_len312 = alloca i32, align 4
  %tmp313 = alloca i64, align 8
  %_pos334 = alloca i32, align 4
  %_len335 = alloca i32, align 4
  %tmp336 = alloca i64, align 8
  %_pos357 = alloca i32, align 4
  %_len358 = alloca i32, align 4
  %tmp359 = alloca i64, align 8
  %_pos380 = alloca i32, align 4
  %_len381 = alloca i32, align 4
  %tmp382 = alloca i64, align 8
  %_pos403 = alloca i32, align 4
  %_len404 = alloca i32, align 4
  %tmp405 = alloca i64, align 8
  %_pos426 = alloca i32, align 4
  %_len427 = alloca i32, align 4
  %tmp428 = alloca i64, align 8
  %_pos449 = alloca i32, align 4
  %_len450 = alloca i32, align 4
  %tmp451 = alloca i64, align 8
  %_pos472 = alloca i32, align 4
  %_len473 = alloca i32, align 4
  %tmp474 = alloca i64, align 8
  %_pos495 = alloca i32, align 4
  %_len496 = alloca i32, align 4
  %tmp497 = alloca i64, align 8
  store %struct.xlgmac_pdata* %pdata, %struct.xlgmac_pdata** %pdata.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xlgmac_pdata** %pdata.addr, metadata !11249, metadata !DIExpression()), !dbg !11250
  call void @llvm.dbg.declare(metadata i32* %mmc_isr, metadata !11251, metadata !DIExpression()), !dbg !11252
  %0 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !11253
  %mac_regs = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %0, i32 0, i32 6, !dbg !11254
  %1 = load i8*, i8** %mac_regs, align 8, !dbg !11254
  %add.ptr = getelementptr i8, i8* %1, i64 2052, !dbg !11255
  %call = call i32 @readl(i8* %add.ptr) #7, !dbg !11256
  store i32 %call, i32* %mmc_isr, align 4, !dbg !11252
  call void @llvm.dbg.declare(metadata %struct.xlgmac_stats** %stats, metadata !11257, metadata !DIExpression()), !dbg !11258
  %2 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !11259
  %stats1 = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %2, i32 0, i32 4, !dbg !11260
  store %struct.xlgmac_stats* %stats1, %struct.xlgmac_stats** %stats, align 8, !dbg !11258
  call void @llvm.dbg.declare(metadata i32* %_pos, metadata !11261, metadata !DIExpression()), !dbg !11264
  store i32 0, i32* %_pos, align 4, !dbg !11264
  call void @llvm.dbg.declare(metadata i32* %_len, metadata !11265, metadata !DIExpression()), !dbg !11264
  store i32 1, i32* %_len, align 4, !dbg !11264
  %3 = load i32, i32* %mmc_isr, align 4, !dbg !11264
  %conv = zext i32 %3 to i64, !dbg !11264
  %4 = load i32, i32* %_pos, align 4, !dbg !11264
  %sh_prom = zext i32 %4 to i64, !dbg !11264
  %shl = shl i64 1, %sh_prom, !dbg !11264
  %sub = sub i64 -1, %shl, !dbg !11264
  %add = add i64 %sub, 1, !dbg !11264
  %5 = load i32, i32* %_pos, align 4, !dbg !11264
  %6 = load i32, i32* %_len, align 4, !dbg !11264
  %add2 = add i32 %5, %6, !dbg !11264
  %sub3 = sub i32 %add2, 1, !dbg !11264
  %sub4 = sub i32 63, %sub3, !dbg !11264
  %sh_prom5 = zext i32 %sub4 to i64, !dbg !11264
  %shr = lshr i64 -1, %sh_prom5, !dbg !11264
  %and = and i64 %add, %shr, !dbg !11264
  %add6 = add i64 0, %and, !dbg !11264
  %and7 = and i64 %conv, %add6, !dbg !11264
  %7 = load i32, i32* %_pos, align 4, !dbg !11264
  %sh_prom8 = zext i32 %7 to i64, !dbg !11264
  %shr9 = lshr i64 %and7, %sh_prom8, !dbg !11264
  store i64 %shr9, i64* %tmp, align 8, !dbg !11264
  %8 = load i64, i64* %tmp, align 8, !dbg !11264
  %tobool = icmp ne i64 %8, 0, !dbg !11266
  br i1 %tobool, label %if.then, label %if.end, !dbg !11267

if.then:                                          ; preds = %entry
  %9 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !11268
  %call10 = call i64 @xlgmac_mmc_read(%struct.xlgmac_pdata* %9, i32 2304) #7, !dbg !11269
  %10 = load %struct.xlgmac_stats*, %struct.xlgmac_stats** %stats, align 8, !dbg !11270
  %rxframecount_gb = getelementptr inbounds %struct.xlgmac_stats, %struct.xlgmac_stats* %10, i32 0, i32 18, !dbg !11271
  %11 = load i64, i64* %rxframecount_gb, align 8, !dbg !11272
  %add11 = add i64 %11, %call10, !dbg !11272
  store i64 %add11, i64* %rxframecount_gb, align 8, !dbg !11272
  br label %if.end, !dbg !11270

if.end:                                           ; preds = %if.then, %entry
  call void @llvm.dbg.declare(metadata i32* %_pos12, metadata !11273, metadata !DIExpression()), !dbg !11276
  store i32 1, i32* %_pos12, align 4, !dbg !11276
  call void @llvm.dbg.declare(metadata i32* %_len13, metadata !11277, metadata !DIExpression()), !dbg !11276
  store i32 1, i32* %_len13, align 4, !dbg !11276
  %12 = load i32, i32* %mmc_isr, align 4, !dbg !11276
  %conv15 = zext i32 %12 to i64, !dbg !11276
  %13 = load i32, i32* %_pos12, align 4, !dbg !11276
  %sh_prom16 = zext i32 %13 to i64, !dbg !11276
  %shl17 = shl i64 1, %sh_prom16, !dbg !11276
  %sub18 = sub i64 -1, %shl17, !dbg !11276
  %add19 = add i64 %sub18, 1, !dbg !11276
  %14 = load i32, i32* %_pos12, align 4, !dbg !11276
  %15 = load i32, i32* %_len13, align 4, !dbg !11276
  %add20 = add i32 %14, %15, !dbg !11276
  %sub21 = sub i32 %add20, 1, !dbg !11276
  %sub22 = sub i32 63, %sub21, !dbg !11276
  %sh_prom23 = zext i32 %sub22 to i64, !dbg !11276
  %shr24 = lshr i64 -1, %sh_prom23, !dbg !11276
  %and25 = and i64 %add19, %shr24, !dbg !11276
  %add26 = add i64 0, %and25, !dbg !11276
  %and27 = and i64 %conv15, %add26, !dbg !11276
  %16 = load i32, i32* %_pos12, align 4, !dbg !11276
  %sh_prom28 = zext i32 %16 to i64, !dbg !11276
  %shr29 = lshr i64 %and27, %sh_prom28, !dbg !11276
  store i64 %shr29, i64* %tmp14, align 8, !dbg !11276
  %17 = load i64, i64* %tmp14, align 8, !dbg !11276
  %tobool30 = icmp ne i64 %17, 0, !dbg !11278
  br i1 %tobool30, label %if.then31, label %if.end34, !dbg !11279

if.then31:                                        ; preds = %if.end
  %18 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !11280
  %call32 = call i64 @xlgmac_mmc_read(%struct.xlgmac_pdata* %18, i32 2312) #7, !dbg !11281
  %19 = load %struct.xlgmac_stats*, %struct.xlgmac_stats** %stats, align 8, !dbg !11282
  %rxoctetcount_gb = getelementptr inbounds %struct.xlgmac_stats, %struct.xlgmac_stats* %19, i32 0, i32 19, !dbg !11283
  %20 = load i64, i64* %rxoctetcount_gb, align 8, !dbg !11284
  %add33 = add i64 %20, %call32, !dbg !11284
  store i64 %add33, i64* %rxoctetcount_gb, align 8, !dbg !11284
  br label %if.end34, !dbg !11282

if.end34:                                         ; preds = %if.then31, %if.end
  call void @llvm.dbg.declare(metadata i32* %_pos35, metadata !11285, metadata !DIExpression()), !dbg !11288
  store i32 2, i32* %_pos35, align 4, !dbg !11288
  call void @llvm.dbg.declare(metadata i32* %_len36, metadata !11289, metadata !DIExpression()), !dbg !11288
  store i32 1, i32* %_len36, align 4, !dbg !11288
  %21 = load i32, i32* %mmc_isr, align 4, !dbg !11288
  %conv38 = zext i32 %21 to i64, !dbg !11288
  %22 = load i32, i32* %_pos35, align 4, !dbg !11288
  %sh_prom39 = zext i32 %22 to i64, !dbg !11288
  %shl40 = shl i64 1, %sh_prom39, !dbg !11288
  %sub41 = sub i64 -1, %shl40, !dbg !11288
  %add42 = add i64 %sub41, 1, !dbg !11288
  %23 = load i32, i32* %_pos35, align 4, !dbg !11288
  %24 = load i32, i32* %_len36, align 4, !dbg !11288
  %add43 = add i32 %23, %24, !dbg !11288
  %sub44 = sub i32 %add43, 1, !dbg !11288
  %sub45 = sub i32 63, %sub44, !dbg !11288
  %sh_prom46 = zext i32 %sub45 to i64, !dbg !11288
  %shr47 = lshr i64 -1, %sh_prom46, !dbg !11288
  %and48 = and i64 %add42, %shr47, !dbg !11288
  %add49 = add i64 0, %and48, !dbg !11288
  %and50 = and i64 %conv38, %add49, !dbg !11288
  %25 = load i32, i32* %_pos35, align 4, !dbg !11288
  %sh_prom51 = zext i32 %25 to i64, !dbg !11288
  %shr52 = lshr i64 %and50, %sh_prom51, !dbg !11288
  store i64 %shr52, i64* %tmp37, align 8, !dbg !11288
  %26 = load i64, i64* %tmp37, align 8, !dbg !11288
  %tobool53 = icmp ne i64 %26, 0, !dbg !11290
  br i1 %tobool53, label %if.then54, label %if.end57, !dbg !11291

if.then54:                                        ; preds = %if.end34
  %27 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !11292
  %call55 = call i64 @xlgmac_mmc_read(%struct.xlgmac_pdata* %27, i32 2320) #7, !dbg !11293
  %28 = load %struct.xlgmac_stats*, %struct.xlgmac_stats** %stats, align 8, !dbg !11294
  %rxoctetcount_g = getelementptr inbounds %struct.xlgmac_stats, %struct.xlgmac_stats* %28, i32 0, i32 20, !dbg !11295
  %29 = load i64, i64* %rxoctetcount_g, align 8, !dbg !11296
  %add56 = add i64 %29, %call55, !dbg !11296
  store i64 %add56, i64* %rxoctetcount_g, align 8, !dbg !11296
  br label %if.end57, !dbg !11294

if.end57:                                         ; preds = %if.then54, %if.end34
  call void @llvm.dbg.declare(metadata i32* %_pos58, metadata !11297, metadata !DIExpression()), !dbg !11300
  store i32 3, i32* %_pos58, align 4, !dbg !11300
  call void @llvm.dbg.declare(metadata i32* %_len59, metadata !11301, metadata !DIExpression()), !dbg !11300
  store i32 1, i32* %_len59, align 4, !dbg !11300
  %30 = load i32, i32* %mmc_isr, align 4, !dbg !11300
  %conv61 = zext i32 %30 to i64, !dbg !11300
  %31 = load i32, i32* %_pos58, align 4, !dbg !11300
  %sh_prom62 = zext i32 %31 to i64, !dbg !11300
  %shl63 = shl i64 1, %sh_prom62, !dbg !11300
  %sub64 = sub i64 -1, %shl63, !dbg !11300
  %add65 = add i64 %sub64, 1, !dbg !11300
  %32 = load i32, i32* %_pos58, align 4, !dbg !11300
  %33 = load i32, i32* %_len59, align 4, !dbg !11300
  %add66 = add i32 %32, %33, !dbg !11300
  %sub67 = sub i32 %add66, 1, !dbg !11300
  %sub68 = sub i32 63, %sub67, !dbg !11300
  %sh_prom69 = zext i32 %sub68 to i64, !dbg !11300
  %shr70 = lshr i64 -1, %sh_prom69, !dbg !11300
  %and71 = and i64 %add65, %shr70, !dbg !11300
  %add72 = add i64 0, %and71, !dbg !11300
  %and73 = and i64 %conv61, %add72, !dbg !11300
  %34 = load i32, i32* %_pos58, align 4, !dbg !11300
  %sh_prom74 = zext i32 %34 to i64, !dbg !11300
  %shr75 = lshr i64 %and73, %sh_prom74, !dbg !11300
  store i64 %shr75, i64* %tmp60, align 8, !dbg !11300
  %35 = load i64, i64* %tmp60, align 8, !dbg !11300
  %tobool76 = icmp ne i64 %35, 0, !dbg !11302
  br i1 %tobool76, label %if.then77, label %if.end80, !dbg !11303

if.then77:                                        ; preds = %if.end57
  %36 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !11304
  %call78 = call i64 @xlgmac_mmc_read(%struct.xlgmac_pdata* %36, i32 2328) #7, !dbg !11305
  %37 = load %struct.xlgmac_stats*, %struct.xlgmac_stats** %stats, align 8, !dbg !11306
  %rxbroadcastframes_g = getelementptr inbounds %struct.xlgmac_stats, %struct.xlgmac_stats* %37, i32 0, i32 21, !dbg !11307
  %38 = load i64, i64* %rxbroadcastframes_g, align 8, !dbg !11308
  %add79 = add i64 %38, %call78, !dbg !11308
  store i64 %add79, i64* %rxbroadcastframes_g, align 8, !dbg !11308
  br label %if.end80, !dbg !11306

if.end80:                                         ; preds = %if.then77, %if.end57
  call void @llvm.dbg.declare(metadata i32* %_pos81, metadata !11309, metadata !DIExpression()), !dbg !11312
  store i32 4, i32* %_pos81, align 4, !dbg !11312
  call void @llvm.dbg.declare(metadata i32* %_len82, metadata !11313, metadata !DIExpression()), !dbg !11312
  store i32 1, i32* %_len82, align 4, !dbg !11312
  %39 = load i32, i32* %mmc_isr, align 4, !dbg !11312
  %conv84 = zext i32 %39 to i64, !dbg !11312
  %40 = load i32, i32* %_pos81, align 4, !dbg !11312
  %sh_prom85 = zext i32 %40 to i64, !dbg !11312
  %shl86 = shl i64 1, %sh_prom85, !dbg !11312
  %sub87 = sub i64 -1, %shl86, !dbg !11312
  %add88 = add i64 %sub87, 1, !dbg !11312
  %41 = load i32, i32* %_pos81, align 4, !dbg !11312
  %42 = load i32, i32* %_len82, align 4, !dbg !11312
  %add89 = add i32 %41, %42, !dbg !11312
  %sub90 = sub i32 %add89, 1, !dbg !11312
  %sub91 = sub i32 63, %sub90, !dbg !11312
  %sh_prom92 = zext i32 %sub91 to i64, !dbg !11312
  %shr93 = lshr i64 -1, %sh_prom92, !dbg !11312
  %and94 = and i64 %add88, %shr93, !dbg !11312
  %add95 = add i64 0, %and94, !dbg !11312
  %and96 = and i64 %conv84, %add95, !dbg !11312
  %43 = load i32, i32* %_pos81, align 4, !dbg !11312
  %sh_prom97 = zext i32 %43 to i64, !dbg !11312
  %shr98 = lshr i64 %and96, %sh_prom97, !dbg !11312
  store i64 %shr98, i64* %tmp83, align 8, !dbg !11312
  %44 = load i64, i64* %tmp83, align 8, !dbg !11312
  %tobool99 = icmp ne i64 %44, 0, !dbg !11314
  br i1 %tobool99, label %if.then100, label %if.end103, !dbg !11315

if.then100:                                       ; preds = %if.end80
  %45 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !11316
  %call101 = call i64 @xlgmac_mmc_read(%struct.xlgmac_pdata* %45, i32 2336) #7, !dbg !11317
  %46 = load %struct.xlgmac_stats*, %struct.xlgmac_stats** %stats, align 8, !dbg !11318
  %rxmulticastframes_g = getelementptr inbounds %struct.xlgmac_stats, %struct.xlgmac_stats* %46, i32 0, i32 22, !dbg !11319
  %47 = load i64, i64* %rxmulticastframes_g, align 8, !dbg !11320
  %add102 = add i64 %47, %call101, !dbg !11320
  store i64 %add102, i64* %rxmulticastframes_g, align 8, !dbg !11320
  br label %if.end103, !dbg !11318

if.end103:                                        ; preds = %if.then100, %if.end80
  call void @llvm.dbg.declare(metadata i32* %_pos104, metadata !11321, metadata !DIExpression()), !dbg !11324
  store i32 5, i32* %_pos104, align 4, !dbg !11324
  call void @llvm.dbg.declare(metadata i32* %_len105, metadata !11325, metadata !DIExpression()), !dbg !11324
  store i32 1, i32* %_len105, align 4, !dbg !11324
  %48 = load i32, i32* %mmc_isr, align 4, !dbg !11324
  %conv107 = zext i32 %48 to i64, !dbg !11324
  %49 = load i32, i32* %_pos104, align 4, !dbg !11324
  %sh_prom108 = zext i32 %49 to i64, !dbg !11324
  %shl109 = shl i64 1, %sh_prom108, !dbg !11324
  %sub110 = sub i64 -1, %shl109, !dbg !11324
  %add111 = add i64 %sub110, 1, !dbg !11324
  %50 = load i32, i32* %_pos104, align 4, !dbg !11324
  %51 = load i32, i32* %_len105, align 4, !dbg !11324
  %add112 = add i32 %50, %51, !dbg !11324
  %sub113 = sub i32 %add112, 1, !dbg !11324
  %sub114 = sub i32 63, %sub113, !dbg !11324
  %sh_prom115 = zext i32 %sub114 to i64, !dbg !11324
  %shr116 = lshr i64 -1, %sh_prom115, !dbg !11324
  %and117 = and i64 %add111, %shr116, !dbg !11324
  %add118 = add i64 0, %and117, !dbg !11324
  %and119 = and i64 %conv107, %add118, !dbg !11324
  %52 = load i32, i32* %_pos104, align 4, !dbg !11324
  %sh_prom120 = zext i32 %52 to i64, !dbg !11324
  %shr121 = lshr i64 %and119, %sh_prom120, !dbg !11324
  store i64 %shr121, i64* %tmp106, align 8, !dbg !11324
  %53 = load i64, i64* %tmp106, align 8, !dbg !11324
  %tobool122 = icmp ne i64 %53, 0, !dbg !11326
  br i1 %tobool122, label %if.then123, label %if.end126, !dbg !11327

if.then123:                                       ; preds = %if.end103
  %54 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !11328
  %call124 = call i64 @xlgmac_mmc_read(%struct.xlgmac_pdata* %54, i32 2344) #7, !dbg !11329
  %55 = load %struct.xlgmac_stats*, %struct.xlgmac_stats** %stats, align 8, !dbg !11330
  %rxcrcerror = getelementptr inbounds %struct.xlgmac_stats, %struct.xlgmac_stats* %55, i32 0, i32 23, !dbg !11331
  %56 = load i64, i64* %rxcrcerror, align 8, !dbg !11332
  %add125 = add i64 %56, %call124, !dbg !11332
  store i64 %add125, i64* %rxcrcerror, align 8, !dbg !11332
  br label %if.end126, !dbg !11330

if.end126:                                        ; preds = %if.then123, %if.end103
  call void @llvm.dbg.declare(metadata i32* %_pos127, metadata !11333, metadata !DIExpression()), !dbg !11336
  store i32 6, i32* %_pos127, align 4, !dbg !11336
  call void @llvm.dbg.declare(metadata i32* %_len128, metadata !11337, metadata !DIExpression()), !dbg !11336
  store i32 1, i32* %_len128, align 4, !dbg !11336
  %57 = load i32, i32* %mmc_isr, align 4, !dbg !11336
  %conv130 = zext i32 %57 to i64, !dbg !11336
  %58 = load i32, i32* %_pos127, align 4, !dbg !11336
  %sh_prom131 = zext i32 %58 to i64, !dbg !11336
  %shl132 = shl i64 1, %sh_prom131, !dbg !11336
  %sub133 = sub i64 -1, %shl132, !dbg !11336
  %add134 = add i64 %sub133, 1, !dbg !11336
  %59 = load i32, i32* %_pos127, align 4, !dbg !11336
  %60 = load i32, i32* %_len128, align 4, !dbg !11336
  %add135 = add i32 %59, %60, !dbg !11336
  %sub136 = sub i32 %add135, 1, !dbg !11336
  %sub137 = sub i32 63, %sub136, !dbg !11336
  %sh_prom138 = zext i32 %sub137 to i64, !dbg !11336
  %shr139 = lshr i64 -1, %sh_prom138, !dbg !11336
  %and140 = and i64 %add134, %shr139, !dbg !11336
  %add141 = add i64 0, %and140, !dbg !11336
  %and142 = and i64 %conv130, %add141, !dbg !11336
  %61 = load i32, i32* %_pos127, align 4, !dbg !11336
  %sh_prom143 = zext i32 %61 to i64, !dbg !11336
  %shr144 = lshr i64 %and142, %sh_prom143, !dbg !11336
  store i64 %shr144, i64* %tmp129, align 8, !dbg !11336
  %62 = load i64, i64* %tmp129, align 8, !dbg !11336
  %tobool145 = icmp ne i64 %62, 0, !dbg !11338
  br i1 %tobool145, label %if.then146, label %if.end149, !dbg !11339

if.then146:                                       ; preds = %if.end126
  %63 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !11340
  %call147 = call i64 @xlgmac_mmc_read(%struct.xlgmac_pdata* %63, i32 2352) #7, !dbg !11341
  %64 = load %struct.xlgmac_stats*, %struct.xlgmac_stats** %stats, align 8, !dbg !11342
  %rxrunterror = getelementptr inbounds %struct.xlgmac_stats, %struct.xlgmac_stats* %64, i32 0, i32 24, !dbg !11343
  %65 = load i64, i64* %rxrunterror, align 8, !dbg !11344
  %add148 = add i64 %65, %call147, !dbg !11344
  store i64 %add148, i64* %rxrunterror, align 8, !dbg !11344
  br label %if.end149, !dbg !11342

if.end149:                                        ; preds = %if.then146, %if.end126
  call void @llvm.dbg.declare(metadata i32* %_pos150, metadata !11345, metadata !DIExpression()), !dbg !11348
  store i32 7, i32* %_pos150, align 4, !dbg !11348
  call void @llvm.dbg.declare(metadata i32* %_len151, metadata !11349, metadata !DIExpression()), !dbg !11348
  store i32 1, i32* %_len151, align 4, !dbg !11348
  %66 = load i32, i32* %mmc_isr, align 4, !dbg !11348
  %conv153 = zext i32 %66 to i64, !dbg !11348
  %67 = load i32, i32* %_pos150, align 4, !dbg !11348
  %sh_prom154 = zext i32 %67 to i64, !dbg !11348
  %shl155 = shl i64 1, %sh_prom154, !dbg !11348
  %sub156 = sub i64 -1, %shl155, !dbg !11348
  %add157 = add i64 %sub156, 1, !dbg !11348
  %68 = load i32, i32* %_pos150, align 4, !dbg !11348
  %69 = load i32, i32* %_len151, align 4, !dbg !11348
  %add158 = add i32 %68, %69, !dbg !11348
  %sub159 = sub i32 %add158, 1, !dbg !11348
  %sub160 = sub i32 63, %sub159, !dbg !11348
  %sh_prom161 = zext i32 %sub160 to i64, !dbg !11348
  %shr162 = lshr i64 -1, %sh_prom161, !dbg !11348
  %and163 = and i64 %add157, %shr162, !dbg !11348
  %add164 = add i64 0, %and163, !dbg !11348
  %and165 = and i64 %conv153, %add164, !dbg !11348
  %70 = load i32, i32* %_pos150, align 4, !dbg !11348
  %sh_prom166 = zext i32 %70 to i64, !dbg !11348
  %shr167 = lshr i64 %and165, %sh_prom166, !dbg !11348
  store i64 %shr167, i64* %tmp152, align 8, !dbg !11348
  %71 = load i64, i64* %tmp152, align 8, !dbg !11348
  %tobool168 = icmp ne i64 %71, 0, !dbg !11350
  br i1 %tobool168, label %if.then169, label %if.end172, !dbg !11351

if.then169:                                       ; preds = %if.end149
  %72 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !11352
  %call170 = call i64 @xlgmac_mmc_read(%struct.xlgmac_pdata* %72, i32 2356) #7, !dbg !11353
  %73 = load %struct.xlgmac_stats*, %struct.xlgmac_stats** %stats, align 8, !dbg !11354
  %rxjabbererror = getelementptr inbounds %struct.xlgmac_stats, %struct.xlgmac_stats* %73, i32 0, i32 25, !dbg !11355
  %74 = load i64, i64* %rxjabbererror, align 8, !dbg !11356
  %add171 = add i64 %74, %call170, !dbg !11356
  store i64 %add171, i64* %rxjabbererror, align 8, !dbg !11356
  br label %if.end172, !dbg !11354

if.end172:                                        ; preds = %if.then169, %if.end149
  call void @llvm.dbg.declare(metadata i32* %_pos173, metadata !11357, metadata !DIExpression()), !dbg !11360
  store i32 8, i32* %_pos173, align 4, !dbg !11360
  call void @llvm.dbg.declare(metadata i32* %_len174, metadata !11361, metadata !DIExpression()), !dbg !11360
  store i32 1, i32* %_len174, align 4, !dbg !11360
  %75 = load i32, i32* %mmc_isr, align 4, !dbg !11360
  %conv176 = zext i32 %75 to i64, !dbg !11360
  %76 = load i32, i32* %_pos173, align 4, !dbg !11360
  %sh_prom177 = zext i32 %76 to i64, !dbg !11360
  %shl178 = shl i64 1, %sh_prom177, !dbg !11360
  %sub179 = sub i64 -1, %shl178, !dbg !11360
  %add180 = add i64 %sub179, 1, !dbg !11360
  %77 = load i32, i32* %_pos173, align 4, !dbg !11360
  %78 = load i32, i32* %_len174, align 4, !dbg !11360
  %add181 = add i32 %77, %78, !dbg !11360
  %sub182 = sub i32 %add181, 1, !dbg !11360
  %sub183 = sub i32 63, %sub182, !dbg !11360
  %sh_prom184 = zext i32 %sub183 to i64, !dbg !11360
  %shr185 = lshr i64 -1, %sh_prom184, !dbg !11360
  %and186 = and i64 %add180, %shr185, !dbg !11360
  %add187 = add i64 0, %and186, !dbg !11360
  %and188 = and i64 %conv176, %add187, !dbg !11360
  %79 = load i32, i32* %_pos173, align 4, !dbg !11360
  %sh_prom189 = zext i32 %79 to i64, !dbg !11360
  %shr190 = lshr i64 %and188, %sh_prom189, !dbg !11360
  store i64 %shr190, i64* %tmp175, align 8, !dbg !11360
  %80 = load i64, i64* %tmp175, align 8, !dbg !11360
  %tobool191 = icmp ne i64 %80, 0, !dbg !11362
  br i1 %tobool191, label %if.then192, label %if.end195, !dbg !11363

if.then192:                                       ; preds = %if.end172
  %81 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !11364
  %call193 = call i64 @xlgmac_mmc_read(%struct.xlgmac_pdata* %81, i32 2360) #7, !dbg !11365
  %82 = load %struct.xlgmac_stats*, %struct.xlgmac_stats** %stats, align 8, !dbg !11366
  %rxundersize_g = getelementptr inbounds %struct.xlgmac_stats, %struct.xlgmac_stats* %82, i32 0, i32 26, !dbg !11367
  %83 = load i64, i64* %rxundersize_g, align 8, !dbg !11368
  %add194 = add i64 %83, %call193, !dbg !11368
  store i64 %add194, i64* %rxundersize_g, align 8, !dbg !11368
  br label %if.end195, !dbg !11366

if.end195:                                        ; preds = %if.then192, %if.end172
  call void @llvm.dbg.declare(metadata i32* %_pos196, metadata !11369, metadata !DIExpression()), !dbg !11372
  store i32 9, i32* %_pos196, align 4, !dbg !11372
  call void @llvm.dbg.declare(metadata i32* %_len197, metadata !11373, metadata !DIExpression()), !dbg !11372
  store i32 1, i32* %_len197, align 4, !dbg !11372
  %84 = load i32, i32* %mmc_isr, align 4, !dbg !11372
  %conv199 = zext i32 %84 to i64, !dbg !11372
  %85 = load i32, i32* %_pos196, align 4, !dbg !11372
  %sh_prom200 = zext i32 %85 to i64, !dbg !11372
  %shl201 = shl i64 1, %sh_prom200, !dbg !11372
  %sub202 = sub i64 -1, %shl201, !dbg !11372
  %add203 = add i64 %sub202, 1, !dbg !11372
  %86 = load i32, i32* %_pos196, align 4, !dbg !11372
  %87 = load i32, i32* %_len197, align 4, !dbg !11372
  %add204 = add i32 %86, %87, !dbg !11372
  %sub205 = sub i32 %add204, 1, !dbg !11372
  %sub206 = sub i32 63, %sub205, !dbg !11372
  %sh_prom207 = zext i32 %sub206 to i64, !dbg !11372
  %shr208 = lshr i64 -1, %sh_prom207, !dbg !11372
  %and209 = and i64 %add203, %shr208, !dbg !11372
  %add210 = add i64 0, %and209, !dbg !11372
  %and211 = and i64 %conv199, %add210, !dbg !11372
  %88 = load i32, i32* %_pos196, align 4, !dbg !11372
  %sh_prom212 = zext i32 %88 to i64, !dbg !11372
  %shr213 = lshr i64 %and211, %sh_prom212, !dbg !11372
  store i64 %shr213, i64* %tmp198, align 8, !dbg !11372
  %89 = load i64, i64* %tmp198, align 8, !dbg !11372
  %tobool214 = icmp ne i64 %89, 0, !dbg !11374
  br i1 %tobool214, label %if.then215, label %if.end218, !dbg !11375

if.then215:                                       ; preds = %if.end195
  %90 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !11376
  %call216 = call i64 @xlgmac_mmc_read(%struct.xlgmac_pdata* %90, i32 2364) #7, !dbg !11377
  %91 = load %struct.xlgmac_stats*, %struct.xlgmac_stats** %stats, align 8, !dbg !11378
  %rxoversize_g = getelementptr inbounds %struct.xlgmac_stats, %struct.xlgmac_stats* %91, i32 0, i32 27, !dbg !11379
  %92 = load i64, i64* %rxoversize_g, align 8, !dbg !11380
  %add217 = add i64 %92, %call216, !dbg !11380
  store i64 %add217, i64* %rxoversize_g, align 8, !dbg !11380
  br label %if.end218, !dbg !11378

if.end218:                                        ; preds = %if.then215, %if.end195
  call void @llvm.dbg.declare(metadata i32* %_pos219, metadata !11381, metadata !DIExpression()), !dbg !11384
  store i32 10, i32* %_pos219, align 4, !dbg !11384
  call void @llvm.dbg.declare(metadata i32* %_len220, metadata !11385, metadata !DIExpression()), !dbg !11384
  store i32 1, i32* %_len220, align 4, !dbg !11384
  %93 = load i32, i32* %mmc_isr, align 4, !dbg !11384
  %conv222 = zext i32 %93 to i64, !dbg !11384
  %94 = load i32, i32* %_pos219, align 4, !dbg !11384
  %sh_prom223 = zext i32 %94 to i64, !dbg !11384
  %shl224 = shl i64 1, %sh_prom223, !dbg !11384
  %sub225 = sub i64 -1, %shl224, !dbg !11384
  %add226 = add i64 %sub225, 1, !dbg !11384
  %95 = load i32, i32* %_pos219, align 4, !dbg !11384
  %96 = load i32, i32* %_len220, align 4, !dbg !11384
  %add227 = add i32 %95, %96, !dbg !11384
  %sub228 = sub i32 %add227, 1, !dbg !11384
  %sub229 = sub i32 63, %sub228, !dbg !11384
  %sh_prom230 = zext i32 %sub229 to i64, !dbg !11384
  %shr231 = lshr i64 -1, %sh_prom230, !dbg !11384
  %and232 = and i64 %add226, %shr231, !dbg !11384
  %add233 = add i64 0, %and232, !dbg !11384
  %and234 = and i64 %conv222, %add233, !dbg !11384
  %97 = load i32, i32* %_pos219, align 4, !dbg !11384
  %sh_prom235 = zext i32 %97 to i64, !dbg !11384
  %shr236 = lshr i64 %and234, %sh_prom235, !dbg !11384
  store i64 %shr236, i64* %tmp221, align 8, !dbg !11384
  %98 = load i64, i64* %tmp221, align 8, !dbg !11384
  %tobool237 = icmp ne i64 %98, 0, !dbg !11386
  br i1 %tobool237, label %if.then238, label %if.end241, !dbg !11387

if.then238:                                       ; preds = %if.end218
  %99 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !11388
  %call239 = call i64 @xlgmac_mmc_read(%struct.xlgmac_pdata* %99, i32 2368) #7, !dbg !11389
  %100 = load %struct.xlgmac_stats*, %struct.xlgmac_stats** %stats, align 8, !dbg !11390
  %rx64octets_gb = getelementptr inbounds %struct.xlgmac_stats, %struct.xlgmac_stats* %100, i32 0, i32 28, !dbg !11391
  %101 = load i64, i64* %rx64octets_gb, align 8, !dbg !11392
  %add240 = add i64 %101, %call239, !dbg !11392
  store i64 %add240, i64* %rx64octets_gb, align 8, !dbg !11392
  br label %if.end241, !dbg !11390

if.end241:                                        ; preds = %if.then238, %if.end218
  call void @llvm.dbg.declare(metadata i32* %_pos242, metadata !11393, metadata !DIExpression()), !dbg !11396
  store i32 11, i32* %_pos242, align 4, !dbg !11396
  call void @llvm.dbg.declare(metadata i32* %_len243, metadata !11397, metadata !DIExpression()), !dbg !11396
  store i32 1, i32* %_len243, align 4, !dbg !11396
  %102 = load i32, i32* %mmc_isr, align 4, !dbg !11396
  %conv245 = zext i32 %102 to i64, !dbg !11396
  %103 = load i32, i32* %_pos242, align 4, !dbg !11396
  %sh_prom246 = zext i32 %103 to i64, !dbg !11396
  %shl247 = shl i64 1, %sh_prom246, !dbg !11396
  %sub248 = sub i64 -1, %shl247, !dbg !11396
  %add249 = add i64 %sub248, 1, !dbg !11396
  %104 = load i32, i32* %_pos242, align 4, !dbg !11396
  %105 = load i32, i32* %_len243, align 4, !dbg !11396
  %add250 = add i32 %104, %105, !dbg !11396
  %sub251 = sub i32 %add250, 1, !dbg !11396
  %sub252 = sub i32 63, %sub251, !dbg !11396
  %sh_prom253 = zext i32 %sub252 to i64, !dbg !11396
  %shr254 = lshr i64 -1, %sh_prom253, !dbg !11396
  %and255 = and i64 %add249, %shr254, !dbg !11396
  %add256 = add i64 0, %and255, !dbg !11396
  %and257 = and i64 %conv245, %add256, !dbg !11396
  %106 = load i32, i32* %_pos242, align 4, !dbg !11396
  %sh_prom258 = zext i32 %106 to i64, !dbg !11396
  %shr259 = lshr i64 %and257, %sh_prom258, !dbg !11396
  store i64 %shr259, i64* %tmp244, align 8, !dbg !11396
  %107 = load i64, i64* %tmp244, align 8, !dbg !11396
  %tobool260 = icmp ne i64 %107, 0, !dbg !11398
  br i1 %tobool260, label %if.then261, label %if.end264, !dbg !11399

if.then261:                                       ; preds = %if.end241
  %108 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !11400
  %call262 = call i64 @xlgmac_mmc_read(%struct.xlgmac_pdata* %108, i32 2376) #7, !dbg !11401
  %109 = load %struct.xlgmac_stats*, %struct.xlgmac_stats** %stats, align 8, !dbg !11402
  %rx65to127octets_gb = getelementptr inbounds %struct.xlgmac_stats, %struct.xlgmac_stats* %109, i32 0, i32 29, !dbg !11403
  %110 = load i64, i64* %rx65to127octets_gb, align 8, !dbg !11404
  %add263 = add i64 %110, %call262, !dbg !11404
  store i64 %add263, i64* %rx65to127octets_gb, align 8, !dbg !11404
  br label %if.end264, !dbg !11402

if.end264:                                        ; preds = %if.then261, %if.end241
  call void @llvm.dbg.declare(metadata i32* %_pos265, metadata !11405, metadata !DIExpression()), !dbg !11408
  store i32 12, i32* %_pos265, align 4, !dbg !11408
  call void @llvm.dbg.declare(metadata i32* %_len266, metadata !11409, metadata !DIExpression()), !dbg !11408
  store i32 1, i32* %_len266, align 4, !dbg !11408
  %111 = load i32, i32* %mmc_isr, align 4, !dbg !11408
  %conv268 = zext i32 %111 to i64, !dbg !11408
  %112 = load i32, i32* %_pos265, align 4, !dbg !11408
  %sh_prom269 = zext i32 %112 to i64, !dbg !11408
  %shl270 = shl i64 1, %sh_prom269, !dbg !11408
  %sub271 = sub i64 -1, %shl270, !dbg !11408
  %add272 = add i64 %sub271, 1, !dbg !11408
  %113 = load i32, i32* %_pos265, align 4, !dbg !11408
  %114 = load i32, i32* %_len266, align 4, !dbg !11408
  %add273 = add i32 %113, %114, !dbg !11408
  %sub274 = sub i32 %add273, 1, !dbg !11408
  %sub275 = sub i32 63, %sub274, !dbg !11408
  %sh_prom276 = zext i32 %sub275 to i64, !dbg !11408
  %shr277 = lshr i64 -1, %sh_prom276, !dbg !11408
  %and278 = and i64 %add272, %shr277, !dbg !11408
  %add279 = add i64 0, %and278, !dbg !11408
  %and280 = and i64 %conv268, %add279, !dbg !11408
  %115 = load i32, i32* %_pos265, align 4, !dbg !11408
  %sh_prom281 = zext i32 %115 to i64, !dbg !11408
  %shr282 = lshr i64 %and280, %sh_prom281, !dbg !11408
  store i64 %shr282, i64* %tmp267, align 8, !dbg !11408
  %116 = load i64, i64* %tmp267, align 8, !dbg !11408
  %tobool283 = icmp ne i64 %116, 0, !dbg !11410
  br i1 %tobool283, label %if.then284, label %if.end287, !dbg !11411

if.then284:                                       ; preds = %if.end264
  %117 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !11412
  %call285 = call i64 @xlgmac_mmc_read(%struct.xlgmac_pdata* %117, i32 2384) #7, !dbg !11413
  %118 = load %struct.xlgmac_stats*, %struct.xlgmac_stats** %stats, align 8, !dbg !11414
  %rx128to255octets_gb = getelementptr inbounds %struct.xlgmac_stats, %struct.xlgmac_stats* %118, i32 0, i32 30, !dbg !11415
  %119 = load i64, i64* %rx128to255octets_gb, align 8, !dbg !11416
  %add286 = add i64 %119, %call285, !dbg !11416
  store i64 %add286, i64* %rx128to255octets_gb, align 8, !dbg !11416
  br label %if.end287, !dbg !11414

if.end287:                                        ; preds = %if.then284, %if.end264
  call void @llvm.dbg.declare(metadata i32* %_pos288, metadata !11417, metadata !DIExpression()), !dbg !11420
  store i32 13, i32* %_pos288, align 4, !dbg !11420
  call void @llvm.dbg.declare(metadata i32* %_len289, metadata !11421, metadata !DIExpression()), !dbg !11420
  store i32 1, i32* %_len289, align 4, !dbg !11420
  %120 = load i32, i32* %mmc_isr, align 4, !dbg !11420
  %conv291 = zext i32 %120 to i64, !dbg !11420
  %121 = load i32, i32* %_pos288, align 4, !dbg !11420
  %sh_prom292 = zext i32 %121 to i64, !dbg !11420
  %shl293 = shl i64 1, %sh_prom292, !dbg !11420
  %sub294 = sub i64 -1, %shl293, !dbg !11420
  %add295 = add i64 %sub294, 1, !dbg !11420
  %122 = load i32, i32* %_pos288, align 4, !dbg !11420
  %123 = load i32, i32* %_len289, align 4, !dbg !11420
  %add296 = add i32 %122, %123, !dbg !11420
  %sub297 = sub i32 %add296, 1, !dbg !11420
  %sub298 = sub i32 63, %sub297, !dbg !11420
  %sh_prom299 = zext i32 %sub298 to i64, !dbg !11420
  %shr300 = lshr i64 -1, %sh_prom299, !dbg !11420
  %and301 = and i64 %add295, %shr300, !dbg !11420
  %add302 = add i64 0, %and301, !dbg !11420
  %and303 = and i64 %conv291, %add302, !dbg !11420
  %124 = load i32, i32* %_pos288, align 4, !dbg !11420
  %sh_prom304 = zext i32 %124 to i64, !dbg !11420
  %shr305 = lshr i64 %and303, %sh_prom304, !dbg !11420
  store i64 %shr305, i64* %tmp290, align 8, !dbg !11420
  %125 = load i64, i64* %tmp290, align 8, !dbg !11420
  %tobool306 = icmp ne i64 %125, 0, !dbg !11422
  br i1 %tobool306, label %if.then307, label %if.end310, !dbg !11423

if.then307:                                       ; preds = %if.end287
  %126 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !11424
  %call308 = call i64 @xlgmac_mmc_read(%struct.xlgmac_pdata* %126, i32 2392) #7, !dbg !11425
  %127 = load %struct.xlgmac_stats*, %struct.xlgmac_stats** %stats, align 8, !dbg !11426
  %rx256to511octets_gb = getelementptr inbounds %struct.xlgmac_stats, %struct.xlgmac_stats* %127, i32 0, i32 31, !dbg !11427
  %128 = load i64, i64* %rx256to511octets_gb, align 8, !dbg !11428
  %add309 = add i64 %128, %call308, !dbg !11428
  store i64 %add309, i64* %rx256to511octets_gb, align 8, !dbg !11428
  br label %if.end310, !dbg !11426

if.end310:                                        ; preds = %if.then307, %if.end287
  call void @llvm.dbg.declare(metadata i32* %_pos311, metadata !11429, metadata !DIExpression()), !dbg !11432
  store i32 14, i32* %_pos311, align 4, !dbg !11432
  call void @llvm.dbg.declare(metadata i32* %_len312, metadata !11433, metadata !DIExpression()), !dbg !11432
  store i32 1, i32* %_len312, align 4, !dbg !11432
  %129 = load i32, i32* %mmc_isr, align 4, !dbg !11432
  %conv314 = zext i32 %129 to i64, !dbg !11432
  %130 = load i32, i32* %_pos311, align 4, !dbg !11432
  %sh_prom315 = zext i32 %130 to i64, !dbg !11432
  %shl316 = shl i64 1, %sh_prom315, !dbg !11432
  %sub317 = sub i64 -1, %shl316, !dbg !11432
  %add318 = add i64 %sub317, 1, !dbg !11432
  %131 = load i32, i32* %_pos311, align 4, !dbg !11432
  %132 = load i32, i32* %_len312, align 4, !dbg !11432
  %add319 = add i32 %131, %132, !dbg !11432
  %sub320 = sub i32 %add319, 1, !dbg !11432
  %sub321 = sub i32 63, %sub320, !dbg !11432
  %sh_prom322 = zext i32 %sub321 to i64, !dbg !11432
  %shr323 = lshr i64 -1, %sh_prom322, !dbg !11432
  %and324 = and i64 %add318, %shr323, !dbg !11432
  %add325 = add i64 0, %and324, !dbg !11432
  %and326 = and i64 %conv314, %add325, !dbg !11432
  %133 = load i32, i32* %_pos311, align 4, !dbg !11432
  %sh_prom327 = zext i32 %133 to i64, !dbg !11432
  %shr328 = lshr i64 %and326, %sh_prom327, !dbg !11432
  store i64 %shr328, i64* %tmp313, align 8, !dbg !11432
  %134 = load i64, i64* %tmp313, align 8, !dbg !11432
  %tobool329 = icmp ne i64 %134, 0, !dbg !11434
  br i1 %tobool329, label %if.then330, label %if.end333, !dbg !11435

if.then330:                                       ; preds = %if.end310
  %135 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !11436
  %call331 = call i64 @xlgmac_mmc_read(%struct.xlgmac_pdata* %135, i32 2400) #7, !dbg !11437
  %136 = load %struct.xlgmac_stats*, %struct.xlgmac_stats** %stats, align 8, !dbg !11438
  %rx512to1023octets_gb = getelementptr inbounds %struct.xlgmac_stats, %struct.xlgmac_stats* %136, i32 0, i32 32, !dbg !11439
  %137 = load i64, i64* %rx512to1023octets_gb, align 8, !dbg !11440
  %add332 = add i64 %137, %call331, !dbg !11440
  store i64 %add332, i64* %rx512to1023octets_gb, align 8, !dbg !11440
  br label %if.end333, !dbg !11438

if.end333:                                        ; preds = %if.then330, %if.end310
  call void @llvm.dbg.declare(metadata i32* %_pos334, metadata !11441, metadata !DIExpression()), !dbg !11444
  store i32 15, i32* %_pos334, align 4, !dbg !11444
  call void @llvm.dbg.declare(metadata i32* %_len335, metadata !11445, metadata !DIExpression()), !dbg !11444
  store i32 1, i32* %_len335, align 4, !dbg !11444
  %138 = load i32, i32* %mmc_isr, align 4, !dbg !11444
  %conv337 = zext i32 %138 to i64, !dbg !11444
  %139 = load i32, i32* %_pos334, align 4, !dbg !11444
  %sh_prom338 = zext i32 %139 to i64, !dbg !11444
  %shl339 = shl i64 1, %sh_prom338, !dbg !11444
  %sub340 = sub i64 -1, %shl339, !dbg !11444
  %add341 = add i64 %sub340, 1, !dbg !11444
  %140 = load i32, i32* %_pos334, align 4, !dbg !11444
  %141 = load i32, i32* %_len335, align 4, !dbg !11444
  %add342 = add i32 %140, %141, !dbg !11444
  %sub343 = sub i32 %add342, 1, !dbg !11444
  %sub344 = sub i32 63, %sub343, !dbg !11444
  %sh_prom345 = zext i32 %sub344 to i64, !dbg !11444
  %shr346 = lshr i64 -1, %sh_prom345, !dbg !11444
  %and347 = and i64 %add341, %shr346, !dbg !11444
  %add348 = add i64 0, %and347, !dbg !11444
  %and349 = and i64 %conv337, %add348, !dbg !11444
  %142 = load i32, i32* %_pos334, align 4, !dbg !11444
  %sh_prom350 = zext i32 %142 to i64, !dbg !11444
  %shr351 = lshr i64 %and349, %sh_prom350, !dbg !11444
  store i64 %shr351, i64* %tmp336, align 8, !dbg !11444
  %143 = load i64, i64* %tmp336, align 8, !dbg !11444
  %tobool352 = icmp ne i64 %143, 0, !dbg !11446
  br i1 %tobool352, label %if.then353, label %if.end356, !dbg !11447

if.then353:                                       ; preds = %if.end333
  %144 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !11448
  %call354 = call i64 @xlgmac_mmc_read(%struct.xlgmac_pdata* %144, i32 2408) #7, !dbg !11449
  %145 = load %struct.xlgmac_stats*, %struct.xlgmac_stats** %stats, align 8, !dbg !11450
  %rx1024tomaxoctets_gb = getelementptr inbounds %struct.xlgmac_stats, %struct.xlgmac_stats* %145, i32 0, i32 33, !dbg !11451
  %146 = load i64, i64* %rx1024tomaxoctets_gb, align 8, !dbg !11452
  %add355 = add i64 %146, %call354, !dbg !11452
  store i64 %add355, i64* %rx1024tomaxoctets_gb, align 8, !dbg !11452
  br label %if.end356, !dbg !11450

if.end356:                                        ; preds = %if.then353, %if.end333
  call void @llvm.dbg.declare(metadata i32* %_pos357, metadata !11453, metadata !DIExpression()), !dbg !11456
  store i32 16, i32* %_pos357, align 4, !dbg !11456
  call void @llvm.dbg.declare(metadata i32* %_len358, metadata !11457, metadata !DIExpression()), !dbg !11456
  store i32 1, i32* %_len358, align 4, !dbg !11456
  %147 = load i32, i32* %mmc_isr, align 4, !dbg !11456
  %conv360 = zext i32 %147 to i64, !dbg !11456
  %148 = load i32, i32* %_pos357, align 4, !dbg !11456
  %sh_prom361 = zext i32 %148 to i64, !dbg !11456
  %shl362 = shl i64 1, %sh_prom361, !dbg !11456
  %sub363 = sub i64 -1, %shl362, !dbg !11456
  %add364 = add i64 %sub363, 1, !dbg !11456
  %149 = load i32, i32* %_pos357, align 4, !dbg !11456
  %150 = load i32, i32* %_len358, align 4, !dbg !11456
  %add365 = add i32 %149, %150, !dbg !11456
  %sub366 = sub i32 %add365, 1, !dbg !11456
  %sub367 = sub i32 63, %sub366, !dbg !11456
  %sh_prom368 = zext i32 %sub367 to i64, !dbg !11456
  %shr369 = lshr i64 -1, %sh_prom368, !dbg !11456
  %and370 = and i64 %add364, %shr369, !dbg !11456
  %add371 = add i64 0, %and370, !dbg !11456
  %and372 = and i64 %conv360, %add371, !dbg !11456
  %151 = load i32, i32* %_pos357, align 4, !dbg !11456
  %sh_prom373 = zext i32 %151 to i64, !dbg !11456
  %shr374 = lshr i64 %and372, %sh_prom373, !dbg !11456
  store i64 %shr374, i64* %tmp359, align 8, !dbg !11456
  %152 = load i64, i64* %tmp359, align 8, !dbg !11456
  %tobool375 = icmp ne i64 %152, 0, !dbg !11458
  br i1 %tobool375, label %if.then376, label %if.end379, !dbg !11459

if.then376:                                       ; preds = %if.end356
  %153 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !11460
  %call377 = call i64 @xlgmac_mmc_read(%struct.xlgmac_pdata* %153, i32 2416) #7, !dbg !11461
  %154 = load %struct.xlgmac_stats*, %struct.xlgmac_stats** %stats, align 8, !dbg !11462
  %rxunicastframes_g = getelementptr inbounds %struct.xlgmac_stats, %struct.xlgmac_stats* %154, i32 0, i32 34, !dbg !11463
  %155 = load i64, i64* %rxunicastframes_g, align 8, !dbg !11464
  %add378 = add i64 %155, %call377, !dbg !11464
  store i64 %add378, i64* %rxunicastframes_g, align 8, !dbg !11464
  br label %if.end379, !dbg !11462

if.end379:                                        ; preds = %if.then376, %if.end356
  call void @llvm.dbg.declare(metadata i32* %_pos380, metadata !11465, metadata !DIExpression()), !dbg !11468
  store i32 17, i32* %_pos380, align 4, !dbg !11468
  call void @llvm.dbg.declare(metadata i32* %_len381, metadata !11469, metadata !DIExpression()), !dbg !11468
  store i32 1, i32* %_len381, align 4, !dbg !11468
  %156 = load i32, i32* %mmc_isr, align 4, !dbg !11468
  %conv383 = zext i32 %156 to i64, !dbg !11468
  %157 = load i32, i32* %_pos380, align 4, !dbg !11468
  %sh_prom384 = zext i32 %157 to i64, !dbg !11468
  %shl385 = shl i64 1, %sh_prom384, !dbg !11468
  %sub386 = sub i64 -1, %shl385, !dbg !11468
  %add387 = add i64 %sub386, 1, !dbg !11468
  %158 = load i32, i32* %_pos380, align 4, !dbg !11468
  %159 = load i32, i32* %_len381, align 4, !dbg !11468
  %add388 = add i32 %158, %159, !dbg !11468
  %sub389 = sub i32 %add388, 1, !dbg !11468
  %sub390 = sub i32 63, %sub389, !dbg !11468
  %sh_prom391 = zext i32 %sub390 to i64, !dbg !11468
  %shr392 = lshr i64 -1, %sh_prom391, !dbg !11468
  %and393 = and i64 %add387, %shr392, !dbg !11468
  %add394 = add i64 0, %and393, !dbg !11468
  %and395 = and i64 %conv383, %add394, !dbg !11468
  %160 = load i32, i32* %_pos380, align 4, !dbg !11468
  %sh_prom396 = zext i32 %160 to i64, !dbg !11468
  %shr397 = lshr i64 %and395, %sh_prom396, !dbg !11468
  store i64 %shr397, i64* %tmp382, align 8, !dbg !11468
  %161 = load i64, i64* %tmp382, align 8, !dbg !11468
  %tobool398 = icmp ne i64 %161, 0, !dbg !11470
  br i1 %tobool398, label %if.then399, label %if.end402, !dbg !11471

if.then399:                                       ; preds = %if.end379
  %162 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !11472
  %call400 = call i64 @xlgmac_mmc_read(%struct.xlgmac_pdata* %162, i32 2424) #7, !dbg !11473
  %163 = load %struct.xlgmac_stats*, %struct.xlgmac_stats** %stats, align 8, !dbg !11474
  %rxlengtherror = getelementptr inbounds %struct.xlgmac_stats, %struct.xlgmac_stats* %163, i32 0, i32 35, !dbg !11475
  %164 = load i64, i64* %rxlengtherror, align 8, !dbg !11476
  %add401 = add i64 %164, %call400, !dbg !11476
  store i64 %add401, i64* %rxlengtherror, align 8, !dbg !11476
  br label %if.end402, !dbg !11474

if.end402:                                        ; preds = %if.then399, %if.end379
  call void @llvm.dbg.declare(metadata i32* %_pos403, metadata !11477, metadata !DIExpression()), !dbg !11480
  store i32 18, i32* %_pos403, align 4, !dbg !11480
  call void @llvm.dbg.declare(metadata i32* %_len404, metadata !11481, metadata !DIExpression()), !dbg !11480
  store i32 1, i32* %_len404, align 4, !dbg !11480
  %165 = load i32, i32* %mmc_isr, align 4, !dbg !11480
  %conv406 = zext i32 %165 to i64, !dbg !11480
  %166 = load i32, i32* %_pos403, align 4, !dbg !11480
  %sh_prom407 = zext i32 %166 to i64, !dbg !11480
  %shl408 = shl i64 1, %sh_prom407, !dbg !11480
  %sub409 = sub i64 -1, %shl408, !dbg !11480
  %add410 = add i64 %sub409, 1, !dbg !11480
  %167 = load i32, i32* %_pos403, align 4, !dbg !11480
  %168 = load i32, i32* %_len404, align 4, !dbg !11480
  %add411 = add i32 %167, %168, !dbg !11480
  %sub412 = sub i32 %add411, 1, !dbg !11480
  %sub413 = sub i32 63, %sub412, !dbg !11480
  %sh_prom414 = zext i32 %sub413 to i64, !dbg !11480
  %shr415 = lshr i64 -1, %sh_prom414, !dbg !11480
  %and416 = and i64 %add410, %shr415, !dbg !11480
  %add417 = add i64 0, %and416, !dbg !11480
  %and418 = and i64 %conv406, %add417, !dbg !11480
  %169 = load i32, i32* %_pos403, align 4, !dbg !11480
  %sh_prom419 = zext i32 %169 to i64, !dbg !11480
  %shr420 = lshr i64 %and418, %sh_prom419, !dbg !11480
  store i64 %shr420, i64* %tmp405, align 8, !dbg !11480
  %170 = load i64, i64* %tmp405, align 8, !dbg !11480
  %tobool421 = icmp ne i64 %170, 0, !dbg !11482
  br i1 %tobool421, label %if.then422, label %if.end425, !dbg !11483

if.then422:                                       ; preds = %if.end402
  %171 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !11484
  %call423 = call i64 @xlgmac_mmc_read(%struct.xlgmac_pdata* %171, i32 2432) #7, !dbg !11485
  %172 = load %struct.xlgmac_stats*, %struct.xlgmac_stats** %stats, align 8, !dbg !11486
  %rxoutofrangetype = getelementptr inbounds %struct.xlgmac_stats, %struct.xlgmac_stats* %172, i32 0, i32 36, !dbg !11487
  %173 = load i64, i64* %rxoutofrangetype, align 8, !dbg !11488
  %add424 = add i64 %173, %call423, !dbg !11488
  store i64 %add424, i64* %rxoutofrangetype, align 8, !dbg !11488
  br label %if.end425, !dbg !11486

if.end425:                                        ; preds = %if.then422, %if.end402
  call void @llvm.dbg.declare(metadata i32* %_pos426, metadata !11489, metadata !DIExpression()), !dbg !11492
  store i32 19, i32* %_pos426, align 4, !dbg !11492
  call void @llvm.dbg.declare(metadata i32* %_len427, metadata !11493, metadata !DIExpression()), !dbg !11492
  store i32 1, i32* %_len427, align 4, !dbg !11492
  %174 = load i32, i32* %mmc_isr, align 4, !dbg !11492
  %conv429 = zext i32 %174 to i64, !dbg !11492
  %175 = load i32, i32* %_pos426, align 4, !dbg !11492
  %sh_prom430 = zext i32 %175 to i64, !dbg !11492
  %shl431 = shl i64 1, %sh_prom430, !dbg !11492
  %sub432 = sub i64 -1, %shl431, !dbg !11492
  %add433 = add i64 %sub432, 1, !dbg !11492
  %176 = load i32, i32* %_pos426, align 4, !dbg !11492
  %177 = load i32, i32* %_len427, align 4, !dbg !11492
  %add434 = add i32 %176, %177, !dbg !11492
  %sub435 = sub i32 %add434, 1, !dbg !11492
  %sub436 = sub i32 63, %sub435, !dbg !11492
  %sh_prom437 = zext i32 %sub436 to i64, !dbg !11492
  %shr438 = lshr i64 -1, %sh_prom437, !dbg !11492
  %and439 = and i64 %add433, %shr438, !dbg !11492
  %add440 = add i64 0, %and439, !dbg !11492
  %and441 = and i64 %conv429, %add440, !dbg !11492
  %178 = load i32, i32* %_pos426, align 4, !dbg !11492
  %sh_prom442 = zext i32 %178 to i64, !dbg !11492
  %shr443 = lshr i64 %and441, %sh_prom442, !dbg !11492
  store i64 %shr443, i64* %tmp428, align 8, !dbg !11492
  %179 = load i64, i64* %tmp428, align 8, !dbg !11492
  %tobool444 = icmp ne i64 %179, 0, !dbg !11494
  br i1 %tobool444, label %if.then445, label %if.end448, !dbg !11495

if.then445:                                       ; preds = %if.end425
  %180 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !11496
  %call446 = call i64 @xlgmac_mmc_read(%struct.xlgmac_pdata* %180, i32 2440) #7, !dbg !11497
  %181 = load %struct.xlgmac_stats*, %struct.xlgmac_stats** %stats, align 8, !dbg !11498
  %rxpauseframes = getelementptr inbounds %struct.xlgmac_stats, %struct.xlgmac_stats* %181, i32 0, i32 37, !dbg !11499
  %182 = load i64, i64* %rxpauseframes, align 8, !dbg !11500
  %add447 = add i64 %182, %call446, !dbg !11500
  store i64 %add447, i64* %rxpauseframes, align 8, !dbg !11500
  br label %if.end448, !dbg !11498

if.end448:                                        ; preds = %if.then445, %if.end425
  call void @llvm.dbg.declare(metadata i32* %_pos449, metadata !11501, metadata !DIExpression()), !dbg !11504
  store i32 20, i32* %_pos449, align 4, !dbg !11504
  call void @llvm.dbg.declare(metadata i32* %_len450, metadata !11505, metadata !DIExpression()), !dbg !11504
  store i32 1, i32* %_len450, align 4, !dbg !11504
  %183 = load i32, i32* %mmc_isr, align 4, !dbg !11504
  %conv452 = zext i32 %183 to i64, !dbg !11504
  %184 = load i32, i32* %_pos449, align 4, !dbg !11504
  %sh_prom453 = zext i32 %184 to i64, !dbg !11504
  %shl454 = shl i64 1, %sh_prom453, !dbg !11504
  %sub455 = sub i64 -1, %shl454, !dbg !11504
  %add456 = add i64 %sub455, 1, !dbg !11504
  %185 = load i32, i32* %_pos449, align 4, !dbg !11504
  %186 = load i32, i32* %_len450, align 4, !dbg !11504
  %add457 = add i32 %185, %186, !dbg !11504
  %sub458 = sub i32 %add457, 1, !dbg !11504
  %sub459 = sub i32 63, %sub458, !dbg !11504
  %sh_prom460 = zext i32 %sub459 to i64, !dbg !11504
  %shr461 = lshr i64 -1, %sh_prom460, !dbg !11504
  %and462 = and i64 %add456, %shr461, !dbg !11504
  %add463 = add i64 0, %and462, !dbg !11504
  %and464 = and i64 %conv452, %add463, !dbg !11504
  %187 = load i32, i32* %_pos449, align 4, !dbg !11504
  %sh_prom465 = zext i32 %187 to i64, !dbg !11504
  %shr466 = lshr i64 %and464, %sh_prom465, !dbg !11504
  store i64 %shr466, i64* %tmp451, align 8, !dbg !11504
  %188 = load i64, i64* %tmp451, align 8, !dbg !11504
  %tobool467 = icmp ne i64 %188, 0, !dbg !11506
  br i1 %tobool467, label %if.then468, label %if.end471, !dbg !11507

if.then468:                                       ; preds = %if.end448
  %189 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !11508
  %call469 = call i64 @xlgmac_mmc_read(%struct.xlgmac_pdata* %189, i32 2448) #7, !dbg !11509
  %190 = load %struct.xlgmac_stats*, %struct.xlgmac_stats** %stats, align 8, !dbg !11510
  %rxfifooverflow = getelementptr inbounds %struct.xlgmac_stats, %struct.xlgmac_stats* %190, i32 0, i32 38, !dbg !11511
  %191 = load i64, i64* %rxfifooverflow, align 8, !dbg !11512
  %add470 = add i64 %191, %call469, !dbg !11512
  store i64 %add470, i64* %rxfifooverflow, align 8, !dbg !11512
  br label %if.end471, !dbg !11510

if.end471:                                        ; preds = %if.then468, %if.end448
  call void @llvm.dbg.declare(metadata i32* %_pos472, metadata !11513, metadata !DIExpression()), !dbg !11516
  store i32 21, i32* %_pos472, align 4, !dbg !11516
  call void @llvm.dbg.declare(metadata i32* %_len473, metadata !11517, metadata !DIExpression()), !dbg !11516
  store i32 1, i32* %_len473, align 4, !dbg !11516
  %192 = load i32, i32* %mmc_isr, align 4, !dbg !11516
  %conv475 = zext i32 %192 to i64, !dbg !11516
  %193 = load i32, i32* %_pos472, align 4, !dbg !11516
  %sh_prom476 = zext i32 %193 to i64, !dbg !11516
  %shl477 = shl i64 1, %sh_prom476, !dbg !11516
  %sub478 = sub i64 -1, %shl477, !dbg !11516
  %add479 = add i64 %sub478, 1, !dbg !11516
  %194 = load i32, i32* %_pos472, align 4, !dbg !11516
  %195 = load i32, i32* %_len473, align 4, !dbg !11516
  %add480 = add i32 %194, %195, !dbg !11516
  %sub481 = sub i32 %add480, 1, !dbg !11516
  %sub482 = sub i32 63, %sub481, !dbg !11516
  %sh_prom483 = zext i32 %sub482 to i64, !dbg !11516
  %shr484 = lshr i64 -1, %sh_prom483, !dbg !11516
  %and485 = and i64 %add479, %shr484, !dbg !11516
  %add486 = add i64 0, %and485, !dbg !11516
  %and487 = and i64 %conv475, %add486, !dbg !11516
  %196 = load i32, i32* %_pos472, align 4, !dbg !11516
  %sh_prom488 = zext i32 %196 to i64, !dbg !11516
  %shr489 = lshr i64 %and487, %sh_prom488, !dbg !11516
  store i64 %shr489, i64* %tmp474, align 8, !dbg !11516
  %197 = load i64, i64* %tmp474, align 8, !dbg !11516
  %tobool490 = icmp ne i64 %197, 0, !dbg !11518
  br i1 %tobool490, label %if.then491, label %if.end494, !dbg !11519

if.then491:                                       ; preds = %if.end471
  %198 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !11520
  %call492 = call i64 @xlgmac_mmc_read(%struct.xlgmac_pdata* %198, i32 2456) #7, !dbg !11521
  %199 = load %struct.xlgmac_stats*, %struct.xlgmac_stats** %stats, align 8, !dbg !11522
  %rxvlanframes_gb = getelementptr inbounds %struct.xlgmac_stats, %struct.xlgmac_stats* %199, i32 0, i32 39, !dbg !11523
  %200 = load i64, i64* %rxvlanframes_gb, align 8, !dbg !11524
  %add493 = add i64 %200, %call492, !dbg !11524
  store i64 %add493, i64* %rxvlanframes_gb, align 8, !dbg !11524
  br label %if.end494, !dbg !11522

if.end494:                                        ; preds = %if.then491, %if.end471
  call void @llvm.dbg.declare(metadata i32* %_pos495, metadata !11525, metadata !DIExpression()), !dbg !11528
  store i32 22, i32* %_pos495, align 4, !dbg !11528
  call void @llvm.dbg.declare(metadata i32* %_len496, metadata !11529, metadata !DIExpression()), !dbg !11528
  store i32 1, i32* %_len496, align 4, !dbg !11528
  %201 = load i32, i32* %mmc_isr, align 4, !dbg !11528
  %conv498 = zext i32 %201 to i64, !dbg !11528
  %202 = load i32, i32* %_pos495, align 4, !dbg !11528
  %sh_prom499 = zext i32 %202 to i64, !dbg !11528
  %shl500 = shl i64 1, %sh_prom499, !dbg !11528
  %sub501 = sub i64 -1, %shl500, !dbg !11528
  %add502 = add i64 %sub501, 1, !dbg !11528
  %203 = load i32, i32* %_pos495, align 4, !dbg !11528
  %204 = load i32, i32* %_len496, align 4, !dbg !11528
  %add503 = add i32 %203, %204, !dbg !11528
  %sub504 = sub i32 %add503, 1, !dbg !11528
  %sub505 = sub i32 63, %sub504, !dbg !11528
  %sh_prom506 = zext i32 %sub505 to i64, !dbg !11528
  %shr507 = lshr i64 -1, %sh_prom506, !dbg !11528
  %and508 = and i64 %add502, %shr507, !dbg !11528
  %add509 = add i64 0, %and508, !dbg !11528
  %and510 = and i64 %conv498, %add509, !dbg !11528
  %205 = load i32, i32* %_pos495, align 4, !dbg !11528
  %sh_prom511 = zext i32 %205 to i64, !dbg !11528
  %shr512 = lshr i64 %and510, %sh_prom511, !dbg !11528
  store i64 %shr512, i64* %tmp497, align 8, !dbg !11528
  %206 = load i64, i64* %tmp497, align 8, !dbg !11528
  %tobool513 = icmp ne i64 %206, 0, !dbg !11530
  br i1 %tobool513, label %if.then514, label %if.end517, !dbg !11531

if.then514:                                       ; preds = %if.end494
  %207 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !11532
  %call515 = call i64 @xlgmac_mmc_read(%struct.xlgmac_pdata* %207, i32 2464) #7, !dbg !11533
  %208 = load %struct.xlgmac_stats*, %struct.xlgmac_stats** %stats, align 8, !dbg !11534
  %rxwatchdogerror = getelementptr inbounds %struct.xlgmac_stats, %struct.xlgmac_stats* %208, i32 0, i32 40, !dbg !11535
  %209 = load i64, i64* %rxwatchdogerror, align 8, !dbg !11536
  %add516 = add i64 %209, %call515, !dbg !11536
  store i64 %add516, i64* %rxwatchdogerror, align 8, !dbg !11536
  br label %if.end517, !dbg !11534

if.end517:                                        ; preds = %if.then514, %if.end494
  ret void, !dbg !11537
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @xlgmac_read_mmc_stats(%struct.xlgmac_pdata* %pdata) #0 !dbg !11538 {
entry:
  %pdata.addr = alloca %struct.xlgmac_pdata*, align 8
  %stats = alloca %struct.xlgmac_stats*, align 8
  %regval = alloca i32, align 4
  %_var = alloca i32, align 4
  %_pos = alloca i32, align 4
  %_len = alloca i32, align 4
  %_val = alloca i32, align 4
  %tmp = alloca i32, align 4
  %_var113 = alloca i32, align 4
  %_pos114 = alloca i32, align 4
  %_len115 = alloca i32, align 4
  %_val116 = alloca i32, align 4
  %tmp132 = alloca i32, align 4
  store %struct.xlgmac_pdata* %pdata, %struct.xlgmac_pdata** %pdata.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xlgmac_pdata** %pdata.addr, metadata !11539, metadata !DIExpression()), !dbg !11540
  call void @llvm.dbg.declare(metadata %struct.xlgmac_stats** %stats, metadata !11541, metadata !DIExpression()), !dbg !11542
  %0 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !11543
  %stats1 = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %0, i32 0, i32 4, !dbg !11544
  store %struct.xlgmac_stats* %stats1, %struct.xlgmac_stats** %stats, align 8, !dbg !11542
  call void @llvm.dbg.declare(metadata i32* %regval, metadata !11545, metadata !DIExpression()), !dbg !11546
  %1 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !11547
  %mac_regs = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %1, i32 0, i32 6, !dbg !11548
  %2 = load i8*, i8** %mac_regs, align 8, !dbg !11548
  %add.ptr = getelementptr i8, i8* %2, i64 2048, !dbg !11549
  %call = call i32 @readl(i8* %add.ptr) #7, !dbg !11550
  store i32 %call, i32* %regval, align 4, !dbg !11551
  call void @llvm.dbg.declare(metadata i32* %_var, metadata !11552, metadata !DIExpression()), !dbg !11554
  %3 = load i32, i32* %regval, align 4, !dbg !11554
  store i32 %3, i32* %_var, align 4, !dbg !11554
  call void @llvm.dbg.declare(metadata i32* %_pos, metadata !11555, metadata !DIExpression()), !dbg !11554
  store i32 3, i32* %_pos, align 4, !dbg !11554
  call void @llvm.dbg.declare(metadata i32* %_len, metadata !11556, metadata !DIExpression()), !dbg !11554
  store i32 1, i32* %_len, align 4, !dbg !11554
  call void @llvm.dbg.declare(metadata i32* %_val, metadata !11557, metadata !DIExpression()), !dbg !11554
  store i32 1, i32* %_val, align 4, !dbg !11554
  %4 = load i32, i32* %_val, align 4, !dbg !11554
  %5 = load i32, i32* %_pos, align 4, !dbg !11554
  %shl = shl i32 %4, %5, !dbg !11554
  %conv = sext i32 %shl to i64, !dbg !11554
  %6 = load i32, i32* %_pos, align 4, !dbg !11554
  %sh_prom = zext i32 %6 to i64, !dbg !11554
  %shl2 = shl i64 1, %sh_prom, !dbg !11554
  %sub = sub i64 -1, %shl2, !dbg !11554
  %add = add i64 %sub, 1, !dbg !11554
  %7 = load i32, i32* %_pos, align 4, !dbg !11554
  %8 = load i32, i32* %_len, align 4, !dbg !11554
  %add3 = add i32 %7, %8, !dbg !11554
  %sub4 = sub i32 %add3, 1, !dbg !11554
  %sub5 = sub i32 63, %sub4, !dbg !11554
  %sh_prom6 = zext i32 %sub5 to i64, !dbg !11554
  %shr = lshr i64 -1, %sh_prom6, !dbg !11554
  %and = and i64 %add, %shr, !dbg !11554
  %add7 = add i64 0, %and, !dbg !11554
  %and8 = and i64 %conv, %add7, !dbg !11554
  %conv9 = trunc i64 %and8 to i32, !dbg !11554
  store i32 %conv9, i32* %_val, align 4, !dbg !11554
  %9 = load i32, i32* %_var, align 4, !dbg !11554
  %conv10 = zext i32 %9 to i64, !dbg !11554
  %10 = load i32, i32* %_pos, align 4, !dbg !11554
  %sh_prom11 = zext i32 %10 to i64, !dbg !11554
  %shl12 = shl i64 1, %sh_prom11, !dbg !11554
  %sub13 = sub i64 -1, %shl12, !dbg !11554
  %add14 = add i64 %sub13, 1, !dbg !11554
  %11 = load i32, i32* %_pos, align 4, !dbg !11554
  %12 = load i32, i32* %_len, align 4, !dbg !11554
  %add15 = add i32 %11, %12, !dbg !11554
  %sub16 = sub i32 %add15, 1, !dbg !11554
  %sub17 = sub i32 63, %sub16, !dbg !11554
  %sh_prom18 = zext i32 %sub17 to i64, !dbg !11554
  %shr19 = lshr i64 -1, %sh_prom18, !dbg !11554
  %and20 = and i64 %add14, %shr19, !dbg !11554
  %add21 = add i64 0, %and20, !dbg !11554
  %neg = xor i64 %add21, -1, !dbg !11554
  %and22 = and i64 %conv10, %neg, !dbg !11554
  %13 = load i32, i32* %_val, align 4, !dbg !11554
  %conv23 = sext i32 %13 to i64, !dbg !11554
  %or = or i64 %and22, %conv23, !dbg !11554
  %conv24 = trunc i64 %or to i32, !dbg !11554
  store i32 %conv24, i32* %_var, align 4, !dbg !11554
  store i32 %conv24, i32* %tmp, align 4, !dbg !11554
  %14 = load i32, i32* %tmp, align 4, !dbg !11554
  store i32 %14, i32* %regval, align 4, !dbg !11558
  %15 = load i32, i32* %regval, align 4, !dbg !11559
  %16 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !11560
  %mac_regs25 = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %16, i32 0, i32 6, !dbg !11561
  %17 = load i8*, i8** %mac_regs25, align 8, !dbg !11561
  %add.ptr26 = getelementptr i8, i8* %17, i64 2048, !dbg !11562
  call void @writel(i32 %15, i8* %add.ptr26) #7, !dbg !11563
  %18 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !11564
  %call27 = call i64 @xlgmac_mmc_read(%struct.xlgmac_pdata* %18, i32 2068) #7, !dbg !11565
  %19 = load %struct.xlgmac_stats*, %struct.xlgmac_stats** %stats, align 8, !dbg !11566
  %txoctetcount_gb = getelementptr inbounds %struct.xlgmac_stats, %struct.xlgmac_stats* %19, i32 0, i32 0, !dbg !11567
  %20 = load i64, i64* %txoctetcount_gb, align 8, !dbg !11568
  %add28 = add i64 %20, %call27, !dbg !11568
  store i64 %add28, i64* %txoctetcount_gb, align 8, !dbg !11568
  %21 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !11569
  %call29 = call i64 @xlgmac_mmc_read(%struct.xlgmac_pdata* %21, i32 2076) #7, !dbg !11570
  %22 = load %struct.xlgmac_stats*, %struct.xlgmac_stats** %stats, align 8, !dbg !11571
  %txframecount_gb = getelementptr inbounds %struct.xlgmac_stats, %struct.xlgmac_stats* %22, i32 0, i32 1, !dbg !11572
  %23 = load i64, i64* %txframecount_gb, align 8, !dbg !11573
  %add30 = add i64 %23, %call29, !dbg !11573
  store i64 %add30, i64* %txframecount_gb, align 8, !dbg !11573
  %24 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !11574
  %call31 = call i64 @xlgmac_mmc_read(%struct.xlgmac_pdata* %24, i32 2084) #7, !dbg !11575
  %25 = load %struct.xlgmac_stats*, %struct.xlgmac_stats** %stats, align 8, !dbg !11576
  %txbroadcastframes_g = getelementptr inbounds %struct.xlgmac_stats, %struct.xlgmac_stats* %25, i32 0, i32 2, !dbg !11577
  %26 = load i64, i64* %txbroadcastframes_g, align 8, !dbg !11578
  %add32 = add i64 %26, %call31, !dbg !11578
  store i64 %add32, i64* %txbroadcastframes_g, align 8, !dbg !11578
  %27 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !11579
  %call33 = call i64 @xlgmac_mmc_read(%struct.xlgmac_pdata* %27, i32 2092) #7, !dbg !11580
  %28 = load %struct.xlgmac_stats*, %struct.xlgmac_stats** %stats, align 8, !dbg !11581
  %txmulticastframes_g = getelementptr inbounds %struct.xlgmac_stats, %struct.xlgmac_stats* %28, i32 0, i32 3, !dbg !11582
  %29 = load i64, i64* %txmulticastframes_g, align 8, !dbg !11583
  %add34 = add i64 %29, %call33, !dbg !11583
  store i64 %add34, i64* %txmulticastframes_g, align 8, !dbg !11583
  %30 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !11584
  %call35 = call i64 @xlgmac_mmc_read(%struct.xlgmac_pdata* %30, i32 2100) #7, !dbg !11585
  %31 = load %struct.xlgmac_stats*, %struct.xlgmac_stats** %stats, align 8, !dbg !11586
  %tx64octets_gb = getelementptr inbounds %struct.xlgmac_stats, %struct.xlgmac_stats* %31, i32 0, i32 4, !dbg !11587
  %32 = load i64, i64* %tx64octets_gb, align 8, !dbg !11588
  %add36 = add i64 %32, %call35, !dbg !11588
  store i64 %add36, i64* %tx64octets_gb, align 8, !dbg !11588
  %33 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !11589
  %call37 = call i64 @xlgmac_mmc_read(%struct.xlgmac_pdata* %33, i32 2108) #7, !dbg !11590
  %34 = load %struct.xlgmac_stats*, %struct.xlgmac_stats** %stats, align 8, !dbg !11591
  %tx65to127octets_gb = getelementptr inbounds %struct.xlgmac_stats, %struct.xlgmac_stats* %34, i32 0, i32 5, !dbg !11592
  %35 = load i64, i64* %tx65to127octets_gb, align 8, !dbg !11593
  %add38 = add i64 %35, %call37, !dbg !11593
  store i64 %add38, i64* %tx65to127octets_gb, align 8, !dbg !11593
  %36 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !11594
  %call39 = call i64 @xlgmac_mmc_read(%struct.xlgmac_pdata* %36, i32 2116) #7, !dbg !11595
  %37 = load %struct.xlgmac_stats*, %struct.xlgmac_stats** %stats, align 8, !dbg !11596
  %tx128to255octets_gb = getelementptr inbounds %struct.xlgmac_stats, %struct.xlgmac_stats* %37, i32 0, i32 6, !dbg !11597
  %38 = load i64, i64* %tx128to255octets_gb, align 8, !dbg !11598
  %add40 = add i64 %38, %call39, !dbg !11598
  store i64 %add40, i64* %tx128to255octets_gb, align 8, !dbg !11598
  %39 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !11599
  %call41 = call i64 @xlgmac_mmc_read(%struct.xlgmac_pdata* %39, i32 2124) #7, !dbg !11600
  %40 = load %struct.xlgmac_stats*, %struct.xlgmac_stats** %stats, align 8, !dbg !11601
  %tx256to511octets_gb = getelementptr inbounds %struct.xlgmac_stats, %struct.xlgmac_stats* %40, i32 0, i32 7, !dbg !11602
  %41 = load i64, i64* %tx256to511octets_gb, align 8, !dbg !11603
  %add42 = add i64 %41, %call41, !dbg !11603
  store i64 %add42, i64* %tx256to511octets_gb, align 8, !dbg !11603
  %42 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !11604
  %call43 = call i64 @xlgmac_mmc_read(%struct.xlgmac_pdata* %42, i32 2132) #7, !dbg !11605
  %43 = load %struct.xlgmac_stats*, %struct.xlgmac_stats** %stats, align 8, !dbg !11606
  %tx512to1023octets_gb = getelementptr inbounds %struct.xlgmac_stats, %struct.xlgmac_stats* %43, i32 0, i32 8, !dbg !11607
  %44 = load i64, i64* %tx512to1023octets_gb, align 8, !dbg !11608
  %add44 = add i64 %44, %call43, !dbg !11608
  store i64 %add44, i64* %tx512to1023octets_gb, align 8, !dbg !11608
  %45 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !11609
  %call45 = call i64 @xlgmac_mmc_read(%struct.xlgmac_pdata* %45, i32 2140) #7, !dbg !11610
  %46 = load %struct.xlgmac_stats*, %struct.xlgmac_stats** %stats, align 8, !dbg !11611
  %tx1024tomaxoctets_gb = getelementptr inbounds %struct.xlgmac_stats, %struct.xlgmac_stats* %46, i32 0, i32 9, !dbg !11612
  %47 = load i64, i64* %tx1024tomaxoctets_gb, align 8, !dbg !11613
  %add46 = add i64 %47, %call45, !dbg !11613
  store i64 %add46, i64* %tx1024tomaxoctets_gb, align 8, !dbg !11613
  %48 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !11614
  %call47 = call i64 @xlgmac_mmc_read(%struct.xlgmac_pdata* %48, i32 2148) #7, !dbg !11615
  %49 = load %struct.xlgmac_stats*, %struct.xlgmac_stats** %stats, align 8, !dbg !11616
  %txunicastframes_gb = getelementptr inbounds %struct.xlgmac_stats, %struct.xlgmac_stats* %49, i32 0, i32 10, !dbg !11617
  %50 = load i64, i64* %txunicastframes_gb, align 8, !dbg !11618
  %add48 = add i64 %50, %call47, !dbg !11618
  store i64 %add48, i64* %txunicastframes_gb, align 8, !dbg !11618
  %51 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !11619
  %call49 = call i64 @xlgmac_mmc_read(%struct.xlgmac_pdata* %51, i32 2156) #7, !dbg !11620
  %52 = load %struct.xlgmac_stats*, %struct.xlgmac_stats** %stats, align 8, !dbg !11621
  %txmulticastframes_gb = getelementptr inbounds %struct.xlgmac_stats, %struct.xlgmac_stats* %52, i32 0, i32 11, !dbg !11622
  %53 = load i64, i64* %txmulticastframes_gb, align 8, !dbg !11623
  %add50 = add i64 %53, %call49, !dbg !11623
  store i64 %add50, i64* %txmulticastframes_gb, align 8, !dbg !11623
  %54 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !11624
  %call51 = call i64 @xlgmac_mmc_read(%struct.xlgmac_pdata* %54, i32 2164) #7, !dbg !11625
  %55 = load %struct.xlgmac_stats*, %struct.xlgmac_stats** %stats, align 8, !dbg !11626
  %txbroadcastframes_g52 = getelementptr inbounds %struct.xlgmac_stats, %struct.xlgmac_stats* %55, i32 0, i32 2, !dbg !11627
  %56 = load i64, i64* %txbroadcastframes_g52, align 8, !dbg !11628
  %add53 = add i64 %56, %call51, !dbg !11628
  store i64 %add53, i64* %txbroadcastframes_g52, align 8, !dbg !11628
  %57 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !11629
  %call54 = call i64 @xlgmac_mmc_read(%struct.xlgmac_pdata* %57, i32 2172) #7, !dbg !11630
  %58 = load %struct.xlgmac_stats*, %struct.xlgmac_stats** %stats, align 8, !dbg !11631
  %txunderflowerror = getelementptr inbounds %struct.xlgmac_stats, %struct.xlgmac_stats* %58, i32 0, i32 13, !dbg !11632
  %59 = load i64, i64* %txunderflowerror, align 8, !dbg !11633
  %add55 = add i64 %59, %call54, !dbg !11633
  store i64 %add55, i64* %txunderflowerror, align 8, !dbg !11633
  %60 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !11634
  %call56 = call i64 @xlgmac_mmc_read(%struct.xlgmac_pdata* %60, i32 2180) #7, !dbg !11635
  %61 = load %struct.xlgmac_stats*, %struct.xlgmac_stats** %stats, align 8, !dbg !11636
  %txoctetcount_g = getelementptr inbounds %struct.xlgmac_stats, %struct.xlgmac_stats* %61, i32 0, i32 14, !dbg !11637
  %62 = load i64, i64* %txoctetcount_g, align 8, !dbg !11638
  %add57 = add i64 %62, %call56, !dbg !11638
  store i64 %add57, i64* %txoctetcount_g, align 8, !dbg !11638
  %63 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !11639
  %call58 = call i64 @xlgmac_mmc_read(%struct.xlgmac_pdata* %63, i32 2188) #7, !dbg !11640
  %64 = load %struct.xlgmac_stats*, %struct.xlgmac_stats** %stats, align 8, !dbg !11641
  %txframecount_g = getelementptr inbounds %struct.xlgmac_stats, %struct.xlgmac_stats* %64, i32 0, i32 15, !dbg !11642
  %65 = load i64, i64* %txframecount_g, align 8, !dbg !11643
  %add59 = add i64 %65, %call58, !dbg !11643
  store i64 %add59, i64* %txframecount_g, align 8, !dbg !11643
  %66 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !11644
  %call60 = call i64 @xlgmac_mmc_read(%struct.xlgmac_pdata* %66, i32 2196) #7, !dbg !11645
  %67 = load %struct.xlgmac_stats*, %struct.xlgmac_stats** %stats, align 8, !dbg !11646
  %txpauseframes = getelementptr inbounds %struct.xlgmac_stats, %struct.xlgmac_stats* %67, i32 0, i32 16, !dbg !11647
  %68 = load i64, i64* %txpauseframes, align 8, !dbg !11648
  %add61 = add i64 %68, %call60, !dbg !11648
  store i64 %add61, i64* %txpauseframes, align 8, !dbg !11648
  %69 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !11649
  %call62 = call i64 @xlgmac_mmc_read(%struct.xlgmac_pdata* %69, i32 2204) #7, !dbg !11650
  %70 = load %struct.xlgmac_stats*, %struct.xlgmac_stats** %stats, align 8, !dbg !11651
  %txvlanframes_g = getelementptr inbounds %struct.xlgmac_stats, %struct.xlgmac_stats* %70, i32 0, i32 17, !dbg !11652
  %71 = load i64, i64* %txvlanframes_g, align 8, !dbg !11653
  %add63 = add i64 %71, %call62, !dbg !11653
  store i64 %add63, i64* %txvlanframes_g, align 8, !dbg !11653
  %72 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !11654
  %call64 = call i64 @xlgmac_mmc_read(%struct.xlgmac_pdata* %72, i32 2304) #7, !dbg !11655
  %73 = load %struct.xlgmac_stats*, %struct.xlgmac_stats** %stats, align 8, !dbg !11656
  %rxframecount_gb = getelementptr inbounds %struct.xlgmac_stats, %struct.xlgmac_stats* %73, i32 0, i32 18, !dbg !11657
  %74 = load i64, i64* %rxframecount_gb, align 8, !dbg !11658
  %add65 = add i64 %74, %call64, !dbg !11658
  store i64 %add65, i64* %rxframecount_gb, align 8, !dbg !11658
  %75 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !11659
  %call66 = call i64 @xlgmac_mmc_read(%struct.xlgmac_pdata* %75, i32 2312) #7, !dbg !11660
  %76 = load %struct.xlgmac_stats*, %struct.xlgmac_stats** %stats, align 8, !dbg !11661
  %rxoctetcount_gb = getelementptr inbounds %struct.xlgmac_stats, %struct.xlgmac_stats* %76, i32 0, i32 19, !dbg !11662
  %77 = load i64, i64* %rxoctetcount_gb, align 8, !dbg !11663
  %add67 = add i64 %77, %call66, !dbg !11663
  store i64 %add67, i64* %rxoctetcount_gb, align 8, !dbg !11663
  %78 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !11664
  %call68 = call i64 @xlgmac_mmc_read(%struct.xlgmac_pdata* %78, i32 2320) #7, !dbg !11665
  %79 = load %struct.xlgmac_stats*, %struct.xlgmac_stats** %stats, align 8, !dbg !11666
  %rxoctetcount_g = getelementptr inbounds %struct.xlgmac_stats, %struct.xlgmac_stats* %79, i32 0, i32 20, !dbg !11667
  %80 = load i64, i64* %rxoctetcount_g, align 8, !dbg !11668
  %add69 = add i64 %80, %call68, !dbg !11668
  store i64 %add69, i64* %rxoctetcount_g, align 8, !dbg !11668
  %81 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !11669
  %call70 = call i64 @xlgmac_mmc_read(%struct.xlgmac_pdata* %81, i32 2328) #7, !dbg !11670
  %82 = load %struct.xlgmac_stats*, %struct.xlgmac_stats** %stats, align 8, !dbg !11671
  %rxbroadcastframes_g = getelementptr inbounds %struct.xlgmac_stats, %struct.xlgmac_stats* %82, i32 0, i32 21, !dbg !11672
  %83 = load i64, i64* %rxbroadcastframes_g, align 8, !dbg !11673
  %add71 = add i64 %83, %call70, !dbg !11673
  store i64 %add71, i64* %rxbroadcastframes_g, align 8, !dbg !11673
  %84 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !11674
  %call72 = call i64 @xlgmac_mmc_read(%struct.xlgmac_pdata* %84, i32 2336) #7, !dbg !11675
  %85 = load %struct.xlgmac_stats*, %struct.xlgmac_stats** %stats, align 8, !dbg !11676
  %rxmulticastframes_g = getelementptr inbounds %struct.xlgmac_stats, %struct.xlgmac_stats* %85, i32 0, i32 22, !dbg !11677
  %86 = load i64, i64* %rxmulticastframes_g, align 8, !dbg !11678
  %add73 = add i64 %86, %call72, !dbg !11678
  store i64 %add73, i64* %rxmulticastframes_g, align 8, !dbg !11678
  %87 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !11679
  %call74 = call i64 @xlgmac_mmc_read(%struct.xlgmac_pdata* %87, i32 2344) #7, !dbg !11680
  %88 = load %struct.xlgmac_stats*, %struct.xlgmac_stats** %stats, align 8, !dbg !11681
  %rxcrcerror = getelementptr inbounds %struct.xlgmac_stats, %struct.xlgmac_stats* %88, i32 0, i32 23, !dbg !11682
  %89 = load i64, i64* %rxcrcerror, align 8, !dbg !11683
  %add75 = add i64 %89, %call74, !dbg !11683
  store i64 %add75, i64* %rxcrcerror, align 8, !dbg !11683
  %90 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !11684
  %call76 = call i64 @xlgmac_mmc_read(%struct.xlgmac_pdata* %90, i32 2352) #7, !dbg !11685
  %91 = load %struct.xlgmac_stats*, %struct.xlgmac_stats** %stats, align 8, !dbg !11686
  %rxrunterror = getelementptr inbounds %struct.xlgmac_stats, %struct.xlgmac_stats* %91, i32 0, i32 24, !dbg !11687
  %92 = load i64, i64* %rxrunterror, align 8, !dbg !11688
  %add77 = add i64 %92, %call76, !dbg !11688
  store i64 %add77, i64* %rxrunterror, align 8, !dbg !11688
  %93 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !11689
  %call78 = call i64 @xlgmac_mmc_read(%struct.xlgmac_pdata* %93, i32 2356) #7, !dbg !11690
  %94 = load %struct.xlgmac_stats*, %struct.xlgmac_stats** %stats, align 8, !dbg !11691
  %rxjabbererror = getelementptr inbounds %struct.xlgmac_stats, %struct.xlgmac_stats* %94, i32 0, i32 25, !dbg !11692
  %95 = load i64, i64* %rxjabbererror, align 8, !dbg !11693
  %add79 = add i64 %95, %call78, !dbg !11693
  store i64 %add79, i64* %rxjabbererror, align 8, !dbg !11693
  %96 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !11694
  %call80 = call i64 @xlgmac_mmc_read(%struct.xlgmac_pdata* %96, i32 2360) #7, !dbg !11695
  %97 = load %struct.xlgmac_stats*, %struct.xlgmac_stats** %stats, align 8, !dbg !11696
  %rxundersize_g = getelementptr inbounds %struct.xlgmac_stats, %struct.xlgmac_stats* %97, i32 0, i32 26, !dbg !11697
  %98 = load i64, i64* %rxundersize_g, align 8, !dbg !11698
  %add81 = add i64 %98, %call80, !dbg !11698
  store i64 %add81, i64* %rxundersize_g, align 8, !dbg !11698
  %99 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !11699
  %call82 = call i64 @xlgmac_mmc_read(%struct.xlgmac_pdata* %99, i32 2364) #7, !dbg !11700
  %100 = load %struct.xlgmac_stats*, %struct.xlgmac_stats** %stats, align 8, !dbg !11701
  %rxoversize_g = getelementptr inbounds %struct.xlgmac_stats, %struct.xlgmac_stats* %100, i32 0, i32 27, !dbg !11702
  %101 = load i64, i64* %rxoversize_g, align 8, !dbg !11703
  %add83 = add i64 %101, %call82, !dbg !11703
  store i64 %add83, i64* %rxoversize_g, align 8, !dbg !11703
  %102 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !11704
  %call84 = call i64 @xlgmac_mmc_read(%struct.xlgmac_pdata* %102, i32 2368) #7, !dbg !11705
  %103 = load %struct.xlgmac_stats*, %struct.xlgmac_stats** %stats, align 8, !dbg !11706
  %rx64octets_gb = getelementptr inbounds %struct.xlgmac_stats, %struct.xlgmac_stats* %103, i32 0, i32 28, !dbg !11707
  %104 = load i64, i64* %rx64octets_gb, align 8, !dbg !11708
  %add85 = add i64 %104, %call84, !dbg !11708
  store i64 %add85, i64* %rx64octets_gb, align 8, !dbg !11708
  %105 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !11709
  %call86 = call i64 @xlgmac_mmc_read(%struct.xlgmac_pdata* %105, i32 2376) #7, !dbg !11710
  %106 = load %struct.xlgmac_stats*, %struct.xlgmac_stats** %stats, align 8, !dbg !11711
  %rx65to127octets_gb = getelementptr inbounds %struct.xlgmac_stats, %struct.xlgmac_stats* %106, i32 0, i32 29, !dbg !11712
  %107 = load i64, i64* %rx65to127octets_gb, align 8, !dbg !11713
  %add87 = add i64 %107, %call86, !dbg !11713
  store i64 %add87, i64* %rx65to127octets_gb, align 8, !dbg !11713
  %108 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !11714
  %call88 = call i64 @xlgmac_mmc_read(%struct.xlgmac_pdata* %108, i32 2384) #7, !dbg !11715
  %109 = load %struct.xlgmac_stats*, %struct.xlgmac_stats** %stats, align 8, !dbg !11716
  %rx128to255octets_gb = getelementptr inbounds %struct.xlgmac_stats, %struct.xlgmac_stats* %109, i32 0, i32 30, !dbg !11717
  %110 = load i64, i64* %rx128to255octets_gb, align 8, !dbg !11718
  %add89 = add i64 %110, %call88, !dbg !11718
  store i64 %add89, i64* %rx128to255octets_gb, align 8, !dbg !11718
  %111 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !11719
  %call90 = call i64 @xlgmac_mmc_read(%struct.xlgmac_pdata* %111, i32 2392) #7, !dbg !11720
  %112 = load %struct.xlgmac_stats*, %struct.xlgmac_stats** %stats, align 8, !dbg !11721
  %rx256to511octets_gb = getelementptr inbounds %struct.xlgmac_stats, %struct.xlgmac_stats* %112, i32 0, i32 31, !dbg !11722
  %113 = load i64, i64* %rx256to511octets_gb, align 8, !dbg !11723
  %add91 = add i64 %113, %call90, !dbg !11723
  store i64 %add91, i64* %rx256to511octets_gb, align 8, !dbg !11723
  %114 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !11724
  %call92 = call i64 @xlgmac_mmc_read(%struct.xlgmac_pdata* %114, i32 2400) #7, !dbg !11725
  %115 = load %struct.xlgmac_stats*, %struct.xlgmac_stats** %stats, align 8, !dbg !11726
  %rx512to1023octets_gb = getelementptr inbounds %struct.xlgmac_stats, %struct.xlgmac_stats* %115, i32 0, i32 32, !dbg !11727
  %116 = load i64, i64* %rx512to1023octets_gb, align 8, !dbg !11728
  %add93 = add i64 %116, %call92, !dbg !11728
  store i64 %add93, i64* %rx512to1023octets_gb, align 8, !dbg !11728
  %117 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !11729
  %call94 = call i64 @xlgmac_mmc_read(%struct.xlgmac_pdata* %117, i32 2408) #7, !dbg !11730
  %118 = load %struct.xlgmac_stats*, %struct.xlgmac_stats** %stats, align 8, !dbg !11731
  %rx1024tomaxoctets_gb = getelementptr inbounds %struct.xlgmac_stats, %struct.xlgmac_stats* %118, i32 0, i32 33, !dbg !11732
  %119 = load i64, i64* %rx1024tomaxoctets_gb, align 8, !dbg !11733
  %add95 = add i64 %119, %call94, !dbg !11733
  store i64 %add95, i64* %rx1024tomaxoctets_gb, align 8, !dbg !11733
  %120 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !11734
  %call96 = call i64 @xlgmac_mmc_read(%struct.xlgmac_pdata* %120, i32 2416) #7, !dbg !11735
  %121 = load %struct.xlgmac_stats*, %struct.xlgmac_stats** %stats, align 8, !dbg !11736
  %rxunicastframes_g = getelementptr inbounds %struct.xlgmac_stats, %struct.xlgmac_stats* %121, i32 0, i32 34, !dbg !11737
  %122 = load i64, i64* %rxunicastframes_g, align 8, !dbg !11738
  %add97 = add i64 %122, %call96, !dbg !11738
  store i64 %add97, i64* %rxunicastframes_g, align 8, !dbg !11738
  %123 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !11739
  %call98 = call i64 @xlgmac_mmc_read(%struct.xlgmac_pdata* %123, i32 2424) #7, !dbg !11740
  %124 = load %struct.xlgmac_stats*, %struct.xlgmac_stats** %stats, align 8, !dbg !11741
  %rxlengtherror = getelementptr inbounds %struct.xlgmac_stats, %struct.xlgmac_stats* %124, i32 0, i32 35, !dbg !11742
  %125 = load i64, i64* %rxlengtherror, align 8, !dbg !11743
  %add99 = add i64 %125, %call98, !dbg !11743
  store i64 %add99, i64* %rxlengtherror, align 8, !dbg !11743
  %126 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !11744
  %call100 = call i64 @xlgmac_mmc_read(%struct.xlgmac_pdata* %126, i32 2432) #7, !dbg !11745
  %127 = load %struct.xlgmac_stats*, %struct.xlgmac_stats** %stats, align 8, !dbg !11746
  %rxoutofrangetype = getelementptr inbounds %struct.xlgmac_stats, %struct.xlgmac_stats* %127, i32 0, i32 36, !dbg !11747
  %128 = load i64, i64* %rxoutofrangetype, align 8, !dbg !11748
  %add101 = add i64 %128, %call100, !dbg !11748
  store i64 %add101, i64* %rxoutofrangetype, align 8, !dbg !11748
  %129 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !11749
  %call102 = call i64 @xlgmac_mmc_read(%struct.xlgmac_pdata* %129, i32 2440) #7, !dbg !11750
  %130 = load %struct.xlgmac_stats*, %struct.xlgmac_stats** %stats, align 8, !dbg !11751
  %rxpauseframes = getelementptr inbounds %struct.xlgmac_stats, %struct.xlgmac_stats* %130, i32 0, i32 37, !dbg !11752
  %131 = load i64, i64* %rxpauseframes, align 8, !dbg !11753
  %add103 = add i64 %131, %call102, !dbg !11753
  store i64 %add103, i64* %rxpauseframes, align 8, !dbg !11753
  %132 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !11754
  %call104 = call i64 @xlgmac_mmc_read(%struct.xlgmac_pdata* %132, i32 2448) #7, !dbg !11755
  %133 = load %struct.xlgmac_stats*, %struct.xlgmac_stats** %stats, align 8, !dbg !11756
  %rxfifooverflow = getelementptr inbounds %struct.xlgmac_stats, %struct.xlgmac_stats* %133, i32 0, i32 38, !dbg !11757
  %134 = load i64, i64* %rxfifooverflow, align 8, !dbg !11758
  %add105 = add i64 %134, %call104, !dbg !11758
  store i64 %add105, i64* %rxfifooverflow, align 8, !dbg !11758
  %135 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !11759
  %call106 = call i64 @xlgmac_mmc_read(%struct.xlgmac_pdata* %135, i32 2456) #7, !dbg !11760
  %136 = load %struct.xlgmac_stats*, %struct.xlgmac_stats** %stats, align 8, !dbg !11761
  %rxvlanframes_gb = getelementptr inbounds %struct.xlgmac_stats, %struct.xlgmac_stats* %136, i32 0, i32 39, !dbg !11762
  %137 = load i64, i64* %rxvlanframes_gb, align 8, !dbg !11763
  %add107 = add i64 %137, %call106, !dbg !11763
  store i64 %add107, i64* %rxvlanframes_gb, align 8, !dbg !11763
  %138 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !11764
  %call108 = call i64 @xlgmac_mmc_read(%struct.xlgmac_pdata* %138, i32 2464) #7, !dbg !11765
  %139 = load %struct.xlgmac_stats*, %struct.xlgmac_stats** %stats, align 8, !dbg !11766
  %rxwatchdogerror = getelementptr inbounds %struct.xlgmac_stats, %struct.xlgmac_stats* %139, i32 0, i32 40, !dbg !11767
  %140 = load i64, i64* %rxwatchdogerror, align 8, !dbg !11768
  %add109 = add i64 %140, %call108, !dbg !11768
  store i64 %add109, i64* %rxwatchdogerror, align 8, !dbg !11768
  %141 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !11769
  %mac_regs110 = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %141, i32 0, i32 6, !dbg !11770
  %142 = load i8*, i8** %mac_regs110, align 8, !dbg !11770
  %add.ptr111 = getelementptr i8, i8* %142, i64 2048, !dbg !11771
  %call112 = call i32 @readl(i8* %add.ptr111) #7, !dbg !11772
  store i32 %call112, i32* %regval, align 4, !dbg !11773
  call void @llvm.dbg.declare(metadata i32* %_var113, metadata !11774, metadata !DIExpression()), !dbg !11776
  %143 = load i32, i32* %regval, align 4, !dbg !11776
  store i32 %143, i32* %_var113, align 4, !dbg !11776
  call void @llvm.dbg.declare(metadata i32* %_pos114, metadata !11777, metadata !DIExpression()), !dbg !11776
  store i32 3, i32* %_pos114, align 4, !dbg !11776
  call void @llvm.dbg.declare(metadata i32* %_len115, metadata !11778, metadata !DIExpression()), !dbg !11776
  store i32 1, i32* %_len115, align 4, !dbg !11776
  call void @llvm.dbg.declare(metadata i32* %_val116, metadata !11779, metadata !DIExpression()), !dbg !11776
  store i32 0, i32* %_val116, align 4, !dbg !11776
  %144 = load i32, i32* %_val116, align 4, !dbg !11776
  %145 = load i32, i32* %_pos114, align 4, !dbg !11776
  %shl117 = shl i32 %144, %145, !dbg !11776
  %conv118 = sext i32 %shl117 to i64, !dbg !11776
  %146 = load i32, i32* %_pos114, align 4, !dbg !11776
  %sh_prom119 = zext i32 %146 to i64, !dbg !11776
  %shl120 = shl i64 1, %sh_prom119, !dbg !11776
  %sub121 = sub i64 -1, %shl120, !dbg !11776
  %add122 = add i64 %sub121, 1, !dbg !11776
  %147 = load i32, i32* %_pos114, align 4, !dbg !11776
  %148 = load i32, i32* %_len115, align 4, !dbg !11776
  %add123 = add i32 %147, %148, !dbg !11776
  %sub124 = sub i32 %add123, 1, !dbg !11776
  %sub125 = sub i32 63, %sub124, !dbg !11776
  %sh_prom126 = zext i32 %sub125 to i64, !dbg !11776
  %shr127 = lshr i64 -1, %sh_prom126, !dbg !11776
  %and128 = and i64 %add122, %shr127, !dbg !11776
  %add129 = add i64 0, %and128, !dbg !11776
  %and130 = and i64 %conv118, %add129, !dbg !11776
  %conv131 = trunc i64 %and130 to i32, !dbg !11776
  store i32 %conv131, i32* %_val116, align 4, !dbg !11776
  %149 = load i32, i32* %_var113, align 4, !dbg !11776
  %conv133 = zext i32 %149 to i64, !dbg !11776
  %150 = load i32, i32* %_pos114, align 4, !dbg !11776
  %sh_prom134 = zext i32 %150 to i64, !dbg !11776
  %shl135 = shl i64 1, %sh_prom134, !dbg !11776
  %sub136 = sub i64 -1, %shl135, !dbg !11776
  %add137 = add i64 %sub136, 1, !dbg !11776
  %151 = load i32, i32* %_pos114, align 4, !dbg !11776
  %152 = load i32, i32* %_len115, align 4, !dbg !11776
  %add138 = add i32 %151, %152, !dbg !11776
  %sub139 = sub i32 %add138, 1, !dbg !11776
  %sub140 = sub i32 63, %sub139, !dbg !11776
  %sh_prom141 = zext i32 %sub140 to i64, !dbg !11776
  %shr142 = lshr i64 -1, %sh_prom141, !dbg !11776
  %and143 = and i64 %add137, %shr142, !dbg !11776
  %add144 = add i64 0, %and143, !dbg !11776
  %neg145 = xor i64 %add144, -1, !dbg !11776
  %and146 = and i64 %conv133, %neg145, !dbg !11776
  %153 = load i32, i32* %_val116, align 4, !dbg !11776
  %conv147 = sext i32 %153 to i64, !dbg !11776
  %or148 = or i64 %and146, %conv147, !dbg !11776
  %conv149 = trunc i64 %or148 to i32, !dbg !11776
  store i32 %conv149, i32* %_var113, align 4, !dbg !11776
  store i32 %conv149, i32* %tmp132, align 4, !dbg !11776
  %154 = load i32, i32* %tmp132, align 4, !dbg !11776
  store i32 %154, i32* %regval, align 4, !dbg !11780
  %155 = load i32, i32* %regval, align 4, !dbg !11781
  %156 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !11782
  %mac_regs150 = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %156, i32 0, i32 6, !dbg !11783
  %157 = load i8*, i8** %mac_regs150, align 8, !dbg !11783
  %add.ptr151 = getelementptr i8, i8* %157, i64 2048, !dbg !11784
  call void @writel(i32 %155, i8* %add.ptr151) #7, !dbg !11785
  ret void, !dbg !11786
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @xlgmac_enable_rss(%struct.xlgmac_pdata* %pdata) #0 !dbg !11787 {
entry:
  %retval = alloca i32, align 4
  %pdata.addr = alloca %struct.xlgmac_pdata*, align 8
  %regval = alloca i32, align 4
  %ret = alloca i32, align 4
  %_var = alloca i32, align 4
  %_pos = alloca i32, align 4
  %_len = alloca i32, align 4
  %_val = alloca i32, align 4
  %tmp = alloca i32, align 4
  store %struct.xlgmac_pdata* %pdata, %struct.xlgmac_pdata** %pdata.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xlgmac_pdata** %pdata.addr, metadata !11788, metadata !DIExpression()), !dbg !11789
  call void @llvm.dbg.declare(metadata i32* %regval, metadata !11790, metadata !DIExpression()), !dbg !11791
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !11792, metadata !DIExpression()), !dbg !11793
  %0 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !11794
  %hw_feat = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %0, i32 0, i32 7, !dbg !11796
  %rss = getelementptr inbounds %struct.xlgmac_hw_features, %struct.xlgmac_hw_features* %hw_feat, i32 0, i32 23, !dbg !11797
  %1 = load i32, i32* %rss, align 4, !dbg !11797
  %tobool = icmp ne i32 %1, 0, !dbg !11794
  br i1 %tobool, label %if.end, label %if.then, !dbg !11798

if.then:                                          ; preds = %entry
  store i32 -95, i32* %retval, align 4, !dbg !11799
  br label %return, !dbg !11799

if.end:                                           ; preds = %entry
  %2 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !11800
  %call = call i32 @xlgmac_write_rss_hash_key(%struct.xlgmac_pdata* %2) #7, !dbg !11801
  store i32 %call, i32* %ret, align 4, !dbg !11802
  %3 = load i32, i32* %ret, align 4, !dbg !11803
  %tobool1 = icmp ne i32 %3, 0, !dbg !11803
  br i1 %tobool1, label %if.then2, label %if.end3, !dbg !11805

if.then2:                                         ; preds = %if.end
  %4 = load i32, i32* %ret, align 4, !dbg !11806
  store i32 %4, i32* %retval, align 4, !dbg !11807
  br label %return, !dbg !11807

if.end3:                                          ; preds = %if.end
  %5 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !11808
  %call4 = call i32 @xlgmac_write_rss_lookup_table(%struct.xlgmac_pdata* %5) #7, !dbg !11809
  store i32 %call4, i32* %ret, align 4, !dbg !11810
  %6 = load i32, i32* %ret, align 4, !dbg !11811
  %tobool5 = icmp ne i32 %6, 0, !dbg !11811
  br i1 %tobool5, label %if.then6, label %if.end7, !dbg !11813

if.then6:                                         ; preds = %if.end3
  %7 = load i32, i32* %ret, align 4, !dbg !11814
  store i32 %7, i32* %retval, align 4, !dbg !11815
  br label %return, !dbg !11815

if.end7:                                          ; preds = %if.end3
  %8 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !11816
  %rss_options = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %8, i32 0, i32 44, !dbg !11817
  %9 = load i32, i32* %rss_options, align 8, !dbg !11817
  %10 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !11818
  %mac_regs = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %10, i32 0, i32 6, !dbg !11819
  %11 = load i8*, i8** %mac_regs, align 8, !dbg !11819
  %add.ptr = getelementptr i8, i8* %11, i64 3200, !dbg !11820
  call void @writel(i32 %9, i8* %add.ptr) #7, !dbg !11821
  %12 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !11822
  %mac_regs8 = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %12, i32 0, i32 6, !dbg !11823
  %13 = load i8*, i8** %mac_regs8, align 8, !dbg !11823
  %add.ptr9 = getelementptr i8, i8* %13, i64 3200, !dbg !11824
  %call10 = call i32 @readl(i8* %add.ptr9) #7, !dbg !11825
  store i32 %call10, i32* %regval, align 4, !dbg !11826
  call void @llvm.dbg.declare(metadata i32* %_var, metadata !11827, metadata !DIExpression()), !dbg !11829
  %14 = load i32, i32* %regval, align 4, !dbg !11829
  store i32 %14, i32* %_var, align 4, !dbg !11829
  call void @llvm.dbg.declare(metadata i32* %_pos, metadata !11830, metadata !DIExpression()), !dbg !11829
  store i32 0, i32* %_pos, align 4, !dbg !11829
  call void @llvm.dbg.declare(metadata i32* %_len, metadata !11831, metadata !DIExpression()), !dbg !11829
  store i32 1, i32* %_len, align 4, !dbg !11829
  call void @llvm.dbg.declare(metadata i32* %_val, metadata !11832, metadata !DIExpression()), !dbg !11829
  store i32 1, i32* %_val, align 4, !dbg !11829
  %15 = load i32, i32* %_val, align 4, !dbg !11829
  %16 = load i32, i32* %_pos, align 4, !dbg !11829
  %shl = shl i32 %15, %16, !dbg !11829
  %conv = sext i32 %shl to i64, !dbg !11829
  %17 = load i32, i32* %_pos, align 4, !dbg !11829
  %sh_prom = zext i32 %17 to i64, !dbg !11829
  %shl11 = shl i64 1, %sh_prom, !dbg !11829
  %sub = sub i64 -1, %shl11, !dbg !11829
  %add = add i64 %sub, 1, !dbg !11829
  %18 = load i32, i32* %_pos, align 4, !dbg !11829
  %19 = load i32, i32* %_len, align 4, !dbg !11829
  %add12 = add i32 %18, %19, !dbg !11829
  %sub13 = sub i32 %add12, 1, !dbg !11829
  %sub14 = sub i32 63, %sub13, !dbg !11829
  %sh_prom15 = zext i32 %sub14 to i64, !dbg !11829
  %shr = lshr i64 -1, %sh_prom15, !dbg !11829
  %and = and i64 %add, %shr, !dbg !11829
  %add16 = add i64 0, %and, !dbg !11829
  %and17 = and i64 %conv, %add16, !dbg !11829
  %conv18 = trunc i64 %and17 to i32, !dbg !11829
  store i32 %conv18, i32* %_val, align 4, !dbg !11829
  %20 = load i32, i32* %_var, align 4, !dbg !11829
  %conv19 = zext i32 %20 to i64, !dbg !11829
  %21 = load i32, i32* %_pos, align 4, !dbg !11829
  %sh_prom20 = zext i32 %21 to i64, !dbg !11829
  %shl21 = shl i64 1, %sh_prom20, !dbg !11829
  %sub22 = sub i64 -1, %shl21, !dbg !11829
  %add23 = add i64 %sub22, 1, !dbg !11829
  %22 = load i32, i32* %_pos, align 4, !dbg !11829
  %23 = load i32, i32* %_len, align 4, !dbg !11829
  %add24 = add i32 %22, %23, !dbg !11829
  %sub25 = sub i32 %add24, 1, !dbg !11829
  %sub26 = sub i32 63, %sub25, !dbg !11829
  %sh_prom27 = zext i32 %sub26 to i64, !dbg !11829
  %shr28 = lshr i64 -1, %sh_prom27, !dbg !11829
  %and29 = and i64 %add23, %shr28, !dbg !11829
  %add30 = add i64 0, %and29, !dbg !11829
  %neg = xor i64 %add30, -1, !dbg !11829
  %and31 = and i64 %conv19, %neg, !dbg !11829
  %24 = load i32, i32* %_val, align 4, !dbg !11829
  %conv32 = sext i32 %24 to i64, !dbg !11829
  %or = or i64 %and31, %conv32, !dbg !11829
  %conv33 = trunc i64 %or to i32, !dbg !11829
  store i32 %conv33, i32* %_var, align 4, !dbg !11829
  store i32 %conv33, i32* %tmp, align 4, !dbg !11829
  %25 = load i32, i32* %tmp, align 4, !dbg !11829
  store i32 %25, i32* %regval, align 4, !dbg !11833
  %26 = load i32, i32* %regval, align 4, !dbg !11834
  %27 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !11835
  %mac_regs34 = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %27, i32 0, i32 6, !dbg !11836
  %28 = load i8*, i8** %mac_regs34, align 8, !dbg !11836
  %add.ptr35 = getelementptr i8, i8* %28, i64 3200, !dbg !11837
  call void @writel(i32 %26, i8* %add.ptr35) #7, !dbg !11838
  store i32 0, i32* %retval, align 4, !dbg !11839
  br label %return, !dbg !11839

return:                                           ; preds = %if.end7, %if.then6, %if.then2, %if.then
  %29 = load i32, i32* %retval, align 4, !dbg !11840
  ret i32 %29, !dbg !11840
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @xlgmac_disable_rss(%struct.xlgmac_pdata* %pdata) #0 !dbg !11841 {
entry:
  %retval = alloca i32, align 4
  %pdata.addr = alloca %struct.xlgmac_pdata*, align 8
  %regval = alloca i32, align 4
  %_var = alloca i32, align 4
  %_pos = alloca i32, align 4
  %_len = alloca i32, align 4
  %_val = alloca i32, align 4
  %tmp = alloca i32, align 4
  store %struct.xlgmac_pdata* %pdata, %struct.xlgmac_pdata** %pdata.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xlgmac_pdata** %pdata.addr, metadata !11842, metadata !DIExpression()), !dbg !11843
  call void @llvm.dbg.declare(metadata i32* %regval, metadata !11844, metadata !DIExpression()), !dbg !11845
  %0 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !11846
  %hw_feat = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %0, i32 0, i32 7, !dbg !11848
  %rss = getelementptr inbounds %struct.xlgmac_hw_features, %struct.xlgmac_hw_features* %hw_feat, i32 0, i32 23, !dbg !11849
  %1 = load i32, i32* %rss, align 4, !dbg !11849
  %tobool = icmp ne i32 %1, 0, !dbg !11846
  br i1 %tobool, label %if.end, label %if.then, !dbg !11850

if.then:                                          ; preds = %entry
  store i32 -95, i32* %retval, align 4, !dbg !11851
  br label %return, !dbg !11851

if.end:                                           ; preds = %entry
  %2 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !11852
  %mac_regs = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %2, i32 0, i32 6, !dbg !11853
  %3 = load i8*, i8** %mac_regs, align 8, !dbg !11853
  %add.ptr = getelementptr i8, i8* %3, i64 3200, !dbg !11854
  %call = call i32 @readl(i8* %add.ptr) #7, !dbg !11855
  store i32 %call, i32* %regval, align 4, !dbg !11856
  call void @llvm.dbg.declare(metadata i32* %_var, metadata !11857, metadata !DIExpression()), !dbg !11859
  %4 = load i32, i32* %regval, align 4, !dbg !11859
  store i32 %4, i32* %_var, align 4, !dbg !11859
  call void @llvm.dbg.declare(metadata i32* %_pos, metadata !11860, metadata !DIExpression()), !dbg !11859
  store i32 0, i32* %_pos, align 4, !dbg !11859
  call void @llvm.dbg.declare(metadata i32* %_len, metadata !11861, metadata !DIExpression()), !dbg !11859
  store i32 1, i32* %_len, align 4, !dbg !11859
  call void @llvm.dbg.declare(metadata i32* %_val, metadata !11862, metadata !DIExpression()), !dbg !11859
  store i32 0, i32* %_val, align 4, !dbg !11859
  %5 = load i32, i32* %_val, align 4, !dbg !11859
  %6 = load i32, i32* %_pos, align 4, !dbg !11859
  %shl = shl i32 %5, %6, !dbg !11859
  %conv = sext i32 %shl to i64, !dbg !11859
  %7 = load i32, i32* %_pos, align 4, !dbg !11859
  %sh_prom = zext i32 %7 to i64, !dbg !11859
  %shl1 = shl i64 1, %sh_prom, !dbg !11859
  %sub = sub i64 -1, %shl1, !dbg !11859
  %add = add i64 %sub, 1, !dbg !11859
  %8 = load i32, i32* %_pos, align 4, !dbg !11859
  %9 = load i32, i32* %_len, align 4, !dbg !11859
  %add2 = add i32 %8, %9, !dbg !11859
  %sub3 = sub i32 %add2, 1, !dbg !11859
  %sub4 = sub i32 63, %sub3, !dbg !11859
  %sh_prom5 = zext i32 %sub4 to i64, !dbg !11859
  %shr = lshr i64 -1, %sh_prom5, !dbg !11859
  %and = and i64 %add, %shr, !dbg !11859
  %add6 = add i64 0, %and, !dbg !11859
  %and7 = and i64 %conv, %add6, !dbg !11859
  %conv8 = trunc i64 %and7 to i32, !dbg !11859
  store i32 %conv8, i32* %_val, align 4, !dbg !11859
  %10 = load i32, i32* %_var, align 4, !dbg !11859
  %conv9 = zext i32 %10 to i64, !dbg !11859
  %11 = load i32, i32* %_pos, align 4, !dbg !11859
  %sh_prom10 = zext i32 %11 to i64, !dbg !11859
  %shl11 = shl i64 1, %sh_prom10, !dbg !11859
  %sub12 = sub i64 -1, %shl11, !dbg !11859
  %add13 = add i64 %sub12, 1, !dbg !11859
  %12 = load i32, i32* %_pos, align 4, !dbg !11859
  %13 = load i32, i32* %_len, align 4, !dbg !11859
  %add14 = add i32 %12, %13, !dbg !11859
  %sub15 = sub i32 %add14, 1, !dbg !11859
  %sub16 = sub i32 63, %sub15, !dbg !11859
  %sh_prom17 = zext i32 %sub16 to i64, !dbg !11859
  %shr18 = lshr i64 -1, %sh_prom17, !dbg !11859
  %and19 = and i64 %add13, %shr18, !dbg !11859
  %add20 = add i64 0, %and19, !dbg !11859
  %neg = xor i64 %add20, -1, !dbg !11859
  %and21 = and i64 %conv9, %neg, !dbg !11859
  %14 = load i32, i32* %_val, align 4, !dbg !11859
  %conv22 = sext i32 %14 to i64, !dbg !11859
  %or = or i64 %and21, %conv22, !dbg !11859
  %conv23 = trunc i64 %or to i32, !dbg !11859
  store i32 %conv23, i32* %_var, align 4, !dbg !11859
  store i32 %conv23, i32* %tmp, align 4, !dbg !11859
  %15 = load i32, i32* %tmp, align 4, !dbg !11859
  store i32 %15, i32* %regval, align 4, !dbg !11863
  %16 = load i32, i32* %regval, align 4, !dbg !11864
  %17 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !11865
  %mac_regs24 = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %17, i32 0, i32 6, !dbg !11866
  %18 = load i8*, i8** %mac_regs24, align 8, !dbg !11866
  %add.ptr25 = getelementptr i8, i8* %18, i64 3200, !dbg !11867
  call void @writel(i32 %16, i8* %add.ptr25) #7, !dbg !11868
  store i32 0, i32* %retval, align 4, !dbg !11869
  br label %return, !dbg !11869

return:                                           ; preds = %if.end, %if.then
  %19 = load i32, i32* %retval, align 4, !dbg !11870
  ret i32 %19, !dbg !11870
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @xlgmac_set_rss_hash_key(%struct.xlgmac_pdata* %pdata, i8* %key) #0 !dbg !11871 {
entry:
  %pdata.addr = alloca %struct.xlgmac_pdata*, align 8
  %key.addr = alloca i8*, align 8
  store %struct.xlgmac_pdata* %pdata, %struct.xlgmac_pdata** %pdata.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xlgmac_pdata** %pdata.addr, metadata !11872, metadata !DIExpression()), !dbg !11873
  store i8* %key, i8** %key.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %key.addr, metadata !11874, metadata !DIExpression()), !dbg !11875
  %0 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !11876
  %rss_key = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %0, i32 0, i32 42, !dbg !11877
  %arraydecay = getelementptr inbounds [40 x i8], [40 x i8]* %rss_key, i64 0, i64 0, !dbg !11878
  %1 = load i8*, i8** %key.addr, align 8, !dbg !11879
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %arraydecay, i8* align 1 %1, i64 40, i1 false), !dbg !11878
  %2 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !11880
  %call = call i32 @xlgmac_write_rss_hash_key(%struct.xlgmac_pdata* %2) #7, !dbg !11881
  ret i32 %call, !dbg !11882
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @xlgmac_set_rss_lookup_table(%struct.xlgmac_pdata* %pdata, i32* %table) #0 !dbg !11883 {
entry:
  %pdata.addr = alloca %struct.xlgmac_pdata*, align 8
  %table.addr = alloca i32*, align 8
  %i = alloca i32, align 4
  %tval = alloca i32, align 4
  %_var = alloca i32, align 4
  %_pos = alloca i32, align 4
  %_len = alloca i32, align 4
  %_val = alloca i32, align 4
  %tmp = alloca i32, align 4
  store %struct.xlgmac_pdata* %pdata, %struct.xlgmac_pdata** %pdata.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xlgmac_pdata** %pdata.addr, metadata !11884, metadata !DIExpression()), !dbg !11885
  store i32* %table, i32** %table.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %table.addr, metadata !11886, metadata !DIExpression()), !dbg !11887
  call void @llvm.dbg.declare(metadata i32* %i, metadata !11888, metadata !DIExpression()), !dbg !11889
  call void @llvm.dbg.declare(metadata i32* %tval, metadata !11890, metadata !DIExpression()), !dbg !11891
  store i32 0, i32* %i, align 4, !dbg !11892
  br label %for.cond, !dbg !11894

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !11895
  %conv = zext i32 %0 to i64, !dbg !11895
  %cmp = icmp ult i64 %conv, 256, !dbg !11897
  br i1 %cmp, label %for.body, label %for.end, !dbg !11898

for.body:                                         ; preds = %for.cond
  %1 = load i32*, i32** %table.addr, align 8, !dbg !11899
  %2 = load i32, i32* %i, align 4, !dbg !11901
  %idxprom = zext i32 %2 to i64, !dbg !11899
  %arrayidx = getelementptr i32, i32* %1, i64 %idxprom, !dbg !11899
  %3 = load i32, i32* %arrayidx, align 4, !dbg !11899
  store i32 %3, i32* %tval, align 4, !dbg !11902
  call void @llvm.dbg.declare(metadata i32* %_var, metadata !11903, metadata !DIExpression()), !dbg !11905
  %4 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !11905
  %rss_table = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %4, i32 0, i32 43, !dbg !11905
  %5 = load i32, i32* %i, align 4, !dbg !11905
  %idxprom2 = zext i32 %5 to i64, !dbg !11905
  %arrayidx3 = getelementptr [256 x i32], [256 x i32]* %rss_table, i64 0, i64 %idxprom2, !dbg !11905
  %6 = load i32, i32* %arrayidx3, align 4, !dbg !11905
  store i32 %6, i32* %_var, align 4, !dbg !11905
  call void @llvm.dbg.declare(metadata i32* %_pos, metadata !11906, metadata !DIExpression()), !dbg !11905
  store i32 0, i32* %_pos, align 4, !dbg !11905
  call void @llvm.dbg.declare(metadata i32* %_len, metadata !11907, metadata !DIExpression()), !dbg !11905
  store i32 4, i32* %_len, align 4, !dbg !11905
  call void @llvm.dbg.declare(metadata i32* %_val, metadata !11908, metadata !DIExpression()), !dbg !11905
  %7 = load i32, i32* %tval, align 4, !dbg !11905
  store i32 %7, i32* %_val, align 4, !dbg !11905
  %8 = load i32, i32* %_val, align 4, !dbg !11905
  %9 = load i32, i32* %_pos, align 4, !dbg !11905
  %shl = shl i32 %8, %9, !dbg !11905
  %conv4 = zext i32 %shl to i64, !dbg !11905
  %10 = load i32, i32* %_pos, align 4, !dbg !11905
  %sh_prom = zext i32 %10 to i64, !dbg !11905
  %shl5 = shl i64 1, %sh_prom, !dbg !11905
  %sub = sub i64 -1, %shl5, !dbg !11905
  %add = add i64 %sub, 1, !dbg !11905
  %11 = load i32, i32* %_pos, align 4, !dbg !11905
  %12 = load i32, i32* %_len, align 4, !dbg !11905
  %add6 = add i32 %11, %12, !dbg !11905
  %sub7 = sub i32 %add6, 1, !dbg !11905
  %sub8 = sub i32 63, %sub7, !dbg !11905
  %sh_prom9 = zext i32 %sub8 to i64, !dbg !11905
  %shr = lshr i64 -1, %sh_prom9, !dbg !11905
  %and = and i64 %add, %shr, !dbg !11905
  %add10 = add i64 0, %and, !dbg !11905
  %and11 = and i64 %conv4, %add10, !dbg !11905
  %conv12 = trunc i64 %and11 to i32, !dbg !11905
  store i32 %conv12, i32* %_val, align 4, !dbg !11905
  %13 = load i32, i32* %_var, align 4, !dbg !11905
  %conv13 = zext i32 %13 to i64, !dbg !11905
  %14 = load i32, i32* %_pos, align 4, !dbg !11905
  %sh_prom14 = zext i32 %14 to i64, !dbg !11905
  %shl15 = shl i64 1, %sh_prom14, !dbg !11905
  %sub16 = sub i64 -1, %shl15, !dbg !11905
  %add17 = add i64 %sub16, 1, !dbg !11905
  %15 = load i32, i32* %_pos, align 4, !dbg !11905
  %16 = load i32, i32* %_len, align 4, !dbg !11905
  %add18 = add i32 %15, %16, !dbg !11905
  %sub19 = sub i32 %add18, 1, !dbg !11905
  %sub20 = sub i32 63, %sub19, !dbg !11905
  %sh_prom21 = zext i32 %sub20 to i64, !dbg !11905
  %shr22 = lshr i64 -1, %sh_prom21, !dbg !11905
  %and23 = and i64 %add17, %shr22, !dbg !11905
  %add24 = add i64 0, %and23, !dbg !11905
  %neg = xor i64 %add24, -1, !dbg !11905
  %and25 = and i64 %conv13, %neg, !dbg !11905
  %17 = load i32, i32* %_val, align 4, !dbg !11905
  %conv26 = zext i32 %17 to i64, !dbg !11905
  %or = or i64 %and25, %conv26, !dbg !11905
  %conv27 = trunc i64 %or to i32, !dbg !11905
  store i32 %conv27, i32* %_var, align 4, !dbg !11905
  store i32 %conv27, i32* %tmp, align 4, !dbg !11905
  %18 = load i32, i32* %tmp, align 4, !dbg !11905
  %19 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !11909
  %rss_table28 = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %19, i32 0, i32 43, !dbg !11910
  %20 = load i32, i32* %i, align 4, !dbg !11911
  %idxprom29 = zext i32 %20 to i64, !dbg !11909
  %arrayidx30 = getelementptr [256 x i32], [256 x i32]* %rss_table28, i64 0, i64 %idxprom29, !dbg !11909
  store i32 %18, i32* %arrayidx30, align 4, !dbg !11912
  br label %for.inc, !dbg !11913

for.inc:                                          ; preds = %for.body
  %21 = load i32, i32* %i, align 4, !dbg !11914
  %inc = add i32 %21, 1, !dbg !11914
  store i32 %inc, i32* %i, align 4, !dbg !11914
  br label %for.cond, !dbg !11915, !llvm.loop !11916

for.end:                                          ; preds = %for.cond
  %22 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !11918
  %call = call i32 @xlgmac_write_rss_lookup_table(%struct.xlgmac_pdata* %22) #7, !dbg !11919
  ret i32 %call, !dbg !11920
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @xlgmac_flush_tx_queues(%struct.xlgmac_pdata* %pdata) #0 !dbg !11921 {
entry:
  %retval = alloca i32, align 4
  %pdata.addr = alloca %struct.xlgmac_pdata*, align 8
  %i = alloca i32, align 4
  %count = alloca i32, align 4
  %regval = alloca i32, align 4
  %_var = alloca i32, align 4
  %_pos = alloca i32, align 4
  %_len = alloca i32, align 4
  %_val = alloca i32, align 4
  %tmp = alloca i32, align 4
  %_pos44 = alloca i32, align 4
  %_len45 = alloca i32, align 4
  %tmp46 = alloca i64, align 8
  store %struct.xlgmac_pdata* %pdata, %struct.xlgmac_pdata** %pdata.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xlgmac_pdata** %pdata.addr, metadata !11922, metadata !DIExpression()), !dbg !11923
  call void @llvm.dbg.declare(metadata i32* %i, metadata !11924, metadata !DIExpression()), !dbg !11925
  call void @llvm.dbg.declare(metadata i32* %count, metadata !11926, metadata !DIExpression()), !dbg !11927
  call void @llvm.dbg.declare(metadata i32* %regval, metadata !11928, metadata !DIExpression()), !dbg !11929
  store i32 0, i32* %i, align 4, !dbg !11930
  br label %for.cond, !dbg !11932

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !11933
  %1 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !11935
  %tx_q_count = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %1, i32 0, i32 15, !dbg !11936
  %2 = load i32, i32* %tx_q_count, align 4, !dbg !11936
  %cmp = icmp ult i32 %0, %2, !dbg !11937
  br i1 %cmp, label %for.body, label %for.end, !dbg !11938

for.body:                                         ; preds = %for.cond
  %3 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !11939
  %mac_regs = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %3, i32 0, i32 6, !dbg !11939
  %4 = load i8*, i8** %mac_regs, align 8, !dbg !11939
  %add.ptr = getelementptr i8, i8* %4, i64 4352, !dbg !11939
  %5 = load i32, i32* %i, align 4, !dbg !11939
  %mul = mul i32 %5, 128, !dbg !11939
  %idx.ext = zext i32 %mul to i64, !dbg !11939
  %add.ptr1 = getelementptr i8, i8* %add.ptr, i64 %idx.ext, !dbg !11939
  %add.ptr2 = getelementptr i8, i8* %add.ptr1, i64 0, !dbg !11939
  %call = call i32 @readl(i8* %add.ptr2) #7, !dbg !11941
  store i32 %call, i32* %regval, align 4, !dbg !11942
  call void @llvm.dbg.declare(metadata i32* %_var, metadata !11943, metadata !DIExpression()), !dbg !11945
  %6 = load i32, i32* %regval, align 4, !dbg !11945
  store i32 %6, i32* %_var, align 4, !dbg !11945
  call void @llvm.dbg.declare(metadata i32* %_pos, metadata !11946, metadata !DIExpression()), !dbg !11945
  store i32 0, i32* %_pos, align 4, !dbg !11945
  call void @llvm.dbg.declare(metadata i32* %_len, metadata !11947, metadata !DIExpression()), !dbg !11945
  store i32 1, i32* %_len, align 4, !dbg !11945
  call void @llvm.dbg.declare(metadata i32* %_val, metadata !11948, metadata !DIExpression()), !dbg !11945
  store i32 1, i32* %_val, align 4, !dbg !11945
  %7 = load i32, i32* %_val, align 4, !dbg !11945
  %8 = load i32, i32* %_pos, align 4, !dbg !11945
  %shl = shl i32 %7, %8, !dbg !11945
  %conv = sext i32 %shl to i64, !dbg !11945
  %9 = load i32, i32* %_pos, align 4, !dbg !11945
  %sh_prom = zext i32 %9 to i64, !dbg !11945
  %shl3 = shl i64 1, %sh_prom, !dbg !11945
  %sub = sub i64 -1, %shl3, !dbg !11945
  %add = add i64 %sub, 1, !dbg !11945
  %10 = load i32, i32* %_pos, align 4, !dbg !11945
  %11 = load i32, i32* %_len, align 4, !dbg !11945
  %add4 = add i32 %10, %11, !dbg !11945
  %sub5 = sub i32 %add4, 1, !dbg !11945
  %sub6 = sub i32 63, %sub5, !dbg !11945
  %sh_prom7 = zext i32 %sub6 to i64, !dbg !11945
  %shr = lshr i64 -1, %sh_prom7, !dbg !11945
  %and = and i64 %add, %shr, !dbg !11945
  %add8 = add i64 0, %and, !dbg !11945
  %and9 = and i64 %conv, %add8, !dbg !11945
  %conv10 = trunc i64 %and9 to i32, !dbg !11945
  store i32 %conv10, i32* %_val, align 4, !dbg !11945
  %12 = load i32, i32* %_var, align 4, !dbg !11945
  %conv11 = zext i32 %12 to i64, !dbg !11945
  %13 = load i32, i32* %_pos, align 4, !dbg !11945
  %sh_prom12 = zext i32 %13 to i64, !dbg !11945
  %shl13 = shl i64 1, %sh_prom12, !dbg !11945
  %sub14 = sub i64 -1, %shl13, !dbg !11945
  %add15 = add i64 %sub14, 1, !dbg !11945
  %14 = load i32, i32* %_pos, align 4, !dbg !11945
  %15 = load i32, i32* %_len, align 4, !dbg !11945
  %add16 = add i32 %14, %15, !dbg !11945
  %sub17 = sub i32 %add16, 1, !dbg !11945
  %sub18 = sub i32 63, %sub17, !dbg !11945
  %sh_prom19 = zext i32 %sub18 to i64, !dbg !11945
  %shr20 = lshr i64 -1, %sh_prom19, !dbg !11945
  %and21 = and i64 %add15, %shr20, !dbg !11945
  %add22 = add i64 0, %and21, !dbg !11945
  %neg = xor i64 %add22, -1, !dbg !11945
  %and23 = and i64 %conv11, %neg, !dbg !11945
  %16 = load i32, i32* %_val, align 4, !dbg !11945
  %conv24 = sext i32 %16 to i64, !dbg !11945
  %or = or i64 %and23, %conv24, !dbg !11945
  %conv25 = trunc i64 %or to i32, !dbg !11945
  store i32 %conv25, i32* %_var, align 4, !dbg !11945
  store i32 %conv25, i32* %tmp, align 4, !dbg !11945
  %17 = load i32, i32* %tmp, align 4, !dbg !11945
  store i32 %17, i32* %regval, align 4, !dbg !11949
  %18 = load i32, i32* %regval, align 4, !dbg !11950
  %19 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !11951
  %mac_regs26 = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %19, i32 0, i32 6, !dbg !11951
  %20 = load i8*, i8** %mac_regs26, align 8, !dbg !11951
  %add.ptr27 = getelementptr i8, i8* %20, i64 4352, !dbg !11951
  %21 = load i32, i32* %i, align 4, !dbg !11951
  %mul28 = mul i32 %21, 128, !dbg !11951
  %idx.ext29 = zext i32 %mul28 to i64, !dbg !11951
  %add.ptr30 = getelementptr i8, i8* %add.ptr27, i64 %idx.ext29, !dbg !11951
  %add.ptr31 = getelementptr i8, i8* %add.ptr30, i64 0, !dbg !11951
  call void @writel(i32 %18, i8* %add.ptr31) #7, !dbg !11952
  br label %for.inc, !dbg !11953

for.inc:                                          ; preds = %for.body
  %22 = load i32, i32* %i, align 4, !dbg !11954
  %inc = add i32 %22, 1, !dbg !11954
  store i32 %inc, i32* %i, align 4, !dbg !11954
  br label %for.cond, !dbg !11955, !llvm.loop !11956

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !11958
  br label %for.cond32, !dbg !11960

for.cond32:                                       ; preds = %for.inc65, %for.end
  %23 = load i32, i32* %i, align 4, !dbg !11961
  %24 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !11963
  %tx_q_count33 = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %24, i32 0, i32 15, !dbg !11964
  %25 = load i32, i32* %tx_q_count33, align 4, !dbg !11964
  %cmp34 = icmp ult i32 %23, %25, !dbg !11965
  br i1 %cmp34, label %for.body36, label %for.end67, !dbg !11966

for.body36:                                       ; preds = %for.cond32
  store i32 2000, i32* %count, align 4, !dbg !11967
  %26 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !11969
  %mac_regs37 = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %26, i32 0, i32 6, !dbg !11969
  %27 = load i8*, i8** %mac_regs37, align 8, !dbg !11969
  %add.ptr38 = getelementptr i8, i8* %27, i64 4352, !dbg !11969
  %28 = load i32, i32* %i, align 4, !dbg !11969
  %mul39 = mul i32 %28, 128, !dbg !11969
  %idx.ext40 = zext i32 %mul39 to i64, !dbg !11969
  %add.ptr41 = getelementptr i8, i8* %add.ptr38, i64 %idx.ext40, !dbg !11969
  %add.ptr42 = getelementptr i8, i8* %add.ptr41, i64 0, !dbg !11969
  %call43 = call i32 @readl(i8* %add.ptr42) #7, !dbg !11970
  store i32 %call43, i32* %regval, align 4, !dbg !11971
  call void @llvm.dbg.declare(metadata i32* %_pos44, metadata !11972, metadata !DIExpression()), !dbg !11974
  store i32 0, i32* %_pos44, align 4, !dbg !11974
  call void @llvm.dbg.declare(metadata i32* %_len45, metadata !11975, metadata !DIExpression()), !dbg !11974
  store i32 1, i32* %_len45, align 4, !dbg !11974
  %29 = load i32, i32* %regval, align 4, !dbg !11974
  %conv47 = zext i32 %29 to i64, !dbg !11974
  %30 = load i32, i32* %_pos44, align 4, !dbg !11974
  %sh_prom48 = zext i32 %30 to i64, !dbg !11974
  %shl49 = shl i64 1, %sh_prom48, !dbg !11974
  %sub50 = sub i64 -1, %shl49, !dbg !11974
  %add51 = add i64 %sub50, 1, !dbg !11974
  %31 = load i32, i32* %_pos44, align 4, !dbg !11974
  %32 = load i32, i32* %_len45, align 4, !dbg !11974
  %add52 = add i32 %31, %32, !dbg !11974
  %sub53 = sub i32 %add52, 1, !dbg !11974
  %sub54 = sub i32 63, %sub53, !dbg !11974
  %sh_prom55 = zext i32 %sub54 to i64, !dbg !11974
  %shr56 = lshr i64 -1, %sh_prom55, !dbg !11974
  %and57 = and i64 %add51, %shr56, !dbg !11974
  %add58 = add i64 0, %and57, !dbg !11974
  %and59 = and i64 %conv47, %add58, !dbg !11974
  %33 = load i32, i32* %_pos44, align 4, !dbg !11974
  %sh_prom60 = zext i32 %33 to i64, !dbg !11974
  %shr61 = lshr i64 %and59, %sh_prom60, !dbg !11974
  store i64 %shr61, i64* %tmp46, align 8, !dbg !11974
  %34 = load i64, i64* %tmp46, align 8, !dbg !11974
  %conv62 = trunc i64 %34 to i32, !dbg !11976
  store i32 %conv62, i32* %regval, align 4, !dbg !11977
  br label %while.cond, !dbg !11978

while.cond:                                       ; preds = %while.body, %for.body36
  %35 = load i32, i32* %count, align 4, !dbg !11979
  %dec = add i32 %35, -1, !dbg !11979
  store i32 %dec, i32* %count, align 4, !dbg !11979
  %tobool = icmp ne i32 %dec, 0, !dbg !11979
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !11980

land.rhs:                                         ; preds = %while.cond
  %36 = load i32, i32* %regval, align 4, !dbg !11981
  %tobool63 = icmp ne i32 %36, 0, !dbg !11980
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %37 = phi i1 [ false, %while.cond ], [ %tobool63, %land.rhs ], !dbg !11982
  br i1 %37, label %while.body, label %while.end, !dbg !11978

while.body:                                       ; preds = %land.end
  call void @usleep_range(i64 500, i64 600) #7, !dbg !11983
  br label %while.cond, !dbg !11978, !llvm.loop !11984

while.end:                                        ; preds = %land.end
  %38 = load i32, i32* %count, align 4, !dbg !11986
  %tobool64 = icmp ne i32 %38, 0, !dbg !11986
  br i1 %tobool64, label %if.end, label %if.then, !dbg !11988

if.then:                                          ; preds = %while.end
  store i32 -16, i32* %retval, align 4, !dbg !11989
  br label %return, !dbg !11989

if.end:                                           ; preds = %while.end
  br label %for.inc65, !dbg !11990

for.inc65:                                        ; preds = %if.end
  %39 = load i32, i32* %i, align 4, !dbg !11991
  %inc66 = add i32 %39, 1, !dbg !11991
  store i32 %inc66, i32* %i, align 4, !dbg !11991
  br label %for.cond32, !dbg !11992, !llvm.loop !11993

for.end67:                                        ; preds = %for.cond32
  store i32 0, i32* %retval, align 4, !dbg !11995
  br label %return, !dbg !11995

return:                                           ; preds = %for.end67, %if.then
  %40 = load i32, i32* %retval, align 4, !dbg !11996
  ret i32 %40, !dbg !11996
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @xlgmac_config_dma_bus(%struct.xlgmac_pdata* %pdata) #0 !dbg !11997 {
entry:
  %pdata.addr = alloca %struct.xlgmac_pdata*, align 8
  %regval = alloca i32, align 4
  %_var = alloca i32, align 4
  %_pos = alloca i32, align 4
  %_len = alloca i32, align 4
  %_val = alloca i32, align 4
  %tmp = alloca i32, align 4
  %_var24 = alloca i32, align 4
  %_pos25 = alloca i32, align 4
  %_len26 = alloca i32, align 4
  %_val27 = alloca i32, align 4
  %tmp43 = alloca i32, align 4
  %_var61 = alloca i32, align 4
  %_pos62 = alloca i32, align 4
  %_len63 = alloca i32, align 4
  %_val64 = alloca i32, align 4
  %tmp80 = alloca i32, align 4
  store %struct.xlgmac_pdata* %pdata, %struct.xlgmac_pdata** %pdata.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xlgmac_pdata** %pdata.addr, metadata !11998, metadata !DIExpression()), !dbg !11999
  call void @llvm.dbg.declare(metadata i32* %regval, metadata !12000, metadata !DIExpression()), !dbg !12001
  %0 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !12002
  %mac_regs = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %0, i32 0, i32 6, !dbg !12003
  %1 = load i8*, i8** %mac_regs, align 8, !dbg !12003
  %add.ptr = getelementptr i8, i8* %1, i64 12292, !dbg !12004
  %call = call i32 @readl(i8* %add.ptr) #7, !dbg !12005
  store i32 %call, i32* %regval, align 4, !dbg !12006
  call void @llvm.dbg.declare(metadata i32* %_var, metadata !12007, metadata !DIExpression()), !dbg !12009
  %2 = load i32, i32* %regval, align 4, !dbg !12009
  store i32 %2, i32* %_var, align 4, !dbg !12009
  call void @llvm.dbg.declare(metadata i32* %_pos, metadata !12010, metadata !DIExpression()), !dbg !12009
  store i32 11, i32* %_pos, align 4, !dbg !12009
  call void @llvm.dbg.declare(metadata i32* %_len, metadata !12011, metadata !DIExpression()), !dbg !12009
  store i32 1, i32* %_len, align 4, !dbg !12009
  call void @llvm.dbg.declare(metadata i32* %_val, metadata !12012, metadata !DIExpression()), !dbg !12009
  store i32 1, i32* %_val, align 4, !dbg !12009
  %3 = load i32, i32* %_val, align 4, !dbg !12009
  %4 = load i32, i32* %_pos, align 4, !dbg !12009
  %shl = shl i32 %3, %4, !dbg !12009
  %conv = sext i32 %shl to i64, !dbg !12009
  %5 = load i32, i32* %_pos, align 4, !dbg !12009
  %sh_prom = zext i32 %5 to i64, !dbg !12009
  %shl1 = shl i64 1, %sh_prom, !dbg !12009
  %sub = sub i64 -1, %shl1, !dbg !12009
  %add = add i64 %sub, 1, !dbg !12009
  %6 = load i32, i32* %_pos, align 4, !dbg !12009
  %7 = load i32, i32* %_len, align 4, !dbg !12009
  %add2 = add i32 %6, %7, !dbg !12009
  %sub3 = sub i32 %add2, 1, !dbg !12009
  %sub4 = sub i32 63, %sub3, !dbg !12009
  %sh_prom5 = zext i32 %sub4 to i64, !dbg !12009
  %shr = lshr i64 -1, %sh_prom5, !dbg !12009
  %and = and i64 %add, %shr, !dbg !12009
  %add6 = add i64 0, %and, !dbg !12009
  %and7 = and i64 %conv, %add6, !dbg !12009
  %conv8 = trunc i64 %and7 to i32, !dbg !12009
  store i32 %conv8, i32* %_val, align 4, !dbg !12009
  %8 = load i32, i32* %_var, align 4, !dbg !12009
  %conv9 = zext i32 %8 to i64, !dbg !12009
  %9 = load i32, i32* %_pos, align 4, !dbg !12009
  %sh_prom10 = zext i32 %9 to i64, !dbg !12009
  %shl11 = shl i64 1, %sh_prom10, !dbg !12009
  %sub12 = sub i64 -1, %shl11, !dbg !12009
  %add13 = add i64 %sub12, 1, !dbg !12009
  %10 = load i32, i32* %_pos, align 4, !dbg !12009
  %11 = load i32, i32* %_len, align 4, !dbg !12009
  %add14 = add i32 %10, %11, !dbg !12009
  %sub15 = sub i32 %add14, 1, !dbg !12009
  %sub16 = sub i32 63, %sub15, !dbg !12009
  %sh_prom17 = zext i32 %sub16 to i64, !dbg !12009
  %shr18 = lshr i64 -1, %sh_prom17, !dbg !12009
  %and19 = and i64 %add13, %shr18, !dbg !12009
  %add20 = add i64 0, %and19, !dbg !12009
  %neg = xor i64 %add20, -1, !dbg !12009
  %and21 = and i64 %conv9, %neg, !dbg !12009
  %12 = load i32, i32* %_val, align 4, !dbg !12009
  %conv22 = sext i32 %12 to i64, !dbg !12009
  %or = or i64 %and21, %conv22, !dbg !12009
  %conv23 = trunc i64 %or to i32, !dbg !12009
  store i32 %conv23, i32* %_var, align 4, !dbg !12009
  store i32 %conv23, i32* %tmp, align 4, !dbg !12009
  %13 = load i32, i32* %tmp, align 4, !dbg !12009
  store i32 %13, i32* %regval, align 4, !dbg !12013
  call void @llvm.dbg.declare(metadata i32* %_var24, metadata !12014, metadata !DIExpression()), !dbg !12016
  %14 = load i32, i32* %regval, align 4, !dbg !12016
  store i32 %14, i32* %_var24, align 4, !dbg !12016
  call void @llvm.dbg.declare(metadata i32* %_pos25, metadata !12017, metadata !DIExpression()), !dbg !12016
  store i32 0, i32* %_pos25, align 4, !dbg !12016
  call void @llvm.dbg.declare(metadata i32* %_len26, metadata !12018, metadata !DIExpression()), !dbg !12016
  store i32 1, i32* %_len26, align 4, !dbg !12016
  call void @llvm.dbg.declare(metadata i32* %_val27, metadata !12019, metadata !DIExpression()), !dbg !12016
  store i32 1, i32* %_val27, align 4, !dbg !12016
  %15 = load i32, i32* %_val27, align 4, !dbg !12016
  %16 = load i32, i32* %_pos25, align 4, !dbg !12016
  %shl28 = shl i32 %15, %16, !dbg !12016
  %conv29 = sext i32 %shl28 to i64, !dbg !12016
  %17 = load i32, i32* %_pos25, align 4, !dbg !12016
  %sh_prom30 = zext i32 %17 to i64, !dbg !12016
  %shl31 = shl i64 1, %sh_prom30, !dbg !12016
  %sub32 = sub i64 -1, %shl31, !dbg !12016
  %add33 = add i64 %sub32, 1, !dbg !12016
  %18 = load i32, i32* %_pos25, align 4, !dbg !12016
  %19 = load i32, i32* %_len26, align 4, !dbg !12016
  %add34 = add i32 %18, %19, !dbg !12016
  %sub35 = sub i32 %add34, 1, !dbg !12016
  %sub36 = sub i32 63, %sub35, !dbg !12016
  %sh_prom37 = zext i32 %sub36 to i64, !dbg !12016
  %shr38 = lshr i64 -1, %sh_prom37, !dbg !12016
  %and39 = and i64 %add33, %shr38, !dbg !12016
  %add40 = add i64 0, %and39, !dbg !12016
  %and41 = and i64 %conv29, %add40, !dbg !12016
  %conv42 = trunc i64 %and41 to i32, !dbg !12016
  store i32 %conv42, i32* %_val27, align 4, !dbg !12016
  %20 = load i32, i32* %_var24, align 4, !dbg !12016
  %conv44 = zext i32 %20 to i64, !dbg !12016
  %21 = load i32, i32* %_pos25, align 4, !dbg !12016
  %sh_prom45 = zext i32 %21 to i64, !dbg !12016
  %shl46 = shl i64 1, %sh_prom45, !dbg !12016
  %sub47 = sub i64 -1, %shl46, !dbg !12016
  %add48 = add i64 %sub47, 1, !dbg !12016
  %22 = load i32, i32* %_pos25, align 4, !dbg !12016
  %23 = load i32, i32* %_len26, align 4, !dbg !12016
  %add49 = add i32 %22, %23, !dbg !12016
  %sub50 = sub i32 %add49, 1, !dbg !12016
  %sub51 = sub i32 63, %sub50, !dbg !12016
  %sh_prom52 = zext i32 %sub51 to i64, !dbg !12016
  %shr53 = lshr i64 -1, %sh_prom52, !dbg !12016
  %and54 = and i64 %add48, %shr53, !dbg !12016
  %add55 = add i64 0, %and54, !dbg !12016
  %neg56 = xor i64 %add55, -1, !dbg !12016
  %and57 = and i64 %conv44, %neg56, !dbg !12016
  %24 = load i32, i32* %_val27, align 4, !dbg !12016
  %conv58 = sext i32 %24 to i64, !dbg !12016
  %or59 = or i64 %and57, %conv58, !dbg !12016
  %conv60 = trunc i64 %or59 to i32, !dbg !12016
  store i32 %conv60, i32* %_var24, align 4, !dbg !12016
  store i32 %conv60, i32* %tmp43, align 4, !dbg !12016
  %25 = load i32, i32* %tmp43, align 4, !dbg !12016
  store i32 %25, i32* %regval, align 4, !dbg !12020
  call void @llvm.dbg.declare(metadata i32* %_var61, metadata !12021, metadata !DIExpression()), !dbg !12023
  %26 = load i32, i32* %regval, align 4, !dbg !12023
  store i32 %26, i32* %_var61, align 4, !dbg !12023
  call void @llvm.dbg.declare(metadata i32* %_pos62, metadata !12024, metadata !DIExpression()), !dbg !12023
  store i32 7, i32* %_pos62, align 4, !dbg !12023
  call void @llvm.dbg.declare(metadata i32* %_len63, metadata !12025, metadata !DIExpression()), !dbg !12023
  store i32 1, i32* %_len63, align 4, !dbg !12023
  call void @llvm.dbg.declare(metadata i32* %_val64, metadata !12026, metadata !DIExpression()), !dbg !12023
  store i32 1, i32* %_val64, align 4, !dbg !12023
  %27 = load i32, i32* %_val64, align 4, !dbg !12023
  %28 = load i32, i32* %_pos62, align 4, !dbg !12023
  %shl65 = shl i32 %27, %28, !dbg !12023
  %conv66 = sext i32 %shl65 to i64, !dbg !12023
  %29 = load i32, i32* %_pos62, align 4, !dbg !12023
  %sh_prom67 = zext i32 %29 to i64, !dbg !12023
  %shl68 = shl i64 1, %sh_prom67, !dbg !12023
  %sub69 = sub i64 -1, %shl68, !dbg !12023
  %add70 = add i64 %sub69, 1, !dbg !12023
  %30 = load i32, i32* %_pos62, align 4, !dbg !12023
  %31 = load i32, i32* %_len63, align 4, !dbg !12023
  %add71 = add i32 %30, %31, !dbg !12023
  %sub72 = sub i32 %add71, 1, !dbg !12023
  %sub73 = sub i32 63, %sub72, !dbg !12023
  %sh_prom74 = zext i32 %sub73 to i64, !dbg !12023
  %shr75 = lshr i64 -1, %sh_prom74, !dbg !12023
  %and76 = and i64 %add70, %shr75, !dbg !12023
  %add77 = add i64 0, %and76, !dbg !12023
  %and78 = and i64 %conv66, %add77, !dbg !12023
  %conv79 = trunc i64 %and78 to i32, !dbg !12023
  store i32 %conv79, i32* %_val64, align 4, !dbg !12023
  %32 = load i32, i32* %_var61, align 4, !dbg !12023
  %conv81 = zext i32 %32 to i64, !dbg !12023
  %33 = load i32, i32* %_pos62, align 4, !dbg !12023
  %sh_prom82 = zext i32 %33 to i64, !dbg !12023
  %shl83 = shl i64 1, %sh_prom82, !dbg !12023
  %sub84 = sub i64 -1, %shl83, !dbg !12023
  %add85 = add i64 %sub84, 1, !dbg !12023
  %34 = load i32, i32* %_pos62, align 4, !dbg !12023
  %35 = load i32, i32* %_len63, align 4, !dbg !12023
  %add86 = add i32 %34, %35, !dbg !12023
  %sub87 = sub i32 %add86, 1, !dbg !12023
  %sub88 = sub i32 63, %sub87, !dbg !12023
  %sh_prom89 = zext i32 %sub88 to i64, !dbg !12023
  %shr90 = lshr i64 -1, %sh_prom89, !dbg !12023
  %and91 = and i64 %add85, %shr90, !dbg !12023
  %add92 = add i64 0, %and91, !dbg !12023
  %neg93 = xor i64 %add92, -1, !dbg !12023
  %and94 = and i64 %conv81, %neg93, !dbg !12023
  %36 = load i32, i32* %_val64, align 4, !dbg !12023
  %conv95 = sext i32 %36 to i64, !dbg !12023
  %or96 = or i64 %and94, %conv95, !dbg !12023
  %conv97 = trunc i64 %or96 to i32, !dbg !12023
  store i32 %conv97, i32* %_var61, align 4, !dbg !12023
  store i32 %conv97, i32* %tmp80, align 4, !dbg !12023
  %37 = load i32, i32* %tmp80, align 4, !dbg !12023
  store i32 %37, i32* %regval, align 4, !dbg !12027
  %38 = load i32, i32* %regval, align 4, !dbg !12028
  %39 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !12029
  %mac_regs98 = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %39, i32 0, i32 6, !dbg !12030
  %40 = load i8*, i8** %mac_regs98, align 8, !dbg !12030
  %add.ptr99 = getelementptr i8, i8* %40, i64 12292, !dbg !12031
  call void @writel(i32 %38, i8* %add.ptr99) #7, !dbg !12032
  ret void, !dbg !12033
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @xlgmac_config_rx_buffer_size(%struct.xlgmac_pdata* %pdata) #0 !dbg !12034 {
entry:
  %pdata.addr = alloca %struct.xlgmac_pdata*, align 8
  %channel = alloca %struct.xlgmac_channel*, align 8
  %i = alloca i32, align 4
  %regval = alloca i32, align 4
  %_var = alloca i32, align 4
  %_pos = alloca i32, align 4
  %_len = alloca i32, align 4
  %_val = alloca i32, align 4
  %tmp = alloca i32, align 4
  store %struct.xlgmac_pdata* %pdata, %struct.xlgmac_pdata** %pdata.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xlgmac_pdata** %pdata.addr, metadata !12035, metadata !DIExpression()), !dbg !12036
  call void @llvm.dbg.declare(metadata %struct.xlgmac_channel** %channel, metadata !12037, metadata !DIExpression()), !dbg !12038
  call void @llvm.dbg.declare(metadata i32* %i, metadata !12039, metadata !DIExpression()), !dbg !12040
  call void @llvm.dbg.declare(metadata i32* %regval, metadata !12041, metadata !DIExpression()), !dbg !12042
  %0 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !12043
  %channel_head = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %0, i32 0, i32 9, !dbg !12044
  %1 = load %struct.xlgmac_channel*, %struct.xlgmac_channel** %channel_head, align 8, !dbg !12044
  store %struct.xlgmac_channel* %1, %struct.xlgmac_channel** %channel, align 8, !dbg !12045
  store i32 0, i32* %i, align 4, !dbg !12046
  br label %for.cond, !dbg !12048

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i32, i32* %i, align 4, !dbg !12049
  %3 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !12051
  %channel_count = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %3, i32 0, i32 10, !dbg !12052
  %4 = load i32, i32* %channel_count, align 8, !dbg !12052
  %cmp = icmp ult i32 %2, %4, !dbg !12053
  br i1 %cmp, label %for.body, label %for.end, !dbg !12054

for.body:                                         ; preds = %for.cond
  %5 = load %struct.xlgmac_channel*, %struct.xlgmac_channel** %channel, align 8, !dbg !12055
  %rx_ring = getelementptr inbounds %struct.xlgmac_channel, %struct.xlgmac_channel* %5, i32 0, i32 11, !dbg !12058
  %6 = load %struct.xlgmac_ring*, %struct.xlgmac_ring** %rx_ring, align 8, !dbg !12058
  %tobool = icmp ne %struct.xlgmac_ring* %6, null, !dbg !12055
  br i1 %tobool, label %if.end, label %if.then, !dbg !12059

if.then:                                          ; preds = %for.body
  br label %for.end, !dbg !12060

if.end:                                           ; preds = %for.body
  %7 = load %struct.xlgmac_channel*, %struct.xlgmac_channel** %channel, align 8, !dbg !12061
  %dma_regs = getelementptr inbounds %struct.xlgmac_channel, %struct.xlgmac_channel* %7, i32 0, i32 3, !dbg !12061
  %8 = load i8*, i8** %dma_regs, align 32, !dbg !12061
  %add.ptr = getelementptr i8, i8* %8, i64 8, !dbg !12061
  %call = call i32 @readl(i8* %add.ptr) #7, !dbg !12062
  store i32 %call, i32* %regval, align 4, !dbg !12063
  call void @llvm.dbg.declare(metadata i32* %_var, metadata !12064, metadata !DIExpression()), !dbg !12066
  %9 = load i32, i32* %regval, align 4, !dbg !12066
  store i32 %9, i32* %_var, align 4, !dbg !12066
  call void @llvm.dbg.declare(metadata i32* %_pos, metadata !12067, metadata !DIExpression()), !dbg !12066
  store i32 1, i32* %_pos, align 4, !dbg !12066
  call void @llvm.dbg.declare(metadata i32* %_len, metadata !12068, metadata !DIExpression()), !dbg !12066
  store i32 14, i32* %_len, align 4, !dbg !12066
  call void @llvm.dbg.declare(metadata i32* %_val, metadata !12069, metadata !DIExpression()), !dbg !12066
  %10 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !12066
  %rx_buf_size = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %10, i32 0, i32 30, !dbg !12066
  %11 = load i32, i32* %rx_buf_size, align 8, !dbg !12066
  store i32 %11, i32* %_val, align 4, !dbg !12066
  %12 = load i32, i32* %_val, align 4, !dbg !12066
  %13 = load i32, i32* %_pos, align 4, !dbg !12066
  %shl = shl i32 %12, %13, !dbg !12066
  %conv = zext i32 %shl to i64, !dbg !12066
  %14 = load i32, i32* %_pos, align 4, !dbg !12066
  %sh_prom = zext i32 %14 to i64, !dbg !12066
  %shl1 = shl i64 1, %sh_prom, !dbg !12066
  %sub = sub i64 -1, %shl1, !dbg !12066
  %add = add i64 %sub, 1, !dbg !12066
  %15 = load i32, i32* %_pos, align 4, !dbg !12066
  %16 = load i32, i32* %_len, align 4, !dbg !12066
  %add2 = add i32 %15, %16, !dbg !12066
  %sub3 = sub i32 %add2, 1, !dbg !12066
  %sub4 = sub i32 63, %sub3, !dbg !12066
  %sh_prom5 = zext i32 %sub4 to i64, !dbg !12066
  %shr = lshr i64 -1, %sh_prom5, !dbg !12066
  %and = and i64 %add, %shr, !dbg !12066
  %add6 = add i64 0, %and, !dbg !12066
  %and7 = and i64 %conv, %add6, !dbg !12066
  %conv8 = trunc i64 %and7 to i32, !dbg !12066
  store i32 %conv8, i32* %_val, align 4, !dbg !12066
  %17 = load i32, i32* %_var, align 4, !dbg !12066
  %conv9 = zext i32 %17 to i64, !dbg !12066
  %18 = load i32, i32* %_pos, align 4, !dbg !12066
  %sh_prom10 = zext i32 %18 to i64, !dbg !12066
  %shl11 = shl i64 1, %sh_prom10, !dbg !12066
  %sub12 = sub i64 -1, %shl11, !dbg !12066
  %add13 = add i64 %sub12, 1, !dbg !12066
  %19 = load i32, i32* %_pos, align 4, !dbg !12066
  %20 = load i32, i32* %_len, align 4, !dbg !12066
  %add14 = add i32 %19, %20, !dbg !12066
  %sub15 = sub i32 %add14, 1, !dbg !12066
  %sub16 = sub i32 63, %sub15, !dbg !12066
  %sh_prom17 = zext i32 %sub16 to i64, !dbg !12066
  %shr18 = lshr i64 -1, %sh_prom17, !dbg !12066
  %and19 = and i64 %add13, %shr18, !dbg !12066
  %add20 = add i64 0, %and19, !dbg !12066
  %neg = xor i64 %add20, -1, !dbg !12066
  %and21 = and i64 %conv9, %neg, !dbg !12066
  %21 = load i32, i32* %_val, align 4, !dbg !12066
  %conv22 = zext i32 %21 to i64, !dbg !12066
  %or = or i64 %and21, %conv22, !dbg !12066
  %conv23 = trunc i64 %or to i32, !dbg !12066
  store i32 %conv23, i32* %_var, align 4, !dbg !12066
  store i32 %conv23, i32* %tmp, align 4, !dbg !12066
  %22 = load i32, i32* %tmp, align 4, !dbg !12066
  store i32 %22, i32* %regval, align 4, !dbg !12070
  %23 = load i32, i32* %regval, align 4, !dbg !12071
  %24 = load %struct.xlgmac_channel*, %struct.xlgmac_channel** %channel, align 8, !dbg !12072
  %dma_regs24 = getelementptr inbounds %struct.xlgmac_channel, %struct.xlgmac_channel* %24, i32 0, i32 3, !dbg !12072
  %25 = load i8*, i8** %dma_regs24, align 32, !dbg !12072
  %add.ptr25 = getelementptr i8, i8* %25, i64 8, !dbg !12072
  call void @writel(i32 %23, i8* %add.ptr25) #7, !dbg !12073
  br label %for.inc, !dbg !12074

for.inc:                                          ; preds = %if.end
  %26 = load i32, i32* %i, align 4, !dbg !12075
  %inc = add i32 %26, 1, !dbg !12075
  store i32 %inc, i32* %i, align 4, !dbg !12075
  %27 = load %struct.xlgmac_channel*, %struct.xlgmac_channel** %channel, align 8, !dbg !12076
  %incdec.ptr = getelementptr %struct.xlgmac_channel, %struct.xlgmac_channel* %27, i32 1, !dbg !12076
  store %struct.xlgmac_channel* %incdec.ptr, %struct.xlgmac_channel** %channel, align 8, !dbg !12076
  br label %for.cond, !dbg !12077, !llvm.loop !12078

for.end:                                          ; preds = %if.then, %for.cond
  ret void, !dbg !12080
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @xlgmac_config_tso_mode(%struct.xlgmac_pdata* %pdata) #0 !dbg !12081 {
entry:
  %pdata.addr = alloca %struct.xlgmac_pdata*, align 8
  %channel = alloca %struct.xlgmac_channel*, align 8
  %i = alloca i32, align 4
  %regval = alloca i32, align 4
  %_var = alloca i32, align 4
  %_pos = alloca i32, align 4
  %_len = alloca i32, align 4
  %_val = alloca i32, align 4
  %tmp = alloca i32, align 4
  store %struct.xlgmac_pdata* %pdata, %struct.xlgmac_pdata** %pdata.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xlgmac_pdata** %pdata.addr, metadata !12082, metadata !DIExpression()), !dbg !12083
  call void @llvm.dbg.declare(metadata %struct.xlgmac_channel** %channel, metadata !12084, metadata !DIExpression()), !dbg !12085
  call void @llvm.dbg.declare(metadata i32* %i, metadata !12086, metadata !DIExpression()), !dbg !12087
  call void @llvm.dbg.declare(metadata i32* %regval, metadata !12088, metadata !DIExpression()), !dbg !12089
  %0 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !12090
  %channel_head = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %0, i32 0, i32 9, !dbg !12091
  %1 = load %struct.xlgmac_channel*, %struct.xlgmac_channel** %channel_head, align 8, !dbg !12091
  store %struct.xlgmac_channel* %1, %struct.xlgmac_channel** %channel, align 8, !dbg !12092
  store i32 0, i32* %i, align 4, !dbg !12093
  br label %for.cond, !dbg !12095

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i32, i32* %i, align 4, !dbg !12096
  %3 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !12098
  %channel_count = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %3, i32 0, i32 10, !dbg !12099
  %4 = load i32, i32* %channel_count, align 8, !dbg !12099
  %cmp = icmp ult i32 %2, %4, !dbg !12100
  br i1 %cmp, label %for.body, label %for.end, !dbg !12101

for.body:                                         ; preds = %for.cond
  %5 = load %struct.xlgmac_channel*, %struct.xlgmac_channel** %channel, align 8, !dbg !12102
  %tx_ring = getelementptr inbounds %struct.xlgmac_channel, %struct.xlgmac_channel* %5, i32 0, i32 10, !dbg !12105
  %6 = load %struct.xlgmac_ring*, %struct.xlgmac_ring** %tx_ring, align 16, !dbg !12105
  %tobool = icmp ne %struct.xlgmac_ring* %6, null, !dbg !12102
  br i1 %tobool, label %if.end, label %if.then, !dbg !12106

if.then:                                          ; preds = %for.body
  br label %for.end, !dbg !12107

if.end:                                           ; preds = %for.body
  %7 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !12108
  %hw_feat = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %7, i32 0, i32 7, !dbg !12110
  %tso = getelementptr inbounds %struct.xlgmac_hw_features, %struct.xlgmac_hw_features* %hw_feat, i32 0, i32 21, !dbg !12111
  %8 = load i32, i32* %tso, align 4, !dbg !12111
  %tobool1 = icmp ne i32 %8, 0, !dbg !12108
  br i1 %tobool1, label %if.then2, label %if.end28, !dbg !12112

if.then2:                                         ; preds = %if.end
  %9 = load %struct.xlgmac_channel*, %struct.xlgmac_channel** %channel, align 8, !dbg !12113
  %dma_regs = getelementptr inbounds %struct.xlgmac_channel, %struct.xlgmac_channel* %9, i32 0, i32 3, !dbg !12113
  %10 = load i8*, i8** %dma_regs, align 32, !dbg !12113
  %add.ptr = getelementptr i8, i8* %10, i64 4, !dbg !12113
  %call = call i32 @readl(i8* %add.ptr) #7, !dbg !12115
  store i32 %call, i32* %regval, align 4, !dbg !12116
  call void @llvm.dbg.declare(metadata i32* %_var, metadata !12117, metadata !DIExpression()), !dbg !12119
  %11 = load i32, i32* %regval, align 4, !dbg !12119
  store i32 %11, i32* %_var, align 4, !dbg !12119
  call void @llvm.dbg.declare(metadata i32* %_pos, metadata !12120, metadata !DIExpression()), !dbg !12119
  store i32 12, i32* %_pos, align 4, !dbg !12119
  call void @llvm.dbg.declare(metadata i32* %_len, metadata !12121, metadata !DIExpression()), !dbg !12119
  store i32 1, i32* %_len, align 4, !dbg !12119
  call void @llvm.dbg.declare(metadata i32* %_val, metadata !12122, metadata !DIExpression()), !dbg !12119
  store i32 1, i32* %_val, align 4, !dbg !12119
  %12 = load i32, i32* %_val, align 4, !dbg !12119
  %13 = load i32, i32* %_pos, align 4, !dbg !12119
  %shl = shl i32 %12, %13, !dbg !12119
  %conv = sext i32 %shl to i64, !dbg !12119
  %14 = load i32, i32* %_pos, align 4, !dbg !12119
  %sh_prom = zext i32 %14 to i64, !dbg !12119
  %shl3 = shl i64 1, %sh_prom, !dbg !12119
  %sub = sub i64 -1, %shl3, !dbg !12119
  %add = add i64 %sub, 1, !dbg !12119
  %15 = load i32, i32* %_pos, align 4, !dbg !12119
  %16 = load i32, i32* %_len, align 4, !dbg !12119
  %add4 = add i32 %15, %16, !dbg !12119
  %sub5 = sub i32 %add4, 1, !dbg !12119
  %sub6 = sub i32 63, %sub5, !dbg !12119
  %sh_prom7 = zext i32 %sub6 to i64, !dbg !12119
  %shr = lshr i64 -1, %sh_prom7, !dbg !12119
  %and = and i64 %add, %shr, !dbg !12119
  %add8 = add i64 0, %and, !dbg !12119
  %and9 = and i64 %conv, %add8, !dbg !12119
  %conv10 = trunc i64 %and9 to i32, !dbg !12119
  store i32 %conv10, i32* %_val, align 4, !dbg !12119
  %17 = load i32, i32* %_var, align 4, !dbg !12119
  %conv11 = zext i32 %17 to i64, !dbg !12119
  %18 = load i32, i32* %_pos, align 4, !dbg !12119
  %sh_prom12 = zext i32 %18 to i64, !dbg !12119
  %shl13 = shl i64 1, %sh_prom12, !dbg !12119
  %sub14 = sub i64 -1, %shl13, !dbg !12119
  %add15 = add i64 %sub14, 1, !dbg !12119
  %19 = load i32, i32* %_pos, align 4, !dbg !12119
  %20 = load i32, i32* %_len, align 4, !dbg !12119
  %add16 = add i32 %19, %20, !dbg !12119
  %sub17 = sub i32 %add16, 1, !dbg !12119
  %sub18 = sub i32 63, %sub17, !dbg !12119
  %sh_prom19 = zext i32 %sub18 to i64, !dbg !12119
  %shr20 = lshr i64 -1, %sh_prom19, !dbg !12119
  %and21 = and i64 %add15, %shr20, !dbg !12119
  %add22 = add i64 0, %and21, !dbg !12119
  %neg = xor i64 %add22, -1, !dbg !12119
  %and23 = and i64 %conv11, %neg, !dbg !12119
  %21 = load i32, i32* %_val, align 4, !dbg !12119
  %conv24 = sext i32 %21 to i64, !dbg !12119
  %or = or i64 %and23, %conv24, !dbg !12119
  %conv25 = trunc i64 %or to i32, !dbg !12119
  store i32 %conv25, i32* %_var, align 4, !dbg !12119
  store i32 %conv25, i32* %tmp, align 4, !dbg !12119
  %22 = load i32, i32* %tmp, align 4, !dbg !12119
  store i32 %22, i32* %regval, align 4, !dbg !12123
  %23 = load i32, i32* %regval, align 4, !dbg !12124
  %24 = load %struct.xlgmac_channel*, %struct.xlgmac_channel** %channel, align 8, !dbg !12125
  %dma_regs26 = getelementptr inbounds %struct.xlgmac_channel, %struct.xlgmac_channel* %24, i32 0, i32 3, !dbg !12125
  %25 = load i8*, i8** %dma_regs26, align 32, !dbg !12125
  %add.ptr27 = getelementptr i8, i8* %25, i64 4, !dbg !12125
  call void @writel(i32 %23, i8* %add.ptr27) #7, !dbg !12126
  br label %if.end28, !dbg !12127

if.end28:                                         ; preds = %if.then2, %if.end
  br label %for.inc, !dbg !12128

for.inc:                                          ; preds = %if.end28
  %26 = load i32, i32* %i, align 4, !dbg !12129
  %inc = add i32 %26, 1, !dbg !12129
  store i32 %inc, i32* %i, align 4, !dbg !12129
  %27 = load %struct.xlgmac_channel*, %struct.xlgmac_channel** %channel, align 8, !dbg !12130
  %incdec.ptr = getelementptr %struct.xlgmac_channel, %struct.xlgmac_channel* %27, i32 1, !dbg !12130
  store %struct.xlgmac_channel* %incdec.ptr, %struct.xlgmac_channel** %channel, align 8, !dbg !12130
  br label %for.cond, !dbg !12131, !llvm.loop !12132

for.end:                                          ; preds = %if.then, %for.cond
  ret void, !dbg !12134
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @xlgmac_config_sph_mode(%struct.xlgmac_pdata* %pdata) #0 !dbg !12135 {
entry:
  %pdata.addr = alloca %struct.xlgmac_pdata*, align 8
  %channel = alloca %struct.xlgmac_channel*, align 8
  %i = alloca i32, align 4
  %regval = alloca i32, align 4
  %_var = alloca i32, align 4
  %_pos = alloca i32, align 4
  %_len = alloca i32, align 4
  %_val = alloca i32, align 4
  %tmp = alloca i32, align 4
  %_var28 = alloca i32, align 4
  %_pos29 = alloca i32, align 4
  %_len30 = alloca i32, align 4
  %_val31 = alloca i32, align 4
  %tmp47 = alloca i32, align 4
  store %struct.xlgmac_pdata* %pdata, %struct.xlgmac_pdata** %pdata.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xlgmac_pdata** %pdata.addr, metadata !12136, metadata !DIExpression()), !dbg !12137
  call void @llvm.dbg.declare(metadata %struct.xlgmac_channel** %channel, metadata !12138, metadata !DIExpression()), !dbg !12139
  call void @llvm.dbg.declare(metadata i32* %i, metadata !12140, metadata !DIExpression()), !dbg !12141
  call void @llvm.dbg.declare(metadata i32* %regval, metadata !12142, metadata !DIExpression()), !dbg !12143
  %0 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !12144
  %channel_head = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %0, i32 0, i32 9, !dbg !12145
  %1 = load %struct.xlgmac_channel*, %struct.xlgmac_channel** %channel_head, align 8, !dbg !12145
  store %struct.xlgmac_channel* %1, %struct.xlgmac_channel** %channel, align 8, !dbg !12146
  store i32 0, i32* %i, align 4, !dbg !12147
  br label %for.cond, !dbg !12149

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i32, i32* %i, align 4, !dbg !12150
  %3 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !12152
  %channel_count = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %3, i32 0, i32 10, !dbg !12153
  %4 = load i32, i32* %channel_count, align 8, !dbg !12153
  %cmp = icmp ult i32 %2, %4, !dbg !12154
  br i1 %cmp, label %for.body, label %for.end, !dbg !12155

for.body:                                         ; preds = %for.cond
  %5 = load %struct.xlgmac_channel*, %struct.xlgmac_channel** %channel, align 8, !dbg !12156
  %rx_ring = getelementptr inbounds %struct.xlgmac_channel, %struct.xlgmac_channel* %5, i32 0, i32 11, !dbg !12159
  %6 = load %struct.xlgmac_ring*, %struct.xlgmac_ring** %rx_ring, align 8, !dbg !12159
  %tobool = icmp ne %struct.xlgmac_ring* %6, null, !dbg !12156
  br i1 %tobool, label %if.end, label %if.then, !dbg !12160

if.then:                                          ; preds = %for.body
  br label %for.end, !dbg !12161

if.end:                                           ; preds = %for.body
  %7 = load %struct.xlgmac_channel*, %struct.xlgmac_channel** %channel, align 8, !dbg !12162
  %dma_regs = getelementptr inbounds %struct.xlgmac_channel, %struct.xlgmac_channel* %7, i32 0, i32 3, !dbg !12162
  %8 = load i8*, i8** %dma_regs, align 32, !dbg !12162
  %add.ptr = getelementptr i8, i8* %8, i64 0, !dbg !12162
  %call = call i32 @readl(i8* %add.ptr) #7, !dbg !12163
  store i32 %call, i32* %regval, align 4, !dbg !12164
  call void @llvm.dbg.declare(metadata i32* %_var, metadata !12165, metadata !DIExpression()), !dbg !12167
  %9 = load i32, i32* %regval, align 4, !dbg !12167
  store i32 %9, i32* %_var, align 4, !dbg !12167
  call void @llvm.dbg.declare(metadata i32* %_pos, metadata !12168, metadata !DIExpression()), !dbg !12167
  store i32 24, i32* %_pos, align 4, !dbg !12167
  call void @llvm.dbg.declare(metadata i32* %_len, metadata !12169, metadata !DIExpression()), !dbg !12167
  store i32 1, i32* %_len, align 4, !dbg !12167
  call void @llvm.dbg.declare(metadata i32* %_val, metadata !12170, metadata !DIExpression()), !dbg !12167
  store i32 1, i32* %_val, align 4, !dbg !12167
  %10 = load i32, i32* %_val, align 4, !dbg !12167
  %11 = load i32, i32* %_pos, align 4, !dbg !12167
  %shl = shl i32 %10, %11, !dbg !12167
  %conv = sext i32 %shl to i64, !dbg !12167
  %12 = load i32, i32* %_pos, align 4, !dbg !12167
  %sh_prom = zext i32 %12 to i64, !dbg !12167
  %shl1 = shl i64 1, %sh_prom, !dbg !12167
  %sub = sub i64 -1, %shl1, !dbg !12167
  %add = add i64 %sub, 1, !dbg !12167
  %13 = load i32, i32* %_pos, align 4, !dbg !12167
  %14 = load i32, i32* %_len, align 4, !dbg !12167
  %add2 = add i32 %13, %14, !dbg !12167
  %sub3 = sub i32 %add2, 1, !dbg !12167
  %sub4 = sub i32 63, %sub3, !dbg !12167
  %sh_prom5 = zext i32 %sub4 to i64, !dbg !12167
  %shr = lshr i64 -1, %sh_prom5, !dbg !12167
  %and = and i64 %add, %shr, !dbg !12167
  %add6 = add i64 0, %and, !dbg !12167
  %and7 = and i64 %conv, %add6, !dbg !12167
  %conv8 = trunc i64 %and7 to i32, !dbg !12167
  store i32 %conv8, i32* %_val, align 4, !dbg !12167
  %15 = load i32, i32* %_var, align 4, !dbg !12167
  %conv9 = zext i32 %15 to i64, !dbg !12167
  %16 = load i32, i32* %_pos, align 4, !dbg !12167
  %sh_prom10 = zext i32 %16 to i64, !dbg !12167
  %shl11 = shl i64 1, %sh_prom10, !dbg !12167
  %sub12 = sub i64 -1, %shl11, !dbg !12167
  %add13 = add i64 %sub12, 1, !dbg !12167
  %17 = load i32, i32* %_pos, align 4, !dbg !12167
  %18 = load i32, i32* %_len, align 4, !dbg !12167
  %add14 = add i32 %17, %18, !dbg !12167
  %sub15 = sub i32 %add14, 1, !dbg !12167
  %sub16 = sub i32 63, %sub15, !dbg !12167
  %sh_prom17 = zext i32 %sub16 to i64, !dbg !12167
  %shr18 = lshr i64 -1, %sh_prom17, !dbg !12167
  %and19 = and i64 %add13, %shr18, !dbg !12167
  %add20 = add i64 0, %and19, !dbg !12167
  %neg = xor i64 %add20, -1, !dbg !12167
  %and21 = and i64 %conv9, %neg, !dbg !12167
  %19 = load i32, i32* %_val, align 4, !dbg !12167
  %conv22 = sext i32 %19 to i64, !dbg !12167
  %or = or i64 %and21, %conv22, !dbg !12167
  %conv23 = trunc i64 %or to i32, !dbg !12167
  store i32 %conv23, i32* %_var, align 4, !dbg !12167
  store i32 %conv23, i32* %tmp, align 4, !dbg !12167
  %20 = load i32, i32* %tmp, align 4, !dbg !12167
  store i32 %20, i32* %regval, align 4, !dbg !12171
  %21 = load i32, i32* %regval, align 4, !dbg !12172
  %22 = load %struct.xlgmac_channel*, %struct.xlgmac_channel** %channel, align 8, !dbg !12173
  %dma_regs24 = getelementptr inbounds %struct.xlgmac_channel, %struct.xlgmac_channel* %22, i32 0, i32 3, !dbg !12173
  %23 = load i8*, i8** %dma_regs24, align 32, !dbg !12173
  %add.ptr25 = getelementptr i8, i8* %23, i64 0, !dbg !12173
  call void @writel(i32 %21, i8* %add.ptr25) #7, !dbg !12174
  br label %for.inc, !dbg !12175

for.inc:                                          ; preds = %if.end
  %24 = load i32, i32* %i, align 4, !dbg !12176
  %inc = add i32 %24, 1, !dbg !12176
  store i32 %inc, i32* %i, align 4, !dbg !12176
  %25 = load %struct.xlgmac_channel*, %struct.xlgmac_channel** %channel, align 8, !dbg !12177
  %incdec.ptr = getelementptr %struct.xlgmac_channel, %struct.xlgmac_channel* %25, i32 1, !dbg !12177
  store %struct.xlgmac_channel* %incdec.ptr, %struct.xlgmac_channel** %channel, align 8, !dbg !12177
  br label %for.cond, !dbg !12178, !llvm.loop !12179

for.end:                                          ; preds = %if.then, %for.cond
  %26 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !12181
  %mac_regs = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %26, i32 0, i32 6, !dbg !12182
  %27 = load i8*, i8** %mac_regs, align 8, !dbg !12182
  %add.ptr26 = getelementptr i8, i8* %27, i64 4, !dbg !12183
  %call27 = call i32 @readl(i8* %add.ptr26) #7, !dbg !12184
  store i32 %call27, i32* %regval, align 4, !dbg !12185
  call void @llvm.dbg.declare(metadata i32* %_var28, metadata !12186, metadata !DIExpression()), !dbg !12188
  %28 = load i32, i32* %regval, align 4, !dbg !12188
  store i32 %28, i32* %_var28, align 4, !dbg !12188
  call void @llvm.dbg.declare(metadata i32* %_pos29, metadata !12189, metadata !DIExpression()), !dbg !12188
  store i32 12, i32* %_pos29, align 4, !dbg !12188
  call void @llvm.dbg.declare(metadata i32* %_len30, metadata !12190, metadata !DIExpression()), !dbg !12188
  store i32 3, i32* %_len30, align 4, !dbg !12188
  call void @llvm.dbg.declare(metadata i32* %_val31, metadata !12191, metadata !DIExpression()), !dbg !12188
  store i32 3, i32* %_val31, align 4, !dbg !12188
  %29 = load i32, i32* %_val31, align 4, !dbg !12188
  %30 = load i32, i32* %_pos29, align 4, !dbg !12188
  %shl32 = shl i32 %29, %30, !dbg !12188
  %conv33 = sext i32 %shl32 to i64, !dbg !12188
  %31 = load i32, i32* %_pos29, align 4, !dbg !12188
  %sh_prom34 = zext i32 %31 to i64, !dbg !12188
  %shl35 = shl i64 1, %sh_prom34, !dbg !12188
  %sub36 = sub i64 -1, %shl35, !dbg !12188
  %add37 = add i64 %sub36, 1, !dbg !12188
  %32 = load i32, i32* %_pos29, align 4, !dbg !12188
  %33 = load i32, i32* %_len30, align 4, !dbg !12188
  %add38 = add i32 %32, %33, !dbg !12188
  %sub39 = sub i32 %add38, 1, !dbg !12188
  %sub40 = sub i32 63, %sub39, !dbg !12188
  %sh_prom41 = zext i32 %sub40 to i64, !dbg !12188
  %shr42 = lshr i64 -1, %sh_prom41, !dbg !12188
  %and43 = and i64 %add37, %shr42, !dbg !12188
  %add44 = add i64 0, %and43, !dbg !12188
  %and45 = and i64 %conv33, %add44, !dbg !12188
  %conv46 = trunc i64 %and45 to i32, !dbg !12188
  store i32 %conv46, i32* %_val31, align 4, !dbg !12188
  %34 = load i32, i32* %_var28, align 4, !dbg !12188
  %conv48 = zext i32 %34 to i64, !dbg !12188
  %35 = load i32, i32* %_pos29, align 4, !dbg !12188
  %sh_prom49 = zext i32 %35 to i64, !dbg !12188
  %shl50 = shl i64 1, %sh_prom49, !dbg !12188
  %sub51 = sub i64 -1, %shl50, !dbg !12188
  %add52 = add i64 %sub51, 1, !dbg !12188
  %36 = load i32, i32* %_pos29, align 4, !dbg !12188
  %37 = load i32, i32* %_len30, align 4, !dbg !12188
  %add53 = add i32 %36, %37, !dbg !12188
  %sub54 = sub i32 %add53, 1, !dbg !12188
  %sub55 = sub i32 63, %sub54, !dbg !12188
  %sh_prom56 = zext i32 %sub55 to i64, !dbg !12188
  %shr57 = lshr i64 -1, %sh_prom56, !dbg !12188
  %and58 = and i64 %add52, %shr57, !dbg !12188
  %add59 = add i64 0, %and58, !dbg !12188
  %neg60 = xor i64 %add59, -1, !dbg !12188
  %and61 = and i64 %conv48, %neg60, !dbg !12188
  %38 = load i32, i32* %_val31, align 4, !dbg !12188
  %conv62 = sext i32 %38 to i64, !dbg !12188
  %or63 = or i64 %and61, %conv62, !dbg !12188
  %conv64 = trunc i64 %or63 to i32, !dbg !12188
  store i32 %conv64, i32* %_var28, align 4, !dbg !12188
  store i32 %conv64, i32* %tmp47, align 4, !dbg !12188
  %39 = load i32, i32* %tmp47, align 4, !dbg !12188
  store i32 %39, i32* %regval, align 4, !dbg !12192
  %40 = load i32, i32* %regval, align 4, !dbg !12193
  %41 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !12194
  %mac_regs65 = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %41, i32 0, i32 6, !dbg !12195
  %42 = load i8*, i8** %mac_regs65, align 8, !dbg !12195
  %add.ptr66 = getelementptr i8, i8* %42, i64 4, !dbg !12196
  call void @writel(i32 %40, i8* %add.ptr66) #7, !dbg !12197
  ret void, !dbg !12198
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @xlgmac_config_rss(%struct.xlgmac_pdata* %pdata) #0 !dbg !12199 {
entry:
  %pdata.addr = alloca %struct.xlgmac_pdata*, align 8
  %ret = alloca i32, align 4
  store %struct.xlgmac_pdata* %pdata, %struct.xlgmac_pdata** %pdata.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xlgmac_pdata** %pdata.addr, metadata !12200, metadata !DIExpression()), !dbg !12201
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !12202, metadata !DIExpression()), !dbg !12203
  %0 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !12204
  %hw_feat = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %0, i32 0, i32 7, !dbg !12206
  %rss = getelementptr inbounds %struct.xlgmac_hw_features, %struct.xlgmac_hw_features* %hw_feat, i32 0, i32 23, !dbg !12207
  %1 = load i32, i32* %rss, align 4, !dbg !12207
  %tobool = icmp ne i32 %1, 0, !dbg !12204
  br i1 %tobool, label %if.end, label %if.then, !dbg !12208

if.then:                                          ; preds = %entry
  br label %if.end8, !dbg !12209

if.end:                                           ; preds = %entry
  %2 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !12210
  %netdev = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %2, i32 0, i32 0, !dbg !12212
  %3 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !12212
  %features = getelementptr inbounds %struct.net_device, %struct.net_device* %3, i32 0, i32 15, !dbg !12213
  %4 = load i64, i64* %features, align 8, !dbg !12213
  %and = and i64 %4, 549755813888, !dbg !12214
  %tobool1 = icmp ne i64 %and, 0, !dbg !12214
  br i1 %tobool1, label %if.then2, label %if.else, !dbg !12215

if.then2:                                         ; preds = %if.end
  %5 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !12216
  %call = call i32 @xlgmac_enable_rss(%struct.xlgmac_pdata* %5) #7, !dbg !12217
  store i32 %call, i32* %ret, align 4, !dbg !12218
  br label %if.end4, !dbg !12219

if.else:                                          ; preds = %if.end
  %6 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !12220
  %call3 = call i32 @xlgmac_disable_rss(%struct.xlgmac_pdata* %6) #7, !dbg !12221
  store i32 %call3, i32* %ret, align 4, !dbg !12222
  br label %if.end4

if.end4:                                          ; preds = %if.else, %if.then2
  %7 = load i32, i32* %ret, align 4, !dbg !12223
  %tobool5 = icmp ne i32 %7, 0, !dbg !12223
  br i1 %tobool5, label %if.then6, label %if.end8, !dbg !12225

if.then6:                                         ; preds = %if.end4
  %8 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !12226
  %netdev7 = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %8, i32 0, i32 0, !dbg !12227
  %9 = load %struct.net_device*, %struct.net_device** %netdev7, align 8, !dbg !12227
  call void (%struct.net_device*, i8*, ...) @netdev_err(%struct.net_device* %9, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str, i64 0, i64 0)) #10, !dbg !12228
  br label %if.end8, !dbg !12228

if.end8:                                          ; preds = %if.then, %if.then6, %if.end4
  ret void, !dbg !12229
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @xlgmac_enable_dma_interrupts(%struct.xlgmac_pdata* %pdata) #0 !dbg !12230 {
entry:
  %pdata.addr = alloca %struct.xlgmac_pdata*, align 8
  %dma_ch_isr = alloca i32, align 4
  %dma_ch_ier = alloca i32, align 4
  %channel = alloca %struct.xlgmac_channel*, align 8
  %i = alloca i32, align 4
  %_var = alloca i32, align 4
  %_pos = alloca i32, align 4
  %_len = alloca i32, align 4
  %_val = alloca i32, align 4
  %tmp = alloca i32, align 4
  %_var26 = alloca i32, align 4
  %_pos27 = alloca i32, align 4
  %_len28 = alloca i32, align 4
  %_val29 = alloca i32, align 4
  %tmp45 = alloca i32, align 4
  %_var63 = alloca i32, align 4
  %_pos64 = alloca i32, align 4
  %_len65 = alloca i32, align 4
  %_val66 = alloca i32, align 4
  %tmp82 = alloca i32, align 4
  %_var102 = alloca i32, align 4
  %_pos103 = alloca i32, align 4
  %_len104 = alloca i32, align 4
  %_val105 = alloca i32, align 4
  %tmp121 = alloca i32, align 4
  %_var142 = alloca i32, align 4
  %_pos143 = alloca i32, align 4
  %_len144 = alloca i32, align 4
  %_val145 = alloca i32, align 4
  %tmp161 = alloca i32, align 4
  %_var182 = alloca i32, align 4
  %_pos183 = alloca i32, align 4
  %_len184 = alloca i32, align 4
  %_val185 = alloca i32, align 4
  %tmp201 = alloca i32, align 4
  store %struct.xlgmac_pdata* %pdata, %struct.xlgmac_pdata** %pdata.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xlgmac_pdata** %pdata.addr, metadata !12231, metadata !DIExpression()), !dbg !12232
  call void @llvm.dbg.declare(metadata i32* %dma_ch_isr, metadata !12233, metadata !DIExpression()), !dbg !12234
  call void @llvm.dbg.declare(metadata i32* %dma_ch_ier, metadata !12235, metadata !DIExpression()), !dbg !12236
  call void @llvm.dbg.declare(metadata %struct.xlgmac_channel** %channel, metadata !12237, metadata !DIExpression()), !dbg !12238
  call void @llvm.dbg.declare(metadata i32* %i, metadata !12239, metadata !DIExpression()), !dbg !12240
  %0 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !12241
  %channel_head = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %0, i32 0, i32 9, !dbg !12242
  %1 = load %struct.xlgmac_channel*, %struct.xlgmac_channel** %channel_head, align 8, !dbg !12242
  store %struct.xlgmac_channel* %1, %struct.xlgmac_channel** %channel, align 8, !dbg !12243
  store i32 0, i32* %i, align 4, !dbg !12244
  br label %for.cond, !dbg !12246

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i32, i32* %i, align 4, !dbg !12247
  %3 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !12249
  %channel_count = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %3, i32 0, i32 10, !dbg !12250
  %4 = load i32, i32* %channel_count, align 8, !dbg !12250
  %cmp = icmp ult i32 %2, %4, !dbg !12251
  br i1 %cmp, label %for.body, label %for.end, !dbg !12252

for.body:                                         ; preds = %for.cond
  %5 = load %struct.xlgmac_channel*, %struct.xlgmac_channel** %channel, align 8, !dbg !12253
  %dma_regs = getelementptr inbounds %struct.xlgmac_channel, %struct.xlgmac_channel* %5, i32 0, i32 3, !dbg !12253
  %6 = load i8*, i8** %dma_regs, align 32, !dbg !12253
  %add.ptr = getelementptr i8, i8* %6, i64 96, !dbg !12253
  %call = call i32 @readl(i8* %add.ptr) #7, !dbg !12255
  store i32 %call, i32* %dma_ch_isr, align 4, !dbg !12256
  %7 = load i32, i32* %dma_ch_isr, align 4, !dbg !12257
  %8 = load %struct.xlgmac_channel*, %struct.xlgmac_channel** %channel, align 8, !dbg !12258
  %dma_regs1 = getelementptr inbounds %struct.xlgmac_channel, %struct.xlgmac_channel* %8, i32 0, i32 3, !dbg !12258
  %9 = load i8*, i8** %dma_regs1, align 32, !dbg !12258
  %add.ptr2 = getelementptr i8, i8* %9, i64 96, !dbg !12258
  call void @writel(i32 %7, i8* %add.ptr2) #7, !dbg !12259
  store i32 0, i32* %dma_ch_ier, align 4, !dbg !12260
  call void @llvm.dbg.declare(metadata i32* %_var, metadata !12261, metadata !DIExpression()), !dbg !12263
  %10 = load i32, i32* %dma_ch_ier, align 4, !dbg !12263
  store i32 %10, i32* %_var, align 4, !dbg !12263
  call void @llvm.dbg.declare(metadata i32* %_pos, metadata !12264, metadata !DIExpression()), !dbg !12263
  store i32 16, i32* %_pos, align 4, !dbg !12263
  call void @llvm.dbg.declare(metadata i32* %_len, metadata !12265, metadata !DIExpression()), !dbg !12263
  store i32 1, i32* %_len, align 4, !dbg !12263
  call void @llvm.dbg.declare(metadata i32* %_val, metadata !12266, metadata !DIExpression()), !dbg !12263
  store i32 1, i32* %_val, align 4, !dbg !12263
  %11 = load i32, i32* %_val, align 4, !dbg !12263
  %12 = load i32, i32* %_pos, align 4, !dbg !12263
  %shl = shl i32 %11, %12, !dbg !12263
  %conv = sext i32 %shl to i64, !dbg !12263
  %13 = load i32, i32* %_pos, align 4, !dbg !12263
  %sh_prom = zext i32 %13 to i64, !dbg !12263
  %shl3 = shl i64 1, %sh_prom, !dbg !12263
  %sub = sub i64 -1, %shl3, !dbg !12263
  %add = add i64 %sub, 1, !dbg !12263
  %14 = load i32, i32* %_pos, align 4, !dbg !12263
  %15 = load i32, i32* %_len, align 4, !dbg !12263
  %add4 = add i32 %14, %15, !dbg !12263
  %sub5 = sub i32 %add4, 1, !dbg !12263
  %sub6 = sub i32 63, %sub5, !dbg !12263
  %sh_prom7 = zext i32 %sub6 to i64, !dbg !12263
  %shr = lshr i64 -1, %sh_prom7, !dbg !12263
  %and = and i64 %add, %shr, !dbg !12263
  %add8 = add i64 0, %and, !dbg !12263
  %and9 = and i64 %conv, %add8, !dbg !12263
  %conv10 = trunc i64 %and9 to i32, !dbg !12263
  store i32 %conv10, i32* %_val, align 4, !dbg !12263
  %16 = load i32, i32* %_var, align 4, !dbg !12263
  %conv11 = zext i32 %16 to i64, !dbg !12263
  %17 = load i32, i32* %_pos, align 4, !dbg !12263
  %sh_prom12 = zext i32 %17 to i64, !dbg !12263
  %shl13 = shl i64 1, %sh_prom12, !dbg !12263
  %sub14 = sub i64 -1, %shl13, !dbg !12263
  %add15 = add i64 %sub14, 1, !dbg !12263
  %18 = load i32, i32* %_pos, align 4, !dbg !12263
  %19 = load i32, i32* %_len, align 4, !dbg !12263
  %add16 = add i32 %18, %19, !dbg !12263
  %sub17 = sub i32 %add16, 1, !dbg !12263
  %sub18 = sub i32 63, %sub17, !dbg !12263
  %sh_prom19 = zext i32 %sub18 to i64, !dbg !12263
  %shr20 = lshr i64 -1, %sh_prom19, !dbg !12263
  %and21 = and i64 %add15, %shr20, !dbg !12263
  %add22 = add i64 0, %and21, !dbg !12263
  %neg = xor i64 %add22, -1, !dbg !12263
  %and23 = and i64 %conv11, %neg, !dbg !12263
  %20 = load i32, i32* %_val, align 4, !dbg !12263
  %conv24 = sext i32 %20 to i64, !dbg !12263
  %or = or i64 %and23, %conv24, !dbg !12263
  %conv25 = trunc i64 %or to i32, !dbg !12263
  store i32 %conv25, i32* %_var, align 4, !dbg !12263
  store i32 %conv25, i32* %tmp, align 4, !dbg !12263
  %21 = load i32, i32* %tmp, align 4, !dbg !12263
  store i32 %21, i32* %dma_ch_ier, align 4, !dbg !12267
  call void @llvm.dbg.declare(metadata i32* %_var26, metadata !12268, metadata !DIExpression()), !dbg !12270
  %22 = load i32, i32* %dma_ch_ier, align 4, !dbg !12270
  store i32 %22, i32* %_var26, align 4, !dbg !12270
  call void @llvm.dbg.declare(metadata i32* %_pos27, metadata !12271, metadata !DIExpression()), !dbg !12270
  store i32 15, i32* %_pos27, align 4, !dbg !12270
  call void @llvm.dbg.declare(metadata i32* %_len28, metadata !12272, metadata !DIExpression()), !dbg !12270
  store i32 1, i32* %_len28, align 4, !dbg !12270
  call void @llvm.dbg.declare(metadata i32* %_val29, metadata !12273, metadata !DIExpression()), !dbg !12270
  store i32 1, i32* %_val29, align 4, !dbg !12270
  %23 = load i32, i32* %_val29, align 4, !dbg !12270
  %24 = load i32, i32* %_pos27, align 4, !dbg !12270
  %shl30 = shl i32 %23, %24, !dbg !12270
  %conv31 = sext i32 %shl30 to i64, !dbg !12270
  %25 = load i32, i32* %_pos27, align 4, !dbg !12270
  %sh_prom32 = zext i32 %25 to i64, !dbg !12270
  %shl33 = shl i64 1, %sh_prom32, !dbg !12270
  %sub34 = sub i64 -1, %shl33, !dbg !12270
  %add35 = add i64 %sub34, 1, !dbg !12270
  %26 = load i32, i32* %_pos27, align 4, !dbg !12270
  %27 = load i32, i32* %_len28, align 4, !dbg !12270
  %add36 = add i32 %26, %27, !dbg !12270
  %sub37 = sub i32 %add36, 1, !dbg !12270
  %sub38 = sub i32 63, %sub37, !dbg !12270
  %sh_prom39 = zext i32 %sub38 to i64, !dbg !12270
  %shr40 = lshr i64 -1, %sh_prom39, !dbg !12270
  %and41 = and i64 %add35, %shr40, !dbg !12270
  %add42 = add i64 0, %and41, !dbg !12270
  %and43 = and i64 %conv31, %add42, !dbg !12270
  %conv44 = trunc i64 %and43 to i32, !dbg !12270
  store i32 %conv44, i32* %_val29, align 4, !dbg !12270
  %28 = load i32, i32* %_var26, align 4, !dbg !12270
  %conv46 = zext i32 %28 to i64, !dbg !12270
  %29 = load i32, i32* %_pos27, align 4, !dbg !12270
  %sh_prom47 = zext i32 %29 to i64, !dbg !12270
  %shl48 = shl i64 1, %sh_prom47, !dbg !12270
  %sub49 = sub i64 -1, %shl48, !dbg !12270
  %add50 = add i64 %sub49, 1, !dbg !12270
  %30 = load i32, i32* %_pos27, align 4, !dbg !12270
  %31 = load i32, i32* %_len28, align 4, !dbg !12270
  %add51 = add i32 %30, %31, !dbg !12270
  %sub52 = sub i32 %add51, 1, !dbg !12270
  %sub53 = sub i32 63, %sub52, !dbg !12270
  %sh_prom54 = zext i32 %sub53 to i64, !dbg !12270
  %shr55 = lshr i64 -1, %sh_prom54, !dbg !12270
  %and56 = and i64 %add50, %shr55, !dbg !12270
  %add57 = add i64 0, %and56, !dbg !12270
  %neg58 = xor i64 %add57, -1, !dbg !12270
  %and59 = and i64 %conv46, %neg58, !dbg !12270
  %32 = load i32, i32* %_val29, align 4, !dbg !12270
  %conv60 = sext i32 %32 to i64, !dbg !12270
  %or61 = or i64 %and59, %conv60, !dbg !12270
  %conv62 = trunc i64 %or61 to i32, !dbg !12270
  store i32 %conv62, i32* %_var26, align 4, !dbg !12270
  store i32 %conv62, i32* %tmp45, align 4, !dbg !12270
  %33 = load i32, i32* %tmp45, align 4, !dbg !12270
  store i32 %33, i32* %dma_ch_ier, align 4, !dbg !12274
  call void @llvm.dbg.declare(metadata i32* %_var63, metadata !12275, metadata !DIExpression()), !dbg !12277
  %34 = load i32, i32* %dma_ch_ier, align 4, !dbg !12277
  store i32 %34, i32* %_var63, align 4, !dbg !12277
  call void @llvm.dbg.declare(metadata i32* %_pos64, metadata !12278, metadata !DIExpression()), !dbg !12277
  store i32 12, i32* %_pos64, align 4, !dbg !12277
  call void @llvm.dbg.declare(metadata i32* %_len65, metadata !12279, metadata !DIExpression()), !dbg !12277
  store i32 1, i32* %_len65, align 4, !dbg !12277
  call void @llvm.dbg.declare(metadata i32* %_val66, metadata !12280, metadata !DIExpression()), !dbg !12277
  store i32 1, i32* %_val66, align 4, !dbg !12277
  %35 = load i32, i32* %_val66, align 4, !dbg !12277
  %36 = load i32, i32* %_pos64, align 4, !dbg !12277
  %shl67 = shl i32 %35, %36, !dbg !12277
  %conv68 = sext i32 %shl67 to i64, !dbg !12277
  %37 = load i32, i32* %_pos64, align 4, !dbg !12277
  %sh_prom69 = zext i32 %37 to i64, !dbg !12277
  %shl70 = shl i64 1, %sh_prom69, !dbg !12277
  %sub71 = sub i64 -1, %shl70, !dbg !12277
  %add72 = add i64 %sub71, 1, !dbg !12277
  %38 = load i32, i32* %_pos64, align 4, !dbg !12277
  %39 = load i32, i32* %_len65, align 4, !dbg !12277
  %add73 = add i32 %38, %39, !dbg !12277
  %sub74 = sub i32 %add73, 1, !dbg !12277
  %sub75 = sub i32 63, %sub74, !dbg !12277
  %sh_prom76 = zext i32 %sub75 to i64, !dbg !12277
  %shr77 = lshr i64 -1, %sh_prom76, !dbg !12277
  %and78 = and i64 %add72, %shr77, !dbg !12277
  %add79 = add i64 0, %and78, !dbg !12277
  %and80 = and i64 %conv68, %add79, !dbg !12277
  %conv81 = trunc i64 %and80 to i32, !dbg !12277
  store i32 %conv81, i32* %_val66, align 4, !dbg !12277
  %40 = load i32, i32* %_var63, align 4, !dbg !12277
  %conv83 = zext i32 %40 to i64, !dbg !12277
  %41 = load i32, i32* %_pos64, align 4, !dbg !12277
  %sh_prom84 = zext i32 %41 to i64, !dbg !12277
  %shl85 = shl i64 1, %sh_prom84, !dbg !12277
  %sub86 = sub i64 -1, %shl85, !dbg !12277
  %add87 = add i64 %sub86, 1, !dbg !12277
  %42 = load i32, i32* %_pos64, align 4, !dbg !12277
  %43 = load i32, i32* %_len65, align 4, !dbg !12277
  %add88 = add i32 %42, %43, !dbg !12277
  %sub89 = sub i32 %add88, 1, !dbg !12277
  %sub90 = sub i32 63, %sub89, !dbg !12277
  %sh_prom91 = zext i32 %sub90 to i64, !dbg !12277
  %shr92 = lshr i64 -1, %sh_prom91, !dbg !12277
  %and93 = and i64 %add87, %shr92, !dbg !12277
  %add94 = add i64 0, %and93, !dbg !12277
  %neg95 = xor i64 %add94, -1, !dbg !12277
  %and96 = and i64 %conv83, %neg95, !dbg !12277
  %44 = load i32, i32* %_val66, align 4, !dbg !12277
  %conv97 = sext i32 %44 to i64, !dbg !12277
  %or98 = or i64 %and96, %conv97, !dbg !12277
  %conv99 = trunc i64 %or98 to i32, !dbg !12277
  store i32 %conv99, i32* %_var63, align 4, !dbg !12277
  store i32 %conv99, i32* %tmp82, align 4, !dbg !12277
  %45 = load i32, i32* %tmp82, align 4, !dbg !12277
  store i32 %45, i32* %dma_ch_ier, align 4, !dbg !12281
  %46 = load %struct.xlgmac_channel*, %struct.xlgmac_channel** %channel, align 8, !dbg !12282
  %tx_ring = getelementptr inbounds %struct.xlgmac_channel, %struct.xlgmac_channel* %46, i32 0, i32 10, !dbg !12284
  %47 = load %struct.xlgmac_ring*, %struct.xlgmac_ring** %tx_ring, align 16, !dbg !12284
  %tobool = icmp ne %struct.xlgmac_ring* %47, null, !dbg !12282
  br i1 %tobool, label %if.then, label %if.end139, !dbg !12285

if.then:                                          ; preds = %for.body
  %48 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !12286
  %per_channel_irq = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %48, i32 0, i32 34, !dbg !12289
  %49 = load i32, i32* %per_channel_irq, align 8, !dbg !12289
  %tobool100 = icmp ne i32 %49, 0, !dbg !12286
  br i1 %tobool100, label %if.end, label %if.then101, !dbg !12290

if.then101:                                       ; preds = %if.then
  call void @llvm.dbg.declare(metadata i32* %_var102, metadata !12291, metadata !DIExpression()), !dbg !12293
  %50 = load i32, i32* %dma_ch_ier, align 4, !dbg !12293
  store i32 %50, i32* %_var102, align 4, !dbg !12293
  call void @llvm.dbg.declare(metadata i32* %_pos103, metadata !12294, metadata !DIExpression()), !dbg !12293
  store i32 0, i32* %_pos103, align 4, !dbg !12293
  call void @llvm.dbg.declare(metadata i32* %_len104, metadata !12295, metadata !DIExpression()), !dbg !12293
  store i32 1, i32* %_len104, align 4, !dbg !12293
  call void @llvm.dbg.declare(metadata i32* %_val105, metadata !12296, metadata !DIExpression()), !dbg !12293
  store i32 1, i32* %_val105, align 4, !dbg !12293
  %51 = load i32, i32* %_val105, align 4, !dbg !12293
  %52 = load i32, i32* %_pos103, align 4, !dbg !12293
  %shl106 = shl i32 %51, %52, !dbg !12293
  %conv107 = sext i32 %shl106 to i64, !dbg !12293
  %53 = load i32, i32* %_pos103, align 4, !dbg !12293
  %sh_prom108 = zext i32 %53 to i64, !dbg !12293
  %shl109 = shl i64 1, %sh_prom108, !dbg !12293
  %sub110 = sub i64 -1, %shl109, !dbg !12293
  %add111 = add i64 %sub110, 1, !dbg !12293
  %54 = load i32, i32* %_pos103, align 4, !dbg !12293
  %55 = load i32, i32* %_len104, align 4, !dbg !12293
  %add112 = add i32 %54, %55, !dbg !12293
  %sub113 = sub i32 %add112, 1, !dbg !12293
  %sub114 = sub i32 63, %sub113, !dbg !12293
  %sh_prom115 = zext i32 %sub114 to i64, !dbg !12293
  %shr116 = lshr i64 -1, %sh_prom115, !dbg !12293
  %and117 = and i64 %add111, %shr116, !dbg !12293
  %add118 = add i64 0, %and117, !dbg !12293
  %and119 = and i64 %conv107, %add118, !dbg !12293
  %conv120 = trunc i64 %and119 to i32, !dbg !12293
  store i32 %conv120, i32* %_val105, align 4, !dbg !12293
  %56 = load i32, i32* %_var102, align 4, !dbg !12293
  %conv122 = zext i32 %56 to i64, !dbg !12293
  %57 = load i32, i32* %_pos103, align 4, !dbg !12293
  %sh_prom123 = zext i32 %57 to i64, !dbg !12293
  %shl124 = shl i64 1, %sh_prom123, !dbg !12293
  %sub125 = sub i64 -1, %shl124, !dbg !12293
  %add126 = add i64 %sub125, 1, !dbg !12293
  %58 = load i32, i32* %_pos103, align 4, !dbg !12293
  %59 = load i32, i32* %_len104, align 4, !dbg !12293
  %add127 = add i32 %58, %59, !dbg !12293
  %sub128 = sub i32 %add127, 1, !dbg !12293
  %sub129 = sub i32 63, %sub128, !dbg !12293
  %sh_prom130 = zext i32 %sub129 to i64, !dbg !12293
  %shr131 = lshr i64 -1, %sh_prom130, !dbg !12293
  %and132 = and i64 %add126, %shr131, !dbg !12293
  %add133 = add i64 0, %and132, !dbg !12293
  %neg134 = xor i64 %add133, -1, !dbg !12293
  %and135 = and i64 %conv122, %neg134, !dbg !12293
  %60 = load i32, i32* %_val105, align 4, !dbg !12293
  %conv136 = sext i32 %60 to i64, !dbg !12293
  %or137 = or i64 %and135, %conv136, !dbg !12293
  %conv138 = trunc i64 %or137 to i32, !dbg !12293
  store i32 %conv138, i32* %_var102, align 4, !dbg !12293
  store i32 %conv138, i32* %tmp121, align 4, !dbg !12293
  %61 = load i32, i32* %tmp121, align 4, !dbg !12293
  store i32 %61, i32* %dma_ch_ier, align 4, !dbg !12297
  br label %if.end, !dbg !12298

if.end:                                           ; preds = %if.then101, %if.then
  br label %if.end139, !dbg !12299

if.end139:                                        ; preds = %if.end, %for.body
  %62 = load %struct.xlgmac_channel*, %struct.xlgmac_channel** %channel, align 8, !dbg !12300
  %rx_ring = getelementptr inbounds %struct.xlgmac_channel, %struct.xlgmac_channel* %62, i32 0, i32 11, !dbg !12302
  %63 = load %struct.xlgmac_ring*, %struct.xlgmac_ring** %rx_ring, align 8, !dbg !12302
  %tobool140 = icmp ne %struct.xlgmac_ring* %63, null, !dbg !12300
  br i1 %tobool140, label %if.then141, label %if.end220, !dbg !12303

if.then141:                                       ; preds = %if.end139
  call void @llvm.dbg.declare(metadata i32* %_var142, metadata !12304, metadata !DIExpression()), !dbg !12307
  %64 = load i32, i32* %dma_ch_ier, align 4, !dbg !12307
  store i32 %64, i32* %_var142, align 4, !dbg !12307
  call void @llvm.dbg.declare(metadata i32* %_pos143, metadata !12308, metadata !DIExpression()), !dbg !12307
  store i32 7, i32* %_pos143, align 4, !dbg !12307
  call void @llvm.dbg.declare(metadata i32* %_len144, metadata !12309, metadata !DIExpression()), !dbg !12307
  store i32 1, i32* %_len144, align 4, !dbg !12307
  call void @llvm.dbg.declare(metadata i32* %_val145, metadata !12310, metadata !DIExpression()), !dbg !12307
  store i32 1, i32* %_val145, align 4, !dbg !12307
  %65 = load i32, i32* %_val145, align 4, !dbg !12307
  %66 = load i32, i32* %_pos143, align 4, !dbg !12307
  %shl146 = shl i32 %65, %66, !dbg !12307
  %conv147 = sext i32 %shl146 to i64, !dbg !12307
  %67 = load i32, i32* %_pos143, align 4, !dbg !12307
  %sh_prom148 = zext i32 %67 to i64, !dbg !12307
  %shl149 = shl i64 1, %sh_prom148, !dbg !12307
  %sub150 = sub i64 -1, %shl149, !dbg !12307
  %add151 = add i64 %sub150, 1, !dbg !12307
  %68 = load i32, i32* %_pos143, align 4, !dbg !12307
  %69 = load i32, i32* %_len144, align 4, !dbg !12307
  %add152 = add i32 %68, %69, !dbg !12307
  %sub153 = sub i32 %add152, 1, !dbg !12307
  %sub154 = sub i32 63, %sub153, !dbg !12307
  %sh_prom155 = zext i32 %sub154 to i64, !dbg !12307
  %shr156 = lshr i64 -1, %sh_prom155, !dbg !12307
  %and157 = and i64 %add151, %shr156, !dbg !12307
  %add158 = add i64 0, %and157, !dbg !12307
  %and159 = and i64 %conv147, %add158, !dbg !12307
  %conv160 = trunc i64 %and159 to i32, !dbg !12307
  store i32 %conv160, i32* %_val145, align 4, !dbg !12307
  %70 = load i32, i32* %_var142, align 4, !dbg !12307
  %conv162 = zext i32 %70 to i64, !dbg !12307
  %71 = load i32, i32* %_pos143, align 4, !dbg !12307
  %sh_prom163 = zext i32 %71 to i64, !dbg !12307
  %shl164 = shl i64 1, %sh_prom163, !dbg !12307
  %sub165 = sub i64 -1, %shl164, !dbg !12307
  %add166 = add i64 %sub165, 1, !dbg !12307
  %72 = load i32, i32* %_pos143, align 4, !dbg !12307
  %73 = load i32, i32* %_len144, align 4, !dbg !12307
  %add167 = add i32 %72, %73, !dbg !12307
  %sub168 = sub i32 %add167, 1, !dbg !12307
  %sub169 = sub i32 63, %sub168, !dbg !12307
  %sh_prom170 = zext i32 %sub169 to i64, !dbg !12307
  %shr171 = lshr i64 -1, %sh_prom170, !dbg !12307
  %and172 = and i64 %add166, %shr171, !dbg !12307
  %add173 = add i64 0, %and172, !dbg !12307
  %neg174 = xor i64 %add173, -1, !dbg !12307
  %and175 = and i64 %conv162, %neg174, !dbg !12307
  %74 = load i32, i32* %_val145, align 4, !dbg !12307
  %conv176 = sext i32 %74 to i64, !dbg !12307
  %or177 = or i64 %and175, %conv176, !dbg !12307
  %conv178 = trunc i64 %or177 to i32, !dbg !12307
  store i32 %conv178, i32* %_var142, align 4, !dbg !12307
  store i32 %conv178, i32* %tmp161, align 4, !dbg !12307
  %75 = load i32, i32* %tmp161, align 4, !dbg !12307
  store i32 %75, i32* %dma_ch_ier, align 4, !dbg !12311
  %76 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !12312
  %per_channel_irq179 = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %76, i32 0, i32 34, !dbg !12314
  %77 = load i32, i32* %per_channel_irq179, align 8, !dbg !12314
  %tobool180 = icmp ne i32 %77, 0, !dbg !12312
  br i1 %tobool180, label %if.end219, label %if.then181, !dbg !12315

if.then181:                                       ; preds = %if.then141
  call void @llvm.dbg.declare(metadata i32* %_var182, metadata !12316, metadata !DIExpression()), !dbg !12318
  %78 = load i32, i32* %dma_ch_ier, align 4, !dbg !12318
  store i32 %78, i32* %_var182, align 4, !dbg !12318
  call void @llvm.dbg.declare(metadata i32* %_pos183, metadata !12319, metadata !DIExpression()), !dbg !12318
  store i32 6, i32* %_pos183, align 4, !dbg !12318
  call void @llvm.dbg.declare(metadata i32* %_len184, metadata !12320, metadata !DIExpression()), !dbg !12318
  store i32 1, i32* %_len184, align 4, !dbg !12318
  call void @llvm.dbg.declare(metadata i32* %_val185, metadata !12321, metadata !DIExpression()), !dbg !12318
  store i32 1, i32* %_val185, align 4, !dbg !12318
  %79 = load i32, i32* %_val185, align 4, !dbg !12318
  %80 = load i32, i32* %_pos183, align 4, !dbg !12318
  %shl186 = shl i32 %79, %80, !dbg !12318
  %conv187 = sext i32 %shl186 to i64, !dbg !12318
  %81 = load i32, i32* %_pos183, align 4, !dbg !12318
  %sh_prom188 = zext i32 %81 to i64, !dbg !12318
  %shl189 = shl i64 1, %sh_prom188, !dbg !12318
  %sub190 = sub i64 -1, %shl189, !dbg !12318
  %add191 = add i64 %sub190, 1, !dbg !12318
  %82 = load i32, i32* %_pos183, align 4, !dbg !12318
  %83 = load i32, i32* %_len184, align 4, !dbg !12318
  %add192 = add i32 %82, %83, !dbg !12318
  %sub193 = sub i32 %add192, 1, !dbg !12318
  %sub194 = sub i32 63, %sub193, !dbg !12318
  %sh_prom195 = zext i32 %sub194 to i64, !dbg !12318
  %shr196 = lshr i64 -1, %sh_prom195, !dbg !12318
  %and197 = and i64 %add191, %shr196, !dbg !12318
  %add198 = add i64 0, %and197, !dbg !12318
  %and199 = and i64 %conv187, %add198, !dbg !12318
  %conv200 = trunc i64 %and199 to i32, !dbg !12318
  store i32 %conv200, i32* %_val185, align 4, !dbg !12318
  %84 = load i32, i32* %_var182, align 4, !dbg !12318
  %conv202 = zext i32 %84 to i64, !dbg !12318
  %85 = load i32, i32* %_pos183, align 4, !dbg !12318
  %sh_prom203 = zext i32 %85 to i64, !dbg !12318
  %shl204 = shl i64 1, %sh_prom203, !dbg !12318
  %sub205 = sub i64 -1, %shl204, !dbg !12318
  %add206 = add i64 %sub205, 1, !dbg !12318
  %86 = load i32, i32* %_pos183, align 4, !dbg !12318
  %87 = load i32, i32* %_len184, align 4, !dbg !12318
  %add207 = add i32 %86, %87, !dbg !12318
  %sub208 = sub i32 %add207, 1, !dbg !12318
  %sub209 = sub i32 63, %sub208, !dbg !12318
  %sh_prom210 = zext i32 %sub209 to i64, !dbg !12318
  %shr211 = lshr i64 -1, %sh_prom210, !dbg !12318
  %and212 = and i64 %add206, %shr211, !dbg !12318
  %add213 = add i64 0, %and212, !dbg !12318
  %neg214 = xor i64 %add213, -1, !dbg !12318
  %and215 = and i64 %conv202, %neg214, !dbg !12318
  %88 = load i32, i32* %_val185, align 4, !dbg !12318
  %conv216 = sext i32 %88 to i64, !dbg !12318
  %or217 = or i64 %and215, %conv216, !dbg !12318
  %conv218 = trunc i64 %or217 to i32, !dbg !12318
  store i32 %conv218, i32* %_var182, align 4, !dbg !12318
  store i32 %conv218, i32* %tmp201, align 4, !dbg !12318
  %89 = load i32, i32* %tmp201, align 4, !dbg !12318
  store i32 %89, i32* %dma_ch_ier, align 4, !dbg !12322
  br label %if.end219, !dbg !12323

if.end219:                                        ; preds = %if.then181, %if.then141
  br label %if.end220, !dbg !12324

if.end220:                                        ; preds = %if.end219, %if.end139
  %90 = load i32, i32* %dma_ch_isr, align 4, !dbg !12325
  %91 = load %struct.xlgmac_channel*, %struct.xlgmac_channel** %channel, align 8, !dbg !12326
  %dma_regs221 = getelementptr inbounds %struct.xlgmac_channel, %struct.xlgmac_channel* %91, i32 0, i32 3, !dbg !12326
  %92 = load i8*, i8** %dma_regs221, align 32, !dbg !12326
  %add.ptr222 = getelementptr i8, i8* %92, i64 56, !dbg !12326
  call void @writel(i32 %90, i8* %add.ptr222) #7, !dbg !12327
  br label %for.inc, !dbg !12328

for.inc:                                          ; preds = %if.end220
  %93 = load i32, i32* %i, align 4, !dbg !12329
  %inc = add i32 %93, 1, !dbg !12329
  store i32 %inc, i32* %i, align 4, !dbg !12329
  %94 = load %struct.xlgmac_channel*, %struct.xlgmac_channel** %channel, align 8, !dbg !12330
  %incdec.ptr = getelementptr %struct.xlgmac_channel, %struct.xlgmac_channel* %94, i32 1, !dbg !12330
  store %struct.xlgmac_channel* %incdec.ptr, %struct.xlgmac_channel** %channel, align 8, !dbg !12330
  br label %for.cond, !dbg !12331, !llvm.loop !12332

for.end:                                          ; preds = %for.cond
  ret void, !dbg !12334
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @xlgmac_config_mtl_mode(%struct.xlgmac_pdata* %pdata) #0 !dbg !12335 {
entry:
  %pdata.addr = alloca %struct.xlgmac_pdata*, align 8
  %i = alloca i32, align 4
  %regval = alloca i32, align 4
  %_var = alloca i32, align 4
  %_pos = alloca i32, align 4
  %_len = alloca i32, align 4
  %_val = alloca i32, align 4
  %tmp = alloca i32, align 4
  %_var32 = alloca i32, align 4
  %_pos33 = alloca i32, align 4
  %_len34 = alloca i32, align 4
  %_val35 = alloca i32, align 4
  %tmp51 = alloca i32, align 4
  %_var82 = alloca i32, align 4
  %_pos83 = alloca i32, align 4
  %_len84 = alloca i32, align 4
  %_val85 = alloca i32, align 4
  %tmp101 = alloca i32, align 4
  %_var128 = alloca i32, align 4
  %_pos129 = alloca i32, align 4
  %_len130 = alloca i32, align 4
  %_val131 = alloca i32, align 4
  %tmp147 = alloca i32, align 4
  store %struct.xlgmac_pdata* %pdata, %struct.xlgmac_pdata** %pdata.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xlgmac_pdata** %pdata.addr, metadata !12336, metadata !DIExpression()), !dbg !12337
  call void @llvm.dbg.declare(metadata i32* %i, metadata !12338, metadata !DIExpression()), !dbg !12339
  call void @llvm.dbg.declare(metadata i32* %regval, metadata !12340, metadata !DIExpression()), !dbg !12341
  %0 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !12342
  %mac_regs = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %0, i32 0, i32 6, !dbg !12343
  %1 = load i8*, i8** %mac_regs, align 8, !dbg !12343
  %add.ptr = getelementptr i8, i8* %1, i64 4096, !dbg !12344
  %call = call i32 @readl(i8* %add.ptr) #7, !dbg !12345
  store i32 %call, i32* %regval, align 4, !dbg !12346
  call void @llvm.dbg.declare(metadata i32* %_var, metadata !12347, metadata !DIExpression()), !dbg !12349
  %2 = load i32, i32* %regval, align 4, !dbg !12349
  store i32 %2, i32* %_var, align 4, !dbg !12349
  call void @llvm.dbg.declare(metadata i32* %_pos, metadata !12350, metadata !DIExpression()), !dbg !12349
  store i32 5, i32* %_pos, align 4, !dbg !12349
  call void @llvm.dbg.declare(metadata i32* %_len, metadata !12351, metadata !DIExpression()), !dbg !12349
  store i32 2, i32* %_len, align 4, !dbg !12349
  call void @llvm.dbg.declare(metadata i32* %_val, metadata !12352, metadata !DIExpression()), !dbg !12349
  store i32 0, i32* %_val, align 4, !dbg !12349
  %3 = load i32, i32* %_val, align 4, !dbg !12349
  %4 = load i32, i32* %_pos, align 4, !dbg !12349
  %shl = shl i32 %3, %4, !dbg !12349
  %conv = sext i32 %shl to i64, !dbg !12349
  %5 = load i32, i32* %_pos, align 4, !dbg !12349
  %sh_prom = zext i32 %5 to i64, !dbg !12349
  %shl1 = shl i64 1, %sh_prom, !dbg !12349
  %sub = sub i64 -1, %shl1, !dbg !12349
  %add = add i64 %sub, 1, !dbg !12349
  %6 = load i32, i32* %_pos, align 4, !dbg !12349
  %7 = load i32, i32* %_len, align 4, !dbg !12349
  %add2 = add i32 %6, %7, !dbg !12349
  %sub3 = sub i32 %add2, 1, !dbg !12349
  %sub4 = sub i32 63, %sub3, !dbg !12349
  %sh_prom5 = zext i32 %sub4 to i64, !dbg !12349
  %shr = lshr i64 -1, %sh_prom5, !dbg !12349
  %and = and i64 %add, %shr, !dbg !12349
  %add6 = add i64 0, %and, !dbg !12349
  %and7 = and i64 %conv, %add6, !dbg !12349
  %conv8 = trunc i64 %and7 to i32, !dbg !12349
  store i32 %conv8, i32* %_val, align 4, !dbg !12349
  %8 = load i32, i32* %_var, align 4, !dbg !12349
  %conv9 = zext i32 %8 to i64, !dbg !12349
  %9 = load i32, i32* %_pos, align 4, !dbg !12349
  %sh_prom10 = zext i32 %9 to i64, !dbg !12349
  %shl11 = shl i64 1, %sh_prom10, !dbg !12349
  %sub12 = sub i64 -1, %shl11, !dbg !12349
  %add13 = add i64 %sub12, 1, !dbg !12349
  %10 = load i32, i32* %_pos, align 4, !dbg !12349
  %11 = load i32, i32* %_len, align 4, !dbg !12349
  %add14 = add i32 %10, %11, !dbg !12349
  %sub15 = sub i32 %add14, 1, !dbg !12349
  %sub16 = sub i32 63, %sub15, !dbg !12349
  %sh_prom17 = zext i32 %sub16 to i64, !dbg !12349
  %shr18 = lshr i64 -1, %sh_prom17, !dbg !12349
  %and19 = and i64 %add13, %shr18, !dbg !12349
  %add20 = add i64 0, %and19, !dbg !12349
  %neg = xor i64 %add20, -1, !dbg !12349
  %and21 = and i64 %conv9, %neg, !dbg !12349
  %12 = load i32, i32* %_val, align 4, !dbg !12349
  %conv22 = sext i32 %12 to i64, !dbg !12349
  %or = or i64 %and21, %conv22, !dbg !12349
  %conv23 = trunc i64 %or to i32, !dbg !12349
  store i32 %conv23, i32* %_var, align 4, !dbg !12349
  store i32 %conv23, i32* %tmp, align 4, !dbg !12349
  %13 = load i32, i32* %tmp, align 4, !dbg !12349
  store i32 %13, i32* %regval, align 4, !dbg !12353
  %14 = load i32, i32* %regval, align 4, !dbg !12354
  %15 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !12355
  %mac_regs24 = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %15, i32 0, i32 6, !dbg !12356
  %16 = load i8*, i8** %mac_regs24, align 8, !dbg !12356
  %add.ptr25 = getelementptr i8, i8* %16, i64 4096, !dbg !12357
  call void @writel(i32 %14, i8* %add.ptr25) #7, !dbg !12358
  store i32 0, i32* %i, align 4, !dbg !12359
  br label %for.cond, !dbg !12361

for.cond:                                         ; preds = %for.inc, %entry
  %17 = load i32, i32* %i, align 4, !dbg !12362
  %18 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !12364
  %hw_feat = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %18, i32 0, i32 7, !dbg !12365
  %tc_cnt = getelementptr inbounds %struct.xlgmac_hw_features, %struct.xlgmac_hw_features* %hw_feat, i32 0, i32 24, !dbg !12366
  %19 = load i32, i32* %tc_cnt, align 8, !dbg !12366
  %cmp = icmp ult i32 %17, %19, !dbg !12367
  br i1 %cmp, label %for.body, label %for.end, !dbg !12368

for.body:                                         ; preds = %for.cond
  %20 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !12369
  %mac_regs27 = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %20, i32 0, i32 6, !dbg !12369
  %21 = load i8*, i8** %mac_regs27, align 8, !dbg !12369
  %add.ptr28 = getelementptr i8, i8* %21, i64 4352, !dbg !12369
  %22 = load i32, i32* %i, align 4, !dbg !12369
  %mul = mul i32 %22, 128, !dbg !12369
  %idx.ext = zext i32 %mul to i64, !dbg !12369
  %add.ptr29 = getelementptr i8, i8* %add.ptr28, i64 %idx.ext, !dbg !12369
  %add.ptr30 = getelementptr i8, i8* %add.ptr29, i64 16, !dbg !12369
  %call31 = call i32 @readl(i8* %add.ptr30) #7, !dbg !12371
  store i32 %call31, i32* %regval, align 4, !dbg !12372
  call void @llvm.dbg.declare(metadata i32* %_var32, metadata !12373, metadata !DIExpression()), !dbg !12375
  %23 = load i32, i32* %regval, align 4, !dbg !12375
  store i32 %23, i32* %_var32, align 4, !dbg !12375
  call void @llvm.dbg.declare(metadata i32* %_pos33, metadata !12376, metadata !DIExpression()), !dbg !12375
  store i32 0, i32* %_pos33, align 4, !dbg !12375
  call void @llvm.dbg.declare(metadata i32* %_len34, metadata !12377, metadata !DIExpression()), !dbg !12375
  store i32 2, i32* %_len34, align 4, !dbg !12375
  call void @llvm.dbg.declare(metadata i32* %_val35, metadata !12378, metadata !DIExpression()), !dbg !12375
  store i32 2, i32* %_val35, align 4, !dbg !12375
  %24 = load i32, i32* %_val35, align 4, !dbg !12375
  %25 = load i32, i32* %_pos33, align 4, !dbg !12375
  %shl36 = shl i32 %24, %25, !dbg !12375
  %conv37 = sext i32 %shl36 to i64, !dbg !12375
  %26 = load i32, i32* %_pos33, align 4, !dbg !12375
  %sh_prom38 = zext i32 %26 to i64, !dbg !12375
  %shl39 = shl i64 1, %sh_prom38, !dbg !12375
  %sub40 = sub i64 -1, %shl39, !dbg !12375
  %add41 = add i64 %sub40, 1, !dbg !12375
  %27 = load i32, i32* %_pos33, align 4, !dbg !12375
  %28 = load i32, i32* %_len34, align 4, !dbg !12375
  %add42 = add i32 %27, %28, !dbg !12375
  %sub43 = sub i32 %add42, 1, !dbg !12375
  %sub44 = sub i32 63, %sub43, !dbg !12375
  %sh_prom45 = zext i32 %sub44 to i64, !dbg !12375
  %shr46 = lshr i64 -1, %sh_prom45, !dbg !12375
  %and47 = and i64 %add41, %shr46, !dbg !12375
  %add48 = add i64 0, %and47, !dbg !12375
  %and49 = and i64 %conv37, %add48, !dbg !12375
  %conv50 = trunc i64 %and49 to i32, !dbg !12375
  store i32 %conv50, i32* %_val35, align 4, !dbg !12375
  %29 = load i32, i32* %_var32, align 4, !dbg !12375
  %conv52 = zext i32 %29 to i64, !dbg !12375
  %30 = load i32, i32* %_pos33, align 4, !dbg !12375
  %sh_prom53 = zext i32 %30 to i64, !dbg !12375
  %shl54 = shl i64 1, %sh_prom53, !dbg !12375
  %sub55 = sub i64 -1, %shl54, !dbg !12375
  %add56 = add i64 %sub55, 1, !dbg !12375
  %31 = load i32, i32* %_pos33, align 4, !dbg !12375
  %32 = load i32, i32* %_len34, align 4, !dbg !12375
  %add57 = add i32 %31, %32, !dbg !12375
  %sub58 = sub i32 %add57, 1, !dbg !12375
  %sub59 = sub i32 63, %sub58, !dbg !12375
  %sh_prom60 = zext i32 %sub59 to i64, !dbg !12375
  %shr61 = lshr i64 -1, %sh_prom60, !dbg !12375
  %and62 = and i64 %add56, %shr61, !dbg !12375
  %add63 = add i64 0, %and62, !dbg !12375
  %neg64 = xor i64 %add63, -1, !dbg !12375
  %and65 = and i64 %conv52, %neg64, !dbg !12375
  %33 = load i32, i32* %_val35, align 4, !dbg !12375
  %conv66 = sext i32 %33 to i64, !dbg !12375
  %or67 = or i64 %and65, %conv66, !dbg !12375
  %conv68 = trunc i64 %or67 to i32, !dbg !12375
  store i32 %conv68, i32* %_var32, align 4, !dbg !12375
  store i32 %conv68, i32* %tmp51, align 4, !dbg !12375
  %34 = load i32, i32* %tmp51, align 4, !dbg !12375
  store i32 %34, i32* %regval, align 4, !dbg !12379
  %35 = load i32, i32* %regval, align 4, !dbg !12380
  %36 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !12381
  %mac_regs69 = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %36, i32 0, i32 6, !dbg !12381
  %37 = load i8*, i8** %mac_regs69, align 8, !dbg !12381
  %add.ptr70 = getelementptr i8, i8* %37, i64 4352, !dbg !12381
  %38 = load i32, i32* %i, align 4, !dbg !12381
  %mul71 = mul i32 %38, 128, !dbg !12381
  %idx.ext72 = zext i32 %mul71 to i64, !dbg !12381
  %add.ptr73 = getelementptr i8, i8* %add.ptr70, i64 %idx.ext72, !dbg !12381
  %add.ptr74 = getelementptr i8, i8* %add.ptr73, i64 16, !dbg !12381
  call void @writel(i32 %35, i8* %add.ptr74) #7, !dbg !12382
  %39 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !12383
  %mac_regs75 = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %39, i32 0, i32 6, !dbg !12383
  %40 = load i8*, i8** %mac_regs75, align 8, !dbg !12383
  %add.ptr76 = getelementptr i8, i8* %40, i64 4352, !dbg !12383
  %41 = load i32, i32* %i, align 4, !dbg !12383
  %mul77 = mul i32 %41, 128, !dbg !12383
  %idx.ext78 = zext i32 %mul77 to i64, !dbg !12383
  %add.ptr79 = getelementptr i8, i8* %add.ptr76, i64 %idx.ext78, !dbg !12383
  %add.ptr80 = getelementptr i8, i8* %add.ptr79, i64 24, !dbg !12383
  %call81 = call i32 @readl(i8* %add.ptr80) #7, !dbg !12384
  store i32 %call81, i32* %regval, align 4, !dbg !12385
  call void @llvm.dbg.declare(metadata i32* %_var82, metadata !12386, metadata !DIExpression()), !dbg !12388
  %42 = load i32, i32* %regval, align 4, !dbg !12388
  store i32 %42, i32* %_var82, align 4, !dbg !12388
  call void @llvm.dbg.declare(metadata i32* %_pos83, metadata !12389, metadata !DIExpression()), !dbg !12388
  store i32 0, i32* %_pos83, align 4, !dbg !12388
  call void @llvm.dbg.declare(metadata i32* %_len84, metadata !12390, metadata !DIExpression()), !dbg !12388
  store i32 21, i32* %_len84, align 4, !dbg !12388
  call void @llvm.dbg.declare(metadata i32* %_val85, metadata !12391, metadata !DIExpression()), !dbg !12388
  store i32 1, i32* %_val85, align 4, !dbg !12388
  %43 = load i32, i32* %_val85, align 4, !dbg !12388
  %44 = load i32, i32* %_pos83, align 4, !dbg !12388
  %shl86 = shl i32 %43, %44, !dbg !12388
  %conv87 = sext i32 %shl86 to i64, !dbg !12388
  %45 = load i32, i32* %_pos83, align 4, !dbg !12388
  %sh_prom88 = zext i32 %45 to i64, !dbg !12388
  %shl89 = shl i64 1, %sh_prom88, !dbg !12388
  %sub90 = sub i64 -1, %shl89, !dbg !12388
  %add91 = add i64 %sub90, 1, !dbg !12388
  %46 = load i32, i32* %_pos83, align 4, !dbg !12388
  %47 = load i32, i32* %_len84, align 4, !dbg !12388
  %add92 = add i32 %46, %47, !dbg !12388
  %sub93 = sub i32 %add92, 1, !dbg !12388
  %sub94 = sub i32 63, %sub93, !dbg !12388
  %sh_prom95 = zext i32 %sub94 to i64, !dbg !12388
  %shr96 = lshr i64 -1, %sh_prom95, !dbg !12388
  %and97 = and i64 %add91, %shr96, !dbg !12388
  %add98 = add i64 0, %and97, !dbg !12388
  %and99 = and i64 %conv87, %add98, !dbg !12388
  %conv100 = trunc i64 %and99 to i32, !dbg !12388
  store i32 %conv100, i32* %_val85, align 4, !dbg !12388
  %48 = load i32, i32* %_var82, align 4, !dbg !12388
  %conv102 = zext i32 %48 to i64, !dbg !12388
  %49 = load i32, i32* %_pos83, align 4, !dbg !12388
  %sh_prom103 = zext i32 %49 to i64, !dbg !12388
  %shl104 = shl i64 1, %sh_prom103, !dbg !12388
  %sub105 = sub i64 -1, %shl104, !dbg !12388
  %add106 = add i64 %sub105, 1, !dbg !12388
  %50 = load i32, i32* %_pos83, align 4, !dbg !12388
  %51 = load i32, i32* %_len84, align 4, !dbg !12388
  %add107 = add i32 %50, %51, !dbg !12388
  %sub108 = sub i32 %add107, 1, !dbg !12388
  %sub109 = sub i32 63, %sub108, !dbg !12388
  %sh_prom110 = zext i32 %sub109 to i64, !dbg !12388
  %shr111 = lshr i64 -1, %sh_prom110, !dbg !12388
  %and112 = and i64 %add106, %shr111, !dbg !12388
  %add113 = add i64 0, %and112, !dbg !12388
  %neg114 = xor i64 %add113, -1, !dbg !12388
  %and115 = and i64 %conv102, %neg114, !dbg !12388
  %52 = load i32, i32* %_val85, align 4, !dbg !12388
  %conv116 = sext i32 %52 to i64, !dbg !12388
  %or117 = or i64 %and115, %conv116, !dbg !12388
  %conv118 = trunc i64 %or117 to i32, !dbg !12388
  store i32 %conv118, i32* %_var82, align 4, !dbg !12388
  store i32 %conv118, i32* %tmp101, align 4, !dbg !12388
  %53 = load i32, i32* %tmp101, align 4, !dbg !12388
  store i32 %53, i32* %regval, align 4, !dbg !12392
  %54 = load i32, i32* %regval, align 4, !dbg !12393
  %55 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !12394
  %mac_regs119 = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %55, i32 0, i32 6, !dbg !12394
  %56 = load i8*, i8** %mac_regs119, align 8, !dbg !12394
  %add.ptr120 = getelementptr i8, i8* %56, i64 4352, !dbg !12394
  %57 = load i32, i32* %i, align 4, !dbg !12394
  %mul121 = mul i32 %57, 128, !dbg !12394
  %idx.ext122 = zext i32 %mul121 to i64, !dbg !12394
  %add.ptr123 = getelementptr i8, i8* %add.ptr120, i64 %idx.ext122, !dbg !12394
  %add.ptr124 = getelementptr i8, i8* %add.ptr123, i64 24, !dbg !12394
  call void @writel(i32 %54, i8* %add.ptr124) #7, !dbg !12395
  br label %for.inc, !dbg !12396

for.inc:                                          ; preds = %for.body
  %58 = load i32, i32* %i, align 4, !dbg !12397
  %inc = add i32 %58, 1, !dbg !12397
  store i32 %inc, i32* %i, align 4, !dbg !12397
  br label %for.cond, !dbg !12398, !llvm.loop !12399

for.end:                                          ; preds = %for.cond
  %59 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !12401
  %mac_regs125 = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %59, i32 0, i32 6, !dbg !12402
  %60 = load i8*, i8** %mac_regs125, align 8, !dbg !12402
  %add.ptr126 = getelementptr i8, i8* %60, i64 4096, !dbg !12403
  %call127 = call i32 @readl(i8* %add.ptr126) #7, !dbg !12404
  store i32 %call127, i32* %regval, align 4, !dbg !12405
  call void @llvm.dbg.declare(metadata i32* %_var128, metadata !12406, metadata !DIExpression()), !dbg !12408
  %61 = load i32, i32* %regval, align 4, !dbg !12408
  store i32 %61, i32* %_var128, align 4, !dbg !12408
  call void @llvm.dbg.declare(metadata i32* %_pos129, metadata !12409, metadata !DIExpression()), !dbg !12408
  store i32 2, i32* %_pos129, align 4, !dbg !12408
  call void @llvm.dbg.declare(metadata i32* %_len130, metadata !12410, metadata !DIExpression()), !dbg !12408
  store i32 1, i32* %_len130, align 4, !dbg !12408
  call void @llvm.dbg.declare(metadata i32* %_val131, metadata !12411, metadata !DIExpression()), !dbg !12408
  store i32 0, i32* %_val131, align 4, !dbg !12408
  %62 = load i32, i32* %_val131, align 4, !dbg !12408
  %63 = load i32, i32* %_pos129, align 4, !dbg !12408
  %shl132 = shl i32 %62, %63, !dbg !12408
  %conv133 = sext i32 %shl132 to i64, !dbg !12408
  %64 = load i32, i32* %_pos129, align 4, !dbg !12408
  %sh_prom134 = zext i32 %64 to i64, !dbg !12408
  %shl135 = shl i64 1, %sh_prom134, !dbg !12408
  %sub136 = sub i64 -1, %shl135, !dbg !12408
  %add137 = add i64 %sub136, 1, !dbg !12408
  %65 = load i32, i32* %_pos129, align 4, !dbg !12408
  %66 = load i32, i32* %_len130, align 4, !dbg !12408
  %add138 = add i32 %65, %66, !dbg !12408
  %sub139 = sub i32 %add138, 1, !dbg !12408
  %sub140 = sub i32 63, %sub139, !dbg !12408
  %sh_prom141 = zext i32 %sub140 to i64, !dbg !12408
  %shr142 = lshr i64 -1, %sh_prom141, !dbg !12408
  %and143 = and i64 %add137, %shr142, !dbg !12408
  %add144 = add i64 0, %and143, !dbg !12408
  %and145 = and i64 %conv133, %add144, !dbg !12408
  %conv146 = trunc i64 %and145 to i32, !dbg !12408
  store i32 %conv146, i32* %_val131, align 4, !dbg !12408
  %67 = load i32, i32* %_var128, align 4, !dbg !12408
  %conv148 = zext i32 %67 to i64, !dbg !12408
  %68 = load i32, i32* %_pos129, align 4, !dbg !12408
  %sh_prom149 = zext i32 %68 to i64, !dbg !12408
  %shl150 = shl i64 1, %sh_prom149, !dbg !12408
  %sub151 = sub i64 -1, %shl150, !dbg !12408
  %add152 = add i64 %sub151, 1, !dbg !12408
  %69 = load i32, i32* %_pos129, align 4, !dbg !12408
  %70 = load i32, i32* %_len130, align 4, !dbg !12408
  %add153 = add i32 %69, %70, !dbg !12408
  %sub154 = sub i32 %add153, 1, !dbg !12408
  %sub155 = sub i32 63, %sub154, !dbg !12408
  %sh_prom156 = zext i32 %sub155 to i64, !dbg !12408
  %shr157 = lshr i64 -1, %sh_prom156, !dbg !12408
  %and158 = and i64 %add152, %shr157, !dbg !12408
  %add159 = add i64 0, %and158, !dbg !12408
  %neg160 = xor i64 %add159, -1, !dbg !12408
  %and161 = and i64 %conv148, %neg160, !dbg !12408
  %71 = load i32, i32* %_val131, align 4, !dbg !12408
  %conv162 = sext i32 %71 to i64, !dbg !12408
  %or163 = or i64 %and161, %conv162, !dbg !12408
  %conv164 = trunc i64 %or163 to i32, !dbg !12408
  store i32 %conv164, i32* %_var128, align 4, !dbg !12408
  store i32 %conv164, i32* %tmp147, align 4, !dbg !12408
  %72 = load i32, i32* %tmp147, align 4, !dbg !12408
  store i32 %72, i32* %regval, align 4, !dbg !12412
  %73 = load i32, i32* %regval, align 4, !dbg !12413
  %74 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !12414
  %mac_regs165 = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %74, i32 0, i32 6, !dbg !12415
  %75 = load i8*, i8** %mac_regs165, align 8, !dbg !12415
  %add.ptr166 = getelementptr i8, i8* %75, i64 4096, !dbg !12416
  call void @writel(i32 %73, i8* %add.ptr166) #7, !dbg !12417
  ret void, !dbg !12418
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @xlgmac_config_queue_mapping(%struct.xlgmac_pdata* %pdata) #0 !dbg !12419 {
entry:
  %pdata.addr = alloca %struct.xlgmac_pdata*, align 8
  %ppq = alloca i32, align 4
  %ppq_extra = alloca i32, align 4
  %prio = alloca i32, align 4
  %prio_queues = alloca i32, align 4
  %qptc = alloca i32, align 4
  %qptc_extra = alloca i32, align 4
  %queue = alloca i32, align 4
  %reg = alloca i32, align 4
  %regval = alloca i32, align 4
  %mask = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %tmp = alloca i32, align 4
  %_var = alloca i32, align 4
  %_pos = alloca i32, align 4
  %_len = alloca i32, align 4
  %_val = alloca i32, align 4
  %tmp19 = alloca i32, align 4
  %tmp44 = alloca i32, align 4
  %_var52 = alloca i32, align 4
  %_pos53 = alloca i32, align 4
  %_len54 = alloca i32, align 4
  %_val55 = alloca i32, align 4
  %tmp71 = alloca i32, align 4
  %__UNIQUE_ID___x334 = alloca i32, align 4
  %__UNIQUE_ID___y335 = alloca i32, align 4
  %tmp99 = alloca i32, align 4
  %tmp112 = alloca i32, align 4
  %tmp122 = alloca i32, align 4
  store %struct.xlgmac_pdata* %pdata, %struct.xlgmac_pdata** %pdata.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xlgmac_pdata** %pdata.addr, metadata !12420, metadata !DIExpression()), !dbg !12421
  call void @llvm.dbg.declare(metadata i32* %ppq, metadata !12422, metadata !DIExpression()), !dbg !12423
  call void @llvm.dbg.declare(metadata i32* %ppq_extra, metadata !12424, metadata !DIExpression()), !dbg !12425
  call void @llvm.dbg.declare(metadata i32* %prio, metadata !12426, metadata !DIExpression()), !dbg !12427
  call void @llvm.dbg.declare(metadata i32* %prio_queues, metadata !12428, metadata !DIExpression()), !dbg !12429
  call void @llvm.dbg.declare(metadata i32* %qptc, metadata !12430, metadata !DIExpression()), !dbg !12431
  call void @llvm.dbg.declare(metadata i32* %qptc_extra, metadata !12432, metadata !DIExpression()), !dbg !12433
  call void @llvm.dbg.declare(metadata i32* %queue, metadata !12434, metadata !DIExpression()), !dbg !12435
  call void @llvm.dbg.declare(metadata i32* %reg, metadata !12436, metadata !DIExpression()), !dbg !12437
  call void @llvm.dbg.declare(metadata i32* %regval, metadata !12438, metadata !DIExpression()), !dbg !12439
  call void @llvm.dbg.declare(metadata i32* %mask, metadata !12440, metadata !DIExpression()), !dbg !12441
  call void @llvm.dbg.declare(metadata i32* %i, metadata !12442, metadata !DIExpression()), !dbg !12443
  call void @llvm.dbg.declare(metadata i32* %j, metadata !12444, metadata !DIExpression()), !dbg !12445
  %0 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !12446
  %tx_q_count = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %0, i32 0, i32 15, !dbg !12447
  %1 = load i32, i32* %tx_q_count, align 4, !dbg !12447
  %2 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !12448
  %hw_feat = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %2, i32 0, i32 7, !dbg !12449
  %tc_cnt = getelementptr inbounds %struct.xlgmac_hw_features, %struct.xlgmac_hw_features* %hw_feat, i32 0, i32 24, !dbg !12450
  %3 = load i32, i32* %tc_cnt, align 8, !dbg !12450
  %div = udiv i32 %1, %3, !dbg !12451
  store i32 %div, i32* %qptc, align 4, !dbg !12452
  %4 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !12453
  %tx_q_count1 = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %4, i32 0, i32 15, !dbg !12454
  %5 = load i32, i32* %tx_q_count1, align 4, !dbg !12454
  %6 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !12455
  %hw_feat2 = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %6, i32 0, i32 7, !dbg !12456
  %tc_cnt3 = getelementptr inbounds %struct.xlgmac_hw_features, %struct.xlgmac_hw_features* %hw_feat2, i32 0, i32 24, !dbg !12457
  %7 = load i32, i32* %tc_cnt3, align 8, !dbg !12457
  %rem = urem i32 %5, %7, !dbg !12458
  store i32 %rem, i32* %qptc_extra, align 4, !dbg !12459
  store i32 0, i32* %i, align 4, !dbg !12460
  store i32 0, i32* %queue, align 4, !dbg !12462
  br label %for.cond, !dbg !12463

for.cond:                                         ; preds = %for.inc96, %entry
  %8 = load i32, i32* %i, align 4, !dbg !12464
  %9 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !12466
  %hw_feat4 = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %9, i32 0, i32 7, !dbg !12467
  %tc_cnt5 = getelementptr inbounds %struct.xlgmac_hw_features, %struct.xlgmac_hw_features* %hw_feat4, i32 0, i32 24, !dbg !12468
  %10 = load i32, i32* %tc_cnt5, align 8, !dbg !12468
  %cmp = icmp ult i32 %8, %10, !dbg !12469
  br i1 %cmp, label %for.body, label %for.end98, !dbg !12470

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %j, align 4, !dbg !12471
  br label %for.cond6, !dbg !12474

for.cond6:                                        ; preds = %for.inc, %for.body
  %11 = load i32, i32* %j, align 4, !dbg !12475
  %12 = load i32, i32* %qptc, align 4, !dbg !12477
  %cmp7 = icmp ult i32 %11, %12, !dbg !12478
  br i1 %cmp7, label %for.body8, label %for.end, !dbg !12479

for.body8:                                        ; preds = %for.cond6
  store i32 0, i32* %tmp, align 4, !dbg !12480
  %13 = load i32, i32* %tmp, align 4, !dbg !12484
  %14 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !12485
  %mac_regs = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %14, i32 0, i32 6, !dbg !12485
  %15 = load i8*, i8** %mac_regs, align 8, !dbg !12485
  %add.ptr = getelementptr i8, i8* %15, i64 4352, !dbg !12485
  %16 = load i32, i32* %queue, align 4, !dbg !12485
  %mul = mul i32 %16, 128, !dbg !12485
  %idx.ext = zext i32 %mul to i64, !dbg !12485
  %add.ptr9 = getelementptr i8, i8* %add.ptr, i64 %idx.ext, !dbg !12485
  %add.ptr10 = getelementptr i8, i8* %add.ptr9, i64 0, !dbg !12485
  %call = call i32 @readl(i8* %add.ptr10) #7, !dbg !12486
  store i32 %call, i32* %regval, align 4, !dbg !12487
  call void @llvm.dbg.declare(metadata i32* %_var, metadata !12488, metadata !DIExpression()), !dbg !12490
  %17 = load i32, i32* %regval, align 4, !dbg !12490
  store i32 %17, i32* %_var, align 4, !dbg !12490
  call void @llvm.dbg.declare(metadata i32* %_pos, metadata !12491, metadata !DIExpression()), !dbg !12490
  store i32 8, i32* %_pos, align 4, !dbg !12490
  call void @llvm.dbg.declare(metadata i32* %_len, metadata !12492, metadata !DIExpression()), !dbg !12490
  store i32 3, i32* %_len, align 4, !dbg !12490
  call void @llvm.dbg.declare(metadata i32* %_val, metadata !12493, metadata !DIExpression()), !dbg !12490
  %18 = load i32, i32* %i, align 4, !dbg !12490
  store i32 %18, i32* %_val, align 4, !dbg !12490
  %19 = load i32, i32* %_val, align 4, !dbg !12490
  %20 = load i32, i32* %_pos, align 4, !dbg !12490
  %shl = shl i32 %19, %20, !dbg !12490
  %conv = zext i32 %shl to i64, !dbg !12490
  %21 = load i32, i32* %_pos, align 4, !dbg !12490
  %sh_prom = zext i32 %21 to i64, !dbg !12490
  %shl11 = shl i64 1, %sh_prom, !dbg !12490
  %sub = sub i64 -1, %shl11, !dbg !12490
  %add = add i64 %sub, 1, !dbg !12490
  %22 = load i32, i32* %_pos, align 4, !dbg !12490
  %23 = load i32, i32* %_len, align 4, !dbg !12490
  %add12 = add i32 %22, %23, !dbg !12490
  %sub13 = sub i32 %add12, 1, !dbg !12490
  %sub14 = sub i32 63, %sub13, !dbg !12490
  %sh_prom15 = zext i32 %sub14 to i64, !dbg !12490
  %shr = lshr i64 -1, %sh_prom15, !dbg !12490
  %and = and i64 %add, %shr, !dbg !12490
  %add16 = add i64 0, %and, !dbg !12490
  %and17 = and i64 %conv, %add16, !dbg !12490
  %conv18 = trunc i64 %and17 to i32, !dbg !12490
  store i32 %conv18, i32* %_val, align 4, !dbg !12490
  %24 = load i32, i32* %_var, align 4, !dbg !12490
  %conv20 = zext i32 %24 to i64, !dbg !12490
  %25 = load i32, i32* %_pos, align 4, !dbg !12490
  %sh_prom21 = zext i32 %25 to i64, !dbg !12490
  %shl22 = shl i64 1, %sh_prom21, !dbg !12490
  %sub23 = sub i64 -1, %shl22, !dbg !12490
  %add24 = add i64 %sub23, 1, !dbg !12490
  %26 = load i32, i32* %_pos, align 4, !dbg !12490
  %27 = load i32, i32* %_len, align 4, !dbg !12490
  %add25 = add i32 %26, %27, !dbg !12490
  %sub26 = sub i32 %add25, 1, !dbg !12490
  %sub27 = sub i32 63, %sub26, !dbg !12490
  %sh_prom28 = zext i32 %sub27 to i64, !dbg !12490
  %shr29 = lshr i64 -1, %sh_prom28, !dbg !12490
  %and30 = and i64 %add24, %shr29, !dbg !12490
  %add31 = add i64 0, %and30, !dbg !12490
  %neg = xor i64 %add31, -1, !dbg !12490
  %and32 = and i64 %conv20, %neg, !dbg !12490
  %28 = load i32, i32* %_val, align 4, !dbg !12490
  %conv33 = zext i32 %28 to i64, !dbg !12490
  %or = or i64 %and32, %conv33, !dbg !12490
  %conv34 = trunc i64 %or to i32, !dbg !12490
  store i32 %conv34, i32* %_var, align 4, !dbg !12490
  store i32 %conv34, i32* %tmp19, align 4, !dbg !12490
  %29 = load i32, i32* %tmp19, align 4, !dbg !12490
  store i32 %29, i32* %regval, align 4, !dbg !12494
  %30 = load i32, i32* %regval, align 4, !dbg !12495
  %31 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !12496
  %mac_regs35 = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %31, i32 0, i32 6, !dbg !12496
  %32 = load i8*, i8** %mac_regs35, align 8, !dbg !12496
  %add.ptr36 = getelementptr i8, i8* %32, i64 4352, !dbg !12496
  %33 = load i32, i32* %queue, align 4, !dbg !12496
  %mul37 = mul i32 %33, 128, !dbg !12496
  %idx.ext38 = zext i32 %mul37 to i64, !dbg !12496
  %add.ptr39 = getelementptr i8, i8* %add.ptr36, i64 %idx.ext38, !dbg !12496
  %add.ptr40 = getelementptr i8, i8* %add.ptr39, i64 0, !dbg !12496
  call void @writel(i32 %30, i8* %add.ptr40) #7, !dbg !12497
  %34 = load i32, i32* %queue, align 4, !dbg !12498
  %inc = add i32 %34, 1, !dbg !12498
  store i32 %inc, i32* %queue, align 4, !dbg !12498
  br label %for.inc, !dbg !12499

for.inc:                                          ; preds = %for.body8
  %35 = load i32, i32* %j, align 4, !dbg !12500
  %inc41 = add i32 %35, 1, !dbg !12500
  store i32 %inc41, i32* %j, align 4, !dbg !12500
  br label %for.cond6, !dbg !12501, !llvm.loop !12502

for.end:                                          ; preds = %for.cond6
  %36 = load i32, i32* %i, align 4, !dbg !12504
  %37 = load i32, i32* %qptc_extra, align 4, !dbg !12506
  %cmp42 = icmp ult i32 %36, %37, !dbg !12507
  br i1 %cmp42, label %if.then, label %if.end, !dbg !12508

if.then:                                          ; preds = %for.end
  store i32 0, i32* %tmp44, align 4, !dbg !12509
  %38 = load i32, i32* %tmp44, align 4, !dbg !12513
  %39 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !12514
  %mac_regs45 = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %39, i32 0, i32 6, !dbg !12514
  %40 = load i8*, i8** %mac_regs45, align 8, !dbg !12514
  %add.ptr46 = getelementptr i8, i8* %40, i64 4352, !dbg !12514
  %41 = load i32, i32* %queue, align 4, !dbg !12514
  %mul47 = mul i32 %41, 128, !dbg !12514
  %idx.ext48 = zext i32 %mul47 to i64, !dbg !12514
  %add.ptr49 = getelementptr i8, i8* %add.ptr46, i64 %idx.ext48, !dbg !12514
  %add.ptr50 = getelementptr i8, i8* %add.ptr49, i64 0, !dbg !12514
  %call51 = call i32 @readl(i8* %add.ptr50) #7, !dbg !12515
  store i32 %call51, i32* %regval, align 4, !dbg !12516
  call void @llvm.dbg.declare(metadata i32* %_var52, metadata !12517, metadata !DIExpression()), !dbg !12519
  %42 = load i32, i32* %regval, align 4, !dbg !12519
  store i32 %42, i32* %_var52, align 4, !dbg !12519
  call void @llvm.dbg.declare(metadata i32* %_pos53, metadata !12520, metadata !DIExpression()), !dbg !12519
  store i32 8, i32* %_pos53, align 4, !dbg !12519
  call void @llvm.dbg.declare(metadata i32* %_len54, metadata !12521, metadata !DIExpression()), !dbg !12519
  store i32 3, i32* %_len54, align 4, !dbg !12519
  call void @llvm.dbg.declare(metadata i32* %_val55, metadata !12522, metadata !DIExpression()), !dbg !12519
  %43 = load i32, i32* %i, align 4, !dbg !12519
  store i32 %43, i32* %_val55, align 4, !dbg !12519
  %44 = load i32, i32* %_val55, align 4, !dbg !12519
  %45 = load i32, i32* %_pos53, align 4, !dbg !12519
  %shl56 = shl i32 %44, %45, !dbg !12519
  %conv57 = zext i32 %shl56 to i64, !dbg !12519
  %46 = load i32, i32* %_pos53, align 4, !dbg !12519
  %sh_prom58 = zext i32 %46 to i64, !dbg !12519
  %shl59 = shl i64 1, %sh_prom58, !dbg !12519
  %sub60 = sub i64 -1, %shl59, !dbg !12519
  %add61 = add i64 %sub60, 1, !dbg !12519
  %47 = load i32, i32* %_pos53, align 4, !dbg !12519
  %48 = load i32, i32* %_len54, align 4, !dbg !12519
  %add62 = add i32 %47, %48, !dbg !12519
  %sub63 = sub i32 %add62, 1, !dbg !12519
  %sub64 = sub i32 63, %sub63, !dbg !12519
  %sh_prom65 = zext i32 %sub64 to i64, !dbg !12519
  %shr66 = lshr i64 -1, %sh_prom65, !dbg !12519
  %and67 = and i64 %add61, %shr66, !dbg !12519
  %add68 = add i64 0, %and67, !dbg !12519
  %and69 = and i64 %conv57, %add68, !dbg !12519
  %conv70 = trunc i64 %and69 to i32, !dbg !12519
  store i32 %conv70, i32* %_val55, align 4, !dbg !12519
  %49 = load i32, i32* %_var52, align 4, !dbg !12519
  %conv72 = zext i32 %49 to i64, !dbg !12519
  %50 = load i32, i32* %_pos53, align 4, !dbg !12519
  %sh_prom73 = zext i32 %50 to i64, !dbg !12519
  %shl74 = shl i64 1, %sh_prom73, !dbg !12519
  %sub75 = sub i64 -1, %shl74, !dbg !12519
  %add76 = add i64 %sub75, 1, !dbg !12519
  %51 = load i32, i32* %_pos53, align 4, !dbg !12519
  %52 = load i32, i32* %_len54, align 4, !dbg !12519
  %add77 = add i32 %51, %52, !dbg !12519
  %sub78 = sub i32 %add77, 1, !dbg !12519
  %sub79 = sub i32 63, %sub78, !dbg !12519
  %sh_prom80 = zext i32 %sub79 to i64, !dbg !12519
  %shr81 = lshr i64 -1, %sh_prom80, !dbg !12519
  %and82 = and i64 %add76, %shr81, !dbg !12519
  %add83 = add i64 0, %and82, !dbg !12519
  %neg84 = xor i64 %add83, -1, !dbg !12519
  %and85 = and i64 %conv72, %neg84, !dbg !12519
  %53 = load i32, i32* %_val55, align 4, !dbg !12519
  %conv86 = zext i32 %53 to i64, !dbg !12519
  %or87 = or i64 %and85, %conv86, !dbg !12519
  %conv88 = trunc i64 %or87 to i32, !dbg !12519
  store i32 %conv88, i32* %_var52, align 4, !dbg !12519
  store i32 %conv88, i32* %tmp71, align 4, !dbg !12519
  %54 = load i32, i32* %tmp71, align 4, !dbg !12519
  store i32 %54, i32* %regval, align 4, !dbg !12523
  %55 = load i32, i32* %regval, align 4, !dbg !12524
  %56 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !12525
  %mac_regs89 = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %56, i32 0, i32 6, !dbg !12525
  %57 = load i8*, i8** %mac_regs89, align 8, !dbg !12525
  %add.ptr90 = getelementptr i8, i8* %57, i64 4352, !dbg !12525
  %58 = load i32, i32* %queue, align 4, !dbg !12525
  %mul91 = mul i32 %58, 128, !dbg !12525
  %idx.ext92 = zext i32 %mul91 to i64, !dbg !12525
  %add.ptr93 = getelementptr i8, i8* %add.ptr90, i64 %idx.ext92, !dbg !12525
  %add.ptr94 = getelementptr i8, i8* %add.ptr93, i64 0, !dbg !12525
  call void @writel(i32 %55, i8* %add.ptr94) #7, !dbg !12526
  %59 = load i32, i32* %queue, align 4, !dbg !12527
  %inc95 = add i32 %59, 1, !dbg !12527
  store i32 %inc95, i32* %queue, align 4, !dbg !12527
  br label %if.end, !dbg !12528

if.end:                                           ; preds = %if.then, %for.end
  br label %for.inc96, !dbg !12529

for.inc96:                                        ; preds = %if.end
  %60 = load i32, i32* %i, align 4, !dbg !12530
  %inc97 = add i32 %60, 1, !dbg !12530
  store i32 %inc97, i32* %i, align 4, !dbg !12530
  br label %for.cond, !dbg !12531, !llvm.loop !12532

for.end98:                                        ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___x334, metadata !12534, metadata !DIExpression()), !dbg !12536
  store i32 8, i32* %__UNIQUE_ID___x334, align 4, !dbg !12536
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___y335, metadata !12537, metadata !DIExpression()), !dbg !12536
  %61 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !12536
  %rx_q_count = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %61, i32 0, i32 16, !dbg !12536
  %62 = load i32, i32* %rx_q_count, align 8, !dbg !12536
  store i32 %62, i32* %__UNIQUE_ID___y335, align 4, !dbg !12536
  %63 = load i32, i32* %__UNIQUE_ID___x334, align 4, !dbg !12536
  %64 = load i32, i32* %__UNIQUE_ID___y335, align 4, !dbg !12536
  %cmp100 = icmp ult i32 %63, %64, !dbg !12536
  br i1 %cmp100, label %cond.true, label %cond.false, !dbg !12536

cond.true:                                        ; preds = %for.end98
  %65 = load i32, i32* %__UNIQUE_ID___x334, align 4, !dbg !12536
  br label %cond.end, !dbg !12536

cond.false:                                       ; preds = %for.end98
  %66 = load i32, i32* %__UNIQUE_ID___y335, align 4, !dbg !12536
  br label %cond.end, !dbg !12536

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %65, %cond.true ], [ %66, %cond.false ], !dbg !12536
  store i32 %cond, i32* %tmp99, align 4, !dbg !12536
  %67 = load i32, i32* %tmp99, align 4, !dbg !12536
  store i32 %67, i32* %prio_queues, align 4, !dbg !12538
  %68 = load i32, i32* %prio_queues, align 4, !dbg !12539
  %div102 = udiv i32 8, %68, !dbg !12540
  store i32 %div102, i32* %ppq, align 4, !dbg !12541
  %69 = load i32, i32* %prio_queues, align 4, !dbg !12542
  %rem103 = urem i32 8, %69, !dbg !12543
  store i32 %rem103, i32* %ppq_extra, align 4, !dbg !12544
  store i32 168, i32* %reg, align 4, !dbg !12545
  store i32 0, i32* %regval, align 4, !dbg !12546
  store i32 0, i32* %i, align 4, !dbg !12547
  store i32 0, i32* %prio, align 4, !dbg !12549
  br label %for.cond104, !dbg !12550

for.cond104:                                      ; preds = %if.end136, %if.then135, %cond.end
  %70 = load i32, i32* %i, align 4, !dbg !12551
  %71 = load i32, i32* %prio_queues, align 4, !dbg !12553
  %cmp105 = icmp ult i32 %70, %71, !dbg !12554
  br i1 %cmp105, label %for.body107, label %for.end141, !dbg !12555

for.body107:                                      ; preds = %for.cond104
  store i32 0, i32* %mask, align 4, !dbg !12556
  store i32 0, i32* %j, align 4, !dbg !12558
  br label %for.cond108, !dbg !12560

for.cond108:                                      ; preds = %for.inc116, %for.body107
  %72 = load i32, i32* %j, align 4, !dbg !12561
  %73 = load i32, i32* %ppq, align 4, !dbg !12563
  %cmp109 = icmp ult i32 %72, %73, !dbg !12564
  br i1 %cmp109, label %for.body111, label %for.end118, !dbg !12565

for.body111:                                      ; preds = %for.cond108
  store i32 0, i32* %tmp112, align 4, !dbg !12566
  %74 = load i32, i32* %tmp112, align 4, !dbg !12570
  %75 = load i32, i32* %prio, align 4, !dbg !12571
  %shl113 = shl i32 1, %75, !dbg !12572
  %76 = load i32, i32* %mask, align 4, !dbg !12573
  %or114 = or i32 %76, %shl113, !dbg !12573
  store i32 %or114, i32* %mask, align 4, !dbg !12573
  %77 = load i32, i32* %prio, align 4, !dbg !12574
  %inc115 = add i32 %77, 1, !dbg !12574
  store i32 %inc115, i32* %prio, align 4, !dbg !12574
  br label %for.inc116, !dbg !12575

for.inc116:                                       ; preds = %for.body111
  %78 = load i32, i32* %j, align 4, !dbg !12576
  %inc117 = add i32 %78, 1, !dbg !12576
  store i32 %inc117, i32* %j, align 4, !dbg !12576
  br label %for.cond108, !dbg !12577, !llvm.loop !12578

for.end118:                                       ; preds = %for.cond108
  %79 = load i32, i32* %i, align 4, !dbg !12580
  %80 = load i32, i32* %ppq_extra, align 4, !dbg !12582
  %cmp119 = icmp ult i32 %79, %80, !dbg !12583
  br i1 %cmp119, label %if.then121, label %if.end126, !dbg !12584

if.then121:                                       ; preds = %for.end118
  store i32 0, i32* %tmp122, align 4, !dbg !12585
  %81 = load i32, i32* %tmp122, align 4, !dbg !12589
  %82 = load i32, i32* %prio, align 4, !dbg !12590
  %shl123 = shl i32 1, %82, !dbg !12591
  %83 = load i32, i32* %mask, align 4, !dbg !12592
  %or124 = or i32 %83, %shl123, !dbg !12592
  store i32 %or124, i32* %mask, align 4, !dbg !12592
  %84 = load i32, i32* %prio, align 4, !dbg !12593
  %inc125 = add i32 %84, 1, !dbg !12593
  store i32 %inc125, i32* %prio, align 4, !dbg !12593
  br label %if.end126, !dbg !12594

if.end126:                                        ; preds = %if.then121, %for.end118
  %85 = load i32, i32* %mask, align 4, !dbg !12595
  %86 = load i32, i32* %i, align 4, !dbg !12596
  %inc127 = add i32 %86, 1, !dbg !12596
  store i32 %inc127, i32* %i, align 4, !dbg !12596
  %rem128 = urem i32 %86, 4, !dbg !12597
  %shl129 = shl i32 %rem128, 3, !dbg !12598
  %shl130 = shl i32 %85, %shl129, !dbg !12599
  %87 = load i32, i32* %regval, align 4, !dbg !12600
  %or131 = or i32 %87, %shl130, !dbg !12600
  store i32 %or131, i32* %regval, align 4, !dbg !12600
  %88 = load i32, i32* %i, align 4, !dbg !12601
  %rem132 = urem i32 %88, 4, !dbg !12603
  %tobool = icmp ne i32 %rem132, 0, !dbg !12603
  br i1 %tobool, label %land.lhs.true, label %if.end136, !dbg !12604

land.lhs.true:                                    ; preds = %if.end126
  %89 = load i32, i32* %i, align 4, !dbg !12605
  %90 = load i32, i32* %prio_queues, align 4, !dbg !12606
  %cmp133 = icmp ne i32 %89, %90, !dbg !12607
  br i1 %cmp133, label %if.then135, label %if.end136, !dbg !12608

if.then135:                                       ; preds = %land.lhs.true
  br label %for.cond104, !dbg !12609, !llvm.loop !12610

if.end136:                                        ; preds = %land.lhs.true, %if.end126
  %91 = load i32, i32* %regval, align 4, !dbg !12612
  %92 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !12613
  %mac_regs137 = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %92, i32 0, i32 6, !dbg !12614
  %93 = load i8*, i8** %mac_regs137, align 8, !dbg !12614
  %94 = load i32, i32* %reg, align 4, !dbg !12615
  %idx.ext138 = zext i32 %94 to i64, !dbg !12616
  %add.ptr139 = getelementptr i8, i8* %93, i64 %idx.ext138, !dbg !12616
  call void @writel(i32 %91, i8* %add.ptr139) #7, !dbg !12617
  %95 = load i32, i32* %reg, align 4, !dbg !12618
  %add140 = add i32 %95, 4, !dbg !12618
  store i32 %add140, i32* %reg, align 4, !dbg !12618
  store i32 0, i32* %regval, align 4, !dbg !12619
  br label %for.cond104, !dbg !12620, !llvm.loop !12610

for.end141:                                       ; preds = %for.cond104
  store i32 4144, i32* %reg, align 4, !dbg !12621
  %96 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !12622
  %mac_regs142 = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %96, i32 0, i32 6, !dbg !12623
  %97 = load i8*, i8** %mac_regs142, align 8, !dbg !12623
  %98 = load i32, i32* %reg, align 4, !dbg !12624
  %idx.ext143 = zext i32 %98 to i64, !dbg !12625
  %add.ptr144 = getelementptr i8, i8* %97, i64 %idx.ext143, !dbg !12625
  %call145 = call i32 @readl(i8* %add.ptr144) #7, !dbg !12626
  store i32 %call145, i32* %regval, align 4, !dbg !12627
  %99 = load i32, i32* %regval, align 4, !dbg !12628
  %or146 = or i32 %99, 50462976, !dbg !12628
  store i32 %or146, i32* %regval, align 4, !dbg !12628
  %100 = load i32, i32* %regval, align 4, !dbg !12629
  %101 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !12630
  %mac_regs147 = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %101, i32 0, i32 6, !dbg !12631
  %102 = load i8*, i8** %mac_regs147, align 8, !dbg !12631
  %103 = load i32, i32* %reg, align 4, !dbg !12632
  %idx.ext148 = zext i32 %103 to i64, !dbg !12633
  %add.ptr149 = getelementptr i8, i8* %102, i64 %idx.ext148, !dbg !12633
  call void @writel(i32 %100, i8* %add.ptr149) #7, !dbg !12634
  %104 = load i32, i32* %reg, align 4, !dbg !12635
  %add150 = add i32 %104, 4, !dbg !12635
  store i32 %add150, i32* %reg, align 4, !dbg !12635
  %105 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !12636
  %mac_regs151 = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %105, i32 0, i32 6, !dbg !12637
  %106 = load i8*, i8** %mac_regs151, align 8, !dbg !12637
  %107 = load i32, i32* %reg, align 4, !dbg !12638
  %idx.ext152 = zext i32 %107 to i64, !dbg !12639
  %add.ptr153 = getelementptr i8, i8* %106, i64 %idx.ext152, !dbg !12639
  %call154 = call i32 @readl(i8* %add.ptr153) #7, !dbg !12640
  store i32 %call154, i32* %regval, align 4, !dbg !12641
  %108 = load i32, i32* %regval, align 4, !dbg !12642
  %or155 = or i32 %108, 117835012, !dbg !12642
  store i32 %or155, i32* %regval, align 4, !dbg !12642
  %109 = load i32, i32* %regval, align 4, !dbg !12643
  %110 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !12644
  %mac_regs156 = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %110, i32 0, i32 6, !dbg !12645
  %111 = load i8*, i8** %mac_regs156, align 8, !dbg !12645
  %112 = load i32, i32* %reg, align 4, !dbg !12646
  %idx.ext157 = zext i32 %112 to i64, !dbg !12647
  %add.ptr158 = getelementptr i8, i8* %111, i64 %idx.ext157, !dbg !12647
  call void @writel(i32 %109, i8* %add.ptr158) #7, !dbg !12648
  %113 = load i32, i32* %reg, align 4, !dbg !12649
  %add159 = add i32 %113, 4, !dbg !12649
  store i32 %add159, i32* %reg, align 4, !dbg !12649
  %114 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !12650
  %mac_regs160 = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %114, i32 0, i32 6, !dbg !12651
  %115 = load i8*, i8** %mac_regs160, align 8, !dbg !12651
  %116 = load i32, i32* %reg, align 4, !dbg !12652
  %idx.ext161 = zext i32 %116 to i64, !dbg !12653
  %add.ptr162 = getelementptr i8, i8* %115, i64 %idx.ext161, !dbg !12653
  %call163 = call i32 @readl(i8* %add.ptr162) #7, !dbg !12654
  store i32 %call163, i32* %regval, align 4, !dbg !12655
  %117 = load i32, i32* %regval, align 4, !dbg !12656
  %or164 = or i32 %117, 185207048, !dbg !12656
  store i32 %or164, i32* %regval, align 4, !dbg !12656
  %118 = load i32, i32* %regval, align 4, !dbg !12657
  %119 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !12658
  %mac_regs165 = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %119, i32 0, i32 6, !dbg !12659
  %120 = load i8*, i8** %mac_regs165, align 8, !dbg !12659
  %121 = load i32, i32* %reg, align 4, !dbg !12660
  %idx.ext166 = zext i32 %121 to i64, !dbg !12661
  %add.ptr167 = getelementptr i8, i8* %120, i64 %idx.ext166, !dbg !12661
  call void @writel(i32 %118, i8* %add.ptr167) #7, !dbg !12662
  ret void, !dbg !12663
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @xlgmac_config_tx_fifo_size(%struct.xlgmac_pdata* %pdata) #0 !dbg !12664 {
entry:
  %pdata.addr = alloca %struct.xlgmac_pdata*, align 8
  %fifo_size = alloca i32, align 4
  %i = alloca i32, align 4
  %regval = alloca i32, align 4
  %_var = alloca i32, align 4
  %_pos = alloca i32, align 4
  %_len = alloca i32, align 4
  %_val = alloca i32, align 4
  %tmp = alloca i32, align 4
  store %struct.xlgmac_pdata* %pdata, %struct.xlgmac_pdata** %pdata.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xlgmac_pdata** %pdata.addr, metadata !12665, metadata !DIExpression()), !dbg !12666
  call void @llvm.dbg.declare(metadata i32* %fifo_size, metadata !12667, metadata !DIExpression()), !dbg !12668
  call void @llvm.dbg.declare(metadata i32* %i, metadata !12669, metadata !DIExpression()), !dbg !12670
  call void @llvm.dbg.declare(metadata i32* %regval, metadata !12671, metadata !DIExpression()), !dbg !12672
  %0 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !12673
  %hw_feat = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %0, i32 0, i32 7, !dbg !12674
  %tx_fifo_size = getelementptr inbounds %struct.xlgmac_hw_features, %struct.xlgmac_hw_features* %hw_feat, i32 0, i32 16, !dbg !12675
  %1 = load i32, i32* %tx_fifo_size, align 8, !dbg !12675
  %2 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !12676
  %tx_q_count = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %2, i32 0, i32 15, !dbg !12677
  %3 = load i32, i32* %tx_q_count, align 4, !dbg !12677
  %call = call i32 @xlgmac_calculate_per_queue_fifo(i32 %1, i32 %3) #7, !dbg !12678
  store i32 %call, i32* %fifo_size, align 4, !dbg !12679
  store i32 0, i32* %i, align 4, !dbg !12680
  br label %for.cond, !dbg !12682

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load i32, i32* %i, align 4, !dbg !12683
  %5 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !12685
  %tx_q_count1 = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %5, i32 0, i32 15, !dbg !12686
  %6 = load i32, i32* %tx_q_count1, align 4, !dbg !12686
  %cmp = icmp ult i32 %4, %6, !dbg !12687
  br i1 %cmp, label %for.body, label %for.end, !dbg !12688

for.body:                                         ; preds = %for.cond
  %7 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !12689
  %mac_regs = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %7, i32 0, i32 6, !dbg !12689
  %8 = load i8*, i8** %mac_regs, align 8, !dbg !12689
  %add.ptr = getelementptr i8, i8* %8, i64 4352, !dbg !12689
  %9 = load i32, i32* %i, align 4, !dbg !12689
  %mul = mul i32 %9, 128, !dbg !12689
  %idx.ext = zext i32 %mul to i64, !dbg !12689
  %add.ptr2 = getelementptr i8, i8* %add.ptr, i64 %idx.ext, !dbg !12689
  %add.ptr3 = getelementptr i8, i8* %add.ptr2, i64 0, !dbg !12689
  %call4 = call i32 @readl(i8* %add.ptr3) #7, !dbg !12691
  store i32 %call4, i32* %regval, align 4, !dbg !12692
  call void @llvm.dbg.declare(metadata i32* %_var, metadata !12693, metadata !DIExpression()), !dbg !12695
  %10 = load i32, i32* %regval, align 4, !dbg !12695
  store i32 %10, i32* %_var, align 4, !dbg !12695
  call void @llvm.dbg.declare(metadata i32* %_pos, metadata !12696, metadata !DIExpression()), !dbg !12695
  store i32 16, i32* %_pos, align 4, !dbg !12695
  call void @llvm.dbg.declare(metadata i32* %_len, metadata !12697, metadata !DIExpression()), !dbg !12695
  store i32 10, i32* %_len, align 4, !dbg !12695
  call void @llvm.dbg.declare(metadata i32* %_val, metadata !12698, metadata !DIExpression()), !dbg !12695
  %11 = load i32, i32* %fifo_size, align 4, !dbg !12695
  store i32 %11, i32* %_val, align 4, !dbg !12695
  %12 = load i32, i32* %_val, align 4, !dbg !12695
  %13 = load i32, i32* %_pos, align 4, !dbg !12695
  %shl = shl i32 %12, %13, !dbg !12695
  %conv = zext i32 %shl to i64, !dbg !12695
  %14 = load i32, i32* %_pos, align 4, !dbg !12695
  %sh_prom = zext i32 %14 to i64, !dbg !12695
  %shl5 = shl i64 1, %sh_prom, !dbg !12695
  %sub = sub i64 -1, %shl5, !dbg !12695
  %add = add i64 %sub, 1, !dbg !12695
  %15 = load i32, i32* %_pos, align 4, !dbg !12695
  %16 = load i32, i32* %_len, align 4, !dbg !12695
  %add6 = add i32 %15, %16, !dbg !12695
  %sub7 = sub i32 %add6, 1, !dbg !12695
  %sub8 = sub i32 63, %sub7, !dbg !12695
  %sh_prom9 = zext i32 %sub8 to i64, !dbg !12695
  %shr = lshr i64 -1, %sh_prom9, !dbg !12695
  %and = and i64 %add, %shr, !dbg !12695
  %add10 = add i64 0, %and, !dbg !12695
  %and11 = and i64 %conv, %add10, !dbg !12695
  %conv12 = trunc i64 %and11 to i32, !dbg !12695
  store i32 %conv12, i32* %_val, align 4, !dbg !12695
  %17 = load i32, i32* %_var, align 4, !dbg !12695
  %conv13 = zext i32 %17 to i64, !dbg !12695
  %18 = load i32, i32* %_pos, align 4, !dbg !12695
  %sh_prom14 = zext i32 %18 to i64, !dbg !12695
  %shl15 = shl i64 1, %sh_prom14, !dbg !12695
  %sub16 = sub i64 -1, %shl15, !dbg !12695
  %add17 = add i64 %sub16, 1, !dbg !12695
  %19 = load i32, i32* %_pos, align 4, !dbg !12695
  %20 = load i32, i32* %_len, align 4, !dbg !12695
  %add18 = add i32 %19, %20, !dbg !12695
  %sub19 = sub i32 %add18, 1, !dbg !12695
  %sub20 = sub i32 63, %sub19, !dbg !12695
  %sh_prom21 = zext i32 %sub20 to i64, !dbg !12695
  %shr22 = lshr i64 -1, %sh_prom21, !dbg !12695
  %and23 = and i64 %add17, %shr22, !dbg !12695
  %add24 = add i64 0, %and23, !dbg !12695
  %neg = xor i64 %add24, -1, !dbg !12695
  %and25 = and i64 %conv13, %neg, !dbg !12695
  %21 = load i32, i32* %_val, align 4, !dbg !12695
  %conv26 = zext i32 %21 to i64, !dbg !12695
  %or = or i64 %and25, %conv26, !dbg !12695
  %conv27 = trunc i64 %or to i32, !dbg !12695
  store i32 %conv27, i32* %_var, align 4, !dbg !12695
  store i32 %conv27, i32* %tmp, align 4, !dbg !12695
  %22 = load i32, i32* %tmp, align 4, !dbg !12695
  store i32 %22, i32* %regval, align 4, !dbg !12699
  %23 = load i32, i32* %regval, align 4, !dbg !12700
  %24 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !12701
  %mac_regs28 = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %24, i32 0, i32 6, !dbg !12701
  %25 = load i8*, i8** %mac_regs28, align 8, !dbg !12701
  %add.ptr29 = getelementptr i8, i8* %25, i64 4352, !dbg !12701
  %26 = load i32, i32* %i, align 4, !dbg !12701
  %mul30 = mul i32 %26, 128, !dbg !12701
  %idx.ext31 = zext i32 %mul30 to i64, !dbg !12701
  %add.ptr32 = getelementptr i8, i8* %add.ptr29, i64 %idx.ext31, !dbg !12701
  %add.ptr33 = getelementptr i8, i8* %add.ptr32, i64 0, !dbg !12701
  call void @writel(i32 %23, i8* %add.ptr33) #7, !dbg !12702
  br label %for.inc, !dbg !12703

for.inc:                                          ; preds = %for.body
  %27 = load i32, i32* %i, align 4, !dbg !12704
  %inc = add i32 %27, 1, !dbg !12704
  store i32 %inc, i32* %i, align 4, !dbg !12704
  br label %for.cond, !dbg !12705, !llvm.loop !12706

for.end:                                          ; preds = %for.cond
  br label %do.body, !dbg !12708

do.body:                                          ; preds = %for.end
  %28 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !12709
  %msg_enable = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %28, i32 0, i32 5, !dbg !12709
  %29 = load i32, i32* %msg_enable, align 8, !dbg !12709
  %and34 = and i32 %29, 1, !dbg !12709
  %tobool = icmp ne i32 %and34, 0, !dbg !12709
  br i1 %tobool, label %if.then, label %if.end, !dbg !12712

if.then:                                          ; preds = %do.body
  %30 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !12709
  %netdev = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %30, i32 0, i32 0, !dbg !12709
  %31 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !12709
  %32 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !12709
  %tx_q_count35 = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %32, i32 0, i32 15, !dbg !12709
  %33 = load i32, i32* %tx_q_count35, align 4, !dbg !12709
  %34 = load i32, i32* %fifo_size, align 4, !dbg !12709
  %add36 = add i32 %34, 1, !dbg !12709
  %mul37 = mul i32 %add36, 256, !dbg !12709
  call void (%struct.net_device*, i8*, ...) @netdev_info(%struct.net_device* %31, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.1, i64 0, i64 0), i32 %33, i32 %mul37) #10, !dbg !12709
  br label %if.end, !dbg !12709

if.end:                                           ; preds = %if.then, %do.body
  br label %do.end, !dbg !12712

do.end:                                           ; preds = %if.end
  ret void, !dbg !12713
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @xlgmac_config_rx_fifo_size(%struct.xlgmac_pdata* %pdata) #0 !dbg !12714 {
entry:
  %pdata.addr = alloca %struct.xlgmac_pdata*, align 8
  %fifo_size = alloca i32, align 4
  %i = alloca i32, align 4
  %regval = alloca i32, align 4
  %_var = alloca i32, align 4
  %_pos = alloca i32, align 4
  %_len = alloca i32, align 4
  %_val = alloca i32, align 4
  %tmp = alloca i32, align 4
  store %struct.xlgmac_pdata* %pdata, %struct.xlgmac_pdata** %pdata.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xlgmac_pdata** %pdata.addr, metadata !12715, metadata !DIExpression()), !dbg !12716
  call void @llvm.dbg.declare(metadata i32* %fifo_size, metadata !12717, metadata !DIExpression()), !dbg !12718
  call void @llvm.dbg.declare(metadata i32* %i, metadata !12719, metadata !DIExpression()), !dbg !12720
  call void @llvm.dbg.declare(metadata i32* %regval, metadata !12721, metadata !DIExpression()), !dbg !12722
  %0 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !12723
  %hw_feat = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %0, i32 0, i32 7, !dbg !12724
  %rx_fifo_size = getelementptr inbounds %struct.xlgmac_hw_features, %struct.xlgmac_hw_features* %hw_feat, i32 0, i32 15, !dbg !12725
  %1 = load i32, i32* %rx_fifo_size, align 4, !dbg !12725
  %2 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !12726
  %rx_q_count = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %2, i32 0, i32 16, !dbg !12727
  %3 = load i32, i32* %rx_q_count, align 8, !dbg !12727
  %call = call i32 @xlgmac_calculate_per_queue_fifo(i32 %1, i32 %3) #7, !dbg !12728
  store i32 %call, i32* %fifo_size, align 4, !dbg !12729
  store i32 0, i32* %i, align 4, !dbg !12730
  br label %for.cond, !dbg !12732

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load i32, i32* %i, align 4, !dbg !12733
  %5 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !12735
  %rx_q_count1 = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %5, i32 0, i32 16, !dbg !12736
  %6 = load i32, i32* %rx_q_count1, align 8, !dbg !12736
  %cmp = icmp ult i32 %4, %6, !dbg !12737
  br i1 %cmp, label %for.body, label %for.end, !dbg !12738

for.body:                                         ; preds = %for.cond
  %7 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !12739
  %mac_regs = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %7, i32 0, i32 6, !dbg !12739
  %8 = load i8*, i8** %mac_regs, align 8, !dbg !12739
  %add.ptr = getelementptr i8, i8* %8, i64 4352, !dbg !12739
  %9 = load i32, i32* %i, align 4, !dbg !12739
  %mul = mul i32 %9, 128, !dbg !12739
  %idx.ext = zext i32 %mul to i64, !dbg !12739
  %add.ptr2 = getelementptr i8, i8* %add.ptr, i64 %idx.ext, !dbg !12739
  %add.ptr3 = getelementptr i8, i8* %add.ptr2, i64 64, !dbg !12739
  %call4 = call i32 @readl(i8* %add.ptr3) #7, !dbg !12741
  store i32 %call4, i32* %regval, align 4, !dbg !12742
  call void @llvm.dbg.declare(metadata i32* %_var, metadata !12743, metadata !DIExpression()), !dbg !12745
  %10 = load i32, i32* %regval, align 4, !dbg !12745
  store i32 %10, i32* %_var, align 4, !dbg !12745
  call void @llvm.dbg.declare(metadata i32* %_pos, metadata !12746, metadata !DIExpression()), !dbg !12745
  store i32 16, i32* %_pos, align 4, !dbg !12745
  call void @llvm.dbg.declare(metadata i32* %_len, metadata !12747, metadata !DIExpression()), !dbg !12745
  store i32 9, i32* %_len, align 4, !dbg !12745
  call void @llvm.dbg.declare(metadata i32* %_val, metadata !12748, metadata !DIExpression()), !dbg !12745
  %11 = load i32, i32* %fifo_size, align 4, !dbg !12745
  store i32 %11, i32* %_val, align 4, !dbg !12745
  %12 = load i32, i32* %_val, align 4, !dbg !12745
  %13 = load i32, i32* %_pos, align 4, !dbg !12745
  %shl = shl i32 %12, %13, !dbg !12745
  %conv = zext i32 %shl to i64, !dbg !12745
  %14 = load i32, i32* %_pos, align 4, !dbg !12745
  %sh_prom = zext i32 %14 to i64, !dbg !12745
  %shl5 = shl i64 1, %sh_prom, !dbg !12745
  %sub = sub i64 -1, %shl5, !dbg !12745
  %add = add i64 %sub, 1, !dbg !12745
  %15 = load i32, i32* %_pos, align 4, !dbg !12745
  %16 = load i32, i32* %_len, align 4, !dbg !12745
  %add6 = add i32 %15, %16, !dbg !12745
  %sub7 = sub i32 %add6, 1, !dbg !12745
  %sub8 = sub i32 63, %sub7, !dbg !12745
  %sh_prom9 = zext i32 %sub8 to i64, !dbg !12745
  %shr = lshr i64 -1, %sh_prom9, !dbg !12745
  %and = and i64 %add, %shr, !dbg !12745
  %add10 = add i64 0, %and, !dbg !12745
  %and11 = and i64 %conv, %add10, !dbg !12745
  %conv12 = trunc i64 %and11 to i32, !dbg !12745
  store i32 %conv12, i32* %_val, align 4, !dbg !12745
  %17 = load i32, i32* %_var, align 4, !dbg !12745
  %conv13 = zext i32 %17 to i64, !dbg !12745
  %18 = load i32, i32* %_pos, align 4, !dbg !12745
  %sh_prom14 = zext i32 %18 to i64, !dbg !12745
  %shl15 = shl i64 1, %sh_prom14, !dbg !12745
  %sub16 = sub i64 -1, %shl15, !dbg !12745
  %add17 = add i64 %sub16, 1, !dbg !12745
  %19 = load i32, i32* %_pos, align 4, !dbg !12745
  %20 = load i32, i32* %_len, align 4, !dbg !12745
  %add18 = add i32 %19, %20, !dbg !12745
  %sub19 = sub i32 %add18, 1, !dbg !12745
  %sub20 = sub i32 63, %sub19, !dbg !12745
  %sh_prom21 = zext i32 %sub20 to i64, !dbg !12745
  %shr22 = lshr i64 -1, %sh_prom21, !dbg !12745
  %and23 = and i64 %add17, %shr22, !dbg !12745
  %add24 = add i64 0, %and23, !dbg !12745
  %neg = xor i64 %add24, -1, !dbg !12745
  %and25 = and i64 %conv13, %neg, !dbg !12745
  %21 = load i32, i32* %_val, align 4, !dbg !12745
  %conv26 = zext i32 %21 to i64, !dbg !12745
  %or = or i64 %and25, %conv26, !dbg !12745
  %conv27 = trunc i64 %or to i32, !dbg !12745
  store i32 %conv27, i32* %_var, align 4, !dbg !12745
  store i32 %conv27, i32* %tmp, align 4, !dbg !12745
  %22 = load i32, i32* %tmp, align 4, !dbg !12745
  store i32 %22, i32* %regval, align 4, !dbg !12749
  %23 = load i32, i32* %regval, align 4, !dbg !12750
  %24 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !12751
  %mac_regs28 = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %24, i32 0, i32 6, !dbg !12751
  %25 = load i8*, i8** %mac_regs28, align 8, !dbg !12751
  %add.ptr29 = getelementptr i8, i8* %25, i64 4352, !dbg !12751
  %26 = load i32, i32* %i, align 4, !dbg !12751
  %mul30 = mul i32 %26, 128, !dbg !12751
  %idx.ext31 = zext i32 %mul30 to i64, !dbg !12751
  %add.ptr32 = getelementptr i8, i8* %add.ptr29, i64 %idx.ext31, !dbg !12751
  %add.ptr33 = getelementptr i8, i8* %add.ptr32, i64 64, !dbg !12751
  call void @writel(i32 %23, i8* %add.ptr33) #7, !dbg !12752
  br label %for.inc, !dbg !12753

for.inc:                                          ; preds = %for.body
  %27 = load i32, i32* %i, align 4, !dbg !12754
  %inc = add i32 %27, 1, !dbg !12754
  store i32 %inc, i32* %i, align 4, !dbg !12754
  br label %for.cond, !dbg !12755, !llvm.loop !12756

for.end:                                          ; preds = %for.cond
  br label %do.body, !dbg !12758

do.body:                                          ; preds = %for.end
  %28 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !12759
  %msg_enable = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %28, i32 0, i32 5, !dbg !12759
  %29 = load i32, i32* %msg_enable, align 8, !dbg !12759
  %and34 = and i32 %29, 1, !dbg !12759
  %tobool = icmp ne i32 %and34, 0, !dbg !12759
  br i1 %tobool, label %if.then, label %if.end, !dbg !12762

if.then:                                          ; preds = %do.body
  %30 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !12759
  %netdev = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %30, i32 0, i32 0, !dbg !12759
  %31 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !12759
  %32 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !12759
  %rx_q_count35 = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %32, i32 0, i32 16, !dbg !12759
  %33 = load i32, i32* %rx_q_count35, align 8, !dbg !12759
  %34 = load i32, i32* %fifo_size, align 4, !dbg !12759
  %add36 = add i32 %34, 1, !dbg !12759
  %mul37 = mul i32 %add36, 256, !dbg !12759
  call void (%struct.net_device*, i8*, ...) @netdev_info(%struct.net_device* %31, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.2, i64 0, i64 0), i32 %33, i32 %mul37) #10, !dbg !12759
  br label %if.end, !dbg !12759

if.end:                                           ; preds = %if.then, %do.body
  br label %do.end, !dbg !12762

do.end:                                           ; preds = %if.end
  ret void, !dbg !12763
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @xlgmac_config_flow_control_threshold(%struct.xlgmac_pdata* %pdata) #0 !dbg !12764 {
entry:
  %pdata.addr = alloca %struct.xlgmac_pdata*, align 8
  %i = alloca i32, align 4
  %regval = alloca i32, align 4
  %_var = alloca i32, align 4
  %_pos = alloca i32, align 4
  %_len = alloca i32, align 4
  %_val = alloca i32, align 4
  %tmp = alloca i32, align 4
  %_var26 = alloca i32, align 4
  %_pos27 = alloca i32, align 4
  %_len28 = alloca i32, align 4
  %_val29 = alloca i32, align 4
  %tmp45 = alloca i32, align 4
  store %struct.xlgmac_pdata* %pdata, %struct.xlgmac_pdata** %pdata.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xlgmac_pdata** %pdata.addr, metadata !12765, metadata !DIExpression()), !dbg !12766
  call void @llvm.dbg.declare(metadata i32* %i, metadata !12767, metadata !DIExpression()), !dbg !12768
  call void @llvm.dbg.declare(metadata i32* %regval, metadata !12769, metadata !DIExpression()), !dbg !12770
  store i32 0, i32* %i, align 4, !dbg !12771
  br label %for.cond, !dbg !12773

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !12774
  %1 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !12776
  %rx_q_count = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %1, i32 0, i32 16, !dbg !12777
  %2 = load i32, i32* %rx_q_count, align 8, !dbg !12777
  %cmp = icmp ult i32 %0, %2, !dbg !12778
  br i1 %cmp, label %for.body, label %for.end, !dbg !12779

for.body:                                         ; preds = %for.cond
  %3 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !12780
  %mac_regs = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %3, i32 0, i32 6, !dbg !12780
  %4 = load i8*, i8** %mac_regs, align 8, !dbg !12780
  %add.ptr = getelementptr i8, i8* %4, i64 4352, !dbg !12780
  %5 = load i32, i32* %i, align 4, !dbg !12780
  %mul = mul i32 %5, 128, !dbg !12780
  %idx.ext = zext i32 %mul to i64, !dbg !12780
  %add.ptr1 = getelementptr i8, i8* %add.ptr, i64 %idx.ext, !dbg !12780
  %add.ptr2 = getelementptr i8, i8* %add.ptr1, i64 80, !dbg !12780
  %call = call i32 @readl(i8* %add.ptr2) #7, !dbg !12782
  store i32 %call, i32* %regval, align 4, !dbg !12783
  call void @llvm.dbg.declare(metadata i32* %_var, metadata !12784, metadata !DIExpression()), !dbg !12786
  %6 = load i32, i32* %regval, align 4, !dbg !12786
  store i32 %6, i32* %_var, align 4, !dbg !12786
  call void @llvm.dbg.declare(metadata i32* %_pos, metadata !12787, metadata !DIExpression()), !dbg !12786
  store i32 1, i32* %_pos, align 4, !dbg !12786
  call void @llvm.dbg.declare(metadata i32* %_len, metadata !12788, metadata !DIExpression()), !dbg !12786
  store i32 6, i32* %_len, align 4, !dbg !12786
  call void @llvm.dbg.declare(metadata i32* %_val, metadata !12789, metadata !DIExpression()), !dbg !12786
  store i32 2, i32* %_val, align 4, !dbg !12786
  %7 = load i32, i32* %_val, align 4, !dbg !12786
  %8 = load i32, i32* %_pos, align 4, !dbg !12786
  %shl = shl i32 %7, %8, !dbg !12786
  %conv = sext i32 %shl to i64, !dbg !12786
  %9 = load i32, i32* %_pos, align 4, !dbg !12786
  %sh_prom = zext i32 %9 to i64, !dbg !12786
  %shl3 = shl i64 1, %sh_prom, !dbg !12786
  %sub = sub i64 -1, %shl3, !dbg !12786
  %add = add i64 %sub, 1, !dbg !12786
  %10 = load i32, i32* %_pos, align 4, !dbg !12786
  %11 = load i32, i32* %_len, align 4, !dbg !12786
  %add4 = add i32 %10, %11, !dbg !12786
  %sub5 = sub i32 %add4, 1, !dbg !12786
  %sub6 = sub i32 63, %sub5, !dbg !12786
  %sh_prom7 = zext i32 %sub6 to i64, !dbg !12786
  %shr = lshr i64 -1, %sh_prom7, !dbg !12786
  %and = and i64 %add, %shr, !dbg !12786
  %add8 = add i64 0, %and, !dbg !12786
  %and9 = and i64 %conv, %add8, !dbg !12786
  %conv10 = trunc i64 %and9 to i32, !dbg !12786
  store i32 %conv10, i32* %_val, align 4, !dbg !12786
  %12 = load i32, i32* %_var, align 4, !dbg !12786
  %conv11 = zext i32 %12 to i64, !dbg !12786
  %13 = load i32, i32* %_pos, align 4, !dbg !12786
  %sh_prom12 = zext i32 %13 to i64, !dbg !12786
  %shl13 = shl i64 1, %sh_prom12, !dbg !12786
  %sub14 = sub i64 -1, %shl13, !dbg !12786
  %add15 = add i64 %sub14, 1, !dbg !12786
  %14 = load i32, i32* %_pos, align 4, !dbg !12786
  %15 = load i32, i32* %_len, align 4, !dbg !12786
  %add16 = add i32 %14, %15, !dbg !12786
  %sub17 = sub i32 %add16, 1, !dbg !12786
  %sub18 = sub i32 63, %sub17, !dbg !12786
  %sh_prom19 = zext i32 %sub18 to i64, !dbg !12786
  %shr20 = lshr i64 -1, %sh_prom19, !dbg !12786
  %and21 = and i64 %add15, %shr20, !dbg !12786
  %add22 = add i64 0, %and21, !dbg !12786
  %neg = xor i64 %add22, -1, !dbg !12786
  %and23 = and i64 %conv11, %neg, !dbg !12786
  %16 = load i32, i32* %_val, align 4, !dbg !12786
  %conv24 = sext i32 %16 to i64, !dbg !12786
  %or = or i64 %and23, %conv24, !dbg !12786
  %conv25 = trunc i64 %or to i32, !dbg !12786
  store i32 %conv25, i32* %_var, align 4, !dbg !12786
  store i32 %conv25, i32* %tmp, align 4, !dbg !12786
  %17 = load i32, i32* %tmp, align 4, !dbg !12786
  store i32 %17, i32* %regval, align 4, !dbg !12790
  call void @llvm.dbg.declare(metadata i32* %_var26, metadata !12791, metadata !DIExpression()), !dbg !12793
  %18 = load i32, i32* %regval, align 4, !dbg !12793
  store i32 %18, i32* %_var26, align 4, !dbg !12793
  call void @llvm.dbg.declare(metadata i32* %_pos27, metadata !12794, metadata !DIExpression()), !dbg !12793
  store i32 17, i32* %_pos27, align 4, !dbg !12793
  call void @llvm.dbg.declare(metadata i32* %_len28, metadata !12795, metadata !DIExpression()), !dbg !12793
  store i32 6, i32* %_len28, align 4, !dbg !12793
  call void @llvm.dbg.declare(metadata i32* %_val29, metadata !12796, metadata !DIExpression()), !dbg !12793
  store i32 4, i32* %_val29, align 4, !dbg !12793
  %19 = load i32, i32* %_val29, align 4, !dbg !12793
  %20 = load i32, i32* %_pos27, align 4, !dbg !12793
  %shl30 = shl i32 %19, %20, !dbg !12793
  %conv31 = sext i32 %shl30 to i64, !dbg !12793
  %21 = load i32, i32* %_pos27, align 4, !dbg !12793
  %sh_prom32 = zext i32 %21 to i64, !dbg !12793
  %shl33 = shl i64 1, %sh_prom32, !dbg !12793
  %sub34 = sub i64 -1, %shl33, !dbg !12793
  %add35 = add i64 %sub34, 1, !dbg !12793
  %22 = load i32, i32* %_pos27, align 4, !dbg !12793
  %23 = load i32, i32* %_len28, align 4, !dbg !12793
  %add36 = add i32 %22, %23, !dbg !12793
  %sub37 = sub i32 %add36, 1, !dbg !12793
  %sub38 = sub i32 63, %sub37, !dbg !12793
  %sh_prom39 = zext i32 %sub38 to i64, !dbg !12793
  %shr40 = lshr i64 -1, %sh_prom39, !dbg !12793
  %and41 = and i64 %add35, %shr40, !dbg !12793
  %add42 = add i64 0, %and41, !dbg !12793
  %and43 = and i64 %conv31, %add42, !dbg !12793
  %conv44 = trunc i64 %and43 to i32, !dbg !12793
  store i32 %conv44, i32* %_val29, align 4, !dbg !12793
  %24 = load i32, i32* %_var26, align 4, !dbg !12793
  %conv46 = zext i32 %24 to i64, !dbg !12793
  %25 = load i32, i32* %_pos27, align 4, !dbg !12793
  %sh_prom47 = zext i32 %25 to i64, !dbg !12793
  %shl48 = shl i64 1, %sh_prom47, !dbg !12793
  %sub49 = sub i64 -1, %shl48, !dbg !12793
  %add50 = add i64 %sub49, 1, !dbg !12793
  %26 = load i32, i32* %_pos27, align 4, !dbg !12793
  %27 = load i32, i32* %_len28, align 4, !dbg !12793
  %add51 = add i32 %26, %27, !dbg !12793
  %sub52 = sub i32 %add51, 1, !dbg !12793
  %sub53 = sub i32 63, %sub52, !dbg !12793
  %sh_prom54 = zext i32 %sub53 to i64, !dbg !12793
  %shr55 = lshr i64 -1, %sh_prom54, !dbg !12793
  %and56 = and i64 %add50, %shr55, !dbg !12793
  %add57 = add i64 0, %and56, !dbg !12793
  %neg58 = xor i64 %add57, -1, !dbg !12793
  %and59 = and i64 %conv46, %neg58, !dbg !12793
  %28 = load i32, i32* %_val29, align 4, !dbg !12793
  %conv60 = sext i32 %28 to i64, !dbg !12793
  %or61 = or i64 %and59, %conv60, !dbg !12793
  %conv62 = trunc i64 %or61 to i32, !dbg !12793
  store i32 %conv62, i32* %_var26, align 4, !dbg !12793
  store i32 %conv62, i32* %tmp45, align 4, !dbg !12793
  %29 = load i32, i32* %tmp45, align 4, !dbg !12793
  store i32 %29, i32* %regval, align 4, !dbg !12797
  %30 = load i32, i32* %regval, align 4, !dbg !12798
  %31 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !12799
  %mac_regs63 = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %31, i32 0, i32 6, !dbg !12799
  %32 = load i8*, i8** %mac_regs63, align 8, !dbg !12799
  %add.ptr64 = getelementptr i8, i8* %32, i64 4352, !dbg !12799
  %33 = load i32, i32* %i, align 4, !dbg !12799
  %mul65 = mul i32 %33, 128, !dbg !12799
  %idx.ext66 = zext i32 %mul65 to i64, !dbg !12799
  %add.ptr67 = getelementptr i8, i8* %add.ptr64, i64 %idx.ext66, !dbg !12799
  %add.ptr68 = getelementptr i8, i8* %add.ptr67, i64 80, !dbg !12799
  call void @writel(i32 %30, i8* %add.ptr68) #7, !dbg !12800
  br label %for.inc, !dbg !12801

for.inc:                                          ; preds = %for.body
  %34 = load i32, i32* %i, align 4, !dbg !12802
  %inc = add i32 %34, 1, !dbg !12802
  store i32 %inc, i32* %i, align 4, !dbg !12802
  br label %for.cond, !dbg !12803, !llvm.loop !12804

for.end:                                          ; preds = %for.cond
  ret void, !dbg !12806
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @xlgmac_config_rx_fep_enable(%struct.xlgmac_pdata* %pdata) #0 !dbg !12807 {
entry:
  %pdata.addr = alloca %struct.xlgmac_pdata*, align 8
  %i = alloca i32, align 4
  %regval = alloca i32, align 4
  %_var = alloca i32, align 4
  %_pos = alloca i32, align 4
  %_len = alloca i32, align 4
  %_val = alloca i32, align 4
  %tmp = alloca i32, align 4
  store %struct.xlgmac_pdata* %pdata, %struct.xlgmac_pdata** %pdata.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xlgmac_pdata** %pdata.addr, metadata !12808, metadata !DIExpression()), !dbg !12809
  call void @llvm.dbg.declare(metadata i32* %i, metadata !12810, metadata !DIExpression()), !dbg !12811
  call void @llvm.dbg.declare(metadata i32* %regval, metadata !12812, metadata !DIExpression()), !dbg !12813
  store i32 0, i32* %i, align 4, !dbg !12814
  br label %for.cond, !dbg !12816

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !12817
  %1 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !12819
  %rx_q_count = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %1, i32 0, i32 16, !dbg !12820
  %2 = load i32, i32* %rx_q_count, align 8, !dbg !12820
  %cmp = icmp ult i32 %0, %2, !dbg !12821
  br i1 %cmp, label %for.body, label %for.end, !dbg !12822

for.body:                                         ; preds = %for.cond
  %3 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !12823
  %mac_regs = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %3, i32 0, i32 6, !dbg !12823
  %4 = load i8*, i8** %mac_regs, align 8, !dbg !12823
  %add.ptr = getelementptr i8, i8* %4, i64 4352, !dbg !12823
  %5 = load i32, i32* %i, align 4, !dbg !12823
  %mul = mul i32 %5, 128, !dbg !12823
  %idx.ext = zext i32 %mul to i64, !dbg !12823
  %add.ptr1 = getelementptr i8, i8* %add.ptr, i64 %idx.ext, !dbg !12823
  %add.ptr2 = getelementptr i8, i8* %add.ptr1, i64 64, !dbg !12823
  %call = call i32 @readl(i8* %add.ptr2) #7, !dbg !12825
  store i32 %call, i32* %regval, align 4, !dbg !12826
  call void @llvm.dbg.declare(metadata i32* %_var, metadata !12827, metadata !DIExpression()), !dbg !12829
  %6 = load i32, i32* %regval, align 4, !dbg !12829
  store i32 %6, i32* %_var, align 4, !dbg !12829
  call void @llvm.dbg.declare(metadata i32* %_pos, metadata !12830, metadata !DIExpression()), !dbg !12829
  store i32 4, i32* %_pos, align 4, !dbg !12829
  call void @llvm.dbg.declare(metadata i32* %_len, metadata !12831, metadata !DIExpression()), !dbg !12829
  store i32 1, i32* %_len, align 4, !dbg !12829
  call void @llvm.dbg.declare(metadata i32* %_val, metadata !12832, metadata !DIExpression()), !dbg !12829
  store i32 1, i32* %_val, align 4, !dbg !12829
  %7 = load i32, i32* %_val, align 4, !dbg !12829
  %8 = load i32, i32* %_pos, align 4, !dbg !12829
  %shl = shl i32 %7, %8, !dbg !12829
  %conv = sext i32 %shl to i64, !dbg !12829
  %9 = load i32, i32* %_pos, align 4, !dbg !12829
  %sh_prom = zext i32 %9 to i64, !dbg !12829
  %shl3 = shl i64 1, %sh_prom, !dbg !12829
  %sub = sub i64 -1, %shl3, !dbg !12829
  %add = add i64 %sub, 1, !dbg !12829
  %10 = load i32, i32* %_pos, align 4, !dbg !12829
  %11 = load i32, i32* %_len, align 4, !dbg !12829
  %add4 = add i32 %10, %11, !dbg !12829
  %sub5 = sub i32 %add4, 1, !dbg !12829
  %sub6 = sub i32 63, %sub5, !dbg !12829
  %sh_prom7 = zext i32 %sub6 to i64, !dbg !12829
  %shr = lshr i64 -1, %sh_prom7, !dbg !12829
  %and = and i64 %add, %shr, !dbg !12829
  %add8 = add i64 0, %and, !dbg !12829
  %and9 = and i64 %conv, %add8, !dbg !12829
  %conv10 = trunc i64 %and9 to i32, !dbg !12829
  store i32 %conv10, i32* %_val, align 4, !dbg !12829
  %12 = load i32, i32* %_var, align 4, !dbg !12829
  %conv11 = zext i32 %12 to i64, !dbg !12829
  %13 = load i32, i32* %_pos, align 4, !dbg !12829
  %sh_prom12 = zext i32 %13 to i64, !dbg !12829
  %shl13 = shl i64 1, %sh_prom12, !dbg !12829
  %sub14 = sub i64 -1, %shl13, !dbg !12829
  %add15 = add i64 %sub14, 1, !dbg !12829
  %14 = load i32, i32* %_pos, align 4, !dbg !12829
  %15 = load i32, i32* %_len, align 4, !dbg !12829
  %add16 = add i32 %14, %15, !dbg !12829
  %sub17 = sub i32 %add16, 1, !dbg !12829
  %sub18 = sub i32 63, %sub17, !dbg !12829
  %sh_prom19 = zext i32 %sub18 to i64, !dbg !12829
  %shr20 = lshr i64 -1, %sh_prom19, !dbg !12829
  %and21 = and i64 %add15, %shr20, !dbg !12829
  %add22 = add i64 0, %and21, !dbg !12829
  %neg = xor i64 %add22, -1, !dbg !12829
  %and23 = and i64 %conv11, %neg, !dbg !12829
  %16 = load i32, i32* %_val, align 4, !dbg !12829
  %conv24 = sext i32 %16 to i64, !dbg !12829
  %or = or i64 %and23, %conv24, !dbg !12829
  %conv25 = trunc i64 %or to i32, !dbg !12829
  store i32 %conv25, i32* %_var, align 4, !dbg !12829
  store i32 %conv25, i32* %tmp, align 4, !dbg !12829
  %17 = load i32, i32* %tmp, align 4, !dbg !12829
  store i32 %17, i32* %regval, align 4, !dbg !12833
  %18 = load i32, i32* %regval, align 4, !dbg !12834
  %19 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !12835
  %mac_regs26 = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %19, i32 0, i32 6, !dbg !12835
  %20 = load i8*, i8** %mac_regs26, align 8, !dbg !12835
  %add.ptr27 = getelementptr i8, i8* %20, i64 4352, !dbg !12835
  %21 = load i32, i32* %i, align 4, !dbg !12835
  %mul28 = mul i32 %21, 128, !dbg !12835
  %idx.ext29 = zext i32 %mul28 to i64, !dbg !12835
  %add.ptr30 = getelementptr i8, i8* %add.ptr27, i64 %idx.ext29, !dbg !12835
  %add.ptr31 = getelementptr i8, i8* %add.ptr30, i64 64, !dbg !12835
  call void @writel(i32 %18, i8* %add.ptr31) #7, !dbg !12836
  br label %for.inc, !dbg !12837

for.inc:                                          ; preds = %for.body
  %22 = load i32, i32* %i, align 4, !dbg !12838
  %inc = add i32 %22, 1, !dbg !12838
  store i32 %inc, i32* %i, align 4, !dbg !12838
  br label %for.cond, !dbg !12839, !llvm.loop !12840

for.end:                                          ; preds = %for.cond
  ret void, !dbg !12842
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @xlgmac_config_rx_fup_enable(%struct.xlgmac_pdata* %pdata) #0 !dbg !12843 {
entry:
  %pdata.addr = alloca %struct.xlgmac_pdata*, align 8
  %i = alloca i32, align 4
  %regval = alloca i32, align 4
  %_var = alloca i32, align 4
  %_pos = alloca i32, align 4
  %_len = alloca i32, align 4
  %_val = alloca i32, align 4
  %tmp = alloca i32, align 4
  store %struct.xlgmac_pdata* %pdata, %struct.xlgmac_pdata** %pdata.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xlgmac_pdata** %pdata.addr, metadata !12844, metadata !DIExpression()), !dbg !12845
  call void @llvm.dbg.declare(metadata i32* %i, metadata !12846, metadata !DIExpression()), !dbg !12847
  call void @llvm.dbg.declare(metadata i32* %regval, metadata !12848, metadata !DIExpression()), !dbg !12849
  store i32 0, i32* %i, align 4, !dbg !12850
  br label %for.cond, !dbg !12852

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !12853
  %1 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !12855
  %rx_q_count = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %1, i32 0, i32 16, !dbg !12856
  %2 = load i32, i32* %rx_q_count, align 8, !dbg !12856
  %cmp = icmp ult i32 %0, %2, !dbg !12857
  br i1 %cmp, label %for.body, label %for.end, !dbg !12858

for.body:                                         ; preds = %for.cond
  %3 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !12859
  %mac_regs = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %3, i32 0, i32 6, !dbg !12859
  %4 = load i8*, i8** %mac_regs, align 8, !dbg !12859
  %add.ptr = getelementptr i8, i8* %4, i64 4352, !dbg !12859
  %5 = load i32, i32* %i, align 4, !dbg !12859
  %mul = mul i32 %5, 128, !dbg !12859
  %idx.ext = zext i32 %mul to i64, !dbg !12859
  %add.ptr1 = getelementptr i8, i8* %add.ptr, i64 %idx.ext, !dbg !12859
  %add.ptr2 = getelementptr i8, i8* %add.ptr1, i64 64, !dbg !12859
  %call = call i32 @readl(i8* %add.ptr2) #7, !dbg !12861
  store i32 %call, i32* %regval, align 4, !dbg !12862
  call void @llvm.dbg.declare(metadata i32* %_var, metadata !12863, metadata !DIExpression()), !dbg !12865
  %6 = load i32, i32* %regval, align 4, !dbg !12865
  store i32 %6, i32* %_var, align 4, !dbg !12865
  call void @llvm.dbg.declare(metadata i32* %_pos, metadata !12866, metadata !DIExpression()), !dbg !12865
  store i32 3, i32* %_pos, align 4, !dbg !12865
  call void @llvm.dbg.declare(metadata i32* %_len, metadata !12867, metadata !DIExpression()), !dbg !12865
  store i32 1, i32* %_len, align 4, !dbg !12865
  call void @llvm.dbg.declare(metadata i32* %_val, metadata !12868, metadata !DIExpression()), !dbg !12865
  store i32 1, i32* %_val, align 4, !dbg !12865
  %7 = load i32, i32* %_val, align 4, !dbg !12865
  %8 = load i32, i32* %_pos, align 4, !dbg !12865
  %shl = shl i32 %7, %8, !dbg !12865
  %conv = sext i32 %shl to i64, !dbg !12865
  %9 = load i32, i32* %_pos, align 4, !dbg !12865
  %sh_prom = zext i32 %9 to i64, !dbg !12865
  %shl3 = shl i64 1, %sh_prom, !dbg !12865
  %sub = sub i64 -1, %shl3, !dbg !12865
  %add = add i64 %sub, 1, !dbg !12865
  %10 = load i32, i32* %_pos, align 4, !dbg !12865
  %11 = load i32, i32* %_len, align 4, !dbg !12865
  %add4 = add i32 %10, %11, !dbg !12865
  %sub5 = sub i32 %add4, 1, !dbg !12865
  %sub6 = sub i32 63, %sub5, !dbg !12865
  %sh_prom7 = zext i32 %sub6 to i64, !dbg !12865
  %shr = lshr i64 -1, %sh_prom7, !dbg !12865
  %and = and i64 %add, %shr, !dbg !12865
  %add8 = add i64 0, %and, !dbg !12865
  %and9 = and i64 %conv, %add8, !dbg !12865
  %conv10 = trunc i64 %and9 to i32, !dbg !12865
  store i32 %conv10, i32* %_val, align 4, !dbg !12865
  %12 = load i32, i32* %_var, align 4, !dbg !12865
  %conv11 = zext i32 %12 to i64, !dbg !12865
  %13 = load i32, i32* %_pos, align 4, !dbg !12865
  %sh_prom12 = zext i32 %13 to i64, !dbg !12865
  %shl13 = shl i64 1, %sh_prom12, !dbg !12865
  %sub14 = sub i64 -1, %shl13, !dbg !12865
  %add15 = add i64 %sub14, 1, !dbg !12865
  %14 = load i32, i32* %_pos, align 4, !dbg !12865
  %15 = load i32, i32* %_len, align 4, !dbg !12865
  %add16 = add i32 %14, %15, !dbg !12865
  %sub17 = sub i32 %add16, 1, !dbg !12865
  %sub18 = sub i32 63, %sub17, !dbg !12865
  %sh_prom19 = zext i32 %sub18 to i64, !dbg !12865
  %shr20 = lshr i64 -1, %sh_prom19, !dbg !12865
  %and21 = and i64 %add15, %shr20, !dbg !12865
  %add22 = add i64 0, %and21, !dbg !12865
  %neg = xor i64 %add22, -1, !dbg !12865
  %and23 = and i64 %conv11, %neg, !dbg !12865
  %16 = load i32, i32* %_val, align 4, !dbg !12865
  %conv24 = sext i32 %16 to i64, !dbg !12865
  %or = or i64 %and23, %conv24, !dbg !12865
  %conv25 = trunc i64 %or to i32, !dbg !12865
  store i32 %conv25, i32* %_var, align 4, !dbg !12865
  store i32 %conv25, i32* %tmp, align 4, !dbg !12865
  %17 = load i32, i32* %tmp, align 4, !dbg !12865
  store i32 %17, i32* %regval, align 4, !dbg !12869
  %18 = load i32, i32* %regval, align 4, !dbg !12870
  %19 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !12871
  %mac_regs26 = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %19, i32 0, i32 6, !dbg !12871
  %20 = load i8*, i8** %mac_regs26, align 8, !dbg !12871
  %add.ptr27 = getelementptr i8, i8* %20, i64 4352, !dbg !12871
  %21 = load i32, i32* %i, align 4, !dbg !12871
  %mul28 = mul i32 %21, 128, !dbg !12871
  %idx.ext29 = zext i32 %mul28 to i64, !dbg !12871
  %add.ptr30 = getelementptr i8, i8* %add.ptr27, i64 %idx.ext29, !dbg !12871
  %add.ptr31 = getelementptr i8, i8* %add.ptr30, i64 64, !dbg !12871
  call void @writel(i32 %18, i8* %add.ptr31) #7, !dbg !12872
  br label %for.inc, !dbg !12873

for.inc:                                          ; preds = %for.body
  %22 = load i32, i32* %i, align 4, !dbg !12874
  %inc = add i32 %22, 1, !dbg !12874
  store i32 %inc, i32* %i, align 4, !dbg !12874
  br label %for.cond, !dbg !12875, !llvm.loop !12876

for.end:                                          ; preds = %for.cond
  ret void, !dbg !12878
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @xlgmac_enable_mtl_interrupts(%struct.xlgmac_pdata* %pdata) #0 !dbg !12879 {
entry:
  %pdata.addr = alloca %struct.xlgmac_pdata*, align 8
  %q_count = alloca i32, align 4
  %i = alloca i32, align 4
  %mtl_q_isr = alloca i32, align 4
  %__UNIQUE_ID___x338 = alloca i32, align 4
  %__UNIQUE_ID___y339 = alloca i32, align 4
  %tmp = alloca i32, align 4
  store %struct.xlgmac_pdata* %pdata, %struct.xlgmac_pdata** %pdata.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xlgmac_pdata** %pdata.addr, metadata !12880, metadata !DIExpression()), !dbg !12881
  call void @llvm.dbg.declare(metadata i32* %q_count, metadata !12882, metadata !DIExpression()), !dbg !12883
  call void @llvm.dbg.declare(metadata i32* %i, metadata !12884, metadata !DIExpression()), !dbg !12885
  call void @llvm.dbg.declare(metadata i32* %mtl_q_isr, metadata !12886, metadata !DIExpression()), !dbg !12887
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___x338, metadata !12888, metadata !DIExpression()), !dbg !12890
  %0 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !12890
  %hw_feat = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %0, i32 0, i32 7, !dbg !12890
  %tx_q_cnt = getelementptr inbounds %struct.xlgmac_hw_features, %struct.xlgmac_hw_features* %hw_feat, i32 0, i32 28, !dbg !12890
  %1 = load i32, i32* %tx_q_cnt, align 8, !dbg !12890
  store i32 %1, i32* %__UNIQUE_ID___x338, align 4, !dbg !12890
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___y339, metadata !12891, metadata !DIExpression()), !dbg !12890
  %2 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !12890
  %hw_feat1 = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %2, i32 0, i32 7, !dbg !12890
  %rx_q_cnt = getelementptr inbounds %struct.xlgmac_hw_features, %struct.xlgmac_hw_features* %hw_feat1, i32 0, i32 27, !dbg !12890
  %3 = load i32, i32* %rx_q_cnt, align 4, !dbg !12890
  store i32 %3, i32* %__UNIQUE_ID___y339, align 4, !dbg !12890
  %4 = load i32, i32* %__UNIQUE_ID___x338, align 4, !dbg !12890
  %5 = load i32, i32* %__UNIQUE_ID___y339, align 4, !dbg !12890
  %cmp = icmp ugt i32 %4, %5, !dbg !12890
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !12890

cond.true:                                        ; preds = %entry
  %6 = load i32, i32* %__UNIQUE_ID___x338, align 4, !dbg !12890
  br label %cond.end, !dbg !12890

cond.false:                                       ; preds = %entry
  %7 = load i32, i32* %__UNIQUE_ID___y339, align 4, !dbg !12890
  br label %cond.end, !dbg !12890

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %6, %cond.true ], [ %7, %cond.false ], !dbg !12890
  store i32 %cond, i32* %tmp, align 4, !dbg !12890
  %8 = load i32, i32* %tmp, align 4, !dbg !12890
  store i32 %8, i32* %q_count, align 4, !dbg !12892
  store i32 0, i32* %i, align 4, !dbg !12893
  br label %for.cond, !dbg !12895

for.cond:                                         ; preds = %for.inc, %cond.end
  %9 = load i32, i32* %i, align 4, !dbg !12896
  %10 = load i32, i32* %q_count, align 4, !dbg !12898
  %cmp2 = icmp ult i32 %9, %10, !dbg !12899
  br i1 %cmp2, label %for.body, label %for.end, !dbg !12900

for.body:                                         ; preds = %for.cond
  %11 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !12901
  %mac_regs = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %11, i32 0, i32 6, !dbg !12901
  %12 = load i8*, i8** %mac_regs, align 8, !dbg !12901
  %add.ptr = getelementptr i8, i8* %12, i64 4352, !dbg !12901
  %13 = load i32, i32* %i, align 4, !dbg !12901
  %mul = mul i32 %13, 128, !dbg !12901
  %idx.ext = zext i32 %mul to i64, !dbg !12901
  %add.ptr3 = getelementptr i8, i8* %add.ptr, i64 %idx.ext, !dbg !12901
  %add.ptr4 = getelementptr i8, i8* %add.ptr3, i64 116, !dbg !12901
  %call = call i32 @readl(i8* %add.ptr4) #7, !dbg !12903
  store i32 %call, i32* %mtl_q_isr, align 4, !dbg !12904
  %14 = load i32, i32* %mtl_q_isr, align 4, !dbg !12905
  %15 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !12906
  %mac_regs5 = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %15, i32 0, i32 6, !dbg !12906
  %16 = load i8*, i8** %mac_regs5, align 8, !dbg !12906
  %add.ptr6 = getelementptr i8, i8* %16, i64 4352, !dbg !12906
  %17 = load i32, i32* %i, align 4, !dbg !12906
  %mul7 = mul i32 %17, 128, !dbg !12906
  %idx.ext8 = zext i32 %mul7 to i64, !dbg !12906
  %add.ptr9 = getelementptr i8, i8* %add.ptr6, i64 %idx.ext8, !dbg !12906
  %add.ptr10 = getelementptr i8, i8* %add.ptr9, i64 116, !dbg !12906
  call void @writel(i32 %14, i8* %add.ptr10) #7, !dbg !12907
  %18 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !12908
  %mac_regs11 = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %18, i32 0, i32 6, !dbg !12908
  %19 = load i8*, i8** %mac_regs11, align 8, !dbg !12908
  %add.ptr12 = getelementptr i8, i8* %19, i64 4352, !dbg !12908
  %20 = load i32, i32* %i, align 4, !dbg !12908
  %mul13 = mul i32 %20, 128, !dbg !12908
  %idx.ext14 = zext i32 %mul13 to i64, !dbg !12908
  %add.ptr15 = getelementptr i8, i8* %add.ptr12, i64 %idx.ext14, !dbg !12908
  %add.ptr16 = getelementptr i8, i8* %add.ptr15, i64 112, !dbg !12908
  call void @writel(i32 0, i8* %add.ptr16) #7, !dbg !12909
  br label %for.inc, !dbg !12910

for.inc:                                          ; preds = %for.body
  %21 = load i32, i32* %i, align 4, !dbg !12911
  %inc = add i32 %21, 1, !dbg !12911
  store i32 %inc, i32* %i, align 4, !dbg !12911
  br label %for.cond, !dbg !12912, !llvm.loop !12913

for.end:                                          ; preds = %for.cond
  ret void, !dbg !12915
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @xlgmac_config_mac_address(%struct.xlgmac_pdata* %pdata) #0 !dbg !12916 {
entry:
  %pdata.addr = alloca %struct.xlgmac_pdata*, align 8
  %regval = alloca i32, align 4
  %_var = alloca i32, align 4
  %_pos = alloca i32, align 4
  %_len = alloca i32, align 4
  %_val = alloca i32, align 4
  %tmp = alloca i32, align 4
  %_var25 = alloca i32, align 4
  %_pos26 = alloca i32, align 4
  %_len27 = alloca i32, align 4
  %_val28 = alloca i32, align 4
  %tmp44 = alloca i32, align 4
  %_var62 = alloca i32, align 4
  %_pos63 = alloca i32, align 4
  %_len64 = alloca i32, align 4
  %_val65 = alloca i32, align 4
  %tmp81 = alloca i32, align 4
  store %struct.xlgmac_pdata* %pdata, %struct.xlgmac_pdata** %pdata.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xlgmac_pdata** %pdata.addr, metadata !12917, metadata !DIExpression()), !dbg !12918
  call void @llvm.dbg.declare(metadata i32* %regval, metadata !12919, metadata !DIExpression()), !dbg !12920
  %0 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !12921
  %1 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !12922
  %netdev = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %1, i32 0, i32 0, !dbg !12923
  %2 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !12923
  %dev_addr = getelementptr inbounds %struct.net_device, %struct.net_device* %2, i32 0, i32 74, !dbg !12924
  %3 = load i8*, i8** %dev_addr, align 8, !dbg !12924
  %call = call i32 @xlgmac_set_mac_address(%struct.xlgmac_pdata* %0, i8* %3) #7, !dbg !12925
  %4 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !12926
  %hw_feat = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %4, i32 0, i32 7, !dbg !12928
  %hash_table_size = getelementptr inbounds %struct.xlgmac_hw_features, %struct.xlgmac_hw_features* %hw_feat, i32 0, i32 25, !dbg !12929
  %5 = load i32, i32* %hash_table_size, align 4, !dbg !12929
  %tobool = icmp ne i32 %5, 0, !dbg !12926
  br i1 %tobool, label %if.then, label %if.end, !dbg !12930

if.then:                                          ; preds = %entry
  %6 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !12931
  %mac_regs = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %6, i32 0, i32 6, !dbg !12933
  %7 = load i8*, i8** %mac_regs, align 8, !dbg !12933
  %add.ptr = getelementptr i8, i8* %7, i64 8, !dbg !12934
  %call1 = call i32 @readl(i8* %add.ptr) #7, !dbg !12935
  store i32 %call1, i32* %regval, align 4, !dbg !12936
  call void @llvm.dbg.declare(metadata i32* %_var, metadata !12937, metadata !DIExpression()), !dbg !12939
  %8 = load i32, i32* %regval, align 4, !dbg !12939
  store i32 %8, i32* %_var, align 4, !dbg !12939
  call void @llvm.dbg.declare(metadata i32* %_pos, metadata !12940, metadata !DIExpression()), !dbg !12939
  store i32 10, i32* %_pos, align 4, !dbg !12939
  call void @llvm.dbg.declare(metadata i32* %_len, metadata !12941, metadata !DIExpression()), !dbg !12939
  store i32 1, i32* %_len, align 4, !dbg !12939
  call void @llvm.dbg.declare(metadata i32* %_val, metadata !12942, metadata !DIExpression()), !dbg !12939
  store i32 1, i32* %_val, align 4, !dbg !12939
  %9 = load i32, i32* %_val, align 4, !dbg !12939
  %10 = load i32, i32* %_pos, align 4, !dbg !12939
  %shl = shl i32 %9, %10, !dbg !12939
  %conv = sext i32 %shl to i64, !dbg !12939
  %11 = load i32, i32* %_pos, align 4, !dbg !12939
  %sh_prom = zext i32 %11 to i64, !dbg !12939
  %shl2 = shl i64 1, %sh_prom, !dbg !12939
  %sub = sub i64 -1, %shl2, !dbg !12939
  %add = add i64 %sub, 1, !dbg !12939
  %12 = load i32, i32* %_pos, align 4, !dbg !12939
  %13 = load i32, i32* %_len, align 4, !dbg !12939
  %add3 = add i32 %12, %13, !dbg !12939
  %sub4 = sub i32 %add3, 1, !dbg !12939
  %sub5 = sub i32 63, %sub4, !dbg !12939
  %sh_prom6 = zext i32 %sub5 to i64, !dbg !12939
  %shr = lshr i64 -1, %sh_prom6, !dbg !12939
  %and = and i64 %add, %shr, !dbg !12939
  %add7 = add i64 0, %and, !dbg !12939
  %and8 = and i64 %conv, %add7, !dbg !12939
  %conv9 = trunc i64 %and8 to i32, !dbg !12939
  store i32 %conv9, i32* %_val, align 4, !dbg !12939
  %14 = load i32, i32* %_var, align 4, !dbg !12939
  %conv10 = zext i32 %14 to i64, !dbg !12939
  %15 = load i32, i32* %_pos, align 4, !dbg !12939
  %sh_prom11 = zext i32 %15 to i64, !dbg !12939
  %shl12 = shl i64 1, %sh_prom11, !dbg !12939
  %sub13 = sub i64 -1, %shl12, !dbg !12939
  %add14 = add i64 %sub13, 1, !dbg !12939
  %16 = load i32, i32* %_pos, align 4, !dbg !12939
  %17 = load i32, i32* %_len, align 4, !dbg !12939
  %add15 = add i32 %16, %17, !dbg !12939
  %sub16 = sub i32 %add15, 1, !dbg !12939
  %sub17 = sub i32 63, %sub16, !dbg !12939
  %sh_prom18 = zext i32 %sub17 to i64, !dbg !12939
  %shr19 = lshr i64 -1, %sh_prom18, !dbg !12939
  %and20 = and i64 %add14, %shr19, !dbg !12939
  %add21 = add i64 0, %and20, !dbg !12939
  %neg = xor i64 %add21, -1, !dbg !12939
  %and22 = and i64 %conv10, %neg, !dbg !12939
  %18 = load i32, i32* %_val, align 4, !dbg !12939
  %conv23 = sext i32 %18 to i64, !dbg !12939
  %or = or i64 %and22, %conv23, !dbg !12939
  %conv24 = trunc i64 %or to i32, !dbg !12939
  store i32 %conv24, i32* %_var, align 4, !dbg !12939
  store i32 %conv24, i32* %tmp, align 4, !dbg !12939
  %19 = load i32, i32* %tmp, align 4, !dbg !12939
  store i32 %19, i32* %regval, align 4, !dbg !12943
  call void @llvm.dbg.declare(metadata i32* %_var25, metadata !12944, metadata !DIExpression()), !dbg !12946
  %20 = load i32, i32* %regval, align 4, !dbg !12946
  store i32 %20, i32* %_var25, align 4, !dbg !12946
  call void @llvm.dbg.declare(metadata i32* %_pos26, metadata !12947, metadata !DIExpression()), !dbg !12946
  store i32 1, i32* %_pos26, align 4, !dbg !12946
  call void @llvm.dbg.declare(metadata i32* %_len27, metadata !12948, metadata !DIExpression()), !dbg !12946
  store i32 1, i32* %_len27, align 4, !dbg !12946
  call void @llvm.dbg.declare(metadata i32* %_val28, metadata !12949, metadata !DIExpression()), !dbg !12946
  store i32 1, i32* %_val28, align 4, !dbg !12946
  %21 = load i32, i32* %_val28, align 4, !dbg !12946
  %22 = load i32, i32* %_pos26, align 4, !dbg !12946
  %shl29 = shl i32 %21, %22, !dbg !12946
  %conv30 = sext i32 %shl29 to i64, !dbg !12946
  %23 = load i32, i32* %_pos26, align 4, !dbg !12946
  %sh_prom31 = zext i32 %23 to i64, !dbg !12946
  %shl32 = shl i64 1, %sh_prom31, !dbg !12946
  %sub33 = sub i64 -1, %shl32, !dbg !12946
  %add34 = add i64 %sub33, 1, !dbg !12946
  %24 = load i32, i32* %_pos26, align 4, !dbg !12946
  %25 = load i32, i32* %_len27, align 4, !dbg !12946
  %add35 = add i32 %24, %25, !dbg !12946
  %sub36 = sub i32 %add35, 1, !dbg !12946
  %sub37 = sub i32 63, %sub36, !dbg !12946
  %sh_prom38 = zext i32 %sub37 to i64, !dbg !12946
  %shr39 = lshr i64 -1, %sh_prom38, !dbg !12946
  %and40 = and i64 %add34, %shr39, !dbg !12946
  %add41 = add i64 0, %and40, !dbg !12946
  %and42 = and i64 %conv30, %add41, !dbg !12946
  %conv43 = trunc i64 %and42 to i32, !dbg !12946
  store i32 %conv43, i32* %_val28, align 4, !dbg !12946
  %26 = load i32, i32* %_var25, align 4, !dbg !12946
  %conv45 = zext i32 %26 to i64, !dbg !12946
  %27 = load i32, i32* %_pos26, align 4, !dbg !12946
  %sh_prom46 = zext i32 %27 to i64, !dbg !12946
  %shl47 = shl i64 1, %sh_prom46, !dbg !12946
  %sub48 = sub i64 -1, %shl47, !dbg !12946
  %add49 = add i64 %sub48, 1, !dbg !12946
  %28 = load i32, i32* %_pos26, align 4, !dbg !12946
  %29 = load i32, i32* %_len27, align 4, !dbg !12946
  %add50 = add i32 %28, %29, !dbg !12946
  %sub51 = sub i32 %add50, 1, !dbg !12946
  %sub52 = sub i32 63, %sub51, !dbg !12946
  %sh_prom53 = zext i32 %sub52 to i64, !dbg !12946
  %shr54 = lshr i64 -1, %sh_prom53, !dbg !12946
  %and55 = and i64 %add49, %shr54, !dbg !12946
  %add56 = add i64 0, %and55, !dbg !12946
  %neg57 = xor i64 %add56, -1, !dbg !12946
  %and58 = and i64 %conv45, %neg57, !dbg !12946
  %30 = load i32, i32* %_val28, align 4, !dbg !12946
  %conv59 = sext i32 %30 to i64, !dbg !12946
  %or60 = or i64 %and58, %conv59, !dbg !12946
  %conv61 = trunc i64 %or60 to i32, !dbg !12946
  store i32 %conv61, i32* %_var25, align 4, !dbg !12946
  store i32 %conv61, i32* %tmp44, align 4, !dbg !12946
  %31 = load i32, i32* %tmp44, align 4, !dbg !12946
  store i32 %31, i32* %regval, align 4, !dbg !12950
  call void @llvm.dbg.declare(metadata i32* %_var62, metadata !12951, metadata !DIExpression()), !dbg !12953
  %32 = load i32, i32* %regval, align 4, !dbg !12953
  store i32 %32, i32* %_var62, align 4, !dbg !12953
  call void @llvm.dbg.declare(metadata i32* %_pos63, metadata !12954, metadata !DIExpression()), !dbg !12953
  store i32 2, i32* %_pos63, align 4, !dbg !12953
  call void @llvm.dbg.declare(metadata i32* %_len64, metadata !12955, metadata !DIExpression()), !dbg !12953
  store i32 1, i32* %_len64, align 4, !dbg !12953
  call void @llvm.dbg.declare(metadata i32* %_val65, metadata !12956, metadata !DIExpression()), !dbg !12953
  store i32 1, i32* %_val65, align 4, !dbg !12953
  %33 = load i32, i32* %_val65, align 4, !dbg !12953
  %34 = load i32, i32* %_pos63, align 4, !dbg !12953
  %shl66 = shl i32 %33, %34, !dbg !12953
  %conv67 = sext i32 %shl66 to i64, !dbg !12953
  %35 = load i32, i32* %_pos63, align 4, !dbg !12953
  %sh_prom68 = zext i32 %35 to i64, !dbg !12953
  %shl69 = shl i64 1, %sh_prom68, !dbg !12953
  %sub70 = sub i64 -1, %shl69, !dbg !12953
  %add71 = add i64 %sub70, 1, !dbg !12953
  %36 = load i32, i32* %_pos63, align 4, !dbg !12953
  %37 = load i32, i32* %_len64, align 4, !dbg !12953
  %add72 = add i32 %36, %37, !dbg !12953
  %sub73 = sub i32 %add72, 1, !dbg !12953
  %sub74 = sub i32 63, %sub73, !dbg !12953
  %sh_prom75 = zext i32 %sub74 to i64, !dbg !12953
  %shr76 = lshr i64 -1, %sh_prom75, !dbg !12953
  %and77 = and i64 %add71, %shr76, !dbg !12953
  %add78 = add i64 0, %and77, !dbg !12953
  %and79 = and i64 %conv67, %add78, !dbg !12953
  %conv80 = trunc i64 %and79 to i32, !dbg !12953
  store i32 %conv80, i32* %_val65, align 4, !dbg !12953
  %38 = load i32, i32* %_var62, align 4, !dbg !12953
  %conv82 = zext i32 %38 to i64, !dbg !12953
  %39 = load i32, i32* %_pos63, align 4, !dbg !12953
  %sh_prom83 = zext i32 %39 to i64, !dbg !12953
  %shl84 = shl i64 1, %sh_prom83, !dbg !12953
  %sub85 = sub i64 -1, %shl84, !dbg !12953
  %add86 = add i64 %sub85, 1, !dbg !12953
  %40 = load i32, i32* %_pos63, align 4, !dbg !12953
  %41 = load i32, i32* %_len64, align 4, !dbg !12953
  %add87 = add i32 %40, %41, !dbg !12953
  %sub88 = sub i32 %add87, 1, !dbg !12953
  %sub89 = sub i32 63, %sub88, !dbg !12953
  %sh_prom90 = zext i32 %sub89 to i64, !dbg !12953
  %shr91 = lshr i64 -1, %sh_prom90, !dbg !12953
  %and92 = and i64 %add86, %shr91, !dbg !12953
  %add93 = add i64 0, %and92, !dbg !12953
  %neg94 = xor i64 %add93, -1, !dbg !12953
  %and95 = and i64 %conv82, %neg94, !dbg !12953
  %42 = load i32, i32* %_val65, align 4, !dbg !12953
  %conv96 = sext i32 %42 to i64, !dbg !12953
  %or97 = or i64 %and95, %conv96, !dbg !12953
  %conv98 = trunc i64 %or97 to i32, !dbg !12953
  store i32 %conv98, i32* %_var62, align 4, !dbg !12953
  store i32 %conv98, i32* %tmp81, align 4, !dbg !12953
  %43 = load i32, i32* %tmp81, align 4, !dbg !12953
  store i32 %43, i32* %regval, align 4, !dbg !12957
  %44 = load i32, i32* %regval, align 4, !dbg !12958
  %45 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !12959
  %mac_regs99 = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %45, i32 0, i32 6, !dbg !12960
  %46 = load i8*, i8** %mac_regs99, align 8, !dbg !12960
  %add.ptr100 = getelementptr i8, i8* %46, i64 8, !dbg !12961
  call void @writel(i32 %44, i8* %add.ptr100) #7, !dbg !12962
  br label %if.end, !dbg !12963

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !12964
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @xlgmac_config_jumbo_enable(%struct.xlgmac_pdata* %pdata) #0 !dbg !12965 {
entry:
  %pdata.addr = alloca %struct.xlgmac_pdata*, align 8
  %val = alloca i32, align 4
  %regval = alloca i32, align 4
  %_var = alloca i32, align 4
  %_pos = alloca i32, align 4
  %_len = alloca i32, align 4
  %_val = alloca i32, align 4
  %tmp = alloca i32, align 4
  store %struct.xlgmac_pdata* %pdata, %struct.xlgmac_pdata** %pdata.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xlgmac_pdata** %pdata.addr, metadata !12966, metadata !DIExpression()), !dbg !12967
  call void @llvm.dbg.declare(metadata i32* %val, metadata !12968, metadata !DIExpression()), !dbg !12969
  call void @llvm.dbg.declare(metadata i32* %regval, metadata !12970, metadata !DIExpression()), !dbg !12971
  %0 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !12972
  %netdev = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %0, i32 0, i32 0, !dbg !12973
  %1 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !12973
  %mtu = getelementptr inbounds %struct.net_device, %struct.net_device* %1, i32 0, i32 44, !dbg !12974
  %2 = load i32, i32* %mtu, align 8, !dbg !12974
  %cmp = icmp ugt i32 %2, 1500, !dbg !12975
  %3 = zext i1 %cmp to i64, !dbg !12976
  %cond = select i1 %cmp, i32 1, i32 0, !dbg !12976
  store i32 %cond, i32* %val, align 4, !dbg !12977
  %4 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !12978
  %mac_regs = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %4, i32 0, i32 6, !dbg !12979
  %5 = load i8*, i8** %mac_regs, align 8, !dbg !12979
  %add.ptr = getelementptr i8, i8* %5, i64 4, !dbg !12980
  %call = call i32 @readl(i8* %add.ptr) #7, !dbg !12981
  store i32 %call, i32* %regval, align 4, !dbg !12982
  call void @llvm.dbg.declare(metadata i32* %_var, metadata !12983, metadata !DIExpression()), !dbg !12985
  %6 = load i32, i32* %regval, align 4, !dbg !12985
  store i32 %6, i32* %_var, align 4, !dbg !12985
  call void @llvm.dbg.declare(metadata i32* %_pos, metadata !12986, metadata !DIExpression()), !dbg !12985
  store i32 8, i32* %_pos, align 4, !dbg !12985
  call void @llvm.dbg.declare(metadata i32* %_len, metadata !12987, metadata !DIExpression()), !dbg !12985
  store i32 1, i32* %_len, align 4, !dbg !12985
  call void @llvm.dbg.declare(metadata i32* %_val, metadata !12988, metadata !DIExpression()), !dbg !12985
  %7 = load i32, i32* %val, align 4, !dbg !12985
  store i32 %7, i32* %_val, align 4, !dbg !12985
  %8 = load i32, i32* %_val, align 4, !dbg !12985
  %9 = load i32, i32* %_pos, align 4, !dbg !12985
  %shl = shl i32 %8, %9, !dbg !12985
  %conv = zext i32 %shl to i64, !dbg !12985
  %10 = load i32, i32* %_pos, align 4, !dbg !12985
  %sh_prom = zext i32 %10 to i64, !dbg !12985
  %shl1 = shl i64 1, %sh_prom, !dbg !12985
  %sub = sub i64 -1, %shl1, !dbg !12985
  %add = add i64 %sub, 1, !dbg !12985
  %11 = load i32, i32* %_pos, align 4, !dbg !12985
  %12 = load i32, i32* %_len, align 4, !dbg !12985
  %add2 = add i32 %11, %12, !dbg !12985
  %sub3 = sub i32 %add2, 1, !dbg !12985
  %sub4 = sub i32 63, %sub3, !dbg !12985
  %sh_prom5 = zext i32 %sub4 to i64, !dbg !12985
  %shr = lshr i64 -1, %sh_prom5, !dbg !12985
  %and = and i64 %add, %shr, !dbg !12985
  %add6 = add i64 0, %and, !dbg !12985
  %and7 = and i64 %conv, %add6, !dbg !12985
  %conv8 = trunc i64 %and7 to i32, !dbg !12985
  store i32 %conv8, i32* %_val, align 4, !dbg !12985
  %13 = load i32, i32* %_var, align 4, !dbg !12985
  %conv9 = zext i32 %13 to i64, !dbg !12985
  %14 = load i32, i32* %_pos, align 4, !dbg !12985
  %sh_prom10 = zext i32 %14 to i64, !dbg !12985
  %shl11 = shl i64 1, %sh_prom10, !dbg !12985
  %sub12 = sub i64 -1, %shl11, !dbg !12985
  %add13 = add i64 %sub12, 1, !dbg !12985
  %15 = load i32, i32* %_pos, align 4, !dbg !12985
  %16 = load i32, i32* %_len, align 4, !dbg !12985
  %add14 = add i32 %15, %16, !dbg !12985
  %sub15 = sub i32 %add14, 1, !dbg !12985
  %sub16 = sub i32 63, %sub15, !dbg !12985
  %sh_prom17 = zext i32 %sub16 to i64, !dbg !12985
  %shr18 = lshr i64 -1, %sh_prom17, !dbg !12985
  %and19 = and i64 %add13, %shr18, !dbg !12985
  %add20 = add i64 0, %and19, !dbg !12985
  %neg = xor i64 %add20, -1, !dbg !12985
  %and21 = and i64 %conv9, %neg, !dbg !12985
  %17 = load i32, i32* %_val, align 4, !dbg !12985
  %conv22 = zext i32 %17 to i64, !dbg !12985
  %or = or i64 %and21, %conv22, !dbg !12985
  %conv23 = trunc i64 %or to i32, !dbg !12985
  store i32 %conv23, i32* %_var, align 4, !dbg !12985
  store i32 %conv23, i32* %tmp, align 4, !dbg !12985
  %18 = load i32, i32* %tmp, align 4, !dbg !12985
  store i32 %18, i32* %regval, align 4, !dbg !12989
  %19 = load i32, i32* %regval, align 4, !dbg !12990
  %20 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !12991
  %mac_regs24 = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %20, i32 0, i32 6, !dbg !12992
  %21 = load i8*, i8** %mac_regs24, align 8, !dbg !12992
  %add.ptr25 = getelementptr i8, i8* %21, i64 4, !dbg !12993
  call void @writel(i32 %19, i8* %add.ptr25) #7, !dbg !12994
  ret void, !dbg !12995
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @xlgmac_config_flow_control(%struct.xlgmac_pdata* %pdata) #0 !dbg !12996 {
entry:
  %pdata.addr = alloca %struct.xlgmac_pdata*, align 8
  store %struct.xlgmac_pdata* %pdata, %struct.xlgmac_pdata** %pdata.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xlgmac_pdata** %pdata.addr, metadata !12997, metadata !DIExpression()), !dbg !12998
  %0 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !12999
  %call = call i32 @xlgmac_config_tx_flow_control(%struct.xlgmac_pdata* %0) #7, !dbg !13000
  %1 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !13001
  %call1 = call i32 @xlgmac_config_rx_flow_control(%struct.xlgmac_pdata* %1) #7, !dbg !13002
  ret void, !dbg !13003
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @xlgmac_config_mac_speed(%struct.xlgmac_pdata* %pdata) #0 !dbg !13004 {
entry:
  %pdata.addr = alloca %struct.xlgmac_pdata*, align 8
  store %struct.xlgmac_pdata* %pdata, %struct.xlgmac_pdata** %pdata.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xlgmac_pdata** %pdata.addr, metadata !13005, metadata !DIExpression()), !dbg !13006
  %0 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !13007
  %phy_speed = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %0, i32 0, i32 45, !dbg !13008
  %1 = load i32, i32* %phy_speed, align 4, !dbg !13008
  switch i32 %1, label %sw.epilog [
    i32 100000, label %sw.bb
    i32 50000, label %sw.bb1
    i32 40000, label %sw.bb3
    i32 25000, label %sw.bb5
  ], !dbg !13009

sw.bb:                                            ; preds = %entry
  %2 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !13010
  %call = call i32 @xlgmac_set_xlgmii_100000_speed(%struct.xlgmac_pdata* %2) #7, !dbg !13012
  br label %sw.epilog, !dbg !13013

sw.bb1:                                           ; preds = %entry
  %3 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !13014
  %call2 = call i32 @xlgmac_set_xlgmii_50000_speed(%struct.xlgmac_pdata* %3) #7, !dbg !13015
  br label %sw.epilog, !dbg !13016

sw.bb3:                                           ; preds = %entry
  %4 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !13017
  %call4 = call i32 @xlgmac_set_xlgmii_40000_speed(%struct.xlgmac_pdata* %4) #7, !dbg !13018
  br label %sw.epilog, !dbg !13019

sw.bb5:                                           ; preds = %entry
  %5 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !13020
  %call6 = call i32 @xlgmac_set_xlgmii_25000_speed(%struct.xlgmac_pdata* %5) #7, !dbg !13021
  br label %sw.epilog, !dbg !13022

sw.epilog:                                        ; preds = %entry, %sw.bb5, %sw.bb3, %sw.bb1, %sw.bb
  ret void, !dbg !13023
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @xlgmac_config_checksum_offload(%struct.xlgmac_pdata* %pdata) #0 !dbg !13024 {
entry:
  %pdata.addr = alloca %struct.xlgmac_pdata*, align 8
  store %struct.xlgmac_pdata* %pdata, %struct.xlgmac_pdata** %pdata.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xlgmac_pdata** %pdata.addr, metadata !13025, metadata !DIExpression()), !dbg !13026
  %0 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !13027
  %netdev = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %0, i32 0, i32 0, !dbg !13029
  %1 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !13029
  %features = getelementptr inbounds %struct.net_device, %struct.net_device* %1, i32 0, i32 15, !dbg !13030
  %2 = load i64, i64* %features, align 8, !dbg !13030
  %and = and i64 %2, 1099511627776, !dbg !13031
  %tobool = icmp ne i64 %and, 0, !dbg !13031
  br i1 %tobool, label %if.then, label %if.else, !dbg !13032

if.then:                                          ; preds = %entry
  %3 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !13033
  %call = call i32 @xlgmac_enable_rx_csum(%struct.xlgmac_pdata* %3) #7, !dbg !13034
  br label %if.end, !dbg !13034

if.else:                                          ; preds = %entry
  %4 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !13035
  %call1 = call i32 @xlgmac_disable_rx_csum(%struct.xlgmac_pdata* %4) #7, !dbg !13036
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !13037
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @xlgmac_config_vlan_support(%struct.xlgmac_pdata* %pdata) #0 !dbg !13038 {
entry:
  %pdata.addr = alloca %struct.xlgmac_pdata*, align 8
  %regval = alloca i32, align 4
  %_var = alloca i32, align 4
  %_pos = alloca i32, align 4
  %_len = alloca i32, align 4
  %_val = alloca i32, align 4
  %tmp = alloca i32, align 4
  %_var24 = alloca i32, align 4
  %_pos25 = alloca i32, align 4
  %_len26 = alloca i32, align 4
  %_val27 = alloca i32, align 4
  %tmp43 = alloca i32, align 4
  store %struct.xlgmac_pdata* %pdata, %struct.xlgmac_pdata** %pdata.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xlgmac_pdata** %pdata.addr, metadata !13039, metadata !DIExpression()), !dbg !13040
  call void @llvm.dbg.declare(metadata i32* %regval, metadata !13041, metadata !DIExpression()), !dbg !13042
  %0 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !13043
  %mac_regs = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %0, i32 0, i32 6, !dbg !13044
  %1 = load i8*, i8** %mac_regs, align 8, !dbg !13044
  %add.ptr = getelementptr i8, i8* %1, i64 96, !dbg !13045
  %call = call i32 @readl(i8* %add.ptr) #7, !dbg !13046
  store i32 %call, i32* %regval, align 4, !dbg !13047
  call void @llvm.dbg.declare(metadata i32* %_var, metadata !13048, metadata !DIExpression()), !dbg !13050
  %2 = load i32, i32* %regval, align 4, !dbg !13050
  store i32 %2, i32* %_var, align 4, !dbg !13050
  call void @llvm.dbg.declare(metadata i32* %_pos, metadata !13051, metadata !DIExpression()), !dbg !13050
  store i32 19, i32* %_pos, align 4, !dbg !13050
  call void @llvm.dbg.declare(metadata i32* %_len, metadata !13052, metadata !DIExpression()), !dbg !13050
  store i32 1, i32* %_len, align 4, !dbg !13050
  call void @llvm.dbg.declare(metadata i32* %_val, metadata !13053, metadata !DIExpression()), !dbg !13050
  store i32 0, i32* %_val, align 4, !dbg !13050
  %3 = load i32, i32* %_val, align 4, !dbg !13050
  %4 = load i32, i32* %_pos, align 4, !dbg !13050
  %shl = shl i32 %3, %4, !dbg !13050
  %conv = sext i32 %shl to i64, !dbg !13050
  %5 = load i32, i32* %_pos, align 4, !dbg !13050
  %sh_prom = zext i32 %5 to i64, !dbg !13050
  %shl1 = shl i64 1, %sh_prom, !dbg !13050
  %sub = sub i64 -1, %shl1, !dbg !13050
  %add = add i64 %sub, 1, !dbg !13050
  %6 = load i32, i32* %_pos, align 4, !dbg !13050
  %7 = load i32, i32* %_len, align 4, !dbg !13050
  %add2 = add i32 %6, %7, !dbg !13050
  %sub3 = sub i32 %add2, 1, !dbg !13050
  %sub4 = sub i32 63, %sub3, !dbg !13050
  %sh_prom5 = zext i32 %sub4 to i64, !dbg !13050
  %shr = lshr i64 -1, %sh_prom5, !dbg !13050
  %and = and i64 %add, %shr, !dbg !13050
  %add6 = add i64 0, %and, !dbg !13050
  %and7 = and i64 %conv, %add6, !dbg !13050
  %conv8 = trunc i64 %and7 to i32, !dbg !13050
  store i32 %conv8, i32* %_val, align 4, !dbg !13050
  %8 = load i32, i32* %_var, align 4, !dbg !13050
  %conv9 = zext i32 %8 to i64, !dbg !13050
  %9 = load i32, i32* %_pos, align 4, !dbg !13050
  %sh_prom10 = zext i32 %9 to i64, !dbg !13050
  %shl11 = shl i64 1, %sh_prom10, !dbg !13050
  %sub12 = sub i64 -1, %shl11, !dbg !13050
  %add13 = add i64 %sub12, 1, !dbg !13050
  %10 = load i32, i32* %_pos, align 4, !dbg !13050
  %11 = load i32, i32* %_len, align 4, !dbg !13050
  %add14 = add i32 %10, %11, !dbg !13050
  %sub15 = sub i32 %add14, 1, !dbg !13050
  %sub16 = sub i32 63, %sub15, !dbg !13050
  %sh_prom17 = zext i32 %sub16 to i64, !dbg !13050
  %shr18 = lshr i64 -1, %sh_prom17, !dbg !13050
  %and19 = and i64 %add13, %shr18, !dbg !13050
  %add20 = add i64 0, %and19, !dbg !13050
  %neg = xor i64 %add20, -1, !dbg !13050
  %and21 = and i64 %conv9, %neg, !dbg !13050
  %12 = load i32, i32* %_val, align 4, !dbg !13050
  %conv22 = sext i32 %12 to i64, !dbg !13050
  %or = or i64 %and21, %conv22, !dbg !13050
  %conv23 = trunc i64 %or to i32, !dbg !13050
  store i32 %conv23, i32* %_var, align 4, !dbg !13050
  store i32 %conv23, i32* %tmp, align 4, !dbg !13050
  %13 = load i32, i32* %tmp, align 4, !dbg !13050
  store i32 %13, i32* %regval, align 4, !dbg !13054
  call void @llvm.dbg.declare(metadata i32* %_var24, metadata !13055, metadata !DIExpression()), !dbg !13057
  %14 = load i32, i32* %regval, align 4, !dbg !13057
  store i32 %14, i32* %_var24, align 4, !dbg !13057
  call void @llvm.dbg.declare(metadata i32* %_pos25, metadata !13058, metadata !DIExpression()), !dbg !13057
  store i32 20, i32* %_pos25, align 4, !dbg !13057
  call void @llvm.dbg.declare(metadata i32* %_len26, metadata !13059, metadata !DIExpression()), !dbg !13057
  store i32 1, i32* %_len26, align 4, !dbg !13057
  call void @llvm.dbg.declare(metadata i32* %_val27, metadata !13060, metadata !DIExpression()), !dbg !13057
  store i32 1, i32* %_val27, align 4, !dbg !13057
  %15 = load i32, i32* %_val27, align 4, !dbg !13057
  %16 = load i32, i32* %_pos25, align 4, !dbg !13057
  %shl28 = shl i32 %15, %16, !dbg !13057
  %conv29 = sext i32 %shl28 to i64, !dbg !13057
  %17 = load i32, i32* %_pos25, align 4, !dbg !13057
  %sh_prom30 = zext i32 %17 to i64, !dbg !13057
  %shl31 = shl i64 1, %sh_prom30, !dbg !13057
  %sub32 = sub i64 -1, %shl31, !dbg !13057
  %add33 = add i64 %sub32, 1, !dbg !13057
  %18 = load i32, i32* %_pos25, align 4, !dbg !13057
  %19 = load i32, i32* %_len26, align 4, !dbg !13057
  %add34 = add i32 %18, %19, !dbg !13057
  %sub35 = sub i32 %add34, 1, !dbg !13057
  %sub36 = sub i32 63, %sub35, !dbg !13057
  %sh_prom37 = zext i32 %sub36 to i64, !dbg !13057
  %shr38 = lshr i64 -1, %sh_prom37, !dbg !13057
  %and39 = and i64 %add33, %shr38, !dbg !13057
  %add40 = add i64 0, %and39, !dbg !13057
  %and41 = and i64 %conv29, %add40, !dbg !13057
  %conv42 = trunc i64 %and41 to i32, !dbg !13057
  store i32 %conv42, i32* %_val27, align 4, !dbg !13057
  %20 = load i32, i32* %_var24, align 4, !dbg !13057
  %conv44 = zext i32 %20 to i64, !dbg !13057
  %21 = load i32, i32* %_pos25, align 4, !dbg !13057
  %sh_prom45 = zext i32 %21 to i64, !dbg !13057
  %shl46 = shl i64 1, %sh_prom45, !dbg !13057
  %sub47 = sub i64 -1, %shl46, !dbg !13057
  %add48 = add i64 %sub47, 1, !dbg !13057
  %22 = load i32, i32* %_pos25, align 4, !dbg !13057
  %23 = load i32, i32* %_len26, align 4, !dbg !13057
  %add49 = add i32 %22, %23, !dbg !13057
  %sub50 = sub i32 %add49, 1, !dbg !13057
  %sub51 = sub i32 63, %sub50, !dbg !13057
  %sh_prom52 = zext i32 %sub51 to i64, !dbg !13057
  %shr53 = lshr i64 -1, %sh_prom52, !dbg !13057
  %and54 = and i64 %add48, %shr53, !dbg !13057
  %add55 = add i64 0, %and54, !dbg !13057
  %neg56 = xor i64 %add55, -1, !dbg !13057
  %and57 = and i64 %conv44, %neg56, !dbg !13057
  %24 = load i32, i32* %_val27, align 4, !dbg !13057
  %conv58 = sext i32 %24 to i64, !dbg !13057
  %or59 = or i64 %and57, %conv58, !dbg !13057
  %conv60 = trunc i64 %or59 to i32, !dbg !13057
  store i32 %conv60, i32* %_var24, align 4, !dbg !13057
  store i32 %conv60, i32* %tmp43, align 4, !dbg !13057
  %25 = load i32, i32* %tmp43, align 4, !dbg !13057
  store i32 %25, i32* %regval, align 4, !dbg !13061
  %26 = load i32, i32* %regval, align 4, !dbg !13062
  %27 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !13063
  %mac_regs61 = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %27, i32 0, i32 6, !dbg !13064
  %28 = load i8*, i8** %mac_regs61, align 8, !dbg !13064
  %add.ptr62 = getelementptr i8, i8* %28, i64 96, !dbg !13065
  call void @writel(i32 %26, i8* %add.ptr62) #7, !dbg !13066
  %29 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !13067
  %call63 = call i32 @xlgmac_update_vlan_hash_table(%struct.xlgmac_pdata* %29) #7, !dbg !13068
  %30 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !13069
  %netdev = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %30, i32 0, i32 0, !dbg !13071
  %31 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !13071
  %features = getelementptr inbounds %struct.net_device, %struct.net_device* %31, i32 0, i32 15, !dbg !13072
  %32 = load i64, i64* %features, align 8, !dbg !13072
  %and64 = and i64 %32, 512, !dbg !13073
  %tobool = icmp ne i64 %and64, 0, !dbg !13073
  br i1 %tobool, label %if.then, label %if.else, !dbg !13074

if.then:                                          ; preds = %entry
  %33 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !13075
  %call65 = call i32 @xlgmac_enable_rx_vlan_filtering(%struct.xlgmac_pdata* %33) #7, !dbg !13076
  br label %if.end, !dbg !13076

if.else:                                          ; preds = %entry
  %34 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !13077
  %call66 = call i32 @xlgmac_disable_rx_vlan_filtering(%struct.xlgmac_pdata* %34) #7, !dbg !13078
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %35 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !13079
  %netdev67 = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %35, i32 0, i32 0, !dbg !13081
  %36 = load %struct.net_device*, %struct.net_device** %netdev67, align 8, !dbg !13081
  %features68 = getelementptr inbounds %struct.net_device, %struct.net_device* %36, i32 0, i32 15, !dbg !13082
  %37 = load i64, i64* %features68, align 8, !dbg !13082
  %and69 = and i64 %37, 256, !dbg !13083
  %tobool70 = icmp ne i64 %and69, 0, !dbg !13083
  br i1 %tobool70, label %if.then71, label %if.else73, !dbg !13084

if.then71:                                        ; preds = %if.end
  %38 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !13085
  %call72 = call i32 @xlgmac_enable_rx_vlan_stripping(%struct.xlgmac_pdata* %38) #7, !dbg !13086
  br label %if.end75, !dbg !13086

if.else73:                                        ; preds = %if.end
  %39 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !13087
  %call74 = call i32 @xlgmac_disable_rx_vlan_stripping(%struct.xlgmac_pdata* %39) #7, !dbg !13088
  br label %if.end75

if.end75:                                         ; preds = %if.else73, %if.then71
  ret void, !dbg !13089
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @xlgmac_config_mmc(%struct.xlgmac_pdata* %pdata) #0 !dbg !13090 {
entry:
  %pdata.addr = alloca %struct.xlgmac_pdata*, align 8
  %regval = alloca i32, align 4
  %_var = alloca i32, align 4
  %_pos = alloca i32, align 4
  %_len = alloca i32, align 4
  %_val = alloca i32, align 4
  %tmp = alloca i32, align 4
  %_var24 = alloca i32, align 4
  %_pos25 = alloca i32, align 4
  %_len26 = alloca i32, align 4
  %_val27 = alloca i32, align 4
  %tmp43 = alloca i32, align 4
  store %struct.xlgmac_pdata* %pdata, %struct.xlgmac_pdata** %pdata.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xlgmac_pdata** %pdata.addr, metadata !13091, metadata !DIExpression()), !dbg !13092
  call void @llvm.dbg.declare(metadata i32* %regval, metadata !13093, metadata !DIExpression()), !dbg !13094
  %0 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !13095
  %mac_regs = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %0, i32 0, i32 6, !dbg !13096
  %1 = load i8*, i8** %mac_regs, align 8, !dbg !13096
  %add.ptr = getelementptr i8, i8* %1, i64 2048, !dbg !13097
  %call = call i32 @readl(i8* %add.ptr) #7, !dbg !13098
  store i32 %call, i32* %regval, align 4, !dbg !13099
  call void @llvm.dbg.declare(metadata i32* %_var, metadata !13100, metadata !DIExpression()), !dbg !13102
  %2 = load i32, i32* %regval, align 4, !dbg !13102
  store i32 %2, i32* %_var, align 4, !dbg !13102
  call void @llvm.dbg.declare(metadata i32* %_pos, metadata !13103, metadata !DIExpression()), !dbg !13102
  store i32 2, i32* %_pos, align 4, !dbg !13102
  call void @llvm.dbg.declare(metadata i32* %_len, metadata !13104, metadata !DIExpression()), !dbg !13102
  store i32 1, i32* %_len, align 4, !dbg !13102
  call void @llvm.dbg.declare(metadata i32* %_val, metadata !13105, metadata !DIExpression()), !dbg !13102
  store i32 1, i32* %_val, align 4, !dbg !13102
  %3 = load i32, i32* %_val, align 4, !dbg !13102
  %4 = load i32, i32* %_pos, align 4, !dbg !13102
  %shl = shl i32 %3, %4, !dbg !13102
  %conv = sext i32 %shl to i64, !dbg !13102
  %5 = load i32, i32* %_pos, align 4, !dbg !13102
  %sh_prom = zext i32 %5 to i64, !dbg !13102
  %shl1 = shl i64 1, %sh_prom, !dbg !13102
  %sub = sub i64 -1, %shl1, !dbg !13102
  %add = add i64 %sub, 1, !dbg !13102
  %6 = load i32, i32* %_pos, align 4, !dbg !13102
  %7 = load i32, i32* %_len, align 4, !dbg !13102
  %add2 = add i32 %6, %7, !dbg !13102
  %sub3 = sub i32 %add2, 1, !dbg !13102
  %sub4 = sub i32 63, %sub3, !dbg !13102
  %sh_prom5 = zext i32 %sub4 to i64, !dbg !13102
  %shr = lshr i64 -1, %sh_prom5, !dbg !13102
  %and = and i64 %add, %shr, !dbg !13102
  %add6 = add i64 0, %and, !dbg !13102
  %and7 = and i64 %conv, %add6, !dbg !13102
  %conv8 = trunc i64 %and7 to i32, !dbg !13102
  store i32 %conv8, i32* %_val, align 4, !dbg !13102
  %8 = load i32, i32* %_var, align 4, !dbg !13102
  %conv9 = zext i32 %8 to i64, !dbg !13102
  %9 = load i32, i32* %_pos, align 4, !dbg !13102
  %sh_prom10 = zext i32 %9 to i64, !dbg !13102
  %shl11 = shl i64 1, %sh_prom10, !dbg !13102
  %sub12 = sub i64 -1, %shl11, !dbg !13102
  %add13 = add i64 %sub12, 1, !dbg !13102
  %10 = load i32, i32* %_pos, align 4, !dbg !13102
  %11 = load i32, i32* %_len, align 4, !dbg !13102
  %add14 = add i32 %10, %11, !dbg !13102
  %sub15 = sub i32 %add14, 1, !dbg !13102
  %sub16 = sub i32 63, %sub15, !dbg !13102
  %sh_prom17 = zext i32 %sub16 to i64, !dbg !13102
  %shr18 = lshr i64 -1, %sh_prom17, !dbg !13102
  %and19 = and i64 %add13, %shr18, !dbg !13102
  %add20 = add i64 0, %and19, !dbg !13102
  %neg = xor i64 %add20, -1, !dbg !13102
  %and21 = and i64 %conv9, %neg, !dbg !13102
  %12 = load i32, i32* %_val, align 4, !dbg !13102
  %conv22 = sext i32 %12 to i64, !dbg !13102
  %or = or i64 %and21, %conv22, !dbg !13102
  %conv23 = trunc i64 %or to i32, !dbg !13102
  store i32 %conv23, i32* %_var, align 4, !dbg !13102
  store i32 %conv23, i32* %tmp, align 4, !dbg !13102
  %13 = load i32, i32* %tmp, align 4, !dbg !13102
  store i32 %13, i32* %regval, align 4, !dbg !13106
  call void @llvm.dbg.declare(metadata i32* %_var24, metadata !13107, metadata !DIExpression()), !dbg !13109
  %14 = load i32, i32* %regval, align 4, !dbg !13109
  store i32 %14, i32* %_var24, align 4, !dbg !13109
  call void @llvm.dbg.declare(metadata i32* %_pos25, metadata !13110, metadata !DIExpression()), !dbg !13109
  store i32 0, i32* %_pos25, align 4, !dbg !13109
  call void @llvm.dbg.declare(metadata i32* %_len26, metadata !13111, metadata !DIExpression()), !dbg !13109
  store i32 1, i32* %_len26, align 4, !dbg !13109
  call void @llvm.dbg.declare(metadata i32* %_val27, metadata !13112, metadata !DIExpression()), !dbg !13109
  store i32 1, i32* %_val27, align 4, !dbg !13109
  %15 = load i32, i32* %_val27, align 4, !dbg !13109
  %16 = load i32, i32* %_pos25, align 4, !dbg !13109
  %shl28 = shl i32 %15, %16, !dbg !13109
  %conv29 = sext i32 %shl28 to i64, !dbg !13109
  %17 = load i32, i32* %_pos25, align 4, !dbg !13109
  %sh_prom30 = zext i32 %17 to i64, !dbg !13109
  %shl31 = shl i64 1, %sh_prom30, !dbg !13109
  %sub32 = sub i64 -1, %shl31, !dbg !13109
  %add33 = add i64 %sub32, 1, !dbg !13109
  %18 = load i32, i32* %_pos25, align 4, !dbg !13109
  %19 = load i32, i32* %_len26, align 4, !dbg !13109
  %add34 = add i32 %18, %19, !dbg !13109
  %sub35 = sub i32 %add34, 1, !dbg !13109
  %sub36 = sub i32 63, %sub35, !dbg !13109
  %sh_prom37 = zext i32 %sub36 to i64, !dbg !13109
  %shr38 = lshr i64 -1, %sh_prom37, !dbg !13109
  %and39 = and i64 %add33, %shr38, !dbg !13109
  %add40 = add i64 0, %and39, !dbg !13109
  %and41 = and i64 %conv29, %add40, !dbg !13109
  %conv42 = trunc i64 %and41 to i32, !dbg !13109
  store i32 %conv42, i32* %_val27, align 4, !dbg !13109
  %20 = load i32, i32* %_var24, align 4, !dbg !13109
  %conv44 = zext i32 %20 to i64, !dbg !13109
  %21 = load i32, i32* %_pos25, align 4, !dbg !13109
  %sh_prom45 = zext i32 %21 to i64, !dbg !13109
  %shl46 = shl i64 1, %sh_prom45, !dbg !13109
  %sub47 = sub i64 -1, %shl46, !dbg !13109
  %add48 = add i64 %sub47, 1, !dbg !13109
  %22 = load i32, i32* %_pos25, align 4, !dbg !13109
  %23 = load i32, i32* %_len26, align 4, !dbg !13109
  %add49 = add i32 %22, %23, !dbg !13109
  %sub50 = sub i32 %add49, 1, !dbg !13109
  %sub51 = sub i32 63, %sub50, !dbg !13109
  %sh_prom52 = zext i32 %sub51 to i64, !dbg !13109
  %shr53 = lshr i64 -1, %sh_prom52, !dbg !13109
  %and54 = and i64 %add48, %shr53, !dbg !13109
  %add55 = add i64 0, %and54, !dbg !13109
  %neg56 = xor i64 %add55, -1, !dbg !13109
  %and57 = and i64 %conv44, %neg56, !dbg !13109
  %24 = load i32, i32* %_val27, align 4, !dbg !13109
  %conv58 = sext i32 %24 to i64, !dbg !13109
  %or59 = or i64 %and57, %conv58, !dbg !13109
  %conv60 = trunc i64 %or59 to i32, !dbg !13109
  store i32 %conv60, i32* %_var24, align 4, !dbg !13109
  store i32 %conv60, i32* %tmp43, align 4, !dbg !13109
  %25 = load i32, i32* %tmp43, align 4, !dbg !13109
  store i32 %25, i32* %regval, align 4, !dbg !13113
  %26 = load i32, i32* %regval, align 4, !dbg !13114
  %27 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !13115
  %mac_regs61 = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %27, i32 0, i32 6, !dbg !13116
  %28 = load i8*, i8** %mac_regs61, align 8, !dbg !13116
  %add.ptr62 = getelementptr i8, i8* %28, i64 2048, !dbg !13117
  call void @writel(i32 %26, i8* %add.ptr62) #7, !dbg !13118
  ret void, !dbg !13119
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @xlgmac_enable_mac_interrupts(%struct.xlgmac_pdata* %pdata) #0 !dbg !13120 {
entry:
  %pdata.addr = alloca %struct.xlgmac_pdata*, align 8
  %mac_ier = alloca i32, align 4
  %regval = alloca i32, align 4
  %_var = alloca i32, align 4
  %_pos = alloca i32, align 4
  %_len = alloca i32, align 4
  %_val = alloca i32, align 4
  %tmp = alloca i32, align 4
  %_var26 = alloca i32, align 4
  %_pos27 = alloca i32, align 4
  %_len28 = alloca i32, align 4
  %_val29 = alloca i32, align 4
  %tmp45 = alloca i32, align 4
  %_var68 = alloca i32, align 4
  %_pos69 = alloca i32, align 4
  %_len70 = alloca i32, align 4
  %_val71 = alloca i32, align 4
  %tmp87 = alloca i32, align 4
  store %struct.xlgmac_pdata* %pdata, %struct.xlgmac_pdata** %pdata.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xlgmac_pdata** %pdata.addr, metadata !13121, metadata !DIExpression()), !dbg !13122
  call void @llvm.dbg.declare(metadata i32* %mac_ier, metadata !13123, metadata !DIExpression()), !dbg !13124
  store i32 0, i32* %mac_ier, align 4, !dbg !13124
  call void @llvm.dbg.declare(metadata i32* %regval, metadata !13125, metadata !DIExpression()), !dbg !13126
  call void @llvm.dbg.declare(metadata i32* %_var, metadata !13127, metadata !DIExpression()), !dbg !13129
  %0 = load i32, i32* %mac_ier, align 4, !dbg !13129
  store i32 %0, i32* %_var, align 4, !dbg !13129
  call void @llvm.dbg.declare(metadata i32* %_pos, metadata !13130, metadata !DIExpression()), !dbg !13129
  store i32 12, i32* %_pos, align 4, !dbg !13129
  call void @llvm.dbg.declare(metadata i32* %_len, metadata !13131, metadata !DIExpression()), !dbg !13129
  store i32 1, i32* %_len, align 4, !dbg !13129
  call void @llvm.dbg.declare(metadata i32* %_val, metadata !13132, metadata !DIExpression()), !dbg !13129
  store i32 1, i32* %_val, align 4, !dbg !13129
  %1 = load i32, i32* %_val, align 4, !dbg !13129
  %2 = load i32, i32* %_pos, align 4, !dbg !13129
  %shl = shl i32 %1, %2, !dbg !13129
  %conv = sext i32 %shl to i64, !dbg !13129
  %3 = load i32, i32* %_pos, align 4, !dbg !13129
  %sh_prom = zext i32 %3 to i64, !dbg !13129
  %shl1 = shl i64 1, %sh_prom, !dbg !13129
  %sub = sub i64 -1, %shl1, !dbg !13129
  %add = add i64 %sub, 1, !dbg !13129
  %4 = load i32, i32* %_pos, align 4, !dbg !13129
  %5 = load i32, i32* %_len, align 4, !dbg !13129
  %add2 = add i32 %4, %5, !dbg !13129
  %sub3 = sub i32 %add2, 1, !dbg !13129
  %sub4 = sub i32 63, %sub3, !dbg !13129
  %sh_prom5 = zext i32 %sub4 to i64, !dbg !13129
  %shr = lshr i64 -1, %sh_prom5, !dbg !13129
  %and = and i64 %add, %shr, !dbg !13129
  %add6 = add i64 0, %and, !dbg !13129
  %and7 = and i64 %conv, %add6, !dbg !13129
  %conv8 = trunc i64 %and7 to i32, !dbg !13129
  store i32 %conv8, i32* %_val, align 4, !dbg !13129
  %6 = load i32, i32* %_var, align 4, !dbg !13129
  %conv9 = zext i32 %6 to i64, !dbg !13129
  %7 = load i32, i32* %_pos, align 4, !dbg !13129
  %sh_prom10 = zext i32 %7 to i64, !dbg !13129
  %shl11 = shl i64 1, %sh_prom10, !dbg !13129
  %sub12 = sub i64 -1, %shl11, !dbg !13129
  %add13 = add i64 %sub12, 1, !dbg !13129
  %8 = load i32, i32* %_pos, align 4, !dbg !13129
  %9 = load i32, i32* %_len, align 4, !dbg !13129
  %add14 = add i32 %8, %9, !dbg !13129
  %sub15 = sub i32 %add14, 1, !dbg !13129
  %sub16 = sub i32 63, %sub15, !dbg !13129
  %sh_prom17 = zext i32 %sub16 to i64, !dbg !13129
  %shr18 = lshr i64 -1, %sh_prom17, !dbg !13129
  %and19 = and i64 %add13, %shr18, !dbg !13129
  %add20 = add i64 0, %and19, !dbg !13129
  %neg = xor i64 %add20, -1, !dbg !13129
  %and21 = and i64 %conv9, %neg, !dbg !13129
  %10 = load i32, i32* %_val, align 4, !dbg !13129
  %conv22 = sext i32 %10 to i64, !dbg !13129
  %or = or i64 %and21, %conv22, !dbg !13129
  %conv23 = trunc i64 %or to i32, !dbg !13129
  store i32 %conv23, i32* %_var, align 4, !dbg !13129
  store i32 %conv23, i32* %tmp, align 4, !dbg !13129
  %11 = load i32, i32* %tmp, align 4, !dbg !13129
  store i32 %11, i32* %mac_ier, align 4, !dbg !13133
  %12 = load i32, i32* %mac_ier, align 4, !dbg !13134
  %13 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !13135
  %mac_regs = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %13, i32 0, i32 6, !dbg !13136
  %14 = load i8*, i8** %mac_regs, align 8, !dbg !13136
  %add.ptr = getelementptr i8, i8* %14, i64 180, !dbg !13137
  call void @writel(i32 %12, i8* %add.ptr) #7, !dbg !13138
  %15 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !13139
  %mac_regs24 = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %15, i32 0, i32 6, !dbg !13140
  %16 = load i8*, i8** %mac_regs24, align 8, !dbg !13140
  %add.ptr25 = getelementptr i8, i8* %16, i64 2060, !dbg !13141
  %call = call i32 @readl(i8* %add.ptr25) #7, !dbg !13142
  store i32 %call, i32* %regval, align 4, !dbg !13143
  call void @llvm.dbg.declare(metadata i32* %_var26, metadata !13144, metadata !DIExpression()), !dbg !13146
  %17 = load i32, i32* %regval, align 4, !dbg !13146
  store i32 %17, i32* %_var26, align 4, !dbg !13146
  call void @llvm.dbg.declare(metadata i32* %_pos27, metadata !13147, metadata !DIExpression()), !dbg !13146
  store i32 0, i32* %_pos27, align 4, !dbg !13146
  call void @llvm.dbg.declare(metadata i32* %_len28, metadata !13148, metadata !DIExpression()), !dbg !13146
  store i32 23, i32* %_len28, align 4, !dbg !13146
  call void @llvm.dbg.declare(metadata i32* %_val29, metadata !13149, metadata !DIExpression()), !dbg !13146
  store i32 -1, i32* %_val29, align 4, !dbg !13146
  %18 = load i32, i32* %_val29, align 4, !dbg !13146
  %19 = load i32, i32* %_pos27, align 4, !dbg !13146
  %shl30 = shl i32 %18, %19, !dbg !13146
  %conv31 = zext i32 %shl30 to i64, !dbg !13146
  %20 = load i32, i32* %_pos27, align 4, !dbg !13146
  %sh_prom32 = zext i32 %20 to i64, !dbg !13146
  %shl33 = shl i64 1, %sh_prom32, !dbg !13146
  %sub34 = sub i64 -1, %shl33, !dbg !13146
  %add35 = add i64 %sub34, 1, !dbg !13146
  %21 = load i32, i32* %_pos27, align 4, !dbg !13146
  %22 = load i32, i32* %_len28, align 4, !dbg !13146
  %add36 = add i32 %21, %22, !dbg !13146
  %sub37 = sub i32 %add36, 1, !dbg !13146
  %sub38 = sub i32 63, %sub37, !dbg !13146
  %sh_prom39 = zext i32 %sub38 to i64, !dbg !13146
  %shr40 = lshr i64 -1, %sh_prom39, !dbg !13146
  %and41 = and i64 %add35, %shr40, !dbg !13146
  %add42 = add i64 0, %and41, !dbg !13146
  %and43 = and i64 %conv31, %add42, !dbg !13146
  %conv44 = trunc i64 %and43 to i32, !dbg !13146
  store i32 %conv44, i32* %_val29, align 4, !dbg !13146
  %23 = load i32, i32* %_var26, align 4, !dbg !13146
  %conv46 = zext i32 %23 to i64, !dbg !13146
  %24 = load i32, i32* %_pos27, align 4, !dbg !13146
  %sh_prom47 = zext i32 %24 to i64, !dbg !13146
  %shl48 = shl i64 1, %sh_prom47, !dbg !13146
  %sub49 = sub i64 -1, %shl48, !dbg !13146
  %add50 = add i64 %sub49, 1, !dbg !13146
  %25 = load i32, i32* %_pos27, align 4, !dbg !13146
  %26 = load i32, i32* %_len28, align 4, !dbg !13146
  %add51 = add i32 %25, %26, !dbg !13146
  %sub52 = sub i32 %add51, 1, !dbg !13146
  %sub53 = sub i32 63, %sub52, !dbg !13146
  %sh_prom54 = zext i32 %sub53 to i64, !dbg !13146
  %shr55 = lshr i64 -1, %sh_prom54, !dbg !13146
  %and56 = and i64 %add50, %shr55, !dbg !13146
  %add57 = add i64 0, %and56, !dbg !13146
  %neg58 = xor i64 %add57, -1, !dbg !13146
  %and59 = and i64 %conv46, %neg58, !dbg !13146
  %27 = load i32, i32* %_val29, align 4, !dbg !13146
  %conv60 = zext i32 %27 to i64, !dbg !13146
  %or61 = or i64 %and59, %conv60, !dbg !13146
  %conv62 = trunc i64 %or61 to i32, !dbg !13146
  store i32 %conv62, i32* %_var26, align 4, !dbg !13146
  store i32 %conv62, i32* %tmp45, align 4, !dbg !13146
  %28 = load i32, i32* %tmp45, align 4, !dbg !13146
  store i32 %28, i32* %regval, align 4, !dbg !13150
  %29 = load i32, i32* %regval, align 4, !dbg !13151
  %30 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !13152
  %mac_regs63 = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %30, i32 0, i32 6, !dbg !13153
  %31 = load i8*, i8** %mac_regs63, align 8, !dbg !13153
  %add.ptr64 = getelementptr i8, i8* %31, i64 2060, !dbg !13154
  call void @writel(i32 %29, i8* %add.ptr64) #7, !dbg !13155
  %32 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !13156
  %mac_regs65 = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %32, i32 0, i32 6, !dbg !13157
  %33 = load i8*, i8** %mac_regs65, align 8, !dbg !13157
  %add.ptr66 = getelementptr i8, i8* %33, i64 2064, !dbg !13158
  %call67 = call i32 @readl(i8* %add.ptr66) #7, !dbg !13159
  store i32 %call67, i32* %regval, align 4, !dbg !13160
  call void @llvm.dbg.declare(metadata i32* %_var68, metadata !13161, metadata !DIExpression()), !dbg !13163
  %34 = load i32, i32* %regval, align 4, !dbg !13163
  store i32 %34, i32* %_var68, align 4, !dbg !13163
  call void @llvm.dbg.declare(metadata i32* %_pos69, metadata !13164, metadata !DIExpression()), !dbg !13163
  store i32 0, i32* %_pos69, align 4, !dbg !13163
  call void @llvm.dbg.declare(metadata i32* %_len70, metadata !13165, metadata !DIExpression()), !dbg !13163
  store i32 18, i32* %_len70, align 4, !dbg !13163
  call void @llvm.dbg.declare(metadata i32* %_val71, metadata !13166, metadata !DIExpression()), !dbg !13163
  store i32 -1, i32* %_val71, align 4, !dbg !13163
  %35 = load i32, i32* %_val71, align 4, !dbg !13163
  %36 = load i32, i32* %_pos69, align 4, !dbg !13163
  %shl72 = shl i32 %35, %36, !dbg !13163
  %conv73 = zext i32 %shl72 to i64, !dbg !13163
  %37 = load i32, i32* %_pos69, align 4, !dbg !13163
  %sh_prom74 = zext i32 %37 to i64, !dbg !13163
  %shl75 = shl i64 1, %sh_prom74, !dbg !13163
  %sub76 = sub i64 -1, %shl75, !dbg !13163
  %add77 = add i64 %sub76, 1, !dbg !13163
  %38 = load i32, i32* %_pos69, align 4, !dbg !13163
  %39 = load i32, i32* %_len70, align 4, !dbg !13163
  %add78 = add i32 %38, %39, !dbg !13163
  %sub79 = sub i32 %add78, 1, !dbg !13163
  %sub80 = sub i32 63, %sub79, !dbg !13163
  %sh_prom81 = zext i32 %sub80 to i64, !dbg !13163
  %shr82 = lshr i64 -1, %sh_prom81, !dbg !13163
  %and83 = and i64 %add77, %shr82, !dbg !13163
  %add84 = add i64 0, %and83, !dbg !13163
  %and85 = and i64 %conv73, %add84, !dbg !13163
  %conv86 = trunc i64 %and85 to i32, !dbg !13163
  store i32 %conv86, i32* %_val71, align 4, !dbg !13163
  %40 = load i32, i32* %_var68, align 4, !dbg !13163
  %conv88 = zext i32 %40 to i64, !dbg !13163
  %41 = load i32, i32* %_pos69, align 4, !dbg !13163
  %sh_prom89 = zext i32 %41 to i64, !dbg !13163
  %shl90 = shl i64 1, %sh_prom89, !dbg !13163
  %sub91 = sub i64 -1, %shl90, !dbg !13163
  %add92 = add i64 %sub91, 1, !dbg !13163
  %42 = load i32, i32* %_pos69, align 4, !dbg !13163
  %43 = load i32, i32* %_len70, align 4, !dbg !13163
  %add93 = add i32 %42, %43, !dbg !13163
  %sub94 = sub i32 %add93, 1, !dbg !13163
  %sub95 = sub i32 63, %sub94, !dbg !13163
  %sh_prom96 = zext i32 %sub95 to i64, !dbg !13163
  %shr97 = lshr i64 -1, %sh_prom96, !dbg !13163
  %and98 = and i64 %add92, %shr97, !dbg !13163
  %add99 = add i64 0, %and98, !dbg !13163
  %neg100 = xor i64 %add99, -1, !dbg !13163
  %and101 = and i64 %conv88, %neg100, !dbg !13163
  %44 = load i32, i32* %_val71, align 4, !dbg !13163
  %conv102 = zext i32 %44 to i64, !dbg !13163
  %or103 = or i64 %and101, %conv102, !dbg !13163
  %conv104 = trunc i64 %or103 to i32, !dbg !13163
  store i32 %conv104, i32* %_var68, align 4, !dbg !13163
  store i32 %conv104, i32* %tmp87, align 4, !dbg !13163
  %45 = load i32, i32* %tmp87, align 4, !dbg !13163
  store i32 %45, i32* %regval, align 4, !dbg !13167
  %46 = load i32, i32* %regval, align 4, !dbg !13168
  %47 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !13169
  %mac_regs105 = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %47, i32 0, i32 6, !dbg !13170
  %48 = load i8*, i8** %mac_regs105, align 8, !dbg !13170
  %add.ptr106 = getelementptr i8, i8* %48, i64 2064, !dbg !13171
  call void @writel(i32 %46, i8* %add.ptr106) #7, !dbg !13172
  ret void, !dbg !13173
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @readl(i8* %addr) #0 !dbg !13174 {
entry:
  %addr.addr = alloca i8*, align 8
  %ret = alloca i32, align 4
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !13181, metadata !DIExpression()), !dbg !13182
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !13183, metadata !DIExpression()), !dbg !13182
  %0 = load i8*, i8** %addr.addr, align 8, !dbg !13182
  %1 = bitcast i8* %0 to i32*, !dbg !13182
  %2 = call i32 asm sideeffect "movl $1,$0", "=r,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i32* %1) #8, !dbg !13182, !srcloc !13184
  store i32 %2, i32* %ret, align 4, !dbg !13182
  %3 = load i32, i32* %ret, align 4, !dbg !13182
  ret i32 %3, !dbg !13182
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @writel(i32 %val, i8* %addr) #0 !dbg !13185 {
entry:
  %val.addr = alloca i32, align 4
  %addr.addr = alloca i8*, align 8
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !13189, metadata !DIExpression()), !dbg !13190
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !13191, metadata !DIExpression()), !dbg !13190
  %0 = load i32, i32* %val.addr, align 4, !dbg !13190
  %1 = load i8*, i8** %addr.addr, align 8, !dbg !13190
  %2 = bitcast i8* %1 to i32*, !dbg !13190
  call void asm sideeffect "movl $0,$1", "r,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i32 %0, i32* %2) #8, !dbg !13190, !srcloc !13192
  ret void, !dbg !13190
}

; Function Attrs: noredzone
declare dso_local void @usleep_range(i64, i64) #2

; Function Attrs: cold noredzone
declare dso_local void @netdev_err(%struct.net_device*, i8*, ...) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @xlgmac_calculate_per_queue_fifo(i32 %fifo_size, i32 %queue_count) #0 !dbg !13193 {
entry:
  %fifo_size.addr = alloca i32, align 4
  %queue_count.addr = alloca i32, align 4
  %q_fifo_size = alloca i32, align 4
  %p_fifo = alloca i32, align 4
  %__UNIQUE_ID___x336 = alloca i32, align 4
  %__UNIQUE_ID___y337 = alloca i32, align 4
  %tmp = alloca i32, align 4
  store i32 %fifo_size, i32* %fifo_size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fifo_size.addr, metadata !13196, metadata !DIExpression()), !dbg !13197
  store i32 %queue_count, i32* %queue_count.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %queue_count.addr, metadata !13198, metadata !DIExpression()), !dbg !13199
  call void @llvm.dbg.declare(metadata i32* %q_fifo_size, metadata !13200, metadata !DIExpression()), !dbg !13201
  call void @llvm.dbg.declare(metadata i32* %p_fifo, metadata !13202, metadata !DIExpression()), !dbg !13203
  %0 = load i32, i32* %fifo_size.addr, align 4, !dbg !13204
  %add = add i32 %0, 7, !dbg !13205
  %shl = shl i32 1, %add, !dbg !13206
  store i32 %shl, i32* %q_fifo_size, align 4, !dbg !13207
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___x336, metadata !13208, metadata !DIExpression()), !dbg !13210
  store i32 81920, i32* %__UNIQUE_ID___x336, align 4, !dbg !13210
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___y337, metadata !13211, metadata !DIExpression()), !dbg !13210
  %1 = load i32, i32* %q_fifo_size, align 4, !dbg !13210
  store i32 %1, i32* %__UNIQUE_ID___y337, align 4, !dbg !13210
  %2 = load i32, i32* %__UNIQUE_ID___x336, align 4, !dbg !13210
  %3 = load i32, i32* %__UNIQUE_ID___y337, align 4, !dbg !13210
  %cmp = icmp ult i32 %2, %3, !dbg !13210
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !13210

cond.true:                                        ; preds = %entry
  %4 = load i32, i32* %__UNIQUE_ID___x336, align 4, !dbg !13210
  br label %cond.end, !dbg !13210

cond.false:                                       ; preds = %entry
  %5 = load i32, i32* %__UNIQUE_ID___y337, align 4, !dbg !13210
  br label %cond.end, !dbg !13210

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %4, %cond.true ], [ %5, %cond.false ], !dbg !13210
  store i32 %cond, i32* %tmp, align 4, !dbg !13210
  %6 = load i32, i32* %tmp, align 4, !dbg !13210
  store i32 %6, i32* %q_fifo_size, align 4, !dbg !13212
  %7 = load i32, i32* %q_fifo_size, align 4, !dbg !13213
  %8 = load i32, i32* %queue_count.addr, align 4, !dbg !13214
  %div = udiv i32 %7, %8, !dbg !13215
  store i32 %div, i32* %q_fifo_size, align 4, !dbg !13216
  %9 = load i32, i32* %q_fifo_size, align 4, !dbg !13217
  %div1 = udiv i32 %9, 256, !dbg !13218
  store i32 %div1, i32* %p_fifo, align 4, !dbg !13219
  %10 = load i32, i32* %p_fifo, align 4, !dbg !13220
  %tobool = icmp ne i32 %10, 0, !dbg !13220
  br i1 %tobool, label %if.then, label %if.end, !dbg !13222

if.then:                                          ; preds = %cond.end
  %11 = load i32, i32* %p_fifo, align 4, !dbg !13223
  %dec = add i32 %11, -1, !dbg !13223
  store i32 %dec, i32* %p_fifo, align 4, !dbg !13223
  br label %if.end, !dbg !13224

if.end:                                           ; preds = %if.then, %cond.end
  %12 = load i32, i32* %p_fifo, align 4, !dbg !13225
  ret i32 %12, !dbg !13226
}

; Function Attrs: cold noredzone
declare dso_local void @netdev_info(%struct.net_device*, i8*, ...) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @xlgmac_prepare_tx_stop(%struct.xlgmac_pdata* %pdata, %struct.xlgmac_channel* %channel) #0 !dbg !13227 {
entry:
  %pdata.addr = alloca %struct.xlgmac_pdata*, align 8
  %channel.addr = alloca %struct.xlgmac_channel*, align 8
  %tx_dsr = alloca i32, align 4
  %tx_pos = alloca i32, align 4
  %tx_qidx = alloca i32, align 4
  %tx_timeout = alloca i64, align 8
  %tx_status = alloca i32, align 4
  %_pos = alloca i32, align 4
  %_len = alloca i32, align 4
  %tmp = alloca i64, align 8
  store %struct.xlgmac_pdata* %pdata, %struct.xlgmac_pdata** %pdata.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xlgmac_pdata** %pdata.addr, metadata !13230, metadata !DIExpression()), !dbg !13231
  store %struct.xlgmac_channel* %channel, %struct.xlgmac_channel** %channel.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xlgmac_channel** %channel.addr, metadata !13232, metadata !DIExpression()), !dbg !13233
  call void @llvm.dbg.declare(metadata i32* %tx_dsr, metadata !13234, metadata !DIExpression()), !dbg !13235
  call void @llvm.dbg.declare(metadata i32* %tx_pos, metadata !13236, metadata !DIExpression()), !dbg !13237
  call void @llvm.dbg.declare(metadata i32* %tx_qidx, metadata !13238, metadata !DIExpression()), !dbg !13239
  call void @llvm.dbg.declare(metadata i64* %tx_timeout, metadata !13240, metadata !DIExpression()), !dbg !13241
  call void @llvm.dbg.declare(metadata i32* %tx_status, metadata !13242, metadata !DIExpression()), !dbg !13243
  %0 = load %struct.xlgmac_channel*, %struct.xlgmac_channel** %channel.addr, align 8, !dbg !13244
  %queue_index = getelementptr inbounds %struct.xlgmac_channel, %struct.xlgmac_channel* %0, i32 0, i32 2, !dbg !13246
  %1 = load i32, i32* %queue_index, align 8, !dbg !13246
  %cmp = icmp ult i32 %1, 3, !dbg !13247
  br i1 %cmp, label %if.then, label %if.else, !dbg !13248

if.then:                                          ; preds = %entry
  store i32 12320, i32* %tx_dsr, align 4, !dbg !13249
  %2 = load %struct.xlgmac_channel*, %struct.xlgmac_channel** %channel.addr, align 8, !dbg !13251
  %queue_index1 = getelementptr inbounds %struct.xlgmac_channel, %struct.xlgmac_channel* %2, i32 0, i32 2, !dbg !13252
  %3 = load i32, i32* %queue_index1, align 8, !dbg !13252
  %mul = mul i32 %3, 8, !dbg !13253
  %add = add i32 %mul, 12, !dbg !13254
  store i32 %add, i32* %tx_pos, align 4, !dbg !13255
  br label %if.end, !dbg !13256

if.else:                                          ; preds = %entry
  %4 = load %struct.xlgmac_channel*, %struct.xlgmac_channel** %channel.addr, align 8, !dbg !13257
  %queue_index2 = getelementptr inbounds %struct.xlgmac_channel, %struct.xlgmac_channel* %4, i32 0, i32 2, !dbg !13259
  %5 = load i32, i32* %queue_index2, align 8, !dbg !13259
  %sub = sub i32 %5, 3, !dbg !13260
  store i32 %sub, i32* %tx_qidx, align 4, !dbg !13261
  %6 = load i32, i32* %tx_qidx, align 4, !dbg !13262
  %div = udiv i32 %6, 4, !dbg !13263
  %mul3 = mul i32 %div, 4, !dbg !13264
  %add4 = add i32 12324, %mul3, !dbg !13265
  store i32 %add4, i32* %tx_dsr, align 4, !dbg !13266
  %7 = load i32, i32* %tx_qidx, align 4, !dbg !13267
  %rem = urem i32 %7, 4, !dbg !13268
  %mul5 = mul i32 %rem, 8, !dbg !13269
  %add6 = add i32 %mul5, 4, !dbg !13270
  store i32 %add6, i32* %tx_pos, align 4, !dbg !13271
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %8 = load volatile i64, i64* @jiffies, align 8, !dbg !13272
  %add7 = add i64 %8, 1250, !dbg !13273
  store i64 %add7, i64* %tx_timeout, align 8, !dbg !13274
  br label %while.cond, !dbg !13275

while.cond:                                       ; preds = %if.end26, %if.end
  %9 = load volatile i64, i64* @jiffies, align 8, !dbg !13276
  %10 = load i64, i64* %tx_timeout, align 8, !dbg !13276
  %sub8 = sub i64 %9, %10, !dbg !13276
  %cmp9 = icmp slt i64 %sub8, 0, !dbg !13276
  br i1 %cmp9, label %while.body, label %while.end, !dbg !13275

while.body:                                       ; preds = %while.cond
  %11 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !13277
  %mac_regs = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %11, i32 0, i32 6, !dbg !13279
  %12 = load i8*, i8** %mac_regs, align 8, !dbg !13279
  %13 = load i32, i32* %tx_dsr, align 4, !dbg !13280
  %idx.ext = zext i32 %13 to i64, !dbg !13281
  %add.ptr = getelementptr i8, i8* %12, i64 %idx.ext, !dbg !13281
  %call = call i32 @readl(i8* %add.ptr) #7, !dbg !13282
  store i32 %call, i32* %tx_status, align 4, !dbg !13283
  call void @llvm.dbg.declare(metadata i32* %_pos, metadata !13284, metadata !DIExpression()), !dbg !13286
  %14 = load i32, i32* %tx_pos, align 4, !dbg !13286
  store i32 %14, i32* %_pos, align 4, !dbg !13286
  call void @llvm.dbg.declare(metadata i32* %_len, metadata !13287, metadata !DIExpression()), !dbg !13286
  store i32 4, i32* %_len, align 4, !dbg !13286
  %15 = load i32, i32* %tx_status, align 4, !dbg !13286
  %conv = zext i32 %15 to i64, !dbg !13286
  %16 = load i32, i32* %_pos, align 4, !dbg !13286
  %sh_prom = zext i32 %16 to i64, !dbg !13286
  %shl = shl i64 1, %sh_prom, !dbg !13286
  %sub10 = sub i64 -1, %shl, !dbg !13286
  %add11 = add i64 %sub10, 1, !dbg !13286
  %17 = load i32, i32* %_pos, align 4, !dbg !13286
  %18 = load i32, i32* %_len, align 4, !dbg !13286
  %add12 = add i32 %17, %18, !dbg !13286
  %sub13 = sub i32 %add12, 1, !dbg !13286
  %sub14 = sub i32 63, %sub13, !dbg !13286
  %sh_prom15 = zext i32 %sub14 to i64, !dbg !13286
  %shr = lshr i64 -1, %sh_prom15, !dbg !13286
  %and = and i64 %add11, %shr, !dbg !13286
  %add16 = add i64 0, %and, !dbg !13286
  %and17 = and i64 %conv, %add16, !dbg !13286
  %19 = load i32, i32* %_pos, align 4, !dbg !13286
  %sh_prom18 = zext i32 %19 to i64, !dbg !13286
  %shr19 = lshr i64 %and17, %sh_prom18, !dbg !13286
  store i64 %shr19, i64* %tmp, align 8, !dbg !13286
  %20 = load i64, i64* %tmp, align 8, !dbg !13286
  %conv20 = trunc i64 %20 to i32, !dbg !13288
  store i32 %conv20, i32* %tx_status, align 4, !dbg !13289
  %21 = load i32, i32* %tx_status, align 4, !dbg !13290
  %cmp21 = icmp eq i32 %21, 0, !dbg !13292
  br i1 %cmp21, label %if.then25, label %lor.lhs.false, !dbg !13293

lor.lhs.false:                                    ; preds = %while.body
  %22 = load i32, i32* %tx_status, align 4, !dbg !13294
  %cmp23 = icmp eq i32 %22, 6, !dbg !13295
  br i1 %cmp23, label %if.then25, label %if.end26, !dbg !13296

if.then25:                                        ; preds = %lor.lhs.false, %while.body
  br label %while.end, !dbg !13297

if.end26:                                         ; preds = %lor.lhs.false
  call void @usleep_range(i64 500, i64 1000) #7, !dbg !13298
  br label %while.cond, !dbg !13275, !llvm.loop !13299

while.end:                                        ; preds = %if.then25, %while.cond
  %23 = load volatile i64, i64* @jiffies, align 8, !dbg !13301
  %24 = load i64, i64* %tx_timeout, align 8, !dbg !13301
  %sub27 = sub i64 %23, %24, !dbg !13301
  %cmp28 = icmp slt i64 %sub27, 0, !dbg !13301
  br i1 %cmp28, label %if.end32, label %if.then30, !dbg !13303

if.then30:                                        ; preds = %while.end
  %25 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !13304
  %netdev = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %25, i32 0, i32 0, !dbg !13305
  %26 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !13305
  %27 = load %struct.xlgmac_channel*, %struct.xlgmac_channel** %channel.addr, align 8, !dbg !13306
  %queue_index31 = getelementptr inbounds %struct.xlgmac_channel, %struct.xlgmac_channel* %27, i32 0, i32 2, !dbg !13307
  %28 = load i32, i32* %queue_index31, align 8, !dbg !13307
  call void (%struct.net_device*, i8*, ...) @netdev_info(%struct.net_device* %26, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.3, i64 0, i64 0), i32 %28) #10, !dbg !13308
  br label %if.end32, !dbg !13308

if.end32:                                         ; preds = %if.then30, %while.end
  ret void, !dbg !13309
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @xlgmac_prepare_rx_stop(%struct.xlgmac_pdata* %pdata, i32 %queue) #0 !dbg !13310 {
entry:
  %pdata.addr = alloca %struct.xlgmac_pdata*, align 8
  %queue.addr = alloca i32, align 4
  %rx_status = alloca i32, align 4
  %prxq = alloca i32, align 4
  %rxqsts = alloca i32, align 4
  %rx_timeout = alloca i64, align 8
  %_pos = alloca i32, align 4
  %_len = alloca i32, align 4
  %tmp = alloca i64, align 8
  %_pos14 = alloca i32, align 4
  %_len15 = alloca i32, align 4
  %tmp16 = alloca i64, align 8
  store %struct.xlgmac_pdata* %pdata, %struct.xlgmac_pdata** %pdata.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xlgmac_pdata** %pdata.addr, metadata !13313, metadata !DIExpression()), !dbg !13314
  store i32 %queue, i32* %queue.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %queue.addr, metadata !13315, metadata !DIExpression()), !dbg !13316
  call void @llvm.dbg.declare(metadata i32* %rx_status, metadata !13317, metadata !DIExpression()), !dbg !13318
  call void @llvm.dbg.declare(metadata i32* %prxq, metadata !13319, metadata !DIExpression()), !dbg !13320
  call void @llvm.dbg.declare(metadata i32* %rxqsts, metadata !13321, metadata !DIExpression()), !dbg !13322
  call void @llvm.dbg.declare(metadata i64* %rx_timeout, metadata !13323, metadata !DIExpression()), !dbg !13324
  %0 = load volatile i64, i64* @jiffies, align 8, !dbg !13325
  %add = add i64 %0, 1250, !dbg !13326
  store i64 %add, i64* %rx_timeout, align 8, !dbg !13327
  br label %while.cond, !dbg !13328

while.cond:                                       ; preds = %if.end, %entry
  %1 = load volatile i64, i64* @jiffies, align 8, !dbg !13329
  %2 = load i64, i64* %rx_timeout, align 8, !dbg !13329
  %sub = sub i64 %1, %2, !dbg !13329
  %cmp = icmp slt i64 %sub, 0, !dbg !13329
  br i1 %cmp, label %while.body, label %while.end, !dbg !13328

while.body:                                       ; preds = %while.cond
  %3 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !13330
  %mac_regs = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %3, i32 0, i32 6, !dbg !13330
  %4 = load i8*, i8** %mac_regs, align 8, !dbg !13330
  %add.ptr = getelementptr i8, i8* %4, i64 4352, !dbg !13330
  %5 = load i32, i32* %queue.addr, align 4, !dbg !13330
  %mul = mul i32 %5, 128, !dbg !13330
  %idx.ext = zext i32 %mul to i64, !dbg !13330
  %add.ptr1 = getelementptr i8, i8* %add.ptr, i64 %idx.ext, !dbg !13330
  %add.ptr2 = getelementptr i8, i8* %add.ptr1, i64 72, !dbg !13330
  %call = call i32 @readl(i8* %add.ptr2) #7, !dbg !13332
  store i32 %call, i32* %rx_status, align 4, !dbg !13333
  call void @llvm.dbg.declare(metadata i32* %_pos, metadata !13334, metadata !DIExpression()), !dbg !13336
  store i32 16, i32* %_pos, align 4, !dbg !13336
  call void @llvm.dbg.declare(metadata i32* %_len, metadata !13337, metadata !DIExpression()), !dbg !13336
  store i32 14, i32* %_len, align 4, !dbg !13336
  %6 = load i32, i32* %rx_status, align 4, !dbg !13336
  %conv = zext i32 %6 to i64, !dbg !13336
  %7 = load i32, i32* %_pos, align 4, !dbg !13336
  %sh_prom = zext i32 %7 to i64, !dbg !13336
  %shl = shl i64 1, %sh_prom, !dbg !13336
  %sub3 = sub i64 -1, %shl, !dbg !13336
  %add4 = add i64 %sub3, 1, !dbg !13336
  %8 = load i32, i32* %_pos, align 4, !dbg !13336
  %9 = load i32, i32* %_len, align 4, !dbg !13336
  %add5 = add i32 %8, %9, !dbg !13336
  %sub6 = sub i32 %add5, 1, !dbg !13336
  %sub7 = sub i32 63, %sub6, !dbg !13336
  %sh_prom8 = zext i32 %sub7 to i64, !dbg !13336
  %shr = lshr i64 -1, %sh_prom8, !dbg !13336
  %and = and i64 %add4, %shr, !dbg !13336
  %add9 = add i64 0, %and, !dbg !13336
  %and10 = and i64 %conv, %add9, !dbg !13336
  %10 = load i32, i32* %_pos, align 4, !dbg !13336
  %sh_prom11 = zext i32 %10 to i64, !dbg !13336
  %shr12 = lshr i64 %and10, %sh_prom11, !dbg !13336
  store i64 %shr12, i64* %tmp, align 8, !dbg !13336
  %11 = load i64, i64* %tmp, align 8, !dbg !13336
  %conv13 = trunc i64 %11 to i32, !dbg !13338
  store i32 %conv13, i32* %prxq, align 4, !dbg !13339
  call void @llvm.dbg.declare(metadata i32* %_pos14, metadata !13340, metadata !DIExpression()), !dbg !13342
  store i32 4, i32* %_pos14, align 4, !dbg !13342
  call void @llvm.dbg.declare(metadata i32* %_len15, metadata !13343, metadata !DIExpression()), !dbg !13342
  store i32 2, i32* %_len15, align 4, !dbg !13342
  %12 = load i32, i32* %rx_status, align 4, !dbg !13342
  %conv17 = zext i32 %12 to i64, !dbg !13342
  %13 = load i32, i32* %_pos14, align 4, !dbg !13342
  %sh_prom18 = zext i32 %13 to i64, !dbg !13342
  %shl19 = shl i64 1, %sh_prom18, !dbg !13342
  %sub20 = sub i64 -1, %shl19, !dbg !13342
  %add21 = add i64 %sub20, 1, !dbg !13342
  %14 = load i32, i32* %_pos14, align 4, !dbg !13342
  %15 = load i32, i32* %_len15, align 4, !dbg !13342
  %add22 = add i32 %14, %15, !dbg !13342
  %sub23 = sub i32 %add22, 1, !dbg !13342
  %sub24 = sub i32 63, %sub23, !dbg !13342
  %sh_prom25 = zext i32 %sub24 to i64, !dbg !13342
  %shr26 = lshr i64 -1, %sh_prom25, !dbg !13342
  %and27 = and i64 %add21, %shr26, !dbg !13342
  %add28 = add i64 0, %and27, !dbg !13342
  %and29 = and i64 %conv17, %add28, !dbg !13342
  %16 = load i32, i32* %_pos14, align 4, !dbg !13342
  %sh_prom30 = zext i32 %16 to i64, !dbg !13342
  %shr31 = lshr i64 %and29, %sh_prom30, !dbg !13342
  store i64 %shr31, i64* %tmp16, align 8, !dbg !13342
  %17 = load i64, i64* %tmp16, align 8, !dbg !13342
  %conv32 = trunc i64 %17 to i32, !dbg !13344
  store i32 %conv32, i32* %rxqsts, align 4, !dbg !13345
  %18 = load i32, i32* %prxq, align 4, !dbg !13346
  %cmp33 = icmp eq i32 %18, 0, !dbg !13348
  br i1 %cmp33, label %land.lhs.true, label %if.end, !dbg !13349

land.lhs.true:                                    ; preds = %while.body
  %19 = load i32, i32* %rxqsts, align 4, !dbg !13350
  %cmp35 = icmp eq i32 %19, 0, !dbg !13351
  br i1 %cmp35, label %if.then, label %if.end, !dbg !13352

if.then:                                          ; preds = %land.lhs.true
  br label %while.end, !dbg !13353

if.end:                                           ; preds = %land.lhs.true, %while.body
  call void @usleep_range(i64 500, i64 1000) #7, !dbg !13354
  br label %while.cond, !dbg !13328, !llvm.loop !13355

while.end:                                        ; preds = %if.then, %while.cond
  %20 = load volatile i64, i64* @jiffies, align 8, !dbg !13357
  %21 = load i64, i64* %rx_timeout, align 8, !dbg !13357
  %sub37 = sub i64 %20, %21, !dbg !13357
  %cmp38 = icmp slt i64 %sub37, 0, !dbg !13357
  br i1 %cmp38, label %if.end41, label %if.then40, !dbg !13359

if.then40:                                        ; preds = %while.end
  %22 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !13360
  %netdev = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %22, i32 0, i32 0, !dbg !13361
  %23 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !13361
  %24 = load i32, i32* %queue.addr, align 4, !dbg !13362
  call void (%struct.net_device*, i8*, ...) @netdev_info(%struct.net_device* %23, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.4, i64 0, i64 0), i32 %24) #10, !dbg !13363
  br label %if.end41, !dbg !13363

if.end41:                                         ; preds = %if.then40, %while.end
  ret void, !dbg !13364
}

; Function Attrs: noredzone
declare dso_local void @xlgmac_dump_tx_desc(%struct.xlgmac_pdata*, %struct.xlgmac_ring*, i32, i32, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @netdev_xmit_more() #0 !dbg !13365 {
entry:
  %tmp = alloca i8, align 1
  %pscr_ret__ = alloca i8, align 1
  %__vpp_verify = alloca i8*, align 8
  %pfo_val__ = alloca i8, align 1
  %tmp1 = alloca i8, align 1
  %tmp3 = alloca i8, align 1
  call void @__this_cpu_preempt_check(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5, i64 0, i64 0)) #7, !dbg !13366
  call void @llvm.dbg.declare(metadata i8* %pscr_ret__, metadata !13368, metadata !DIExpression()), !dbg !13370
  br label %do.body, !dbg !13370

do.body:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify, metadata !13371, metadata !DIExpression()), !dbg !13373
  store i8* null, i8** %__vpp_verify, align 8, !dbg !13373
  %0 = load i8*, i8** %__vpp_verify, align 8, !dbg !13373
  br label %do.end, !dbg !13373

do.end:                                           ; preds = %do.body
  call void @llvm.dbg.declare(metadata i8* %pfo_val__, metadata !13374, metadata !DIExpression()), !dbg !13376
  %1 = call i8 asm "movb $1, $0", "=q,*m,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds (%struct.softnet_data, %struct.softnet_data* @softnet_data, i32 0, i32 8, i32 1)) #11, !dbg !13376, !srcloc !13377
  store i8 %1, i8* %pfo_val__, align 1, !dbg !13376
  %2 = load i8, i8* %pfo_val__, align 1, !dbg !13376
  %conv = zext i8 %2 to i64, !dbg !13376
  %conv2 = trunc i64 %conv to i8, !dbg !13376
  store i8 %conv2, i8* %tmp1, align 1, !dbg !13376
  %3 = load i8, i8* %tmp1, align 1, !dbg !13376
  store i8 %3, i8* %pscr_ret__, align 1, !dbg !13370
  %4 = load i8, i8* %pscr_ret__, align 1, !dbg !13370
  store i8 %4, i8* %tmp3, align 1, !dbg !13370
  %5 = load i8, i8* %tmp3, align 1, !dbg !13370
  store i8 %5, i8* %tmp, align 1, !dbg !13366
  %6 = load i8, i8* %tmp, align 1, !dbg !13366
  %tobool = icmp ne i8 %6, 0, !dbg !13378
  ret i1 %tobool, !dbg !13379
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @netif_xmit_stopped(%struct.netdev_queue* %dev_queue) #0 !dbg !13380 {
entry:
  %dev_queue.addr = alloca %struct.netdev_queue*, align 8
  store %struct.netdev_queue* %dev_queue, %struct.netdev_queue** %dev_queue.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.netdev_queue** %dev_queue.addr, metadata !13385, metadata !DIExpression()), !dbg !13386
  %0 = load %struct.netdev_queue*, %struct.netdev_queue** %dev_queue.addr, align 8, !dbg !13387
  %state = getelementptr inbounds %struct.netdev_queue, %struct.netdev_queue* %0, i32 0, i32 10, !dbg !13388
  %1 = load i64, i64* %state, align 8, !dbg !13388
  %and = and i64 %1, 3, !dbg !13389
  %tobool = icmp ne i64 %and, 0, !dbg !13387
  ret i1 %tobool, !dbg !13390
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.netdev_queue* @netdev_get_tx_queue(%struct.net_device* %dev, i32 %index) #0 !dbg !13391 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %index.addr = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !13394, metadata !DIExpression()), !dbg !13395
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !13396, metadata !DIExpression()), !dbg !13397
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !13398
  %_tx = getelementptr inbounds %struct.net_device, %struct.net_device* %0, i32 0, i32 86, !dbg !13399
  %1 = load %struct.netdev_queue*, %struct.netdev_queue** %_tx, align 8, !dbg !13399
  %2 = load i32, i32* %index.addr, align 4, !dbg !13400
  %idxprom = zext i32 %2 to i64, !dbg !13398
  %arrayidx = getelementptr %struct.netdev_queue, %struct.netdev_queue* %1, i64 %idxprom, !dbg !13398
  ret %struct.netdev_queue* %arrayidx, !dbg !13401
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__this_cpu_preempt_check(i8* %op) #0 !dbg !13402 {
entry:
  %op.addr = alloca i8*, align 8
  store i8* %op, i8** %op.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %op.addr, metadata !13406, metadata !DIExpression()), !dbg !13407
  ret void, !dbg !13408
}

; Function Attrs: noredzone
declare dso_local void @xlgmac_dump_rx_desc(%struct.xlgmac_pdata*, %struct.xlgmac_ring*, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @xlgmac_get_rx_tstamp(%struct.xlgmac_pkt_info* %pkt_info, %struct.xlgmac_dma_desc* %dma_desc) #0 !dbg !13409 {
entry:
  %pkt_info.addr = alloca %struct.xlgmac_pkt_info*, align 8
  %dma_desc.addr = alloca %struct.xlgmac_dma_desc*, align 8
  %tsa = alloca i32, align 4
  %tsd = alloca i32, align 4
  %nsec = alloca i64, align 8
  %_pos = alloca i32, align 4
  %_len = alloca i32, align 4
  %_var = alloca i32, align 4
  %tmp = alloca i64, align 8
  %_pos10 = alloca i32, align 4
  %_len11 = alloca i32, align 4
  %_var12 = alloca i32, align 4
  %tmp14 = alloca i64, align 8
  %_var37 = alloca i32, align 4
  %_pos38 = alloca i32, align 4
  %_len39 = alloca i32, align 4
  %_val = alloca i32, align 4
  %tmp55 = alloca i32, align 4
  store %struct.xlgmac_pkt_info* %pkt_info, %struct.xlgmac_pkt_info** %pkt_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xlgmac_pkt_info** %pkt_info.addr, metadata !13412, metadata !DIExpression()), !dbg !13413
  store %struct.xlgmac_dma_desc* %dma_desc, %struct.xlgmac_dma_desc** %dma_desc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xlgmac_dma_desc** %dma_desc.addr, metadata !13414, metadata !DIExpression()), !dbg !13415
  call void @llvm.dbg.declare(metadata i32* %tsa, metadata !13416, metadata !DIExpression()), !dbg !13417
  call void @llvm.dbg.declare(metadata i32* %tsd, metadata !13418, metadata !DIExpression()), !dbg !13419
  call void @llvm.dbg.declare(metadata i64* %nsec, metadata !13420, metadata !DIExpression()), !dbg !13421
  call void @llvm.dbg.declare(metadata i32* %_pos, metadata !13422, metadata !DIExpression()), !dbg !13424
  store i32 4, i32* %_pos, align 4, !dbg !13424
  call void @llvm.dbg.declare(metadata i32* %_len, metadata !13425, metadata !DIExpression()), !dbg !13424
  store i32 1, i32* %_len, align 4, !dbg !13424
  call void @llvm.dbg.declare(metadata i32* %_var, metadata !13426, metadata !DIExpression()), !dbg !13424
  %0 = load %struct.xlgmac_dma_desc*, %struct.xlgmac_dma_desc** %dma_desc.addr, align 8, !dbg !13424
  %desc3 = getelementptr inbounds %struct.xlgmac_dma_desc, %struct.xlgmac_dma_desc* %0, i32 0, i32 3, !dbg !13424
  %1 = load i32, i32* %desc3, align 4, !dbg !13424
  store i32 %1, i32* %_var, align 4, !dbg !13424
  %2 = load i32, i32* %_var, align 4, !dbg !13424
  %conv = zext i32 %2 to i64, !dbg !13424
  %3 = load i32, i32* %_pos, align 4, !dbg !13424
  %sh_prom = zext i32 %3 to i64, !dbg !13424
  %shl = shl i64 1, %sh_prom, !dbg !13424
  %sub = sub i64 -1, %shl, !dbg !13424
  %add = add i64 %sub, 1, !dbg !13424
  %4 = load i32, i32* %_pos, align 4, !dbg !13424
  %5 = load i32, i32* %_len, align 4, !dbg !13424
  %add1 = add i32 %4, %5, !dbg !13424
  %sub2 = sub i32 %add1, 1, !dbg !13424
  %sub3 = sub i32 63, %sub2, !dbg !13424
  %sh_prom4 = zext i32 %sub3 to i64, !dbg !13424
  %shr = lshr i64 -1, %sh_prom4, !dbg !13424
  %and = and i64 %add, %shr, !dbg !13424
  %add5 = add i64 0, %and, !dbg !13424
  %and6 = and i64 %conv, %add5, !dbg !13424
  %6 = load i32, i32* %_pos, align 4, !dbg !13424
  %sh_prom7 = zext i32 %6 to i64, !dbg !13424
  %shr8 = lshr i64 %and6, %sh_prom7, !dbg !13424
  store i64 %shr8, i64* %tmp, align 8, !dbg !13424
  %7 = load i64, i64* %tmp, align 8, !dbg !13424
  %conv9 = trunc i64 %7 to i32, !dbg !13427
  store i32 %conv9, i32* %tsa, align 4, !dbg !13428
  call void @llvm.dbg.declare(metadata i32* %_pos10, metadata !13429, metadata !DIExpression()), !dbg !13431
  store i32 6, i32* %_pos10, align 4, !dbg !13431
  call void @llvm.dbg.declare(metadata i32* %_len11, metadata !13432, metadata !DIExpression()), !dbg !13431
  store i32 1, i32* %_len11, align 4, !dbg !13431
  call void @llvm.dbg.declare(metadata i32* %_var12, metadata !13433, metadata !DIExpression()), !dbg !13431
  %8 = load %struct.xlgmac_dma_desc*, %struct.xlgmac_dma_desc** %dma_desc.addr, align 8, !dbg !13431
  %desc313 = getelementptr inbounds %struct.xlgmac_dma_desc, %struct.xlgmac_dma_desc* %8, i32 0, i32 3, !dbg !13431
  %9 = load i32, i32* %desc313, align 4, !dbg !13431
  store i32 %9, i32* %_var12, align 4, !dbg !13431
  %10 = load i32, i32* %_var12, align 4, !dbg !13431
  %conv15 = zext i32 %10 to i64, !dbg !13431
  %11 = load i32, i32* %_pos10, align 4, !dbg !13431
  %sh_prom16 = zext i32 %11 to i64, !dbg !13431
  %shl17 = shl i64 1, %sh_prom16, !dbg !13431
  %sub18 = sub i64 -1, %shl17, !dbg !13431
  %add19 = add i64 %sub18, 1, !dbg !13431
  %12 = load i32, i32* %_pos10, align 4, !dbg !13431
  %13 = load i32, i32* %_len11, align 4, !dbg !13431
  %add20 = add i32 %12, %13, !dbg !13431
  %sub21 = sub i32 %add20, 1, !dbg !13431
  %sub22 = sub i32 63, %sub21, !dbg !13431
  %sh_prom23 = zext i32 %sub22 to i64, !dbg !13431
  %shr24 = lshr i64 -1, %sh_prom23, !dbg !13431
  %and25 = and i64 %add19, %shr24, !dbg !13431
  %add26 = add i64 0, %and25, !dbg !13431
  %and27 = and i64 %conv15, %add26, !dbg !13431
  %14 = load i32, i32* %_pos10, align 4, !dbg !13431
  %sh_prom28 = zext i32 %14 to i64, !dbg !13431
  %shr29 = lshr i64 %and27, %sh_prom28, !dbg !13431
  store i64 %shr29, i64* %tmp14, align 8, !dbg !13431
  %15 = load i64, i64* %tmp14, align 8, !dbg !13431
  %conv30 = trunc i64 %15 to i32, !dbg !13434
  store i32 %conv30, i32* %tsd, align 4, !dbg !13435
  %16 = load i32, i32* %tsa, align 4, !dbg !13436
  %tobool = icmp ne i32 %16, 0, !dbg !13436
  br i1 %tobool, label %land.lhs.true, label %if.end73, !dbg !13438

land.lhs.true:                                    ; preds = %entry
  %17 = load i32, i32* %tsd, align 4, !dbg !13439
  %tobool31 = icmp ne i32 %17, 0, !dbg !13439
  br i1 %tobool31, label %if.end73, label %if.then, !dbg !13440

if.then:                                          ; preds = %land.lhs.true
  %18 = load %struct.xlgmac_dma_desc*, %struct.xlgmac_dma_desc** %dma_desc.addr, align 8, !dbg !13441
  %desc1 = getelementptr inbounds %struct.xlgmac_dma_desc, %struct.xlgmac_dma_desc* %18, i32 0, i32 1, !dbg !13441
  %19 = load i32, i32* %desc1, align 4, !dbg !13441
  %conv32 = zext i32 %19 to i64, !dbg !13441
  store i64 %conv32, i64* %nsec, align 8, !dbg !13443
  %20 = load i64, i64* %nsec, align 8, !dbg !13444
  %shl33 = shl i64 %20, 32, !dbg !13444
  store i64 %shl33, i64* %nsec, align 8, !dbg !13444
  %21 = load %struct.xlgmac_dma_desc*, %struct.xlgmac_dma_desc** %dma_desc.addr, align 8, !dbg !13445
  %desc0 = getelementptr inbounds %struct.xlgmac_dma_desc, %struct.xlgmac_dma_desc* %21, i32 0, i32 0, !dbg !13445
  %22 = load i32, i32* %desc0, align 4, !dbg !13445
  %conv34 = zext i32 %22 to i64, !dbg !13445
  %23 = load i64, i64* %nsec, align 8, !dbg !13446
  %or = or i64 %23, %conv34, !dbg !13446
  store i64 %or, i64* %nsec, align 8, !dbg !13446
  %24 = load i64, i64* %nsec, align 8, !dbg !13447
  %cmp = icmp ne i64 %24, -1, !dbg !13449
  br i1 %cmp, label %if.then36, label %if.end, !dbg !13450

if.then36:                                        ; preds = %if.then
  %25 = load i64, i64* %nsec, align 8, !dbg !13451
  %26 = load %struct.xlgmac_pkt_info*, %struct.xlgmac_pkt_info** %pkt_info.addr, align 8, !dbg !13453
  %rx_tstamp = getelementptr inbounds %struct.xlgmac_pkt_info, %struct.xlgmac_pkt_info* %26, i32 0, i32 12, !dbg !13454
  store i64 %25, i64* %rx_tstamp, align 8, !dbg !13455
  call void @llvm.dbg.declare(metadata i32* %_var37, metadata !13456, metadata !DIExpression()), !dbg !13458
  %27 = load %struct.xlgmac_pkt_info*, %struct.xlgmac_pkt_info** %pkt_info.addr, align 8, !dbg !13458
  %attributes = getelementptr inbounds %struct.xlgmac_pkt_info, %struct.xlgmac_pkt_info* %27, i32 0, i32 1, !dbg !13458
  %28 = load i32, i32* %attributes, align 8, !dbg !13458
  store i32 %28, i32* %_var37, align 4, !dbg !13458
  call void @llvm.dbg.declare(metadata i32* %_pos38, metadata !13459, metadata !DIExpression()), !dbg !13458
  store i32 5, i32* %_pos38, align 4, !dbg !13458
  call void @llvm.dbg.declare(metadata i32* %_len39, metadata !13460, metadata !DIExpression()), !dbg !13458
  store i32 1, i32* %_len39, align 4, !dbg !13458
  call void @llvm.dbg.declare(metadata i32* %_val, metadata !13461, metadata !DIExpression()), !dbg !13458
  store i32 1, i32* %_val, align 4, !dbg !13458
  %29 = load i32, i32* %_val, align 4, !dbg !13458
  %30 = load i32, i32* %_pos38, align 4, !dbg !13458
  %shl40 = shl i32 %29, %30, !dbg !13458
  %conv41 = sext i32 %shl40 to i64, !dbg !13458
  %31 = load i32, i32* %_pos38, align 4, !dbg !13458
  %sh_prom42 = zext i32 %31 to i64, !dbg !13458
  %shl43 = shl i64 1, %sh_prom42, !dbg !13458
  %sub44 = sub i64 -1, %shl43, !dbg !13458
  %add45 = add i64 %sub44, 1, !dbg !13458
  %32 = load i32, i32* %_pos38, align 4, !dbg !13458
  %33 = load i32, i32* %_len39, align 4, !dbg !13458
  %add46 = add i32 %32, %33, !dbg !13458
  %sub47 = sub i32 %add46, 1, !dbg !13458
  %sub48 = sub i32 63, %sub47, !dbg !13458
  %sh_prom49 = zext i32 %sub48 to i64, !dbg !13458
  %shr50 = lshr i64 -1, %sh_prom49, !dbg !13458
  %and51 = and i64 %add45, %shr50, !dbg !13458
  %add52 = add i64 0, %and51, !dbg !13458
  %and53 = and i64 %conv41, %add52, !dbg !13458
  %conv54 = trunc i64 %and53 to i32, !dbg !13458
  store i32 %conv54, i32* %_val, align 4, !dbg !13458
  %34 = load i32, i32* %_var37, align 4, !dbg !13458
  %conv56 = zext i32 %34 to i64, !dbg !13458
  %35 = load i32, i32* %_pos38, align 4, !dbg !13458
  %sh_prom57 = zext i32 %35 to i64, !dbg !13458
  %shl58 = shl i64 1, %sh_prom57, !dbg !13458
  %sub59 = sub i64 -1, %shl58, !dbg !13458
  %add60 = add i64 %sub59, 1, !dbg !13458
  %36 = load i32, i32* %_pos38, align 4, !dbg !13458
  %37 = load i32, i32* %_len39, align 4, !dbg !13458
  %add61 = add i32 %36, %37, !dbg !13458
  %sub62 = sub i32 %add61, 1, !dbg !13458
  %sub63 = sub i32 63, %sub62, !dbg !13458
  %sh_prom64 = zext i32 %sub63 to i64, !dbg !13458
  %shr65 = lshr i64 -1, %sh_prom64, !dbg !13458
  %and66 = and i64 %add60, %shr65, !dbg !13458
  %add67 = add i64 0, %and66, !dbg !13458
  %neg = xor i64 %add67, -1, !dbg !13458
  %and68 = and i64 %conv56, %neg, !dbg !13458
  %38 = load i32, i32* %_val, align 4, !dbg !13458
  %conv69 = sext i32 %38 to i64, !dbg !13458
  %or70 = or i64 %and68, %conv69, !dbg !13458
  %conv71 = trunc i64 %or70 to i32, !dbg !13458
  store i32 %conv71, i32* %_var37, align 4, !dbg !13458
  store i32 %conv71, i32* %tmp55, align 4, !dbg !13458
  %39 = load i32, i32* %tmp55, align 4, !dbg !13458
  %40 = load %struct.xlgmac_pkt_info*, %struct.xlgmac_pkt_info** %pkt_info.addr, align 8, !dbg !13462
  %attributes72 = getelementptr inbounds %struct.xlgmac_pkt_info, %struct.xlgmac_pkt_info* %40, i32 0, i32 1, !dbg !13463
  store i32 %39, i32* %attributes72, align 8, !dbg !13464
  br label %if.end, !dbg !13465

if.end:                                           ; preds = %if.then36, %if.then
  br label %if.end73, !dbg !13466

if.end73:                                         ; preds = %if.end, %land.lhs.true, %entry
  ret void, !dbg !13467
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @xlgmac_set_promiscuous_mode(%struct.xlgmac_pdata* %pdata, i32 %enable) #0 !dbg !13468 {
entry:
  %retval = alloca i32, align 4
  %pdata.addr = alloca %struct.xlgmac_pdata*, align 8
  %enable.addr = alloca i32, align 4
  %val = alloca i32, align 4
  %regval = alloca i32, align 4
  %_pos = alloca i32, align 4
  %_len = alloca i32, align 4
  %tmp = alloca i64, align 8
  %tmp11 = alloca i32, align 4
  %_var = alloca i32, align 4
  %_pos15 = alloca i32, align 4
  %_len16 = alloca i32, align 4
  %_val = alloca i32, align 4
  %tmp32 = alloca i32, align 4
  store %struct.xlgmac_pdata* %pdata, %struct.xlgmac_pdata** %pdata.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xlgmac_pdata** %pdata.addr, metadata !13469, metadata !DIExpression()), !dbg !13470
  store i32 %enable, i32* %enable.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %enable.addr, metadata !13471, metadata !DIExpression()), !dbg !13472
  call void @llvm.dbg.declare(metadata i32* %val, metadata !13473, metadata !DIExpression()), !dbg !13474
  %0 = load i32, i32* %enable.addr, align 4, !dbg !13475
  %tobool = icmp ne i32 %0, 0, !dbg !13475
  %1 = zext i1 %tobool to i64, !dbg !13475
  %cond = select i1 %tobool, i32 1, i32 0, !dbg !13475
  store i32 %cond, i32* %val, align 4, !dbg !13474
  call void @llvm.dbg.declare(metadata i32* %regval, metadata !13476, metadata !DIExpression()), !dbg !13477
  call void @llvm.dbg.declare(metadata i32* %_pos, metadata !13478, metadata !DIExpression()), !dbg !13480
  store i32 0, i32* %_pos, align 4, !dbg !13480
  call void @llvm.dbg.declare(metadata i32* %_len, metadata !13481, metadata !DIExpression()), !dbg !13480
  store i32 1, i32* %_len, align 4, !dbg !13480
  %2 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !13480
  %mac_regs = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %2, i32 0, i32 6, !dbg !13480
  %3 = load i8*, i8** %mac_regs, align 8, !dbg !13480
  %add.ptr = getelementptr i8, i8* %3, i64 8, !dbg !13480
  %call = call i32 @readl(i8* %add.ptr) #7, !dbg !13480
  %conv = zext i32 %call to i64, !dbg !13480
  %4 = load i32, i32* %_pos, align 4, !dbg !13480
  %sh_prom = zext i32 %4 to i64, !dbg !13480
  %shl = shl i64 1, %sh_prom, !dbg !13480
  %sub = sub i64 -1, %shl, !dbg !13480
  %add = add i64 %sub, 1, !dbg !13480
  %5 = load i32, i32* %_pos, align 4, !dbg !13480
  %6 = load i32, i32* %_len, align 4, !dbg !13480
  %add1 = add i32 %5, %6, !dbg !13480
  %sub2 = sub i32 %add1, 1, !dbg !13480
  %sub3 = sub i32 63, %sub2, !dbg !13480
  %sh_prom4 = zext i32 %sub3 to i64, !dbg !13480
  %shr = lshr i64 -1, %sh_prom4, !dbg !13480
  %and = and i64 %add, %shr, !dbg !13480
  %add5 = add i64 0, %and, !dbg !13480
  %and6 = and i64 %conv, %add5, !dbg !13480
  %7 = load i32, i32* %_pos, align 4, !dbg !13480
  %sh_prom7 = zext i32 %7 to i64, !dbg !13480
  %shr8 = lshr i64 %and6, %sh_prom7, !dbg !13480
  store i64 %shr8, i64* %tmp, align 8, !dbg !13480
  %8 = load i64, i64* %tmp, align 8, !dbg !13480
  %conv9 = trunc i64 %8 to i32, !dbg !13482
  store i32 %conv9, i32* %regval, align 4, !dbg !13483
  %9 = load i32, i32* %regval, align 4, !dbg !13484
  %10 = load i32, i32* %val, align 4, !dbg !13486
  %cmp = icmp eq i32 %9, %10, !dbg !13487
  br i1 %cmp, label %if.then, label %if.end, !dbg !13488

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !13489
  br label %return, !dbg !13489

if.end:                                           ; preds = %entry
  store i32 0, i32* %tmp11, align 4, !dbg !13490
  %11 = load i32, i32* %tmp11, align 4, !dbg !13493
  %12 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !13494
  %mac_regs12 = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %12, i32 0, i32 6, !dbg !13495
  %13 = load i8*, i8** %mac_regs12, align 8, !dbg !13495
  %add.ptr13 = getelementptr i8, i8* %13, i64 8, !dbg !13496
  %call14 = call i32 @readl(i8* %add.ptr13) #7, !dbg !13497
  store i32 %call14, i32* %regval, align 4, !dbg !13498
  call void @llvm.dbg.declare(metadata i32* %_var, metadata !13499, metadata !DIExpression()), !dbg !13501
  %14 = load i32, i32* %regval, align 4, !dbg !13501
  store i32 %14, i32* %_var, align 4, !dbg !13501
  call void @llvm.dbg.declare(metadata i32* %_pos15, metadata !13502, metadata !DIExpression()), !dbg !13501
  store i32 0, i32* %_pos15, align 4, !dbg !13501
  call void @llvm.dbg.declare(metadata i32* %_len16, metadata !13503, metadata !DIExpression()), !dbg !13501
  store i32 1, i32* %_len16, align 4, !dbg !13501
  call void @llvm.dbg.declare(metadata i32* %_val, metadata !13504, metadata !DIExpression()), !dbg !13501
  %15 = load i32, i32* %val, align 4, !dbg !13501
  store i32 %15, i32* %_val, align 4, !dbg !13501
  %16 = load i32, i32* %_val, align 4, !dbg !13501
  %17 = load i32, i32* %_pos15, align 4, !dbg !13501
  %shl17 = shl i32 %16, %17, !dbg !13501
  %conv18 = zext i32 %shl17 to i64, !dbg !13501
  %18 = load i32, i32* %_pos15, align 4, !dbg !13501
  %sh_prom19 = zext i32 %18 to i64, !dbg !13501
  %shl20 = shl i64 1, %sh_prom19, !dbg !13501
  %sub21 = sub i64 -1, %shl20, !dbg !13501
  %add22 = add i64 %sub21, 1, !dbg !13501
  %19 = load i32, i32* %_pos15, align 4, !dbg !13501
  %20 = load i32, i32* %_len16, align 4, !dbg !13501
  %add23 = add i32 %19, %20, !dbg !13501
  %sub24 = sub i32 %add23, 1, !dbg !13501
  %sub25 = sub i32 63, %sub24, !dbg !13501
  %sh_prom26 = zext i32 %sub25 to i64, !dbg !13501
  %shr27 = lshr i64 -1, %sh_prom26, !dbg !13501
  %and28 = and i64 %add22, %shr27, !dbg !13501
  %add29 = add i64 0, %and28, !dbg !13501
  %and30 = and i64 %conv18, %add29, !dbg !13501
  %conv31 = trunc i64 %and30 to i32, !dbg !13501
  store i32 %conv31, i32* %_val, align 4, !dbg !13501
  %21 = load i32, i32* %_var, align 4, !dbg !13501
  %conv33 = zext i32 %21 to i64, !dbg !13501
  %22 = load i32, i32* %_pos15, align 4, !dbg !13501
  %sh_prom34 = zext i32 %22 to i64, !dbg !13501
  %shl35 = shl i64 1, %sh_prom34, !dbg !13501
  %sub36 = sub i64 -1, %shl35, !dbg !13501
  %add37 = add i64 %sub36, 1, !dbg !13501
  %23 = load i32, i32* %_pos15, align 4, !dbg !13501
  %24 = load i32, i32* %_len16, align 4, !dbg !13501
  %add38 = add i32 %23, %24, !dbg !13501
  %sub39 = sub i32 %add38, 1, !dbg !13501
  %sub40 = sub i32 63, %sub39, !dbg !13501
  %sh_prom41 = zext i32 %sub40 to i64, !dbg !13501
  %shr42 = lshr i64 -1, %sh_prom41, !dbg !13501
  %and43 = and i64 %add37, %shr42, !dbg !13501
  %add44 = add i64 0, %and43, !dbg !13501
  %neg = xor i64 %add44, -1, !dbg !13501
  %and45 = and i64 %conv33, %neg, !dbg !13501
  %25 = load i32, i32* %_val, align 4, !dbg !13501
  %conv46 = zext i32 %25 to i64, !dbg !13501
  %or = or i64 %and45, %conv46, !dbg !13501
  %conv47 = trunc i64 %or to i32, !dbg !13501
  store i32 %conv47, i32* %_var, align 4, !dbg !13501
  store i32 %conv47, i32* %tmp32, align 4, !dbg !13501
  %26 = load i32, i32* %tmp32, align 4, !dbg !13501
  store i32 %26, i32* %regval, align 4, !dbg !13505
  %27 = load i32, i32* %regval, align 4, !dbg !13506
  %28 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !13507
  %mac_regs48 = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %28, i32 0, i32 6, !dbg !13508
  %29 = load i8*, i8** %mac_regs48, align 8, !dbg !13508
  %add.ptr49 = getelementptr i8, i8* %29, i64 8, !dbg !13509
  call void @writel(i32 %27, i8* %add.ptr49) #7, !dbg !13510
  %30 = load i32, i32* %enable.addr, align 4, !dbg !13511
  %tobool50 = icmp ne i32 %30, 0, !dbg !13511
  br i1 %tobool50, label %if.then51, label %if.else, !dbg !13513

if.then51:                                        ; preds = %if.end
  %31 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !13514
  %call52 = call i32 @xlgmac_disable_rx_vlan_filtering(%struct.xlgmac_pdata* %31) #7, !dbg !13516
  br label %if.end58, !dbg !13517

if.else:                                          ; preds = %if.end
  %32 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !13518
  %netdev = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %32, i32 0, i32 0, !dbg !13521
  %33 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !13521
  %features = getelementptr inbounds %struct.net_device, %struct.net_device* %33, i32 0, i32 15, !dbg !13522
  %34 = load i64, i64* %features, align 8, !dbg !13522
  %and53 = and i64 %34, 512, !dbg !13523
  %tobool54 = icmp ne i64 %and53, 0, !dbg !13523
  br i1 %tobool54, label %if.then55, label %if.end57, !dbg !13524

if.then55:                                        ; preds = %if.else
  %35 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !13525
  %call56 = call i32 @xlgmac_enable_rx_vlan_filtering(%struct.xlgmac_pdata* %35) #7, !dbg !13526
  br label %if.end57, !dbg !13526

if.end57:                                         ; preds = %if.then55, %if.else
  br label %if.end58

if.end58:                                         ; preds = %if.end57, %if.then51
  store i32 0, i32* %retval, align 4, !dbg !13527
  br label %return, !dbg !13527

return:                                           ; preds = %if.end58, %if.then
  %36 = load i32, i32* %retval, align 4, !dbg !13528
  ret i32 %36, !dbg !13528
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @xlgmac_set_all_multicast_mode(%struct.xlgmac_pdata* %pdata, i32 %enable) #0 !dbg !13529 {
entry:
  %retval = alloca i32, align 4
  %pdata.addr = alloca %struct.xlgmac_pdata*, align 8
  %enable.addr = alloca i32, align 4
  %val = alloca i32, align 4
  %regval = alloca i32, align 4
  %_pos = alloca i32, align 4
  %_len = alloca i32, align 4
  %tmp = alloca i64, align 8
  %tmp11 = alloca i32, align 4
  %_var = alloca i32, align 4
  %_pos15 = alloca i32, align 4
  %_len16 = alloca i32, align 4
  %_val = alloca i32, align 4
  %tmp32 = alloca i32, align 4
  store %struct.xlgmac_pdata* %pdata, %struct.xlgmac_pdata** %pdata.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xlgmac_pdata** %pdata.addr, metadata !13530, metadata !DIExpression()), !dbg !13531
  store i32 %enable, i32* %enable.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %enable.addr, metadata !13532, metadata !DIExpression()), !dbg !13533
  call void @llvm.dbg.declare(metadata i32* %val, metadata !13534, metadata !DIExpression()), !dbg !13535
  %0 = load i32, i32* %enable.addr, align 4, !dbg !13536
  %tobool = icmp ne i32 %0, 0, !dbg !13536
  %1 = zext i1 %tobool to i64, !dbg !13536
  %cond = select i1 %tobool, i32 1, i32 0, !dbg !13536
  store i32 %cond, i32* %val, align 4, !dbg !13535
  call void @llvm.dbg.declare(metadata i32* %regval, metadata !13537, metadata !DIExpression()), !dbg !13538
  call void @llvm.dbg.declare(metadata i32* %_pos, metadata !13539, metadata !DIExpression()), !dbg !13541
  store i32 4, i32* %_pos, align 4, !dbg !13541
  call void @llvm.dbg.declare(metadata i32* %_len, metadata !13542, metadata !DIExpression()), !dbg !13541
  store i32 1, i32* %_len, align 4, !dbg !13541
  %2 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !13541
  %mac_regs = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %2, i32 0, i32 6, !dbg !13541
  %3 = load i8*, i8** %mac_regs, align 8, !dbg !13541
  %add.ptr = getelementptr i8, i8* %3, i64 8, !dbg !13541
  %call = call i32 @readl(i8* %add.ptr) #7, !dbg !13541
  %conv = zext i32 %call to i64, !dbg !13541
  %4 = load i32, i32* %_pos, align 4, !dbg !13541
  %sh_prom = zext i32 %4 to i64, !dbg !13541
  %shl = shl i64 1, %sh_prom, !dbg !13541
  %sub = sub i64 -1, %shl, !dbg !13541
  %add = add i64 %sub, 1, !dbg !13541
  %5 = load i32, i32* %_pos, align 4, !dbg !13541
  %6 = load i32, i32* %_len, align 4, !dbg !13541
  %add1 = add i32 %5, %6, !dbg !13541
  %sub2 = sub i32 %add1, 1, !dbg !13541
  %sub3 = sub i32 63, %sub2, !dbg !13541
  %sh_prom4 = zext i32 %sub3 to i64, !dbg !13541
  %shr = lshr i64 -1, %sh_prom4, !dbg !13541
  %and = and i64 %add, %shr, !dbg !13541
  %add5 = add i64 0, %and, !dbg !13541
  %and6 = and i64 %conv, %add5, !dbg !13541
  %7 = load i32, i32* %_pos, align 4, !dbg !13541
  %sh_prom7 = zext i32 %7 to i64, !dbg !13541
  %shr8 = lshr i64 %and6, %sh_prom7, !dbg !13541
  store i64 %shr8, i64* %tmp, align 8, !dbg !13541
  %8 = load i64, i64* %tmp, align 8, !dbg !13541
  %conv9 = trunc i64 %8 to i32, !dbg !13543
  store i32 %conv9, i32* %regval, align 4, !dbg !13544
  %9 = load i32, i32* %regval, align 4, !dbg !13545
  %10 = load i32, i32* %val, align 4, !dbg !13547
  %cmp = icmp eq i32 %9, %10, !dbg !13548
  br i1 %cmp, label %if.then, label %if.end, !dbg !13549

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !13550
  br label %return, !dbg !13550

if.end:                                           ; preds = %entry
  store i32 0, i32* %tmp11, align 4, !dbg !13551
  %11 = load i32, i32* %tmp11, align 4, !dbg !13554
  %12 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !13555
  %mac_regs12 = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %12, i32 0, i32 6, !dbg !13556
  %13 = load i8*, i8** %mac_regs12, align 8, !dbg !13556
  %add.ptr13 = getelementptr i8, i8* %13, i64 8, !dbg !13557
  %call14 = call i32 @readl(i8* %add.ptr13) #7, !dbg !13558
  store i32 %call14, i32* %regval, align 4, !dbg !13559
  call void @llvm.dbg.declare(metadata i32* %_var, metadata !13560, metadata !DIExpression()), !dbg !13562
  %14 = load i32, i32* %regval, align 4, !dbg !13562
  store i32 %14, i32* %_var, align 4, !dbg !13562
  call void @llvm.dbg.declare(metadata i32* %_pos15, metadata !13563, metadata !DIExpression()), !dbg !13562
  store i32 4, i32* %_pos15, align 4, !dbg !13562
  call void @llvm.dbg.declare(metadata i32* %_len16, metadata !13564, metadata !DIExpression()), !dbg !13562
  store i32 1, i32* %_len16, align 4, !dbg !13562
  call void @llvm.dbg.declare(metadata i32* %_val, metadata !13565, metadata !DIExpression()), !dbg !13562
  %15 = load i32, i32* %val, align 4, !dbg !13562
  store i32 %15, i32* %_val, align 4, !dbg !13562
  %16 = load i32, i32* %_val, align 4, !dbg !13562
  %17 = load i32, i32* %_pos15, align 4, !dbg !13562
  %shl17 = shl i32 %16, %17, !dbg !13562
  %conv18 = zext i32 %shl17 to i64, !dbg !13562
  %18 = load i32, i32* %_pos15, align 4, !dbg !13562
  %sh_prom19 = zext i32 %18 to i64, !dbg !13562
  %shl20 = shl i64 1, %sh_prom19, !dbg !13562
  %sub21 = sub i64 -1, %shl20, !dbg !13562
  %add22 = add i64 %sub21, 1, !dbg !13562
  %19 = load i32, i32* %_pos15, align 4, !dbg !13562
  %20 = load i32, i32* %_len16, align 4, !dbg !13562
  %add23 = add i32 %19, %20, !dbg !13562
  %sub24 = sub i32 %add23, 1, !dbg !13562
  %sub25 = sub i32 63, %sub24, !dbg !13562
  %sh_prom26 = zext i32 %sub25 to i64, !dbg !13562
  %shr27 = lshr i64 -1, %sh_prom26, !dbg !13562
  %and28 = and i64 %add22, %shr27, !dbg !13562
  %add29 = add i64 0, %and28, !dbg !13562
  %and30 = and i64 %conv18, %add29, !dbg !13562
  %conv31 = trunc i64 %and30 to i32, !dbg !13562
  store i32 %conv31, i32* %_val, align 4, !dbg !13562
  %21 = load i32, i32* %_var, align 4, !dbg !13562
  %conv33 = zext i32 %21 to i64, !dbg !13562
  %22 = load i32, i32* %_pos15, align 4, !dbg !13562
  %sh_prom34 = zext i32 %22 to i64, !dbg !13562
  %shl35 = shl i64 1, %sh_prom34, !dbg !13562
  %sub36 = sub i64 -1, %shl35, !dbg !13562
  %add37 = add i64 %sub36, 1, !dbg !13562
  %23 = load i32, i32* %_pos15, align 4, !dbg !13562
  %24 = load i32, i32* %_len16, align 4, !dbg !13562
  %add38 = add i32 %23, %24, !dbg !13562
  %sub39 = sub i32 %add38, 1, !dbg !13562
  %sub40 = sub i32 63, %sub39, !dbg !13562
  %sh_prom41 = zext i32 %sub40 to i64, !dbg !13562
  %shr42 = lshr i64 -1, %sh_prom41, !dbg !13562
  %and43 = and i64 %add37, %shr42, !dbg !13562
  %add44 = add i64 0, %and43, !dbg !13562
  %neg = xor i64 %add44, -1, !dbg !13562
  %and45 = and i64 %conv33, %neg, !dbg !13562
  %25 = load i32, i32* %_val, align 4, !dbg !13562
  %conv46 = zext i32 %25 to i64, !dbg !13562
  %or = or i64 %and45, %conv46, !dbg !13562
  %conv47 = trunc i64 %or to i32, !dbg !13562
  store i32 %conv47, i32* %_var, align 4, !dbg !13562
  store i32 %conv47, i32* %tmp32, align 4, !dbg !13562
  %26 = load i32, i32* %tmp32, align 4, !dbg !13562
  store i32 %26, i32* %regval, align 4, !dbg !13566
  %27 = load i32, i32* %regval, align 4, !dbg !13567
  %28 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !13568
  %mac_regs48 = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %28, i32 0, i32 6, !dbg !13569
  %29 = load i8*, i8** %mac_regs48, align 8, !dbg !13569
  %add.ptr49 = getelementptr i8, i8* %29, i64 8, !dbg !13570
  call void @writel(i32 %27, i8* %add.ptr49) #7, !dbg !13571
  store i32 0, i32* %retval, align 4, !dbg !13572
  br label %return, !dbg !13572

return:                                           ; preds = %if.end, %if.then
  %30 = load i32, i32* %retval, align 4, !dbg !13573
  ret i32 %30, !dbg !13573
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @xlgmac_add_mac_addresses(%struct.xlgmac_pdata* %pdata) #0 !dbg !13574 {
entry:
  %pdata.addr = alloca %struct.xlgmac_pdata*, align 8
  store %struct.xlgmac_pdata* %pdata, %struct.xlgmac_pdata** %pdata.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xlgmac_pdata** %pdata.addr, metadata !13575, metadata !DIExpression()), !dbg !13576
  %0 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !13577
  %hw_feat = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %0, i32 0, i32 7, !dbg !13579
  %hash_table_size = getelementptr inbounds %struct.xlgmac_hw_features, %struct.xlgmac_hw_features* %hw_feat, i32 0, i32 25, !dbg !13580
  %1 = load i32, i32* %hash_table_size, align 4, !dbg !13580
  %tobool = icmp ne i32 %1, 0, !dbg !13577
  br i1 %tobool, label %if.then, label %if.else, !dbg !13581

if.then:                                          ; preds = %entry
  %2 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !13582
  call void @xlgmac_set_mac_hash_table(%struct.xlgmac_pdata* %2) #7, !dbg !13583
  br label %if.end, !dbg !13583

if.else:                                          ; preds = %entry
  %3 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !13584
  call void @xlgmac_set_mac_addn_addrs(%struct.xlgmac_pdata* %3) #7, !dbg !13585
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret i32 0, !dbg !13586
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @xlgmac_set_mac_hash_table(%struct.xlgmac_pdata* %pdata) #0 !dbg !13587 {
entry:
  %pdata.addr = alloca %struct.xlgmac_pdata*, align 8
  %hash_table_shift = alloca i32, align 4
  %hash_table_count = alloca i32, align 4
  %hash_table = alloca [8 x i32], align 16
  %netdev = alloca %struct.net_device*, align 8
  %ha = alloca %struct.netdev_hw_addr*, align 8
  %hash_reg = alloca i32, align 4
  %i = alloca i32, align 4
  %crc = alloca i32, align 4
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.netdev_hw_addr*, align 8
  %__x = alloca i32, align 4
  %tmp8 = alloca i32, align 4
  %___x = alloca i32, align 4
  %tmp29 = alloca i32, align 4
  %__mptr36 = alloca i8*, align 8
  %tmp41 = alloca %struct.netdev_hw_addr*, align 8
  %__mptr43 = alloca i8*, align 8
  %tmp48 = alloca %struct.netdev_hw_addr*, align 8
  %__x57 = alloca i32, align 4
  %tmp62 = alloca i32, align 4
  %___x64 = alloca i32, align 4
  %tmp88 = alloca i32, align 4
  %__mptr101 = alloca i8*, align 8
  %tmp106 = alloca %struct.netdev_hw_addr*, align 8
  store %struct.xlgmac_pdata* %pdata, %struct.xlgmac_pdata** %pdata.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xlgmac_pdata** %pdata.addr, metadata !13588, metadata !DIExpression()), !dbg !13589
  call void @llvm.dbg.declare(metadata i32* %hash_table_shift, metadata !13590, metadata !DIExpression()), !dbg !13591
  call void @llvm.dbg.declare(metadata i32* %hash_table_count, metadata !13592, metadata !DIExpression()), !dbg !13593
  call void @llvm.dbg.declare(metadata [8 x i32]* %hash_table, metadata !13594, metadata !DIExpression()), !dbg !13596
  call void @llvm.dbg.declare(metadata %struct.net_device** %netdev, metadata !13597, metadata !DIExpression()), !dbg !13598
  %0 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !13599
  %netdev1 = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %0, i32 0, i32 0, !dbg !13600
  %1 = load %struct.net_device*, %struct.net_device** %netdev1, align 8, !dbg !13600
  store %struct.net_device* %1, %struct.net_device** %netdev, align 8, !dbg !13598
  call void @llvm.dbg.declare(metadata %struct.netdev_hw_addr** %ha, metadata !13601, metadata !DIExpression()), !dbg !13602
  call void @llvm.dbg.declare(metadata i32* %hash_reg, metadata !13603, metadata !DIExpression()), !dbg !13604
  call void @llvm.dbg.declare(metadata i32* %i, metadata !13605, metadata !DIExpression()), !dbg !13606
  call void @llvm.dbg.declare(metadata i32* %crc, metadata !13607, metadata !DIExpression()), !dbg !13608
  %2 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !13609
  %hw_feat = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %2, i32 0, i32 7, !dbg !13610
  %hash_table_size = getelementptr inbounds %struct.xlgmac_hw_features, %struct.xlgmac_hw_features* %hw_feat, i32 0, i32 25, !dbg !13611
  %3 = load i32, i32* %hash_table_size, align 4, !dbg !13611
  %shr = lshr i32 %3, 7, !dbg !13612
  %sub = sub i32 26, %shr, !dbg !13613
  store i32 %sub, i32* %hash_table_shift, align 4, !dbg !13614
  %4 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !13615
  %hw_feat2 = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %4, i32 0, i32 7, !dbg !13616
  %hash_table_size3 = getelementptr inbounds %struct.xlgmac_hw_features, %struct.xlgmac_hw_features* %hw_feat2, i32 0, i32 25, !dbg !13617
  %5 = load i32, i32* %hash_table_size3, align 4, !dbg !13617
  %div = udiv i32 %5, 32, !dbg !13618
  store i32 %div, i32* %hash_table_count, align 4, !dbg !13619
  %arraydecay = getelementptr inbounds [8 x i32], [8 x i32]* %hash_table, i64 0, i64 0, !dbg !13620
  %6 = bitcast i32* %arraydecay to i8*, !dbg !13620
  call void @llvm.memset.p0i8.i64(i8* align 16 %6, i8 0, i64 32, i1 false), !dbg !13620
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !13621, metadata !DIExpression()), !dbg !13624
  %7 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !13624
  %uc = getelementptr inbounds %struct.net_device, %struct.net_device* %7, i32 0, i32 62, !dbg !13624
  %list = getelementptr inbounds %struct.netdev_hw_addr_list, %struct.netdev_hw_addr_list* %uc, i32 0, i32 0, !dbg !13624
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %list, i32 0, i32 0, !dbg !13624
  %8 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !13624
  %9 = bitcast %struct.list_head* %8 to i8*, !dbg !13624
  store i8* %9, i8** %__mptr, align 8, !dbg !13624
  br label %do.body, !dbg !13624

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !13625

do.end:                                           ; preds = %do.body
  %10 = load i8*, i8** %__mptr, align 8, !dbg !13624
  %add.ptr = getelementptr i8, i8* %10, i64 0, !dbg !13624
  %11 = bitcast i8* %add.ptr to %struct.netdev_hw_addr*, !dbg !13624
  store %struct.netdev_hw_addr* %11, %struct.netdev_hw_addr** %tmp, align 8, !dbg !13625
  %12 = load %struct.netdev_hw_addr*, %struct.netdev_hw_addr** %tmp, align 8, !dbg !13624
  store %struct.netdev_hw_addr* %12, %struct.netdev_hw_addr** %ha, align 8, !dbg !13627
  br label %for.cond, !dbg !13627

for.cond:                                         ; preds = %do.end40, %do.end
  %13 = load %struct.netdev_hw_addr*, %struct.netdev_hw_addr** %ha, align 8, !dbg !13628
  %list4 = getelementptr inbounds %struct.netdev_hw_addr, %struct.netdev_hw_addr* %13, i32 0, i32 0, !dbg !13628
  %14 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !13628
  %uc5 = getelementptr inbounds %struct.net_device, %struct.net_device* %14, i32 0, i32 62, !dbg !13628
  %list6 = getelementptr inbounds %struct.netdev_hw_addr_list, %struct.netdev_hw_addr_list* %uc5, i32 0, i32 0, !dbg !13628
  %cmp = icmp eq %struct.list_head* %list4, %list6, !dbg !13628
  %lnot = xor i1 %cmp, true, !dbg !13628
  br i1 %lnot, label %for.body, label %for.end, !dbg !13627

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %__x, metadata !13630, metadata !DIExpression()), !dbg !13633
  %15 = load %struct.netdev_hw_addr*, %struct.netdev_hw_addr** %ha, align 8, !dbg !13633
  %addr = getelementptr inbounds %struct.netdev_hw_addr, %struct.netdev_hw_addr* %15, i32 0, i32 1, !dbg !13633
  %arraydecay7 = getelementptr inbounds [32 x i8], [32 x i8]* %addr, i64 0, i64 0, !dbg !13633
  %call = call i32 @crc32_le(i32 -1, i8* %arraydecay7, i64 6) #12, !dbg !13633
  %neg = xor i32 %call, -1, !dbg !13633
  store i32 %neg, i32* %__x, align 4, !dbg !13633
  %16 = load i32, i32* %__x, align 4, !dbg !13633
  %17 = call i1 @llvm.is.constant.i32(i32 %16), !dbg !13633
  br i1 %17, label %cond.true, label %cond.false, !dbg !13633

cond.true:                                        ; preds = %for.body
  call void @llvm.dbg.declare(metadata i32* %___x, metadata !13634, metadata !DIExpression()), !dbg !13636
  %18 = load i32, i32* %__x, align 4, !dbg !13636
  store i32 %18, i32* %___x, align 4, !dbg !13636
  %19 = load i32, i32* %___x, align 4, !dbg !13636
  %shr9 = lshr i32 %19, 16, !dbg !13636
  %20 = load i32, i32* %___x, align 4, !dbg !13636
  %shl = shl i32 %20, 16, !dbg !13636
  %or = or i32 %shr9, %shl, !dbg !13636
  store i32 %or, i32* %___x, align 4, !dbg !13636
  %21 = load i32, i32* %___x, align 4, !dbg !13636
  %and = and i32 %21, -16711936, !dbg !13636
  %shr10 = lshr i32 %and, 8, !dbg !13636
  %22 = load i32, i32* %___x, align 4, !dbg !13636
  %and11 = and i32 %22, 16711935, !dbg !13636
  %shl12 = shl i32 %and11, 8, !dbg !13636
  %or13 = or i32 %shr10, %shl12, !dbg !13636
  store i32 %or13, i32* %___x, align 4, !dbg !13636
  %23 = load i32, i32* %___x, align 4, !dbg !13636
  %and14 = and i32 %23, -252645136, !dbg !13636
  %shr15 = lshr i32 %and14, 4, !dbg !13636
  %24 = load i32, i32* %___x, align 4, !dbg !13636
  %and16 = and i32 %24, 252645135, !dbg !13636
  %shl17 = shl i32 %and16, 4, !dbg !13636
  %or18 = or i32 %shr15, %shl17, !dbg !13636
  store i32 %or18, i32* %___x, align 4, !dbg !13636
  %25 = load i32, i32* %___x, align 4, !dbg !13636
  %and19 = and i32 %25, -858993460, !dbg !13636
  %shr20 = lshr i32 %and19, 2, !dbg !13636
  %26 = load i32, i32* %___x, align 4, !dbg !13636
  %and21 = and i32 %26, 858993459, !dbg !13636
  %shl22 = shl i32 %and21, 2, !dbg !13636
  %or23 = or i32 %shr20, %shl22, !dbg !13636
  store i32 %or23, i32* %___x, align 4, !dbg !13636
  %27 = load i32, i32* %___x, align 4, !dbg !13636
  %and24 = and i32 %27, -1431655766, !dbg !13636
  %shr25 = lshr i32 %and24, 1, !dbg !13636
  %28 = load i32, i32* %___x, align 4, !dbg !13636
  %and26 = and i32 %28, 1431655765, !dbg !13636
  %shl27 = shl i32 %and26, 1, !dbg !13636
  %or28 = or i32 %shr25, %shl27, !dbg !13636
  store i32 %or28, i32* %___x, align 4, !dbg !13636
  %29 = load i32, i32* %___x, align 4, !dbg !13636
  store i32 %29, i32* %tmp29, align 4, !dbg !13636
  %30 = load i32, i32* %tmp29, align 4, !dbg !13636
  br label %cond.end, !dbg !13633

cond.false:                                       ; preds = %for.body
  %31 = load i32, i32* %__x, align 4, !dbg !13633
  %call30 = call i32 @__bitrev32(i32 %31) #7, !dbg !13633
  br label %cond.end, !dbg !13633

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %30, %cond.true ], [ %call30, %cond.false ], !dbg !13633
  store i32 %cond, i32* %tmp8, align 4, !dbg !13633
  %32 = load i32, i32* %tmp8, align 4, !dbg !13633
  store i32 %32, i32* %crc, align 4, !dbg !13637
  %33 = load i32, i32* %hash_table_shift, align 4, !dbg !13638
  %34 = load i32, i32* %crc, align 4, !dbg !13639
  %shr31 = lshr i32 %34, %33, !dbg !13639
  store i32 %shr31, i32* %crc, align 4, !dbg !13639
  %35 = load i32, i32* %crc, align 4, !dbg !13640
  %and32 = and i32 %35, 31, !dbg !13641
  %shl33 = shl i32 1, %and32, !dbg !13642
  %36 = load i32, i32* %crc, align 4, !dbg !13643
  %shr34 = lshr i32 %36, 5, !dbg !13644
  %idxprom = zext i32 %shr34 to i64, !dbg !13645
  %arrayidx = getelementptr [8 x i32], [8 x i32]* %hash_table, i64 0, i64 %idxprom, !dbg !13645
  %37 = load i32, i32* %arrayidx, align 4, !dbg !13646
  %or35 = or i32 %37, %shl33, !dbg !13646
  store i32 %or35, i32* %arrayidx, align 4, !dbg !13646
  br label %for.inc, !dbg !13647

for.inc:                                          ; preds = %cond.end
  call void @llvm.dbg.declare(metadata i8** %__mptr36, metadata !13648, metadata !DIExpression()), !dbg !13650
  %38 = load %struct.netdev_hw_addr*, %struct.netdev_hw_addr** %ha, align 8, !dbg !13650
  %list37 = getelementptr inbounds %struct.netdev_hw_addr, %struct.netdev_hw_addr* %38, i32 0, i32 0, !dbg !13650
  %next38 = getelementptr inbounds %struct.list_head, %struct.list_head* %list37, i32 0, i32 0, !dbg !13650
  %39 = load %struct.list_head*, %struct.list_head** %next38, align 8, !dbg !13650
  %40 = bitcast %struct.list_head* %39 to i8*, !dbg !13650
  store i8* %40, i8** %__mptr36, align 8, !dbg !13650
  br label %do.body39, !dbg !13650

do.body39:                                        ; preds = %for.inc
  br label %do.end40, !dbg !13651

do.end40:                                         ; preds = %do.body39
  %41 = load i8*, i8** %__mptr36, align 8, !dbg !13650
  %add.ptr42 = getelementptr i8, i8* %41, i64 0, !dbg !13650
  %42 = bitcast i8* %add.ptr42 to %struct.netdev_hw_addr*, !dbg !13650
  store %struct.netdev_hw_addr* %42, %struct.netdev_hw_addr** %tmp41, align 8, !dbg !13651
  %43 = load %struct.netdev_hw_addr*, %struct.netdev_hw_addr** %tmp41, align 8, !dbg !13650
  store %struct.netdev_hw_addr* %43, %struct.netdev_hw_addr** %ha, align 8, !dbg !13628
  br label %for.cond, !dbg !13628, !llvm.loop !13653

for.end:                                          ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i8** %__mptr43, metadata !13655, metadata !DIExpression()), !dbg !13658
  %44 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !13658
  %mc = getelementptr inbounds %struct.net_device, %struct.net_device* %44, i32 0, i32 63, !dbg !13658
  %list44 = getelementptr inbounds %struct.netdev_hw_addr_list, %struct.netdev_hw_addr_list* %mc, i32 0, i32 0, !dbg !13658
  %next45 = getelementptr inbounds %struct.list_head, %struct.list_head* %list44, i32 0, i32 0, !dbg !13658
  %45 = load %struct.list_head*, %struct.list_head** %next45, align 8, !dbg !13658
  %46 = bitcast %struct.list_head* %45 to i8*, !dbg !13658
  store i8* %46, i8** %__mptr43, align 8, !dbg !13658
  br label %do.body46, !dbg !13658

do.body46:                                        ; preds = %for.end
  br label %do.end47, !dbg !13659

do.end47:                                         ; preds = %do.body46
  %47 = load i8*, i8** %__mptr43, align 8, !dbg !13658
  %add.ptr49 = getelementptr i8, i8* %47, i64 0, !dbg !13658
  %48 = bitcast i8* %add.ptr49 to %struct.netdev_hw_addr*, !dbg !13658
  store %struct.netdev_hw_addr* %48, %struct.netdev_hw_addr** %tmp48, align 8, !dbg !13659
  %49 = load %struct.netdev_hw_addr*, %struct.netdev_hw_addr** %tmp48, align 8, !dbg !13658
  store %struct.netdev_hw_addr* %49, %struct.netdev_hw_addr** %ha, align 8, !dbg !13661
  br label %for.cond50, !dbg !13661

for.cond50:                                       ; preds = %do.end105, %do.end47
  %50 = load %struct.netdev_hw_addr*, %struct.netdev_hw_addr** %ha, align 8, !dbg !13662
  %list51 = getelementptr inbounds %struct.netdev_hw_addr, %struct.netdev_hw_addr* %50, i32 0, i32 0, !dbg !13662
  %51 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !13662
  %mc52 = getelementptr inbounds %struct.net_device, %struct.net_device* %51, i32 0, i32 63, !dbg !13662
  %list53 = getelementptr inbounds %struct.netdev_hw_addr_list, %struct.netdev_hw_addr_list* %mc52, i32 0, i32 0, !dbg !13662
  %cmp54 = icmp eq %struct.list_head* %list51, %list53, !dbg !13662
  %lnot55 = xor i1 %cmp54, true, !dbg !13662
  br i1 %lnot55, label %for.body56, label %for.end108, !dbg !13661

for.body56:                                       ; preds = %for.cond50
  call void @llvm.dbg.declare(metadata i32* %__x57, metadata !13664, metadata !DIExpression()), !dbg !13667
  %52 = load %struct.netdev_hw_addr*, %struct.netdev_hw_addr** %ha, align 8, !dbg !13667
  %addr58 = getelementptr inbounds %struct.netdev_hw_addr, %struct.netdev_hw_addr* %52, i32 0, i32 1, !dbg !13667
  %arraydecay59 = getelementptr inbounds [32 x i8], [32 x i8]* %addr58, i64 0, i64 0, !dbg !13667
  %call60 = call i32 @crc32_le(i32 -1, i8* %arraydecay59, i64 6) #12, !dbg !13667
  %neg61 = xor i32 %call60, -1, !dbg !13667
  store i32 %neg61, i32* %__x57, align 4, !dbg !13667
  %53 = load i32, i32* %__x57, align 4, !dbg !13667
  %54 = call i1 @llvm.is.constant.i32(i32 %53), !dbg !13667
  br i1 %54, label %cond.true63, label %cond.false89, !dbg !13667

cond.true63:                                      ; preds = %for.body56
  call void @llvm.dbg.declare(metadata i32* %___x64, metadata !13668, metadata !DIExpression()), !dbg !13670
  %55 = load i32, i32* %__x57, align 4, !dbg !13670
  store i32 %55, i32* %___x64, align 4, !dbg !13670
  %56 = load i32, i32* %___x64, align 4, !dbg !13670
  %shr65 = lshr i32 %56, 16, !dbg !13670
  %57 = load i32, i32* %___x64, align 4, !dbg !13670
  %shl66 = shl i32 %57, 16, !dbg !13670
  %or67 = or i32 %shr65, %shl66, !dbg !13670
  store i32 %or67, i32* %___x64, align 4, !dbg !13670
  %58 = load i32, i32* %___x64, align 4, !dbg !13670
  %and68 = and i32 %58, -16711936, !dbg !13670
  %shr69 = lshr i32 %and68, 8, !dbg !13670
  %59 = load i32, i32* %___x64, align 4, !dbg !13670
  %and70 = and i32 %59, 16711935, !dbg !13670
  %shl71 = shl i32 %and70, 8, !dbg !13670
  %or72 = or i32 %shr69, %shl71, !dbg !13670
  store i32 %or72, i32* %___x64, align 4, !dbg !13670
  %60 = load i32, i32* %___x64, align 4, !dbg !13670
  %and73 = and i32 %60, -252645136, !dbg !13670
  %shr74 = lshr i32 %and73, 4, !dbg !13670
  %61 = load i32, i32* %___x64, align 4, !dbg !13670
  %and75 = and i32 %61, 252645135, !dbg !13670
  %shl76 = shl i32 %and75, 4, !dbg !13670
  %or77 = or i32 %shr74, %shl76, !dbg !13670
  store i32 %or77, i32* %___x64, align 4, !dbg !13670
  %62 = load i32, i32* %___x64, align 4, !dbg !13670
  %and78 = and i32 %62, -858993460, !dbg !13670
  %shr79 = lshr i32 %and78, 2, !dbg !13670
  %63 = load i32, i32* %___x64, align 4, !dbg !13670
  %and80 = and i32 %63, 858993459, !dbg !13670
  %shl81 = shl i32 %and80, 2, !dbg !13670
  %or82 = or i32 %shr79, %shl81, !dbg !13670
  store i32 %or82, i32* %___x64, align 4, !dbg !13670
  %64 = load i32, i32* %___x64, align 4, !dbg !13670
  %and83 = and i32 %64, -1431655766, !dbg !13670
  %shr84 = lshr i32 %and83, 1, !dbg !13670
  %65 = load i32, i32* %___x64, align 4, !dbg !13670
  %and85 = and i32 %65, 1431655765, !dbg !13670
  %shl86 = shl i32 %and85, 1, !dbg !13670
  %or87 = or i32 %shr84, %shl86, !dbg !13670
  store i32 %or87, i32* %___x64, align 4, !dbg !13670
  %66 = load i32, i32* %___x64, align 4, !dbg !13670
  store i32 %66, i32* %tmp88, align 4, !dbg !13670
  %67 = load i32, i32* %tmp88, align 4, !dbg !13670
  br label %cond.end91, !dbg !13667

cond.false89:                                     ; preds = %for.body56
  %68 = load i32, i32* %__x57, align 4, !dbg !13667
  %call90 = call i32 @__bitrev32(i32 %68) #7, !dbg !13667
  br label %cond.end91, !dbg !13667

cond.end91:                                       ; preds = %cond.false89, %cond.true63
  %cond92 = phi i32 [ %67, %cond.true63 ], [ %call90, %cond.false89 ], !dbg !13667
  store i32 %cond92, i32* %tmp62, align 4, !dbg !13667
  %69 = load i32, i32* %tmp62, align 4, !dbg !13667
  store i32 %69, i32* %crc, align 4, !dbg !13671
  %70 = load i32, i32* %hash_table_shift, align 4, !dbg !13672
  %71 = load i32, i32* %crc, align 4, !dbg !13673
  %shr93 = lshr i32 %71, %70, !dbg !13673
  store i32 %shr93, i32* %crc, align 4, !dbg !13673
  %72 = load i32, i32* %crc, align 4, !dbg !13674
  %and94 = and i32 %72, 31, !dbg !13675
  %shl95 = shl i32 1, %and94, !dbg !13676
  %73 = load i32, i32* %crc, align 4, !dbg !13677
  %shr96 = lshr i32 %73, 5, !dbg !13678
  %idxprom97 = zext i32 %shr96 to i64, !dbg !13679
  %arrayidx98 = getelementptr [8 x i32], [8 x i32]* %hash_table, i64 0, i64 %idxprom97, !dbg !13679
  %74 = load i32, i32* %arrayidx98, align 4, !dbg !13680
  %or99 = or i32 %74, %shl95, !dbg !13680
  store i32 %or99, i32* %arrayidx98, align 4, !dbg !13680
  br label %for.inc100, !dbg !13681

for.inc100:                                       ; preds = %cond.end91
  call void @llvm.dbg.declare(metadata i8** %__mptr101, metadata !13682, metadata !DIExpression()), !dbg !13684
  %75 = load %struct.netdev_hw_addr*, %struct.netdev_hw_addr** %ha, align 8, !dbg !13684
  %list102 = getelementptr inbounds %struct.netdev_hw_addr, %struct.netdev_hw_addr* %75, i32 0, i32 0, !dbg !13684
  %next103 = getelementptr inbounds %struct.list_head, %struct.list_head* %list102, i32 0, i32 0, !dbg !13684
  %76 = load %struct.list_head*, %struct.list_head** %next103, align 8, !dbg !13684
  %77 = bitcast %struct.list_head* %76 to i8*, !dbg !13684
  store i8* %77, i8** %__mptr101, align 8, !dbg !13684
  br label %do.body104, !dbg !13684

do.body104:                                       ; preds = %for.inc100
  br label %do.end105, !dbg !13685

do.end105:                                        ; preds = %do.body104
  %78 = load i8*, i8** %__mptr101, align 8, !dbg !13684
  %add.ptr107 = getelementptr i8, i8* %78, i64 0, !dbg !13684
  %79 = bitcast i8* %add.ptr107 to %struct.netdev_hw_addr*, !dbg !13684
  store %struct.netdev_hw_addr* %79, %struct.netdev_hw_addr** %tmp106, align 8, !dbg !13685
  %80 = load %struct.netdev_hw_addr*, %struct.netdev_hw_addr** %tmp106, align 8, !dbg !13684
  store %struct.netdev_hw_addr* %80, %struct.netdev_hw_addr** %ha, align 8, !dbg !13662
  br label %for.cond50, !dbg !13662, !llvm.loop !13687

for.end108:                                       ; preds = %for.cond50
  store i32 16, i32* %hash_reg, align 4, !dbg !13689
  store i32 0, i32* %i, align 4, !dbg !13690
  br label %for.cond109, !dbg !13692

for.cond109:                                      ; preds = %for.inc115, %for.end108
  %81 = load i32, i32* %i, align 4, !dbg !13693
  %82 = load i32, i32* %hash_table_count, align 4, !dbg !13695
  %cmp110 = icmp ult i32 %81, %82, !dbg !13696
  br i1 %cmp110, label %for.body111, label %for.end116, !dbg !13697

for.body111:                                      ; preds = %for.cond109
  %83 = load i32, i32* %i, align 4, !dbg !13698
  %idxprom112 = zext i32 %83 to i64, !dbg !13700
  %arrayidx113 = getelementptr [8 x i32], [8 x i32]* %hash_table, i64 0, i64 %idxprom112, !dbg !13700
  %84 = load i32, i32* %arrayidx113, align 4, !dbg !13700
  %85 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !13701
  %mac_regs = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %85, i32 0, i32 6, !dbg !13702
  %86 = load i8*, i8** %mac_regs, align 8, !dbg !13702
  %87 = load i32, i32* %hash_reg, align 4, !dbg !13703
  %idx.ext = zext i32 %87 to i64, !dbg !13704
  %add.ptr114 = getelementptr i8, i8* %86, i64 %idx.ext, !dbg !13704
  call void @writel(i32 %84, i8* %add.ptr114) #7, !dbg !13705
  %88 = load i32, i32* %hash_reg, align 4, !dbg !13706
  %add = add i32 %88, 4, !dbg !13706
  store i32 %add, i32* %hash_reg, align 4, !dbg !13706
  br label %for.inc115, !dbg !13707

for.inc115:                                       ; preds = %for.body111
  %89 = load i32, i32* %i, align 4, !dbg !13708
  %inc = add i32 %89, 1, !dbg !13708
  store i32 %inc, i32* %i, align 4, !dbg !13708
  br label %for.cond109, !dbg !13709, !llvm.loop !13710

for.end116:                                       ; preds = %for.cond109
  ret void, !dbg !13712
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @xlgmac_set_mac_addn_addrs(%struct.xlgmac_pdata* %pdata) #0 !dbg !13713 {
entry:
  %pdata.addr = alloca %struct.xlgmac_pdata*, align 8
  %netdev = alloca %struct.net_device*, align 8
  %ha = alloca %struct.netdev_hw_addr*, align 8
  %addn_macs = alloca i32, align 4
  %mac_reg = alloca i32, align 4
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.netdev_hw_addr*, align 8
  %__mptr7 = alloca i8*, align 8
  %tmp12 = alloca %struct.netdev_hw_addr*, align 8
  %__mptr19 = alloca i8*, align 8
  %tmp25 = alloca %struct.netdev_hw_addr*, align 8
  %__mptr36 = alloca i8*, align 8
  %tmp41 = alloca %struct.netdev_hw_addr*, align 8
  store %struct.xlgmac_pdata* %pdata, %struct.xlgmac_pdata** %pdata.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xlgmac_pdata** %pdata.addr, metadata !13714, metadata !DIExpression()), !dbg !13715
  call void @llvm.dbg.declare(metadata %struct.net_device** %netdev, metadata !13716, metadata !DIExpression()), !dbg !13717
  %0 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !13718
  %netdev1 = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %0, i32 0, i32 0, !dbg !13719
  %1 = load %struct.net_device*, %struct.net_device** %netdev1, align 8, !dbg !13719
  store %struct.net_device* %1, %struct.net_device** %netdev, align 8, !dbg !13717
  call void @llvm.dbg.declare(metadata %struct.netdev_hw_addr** %ha, metadata !13720, metadata !DIExpression()), !dbg !13721
  call void @llvm.dbg.declare(metadata i32* %addn_macs, metadata !13722, metadata !DIExpression()), !dbg !13723
  call void @llvm.dbg.declare(metadata i32* %mac_reg, metadata !13724, metadata !DIExpression()), !dbg !13725
  store i32 776, i32* %mac_reg, align 4, !dbg !13726
  %2 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !13727
  %hw_feat = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %2, i32 0, i32 7, !dbg !13728
  %addn_mac = getelementptr inbounds %struct.xlgmac_hw_features, %struct.xlgmac_hw_features* %hw_feat, i32 0, i32 12, !dbg !13729
  %3 = load i32, i32* %addn_mac, align 8, !dbg !13729
  store i32 %3, i32* %addn_macs, align 4, !dbg !13730
  %4 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !13731
  %uc = getelementptr inbounds %struct.net_device, %struct.net_device* %4, i32 0, i32 62, !dbg !13731
  %count = getelementptr inbounds %struct.netdev_hw_addr_list, %struct.netdev_hw_addr_list* %uc, i32 0, i32 1, !dbg !13731
  %5 = load i32, i32* %count, align 8, !dbg !13731
  %6 = load i32, i32* %addn_macs, align 4, !dbg !13733
  %cmp = icmp ugt i32 %5, %6, !dbg !13734
  br i1 %cmp, label %if.then, label %if.else, !dbg !13735

if.then:                                          ; preds = %entry
  %7 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !13736
  %call = call i32 @xlgmac_set_promiscuous_mode(%struct.xlgmac_pdata* %7, i32 1) #7, !dbg !13738
  br label %if.end44, !dbg !13739

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !13740, metadata !DIExpression()), !dbg !13744
  %8 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !13744
  %uc2 = getelementptr inbounds %struct.net_device, %struct.net_device* %8, i32 0, i32 62, !dbg !13744
  %list = getelementptr inbounds %struct.netdev_hw_addr_list, %struct.netdev_hw_addr_list* %uc2, i32 0, i32 0, !dbg !13744
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %list, i32 0, i32 0, !dbg !13744
  %9 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !13744
  %10 = bitcast %struct.list_head* %9 to i8*, !dbg !13744
  store i8* %10, i8** %__mptr, align 8, !dbg !13744
  br label %do.body, !dbg !13744

do.body:                                          ; preds = %if.else
  br label %do.end, !dbg !13745

do.end:                                           ; preds = %do.body
  %11 = load i8*, i8** %__mptr, align 8, !dbg !13744
  %add.ptr = getelementptr i8, i8* %11, i64 0, !dbg !13744
  %12 = bitcast i8* %add.ptr to %struct.netdev_hw_addr*, !dbg !13744
  store %struct.netdev_hw_addr* %12, %struct.netdev_hw_addr** %tmp, align 8, !dbg !13745
  %13 = load %struct.netdev_hw_addr*, %struct.netdev_hw_addr** %tmp, align 8, !dbg !13744
  store %struct.netdev_hw_addr* %13, %struct.netdev_hw_addr** %ha, align 8, !dbg !13747
  br label %for.cond, !dbg !13747

for.cond:                                         ; preds = %do.end11, %do.end
  %14 = load %struct.netdev_hw_addr*, %struct.netdev_hw_addr** %ha, align 8, !dbg !13748
  %list3 = getelementptr inbounds %struct.netdev_hw_addr, %struct.netdev_hw_addr* %14, i32 0, i32 0, !dbg !13748
  %15 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !13748
  %uc4 = getelementptr inbounds %struct.net_device, %struct.net_device* %15, i32 0, i32 62, !dbg !13748
  %list5 = getelementptr inbounds %struct.netdev_hw_addr_list, %struct.netdev_hw_addr_list* %uc4, i32 0, i32 0, !dbg !13748
  %cmp6 = icmp eq %struct.list_head* %list3, %list5, !dbg !13748
  %lnot = xor i1 %cmp6, true, !dbg !13748
  br i1 %lnot, label %for.body, label %for.end, !dbg !13747

for.body:                                         ; preds = %for.cond
  %16 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !13750
  %17 = load %struct.netdev_hw_addr*, %struct.netdev_hw_addr** %ha, align 8, !dbg !13752
  call void @xlgmac_set_mac_reg(%struct.xlgmac_pdata* %16, %struct.netdev_hw_addr* %17, i32* %mac_reg) #7, !dbg !13753
  %18 = load i32, i32* %addn_macs, align 4, !dbg !13754
  %dec = add i32 %18, -1, !dbg !13754
  store i32 %dec, i32* %addn_macs, align 4, !dbg !13754
  br label %for.inc, !dbg !13755

for.inc:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata i8** %__mptr7, metadata !13756, metadata !DIExpression()), !dbg !13758
  %19 = load %struct.netdev_hw_addr*, %struct.netdev_hw_addr** %ha, align 8, !dbg !13758
  %list8 = getelementptr inbounds %struct.netdev_hw_addr, %struct.netdev_hw_addr* %19, i32 0, i32 0, !dbg !13758
  %next9 = getelementptr inbounds %struct.list_head, %struct.list_head* %list8, i32 0, i32 0, !dbg !13758
  %20 = load %struct.list_head*, %struct.list_head** %next9, align 8, !dbg !13758
  %21 = bitcast %struct.list_head* %20 to i8*, !dbg !13758
  store i8* %21, i8** %__mptr7, align 8, !dbg !13758
  br label %do.body10, !dbg !13758

do.body10:                                        ; preds = %for.inc
  br label %do.end11, !dbg !13759

do.end11:                                         ; preds = %do.body10
  %22 = load i8*, i8** %__mptr7, align 8, !dbg !13758
  %add.ptr13 = getelementptr i8, i8* %22, i64 0, !dbg !13758
  %23 = bitcast i8* %add.ptr13 to %struct.netdev_hw_addr*, !dbg !13758
  store %struct.netdev_hw_addr* %23, %struct.netdev_hw_addr** %tmp12, align 8, !dbg !13759
  %24 = load %struct.netdev_hw_addr*, %struct.netdev_hw_addr** %tmp12, align 8, !dbg !13758
  store %struct.netdev_hw_addr* %24, %struct.netdev_hw_addr** %ha, align 8, !dbg !13748
  br label %for.cond, !dbg !13748, !llvm.loop !13761

for.end:                                          ; preds = %for.cond
  %25 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !13763
  %mc = getelementptr inbounds %struct.net_device, %struct.net_device* %25, i32 0, i32 63, !dbg !13763
  %count14 = getelementptr inbounds %struct.netdev_hw_addr_list, %struct.netdev_hw_addr_list* %mc, i32 0, i32 1, !dbg !13763
  %26 = load i32, i32* %count14, align 8, !dbg !13763
  %27 = load i32, i32* %addn_macs, align 4, !dbg !13765
  %cmp15 = icmp ugt i32 %26, %27, !dbg !13766
  br i1 %cmp15, label %if.then16, label %if.else18, !dbg !13767

if.then16:                                        ; preds = %for.end
  %28 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !13768
  %call17 = call i32 @xlgmac_set_all_multicast_mode(%struct.xlgmac_pdata* %28, i32 1) #7, !dbg !13770
  br label %if.end, !dbg !13771

if.else18:                                        ; preds = %for.end
  call void @llvm.dbg.declare(metadata i8** %__mptr19, metadata !13772, metadata !DIExpression()), !dbg !13776
  %29 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !13776
  %mc20 = getelementptr inbounds %struct.net_device, %struct.net_device* %29, i32 0, i32 63, !dbg !13776
  %list21 = getelementptr inbounds %struct.netdev_hw_addr_list, %struct.netdev_hw_addr_list* %mc20, i32 0, i32 0, !dbg !13776
  %next22 = getelementptr inbounds %struct.list_head, %struct.list_head* %list21, i32 0, i32 0, !dbg !13776
  %30 = load %struct.list_head*, %struct.list_head** %next22, align 8, !dbg !13776
  %31 = bitcast %struct.list_head* %30 to i8*, !dbg !13776
  store i8* %31, i8** %__mptr19, align 8, !dbg !13776
  br label %do.body23, !dbg !13776

do.body23:                                        ; preds = %if.else18
  br label %do.end24, !dbg !13777

do.end24:                                         ; preds = %do.body23
  %32 = load i8*, i8** %__mptr19, align 8, !dbg !13776
  %add.ptr26 = getelementptr i8, i8* %32, i64 0, !dbg !13776
  %33 = bitcast i8* %add.ptr26 to %struct.netdev_hw_addr*, !dbg !13776
  store %struct.netdev_hw_addr* %33, %struct.netdev_hw_addr** %tmp25, align 8, !dbg !13777
  %34 = load %struct.netdev_hw_addr*, %struct.netdev_hw_addr** %tmp25, align 8, !dbg !13776
  store %struct.netdev_hw_addr* %34, %struct.netdev_hw_addr** %ha, align 8, !dbg !13779
  br label %for.cond27, !dbg !13779

for.cond27:                                       ; preds = %do.end40, %do.end24
  %35 = load %struct.netdev_hw_addr*, %struct.netdev_hw_addr** %ha, align 8, !dbg !13780
  %list28 = getelementptr inbounds %struct.netdev_hw_addr, %struct.netdev_hw_addr* %35, i32 0, i32 0, !dbg !13780
  %36 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !13780
  %mc29 = getelementptr inbounds %struct.net_device, %struct.net_device* %36, i32 0, i32 63, !dbg !13780
  %list30 = getelementptr inbounds %struct.netdev_hw_addr_list, %struct.netdev_hw_addr_list* %mc29, i32 0, i32 0, !dbg !13780
  %cmp31 = icmp eq %struct.list_head* %list28, %list30, !dbg !13780
  %lnot32 = xor i1 %cmp31, true, !dbg !13780
  br i1 %lnot32, label %for.body33, label %for.end43, !dbg !13779

for.body33:                                       ; preds = %for.cond27
  %37 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !13782
  %38 = load %struct.netdev_hw_addr*, %struct.netdev_hw_addr** %ha, align 8, !dbg !13784
  call void @xlgmac_set_mac_reg(%struct.xlgmac_pdata* %37, %struct.netdev_hw_addr* %38, i32* %mac_reg) #7, !dbg !13785
  %39 = load i32, i32* %addn_macs, align 4, !dbg !13786
  %dec34 = add i32 %39, -1, !dbg !13786
  store i32 %dec34, i32* %addn_macs, align 4, !dbg !13786
  br label %for.inc35, !dbg !13787

for.inc35:                                        ; preds = %for.body33
  call void @llvm.dbg.declare(metadata i8** %__mptr36, metadata !13788, metadata !DIExpression()), !dbg !13790
  %40 = load %struct.netdev_hw_addr*, %struct.netdev_hw_addr** %ha, align 8, !dbg !13790
  %list37 = getelementptr inbounds %struct.netdev_hw_addr, %struct.netdev_hw_addr* %40, i32 0, i32 0, !dbg !13790
  %next38 = getelementptr inbounds %struct.list_head, %struct.list_head* %list37, i32 0, i32 0, !dbg !13790
  %41 = load %struct.list_head*, %struct.list_head** %next38, align 8, !dbg !13790
  %42 = bitcast %struct.list_head* %41 to i8*, !dbg !13790
  store i8* %42, i8** %__mptr36, align 8, !dbg !13790
  br label %do.body39, !dbg !13790

do.body39:                                        ; preds = %for.inc35
  br label %do.end40, !dbg !13791

do.end40:                                         ; preds = %do.body39
  %43 = load i8*, i8** %__mptr36, align 8, !dbg !13790
  %add.ptr42 = getelementptr i8, i8* %43, i64 0, !dbg !13790
  %44 = bitcast i8* %add.ptr42 to %struct.netdev_hw_addr*, !dbg !13790
  store %struct.netdev_hw_addr* %44, %struct.netdev_hw_addr** %tmp41, align 8, !dbg !13791
  %45 = load %struct.netdev_hw_addr*, %struct.netdev_hw_addr** %tmp41, align 8, !dbg !13790
  store %struct.netdev_hw_addr* %45, %struct.netdev_hw_addr** %ha, align 8, !dbg !13780
  br label %for.cond27, !dbg !13780, !llvm.loop !13793

for.end43:                                        ; preds = %for.cond27
  br label %if.end

if.end:                                           ; preds = %for.end43, %if.then16
  br label %if.end44

if.end44:                                         ; preds = %if.end, %if.then
  br label %while.cond, !dbg !13795

while.cond:                                       ; preds = %while.body, %if.end44
  %46 = load i32, i32* %addn_macs, align 4, !dbg !13796
  %dec45 = add i32 %46, -1, !dbg !13796
  store i32 %dec45, i32* %addn_macs, align 4, !dbg !13796
  %tobool = icmp ne i32 %46, 0, !dbg !13795
  br i1 %tobool, label %while.body, label %while.end, !dbg !13795

while.body:                                       ; preds = %while.cond
  %47 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !13797
  call void @xlgmac_set_mac_reg(%struct.xlgmac_pdata* %47, %struct.netdev_hw_addr* null, i32* %mac_reg) #7, !dbg !13798
  br label %while.cond, !dbg !13795, !llvm.loop !13799

while.end:                                        ; preds = %while.cond
  ret void, !dbg !13801
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

; Function Attrs: noredzone nounwind readonly
declare dso_local i32 @crc32_le(i32, i8*, i64) #5

; Function Attrs: nounwind readnone willreturn
declare i1 @llvm.is.constant.i32(i32) #6

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @__bitrev32(i32 %x) #0 !dbg !13802 {
entry:
  %x.addr = alloca i32, align 4
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !13806, metadata !DIExpression()), !dbg !13807
  %0 = load i32, i32* %x.addr, align 4, !dbg !13808
  %and = and i32 %0, 65535, !dbg !13809
  %conv = trunc i32 %and to i16, !dbg !13808
  %call = call zeroext i16 @__bitrev16(i16 zeroext %conv) #7, !dbg !13810
  %conv1 = zext i16 %call to i32, !dbg !13810
  %shl = shl i32 %conv1, 16, !dbg !13811
  %1 = load i32, i32* %x.addr, align 4, !dbg !13812
  %shr = lshr i32 %1, 16, !dbg !13813
  %conv2 = trunc i32 %shr to i16, !dbg !13812
  %call3 = call zeroext i16 @__bitrev16(i16 zeroext %conv2) #7, !dbg !13814
  %conv4 = zext i16 %call3 to i32, !dbg !13814
  %or = or i32 %shl, %conv4, !dbg !13815
  ret i32 %or, !dbg !13816
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i16 @__bitrev16(i16 zeroext %x) #0 !dbg !13817 {
entry:
  %x.addr = alloca i16, align 2
  store i16 %x, i16* %x.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %x.addr, metadata !13820, metadata !DIExpression()), !dbg !13821
  %0 = load i16, i16* %x.addr, align 2, !dbg !13822
  %conv = zext i16 %0 to i32, !dbg !13822
  %and = and i32 %conv, 255, !dbg !13823
  %conv1 = trunc i32 %and to i8, !dbg !13822
  %call = call zeroext i8 @__bitrev8(i8 zeroext %conv1) #7, !dbg !13824
  %conv2 = zext i8 %call to i32, !dbg !13824
  %shl = shl i32 %conv2, 8, !dbg !13825
  %1 = load i16, i16* %x.addr, align 2, !dbg !13826
  %conv3 = zext i16 %1 to i32, !dbg !13826
  %shr = ashr i32 %conv3, 8, !dbg !13827
  %conv4 = trunc i32 %shr to i8, !dbg !13826
  %call5 = call zeroext i8 @__bitrev8(i8 zeroext %conv4) #7, !dbg !13828
  %conv6 = zext i8 %call5 to i32, !dbg !13828
  %or = or i32 %shl, %conv6, !dbg !13829
  %conv7 = trunc i32 %or to i16, !dbg !13830
  ret i16 %conv7, !dbg !13831
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i8 @__bitrev8(i8 zeroext %byte) #0 !dbg !13832 {
entry:
  %byte.addr = alloca i8, align 1
  store i8 %byte, i8* %byte.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %byte.addr, metadata !13835, metadata !DIExpression()), !dbg !13836
  %0 = load i8, i8* %byte.addr, align 1, !dbg !13837
  %idxprom = zext i8 %0 to i64, !dbg !13838
  %arrayidx = getelementptr [256 x i8], [256 x i8]* @byte_rev_table, i64 0, i64 %idxprom, !dbg !13838
  %1 = load i8, i8* %arrayidx, align 1, !dbg !13838
  ret i8 %1, !dbg !13839
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @xlgmac_set_mac_reg(%struct.xlgmac_pdata* %pdata, %struct.netdev_hw_addr* %ha, i32* %mac_reg) #0 !dbg !13840 {
entry:
  %pdata.addr = alloca %struct.xlgmac_pdata*, align 8
  %ha.addr = alloca %struct.netdev_hw_addr*, align 8
  %mac_reg.addr = alloca i32*, align 8
  %mac_addr_hi = alloca i32, align 4
  %mac_addr_lo = alloca i32, align 4
  %mac_addr = alloca i8*, align 8
  %tmp = alloca i32, align 4
  %_var = alloca i32, align 4
  %_pos = alloca i32, align 4
  %_len = alloca i32, align 4
  %_val = alloca i32, align 4
  %tmp25 = alloca i32, align 4
  store %struct.xlgmac_pdata* %pdata, %struct.xlgmac_pdata** %pdata.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xlgmac_pdata** %pdata.addr, metadata !13843, metadata !DIExpression()), !dbg !13844
  store %struct.netdev_hw_addr* %ha, %struct.netdev_hw_addr** %ha.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.netdev_hw_addr** %ha.addr, metadata !13845, metadata !DIExpression()), !dbg !13846
  store i32* %mac_reg, i32** %mac_reg.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %mac_reg.addr, metadata !13847, metadata !DIExpression()), !dbg !13848
  call void @llvm.dbg.declare(metadata i32* %mac_addr_hi, metadata !13849, metadata !DIExpression()), !dbg !13850
  call void @llvm.dbg.declare(metadata i32* %mac_addr_lo, metadata !13851, metadata !DIExpression()), !dbg !13852
  call void @llvm.dbg.declare(metadata i8** %mac_addr, metadata !13853, metadata !DIExpression()), !dbg !13854
  store i32 0, i32* %mac_addr_lo, align 4, !dbg !13855
  store i32 0, i32* %mac_addr_hi, align 4, !dbg !13856
  %0 = load %struct.netdev_hw_addr*, %struct.netdev_hw_addr** %ha.addr, align 8, !dbg !13857
  %tobool = icmp ne %struct.netdev_hw_addr* %0, null, !dbg !13857
  br i1 %tobool, label %if.then, label %if.end, !dbg !13859

if.then:                                          ; preds = %entry
  %1 = bitcast i32* %mac_addr_lo to i8*, !dbg !13860
  store i8* %1, i8** %mac_addr, align 8, !dbg !13862
  %2 = load %struct.netdev_hw_addr*, %struct.netdev_hw_addr** %ha.addr, align 8, !dbg !13863
  %addr = getelementptr inbounds %struct.netdev_hw_addr, %struct.netdev_hw_addr* %2, i32 0, i32 1, !dbg !13864
  %arrayidx = getelementptr [32 x i8], [32 x i8]* %addr, i64 0, i64 0, !dbg !13863
  %3 = load i8, i8* %arrayidx, align 8, !dbg !13863
  %4 = load i8*, i8** %mac_addr, align 8, !dbg !13865
  %arrayidx1 = getelementptr i8, i8* %4, i64 0, !dbg !13865
  store i8 %3, i8* %arrayidx1, align 1, !dbg !13866
  %5 = load %struct.netdev_hw_addr*, %struct.netdev_hw_addr** %ha.addr, align 8, !dbg !13867
  %addr2 = getelementptr inbounds %struct.netdev_hw_addr, %struct.netdev_hw_addr* %5, i32 0, i32 1, !dbg !13868
  %arrayidx3 = getelementptr [32 x i8], [32 x i8]* %addr2, i64 0, i64 1, !dbg !13867
  %6 = load i8, i8* %arrayidx3, align 1, !dbg !13867
  %7 = load i8*, i8** %mac_addr, align 8, !dbg !13869
  %arrayidx4 = getelementptr i8, i8* %7, i64 1, !dbg !13869
  store i8 %6, i8* %arrayidx4, align 1, !dbg !13870
  %8 = load %struct.netdev_hw_addr*, %struct.netdev_hw_addr** %ha.addr, align 8, !dbg !13871
  %addr5 = getelementptr inbounds %struct.netdev_hw_addr, %struct.netdev_hw_addr* %8, i32 0, i32 1, !dbg !13872
  %arrayidx6 = getelementptr [32 x i8], [32 x i8]* %addr5, i64 0, i64 2, !dbg !13871
  %9 = load i8, i8* %arrayidx6, align 2, !dbg !13871
  %10 = load i8*, i8** %mac_addr, align 8, !dbg !13873
  %arrayidx7 = getelementptr i8, i8* %10, i64 2, !dbg !13873
  store i8 %9, i8* %arrayidx7, align 1, !dbg !13874
  %11 = load %struct.netdev_hw_addr*, %struct.netdev_hw_addr** %ha.addr, align 8, !dbg !13875
  %addr8 = getelementptr inbounds %struct.netdev_hw_addr, %struct.netdev_hw_addr* %11, i32 0, i32 1, !dbg !13876
  %arrayidx9 = getelementptr [32 x i8], [32 x i8]* %addr8, i64 0, i64 3, !dbg !13875
  %12 = load i8, i8* %arrayidx9, align 1, !dbg !13875
  %13 = load i8*, i8** %mac_addr, align 8, !dbg !13877
  %arrayidx10 = getelementptr i8, i8* %13, i64 3, !dbg !13877
  store i8 %12, i8* %arrayidx10, align 1, !dbg !13878
  %14 = bitcast i32* %mac_addr_hi to i8*, !dbg !13879
  store i8* %14, i8** %mac_addr, align 8, !dbg !13880
  %15 = load %struct.netdev_hw_addr*, %struct.netdev_hw_addr** %ha.addr, align 8, !dbg !13881
  %addr11 = getelementptr inbounds %struct.netdev_hw_addr, %struct.netdev_hw_addr* %15, i32 0, i32 1, !dbg !13882
  %arrayidx12 = getelementptr [32 x i8], [32 x i8]* %addr11, i64 0, i64 4, !dbg !13881
  %16 = load i8, i8* %arrayidx12, align 4, !dbg !13881
  %17 = load i8*, i8** %mac_addr, align 8, !dbg !13883
  %arrayidx13 = getelementptr i8, i8* %17, i64 0, !dbg !13883
  store i8 %16, i8* %arrayidx13, align 1, !dbg !13884
  %18 = load %struct.netdev_hw_addr*, %struct.netdev_hw_addr** %ha.addr, align 8, !dbg !13885
  %addr14 = getelementptr inbounds %struct.netdev_hw_addr, %struct.netdev_hw_addr* %18, i32 0, i32 1, !dbg !13886
  %arrayidx15 = getelementptr [32 x i8], [32 x i8]* %addr14, i64 0, i64 5, !dbg !13885
  %19 = load i8, i8* %arrayidx15, align 1, !dbg !13885
  %20 = load i8*, i8** %mac_addr, align 8, !dbg !13887
  %arrayidx16 = getelementptr i8, i8* %20, i64 1, !dbg !13887
  store i8 %19, i8* %arrayidx16, align 1, !dbg !13888
  store i32 0, i32* %tmp, align 4, !dbg !13889
  %21 = load i32, i32* %tmp, align 4, !dbg !13892
  call void @llvm.dbg.declare(metadata i32* %_var, metadata !13893, metadata !DIExpression()), !dbg !13895
  %22 = load i32, i32* %mac_addr_hi, align 4, !dbg !13895
  store i32 %22, i32* %_var, align 4, !dbg !13895
  call void @llvm.dbg.declare(metadata i32* %_pos, metadata !13896, metadata !DIExpression()), !dbg !13895
  store i32 31, i32* %_pos, align 4, !dbg !13895
  call void @llvm.dbg.declare(metadata i32* %_len, metadata !13897, metadata !DIExpression()), !dbg !13895
  store i32 1, i32* %_len, align 4, !dbg !13895
  call void @llvm.dbg.declare(metadata i32* %_val, metadata !13898, metadata !DIExpression()), !dbg !13895
  store i32 1, i32* %_val, align 4, !dbg !13895
  %23 = load i32, i32* %_val, align 4, !dbg !13895
  %24 = load i32, i32* %_pos, align 4, !dbg !13895
  %shl = shl i32 %23, %24, !dbg !13895
  %conv = sext i32 %shl to i64, !dbg !13895
  %25 = load i32, i32* %_pos, align 4, !dbg !13895
  %sh_prom = zext i32 %25 to i64, !dbg !13895
  %shl17 = shl i64 1, %sh_prom, !dbg !13895
  %sub = sub i64 -1, %shl17, !dbg !13895
  %add = add i64 %sub, 1, !dbg !13895
  %26 = load i32, i32* %_pos, align 4, !dbg !13895
  %27 = load i32, i32* %_len, align 4, !dbg !13895
  %add18 = add i32 %26, %27, !dbg !13895
  %sub19 = sub i32 %add18, 1, !dbg !13895
  %sub20 = sub i32 63, %sub19, !dbg !13895
  %sh_prom21 = zext i32 %sub20 to i64, !dbg !13895
  %shr = lshr i64 -1, %sh_prom21, !dbg !13895
  %and = and i64 %add, %shr, !dbg !13895
  %add22 = add i64 0, %and, !dbg !13895
  %and23 = and i64 %conv, %add22, !dbg !13895
  %conv24 = trunc i64 %and23 to i32, !dbg !13895
  store i32 %conv24, i32* %_val, align 4, !dbg !13895
  %28 = load i32, i32* %_var, align 4, !dbg !13895
  %conv26 = zext i32 %28 to i64, !dbg !13895
  %29 = load i32, i32* %_pos, align 4, !dbg !13895
  %sh_prom27 = zext i32 %29 to i64, !dbg !13895
  %shl28 = shl i64 1, %sh_prom27, !dbg !13895
  %sub29 = sub i64 -1, %shl28, !dbg !13895
  %add30 = add i64 %sub29, 1, !dbg !13895
  %30 = load i32, i32* %_pos, align 4, !dbg !13895
  %31 = load i32, i32* %_len, align 4, !dbg !13895
  %add31 = add i32 %30, %31, !dbg !13895
  %sub32 = sub i32 %add31, 1, !dbg !13895
  %sub33 = sub i32 63, %sub32, !dbg !13895
  %sh_prom34 = zext i32 %sub33 to i64, !dbg !13895
  %shr35 = lshr i64 -1, %sh_prom34, !dbg !13895
  %and36 = and i64 %add30, %shr35, !dbg !13895
  %add37 = add i64 0, %and36, !dbg !13895
  %neg = xor i64 %add37, -1, !dbg !13895
  %and38 = and i64 %conv26, %neg, !dbg !13895
  %32 = load i32, i32* %_val, align 4, !dbg !13895
  %conv39 = sext i32 %32 to i64, !dbg !13895
  %or = or i64 %and38, %conv39, !dbg !13895
  %conv40 = trunc i64 %or to i32, !dbg !13895
  store i32 %conv40, i32* %_var, align 4, !dbg !13895
  store i32 %conv40, i32* %tmp25, align 4, !dbg !13895
  %33 = load i32, i32* %tmp25, align 4, !dbg !13895
  store i32 %33, i32* %mac_addr_hi, align 4, !dbg !13899
  br label %if.end, !dbg !13900

if.end:                                           ; preds = %if.then, %entry
  %34 = load i32, i32* %mac_addr_hi, align 4, !dbg !13901
  %35 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !13902
  %mac_regs = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %35, i32 0, i32 6, !dbg !13903
  %36 = load i8*, i8** %mac_regs, align 8, !dbg !13903
  %37 = load i32*, i32** %mac_reg.addr, align 8, !dbg !13904
  %38 = load i32, i32* %37, align 4, !dbg !13905
  %idx.ext = zext i32 %38 to i64, !dbg !13906
  %add.ptr = getelementptr i8, i8* %36, i64 %idx.ext, !dbg !13906
  call void @writel(i32 %34, i8* %add.ptr) #7, !dbg !13907
  %39 = load i32*, i32** %mac_reg.addr, align 8, !dbg !13908
  %40 = load i32, i32* %39, align 4, !dbg !13909
  %add41 = add i32 %40, 4, !dbg !13909
  store i32 %add41, i32* %39, align 4, !dbg !13909
  %41 = load i32, i32* %mac_addr_lo, align 4, !dbg !13910
  %42 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !13911
  %mac_regs42 = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %42, i32 0, i32 6, !dbg !13912
  %43 = load i8*, i8** %mac_regs42, align 8, !dbg !13912
  %44 = load i32*, i32** %mac_reg.addr, align 8, !dbg !13913
  %45 = load i32, i32* %44, align 4, !dbg !13914
  %idx.ext43 = zext i32 %45 to i64, !dbg !13915
  %add.ptr44 = getelementptr i8, i8* %43, i64 %idx.ext43, !dbg !13915
  call void @writel(i32 %41, i8* %add.ptr44) #7, !dbg !13916
  %46 = load i32*, i32** %mac_reg.addr, align 8, !dbg !13917
  %47 = load i32, i32* %46, align 4, !dbg !13918
  %add45 = add i32 %47, 4, !dbg !13918
  store i32 %add45, i32* %46, align 4, !dbg !13918
  ret void, !dbg !13919
}

; Function Attrs: noredzone
declare dso_local i32 @mod_timer(%struct.timer_list*, i64) #2

; Function Attrs: noredzone
declare dso_local i32 @jiffies_to_usecs(i64) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @_usecs_to_jiffies(i32 %u) #0 !dbg !13920 {
entry:
  %u.addr = alloca i32, align 4
  store i32 %u, i32* %u.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %u.addr, metadata !13921, metadata !DIExpression()), !dbg !13922
  %0 = load i32, i32* %u.addr, align 4, !dbg !13923
  %conv = zext i32 %0 to i64, !dbg !13923
  %add = add i64 %conv, 4000, !dbg !13924
  %sub = sub i64 %add, 1, !dbg !13925
  %div = sdiv i64 %sub, 4000, !dbg !13926
  ret i64 %div, !dbg !13927
}

; Function Attrs: noredzone
declare dso_local i64 @__usecs_to_jiffies(i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @xlgmac_enable_tx_flow_control(%struct.xlgmac_pdata* %pdata) #0 !dbg !13928 {
entry:
  %pdata.addr = alloca %struct.xlgmac_pdata*, align 8
  %max_q_count = alloca i32, align 4
  %q_count = alloca i32, align 4
  %reg = alloca i32, align 4
  %regval = alloca i32, align 4
  %i = alloca i32, align 4
  %_var = alloca i32, align 4
  %_pos = alloca i32, align 4
  %_len = alloca i32, align 4
  %_val = alloca i32, align 4
  %tmp = alloca i32, align 4
  %__UNIQUE_ID___x332 = alloca i32, align 4
  %__UNIQUE_ID___y333 = alloca i32, align 4
  %tmp32 = alloca i32, align 4
  %_var43 = alloca i32, align 4
  %_pos44 = alloca i32, align 4
  %_len45 = alloca i32, align 4
  %_val46 = alloca i32, align 4
  %tmp62 = alloca i32, align 4
  %_var80 = alloca i32, align 4
  %_pos81 = alloca i32, align 4
  %_len82 = alloca i32, align 4
  %_val83 = alloca i32, align 4
  %tmp99 = alloca i32, align 4
  store %struct.xlgmac_pdata* %pdata, %struct.xlgmac_pdata** %pdata.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xlgmac_pdata** %pdata.addr, metadata !13929, metadata !DIExpression()), !dbg !13930
  call void @llvm.dbg.declare(metadata i32* %max_q_count, metadata !13931, metadata !DIExpression()), !dbg !13932
  call void @llvm.dbg.declare(metadata i32* %q_count, metadata !13933, metadata !DIExpression()), !dbg !13934
  call void @llvm.dbg.declare(metadata i32* %reg, metadata !13935, metadata !DIExpression()), !dbg !13936
  call void @llvm.dbg.declare(metadata i32* %regval, metadata !13937, metadata !DIExpression()), !dbg !13938
  call void @llvm.dbg.declare(metadata i32* %i, metadata !13939, metadata !DIExpression()), !dbg !13940
  store i32 0, i32* %i, align 4, !dbg !13941
  br label %for.cond, !dbg !13943

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !13944
  %1 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !13946
  %rx_q_count = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %1, i32 0, i32 16, !dbg !13947
  %2 = load i32, i32* %rx_q_count, align 8, !dbg !13947
  %cmp = icmp ult i32 %0, %2, !dbg !13948
  br i1 %cmp, label %for.body, label %for.end, !dbg !13949

for.body:                                         ; preds = %for.cond
  %3 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !13950
  %mac_regs = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %3, i32 0, i32 6, !dbg !13950
  %4 = load i8*, i8** %mac_regs, align 8, !dbg !13950
  %add.ptr = getelementptr i8, i8* %4, i64 4352, !dbg !13950
  %5 = load i32, i32* %i, align 4, !dbg !13950
  %mul = mul i32 %5, 128, !dbg !13950
  %idx.ext = zext i32 %mul to i64, !dbg !13950
  %add.ptr1 = getelementptr i8, i8* %add.ptr, i64 %idx.ext, !dbg !13950
  %add.ptr2 = getelementptr i8, i8* %add.ptr1, i64 64, !dbg !13950
  %call = call i32 @readl(i8* %add.ptr2) #7, !dbg !13952
  store i32 %call, i32* %regval, align 4, !dbg !13953
  call void @llvm.dbg.declare(metadata i32* %_var, metadata !13954, metadata !DIExpression()), !dbg !13956
  %6 = load i32, i32* %regval, align 4, !dbg !13956
  store i32 %6, i32* %_var, align 4, !dbg !13956
  call void @llvm.dbg.declare(metadata i32* %_pos, metadata !13957, metadata !DIExpression()), !dbg !13956
  store i32 7, i32* %_pos, align 4, !dbg !13956
  call void @llvm.dbg.declare(metadata i32* %_len, metadata !13958, metadata !DIExpression()), !dbg !13956
  store i32 1, i32* %_len, align 4, !dbg !13956
  call void @llvm.dbg.declare(metadata i32* %_val, metadata !13959, metadata !DIExpression()), !dbg !13956
  store i32 1, i32* %_val, align 4, !dbg !13956
  %7 = load i32, i32* %_val, align 4, !dbg !13956
  %8 = load i32, i32* %_pos, align 4, !dbg !13956
  %shl = shl i32 %7, %8, !dbg !13956
  %conv = sext i32 %shl to i64, !dbg !13956
  %9 = load i32, i32* %_pos, align 4, !dbg !13956
  %sh_prom = zext i32 %9 to i64, !dbg !13956
  %shl3 = shl i64 1, %sh_prom, !dbg !13956
  %sub = sub i64 -1, %shl3, !dbg !13956
  %add = add i64 %sub, 1, !dbg !13956
  %10 = load i32, i32* %_pos, align 4, !dbg !13956
  %11 = load i32, i32* %_len, align 4, !dbg !13956
  %add4 = add i32 %10, %11, !dbg !13956
  %sub5 = sub i32 %add4, 1, !dbg !13956
  %sub6 = sub i32 63, %sub5, !dbg !13956
  %sh_prom7 = zext i32 %sub6 to i64, !dbg !13956
  %shr = lshr i64 -1, %sh_prom7, !dbg !13956
  %and = and i64 %add, %shr, !dbg !13956
  %add8 = add i64 0, %and, !dbg !13956
  %and9 = and i64 %conv, %add8, !dbg !13956
  %conv10 = trunc i64 %and9 to i32, !dbg !13956
  store i32 %conv10, i32* %_val, align 4, !dbg !13956
  %12 = load i32, i32* %_var, align 4, !dbg !13956
  %conv11 = zext i32 %12 to i64, !dbg !13956
  %13 = load i32, i32* %_pos, align 4, !dbg !13956
  %sh_prom12 = zext i32 %13 to i64, !dbg !13956
  %shl13 = shl i64 1, %sh_prom12, !dbg !13956
  %sub14 = sub i64 -1, %shl13, !dbg !13956
  %add15 = add i64 %sub14, 1, !dbg !13956
  %14 = load i32, i32* %_pos, align 4, !dbg !13956
  %15 = load i32, i32* %_len, align 4, !dbg !13956
  %add16 = add i32 %14, %15, !dbg !13956
  %sub17 = sub i32 %add16, 1, !dbg !13956
  %sub18 = sub i32 63, %sub17, !dbg !13956
  %sh_prom19 = zext i32 %sub18 to i64, !dbg !13956
  %shr20 = lshr i64 -1, %sh_prom19, !dbg !13956
  %and21 = and i64 %add15, %shr20, !dbg !13956
  %add22 = add i64 0, %and21, !dbg !13956
  %neg = xor i64 %add22, -1, !dbg !13956
  %and23 = and i64 %conv11, %neg, !dbg !13956
  %16 = load i32, i32* %_val, align 4, !dbg !13956
  %conv24 = sext i32 %16 to i64, !dbg !13956
  %or = or i64 %and23, %conv24, !dbg !13956
  %conv25 = trunc i64 %or to i32, !dbg !13956
  store i32 %conv25, i32* %_var, align 4, !dbg !13956
  store i32 %conv25, i32* %tmp, align 4, !dbg !13956
  %17 = load i32, i32* %tmp, align 4, !dbg !13956
  store i32 %17, i32* %regval, align 4, !dbg !13960
  %18 = load i32, i32* %regval, align 4, !dbg !13961
  %19 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !13962
  %mac_regs26 = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %19, i32 0, i32 6, !dbg !13962
  %20 = load i8*, i8** %mac_regs26, align 8, !dbg !13962
  %add.ptr27 = getelementptr i8, i8* %20, i64 4352, !dbg !13962
  %21 = load i32, i32* %i, align 4, !dbg !13962
  %mul28 = mul i32 %21, 128, !dbg !13962
  %idx.ext29 = zext i32 %mul28 to i64, !dbg !13962
  %add.ptr30 = getelementptr i8, i8* %add.ptr27, i64 %idx.ext29, !dbg !13962
  %add.ptr31 = getelementptr i8, i8* %add.ptr30, i64 64, !dbg !13962
  call void @writel(i32 %18, i8* %add.ptr31) #7, !dbg !13963
  br label %for.inc, !dbg !13964

for.inc:                                          ; preds = %for.body
  %22 = load i32, i32* %i, align 4, !dbg !13965
  %inc = add i32 %22, 1, !dbg !13965
  store i32 %inc, i32* %i, align 4, !dbg !13965
  br label %for.cond, !dbg !13966, !llvm.loop !13967

for.end:                                          ; preds = %for.cond
  store i32 8, i32* %max_q_count, align 4, !dbg !13969
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___x332, metadata !13970, metadata !DIExpression()), !dbg !13972
  %23 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !13972
  %tx_q_count = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %23, i32 0, i32 15, !dbg !13972
  %24 = load i32, i32* %tx_q_count, align 4, !dbg !13972
  store i32 %24, i32* %__UNIQUE_ID___x332, align 4, !dbg !13972
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___y333, metadata !13973, metadata !DIExpression()), !dbg !13972
  %25 = load i32, i32* %max_q_count, align 4, !dbg !13972
  store i32 %25, i32* %__UNIQUE_ID___y333, align 4, !dbg !13972
  %26 = load i32, i32* %__UNIQUE_ID___x332, align 4, !dbg !13972
  %27 = load i32, i32* %__UNIQUE_ID___y333, align 4, !dbg !13972
  %cmp33 = icmp ult i32 %26, %27, !dbg !13972
  br i1 %cmp33, label %cond.true, label %cond.false, !dbg !13972

cond.true:                                        ; preds = %for.end
  %28 = load i32, i32* %__UNIQUE_ID___x332, align 4, !dbg !13972
  br label %cond.end, !dbg !13972

cond.false:                                       ; preds = %for.end
  %29 = load i32, i32* %__UNIQUE_ID___y333, align 4, !dbg !13972
  br label %cond.end, !dbg !13972

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %28, %cond.true ], [ %29, %cond.false ], !dbg !13972
  store i32 %cond, i32* %tmp32, align 4, !dbg !13972
  %30 = load i32, i32* %tmp32, align 4, !dbg !13972
  store i32 %30, i32* %q_count, align 4, !dbg !13974
  store i32 112, i32* %reg, align 4, !dbg !13975
  store i32 0, i32* %i, align 4, !dbg !13976
  br label %for.cond35, !dbg !13978

for.cond35:                                       ; preds = %for.inc121, %cond.end
  %31 = load i32, i32* %i, align 4, !dbg !13979
  %32 = load i32, i32* %q_count, align 4, !dbg !13981
  %cmp36 = icmp ult i32 %31, %32, !dbg !13982
  br i1 %cmp36, label %for.body38, label %for.end123, !dbg !13983

for.body38:                                       ; preds = %for.cond35
  %33 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !13984
  %mac_regs39 = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %33, i32 0, i32 6, !dbg !13986
  %34 = load i8*, i8** %mac_regs39, align 8, !dbg !13986
  %35 = load i32, i32* %reg, align 4, !dbg !13987
  %idx.ext40 = zext i32 %35 to i64, !dbg !13988
  %add.ptr41 = getelementptr i8, i8* %34, i64 %idx.ext40, !dbg !13988
  %call42 = call i32 @readl(i8* %add.ptr41) #7, !dbg !13989
  store i32 %call42, i32* %regval, align 4, !dbg !13990
  call void @llvm.dbg.declare(metadata i32* %_var43, metadata !13991, metadata !DIExpression()), !dbg !13993
  %36 = load i32, i32* %regval, align 4, !dbg !13993
  store i32 %36, i32* %_var43, align 4, !dbg !13993
  call void @llvm.dbg.declare(metadata i32* %_pos44, metadata !13994, metadata !DIExpression()), !dbg !13993
  store i32 1, i32* %_pos44, align 4, !dbg !13993
  call void @llvm.dbg.declare(metadata i32* %_len45, metadata !13995, metadata !DIExpression()), !dbg !13993
  store i32 1, i32* %_len45, align 4, !dbg !13993
  call void @llvm.dbg.declare(metadata i32* %_val46, metadata !13996, metadata !DIExpression()), !dbg !13993
  store i32 1, i32* %_val46, align 4, !dbg !13993
  %37 = load i32, i32* %_val46, align 4, !dbg !13993
  %38 = load i32, i32* %_pos44, align 4, !dbg !13993
  %shl47 = shl i32 %37, %38, !dbg !13993
  %conv48 = sext i32 %shl47 to i64, !dbg !13993
  %39 = load i32, i32* %_pos44, align 4, !dbg !13993
  %sh_prom49 = zext i32 %39 to i64, !dbg !13993
  %shl50 = shl i64 1, %sh_prom49, !dbg !13993
  %sub51 = sub i64 -1, %shl50, !dbg !13993
  %add52 = add i64 %sub51, 1, !dbg !13993
  %40 = load i32, i32* %_pos44, align 4, !dbg !13993
  %41 = load i32, i32* %_len45, align 4, !dbg !13993
  %add53 = add i32 %40, %41, !dbg !13993
  %sub54 = sub i32 %add53, 1, !dbg !13993
  %sub55 = sub i32 63, %sub54, !dbg !13993
  %sh_prom56 = zext i32 %sub55 to i64, !dbg !13993
  %shr57 = lshr i64 -1, %sh_prom56, !dbg !13993
  %and58 = and i64 %add52, %shr57, !dbg !13993
  %add59 = add i64 0, %and58, !dbg !13993
  %and60 = and i64 %conv48, %add59, !dbg !13993
  %conv61 = trunc i64 %and60 to i32, !dbg !13993
  store i32 %conv61, i32* %_val46, align 4, !dbg !13993
  %42 = load i32, i32* %_var43, align 4, !dbg !13993
  %conv63 = zext i32 %42 to i64, !dbg !13993
  %43 = load i32, i32* %_pos44, align 4, !dbg !13993
  %sh_prom64 = zext i32 %43 to i64, !dbg !13993
  %shl65 = shl i64 1, %sh_prom64, !dbg !13993
  %sub66 = sub i64 -1, %shl65, !dbg !13993
  %add67 = add i64 %sub66, 1, !dbg !13993
  %44 = load i32, i32* %_pos44, align 4, !dbg !13993
  %45 = load i32, i32* %_len45, align 4, !dbg !13993
  %add68 = add i32 %44, %45, !dbg !13993
  %sub69 = sub i32 %add68, 1, !dbg !13993
  %sub70 = sub i32 63, %sub69, !dbg !13993
  %sh_prom71 = zext i32 %sub70 to i64, !dbg !13993
  %shr72 = lshr i64 -1, %sh_prom71, !dbg !13993
  %and73 = and i64 %add67, %shr72, !dbg !13993
  %add74 = add i64 0, %and73, !dbg !13993
  %neg75 = xor i64 %add74, -1, !dbg !13993
  %and76 = and i64 %conv63, %neg75, !dbg !13993
  %46 = load i32, i32* %_val46, align 4, !dbg !13993
  %conv77 = sext i32 %46 to i64, !dbg !13993
  %or78 = or i64 %and76, %conv77, !dbg !13993
  %conv79 = trunc i64 %or78 to i32, !dbg !13993
  store i32 %conv79, i32* %_var43, align 4, !dbg !13993
  store i32 %conv79, i32* %tmp62, align 4, !dbg !13993
  %47 = load i32, i32* %tmp62, align 4, !dbg !13993
  store i32 %47, i32* %regval, align 4, !dbg !13997
  call void @llvm.dbg.declare(metadata i32* %_var80, metadata !13998, metadata !DIExpression()), !dbg !14000
  %48 = load i32, i32* %regval, align 4, !dbg !14000
  store i32 %48, i32* %_var80, align 4, !dbg !14000
  call void @llvm.dbg.declare(metadata i32* %_pos81, metadata !14001, metadata !DIExpression()), !dbg !14000
  store i32 16, i32* %_pos81, align 4, !dbg !14000
  call void @llvm.dbg.declare(metadata i32* %_len82, metadata !14002, metadata !DIExpression()), !dbg !14000
  store i32 16, i32* %_len82, align 4, !dbg !14000
  call void @llvm.dbg.declare(metadata i32* %_val83, metadata !14003, metadata !DIExpression()), !dbg !14000
  store i32 65535, i32* %_val83, align 4, !dbg !14000
  %49 = load i32, i32* %_val83, align 4, !dbg !14000
  %50 = load i32, i32* %_pos81, align 4, !dbg !14000
  %shl84 = shl i32 %49, %50, !dbg !14000
  %conv85 = sext i32 %shl84 to i64, !dbg !14000
  %51 = load i32, i32* %_pos81, align 4, !dbg !14000
  %sh_prom86 = zext i32 %51 to i64, !dbg !14000
  %shl87 = shl i64 1, %sh_prom86, !dbg !14000
  %sub88 = sub i64 -1, %shl87, !dbg !14000
  %add89 = add i64 %sub88, 1, !dbg !14000
  %52 = load i32, i32* %_pos81, align 4, !dbg !14000
  %53 = load i32, i32* %_len82, align 4, !dbg !14000
  %add90 = add i32 %52, %53, !dbg !14000
  %sub91 = sub i32 %add90, 1, !dbg !14000
  %sub92 = sub i32 63, %sub91, !dbg !14000
  %sh_prom93 = zext i32 %sub92 to i64, !dbg !14000
  %shr94 = lshr i64 -1, %sh_prom93, !dbg !14000
  %and95 = and i64 %add89, %shr94, !dbg !14000
  %add96 = add i64 0, %and95, !dbg !14000
  %and97 = and i64 %conv85, %add96, !dbg !14000
  %conv98 = trunc i64 %and97 to i32, !dbg !14000
  store i32 %conv98, i32* %_val83, align 4, !dbg !14000
  %54 = load i32, i32* %_var80, align 4, !dbg !14000
  %conv100 = zext i32 %54 to i64, !dbg !14000
  %55 = load i32, i32* %_pos81, align 4, !dbg !14000
  %sh_prom101 = zext i32 %55 to i64, !dbg !14000
  %shl102 = shl i64 1, %sh_prom101, !dbg !14000
  %sub103 = sub i64 -1, %shl102, !dbg !14000
  %add104 = add i64 %sub103, 1, !dbg !14000
  %56 = load i32, i32* %_pos81, align 4, !dbg !14000
  %57 = load i32, i32* %_len82, align 4, !dbg !14000
  %add105 = add i32 %56, %57, !dbg !14000
  %sub106 = sub i32 %add105, 1, !dbg !14000
  %sub107 = sub i32 63, %sub106, !dbg !14000
  %sh_prom108 = zext i32 %sub107 to i64, !dbg !14000
  %shr109 = lshr i64 -1, %sh_prom108, !dbg !14000
  %and110 = and i64 %add104, %shr109, !dbg !14000
  %add111 = add i64 0, %and110, !dbg !14000
  %neg112 = xor i64 %add111, -1, !dbg !14000
  %and113 = and i64 %conv100, %neg112, !dbg !14000
  %58 = load i32, i32* %_val83, align 4, !dbg !14000
  %conv114 = sext i32 %58 to i64, !dbg !14000
  %or115 = or i64 %and113, %conv114, !dbg !14000
  %conv116 = trunc i64 %or115 to i32, !dbg !14000
  store i32 %conv116, i32* %_var80, align 4, !dbg !14000
  store i32 %conv116, i32* %tmp99, align 4, !dbg !14000
  %59 = load i32, i32* %tmp99, align 4, !dbg !14000
  store i32 %59, i32* %regval, align 4, !dbg !14004
  %60 = load i32, i32* %regval, align 4, !dbg !14005
  %61 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !14006
  %mac_regs117 = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %61, i32 0, i32 6, !dbg !14007
  %62 = load i8*, i8** %mac_regs117, align 8, !dbg !14007
  %63 = load i32, i32* %reg, align 4, !dbg !14008
  %idx.ext118 = zext i32 %63 to i64, !dbg !14009
  %add.ptr119 = getelementptr i8, i8* %62, i64 %idx.ext118, !dbg !14009
  call void @writel(i32 %60, i8* %add.ptr119) #7, !dbg !14010
  %64 = load i32, i32* %reg, align 4, !dbg !14011
  %add120 = add i32 %64, 4, !dbg !14011
  store i32 %add120, i32* %reg, align 4, !dbg !14011
  br label %for.inc121, !dbg !14012

for.inc121:                                       ; preds = %for.body38
  %65 = load i32, i32* %i, align 4, !dbg !14013
  %inc122 = add i32 %65, 1, !dbg !14013
  store i32 %inc122, i32* %i, align 4, !dbg !14013
  br label %for.cond35, !dbg !14014, !llvm.loop !14015

for.end123:                                       ; preds = %for.cond35
  ret i32 0, !dbg !14017
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @xlgmac_disable_tx_flow_control(%struct.xlgmac_pdata* %pdata) #0 !dbg !14018 {
entry:
  %pdata.addr = alloca %struct.xlgmac_pdata*, align 8
  %max_q_count = alloca i32, align 4
  %q_count = alloca i32, align 4
  %reg = alloca i32, align 4
  %regval = alloca i32, align 4
  %i = alloca i32, align 4
  %_var = alloca i32, align 4
  %_pos = alloca i32, align 4
  %_len = alloca i32, align 4
  %_val = alloca i32, align 4
  %tmp = alloca i32, align 4
  %__UNIQUE_ID___x330 = alloca i32, align 4
  %__UNIQUE_ID___y331 = alloca i32, align 4
  %tmp32 = alloca i32, align 4
  %_var43 = alloca i32, align 4
  %_pos44 = alloca i32, align 4
  %_len45 = alloca i32, align 4
  %_val46 = alloca i32, align 4
  %tmp62 = alloca i32, align 4
  store %struct.xlgmac_pdata* %pdata, %struct.xlgmac_pdata** %pdata.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xlgmac_pdata** %pdata.addr, metadata !14019, metadata !DIExpression()), !dbg !14020
  call void @llvm.dbg.declare(metadata i32* %max_q_count, metadata !14021, metadata !DIExpression()), !dbg !14022
  call void @llvm.dbg.declare(metadata i32* %q_count, metadata !14023, metadata !DIExpression()), !dbg !14024
  call void @llvm.dbg.declare(metadata i32* %reg, metadata !14025, metadata !DIExpression()), !dbg !14026
  call void @llvm.dbg.declare(metadata i32* %regval, metadata !14027, metadata !DIExpression()), !dbg !14028
  call void @llvm.dbg.declare(metadata i32* %i, metadata !14029, metadata !DIExpression()), !dbg !14030
  store i32 0, i32* %i, align 4, !dbg !14031
  br label %for.cond, !dbg !14033

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !14034
  %1 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !14036
  %rx_q_count = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %1, i32 0, i32 16, !dbg !14037
  %2 = load i32, i32* %rx_q_count, align 8, !dbg !14037
  %cmp = icmp ult i32 %0, %2, !dbg !14038
  br i1 %cmp, label %for.body, label %for.end, !dbg !14039

for.body:                                         ; preds = %for.cond
  %3 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !14040
  %mac_regs = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %3, i32 0, i32 6, !dbg !14040
  %4 = load i8*, i8** %mac_regs, align 8, !dbg !14040
  %add.ptr = getelementptr i8, i8* %4, i64 4352, !dbg !14040
  %5 = load i32, i32* %i, align 4, !dbg !14040
  %mul = mul i32 %5, 128, !dbg !14040
  %idx.ext = zext i32 %mul to i64, !dbg !14040
  %add.ptr1 = getelementptr i8, i8* %add.ptr, i64 %idx.ext, !dbg !14040
  %add.ptr2 = getelementptr i8, i8* %add.ptr1, i64 64, !dbg !14040
  %call = call i32 @readl(i8* %add.ptr2) #7, !dbg !14042
  store i32 %call, i32* %regval, align 4, !dbg !14043
  call void @llvm.dbg.declare(metadata i32* %_var, metadata !14044, metadata !DIExpression()), !dbg !14046
  %6 = load i32, i32* %regval, align 4, !dbg !14046
  store i32 %6, i32* %_var, align 4, !dbg !14046
  call void @llvm.dbg.declare(metadata i32* %_pos, metadata !14047, metadata !DIExpression()), !dbg !14046
  store i32 7, i32* %_pos, align 4, !dbg !14046
  call void @llvm.dbg.declare(metadata i32* %_len, metadata !14048, metadata !DIExpression()), !dbg !14046
  store i32 1, i32* %_len, align 4, !dbg !14046
  call void @llvm.dbg.declare(metadata i32* %_val, metadata !14049, metadata !DIExpression()), !dbg !14046
  store i32 0, i32* %_val, align 4, !dbg !14046
  %7 = load i32, i32* %_val, align 4, !dbg !14046
  %8 = load i32, i32* %_pos, align 4, !dbg !14046
  %shl = shl i32 %7, %8, !dbg !14046
  %conv = sext i32 %shl to i64, !dbg !14046
  %9 = load i32, i32* %_pos, align 4, !dbg !14046
  %sh_prom = zext i32 %9 to i64, !dbg !14046
  %shl3 = shl i64 1, %sh_prom, !dbg !14046
  %sub = sub i64 -1, %shl3, !dbg !14046
  %add = add i64 %sub, 1, !dbg !14046
  %10 = load i32, i32* %_pos, align 4, !dbg !14046
  %11 = load i32, i32* %_len, align 4, !dbg !14046
  %add4 = add i32 %10, %11, !dbg !14046
  %sub5 = sub i32 %add4, 1, !dbg !14046
  %sub6 = sub i32 63, %sub5, !dbg !14046
  %sh_prom7 = zext i32 %sub6 to i64, !dbg !14046
  %shr = lshr i64 -1, %sh_prom7, !dbg !14046
  %and = and i64 %add, %shr, !dbg !14046
  %add8 = add i64 0, %and, !dbg !14046
  %and9 = and i64 %conv, %add8, !dbg !14046
  %conv10 = trunc i64 %and9 to i32, !dbg !14046
  store i32 %conv10, i32* %_val, align 4, !dbg !14046
  %12 = load i32, i32* %_var, align 4, !dbg !14046
  %conv11 = zext i32 %12 to i64, !dbg !14046
  %13 = load i32, i32* %_pos, align 4, !dbg !14046
  %sh_prom12 = zext i32 %13 to i64, !dbg !14046
  %shl13 = shl i64 1, %sh_prom12, !dbg !14046
  %sub14 = sub i64 -1, %shl13, !dbg !14046
  %add15 = add i64 %sub14, 1, !dbg !14046
  %14 = load i32, i32* %_pos, align 4, !dbg !14046
  %15 = load i32, i32* %_len, align 4, !dbg !14046
  %add16 = add i32 %14, %15, !dbg !14046
  %sub17 = sub i32 %add16, 1, !dbg !14046
  %sub18 = sub i32 63, %sub17, !dbg !14046
  %sh_prom19 = zext i32 %sub18 to i64, !dbg !14046
  %shr20 = lshr i64 -1, %sh_prom19, !dbg !14046
  %and21 = and i64 %add15, %shr20, !dbg !14046
  %add22 = add i64 0, %and21, !dbg !14046
  %neg = xor i64 %add22, -1, !dbg !14046
  %and23 = and i64 %conv11, %neg, !dbg !14046
  %16 = load i32, i32* %_val, align 4, !dbg !14046
  %conv24 = sext i32 %16 to i64, !dbg !14046
  %or = or i64 %and23, %conv24, !dbg !14046
  %conv25 = trunc i64 %or to i32, !dbg !14046
  store i32 %conv25, i32* %_var, align 4, !dbg !14046
  store i32 %conv25, i32* %tmp, align 4, !dbg !14046
  %17 = load i32, i32* %tmp, align 4, !dbg !14046
  store i32 %17, i32* %regval, align 4, !dbg !14050
  %18 = load i32, i32* %regval, align 4, !dbg !14051
  %19 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !14052
  %mac_regs26 = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %19, i32 0, i32 6, !dbg !14052
  %20 = load i8*, i8** %mac_regs26, align 8, !dbg !14052
  %add.ptr27 = getelementptr i8, i8* %20, i64 4352, !dbg !14052
  %21 = load i32, i32* %i, align 4, !dbg !14052
  %mul28 = mul i32 %21, 128, !dbg !14052
  %idx.ext29 = zext i32 %mul28 to i64, !dbg !14052
  %add.ptr30 = getelementptr i8, i8* %add.ptr27, i64 %idx.ext29, !dbg !14052
  %add.ptr31 = getelementptr i8, i8* %add.ptr30, i64 64, !dbg !14052
  call void @writel(i32 %18, i8* %add.ptr31) #7, !dbg !14053
  br label %for.inc, !dbg !14054

for.inc:                                          ; preds = %for.body
  %22 = load i32, i32* %i, align 4, !dbg !14055
  %inc = add i32 %22, 1, !dbg !14055
  store i32 %inc, i32* %i, align 4, !dbg !14055
  br label %for.cond, !dbg !14056, !llvm.loop !14057

for.end:                                          ; preds = %for.cond
  store i32 8, i32* %max_q_count, align 4, !dbg !14059
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___x330, metadata !14060, metadata !DIExpression()), !dbg !14062
  %23 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !14062
  %tx_q_count = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %23, i32 0, i32 15, !dbg !14062
  %24 = load i32, i32* %tx_q_count, align 4, !dbg !14062
  store i32 %24, i32* %__UNIQUE_ID___x330, align 4, !dbg !14062
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___y331, metadata !14063, metadata !DIExpression()), !dbg !14062
  %25 = load i32, i32* %max_q_count, align 4, !dbg !14062
  store i32 %25, i32* %__UNIQUE_ID___y331, align 4, !dbg !14062
  %26 = load i32, i32* %__UNIQUE_ID___x330, align 4, !dbg !14062
  %27 = load i32, i32* %__UNIQUE_ID___y331, align 4, !dbg !14062
  %cmp33 = icmp ult i32 %26, %27, !dbg !14062
  br i1 %cmp33, label %cond.true, label %cond.false, !dbg !14062

cond.true:                                        ; preds = %for.end
  %28 = load i32, i32* %__UNIQUE_ID___x330, align 4, !dbg !14062
  br label %cond.end, !dbg !14062

cond.false:                                       ; preds = %for.end
  %29 = load i32, i32* %__UNIQUE_ID___y331, align 4, !dbg !14062
  br label %cond.end, !dbg !14062

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %28, %cond.true ], [ %29, %cond.false ], !dbg !14062
  store i32 %cond, i32* %tmp32, align 4, !dbg !14062
  %30 = load i32, i32* %tmp32, align 4, !dbg !14062
  store i32 %30, i32* %q_count, align 4, !dbg !14064
  store i32 112, i32* %reg, align 4, !dbg !14065
  store i32 0, i32* %i, align 4, !dbg !14066
  br label %for.cond35, !dbg !14068

for.cond35:                                       ; preds = %for.inc84, %cond.end
  %31 = load i32, i32* %i, align 4, !dbg !14069
  %32 = load i32, i32* %q_count, align 4, !dbg !14071
  %cmp36 = icmp ult i32 %31, %32, !dbg !14072
  br i1 %cmp36, label %for.body38, label %for.end86, !dbg !14073

for.body38:                                       ; preds = %for.cond35
  %33 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !14074
  %mac_regs39 = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %33, i32 0, i32 6, !dbg !14076
  %34 = load i8*, i8** %mac_regs39, align 8, !dbg !14076
  %35 = load i32, i32* %reg, align 4, !dbg !14077
  %idx.ext40 = zext i32 %35 to i64, !dbg !14078
  %add.ptr41 = getelementptr i8, i8* %34, i64 %idx.ext40, !dbg !14078
  %call42 = call i32 @readl(i8* %add.ptr41) #7, !dbg !14079
  store i32 %call42, i32* %regval, align 4, !dbg !14080
  call void @llvm.dbg.declare(metadata i32* %_var43, metadata !14081, metadata !DIExpression()), !dbg !14083
  %36 = load i32, i32* %regval, align 4, !dbg !14083
  store i32 %36, i32* %_var43, align 4, !dbg !14083
  call void @llvm.dbg.declare(metadata i32* %_pos44, metadata !14084, metadata !DIExpression()), !dbg !14083
  store i32 1, i32* %_pos44, align 4, !dbg !14083
  call void @llvm.dbg.declare(metadata i32* %_len45, metadata !14085, metadata !DIExpression()), !dbg !14083
  store i32 1, i32* %_len45, align 4, !dbg !14083
  call void @llvm.dbg.declare(metadata i32* %_val46, metadata !14086, metadata !DIExpression()), !dbg !14083
  store i32 0, i32* %_val46, align 4, !dbg !14083
  %37 = load i32, i32* %_val46, align 4, !dbg !14083
  %38 = load i32, i32* %_pos44, align 4, !dbg !14083
  %shl47 = shl i32 %37, %38, !dbg !14083
  %conv48 = sext i32 %shl47 to i64, !dbg !14083
  %39 = load i32, i32* %_pos44, align 4, !dbg !14083
  %sh_prom49 = zext i32 %39 to i64, !dbg !14083
  %shl50 = shl i64 1, %sh_prom49, !dbg !14083
  %sub51 = sub i64 -1, %shl50, !dbg !14083
  %add52 = add i64 %sub51, 1, !dbg !14083
  %40 = load i32, i32* %_pos44, align 4, !dbg !14083
  %41 = load i32, i32* %_len45, align 4, !dbg !14083
  %add53 = add i32 %40, %41, !dbg !14083
  %sub54 = sub i32 %add53, 1, !dbg !14083
  %sub55 = sub i32 63, %sub54, !dbg !14083
  %sh_prom56 = zext i32 %sub55 to i64, !dbg !14083
  %shr57 = lshr i64 -1, %sh_prom56, !dbg !14083
  %and58 = and i64 %add52, %shr57, !dbg !14083
  %add59 = add i64 0, %and58, !dbg !14083
  %and60 = and i64 %conv48, %add59, !dbg !14083
  %conv61 = trunc i64 %and60 to i32, !dbg !14083
  store i32 %conv61, i32* %_val46, align 4, !dbg !14083
  %42 = load i32, i32* %_var43, align 4, !dbg !14083
  %conv63 = zext i32 %42 to i64, !dbg !14083
  %43 = load i32, i32* %_pos44, align 4, !dbg !14083
  %sh_prom64 = zext i32 %43 to i64, !dbg !14083
  %shl65 = shl i64 1, %sh_prom64, !dbg !14083
  %sub66 = sub i64 -1, %shl65, !dbg !14083
  %add67 = add i64 %sub66, 1, !dbg !14083
  %44 = load i32, i32* %_pos44, align 4, !dbg !14083
  %45 = load i32, i32* %_len45, align 4, !dbg !14083
  %add68 = add i32 %44, %45, !dbg !14083
  %sub69 = sub i32 %add68, 1, !dbg !14083
  %sub70 = sub i32 63, %sub69, !dbg !14083
  %sh_prom71 = zext i32 %sub70 to i64, !dbg !14083
  %shr72 = lshr i64 -1, %sh_prom71, !dbg !14083
  %and73 = and i64 %add67, %shr72, !dbg !14083
  %add74 = add i64 0, %and73, !dbg !14083
  %neg75 = xor i64 %add74, -1, !dbg !14083
  %and76 = and i64 %conv63, %neg75, !dbg !14083
  %46 = load i32, i32* %_val46, align 4, !dbg !14083
  %conv77 = sext i32 %46 to i64, !dbg !14083
  %or78 = or i64 %and76, %conv77, !dbg !14083
  %conv79 = trunc i64 %or78 to i32, !dbg !14083
  store i32 %conv79, i32* %_var43, align 4, !dbg !14083
  store i32 %conv79, i32* %tmp62, align 4, !dbg !14083
  %47 = load i32, i32* %tmp62, align 4, !dbg !14083
  store i32 %47, i32* %regval, align 4, !dbg !14087
  %48 = load i32, i32* %regval, align 4, !dbg !14088
  %49 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !14089
  %mac_regs80 = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %49, i32 0, i32 6, !dbg !14090
  %50 = load i8*, i8** %mac_regs80, align 8, !dbg !14090
  %51 = load i32, i32* %reg, align 4, !dbg !14091
  %idx.ext81 = zext i32 %51 to i64, !dbg !14092
  %add.ptr82 = getelementptr i8, i8* %50, i64 %idx.ext81, !dbg !14092
  call void @writel(i32 %48, i8* %add.ptr82) #7, !dbg !14093
  %52 = load i32, i32* %reg, align 4, !dbg !14094
  %add83 = add i32 %52, 4, !dbg !14094
  store i32 %add83, i32* %reg, align 4, !dbg !14094
  br label %for.inc84, !dbg !14095

for.inc84:                                        ; preds = %for.body38
  %53 = load i32, i32* %i, align 4, !dbg !14096
  %inc85 = add i32 %53, 1, !dbg !14096
  store i32 %inc85, i32* %i, align 4, !dbg !14096
  br label %for.cond35, !dbg !14097, !llvm.loop !14098

for.end86:                                        ; preds = %for.cond35
  ret i32 0, !dbg !14100
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @xlgmac_enable_rx_flow_control(%struct.xlgmac_pdata* %pdata) #0 !dbg !14101 {
entry:
  %pdata.addr = alloca %struct.xlgmac_pdata*, align 8
  %regval = alloca i32, align 4
  %_var = alloca i32, align 4
  %_pos = alloca i32, align 4
  %_len = alloca i32, align 4
  %_val = alloca i32, align 4
  %tmp = alloca i32, align 4
  store %struct.xlgmac_pdata* %pdata, %struct.xlgmac_pdata** %pdata.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xlgmac_pdata** %pdata.addr, metadata !14102, metadata !DIExpression()), !dbg !14103
  call void @llvm.dbg.declare(metadata i32* %regval, metadata !14104, metadata !DIExpression()), !dbg !14105
  %0 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !14106
  %mac_regs = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %0, i32 0, i32 6, !dbg !14107
  %1 = load i8*, i8** %mac_regs, align 8, !dbg !14107
  %add.ptr = getelementptr i8, i8* %1, i64 144, !dbg !14108
  %call = call i32 @readl(i8* %add.ptr) #7, !dbg !14109
  store i32 %call, i32* %regval, align 4, !dbg !14110
  call void @llvm.dbg.declare(metadata i32* %_var, metadata !14111, metadata !DIExpression()), !dbg !14113
  %2 = load i32, i32* %regval, align 4, !dbg !14113
  store i32 %2, i32* %_var, align 4, !dbg !14113
  call void @llvm.dbg.declare(metadata i32* %_pos, metadata !14114, metadata !DIExpression()), !dbg !14113
  store i32 0, i32* %_pos, align 4, !dbg !14113
  call void @llvm.dbg.declare(metadata i32* %_len, metadata !14115, metadata !DIExpression()), !dbg !14113
  store i32 1, i32* %_len, align 4, !dbg !14113
  call void @llvm.dbg.declare(metadata i32* %_val, metadata !14116, metadata !DIExpression()), !dbg !14113
  store i32 1, i32* %_val, align 4, !dbg !14113
  %3 = load i32, i32* %_val, align 4, !dbg !14113
  %4 = load i32, i32* %_pos, align 4, !dbg !14113
  %shl = shl i32 %3, %4, !dbg !14113
  %conv = sext i32 %shl to i64, !dbg !14113
  %5 = load i32, i32* %_pos, align 4, !dbg !14113
  %sh_prom = zext i32 %5 to i64, !dbg !14113
  %shl1 = shl i64 1, %sh_prom, !dbg !14113
  %sub = sub i64 -1, %shl1, !dbg !14113
  %add = add i64 %sub, 1, !dbg !14113
  %6 = load i32, i32* %_pos, align 4, !dbg !14113
  %7 = load i32, i32* %_len, align 4, !dbg !14113
  %add2 = add i32 %6, %7, !dbg !14113
  %sub3 = sub i32 %add2, 1, !dbg !14113
  %sub4 = sub i32 63, %sub3, !dbg !14113
  %sh_prom5 = zext i32 %sub4 to i64, !dbg !14113
  %shr = lshr i64 -1, %sh_prom5, !dbg !14113
  %and = and i64 %add, %shr, !dbg !14113
  %add6 = add i64 0, %and, !dbg !14113
  %and7 = and i64 %conv, %add6, !dbg !14113
  %conv8 = trunc i64 %and7 to i32, !dbg !14113
  store i32 %conv8, i32* %_val, align 4, !dbg !14113
  %8 = load i32, i32* %_var, align 4, !dbg !14113
  %conv9 = zext i32 %8 to i64, !dbg !14113
  %9 = load i32, i32* %_pos, align 4, !dbg !14113
  %sh_prom10 = zext i32 %9 to i64, !dbg !14113
  %shl11 = shl i64 1, %sh_prom10, !dbg !14113
  %sub12 = sub i64 -1, %shl11, !dbg !14113
  %add13 = add i64 %sub12, 1, !dbg !14113
  %10 = load i32, i32* %_pos, align 4, !dbg !14113
  %11 = load i32, i32* %_len, align 4, !dbg !14113
  %add14 = add i32 %10, %11, !dbg !14113
  %sub15 = sub i32 %add14, 1, !dbg !14113
  %sub16 = sub i32 63, %sub15, !dbg !14113
  %sh_prom17 = zext i32 %sub16 to i64, !dbg !14113
  %shr18 = lshr i64 -1, %sh_prom17, !dbg !14113
  %and19 = and i64 %add13, %shr18, !dbg !14113
  %add20 = add i64 0, %and19, !dbg !14113
  %neg = xor i64 %add20, -1, !dbg !14113
  %and21 = and i64 %conv9, %neg, !dbg !14113
  %12 = load i32, i32* %_val, align 4, !dbg !14113
  %conv22 = sext i32 %12 to i64, !dbg !14113
  %or = or i64 %and21, %conv22, !dbg !14113
  %conv23 = trunc i64 %or to i32, !dbg !14113
  store i32 %conv23, i32* %_var, align 4, !dbg !14113
  store i32 %conv23, i32* %tmp, align 4, !dbg !14113
  %13 = load i32, i32* %tmp, align 4, !dbg !14113
  store i32 %13, i32* %regval, align 4, !dbg !14117
  %14 = load i32, i32* %regval, align 4, !dbg !14118
  %15 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !14119
  %mac_regs24 = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %15, i32 0, i32 6, !dbg !14120
  %16 = load i8*, i8** %mac_regs24, align 8, !dbg !14120
  %add.ptr25 = getelementptr i8, i8* %16, i64 144, !dbg !14121
  call void @writel(i32 %14, i8* %add.ptr25) #7, !dbg !14122
  ret i32 0, !dbg !14123
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @xlgmac_disable_rx_flow_control(%struct.xlgmac_pdata* %pdata) #0 !dbg !14124 {
entry:
  %pdata.addr = alloca %struct.xlgmac_pdata*, align 8
  %regval = alloca i32, align 4
  %_var = alloca i32, align 4
  %_pos = alloca i32, align 4
  %_len = alloca i32, align 4
  %_val = alloca i32, align 4
  %tmp = alloca i32, align 4
  store %struct.xlgmac_pdata* %pdata, %struct.xlgmac_pdata** %pdata.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xlgmac_pdata** %pdata.addr, metadata !14125, metadata !DIExpression()), !dbg !14126
  call void @llvm.dbg.declare(metadata i32* %regval, metadata !14127, metadata !DIExpression()), !dbg !14128
  %0 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !14129
  %mac_regs = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %0, i32 0, i32 6, !dbg !14130
  %1 = load i8*, i8** %mac_regs, align 8, !dbg !14130
  %add.ptr = getelementptr i8, i8* %1, i64 144, !dbg !14131
  %call = call i32 @readl(i8* %add.ptr) #7, !dbg !14132
  store i32 %call, i32* %regval, align 4, !dbg !14133
  call void @llvm.dbg.declare(metadata i32* %_var, metadata !14134, metadata !DIExpression()), !dbg !14136
  %2 = load i32, i32* %regval, align 4, !dbg !14136
  store i32 %2, i32* %_var, align 4, !dbg !14136
  call void @llvm.dbg.declare(metadata i32* %_pos, metadata !14137, metadata !DIExpression()), !dbg !14136
  store i32 0, i32* %_pos, align 4, !dbg !14136
  call void @llvm.dbg.declare(metadata i32* %_len, metadata !14138, metadata !DIExpression()), !dbg !14136
  store i32 1, i32* %_len, align 4, !dbg !14136
  call void @llvm.dbg.declare(metadata i32* %_val, metadata !14139, metadata !DIExpression()), !dbg !14136
  store i32 0, i32* %_val, align 4, !dbg !14136
  %3 = load i32, i32* %_val, align 4, !dbg !14136
  %4 = load i32, i32* %_pos, align 4, !dbg !14136
  %shl = shl i32 %3, %4, !dbg !14136
  %conv = sext i32 %shl to i64, !dbg !14136
  %5 = load i32, i32* %_pos, align 4, !dbg !14136
  %sh_prom = zext i32 %5 to i64, !dbg !14136
  %shl1 = shl i64 1, %sh_prom, !dbg !14136
  %sub = sub i64 -1, %shl1, !dbg !14136
  %add = add i64 %sub, 1, !dbg !14136
  %6 = load i32, i32* %_pos, align 4, !dbg !14136
  %7 = load i32, i32* %_len, align 4, !dbg !14136
  %add2 = add i32 %6, %7, !dbg !14136
  %sub3 = sub i32 %add2, 1, !dbg !14136
  %sub4 = sub i32 63, %sub3, !dbg !14136
  %sh_prom5 = zext i32 %sub4 to i64, !dbg !14136
  %shr = lshr i64 -1, %sh_prom5, !dbg !14136
  %and = and i64 %add, %shr, !dbg !14136
  %add6 = add i64 0, %and, !dbg !14136
  %and7 = and i64 %conv, %add6, !dbg !14136
  %conv8 = trunc i64 %and7 to i32, !dbg !14136
  store i32 %conv8, i32* %_val, align 4, !dbg !14136
  %8 = load i32, i32* %_var, align 4, !dbg !14136
  %conv9 = zext i32 %8 to i64, !dbg !14136
  %9 = load i32, i32* %_pos, align 4, !dbg !14136
  %sh_prom10 = zext i32 %9 to i64, !dbg !14136
  %shl11 = shl i64 1, %sh_prom10, !dbg !14136
  %sub12 = sub i64 -1, %shl11, !dbg !14136
  %add13 = add i64 %sub12, 1, !dbg !14136
  %10 = load i32, i32* %_pos, align 4, !dbg !14136
  %11 = load i32, i32* %_len, align 4, !dbg !14136
  %add14 = add i32 %10, %11, !dbg !14136
  %sub15 = sub i32 %add14, 1, !dbg !14136
  %sub16 = sub i32 63, %sub15, !dbg !14136
  %sh_prom17 = zext i32 %sub16 to i64, !dbg !14136
  %shr18 = lshr i64 -1, %sh_prom17, !dbg !14136
  %and19 = and i64 %add13, %shr18, !dbg !14136
  %add20 = add i64 0, %and19, !dbg !14136
  %neg = xor i64 %add20, -1, !dbg !14136
  %and21 = and i64 %conv9, %neg, !dbg !14136
  %12 = load i32, i32* %_val, align 4, !dbg !14136
  %conv22 = sext i32 %12 to i64, !dbg !14136
  %or = or i64 %and21, %conv22, !dbg !14136
  %conv23 = trunc i64 %or to i32, !dbg !14136
  store i32 %conv23, i32* %_var, align 4, !dbg !14136
  store i32 %conv23, i32* %tmp, align 4, !dbg !14136
  %13 = load i32, i32* %tmp, align 4, !dbg !14136
  store i32 %13, i32* %regval, align 4, !dbg !14140
  %14 = load i32, i32* %regval, align 4, !dbg !14141
  %15 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !14142
  %mac_regs24 = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %15, i32 0, i32 6, !dbg !14143
  %16 = load i8*, i8** %mac_regs24, align 8, !dbg !14143
  %add.ptr25 = getelementptr i8, i8* %16, i64 144, !dbg !14144
  call void @writel(i32 %14, i8* %add.ptr25) #7, !dbg !14145
  ret i32 0, !dbg !14146
}

; Function Attrs: noredzone
declare dso_local i64 @find_first_bit(i64*, i64) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @xlgmac_vid_crc32_le(i16 zeroext %vid_le) #0 !dbg !14147 {
entry:
  %vid_le.addr = alloca i16, align 2
  %data = alloca i8*, align 8
  %data_byte = alloca i8, align 1
  %crc = alloca i32, align 4
  %temp = alloca i32, align 4
  %i = alloca i32, align 4
  %bits = alloca i32, align 4
  store i16 %vid_le, i16* %vid_le.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %vid_le.addr, metadata !14150, metadata !DIExpression()), !dbg !14151
  call void @llvm.dbg.declare(metadata i8** %data, metadata !14152, metadata !DIExpression()), !dbg !14153
  %0 = bitcast i16* %vid_le.addr to i8*, !dbg !14154
  store i8* %0, i8** %data, align 8, !dbg !14153
  call void @llvm.dbg.declare(metadata i8* %data_byte, metadata !14155, metadata !DIExpression()), !dbg !14156
  store i8 0, i8* %data_byte, align 1, !dbg !14156
  call void @llvm.dbg.declare(metadata i32* %crc, metadata !14157, metadata !DIExpression()), !dbg !14158
  store i32 -1, i32* %crc, align 4, !dbg !14158
  call void @llvm.dbg.declare(metadata i32* %temp, metadata !14159, metadata !DIExpression()), !dbg !14160
  store i32 0, i32* %temp, align 4, !dbg !14160
  call void @llvm.dbg.declare(metadata i32* %i, metadata !14161, metadata !DIExpression()), !dbg !14162
  call void @llvm.dbg.declare(metadata i32* %bits, metadata !14163, metadata !DIExpression()), !dbg !14164
  %call = call i32 @get_bitmask_order(i32 4095) #7, !dbg !14165
  store i32 %call, i32* %bits, align 4, !dbg !14166
  store i32 0, i32* %i, align 4, !dbg !14167
  br label %for.cond, !dbg !14169

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, i32* %i, align 4, !dbg !14170
  %2 = load i32, i32* %bits, align 4, !dbg !14172
  %cmp = icmp slt i32 %1, %2, !dbg !14173
  br i1 %cmp, label %for.body, label %for.end, !dbg !14174

for.body:                                         ; preds = %for.cond
  %3 = load i32, i32* %i, align 4, !dbg !14175
  %rem = srem i32 %3, 8, !dbg !14178
  %cmp1 = icmp eq i32 %rem, 0, !dbg !14179
  br i1 %cmp1, label %if.then, label %if.end, !dbg !14180

if.then:                                          ; preds = %for.body
  %4 = load i8*, i8** %data, align 8, !dbg !14181
  %5 = load i32, i32* %i, align 4, !dbg !14182
  %div = sdiv i32 %5, 8, !dbg !14183
  %idxprom = sext i32 %div to i64, !dbg !14181
  %arrayidx = getelementptr i8, i8* %4, i64 %idxprom, !dbg !14181
  %6 = load i8, i8* %arrayidx, align 1, !dbg !14181
  store i8 %6, i8* %data_byte, align 1, !dbg !14184
  br label %if.end, !dbg !14185

if.end:                                           ; preds = %if.then, %for.body
  %7 = load i32, i32* %crc, align 4, !dbg !14186
  %and = and i32 %7, 1, !dbg !14187
  %8 = load i8, i8* %data_byte, align 1, !dbg !14188
  %conv = zext i8 %8 to i32, !dbg !14188
  %xor = xor i32 %and, %conv, !dbg !14189
  %and2 = and i32 %xor, 1, !dbg !14190
  store i32 %and2, i32* %temp, align 4, !dbg !14191
  %9 = load i32, i32* %crc, align 4, !dbg !14192
  %shr = lshr i32 %9, 1, !dbg !14192
  store i32 %shr, i32* %crc, align 4, !dbg !14192
  %10 = load i8, i8* %data_byte, align 1, !dbg !14193
  %conv3 = zext i8 %10 to i32, !dbg !14193
  %shr4 = ashr i32 %conv3, 1, !dbg !14193
  %conv5 = trunc i32 %shr4 to i8, !dbg !14193
  store i8 %conv5, i8* %data_byte, align 1, !dbg !14193
  %11 = load i32, i32* %temp, align 4, !dbg !14194
  %tobool = icmp ne i32 %11, 0, !dbg !14194
  br i1 %tobool, label %if.then6, label %if.end8, !dbg !14196

if.then6:                                         ; preds = %if.end
  %12 = load i32, i32* %crc, align 4, !dbg !14197
  %xor7 = xor i32 %12, -306674912, !dbg !14197
  store i32 %xor7, i32* %crc, align 4, !dbg !14197
  br label %if.end8, !dbg !14198

if.end8:                                          ; preds = %if.then6, %if.end
  br label %for.inc, !dbg !14199

for.inc:                                          ; preds = %if.end8
  %13 = load i32, i32* %i, align 4, !dbg !14200
  %inc = add i32 %13, 1, !dbg !14200
  store i32 %inc, i32* %i, align 4, !dbg !14200
  br label %for.cond, !dbg !14201, !llvm.loop !14202

for.end:                                          ; preds = %for.cond
  %14 = load i32, i32* %crc, align 4, !dbg !14204
  ret i32 %14, !dbg !14205
}

; Function Attrs: noredzone
declare dso_local i64 @find_next_bit(i64*, i64, i64) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @get_bitmask_order(i32 %count) #0 !dbg !14206 {
entry:
  %x.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i, metadata !14210, metadata !DIExpression()), !dbg !14213
  %r.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %r.i, metadata !14215, metadata !DIExpression()), !dbg !14216
  %count.addr = alloca i32, align 4
  %order = alloca i32, align 4
  store i32 %count, i32* %count.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %count.addr, metadata !14217, metadata !DIExpression()), !dbg !14218
  call void @llvm.dbg.declare(metadata i32* %order, metadata !14219, metadata !DIExpression()), !dbg !14220
  %0 = load i32, i32* %count.addr, align 4, !dbg !14221
  store i32 %0, i32* %x.addr.i, align 4
  %1 = load i32, i32* %x.addr.i, align 4, !dbg !14222
  %2 = call i32 asm "bsrl $1,$0", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i32 %1, i32 -1) #11, !dbg !14223, !srcloc !14224
  store i32 %2, i32* %r.i, align 4, !dbg !14223
  %3 = load i32, i32* %r.i, align 4, !dbg !14225
  %add.i = add i32 %3, 1, !dbg !14226
  store i32 %add.i, i32* %order, align 4, !dbg !14227
  %4 = load i32, i32* %order, align 4, !dbg !14228
  ret i32 %4, !dbg !14229
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @xlgmac_mmc_read(%struct.xlgmac_pdata* %pdata, i32 %reg_lo) #0 !dbg !14230 {
entry:
  %pdata.addr = alloca %struct.xlgmac_pdata*, align 8
  %reg_lo.addr = alloca i32, align 4
  %read_hi = alloca i8, align 1
  %val = alloca i64, align 8
  store %struct.xlgmac_pdata* %pdata, %struct.xlgmac_pdata** %pdata.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xlgmac_pdata** %pdata.addr, metadata !14233, metadata !DIExpression()), !dbg !14234
  store i32 %reg_lo, i32* %reg_lo.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %reg_lo.addr, metadata !14235, metadata !DIExpression()), !dbg !14236
  call void @llvm.dbg.declare(metadata i8* %read_hi, metadata !14237, metadata !DIExpression()), !dbg !14238
  call void @llvm.dbg.declare(metadata i64* %val, metadata !14239, metadata !DIExpression()), !dbg !14240
  %0 = load i32, i32* %reg_lo.addr, align 4, !dbg !14241
  switch i32 %0, label %sw.default [
    i32 2068, label %sw.bb
    i32 2180, label %sw.bb
    i32 2312, label %sw.bb
    i32 2320, label %sw.bb
  ], !dbg !14242

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry
  store i8 1, i8* %read_hi, align 1, !dbg !14243
  br label %sw.epilog, !dbg !14245

sw.default:                                       ; preds = %entry
  store i8 0, i8* %read_hi, align 1, !dbg !14246
  br label %sw.epilog, !dbg !14247

sw.epilog:                                        ; preds = %sw.default, %sw.bb
  %1 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !14248
  %mac_regs = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %1, i32 0, i32 6, !dbg !14249
  %2 = load i8*, i8** %mac_regs, align 8, !dbg !14249
  %3 = load i32, i32* %reg_lo.addr, align 4, !dbg !14250
  %idx.ext = zext i32 %3 to i64, !dbg !14251
  %add.ptr = getelementptr i8, i8* %2, i64 %idx.ext, !dbg !14251
  %call = call i32 @readl(i8* %add.ptr) #7, !dbg !14252
  %conv = zext i32 %call to i64, !dbg !14253
  store i64 %conv, i64* %val, align 8, !dbg !14254
  %4 = load i8, i8* %read_hi, align 1, !dbg !14255
  %tobool = trunc i8 %4 to i1, !dbg !14255
  br i1 %tobool, label %if.then, label %if.end, !dbg !14257

if.then:                                          ; preds = %sw.epilog
  %5 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !14258
  %mac_regs1 = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %5, i32 0, i32 6, !dbg !14259
  %6 = load i8*, i8** %mac_regs1, align 8, !dbg !14259
  %7 = load i32, i32* %reg_lo.addr, align 4, !dbg !14260
  %idx.ext2 = zext i32 %7 to i64, !dbg !14261
  %add.ptr3 = getelementptr i8, i8* %6, i64 %idx.ext2, !dbg !14261
  %add.ptr4 = getelementptr i8, i8* %add.ptr3, i64 4, !dbg !14262
  %call5 = call i32 @readl(i8* %add.ptr4) #7, !dbg !14263
  %conv6 = zext i32 %call5 to i64, !dbg !14264
  %shl = shl i64 %conv6, 32, !dbg !14265
  %8 = load i64, i64* %val, align 8, !dbg !14266
  %or = or i64 %8, %shl, !dbg !14266
  store i64 %or, i64* %val, align 8, !dbg !14266
  br label %if.end, !dbg !14267

if.end:                                           ; preds = %if.then, %sw.epilog
  %9 = load i64, i64* %val, align 8, !dbg !14268
  ret i64 %9, !dbg !14269
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @xlgmac_write_rss_hash_key(%struct.xlgmac_pdata* %pdata) #0 !dbg !14270 {
entry:
  %retval = alloca i32, align 4
  %pdata.addr = alloca %struct.xlgmac_pdata*, align 8
  %key_regs = alloca i32, align 4
  %key = alloca i32*, align 8
  %ret = alloca i32, align 4
  store %struct.xlgmac_pdata* %pdata, %struct.xlgmac_pdata** %pdata.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xlgmac_pdata** %pdata.addr, metadata !14271, metadata !DIExpression()), !dbg !14272
  call void @llvm.dbg.declare(metadata i32* %key_regs, metadata !14273, metadata !DIExpression()), !dbg !14274
  store i32 10, i32* %key_regs, align 4, !dbg !14274
  call void @llvm.dbg.declare(metadata i32** %key, metadata !14275, metadata !DIExpression()), !dbg !14276
  %0 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !14277
  %rss_key = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %0, i32 0, i32 42, !dbg !14278
  %1 = bitcast [40 x i8]* %rss_key to i32*, !dbg !14279
  store i32* %1, i32** %key, align 8, !dbg !14276
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !14280, metadata !DIExpression()), !dbg !14281
  br label %while.cond, !dbg !14282

while.cond:                                       ; preds = %if.end, %entry
  %2 = load i32, i32* %key_regs, align 4, !dbg !14283
  %dec = add i32 %2, -1, !dbg !14283
  store i32 %dec, i32* %key_regs, align 4, !dbg !14283
  %tobool = icmp ne i32 %2, 0, !dbg !14282
  br i1 %tobool, label %while.body, label %while.end, !dbg !14282

while.body:                                       ; preds = %while.cond
  %3 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !14284
  %4 = load i32, i32* %key_regs, align 4, !dbg !14286
  %5 = load i32*, i32** %key, align 8, !dbg !14287
  %incdec.ptr = getelementptr i32, i32* %5, i32 1, !dbg !14287
  store i32* %incdec.ptr, i32** %key, align 8, !dbg !14287
  %6 = load i32, i32* %5, align 4, !dbg !14288
  %call = call i32 @xlgmac_write_rss_reg(%struct.xlgmac_pdata* %3, i32 1, i32 %4, i32 %6) #7, !dbg !14289
  store i32 %call, i32* %ret, align 4, !dbg !14290
  %7 = load i32, i32* %ret, align 4, !dbg !14291
  %tobool1 = icmp ne i32 %7, 0, !dbg !14291
  br i1 %tobool1, label %if.then, label %if.end, !dbg !14293

if.then:                                          ; preds = %while.body
  %8 = load i32, i32* %ret, align 4, !dbg !14294
  store i32 %8, i32* %retval, align 4, !dbg !14295
  br label %return, !dbg !14295

if.end:                                           ; preds = %while.body
  br label %while.cond, !dbg !14282, !llvm.loop !14296

while.end:                                        ; preds = %while.cond
  store i32 0, i32* %retval, align 4, !dbg !14298
  br label %return, !dbg !14298

return:                                           ; preds = %while.end, %if.then
  %9 = load i32, i32* %retval, align 4, !dbg !14299
  ret i32 %9, !dbg !14299
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @xlgmac_write_rss_lookup_table(%struct.xlgmac_pdata* %pdata) #0 !dbg !14300 {
entry:
  %retval = alloca i32, align 4
  %pdata.addr = alloca %struct.xlgmac_pdata*, align 8
  %i = alloca i32, align 4
  %ret = alloca i32, align 4
  store %struct.xlgmac_pdata* %pdata, %struct.xlgmac_pdata** %pdata.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xlgmac_pdata** %pdata.addr, metadata !14301, metadata !DIExpression()), !dbg !14302
  call void @llvm.dbg.declare(metadata i32* %i, metadata !14303, metadata !DIExpression()), !dbg !14304
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !14305, metadata !DIExpression()), !dbg !14306
  store i32 0, i32* %i, align 4, !dbg !14307
  br label %for.cond, !dbg !14309

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !14310
  %conv = zext i32 %0 to i64, !dbg !14310
  %cmp = icmp ult i64 %conv, 256, !dbg !14312
  br i1 %cmp, label %for.body, label %for.end, !dbg !14313

for.body:                                         ; preds = %for.cond
  %1 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !14314
  %2 = load i32, i32* %i, align 4, !dbg !14316
  %3 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !14317
  %rss_table = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %3, i32 0, i32 43, !dbg !14318
  %4 = load i32, i32* %i, align 4, !dbg !14319
  %idxprom = zext i32 %4 to i64, !dbg !14317
  %arrayidx = getelementptr [256 x i32], [256 x i32]* %rss_table, i64 0, i64 %idxprom, !dbg !14317
  %5 = load i32, i32* %arrayidx, align 4, !dbg !14317
  %call = call i32 @xlgmac_write_rss_reg(%struct.xlgmac_pdata* %1, i32 0, i32 %2, i32 %5) #7, !dbg !14320
  store i32 %call, i32* %ret, align 4, !dbg !14321
  %6 = load i32, i32* %ret, align 4, !dbg !14322
  %tobool = icmp ne i32 %6, 0, !dbg !14322
  br i1 %tobool, label %if.then, label %if.end, !dbg !14324

if.then:                                          ; preds = %for.body
  %7 = load i32, i32* %ret, align 4, !dbg !14325
  store i32 %7, i32* %retval, align 4, !dbg !14326
  br label %return, !dbg !14326

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !14327

for.inc:                                          ; preds = %if.end
  %8 = load i32, i32* %i, align 4, !dbg !14328
  %inc = add i32 %8, 1, !dbg !14328
  store i32 %inc, i32* %i, align 4, !dbg !14328
  br label %for.cond, !dbg !14329, !llvm.loop !14330

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !14332
  br label %return, !dbg !14332

return:                                           ; preds = %for.end, %if.then
  %9 = load i32, i32* %retval, align 4, !dbg !14333
  ret i32 %9, !dbg !14333
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @xlgmac_write_rss_reg(%struct.xlgmac_pdata* %pdata, i32 %type, i32 %index, i32 %val) #0 !dbg !14334 {
entry:
  %pdata.addr = alloca %struct.xlgmac_pdata*, align 8
  %type.addr = alloca i32, align 4
  %index.addr = alloca i32, align 4
  %val.addr = alloca i32, align 4
  %wait = alloca i32, align 4
  %ret = alloca i32, align 4
  %regval = alloca i32, align 4
  %_pos = alloca i32, align 4
  %_len = alloca i32, align 4
  %tmp = alloca i64, align 8
  %_var = alloca i32, align 4
  %_pos15 = alloca i32, align 4
  %_len16 = alloca i32, align 4
  %_val = alloca i32, align 4
  %tmp32 = alloca i32, align 4
  %_var48 = alloca i32, align 4
  %_pos49 = alloca i32, align 4
  %_len50 = alloca i32, align 4
  %_val51 = alloca i32, align 4
  %tmp67 = alloca i32, align 4
  %_var85 = alloca i32, align 4
  %_pos86 = alloca i32, align 4
  %_len87 = alloca i32, align 4
  %_val88 = alloca i32, align 4
  %tmp104 = alloca i32, align 4
  %_var122 = alloca i32, align 4
  %_pos123 = alloca i32, align 4
  %_len124 = alloca i32, align 4
  %_val125 = alloca i32, align 4
  %tmp141 = alloca i32, align 4
  %_pos162 = alloca i32, align 4
  %_len163 = alloca i32, align 4
  %tmp164 = alloca i64, align 8
  store %struct.xlgmac_pdata* %pdata, %struct.xlgmac_pdata** %pdata.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xlgmac_pdata** %pdata.addr, metadata !14337, metadata !DIExpression()), !dbg !14338
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !14339, metadata !DIExpression()), !dbg !14340
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !14341, metadata !DIExpression()), !dbg !14342
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !14343, metadata !DIExpression()), !dbg !14344
  call void @llvm.dbg.declare(metadata i32* %wait, metadata !14345, metadata !DIExpression()), !dbg !14346
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !14347, metadata !DIExpression()), !dbg !14348
  store i32 0, i32* %ret, align 4, !dbg !14348
  call void @llvm.dbg.declare(metadata i32* %regval, metadata !14349, metadata !DIExpression()), !dbg !14350
  %0 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !14351
  %rss_mutex = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %0, i32 0, i32 41, !dbg !14352
  call void @mutex_lock(%struct.mutex* %rss_mutex) #7, !dbg !14353
  call void @llvm.dbg.declare(metadata i32* %_pos, metadata !14354, metadata !DIExpression()), !dbg !14356
  store i32 0, i32* %_pos, align 4, !dbg !14356
  call void @llvm.dbg.declare(metadata i32* %_len, metadata !14357, metadata !DIExpression()), !dbg !14356
  store i32 1, i32* %_len, align 4, !dbg !14356
  %1 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !14356
  %mac_regs = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %1, i32 0, i32 6, !dbg !14356
  %2 = load i8*, i8** %mac_regs, align 8, !dbg !14356
  %add.ptr = getelementptr i8, i8* %2, i64 3208, !dbg !14356
  %call = call i32 @readl(i8* %add.ptr) #7, !dbg !14356
  %conv = zext i32 %call to i64, !dbg !14356
  %3 = load i32, i32* %_pos, align 4, !dbg !14356
  %sh_prom = zext i32 %3 to i64, !dbg !14356
  %shl = shl i64 1, %sh_prom, !dbg !14356
  %sub = sub i64 -1, %shl, !dbg !14356
  %add = add i64 %sub, 1, !dbg !14356
  %4 = load i32, i32* %_pos, align 4, !dbg !14356
  %5 = load i32, i32* %_len, align 4, !dbg !14356
  %add1 = add i32 %4, %5, !dbg !14356
  %sub2 = sub i32 %add1, 1, !dbg !14356
  %sub3 = sub i32 63, %sub2, !dbg !14356
  %sh_prom4 = zext i32 %sub3 to i64, !dbg !14356
  %shr = lshr i64 -1, %sh_prom4, !dbg !14356
  %and = and i64 %add, %shr, !dbg !14356
  %add5 = add i64 0, %and, !dbg !14356
  %and6 = and i64 %conv, %add5, !dbg !14356
  %6 = load i32, i32* %_pos, align 4, !dbg !14356
  %sh_prom7 = zext i32 %6 to i64, !dbg !14356
  %shr8 = lshr i64 %and6, %sh_prom7, !dbg !14356
  store i64 %shr8, i64* %tmp, align 8, !dbg !14356
  %7 = load i64, i64* %tmp, align 8, !dbg !14356
  %conv9 = trunc i64 %7 to i32, !dbg !14358
  store i32 %conv9, i32* %regval, align 4, !dbg !14359
  %8 = load i32, i32* %regval, align 4, !dbg !14360
  %tobool = icmp ne i32 %8, 0, !dbg !14360
  br i1 %tobool, label %if.then, label %if.end, !dbg !14362

if.then:                                          ; preds = %entry
  store i32 -16, i32* %ret, align 4, !dbg !14363
  br label %unlock, !dbg !14365

if.end:                                           ; preds = %entry
  %9 = load i32, i32* %val.addr, align 4, !dbg !14366
  %10 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !14367
  %mac_regs10 = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %10, i32 0, i32 6, !dbg !14368
  %11 = load i8*, i8** %mac_regs10, align 8, !dbg !14368
  %add.ptr11 = getelementptr i8, i8* %11, i64 3212, !dbg !14369
  call void @writel(i32 %9, i8* %add.ptr11) #7, !dbg !14370
  %12 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !14371
  %mac_regs12 = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %12, i32 0, i32 6, !dbg !14372
  %13 = load i8*, i8** %mac_regs12, align 8, !dbg !14372
  %add.ptr13 = getelementptr i8, i8* %13, i64 3208, !dbg !14373
  %call14 = call i32 @readl(i8* %add.ptr13) #7, !dbg !14374
  store i32 %call14, i32* %regval, align 4, !dbg !14375
  call void @llvm.dbg.declare(metadata i32* %_var, metadata !14376, metadata !DIExpression()), !dbg !14378
  %14 = load i32, i32* %regval, align 4, !dbg !14378
  store i32 %14, i32* %_var, align 4, !dbg !14378
  call void @llvm.dbg.declare(metadata i32* %_pos15, metadata !14379, metadata !DIExpression()), !dbg !14378
  store i32 8, i32* %_pos15, align 4, !dbg !14378
  call void @llvm.dbg.declare(metadata i32* %_len16, metadata !14380, metadata !DIExpression()), !dbg !14378
  store i32 8, i32* %_len16, align 4, !dbg !14378
  call void @llvm.dbg.declare(metadata i32* %_val, metadata !14381, metadata !DIExpression()), !dbg !14378
  %15 = load i32, i32* %index.addr, align 4, !dbg !14378
  store i32 %15, i32* %_val, align 4, !dbg !14378
  %16 = load i32, i32* %_val, align 4, !dbg !14378
  %17 = load i32, i32* %_pos15, align 4, !dbg !14378
  %shl17 = shl i32 %16, %17, !dbg !14378
  %conv18 = zext i32 %shl17 to i64, !dbg !14378
  %18 = load i32, i32* %_pos15, align 4, !dbg !14378
  %sh_prom19 = zext i32 %18 to i64, !dbg !14378
  %shl20 = shl i64 1, %sh_prom19, !dbg !14378
  %sub21 = sub i64 -1, %shl20, !dbg !14378
  %add22 = add i64 %sub21, 1, !dbg !14378
  %19 = load i32, i32* %_pos15, align 4, !dbg !14378
  %20 = load i32, i32* %_len16, align 4, !dbg !14378
  %add23 = add i32 %19, %20, !dbg !14378
  %sub24 = sub i32 %add23, 1, !dbg !14378
  %sub25 = sub i32 63, %sub24, !dbg !14378
  %sh_prom26 = zext i32 %sub25 to i64, !dbg !14378
  %shr27 = lshr i64 -1, %sh_prom26, !dbg !14378
  %and28 = and i64 %add22, %shr27, !dbg !14378
  %add29 = add i64 0, %and28, !dbg !14378
  %and30 = and i64 %conv18, %add29, !dbg !14378
  %conv31 = trunc i64 %and30 to i32, !dbg !14378
  store i32 %conv31, i32* %_val, align 4, !dbg !14378
  %21 = load i32, i32* %_var, align 4, !dbg !14378
  %conv33 = zext i32 %21 to i64, !dbg !14378
  %22 = load i32, i32* %_pos15, align 4, !dbg !14378
  %sh_prom34 = zext i32 %22 to i64, !dbg !14378
  %shl35 = shl i64 1, %sh_prom34, !dbg !14378
  %sub36 = sub i64 -1, %shl35, !dbg !14378
  %add37 = add i64 %sub36, 1, !dbg !14378
  %23 = load i32, i32* %_pos15, align 4, !dbg !14378
  %24 = load i32, i32* %_len16, align 4, !dbg !14378
  %add38 = add i32 %23, %24, !dbg !14378
  %sub39 = sub i32 %add38, 1, !dbg !14378
  %sub40 = sub i32 63, %sub39, !dbg !14378
  %sh_prom41 = zext i32 %sub40 to i64, !dbg !14378
  %shr42 = lshr i64 -1, %sh_prom41, !dbg !14378
  %and43 = and i64 %add37, %shr42, !dbg !14378
  %add44 = add i64 0, %and43, !dbg !14378
  %neg = xor i64 %add44, -1, !dbg !14378
  %and45 = and i64 %conv33, %neg, !dbg !14378
  %25 = load i32, i32* %_val, align 4, !dbg !14378
  %conv46 = zext i32 %25 to i64, !dbg !14378
  %or = or i64 %and45, %conv46, !dbg !14378
  %conv47 = trunc i64 %or to i32, !dbg !14378
  store i32 %conv47, i32* %_var, align 4, !dbg !14378
  store i32 %conv47, i32* %tmp32, align 4, !dbg !14378
  %26 = load i32, i32* %tmp32, align 4, !dbg !14378
  store i32 %26, i32* %regval, align 4, !dbg !14382
  call void @llvm.dbg.declare(metadata i32* %_var48, metadata !14383, metadata !DIExpression()), !dbg !14385
  %27 = load i32, i32* %regval, align 4, !dbg !14385
  store i32 %27, i32* %_var48, align 4, !dbg !14385
  call void @llvm.dbg.declare(metadata i32* %_pos49, metadata !14386, metadata !DIExpression()), !dbg !14385
  store i32 2, i32* %_pos49, align 4, !dbg !14385
  call void @llvm.dbg.declare(metadata i32* %_len50, metadata !14387, metadata !DIExpression()), !dbg !14385
  store i32 1, i32* %_len50, align 4, !dbg !14385
  call void @llvm.dbg.declare(metadata i32* %_val51, metadata !14388, metadata !DIExpression()), !dbg !14385
  %28 = load i32, i32* %type.addr, align 4, !dbg !14385
  store i32 %28, i32* %_val51, align 4, !dbg !14385
  %29 = load i32, i32* %_val51, align 4, !dbg !14385
  %30 = load i32, i32* %_pos49, align 4, !dbg !14385
  %shl52 = shl i32 %29, %30, !dbg !14385
  %conv53 = zext i32 %shl52 to i64, !dbg !14385
  %31 = load i32, i32* %_pos49, align 4, !dbg !14385
  %sh_prom54 = zext i32 %31 to i64, !dbg !14385
  %shl55 = shl i64 1, %sh_prom54, !dbg !14385
  %sub56 = sub i64 -1, %shl55, !dbg !14385
  %add57 = add i64 %sub56, 1, !dbg !14385
  %32 = load i32, i32* %_pos49, align 4, !dbg !14385
  %33 = load i32, i32* %_len50, align 4, !dbg !14385
  %add58 = add i32 %32, %33, !dbg !14385
  %sub59 = sub i32 %add58, 1, !dbg !14385
  %sub60 = sub i32 63, %sub59, !dbg !14385
  %sh_prom61 = zext i32 %sub60 to i64, !dbg !14385
  %shr62 = lshr i64 -1, %sh_prom61, !dbg !14385
  %and63 = and i64 %add57, %shr62, !dbg !14385
  %add64 = add i64 0, %and63, !dbg !14385
  %and65 = and i64 %conv53, %add64, !dbg !14385
  %conv66 = trunc i64 %and65 to i32, !dbg !14385
  store i32 %conv66, i32* %_val51, align 4, !dbg !14385
  %34 = load i32, i32* %_var48, align 4, !dbg !14385
  %conv68 = zext i32 %34 to i64, !dbg !14385
  %35 = load i32, i32* %_pos49, align 4, !dbg !14385
  %sh_prom69 = zext i32 %35 to i64, !dbg !14385
  %shl70 = shl i64 1, %sh_prom69, !dbg !14385
  %sub71 = sub i64 -1, %shl70, !dbg !14385
  %add72 = add i64 %sub71, 1, !dbg !14385
  %36 = load i32, i32* %_pos49, align 4, !dbg !14385
  %37 = load i32, i32* %_len50, align 4, !dbg !14385
  %add73 = add i32 %36, %37, !dbg !14385
  %sub74 = sub i32 %add73, 1, !dbg !14385
  %sub75 = sub i32 63, %sub74, !dbg !14385
  %sh_prom76 = zext i32 %sub75 to i64, !dbg !14385
  %shr77 = lshr i64 -1, %sh_prom76, !dbg !14385
  %and78 = and i64 %add72, %shr77, !dbg !14385
  %add79 = add i64 0, %and78, !dbg !14385
  %neg80 = xor i64 %add79, -1, !dbg !14385
  %and81 = and i64 %conv68, %neg80, !dbg !14385
  %38 = load i32, i32* %_val51, align 4, !dbg !14385
  %conv82 = zext i32 %38 to i64, !dbg !14385
  %or83 = or i64 %and81, %conv82, !dbg !14385
  %conv84 = trunc i64 %or83 to i32, !dbg !14385
  store i32 %conv84, i32* %_var48, align 4, !dbg !14385
  store i32 %conv84, i32* %tmp67, align 4, !dbg !14385
  %39 = load i32, i32* %tmp67, align 4, !dbg !14385
  store i32 %39, i32* %regval, align 4, !dbg !14389
  call void @llvm.dbg.declare(metadata i32* %_var85, metadata !14390, metadata !DIExpression()), !dbg !14392
  %40 = load i32, i32* %regval, align 4, !dbg !14392
  store i32 %40, i32* %_var85, align 4, !dbg !14392
  call void @llvm.dbg.declare(metadata i32* %_pos86, metadata !14393, metadata !DIExpression()), !dbg !14392
  store i32 1, i32* %_pos86, align 4, !dbg !14392
  call void @llvm.dbg.declare(metadata i32* %_len87, metadata !14394, metadata !DIExpression()), !dbg !14392
  store i32 1, i32* %_len87, align 4, !dbg !14392
  call void @llvm.dbg.declare(metadata i32* %_val88, metadata !14395, metadata !DIExpression()), !dbg !14392
  store i32 0, i32* %_val88, align 4, !dbg !14392
  %41 = load i32, i32* %_val88, align 4, !dbg !14392
  %42 = load i32, i32* %_pos86, align 4, !dbg !14392
  %shl89 = shl i32 %41, %42, !dbg !14392
  %conv90 = sext i32 %shl89 to i64, !dbg !14392
  %43 = load i32, i32* %_pos86, align 4, !dbg !14392
  %sh_prom91 = zext i32 %43 to i64, !dbg !14392
  %shl92 = shl i64 1, %sh_prom91, !dbg !14392
  %sub93 = sub i64 -1, %shl92, !dbg !14392
  %add94 = add i64 %sub93, 1, !dbg !14392
  %44 = load i32, i32* %_pos86, align 4, !dbg !14392
  %45 = load i32, i32* %_len87, align 4, !dbg !14392
  %add95 = add i32 %44, %45, !dbg !14392
  %sub96 = sub i32 %add95, 1, !dbg !14392
  %sub97 = sub i32 63, %sub96, !dbg !14392
  %sh_prom98 = zext i32 %sub97 to i64, !dbg !14392
  %shr99 = lshr i64 -1, %sh_prom98, !dbg !14392
  %and100 = and i64 %add94, %shr99, !dbg !14392
  %add101 = add i64 0, %and100, !dbg !14392
  %and102 = and i64 %conv90, %add101, !dbg !14392
  %conv103 = trunc i64 %and102 to i32, !dbg !14392
  store i32 %conv103, i32* %_val88, align 4, !dbg !14392
  %46 = load i32, i32* %_var85, align 4, !dbg !14392
  %conv105 = zext i32 %46 to i64, !dbg !14392
  %47 = load i32, i32* %_pos86, align 4, !dbg !14392
  %sh_prom106 = zext i32 %47 to i64, !dbg !14392
  %shl107 = shl i64 1, %sh_prom106, !dbg !14392
  %sub108 = sub i64 -1, %shl107, !dbg !14392
  %add109 = add i64 %sub108, 1, !dbg !14392
  %48 = load i32, i32* %_pos86, align 4, !dbg !14392
  %49 = load i32, i32* %_len87, align 4, !dbg !14392
  %add110 = add i32 %48, %49, !dbg !14392
  %sub111 = sub i32 %add110, 1, !dbg !14392
  %sub112 = sub i32 63, %sub111, !dbg !14392
  %sh_prom113 = zext i32 %sub112 to i64, !dbg !14392
  %shr114 = lshr i64 -1, %sh_prom113, !dbg !14392
  %and115 = and i64 %add109, %shr114, !dbg !14392
  %add116 = add i64 0, %and115, !dbg !14392
  %neg117 = xor i64 %add116, -1, !dbg !14392
  %and118 = and i64 %conv105, %neg117, !dbg !14392
  %50 = load i32, i32* %_val88, align 4, !dbg !14392
  %conv119 = sext i32 %50 to i64, !dbg !14392
  %or120 = or i64 %and118, %conv119, !dbg !14392
  %conv121 = trunc i64 %or120 to i32, !dbg !14392
  store i32 %conv121, i32* %_var85, align 4, !dbg !14392
  store i32 %conv121, i32* %tmp104, align 4, !dbg !14392
  %51 = load i32, i32* %tmp104, align 4, !dbg !14392
  store i32 %51, i32* %regval, align 4, !dbg !14396
  call void @llvm.dbg.declare(metadata i32* %_var122, metadata !14397, metadata !DIExpression()), !dbg !14399
  %52 = load i32, i32* %regval, align 4, !dbg !14399
  store i32 %52, i32* %_var122, align 4, !dbg !14399
  call void @llvm.dbg.declare(metadata i32* %_pos123, metadata !14400, metadata !DIExpression()), !dbg !14399
  store i32 0, i32* %_pos123, align 4, !dbg !14399
  call void @llvm.dbg.declare(metadata i32* %_len124, metadata !14401, metadata !DIExpression()), !dbg !14399
  store i32 1, i32* %_len124, align 4, !dbg !14399
  call void @llvm.dbg.declare(metadata i32* %_val125, metadata !14402, metadata !DIExpression()), !dbg !14399
  store i32 1, i32* %_val125, align 4, !dbg !14399
  %53 = load i32, i32* %_val125, align 4, !dbg !14399
  %54 = load i32, i32* %_pos123, align 4, !dbg !14399
  %shl126 = shl i32 %53, %54, !dbg !14399
  %conv127 = sext i32 %shl126 to i64, !dbg !14399
  %55 = load i32, i32* %_pos123, align 4, !dbg !14399
  %sh_prom128 = zext i32 %55 to i64, !dbg !14399
  %shl129 = shl i64 1, %sh_prom128, !dbg !14399
  %sub130 = sub i64 -1, %shl129, !dbg !14399
  %add131 = add i64 %sub130, 1, !dbg !14399
  %56 = load i32, i32* %_pos123, align 4, !dbg !14399
  %57 = load i32, i32* %_len124, align 4, !dbg !14399
  %add132 = add i32 %56, %57, !dbg !14399
  %sub133 = sub i32 %add132, 1, !dbg !14399
  %sub134 = sub i32 63, %sub133, !dbg !14399
  %sh_prom135 = zext i32 %sub134 to i64, !dbg !14399
  %shr136 = lshr i64 -1, %sh_prom135, !dbg !14399
  %and137 = and i64 %add131, %shr136, !dbg !14399
  %add138 = add i64 0, %and137, !dbg !14399
  %and139 = and i64 %conv127, %add138, !dbg !14399
  %conv140 = trunc i64 %and139 to i32, !dbg !14399
  store i32 %conv140, i32* %_val125, align 4, !dbg !14399
  %58 = load i32, i32* %_var122, align 4, !dbg !14399
  %conv142 = zext i32 %58 to i64, !dbg !14399
  %59 = load i32, i32* %_pos123, align 4, !dbg !14399
  %sh_prom143 = zext i32 %59 to i64, !dbg !14399
  %shl144 = shl i64 1, %sh_prom143, !dbg !14399
  %sub145 = sub i64 -1, %shl144, !dbg !14399
  %add146 = add i64 %sub145, 1, !dbg !14399
  %60 = load i32, i32* %_pos123, align 4, !dbg !14399
  %61 = load i32, i32* %_len124, align 4, !dbg !14399
  %add147 = add i32 %60, %61, !dbg !14399
  %sub148 = sub i32 %add147, 1, !dbg !14399
  %sub149 = sub i32 63, %sub148, !dbg !14399
  %sh_prom150 = zext i32 %sub149 to i64, !dbg !14399
  %shr151 = lshr i64 -1, %sh_prom150, !dbg !14399
  %and152 = and i64 %add146, %shr151, !dbg !14399
  %add153 = add i64 0, %and152, !dbg !14399
  %neg154 = xor i64 %add153, -1, !dbg !14399
  %and155 = and i64 %conv142, %neg154, !dbg !14399
  %62 = load i32, i32* %_val125, align 4, !dbg !14399
  %conv156 = sext i32 %62 to i64, !dbg !14399
  %or157 = or i64 %and155, %conv156, !dbg !14399
  %conv158 = trunc i64 %or157 to i32, !dbg !14399
  store i32 %conv158, i32* %_var122, align 4, !dbg !14399
  store i32 %conv158, i32* %tmp141, align 4, !dbg !14399
  %63 = load i32, i32* %tmp141, align 4, !dbg !14399
  store i32 %63, i32* %regval, align 4, !dbg !14403
  %64 = load i32, i32* %regval, align 4, !dbg !14404
  %65 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !14405
  %mac_regs159 = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %65, i32 0, i32 6, !dbg !14406
  %66 = load i8*, i8** %mac_regs159, align 8, !dbg !14406
  %add.ptr160 = getelementptr i8, i8* %66, i64 3208, !dbg !14407
  call void @writel(i32 %64, i8* %add.ptr160) #7, !dbg !14408
  store i32 1000, i32* %wait, align 4, !dbg !14409
  br label %while.cond, !dbg !14410

while.cond:                                       ; preds = %if.end186, %if.end
  %67 = load i32, i32* %wait, align 4, !dbg !14411
  %dec = add i32 %67, -1, !dbg !14411
  store i32 %dec, i32* %wait, align 4, !dbg !14411
  %tobool161 = icmp ne i32 %67, 0, !dbg !14410
  br i1 %tobool161, label %while.body, label %while.end, !dbg !14410

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i32* %_pos162, metadata !14412, metadata !DIExpression()), !dbg !14415
  store i32 0, i32* %_pos162, align 4, !dbg !14415
  call void @llvm.dbg.declare(metadata i32* %_len163, metadata !14416, metadata !DIExpression()), !dbg !14415
  store i32 1, i32* %_len163, align 4, !dbg !14415
  %68 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !14415
  %mac_regs165 = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %68, i32 0, i32 6, !dbg !14415
  %69 = load i8*, i8** %mac_regs165, align 8, !dbg !14415
  %add.ptr166 = getelementptr i8, i8* %69, i64 3208, !dbg !14415
  %call167 = call i32 @readl(i8* %add.ptr166) #7, !dbg !14415
  %conv168 = zext i32 %call167 to i64, !dbg !14415
  %70 = load i32, i32* %_pos162, align 4, !dbg !14415
  %sh_prom169 = zext i32 %70 to i64, !dbg !14415
  %shl170 = shl i64 1, %sh_prom169, !dbg !14415
  %sub171 = sub i64 -1, %shl170, !dbg !14415
  %add172 = add i64 %sub171, 1, !dbg !14415
  %71 = load i32, i32* %_pos162, align 4, !dbg !14415
  %72 = load i32, i32* %_len163, align 4, !dbg !14415
  %add173 = add i32 %71, %72, !dbg !14415
  %sub174 = sub i32 %add173, 1, !dbg !14415
  %sub175 = sub i32 63, %sub174, !dbg !14415
  %sh_prom176 = zext i32 %sub175 to i64, !dbg !14415
  %shr177 = lshr i64 -1, %sh_prom176, !dbg !14415
  %and178 = and i64 %add172, %shr177, !dbg !14415
  %add179 = add i64 0, %and178, !dbg !14415
  %and180 = and i64 %conv168, %add179, !dbg !14415
  %73 = load i32, i32* %_pos162, align 4, !dbg !14415
  %sh_prom181 = zext i32 %73 to i64, !dbg !14415
  %shr182 = lshr i64 %and180, %sh_prom181, !dbg !14415
  store i64 %shr182, i64* %tmp164, align 8, !dbg !14415
  %74 = load i64, i64* %tmp164, align 8, !dbg !14415
  %conv183 = trunc i64 %74 to i32, !dbg !14417
  store i32 %conv183, i32* %regval, align 4, !dbg !14418
  %75 = load i32, i32* %regval, align 4, !dbg !14419
  %tobool184 = icmp ne i32 %75, 0, !dbg !14419
  br i1 %tobool184, label %if.end186, label %if.then185, !dbg !14421

if.then185:                                       ; preds = %while.body
  br label %unlock, !dbg !14422

if.end186:                                        ; preds = %while.body
  call void @usleep_range(i64 1000, i64 1500) #7, !dbg !14423
  br label %while.cond, !dbg !14410, !llvm.loop !14424

while.end:                                        ; preds = %while.cond
  store i32 -16, i32* %ret, align 4, !dbg !14426
  br label %unlock, !dbg !14427

unlock:                                           ; preds = %while.end, %if.then185, %if.then
  call void @llvm.dbg.label(metadata !14428), !dbg !14429
  %76 = load %struct.xlgmac_pdata*, %struct.xlgmac_pdata** %pdata.addr, align 8, !dbg !14430
  %rss_mutex187 = getelementptr inbounds %struct.xlgmac_pdata, %struct.xlgmac_pdata* %76, i32 0, i32 41, !dbg !14431
  call void @mutex_unlock(%struct.mutex* %rss_mutex187) #7, !dbg !14432
  %77 = load i32, i32* %ret, align 4, !dbg !14433
  ret i32 %77, !dbg !14434
}

; Function Attrs: noredzone
declare dso_local void @mutex_lock(%struct.mutex*) #2

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #1

; Function Attrs: noredzone
declare dso_local void @mutex_unlock(%struct.mutex*) #2

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #4

attributes #0 = { noinline noredzone nounwind optnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { cold noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind willreturn }
attributes #5 = { noredzone nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone willreturn }
attributes #7 = { noredzone }
attributes #8 = { nounwind }
attributes #9 = { noredzone nounwind }
attributes #10 = { cold noredzone }
attributes #11 = { nounwind readonly }
attributes #12 = { noredzone nounwind readonly }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!7540, !7541, !7542, !7543}
!llvm.ident = !{!7544}

!0 = distinct !DICompileUnit(language: DW_LANG_C89, file: !1, producer: "clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !2, retainedTypes: !7524, splitDebugInlining: false, nameTableKind: None)
!1 = !DIFile(filename: "drivers/net/ethernet/synopsys/dwc-xlgmac-hw.c", directory: "/home/lizy2001/genbc/linux")
!2 = !{!3, !10, !31, !38, !45, !51, !56, !62, !69, !75, !84, !92, !123, !157, !198, !205, !236, !249, !257, !263, !270, !274, !278, !285, !291, !297, !6489, !6625, !6705, !6781, !6789, !7062, !7082, !7152, !7256, !7268, !7393, !7399, !7411, !7475, !7493, !7498, !7519}
!3 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "netdev_tx", file: !4, line: 115, baseType: !5, size: 32, elements: !6)
!4 = !DIFile(filename: "./include/linux/netdevice.h", directory: "/home/lizy2001/genbc/linux")
!5 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!6 = !{!7, !8, !9}
!7 = !DIEnumerator(name: "__NETDEV_TX_MIN", value: -2147483648)
!8 = !DIEnumerator(name: "NETDEV_TX_OK", value: 0)
!9 = !DIEnumerator(name: "NETDEV_TX_BUSY", value: 16)
!10 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "tc_setup_type", file: !4, line: 836, baseType: !11, size: 32, elements: !12)
!11 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!12 = !{!13, !14, !15, !16, !17, !18, !19, !20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30}
!13 = !DIEnumerator(name: "TC_SETUP_QDISC_MQPRIO", value: 0, isUnsigned: true)
!14 = !DIEnumerator(name: "TC_SETUP_CLSU32", value: 1, isUnsigned: true)
!15 = !DIEnumerator(name: "TC_SETUP_CLSFLOWER", value: 2, isUnsigned: true)
!16 = !DIEnumerator(name: "TC_SETUP_CLSMATCHALL", value: 3, isUnsigned: true)
!17 = !DIEnumerator(name: "TC_SETUP_CLSBPF", value: 4, isUnsigned: true)
!18 = !DIEnumerator(name: "TC_SETUP_BLOCK", value: 5, isUnsigned: true)
!19 = !DIEnumerator(name: "TC_SETUP_QDISC_CBS", value: 6, isUnsigned: true)
!20 = !DIEnumerator(name: "TC_SETUP_QDISC_RED", value: 7, isUnsigned: true)
!21 = !DIEnumerator(name: "TC_SETUP_QDISC_PRIO", value: 8, isUnsigned: true)
!22 = !DIEnumerator(name: "TC_SETUP_QDISC_MQ", value: 9, isUnsigned: true)
!23 = !DIEnumerator(name: "TC_SETUP_QDISC_ETF", value: 10, isUnsigned: true)
!24 = !DIEnumerator(name: "TC_SETUP_ROOT_QDISC", value: 11, isUnsigned: true)
!25 = !DIEnumerator(name: "TC_SETUP_QDISC_GRED", value: 12, isUnsigned: true)
!26 = !DIEnumerator(name: "TC_SETUP_QDISC_TAPRIO", value: 13, isUnsigned: true)
!27 = !DIEnumerator(name: "TC_SETUP_FT", value: 14, isUnsigned: true)
!28 = !DIEnumerator(name: "TC_SETUP_QDISC_ETS", value: 15, isUnsigned: true)
!29 = !DIEnumerator(name: "TC_SETUP_QDISC_TBF", value: 16, isUnsigned: true)
!30 = !DIEnumerator(name: "TC_SETUP_QDISC_FIFO", value: 17, isUnsigned: true)
!31 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "bpf_netdev_command", file: !4, line: 860, baseType: !11, size: 32, elements: !32)
!32 = !{!33, !34, !35, !36, !37}
!33 = !DIEnumerator(name: "XDP_SETUP_PROG", value: 0, isUnsigned: true)
!34 = !DIEnumerator(name: "XDP_SETUP_PROG_HW", value: 1, isUnsigned: true)
!35 = !DIEnumerator(name: "BPF_OFFLOAD_MAP_ALLOC", value: 2, isUnsigned: true)
!36 = !DIEnumerator(name: "BPF_OFFLOAD_MAP_FREE", value: 3, isUnsigned: true)
!37 = !DIEnumerator(name: "XDP_SETUP_XSK_POOL", value: 4, isUnsigned: true)
!38 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "migrate_mode", file: !39, line: 15, baseType: !11, size: 32, elements: !40)
!39 = !DIFile(filename: "./include/linux/migrate_mode.h", directory: "/home/lizy2001/genbc/linux")
!40 = !{!41, !42, !43, !44}
!41 = !DIEnumerator(name: "MIGRATE_ASYNC", value: 0, isUnsigned: true)
!42 = !DIEnumerator(name: "MIGRATE_SYNC_LIGHT", value: 1, isUnsigned: true)
!43 = !DIEnumerator(name: "MIGRATE_SYNC", value: 2, isUnsigned: true)
!44 = !DIEnumerator(name: "MIGRATE_SYNC_NO_COPY", value: 3, isUnsigned: true)
!45 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "page_entry_size", file: !46, line: 546, baseType: !11, size: 32, elements: !47)
!46 = !DIFile(filename: "./include/linux/mm.h", directory: "/home/lizy2001/genbc/linux")
!47 = !{!48, !49, !50}
!48 = !DIEnumerator(name: "PE_SIZE_PTE", value: 0, isUnsigned: true)
!49 = !DIEnumerator(name: "PE_SIZE_PMD", value: 1, isUnsigned: true)
!50 = !DIEnumerator(name: "PE_SIZE_PUD", value: 2, isUnsigned: true)
!51 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "hrtimer_restart", file: !52, line: 65, baseType: !11, size: 32, elements: !53)
!52 = !DIFile(filename: "./include/linux/hrtimer.h", directory: "/home/lizy2001/genbc/linux")
!53 = !{!54, !55}
!54 = !DIEnumerator(name: "HRTIMER_NORESTART", value: 0, isUnsigned: true)
!55 = !DIEnumerator(name: "HRTIMER_RESTART", value: 1, isUnsigned: true)
!56 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "timespec_type", file: !57, line: 16, baseType: !11, size: 32, elements: !58)
!57 = !DIFile(filename: "./include/linux/restart_block.h", directory: "/home/lizy2001/genbc/linux")
!58 = !{!59, !60, !61}
!59 = !DIEnumerator(name: "TT_NONE", value: 0, isUnsigned: true)
!60 = !DIEnumerator(name: "TT_NATIVE", value: 1, isUnsigned: true)
!61 = !DIEnumerator(name: "TT_COMPAT", value: 2, isUnsigned: true)
!62 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "memory_type", file: !63, line: 59, baseType: !11, size: 32, elements: !64)
!63 = !DIFile(filename: "./include/linux/memremap.h", directory: "/home/lizy2001/genbc/linux")
!64 = !{!65, !66, !67, !68}
!65 = !DIEnumerator(name: "MEMORY_DEVICE_PRIVATE", value: 1, isUnsigned: true)
!66 = !DIEnumerator(name: "MEMORY_DEVICE_FS_DAX", value: 2, isUnsigned: true)
!67 = !DIEnumerator(name: "MEMORY_DEVICE_GENERIC", value: 3, isUnsigned: true)
!68 = !DIEnumerator(name: "MEMORY_DEVICE_PCI_P2PDMA", value: 4, isUnsigned: true)
!69 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "quota_type", file: !70, line: 54, baseType: !11, size: 32, elements: !71)
!70 = !DIFile(filename: "./include/linux/quota.h", directory: "/home/lizy2001/genbc/linux")
!71 = !{!72, !73, !74}
!72 = !DIEnumerator(name: "USRQUOTA", value: 0, isUnsigned: true)
!73 = !DIEnumerator(name: "GRPQUOTA", value: 1, isUnsigned: true)
!74 = !DIEnumerator(name: "PRJQUOTA", value: 2, isUnsigned: true)
!75 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rw_hint", file: !76, line: 296, baseType: !11, size: 32, elements: !77)
!76 = !DIFile(filename: "./include/linux/fs.h", directory: "/home/lizy2001/genbc/linux")
!77 = !{!78, !79, !80, !81, !82, !83}
!78 = !DIEnumerator(name: "WRITE_LIFE_NOT_SET", value: 0, isUnsigned: true)
!79 = !DIEnumerator(name: "WRITE_LIFE_NONE", value: 1, isUnsigned: true)
!80 = !DIEnumerator(name: "WRITE_LIFE_SHORT", value: 2, isUnsigned: true)
!81 = !DIEnumerator(name: "WRITE_LIFE_MEDIUM", value: 3, isUnsigned: true)
!82 = !DIEnumerator(name: "WRITE_LIFE_LONG", value: 4, isUnsigned: true)
!83 = !DIEnumerator(name: "WRITE_LIFE_EXTREME", value: 5, isUnsigned: true)
!84 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "pid_type", file: !85, line: 9, baseType: !11, size: 32, elements: !86)
!85 = !DIFile(filename: "./include/linux/pid.h", directory: "/home/lizy2001/genbc/linux")
!86 = !{!87, !88, !89, !90, !91}
!87 = !DIEnumerator(name: "PIDTYPE_PID", value: 0, isUnsigned: true)
!88 = !DIEnumerator(name: "PIDTYPE_TGID", value: 1, isUnsigned: true)
!89 = !DIEnumerator(name: "PIDTYPE_PGID", value: 2, isUnsigned: true)
!90 = !DIEnumerator(name: "PIDTYPE_SID", value: 3, isUnsigned: true)
!91 = !DIEnumerator(name: "PIDTYPE_MAX", value: 4, isUnsigned: true)
!92 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "bpf_reg_type", file: !93, line: 369, baseType: !11, size: 32, elements: !94)
!93 = !DIFile(filename: "./include/linux/bpf.h", directory: "/home/lizy2001/genbc/linux")
!94 = !{!95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122}
!95 = !DIEnumerator(name: "NOT_INIT", value: 0, isUnsigned: true)
!96 = !DIEnumerator(name: "SCALAR_VALUE", value: 1, isUnsigned: true)
!97 = !DIEnumerator(name: "PTR_TO_CTX", value: 2, isUnsigned: true)
!98 = !DIEnumerator(name: "CONST_PTR_TO_MAP", value: 3, isUnsigned: true)
!99 = !DIEnumerator(name: "PTR_TO_MAP_VALUE", value: 4, isUnsigned: true)
!100 = !DIEnumerator(name: "PTR_TO_MAP_VALUE_OR_NULL", value: 5, isUnsigned: true)
!101 = !DIEnumerator(name: "PTR_TO_STACK", value: 6, isUnsigned: true)
!102 = !DIEnumerator(name: "PTR_TO_PACKET_META", value: 7, isUnsigned: true)
!103 = !DIEnumerator(name: "PTR_TO_PACKET", value: 8, isUnsigned: true)
!104 = !DIEnumerator(name: "PTR_TO_PACKET_END", value: 9, isUnsigned: true)
!105 = !DIEnumerator(name: "PTR_TO_FLOW_KEYS", value: 10, isUnsigned: true)
!106 = !DIEnumerator(name: "PTR_TO_SOCKET", value: 11, isUnsigned: true)
!107 = !DIEnumerator(name: "PTR_TO_SOCKET_OR_NULL", value: 12, isUnsigned: true)
!108 = !DIEnumerator(name: "PTR_TO_SOCK_COMMON", value: 13, isUnsigned: true)
!109 = !DIEnumerator(name: "PTR_TO_SOCK_COMMON_OR_NULL", value: 14, isUnsigned: true)
!110 = !DIEnumerator(name: "PTR_TO_TCP_SOCK", value: 15, isUnsigned: true)
!111 = !DIEnumerator(name: "PTR_TO_TCP_SOCK_OR_NULL", value: 16, isUnsigned: true)
!112 = !DIEnumerator(name: "PTR_TO_TP_BUFFER", value: 17, isUnsigned: true)
!113 = !DIEnumerator(name: "PTR_TO_XDP_SOCK", value: 18, isUnsigned: true)
!114 = !DIEnumerator(name: "PTR_TO_BTF_ID", value: 19, isUnsigned: true)
!115 = !DIEnumerator(name: "PTR_TO_BTF_ID_OR_NULL", value: 20, isUnsigned: true)
!116 = !DIEnumerator(name: "PTR_TO_MEM", value: 21, isUnsigned: true)
!117 = !DIEnumerator(name: "PTR_TO_MEM_OR_NULL", value: 22, isUnsigned: true)
!118 = !DIEnumerator(name: "PTR_TO_RDONLY_BUF", value: 23, isUnsigned: true)
!119 = !DIEnumerator(name: "PTR_TO_RDONLY_BUF_OR_NULL", value: 24, isUnsigned: true)
!120 = !DIEnumerator(name: "PTR_TO_RDWR_BUF", value: 25, isUnsigned: true)
!121 = !DIEnumerator(name: "PTR_TO_RDWR_BUF_OR_NULL", value: 26, isUnsigned: true)
!122 = !DIEnumerator(name: "PTR_TO_PERCPU_BTF_ID", value: 27, isUnsigned: true)
!123 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "bpf_prog_type", file: !124, line: 170, baseType: !11, size: 32, elements: !125)
!124 = !DIFile(filename: "./include/uapi/linux/bpf.h", directory: "/home/lizy2001/genbc/linux")
!125 = !{!126, !127, !128, !129, !130, !131, !132, !133, !134, !135, !136, !137, !138, !139, !140, !141, !142, !143, !144, !145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156}
!126 = !DIEnumerator(name: "BPF_PROG_TYPE_UNSPEC", value: 0, isUnsigned: true)
!127 = !DIEnumerator(name: "BPF_PROG_TYPE_SOCKET_FILTER", value: 1, isUnsigned: true)
!128 = !DIEnumerator(name: "BPF_PROG_TYPE_KPROBE", value: 2, isUnsigned: true)
!129 = !DIEnumerator(name: "BPF_PROG_TYPE_SCHED_CLS", value: 3, isUnsigned: true)
!130 = !DIEnumerator(name: "BPF_PROG_TYPE_SCHED_ACT", value: 4, isUnsigned: true)
!131 = !DIEnumerator(name: "BPF_PROG_TYPE_TRACEPOINT", value: 5, isUnsigned: true)
!132 = !DIEnumerator(name: "BPF_PROG_TYPE_XDP", value: 6, isUnsigned: true)
!133 = !DIEnumerator(name: "BPF_PROG_TYPE_PERF_EVENT", value: 7, isUnsigned: true)
!134 = !DIEnumerator(name: "BPF_PROG_TYPE_CGROUP_SKB", value: 8, isUnsigned: true)
!135 = !DIEnumerator(name: "BPF_PROG_TYPE_CGROUP_SOCK", value: 9, isUnsigned: true)
!136 = !DIEnumerator(name: "BPF_PROG_TYPE_LWT_IN", value: 10, isUnsigned: true)
!137 = !DIEnumerator(name: "BPF_PROG_TYPE_LWT_OUT", value: 11, isUnsigned: true)
!138 = !DIEnumerator(name: "BPF_PROG_TYPE_LWT_XMIT", value: 12, isUnsigned: true)
!139 = !DIEnumerator(name: "BPF_PROG_TYPE_SOCK_OPS", value: 13, isUnsigned: true)
!140 = !DIEnumerator(name: "BPF_PROG_TYPE_SK_SKB", value: 14, isUnsigned: true)
!141 = !DIEnumerator(name: "BPF_PROG_TYPE_CGROUP_DEVICE", value: 15, isUnsigned: true)
!142 = !DIEnumerator(name: "BPF_PROG_TYPE_SK_MSG", value: 16, isUnsigned: true)
!143 = !DIEnumerator(name: "BPF_PROG_TYPE_RAW_TRACEPOINT", value: 17, isUnsigned: true)
!144 = !DIEnumerator(name: "BPF_PROG_TYPE_CGROUP_SOCK_ADDR", value: 18, isUnsigned: true)
!145 = !DIEnumerator(name: "BPF_PROG_TYPE_LWT_SEG6LOCAL", value: 19, isUnsigned: true)
!146 = !DIEnumerator(name: "BPF_PROG_TYPE_LIRC_MODE2", value: 20, isUnsigned: true)
!147 = !DIEnumerator(name: "BPF_PROG_TYPE_SK_REUSEPORT", value: 21, isUnsigned: true)
!148 = !DIEnumerator(name: "BPF_PROG_TYPE_FLOW_DISSECTOR", value: 22, isUnsigned: true)
!149 = !DIEnumerator(name: "BPF_PROG_TYPE_CGROUP_SYSCTL", value: 23, isUnsigned: true)
!150 = !DIEnumerator(name: "BPF_PROG_TYPE_RAW_TRACEPOINT_WRITABLE", value: 24, isUnsigned: true)
!151 = !DIEnumerator(name: "BPF_PROG_TYPE_CGROUP_SOCKOPT", value: 25, isUnsigned: true)
!152 = !DIEnumerator(name: "BPF_PROG_TYPE_TRACING", value: 26, isUnsigned: true)
!153 = !DIEnumerator(name: "BPF_PROG_TYPE_STRUCT_OPS", value: 27, isUnsigned: true)
!154 = !DIEnumerator(name: "BPF_PROG_TYPE_EXT", value: 28, isUnsigned: true)
!155 = !DIEnumerator(name: "BPF_PROG_TYPE_LSM", value: 29, isUnsigned: true)
!156 = !DIEnumerator(name: "BPF_PROG_TYPE_SK_LOOKUP", value: 30, isUnsigned: true)
!157 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "bpf_attach_type", file: !124, line: 204, baseType: !11, size: 32, elements: !158)
!158 = !{!159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197}
!159 = !DIEnumerator(name: "BPF_CGROUP_INET_INGRESS", value: 0, isUnsigned: true)
!160 = !DIEnumerator(name: "BPF_CGROUP_INET_EGRESS", value: 1, isUnsigned: true)
!161 = !DIEnumerator(name: "BPF_CGROUP_INET_SOCK_CREATE", value: 2, isUnsigned: true)
!162 = !DIEnumerator(name: "BPF_CGROUP_SOCK_OPS", value: 3, isUnsigned: true)
!163 = !DIEnumerator(name: "BPF_SK_SKB_STREAM_PARSER", value: 4, isUnsigned: true)
!164 = !DIEnumerator(name: "BPF_SK_SKB_STREAM_VERDICT", value: 5, isUnsigned: true)
!165 = !DIEnumerator(name: "BPF_CGROUP_DEVICE", value: 6, isUnsigned: true)
!166 = !DIEnumerator(name: "BPF_SK_MSG_VERDICT", value: 7, isUnsigned: true)
!167 = !DIEnumerator(name: "BPF_CGROUP_INET4_BIND", value: 8, isUnsigned: true)
!168 = !DIEnumerator(name: "BPF_CGROUP_INET6_BIND", value: 9, isUnsigned: true)
!169 = !DIEnumerator(name: "BPF_CGROUP_INET4_CONNECT", value: 10, isUnsigned: true)
!170 = !DIEnumerator(name: "BPF_CGROUP_INET6_CONNECT", value: 11, isUnsigned: true)
!171 = !DIEnumerator(name: "BPF_CGROUP_INET4_POST_BIND", value: 12, isUnsigned: true)
!172 = !DIEnumerator(name: "BPF_CGROUP_INET6_POST_BIND", value: 13, isUnsigned: true)
!173 = !DIEnumerator(name: "BPF_CGROUP_UDP4_SENDMSG", value: 14, isUnsigned: true)
!174 = !DIEnumerator(name: "BPF_CGROUP_UDP6_SENDMSG", value: 15, isUnsigned: true)
!175 = !DIEnumerator(name: "BPF_LIRC_MODE2", value: 16, isUnsigned: true)
!176 = !DIEnumerator(name: "BPF_FLOW_DISSECTOR", value: 17, isUnsigned: true)
!177 = !DIEnumerator(name: "BPF_CGROUP_SYSCTL", value: 18, isUnsigned: true)
!178 = !DIEnumerator(name: "BPF_CGROUP_UDP4_RECVMSG", value: 19, isUnsigned: true)
!179 = !DIEnumerator(name: "BPF_CGROUP_UDP6_RECVMSG", value: 20, isUnsigned: true)
!180 = !DIEnumerator(name: "BPF_CGROUP_GETSOCKOPT", value: 21, isUnsigned: true)
!181 = !DIEnumerator(name: "BPF_CGROUP_SETSOCKOPT", value: 22, isUnsigned: true)
!182 = !DIEnumerator(name: "BPF_TRACE_RAW_TP", value: 23, isUnsigned: true)
!183 = !DIEnumerator(name: "BPF_TRACE_FENTRY", value: 24, isUnsigned: true)
!184 = !DIEnumerator(name: "BPF_TRACE_FEXIT", value: 25, isUnsigned: true)
!185 = !DIEnumerator(name: "BPF_MODIFY_RETURN", value: 26, isUnsigned: true)
!186 = !DIEnumerator(name: "BPF_LSM_MAC", value: 27, isUnsigned: true)
!187 = !DIEnumerator(name: "BPF_TRACE_ITER", value: 28, isUnsigned: true)
!188 = !DIEnumerator(name: "BPF_CGROUP_INET4_GETPEERNAME", value: 29, isUnsigned: true)
!189 = !DIEnumerator(name: "BPF_CGROUP_INET6_GETPEERNAME", value: 30, isUnsigned: true)
!190 = !DIEnumerator(name: "BPF_CGROUP_INET4_GETSOCKNAME", value: 31, isUnsigned: true)
!191 = !DIEnumerator(name: "BPF_CGROUP_INET6_GETSOCKNAME", value: 32, isUnsigned: true)
!192 = !DIEnumerator(name: "BPF_XDP_DEVMAP", value: 33, isUnsigned: true)
!193 = !DIEnumerator(name: "BPF_CGROUP_INET_SOCK_RELEASE", value: 34, isUnsigned: true)
!194 = !DIEnumerator(name: "BPF_XDP_CPUMAP", value: 35, isUnsigned: true)
!195 = !DIEnumerator(name: "BPF_SK_LOOKUP", value: 36, isUnsigned: true)
!196 = !DIEnumerator(name: "BPF_XDP", value: 37, isUnsigned: true)
!197 = !DIEnumerator(name: "__MAX_BPF_ATTACH_TYPE", value: 38, isUnsigned: true)
!198 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "bpf_tramp_prog_type", file: !93, line: 578, baseType: !11, size: 32, elements: !199)
!199 = !{!200, !201, !202, !203, !204}
!200 = !DIEnumerator(name: "BPF_TRAMP_FENTRY", value: 0, isUnsigned: true)
!201 = !DIEnumerator(name: "BPF_TRAMP_FEXIT", value: 1, isUnsigned: true)
!202 = !DIEnumerator(name: "BPF_TRAMP_MODIFY_RETURN", value: 2, isUnsigned: true)
!203 = !DIEnumerator(name: "BPF_TRAMP_MAX", value: 3, isUnsigned: true)
!204 = !DIEnumerator(name: "BPF_TRAMP_REPLACE", value: 4, isUnsigned: true)
!205 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "bpf_map_type", file: !124, line: 130, baseType: !11, size: 32, elements: !206)
!206 = !{!207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235}
!207 = !DIEnumerator(name: "BPF_MAP_TYPE_UNSPEC", value: 0, isUnsigned: true)
!208 = !DIEnumerator(name: "BPF_MAP_TYPE_HASH", value: 1, isUnsigned: true)
!209 = !DIEnumerator(name: "BPF_MAP_TYPE_ARRAY", value: 2, isUnsigned: true)
!210 = !DIEnumerator(name: "BPF_MAP_TYPE_PROG_ARRAY", value: 3, isUnsigned: true)
!211 = !DIEnumerator(name: "BPF_MAP_TYPE_PERF_EVENT_ARRAY", value: 4, isUnsigned: true)
!212 = !DIEnumerator(name: "BPF_MAP_TYPE_PERCPU_HASH", value: 5, isUnsigned: true)
!213 = !DIEnumerator(name: "BPF_MAP_TYPE_PERCPU_ARRAY", value: 6, isUnsigned: true)
!214 = !DIEnumerator(name: "BPF_MAP_TYPE_STACK_TRACE", value: 7, isUnsigned: true)
!215 = !DIEnumerator(name: "BPF_MAP_TYPE_CGROUP_ARRAY", value: 8, isUnsigned: true)
!216 = !DIEnumerator(name: "BPF_MAP_TYPE_LRU_HASH", value: 9, isUnsigned: true)
!217 = !DIEnumerator(name: "BPF_MAP_TYPE_LRU_PERCPU_HASH", value: 10, isUnsigned: true)
!218 = !DIEnumerator(name: "BPF_MAP_TYPE_LPM_TRIE", value: 11, isUnsigned: true)
!219 = !DIEnumerator(name: "BPF_MAP_TYPE_ARRAY_OF_MAPS", value: 12, isUnsigned: true)
!220 = !DIEnumerator(name: "BPF_MAP_TYPE_HASH_OF_MAPS", value: 13, isUnsigned: true)
!221 = !DIEnumerator(name: "BPF_MAP_TYPE_DEVMAP", value: 14, isUnsigned: true)
!222 = !DIEnumerator(name: "BPF_MAP_TYPE_SOCKMAP", value: 15, isUnsigned: true)
!223 = !DIEnumerator(name: "BPF_MAP_TYPE_CPUMAP", value: 16, isUnsigned: true)
!224 = !DIEnumerator(name: "BPF_MAP_TYPE_XSKMAP", value: 17, isUnsigned: true)
!225 = !DIEnumerator(name: "BPF_MAP_TYPE_SOCKHASH", value: 18, isUnsigned: true)
!226 = !DIEnumerator(name: "BPF_MAP_TYPE_CGROUP_STORAGE", value: 19, isUnsigned: true)
!227 = !DIEnumerator(name: "BPF_MAP_TYPE_REUSEPORT_SOCKARRAY", value: 20, isUnsigned: true)
!228 = !DIEnumerator(name: "BPF_MAP_TYPE_PERCPU_CGROUP_STORAGE", value: 21, isUnsigned: true)
!229 = !DIEnumerator(name: "BPF_MAP_TYPE_QUEUE", value: 22, isUnsigned: true)
!230 = !DIEnumerator(name: "BPF_MAP_TYPE_STACK", value: 23, isUnsigned: true)
!231 = !DIEnumerator(name: "BPF_MAP_TYPE_SK_STORAGE", value: 24, isUnsigned: true)
!232 = !DIEnumerator(name: "BPF_MAP_TYPE_DEVMAP_HASH", value: 25, isUnsigned: true)
!233 = !DIEnumerator(name: "BPF_MAP_TYPE_STRUCT_OPS", value: 26, isUnsigned: true)
!234 = !DIEnumerator(name: "BPF_MAP_TYPE_RINGBUF", value: 27, isUnsigned: true)
!235 = !DIEnumerator(name: "BPF_MAP_TYPE_INODE_STORAGE", value: 28, isUnsigned: true)
!236 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ethtool_link_ext_state", file: !237, line: 585, baseType: !11, size: 32, elements: !238)
!237 = !DIFile(filename: "./include/uapi/linux/ethtool.h", directory: "/home/lizy2001/genbc/linux")
!238 = !{!239, !240, !241, !242, !243, !244, !245, !246, !247, !248}
!239 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_AUTONEG", value: 0, isUnsigned: true)
!240 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_LINK_TRAINING_FAILURE", value: 1, isUnsigned: true)
!241 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_LINK_LOGICAL_MISMATCH", value: 2, isUnsigned: true)
!242 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_BAD_SIGNAL_INTEGRITY", value: 3, isUnsigned: true)
!243 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_NO_CABLE", value: 4, isUnsigned: true)
!244 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_CABLE_ISSUE", value: 5, isUnsigned: true)
!245 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_EEPROM_ISSUE", value: 6, isUnsigned: true)
!246 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_CALIBRATION_FAILURE", value: 7, isUnsigned: true)
!247 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_POWER_BUDGET_EXCEEDED", value: 8, isUnsigned: true)
!248 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_OVERHEAT", value: 9, isUnsigned: true)
!249 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ethtool_link_ext_substate_autoneg", file: !237, line: 602, baseType: !11, size: 32, elements: !250)
!250 = !{!251, !252, !253, !254, !255, !256}
!251 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_AN_NO_PARTNER_DETECTED", value: 1, isUnsigned: true)
!252 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_AN_ACK_NOT_RECEIVED", value: 2, isUnsigned: true)
!253 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_AN_NEXT_PAGE_EXCHANGE_FAILED", value: 3, isUnsigned: true)
!254 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_AN_NO_PARTNER_DETECTED_FORCE_MODE", value: 4, isUnsigned: true)
!255 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_AN_FEC_MISMATCH_DURING_OVERRIDE", value: 5, isUnsigned: true)
!256 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_AN_NO_HCD", value: 6, isUnsigned: true)
!257 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ethtool_link_ext_substate_link_training", file: !237, line: 615, baseType: !11, size: 32, elements: !258)
!258 = !{!259, !260, !261, !262}
!259 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LT_KR_FRAME_LOCK_NOT_ACQUIRED", value: 1, isUnsigned: true)
!260 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LT_KR_LINK_INHIBIT_TIMEOUT", value: 2, isUnsigned: true)
!261 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LT_KR_LINK_PARTNER_DID_NOT_SET_RECEIVER_READY", value: 3, isUnsigned: true)
!262 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LT_REMOTE_FAULT", value: 4, isUnsigned: true)
!263 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ethtool_link_ext_substate_link_logical_mismatch", file: !237, line: 626, baseType: !11, size: 32, elements: !264)
!264 = !{!265, !266, !267, !268, !269}
!265 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LLM_PCS_DID_NOT_ACQUIRE_BLOCK_LOCK", value: 1, isUnsigned: true)
!266 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LLM_PCS_DID_NOT_ACQUIRE_AM_LOCK", value: 2, isUnsigned: true)
!267 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LLM_PCS_DID_NOT_GET_ALIGN_STATUS", value: 3, isUnsigned: true)
!268 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LLM_FC_FEC_IS_NOT_LOCKED", value: 4, isUnsigned: true)
!269 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LLM_RS_FEC_IS_NOT_LOCKED", value: 5, isUnsigned: true)
!270 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ethtool_link_ext_substate_bad_signal_integrity", file: !237, line: 638, baseType: !11, size: 32, elements: !271)
!271 = !{!272, !273}
!272 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_BSI_LARGE_NUMBER_OF_PHYSICAL_ERRORS", value: 1, isUnsigned: true)
!273 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_BSI_UNSUPPORTED_RATE", value: 2, isUnsigned: true)
!274 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ethtool_link_ext_substate_cable_issue", file: !237, line: 647, baseType: !11, size: 32, elements: !275)
!275 = !{!276, !277}
!276 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_CI_UNSUPPORTED_CABLE", value: 1, isUnsigned: true)
!277 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_CI_CABLE_TEST_FAILURE", value: 2, isUnsigned: true)
!278 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ethtool_phys_id_state", file: !279, line: 54, baseType: !11, size: 32, elements: !280)
!279 = !DIFile(filename: "./include/linux/ethtool.h", directory: "/home/lizy2001/genbc/linux")
!280 = !{!281, !282, !283, !284}
!281 = !DIEnumerator(name: "ETHTOOL_ID_INACTIVE", value: 0, isUnsigned: true)
!282 = !DIEnumerator(name: "ETHTOOL_ID_ACTIVE", value: 1, isUnsigned: true)
!283 = !DIEnumerator(name: "ETHTOOL_ID_ON", value: 2, isUnsigned: true)
!284 = !DIEnumerator(name: "ETHTOOL_ID_OFF", value: 3, isUnsigned: true)
!285 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kobj_ns_type", file: !286, line: 26, baseType: !11, size: 32, elements: !287)
!286 = !DIFile(filename: "./include/linux/kobject_ns.h", directory: "/home/lizy2001/genbc/linux")
!287 = !{!288, !289, !290}
!288 = !DIEnumerator(name: "KOBJ_NS_TYPE_NONE", value: 0, isUnsigned: true)
!289 = !DIEnumerator(name: "KOBJ_NS_TYPE_NET", value: 1, isUnsigned: true)
!290 = !DIEnumerator(name: "KOBJ_NS_TYPES", value: 2, isUnsigned: true)
!291 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rx_handler_result", file: !4, line: 423, baseType: !11, size: 32, elements: !292)
!292 = !{!293, !294, !295, !296}
!293 = !DIEnumerator(name: "RX_HANDLER_CONSUMED", value: 0, isUnsigned: true)
!294 = !DIEnumerator(name: "RX_HANDLER_ANOTHER", value: 1, isUnsigned: true)
!295 = !DIEnumerator(name: "RX_HANDLER_EXACT", value: 2, isUnsigned: true)
!296 = !DIEnumerator(name: "RX_HANDLER_PASS", value: 3, isUnsigned: true)
!297 = !DICompositeType(tag: DW_TAG_enumeration_type, scope: !298, file: !4, line: 2085, baseType: !11, size: 32, elements: !7386)
!298 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "net_device", file: !4, line: 1858, size: 15808, elements: !299)
!299 = !{!300, !305, !328, !345, !347, !348, !349, !350, !351, !352, !353, !354, !355, !356, !357, !362, !370, !371, !372, !373, !374, !375, !376, !377, !378, !404, !414, !415, !416, !421, !422, !426, !429, !5521, !6037, !6041, !6081, !6082, !6083, !6084, !6085, !6086, !6087, !6088, !6089, !6090, !6091, !6092, !6093, !6094, !6095, !6096, !6097, !6098, !6099, !6100, !6101, !6102, !6103, !6104, !6105, !6106, !6107, !6112, !6113, !6114, !6390, !6391, !6392, !6393, !6396, !6399, !6402, !6405, !6408, !6409, !6422, !6423, !6424, !6425, !6426, !6427, !6434, !6435, !6469, !6470, !6471, !6472, !6473, !6474, !6475, !6476, !6477, !6480, !6481, !6482, !6483, !6484, !6485, !6486, !6487, !6488, !6493, !6494, !6495, !6500, !6537, !6999, !7001, !7002, !7006, !7007, !7008, !7009, !7015, !7017, !7364, !7365, !7367, !7368, !7369, !7370, !7371, !7375, !7378}
!300 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !298, file: !4, line: 1859, baseType: !301, size: 128)
!301 = !DICompositeType(tag: DW_TAG_array_type, baseType: !302, size: 128, elements: !303)
!302 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!303 = !{!304}
!304 = !DISubrange(count: 16)
!305 = !DIDerivedType(tag: DW_TAG_member, name: "name_node", scope: !298, file: !4, line: 1860, baseType: !306, size: 64, offset: 128)
!306 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !307, size: 64)
!307 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netdev_name_node", file: !4, line: 938, size: 384, elements: !308)
!308 = !{!309, !317, !323, !325}
!309 = !DIDerivedType(tag: DW_TAG_member, name: "hlist", scope: !307, file: !4, line: 939, baseType: !310, size: 128)
!310 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_node", file: !311, line: 186, size: 128, elements: !312)
!311 = !DIFile(filename: "./include/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!312 = !{!313, !315}
!313 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !310, file: !311, line: 187, baseType: !314, size: 64)
!314 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !310, size: 64)
!315 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !310, file: !311, line: 187, baseType: !316, size: 64, offset: 64)
!316 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !314, size: 64)
!317 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !307, file: !4, line: 940, baseType: !318, size: 128, offset: 128)
!318 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_head", file: !311, line: 178, size: 128, elements: !319)
!319 = !{!320, !322}
!320 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !318, file: !311, line: 179, baseType: !321, size: 64)
!321 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !318, size: 64)
!322 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !318, file: !311, line: 179, baseType: !321, size: 64, offset: 64)
!323 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !307, file: !4, line: 941, baseType: !324, size: 64, offset: 256)
!324 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !298, size: 64)
!325 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !307, file: !4, line: 942, baseType: !326, size: 64, offset: 320)
!326 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !327, size: 64)
!327 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !302)
!328 = !DIDerivedType(tag: DW_TAG_member, name: "ifalias", scope: !298, file: !4, line: 1861, baseType: !329, size: 64, offset: 192)
!329 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !330, size: 64)
!330 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_ifalias", file: !4, line: 930, size: 128, elements: !331)
!331 = !{!332, !341}
!332 = !DIDerivedType(tag: DW_TAG_member, name: "rcuhead", scope: !330, file: !4, line: 931, baseType: !333, size: 128, align: 64)
!333 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "callback_head", file: !311, line: 216, size: 128, align: 64, elements: !334)
!334 = !{!335, !337}
!335 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !333, file: !311, line: 217, baseType: !336, size: 64)
!336 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !333, size: 64)
!337 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !333, file: !311, line: 218, baseType: !338, size: 64, offset: 64)
!338 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !339, size: 64)
!339 = !DISubroutineType(types: !340)
!340 = !{null, !336}
!341 = !DIDerivedType(tag: DW_TAG_member, name: "ifalias", scope: !330, file: !4, line: 932, baseType: !342, offset: 128)
!342 = !DICompositeType(tag: DW_TAG_array_type, baseType: !302, elements: !343)
!343 = !{!344}
!344 = !DISubrange(count: -1)
!345 = !DIDerivedType(tag: DW_TAG_member, name: "mem_end", scope: !298, file: !4, line: 1866, baseType: !346, size: 64, offset: 256)
!346 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!347 = !DIDerivedType(tag: DW_TAG_member, name: "mem_start", scope: !298, file: !4, line: 1867, baseType: !346, size: 64, offset: 320)
!348 = !DIDerivedType(tag: DW_TAG_member, name: "base_addr", scope: !298, file: !4, line: 1868, baseType: !346, size: 64, offset: 384)
!349 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !298, file: !4, line: 1869, baseType: !5, size: 32, offset: 448)
!350 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !298, file: !4, line: 1877, baseType: !346, size: 64, offset: 512)
!351 = !DIDerivedType(tag: DW_TAG_member, name: "dev_list", scope: !298, file: !4, line: 1879, baseType: !318, size: 128, offset: 576)
!352 = !DIDerivedType(tag: DW_TAG_member, name: "napi_list", scope: !298, file: !4, line: 1880, baseType: !318, size: 128, offset: 704)
!353 = !DIDerivedType(tag: DW_TAG_member, name: "unreg_list", scope: !298, file: !4, line: 1881, baseType: !318, size: 128, offset: 832)
!354 = !DIDerivedType(tag: DW_TAG_member, name: "close_list", scope: !298, file: !4, line: 1882, baseType: !318, size: 128, offset: 960)
!355 = !DIDerivedType(tag: DW_TAG_member, name: "ptype_all", scope: !298, file: !4, line: 1883, baseType: !318, size: 128, offset: 1088)
!356 = !DIDerivedType(tag: DW_TAG_member, name: "ptype_specific", scope: !298, file: !4, line: 1884, baseType: !318, size: 128, offset: 1216)
!357 = !DIDerivedType(tag: DW_TAG_member, name: "adj_list", scope: !298, file: !4, line: 1889, baseType: !358, size: 256, offset: 1344)
!358 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !298, file: !4, line: 1886, size: 256, elements: !359)
!359 = !{!360, !361}
!360 = !DIDerivedType(tag: DW_TAG_member, name: "upper", scope: !358, file: !4, line: 1887, baseType: !318, size: 128)
!361 = !DIDerivedType(tag: DW_TAG_member, name: "lower", scope: !358, file: !4, line: 1888, baseType: !318, size: 128, offset: 128)
!362 = !DIDerivedType(tag: DW_TAG_member, name: "features", scope: !298, file: !4, line: 1891, baseType: !363, size: 64, offset: 1600)
!363 = !DIDerivedType(tag: DW_TAG_typedef, name: "netdev_features_t", file: !364, line: 12, baseType: !365)
!364 = !DIFile(filename: "./include/linux/netdev_features.h", directory: "/home/lizy2001/genbc/linux")
!365 = !DIDerivedType(tag: DW_TAG_typedef, name: "u64", file: !366, line: 23, baseType: !367)
!366 = !DIFile(filename: "./include/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!367 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u64", file: !368, line: 31, baseType: !369)
!368 = !DIFile(filename: "./include/uapi/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!369 = !DIBasicType(name: "long long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!370 = !DIDerivedType(tag: DW_TAG_member, name: "hw_features", scope: !298, file: !4, line: 1892, baseType: !363, size: 64, offset: 1664)
!371 = !DIDerivedType(tag: DW_TAG_member, name: "wanted_features", scope: !298, file: !4, line: 1893, baseType: !363, size: 64, offset: 1728)
!372 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_features", scope: !298, file: !4, line: 1894, baseType: !363, size: 64, offset: 1792)
!373 = !DIDerivedType(tag: DW_TAG_member, name: "hw_enc_features", scope: !298, file: !4, line: 1895, baseType: !363, size: 64, offset: 1856)
!374 = !DIDerivedType(tag: DW_TAG_member, name: "mpls_features", scope: !298, file: !4, line: 1896, baseType: !363, size: 64, offset: 1920)
!375 = !DIDerivedType(tag: DW_TAG_member, name: "gso_partial_features", scope: !298, file: !4, line: 1897, baseType: !363, size: 64, offset: 1984)
!376 = !DIDerivedType(tag: DW_TAG_member, name: "ifindex", scope: !298, file: !4, line: 1899, baseType: !5, size: 32, offset: 2048)
!377 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !298, file: !4, line: 1900, baseType: !5, size: 32, offset: 2080)
!378 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !298, file: !4, line: 1902, baseType: !379, size: 1472, offset: 2112)
!379 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "net_device_stats", file: !4, line: 169, size: 1472, elements: !380)
!380 = !{!381, !382, !383, !384, !385, !386, !387, !388, !389, !390, !391, !392, !393, !394, !395, !396, !397, !398, !399, !400, !401, !402, !403}
!381 = !DIDerivedType(tag: DW_TAG_member, name: "rx_packets", scope: !379, file: !4, line: 170, baseType: !346, size: 64)
!382 = !DIDerivedType(tag: DW_TAG_member, name: "tx_packets", scope: !379, file: !4, line: 171, baseType: !346, size: 64, offset: 64)
!383 = !DIDerivedType(tag: DW_TAG_member, name: "rx_bytes", scope: !379, file: !4, line: 172, baseType: !346, size: 64, offset: 128)
!384 = !DIDerivedType(tag: DW_TAG_member, name: "tx_bytes", scope: !379, file: !4, line: 173, baseType: !346, size: 64, offset: 192)
!385 = !DIDerivedType(tag: DW_TAG_member, name: "rx_errors", scope: !379, file: !4, line: 174, baseType: !346, size: 64, offset: 256)
!386 = !DIDerivedType(tag: DW_TAG_member, name: "tx_errors", scope: !379, file: !4, line: 175, baseType: !346, size: 64, offset: 320)
!387 = !DIDerivedType(tag: DW_TAG_member, name: "rx_dropped", scope: !379, file: !4, line: 176, baseType: !346, size: 64, offset: 384)
!388 = !DIDerivedType(tag: DW_TAG_member, name: "tx_dropped", scope: !379, file: !4, line: 177, baseType: !346, size: 64, offset: 448)
!389 = !DIDerivedType(tag: DW_TAG_member, name: "multicast", scope: !379, file: !4, line: 178, baseType: !346, size: 64, offset: 512)
!390 = !DIDerivedType(tag: DW_TAG_member, name: "collisions", scope: !379, file: !4, line: 179, baseType: !346, size: 64, offset: 576)
!391 = !DIDerivedType(tag: DW_TAG_member, name: "rx_length_errors", scope: !379, file: !4, line: 180, baseType: !346, size: 64, offset: 640)
!392 = !DIDerivedType(tag: DW_TAG_member, name: "rx_over_errors", scope: !379, file: !4, line: 181, baseType: !346, size: 64, offset: 704)
!393 = !DIDerivedType(tag: DW_TAG_member, name: "rx_crc_errors", scope: !379, file: !4, line: 182, baseType: !346, size: 64, offset: 768)
!394 = !DIDerivedType(tag: DW_TAG_member, name: "rx_frame_errors", scope: !379, file: !4, line: 183, baseType: !346, size: 64, offset: 832)
!395 = !DIDerivedType(tag: DW_TAG_member, name: "rx_fifo_errors", scope: !379, file: !4, line: 184, baseType: !346, size: 64, offset: 896)
!396 = !DIDerivedType(tag: DW_TAG_member, name: "rx_missed_errors", scope: !379, file: !4, line: 185, baseType: !346, size: 64, offset: 960)
!397 = !DIDerivedType(tag: DW_TAG_member, name: "tx_aborted_errors", scope: !379, file: !4, line: 186, baseType: !346, size: 64, offset: 1024)
!398 = !DIDerivedType(tag: DW_TAG_member, name: "tx_carrier_errors", scope: !379, file: !4, line: 187, baseType: !346, size: 64, offset: 1088)
!399 = !DIDerivedType(tag: DW_TAG_member, name: "tx_fifo_errors", scope: !379, file: !4, line: 188, baseType: !346, size: 64, offset: 1152)
!400 = !DIDerivedType(tag: DW_TAG_member, name: "tx_heartbeat_errors", scope: !379, file: !4, line: 189, baseType: !346, size: 64, offset: 1216)
!401 = !DIDerivedType(tag: DW_TAG_member, name: "tx_window_errors", scope: !379, file: !4, line: 190, baseType: !346, size: 64, offset: 1280)
!402 = !DIDerivedType(tag: DW_TAG_member, name: "rx_compressed", scope: !379, file: !4, line: 191, baseType: !346, size: 64, offset: 1344)
!403 = !DIDerivedType(tag: DW_TAG_member, name: "tx_compressed", scope: !379, file: !4, line: 192, baseType: !346, size: 64, offset: 1408)
!404 = !DIDerivedType(tag: DW_TAG_member, name: "rx_dropped", scope: !298, file: !4, line: 1904, baseType: !405, size: 64, offset: 3584)
!405 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_long_t", file: !406, line: 13, baseType: !407)
!406 = !DIFile(filename: "./include/asm-generic/atomic-long.h", directory: "/home/lizy2001/genbc/linux")
!407 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic64_t", file: !311, line: 175, baseType: !408)
!408 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !311, line: 173, size: 64, elements: !409)
!409 = !{!410}
!410 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !408, file: !311, line: 174, baseType: !411, size: 64)
!411 = !DIDerivedType(tag: DW_TAG_typedef, name: "s64", file: !366, line: 22, baseType: !412)
!412 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s64", file: !368, line: 30, baseType: !413)
!413 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!414 = !DIDerivedType(tag: DW_TAG_member, name: "tx_dropped", scope: !298, file: !4, line: 1905, baseType: !405, size: 64, offset: 3648)
!415 = !DIDerivedType(tag: DW_TAG_member, name: "rx_nohandler", scope: !298, file: !4, line: 1906, baseType: !405, size: 64, offset: 3712)
!416 = !DIDerivedType(tag: DW_TAG_member, name: "carrier_up_count", scope: !298, file: !4, line: 1909, baseType: !417, size: 32, offset: 3776)
!417 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_t", file: !311, line: 168, baseType: !418)
!418 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !311, line: 166, size: 32, elements: !419)
!419 = !{!420}
!420 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !418, file: !311, line: 167, baseType: !5, size: 32)
!421 = !DIDerivedType(tag: DW_TAG_member, name: "carrier_down_count", scope: !298, file: !4, line: 1910, baseType: !417, size: 32, offset: 3808)
!422 = !DIDerivedType(tag: DW_TAG_member, name: "wireless_handlers", scope: !298, file: !4, line: 1913, baseType: !423, size: 64, offset: 3840)
!423 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !424, size: 64)
!424 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !425)
!425 = !DICompositeType(tag: DW_TAG_structure_type, name: "iw_handler_def", file: !4, line: 1913, flags: DIFlagFwdDecl)
!426 = !DIDerivedType(tag: DW_TAG_member, name: "wireless_data", scope: !298, file: !4, line: 1914, baseType: !427, size: 64, offset: 3904)
!427 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !428, size: 64)
!428 = !DICompositeType(tag: DW_TAG_structure_type, name: "iw_public_data", file: !4, line: 1914, flags: DIFlagFwdDecl)
!429 = !DIDerivedType(tag: DW_TAG_member, name: "netdev_ops", scope: !298, file: !4, line: 1916, baseType: !430, size: 64, offset: 3968)
!430 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !431, size: 64)
!431 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !432)
!432 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "net_device_ops", file: !4, line: 1283, size: 4416, elements: !433)
!433 = !{!434, !438, !442, !443, !444, !607, !611, !616, !620, !621, !626, !627, !750, !755, !759, !765, !769, !801, !809, !813, !818, !822, !823, !829, !833, !837, !841, !842, !864, !868, !883, !894, !898, !907, !911, !912, !916, !937, !941, !945, !949, !953, !960, !964, !982, !986, !1036, !1040, !1045, !1049, !1053, !1057, !1067, !1068, !1077, !1083, !1084, !1088, !1092, !1096, !1100, !1101, !1105, !1106, !5481, !5501, !5505, !5511, !5517}
!434 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_init", scope: !432, file: !4, line: 1284, baseType: !435, size: 64)
!435 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !436, size: 64)
!436 = !DISubroutineType(types: !437)
!437 = !{!5, !324}
!438 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_uninit", scope: !432, file: !4, line: 1285, baseType: !439, size: 64, offset: 64)
!439 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !440, size: 64)
!440 = !DISubroutineType(types: !441)
!441 = !{null, !324}
!442 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_open", scope: !432, file: !4, line: 1286, baseType: !435, size: 64, offset: 128)
!443 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_stop", scope: !432, file: !4, line: 1287, baseType: !435, size: 64, offset: 192)
!444 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_start_xmit", scope: !432, file: !4, line: 1288, baseType: !445, size: 64, offset: 256)
!445 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !446, size: 64)
!446 = !DISubroutineType(types: !447)
!447 = !{!448, !449, !324}
!448 = !DIDerivedType(tag: DW_TAG_typedef, name: "netdev_tx_t", file: !4, line: 120, baseType: !3)
!449 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !450, size: 64)
!450 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sk_buff", file: !451, line: 713, size: 1600, elements: !452)
!451 = !DIFile(filename: "./include/linux/skbuff.h", directory: "/home/lizy2001/genbc/linux")
!452 = !{!453, !475, !483, !490, !494, !506, !507, !508, !511, !512, !513, !519, !520, !521, !522, !523, !524, !525, !528, !529, !530, !531, !532, !533, !534, !535, !536, !537, !538, !539, !540, !541, !542, !543, !544, !545, !546, !547, !548, !549, !550, !551, !552, !553, !554, !565, !566, !567, !568, !570, !571, !576, !581, !586, !587, !588, !589, !590, !591, !592, !593, !594, !596, !597, !599, !600, !601}
!453 = !DIDerivedType(tag: DW_TAG_member, scope: !450, file: !451, line: 714, baseType: !454, size: 192)
!454 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !450, file: !451, line: 714, size: 192, elements: !455)
!455 = !{!456, !466, !474}
!456 = !DIDerivedType(tag: DW_TAG_member, scope: !454, file: !451, line: 715, baseType: !457, size: 192)
!457 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !454, file: !451, line: 715, size: 192, elements: !458)
!458 = !{!459, !460, !461}
!459 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !457, file: !451, line: 717, baseType: !449, size: 64)
!460 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !457, file: !451, line: 718, baseType: !449, size: 64, offset: 64)
!461 = !DIDerivedType(tag: DW_TAG_member, scope: !457, file: !451, line: 720, baseType: !462, size: 64, offset: 128)
!462 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !457, file: !451, line: 720, size: 64, elements: !463)
!463 = !{!464, !465}
!464 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !462, file: !451, line: 721, baseType: !324, size: 64)
!465 = !DIDerivedType(tag: DW_TAG_member, name: "dev_scratch", scope: !462, file: !451, line: 726, baseType: !346, size: 64)
!466 = !DIDerivedType(tag: DW_TAG_member, name: "rbnode", scope: !454, file: !451, line: 729, baseType: !467, size: 192, align: 64)
!467 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_node", file: !468, line: 24, size: 192, align: 64, elements: !469)
!468 = !DIFile(filename: "./include/linux/rbtree.h", directory: "/home/lizy2001/genbc/linux")
!469 = !{!470, !471, !473}
!470 = !DIDerivedType(tag: DW_TAG_member, name: "__rb_parent_color", scope: !467, file: !468, line: 25, baseType: !346, size: 64)
!471 = !DIDerivedType(tag: DW_TAG_member, name: "rb_right", scope: !467, file: !468, line: 26, baseType: !472, size: 64, offset: 64)
!472 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !467, size: 64)
!473 = !DIDerivedType(tag: DW_TAG_member, name: "rb_left", scope: !467, file: !468, line: 27, baseType: !472, size: 64, offset: 128)
!474 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !454, file: !451, line: 730, baseType: !318, size: 128)
!475 = !DIDerivedType(tag: DW_TAG_member, scope: !450, file: !451, line: 733, baseType: !476, size: 64, offset: 192)
!476 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !450, file: !451, line: 733, size: 64, elements: !477)
!477 = !{!478, !482}
!478 = !DIDerivedType(tag: DW_TAG_member, name: "sk", scope: !476, file: !451, line: 734, baseType: !479, size: 64)
!479 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !480, size: 64)
!480 = !DICompositeType(tag: DW_TAG_structure_type, name: "sock", file: !481, line: 124, flags: DIFlagFwdDecl)
!481 = !DIFile(filename: "./include/linux/net.h", directory: "/home/lizy2001/genbc/linux")
!482 = !DIDerivedType(tag: DW_TAG_member, name: "ip_defrag_offset", scope: !476, file: !451, line: 735, baseType: !5, size: 32)
!483 = !DIDerivedType(tag: DW_TAG_member, scope: !450, file: !451, line: 738, baseType: !484, size: 64, offset: 256)
!484 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !450, file: !451, line: 738, size: 64, elements: !485)
!485 = !{!486, !489}
!486 = !DIDerivedType(tag: DW_TAG_member, name: "tstamp", scope: !484, file: !451, line: 739, baseType: !487, size: 64)
!487 = !DIDerivedType(tag: DW_TAG_typedef, name: "ktime_t", file: !488, line: 29, baseType: !411)
!488 = !DIFile(filename: "./include/linux/ktime.h", directory: "/home/lizy2001/genbc/linux")
!489 = !DIDerivedType(tag: DW_TAG_member, name: "skb_mstamp_ns", scope: !484, file: !451, line: 740, baseType: !365, size: 64)
!490 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !450, file: !451, line: 748, baseType: !491, size: 384, align: 64, offset: 320)
!491 = !DICompositeType(tag: DW_TAG_array_type, baseType: !302, size: 384, elements: !492)
!492 = !{!493}
!493 = !DISubrange(count: 48)
!494 = !DIDerivedType(tag: DW_TAG_member, scope: !450, file: !451, line: 750, baseType: !495, size: 128, offset: 704)
!495 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !450, file: !451, line: 750, size: 128, elements: !496)
!496 = !{!497, !505}
!497 = !DIDerivedType(tag: DW_TAG_member, scope: !495, file: !451, line: 751, baseType: !498, size: 128)
!498 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !495, file: !451, line: 751, size: 128, elements: !499)
!499 = !{!500, !501}
!500 = !DIDerivedType(tag: DW_TAG_member, name: "_skb_refdst", scope: !498, file: !451, line: 752, baseType: !346, size: 64)
!501 = !DIDerivedType(tag: DW_TAG_member, name: "destructor", scope: !498, file: !451, line: 753, baseType: !502, size: 64, offset: 64)
!502 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !503, size: 64)
!503 = !DISubroutineType(types: !504)
!504 = !{null, !449}
!505 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_tsorted_anchor", scope: !495, file: !451, line: 755, baseType: !318, size: 128)
!506 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !450, file: !451, line: 761, baseType: !11, size: 32, offset: 832)
!507 = !DIDerivedType(tag: DW_TAG_member, name: "data_len", scope: !450, file: !451, line: 762, baseType: !11, size: 32, offset: 864)
!508 = !DIDerivedType(tag: DW_TAG_member, name: "mac_len", scope: !450, file: !451, line: 763, baseType: !509, size: 16, offset: 896)
!509 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u16", file: !368, line: 24, baseType: !510)
!510 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!511 = !DIDerivedType(tag: DW_TAG_member, name: "hdr_len", scope: !450, file: !451, line: 764, baseType: !509, size: 16, offset: 912)
!512 = !DIDerivedType(tag: DW_TAG_member, name: "queue_mapping", scope: !450, file: !451, line: 769, baseType: !509, size: 16, offset: 928)
!513 = !DIDerivedType(tag: DW_TAG_member, name: "__cloned_offset", scope: !450, file: !451, line: 780, baseType: !514, offset: 944)
!514 = !DICompositeType(tag: DW_TAG_array_type, baseType: !515, elements: !517)
!515 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u8", file: !368, line: 21, baseType: !516)
!516 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!517 = !{!518}
!518 = !DISubrange(count: 0)
!519 = !DIDerivedType(tag: DW_TAG_member, name: "cloned", scope: !450, file: !451, line: 782, baseType: !515, size: 1, offset: 944, flags: DIFlagBitField, extraData: i64 944)
!520 = !DIDerivedType(tag: DW_TAG_member, name: "nohdr", scope: !450, file: !451, line: 783, baseType: !515, size: 1, offset: 945, flags: DIFlagBitField, extraData: i64 944)
!521 = !DIDerivedType(tag: DW_TAG_member, name: "fclone", scope: !450, file: !451, line: 784, baseType: !515, size: 2, offset: 946, flags: DIFlagBitField, extraData: i64 944)
!522 = !DIDerivedType(tag: DW_TAG_member, name: "peeked", scope: !450, file: !451, line: 785, baseType: !515, size: 1, offset: 948, flags: DIFlagBitField, extraData: i64 944)
!523 = !DIDerivedType(tag: DW_TAG_member, name: "head_frag", scope: !450, file: !451, line: 786, baseType: !515, size: 1, offset: 949, flags: DIFlagBitField, extraData: i64 944)
!524 = !DIDerivedType(tag: DW_TAG_member, name: "pfmemalloc", scope: !450, file: !451, line: 787, baseType: !515, size: 1, offset: 950, flags: DIFlagBitField, extraData: i64 944)
!525 = !DIDerivedType(tag: DW_TAG_member, name: "headers_start", scope: !450, file: !451, line: 795, baseType: !526, offset: 960)
!526 = !DICompositeType(tag: DW_TAG_array_type, baseType: !527, elements: !517)
!527 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u32", file: !368, line: 27, baseType: !11)
!528 = !DIDerivedType(tag: DW_TAG_member, name: "__pkt_type_offset", scope: !450, file: !451, line: 807, baseType: !514, offset: 960)
!529 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_type", scope: !450, file: !451, line: 809, baseType: !515, size: 3, offset: 960, flags: DIFlagBitField, extraData: i64 960)
!530 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_df", scope: !450, file: !451, line: 810, baseType: !515, size: 1, offset: 963, flags: DIFlagBitField, extraData: i64 960)
!531 = !DIDerivedType(tag: DW_TAG_member, name: "nf_trace", scope: !450, file: !451, line: 811, baseType: !515, size: 1, offset: 964, flags: DIFlagBitField, extraData: i64 960)
!532 = !DIDerivedType(tag: DW_TAG_member, name: "ip_summed", scope: !450, file: !451, line: 812, baseType: !515, size: 2, offset: 965, flags: DIFlagBitField, extraData: i64 960)
!533 = !DIDerivedType(tag: DW_TAG_member, name: "ooo_okay", scope: !450, file: !451, line: 813, baseType: !515, size: 1, offset: 967, flags: DIFlagBitField, extraData: i64 960)
!534 = !DIDerivedType(tag: DW_TAG_member, name: "l4_hash", scope: !450, file: !451, line: 815, baseType: !515, size: 1, offset: 968, flags: DIFlagBitField, extraData: i64 960)
!535 = !DIDerivedType(tag: DW_TAG_member, name: "sw_hash", scope: !450, file: !451, line: 816, baseType: !515, size: 1, offset: 969, flags: DIFlagBitField, extraData: i64 960)
!536 = !DIDerivedType(tag: DW_TAG_member, name: "wifi_acked_valid", scope: !450, file: !451, line: 817, baseType: !515, size: 1, offset: 970, flags: DIFlagBitField, extraData: i64 960)
!537 = !DIDerivedType(tag: DW_TAG_member, name: "wifi_acked", scope: !450, file: !451, line: 818, baseType: !515, size: 1, offset: 971, flags: DIFlagBitField, extraData: i64 960)
!538 = !DIDerivedType(tag: DW_TAG_member, name: "no_fcs", scope: !450, file: !451, line: 819, baseType: !515, size: 1, offset: 972, flags: DIFlagBitField, extraData: i64 960)
!539 = !DIDerivedType(tag: DW_TAG_member, name: "encapsulation", scope: !450, file: !451, line: 821, baseType: !515, size: 1, offset: 973, flags: DIFlagBitField, extraData: i64 960)
!540 = !DIDerivedType(tag: DW_TAG_member, name: "encap_hdr_csum", scope: !450, file: !451, line: 822, baseType: !515, size: 1, offset: 974, flags: DIFlagBitField, extraData: i64 960)
!541 = !DIDerivedType(tag: DW_TAG_member, name: "csum_valid", scope: !450, file: !451, line: 823, baseType: !515, size: 1, offset: 975, flags: DIFlagBitField, extraData: i64 960)
!542 = !DIDerivedType(tag: DW_TAG_member, name: "__pkt_vlan_present_offset", scope: !450, file: !451, line: 832, baseType: !514, offset: 976)
!543 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_present", scope: !450, file: !451, line: 834, baseType: !515, size: 1, offset: 976, flags: DIFlagBitField, extraData: i64 976)
!544 = !DIDerivedType(tag: DW_TAG_member, name: "csum_complete_sw", scope: !450, file: !451, line: 835, baseType: !515, size: 1, offset: 977, flags: DIFlagBitField, extraData: i64 976)
!545 = !DIDerivedType(tag: DW_TAG_member, name: "csum_level", scope: !450, file: !451, line: 836, baseType: !515, size: 2, offset: 978, flags: DIFlagBitField, extraData: i64 976)
!546 = !DIDerivedType(tag: DW_TAG_member, name: "csum_not_inet", scope: !450, file: !451, line: 837, baseType: !515, size: 1, offset: 980, flags: DIFlagBitField, extraData: i64 976)
!547 = !DIDerivedType(tag: DW_TAG_member, name: "dst_pending_confirm", scope: !450, file: !451, line: 838, baseType: !515, size: 1, offset: 981, flags: DIFlagBitField, extraData: i64 976)
!548 = !DIDerivedType(tag: DW_TAG_member, name: "ndisc_nodetype", scope: !450, file: !451, line: 840, baseType: !515, size: 2, offset: 982, flags: DIFlagBitField, extraData: i64 976)
!549 = !DIDerivedType(tag: DW_TAG_member, name: "ipvs_property", scope: !450, file: !451, line: 843, baseType: !515, size: 1, offset: 984, flags: DIFlagBitField, extraData: i64 976)
!550 = !DIDerivedType(tag: DW_TAG_member, name: "inner_protocol_type", scope: !450, file: !451, line: 844, baseType: !515, size: 1, offset: 985, flags: DIFlagBitField, extraData: i64 976)
!551 = !DIDerivedType(tag: DW_TAG_member, name: "remcsum_offload", scope: !450, file: !451, line: 845, baseType: !515, size: 1, offset: 986, flags: DIFlagBitField, extraData: i64 976)
!552 = !DIDerivedType(tag: DW_TAG_member, name: "offload_fwd_mark", scope: !450, file: !451, line: 847, baseType: !515, size: 1, offset: 987, flags: DIFlagBitField, extraData: i64 976)
!553 = !DIDerivedType(tag: DW_TAG_member, name: "offload_l3_fwd_mark", scope: !450, file: !451, line: 848, baseType: !515, size: 1, offset: 988, flags: DIFlagBitField, extraData: i64 976)
!554 = !DIDerivedType(tag: DW_TAG_member, scope: !450, file: !451, line: 866, baseType: !555, size: 32, offset: 992)
!555 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !450, file: !451, line: 866, size: 32, elements: !556)
!556 = !{!557, !560}
!557 = !DIDerivedType(tag: DW_TAG_member, name: "csum", scope: !555, file: !451, line: 867, baseType: !558, size: 32)
!558 = !DIDerivedType(tag: DW_TAG_typedef, name: "__wsum", file: !559, line: 37, baseType: !527)
!559 = !DIFile(filename: "./include/uapi/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!560 = !DIDerivedType(tag: DW_TAG_member, scope: !555, file: !451, line: 868, baseType: !561, size: 32)
!561 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !555, file: !451, line: 868, size: 32, elements: !562)
!562 = !{!563, !564}
!563 = !DIDerivedType(tag: DW_TAG_member, name: "csum_start", scope: !561, file: !451, line: 869, baseType: !509, size: 16)
!564 = !DIDerivedType(tag: DW_TAG_member, name: "csum_offset", scope: !561, file: !451, line: 870, baseType: !509, size: 16, offset: 16)
!565 = !DIDerivedType(tag: DW_TAG_member, name: "priority", scope: !450, file: !451, line: 873, baseType: !527, size: 32, offset: 1024)
!566 = !DIDerivedType(tag: DW_TAG_member, name: "skb_iif", scope: !450, file: !451, line: 874, baseType: !5, size: 32, offset: 1056)
!567 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !450, file: !451, line: 875, baseType: !527, size: 32, offset: 1088)
!568 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_proto", scope: !450, file: !451, line: 876, baseType: !569, size: 16, offset: 1120)
!569 = !DIDerivedType(tag: DW_TAG_typedef, name: "__be16", file: !559, line: 30, baseType: !509)
!570 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_tci", scope: !450, file: !451, line: 877, baseType: !509, size: 16, offset: 1136)
!571 = !DIDerivedType(tag: DW_TAG_member, scope: !450, file: !451, line: 879, baseType: !572, size: 32, offset: 1152)
!572 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !450, file: !451, line: 879, size: 32, elements: !573)
!573 = !{!574, !575}
!574 = !DIDerivedType(tag: DW_TAG_member, name: "napi_id", scope: !572, file: !451, line: 880, baseType: !11, size: 32)
!575 = !DIDerivedType(tag: DW_TAG_member, name: "sender_cpu", scope: !572, file: !451, line: 881, baseType: !11, size: 32)
!576 = !DIDerivedType(tag: DW_TAG_member, scope: !450, file: !451, line: 888, baseType: !577, size: 32, offset: 1184)
!577 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !450, file: !451, line: 888, size: 32, elements: !578)
!578 = !{!579, !580}
!579 = !DIDerivedType(tag: DW_TAG_member, name: "mark", scope: !577, file: !451, line: 889, baseType: !527, size: 32)
!580 = !DIDerivedType(tag: DW_TAG_member, name: "reserved_tailroom", scope: !577, file: !451, line: 890, baseType: !527, size: 32)
!581 = !DIDerivedType(tag: DW_TAG_member, scope: !450, file: !451, line: 893, baseType: !582, size: 16, offset: 1216)
!582 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !450, file: !451, line: 893, size: 16, elements: !583)
!583 = !{!584, !585}
!584 = !DIDerivedType(tag: DW_TAG_member, name: "inner_protocol", scope: !582, file: !451, line: 894, baseType: !569, size: 16)
!585 = !DIDerivedType(tag: DW_TAG_member, name: "inner_ipproto", scope: !582, file: !451, line: 895, baseType: !515, size: 8)
!586 = !DIDerivedType(tag: DW_TAG_member, name: "inner_transport_header", scope: !450, file: !451, line: 898, baseType: !509, size: 16, offset: 1232)
!587 = !DIDerivedType(tag: DW_TAG_member, name: "inner_network_header", scope: !450, file: !451, line: 899, baseType: !509, size: 16, offset: 1248)
!588 = !DIDerivedType(tag: DW_TAG_member, name: "inner_mac_header", scope: !450, file: !451, line: 900, baseType: !509, size: 16, offset: 1264)
!589 = !DIDerivedType(tag: DW_TAG_member, name: "protocol", scope: !450, file: !451, line: 902, baseType: !569, size: 16, offset: 1280)
!590 = !DIDerivedType(tag: DW_TAG_member, name: "transport_header", scope: !450, file: !451, line: 903, baseType: !509, size: 16, offset: 1296)
!591 = !DIDerivedType(tag: DW_TAG_member, name: "network_header", scope: !450, file: !451, line: 904, baseType: !509, size: 16, offset: 1312)
!592 = !DIDerivedType(tag: DW_TAG_member, name: "mac_header", scope: !450, file: !451, line: 905, baseType: !509, size: 16, offset: 1328)
!593 = !DIDerivedType(tag: DW_TAG_member, name: "headers_end", scope: !450, file: !451, line: 908, baseType: !526, offset: 1344)
!594 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !450, file: !451, line: 912, baseType: !595, size: 32, offset: 1344)
!595 = !DIDerivedType(tag: DW_TAG_typedef, name: "sk_buff_data_t", file: !451, line: 606, baseType: !11)
!596 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !450, file: !451, line: 913, baseType: !595, size: 32, offset: 1376)
!597 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !450, file: !451, line: 914, baseType: !598, size: 64, offset: 1408)
!598 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !516, size: 64)
!599 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !450, file: !451, line: 915, baseType: !598, size: 64, offset: 1472)
!600 = !DIDerivedType(tag: DW_TAG_member, name: "truesize", scope: !450, file: !451, line: 916, baseType: !11, size: 32, offset: 1536)
!601 = !DIDerivedType(tag: DW_TAG_member, name: "users", scope: !450, file: !451, line: 917, baseType: !602, size: 32, offset: 1568)
!602 = !DIDerivedType(tag: DW_TAG_typedef, name: "refcount_t", file: !603, line: 113, baseType: !604)
!603 = !DIFile(filename: "./include/linux/refcount.h", directory: "/home/lizy2001/genbc/linux")
!604 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "refcount_struct", file: !603, line: 111, size: 32, elements: !605)
!605 = !{!606}
!606 = !DIDerivedType(tag: DW_TAG_member, name: "refs", scope: !604, file: !603, line: 112, baseType: !417, size: 32)
!607 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_features_check", scope: !432, file: !4, line: 1290, baseType: !608, size: 64, offset: 320)
!608 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !609, size: 64)
!609 = !DISubroutineType(types: !610)
!610 = !{!363, !449, !324, !363}
!611 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_select_queue", scope: !432, file: !4, line: 1293, baseType: !612, size: 64, offset: 384)
!612 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !613, size: 64)
!613 = !DISubroutineType(types: !614)
!614 = !{!615, !324, !449, !324}
!615 = !DIDerivedType(tag: DW_TAG_typedef, name: "u16", file: !366, line: 19, baseType: !509)
!616 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_change_rx_flags", scope: !432, file: !4, line: 1296, baseType: !617, size: 64, offset: 448)
!617 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !618, size: 64)
!618 = !DISubroutineType(types: !619)
!619 = !{null, !324, !5}
!620 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_rx_mode", scope: !432, file: !4, line: 1298, baseType: !439, size: 64, offset: 512)
!621 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_mac_address", scope: !432, file: !4, line: 1299, baseType: !622, size: 64, offset: 576)
!622 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !623, size: 64)
!623 = !DISubroutineType(types: !624)
!624 = !{!5, !324, !625}
!625 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!626 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_validate_addr", scope: !432, file: !4, line: 1301, baseType: !435, size: 64, offset: 640)
!627 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_do_ioctl", scope: !432, file: !4, line: 1302, baseType: !628, size: 64, offset: 704)
!628 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !629, size: 64)
!629 = !DISubroutineType(types: !630)
!630 = !{!5, !324, !631, !5}
!631 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !632, size: 64)
!632 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ifreq", file: !633, line: 234, size: 320, elements: !634)
!633 = !DIFile(filename: "./include/uapi/linux/if.h", directory: "/home/lizy2001/genbc/linux")
!634 = !{!635, !639}
!635 = !DIDerivedType(tag: DW_TAG_member, name: "ifr_ifrn", scope: !632, file: !633, line: 239, baseType: !636, size: 128)
!636 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !632, file: !633, line: 236, size: 128, elements: !637)
!637 = !{!638}
!638 = !DIDerivedType(tag: DW_TAG_member, name: "ifrn_name", scope: !636, file: !633, line: 238, baseType: !301, size: 128)
!639 = !DIDerivedType(tag: DW_TAG_member, name: "ifr_ifru", scope: !632, file: !633, line: 255, baseType: !640, size: 192, offset: 128)
!640 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !632, file: !633, line: 241, size: 192, elements: !641)
!641 = !{!642, !654, !655, !656, !657, !658, !660, !661, !662, !671, !672, !673, !674}
!642 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_addr", scope: !640, file: !633, line: 242, baseType: !643, size: 128)
!643 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sockaddr", file: !644, line: 32, size: 128, elements: !645)
!644 = !DIFile(filename: "./include/linux/socket.h", directory: "/home/lizy2001/genbc/linux")
!645 = !{!646, !650}
!646 = !DIDerivedType(tag: DW_TAG_member, name: "sa_family", scope: !643, file: !644, line: 33, baseType: !647, size: 16)
!647 = !DIDerivedType(tag: DW_TAG_typedef, name: "sa_family_t", file: !644, line: 26, baseType: !648)
!648 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_sa_family_t", file: !649, line: 10, baseType: !510)
!649 = !DIFile(filename: "./include/uapi/linux/socket.h", directory: "/home/lizy2001/genbc/linux")
!650 = !DIDerivedType(tag: DW_TAG_member, name: "sa_data", scope: !643, file: !644, line: 34, baseType: !651, size: 112, offset: 16)
!651 = !DICompositeType(tag: DW_TAG_array_type, baseType: !302, size: 112, elements: !652)
!652 = !{!653}
!653 = !DISubrange(count: 14)
!654 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_dstaddr", scope: !640, file: !633, line: 243, baseType: !643, size: 128)
!655 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_broadaddr", scope: !640, file: !633, line: 244, baseType: !643, size: 128)
!656 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_netmask", scope: !640, file: !633, line: 245, baseType: !643, size: 128)
!657 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_hwaddr", scope: !640, file: !633, line: 246, baseType: !643, size: 128)
!658 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_flags", scope: !640, file: !633, line: 247, baseType: !659, size: 16)
!659 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!660 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_ivalue", scope: !640, file: !633, line: 248, baseType: !5, size: 32)
!661 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_mtu", scope: !640, file: !633, line: 249, baseType: !5, size: 32)
!662 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_map", scope: !640, file: !633, line: 250, baseType: !663, size: 192)
!663 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ifmap", file: !633, line: 196, size: 192, elements: !664)
!664 = !{!665, !666, !667, !668, !669, !670}
!665 = !DIDerivedType(tag: DW_TAG_member, name: "mem_start", scope: !663, file: !633, line: 197, baseType: !346, size: 64)
!666 = !DIDerivedType(tag: DW_TAG_member, name: "mem_end", scope: !663, file: !633, line: 198, baseType: !346, size: 64, offset: 64)
!667 = !DIDerivedType(tag: DW_TAG_member, name: "base_addr", scope: !663, file: !633, line: 199, baseType: !510, size: 16, offset: 128)
!668 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !663, file: !633, line: 200, baseType: !516, size: 8, offset: 144)
!669 = !DIDerivedType(tag: DW_TAG_member, name: "dma", scope: !663, file: !633, line: 201, baseType: !516, size: 8, offset: 152)
!670 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !663, file: !633, line: 202, baseType: !516, size: 8, offset: 160)
!671 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_slave", scope: !640, file: !633, line: 251, baseType: !301, size: 128)
!672 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_newname", scope: !640, file: !633, line: 252, baseType: !301, size: 128)
!673 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_data", scope: !640, file: !633, line: 253, baseType: !625, size: 64)
!674 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_settings", scope: !640, file: !633, line: 254, baseType: !675, size: 128)
!675 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "if_settings", file: !633, line: 207, size: 128, elements: !676)
!676 = !{!677, !678, !679}
!677 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !675, file: !633, line: 208, baseType: !11, size: 32)
!678 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !675, file: !633, line: 209, baseType: !11, size: 32, offset: 32)
!679 = !DIDerivedType(tag: DW_TAG_member, name: "ifs_ifsu", scope: !675, file: !633, line: 222, baseType: !680, size: 64, offset: 64)
!680 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !675, file: !633, line: 210, size: 64, elements: !681)
!681 = !{!682, !690, !697, !709, !715, !722, !733, !741}
!682 = !DIDerivedType(tag: DW_TAG_member, name: "raw_hdlc", scope: !680, file: !633, line: 212, baseType: !683, size: 64)
!683 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !684, size: 64)
!684 = !DIDerivedType(tag: DW_TAG_typedef, name: "raw_hdlc_proto", file: !685, line: 56, baseType: !686)
!685 = !DIFile(filename: "./include/uapi/linux/hdlc/ioctl.h", directory: "/home/lizy2001/genbc/linux")
!686 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !685, line: 53, size: 32, elements: !687)
!687 = !{!688, !689}
!688 = !DIDerivedType(tag: DW_TAG_member, name: "encoding", scope: !686, file: !685, line: 54, baseType: !510, size: 16)
!689 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !686, file: !685, line: 55, baseType: !510, size: 16, offset: 16)
!690 = !DIDerivedType(tag: DW_TAG_member, name: "cisco", scope: !680, file: !633, line: 213, baseType: !691, size: 64)
!691 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !692, size: 64)
!692 = !DIDerivedType(tag: DW_TAG_typedef, name: "cisco_proto", file: !685, line: 80, baseType: !693)
!693 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !685, line: 77, size: 64, elements: !694)
!694 = !{!695, !696}
!695 = !DIDerivedType(tag: DW_TAG_member, name: "interval", scope: !693, file: !685, line: 78, baseType: !11, size: 32)
!696 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !693, file: !685, line: 79, baseType: !11, size: 32, offset: 32)
!697 = !DIDerivedType(tag: DW_TAG_member, name: "fr", scope: !680, file: !633, line: 214, baseType: !698, size: 64)
!698 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !699, size: 64)
!699 = !DIDerivedType(tag: DW_TAG_typedef, name: "fr_proto", file: !685, line: 66, baseType: !700)
!700 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !685, line: 58, size: 192, elements: !701)
!701 = !{!702, !703, !704, !705, !706, !707, !708}
!702 = !DIDerivedType(tag: DW_TAG_member, name: "t391", scope: !700, file: !685, line: 59, baseType: !11, size: 32)
!703 = !DIDerivedType(tag: DW_TAG_member, name: "t392", scope: !700, file: !685, line: 60, baseType: !11, size: 32, offset: 32)
!704 = !DIDerivedType(tag: DW_TAG_member, name: "n391", scope: !700, file: !685, line: 61, baseType: !11, size: 32, offset: 64)
!705 = !DIDerivedType(tag: DW_TAG_member, name: "n392", scope: !700, file: !685, line: 62, baseType: !11, size: 32, offset: 96)
!706 = !DIDerivedType(tag: DW_TAG_member, name: "n393", scope: !700, file: !685, line: 63, baseType: !11, size: 32, offset: 128)
!707 = !DIDerivedType(tag: DW_TAG_member, name: "lmi", scope: !700, file: !685, line: 64, baseType: !510, size: 16, offset: 160)
!708 = !DIDerivedType(tag: DW_TAG_member, name: "dce", scope: !700, file: !685, line: 65, baseType: !510, size: 16, offset: 176)
!709 = !DIDerivedType(tag: DW_TAG_member, name: "fr_pvc", scope: !680, file: !633, line: 215, baseType: !710, size: 64)
!710 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !711, size: 64)
!711 = !DIDerivedType(tag: DW_TAG_typedef, name: "fr_proto_pvc", file: !685, line: 70, baseType: !712)
!712 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !685, line: 68, size: 32, elements: !713)
!713 = !{!714}
!714 = !DIDerivedType(tag: DW_TAG_member, name: "dlci", scope: !712, file: !685, line: 69, baseType: !11, size: 32)
!715 = !DIDerivedType(tag: DW_TAG_member, name: "fr_pvc_info", scope: !680, file: !633, line: 216, baseType: !716, size: 64)
!716 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !717, size: 64)
!717 = !DIDerivedType(tag: DW_TAG_typedef, name: "fr_proto_pvc_info", file: !685, line: 75, baseType: !718)
!718 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !685, line: 72, size: 160, elements: !719)
!719 = !{!720, !721}
!720 = !DIDerivedType(tag: DW_TAG_member, name: "dlci", scope: !718, file: !685, line: 73, baseType: !11, size: 32)
!721 = !DIDerivedType(tag: DW_TAG_member, name: "master", scope: !718, file: !685, line: 74, baseType: !301, size: 128, offset: 32)
!722 = !DIDerivedType(tag: DW_TAG_member, name: "x25", scope: !680, file: !633, line: 217, baseType: !723, size: 64)
!723 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !724, size: 64)
!724 = !DIDerivedType(tag: DW_TAG_typedef, name: "x25_hdlc_proto", file: !685, line: 89, baseType: !725)
!725 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !685, line: 82, size: 192, elements: !726)
!726 = !{!727, !728, !729, !730, !731, !732}
!727 = !DIDerivedType(tag: DW_TAG_member, name: "dce", scope: !725, file: !685, line: 83, baseType: !510, size: 16)
!728 = !DIDerivedType(tag: DW_TAG_member, name: "modulo", scope: !725, file: !685, line: 84, baseType: !11, size: 32, offset: 32)
!729 = !DIDerivedType(tag: DW_TAG_member, name: "window", scope: !725, file: !685, line: 85, baseType: !11, size: 32, offset: 64)
!730 = !DIDerivedType(tag: DW_TAG_member, name: "t1", scope: !725, file: !685, line: 86, baseType: !11, size: 32, offset: 96)
!731 = !DIDerivedType(tag: DW_TAG_member, name: "t2", scope: !725, file: !685, line: 87, baseType: !11, size: 32, offset: 128)
!732 = !DIDerivedType(tag: DW_TAG_member, name: "n2", scope: !725, file: !685, line: 88, baseType: !11, size: 32, offset: 160)
!733 = !DIDerivedType(tag: DW_TAG_member, name: "sync", scope: !680, file: !633, line: 220, baseType: !734, size: 64)
!734 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !735, size: 64)
!735 = !DIDerivedType(tag: DW_TAG_typedef, name: "sync_serial_settings", file: !685, line: 44, baseType: !736)
!736 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !685, line: 40, size: 96, elements: !737)
!737 = !{!738, !739, !740}
!738 = !DIDerivedType(tag: DW_TAG_member, name: "clock_rate", scope: !736, file: !685, line: 41, baseType: !11, size: 32)
!739 = !DIDerivedType(tag: DW_TAG_member, name: "clock_type", scope: !736, file: !685, line: 42, baseType: !11, size: 32, offset: 32)
!740 = !DIDerivedType(tag: DW_TAG_member, name: "loopback", scope: !736, file: !685, line: 43, baseType: !510, size: 16, offset: 64)
!741 = !DIDerivedType(tag: DW_TAG_member, name: "te1", scope: !680, file: !633, line: 221, baseType: !742, size: 64)
!742 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !743, size: 64)
!743 = !DIDerivedType(tag: DW_TAG_typedef, name: "te1_settings", file: !685, line: 51, baseType: !744)
!744 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !685, line: 46, size: 128, elements: !745)
!745 = !{!746, !747, !748, !749}
!746 = !DIDerivedType(tag: DW_TAG_member, name: "clock_rate", scope: !744, file: !685, line: 47, baseType: !11, size: 32)
!747 = !DIDerivedType(tag: DW_TAG_member, name: "clock_type", scope: !744, file: !685, line: 48, baseType: !11, size: 32, offset: 32)
!748 = !DIDerivedType(tag: DW_TAG_member, name: "loopback", scope: !744, file: !685, line: 49, baseType: !510, size: 16, offset: 64)
!749 = !DIDerivedType(tag: DW_TAG_member, name: "slot_map", scope: !744, file: !685, line: 50, baseType: !11, size: 32, offset: 96)
!750 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_config", scope: !432, file: !4, line: 1304, baseType: !751, size: 64, offset: 768)
!751 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !752, size: 64)
!752 = !DISubroutineType(types: !753)
!753 = !{!5, !324, !754}
!754 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !663, size: 64)
!755 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_change_mtu", scope: !432, file: !4, line: 1306, baseType: !756, size: 64, offset: 832)
!756 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !757, size: 64)
!757 = !DISubroutineType(types: !758)
!758 = !{!5, !324, !5}
!759 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_neigh_setup", scope: !432, file: !4, line: 1308, baseType: !760, size: 64, offset: 896)
!760 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !761, size: 64)
!761 = !DISubroutineType(types: !762)
!762 = !{!5, !324, !763}
!763 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !764, size: 64)
!764 = !DICompositeType(tag: DW_TAG_structure_type, name: "neigh_parms", file: !4, line: 206, flags: DIFlagFwdDecl)
!765 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_tx_timeout", scope: !432, file: !4, line: 1310, baseType: !766, size: 64, offset: 960)
!766 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !767, size: 64)
!767 = !DISubroutineType(types: !768)
!768 = !{null, !324, !11}
!769 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_stats64", scope: !432, file: !4, line: 1313, baseType: !770, size: 64, offset: 1024)
!770 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !771, size: 64)
!771 = !DISubroutineType(types: !772)
!772 = !{null, !324, !773}
!773 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !774, size: 64)
!774 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtnl_link_stats64", file: !775, line: 214, size: 1536, elements: !776)
!775 = !DIFile(filename: "./include/uapi/linux/if_link.h", directory: "/home/lizy2001/genbc/linux")
!776 = !{!777, !778, !779, !780, !781, !782, !783, !784, !785, !786, !787, !788, !789, !790, !791, !792, !793, !794, !795, !796, !797, !798, !799, !800}
!777 = !DIDerivedType(tag: DW_TAG_member, name: "rx_packets", scope: !774, file: !775, line: 215, baseType: !367, size: 64)
!778 = !DIDerivedType(tag: DW_TAG_member, name: "tx_packets", scope: !774, file: !775, line: 216, baseType: !367, size: 64, offset: 64)
!779 = !DIDerivedType(tag: DW_TAG_member, name: "rx_bytes", scope: !774, file: !775, line: 217, baseType: !367, size: 64, offset: 128)
!780 = !DIDerivedType(tag: DW_TAG_member, name: "tx_bytes", scope: !774, file: !775, line: 218, baseType: !367, size: 64, offset: 192)
!781 = !DIDerivedType(tag: DW_TAG_member, name: "rx_errors", scope: !774, file: !775, line: 219, baseType: !367, size: 64, offset: 256)
!782 = !DIDerivedType(tag: DW_TAG_member, name: "tx_errors", scope: !774, file: !775, line: 220, baseType: !367, size: 64, offset: 320)
!783 = !DIDerivedType(tag: DW_TAG_member, name: "rx_dropped", scope: !774, file: !775, line: 221, baseType: !367, size: 64, offset: 384)
!784 = !DIDerivedType(tag: DW_TAG_member, name: "tx_dropped", scope: !774, file: !775, line: 222, baseType: !367, size: 64, offset: 448)
!785 = !DIDerivedType(tag: DW_TAG_member, name: "multicast", scope: !774, file: !775, line: 223, baseType: !367, size: 64, offset: 512)
!786 = !DIDerivedType(tag: DW_TAG_member, name: "collisions", scope: !774, file: !775, line: 224, baseType: !367, size: 64, offset: 576)
!787 = !DIDerivedType(tag: DW_TAG_member, name: "rx_length_errors", scope: !774, file: !775, line: 227, baseType: !367, size: 64, offset: 640)
!788 = !DIDerivedType(tag: DW_TAG_member, name: "rx_over_errors", scope: !774, file: !775, line: 228, baseType: !367, size: 64, offset: 704)
!789 = !DIDerivedType(tag: DW_TAG_member, name: "rx_crc_errors", scope: !774, file: !775, line: 229, baseType: !367, size: 64, offset: 768)
!790 = !DIDerivedType(tag: DW_TAG_member, name: "rx_frame_errors", scope: !774, file: !775, line: 230, baseType: !367, size: 64, offset: 832)
!791 = !DIDerivedType(tag: DW_TAG_member, name: "rx_fifo_errors", scope: !774, file: !775, line: 231, baseType: !367, size: 64, offset: 896)
!792 = !DIDerivedType(tag: DW_TAG_member, name: "rx_missed_errors", scope: !774, file: !775, line: 232, baseType: !367, size: 64, offset: 960)
!793 = !DIDerivedType(tag: DW_TAG_member, name: "tx_aborted_errors", scope: !774, file: !775, line: 235, baseType: !367, size: 64, offset: 1024)
!794 = !DIDerivedType(tag: DW_TAG_member, name: "tx_carrier_errors", scope: !774, file: !775, line: 236, baseType: !367, size: 64, offset: 1088)
!795 = !DIDerivedType(tag: DW_TAG_member, name: "tx_fifo_errors", scope: !774, file: !775, line: 237, baseType: !367, size: 64, offset: 1152)
!796 = !DIDerivedType(tag: DW_TAG_member, name: "tx_heartbeat_errors", scope: !774, file: !775, line: 238, baseType: !367, size: 64, offset: 1216)
!797 = !DIDerivedType(tag: DW_TAG_member, name: "tx_window_errors", scope: !774, file: !775, line: 239, baseType: !367, size: 64, offset: 1280)
!798 = !DIDerivedType(tag: DW_TAG_member, name: "rx_compressed", scope: !774, file: !775, line: 242, baseType: !367, size: 64, offset: 1344)
!799 = !DIDerivedType(tag: DW_TAG_member, name: "tx_compressed", scope: !774, file: !775, line: 243, baseType: !367, size: 64, offset: 1408)
!800 = !DIDerivedType(tag: DW_TAG_member, name: "rx_nohandler", scope: !774, file: !775, line: 244, baseType: !367, size: 64, offset: 1472)
!801 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_has_offload_stats", scope: !432, file: !4, line: 1315, baseType: !802, size: 64, offset: 1088)
!802 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !803, size: 64)
!803 = !DISubroutineType(types: !804)
!804 = !{!805, !807, !5}
!805 = !DIDerivedType(tag: DW_TAG_typedef, name: "bool", file: !311, line: 30, baseType: !806)
!806 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!807 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !808, size: 64)
!808 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !298)
!809 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_offload_stats", scope: !432, file: !4, line: 1316, baseType: !810, size: 64, offset: 1152)
!810 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !811, size: 64)
!811 = !DISubroutineType(types: !812)
!812 = !{!5, !5, !807, !625}
!813 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_stats", scope: !432, file: !4, line: 1319, baseType: !814, size: 64, offset: 1216)
!814 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !815, size: 64)
!815 = !DISubroutineType(types: !816)
!816 = !{!817, !324}
!817 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !379, size: 64)
!818 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_vlan_rx_add_vid", scope: !432, file: !4, line: 1321, baseType: !819, size: 64, offset: 1280)
!819 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !820, size: 64)
!820 = !DISubroutineType(types: !821)
!821 = !{!5, !324, !569, !615}
!822 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_vlan_rx_kill_vid", scope: !432, file: !4, line: 1323, baseType: !819, size: 64, offset: 1344)
!823 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_mac", scope: !432, file: !4, line: 1331, baseType: !824, size: 64, offset: 1408)
!824 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !825, size: 64)
!825 = !DISubroutineType(types: !826)
!826 = !{!5, !324, !5, !827}
!827 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !828, size: 64)
!828 = !DIDerivedType(tag: DW_TAG_typedef, name: "u8", file: !366, line: 17, baseType: !515)
!829 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_vlan", scope: !432, file: !4, line: 1333, baseType: !830, size: 64, offset: 1472)
!830 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !831, size: 64)
!831 = !DISubroutineType(types: !832)
!832 = !{!5, !324, !5, !615, !828, !569}
!833 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_rate", scope: !432, file: !4, line: 1336, baseType: !834, size: 64, offset: 1536)
!834 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !835, size: 64)
!835 = !DISubroutineType(types: !836)
!836 = !{!5, !324, !5, !5, !5}
!837 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_spoofchk", scope: !432, file: !4, line: 1339, baseType: !838, size: 64, offset: 1600)
!838 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !839, size: 64)
!839 = !DISubroutineType(types: !840)
!840 = !{!5, !324, !5, !805}
!841 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_trust", scope: !432, file: !4, line: 1341, baseType: !838, size: 64, offset: 1664)
!842 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_vf_config", scope: !432, file: !4, line: 1343, baseType: !843, size: 64, offset: 1728)
!843 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !844, size: 64)
!844 = !DISubroutineType(types: !845)
!845 = !{!5, !324, !5, !846}
!846 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !847, size: 64)
!847 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ifla_vf_info", file: !848, line: 20, size: 576, elements: !849)
!848 = !DIFile(filename: "./include/linux/if_link.h", directory: "/home/lizy2001/genbc/linux")
!849 = !{!850, !851, !855, !856, !857, !858, !859, !860, !861, !862, !863}
!850 = !DIDerivedType(tag: DW_TAG_member, name: "vf", scope: !847, file: !848, line: 21, baseType: !527, size: 32)
!851 = !DIDerivedType(tag: DW_TAG_member, name: "mac", scope: !847, file: !848, line: 22, baseType: !852, size: 256, offset: 32)
!852 = !DICompositeType(tag: DW_TAG_array_type, baseType: !515, size: 256, elements: !853)
!853 = !{!854}
!854 = !DISubrange(count: 32)
!855 = !DIDerivedType(tag: DW_TAG_member, name: "vlan", scope: !847, file: !848, line: 23, baseType: !527, size: 32, offset: 288)
!856 = !DIDerivedType(tag: DW_TAG_member, name: "qos", scope: !847, file: !848, line: 24, baseType: !527, size: 32, offset: 320)
!857 = !DIDerivedType(tag: DW_TAG_member, name: "spoofchk", scope: !847, file: !848, line: 25, baseType: !527, size: 32, offset: 352)
!858 = !DIDerivedType(tag: DW_TAG_member, name: "linkstate", scope: !847, file: !848, line: 26, baseType: !527, size: 32, offset: 384)
!859 = !DIDerivedType(tag: DW_TAG_member, name: "min_tx_rate", scope: !847, file: !848, line: 27, baseType: !527, size: 32, offset: 416)
!860 = !DIDerivedType(tag: DW_TAG_member, name: "max_tx_rate", scope: !847, file: !848, line: 28, baseType: !527, size: 32, offset: 448)
!861 = !DIDerivedType(tag: DW_TAG_member, name: "rss_query_en", scope: !847, file: !848, line: 29, baseType: !527, size: 32, offset: 480)
!862 = !DIDerivedType(tag: DW_TAG_member, name: "trusted", scope: !847, file: !848, line: 30, baseType: !527, size: 32, offset: 512)
!863 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_proto", scope: !847, file: !848, line: 31, baseType: !569, size: 16, offset: 544)
!864 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_link_state", scope: !432, file: !4, line: 1346, baseType: !865, size: 64, offset: 1792)
!865 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !866, size: 64)
!866 = !DISubroutineType(types: !867)
!867 = !{!5, !324, !5, !5}
!868 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_vf_stats", scope: !432, file: !4, line: 1348, baseType: !869, size: 64, offset: 1856)
!869 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !870, size: 64)
!870 = !DISubroutineType(types: !871)
!871 = !{!5, !324, !5, !872}
!872 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !873, size: 64)
!873 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ifla_vf_stats", file: !848, line: 9, size: 512, elements: !874)
!874 = !{!875, !876, !877, !878, !879, !880, !881, !882}
!875 = !DIDerivedType(tag: DW_TAG_member, name: "rx_packets", scope: !873, file: !848, line: 10, baseType: !367, size: 64)
!876 = !DIDerivedType(tag: DW_TAG_member, name: "tx_packets", scope: !873, file: !848, line: 11, baseType: !367, size: 64, offset: 64)
!877 = !DIDerivedType(tag: DW_TAG_member, name: "rx_bytes", scope: !873, file: !848, line: 12, baseType: !367, size: 64, offset: 128)
!878 = !DIDerivedType(tag: DW_TAG_member, name: "tx_bytes", scope: !873, file: !848, line: 13, baseType: !367, size: 64, offset: 192)
!879 = !DIDerivedType(tag: DW_TAG_member, name: "broadcast", scope: !873, file: !848, line: 14, baseType: !367, size: 64, offset: 256)
!880 = !DIDerivedType(tag: DW_TAG_member, name: "multicast", scope: !873, file: !848, line: 15, baseType: !367, size: 64, offset: 320)
!881 = !DIDerivedType(tag: DW_TAG_member, name: "rx_dropped", scope: !873, file: !848, line: 16, baseType: !367, size: 64, offset: 384)
!882 = !DIDerivedType(tag: DW_TAG_member, name: "tx_dropped", scope: !873, file: !848, line: 17, baseType: !367, size: 64, offset: 448)
!883 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_port", scope: !432, file: !4, line: 1352, baseType: !884, size: 64, offset: 1920)
!884 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !885, size: 64)
!885 = !DISubroutineType(types: !886)
!886 = !{!5, !324, !5, !887}
!887 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !888, size: 64)
!888 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !889, size: 64)
!889 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nlattr", file: !890, line: 213, size: 32, elements: !891)
!890 = !DIFile(filename: "./include/uapi/linux/netlink.h", directory: "/home/lizy2001/genbc/linux")
!891 = !{!892, !893}
!892 = !DIDerivedType(tag: DW_TAG_member, name: "nla_len", scope: !889, file: !890, line: 214, baseType: !509, size: 16)
!893 = !DIDerivedType(tag: DW_TAG_member, name: "nla_type", scope: !889, file: !890, line: 215, baseType: !509, size: 16, offset: 16)
!894 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_vf_port", scope: !432, file: !4, line: 1355, baseType: !895, size: 64, offset: 1984)
!895 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !896, size: 64)
!896 = !DISubroutineType(types: !897)
!897 = !{!5, !324, !5, !449}
!898 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_vf_guid", scope: !432, file: !4, line: 1357, baseType: !899, size: 64, offset: 2048)
!899 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !900, size: 64)
!900 = !DISubroutineType(types: !901)
!901 = !{!5, !324, !5, !902, !902}
!902 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !903, size: 64)
!903 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ifla_vf_guid", file: !775, line: 956, size: 128, elements: !904)
!904 = !{!905, !906}
!905 = !DIDerivedType(tag: DW_TAG_member, name: "vf", scope: !903, file: !775, line: 957, baseType: !527, size: 32)
!906 = !DIDerivedType(tag: DW_TAG_member, name: "guid", scope: !903, file: !775, line: 958, baseType: !367, size: 64, offset: 64)
!907 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_guid", scope: !432, file: !4, line: 1361, baseType: !908, size: 64, offset: 2112)
!908 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !909, size: 64)
!909 = !DISubroutineType(types: !910)
!910 = !{!5, !324, !5, !365, !5}
!911 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_rss_query_en", scope: !432, file: !4, line: 1364, baseType: !838, size: 64, offset: 2176)
!912 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_setup_tc", scope: !432, file: !4, line: 1367, baseType: !913, size: 64, offset: 2240)
!913 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !914, size: 64)
!914 = !DISubroutineType(types: !915)
!915 = !{!5, !324, !10, !625}
!916 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_add_slave", scope: !432, file: !4, line: 1400, baseType: !917, size: 64, offset: 2304)
!917 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !918, size: 64)
!918 = !DISubroutineType(types: !919)
!919 = !{!5, !324, !324, !920}
!920 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !921, size: 64)
!921 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netlink_ext_ack", file: !922, line: 75, size: 384, elements: !923)
!922 = !DIFile(filename: "./include/linux/netlink.h", directory: "/home/lizy2001/genbc/linux")
!923 = !{!924, !925, !928, !932, !936}
!924 = !DIDerivedType(tag: DW_TAG_member, name: "_msg", scope: !921, file: !922, line: 76, baseType: !326, size: 64)
!925 = !DIDerivedType(tag: DW_TAG_member, name: "bad_attr", scope: !921, file: !922, line: 77, baseType: !926, size: 64, offset: 64)
!926 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !927, size: 64)
!927 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !889)
!928 = !DIDerivedType(tag: DW_TAG_member, name: "policy", scope: !921, file: !922, line: 78, baseType: !929, size: 64, offset: 128)
!929 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !930, size: 64)
!930 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !931)
!931 = !DICompositeType(tag: DW_TAG_structure_type, name: "nla_policy", file: !922, line: 78, flags: DIFlagFwdDecl)
!932 = !DIDerivedType(tag: DW_TAG_member, name: "cookie", scope: !921, file: !922, line: 79, baseType: !933, size: 160, offset: 192)
!933 = !DICompositeType(tag: DW_TAG_array_type, baseType: !828, size: 160, elements: !934)
!934 = !{!935}
!935 = !DISubrange(count: 20)
!936 = !DIDerivedType(tag: DW_TAG_member, name: "cookie_len", scope: !921, file: !922, line: 80, baseType: !828, size: 8, offset: 352)
!937 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_del_slave", scope: !432, file: !4, line: 1403, baseType: !938, size: 64, offset: 2368)
!938 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !939, size: 64)
!939 = !DISubroutineType(types: !940)
!940 = !{!5, !324, !324}
!941 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_xmit_slave", scope: !432, file: !4, line: 1405, baseType: !942, size: 64, offset: 2432)
!942 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !943, size: 64)
!943 = !DISubroutineType(types: !944)
!944 = !{!324, !324, !449, !805}
!945 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_fix_features", scope: !432, file: !4, line: 1408, baseType: !946, size: 64, offset: 2496)
!946 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !947, size: 64)
!947 = !DISubroutineType(types: !948)
!948 = !{!363, !324, !363}
!949 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_features", scope: !432, file: !4, line: 1410, baseType: !950, size: 64, offset: 2560)
!950 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !951, size: 64)
!951 = !DISubroutineType(types: !952)
!952 = !{!5, !324, !363}
!953 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_neigh_construct", scope: !432, file: !4, line: 1412, baseType: !954, size: 64, offset: 2624)
!954 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !955, size: 64)
!955 = !DISubroutineType(types: !956)
!956 = !{!5, !324, !957}
!957 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !958, size: 64)
!958 = !DICompositeType(tag: DW_TAG_structure_type, name: "neighbour", file: !959, line: 35, flags: DIFlagFwdDecl)
!959 = !DIFile(filename: "./include/net/dst_ops.h", directory: "/home/lizy2001/genbc/linux")
!960 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_neigh_destroy", scope: !432, file: !4, line: 1414, baseType: !961, size: 64, offset: 2688)
!961 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !962, size: 64)
!962 = !DISubroutineType(types: !963)
!963 = !{null, !324, !957}
!964 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_fdb_add", scope: !432, file: !4, line: 1417, baseType: !965, size: 64, offset: 2752)
!965 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !966, size: 64)
!966 = !DISubroutineType(types: !967)
!967 = !{!5, !968, !887, !324, !980, !615, !615, !920}
!968 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !969, size: 64)
!969 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ndmsg", file: !970, line: 8, size: 96, elements: !971)
!970 = !DIFile(filename: "./include/uapi/linux/neighbour.h", directory: "/home/lizy2001/genbc/linux")
!971 = !{!972, !973, !974, !975, !977, !978, !979}
!972 = !DIDerivedType(tag: DW_TAG_member, name: "ndm_family", scope: !969, file: !970, line: 9, baseType: !515, size: 8)
!973 = !DIDerivedType(tag: DW_TAG_member, name: "ndm_pad1", scope: !969, file: !970, line: 10, baseType: !515, size: 8, offset: 8)
!974 = !DIDerivedType(tag: DW_TAG_member, name: "ndm_pad2", scope: !969, file: !970, line: 11, baseType: !509, size: 16, offset: 16)
!975 = !DIDerivedType(tag: DW_TAG_member, name: "ndm_ifindex", scope: !969, file: !970, line: 12, baseType: !976, size: 32, offset: 32)
!976 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s32", file: !368, line: 26, baseType: !5)
!977 = !DIDerivedType(tag: DW_TAG_member, name: "ndm_state", scope: !969, file: !970, line: 13, baseType: !509, size: 16, offset: 64)
!978 = !DIDerivedType(tag: DW_TAG_member, name: "ndm_flags", scope: !969, file: !970, line: 14, baseType: !515, size: 8, offset: 80)
!979 = !DIDerivedType(tag: DW_TAG_member, name: "ndm_type", scope: !969, file: !970, line: 15, baseType: !515, size: 8, offset: 88)
!980 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !981, size: 64)
!981 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !516)
!982 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_fdb_del", scope: !432, file: !4, line: 1424, baseType: !983, size: 64, offset: 2816)
!983 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !984, size: 64)
!984 = !DISubroutineType(types: !985)
!985 = !{!5, !968, !887, !324, !980, !615}
!986 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_fdb_dump", scope: !432, file: !4, line: 1429, baseType: !987, size: 64, offset: 2880)
!987 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !988, size: 64)
!988 = !DISubroutineType(types: !989)
!989 = !{!5, !449, !990, !324, !324, !1035}
!990 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !991, size: 64)
!991 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netlink_callback", file: !922, line: 203, size: 1024, elements: !992)
!992 = !{!993, !994, !1004, !1008, !1012, !1013, !1017, !1018, !1019, !1020, !1022, !1023, !1024, !1025}
!993 = !DIDerivedType(tag: DW_TAG_member, name: "skb", scope: !991, file: !922, line: 204, baseType: !449, size: 64)
!994 = !DIDerivedType(tag: DW_TAG_member, name: "nlh", scope: !991, file: !922, line: 205, baseType: !995, size: 64, offset: 64)
!995 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !996, size: 64)
!996 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !997)
!997 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nlmsghdr", file: !890, line: 44, size: 128, elements: !998)
!998 = !{!999, !1000, !1001, !1002, !1003}
!999 = !DIDerivedType(tag: DW_TAG_member, name: "nlmsg_len", scope: !997, file: !890, line: 45, baseType: !527, size: 32)
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "nlmsg_type", scope: !997, file: !890, line: 46, baseType: !509, size: 16, offset: 32)
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "nlmsg_flags", scope: !997, file: !890, line: 47, baseType: !509, size: 16, offset: 48)
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "nlmsg_seq", scope: !997, file: !890, line: 48, baseType: !527, size: 32, offset: 64)
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "nlmsg_pid", scope: !997, file: !890, line: 49, baseType: !527, size: 32, offset: 96)
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "dump", scope: !991, file: !922, line: 206, baseType: !1005, size: 64, offset: 128)
!1005 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1006, size: 64)
!1006 = !DISubroutineType(types: !1007)
!1007 = !{!5, !449, !990}
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !991, file: !922, line: 208, baseType: !1009, size: 64, offset: 192)
!1009 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1010, size: 64)
!1010 = !DISubroutineType(types: !1011)
!1011 = !{!5, !990}
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !991, file: !922, line: 209, baseType: !625, size: 64, offset: 256)
!1013 = !DIDerivedType(tag: DW_TAG_member, name: "module", scope: !991, file: !922, line: 211, baseType: !1014, size: 64, offset: 320)
!1014 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1015, size: 64)
!1015 = !DICompositeType(tag: DW_TAG_structure_type, name: "module", file: !1016, line: 76, flags: DIFlagFwdDecl)
!1016 = !DIFile(filename: "./arch/x86/include/asm/alternative.h", directory: "/home/lizy2001/genbc/linux")
!1017 = !DIDerivedType(tag: DW_TAG_member, name: "extack", scope: !991, file: !922, line: 212, baseType: !920, size: 64, offset: 384)
!1018 = !DIDerivedType(tag: DW_TAG_member, name: "family", scope: !991, file: !922, line: 213, baseType: !615, size: 16, offset: 448)
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "answer_flags", scope: !991, file: !922, line: 214, baseType: !615, size: 16, offset: 464)
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "min_dump_alloc", scope: !991, file: !922, line: 215, baseType: !1021, size: 32, offset: 480)
!1021 = !DIDerivedType(tag: DW_TAG_typedef, name: "u32", file: !366, line: 21, baseType: !527)
!1022 = !DIDerivedType(tag: DW_TAG_member, name: "prev_seq", scope: !991, file: !922, line: 216, baseType: !11, size: 32, offset: 512)
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !991, file: !922, line: 216, baseType: !11, size: 32, offset: 544)
!1024 = !DIDerivedType(tag: DW_TAG_member, name: "strict_check", scope: !991, file: !922, line: 217, baseType: !805, size: 8, offset: 576)
!1025 = !DIDerivedType(tag: DW_TAG_member, scope: !991, file: !922, line: 218, baseType: !1026, size: 384, offset: 640)
!1026 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !991, file: !922, line: 218, size: 384, elements: !1027)
!1027 = !{!1028, !1030}
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "ctx", scope: !1026, file: !922, line: 219, baseType: !1029, size: 384)
!1029 = !DICompositeType(tag: DW_TAG_array_type, baseType: !828, size: 384, elements: !492)
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !1026, file: !922, line: 224, baseType: !1031, size: 384)
!1031 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1032, size: 384, elements: !1033)
!1032 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!1033 = !{!1034}
!1034 = !DISubrange(count: 6)
!1035 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5, size: 64)
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_fdb_get", scope: !432, file: !4, line: 1434, baseType: !1037, size: 64, offset: 2944)
!1037 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1038, size: 64)
!1038 = !DISubroutineType(types: !1039)
!1039 = !{!5, !449, !887, !324, !980, !615, !1021, !1021, !920}
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_bridge_setlink", scope: !432, file: !4, line: 1440, baseType: !1041, size: 64, offset: 3008)
!1041 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1042, size: 64)
!1042 = !DISubroutineType(types: !1043)
!1043 = !{!5, !324, !1044, !615, !920}
!1044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !997, size: 64)
!1045 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_bridge_getlink", scope: !432, file: !4, line: 1444, baseType: !1046, size: 64, offset: 3072)
!1046 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1047, size: 64)
!1047 = !DISubroutineType(types: !1048)
!1048 = !{!5, !449, !1021, !1021, !324, !1021, !5}
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_bridge_dellink", scope: !432, file: !4, line: 1449, baseType: !1050, size: 64, offset: 3136)
!1050 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1051, size: 64)
!1051 = !DISubroutineType(types: !1052)
!1052 = !{!5, !324, !1044, !615}
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_change_carrier", scope: !432, file: !4, line: 1452, baseType: !1054, size: 64, offset: 3200)
!1054 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1055, size: 64)
!1055 = !DISubroutineType(types: !1056)
!1056 = !{!5, !324, !805}
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_phys_port_id", scope: !432, file: !4, line: 1454, baseType: !1058, size: 64, offset: 3264)
!1058 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1059, size: 64)
!1059 = !DISubroutineType(types: !1060)
!1060 = !{!5, !324, !1061}
!1061 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1062, size: 64)
!1062 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netdev_phys_item_id", file: !4, line: 820, size: 264, elements: !1063)
!1063 = !{!1064, !1066}
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1062, file: !4, line: 821, baseType: !1065, size: 256)
!1065 = !DICompositeType(tag: DW_TAG_array_type, baseType: !516, size: 256, elements: !853)
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "id_len", scope: !1062, file: !4, line: 822, baseType: !516, size: 8, offset: 256)
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_port_parent_id", scope: !432, file: !4, line: 1456, baseType: !1058, size: 64, offset: 3328)
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_phys_port_name", scope: !432, file: !4, line: 1458, baseType: !1069, size: 64, offset: 3392)
!1069 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1070, size: 64)
!1070 = !DISubroutineType(types: !1071)
!1071 = !{!5, !324, !1072, !1073}
!1072 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !302, size: 64)
!1073 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !311, line: 55, baseType: !1074)
!1074 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_size_t", file: !1075, line: 72, baseType: !1076)
!1075 = !DIFile(filename: "./include/uapi/asm-generic/posix_types.h", directory: "/home/lizy2001/genbc/linux")
!1076 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ulong_t", file: !1075, line: 16, baseType: !346)
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_udp_tunnel_add", scope: !432, file: !4, line: 1460, baseType: !1078, size: 64, offset: 3456)
!1078 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1079, size: 64)
!1079 = !DISubroutineType(types: !1080)
!1080 = !{null, !324, !1081}
!1081 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1082, size: 64)
!1082 = !DICompositeType(tag: DW_TAG_structure_type, name: "udp_tunnel_info", file: !4, line: 67, flags: DIFlagFwdDecl)
!1083 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_udp_tunnel_del", scope: !432, file: !4, line: 1462, baseType: !1078, size: 64, offset: 3520)
!1084 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_dfwd_add_station", scope: !432, file: !4, line: 1464, baseType: !1085, size: 64, offset: 3584)
!1085 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1086, size: 64)
!1086 = !DISubroutineType(types: !1087)
!1087 = !{!625, !324, !324}
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_dfwd_del_station", scope: !432, file: !4, line: 1466, baseType: !1089, size: 64, offset: 3648)
!1089 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1090, size: 64)
!1090 = !DISubroutineType(types: !1091)
!1091 = !{null, !324, !625}
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_tx_maxrate", scope: !432, file: !4, line: 1469, baseType: !1093, size: 64, offset: 3712)
!1093 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1094, size: 64)
!1094 = !DISubroutineType(types: !1095)
!1095 = !{!5, !324, !5, !1021}
!1096 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_iflink", scope: !432, file: !4, line: 1472, baseType: !1097, size: 64, offset: 3776)
!1097 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1098, size: 64)
!1098 = !DISubroutineType(types: !1099)
!1099 = !{!5, !807}
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_change_proto_down", scope: !432, file: !4, line: 1473, baseType: !1054, size: 64, offset: 3840)
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_fill_metadata_dst", scope: !432, file: !4, line: 1475, baseType: !1102, size: 64, offset: 3904)
!1102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1103, size: 64)
!1103 = !DISubroutineType(types: !1104)
!1104 = !{!5, !324, !449}
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_rx_headroom", scope: !432, file: !4, line: 1477, baseType: !617, size: 64, offset: 3968)
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_bpf", scope: !432, file: !4, line: 1479, baseType: !1107, size: 64, offset: 4032)
!1107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1108, size: 64)
!1108 = !DISubroutineType(types: !1109)
!1109 = !{!5, !324, !1110}
!1110 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1111, size: 64)
!1111 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netdev_bpf", file: !4, line: 894, size: 256, elements: !1112)
!1112 = !{!1113, !1114}
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "command", scope: !1111, file: !4, line: 895, baseType: !31, size: 32)
!1114 = !DIDerivedType(tag: DW_TAG_member, scope: !1111, file: !4, line: 896, baseType: !1115, size: 192, offset: 64)
!1115 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1111, file: !4, line: 896, size: 192, elements: !1116)
!1116 = !{!1117, !1126, !5474}
!1117 = !DIDerivedType(tag: DW_TAG_member, scope: !1115, file: !4, line: 898, baseType: !1118, size: 192)
!1118 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1115, file: !4, line: 898, size: 192, elements: !1119)
!1119 = !{!1120, !1121, !1125}
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1118, file: !4, line: 899, baseType: !1021, size: 32)
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "prog", scope: !1118, file: !4, line: 900, baseType: !1122, size: 64, offset: 64)
!1122 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1123, size: 64)
!1123 = !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_prog", file: !1124, line: 11, flags: DIFlagFwdDecl)
!1124 = !DIFile(filename: "./include/net/flow_dissector.h", directory: "/home/lizy2001/genbc/linux")
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "extack", scope: !1118, file: !4, line: 901, baseType: !920, size: 64, offset: 128)
!1126 = !DIDerivedType(tag: DW_TAG_member, scope: !1115, file: !4, line: 904, baseType: !1127, size: 64)
!1127 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1115, file: !4, line: 904, size: 64, elements: !1128)
!1128 = !{!1129}
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "offmap", scope: !1127, file: !4, line: 905, baseType: !1130, size: 64)
!1130 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1131, size: 64)
!1131 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_offloaded_map", file: !93, line: 222, size: 2560, elements: !1132)
!1132 = !{!1133, !5453, !5454, !5472, !5473}
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "map", scope: !1131, file: !93, line: 223, baseType: !1134, size: 2048)
!1134 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_map", file: !93, line: 141, size: 2048, elements: !1135)
!1135 = !{!1136, !5427, !5428, !5429, !5430, !5431, !5432, !5433, !5434, !5435, !5436, !5437, !5438, !5439, !5444, !5445, !5446, !5447, !5448, !5449, !5450, !5451, !5452}
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !1134, file: !93, line: 145, baseType: !1137, size: 64, align: 512)
!1137 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1138, size: 64)
!1138 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1139)
!1139 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_map_ops", file: !93, line: 54, size: 2368, elements: !1140)
!1140 = !{!1141, !1340, !1345, !5099, !5103, !5107, !5108, !5112, !5118, !5119, !5120, !5121, !5122, !5126, !5130, !5134, !5135, !5136, !5140, !5141, !5153, !5157, !5161, !5173, !5362, !5366, !5370, !5375, !5379, !5383, !5387, !5393, !5397, !5404, !5408, !5410, !5411}
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "map_alloc_check", scope: !1139, file: !93, line: 56, baseType: !1142, size: 64)
!1142 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1143, size: 64)
!1143 = !DISubroutineType(types: !1144)
!1144 = !{!5, !1145}
!1145 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1146, size: 64)
!1146 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "bpf_attr", file: !124, line: 483, size: 960, align: 64, elements: !1147)
!1147 = !{!1148, !1164, !1175, !1186, !1210, !1216, !1224, !1241, !1254, !1260, !1269, !1274, !1282, !1294, !1314, !1321, !1325, !1329, !1334}
!1148 = !DIDerivedType(tag: DW_TAG_member, scope: !1146, file: !124, line: 484, baseType: !1149, size: 512)
!1149 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1146, file: !124, line: 484, size: 512, elements: !1150)
!1150 = !{!1151, !1152, !1153, !1154, !1155, !1156, !1157, !1158, !1159, !1160, !1161, !1162, !1163}
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "map_type", scope: !1149, file: !124, line: 485, baseType: !527, size: 32)
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "key_size", scope: !1149, file: !124, line: 486, baseType: !527, size: 32, offset: 32)
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "value_size", scope: !1149, file: !124, line: 487, baseType: !527, size: 32, offset: 64)
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "max_entries", scope: !1149, file: !124, line: 488, baseType: !527, size: 32, offset: 96)
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "map_flags", scope: !1149, file: !124, line: 489, baseType: !527, size: 32, offset: 128)
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "inner_map_fd", scope: !1149, file: !124, line: 492, baseType: !527, size: 32, offset: 160)
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "numa_node", scope: !1149, file: !124, line: 493, baseType: !527, size: 32, offset: 192)
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "map_name", scope: !1149, file: !124, line: 496, baseType: !301, size: 128, offset: 224)
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "map_ifindex", scope: !1149, file: !124, line: 497, baseType: !527, size: 32, offset: 352)
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "btf_fd", scope: !1149, file: !124, line: 498, baseType: !527, size: 32, offset: 384)
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "btf_key_type_id", scope: !1149, file: !124, line: 499, baseType: !527, size: 32, offset: 416)
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "btf_value_type_id", scope: !1149, file: !124, line: 500, baseType: !527, size: 32, offset: 448)
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "btf_vmlinux_value_type_id", scope: !1149, file: !124, line: 501, baseType: !527, size: 32, offset: 480)
!1164 = !DIDerivedType(tag: DW_TAG_member, scope: !1146, file: !124, line: 507, baseType: !1165, size: 256)
!1165 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1146, file: !124, line: 507, size: 256, elements: !1166)
!1166 = !{!1167, !1168, !1169, !1174}
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "map_fd", scope: !1165, file: !124, line: 508, baseType: !527, size: 32)
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !1165, file: !124, line: 509, baseType: !367, size: 64, align: 64, offset: 64)
!1169 = !DIDerivedType(tag: DW_TAG_member, scope: !1165, file: !124, line: 510, baseType: !1170, size: 64, offset: 128)
!1170 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1165, file: !124, line: 510, size: 64, elements: !1171)
!1171 = !{!1172, !1173}
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1170, file: !124, line: 511, baseType: !367, size: 64, align: 64)
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "next_key", scope: !1170, file: !124, line: 512, baseType: !367, size: 64, align: 64)
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1165, file: !124, line: 514, baseType: !367, size: 64, offset: 192)
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "batch", scope: !1146, file: !124, line: 532, baseType: !1176, size: 448)
!1176 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1146, file: !124, line: 517, size: 448, elements: !1177)
!1177 = !{!1178, !1179, !1180, !1181, !1182, !1183, !1184, !1185}
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "in_batch", scope: !1176, file: !124, line: 518, baseType: !367, size: 64, align: 64)
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "out_batch", scope: !1176, file: !124, line: 521, baseType: !367, size: 64, align: 64, offset: 64)
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "keys", scope: !1176, file: !124, line: 522, baseType: !367, size: 64, align: 64, offset: 128)
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "values", scope: !1176, file: !124, line: 523, baseType: !367, size: 64, align: 64, offset: 192)
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1176, file: !124, line: 524, baseType: !527, size: 32, offset: 256)
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "map_fd", scope: !1176, file: !124, line: 529, baseType: !527, size: 32, offset: 288)
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "elem_flags", scope: !1176, file: !124, line: 530, baseType: !367, size: 64, offset: 320)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1176, file: !124, line: 531, baseType: !367, size: 64, offset: 384)
!1186 = !DIDerivedType(tag: DW_TAG_member, scope: !1146, file: !124, line: 534, baseType: !1187, size: 960)
!1187 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1146, file: !124, line: 534, size: 960, elements: !1188)
!1188 = !{!1189, !1190, !1191, !1192, !1193, !1194, !1195, !1196, !1197, !1198, !1199, !1200, !1201, !1202, !1203, !1204, !1205, !1206, !1207, !1208, !1209}
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "prog_type", scope: !1187, file: !124, line: 535, baseType: !527, size: 32)
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "insn_cnt", scope: !1187, file: !124, line: 536, baseType: !527, size: 32, offset: 32)
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "insns", scope: !1187, file: !124, line: 537, baseType: !367, size: 64, align: 64, offset: 64)
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "license", scope: !1187, file: !124, line: 538, baseType: !367, size: 64, align: 64, offset: 128)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "log_level", scope: !1187, file: !124, line: 539, baseType: !527, size: 32, offset: 192)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "log_size", scope: !1187, file: !124, line: 540, baseType: !527, size: 32, offset: 224)
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "log_buf", scope: !1187, file: !124, line: 541, baseType: !367, size: 64, align: 64, offset: 256)
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "kern_version", scope: !1187, file: !124, line: 542, baseType: !527, size: 32, offset: 320)
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "prog_flags", scope: !1187, file: !124, line: 543, baseType: !527, size: 32, offset: 352)
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "prog_name", scope: !1187, file: !124, line: 544, baseType: !301, size: 128, offset: 384)
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "prog_ifindex", scope: !1187, file: !124, line: 545, baseType: !527, size: 32, offset: 512)
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "expected_attach_type", scope: !1187, file: !124, line: 550, baseType: !527, size: 32, offset: 544)
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "prog_btf_fd", scope: !1187, file: !124, line: 551, baseType: !527, size: 32, offset: 576)
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "func_info_rec_size", scope: !1187, file: !124, line: 552, baseType: !527, size: 32, offset: 608)
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "func_info", scope: !1187, file: !124, line: 553, baseType: !367, size: 64, align: 64, offset: 640)
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "func_info_cnt", scope: !1187, file: !124, line: 554, baseType: !527, size: 32, offset: 704)
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "line_info_rec_size", scope: !1187, file: !124, line: 555, baseType: !527, size: 32, offset: 736)
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "line_info", scope: !1187, file: !124, line: 556, baseType: !367, size: 64, align: 64, offset: 768)
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "line_info_cnt", scope: !1187, file: !124, line: 557, baseType: !527, size: 32, offset: 832)
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "attach_btf_id", scope: !1187, file: !124, line: 558, baseType: !527, size: 32, offset: 864)
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "attach_prog_fd", scope: !1187, file: !124, line: 559, baseType: !527, size: 32, offset: 896)
!1210 = !DIDerivedType(tag: DW_TAG_member, scope: !1146, file: !124, line: 562, baseType: !1211, size: 128)
!1211 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1146, file: !124, line: 562, size: 128, elements: !1212)
!1212 = !{!1213, !1214, !1215}
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "pathname", scope: !1211, file: !124, line: 563, baseType: !367, size: 64, align: 64)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "bpf_fd", scope: !1211, file: !124, line: 564, baseType: !527, size: 32, offset: 64)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "file_flags", scope: !1211, file: !124, line: 565, baseType: !527, size: 32, offset: 96)
!1216 = !DIDerivedType(tag: DW_TAG_member, scope: !1146, file: !124, line: 568, baseType: !1217, size: 160)
!1217 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1146, file: !124, line: 568, size: 160, elements: !1218)
!1218 = !{!1219, !1220, !1221, !1222, !1223}
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "target_fd", scope: !1217, file: !124, line: 569, baseType: !527, size: 32)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "attach_bpf_fd", scope: !1217, file: !124, line: 570, baseType: !527, size: 32, offset: 32)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "attach_type", scope: !1217, file: !124, line: 571, baseType: !527, size: 32, offset: 64)
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "attach_flags", scope: !1217, file: !124, line: 572, baseType: !527, size: 32, offset: 96)
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "replace_bpf_fd", scope: !1217, file: !124, line: 573, baseType: !527, size: 32, offset: 128)
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "test", scope: !1146, file: !124, line: 600, baseType: !1225, size: 576)
!1225 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1146, file: !124, line: 579, size: 576, elements: !1226)
!1226 = !{!1227, !1228, !1229, !1230, !1231, !1232, !1233, !1234, !1235, !1236, !1237, !1238, !1239, !1240}
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "prog_fd", scope: !1225, file: !124, line: 580, baseType: !527, size: 32)
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "retval", scope: !1225, file: !124, line: 581, baseType: !527, size: 32, offset: 32)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "data_size_in", scope: !1225, file: !124, line: 582, baseType: !527, size: 32, offset: 64)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "data_size_out", scope: !1225, file: !124, line: 583, baseType: !527, size: 32, offset: 96)
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "data_in", scope: !1225, file: !124, line: 587, baseType: !367, size: 64, align: 64, offset: 128)
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "data_out", scope: !1225, file: !124, line: 588, baseType: !367, size: 64, align: 64, offset: 192)
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "repeat", scope: !1225, file: !124, line: 589, baseType: !527, size: 32, offset: 256)
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !1225, file: !124, line: 590, baseType: !527, size: 32, offset: 288)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_size_in", scope: !1225, file: !124, line: 591, baseType: !527, size: 32, offset: 320)
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_size_out", scope: !1225, file: !124, line: 592, baseType: !527, size: 32, offset: 352)
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_in", scope: !1225, file: !124, line: 596, baseType: !367, size: 64, align: 64, offset: 384)
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_out", scope: !1225, file: !124, line: 597, baseType: !367, size: 64, align: 64, offset: 448)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1225, file: !124, line: 598, baseType: !527, size: 32, offset: 512)
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "cpu", scope: !1225, file: !124, line: 599, baseType: !527, size: 32, offset: 544)
!1241 = !DIDerivedType(tag: DW_TAG_member, scope: !1146, file: !124, line: 602, baseType: !1242, size: 96)
!1242 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1146, file: !124, line: 602, size: 96, elements: !1243)
!1243 = !{!1244, !1252, !1253}
!1244 = !DIDerivedType(tag: DW_TAG_member, scope: !1242, file: !124, line: 603, baseType: !1245, size: 32)
!1245 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1242, file: !124, line: 603, size: 32, elements: !1246)
!1246 = !{!1247, !1248, !1249, !1250, !1251}
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "start_id", scope: !1245, file: !124, line: 604, baseType: !527, size: 32)
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "prog_id", scope: !1245, file: !124, line: 605, baseType: !527, size: 32)
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "map_id", scope: !1245, file: !124, line: 606, baseType: !527, size: 32)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "btf_id", scope: !1245, file: !124, line: 607, baseType: !527, size: 32)
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "link_id", scope: !1245, file: !124, line: 608, baseType: !527, size: 32)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "next_id", scope: !1242, file: !124, line: 610, baseType: !527, size: 32, offset: 32)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "open_flags", scope: !1242, file: !124, line: 611, baseType: !527, size: 32, offset: 64)
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !1146, file: !124, line: 618, baseType: !1255, size: 128)
!1255 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1146, file: !124, line: 614, size: 128, elements: !1256)
!1256 = !{!1257, !1258, !1259}
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "bpf_fd", scope: !1255, file: !124, line: 615, baseType: !527, size: 32)
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "info_len", scope: !1255, file: !124, line: 616, baseType: !527, size: 32, offset: 32)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !1255, file: !124, line: 617, baseType: !367, size: 64, align: 64, offset: 64)
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "query", scope: !1146, file: !124, line: 627, baseType: !1261, size: 256)
!1261 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1146, file: !124, line: 620, size: 256, elements: !1262)
!1262 = !{!1263, !1264, !1265, !1266, !1267, !1268}
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "target_fd", scope: !1261, file: !124, line: 621, baseType: !527, size: 32)
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "attach_type", scope: !1261, file: !124, line: 622, baseType: !527, size: 32, offset: 32)
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "query_flags", scope: !1261, file: !124, line: 623, baseType: !527, size: 32, offset: 64)
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "attach_flags", scope: !1261, file: !124, line: 624, baseType: !527, size: 32, offset: 96)
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "prog_ids", scope: !1261, file: !124, line: 625, baseType: !367, size: 64, align: 64, offset: 128)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "prog_cnt", scope: !1261, file: !124, line: 626, baseType: !527, size: 32, offset: 192)
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "raw_tracepoint", scope: !1146, file: !124, line: 632, baseType: !1270, size: 128)
!1270 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1146, file: !124, line: 629, size: 128, elements: !1271)
!1271 = !{!1272, !1273}
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1270, file: !124, line: 630, baseType: !367, size: 64)
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "prog_fd", scope: !1270, file: !124, line: 631, baseType: !527, size: 32, offset: 64)
!1274 = !DIDerivedType(tag: DW_TAG_member, scope: !1146, file: !124, line: 634, baseType: !1275, size: 256)
!1275 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1146, file: !124, line: 634, size: 256, elements: !1276)
!1276 = !{!1277, !1278, !1279, !1280, !1281}
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "btf", scope: !1275, file: !124, line: 635, baseType: !367, size: 64, align: 64)
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "btf_log_buf", scope: !1275, file: !124, line: 636, baseType: !367, size: 64, align: 64, offset: 64)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "btf_size", scope: !1275, file: !124, line: 637, baseType: !527, size: 32, offset: 128)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "btf_log_size", scope: !1275, file: !124, line: 638, baseType: !527, size: 32, offset: 160)
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "btf_log_level", scope: !1275, file: !124, line: 639, baseType: !527, size: 32, offset: 192)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "task_fd_query", scope: !1146, file: !124, line: 656, baseType: !1283, size: 384)
!1283 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1146, file: !124, line: 642, size: 384, elements: !1284)
!1284 = !{!1285, !1286, !1287, !1288, !1289, !1290, !1291, !1292, !1293}
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !1283, file: !124, line: 643, baseType: !527, size: 32)
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "fd", scope: !1283, file: !124, line: 644, baseType: !527, size: 32, offset: 32)
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1283, file: !124, line: 645, baseType: !527, size: 32, offset: 64)
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "buf_len", scope: !1283, file: !124, line: 646, baseType: !527, size: 32, offset: 96)
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1283, file: !124, line: 647, baseType: !367, size: 64, align: 64, offset: 128)
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "prog_id", scope: !1283, file: !124, line: 652, baseType: !527, size: 32, offset: 192)
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "fd_type", scope: !1283, file: !124, line: 653, baseType: !527, size: 32, offset: 224)
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "probe_offset", scope: !1283, file: !124, line: 654, baseType: !367, size: 64, offset: 256)
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "probe_addr", scope: !1283, file: !124, line: 655, baseType: !367, size: 64, offset: 320)
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "link_create", scope: !1146, file: !124, line: 673, baseType: !1295, size: 256)
!1295 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1146, file: !124, line: 658, size: 256, elements: !1296)
!1296 = !{!1297, !1298, !1303, !1304, !1305}
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "prog_fd", scope: !1295, file: !124, line: 659, baseType: !527, size: 32)
!1298 = !DIDerivedType(tag: DW_TAG_member, scope: !1295, file: !124, line: 660, baseType: !1299, size: 32, offset: 32)
!1299 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1295, file: !124, line: 660, size: 32, elements: !1300)
!1300 = !{!1301, !1302}
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "target_fd", scope: !1299, file: !124, line: 661, baseType: !527, size: 32)
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "target_ifindex", scope: !1299, file: !124, line: 662, baseType: !527, size: 32)
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "attach_type", scope: !1295, file: !124, line: 664, baseType: !527, size: 32, offset: 64)
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1295, file: !124, line: 665, baseType: !527, size: 32, offset: 96)
!1305 = !DIDerivedType(tag: DW_TAG_member, scope: !1295, file: !124, line: 666, baseType: !1306, size: 128, offset: 128)
!1306 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1295, file: !124, line: 666, size: 128, elements: !1307)
!1307 = !{!1308, !1309}
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "target_btf_id", scope: !1306, file: !124, line: 667, baseType: !527, size: 32)
!1309 = !DIDerivedType(tag: DW_TAG_member, scope: !1306, file: !124, line: 668, baseType: !1310, size: 128)
!1310 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1306, file: !124, line: 668, size: 128, elements: !1311)
!1311 = !{!1312, !1313}
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "iter_info", scope: !1310, file: !124, line: 669, baseType: !367, size: 64, align: 64)
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "iter_info_len", scope: !1310, file: !124, line: 670, baseType: !527, size: 32, offset: 64)
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "link_update", scope: !1146, file: !124, line: 683, baseType: !1315, size: 128)
!1315 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1146, file: !124, line: 675, size: 128, elements: !1316)
!1316 = !{!1317, !1318, !1319, !1320}
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "link_fd", scope: !1315, file: !124, line: 676, baseType: !527, size: 32)
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "new_prog_fd", scope: !1315, file: !124, line: 678, baseType: !527, size: 32, offset: 32)
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1315, file: !124, line: 679, baseType: !527, size: 32, offset: 64)
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "old_prog_fd", scope: !1315, file: !124, line: 682, baseType: !527, size: 32, offset: 96)
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "link_detach", scope: !1146, file: !124, line: 687, baseType: !1322, size: 32)
!1322 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1146, file: !124, line: 685, size: 32, elements: !1323)
!1323 = !{!1324}
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "link_fd", scope: !1322, file: !124, line: 686, baseType: !527, size: 32)
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "enable_stats", scope: !1146, file: !124, line: 691, baseType: !1326, size: 32)
!1326 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1146, file: !124, line: 689, size: 32, elements: !1327)
!1327 = !{!1328}
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1326, file: !124, line: 690, baseType: !527, size: 32)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "iter_create", scope: !1146, file: !124, line: 696, baseType: !1330, size: 64)
!1330 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1146, file: !124, line: 693, size: 64, elements: !1331)
!1331 = !{!1332, !1333}
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "link_fd", scope: !1330, file: !124, line: 694, baseType: !527, size: 32)
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1330, file: !124, line: 695, baseType: !527, size: 32, offset: 32)
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "prog_bind_map", scope: !1146, file: !124, line: 702, baseType: !1335, size: 96)
!1335 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1146, file: !124, line: 698, size: 96, elements: !1336)
!1336 = !{!1337, !1338, !1339}
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "prog_fd", scope: !1335, file: !124, line: 699, baseType: !527, size: 32)
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "map_fd", scope: !1335, file: !124, line: 700, baseType: !527, size: 32, offset: 32)
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1335, file: !124, line: 701, baseType: !527, size: 32, offset: 64)
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "map_alloc", scope: !1139, file: !93, line: 57, baseType: !1341, size: 64, offset: 64)
!1341 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1342, size: 64)
!1342 = !DISubroutineType(types: !1343)
!1343 = !{!1344, !1145}
!1344 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1134, size: 64)
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "map_release", scope: !1139, file: !93, line: 58, baseType: !1346, size: 64, offset: 128)
!1346 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1347, size: 64)
!1347 = !DISubroutineType(types: !1348)
!1348 = !{null, !1344, !1349}
!1349 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1350, size: 64)
!1350 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file", file: !76, line: 916, size: 1856, align: 32, elements: !1351)
!1351 = !{!1352, !1362, !5064, !5065, !5066, !5067, !5068, !5069, !5070, !5071, !5072, !5073, !5082, !5083, !5092, !5093, !5094, !5095, !5096, !5097, !5098}
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "f_u", scope: !1350, file: !76, line: 920, baseType: !1353, size: 128)
!1353 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1350, file: !76, line: 917, size: 128, elements: !1354)
!1354 = !{!1355, !1361}
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "fu_llist", scope: !1353, file: !76, line: 918, baseType: !1356, size: 64)
!1356 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "llist_node", file: !1357, line: 58, size: 64, elements: !1358)
!1357 = !DIFile(filename: "./include/linux/llist.h", directory: "/home/lizy2001/genbc/linux")
!1358 = !{!1359}
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1356, file: !1357, line: 59, baseType: !1360, size: 64)
!1360 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1356, size: 64)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "fu_rcuhead", scope: !1353, file: !76, line: 919, baseType: !333, size: 128, align: 64)
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "f_path", scope: !1350, file: !76, line: 921, baseType: !1363, size: 128, offset: 128)
!1363 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "path", file: !1364, line: 8, size: 128, elements: !1365)
!1364 = !DIFile(filename: "./include/linux/path.h", directory: "/home/lizy2001/genbc/linux")
!1365 = !{!1366, !1370}
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "mnt", scope: !1363, file: !1364, line: 9, baseType: !1367, size: 64)
!1367 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1368, size: 64)
!1368 = !DICompositeType(tag: DW_TAG_structure_type, name: "vfsmount", file: !1369, line: 18, flags: DIFlagFwdDecl)
!1369 = !DIFile(filename: "./include/linux/dcache.h", directory: "/home/lizy2001/genbc/linux")
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "dentry", scope: !1363, file: !1364, line: 10, baseType: !1371, size: 64, offset: 64)
!1371 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1372, size: 64)
!1372 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry", file: !1369, line: 89, size: 1536, elements: !1373)
!1373 = !{!1374, !1375, !1385, !1393, !1394, !1407, !5033, !5034, !5046, !5047, !5048, !5049, !5050, !5056, !5057, !5058}
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "d_flags", scope: !1372, file: !1369, line: 91, baseType: !11, size: 32)
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "d_seq", scope: !1372, file: !1369, line: 92, baseType: !1376, size: 32, offset: 32)
!1376 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_spinlock_t", file: !1377, line: 277, baseType: !1378)
!1377 = !DIFile(filename: "./include/linux/seqlock.h", directory: "/home/lizy2001/genbc/linux")
!1378 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_spinlock", file: !1377, line: 277, size: 32, elements: !1379)
!1379 = !{!1380}
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !1378, file: !1377, line: 277, baseType: !1381, size: 32)
!1381 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_t", file: !1377, line: 70, baseType: !1382)
!1382 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount", file: !1377, line: 65, size: 32, elements: !1383)
!1383 = !{!1384}
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "sequence", scope: !1382, file: !1377, line: 66, baseType: !11, size: 32)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !1372, file: !1369, line: 93, baseType: !1386, size: 128, offset: 64)
!1386 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_node", file: !1387, line: 38, size: 128, elements: !1388)
!1387 = !DIFile(filename: "./include/linux/list_bl.h", directory: "/home/lizy2001/genbc/linux")
!1388 = !{!1389, !1391}
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1386, file: !1387, line: 39, baseType: !1390, size: 64)
!1390 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1386, size: 64)
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !1386, file: !1387, line: 39, baseType: !1392, size: 64, offset: 64)
!1392 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1390, size: 64)
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "d_parent", scope: !1372, file: !1369, line: 94, baseType: !1371, size: 64, offset: 192)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "d_name", scope: !1372, file: !1369, line: 95, baseType: !1395, size: 128, offset: 256)
!1395 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qstr", file: !1369, line: 47, size: 128, elements: !1396)
!1396 = !{!1397, !1406}
!1397 = !DIDerivedType(tag: DW_TAG_member, scope: !1395, file: !1369, line: 48, baseType: !1398, size: 64)
!1398 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1395, file: !1369, line: 48, size: 64, elements: !1399)
!1399 = !{!1400, !1405}
!1400 = !DIDerivedType(tag: DW_TAG_member, scope: !1398, file: !1369, line: 49, baseType: !1401, size: 64)
!1401 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1398, file: !1369, line: 49, size: 64, elements: !1402)
!1402 = !{!1403, !1404}
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !1401, file: !1369, line: 50, baseType: !1021, size: 32)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1401, file: !1369, line: 50, baseType: !1021, size: 32, offset: 32)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "hash_len", scope: !1398, file: !1369, line: 52, baseType: !365, size: 64)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1395, file: !1369, line: 54, baseType: !980, size: 64, offset: 64)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "d_inode", scope: !1372, file: !1369, line: 96, baseType: !1408, size: 64, offset: 384)
!1408 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1409, size: 64)
!1409 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode", file: !76, line: 610, size: 4224, elements: !1410)
!1410 = !{!1411, !1413, !1414, !1422, !1429, !1430, !1577, !4762, !4763, !4764, !4770, !4771, !4772, !4773, !4774, !4775, !4776, !4777, !4778, !4779, !4780, !4781, !4782, !4783, !4784, !4785, !4786, !4787, !4788, !4789, !4794, !4795, !4796, !4797, !4798, !4799, !4800, !5009, !5017, !5018, !5019, !5029, !5030, !5031, !5032}
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "i_mode", scope: !1409, file: !76, line: 611, baseType: !1412, size: 16)
!1412 = !DIDerivedType(tag: DW_TAG_typedef, name: "umode_t", file: !311, line: 19, baseType: !510)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "i_opflags", scope: !1409, file: !76, line: 612, baseType: !510, size: 16, offset: 16)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "i_uid", scope: !1409, file: !76, line: 613, baseType: !1415, size: 32, offset: 32)
!1415 = !DIDerivedType(tag: DW_TAG_typedef, name: "kuid_t", file: !1416, line: 23, baseType: !1417)
!1416 = !DIFile(filename: "./include/linux/uidgid.h", directory: "/home/lizy2001/genbc/linux")
!1417 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1416, line: 21, size: 32, elements: !1418)
!1418 = !{!1419}
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1417, file: !1416, line: 22, baseType: !1420, size: 32)
!1420 = !DIDerivedType(tag: DW_TAG_typedef, name: "uid_t", file: !311, line: 32, baseType: !1421)
!1421 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_uid32_t", file: !1075, line: 49, baseType: !11)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "i_gid", scope: !1409, file: !76, line: 614, baseType: !1423, size: 32, offset: 64)
!1423 = !DIDerivedType(tag: DW_TAG_typedef, name: "kgid_t", file: !1416, line: 28, baseType: !1424)
!1424 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1416, line: 26, size: 32, elements: !1425)
!1425 = !{!1426}
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1424, file: !1416, line: 27, baseType: !1427, size: 32)
!1427 = !DIDerivedType(tag: DW_TAG_typedef, name: "gid_t", file: !311, line: 33, baseType: !1428)
!1428 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_gid32_t", file: !1075, line: 50, baseType: !11)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !1409, file: !76, line: 615, baseType: !11, size: 32, offset: 96)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "i_op", scope: !1409, file: !76, line: 622, baseType: !1431, size: 64, offset: 128)
!1431 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1432, size: 64)
!1432 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1433)
!1433 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode_operations", file: !76, line: 1864, size: 1536, align: 512, elements: !1434)
!1434 = !{!1435, !1439, !1452, !1456, !1462, !1466, !1470, !1474, !1478, !1482, !1486, !1487, !1493, !1497, !1521, !1550, !1557, !1563, !1568, !1572, !1573}
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "lookup", scope: !1433, file: !76, line: 1865, baseType: !1436, size: 64)
!1436 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1437, size: 64)
!1437 = !DISubroutineType(types: !1438)
!1438 = !{!1371, !1408, !1371, !11}
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "get_link", scope: !1433, file: !76, line: 1866, baseType: !1440, size: 64, offset: 64)
!1440 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1441, size: 64)
!1441 = !DISubroutineType(types: !1442)
!1442 = !{!326, !1371, !1408, !1443}
!1443 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1444, size: 64)
!1444 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "delayed_call", file: !1445, line: 10, size: 128, elements: !1446)
!1445 = !DIFile(filename: "./include/linux/delayed_call.h", directory: "/home/lizy2001/genbc/linux")
!1446 = !{!1447, !1451}
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !1444, file: !1445, line: 11, baseType: !1448, size: 64)
!1448 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1449, size: 64)
!1449 = !DISubroutineType(types: !1450)
!1450 = !{null, !625}
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !1444, file: !1445, line: 12, baseType: !625, size: 64, offset: 64)
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "permission", scope: !1433, file: !76, line: 1867, baseType: !1453, size: 64, offset: 128)
!1453 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1454, size: 64)
!1454 = !DISubroutineType(types: !1455)
!1455 = !{!5, !1408, !5}
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "get_acl", scope: !1433, file: !76, line: 1868, baseType: !1457, size: 64, offset: 192)
!1457 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1458, size: 64)
!1458 = !DISubroutineType(types: !1459)
!1459 = !{!1460, !1408, !5}
!1460 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1461, size: 64)
!1461 = !DICompositeType(tag: DW_TAG_structure_type, name: "posix_acl", file: !76, line: 581, flags: DIFlagFwdDecl)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "readlink", scope: !1433, file: !76, line: 1870, baseType: !1463, size: 64, offset: 256)
!1463 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1464, size: 64)
!1464 = !DISubroutineType(types: !1465)
!1465 = !{!5, !1371, !1072, !5}
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "create", scope: !1433, file: !76, line: 1872, baseType: !1467, size: 64, offset: 320)
!1467 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1468, size: 64)
!1468 = !DISubroutineType(types: !1469)
!1469 = !{!5, !1408, !1371, !1412, !805}
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !1433, file: !76, line: 1873, baseType: !1471, size: 64, offset: 384)
!1471 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1472, size: 64)
!1472 = !DISubroutineType(types: !1473)
!1473 = !{!5, !1371, !1408, !1371}
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "unlink", scope: !1433, file: !76, line: 1874, baseType: !1475, size: 64, offset: 448)
!1475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1476, size: 64)
!1476 = !DISubroutineType(types: !1477)
!1477 = !{!5, !1408, !1371}
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !1433, file: !76, line: 1875, baseType: !1479, size: 64, offset: 512)
!1479 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1480, size: 64)
!1480 = !DISubroutineType(types: !1481)
!1481 = !{!5, !1408, !1371, !326}
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !1433, file: !76, line: 1876, baseType: !1483, size: 64, offset: 576)
!1483 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1484, size: 64)
!1484 = !DISubroutineType(types: !1485)
!1485 = !{!5, !1408, !1371, !1412}
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !1433, file: !76, line: 1877, baseType: !1475, size: 64, offset: 640)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "mknod", scope: !1433, file: !76, line: 1878, baseType: !1488, size: 64, offset: 704)
!1488 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1489, size: 64)
!1489 = !DISubroutineType(types: !1490)
!1490 = !{!5, !1408, !1371, !1412, !1491}
!1491 = !DIDerivedType(tag: DW_TAG_typedef, name: "dev_t", file: !311, line: 16, baseType: !1492)
!1492 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_dev_t", file: !311, line: 13, baseType: !1021)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !1433, file: !76, line: 1879, baseType: !1494, size: 64, offset: 768)
!1494 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1495, size: 64)
!1495 = !DISubroutineType(types: !1496)
!1496 = !{!5, !1408, !1371, !1408, !1371, !11}
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "setattr", scope: !1433, file: !76, line: 1881, baseType: !1498, size: 64, offset: 832)
!1498 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1499, size: 64)
!1499 = !DISubroutineType(types: !1500)
!1500 = !{!5, !1371, !1501}
!1501 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1502, size: 64)
!1502 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iattr", file: !76, line: 219, size: 640, elements: !1503)
!1503 = !{!1504, !1505, !1506, !1507, !1508, !1511, !1518, !1519, !1520}
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "ia_valid", scope: !1502, file: !76, line: 220, baseType: !11, size: 32)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mode", scope: !1502, file: !76, line: 221, baseType: !1412, size: 16, offset: 32)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "ia_uid", scope: !1502, file: !76, line: 222, baseType: !1415, size: 32, offset: 64)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "ia_gid", scope: !1502, file: !76, line: 223, baseType: !1423, size: 32, offset: 96)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "ia_size", scope: !1502, file: !76, line: 224, baseType: !1509, size: 64, offset: 128)
!1509 = !DIDerivedType(tag: DW_TAG_typedef, name: "loff_t", file: !311, line: 46, baseType: !1510)
!1510 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_loff_t", file: !1075, line: 88, baseType: !413)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "ia_atime", scope: !1502, file: !76, line: 225, baseType: !1512, size: 128, offset: 192)
!1512 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec64", file: !1513, line: 13, size: 128, elements: !1514)
!1513 = !DIFile(filename: "./include/linux/time64.h", directory: "/home/lizy2001/genbc/linux")
!1514 = !{!1515, !1517}
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1512, file: !1513, line: 14, baseType: !1516, size: 64)
!1516 = !DIDerivedType(tag: DW_TAG_typedef, name: "time64_t", file: !1513, line: 8, baseType: !412)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1512, file: !1513, line: 15, baseType: !1032, size: 64, offset: 64)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mtime", scope: !1502, file: !76, line: 226, baseType: !1512, size: 128, offset: 320)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "ia_ctime", scope: !1502, file: !76, line: 227, baseType: !1512, size: 128, offset: 448)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "ia_file", scope: !1502, file: !76, line: 234, baseType: !1349, size: 64, offset: 576)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "getattr", scope: !1433, file: !76, line: 1882, baseType: !1522, size: 64, offset: 896)
!1522 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1523, size: 64)
!1523 = !DISubroutineType(types: !1524)
!1524 = !{!5, !1525, !1527, !1021, !11}
!1525 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1526, size: 64)
!1526 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1363)
!1527 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1528, size: 64)
!1528 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kstat", file: !1529, line: 22, size: 1152, elements: !1530)
!1529 = !DIFile(filename: "./include/linux/stat.h", directory: "/home/lizy2001/genbc/linux")
!1530 = !{!1531, !1532, !1533, !1534, !1536, !1537, !1538, !1539, !1540, !1541, !1542, !1543, !1544, !1545, !1546, !1547, !1548, !1549}
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "result_mask", scope: !1528, file: !1529, line: 23, baseType: !1021, size: 32)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1528, file: !1529, line: 24, baseType: !1412, size: 16, offset: 32)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "nlink", scope: !1528, file: !1529, line: 25, baseType: !11, size: 32, offset: 64)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "blksize", scope: !1528, file: !1529, line: 26, baseType: !1535, size: 32, offset: 96)
!1535 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !311, line: 104, baseType: !1021)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !1528, file: !1529, line: 27, baseType: !365, size: 64, offset: 128)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "attributes_mask", scope: !1528, file: !1529, line: 28, baseType: !365, size: 64, offset: 192)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !1528, file: !1529, line: 37, baseType: !365, size: 64, offset: 256)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1528, file: !1529, line: 38, baseType: !1491, size: 32, offset: 320)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "rdev", scope: !1528, file: !1529, line: 39, baseType: !1491, size: 32, offset: 352)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1528, file: !1529, line: 40, baseType: !1415, size: 32, offset: 384)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1528, file: !1529, line: 41, baseType: !1423, size: 32, offset: 416)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1528, file: !1529, line: 42, baseType: !1509, size: 64, offset: 448)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "atime", scope: !1528, file: !1529, line: 43, baseType: !1512, size: 128, offset: 512)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "mtime", scope: !1528, file: !1529, line: 44, baseType: !1512, size: 128, offset: 640)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !1528, file: !1529, line: 45, baseType: !1512, size: 128, offset: 768)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "btime", scope: !1528, file: !1529, line: 46, baseType: !1512, size: 128, offset: 896)
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !1528, file: !1529, line: 47, baseType: !365, size: 64, offset: 1024)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "mnt_id", scope: !1528, file: !1529, line: 48, baseType: !365, size: 64, offset: 1088)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "listxattr", scope: !1433, file: !76, line: 1883, baseType: !1551, size: 64, offset: 960)
!1551 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1552, size: 64)
!1552 = !DISubroutineType(types: !1553)
!1553 = !{!1554, !1371, !1072, !1073}
!1554 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !311, line: 60, baseType: !1555)
!1555 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ssize_t", file: !1075, line: 73, baseType: !1556)
!1556 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_long_t", file: !1075, line: 15, baseType: !1032)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "fiemap", scope: !1433, file: !76, line: 1884, baseType: !1558, size: 64, offset: 1024)
!1558 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1559, size: 64)
!1559 = !DISubroutineType(types: !1560)
!1560 = !{!5, !1408, !1561, !365, !365}
!1561 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1562, size: 64)
!1562 = !DICompositeType(tag: DW_TAG_structure_type, name: "fiemap_extent_info", file: !76, line: 50, flags: DIFlagFwdDecl)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "update_time", scope: !1433, file: !76, line: 1886, baseType: !1564, size: 64, offset: 1088)
!1564 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1565, size: 64)
!1565 = !DISubroutineType(types: !1566)
!1566 = !{!5, !1408, !1567, !5}
!1567 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1512, size: 64)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_open", scope: !1433, file: !76, line: 1887, baseType: !1569, size: 64, offset: 1152)
!1569 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1570, size: 64)
!1570 = !DISubroutineType(types: !1571)
!1571 = !{!5, !1408, !1371, !1349, !11, !1412}
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "tmpfile", scope: !1433, file: !76, line: 1890, baseType: !1483, size: 64, offset: 1216)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "set_acl", scope: !1433, file: !76, line: 1891, baseType: !1574, size: 64, offset: 1280)
!1574 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1575, size: 64)
!1575 = !DISubroutineType(types: !1576)
!1576 = !{!5, !1408, !1460, !5}
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb", scope: !1409, file: !76, line: 623, baseType: !1578, size: 64, offset: 192)
!1578 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1579, size: 64)
!1579 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_block", file: !76, line: 1416, size: 9472, elements: !1580)
!1580 = !{!1581, !1582, !1583, !1584, !1585, !1586, !1629, !4370, !4452, !4535, !4539, !4540, !4541, !4542, !4543, !4544, !4545, !4546, !4551, !4555, !4556, !4559, !4560, !4563, !4564, !4565, !4606, !4633, !4634, !4635, !4636, !4637, !4638, !4641, !4643, !4649, !4650, !4652, !4653, !4654, !4713, !4714, !4729, !4730, !4731, !4732, !4733, !4736, !4737, !4738, !4753, !4754, !4755, !4756, !4757, !4758, !4759, !4760, !4761}
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "s_list", scope: !1579, file: !76, line: 1417, baseType: !318, size: 128)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "s_dev", scope: !1579, file: !76, line: 1418, baseType: !1491, size: 32, offset: 128)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize_bits", scope: !1579, file: !76, line: 1419, baseType: !516, size: 8, offset: 160)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize", scope: !1579, file: !76, line: 1420, baseType: !346, size: 64, offset: 192)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "s_maxbytes", scope: !1579, file: !76, line: 1421, baseType: !1509, size: 64, offset: 256)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "s_type", scope: !1579, file: !76, line: 1422, baseType: !1587, size: 64, offset: 320)
!1587 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1588, size: 64)
!1588 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_system_type", file: !76, line: 2228, size: 576, elements: !1589)
!1589 = !{!1590, !1591, !1592, !1598, !1602, !1606, !1610, !1611, !1612, !1616, !1620, !1621, !1622, !1626, !1627, !1628}
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1588, file: !76, line: 2229, baseType: !326, size: 64)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "fs_flags", scope: !1588, file: !76, line: 2230, baseType: !5, size: 32, offset: 64)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "init_fs_context", scope: !1588, file: !76, line: 2238, baseType: !1593, size: 64, offset: 128)
!1593 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1594, size: 64)
!1594 = !DISubroutineType(types: !1595)
!1595 = !{!5, !1596}
!1596 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1597, size: 64)
!1597 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_context", file: !76, line: 69, flags: DIFlagFwdDecl)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "parameters", scope: !1588, file: !76, line: 2239, baseType: !1599, size: 64, offset: 192)
!1599 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1600, size: 64)
!1600 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1601)
!1601 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_parameter_spec", file: !76, line: 70, flags: DIFlagFwdDecl)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "mount", scope: !1588, file: !76, line: 2240, baseType: !1603, size: 64, offset: 256)
!1603 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1604, size: 64)
!1604 = !DISubroutineType(types: !1605)
!1605 = !{!1371, !1587, !5, !326, !625}
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "kill_sb", scope: !1588, file: !76, line: 2242, baseType: !1607, size: 64, offset: 320)
!1607 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1608, size: 64)
!1608 = !DISubroutineType(types: !1609)
!1609 = !{null, !1578}
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1588, file: !76, line: 2243, baseType: !1014, size: 64, offset: 384)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1588, file: !76, line: 2244, baseType: !1587, size: 64, offset: 448)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "fs_supers", scope: !1588, file: !76, line: 2245, baseType: !1613, size: 64, offset: 512)
!1613 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_head", file: !311, line: 182, size: 64, elements: !1614)
!1614 = !{!1615}
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !1613, file: !311, line: 183, baseType: !314, size: 64)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "s_lock_key", scope: !1588, file: !76, line: 2247, baseType: !1617, offset: 576)
!1617 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_class_key", file: !1618, line: 187, elements: !1619)
!1618 = !DIFile(filename: "./include/linux/lockdep_types.h", directory: "/home/lizy2001/genbc/linux")
!1619 = !{}
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount_key", scope: !1588, file: !76, line: 2248, baseType: !1617, offset: 576)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_key", scope: !1588, file: !76, line: 2249, baseType: !1617, offset: 576)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers_key", scope: !1588, file: !76, line: 2250, baseType: !1623, offset: 576)
!1623 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1617, elements: !1624)
!1624 = !{!1625}
!1625 = !DISubrange(count: 3)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock_key", scope: !1588, file: !76, line: 2252, baseType: !1617, offset: 576)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_key", scope: !1588, file: !76, line: 2253, baseType: !1617, offset: 576)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_dir_key", scope: !1588, file: !76, line: 2254, baseType: !1617, offset: 576)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "s_op", scope: !1579, file: !76, line: 1423, baseType: !1630, size: 64, offset: 384)
!1630 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1631, size: 64)
!1631 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1632)
!1632 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_operations", file: !76, line: 1935, size: 1472, elements: !1633)
!1633 = !{!1634, !1638, !1642, !1643, !1647, !1653, !1657, !1658, !1659, !1663, !1667, !1668, !1669, !1670, !1676, !1680, !1681, !1744, !1745, !1746, !1747, !4354, !4369}
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_inode", scope: !1632, file: !76, line: 1936, baseType: !1635, size: 64)
!1635 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1636, size: 64)
!1636 = !DISubroutineType(types: !1637)
!1637 = !{!1408, !1578}
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_inode", scope: !1632, file: !76, line: 1937, baseType: !1639, size: 64, offset: 64)
!1639 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1640, size: 64)
!1640 = !DISubroutineType(types: !1641)
!1641 = !{null, !1408}
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !1632, file: !76, line: 1938, baseType: !1639, size: 64, offset: 128)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_inode", scope: !1632, file: !76, line: 1940, baseType: !1644, size: 64, offset: 192)
!1644 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1645, size: 64)
!1645 = !DISubroutineType(types: !1646)
!1646 = !{null, !1408, !5}
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "write_inode", scope: !1632, file: !76, line: 1941, baseType: !1648, size: 64, offset: 256)
!1648 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1649, size: 64)
!1649 = !DISubroutineType(types: !1650)
!1650 = !{!5, !1408, !1651}
!1651 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1652, size: 64)
!1652 = !DICompositeType(tag: DW_TAG_structure_type, name: "writeback_control", file: !76, line: 289, flags: DIFlagFwdDecl)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "drop_inode", scope: !1632, file: !76, line: 1942, baseType: !1654, size: 64, offset: 320)
!1654 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1655, size: 64)
!1655 = !DISubroutineType(types: !1656)
!1656 = !{!5, !1408}
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "evict_inode", scope: !1632, file: !76, line: 1943, baseType: !1639, size: 64, offset: 384)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "put_super", scope: !1632, file: !76, line: 1944, baseType: !1607, size: 64, offset: 448)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "sync_fs", scope: !1632, file: !76, line: 1945, baseType: !1660, size: 64, offset: 512)
!1660 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1661, size: 64)
!1661 = !DISubroutineType(types: !1662)
!1662 = !{!5, !1578, !5}
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_super", scope: !1632, file: !76, line: 1946, baseType: !1664, size: 64, offset: 576)
!1664 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1665, size: 64)
!1665 = !DISubroutineType(types: !1666)
!1666 = !{!5, !1578}
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_fs", scope: !1632, file: !76, line: 1947, baseType: !1664, size: 64, offset: 640)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_super", scope: !1632, file: !76, line: 1948, baseType: !1664, size: 64, offset: 704)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "unfreeze_fs", scope: !1632, file: !76, line: 1949, baseType: !1664, size: 64, offset: 768)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "statfs", scope: !1632, file: !76, line: 1950, baseType: !1671, size: 64, offset: 832)
!1671 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1672, size: 64)
!1672 = !DISubroutineType(types: !1673)
!1673 = !{!5, !1371, !1674}
!1674 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1675, size: 64)
!1675 = !DICompositeType(tag: DW_TAG_structure_type, name: "kstatfs", file: !76, line: 57, flags: DIFlagFwdDecl)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "remount_fs", scope: !1632, file: !76, line: 1951, baseType: !1677, size: 64, offset: 896)
!1677 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1678, size: 64)
!1678 = !DISubroutineType(types: !1679)
!1679 = !{!5, !1578, !1035, !1072}
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "umount_begin", scope: !1632, file: !76, line: 1952, baseType: !1607, size: 64, offset: 960)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !1632, file: !76, line: 1954, baseType: !1682, size: 64, offset: 1024)
!1682 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1683, size: 64)
!1683 = !DISubroutineType(types: !1684)
!1684 = !{!5, !1685, !1371}
!1685 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1686, size: 64)
!1686 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seq_file", file: !1687, line: 16, size: 896, elements: !1688)
!1687 = !DIFile(filename: "./include/linux/seq_file.h", directory: "/home/lizy2001/genbc/linux")
!1688 = !{!1689, !1690, !1691, !1692, !1693, !1694, !1695, !1696, !1717, !1739, !1740, !1743}
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1686, file: !1687, line: 17, baseType: !1072, size: 64)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1686, file: !1687, line: 18, baseType: !1073, size: 64, offset: 64)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "from", scope: !1686, file: !1687, line: 19, baseType: !1073, size: 64, offset: 128)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1686, file: !1687, line: 20, baseType: !1073, size: 64, offset: 192)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "pad_until", scope: !1686, file: !1687, line: 21, baseType: !1073, size: 64, offset: 256)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1686, file: !1687, line: 22, baseType: !1509, size: 64, offset: 320)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "read_pos", scope: !1686, file: !1687, line: 23, baseType: !1509, size: 64, offset: 384)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1686, file: !1687, line: 24, baseType: !1697, size: 192, offset: 448)
!1697 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mutex", file: !1698, line: 53, size: 192, elements: !1699)
!1698 = !DIFile(filename: "./include/linux/mutex.h", directory: "/home/lizy2001/genbc/linux")
!1699 = !{!1700, !1701, !1716}
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1697, file: !1698, line: 54, baseType: !405, size: 64)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !1697, file: !1698, line: 55, baseType: !1702, offset: 64)
!1702 = !DIDerivedType(tag: DW_TAG_typedef, name: "spinlock_t", file: !1703, line: 83, baseType: !1704)
!1703 = !DIFile(filename: "./include/linux/spinlock_types.h", directory: "/home/lizy2001/genbc/linux")
!1704 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "spinlock", file: !1703, line: 71, elements: !1705)
!1705 = !{!1706}
!1706 = !DIDerivedType(tag: DW_TAG_member, scope: !1704, file: !1703, line: 72, baseType: !1707)
!1707 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1704, file: !1703, line: 72, elements: !1708)
!1708 = !{!1709}
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "rlock", scope: !1707, file: !1703, line: 73, baseType: !1710)
!1710 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "raw_spinlock", file: !1703, line: 20, elements: !1711)
!1711 = !{!1712}
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !1710, file: !1703, line: 21, baseType: !1713)
!1713 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_spinlock_t", file: !1714, line: 25, baseType: !1715)
!1714 = !DIFile(filename: "./include/linux/spinlock_types_up.h", directory: "/home/lizy2001/genbc/linux")
!1715 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1714, line: 25, elements: !1619)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !1697, file: !1698, line: 59, baseType: !318, size: 128, offset: 64)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !1686, file: !1687, line: 25, baseType: !1718, size: 64, offset: 640)
!1718 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1719, size: 64)
!1719 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1720)
!1720 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seq_operations", file: !1687, line: 31, size: 256, elements: !1721)
!1721 = !{!1722, !1727, !1731, !1735}
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !1720, file: !1687, line: 32, baseType: !1723, size: 64)
!1723 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1724, size: 64)
!1724 = !DISubroutineType(types: !1725)
!1725 = !{!625, !1685, !1726}
!1726 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1509, size: 64)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "stop", scope: !1720, file: !1687, line: 33, baseType: !1728, size: 64, offset: 64)
!1728 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1729, size: 64)
!1729 = !DISubroutineType(types: !1730)
!1730 = !{null, !1685, !625}
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1720, file: !1687, line: 34, baseType: !1732, size: 64, offset: 128)
!1732 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1733, size: 64)
!1733 = !DISubroutineType(types: !1734)
!1734 = !{!625, !1685, !625, !1726}
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !1720, file: !1687, line: 35, baseType: !1736, size: 64, offset: 192)
!1736 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1737, size: 64)
!1737 = !DISubroutineType(types: !1738)
!1738 = !{!5, !1685, !625}
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "poll_event", scope: !1686, file: !1687, line: 26, baseType: !5, size: 32, offset: 704)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !1686, file: !1687, line: 27, baseType: !1741, size: 64, offset: 768)
!1741 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1742, size: 64)
!1742 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1350)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !1686, file: !1687, line: 28, baseType: !625, size: 64, offset: 832)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "show_devname", scope: !1632, file: !76, line: 1955, baseType: !1682, size: 64, offset: 1088)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !1632, file: !76, line: 1956, baseType: !1682, size: 64, offset: 1152)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "show_stats", scope: !1632, file: !76, line: 1957, baseType: !1682, size: 64, offset: 1216)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "bdev_try_to_free_page", scope: !1632, file: !76, line: 1963, baseType: !1748, size: 64, offset: 1280)
!1748 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1749, size: 64)
!1749 = !DISubroutineType(types: !1750)
!1750 = !{!5, !1578, !1751, !1774}
!1751 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1752, size: 64)
!1752 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page", file: !1753, line: 68, size: 512, align: 128, elements: !1754)
!1753 = !DIFile(filename: "./include/linux/mm_types.h", directory: "/home/lizy2001/genbc/linux")
!1754 = !{!1755, !1756, !4346, !4353}
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1752, file: !1753, line: 69, baseType: !346, size: 64)
!1756 = !DIDerivedType(tag: DW_TAG_member, scope: !1752, file: !1753, line: 77, baseType: !1757, size: 320, offset: 64)
!1757 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1752, file: !1753, line: 77, size: 320, elements: !1758)
!1758 = !{!1759, !2064, !2069, !2097, !2105, !2111, !4277, !4345}
!1759 = !DIDerivedType(tag: DW_TAG_member, scope: !1757, file: !1753, line: 78, baseType: !1760, size: 320)
!1760 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1757, file: !1753, line: 78, size: 320, elements: !1761)
!1761 = !{!1762, !1763, !2062, !2063}
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !1760, file: !1753, line: 84, baseType: !318, size: 128)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "mapping", scope: !1760, file: !1753, line: 86, baseType: !1764, size: 64, offset: 128)
!1764 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1765, size: 64)
!1765 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space", file: !76, line: 451, size: 1216, align: 64, elements: !1766)
!1766 = !{!1767, !1768, !1776, !1777, !1778, !1786, !1795, !1796, !1797, !1798, !2055, !2056, !2059, !2060, !2061}
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "host", scope: !1765, file: !76, line: 452, baseType: !1408, size: 64)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "i_pages", scope: !1765, file: !76, line: 453, baseType: !1769, size: 128, offset: 64)
!1769 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xarray", file: !1770, line: 292, size: 128, elements: !1771)
!1770 = !DIFile(filename: "./include/linux/xarray.h", directory: "/home/lizy2001/genbc/linux")
!1771 = !{!1772, !1773, !1775}
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "xa_lock", scope: !1769, file: !1770, line: 293, baseType: !1702)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "xa_flags", scope: !1769, file: !1770, line: 295, baseType: !1774, size: 32)
!1774 = !DIDerivedType(tag: DW_TAG_typedef, name: "gfp_t", file: !311, line: 148, baseType: !11)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "xa_head", scope: !1769, file: !1770, line: 296, baseType: !625, size: 64, offset: 64)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !1765, file: !76, line: 454, baseType: !1774, size: 32, offset: 192)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_writable", scope: !1765, file: !76, line: 455, baseType: !417, size: 32, offset: 224)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap", scope: !1765, file: !76, line: 460, baseType: !1779, size: 128, offset: 256)
!1779 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root_cached", file: !468, line: 125, size: 128, elements: !1780)
!1780 = !{!1781, !1785}
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !1779, file: !468, line: 126, baseType: !1782, size: 64)
!1782 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root", file: !468, line: 31, size: 64, elements: !1783)
!1783 = !{!1784}
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !1782, file: !468, line: 32, baseType: !472, size: 64)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "rb_leftmost", scope: !1779, file: !468, line: 127, baseType: !472, size: 64, offset: 64)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_rwsem", scope: !1765, file: !76, line: 461, baseType: !1787, size: 256, offset: 384)
!1787 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rw_semaphore", file: !1788, line: 35, size: 256, elements: !1789)
!1788 = !DIFile(filename: "./include/linux/rwsem.h", directory: "/home/lizy2001/genbc/linux")
!1789 = !{!1790, !1791, !1792, !1794}
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1787, file: !1788, line: 36, baseType: !405, size: 64)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1787, file: !1788, line: 42, baseType: !405, size: 64, offset: 64)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !1787, file: !1788, line: 46, baseType: !1793, offset: 128)
!1793 = !DIDerivedType(tag: DW_TAG_typedef, name: "raw_spinlock_t", file: !1703, line: 29, baseType: !1710)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !1787, file: !1788, line: 47, baseType: !318, size: 128, offset: 128)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "nrpages", scope: !1765, file: !76, line: 462, baseType: !346, size: 64, offset: 640)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "nrexceptional", scope: !1765, file: !76, line: 463, baseType: !346, size: 64, offset: 704)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "writeback_index", scope: !1765, file: !76, line: 464, baseType: !346, size: 64, offset: 768)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "a_ops", scope: !1765, file: !76, line: 465, baseType: !1799, size: 64, offset: 832)
!1799 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1800, size: 64)
!1800 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1801)
!1801 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space_operations", file: !76, line: 367, size: 1408, elements: !1802)
!1802 = !{!1803, !1807, !1811, !1815, !1819, !1823, !1829, !1835, !1839, !1844, !1848, !1852, !1856, !2019, !2023, !2029, !2030, !2031, !2035, !2040, !2044, !2051}
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "writepage", scope: !1801, file: !76, line: 368, baseType: !1804, size: 64)
!1804 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1805, size: 64)
!1805 = !DISubroutineType(types: !1806)
!1806 = !{!5, !1751, !1651}
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "readpage", scope: !1801, file: !76, line: 369, baseType: !1808, size: 64, offset: 64)
!1808 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1809, size: 64)
!1809 = !DISubroutineType(types: !1810)
!1810 = !{!5, !1349, !1751}
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "writepages", scope: !1801, file: !76, line: 372, baseType: !1812, size: 64, offset: 128)
!1812 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1813, size: 64)
!1813 = !DISubroutineType(types: !1814)
!1814 = !{!5, !1764, !1651}
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "set_page_dirty", scope: !1801, file: !76, line: 375, baseType: !1816, size: 64, offset: 192)
!1816 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1817, size: 64)
!1817 = !DISubroutineType(types: !1818)
!1818 = !{!5, !1751}
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "readpages", scope: !1801, file: !76, line: 381, baseType: !1820, size: 64, offset: 256)
!1820 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1821, size: 64)
!1821 = !DISubroutineType(types: !1822)
!1822 = !{!5, !1349, !1764, !321, !11}
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "readahead", scope: !1801, file: !76, line: 383, baseType: !1824, size: 64, offset: 320)
!1824 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1825, size: 64)
!1825 = !DISubroutineType(types: !1826)
!1826 = !{null, !1827}
!1827 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1828, size: 64)
!1828 = !DICompositeType(tag: DW_TAG_structure_type, name: "readahead_control", file: !76, line: 290, flags: DIFlagFwdDecl)
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "write_begin", scope: !1801, file: !76, line: 385, baseType: !1830, size: 64, offset: 384)
!1830 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1831, size: 64)
!1831 = !DISubroutineType(types: !1832)
!1832 = !{!5, !1349, !1764, !1509, !11, !11, !1833, !1834}
!1833 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1751, size: 64)
!1834 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !625, size: 64)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "write_end", scope: !1801, file: !76, line: 388, baseType: !1836, size: 64, offset: 448)
!1836 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1837, size: 64)
!1837 = !DISubroutineType(types: !1838)
!1838 = !{!5, !1349, !1764, !1509, !11, !11, !1751, !625}
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "bmap", scope: !1801, file: !76, line: 393, baseType: !1840, size: 64, offset: 512)
!1840 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1841, size: 64)
!1841 = !DISubroutineType(types: !1842)
!1842 = !{!1843, !1764, !1843}
!1843 = !DIDerivedType(tag: DW_TAG_typedef, name: "sector_t", file: !311, line: 125, baseType: !365)
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "invalidatepage", scope: !1801, file: !76, line: 394, baseType: !1845, size: 64, offset: 576)
!1845 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1846, size: 64)
!1846 = !DISubroutineType(types: !1847)
!1847 = !{null, !1751, !11, !11}
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "releasepage", scope: !1801, file: !76, line: 395, baseType: !1849, size: 64, offset: 640)
!1849 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1850, size: 64)
!1850 = !DISubroutineType(types: !1851)
!1851 = !{!5, !1751, !1774}
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "freepage", scope: !1801, file: !76, line: 396, baseType: !1853, size: 64, offset: 704)
!1853 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1854, size: 64)
!1854 = !DISubroutineType(types: !1855)
!1855 = !{null, !1751}
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "direct_IO", scope: !1801, file: !76, line: 397, baseType: !1857, size: 64, offset: 768)
!1857 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1858, size: 64)
!1858 = !DISubroutineType(types: !1859)
!1859 = !{!1554, !1860, !1880}
!1860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1861, size: 64)
!1861 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kiocb", file: !76, line: 320, size: 384, elements: !1862)
!1862 = !{!1863, !1864, !1865, !1869, !1870, !1871, !1872, !1873}
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "ki_filp", scope: !1861, file: !76, line: 321, baseType: !1349, size: 64)
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "ki_pos", scope: !1861, file: !76, line: 326, baseType: !1509, size: 64, offset: 64)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "ki_complete", scope: !1861, file: !76, line: 327, baseType: !1866, size: 64, offset: 128)
!1866 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1867, size: 64)
!1867 = !DISubroutineType(types: !1868)
!1868 = !{null, !1860, !1032, !1032}
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !1861, file: !76, line: 328, baseType: !625, size: 64, offset: 192)
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "ki_flags", scope: !1861, file: !76, line: 329, baseType: !5, size: 32, offset: 256)
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "ki_hint", scope: !1861, file: !76, line: 330, baseType: !615, size: 16, offset: 288)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "ki_ioprio", scope: !1861, file: !76, line: 331, baseType: !615, size: 16, offset: 304)
!1873 = !DIDerivedType(tag: DW_TAG_member, scope: !1861, file: !76, line: 332, baseType: !1874, size: 64, offset: 320)
!1874 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1861, file: !76, line: 332, size: 64, elements: !1875)
!1875 = !{!1876, !1877}
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "ki_cookie", scope: !1874, file: !76, line: 333, baseType: !11, size: 32)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "ki_waitq", scope: !1874, file: !76, line: 334, baseType: !1878, size: 64)
!1878 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1879, size: 64)
!1879 = !DICompositeType(tag: DW_TAG_structure_type, name: "wait_page_queue", file: !76, line: 334, flags: DIFlagFwdDecl)
!1880 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1881, size: 64)
!1881 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iov_iter", file: !1882, line: 29, size: 320, elements: !1883)
!1882 = !DIFile(filename: "./include/linux/uio.h", directory: "/home/lizy2001/genbc/linux")
!1883 = !{!1884, !1885, !1886, !1887, !2010}
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1881, file: !1882, line: 35, baseType: !11, size: 32)
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "iov_offset", scope: !1881, file: !1882, line: 36, baseType: !1073, size: 64, offset: 64)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1881, file: !1882, line: 37, baseType: !1073, size: 64, offset: 128)
!1887 = !DIDerivedType(tag: DW_TAG_member, scope: !1881, file: !1882, line: 38, baseType: !1888, size: 64, offset: 192)
!1888 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1881, file: !1882, line: 38, size: 64, elements: !1889)
!1889 = !{!1890, !1898, !1905, !1914}
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "iov", scope: !1888, file: !1882, line: 39, baseType: !1891, size: 64)
!1891 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1892, size: 64)
!1892 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1893)
!1893 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iovec", file: !1894, line: 17, size: 128, elements: !1895)
!1894 = !DIFile(filename: "./include/uapi/linux/uio.h", directory: "/home/lizy2001/genbc/linux")
!1895 = !{!1896, !1897}
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "iov_base", scope: !1893, file: !1894, line: 19, baseType: !625, size: 64)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "iov_len", scope: !1893, file: !1894, line: 20, baseType: !1074, size: 64, offset: 64)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "kvec", scope: !1888, file: !1882, line: 40, baseType: !1899, size: 64)
!1899 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1900, size: 64)
!1900 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1901)
!1901 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kvec", file: !1882, line: 15, size: 128, elements: !1902)
!1902 = !{!1903, !1904}
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "iov_base", scope: !1901, file: !1882, line: 16, baseType: !625, size: 64)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "iov_len", scope: !1901, file: !1882, line: 17, baseType: !1073, size: 64, offset: 64)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "bvec", scope: !1888, file: !1882, line: 41, baseType: !1906, size: 64)
!1906 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1907, size: 64)
!1907 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1908)
!1908 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bio_vec", file: !1909, line: 31, size: 128, elements: !1910)
!1909 = !DIFile(filename: "./include/linux/bvec.h", directory: "/home/lizy2001/genbc/linux")
!1910 = !{!1911, !1912, !1913}
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "bv_page", scope: !1908, file: !1909, line: 32, baseType: !1751, size: 64)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "bv_len", scope: !1908, file: !1909, line: 33, baseType: !11, size: 32, offset: 64)
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "bv_offset", scope: !1908, file: !1909, line: 34, baseType: !11, size: 32, offset: 96)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "pipe", scope: !1888, file: !1882, line: 42, baseType: !1915, size: 64)
!1915 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1916, size: 64)
!1916 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pipe_inode_info", file: !1917, line: 57, size: 1088, elements: !1918)
!1917 = !DIFile(filename: "./include/linux/pipe_fs_i.h", directory: "/home/lizy2001/genbc/linux")
!1918 = !{!1919, !1920, !1927, !1928, !1929, !1930, !1931, !1932, !1933, !1934, !1935, !1936, !1937, !1938, !1939, !1956, !1957, !1984}
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !1916, file: !1917, line: 58, baseType: !1697, size: 192)
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "rd_wait", scope: !1916, file: !1917, line: 59, baseType: !1921, size: 128, offset: 192)
!1921 = !DIDerivedType(tag: DW_TAG_typedef, name: "wait_queue_head_t", file: !1922, line: 40, baseType: !1923)
!1922 = !DIFile(filename: "./include/linux/wait.h", directory: "/home/lizy2001/genbc/linux")
!1923 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wait_queue_head", file: !1922, line: 36, size: 128, elements: !1924)
!1924 = !{!1925, !1926}
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1923, file: !1922, line: 37, baseType: !1702)
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1923, file: !1922, line: 38, baseType: !318, size: 128)
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "wr_wait", scope: !1916, file: !1917, line: 59, baseType: !1921, size: 128, offset: 320)
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1916, file: !1917, line: 60, baseType: !11, size: 32, offset: 448)
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1916, file: !1917, line: 61, baseType: !11, size: 32, offset: 480)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "max_usage", scope: !1916, file: !1917, line: 62, baseType: !11, size: 32, offset: 512)
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "ring_size", scope: !1916, file: !1917, line: 63, baseType: !11, size: 32, offset: 544)
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "nr_accounted", scope: !1916, file: !1917, line: 67, baseType: !11, size: 32, offset: 576)
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "readers", scope: !1916, file: !1917, line: 68, baseType: !11, size: 32, offset: 608)
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "writers", scope: !1916, file: !1917, line: 69, baseType: !11, size: 32, offset: 640)
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !1916, file: !1917, line: 70, baseType: !11, size: 32, offset: 672)
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "r_counter", scope: !1916, file: !1917, line: 71, baseType: !11, size: 32, offset: 704)
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "w_counter", scope: !1916, file: !1917, line: 72, baseType: !11, size: 32, offset: 736)
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "tmp_page", scope: !1916, file: !1917, line: 73, baseType: !1751, size: 64, offset: 768)
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "fasync_readers", scope: !1916, file: !1917, line: 74, baseType: !1940, size: 64, offset: 832)
!1940 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1941, size: 64)
!1941 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fasync_struct", file: !76, line: 1314, size: 320, elements: !1942)
!1942 = !{!1943, !1951, !1952, !1953, !1954, !1955}
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "fa_lock", scope: !1941, file: !76, line: 1315, baseType: !1944)
!1944 = !DIDerivedType(tag: DW_TAG_typedef, name: "rwlock_t", file: !1945, line: 20, baseType: !1946)
!1945 = !DIFile(filename: "./include/linux/rwlock_types.h", directory: "/home/lizy2001/genbc/linux")
!1946 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1945, line: 11, elements: !1947)
!1947 = !{!1948}
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !1946, file: !1945, line: 12, baseType: !1949)
!1949 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_rwlock_t", file: !1714, line: 33, baseType: !1950)
!1950 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1714, line: 31, elements: !1619)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !1941, file: !76, line: 1316, baseType: !5, size: 32)
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "fa_fd", scope: !1941, file: !76, line: 1317, baseType: !5, size: 32, offset: 32)
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "fa_next", scope: !1941, file: !76, line: 1318, baseType: !1940, size: 64, offset: 64)
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "fa_file", scope: !1941, file: !76, line: 1319, baseType: !1349, size: 64, offset: 128)
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "fa_rcu", scope: !1941, file: !76, line: 1320, baseType: !333, size: 128, align: 64, offset: 192)
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "fasync_writers", scope: !1916, file: !1917, line: 75, baseType: !1940, size: 64, offset: 896)
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "bufs", scope: !1916, file: !1917, line: 76, baseType: !1958, size: 64, offset: 960)
!1958 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1959, size: 64)
!1959 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pipe_buffer", file: !1917, line: 26, size: 320, elements: !1960)
!1960 = !{!1961, !1962, !1963, !1964, !1982, !1983}
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !1959, file: !1917, line: 27, baseType: !1751, size: 64)
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1959, file: !1917, line: 28, baseType: !11, size: 32, offset: 64)
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1959, file: !1917, line: 28, baseType: !11, size: 32, offset: 96)
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !1959, file: !1917, line: 29, baseType: !1965, size: 64, offset: 128)
!1965 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1966, size: 64)
!1966 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1967)
!1967 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pipe_buf_operations", file: !1917, line: 93, size: 256, elements: !1968)
!1968 = !{!1969, !1973, !1977, !1981}
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "confirm", scope: !1967, file: !1917, line: 101, baseType: !1970, size: 64)
!1970 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1971, size: 64)
!1971 = !DISubroutineType(types: !1972)
!1972 = !{!5, !1915, !1958}
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !1967, file: !1917, line: 107, baseType: !1974, size: 64, offset: 64)
!1974 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1975, size: 64)
!1975 = !DISubroutineType(types: !1976)
!1976 = !{null, !1915, !1958}
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "try_steal", scope: !1967, file: !1917, line: 117, baseType: !1978, size: 64, offset: 128)
!1978 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1979, size: 64)
!1979 = !DISubroutineType(types: !1980)
!1980 = !{!805, !1915, !1958}
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !1967, file: !1917, line: 122, baseType: !1978, size: 64, offset: 192)
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1959, file: !1917, line: 30, baseType: !11, size: 32, offset: 192)
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !1959, file: !1917, line: 31, baseType: !346, size: 64, offset: 256)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !1916, file: !1917, line: 77, baseType: !1985, size: 64, offset: 1024)
!1985 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1986, size: 64)
!1986 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "user_struct", file: !1987, line: 13, size: 896, elements: !1988)
!1987 = !DIFile(filename: "./include/linux/sched/user.h", directory: "/home/lizy2001/genbc/linux")
!1988 = !{!1989, !1990, !1991, !1992, !1993, !1994, !1995, !1996, !1997, !1998, !1999}
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !1986, file: !1987, line: 14, baseType: !602, size: 32)
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "processes", scope: !1986, file: !1987, line: 15, baseType: !417, size: 32, offset: 32)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "sigpending", scope: !1986, file: !1987, line: 16, baseType: !417, size: 32, offset: 64)
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "epoll_watches", scope: !1986, file: !1987, line: 21, baseType: !405, size: 64, offset: 128)
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "locked_shm", scope: !1986, file: !1987, line: 27, baseType: !346, size: 64, offset: 192)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "unix_inflight", scope: !1986, file: !1987, line: 28, baseType: !346, size: 64, offset: 256)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "pipe_bufs", scope: !1986, file: !1987, line: 29, baseType: !405, size: 64, offset: 320)
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "uidhash_node", scope: !1986, file: !1987, line: 32, baseType: !310, size: 128, offset: 384)
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1986, file: !1987, line: 33, baseType: !1415, size: 32, offset: 512)
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !1986, file: !1987, line: 37, baseType: !405, size: 64, offset: 576)
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "ratelimit", scope: !1986, file: !1987, line: 44, baseType: !2000, size: 256, offset: 640)
!2000 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ratelimit_state", file: !2001, line: 15, size: 256, elements: !2002)
!2001 = !DIFile(filename: "./include/linux/ratelimit_types.h", directory: "/home/lizy2001/genbc/linux")
!2002 = !{!2003, !2004, !2005, !2006, !2007, !2008, !2009}
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2000, file: !2001, line: 16, baseType: !1793)
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "interval", scope: !2000, file: !2001, line: 18, baseType: !5, size: 32)
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "burst", scope: !2000, file: !2001, line: 19, baseType: !5, size: 32, offset: 32)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "printed", scope: !2000, file: !2001, line: 20, baseType: !5, size: 32, offset: 64)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "missed", scope: !2000, file: !2001, line: 21, baseType: !5, size: 32, offset: 96)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "begin", scope: !2000, file: !2001, line: 22, baseType: !346, size: 64, offset: 128)
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2000, file: !2001, line: 23, baseType: !346, size: 64, offset: 192)
!2010 = !DIDerivedType(tag: DW_TAG_member, scope: !1881, file: !1882, line: 44, baseType: !2011, size: 64, offset: 256)
!2011 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1881, file: !1882, line: 44, size: 64, elements: !2012)
!2012 = !{!2013, !2014}
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "nr_segs", scope: !2011, file: !1882, line: 45, baseType: !346, size: 64)
!2014 = !DIDerivedType(tag: DW_TAG_member, scope: !2011, file: !1882, line: 46, baseType: !2015, size: 64)
!2015 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2011, file: !1882, line: 46, size: 64, elements: !2016)
!2016 = !{!2017, !2018}
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2015, file: !1882, line: 47, baseType: !11, size: 32)
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "start_head", scope: !2015, file: !1882, line: 48, baseType: !11, size: 32, offset: 32)
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "migratepage", scope: !1801, file: !76, line: 402, baseType: !2020, size: 64, offset: 832)
!2020 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2021, size: 64)
!2021 = !DISubroutineType(types: !2022)
!2022 = !{!5, !1764, !1751, !1751, !38}
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "isolate_page", scope: !1801, file: !76, line: 404, baseType: !2024, size: 64, offset: 896)
!2024 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2025, size: 64)
!2025 = !DISubroutineType(types: !2026)
!2026 = !{!805, !1751, !2027}
!2027 = !DIDerivedType(tag: DW_TAG_typedef, name: "isolate_mode_t", file: !2028, line: 305, baseType: !11)
!2028 = !DIFile(filename: "./include/linux/mmzone.h", directory: "/home/lizy2001/genbc/linux")
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "putback_page", scope: !1801, file: !76, line: 405, baseType: !1853, size: 64, offset: 960)
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "launder_page", scope: !1801, file: !76, line: 406, baseType: !1816, size: 64, offset: 1024)
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "is_partially_uptodate", scope: !1801, file: !76, line: 407, baseType: !2032, size: 64, offset: 1088)
!2032 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2033, size: 64)
!2033 = !DISubroutineType(types: !2034)
!2034 = !{!5, !1751, !346, !346}
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "is_dirty_writeback", scope: !1801, file: !76, line: 409, baseType: !2036, size: 64, offset: 1152)
!2036 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2037, size: 64)
!2037 = !DISubroutineType(types: !2038)
!2038 = !{null, !1751, !2039, !2039}
!2039 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !805, size: 64)
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "error_remove_page", scope: !1801, file: !76, line: 410, baseType: !2041, size: 64, offset: 1216)
!2041 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2042, size: 64)
!2042 = !DISubroutineType(types: !2043)
!2043 = !{!5, !1764, !1751}
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "swap_activate", scope: !1801, file: !76, line: 413, baseType: !2045, size: 64, offset: 1280)
!2045 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2046, size: 64)
!2046 = !DISubroutineType(types: !2047)
!2047 = !{!5, !2048, !1349, !2050}
!2048 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2049, size: 64)
!2049 = !DICompositeType(tag: DW_TAG_structure_type, name: "swap_info_struct", file: !76, line: 61, flags: DIFlagFwdDecl)
!2050 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1843, size: 64)
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "swap_deactivate", scope: !1801, file: !76, line: 415, baseType: !2052, size: 64, offset: 1344)
!2052 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2053, size: 64)
!2053 = !DISubroutineType(types: !2054)
!2054 = !{null, !1349}
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1765, file: !76, line: 466, baseType: !346, size: 64, offset: 896)
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "wb_err", scope: !1765, file: !76, line: 467, baseType: !2057, size: 32, offset: 960)
!2057 = !DIDerivedType(tag: DW_TAG_typedef, name: "errseq_t", file: !2058, line: 8, baseType: !1021)
!2058 = !DIFile(filename: "./include/linux/errseq.h", directory: "/home/lizy2001/genbc/linux")
!2059 = !DIDerivedType(tag: DW_TAG_member, name: "private_lock", scope: !1765, file: !76, line: 468, baseType: !1702, offset: 992)
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "private_list", scope: !1765, file: !76, line: 469, baseType: !318, size: 128, offset: 1024)
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !1765, file: !76, line: 470, baseType: !625, size: 64, offset: 1152)
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1760, file: !1753, line: 87, baseType: !346, size: 64, offset: 192)
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !1760, file: !1753, line: 94, baseType: !346, size: 64, offset: 256)
!2064 = !DIDerivedType(tag: DW_TAG_member, scope: !1757, file: !1753, line: 96, baseType: !2065, size: 64)
!2065 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1757, file: !1753, line: 96, size: 64, elements: !2066)
!2066 = !{!2067}
!2067 = !DIDerivedType(tag: DW_TAG_member, name: "dma_addr", scope: !2065, file: !1753, line: 101, baseType: !2068, size: 64)
!2068 = !DIDerivedType(tag: DW_TAG_typedef, name: "dma_addr_t", file: !311, line: 143, baseType: !365)
!2069 = !DIDerivedType(tag: DW_TAG_member, scope: !1757, file: !1753, line: 103, baseType: !2070, size: 320)
!2070 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1757, file: !1753, line: 103, size: 320, elements: !2071)
!2071 = !{!2072, !2082, !2085, !2086}
!2072 = !DIDerivedType(tag: DW_TAG_member, scope: !2070, file: !1753, line: 104, baseType: !2073, size: 128)
!2073 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2070, file: !1753, line: 104, size: 128, elements: !2074)
!2074 = !{!2075, !2076}
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "slab_list", scope: !2073, file: !1753, line: 105, baseType: !318, size: 128)
!2076 = !DIDerivedType(tag: DW_TAG_member, scope: !2073, file: !1753, line: 106, baseType: !2077, size: 128)
!2077 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2073, file: !1753, line: 106, size: 128, elements: !2078)
!2078 = !{!2079, !2080, !2081}
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2077, file: !1753, line: 107, baseType: !1751, size: 64)
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !2077, file: !1753, line: 109, baseType: !5, size: 32, offset: 64)
!2081 = !DIDerivedType(tag: DW_TAG_member, name: "pobjects", scope: !2077, file: !1753, line: 110, baseType: !5, size: 32, offset: 96)
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "slab_cache", scope: !2070, file: !1753, line: 117, baseType: !2083, size: 64, offset: 128)
!2083 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2084, size: 64)
!2084 = !DICompositeType(tag: DW_TAG_structure_type, name: "kmem_cache", file: !1753, line: 117, flags: DIFlagFwdDecl)
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "freelist", scope: !2070, file: !1753, line: 119, baseType: !625, size: 64, offset: 192)
!2086 = !DIDerivedType(tag: DW_TAG_member, scope: !2070, file: !1753, line: 120, baseType: !2087, size: 64, offset: 256)
!2087 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2070, file: !1753, line: 120, size: 64, elements: !2088)
!2088 = !{!2089, !2090, !2091}
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "s_mem", scope: !2087, file: !1753, line: 121, baseType: !625, size: 64)
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "counters", scope: !2087, file: !1753, line: 122, baseType: !346, size: 64)
!2091 = !DIDerivedType(tag: DW_TAG_member, scope: !2087, file: !1753, line: 123, baseType: !2092, size: 32)
!2092 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2087, file: !1753, line: 123, size: 32, elements: !2093)
!2093 = !{!2094, !2095, !2096}
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "inuse", scope: !2092, file: !1753, line: 124, baseType: !11, size: 16, flags: DIFlagBitField, extraData: i64 0)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !2092, file: !1753, line: 125, baseType: !11, size: 15, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !2092, file: !1753, line: 126, baseType: !11, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!2097 = !DIDerivedType(tag: DW_TAG_member, scope: !1757, file: !1753, line: 130, baseType: !2098, size: 192)
!2098 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1757, file: !1753, line: 130, size: 192, elements: !2099)
!2099 = !{!2100, !2101, !2102, !2103, !2104}
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "compound_head", scope: !2098, file: !1753, line: 131, baseType: !346, size: 64)
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "compound_dtor", scope: !2098, file: !1753, line: 134, baseType: !516, size: 8, offset: 64)
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "compound_order", scope: !2098, file: !1753, line: 135, baseType: !516, size: 8, offset: 72)
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "compound_mapcount", scope: !2098, file: !1753, line: 136, baseType: !417, size: 32, offset: 96)
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "compound_nr", scope: !2098, file: !1753, line: 137, baseType: !11, size: 32, offset: 128)
!2105 = !DIDerivedType(tag: DW_TAG_member, scope: !1757, file: !1753, line: 139, baseType: !2106, size: 256)
!2106 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1757, file: !1753, line: 139, size: 256, elements: !2107)
!2107 = !{!2108, !2109, !2110}
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "_compound_pad_1", scope: !2106, file: !1753, line: 140, baseType: !346, size: 64)
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "hpage_pinned_refcount", scope: !2106, file: !1753, line: 141, baseType: !417, size: 32, offset: 64)
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_list", scope: !2106, file: !1753, line: 143, baseType: !318, size: 128, offset: 128)
!2111 = !DIDerivedType(tag: DW_TAG_member, scope: !1757, file: !1753, line: 145, baseType: !2112, size: 256)
!2112 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1757, file: !1753, line: 145, size: 256, elements: !2113)
!2113 = !{!2114, !2115, !2118, !2119, !4276}
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_1", scope: !2112, file: !1753, line: 146, baseType: !346, size: 64)
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "pmd_huge_pte", scope: !2112, file: !1753, line: 147, baseType: !2116, size: 64, offset: 64)
!2116 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgtable_t", file: !2117, line: 509, baseType: !1751)
!2117 = !DIFile(filename: "./arch/x86/include/asm/pgtable_types.h", directory: "/home/lizy2001/genbc/linux")
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_2", scope: !2112, file: !1753, line: 148, baseType: !346, size: 64, offset: 128)
!2119 = !DIDerivedType(tag: DW_TAG_member, scope: !2112, file: !1753, line: 149, baseType: !2120, size: 64, offset: 192)
!2120 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2112, file: !1753, line: 149, size: 64, elements: !2121)
!2121 = !{!2122, !4275}
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "pt_mm", scope: !2120, file: !1753, line: 150, baseType: !2123, size: 64)
!2123 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2124, size: 64)
!2124 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_struct", file: !1753, line: 388, size: 7296, elements: !2125)
!2125 = !{!2126, !4273}
!2126 = !DIDerivedType(tag: DW_TAG_member, scope: !2124, file: !1753, line: 389, baseType: !2127, size: 7296)
!2127 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2124, file: !1753, line: 389, size: 7296, elements: !2128)
!2128 = !{!2129, !2247, !2248, !2249, !2253, !2254, !2255, !2256, !2257, !2264, !2265, !2266, !2267, !2268, !2269, !2270, !2271, !2272, !2273, !2274, !2275, !2276, !2277, !2278, !2279, !2280, !2281, !2282, !2283, !2284, !2285, !2286, !2287, !2288, !2289, !2290, !2291, !2292, !2293, !2294, !2298, !2306, !2309, !2348, !2349, !4257, !4258, !4261, !4262, !4263, !4266, !4267, !4268, !4271, !4272}
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !2127, file: !1753, line: 390, baseType: !2130, size: 64)
!2130 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2131, size: 64)
!2131 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_area_struct", file: !1753, line: 305, size: 1472, elements: !2132)
!2132 = !{!2133, !2134, !2135, !2136, !2137, !2138, !2139, !2140, !2147, !2148, !2153, !2154, !2157, !2241, !2242, !2243, !2244, !2245}
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "vm_start", scope: !2131, file: !1753, line: 308, baseType: !346, size: 64)
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "vm_end", scope: !2131, file: !1753, line: 309, baseType: !346, size: 64, offset: 64)
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "vm_next", scope: !2131, file: !1753, line: 313, baseType: !2130, size: 64, offset: 128)
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "vm_prev", scope: !2131, file: !1753, line: 313, baseType: !2130, size: 64, offset: 192)
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "vm_rb", scope: !2131, file: !1753, line: 315, baseType: !467, size: 192, align: 64, offset: 256)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_gap", scope: !2131, file: !1753, line: 323, baseType: !346, size: 64, offset: 448)
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "vm_mm", scope: !2131, file: !1753, line: 327, baseType: !2123, size: 64, offset: 512)
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "vm_page_prot", scope: !2131, file: !1753, line: 333, baseType: !2141, size: 64, offset: 576)
!2141 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprot_t", file: !2117, line: 284, baseType: !2142)
!2142 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pgprot", file: !2117, line: 284, size: 64, elements: !2143)
!2143 = !{!2144}
!2144 = !DIDerivedType(tag: DW_TAG_member, name: "pgprot", scope: !2142, file: !2117, line: 284, baseType: !2145, size: 64)
!2145 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprotval_t", file: !2146, line: 19, baseType: !346)
!2146 = !DIFile(filename: "./arch/x86/include/asm/pgtable_64_types.h", directory: "/home/lizy2001/genbc/linux")
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "vm_flags", scope: !2131, file: !1753, line: 334, baseType: !346, size: 64, offset: 640)
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "shared", scope: !2131, file: !1753, line: 343, baseType: !2149, size: 256, offset: 704)
!2149 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2131, file: !1753, line: 340, size: 256, elements: !2150)
!2150 = !{!2151, !2152}
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !2149, file: !1753, line: 341, baseType: !467, size: 192, align: 64)
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_last", scope: !2149, file: !1753, line: 342, baseType: !346, size: 64, offset: 192)
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma_chain", scope: !2131, file: !1753, line: 351, baseType: !318, size: 128, offset: 960)
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma", scope: !2131, file: !1753, line: 353, baseType: !2155, size: 64, offset: 1088)
!2155 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2156, size: 64)
!2156 = !DICompositeType(tag: DW_TAG_structure_type, name: "anon_vma", file: !1753, line: 353, flags: DIFlagFwdDecl)
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !2131, file: !1753, line: 356, baseType: !2158, size: 64, offset: 1152)
!2158 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2159, size: 64)
!2159 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2160)
!2160 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_operations_struct", file: !46, line: 557, size: 832, elements: !2161)
!2161 = !{!2162, !2166, !2167, !2171, !2175, !2215, !2219, !2223, !2227, !2228, !2229, !2233, !2237}
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !2160, file: !46, line: 558, baseType: !2163, size: 64)
!2163 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2164, size: 64)
!2164 = !DISubroutineType(types: !2165)
!2165 = !{null, !2130}
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !2160, file: !46, line: 559, baseType: !2163, size: 64, offset: 64)
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "split", scope: !2160, file: !46, line: 560, baseType: !2168, size: 64, offset: 128)
!2168 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2169, size: 64)
!2169 = !DISubroutineType(types: !2170)
!2170 = !{!5, !2130, !346}
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "mremap", scope: !2160, file: !46, line: 561, baseType: !2172, size: 64, offset: 192)
!2172 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2173, size: 64)
!2173 = !DISubroutineType(types: !2174)
!2174 = !{!5, !2130}
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "fault", scope: !2160, file: !46, line: 562, baseType: !2176, size: 64, offset: 256)
!2176 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2177, size: 64)
!2177 = !DISubroutineType(types: !2178)
!2178 = !{!2179, !2180}
!2179 = !DIDerivedType(tag: DW_TAG_typedef, name: "vm_fault_t", file: !1753, line: 682, baseType: !11)
!2180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2181, size: 64)
!2181 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_fault", file: !46, line: 508, size: 768, elements: !2182)
!2182 = !{!2183, !2184, !2185, !2186, !2187, !2188, !2195, !2202, !2208, !2209, !2210, !2212, !2214}
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "vma", scope: !2181, file: !46, line: 509, baseType: !2130, size: 64)
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2181, file: !46, line: 510, baseType: !11, size: 32, offset: 64)
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !2181, file: !46, line: 511, baseType: !1774, size: 32, offset: 96)
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "pgoff", scope: !2181, file: !46, line: 512, baseType: !346, size: 64, offset: 128)
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !2181, file: !46, line: 513, baseType: !346, size: 64, offset: 192)
!2188 = !DIDerivedType(tag: DW_TAG_member, name: "pmd", scope: !2181, file: !46, line: 514, baseType: !2189, size: 64, offset: 256)
!2189 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2190, size: 64)
!2190 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmd_t", file: !2117, line: 385, baseType: !2191)
!2191 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2117, line: 385, size: 64, elements: !2192)
!2192 = !{!2193}
!2193 = !DIDerivedType(tag: DW_TAG_member, name: "pmd", scope: !2191, file: !2117, line: 385, baseType: !2194, size: 64)
!2194 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmdval_t", file: !2146, line: 15, baseType: !346)
!2195 = !DIDerivedType(tag: DW_TAG_member, name: "pud", scope: !2181, file: !46, line: 516, baseType: !2196, size: 64, offset: 320)
!2196 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2197, size: 64)
!2197 = !DIDerivedType(tag: DW_TAG_typedef, name: "pud_t", file: !2117, line: 359, baseType: !2198)
!2198 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2117, line: 359, size: 64, elements: !2199)
!2199 = !{!2200}
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "pud", scope: !2198, file: !2117, line: 359, baseType: !2201, size: 64)
!2201 = !DIDerivedType(tag: DW_TAG_typedef, name: "pudval_t", file: !2146, line: 16, baseType: !346)
!2202 = !DIDerivedType(tag: DW_TAG_member, name: "orig_pte", scope: !2181, file: !46, line: 519, baseType: !2203, size: 64, offset: 384)
!2203 = !DIDerivedType(tag: DW_TAG_typedef, name: "pte_t", file: !2146, line: 21, baseType: !2204)
!2204 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2146, line: 21, size: 64, elements: !2205)
!2205 = !{!2206}
!2206 = !DIDerivedType(tag: DW_TAG_member, name: "pte", scope: !2204, file: !2146, line: 21, baseType: !2207, size: 64)
!2207 = !DIDerivedType(tag: DW_TAG_typedef, name: "pteval_t", file: !2146, line: 14, baseType: !346)
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "cow_page", scope: !2181, file: !46, line: 521, baseType: !1751, size: 64, offset: 448)
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !2181, file: !46, line: 522, baseType: !1751, size: 64, offset: 512)
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "pte", scope: !2181, file: !46, line: 528, baseType: !2211, size: 64, offset: 576)
!2211 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2203, size: 64)
!2212 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !2181, file: !46, line: 532, baseType: !2213, size: 64, offset: 640)
!2213 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1702, size: 64)
!2214 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_pte", scope: !2181, file: !46, line: 536, baseType: !2116, size: 64, offset: 704)
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "huge_fault", scope: !2160, file: !46, line: 563, baseType: !2216, size: 64, offset: 320)
!2216 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2217, size: 64)
!2217 = !DISubroutineType(types: !2218)
!2218 = !{!2179, !2180, !45}
!2219 = !DIDerivedType(tag: DW_TAG_member, name: "map_pages", scope: !2160, file: !46, line: 565, baseType: !2220, size: 64, offset: 384)
!2220 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2221, size: 64)
!2221 = !DISubroutineType(types: !2222)
!2222 = !{null, !2180, !346, !346}
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "pagesize", scope: !2160, file: !46, line: 567, baseType: !2224, size: 64, offset: 448)
!2224 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2225, size: 64)
!2225 = !DISubroutineType(types: !2226)
!2226 = !{!346, !2130}
!2227 = !DIDerivedType(tag: DW_TAG_member, name: "page_mkwrite", scope: !2160, file: !46, line: 571, baseType: !2176, size: 64, offset: 512)
!2228 = !DIDerivedType(tag: DW_TAG_member, name: "pfn_mkwrite", scope: !2160, file: !46, line: 574, baseType: !2176, size: 64, offset: 576)
!2229 = !DIDerivedType(tag: DW_TAG_member, name: "access", scope: !2160, file: !46, line: 579, baseType: !2230, size: 64, offset: 640)
!2230 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2231, size: 64)
!2231 = !DISubroutineType(types: !2232)
!2232 = !{!5, !2130, !346, !625, !5, !5}
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2160, file: !46, line: 585, baseType: !2234, size: 64, offset: 704)
!2234 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2235, size: 64)
!2235 = !DISubroutineType(types: !2236)
!2236 = !{!326, !2130}
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "find_special_page", scope: !2160, file: !46, line: 615, baseType: !2238, size: 64, offset: 768)
!2238 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2239, size: 64)
!2239 = !DISubroutineType(types: !2240)
!2240 = !{!1751, !2130, !346}
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "vm_pgoff", scope: !2131, file: !1753, line: 359, baseType: !346, size: 64, offset: 1216)
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "vm_file", scope: !2131, file: !1753, line: 361, baseType: !1349, size: 64, offset: 1280)
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "vm_private_data", scope: !2131, file: !1753, line: 362, baseType: !625, size: 64, offset: 1344)
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "swap_readahead_info", scope: !2131, file: !1753, line: 365, baseType: !405, size: 64, offset: 1408)
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "vm_userfaultfd_ctx", scope: !2131, file: !1753, line: 373, baseType: !2246, offset: 1472)
!2246 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_userfaultfd_ctx", file: !1753, line: 296, elements: !1619)
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "mm_rb", scope: !2127, file: !1753, line: 391, baseType: !1782, size: 64, offset: 64)
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache_seqnum", scope: !2127, file: !1753, line: 392, baseType: !365, size: 64, offset: 128)
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !2127, file: !1753, line: 394, baseType: !2250, size: 64, offset: 192)
!2250 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2251, size: 64)
!2251 = !DISubroutineType(types: !2252)
!2252 = !{!346, !1349, !346, !346, !346, !346}
!2253 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_base", scope: !2127, file: !1753, line: 398, baseType: !346, size: 64, offset: 256)
!2254 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_legacy_base", scope: !2127, file: !1753, line: 399, baseType: !346, size: 64, offset: 320)
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "task_size", scope: !2127, file: !1753, line: 405, baseType: !346, size: 64, offset: 384)
!2256 = !DIDerivedType(tag: DW_TAG_member, name: "highest_vm_end", scope: !2127, file: !1753, line: 406, baseType: !346, size: 64, offset: 448)
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !2127, file: !1753, line: 407, baseType: !2258, size: 64, offset: 512)
!2258 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2259, size: 64)
!2259 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgd_t", file: !2117, line: 286, baseType: !2260)
!2260 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2117, line: 286, size: 64, elements: !2261)
!2261 = !{!2262}
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !2260, file: !2117, line: 286, baseType: !2263, size: 64)
!2263 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgdval_t", file: !2146, line: 18, baseType: !346)
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "membarrier_state", scope: !2127, file: !1753, line: 416, baseType: !417, size: 32, offset: 576)
!2265 = !DIDerivedType(tag: DW_TAG_member, name: "mm_users", scope: !2127, file: !1753, line: 428, baseType: !417, size: 32, offset: 608)
!2266 = !DIDerivedType(tag: DW_TAG_member, name: "mm_count", scope: !2127, file: !1753, line: 437, baseType: !417, size: 32, offset: 640)
!2267 = !DIDerivedType(tag: DW_TAG_member, name: "has_pinned", scope: !2127, file: !1753, line: 447, baseType: !417, size: 32, offset: 672)
!2268 = !DIDerivedType(tag: DW_TAG_member, name: "pgtables_bytes", scope: !2127, file: !1753, line: 450, baseType: !405, size: 64, offset: 704)
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "map_count", scope: !2127, file: !1753, line: 452, baseType: !5, size: 32, offset: 768)
!2270 = !DIDerivedType(tag: DW_TAG_member, name: "page_table_lock", scope: !2127, file: !1753, line: 454, baseType: !1702, offset: 800)
!2271 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_lock", scope: !2127, file: !1753, line: 457, baseType: !1787, size: 256, offset: 832)
!2272 = !DIDerivedType(tag: DW_TAG_member, name: "mmlist", scope: !2127, file: !1753, line: 459, baseType: !318, size: 128, offset: 1088)
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_rss", scope: !2127, file: !1753, line: 466, baseType: !346, size: 64, offset: 1216)
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_vm", scope: !2127, file: !1753, line: 467, baseType: !346, size: 64, offset: 1280)
!2275 = !DIDerivedType(tag: DW_TAG_member, name: "total_vm", scope: !2127, file: !1753, line: 469, baseType: !346, size: 64, offset: 1344)
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !2127, file: !1753, line: 470, baseType: !346, size: 64, offset: 1408)
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "pinned_vm", scope: !2127, file: !1753, line: 471, baseType: !407, size: 64, offset: 1472)
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "data_vm", scope: !2127, file: !1753, line: 472, baseType: !346, size: 64, offset: 1536)
!2279 = !DIDerivedType(tag: DW_TAG_member, name: "exec_vm", scope: !2127, file: !1753, line: 473, baseType: !346, size: 64, offset: 1600)
!2280 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm", scope: !2127, file: !1753, line: 474, baseType: !346, size: 64, offset: 1664)
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "def_flags", scope: !2127, file: !1753, line: 475, baseType: !346, size: 64, offset: 1728)
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "arg_lock", scope: !2127, file: !1753, line: 477, baseType: !1702, offset: 1792)
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "start_code", scope: !2127, file: !1753, line: 478, baseType: !346, size: 64, offset: 1792)
!2284 = !DIDerivedType(tag: DW_TAG_member, name: "end_code", scope: !2127, file: !1753, line: 478, baseType: !346, size: 64, offset: 1856)
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "start_data", scope: !2127, file: !1753, line: 478, baseType: !346, size: 64, offset: 1920)
!2286 = !DIDerivedType(tag: DW_TAG_member, name: "end_data", scope: !2127, file: !1753, line: 478, baseType: !346, size: 64, offset: 1984)
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "start_brk", scope: !2127, file: !1753, line: 479, baseType: !346, size: 64, offset: 2048)
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "brk", scope: !2127, file: !1753, line: 479, baseType: !346, size: 64, offset: 2112)
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "start_stack", scope: !2127, file: !1753, line: 479, baseType: !346, size: 64, offset: 2176)
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "arg_start", scope: !2127, file: !1753, line: 480, baseType: !346, size: 64, offset: 2240)
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "arg_end", scope: !2127, file: !1753, line: 480, baseType: !346, size: 64, offset: 2304)
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "env_start", scope: !2127, file: !1753, line: 480, baseType: !346, size: 64, offset: 2368)
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "env_end", scope: !2127, file: !1753, line: 480, baseType: !346, size: 64, offset: 2432)
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "saved_auxv", scope: !2127, file: !1753, line: 482, baseType: !2295, size: 2816, offset: 2496)
!2295 = !DICompositeType(tag: DW_TAG_array_type, baseType: !346, size: 2816, elements: !2296)
!2296 = !{!2297}
!2297 = !DISubrange(count: 44)
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "rss_stat", scope: !2127, file: !1753, line: 488, baseType: !2299, size: 256, offset: 5312)
!2299 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_rss_stat", file: !2300, line: 60, size: 256, elements: !2301)
!2300 = !DIFile(filename: "./include/linux/mm_types_task.h", directory: "/home/lizy2001/genbc/linux")
!2301 = !{!2302}
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2299, file: !2300, line: 61, baseType: !2303, size: 256)
!2303 = !DICompositeType(tag: DW_TAG_array_type, baseType: !405, size: 256, elements: !2304)
!2304 = !{!2305}
!2305 = !DISubrange(count: 4)
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "binfmt", scope: !2127, file: !1753, line: 490, baseType: !2307, size: 64, offset: 5568)
!2307 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2308, size: 64)
!2308 = !DICompositeType(tag: DW_TAG_structure_type, name: "linux_binfmt", file: !1753, line: 490, flags: DIFlagFwdDecl)
!2309 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !2127, file: !1753, line: 493, baseType: !2310, size: 896, offset: 5632)
!2310 = !DIDerivedType(tag: DW_TAG_typedef, name: "mm_context_t", file: !2311, line: 53, baseType: !2312)
!2311 = !DIFile(filename: "./arch/x86/include/asm/mmu.h", directory: "/home/lizy2001/genbc/linux")
!2312 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2311, line: 13, size: 896, elements: !2313)
!2313 = !{!2314, !2315, !2316, !2317, !2320, !2321, !2322, !2323, !2343, !2344, !2345}
!2314 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_id", scope: !2312, file: !2311, line: 18, baseType: !365, size: 64)
!2315 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_gen", scope: !2312, file: !2311, line: 28, baseType: !407, size: 64, offset: 64)
!2316 = !DIDerivedType(tag: DW_TAG_member, name: "ldt_usr_sem", scope: !2312, file: !2311, line: 31, baseType: !1787, size: 256, offset: 128)
!2317 = !DIDerivedType(tag: DW_TAG_member, name: "ldt", scope: !2312, file: !2311, line: 32, baseType: !2318, size: 64, offset: 384)
!2318 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2319, size: 64)
!2319 = !DICompositeType(tag: DW_TAG_structure_type, name: "ldt_struct", file: !2311, line: 32, flags: DIFlagFwdDecl)
!2320 = !DIDerivedType(tag: DW_TAG_member, name: "ia32_compat", scope: !2312, file: !2311, line: 37, baseType: !510, size: 16, offset: 448)
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2312, file: !2311, line: 40, baseType: !1697, size: 192, offset: 512)
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "vdso", scope: !2312, file: !2311, line: 41, baseType: !625, size: 64, offset: 704)
!2323 = !DIDerivedType(tag: DW_TAG_member, name: "vdso_image", scope: !2312, file: !2311, line: 42, baseType: !2324, size: 64, offset: 768)
!2324 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2325, size: 64)
!2325 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2326)
!2326 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vdso_image", file: !2327, line: 13, size: 896, elements: !2328)
!2327 = !DIFile(filename: "./arch/x86/include/asm/vdso.h", directory: "/home/lizy2001/genbc/linux")
!2328 = !{!2329, !2330, !2331, !2332, !2333, !2334, !2335, !2336, !2337, !2338, !2339, !2340, !2341, !2342}
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2326, file: !2327, line: 14, baseType: !625, size: 64)
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2326, file: !2327, line: 15, baseType: !346, size: 64, offset: 64)
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "alt", scope: !2326, file: !2327, line: 17, baseType: !346, size: 64, offset: 128)
!2332 = !DIDerivedType(tag: DW_TAG_member, name: "alt_len", scope: !2326, file: !2327, line: 17, baseType: !346, size: 64, offset: 192)
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_start", scope: !2326, file: !2327, line: 19, baseType: !1032, size: 64, offset: 256)
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_page", scope: !2326, file: !2327, line: 21, baseType: !1032, size: 64, offset: 320)
!2335 = !DIDerivedType(tag: DW_TAG_member, name: "sym_pvclock_page", scope: !2326, file: !2327, line: 22, baseType: !1032, size: 64, offset: 384)
!2336 = !DIDerivedType(tag: DW_TAG_member, name: "sym_hvclock_page", scope: !2326, file: !2327, line: 23, baseType: !1032, size: 64, offset: 448)
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "sym_timens_page", scope: !2326, file: !2327, line: 24, baseType: !1032, size: 64, offset: 512)
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "sym_VDSO32_NOTE_MASK", scope: !2326, file: !2327, line: 25, baseType: !1032, size: 64, offset: 576)
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_sigreturn", scope: !2326, file: !2327, line: 26, baseType: !1032, size: 64, offset: 640)
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_rt_sigreturn", scope: !2326, file: !2327, line: 27, baseType: !1032, size: 64, offset: 704)
!2341 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_vsyscall", scope: !2326, file: !2327, line: 28, baseType: !1032, size: 64, offset: 768)
!2342 = !DIDerivedType(tag: DW_TAG_member, name: "sym_int80_landing_pad", scope: !2326, file: !2327, line: 29, baseType: !1032, size: 64, offset: 832)
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "perf_rdpmc_allowed", scope: !2312, file: !2311, line: 44, baseType: !417, size: 32, offset: 832)
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "pkey_allocation_map", scope: !2312, file: !2311, line: 50, baseType: !615, size: 16, offset: 864)
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "execute_only_pkey", scope: !2312, file: !2311, line: 51, baseType: !2346, size: 16, offset: 880)
!2346 = !DIDerivedType(tag: DW_TAG_typedef, name: "s16", file: !366, line: 18, baseType: !2347)
!2347 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s16", file: !368, line: 23, baseType: !659)
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2127, file: !1753, line: 495, baseType: !346, size: 64, offset: 6528)
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "core_state", scope: !2127, file: !1753, line: 497, baseType: !2350, size: 64, offset: 6592)
!2350 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2351, size: 64)
!2351 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_state", file: !1753, line: 381, size: 384, elements: !2352)
!2352 = !{!2353, !2354, !4256}
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !2351, file: !1753, line: 382, baseType: !417, size: 32)
!2354 = !DIDerivedType(tag: DW_TAG_member, name: "dumper", scope: !2351, file: !1753, line: 383, baseType: !2355, size: 128, offset: 64)
!2355 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_thread", file: !1753, line: 376, size: 128, elements: !2356)
!2356 = !{!2357, !4254}
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !2355, file: !1753, line: 377, baseType: !2358, size: 64)
!2358 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2359, size: 64)
!2359 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_struct", file: !2360, line: 640, size: 48640, elements: !2361)
!2360 = !DIFile(filename: "./include/linux/sched.h", directory: "/home/lizy2001/genbc/linux")
!2361 = !{!2362, !2368, !2370, !2371, !2372, !2373, !2374, !2375, !2376, !2377, !2378, !2379, !2383, !2401, !2412, !2493, !2494, !2495, !2506, !2507, !2509, !2510, !2511, !2512, !2518, !2519, !2520, !2521, !2522, !2523, !2524, !2525, !2526, !2527, !2528, !2529, !2530, !2531, !2532, !2533, !2590, !2593, !2594, !2595, !2596, !2597, !2598, !2599, !2600, !2601, !2602, !2622, !2624, !2625, !2626, !2638, !2639, !2640, !2641, !2642, !2643, !2649, !2650, !2651, !2652, !2653, !2654, !2655, !2667, !2672, !2980, !2981, !2982, !2983, !2984, !2987, !2990, !2993, !2996, !3717, !3813, !3844, !3845, !3846, !3847, !3848, !3849, !3850, !3851, !3852, !3861, !3862, !3863, !3864, !3865, !3870, !3871, !3872, !3875, !3876, !3879, !3882, !3885, !3888, !3920, !3923, !3924, !4003, !4004, !4007, !4008, !4011, !4012, !4013, !4017, !4018, !4019, !4032, !4033, !4034, !4044, !4049, !4050, !4056, !4057, !4058, !4059, !4060, !4061, !4062, !4063, !4077, !4078, !4079, !4080, !4081, !4082, !4083, !4084, !4085}
!2362 = !DIDerivedType(tag: DW_TAG_member, name: "thread_info", scope: !2359, file: !2360, line: 646, baseType: !2363, size: 128)
!2363 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_info", file: !2364, line: 56, size: 128, elements: !2365)
!2364 = !DIFile(filename: "./arch/x86/include/asm/thread_info.h", directory: "/home/lizy2001/genbc/linux")
!2365 = !{!2366, !2367}
!2366 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2363, file: !2364, line: 57, baseType: !346, size: 64)
!2367 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !2363, file: !2364, line: 58, baseType: !1021, size: 32, offset: 64)
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2359, file: !2360, line: 649, baseType: !2369, size: 64, offset: 128)
!2369 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1032)
!2370 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !2359, file: !2360, line: 657, baseType: !625, size: 64, offset: 192)
!2371 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !2359, file: !2360, line: 658, baseType: !602, size: 32, offset: 256)
!2372 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2359, file: !2360, line: 660, baseType: !11, size: 32, offset: 288)
!2373 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace", scope: !2359, file: !2360, line: 661, baseType: !11, size: 32, offset: 320)
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !2359, file: !2360, line: 684, baseType: !5, size: 32, offset: 352)
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2359, file: !2360, line: 686, baseType: !5, size: 32, offset: 384)
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "static_prio", scope: !2359, file: !2360, line: 687, baseType: !5, size: 32, offset: 416)
!2377 = !DIDerivedType(tag: DW_TAG_member, name: "normal_prio", scope: !2359, file: !2360, line: 688, baseType: !5, size: 32, offset: 448)
!2378 = !DIDerivedType(tag: DW_TAG_member, name: "rt_priority", scope: !2359, file: !2360, line: 689, baseType: !11, size: 32, offset: 480)
!2379 = !DIDerivedType(tag: DW_TAG_member, name: "sched_class", scope: !2359, file: !2360, line: 691, baseType: !2380, size: 64, offset: 512)
!2380 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2381, size: 64)
!2381 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2382)
!2382 = !DICompositeType(tag: DW_TAG_structure_type, name: "sched_class", file: !2360, line: 691, flags: DIFlagFwdDecl)
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "se", scope: !2359, file: !2360, line: 692, baseType: !2384, size: 832, offset: 576)
!2384 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_entity", file: !2360, line: 451, size: 832, elements: !2385)
!2385 = !{!2386, !2391, !2392, !2393, !2394, !2395, !2396, !2397, !2398, !2399}
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "load", scope: !2384, file: !2360, line: 453, baseType: !2387, size: 128)
!2387 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "load_weight", file: !2360, line: 325, size: 128, elements: !2388)
!2388 = !{!2389, !2390}
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !2387, file: !2360, line: 326, baseType: !346, size: 64)
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "inv_weight", scope: !2387, file: !2360, line: 327, baseType: !1021, size: 32, offset: 64)
!2391 = !DIDerivedType(tag: DW_TAG_member, name: "run_node", scope: !2384, file: !2360, line: 454, baseType: !467, size: 192, align: 64, offset: 128)
!2392 = !DIDerivedType(tag: DW_TAG_member, name: "group_node", scope: !2384, file: !2360, line: 455, baseType: !318, size: 128, offset: 320)
!2393 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !2384, file: !2360, line: 456, baseType: !11, size: 32, offset: 448)
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "exec_start", scope: !2384, file: !2360, line: 458, baseType: !365, size: 64, offset: 512)
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !2384, file: !2360, line: 459, baseType: !365, size: 64, offset: 576)
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "vruntime", scope: !2384, file: !2360, line: 460, baseType: !365, size: 64, offset: 640)
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "prev_sum_exec_runtime", scope: !2384, file: !2360, line: 461, baseType: !365, size: 64, offset: 704)
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "nr_migrations", scope: !2384, file: !2360, line: 463, baseType: !365, size: 64, offset: 768)
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "statistics", scope: !2384, file: !2360, line: 465, baseType: !2400, offset: 832)
!2400 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_statistics", file: !2360, line: 415, elements: !1619)
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !2359, file: !2360, line: 693, baseType: !2402, size: 384, offset: 1408)
!2402 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_rt_entity", file: !2360, line: 489, size: 384, elements: !2403)
!2403 = !{!2404, !2405, !2406, !2407, !2408, !2409, !2410}
!2404 = !DIDerivedType(tag: DW_TAG_member, name: "run_list", scope: !2402, file: !2360, line: 490, baseType: !318, size: 128)
!2405 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2402, file: !2360, line: 491, baseType: !346, size: 64, offset: 128)
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "watchdog_stamp", scope: !2402, file: !2360, line: 492, baseType: !346, size: 64, offset: 192)
!2407 = !DIDerivedType(tag: DW_TAG_member, name: "time_slice", scope: !2402, file: !2360, line: 493, baseType: !11, size: 32, offset: 256)
!2408 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !2402, file: !2360, line: 494, baseType: !510, size: 16, offset: 288)
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "on_list", scope: !2402, file: !2360, line: 495, baseType: !510, size: 16, offset: 304)
!2410 = !DIDerivedType(tag: DW_TAG_member, name: "back", scope: !2402, file: !2360, line: 497, baseType: !2411, size: 64, offset: 320)
!2411 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2402, size: 64)
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "dl", scope: !2359, file: !2360, line: 697, baseType: !2413, size: 1792, offset: 1792)
!2413 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_dl_entity", file: !2360, line: 507, size: 1792, elements: !2414)
!2414 = !{!2415, !2416, !2417, !2418, !2419, !2420, !2421, !2422, !2423, !2424, !2425, !2426, !2427, !2428, !2490, !2491}
!2415 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !2413, file: !2360, line: 508, baseType: !467, size: 192, align: 64)
!2416 = !DIDerivedType(tag: DW_TAG_member, name: "dl_runtime", scope: !2413, file: !2360, line: 515, baseType: !365, size: 64, offset: 192)
!2417 = !DIDerivedType(tag: DW_TAG_member, name: "dl_deadline", scope: !2413, file: !2360, line: 516, baseType: !365, size: 64, offset: 256)
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "dl_period", scope: !2413, file: !2360, line: 517, baseType: !365, size: 64, offset: 320)
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "dl_bw", scope: !2413, file: !2360, line: 518, baseType: !365, size: 64, offset: 384)
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "dl_density", scope: !2413, file: !2360, line: 519, baseType: !365, size: 64, offset: 448)
!2421 = !DIDerivedType(tag: DW_TAG_member, name: "runtime", scope: !2413, file: !2360, line: 526, baseType: !411, size: 64, offset: 512)
!2422 = !DIDerivedType(tag: DW_TAG_member, name: "deadline", scope: !2413, file: !2360, line: 527, baseType: !365, size: 64, offset: 576)
!2423 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2413, file: !2360, line: 528, baseType: !11, size: 32, offset: 640)
!2424 = !DIDerivedType(tag: DW_TAG_member, name: "dl_throttled", scope: !2413, file: !2360, line: 554, baseType: !11, size: 1, offset: 672, flags: DIFlagBitField, extraData: i64 672)
!2425 = !DIDerivedType(tag: DW_TAG_member, name: "dl_yielded", scope: !2413, file: !2360, line: 555, baseType: !11, size: 1, offset: 673, flags: DIFlagBitField, extraData: i64 672)
!2426 = !DIDerivedType(tag: DW_TAG_member, name: "dl_non_contending", scope: !2413, file: !2360, line: 556, baseType: !11, size: 1, offset: 674, flags: DIFlagBitField, extraData: i64 672)
!2427 = !DIDerivedType(tag: DW_TAG_member, name: "dl_overrun", scope: !2413, file: !2360, line: 557, baseType: !11, size: 1, offset: 675, flags: DIFlagBitField, extraData: i64 672)
!2428 = !DIDerivedType(tag: DW_TAG_member, name: "dl_timer", scope: !2413, file: !2360, line: 563, baseType: !2429, size: 512, offset: 704)
!2429 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer", file: !52, line: 118, size: 512, elements: !2430)
!2430 = !{!2431, !2437, !2438, !2443, !2486, !2487, !2488, !2489}
!2431 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2429, file: !52, line: 119, baseType: !2432, size: 256)
!2432 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_node", file: !2433, line: 9, size: 256, elements: !2434)
!2433 = !DIFile(filename: "./include/linux/timerqueue.h", directory: "/home/lizy2001/genbc/linux")
!2434 = !{!2435, !2436}
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2432, file: !2433, line: 10, baseType: !467, size: 192, align: 64)
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !2432, file: !2433, line: 11, baseType: !487, size: 64, offset: 192)
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "_softexpires", scope: !2429, file: !52, line: 120, baseType: !487, size: 64, offset: 256)
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !2429, file: !52, line: 121, baseType: !2439, size: 64, offset: 320)
!2439 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2440, size: 64)
!2440 = !DISubroutineType(types: !2441)
!2441 = !{!51, !2442}
!2442 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2429, size: 64)
!2443 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2429, file: !52, line: 122, baseType: !2444, size: 64, offset: 384)
!2444 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2445, size: 64)
!2445 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_clock_base", file: !52, line: 159, size: 512, align: 512, elements: !2446)
!2446 = !{!2447, !2467, !2468, !2471, !2476, !2477, !2481, !2485}
!2447 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_base", scope: !2445, file: !52, line: 160, baseType: !2448, size: 64)
!2448 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2449, size: 64)
!2449 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_cpu_base", file: !52, line: 214, size: 4608, align: 512, elements: !2450)
!2450 = !{!2451, !2452, !2453, !2454, !2455, !2456, !2457, !2458, !2459, !2460, !2461, !2462, !2463}
!2451 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2449, file: !52, line: 215, baseType: !1793)
!2452 = !DIDerivedType(tag: DW_TAG_member, name: "cpu", scope: !2449, file: !52, line: 216, baseType: !11, size: 32)
!2453 = !DIDerivedType(tag: DW_TAG_member, name: "active_bases", scope: !2449, file: !52, line: 217, baseType: !11, size: 32, offset: 32)
!2454 = !DIDerivedType(tag: DW_TAG_member, name: "clock_was_set_seq", scope: !2449, file: !52, line: 218, baseType: !11, size: 32, offset: 64)
!2455 = !DIDerivedType(tag: DW_TAG_member, name: "hres_active", scope: !2449, file: !52, line: 219, baseType: !11, size: 1, offset: 96, flags: DIFlagBitField, extraData: i64 96)
!2456 = !DIDerivedType(tag: DW_TAG_member, name: "in_hrtirq", scope: !2449, file: !52, line: 220, baseType: !11, size: 1, offset: 97, flags: DIFlagBitField, extraData: i64 96)
!2457 = !DIDerivedType(tag: DW_TAG_member, name: "hang_detected", scope: !2449, file: !52, line: 221, baseType: !11, size: 1, offset: 98, flags: DIFlagBitField, extraData: i64 96)
!2458 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_activated", scope: !2449, file: !52, line: 222, baseType: !11, size: 1, offset: 99, flags: DIFlagBitField, extraData: i64 96)
!2459 = !DIDerivedType(tag: DW_TAG_member, name: "expires_next", scope: !2449, file: !52, line: 233, baseType: !487, size: 64, offset: 128)
!2460 = !DIDerivedType(tag: DW_TAG_member, name: "next_timer", scope: !2449, file: !52, line: 234, baseType: !2442, size: 64, offset: 192)
!2461 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_expires_next", scope: !2449, file: !52, line: 235, baseType: !487, size: 64, offset: 256)
!2462 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_next_timer", scope: !2449, file: !52, line: 236, baseType: !2442, size: 64, offset: 320)
!2463 = !DIDerivedType(tag: DW_TAG_member, name: "clock_base", scope: !2449, file: !52, line: 237, baseType: !2464, size: 4096, offset: 512)
!2464 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2445, size: 4096, elements: !2465)
!2465 = !{!2466}
!2466 = !DISubrange(count: 8)
!2467 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !2445, file: !52, line: 161, baseType: !11, size: 32, offset: 64)
!2468 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !2445, file: !52, line: 162, baseType: !2469, size: 32, offset: 96)
!2469 = !DIDerivedType(tag: DW_TAG_typedef, name: "clockid_t", file: !311, line: 27, baseType: !2470)
!2470 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clockid_t", file: !1075, line: 96, baseType: !5)
!2471 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !2445, file: !52, line: 163, baseType: !2472, size: 32, offset: 128)
!2472 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_raw_spinlock_t", file: !1377, line: 276, baseType: !2473)
!2473 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_raw_spinlock", file: !1377, line: 276, size: 32, elements: !2474)
!2474 = !{!2475}
!2475 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !2473, file: !1377, line: 276, baseType: !1381, size: 32)
!2476 = !DIDerivedType(tag: DW_TAG_member, name: "running", scope: !2445, file: !52, line: 164, baseType: !2442, size: 64, offset: 192)
!2477 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !2445, file: !52, line: 165, baseType: !2478, size: 128, offset: 256)
!2478 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_head", file: !2433, line: 14, size: 128, elements: !2479)
!2479 = !{!2480}
!2480 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !2478, file: !2433, line: 15, baseType: !1779, size: 128)
!2481 = !DIDerivedType(tag: DW_TAG_member, name: "get_time", scope: !2445, file: !52, line: 166, baseType: !2482, size: 64, offset: 384)
!2482 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2483, size: 64)
!2483 = !DISubroutineType(types: !2484)
!2484 = !{!487}
!2485 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !2445, file: !52, line: 167, baseType: !487, size: 64, offset: 448)
!2486 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2429, file: !52, line: 123, baseType: !828, size: 8, offset: 448)
!2487 = !DIDerivedType(tag: DW_TAG_member, name: "is_rel", scope: !2429, file: !52, line: 124, baseType: !828, size: 8, offset: 456)
!2488 = !DIDerivedType(tag: DW_TAG_member, name: "is_soft", scope: !2429, file: !52, line: 125, baseType: !828, size: 8, offset: 464)
!2489 = !DIDerivedType(tag: DW_TAG_member, name: "is_hard", scope: !2429, file: !52, line: 126, baseType: !828, size: 8, offset: 472)
!2490 = !DIDerivedType(tag: DW_TAG_member, name: "inactive_timer", scope: !2413, file: !2360, line: 572, baseType: !2429, size: 512, offset: 1216)
!2491 = !DIDerivedType(tag: DW_TAG_member, name: "pi_se", scope: !2413, file: !2360, line: 580, baseType: !2492, size: 64, offset: 1728)
!2492 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2413, size: 64)
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "policy", scope: !2359, file: !2360, line: 721, baseType: !11, size: 32, offset: 3584)
!2494 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cpus_allowed", scope: !2359, file: !2360, line: 722, baseType: !5, size: 32, offset: 3616)
!2495 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_ptr", scope: !2359, file: !2360, line: 723, baseType: !2496, size: 64, offset: 3648)
!2496 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2497, size: 64)
!2497 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2498)
!2498 = !DIDerivedType(tag: DW_TAG_typedef, name: "cpumask_t", file: !2499, line: 17, baseType: !2500)
!2499 = !DIFile(filename: "./include/linux/cpumask.h", directory: "/home/lizy2001/genbc/linux")
!2500 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpumask", file: !2499, line: 17, size: 64, elements: !2501)
!2501 = !{!2502}
!2502 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !2500, file: !2499, line: 17, baseType: !2503, size: 64)
!2503 = !DICompositeType(tag: DW_TAG_array_type, baseType: !346, size: 64, elements: !2504)
!2504 = !{!2505}
!2505 = !DISubrange(count: 1)
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_mask", scope: !2359, file: !2360, line: 724, baseType: !2498, size: 64, offset: 3712)
!2507 = !DIDerivedType(tag: DW_TAG_member, name: "sched_info", scope: !2359, file: !2360, line: 749, baseType: !2508, offset: 3776)
!2508 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_info", file: !2360, line: 290, elements: !1619)
!2509 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !2359, file: !2360, line: 751, baseType: !318, size: 128, offset: 3776)
!2510 = !DIDerivedType(tag: DW_TAG_member, name: "mm", scope: !2359, file: !2360, line: 757, baseType: !2123, size: 64, offset: 3904)
!2511 = !DIDerivedType(tag: DW_TAG_member, name: "active_mm", scope: !2359, file: !2360, line: 758, baseType: !2123, size: 64, offset: 3968)
!2512 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache", scope: !2359, file: !2360, line: 761, baseType: !2513, size: 320, offset: 4032)
!2513 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vmacache", file: !2300, line: 34, size: 320, elements: !2514)
!2514 = !{!2515, !2516}
!2515 = !DIDerivedType(tag: DW_TAG_member, name: "seqnum", scope: !2513, file: !2300, line: 35, baseType: !365, size: 64)
!2516 = !DIDerivedType(tag: DW_TAG_member, name: "vmas", scope: !2513, file: !2300, line: 36, baseType: !2517, size: 256, offset: 64)
!2517 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2130, size: 256, elements: !2304)
!2518 = !DIDerivedType(tag: DW_TAG_member, name: "exit_state", scope: !2359, file: !2360, line: 766, baseType: !5, size: 32, offset: 4352)
!2519 = !DIDerivedType(tag: DW_TAG_member, name: "exit_code", scope: !2359, file: !2360, line: 767, baseType: !5, size: 32, offset: 4384)
!2520 = !DIDerivedType(tag: DW_TAG_member, name: "exit_signal", scope: !2359, file: !2360, line: 768, baseType: !5, size: 32, offset: 4416)
!2521 = !DIDerivedType(tag: DW_TAG_member, name: "pdeath_signal", scope: !2359, file: !2360, line: 770, baseType: !5, size: 32, offset: 4448)
!2522 = !DIDerivedType(tag: DW_TAG_member, name: "jobctl", scope: !2359, file: !2360, line: 772, baseType: !346, size: 64, offset: 4480)
!2523 = !DIDerivedType(tag: DW_TAG_member, name: "personality", scope: !2359, file: !2360, line: 775, baseType: !11, size: 32, offset: 4544)
!2524 = !DIDerivedType(tag: DW_TAG_member, name: "sched_reset_on_fork", scope: !2359, file: !2360, line: 778, baseType: !11, size: 1, offset: 4576, flags: DIFlagBitField, extraData: i64 4576)
!2525 = !DIDerivedType(tag: DW_TAG_member, name: "sched_contributes_to_load", scope: !2359, file: !2360, line: 779, baseType: !11, size: 1, offset: 4577, flags: DIFlagBitField, extraData: i64 4576)
!2526 = !DIDerivedType(tag: DW_TAG_member, name: "sched_migrated", scope: !2359, file: !2360, line: 780, baseType: !11, size: 1, offset: 4578, flags: DIFlagBitField, extraData: i64 4576)
!2527 = !DIDerivedType(tag: DW_TAG_member, name: "sched_remote_wakeup", scope: !2359, file: !2360, line: 803, baseType: !11, size: 1, offset: 4608, flags: DIFlagBitField, extraData: i64 4608)
!2528 = !DIDerivedType(tag: DW_TAG_member, name: "in_execve", scope: !2359, file: !2360, line: 806, baseType: !11, size: 1, offset: 4609, flags: DIFlagBitField, extraData: i64 4608)
!2529 = !DIDerivedType(tag: DW_TAG_member, name: "in_iowait", scope: !2359, file: !2360, line: 807, baseType: !11, size: 1, offset: 4610, flags: DIFlagBitField, extraData: i64 4608)
!2530 = !DIDerivedType(tag: DW_TAG_member, name: "restore_sigmask", scope: !2359, file: !2360, line: 809, baseType: !11, size: 1, offset: 4611, flags: DIFlagBitField, extraData: i64 4608)
!2531 = !DIDerivedType(tag: DW_TAG_member, name: "brk_randomized", scope: !2359, file: !2360, line: 815, baseType: !11, size: 1, offset: 4612, flags: DIFlagBitField, extraData: i64 4608)
!2532 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_flags", scope: !2359, file: !2360, line: 831, baseType: !346, size: 64, offset: 4672)
!2533 = !DIDerivedType(tag: DW_TAG_member, name: "restart_block", scope: !2359, file: !2360, line: 833, baseType: !2534, size: 384, offset: 4736)
!2534 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "restart_block", file: !57, line: 25, size: 384, elements: !2535)
!2535 = !{!2536, !2541}
!2536 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2534, file: !57, line: 26, baseType: !2537, size: 64)
!2537 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2538, size: 64)
!2538 = !DISubroutineType(types: !2539)
!2539 = !{!1032, !2540}
!2540 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2534, size: 64)
!2541 = !DIDerivedType(tag: DW_TAG_member, scope: !2534, file: !57, line: 27, baseType: !2542, size: 320, offset: 64)
!2542 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2534, file: !57, line: 27, size: 320, elements: !2543)
!2543 = !{!2544, !2554, !2580}
!2544 = !DIDerivedType(tag: DW_TAG_member, name: "futex", scope: !2542, file: !57, line: 36, baseType: !2545, size: 320)
!2545 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2542, file: !57, line: 29, size: 320, elements: !2546)
!2546 = !{!2547, !2549, !2550, !2551, !2552, !2553}
!2547 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr", scope: !2545, file: !57, line: 30, baseType: !2548, size: 64)
!2548 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1021, size: 64)
!2549 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !2545, file: !57, line: 31, baseType: !1021, size: 32, offset: 64)
!2550 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2545, file: !57, line: 32, baseType: !1021, size: 32, offset: 96)
!2551 = !DIDerivedType(tag: DW_TAG_member, name: "bitset", scope: !2545, file: !57, line: 33, baseType: !1021, size: 32, offset: 128)
!2552 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !2545, file: !57, line: 34, baseType: !365, size: 64, offset: 192)
!2553 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr2", scope: !2545, file: !57, line: 35, baseType: !2548, size: 64, offset: 256)
!2554 = !DIDerivedType(tag: DW_TAG_member, name: "nanosleep", scope: !2542, file: !57, line: 46, baseType: !2555, size: 192)
!2555 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2542, file: !57, line: 38, size: 192, elements: !2556)
!2556 = !{!2557, !2558, !2559, !2579}
!2557 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !2555, file: !57, line: 39, baseType: !2469, size: 32)
!2558 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2555, file: !57, line: 40, baseType: !56, size: 32, offset: 32)
!2559 = !DIDerivedType(tag: DW_TAG_member, scope: !2555, file: !57, line: 41, baseType: !2560, size: 64, offset: 64)
!2560 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2555, file: !57, line: 41, size: 64, elements: !2561)
!2561 = !{!2562, !2570}
!2562 = !DIDerivedType(tag: DW_TAG_member, name: "rmtp", scope: !2560, file: !57, line: 42, baseType: !2563, size: 64)
!2563 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2564, size: 64)
!2564 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__kernel_timespec", file: !2565, line: 7, size: 128, elements: !2566)
!2565 = !DIFile(filename: "./include/uapi/linux/time_types.h", directory: "/home/lizy2001/genbc/linux")
!2566 = !{!2567, !2569}
!2567 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2564, file: !2565, line: 8, baseType: !2568, size: 64)
!2568 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_time64_t", file: !1075, line: 93, baseType: !413)
!2569 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !2564, file: !2565, line: 9, baseType: !413, size: 64, offset: 64)
!2570 = !DIDerivedType(tag: DW_TAG_member, name: "compat_rmtp", scope: !2560, file: !57, line: 43, baseType: !2571, size: 64)
!2571 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2572, size: 64)
!2572 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "old_timespec32", file: !2573, line: 7, size: 64, elements: !2574)
!2573 = !DIFile(filename: "./include/vdso/time32.h", directory: "/home/lizy2001/genbc/linux")
!2574 = !{!2575, !2578}
!2575 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2572, file: !2573, line: 8, baseType: !2576, size: 32)
!2576 = !DIDerivedType(tag: DW_TAG_typedef, name: "old_time32_t", file: !2573, line: 5, baseType: !2577)
!2577 = !DIDerivedType(tag: DW_TAG_typedef, name: "s32", file: !366, line: 20, baseType: !976)
!2578 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !2572, file: !2573, line: 9, baseType: !2577, size: 32, offset: 32)
!2579 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !2555, file: !57, line: 45, baseType: !365, size: 64, offset: 128)
!2580 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !2542, file: !57, line: 54, baseType: !2581, size: 256)
!2581 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2542, file: !57, line: 48, size: 256, elements: !2582)
!2582 = !{!2583, !2586, !2587, !2588, !2589}
!2583 = !DIDerivedType(tag: DW_TAG_member, name: "ufds", scope: !2581, file: !57, line: 49, baseType: !2584, size: 64)
!2584 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2585, size: 64)
!2585 = !DICompositeType(tag: DW_TAG_structure_type, name: "pollfd", file: !57, line: 14, flags: DIFlagFwdDecl)
!2586 = !DIDerivedType(tag: DW_TAG_member, name: "nfds", scope: !2581, file: !57, line: 50, baseType: !5, size: 32, offset: 64)
!2587 = !DIDerivedType(tag: DW_TAG_member, name: "has_timeout", scope: !2581, file: !57, line: 51, baseType: !5, size: 32, offset: 96)
!2588 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2581, file: !57, line: 52, baseType: !346, size: 64, offset: 128)
!2589 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !2581, file: !57, line: 53, baseType: !346, size: 64, offset: 192)
!2590 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !2359, file: !2360, line: 835, baseType: !2591, size: 32, offset: 5120)
!2591 = !DIDerivedType(tag: DW_TAG_typedef, name: "pid_t", file: !311, line: 22, baseType: !2592)
!2592 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_pid_t", file: !1075, line: 28, baseType: !5)
!2593 = !DIDerivedType(tag: DW_TAG_member, name: "tgid", scope: !2359, file: !2360, line: 836, baseType: !2591, size: 32, offset: 5152)
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "stack_canary", scope: !2359, file: !2360, line: 840, baseType: !346, size: 64, offset: 5184)
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "real_parent", scope: !2359, file: !2360, line: 849, baseType: !2358, size: 64, offset: 5248)
!2596 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !2359, file: !2360, line: 852, baseType: !2358, size: 64, offset: 5312)
!2597 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2359, file: !2360, line: 857, baseType: !318, size: 128, offset: 5376)
!2598 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !2359, file: !2360, line: 858, baseType: !318, size: 128, offset: 5504)
!2599 = !DIDerivedType(tag: DW_TAG_member, name: "group_leader", scope: !2359, file: !2360, line: 859, baseType: !2358, size: 64, offset: 5632)
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "ptraced", scope: !2359, file: !2360, line: 867, baseType: !318, size: 128, offset: 5696)
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_entry", scope: !2359, file: !2360, line: 868, baseType: !318, size: 128, offset: 5824)
!2602 = !DIDerivedType(tag: DW_TAG_member, name: "thread_pid", scope: !2359, file: !2360, line: 871, baseType: !2603, size: 64, offset: 5952)
!2603 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2604, size: 64)
!2604 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pid", file: !85, line: 59, size: 768, elements: !2605)
!2605 = !{!2606, !2607, !2608, !2609, !2611, !2612, !2613, !2614}
!2606 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2604, file: !85, line: 61, baseType: !602, size: 32)
!2607 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !2604, file: !85, line: 62, baseType: !11, size: 32, offset: 32)
!2608 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2604, file: !85, line: 63, baseType: !1702, offset: 64)
!2609 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !2604, file: !85, line: 65, baseType: !2610, size: 256, offset: 64)
!2610 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1613, size: 256, elements: !2304)
!2611 = !DIDerivedType(tag: DW_TAG_member, name: "inodes", scope: !2604, file: !85, line: 66, baseType: !1613, size: 64, offset: 320)
!2612 = !DIDerivedType(tag: DW_TAG_member, name: "wait_pidfd", scope: !2604, file: !85, line: 68, baseType: !1921, size: 128, offset: 384)
!2613 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2604, file: !85, line: 69, baseType: !333, size: 128, align: 64, offset: 512)
!2614 = !DIDerivedType(tag: DW_TAG_member, name: "numbers", scope: !2604, file: !85, line: 70, baseType: !2615, size: 128, offset: 640)
!2615 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2616, size: 128, elements: !2504)
!2616 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "upid", file: !85, line: 54, size: 128, elements: !2617)
!2617 = !{!2618, !2619}
!2618 = !DIDerivedType(tag: DW_TAG_member, name: "nr", scope: !2616, file: !85, line: 55, baseType: !5, size: 32)
!2619 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !2616, file: !85, line: 56, baseType: !2620, size: 64, offset: 64)
!2620 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2621, size: 64)
!2621 = !DICompositeType(tag: DW_TAG_structure_type, name: "pid_namespace", file: !85, line: 56, flags: DIFlagFwdDecl)
!2622 = !DIDerivedType(tag: DW_TAG_member, name: "pid_links", scope: !2359, file: !2360, line: 872, baseType: !2623, size: 512, offset: 6016)
!2623 = !DICompositeType(tag: DW_TAG_array_type, baseType: !310, size: 512, elements: !2304)
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "thread_group", scope: !2359, file: !2360, line: 873, baseType: !318, size: 128, offset: 6528)
!2625 = !DIDerivedType(tag: DW_TAG_member, name: "thread_node", scope: !2359, file: !2360, line: 874, baseType: !318, size: 128, offset: 6656)
!2626 = !DIDerivedType(tag: DW_TAG_member, name: "vfork_done", scope: !2359, file: !2360, line: 876, baseType: !2627, size: 64, offset: 6784)
!2627 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2628, size: 64)
!2628 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "completion", file: !2629, line: 26, size: 192, elements: !2630)
!2629 = !DIFile(filename: "./include/linux/completion.h", directory: "/home/lizy2001/genbc/linux")
!2630 = !{!2631, !2632}
!2631 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !2628, file: !2629, line: 27, baseType: !11, size: 32)
!2632 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !2628, file: !2629, line: 28, baseType: !2633, size: 128, offset: 64)
!2633 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swait_queue_head", file: !2634, line: 43, size: 128, elements: !2635)
!2634 = !DIFile(filename: "./include/linux/swait.h", directory: "/home/lizy2001/genbc/linux")
!2635 = !{!2636, !2637}
!2636 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2633, file: !2634, line: 44, baseType: !1793)
!2637 = !DIDerivedType(tag: DW_TAG_member, name: "task_list", scope: !2633, file: !2634, line: 45, baseType: !318, size: 128)
!2638 = !DIDerivedType(tag: DW_TAG_member, name: "set_child_tid", scope: !2359, file: !2360, line: 879, baseType: !1035, size: 64, offset: 6848)
!2639 = !DIDerivedType(tag: DW_TAG_member, name: "clear_child_tid", scope: !2359, file: !2360, line: 882, baseType: !1035, size: 64, offset: 6912)
!2640 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !2359, file: !2360, line: 884, baseType: !365, size: 64, offset: 6976)
!2641 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !2359, file: !2360, line: 885, baseType: !365, size: 64, offset: 7040)
!2642 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !2359, file: !2360, line: 890, baseType: !365, size: 64, offset: 7104)
!2643 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !2359, file: !2360, line: 891, baseType: !2644, size: 128, offset: 7168)
!2644 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "prev_cputime", file: !2360, line: 242, size: 128, elements: !2645)
!2645 = !{!2646, !2647, !2648}
!2646 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !2644, file: !2360, line: 244, baseType: !365, size: 64)
!2647 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !2644, file: !2360, line: 245, baseType: !365, size: 64, offset: 64)
!2648 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2644, file: !2360, line: 246, baseType: !1793, offset: 128)
!2649 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !2359, file: !2360, line: 900, baseType: !346, size: 64, offset: 7296)
!2650 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !2359, file: !2360, line: 901, baseType: !346, size: 64, offset: 7360)
!2651 = !DIDerivedType(tag: DW_TAG_member, name: "start_time", scope: !2359, file: !2360, line: 904, baseType: !365, size: 64, offset: 7424)
!2652 = !DIDerivedType(tag: DW_TAG_member, name: "start_boottime", scope: !2359, file: !2360, line: 907, baseType: !365, size: 64, offset: 7488)
!2653 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !2359, file: !2360, line: 910, baseType: !346, size: 64, offset: 7552)
!2654 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !2359, file: !2360, line: 911, baseType: !346, size: 64, offset: 7616)
!2655 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !2359, file: !2360, line: 914, baseType: !2656, size: 640, offset: 7680)
!2656 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers", file: !2657, line: 123, size: 640, elements: !2658)
!2657 = !DIFile(filename: "./include/linux/posix-timers.h", directory: "/home/lizy2001/genbc/linux")
!2658 = !{!2659, !2665, !2666}
!2659 = !DIDerivedType(tag: DW_TAG_member, name: "bases", scope: !2656, file: !2657, line: 124, baseType: !2660, size: 576)
!2660 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2661, size: 576, elements: !1624)
!2661 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimer_base", file: !2657, line: 108, size: 192, elements: !2662)
!2662 = !{!2663, !2664}
!2663 = !DIDerivedType(tag: DW_TAG_member, name: "nextevt", scope: !2661, file: !2657, line: 109, baseType: !365, size: 64)
!2664 = !DIDerivedType(tag: DW_TAG_member, name: "tqhead", scope: !2661, file: !2657, line: 110, baseType: !2478, size: 128, offset: 64)
!2665 = !DIDerivedType(tag: DW_TAG_member, name: "timers_active", scope: !2656, file: !2657, line: 125, baseType: !11, size: 32, offset: 576)
!2666 = !DIDerivedType(tag: DW_TAG_member, name: "expiry_active", scope: !2656, file: !2657, line: 126, baseType: !11, size: 32, offset: 608)
!2667 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers_work", scope: !2359, file: !2360, line: 917, baseType: !2668, size: 192, offset: 8320)
!2668 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers_work", file: !2657, line: 134, size: 192, elements: !2669)
!2669 = !{!2670, !2671}
!2670 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !2668, file: !2657, line: 135, baseType: !333, size: 128, align: 64)
!2671 = !DIDerivedType(tag: DW_TAG_member, name: "scheduled", scope: !2668, file: !2657, line: 136, baseType: !11, size: 32, offset: 128)
!2672 = !DIDerivedType(tag: DW_TAG_member, name: "ptracer_cred", scope: !2359, file: !2360, line: 923, baseType: !2673, size: 64, offset: 8512)
!2673 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2674, size: 64)
!2674 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2675)
!2675 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cred", file: !2676, line: 111, size: 1280, elements: !2677)
!2676 = !DIFile(filename: "./include/linux/cred.h", directory: "/home/lizy2001/genbc/linux")
!2677 = !{!2678, !2679, !2680, !2681, !2682, !2683, !2684, !2685, !2686, !2687, !2688, !2697, !2698, !2699, !2700, !2701, !2702, !2807, !2808, !2809, !2810, !2811, !2967, !2975}
!2678 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !2675, file: !2676, line: 112, baseType: !417, size: 32)
!2679 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2675, file: !2676, line: 120, baseType: !1415, size: 32, offset: 32)
!2680 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !2675, file: !2676, line: 121, baseType: !1423, size: 32, offset: 64)
!2681 = !DIDerivedType(tag: DW_TAG_member, name: "suid", scope: !2675, file: !2676, line: 122, baseType: !1415, size: 32, offset: 96)
!2682 = !DIDerivedType(tag: DW_TAG_member, name: "sgid", scope: !2675, file: !2676, line: 123, baseType: !1423, size: 32, offset: 128)
!2683 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !2675, file: !2676, line: 124, baseType: !1415, size: 32, offset: 160)
!2684 = !DIDerivedType(tag: DW_TAG_member, name: "egid", scope: !2675, file: !2676, line: 125, baseType: !1423, size: 32, offset: 192)
!2685 = !DIDerivedType(tag: DW_TAG_member, name: "fsuid", scope: !2675, file: !2676, line: 126, baseType: !1415, size: 32, offset: 224)
!2686 = !DIDerivedType(tag: DW_TAG_member, name: "fsgid", scope: !2675, file: !2676, line: 127, baseType: !1423, size: 32, offset: 256)
!2687 = !DIDerivedType(tag: DW_TAG_member, name: "securebits", scope: !2675, file: !2676, line: 128, baseType: !11, size: 32, offset: 288)
!2688 = !DIDerivedType(tag: DW_TAG_member, name: "cap_inheritable", scope: !2675, file: !2676, line: 129, baseType: !2689, size: 64, offset: 320)
!2689 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_cap_t", file: !2690, line: 26, baseType: !2691)
!2690 = !DIFile(filename: "./include/linux/capability.h", directory: "/home/lizy2001/genbc/linux")
!2691 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_cap_struct", file: !2690, line: 24, size: 64, elements: !2692)
!2692 = !{!2693}
!2693 = !DIDerivedType(tag: DW_TAG_member, name: "cap", scope: !2691, file: !2690, line: 25, baseType: !2694, size: 64)
!2694 = !DICompositeType(tag: DW_TAG_array_type, baseType: !527, size: 64, elements: !2695)
!2695 = !{!2696}
!2696 = !DISubrange(count: 2)
!2697 = !DIDerivedType(tag: DW_TAG_member, name: "cap_permitted", scope: !2675, file: !2676, line: 130, baseType: !2689, size: 64, offset: 384)
!2698 = !DIDerivedType(tag: DW_TAG_member, name: "cap_effective", scope: !2675, file: !2676, line: 131, baseType: !2689, size: 64, offset: 448)
!2699 = !DIDerivedType(tag: DW_TAG_member, name: "cap_bset", scope: !2675, file: !2676, line: 132, baseType: !2689, size: 64, offset: 512)
!2700 = !DIDerivedType(tag: DW_TAG_member, name: "cap_ambient", scope: !2675, file: !2676, line: 133, baseType: !2689, size: 64, offset: 576)
!2701 = !DIDerivedType(tag: DW_TAG_member, name: "jit_keyring", scope: !2675, file: !2676, line: 135, baseType: !516, size: 8, offset: 640)
!2702 = !DIDerivedType(tag: DW_TAG_member, name: "session_keyring", scope: !2675, file: !2676, line: 137, baseType: !2703, size: 64, offset: 704)
!2703 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2704, size: 64)
!2704 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key", file: !2705, line: 189, size: 1664, elements: !2706)
!2705 = !DIFile(filename: "./include/linux/key.h", directory: "/home/lizy2001/genbc/linux")
!2706 = !{!2707, !2708, !2711, !2716, !2717, !2720, !2721, !2726, !2727, !2728, !2729, !2731, !2732, !2733, !2734, !2735, !2771, !2792}
!2707 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !2704, file: !2705, line: 190, baseType: !602, size: 32)
!2708 = !DIDerivedType(tag: DW_TAG_member, name: "serial", scope: !2704, file: !2705, line: 191, baseType: !2709, size: 32, offset: 32)
!2709 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_serial_t", file: !2705, line: 28, baseType: !2710)
!2710 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !311, line: 98, baseType: !2577)
!2711 = !DIDerivedType(tag: DW_TAG_member, scope: !2704, file: !2705, line: 192, baseType: !2712, size: 192, offset: 64)
!2712 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2704, file: !2705, line: 192, size: 192, elements: !2713)
!2713 = !{!2714, !2715}
!2714 = !DIDerivedType(tag: DW_TAG_member, name: "graveyard_link", scope: !2712, file: !2705, line: 193, baseType: !318, size: 128)
!2715 = !DIDerivedType(tag: DW_TAG_member, name: "serial_node", scope: !2712, file: !2705, line: 194, baseType: !467, size: 192, align: 64)
!2716 = !DIDerivedType(tag: DW_TAG_member, name: "sem", scope: !2704, file: !2705, line: 199, baseType: !1787, size: 256, offset: 256)
!2717 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !2704, file: !2705, line: 200, baseType: !2718, size: 64, offset: 512)
!2718 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2719, size: 64)
!2719 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_user", file: !2705, line: 200, flags: DIFlagFwdDecl)
!2720 = !DIDerivedType(tag: DW_TAG_member, name: "security", scope: !2704, file: !2705, line: 201, baseType: !625, size: 64, offset: 576)
!2721 = !DIDerivedType(tag: DW_TAG_member, scope: !2704, file: !2705, line: 202, baseType: !2722, size: 64, offset: 640)
!2722 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2704, file: !2705, line: 202, size: 64, elements: !2723)
!2723 = !{!2724, !2725}
!2724 = !DIDerivedType(tag: DW_TAG_member, name: "expiry", scope: !2722, file: !2705, line: 203, baseType: !1516, size: 64)
!2725 = !DIDerivedType(tag: DW_TAG_member, name: "revoked_at", scope: !2722, file: !2705, line: 204, baseType: !1516, size: 64)
!2726 = !DIDerivedType(tag: DW_TAG_member, name: "last_used_at", scope: !2704, file: !2705, line: 206, baseType: !1516, size: 64, offset: 704)
!2727 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2704, file: !2705, line: 207, baseType: !1415, size: 32, offset: 768)
!2728 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !2704, file: !2705, line: 208, baseType: !1423, size: 32, offset: 800)
!2729 = !DIDerivedType(tag: DW_TAG_member, name: "perm", scope: !2704, file: !2705, line: 209, baseType: !2730, size: 32, offset: 832)
!2730 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_perm_t", file: !2705, line: 31, baseType: !1535)
!2731 = !DIDerivedType(tag: DW_TAG_member, name: "quotalen", scope: !2704, file: !2705, line: 210, baseType: !510, size: 16, offset: 864)
!2732 = !DIDerivedType(tag: DW_TAG_member, name: "datalen", scope: !2704, file: !2705, line: 211, baseType: !510, size: 16, offset: 880)
!2733 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2704, file: !2705, line: 215, baseType: !659, size: 16, offset: 896)
!2734 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2704, file: !2705, line: 222, baseType: !346, size: 64, offset: 960)
!2735 = !DIDerivedType(tag: DW_TAG_member, scope: !2704, file: !2705, line: 239, baseType: !2736, size: 320, offset: 1024)
!2736 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2704, file: !2705, line: 239, size: 320, elements: !2737)
!2737 = !{!2738, !2763}
!2738 = !DIDerivedType(tag: DW_TAG_member, name: "index_key", scope: !2736, file: !2705, line: 240, baseType: !2739, size: 320)
!2739 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "keyring_index_key", file: !2705, line: 108, size: 320, elements: !2740)
!2740 = !{!2741, !2742, !2752, !2755, !2762}
!2741 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !2739, file: !2705, line: 110, baseType: !346, size: 64)
!2742 = !DIDerivedType(tag: DW_TAG_member, scope: !2739, file: !2705, line: 111, baseType: !2743, size: 64, offset: 64)
!2743 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2739, file: !2705, line: 111, size: 64, elements: !2744)
!2744 = !{!2745, !2751}
!2745 = !DIDerivedType(tag: DW_TAG_member, scope: !2743, file: !2705, line: 112, baseType: !2746, size: 64)
!2746 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2743, file: !2705, line: 112, size: 64, elements: !2747)
!2747 = !{!2748, !2749}
!2748 = !DIDerivedType(tag: DW_TAG_member, name: "desc_len", scope: !2746, file: !2705, line: 114, baseType: !615, size: 16)
!2749 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !2746, file: !2705, line: 115, baseType: !2750, size: 48, offset: 16)
!2750 = !DICompositeType(tag: DW_TAG_array_type, baseType: !302, size: 48, elements: !1033)
!2751 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !2743, file: !2705, line: 121, baseType: !346, size: 64)
!2752 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2739, file: !2705, line: 123, baseType: !2753, size: 64, offset: 128)
!2753 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2754, size: 64)
!2754 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_type", file: !2705, line: 96, flags: DIFlagFwdDecl)
!2755 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !2739, file: !2705, line: 124, baseType: !2756, size: 64, offset: 192)
!2756 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2757, size: 64)
!2757 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_tag", file: !2705, line: 102, size: 192, elements: !2758)
!2758 = !{!2759, !2760, !2761}
!2759 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2757, file: !2705, line: 103, baseType: !333, size: 128, align: 64)
!2760 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !2757, file: !2705, line: 104, baseType: !602, size: 32, offset: 128)
!2761 = !DIDerivedType(tag: DW_TAG_member, name: "removed", scope: !2757, file: !2705, line: 105, baseType: !805, size: 8, offset: 160)
!2762 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !2739, file: !2705, line: 125, baseType: !326, size: 64, offset: 256)
!2763 = !DIDerivedType(tag: DW_TAG_member, scope: !2736, file: !2705, line: 241, baseType: !2764, size: 320)
!2764 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2736, file: !2705, line: 241, size: 320, elements: !2765)
!2765 = !{!2766, !2767, !2768, !2769, !2770}
!2766 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !2764, file: !2705, line: 242, baseType: !346, size: 64)
!2767 = !DIDerivedType(tag: DW_TAG_member, name: "len_desc", scope: !2764, file: !2705, line: 243, baseType: !346, size: 64, offset: 64)
!2768 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2764, file: !2705, line: 244, baseType: !2753, size: 64, offset: 128)
!2769 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !2764, file: !2705, line: 245, baseType: !2756, size: 64, offset: 192)
!2770 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !2764, file: !2705, line: 246, baseType: !1072, size: 64, offset: 256)
!2771 = !DIDerivedType(tag: DW_TAG_member, scope: !2704, file: !2705, line: 254, baseType: !2772, size: 256, offset: 1344)
!2772 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2704, file: !2705, line: 254, size: 256, elements: !2773)
!2773 = !{!2774, !2780}
!2774 = !DIDerivedType(tag: DW_TAG_member, name: "payload", scope: !2772, file: !2705, line: 255, baseType: !2775, size: 256)
!2775 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "key_payload", file: !2705, line: 128, size: 256, elements: !2776)
!2776 = !{!2777, !2778}
!2777 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_data0", scope: !2775, file: !2705, line: 129, baseType: !625, size: 64)
!2778 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2775, file: !2705, line: 130, baseType: !2779, size: 256)
!2779 = !DICompositeType(tag: DW_TAG_array_type, baseType: !625, size: 256, elements: !2304)
!2780 = !DIDerivedType(tag: DW_TAG_member, scope: !2772, file: !2705, line: 256, baseType: !2781, size: 256)
!2781 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2772, file: !2705, line: 256, size: 256, elements: !2782)
!2782 = !{!2783, !2784}
!2783 = !DIDerivedType(tag: DW_TAG_member, name: "name_link", scope: !2781, file: !2705, line: 258, baseType: !318, size: 128)
!2784 = !DIDerivedType(tag: DW_TAG_member, name: "keys", scope: !2781, file: !2705, line: 259, baseType: !2785, size: 128, offset: 128)
!2785 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array", file: !2786, line: 22, size: 128, elements: !2787)
!2786 = !DIFile(filename: "./include/linux/assoc_array.h", directory: "/home/lizy2001/genbc/linux")
!2787 = !{!2788, !2791}
!2788 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !2785, file: !2786, line: 23, baseType: !2789, size: 64)
!2789 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2790, size: 64)
!2790 = !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array_ptr", file: !2786, line: 23, flags: DIFlagFwdDecl)
!2791 = !DIDerivedType(tag: DW_TAG_member, name: "nr_leaves_on_tree", scope: !2785, file: !2786, line: 24, baseType: !346, size: 64, offset: 64)
!2792 = !DIDerivedType(tag: DW_TAG_member, name: "restrict_link", scope: !2704, file: !2705, line: 274, baseType: !2793, size: 64, offset: 1600)
!2793 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2794, size: 64)
!2794 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_restriction", file: !2705, line: 170, size: 192, elements: !2795)
!2795 = !{!2796, !2805, !2806}
!2796 = !DIDerivedType(tag: DW_TAG_member, name: "check", scope: !2794, file: !2705, line: 171, baseType: !2797, size: 64)
!2797 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_restrict_link_func_t", file: !2705, line: 165, baseType: !2798)
!2798 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2799, size: 64)
!2799 = !DISubroutineType(types: !2800)
!2800 = !{!5, !2703, !2801, !2803, !2703}
!2801 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2802, size: 64)
!2802 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2754)
!2803 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2804, size: 64)
!2804 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2775)
!2805 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !2794, file: !2705, line: 172, baseType: !2703, size: 64, offset: 64)
!2806 = !DIDerivedType(tag: DW_TAG_member, name: "keytype", scope: !2794, file: !2705, line: 173, baseType: !2753, size: 64, offset: 128)
!2807 = !DIDerivedType(tag: DW_TAG_member, name: "process_keyring", scope: !2675, file: !2676, line: 138, baseType: !2703, size: 64, offset: 768)
!2808 = !DIDerivedType(tag: DW_TAG_member, name: "thread_keyring", scope: !2675, file: !2676, line: 139, baseType: !2703, size: 64, offset: 832)
!2809 = !DIDerivedType(tag: DW_TAG_member, name: "request_key_auth", scope: !2675, file: !2676, line: 140, baseType: !2703, size: 64, offset: 896)
!2810 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !2675, file: !2676, line: 145, baseType: !1985, size: 64, offset: 960)
!2811 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !2675, file: !2676, line: 146, baseType: !2812, size: 64, offset: 1024)
!2812 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2813, size: 64)
!2813 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "user_namespace", file: !2814, line: 56, size: 4160, elements: !2815)
!2814 = !DIFile(filename: "./include/linux/user_namespace.h", directory: "/home/lizy2001/genbc/linux")
!2815 = !{!2816, !2838, !2839, !2840, !2841, !2842, !2843, !2844, !2845, !2855, !2856, !2857, !2858, !2859, !2871, !2952, !2953, !2965}
!2816 = !DIDerivedType(tag: DW_TAG_member, name: "uid_map", scope: !2813, file: !2814, line: 57, baseType: !2817, size: 576)
!2817 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uid_gid_map", file: !2814, line: 23, size: 576, elements: !2818)
!2818 = !{!2819, !2820}
!2819 = !DIDerivedType(tag: DW_TAG_member, name: "nr_extents", scope: !2817, file: !2814, line: 24, baseType: !1021, size: 32)
!2820 = !DIDerivedType(tag: DW_TAG_member, scope: !2817, file: !2814, line: 25, baseType: !2821, size: 512, offset: 64)
!2821 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2817, file: !2814, line: 25, size: 512, elements: !2822)
!2822 = !{!2823, !2832}
!2823 = !DIDerivedType(tag: DW_TAG_member, name: "extent", scope: !2821, file: !2814, line: 26, baseType: !2824, size: 480)
!2824 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2825, size: 480, elements: !2830)
!2825 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uid_gid_extent", file: !2814, line: 17, size: 96, elements: !2826)
!2826 = !{!2827, !2828, !2829}
!2827 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !2825, file: !2814, line: 18, baseType: !1021, size: 32)
!2828 = !DIDerivedType(tag: DW_TAG_member, name: "lower_first", scope: !2825, file: !2814, line: 19, baseType: !1021, size: 32, offset: 32)
!2829 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2825, file: !2814, line: 20, baseType: !1021, size: 32, offset: 64)
!2830 = !{!2831}
!2831 = !DISubrange(count: 5)
!2832 = !DIDerivedType(tag: DW_TAG_member, scope: !2821, file: !2814, line: 27, baseType: !2833, size: 128)
!2833 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2821, file: !2814, line: 27, size: 128, elements: !2834)
!2834 = !{!2835, !2837}
!2835 = !DIDerivedType(tag: DW_TAG_member, name: "forward", scope: !2833, file: !2814, line: 28, baseType: !2836, size: 64)
!2836 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2825, size: 64)
!2837 = !DIDerivedType(tag: DW_TAG_member, name: "reverse", scope: !2833, file: !2814, line: 29, baseType: !2836, size: 64, offset: 64)
!2838 = !DIDerivedType(tag: DW_TAG_member, name: "gid_map", scope: !2813, file: !2814, line: 58, baseType: !2817, size: 576, offset: 576)
!2839 = !DIDerivedType(tag: DW_TAG_member, name: "projid_map", scope: !2813, file: !2814, line: 59, baseType: !2817, size: 576, offset: 1152)
!2840 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2813, file: !2814, line: 60, baseType: !417, size: 32, offset: 1728)
!2841 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !2813, file: !2814, line: 61, baseType: !2812, size: 64, offset: 1792)
!2842 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !2813, file: !2814, line: 62, baseType: !5, size: 32, offset: 1856)
!2843 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !2813, file: !2814, line: 63, baseType: !1415, size: 32, offset: 1888)
!2844 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !2813, file: !2814, line: 64, baseType: !1423, size: 32, offset: 1920)
!2845 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !2813, file: !2814, line: 65, baseType: !2846, size: 192, offset: 1984)
!2846 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ns_common", file: !2847, line: 7, size: 192, elements: !2848)
!2847 = !DIFile(filename: "./include/linux/ns_common.h", directory: "/home/lizy2001/genbc/linux")
!2848 = !{!2849, !2850, !2854}
!2849 = !DIDerivedType(tag: DW_TAG_member, name: "stashed", scope: !2846, file: !2847, line: 8, baseType: !405, size: 64)
!2850 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !2846, file: !2847, line: 9, baseType: !2851, size: 64, offset: 64)
!2851 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2852, size: 64)
!2852 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2853)
!2853 = !DICompositeType(tag: DW_TAG_structure_type, name: "proc_ns_operations", file: !2847, line: 5, flags: DIFlagFwdDecl)
!2854 = !DIDerivedType(tag: DW_TAG_member, name: "inum", scope: !2846, file: !2847, line: 10, baseType: !11, size: 32, offset: 128)
!2855 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2813, file: !2814, line: 66, baseType: !346, size: 64, offset: 2176)
!2856 = !DIDerivedType(tag: DW_TAG_member, name: "keyring_name_list", scope: !2813, file: !2814, line: 74, baseType: !318, size: 128, offset: 2240)
!2857 = !DIDerivedType(tag: DW_TAG_member, name: "user_keyring_register", scope: !2813, file: !2814, line: 75, baseType: !2703, size: 64, offset: 2368)
!2858 = !DIDerivedType(tag: DW_TAG_member, name: "keyring_sem", scope: !2813, file: !2814, line: 76, baseType: !1787, size: 256, offset: 2432)
!2859 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !2813, file: !2814, line: 83, baseType: !2860, size: 256, offset: 2688)
!2860 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "work_struct", file: !2861, line: 102, size: 256, elements: !2862)
!2861 = !DIFile(filename: "./include/linux/workqueue.h", directory: "/home/lizy2001/genbc/linux")
!2862 = !{!2863, !2864, !2865}
!2863 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2860, file: !2861, line: 103, baseType: !405, size: 64)
!2864 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !2860, file: !2861, line: 104, baseType: !318, size: 128, offset: 64)
!2865 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !2860, file: !2861, line: 105, baseType: !2866, size: 64, offset: 192)
!2866 = !DIDerivedType(tag: DW_TAG_typedef, name: "work_func_t", file: !2861, line: 21, baseType: !2867)
!2867 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2868, size: 64)
!2868 = !DISubroutineType(types: !2869)
!2869 = !{null, !2870}
!2870 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2860, size: 64)
!2871 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !2813, file: !2814, line: 85, baseType: !2872, size: 768, offset: 2944)
!2872 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_table_set", file: !2873, line: 156, size: 768, elements: !2874)
!2873 = !DIFile(filename: "./include/linux/sysctl.h", directory: "/home/lizy2001/genbc/linux")
!2874 = !{!2875, !2880}
!2875 = !DIDerivedType(tag: DW_TAG_member, name: "is_seen", scope: !2872, file: !2873, line: 157, baseType: !2876, size: 64)
!2876 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2877, size: 64)
!2877 = !DISubroutineType(types: !2878)
!2878 = !{!5, !2879}
!2879 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2872, size: 64)
!2880 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !2872, file: !2873, line: 158, baseType: !2881, size: 704, offset: 64)
!2881 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_dir", file: !2873, line: 150, size: 704, elements: !2882)
!2882 = !{!2883, !2951}
!2883 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !2881, file: !2873, line: 152, baseType: !2884, size: 640)
!2884 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_table_header", file: !2873, line: 131, size: 640, elements: !2885)
!2885 = !{!2886, !2919, !2920, !2921, !2941, !2942, !2944, !2950}
!2886 = !DIDerivedType(tag: DW_TAG_member, scope: !2884, file: !2873, line: 132, baseType: !2887, size: 192)
!2887 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2884, file: !2873, line: 132, size: 192, elements: !2888)
!2888 = !{!2889, !2918}
!2889 = !DIDerivedType(tag: DW_TAG_member, scope: !2887, file: !2873, line: 133, baseType: !2890, size: 192)
!2890 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2887, file: !2873, line: 133, size: 192, elements: !2891)
!2891 = !{!2892, !2915, !2916, !2917}
!2892 = !DIDerivedType(tag: DW_TAG_member, name: "ctl_table", scope: !2890, file: !2873, line: 134, baseType: !2893, size: 64)
!2893 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2894, size: 64)
!2894 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_table", file: !2873, line: 112, size: 512, elements: !2895)
!2895 = !{!2896, !2897, !2898, !2899, !2900, !2901, !2907, !2913, !2914}
!2896 = !DIDerivedType(tag: DW_TAG_member, name: "procname", scope: !2894, file: !2873, line: 113, baseType: !326, size: 64)
!2897 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2894, file: !2873, line: 114, baseType: !625, size: 64, offset: 64)
!2898 = !DIDerivedType(tag: DW_TAG_member, name: "maxlen", scope: !2894, file: !2873, line: 115, baseType: !5, size: 32, offset: 128)
!2899 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2894, file: !2873, line: 116, baseType: !1412, size: 16, offset: 160)
!2900 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !2894, file: !2873, line: 117, baseType: !2893, size: 64, offset: 192)
!2901 = !DIDerivedType(tag: DW_TAG_member, name: "proc_handler", scope: !2894, file: !2873, line: 118, baseType: !2902, size: 64, offset: 256)
!2902 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2903, size: 64)
!2903 = !DIDerivedType(tag: DW_TAG_typedef, name: "proc_handler", file: !2873, line: 47, baseType: !2904)
!2904 = !DISubroutineType(types: !2905)
!2905 = !{!5, !2893, !5, !625, !2906, !1726}
!2906 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1073, size: 64)
!2907 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !2894, file: !2873, line: 119, baseType: !2908, size: 64, offset: 320)
!2908 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2909, size: 64)
!2909 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_table_poll", file: !2873, line: 94, size: 192, elements: !2910)
!2910 = !{!2911, !2912}
!2911 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !2909, file: !2873, line: 95, baseType: !417, size: 32)
!2912 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !2909, file: !2873, line: 96, baseType: !1921, size: 128, offset: 64)
!2913 = !DIDerivedType(tag: DW_TAG_member, name: "extra1", scope: !2894, file: !2873, line: 120, baseType: !625, size: 64, offset: 384)
!2914 = !DIDerivedType(tag: DW_TAG_member, name: "extra2", scope: !2894, file: !2873, line: 121, baseType: !625, size: 64, offset: 448)
!2915 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !2890, file: !2873, line: 135, baseType: !5, size: 32, offset: 64)
!2916 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2890, file: !2873, line: 136, baseType: !5, size: 32, offset: 96)
!2917 = !DIDerivedType(tag: DW_TAG_member, name: "nreg", scope: !2890, file: !2873, line: 137, baseType: !5, size: 32, offset: 128)
!2918 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2887, file: !2873, line: 139, baseType: !333, size: 128, align: 64)
!2919 = !DIDerivedType(tag: DW_TAG_member, name: "unregistering", scope: !2884, file: !2873, line: 141, baseType: !2627, size: 64, offset: 192)
!2920 = !DIDerivedType(tag: DW_TAG_member, name: "ctl_table_arg", scope: !2884, file: !2873, line: 142, baseType: !2893, size: 64, offset: 256)
!2921 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !2884, file: !2873, line: 143, baseType: !2922, size: 64, offset: 320)
!2922 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2923, size: 64)
!2923 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_table_root", file: !2873, line: 161, size: 960, elements: !2924)
!2924 = !{!2925, !2926, !2930, !2937}
!2925 = !DIDerivedType(tag: DW_TAG_member, name: "default_set", scope: !2923, file: !2873, line: 162, baseType: !2872, size: 768)
!2926 = !DIDerivedType(tag: DW_TAG_member, name: "lookup", scope: !2923, file: !2873, line: 163, baseType: !2927, size: 64, offset: 768)
!2927 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2928, size: 64)
!2928 = !DISubroutineType(types: !2929)
!2929 = !{!2879, !2922}
!2930 = !DIDerivedType(tag: DW_TAG_member, name: "set_ownership", scope: !2923, file: !2873, line: 164, baseType: !2931, size: 64, offset: 832)
!2931 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2932, size: 64)
!2932 = !DISubroutineType(types: !2933)
!2933 = !{null, !2934, !2893, !2935, !2936}
!2934 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2884, size: 64)
!2935 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1415, size: 64)
!2936 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1423, size: 64)
!2937 = !DIDerivedType(tag: DW_TAG_member, name: "permissions", scope: !2923, file: !2873, line: 167, baseType: !2938, size: 64, offset: 896)
!2938 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2939, size: 64)
!2939 = !DISubroutineType(types: !2940)
!2940 = !{!5, !2934, !2893}
!2941 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !2884, file: !2873, line: 144, baseType: !2879, size: 64, offset: 384)
!2942 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !2884, file: !2873, line: 145, baseType: !2943, size: 64, offset: 448)
!2943 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2881, size: 64)
!2944 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2884, file: !2873, line: 146, baseType: !2945, size: 64, offset: 512)
!2945 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2946, size: 64)
!2946 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_node", file: !2873, line: 124, size: 256, elements: !2947)
!2947 = !{!2948, !2949}
!2948 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2946, file: !2873, line: 125, baseType: !467, size: 192, align: 64)
!2949 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !2946, file: !2873, line: 126, baseType: !2934, size: 64, offset: 192)
!2950 = !DIDerivedType(tag: DW_TAG_member, name: "inodes", scope: !2884, file: !2873, line: 147, baseType: !1613, size: 64, offset: 576)
!2951 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !2881, file: !2873, line: 153, baseType: !1782, size: 64, offset: 640)
!2952 = !DIDerivedType(tag: DW_TAG_member, name: "sysctls", scope: !2813, file: !2814, line: 86, baseType: !2934, size: 64, offset: 3712)
!2953 = !DIDerivedType(tag: DW_TAG_member, name: "ucounts", scope: !2813, file: !2814, line: 88, baseType: !2954, size: 64, offset: 3776)
!2954 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2955, size: 64)
!2955 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ucounts", file: !2814, line: 92, size: 576, elements: !2956)
!2956 = !{!2957, !2958, !2959, !2960, !2961}
!2957 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2955, file: !2814, line: 93, baseType: !310, size: 128)
!2958 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !2955, file: !2814, line: 94, baseType: !2812, size: 64, offset: 128)
!2959 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2955, file: !2814, line: 95, baseType: !1415, size: 32, offset: 192)
!2960 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2955, file: !2814, line: 96, baseType: !5, size: 32, offset: 224)
!2961 = !DIDerivedType(tag: DW_TAG_member, name: "ucount", scope: !2955, file: !2814, line: 97, baseType: !2962, size: 320, offset: 256)
!2962 = !DICompositeType(tag: DW_TAG_array_type, baseType: !417, size: 320, elements: !2963)
!2963 = !{!2964}
!2964 = !DISubrange(count: 10)
!2965 = !DIDerivedType(tag: DW_TAG_member, name: "ucount_max", scope: !2813, file: !2814, line: 89, baseType: !2966, size: 320, offset: 3840)
!2966 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5, size: 320, elements: !2963)
!2967 = !DIDerivedType(tag: DW_TAG_member, name: "group_info", scope: !2675, file: !2676, line: 147, baseType: !2968, size: 64, offset: 1088)
!2968 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2969, size: 64)
!2969 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "group_info", file: !2676, line: 25, size: 64, elements: !2970)
!2970 = !{!2971, !2972, !2973}
!2971 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !2969, file: !2676, line: 26, baseType: !417, size: 32)
!2972 = !DIDerivedType(tag: DW_TAG_member, name: "ngroups", scope: !2969, file: !2676, line: 27, baseType: !5, size: 32, offset: 32)
!2973 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !2969, file: !2676, line: 28, baseType: !2974, offset: 64)
!2974 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1423, elements: !517)
!2975 = !DIDerivedType(tag: DW_TAG_member, scope: !2675, file: !2676, line: 149, baseType: !2976, size: 128, offset: 1152)
!2976 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2675, file: !2676, line: 149, size: 128, elements: !2977)
!2977 = !{!2978, !2979}
!2978 = !DIDerivedType(tag: DW_TAG_member, name: "non_rcu", scope: !2976, file: !2676, line: 150, baseType: !5, size: 32)
!2979 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2976, file: !2676, line: 151, baseType: !333, size: 128, align: 64)
!2980 = !DIDerivedType(tag: DW_TAG_member, name: "real_cred", scope: !2359, file: !2360, line: 926, baseType: !2673, size: 64, offset: 8576)
!2981 = !DIDerivedType(tag: DW_TAG_member, name: "cred", scope: !2359, file: !2360, line: 929, baseType: !2673, size: 64, offset: 8640)
!2982 = !DIDerivedType(tag: DW_TAG_member, name: "cached_requested_key", scope: !2359, file: !2360, line: 933, baseType: !2703, size: 64, offset: 8704)
!2983 = !DIDerivedType(tag: DW_TAG_member, name: "comm", scope: !2359, file: !2360, line: 943, baseType: !301, size: 128, offset: 8768)
!2984 = !DIDerivedType(tag: DW_TAG_member, name: "nameidata", scope: !2359, file: !2360, line: 945, baseType: !2985, size: 64, offset: 8896)
!2985 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2986, size: 64)
!2986 = !DICompositeType(tag: DW_TAG_structure_type, name: "nameidata", file: !2360, line: 49, flags: DIFlagFwdDecl)
!2987 = !DIDerivedType(tag: DW_TAG_member, name: "fs", scope: !2359, file: !2360, line: 956, baseType: !2988, size: 64, offset: 8960)
!2988 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2989, size: 64)
!2989 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_struct", file: !2360, line: 45, flags: DIFlagFwdDecl)
!2990 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !2359, file: !2360, line: 959, baseType: !2991, size: 64, offset: 9024)
!2991 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2992, size: 64)
!2992 = !DICompositeType(tag: DW_TAG_structure_type, name: "files_struct", file: !2360, line: 959, flags: DIFlagFwdDecl)
!2993 = !DIDerivedType(tag: DW_TAG_member, name: "io_uring", scope: !2359, file: !2360, line: 962, baseType: !2994, size: 64, offset: 9088)
!2994 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2995, size: 64)
!2995 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_uring_task", file: !2360, line: 66, flags: DIFlagFwdDecl)
!2996 = !DIDerivedType(tag: DW_TAG_member, name: "nsproxy", scope: !2359, file: !2360, line: 966, baseType: !2997, size: 64, offset: 9152)
!2997 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2998, size: 64)
!2998 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nsproxy", file: !2999, line: 31, size: 576, elements: !3000)
!2999 = !DIFile(filename: "./include/linux/nsproxy.h", directory: "/home/lizy2001/genbc/linux")
!3000 = !{!3001, !3002, !3005, !3008, !3011, !3012, !3700, !3703, !3704}
!3001 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2998, file: !2999, line: 32, baseType: !417, size: 32)
!3002 = !DIDerivedType(tag: DW_TAG_member, name: "uts_ns", scope: !2998, file: !2999, line: 33, baseType: !3003, size: 64, offset: 64)
!3003 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3004, size: 64)
!3004 = !DICompositeType(tag: DW_TAG_structure_type, name: "uts_namespace", file: !2999, line: 9, flags: DIFlagFwdDecl)
!3005 = !DIDerivedType(tag: DW_TAG_member, name: "ipc_ns", scope: !2998, file: !2999, line: 34, baseType: !3006, size: 64, offset: 128)
!3006 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3007, size: 64)
!3007 = !DICompositeType(tag: DW_TAG_structure_type, name: "ipc_namespace", file: !2999, line: 10, flags: DIFlagFwdDecl)
!3008 = !DIDerivedType(tag: DW_TAG_member, name: "mnt_ns", scope: !2998, file: !2999, line: 35, baseType: !3009, size: 64, offset: 192)
!3009 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3010, size: 64)
!3010 = !DICompositeType(tag: DW_TAG_structure_type, name: "mnt_namespace", file: !2999, line: 8, flags: DIFlagFwdDecl)
!3011 = !DIDerivedType(tag: DW_TAG_member, name: "pid_ns_for_children", scope: !2998, file: !2999, line: 36, baseType: !2620, size: 64, offset: 256)
!3012 = !DIDerivedType(tag: DW_TAG_member, name: "net_ns", scope: !2998, file: !2999, line: 37, baseType: !3013, size: 64, offset: 320)
!3013 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3014, size: 64)
!3014 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "net", file: !3015, line: 56, size: 16896, elements: !3016)
!3015 = !DIFile(filename: "./include/net/net_namespace.h", directory: "/home/lizy2001/genbc/linux")
!3016 = !{!3017, !3018, !3019, !3020, !3021, !3022, !3023, !3024, !3025, !3026, !3027, !3028, !3029, !3030, !3031, !3038, !3039, !3040, !3044, !3045, !3046, !3047, !3048, !3051, !3053, !3054, !3069, !3070, !3071, !3072, !3082, !3151, !3157, !3163, !3176, !3485, !3639, !3646, !3649, !3672, !3673, !3699}
!3017 = !DIDerivedType(tag: DW_TAG_member, name: "passive", scope: !3014, file: !3015, line: 60, baseType: !602, size: 32)
!3018 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3014, file: !3015, line: 63, baseType: !602, size: 32, offset: 32)
!3019 = !DIDerivedType(tag: DW_TAG_member, name: "rules_mod_lock", scope: !3014, file: !3015, line: 66, baseType: !1702, offset: 64)
!3020 = !DIDerivedType(tag: DW_TAG_member, name: "dev_unreg_count", scope: !3014, file: !3015, line: 68, baseType: !11, size: 32, offset: 64)
!3021 = !DIDerivedType(tag: DW_TAG_member, name: "dev_base_seq", scope: !3014, file: !3015, line: 70, baseType: !11, size: 32, offset: 96)
!3022 = !DIDerivedType(tag: DW_TAG_member, name: "ifindex", scope: !3014, file: !3015, line: 71, baseType: !5, size: 32, offset: 128)
!3023 = !DIDerivedType(tag: DW_TAG_member, name: "nsid_lock", scope: !3014, file: !3015, line: 73, baseType: !1702, offset: 160)
!3024 = !DIDerivedType(tag: DW_TAG_member, name: "fnhe_genid", scope: !3014, file: !3015, line: 74, baseType: !417, size: 32, offset: 160)
!3025 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3014, file: !3015, line: 76, baseType: !318, size: 128, offset: 192)
!3026 = !DIDerivedType(tag: DW_TAG_member, name: "exit_list", scope: !3014, file: !3015, line: 77, baseType: !318, size: 128, offset: 320)
!3027 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup_list", scope: !3014, file: !3015, line: 83, baseType: !1356, size: 64, offset: 448)
!3028 = !DIDerivedType(tag: DW_TAG_member, name: "key_domain", scope: !3014, file: !3015, line: 86, baseType: !2756, size: 64, offset: 512)
!3029 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !3014, file: !3015, line: 88, baseType: !2812, size: 64, offset: 576)
!3030 = !DIDerivedType(tag: DW_TAG_member, name: "ucounts", scope: !3014, file: !3015, line: 89, baseType: !2954, size: 64, offset: 640)
!3031 = !DIDerivedType(tag: DW_TAG_member, name: "netns_ids", scope: !3014, file: !3015, line: 90, baseType: !3032, size: 192, offset: 704)
!3032 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "idr", file: !3033, line: 19, size: 192, elements: !3034)
!3033 = !DIFile(filename: "./include/linux/idr.h", directory: "/home/lizy2001/genbc/linux")
!3034 = !{!3035, !3036, !3037}
!3035 = !DIDerivedType(tag: DW_TAG_member, name: "idr_rt", scope: !3032, file: !3033, line: 20, baseType: !1769, size: 128)
!3036 = !DIDerivedType(tag: DW_TAG_member, name: "idr_base", scope: !3032, file: !3033, line: 21, baseType: !11, size: 32, offset: 128)
!3037 = !DIDerivedType(tag: DW_TAG_member, name: "idr_next", scope: !3032, file: !3033, line: 22, baseType: !11, size: 32, offset: 160)
!3038 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !3014, file: !3015, line: 92, baseType: !2846, size: 192, offset: 896)
!3039 = !DIDerivedType(tag: DW_TAG_member, name: "dev_base_head", scope: !3014, file: !3015, line: 94, baseType: !318, size: 128, offset: 1088)
!3040 = !DIDerivedType(tag: DW_TAG_member, name: "proc_net", scope: !3014, file: !3015, line: 95, baseType: !3041, size: 64, offset: 1216)
!3041 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3042, size: 64)
!3042 = !DICompositeType(tag: DW_TAG_structure_type, name: "proc_dir_entry", file: !3043, line: 17, flags: DIFlagFwdDecl)
!3043 = !DIFile(filename: "./include/net/netns/mib.h", directory: "/home/lizy2001/genbc/linux")
!3044 = !DIDerivedType(tag: DW_TAG_member, name: "proc_net_stat", scope: !3014, file: !3015, line: 96, baseType: !3041, size: 64, offset: 1280)
!3045 = !DIDerivedType(tag: DW_TAG_member, name: "sysctls", scope: !3014, file: !3015, line: 99, baseType: !2872, size: 768, offset: 1344)
!3046 = !DIDerivedType(tag: DW_TAG_member, name: "rtnl", scope: !3014, file: !3015, line: 102, baseType: !479, size: 64, offset: 2112)
!3047 = !DIDerivedType(tag: DW_TAG_member, name: "genl_sock", scope: !3014, file: !3015, line: 103, baseType: !479, size: 64, offset: 2176)
!3048 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_sock", scope: !3014, file: !3015, line: 105, baseType: !3049, size: 64, offset: 2240)
!3049 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3050, size: 64)
!3050 = !DICompositeType(tag: DW_TAG_structure_type, name: "uevent_sock", file: !3015, line: 48, flags: DIFlagFwdDecl)
!3051 = !DIDerivedType(tag: DW_TAG_member, name: "dev_name_head", scope: !3014, file: !3015, line: 107, baseType: !3052, size: 64, offset: 2304)
!3052 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1613, size: 64)
!3053 = !DIDerivedType(tag: DW_TAG_member, name: "dev_index_head", scope: !3014, file: !3015, line: 108, baseType: !3052, size: 64, offset: 2368)
!3054 = !DIDerivedType(tag: DW_TAG_member, name: "netdev_chain", scope: !3014, file: !3015, line: 109, baseType: !3055, size: 64, offset: 2432)
!3055 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "raw_notifier_head", file: !3056, line: 70, size: 64, elements: !3057)
!3056 = !DIFile(filename: "./include/linux/notifier.h", directory: "/home/lizy2001/genbc/linux")
!3057 = !{!3058}
!3058 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3055, file: !3056, line: 71, baseType: !3059, size: 64)
!3059 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3060, size: 64)
!3060 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "notifier_block", file: !3056, line: 54, size: 192, elements: !3061)
!3061 = !{!3062, !3067, !3068}
!3062 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_call", scope: !3060, file: !3056, line: 55, baseType: !3063, size: 64)
!3063 = !DIDerivedType(tag: DW_TAG_typedef, name: "notifier_fn_t", file: !3056, line: 51, baseType: !3064)
!3064 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3065, size: 64)
!3065 = !DISubroutineType(types: !3066)
!3066 = !{!5, !3059, !346, !625}
!3067 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3060, file: !3056, line: 56, baseType: !3059, size: 64, offset: 64)
!3068 = !DIDerivedType(tag: DW_TAG_member, name: "priority", scope: !3060, file: !3056, line: 57, baseType: !5, size: 32, offset: 128)
!3069 = !DIDerivedType(tag: DW_TAG_member, name: "hash_mix", scope: !3014, file: !3015, line: 114, baseType: !1021, size: 32, offset: 2496)
!3070 = !DIDerivedType(tag: DW_TAG_member, name: "loopback_dev", scope: !3014, file: !3015, line: 116, baseType: !324, size: 64, offset: 2560)
!3071 = !DIDerivedType(tag: DW_TAG_member, name: "rules_ops", scope: !3014, file: !3015, line: 119, baseType: !318, size: 128, offset: 2624)
!3072 = !DIDerivedType(tag: DW_TAG_member, name: "core", scope: !3014, file: !3015, line: 121, baseType: !3073, size: 256, offset: 2752)
!3073 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_core", file: !3074, line: 8, size: 256, elements: !3075)
!3074 = !DIFile(filename: "./include/net/netns/core.h", directory: "/home/lizy2001/genbc/linux")
!3075 = !{!3076, !3077, !3078, !3079}
!3076 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_hdr", scope: !3073, file: !3074, line: 10, baseType: !2934, size: 64)
!3077 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_somaxconn", scope: !3073, file: !3074, line: 12, baseType: !5, size: 32, offset: 64)
!3078 = !DIDerivedType(tag: DW_TAG_member, name: "sock_inuse", scope: !3073, file: !3074, line: 15, baseType: !1035, size: 64, offset: 128)
!3079 = !DIDerivedType(tag: DW_TAG_member, name: "prot_inuse", scope: !3073, file: !3074, line: 16, baseType: !3080, size: 64, offset: 192)
!3080 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3081, size: 64)
!3081 = !DICompositeType(tag: DW_TAG_structure_type, name: "prot_inuse", file: !3074, line: 6, flags: DIFlagFwdDecl)
!3082 = !DIDerivedType(tag: DW_TAG_member, name: "mib", scope: !3014, file: !3015, line: 122, baseType: !3083, size: 832, offset: 3008)
!3083 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_mib", file: !3043, line: 7, size: 832, elements: !3084)
!3084 = !{!3085, !3092, !3103, !3111, !3119, !3120, !3128, !3136, !3137, !3138, !3139, !3140, !3146}
!3085 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_statistics", scope: !3083, file: !3043, line: 8, baseType: !3086, size: 64)
!3086 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3087, size: 64)
!3087 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tcp_mib", file: !3088, line: 92, size: 1024, elements: !3089)
!3088 = !DIFile(filename: "./include/net/snmp.h", directory: "/home/lizy2001/genbc/linux")
!3089 = !{!3090}
!3090 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !3087, file: !3088, line: 93, baseType: !3091, size: 1024)
!3091 = !DICompositeType(tag: DW_TAG_array_type, baseType: !346, size: 1024, elements: !303)
!3092 = !DIDerivedType(tag: DW_TAG_member, name: "ip_statistics", scope: !3083, file: !3043, line: 9, baseType: !3093, size: 64, offset: 64)
!3093 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3094, size: 64)
!3094 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ipstats_mib", file: !3088, line: 51, size: 2368, elements: !3095)
!3095 = !{!3096, !3100}
!3096 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !3094, file: !3088, line: 53, baseType: !3097, size: 2368)
!3097 = !DICompositeType(tag: DW_TAG_array_type, baseType: !365, size: 2368, elements: !3098)
!3098 = !{!3099}
!3099 = !DISubrange(count: 37)
!3100 = !DIDerivedType(tag: DW_TAG_member, name: "syncp", scope: !3094, file: !3088, line: 54, baseType: !3101, offset: 2368)
!3101 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "u64_stats_sync", file: !3102, line: 68, elements: !1619)
!3102 = !DIFile(filename: "./include/linux/u64_stats_sync.h", directory: "/home/lizy2001/genbc/linux")
!3103 = !DIDerivedType(tag: DW_TAG_member, name: "net_statistics", scope: !3083, file: !3043, line: 10, baseType: !3104, size: 64, offset: 128)
!3104 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3105, size: 64)
!3105 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "linux_mib", file: !3088, line: 104, size: 7936, elements: !3106)
!3106 = !{!3107}
!3107 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !3105, file: !3088, line: 105, baseType: !3108, size: 7936)
!3108 = !DICompositeType(tag: DW_TAG_array_type, baseType: !346, size: 7936, elements: !3109)
!3109 = !{!3110}
!3110 = !DISubrange(count: 124)
!3111 = !DIDerivedType(tag: DW_TAG_member, name: "udp_statistics", scope: !3083, file: !3043, line: 11, baseType: !3112, size: 64, offset: 192)
!3112 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3113, size: 64)
!3113 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "udp_mib", file: !3088, line: 98, size: 576, elements: !3114)
!3114 = !{!3115}
!3115 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !3113, file: !3088, line: 99, baseType: !3116, size: 576)
!3116 = !DICompositeType(tag: DW_TAG_array_type, baseType: !346, size: 576, elements: !3117)
!3117 = !{!3118}
!3118 = !DISubrange(count: 9)
!3119 = !DIDerivedType(tag: DW_TAG_member, name: "udplite_statistics", scope: !3083, file: !3043, line: 12, baseType: !3112, size: 64, offset: 256)
!3120 = !DIDerivedType(tag: DW_TAG_member, name: "icmp_statistics", scope: !3083, file: !3043, line: 13, baseType: !3121, size: 64, offset: 320)
!3121 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3122, size: 64)
!3122 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "icmp_mib", file: !3088, line: 59, size: 1792, elements: !3123)
!3123 = !{!3124}
!3124 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !3122, file: !3088, line: 60, baseType: !3125, size: 1792)
!3125 = !DICompositeType(tag: DW_TAG_array_type, baseType: !346, size: 1792, elements: !3126)
!3126 = !{!3127}
!3127 = !DISubrange(count: 28)
!3128 = !DIDerivedType(tag: DW_TAG_member, name: "icmpmsg_statistics", scope: !3083, file: !3043, line: 14, baseType: !3129, size: 64, offset: 384)
!3129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3130, size: 64)
!3130 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "icmpmsg_mib", file: !3088, line: 64, size: 32768, elements: !3131)
!3131 = !{!3132}
!3132 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !3130, file: !3088, line: 65, baseType: !3133, size: 32768)
!3133 = !DICompositeType(tag: DW_TAG_array_type, baseType: !405, size: 32768, elements: !3134)
!3134 = !{!3135}
!3135 = !DISubrange(count: 512)
!3136 = !DIDerivedType(tag: DW_TAG_member, name: "proc_net_devsnmp6", scope: !3083, file: !3043, line: 17, baseType: !3041, size: 64, offset: 448)
!3137 = !DIDerivedType(tag: DW_TAG_member, name: "udp_stats_in6", scope: !3083, file: !3043, line: 18, baseType: !3112, size: 64, offset: 512)
!3138 = !DIDerivedType(tag: DW_TAG_member, name: "udplite_stats_in6", scope: !3083, file: !3043, line: 19, baseType: !3112, size: 64, offset: 576)
!3139 = !DIDerivedType(tag: DW_TAG_member, name: "ipv6_statistics", scope: !3083, file: !3043, line: 20, baseType: !3093, size: 64, offset: 640)
!3140 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6_statistics", scope: !3083, file: !3043, line: 21, baseType: !3141, size: 64, offset: 704)
!3141 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3142, size: 64)
!3142 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "icmpv6_mib", file: !3088, line: 71, size: 384, elements: !3143)
!3143 = !{!3144}
!3144 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !3142, file: !3088, line: 72, baseType: !3145, size: 384)
!3145 = !DICompositeType(tag: DW_TAG_array_type, baseType: !346, size: 384, elements: !1033)
!3146 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6msg_statistics", scope: !3083, file: !3043, line: 22, baseType: !3147, size: 64, offset: 768)
!3147 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3148, size: 64)
!3148 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "icmpv6msg_mib", file: !3088, line: 81, size: 32768, elements: !3149)
!3149 = !{!3150}
!3150 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !3148, file: !3088, line: 82, baseType: !3133, size: 32768)
!3151 = !DIDerivedType(tag: DW_TAG_member, name: "packet", scope: !3014, file: !3015, line: 123, baseType: !3152, size: 256, offset: 3840)
!3152 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_packet", file: !3153, line: 11, size: 256, elements: !3154)
!3153 = !DIFile(filename: "./include/net/netns/packet.h", directory: "/home/lizy2001/genbc/linux")
!3154 = !{!3155, !3156}
!3155 = !DIDerivedType(tag: DW_TAG_member, name: "sklist_lock", scope: !3152, file: !3153, line: 12, baseType: !1697, size: 192)
!3156 = !DIDerivedType(tag: DW_TAG_member, name: "sklist", scope: !3152, file: !3153, line: 13, baseType: !1613, size: 64, offset: 192)
!3157 = !DIDerivedType(tag: DW_TAG_member, name: "unx", scope: !3014, file: !3015, line: 124, baseType: !3158, size: 128, offset: 4096)
!3158 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_unix", file: !3159, line: 9, size: 128, elements: !3160)
!3159 = !DIFile(filename: "./include/net/netns/unix.h", directory: "/home/lizy2001/genbc/linux")
!3160 = !{!3161, !3162}
!3161 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_max_dgram_qlen", scope: !3158, file: !3159, line: 10, baseType: !5, size: 32)
!3162 = !DIDerivedType(tag: DW_TAG_member, name: "ctl", scope: !3158, file: !3159, line: 11, baseType: !2934, size: 64, offset: 64)
!3163 = !DIDerivedType(tag: DW_TAG_member, name: "nexthop", scope: !3014, file: !3015, line: 125, baseType: !3164, size: 512, offset: 4224)
!3164 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_nexthop", file: !3165, line: 11, size: 512, elements: !3166)
!3165 = !DIFile(filename: "./include/net/netns/nexthop.h", directory: "/home/lizy2001/genbc/linux")
!3166 = !{!3167, !3168, !3169, !3170, !3171}
!3167 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !3164, file: !3165, line: 12, baseType: !1782, size: 64)
!3168 = !DIDerivedType(tag: DW_TAG_member, name: "devhash", scope: !3164, file: !3165, line: 13, baseType: !3052, size: 64, offset: 64)
!3169 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !3164, file: !3165, line: 15, baseType: !11, size: 32, offset: 128)
!3170 = !DIDerivedType(tag: DW_TAG_member, name: "last_id_allocated", scope: !3164, file: !3165, line: 16, baseType: !1021, size: 32, offset: 160)
!3171 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_chain", scope: !3164, file: !3165, line: 17, baseType: !3172, size: 320, offset: 192)
!3172 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blocking_notifier_head", file: !3056, line: 65, size: 320, elements: !3173)
!3173 = !{!3174, !3175}
!3174 = !DIDerivedType(tag: DW_TAG_member, name: "rwsem", scope: !3172, file: !3056, line: 66, baseType: !1787, size: 256)
!3175 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3172, file: !3056, line: 67, baseType: !3059, size: 64, offset: 256)
!3176 = !DIDerivedType(tag: DW_TAG_member, name: "ipv4", scope: !3014, file: !3015, line: 126, baseType: !3177, size: 5440, offset: 4736)
!3177 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_ipv4", file: !3178, line: 43, size: 5440, elements: !3179)
!3178 = !DIFile(filename: "./include/net/netns/ipv4.h", directory: "/home/lizy2001/genbc/linux")
!3179 = !{!3180, !3181, !3182, !3183, !3184, !3185, !3188, !3189, !3192, !3193, !3194, !3195, !3196, !3197, !3199, !3200, !3203, !3204, !3345, !3346, !3347, !3348, !3349, !3350, !3351, !3363, !3364, !3365, !3366, !3367, !3368, !3369, !3370, !3371, !3372, !3373, !3374, !3375, !3376, !3377, !3378, !3379, !3380, !3381, !3382, !3383, !3384, !3385, !3386, !3387, !3388, !3389, !3390, !3391, !3392, !3393, !3394, !3395, !3396, !3397, !3398, !3399, !3400, !3401, !3402, !3403, !3404, !3405, !3406, !3407, !3408, !3409, !3410, !3411, !3412, !3413, !3414, !3415, !3416, !3417, !3418, !3419, !3420, !3421, !3422, !3423, !3424, !3425, !3426, !3427, !3429, !3430, !3431, !3432, !3433, !3441, !3442, !3443, !3447, !3450, !3451, !3452, !3453, !3454, !3455, !3456, !3457, !3458, !3459, !3460, !3461, !3467, !3468, !3470, !3471, !3474, !3475, !3476, !3477, !3478}
!3180 = !DIDerivedType(tag: DW_TAG_member, name: "forw_hdr", scope: !3177, file: !3178, line: 45, baseType: !2934, size: 64)
!3181 = !DIDerivedType(tag: DW_TAG_member, name: "frags_hdr", scope: !3177, file: !3178, line: 46, baseType: !2934, size: 64, offset: 64)
!3182 = !DIDerivedType(tag: DW_TAG_member, name: "ipv4_hdr", scope: !3177, file: !3178, line: 47, baseType: !2934, size: 64, offset: 128)
!3183 = !DIDerivedType(tag: DW_TAG_member, name: "route_hdr", scope: !3177, file: !3178, line: 48, baseType: !2934, size: 64, offset: 192)
!3184 = !DIDerivedType(tag: DW_TAG_member, name: "xfrm4_hdr", scope: !3177, file: !3178, line: 49, baseType: !2934, size: 64, offset: 256)
!3185 = !DIDerivedType(tag: DW_TAG_member, name: "devconf_all", scope: !3177, file: !3178, line: 51, baseType: !3186, size: 64, offset: 320)
!3186 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3187, size: 64)
!3187 = !DICompositeType(tag: DW_TAG_structure_type, name: "ipv4_devconf", file: !3178, line: 16, flags: DIFlagFwdDecl)
!3188 = !DIDerivedType(tag: DW_TAG_member, name: "devconf_dflt", scope: !3177, file: !3178, line: 52, baseType: !3186, size: 64, offset: 384)
!3189 = !DIDerivedType(tag: DW_TAG_member, name: "ra_chain", scope: !3177, file: !3178, line: 53, baseType: !3190, size: 64, offset: 448)
!3190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3191, size: 64)
!3191 = !DICompositeType(tag: DW_TAG_structure_type, name: "ip_ra_chain", file: !3178, line: 53, flags: DIFlagFwdDecl)
!3192 = !DIDerivedType(tag: DW_TAG_member, name: "ra_mutex", scope: !3177, file: !3178, line: 54, baseType: !1697, size: 192, offset: 512)
!3193 = !DIDerivedType(tag: DW_TAG_member, name: "fib_has_custom_local_routes", scope: !3177, file: !3178, line: 62, baseType: !805, size: 8, offset: 704)
!3194 = !DIDerivedType(tag: DW_TAG_member, name: "fib_table_hash", scope: !3177, file: !3178, line: 66, baseType: !3052, size: 64, offset: 768)
!3195 = !DIDerivedType(tag: DW_TAG_member, name: "fib_offload_disabled", scope: !3177, file: !3178, line: 67, baseType: !805, size: 8, offset: 832)
!3196 = !DIDerivedType(tag: DW_TAG_member, name: "fibnl", scope: !3177, file: !3178, line: 68, baseType: !479, size: 64, offset: 896)
!3197 = !DIDerivedType(tag: DW_TAG_member, name: "icmp_sk", scope: !3177, file: !3178, line: 70, baseType: !3198, size: 64, offset: 960)
!3198 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !479, size: 64)
!3199 = !DIDerivedType(tag: DW_TAG_member, name: "mc_autojoin_sk", scope: !3177, file: !3178, line: 71, baseType: !479, size: 64, offset: 1024)
!3200 = !DIDerivedType(tag: DW_TAG_member, name: "peers", scope: !3177, file: !3178, line: 73, baseType: !3201, size: 64, offset: 1088)
!3201 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3202, size: 64)
!3202 = !DICompositeType(tag: DW_TAG_structure_type, name: "inet_peer_base", file: !3178, line: 73, flags: DIFlagFwdDecl)
!3203 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_sk", scope: !3177, file: !3178, line: 74, baseType: !3198, size: 64, offset: 1152)
!3204 = !DIDerivedType(tag: DW_TAG_member, name: "fqdir", scope: !3177, file: !3178, line: 75, baseType: !3205, size: 64, offset: 1216)
!3205 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3206, size: 64)
!3206 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fqdir", file: !3207, line: 9, size: 1728, elements: !3208)
!3207 = !DIFile(filename: "./include/net/inet_frag.h", directory: "/home/lizy2001/genbc/linux")
!3208 = !{!3209, !3210, !3211, !3212, !3213, !3340, !3341, !3342, !3343, !3344}
!3209 = !DIDerivedType(tag: DW_TAG_member, name: "high_thresh", scope: !3206, file: !3207, line: 11, baseType: !1032, size: 64)
!3210 = !DIDerivedType(tag: DW_TAG_member, name: "low_thresh", scope: !3206, file: !3207, line: 12, baseType: !1032, size: 64, offset: 64)
!3211 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !3206, file: !3207, line: 13, baseType: !5, size: 32, offset: 128)
!3212 = !DIDerivedType(tag: DW_TAG_member, name: "max_dist", scope: !3206, file: !3207, line: 14, baseType: !5, size: 32, offset: 160)
!3213 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !3206, file: !3207, line: 15, baseType: !3214, size: 64, offset: 192)
!3214 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3215, size: 64)
!3215 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inet_frags", file: !3207, line: 98, size: 960, elements: !3216)
!3216 = !{!3217, !3218, !3290, !3294, !3295, !3296, !3297, !3338, !3339}
!3217 = !DIDerivedType(tag: DW_TAG_member, name: "qsize", scope: !3215, file: !3207, line: 99, baseType: !11, size: 32)
!3218 = !DIDerivedType(tag: DW_TAG_member, name: "constructor", scope: !3215, file: !3207, line: 101, baseType: !3219, size: 64, offset: 64)
!3219 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3220, size: 64)
!3220 = !DISubroutineType(types: !3221)
!3221 = !{null, !3222, !3288}
!3222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3223, size: 64)
!3223 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inet_frag_queue", file: !3207, line: 77, size: 1408, elements: !3224)
!3224 = !{!3225, !3231, !3264, !3276, !3277, !3278, !3279, !3280, !3281, !3282, !3283, !3284, !3285, !3286, !3287}
!3225 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3223, file: !3207, line: 78, baseType: !3226, size: 64)
!3226 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rhash_head", file: !3227, line: 17, size: 64, elements: !3228)
!3227 = !DIFile(filename: "./include/linux/rhashtable-types.h", directory: "/home/lizy2001/genbc/linux")
!3228 = !{!3229}
!3229 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3226, file: !3227, line: 18, baseType: !3230, size: 64)
!3230 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3226, size: 64)
!3231 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !3223, file: !3207, line: 82, baseType: !3232, size: 352, offset: 64)
!3232 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3223, file: !3207, line: 79, size: 352, elements: !3233)
!3233 = !{!3234, !3244}
!3234 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !3232, file: !3207, line: 80, baseType: !3235, size: 160)
!3235 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "frag_v4_compare_key", file: !3207, line: 41, size: 160, elements: !3236)
!3236 = !{!3237, !3239, !3240, !3241, !3242, !3243}
!3237 = !DIDerivedType(tag: DW_TAG_member, name: "saddr", scope: !3235, file: !3207, line: 42, baseType: !3238, size: 32)
!3238 = !DIDerivedType(tag: DW_TAG_typedef, name: "__be32", file: !559, line: 32, baseType: !527)
!3239 = !DIDerivedType(tag: DW_TAG_member, name: "daddr", scope: !3235, file: !3207, line: 43, baseType: !3238, size: 32, offset: 32)
!3240 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !3235, file: !3207, line: 44, baseType: !1021, size: 32, offset: 64)
!3241 = !DIDerivedType(tag: DW_TAG_member, name: "vif", scope: !3235, file: !3207, line: 45, baseType: !1021, size: 32, offset: 96)
!3242 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3235, file: !3207, line: 46, baseType: !569, size: 16, offset: 128)
!3243 = !DIDerivedType(tag: DW_TAG_member, name: "protocol", scope: !3235, file: !3207, line: 47, baseType: !615, size: 16, offset: 144)
!3244 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !3232, file: !3207, line: 81, baseType: !3245, size: 352)
!3245 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "frag_v6_compare_key", file: !3207, line: 50, size: 352, elements: !3246)
!3246 = !{!3247, !3260, !3261, !3262, !3263}
!3247 = !DIDerivedType(tag: DW_TAG_member, name: "saddr", scope: !3245, file: !3207, line: 51, baseType: !3248, size: 128)
!3248 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "in6_addr", file: !3249, line: 33, size: 128, elements: !3250)
!3249 = !DIFile(filename: "./include/uapi/linux/in6.h", directory: "/home/lizy2001/genbc/linux")
!3250 = !{!3251}
!3251 = !DIDerivedType(tag: DW_TAG_member, name: "in6_u", scope: !3248, file: !3249, line: 40, baseType: !3252, size: 128)
!3252 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3248, file: !3249, line: 34, size: 128, elements: !3253)
!3253 = !{!3254, !3256, !3258}
!3254 = !DIDerivedType(tag: DW_TAG_member, name: "u6_addr8", scope: !3252, file: !3249, line: 35, baseType: !3255, size: 128)
!3255 = !DICompositeType(tag: DW_TAG_array_type, baseType: !515, size: 128, elements: !303)
!3256 = !DIDerivedType(tag: DW_TAG_member, name: "u6_addr16", scope: !3252, file: !3249, line: 37, baseType: !3257, size: 128)
!3257 = !DICompositeType(tag: DW_TAG_array_type, baseType: !569, size: 128, elements: !2465)
!3258 = !DIDerivedType(tag: DW_TAG_member, name: "u6_addr32", scope: !3252, file: !3249, line: 38, baseType: !3259, size: 128)
!3259 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3238, size: 128, elements: !2304)
!3260 = !DIDerivedType(tag: DW_TAG_member, name: "daddr", scope: !3245, file: !3207, line: 52, baseType: !3248, size: 128, offset: 128)
!3261 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !3245, file: !3207, line: 53, baseType: !1021, size: 32, offset: 256)
!3262 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3245, file: !3207, line: 54, baseType: !3238, size: 32, offset: 288)
!3263 = !DIDerivedType(tag: DW_TAG_member, name: "iif", scope: !3245, file: !3207, line: 55, baseType: !1021, size: 32, offset: 320)
!3264 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !3223, file: !3207, line: 83, baseType: !3265, size: 320, offset: 448)
!3265 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timer_list", file: !3266, line: 11, size: 320, elements: !3267)
!3266 = !DIFile(filename: "./include/linux/timer.h", directory: "/home/lizy2001/genbc/linux")
!3267 = !{!3268, !3269, !3270, !3275}
!3268 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !3265, file: !3266, line: 16, baseType: !310, size: 128)
!3269 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !3265, file: !3266, line: 17, baseType: !346, size: 64, offset: 128)
!3270 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !3265, file: !3266, line: 18, baseType: !3271, size: 64, offset: 192)
!3271 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3272, size: 64)
!3272 = !DISubroutineType(types: !3273)
!3273 = !{null, !3274}
!3274 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3265, size: 64)
!3275 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3265, file: !3266, line: 19, baseType: !1021, size: 32, offset: 256)
!3276 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3223, file: !3207, line: 84, baseType: !1702, offset: 768)
!3277 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !3223, file: !3207, line: 85, baseType: !602, size: 32, offset: 768)
!3278 = !DIDerivedType(tag: DW_TAG_member, name: "rb_fragments", scope: !3223, file: !3207, line: 86, baseType: !1782, size: 64, offset: 832)
!3279 = !DIDerivedType(tag: DW_TAG_member, name: "fragments_tail", scope: !3223, file: !3207, line: 87, baseType: !449, size: 64, offset: 896)
!3280 = !DIDerivedType(tag: DW_TAG_member, name: "last_run_head", scope: !3223, file: !3207, line: 88, baseType: !449, size: 64, offset: 960)
!3281 = !DIDerivedType(tag: DW_TAG_member, name: "stamp", scope: !3223, file: !3207, line: 89, baseType: !487, size: 64, offset: 1024)
!3282 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !3223, file: !3207, line: 90, baseType: !5, size: 32, offset: 1088)
!3283 = !DIDerivedType(tag: DW_TAG_member, name: "meat", scope: !3223, file: !3207, line: 91, baseType: !5, size: 32, offset: 1120)
!3284 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3223, file: !3207, line: 92, baseType: !515, size: 8, offset: 1152)
!3285 = !DIDerivedType(tag: DW_TAG_member, name: "max_size", scope: !3223, file: !3207, line: 93, baseType: !615, size: 16, offset: 1168)
!3286 = !DIDerivedType(tag: DW_TAG_member, name: "fqdir", scope: !3223, file: !3207, line: 94, baseType: !3205, size: 64, offset: 1216)
!3287 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !3223, file: !3207, line: 95, baseType: !333, size: 128, align: 64, offset: 1280)
!3288 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3289, size: 64)
!3289 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!3290 = !DIDerivedType(tag: DW_TAG_member, name: "destructor", scope: !3215, file: !3207, line: 103, baseType: !3291, size: 64, offset: 128)
!3291 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3292, size: 64)
!3292 = !DISubroutineType(types: !3293)
!3293 = !{null, !3222}
!3294 = !DIDerivedType(tag: DW_TAG_member, name: "frag_expire", scope: !3215, file: !3207, line: 104, baseType: !3271, size: 64, offset: 192)
!3295 = !DIDerivedType(tag: DW_TAG_member, name: "frags_cachep", scope: !3215, file: !3207, line: 105, baseType: !2083, size: 64, offset: 256)
!3296 = !DIDerivedType(tag: DW_TAG_member, name: "frags_cache_name", scope: !3215, file: !3207, line: 106, baseType: !326, size: 64, offset: 320)
!3297 = !DIDerivedType(tag: DW_TAG_member, name: "rhash_params", scope: !3215, file: !3207, line: 107, baseType: !3298, size: 320, offset: 384)
!3298 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rhashtable_params", file: !3227, line: 56, size: 320, elements: !3299)
!3299 = !{!3300, !3301, !3302, !3303, !3304, !3305, !3306, !3307, !3312, !3314}
!3300 = !DIDerivedType(tag: DW_TAG_member, name: "nelem_hint", scope: !3298, file: !3227, line: 57, baseType: !615, size: 16)
!3301 = !DIDerivedType(tag: DW_TAG_member, name: "key_len", scope: !3298, file: !3227, line: 58, baseType: !615, size: 16, offset: 16)
!3302 = !DIDerivedType(tag: DW_TAG_member, name: "key_offset", scope: !3298, file: !3227, line: 59, baseType: !615, size: 16, offset: 32)
!3303 = !DIDerivedType(tag: DW_TAG_member, name: "head_offset", scope: !3298, file: !3227, line: 60, baseType: !615, size: 16, offset: 48)
!3304 = !DIDerivedType(tag: DW_TAG_member, name: "max_size", scope: !3298, file: !3227, line: 61, baseType: !11, size: 32, offset: 64)
!3305 = !DIDerivedType(tag: DW_TAG_member, name: "min_size", scope: !3298, file: !3227, line: 62, baseType: !615, size: 16, offset: 96)
!3306 = !DIDerivedType(tag: DW_TAG_member, name: "automatic_shrinking", scope: !3298, file: !3227, line: 63, baseType: !805, size: 8, offset: 112)
!3307 = !DIDerivedType(tag: DW_TAG_member, name: "hashfn", scope: !3298, file: !3227, line: 64, baseType: !3308, size: 64, offset: 128)
!3308 = !DIDerivedType(tag: DW_TAG_typedef, name: "rht_hashfn_t", file: !3227, line: 38, baseType: !3309)
!3309 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3310, size: 64)
!3310 = !DISubroutineType(types: !3311)
!3311 = !{!1021, !3288, !1021, !1021}
!3312 = !DIDerivedType(tag: DW_TAG_member, name: "obj_hashfn", scope: !3298, file: !3227, line: 65, baseType: !3313, size: 64, offset: 192)
!3313 = !DIDerivedType(tag: DW_TAG_typedef, name: "rht_obj_hashfn_t", file: !3227, line: 39, baseType: !3309)
!3314 = !DIDerivedType(tag: DW_TAG_member, name: "obj_cmpfn", scope: !3298, file: !3227, line: 66, baseType: !3315, size: 64, offset: 256)
!3315 = !DIDerivedType(tag: DW_TAG_typedef, name: "rht_obj_cmpfn_t", file: !3227, line: 40, baseType: !3316)
!3316 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3317, size: 64)
!3317 = !DISubroutineType(types: !3318)
!3318 = !{!5, !3319, !3288}
!3319 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3320, size: 64)
!3320 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rhashtable_compare_arg", file: !3227, line: 33, size: 128, elements: !3321)
!3321 = !{!3322, !3337}
!3322 = !DIDerivedType(tag: DW_TAG_member, name: "ht", scope: !3320, file: !3227, line: 34, baseType: !3323, size: 64)
!3323 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3324, size: 64)
!3324 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rhashtable", file: !3227, line: 81, size: 1024, elements: !3325)
!3325 = !{!3326, !3329, !3330, !3331, !3332, !3333, !3334, !3335, !3336}
!3326 = !DIDerivedType(tag: DW_TAG_member, name: "tbl", scope: !3324, file: !3227, line: 82, baseType: !3327, size: 64)
!3327 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3328, size: 64)
!3328 = !DICompositeType(tag: DW_TAG_structure_type, name: "bucket_table", file: !3227, line: 26, flags: DIFlagFwdDecl)
!3329 = !DIDerivedType(tag: DW_TAG_member, name: "key_len", scope: !3324, file: !3227, line: 83, baseType: !11, size: 32, offset: 64)
!3330 = !DIDerivedType(tag: DW_TAG_member, name: "max_elems", scope: !3324, file: !3227, line: 84, baseType: !11, size: 32, offset: 96)
!3331 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3324, file: !3227, line: 85, baseType: !3298, size: 320, offset: 128)
!3332 = !DIDerivedType(tag: DW_TAG_member, name: "rhlist", scope: !3324, file: !3227, line: 86, baseType: !805, size: 8, offset: 448)
!3333 = !DIDerivedType(tag: DW_TAG_member, name: "run_work", scope: !3324, file: !3227, line: 87, baseType: !2860, size: 256, offset: 512)
!3334 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !3324, file: !3227, line: 88, baseType: !1697, size: 192, offset: 768)
!3335 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3324, file: !3227, line: 89, baseType: !1702, offset: 960)
!3336 = !DIDerivedType(tag: DW_TAG_member, name: "nelems", scope: !3324, file: !3227, line: 90, baseType: !417, size: 32, offset: 960)
!3337 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !3320, file: !3227, line: 35, baseType: !3288, size: 64, offset: 64)
!3338 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !3215, file: !3207, line: 108, baseType: !602, size: 32, offset: 704)
!3339 = !DIDerivedType(tag: DW_TAG_member, name: "completion", scope: !3215, file: !3207, line: 109, baseType: !2628, size: 192, offset: 768)
!3340 = !DIDerivedType(tag: DW_TAG_member, name: "net", scope: !3206, file: !3207, line: 16, baseType: !3013, size: 64, offset: 256)
!3341 = !DIDerivedType(tag: DW_TAG_member, name: "dead", scope: !3206, file: !3207, line: 17, baseType: !805, size: 8, offset: 320)
!3342 = !DIDerivedType(tag: DW_TAG_member, name: "rhashtable", scope: !3206, file: !3207, line: 19, baseType: !3324, size: 1024, offset: 384)
!3343 = !DIDerivedType(tag: DW_TAG_member, name: "mem", scope: !3206, file: !3207, line: 22, baseType: !405, size: 64, offset: 1408)
!3344 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_work", scope: !3206, file: !3207, line: 23, baseType: !2860, size: 256, offset: 1472)
!3345 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_icmp_echo_ignore_all", scope: !3177, file: !3178, line: 87, baseType: !5, size: 32, offset: 1280)
!3346 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_icmp_echo_ignore_broadcasts", scope: !3177, file: !3178, line: 88, baseType: !5, size: 32, offset: 1312)
!3347 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_icmp_ignore_bogus_error_responses", scope: !3177, file: !3178, line: 89, baseType: !5, size: 32, offset: 1344)
!3348 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_icmp_ratelimit", scope: !3177, file: !3178, line: 90, baseType: !5, size: 32, offset: 1376)
!3349 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_icmp_ratemask", scope: !3177, file: !3178, line: 91, baseType: !5, size: 32, offset: 1408)
!3350 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_icmp_errors_use_inbound_ifaddr", scope: !3177, file: !3178, line: 92, baseType: !5, size: 32, offset: 1440)
!3351 = !DIDerivedType(tag: DW_TAG_member, name: "ip_local_ports", scope: !3177, file: !3178, line: 94, baseType: !3352, size: 128, offset: 1472)
!3352 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "local_ports", file: !3178, line: 21, size: 128, elements: !3353)
!3353 = !{!3354, !3360, !3362}
!3354 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3352, file: !3178, line: 22, baseType: !3355, size: 32)
!3355 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqlock_t", file: !1377, line: 805, baseType: !3356)
!3356 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1377, line: 798, size: 32, elements: !3357)
!3357 = !{!3358, !3359}
!3358 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !3356, file: !1377, line: 803, baseType: !1376, size: 32)
!3359 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3356, file: !1377, line: 804, baseType: !1702, offset: 32)
!3360 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !3352, file: !3178, line: 23, baseType: !3361, size: 64, offset: 32)
!3361 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5, size: 64, elements: !2695)
!3362 = !DIDerivedType(tag: DW_TAG_member, name: "warned", scope: !3352, file: !3178, line: 24, baseType: !805, size: 8, offset: 96)
!3363 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_ecn", scope: !3177, file: !3178, line: 96, baseType: !5, size: 32, offset: 1600)
!3364 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_ecn_fallback", scope: !3177, file: !3178, line: 97, baseType: !5, size: 32, offset: 1632)
!3365 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_default_ttl", scope: !3177, file: !3178, line: 99, baseType: !5, size: 32, offset: 1664)
!3366 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_no_pmtu_disc", scope: !3177, file: !3178, line: 100, baseType: !5, size: 32, offset: 1696)
!3367 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_fwd_use_pmtu", scope: !3177, file: !3178, line: 101, baseType: !5, size: 32, offset: 1728)
!3368 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_fwd_update_priority", scope: !3177, file: !3178, line: 102, baseType: !5, size: 32, offset: 1760)
!3369 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_nonlocal_bind", scope: !3177, file: !3178, line: 103, baseType: !5, size: 32, offset: 1792)
!3370 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_autobind_reuse", scope: !3177, file: !3178, line: 104, baseType: !5, size: 32, offset: 1824)
!3371 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_dynaddr", scope: !3177, file: !3178, line: 106, baseType: !5, size: 32, offset: 1856)
!3372 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_early_demux", scope: !3177, file: !3178, line: 107, baseType: !5, size: 32, offset: 1888)
!3373 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_early_demux", scope: !3177, file: !3178, line: 111, baseType: !5, size: 32, offset: 1920)
!3374 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_udp_early_demux", scope: !3177, file: !3178, line: 112, baseType: !5, size: 32, offset: 1952)
!3375 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_nexthop_compat_mode", scope: !3177, file: !3178, line: 114, baseType: !5, size: 32, offset: 1984)
!3376 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_fwmark_reflect", scope: !3177, file: !3178, line: 116, baseType: !5, size: 32, offset: 2016)
!3377 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_fwmark_accept", scope: !3177, file: !3178, line: 117, baseType: !5, size: 32, offset: 2048)
!3378 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_mtu_probing", scope: !3177, file: !3178, line: 121, baseType: !5, size: 32, offset: 2080)
!3379 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_mtu_probe_floor", scope: !3177, file: !3178, line: 122, baseType: !5, size: 32, offset: 2112)
!3380 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_base_mss", scope: !3177, file: !3178, line: 123, baseType: !5, size: 32, offset: 2144)
!3381 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_min_snd_mss", scope: !3177, file: !3178, line: 124, baseType: !5, size: 32, offset: 2176)
!3382 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_probe_threshold", scope: !3177, file: !3178, line: 125, baseType: !5, size: 32, offset: 2208)
!3383 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_probe_interval", scope: !3177, file: !3178, line: 126, baseType: !1021, size: 32, offset: 2240)
!3384 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_keepalive_time", scope: !3177, file: !3178, line: 128, baseType: !5, size: 32, offset: 2272)
!3385 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_keepalive_probes", scope: !3177, file: !3178, line: 129, baseType: !5, size: 32, offset: 2304)
!3386 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_keepalive_intvl", scope: !3177, file: !3178, line: 130, baseType: !5, size: 32, offset: 2336)
!3387 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_syn_retries", scope: !3177, file: !3178, line: 132, baseType: !5, size: 32, offset: 2368)
!3388 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_synack_retries", scope: !3177, file: !3178, line: 133, baseType: !5, size: 32, offset: 2400)
!3389 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_syncookies", scope: !3177, file: !3178, line: 134, baseType: !5, size: 32, offset: 2432)
!3390 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_reordering", scope: !3177, file: !3178, line: 135, baseType: !5, size: 32, offset: 2464)
!3391 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_retries1", scope: !3177, file: !3178, line: 136, baseType: !5, size: 32, offset: 2496)
!3392 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_retries2", scope: !3177, file: !3178, line: 137, baseType: !5, size: 32, offset: 2528)
!3393 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_orphan_retries", scope: !3177, file: !3178, line: 138, baseType: !5, size: 32, offset: 2560)
!3394 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_fin_timeout", scope: !3177, file: !3178, line: 139, baseType: !5, size: 32, offset: 2592)
!3395 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_notsent_lowat", scope: !3177, file: !3178, line: 140, baseType: !11, size: 32, offset: 2624)
!3396 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_tw_reuse", scope: !3177, file: !3178, line: 141, baseType: !5, size: 32, offset: 2656)
!3397 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_sack", scope: !3177, file: !3178, line: 142, baseType: !5, size: 32, offset: 2688)
!3398 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_window_scaling", scope: !3177, file: !3178, line: 143, baseType: !5, size: 32, offset: 2720)
!3399 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_timestamps", scope: !3177, file: !3178, line: 144, baseType: !5, size: 32, offset: 2752)
!3400 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_early_retrans", scope: !3177, file: !3178, line: 145, baseType: !5, size: 32, offset: 2784)
!3401 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_recovery", scope: !3177, file: !3178, line: 146, baseType: !5, size: 32, offset: 2816)
!3402 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_thin_linear_timeouts", scope: !3177, file: !3178, line: 147, baseType: !5, size: 32, offset: 2848)
!3403 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_slow_start_after_idle", scope: !3177, file: !3178, line: 148, baseType: !5, size: 32, offset: 2880)
!3404 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_retrans_collapse", scope: !3177, file: !3178, line: 149, baseType: !5, size: 32, offset: 2912)
!3405 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_stdurg", scope: !3177, file: !3178, line: 150, baseType: !5, size: 32, offset: 2944)
!3406 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_rfc1337", scope: !3177, file: !3178, line: 151, baseType: !5, size: 32, offset: 2976)
!3407 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_abort_on_overflow", scope: !3177, file: !3178, line: 152, baseType: !5, size: 32, offset: 3008)
!3408 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_fack", scope: !3177, file: !3178, line: 153, baseType: !5, size: 32, offset: 3040)
!3409 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_max_reordering", scope: !3177, file: !3178, line: 154, baseType: !5, size: 32, offset: 3072)
!3410 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_dsack", scope: !3177, file: !3178, line: 155, baseType: !5, size: 32, offset: 3104)
!3411 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_app_win", scope: !3177, file: !3178, line: 156, baseType: !5, size: 32, offset: 3136)
!3412 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_adv_win_scale", scope: !3177, file: !3178, line: 157, baseType: !5, size: 32, offset: 3168)
!3413 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_frto", scope: !3177, file: !3178, line: 158, baseType: !5, size: 32, offset: 3200)
!3414 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_nometrics_save", scope: !3177, file: !3178, line: 159, baseType: !5, size: 32, offset: 3232)
!3415 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_no_ssthresh_metrics_save", scope: !3177, file: !3178, line: 160, baseType: !5, size: 32, offset: 3264)
!3416 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_moderate_rcvbuf", scope: !3177, file: !3178, line: 161, baseType: !5, size: 32, offset: 3296)
!3417 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_tso_win_divisor", scope: !3177, file: !3178, line: 162, baseType: !5, size: 32, offset: 3328)
!3418 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_workaround_signed_windows", scope: !3177, file: !3178, line: 163, baseType: !5, size: 32, offset: 3360)
!3419 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_limit_output_bytes", scope: !3177, file: !3178, line: 164, baseType: !5, size: 32, offset: 3392)
!3420 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_challenge_ack_limit", scope: !3177, file: !3178, line: 165, baseType: !5, size: 32, offset: 3424)
!3421 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_min_tso_segs", scope: !3177, file: !3178, line: 166, baseType: !5, size: 32, offset: 3456)
!3422 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_min_rtt_wlen", scope: !3177, file: !3178, line: 167, baseType: !5, size: 32, offset: 3488)
!3423 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_autocorking", scope: !3177, file: !3178, line: 168, baseType: !5, size: 32, offset: 3520)
!3424 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_invalid_ratelimit", scope: !3177, file: !3178, line: 169, baseType: !5, size: 32, offset: 3552)
!3425 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_pacing_ss_ratio", scope: !3177, file: !3178, line: 170, baseType: !5, size: 32, offset: 3584)
!3426 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_pacing_ca_ratio", scope: !3177, file: !3178, line: 171, baseType: !5, size: 32, offset: 3616)
!3427 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_wmem", scope: !3177, file: !3178, line: 172, baseType: !3428, size: 96, offset: 3648)
!3428 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5, size: 96, elements: !1624)
!3429 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_rmem", scope: !3177, file: !3178, line: 173, baseType: !3428, size: 96, offset: 3744)
!3430 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_comp_sack_nr", scope: !3177, file: !3178, line: 174, baseType: !5, size: 32, offset: 3840)
!3431 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_comp_sack_delay_ns", scope: !3177, file: !3178, line: 175, baseType: !346, size: 64, offset: 3904)
!3432 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_comp_sack_slack_ns", scope: !3177, file: !3178, line: 176, baseType: !346, size: 64, offset: 3968)
!3433 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_death_row", scope: !3177, file: !3178, line: 177, baseType: !3434, size: 192, offset: 4032)
!3434 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inet_timewait_death_row", file: !3178, line: 34, size: 192, elements: !3435)
!3435 = !{!3436, !3437, !3440}
!3436 = !DIDerivedType(tag: DW_TAG_member, name: "tw_count", scope: !3434, file: !3178, line: 35, baseType: !417, size: 32)
!3437 = !DIDerivedType(tag: DW_TAG_member, name: "hashinfo", scope: !3434, file: !3178, line: 37, baseType: !3438, size: 64, offset: 64)
!3438 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3439, size: 64)
!3439 = !DICompositeType(tag: DW_TAG_structure_type, name: "inet_hashinfo", file: !3178, line: 32, flags: DIFlagFwdDecl)
!3440 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_max_tw_buckets", scope: !3434, file: !3178, line: 38, baseType: !5, size: 32, offset: 128)
!3441 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_max_syn_backlog", scope: !3177, file: !3178, line: 178, baseType: !5, size: 32, offset: 4224)
!3442 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_fastopen", scope: !3177, file: !3178, line: 179, baseType: !5, size: 32, offset: 4256)
!3443 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_congestion_control", scope: !3177, file: !3178, line: 180, baseType: !3444, size: 64, offset: 4288)
!3444 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3445, size: 64)
!3445 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3446)
!3446 = !DICompositeType(tag: DW_TAG_structure_type, name: "tcp_congestion_ops", file: !3178, line: 180, flags: DIFlagFwdDecl)
!3447 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_fastopen_ctx", scope: !3177, file: !3178, line: 181, baseType: !3448, size: 64, offset: 4352)
!3448 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3449, size: 64)
!3449 = !DICompositeType(tag: DW_TAG_structure_type, name: "tcp_fastopen_context", file: !3178, line: 41, flags: DIFlagFwdDecl)
!3450 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_fastopen_ctx_lock", scope: !3177, file: !3178, line: 182, baseType: !1702, offset: 4416)
!3451 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_fastopen_blackhole_timeout", scope: !3177, file: !3178, line: 183, baseType: !11, size: 32, offset: 4416)
!3452 = !DIDerivedType(tag: DW_TAG_member, name: "tfo_active_disable_times", scope: !3177, file: !3178, line: 184, baseType: !417, size: 32, offset: 4448)
!3453 = !DIDerivedType(tag: DW_TAG_member, name: "tfo_active_disable_stamp", scope: !3177, file: !3178, line: 185, baseType: !346, size: 64, offset: 4480)
!3454 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_reflect_tos", scope: !3177, file: !3178, line: 186, baseType: !5, size: 32, offset: 4544)
!3455 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_udp_wmem_min", scope: !3177, file: !3178, line: 188, baseType: !5, size: 32, offset: 4576)
!3456 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_udp_rmem_min", scope: !3177, file: !3178, line: 189, baseType: !5, size: 32, offset: 4608)
!3457 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_igmp_max_memberships", scope: !3177, file: !3178, line: 195, baseType: !5, size: 32, offset: 4640)
!3458 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_igmp_max_msf", scope: !3177, file: !3178, line: 196, baseType: !5, size: 32, offset: 4672)
!3459 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_igmp_llm_reports", scope: !3177, file: !3178, line: 197, baseType: !5, size: 32, offset: 4704)
!3460 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_igmp_qrv", scope: !3177, file: !3178, line: 198, baseType: !5, size: 32, offset: 4736)
!3461 = !DIDerivedType(tag: DW_TAG_member, name: "ping_group_range", scope: !3177, file: !3178, line: 200, baseType: !3462, size: 96, offset: 4768)
!3462 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ping_group_range", file: !3178, line: 27, size: 96, elements: !3463)
!3463 = !{!3464, !3465}
!3464 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3462, file: !3178, line: 28, baseType: !3355, size: 32)
!3465 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !3462, file: !3178, line: 29, baseType: !3466, size: 64, offset: 32)
!3466 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1423, size: 64, elements: !2695)
!3467 = !DIDerivedType(tag: DW_TAG_member, name: "dev_addr_genid", scope: !3177, file: !3178, line: 202, baseType: !417, size: 32, offset: 4864)
!3468 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_local_reserved_ports", scope: !3177, file: !3178, line: 205, baseType: !3469, size: 64, offset: 4928)
!3469 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !346, size: 64)
!3470 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_prot_sock", scope: !3177, file: !3178, line: 206, baseType: !5, size: 32, offset: 4992)
!3471 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_ops", scope: !3177, file: !3178, line: 222, baseType: !3472, size: 64, offset: 5056)
!3472 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3473, size: 64)
!3473 = !DICompositeType(tag: DW_TAG_structure_type, name: "fib_notifier_ops", file: !3178, line: 222, flags: DIFlagFwdDecl)
!3474 = !DIDerivedType(tag: DW_TAG_member, name: "fib_seq", scope: !3177, file: !3178, line: 223, baseType: !11, size: 32, offset: 5120)
!3475 = !DIDerivedType(tag: DW_TAG_member, name: "ipmr_notifier_ops", scope: !3177, file: !3178, line: 225, baseType: !3472, size: 64, offset: 5184)
!3476 = !DIDerivedType(tag: DW_TAG_member, name: "ipmr_seq", scope: !3177, file: !3178, line: 226, baseType: !11, size: 32, offset: 5248)
!3477 = !DIDerivedType(tag: DW_TAG_member, name: "rt_genid", scope: !3177, file: !3178, line: 228, baseType: !417, size: 32, offset: 5280)
!3478 = !DIDerivedType(tag: DW_TAG_member, name: "ip_id_key", scope: !3177, file: !3178, line: 229, baseType: !3479, size: 128, offset: 5312)
!3479 = !DIDerivedType(tag: DW_TAG_typedef, name: "siphash_key_t", file: !3480, line: 22, baseType: !3481)
!3480 = !DIFile(filename: "./include/linux/siphash.h", directory: "/home/lizy2001/genbc/linux")
!3481 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3480, line: 20, size: 128, elements: !3482)
!3482 = !{!3483}
!3483 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !3481, file: !3480, line: 21, baseType: !3484, size: 128)
!3484 = !DICompositeType(tag: DW_TAG_array_type, baseType: !365, size: 128, elements: !2695)
!3485 = !DIDerivedType(tag: DW_TAG_member, name: "ipv6", scope: !3014, file: !3015, line: 128, baseType: !3486, size: 4608, offset: 10176)
!3486 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_ipv6", file: !3487, line: 56, size: 4608, elements: !3488)
!3487 = !DIFile(filename: "./include/net/netns/ipv6.h", directory: "/home/lizy2001/genbc/linux")
!3488 = !{!3489, !3529, !3532, !3533, !3534, !3535, !3538, !3541, !3544, !3545, !3546, !3549, !3550, !3616, !3617, !3618, !3619, !3620, !3621, !3622, !3623, !3624, !3625, !3626, !3627, !3630, !3631, !3632, !3633}
!3489 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl", scope: !3486, file: !3487, line: 57, baseType: !3490, size: 1600)
!3490 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_sysctl_ipv6", file: !3487, line: 15, size: 1600, elements: !3491)
!3491 = !{!3492, !3493, !3494, !3495, !3496, !3497, !3498, !3499, !3500, !3501, !3502, !3503, !3504, !3505, !3506, !3507, !3508, !3509, !3510, !3511, !3512, !3513, !3515, !3516, !3517, !3518, !3519, !3520, !3521, !3522, !3523, !3524, !3525, !3526, !3527, !3528}
!3492 = !DIDerivedType(tag: DW_TAG_member, name: "hdr", scope: !3490, file: !3487, line: 17, baseType: !2934, size: 64)
!3493 = !DIDerivedType(tag: DW_TAG_member, name: "route_hdr", scope: !3490, file: !3487, line: 18, baseType: !2934, size: 64, offset: 64)
!3494 = !DIDerivedType(tag: DW_TAG_member, name: "icmp_hdr", scope: !3490, file: !3487, line: 19, baseType: !2934, size: 64, offset: 128)
!3495 = !DIDerivedType(tag: DW_TAG_member, name: "frags_hdr", scope: !3490, file: !3487, line: 20, baseType: !2934, size: 64, offset: 192)
!3496 = !DIDerivedType(tag: DW_TAG_member, name: "xfrm6_hdr", scope: !3490, file: !3487, line: 21, baseType: !2934, size: 64, offset: 256)
!3497 = !DIDerivedType(tag: DW_TAG_member, name: "bindv6only", scope: !3490, file: !3487, line: 23, baseType: !5, size: 32, offset: 320)
!3498 = !DIDerivedType(tag: DW_TAG_member, name: "flush_delay", scope: !3490, file: !3487, line: 24, baseType: !5, size: 32, offset: 352)
!3499 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_max_size", scope: !3490, file: !3487, line: 25, baseType: !5, size: 32, offset: 384)
!3500 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_gc_min_interval", scope: !3490, file: !3487, line: 26, baseType: !5, size: 32, offset: 416)
!3501 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_gc_timeout", scope: !3490, file: !3487, line: 27, baseType: !5, size: 32, offset: 448)
!3502 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_gc_interval", scope: !3490, file: !3487, line: 28, baseType: !5, size: 32, offset: 480)
!3503 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_gc_elasticity", scope: !3490, file: !3487, line: 29, baseType: !5, size: 32, offset: 512)
!3504 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_mtu_expires", scope: !3490, file: !3487, line: 30, baseType: !5, size: 32, offset: 544)
!3505 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_min_advmss", scope: !3490, file: !3487, line: 31, baseType: !5, size: 32, offset: 576)
!3506 = !DIDerivedType(tag: DW_TAG_member, name: "multipath_hash_policy", scope: !3490, file: !3487, line: 32, baseType: !5, size: 32, offset: 608)
!3507 = !DIDerivedType(tag: DW_TAG_member, name: "flowlabel_consistency", scope: !3490, file: !3487, line: 33, baseType: !5, size: 32, offset: 640)
!3508 = !DIDerivedType(tag: DW_TAG_member, name: "auto_flowlabels", scope: !3490, file: !3487, line: 34, baseType: !5, size: 32, offset: 672)
!3509 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6_time", scope: !3490, file: !3487, line: 35, baseType: !5, size: 32, offset: 704)
!3510 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6_echo_ignore_all", scope: !3490, file: !3487, line: 36, baseType: !5, size: 32, offset: 736)
!3511 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6_echo_ignore_multicast", scope: !3490, file: !3487, line: 37, baseType: !5, size: 32, offset: 768)
!3512 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6_echo_ignore_anycast", scope: !3490, file: !3487, line: 38, baseType: !5, size: 32, offset: 800)
!3513 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6_ratemask", scope: !3490, file: !3487, line: 39, baseType: !3514, size: 256, offset: 832)
!3514 = !DICompositeType(tag: DW_TAG_array_type, baseType: !346, size: 256, elements: !2304)
!3515 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6_ratemask_ptr", scope: !3490, file: !3487, line: 40, baseType: !3469, size: 64, offset: 1088)
!3516 = !DIDerivedType(tag: DW_TAG_member, name: "anycast_src_echo_reply", scope: !3490, file: !3487, line: 41, baseType: !5, size: 32, offset: 1152)
!3517 = !DIDerivedType(tag: DW_TAG_member, name: "ip_nonlocal_bind", scope: !3490, file: !3487, line: 42, baseType: !5, size: 32, offset: 1184)
!3518 = !DIDerivedType(tag: DW_TAG_member, name: "fwmark_reflect", scope: !3490, file: !3487, line: 43, baseType: !5, size: 32, offset: 1216)
!3519 = !DIDerivedType(tag: DW_TAG_member, name: "idgen_retries", scope: !3490, file: !3487, line: 44, baseType: !5, size: 32, offset: 1248)
!3520 = !DIDerivedType(tag: DW_TAG_member, name: "idgen_delay", scope: !3490, file: !3487, line: 45, baseType: !5, size: 32, offset: 1280)
!3521 = !DIDerivedType(tag: DW_TAG_member, name: "flowlabel_state_ranges", scope: !3490, file: !3487, line: 46, baseType: !5, size: 32, offset: 1312)
!3522 = !DIDerivedType(tag: DW_TAG_member, name: "flowlabel_reflect", scope: !3490, file: !3487, line: 47, baseType: !5, size: 32, offset: 1344)
!3523 = !DIDerivedType(tag: DW_TAG_member, name: "max_dst_opts_cnt", scope: !3490, file: !3487, line: 48, baseType: !5, size: 32, offset: 1376)
!3524 = !DIDerivedType(tag: DW_TAG_member, name: "max_hbh_opts_cnt", scope: !3490, file: !3487, line: 49, baseType: !5, size: 32, offset: 1408)
!3525 = !DIDerivedType(tag: DW_TAG_member, name: "max_dst_opts_len", scope: !3490, file: !3487, line: 50, baseType: !5, size: 32, offset: 1440)
!3526 = !DIDerivedType(tag: DW_TAG_member, name: "max_hbh_opts_len", scope: !3490, file: !3487, line: 51, baseType: !5, size: 32, offset: 1472)
!3527 = !DIDerivedType(tag: DW_TAG_member, name: "seg6_flowlabel", scope: !3490, file: !3487, line: 52, baseType: !5, size: 32, offset: 1504)
!3528 = !DIDerivedType(tag: DW_TAG_member, name: "skip_notify_on_dev_down", scope: !3490, file: !3487, line: 53, baseType: !805, size: 8, offset: 1536)
!3529 = !DIDerivedType(tag: DW_TAG_member, name: "devconf_all", scope: !3486, file: !3487, line: 58, baseType: !3530, size: 64, offset: 1600)
!3530 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3531, size: 64)
!3531 = !DICompositeType(tag: DW_TAG_structure_type, name: "ipv6_devconf", file: !3487, line: 58, flags: DIFlagFwdDecl)
!3532 = !DIDerivedType(tag: DW_TAG_member, name: "devconf_dflt", scope: !3486, file: !3487, line: 59, baseType: !3530, size: 64, offset: 1664)
!3533 = !DIDerivedType(tag: DW_TAG_member, name: "peers", scope: !3486, file: !3487, line: 60, baseType: !3201, size: 64, offset: 1728)
!3534 = !DIDerivedType(tag: DW_TAG_member, name: "fqdir", scope: !3486, file: !3487, line: 61, baseType: !3205, size: 64, offset: 1792)
!3535 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_null_entry", scope: !3486, file: !3487, line: 71, baseType: !3536, size: 64, offset: 1856)
!3536 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3537, size: 64)
!3537 = !DICompositeType(tag: DW_TAG_structure_type, name: "fib6_info", file: !3487, line: 71, flags: DIFlagFwdDecl)
!3538 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_null_entry", scope: !3486, file: !3487, line: 72, baseType: !3539, size: 64, offset: 1920)
!3539 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3540, size: 64)
!3540 = !DICompositeType(tag: DW_TAG_structure_type, name: "rt6_info", file: !3487, line: 72, flags: DIFlagFwdDecl)
!3541 = !DIDerivedType(tag: DW_TAG_member, name: "rt6_stats", scope: !3486, file: !3487, line: 73, baseType: !3542, size: 64, offset: 1984)
!3542 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3543, size: 64)
!3543 = !DICompositeType(tag: DW_TAG_structure_type, name: "rt6_statistics", file: !3487, line: 73, flags: DIFlagFwdDecl)
!3544 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_fib_timer", scope: !3486, file: !3487, line: 74, baseType: !3265, size: 320, offset: 2048)
!3545 = !DIDerivedType(tag: DW_TAG_member, name: "fib_table_hash", scope: !3486, file: !3487, line: 75, baseType: !3052, size: 64, offset: 2368)
!3546 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_main_tbl", scope: !3486, file: !3487, line: 76, baseType: !3547, size: 64, offset: 2432)
!3547 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3548, size: 64)
!3548 = !DICompositeType(tag: DW_TAG_structure_type, name: "fib6_table", file: !3487, line: 76, flags: DIFlagFwdDecl)
!3549 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_walkers", scope: !3486, file: !3487, line: 77, baseType: !318, size: 128, offset: 2496)
!3550 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_dst_ops", scope: !3486, file: !3487, line: 78, baseType: !3551, size: 1088, offset: 2624)
!3551 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dst_ops", file: !959, line: 15, size: 1088, elements: !3552)
!3552 = !{!3553, !3554, !3555, !3560, !3566, !3572, !3573, !3577, !3581, !3585, !3589, !3590, !3594, !3598, !3602, !3606, !3610, !3611}
!3553 = !DIDerivedType(tag: DW_TAG_member, name: "family", scope: !3551, file: !959, line: 16, baseType: !510, size: 16)
!3554 = !DIDerivedType(tag: DW_TAG_member, name: "gc_thresh", scope: !3551, file: !959, line: 17, baseType: !11, size: 32, offset: 32)
!3555 = !DIDerivedType(tag: DW_TAG_member, name: "gc", scope: !3551, file: !959, line: 19, baseType: !3556, size: 64, offset: 64)
!3556 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3557, size: 64)
!3557 = !DISubroutineType(types: !3558)
!3558 = !{!5, !3559}
!3559 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3551, size: 64)
!3560 = !DIDerivedType(tag: DW_TAG_member, name: "check", scope: !3551, file: !959, line: 20, baseType: !3561, size: 64, offset: 128)
!3561 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3562, size: 64)
!3562 = !DISubroutineType(types: !3563)
!3563 = !{!3564, !3564, !527}
!3564 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3565, size: 64)
!3565 = !DICompositeType(tag: DW_TAG_structure_type, name: "dst_entry", file: !451, line: 956, flags: DIFlagFwdDecl)
!3566 = !DIDerivedType(tag: DW_TAG_member, name: "default_advmss", scope: !3551, file: !959, line: 21, baseType: !3567, size: 64, offset: 192)
!3567 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3568, size: 64)
!3568 = !DISubroutineType(types: !3569)
!3569 = !{!11, !3570}
!3570 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3571, size: 64)
!3571 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3565)
!3572 = !DIDerivedType(tag: DW_TAG_member, name: "mtu", scope: !3551, file: !959, line: 22, baseType: !3567, size: 64, offset: 256)
!3573 = !DIDerivedType(tag: DW_TAG_member, name: "cow_metrics", scope: !3551, file: !959, line: 23, baseType: !3574, size: 64, offset: 320)
!3574 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3575, size: 64)
!3575 = !DISubroutineType(types: !3576)
!3576 = !{!2548, !3564, !346}
!3577 = !DIDerivedType(tag: DW_TAG_member, name: "destroy", scope: !3551, file: !959, line: 24, baseType: !3578, size: 64, offset: 384)
!3578 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3579, size: 64)
!3579 = !DISubroutineType(types: !3580)
!3580 = !{null, !3564}
!3581 = !DIDerivedType(tag: DW_TAG_member, name: "ifdown", scope: !3551, file: !959, line: 25, baseType: !3582, size: 64, offset: 448)
!3582 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3583, size: 64)
!3583 = !DISubroutineType(types: !3584)
!3584 = !{null, !3564, !324, !5}
!3585 = !DIDerivedType(tag: DW_TAG_member, name: "negative_advice", scope: !3551, file: !959, line: 27, baseType: !3586, size: 64, offset: 512)
!3586 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3587, size: 64)
!3587 = !DISubroutineType(types: !3588)
!3588 = !{!3564, !3564}
!3589 = !DIDerivedType(tag: DW_TAG_member, name: "link_failure", scope: !3551, file: !959, line: 28, baseType: !502, size: 64, offset: 576)
!3590 = !DIDerivedType(tag: DW_TAG_member, name: "update_pmtu", scope: !3551, file: !959, line: 29, baseType: !3591, size: 64, offset: 640)
!3591 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3592, size: 64)
!3592 = !DISubroutineType(types: !3593)
!3593 = !{null, !3564, !479, !449, !1021, !805}
!3594 = !DIDerivedType(tag: DW_TAG_member, name: "redirect", scope: !3551, file: !959, line: 32, baseType: !3595, size: 64, offset: 704)
!3595 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3596, size: 64)
!3596 = !DISubroutineType(types: !3597)
!3597 = !{null, !3564, !479, !449}
!3598 = !DIDerivedType(tag: DW_TAG_member, name: "local_out", scope: !3551, file: !959, line: 34, baseType: !3599, size: 64, offset: 768)
!3599 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3600, size: 64)
!3600 = !DISubroutineType(types: !3601)
!3601 = !{!5, !3013, !479, !449}
!3602 = !DIDerivedType(tag: DW_TAG_member, name: "neigh_lookup", scope: !3551, file: !959, line: 35, baseType: !3603, size: 64, offset: 832)
!3603 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3604, size: 64)
!3604 = !DISubroutineType(types: !3605)
!3605 = !{!957, !3570, !449, !3288}
!3606 = !DIDerivedType(tag: DW_TAG_member, name: "confirm_neigh", scope: !3551, file: !959, line: 38, baseType: !3607, size: 64, offset: 896)
!3607 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3608, size: 64)
!3608 = !DISubroutineType(types: !3609)
!3609 = !{null, !3570, !3288}
!3610 = !DIDerivedType(tag: DW_TAG_member, name: "kmem_cachep", scope: !3551, file: !959, line: 41, baseType: !2083, size: 64, offset: 960)
!3611 = !DIDerivedType(tag: DW_TAG_member, name: "pcpuc_entries", scope: !3551, file: !959, line: 43, baseType: !3612, size: 64, offset: 1024)
!3612 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_counter", file: !3613, line: 97, size: 64, elements: !3614)
!3613 = !DIFile(filename: "./include/linux/percpu_counter.h", directory: "/home/lizy2001/genbc/linux")
!3614 = !{!3615}
!3615 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3612, file: !3613, line: 98, baseType: !411, size: 64)
!3616 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_walker_lock", scope: !3486, file: !3487, line: 79, baseType: !1944, offset: 3712)
!3617 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_gc_lock", scope: !3486, file: !3487, line: 80, baseType: !1702, offset: 3712)
!3618 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_gc_expire", scope: !3486, file: !3487, line: 81, baseType: !11, size: 32, offset: 3712)
!3619 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_last_gc", scope: !3486, file: !3487, line: 82, baseType: !346, size: 64, offset: 3776)
!3620 = !DIDerivedType(tag: DW_TAG_member, name: "icmp_sk", scope: !3486, file: !3487, line: 94, baseType: !3198, size: 64, offset: 3840)
!3621 = !DIDerivedType(tag: DW_TAG_member, name: "ndisc_sk", scope: !3486, file: !3487, line: 95, baseType: !479, size: 64, offset: 3904)
!3622 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_sk", scope: !3486, file: !3487, line: 96, baseType: !479, size: 64, offset: 3968)
!3623 = !DIDerivedType(tag: DW_TAG_member, name: "igmp_sk", scope: !3486, file: !3487, line: 97, baseType: !479, size: 64, offset: 4032)
!3624 = !DIDerivedType(tag: DW_TAG_member, name: "mc_autojoin_sk", scope: !3486, file: !3487, line: 98, baseType: !479, size: 64, offset: 4096)
!3625 = !DIDerivedType(tag: DW_TAG_member, name: "dev_addr_genid", scope: !3486, file: !3487, line: 107, baseType: !417, size: 32, offset: 4160)
!3626 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_sernum", scope: !3486, file: !3487, line: 108, baseType: !417, size: 32, offset: 4192)
!3627 = !DIDerivedType(tag: DW_TAG_member, name: "seg6_data", scope: !3486, file: !3487, line: 109, baseType: !3628, size: 64, offset: 4224)
!3628 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3629, size: 64)
!3629 = !DICompositeType(tag: DW_TAG_structure_type, name: "seg6_pernet_data", file: !3487, line: 109, flags: DIFlagFwdDecl)
!3630 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_ops", scope: !3486, file: !3487, line: 110, baseType: !3472, size: 64, offset: 4288)
!3631 = !DIDerivedType(tag: DW_TAG_member, name: "ip6mr_notifier_ops", scope: !3486, file: !3487, line: 111, baseType: !3472, size: 64, offset: 4352)
!3632 = !DIDerivedType(tag: DW_TAG_member, name: "ipmr_seq", scope: !3486, file: !3487, line: 112, baseType: !11, size: 32, offset: 4416)
!3633 = !DIDerivedType(tag: DW_TAG_member, name: "ip6addrlbl_table", scope: !3486, file: !3487, line: 117, baseType: !3634, size: 128, offset: 4480)
!3634 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3486, file: !3487, line: 113, size: 128, elements: !3635)
!3635 = !{!3636, !3637, !3638}
!3636 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3634, file: !3487, line: 114, baseType: !1613, size: 64)
!3637 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3634, file: !3487, line: 115, baseType: !1702, offset: 64)
!3638 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !3634, file: !3487, line: 116, baseType: !1021, size: 32, offset: 64)
!3639 = !DIDerivedType(tag: DW_TAG_member, name: "wext_nlevents", scope: !3014, file: !3015, line: 162, baseType: !3640, size: 192, offset: 14784)
!3640 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sk_buff_head", file: !451, line: 291, size: 192, elements: !3641)
!3641 = !{!3642, !3643, !3644, !3645}
!3642 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3640, file: !451, line: 293, baseType: !449, size: 64)
!3643 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3640, file: !451, line: 294, baseType: !449, size: 64, offset: 64)
!3644 = !DIDerivedType(tag: DW_TAG_member, name: "qlen", scope: !3640, file: !451, line: 296, baseType: !527, size: 32, offset: 128)
!3645 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3640, file: !451, line: 297, baseType: !1702, offset: 160)
!3646 = !DIDerivedType(tag: DW_TAG_member, name: "gen", scope: !3014, file: !3015, line: 164, baseType: !3647, size: 64, offset: 14976)
!3647 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3648, size: 64)
!3648 = !DICompositeType(tag: DW_TAG_structure_type, name: "net_generic", file: !3015, line: 47, flags: DIFlagFwdDecl)
!3649 = !DIDerivedType(tag: DW_TAG_member, name: "bpf", scope: !3014, file: !3015, line: 167, baseType: !3650, size: 512, offset: 15040)
!3650 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_bpf", file: !3651, line: 14, size: 512, elements: !3652)
!3651 = !DIFile(filename: "./include/net/netns/bpf.h", directory: "/home/lizy2001/genbc/linux")
!3652 = !{!3653, !3668, !3670}
!3653 = !DIDerivedType(tag: DW_TAG_member, name: "run_array", scope: !3650, file: !3651, line: 16, baseType: !3654, size: 128)
!3654 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3655, size: 128, elements: !2695)
!3655 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3656, size: 64)
!3656 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_prog_array", file: !93, line: 1037, size: 128, elements: !3657)
!3657 = !{!3658, !3659}
!3658 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !3656, file: !93, line: 1038, baseType: !333, size: 128, align: 64)
!3659 = !DIDerivedType(tag: DW_TAG_member, name: "items", scope: !3656, file: !93, line: 1039, baseType: !3660, offset: 128)
!3660 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3661, elements: !343)
!3661 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_prog_array_item", file: !93, line: 1032, size: 192, elements: !3662)
!3662 = !{!3663, !3664}
!3663 = !DIDerivedType(tag: DW_TAG_member, name: "prog", scope: !3661, file: !93, line: 1033, baseType: !1122, size: 64)
!3664 = !DIDerivedType(tag: DW_TAG_member, name: "cgroup_storage", scope: !3661, file: !93, line: 1034, baseType: !3665, size: 128, offset: 64)
!3665 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3666, size: 128, elements: !2695)
!3666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3667, size: 64)
!3667 = !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_cgroup_storage", file: !93, line: 1034, flags: DIFlagFwdDecl)
!3668 = !DIDerivedType(tag: DW_TAG_member, name: "progs", scope: !3650, file: !3651, line: 17, baseType: !3669, size: 128, offset: 128)
!3669 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1122, size: 128, elements: !2695)
!3670 = !DIDerivedType(tag: DW_TAG_member, name: "links", scope: !3650, file: !3651, line: 18, baseType: !3671, size: 256, offset: 256)
!3671 = !DICompositeType(tag: DW_TAG_array_type, baseType: !318, size: 256, elements: !2695)
!3672 = !DIDerivedType(tag: DW_TAG_member, name: "net_cookie", scope: !3014, file: !3015, line: 174, baseType: !407, size: 64, offset: 15552)
!3673 = !DIDerivedType(tag: DW_TAG_member, name: "can", scope: !3014, file: !3015, line: 183, baseType: !3674, size: 1216, offset: 15616)
!3674 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_can", file: !3675, line: 15, size: 1216, elements: !3676)
!3675 = !DIFile(filename: "./include/net/netns/can.h", directory: "/home/lizy2001/genbc/linux")
!3676 = !{!3677, !3678, !3679, !3680, !3681, !3682, !3683, !3684, !3685, !3686, !3687, !3690, !3691, !3692, !3695, !3698}
!3677 = !DIDerivedType(tag: DW_TAG_member, name: "proc_dir", scope: !3674, file: !3675, line: 17, baseType: !3041, size: 64)
!3678 = !DIDerivedType(tag: DW_TAG_member, name: "pde_stats", scope: !3674, file: !3675, line: 18, baseType: !3041, size: 64, offset: 64)
!3679 = !DIDerivedType(tag: DW_TAG_member, name: "pde_reset_stats", scope: !3674, file: !3675, line: 19, baseType: !3041, size: 64, offset: 128)
!3680 = !DIDerivedType(tag: DW_TAG_member, name: "pde_rcvlist_all", scope: !3674, file: !3675, line: 20, baseType: !3041, size: 64, offset: 192)
!3681 = !DIDerivedType(tag: DW_TAG_member, name: "pde_rcvlist_fil", scope: !3674, file: !3675, line: 21, baseType: !3041, size: 64, offset: 256)
!3682 = !DIDerivedType(tag: DW_TAG_member, name: "pde_rcvlist_inv", scope: !3674, file: !3675, line: 22, baseType: !3041, size: 64, offset: 320)
!3683 = !DIDerivedType(tag: DW_TAG_member, name: "pde_rcvlist_sff", scope: !3674, file: !3675, line: 23, baseType: !3041, size: 64, offset: 384)
!3684 = !DIDerivedType(tag: DW_TAG_member, name: "pde_rcvlist_eff", scope: !3674, file: !3675, line: 24, baseType: !3041, size: 64, offset: 448)
!3685 = !DIDerivedType(tag: DW_TAG_member, name: "pde_rcvlist_err", scope: !3674, file: !3675, line: 25, baseType: !3041, size: 64, offset: 512)
!3686 = !DIDerivedType(tag: DW_TAG_member, name: "bcmproc_dir", scope: !3674, file: !3675, line: 26, baseType: !3041, size: 64, offset: 576)
!3687 = !DIDerivedType(tag: DW_TAG_member, name: "rx_alldev_list", scope: !3674, file: !3675, line: 30, baseType: !3688, size: 64, offset: 640)
!3688 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3689, size: 64)
!3689 = !DICompositeType(tag: DW_TAG_structure_type, name: "can_dev_rcv_lists", file: !3675, line: 11, flags: DIFlagFwdDecl)
!3690 = !DIDerivedType(tag: DW_TAG_member, name: "rcvlists_lock", scope: !3674, file: !3675, line: 31, baseType: !1702, offset: 704)
!3691 = !DIDerivedType(tag: DW_TAG_member, name: "stattimer", scope: !3674, file: !3675, line: 32, baseType: !3265, size: 320, offset: 704)
!3692 = !DIDerivedType(tag: DW_TAG_member, name: "pkg_stats", scope: !3674, file: !3675, line: 33, baseType: !3693, size: 64, offset: 1024)
!3693 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3694, size: 64)
!3694 = !DICompositeType(tag: DW_TAG_structure_type, name: "can_pkg_stats", file: !3675, line: 12, flags: DIFlagFwdDecl)
!3695 = !DIDerivedType(tag: DW_TAG_member, name: "rcv_lists_stats", scope: !3674, file: !3675, line: 34, baseType: !3696, size: 64, offset: 1088)
!3696 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3697, size: 64)
!3697 = !DICompositeType(tag: DW_TAG_structure_type, name: "can_rcv_lists_stats", file: !3675, line: 13, flags: DIFlagFwdDecl)
!3698 = !DIDerivedType(tag: DW_TAG_member, name: "cgw_list", scope: !3674, file: !3675, line: 37, baseType: !1613, size: 64, offset: 1152)
!3699 = !DIDerivedType(tag: DW_TAG_member, name: "diag_nlsk", scope: !3014, file: !3015, line: 191, baseType: !479, size: 64, offset: 16832)
!3700 = !DIDerivedType(tag: DW_TAG_member, name: "time_ns", scope: !2998, file: !2999, line: 38, baseType: !3701, size: 64, offset: 384)
!3701 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3702, size: 64)
!3702 = !DICompositeType(tag: DW_TAG_structure_type, name: "time_namespace", file: !2999, line: 38, flags: DIFlagFwdDecl)
!3703 = !DIDerivedType(tag: DW_TAG_member, name: "time_ns_for_children", scope: !2998, file: !2999, line: 39, baseType: !3701, size: 64, offset: 448)
!3704 = !DIDerivedType(tag: DW_TAG_member, name: "cgroup_ns", scope: !2998, file: !2999, line: 40, baseType: !3705, size: 64, offset: 512)
!3705 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3706, size: 64)
!3706 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cgroup_namespace", file: !3707, line: 856, size: 448, elements: !3708)
!3707 = !DIFile(filename: "./include/linux/cgroup.h", directory: "/home/lizy2001/genbc/linux")
!3708 = !{!3709, !3710, !3711, !3712, !3713}
!3709 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3706, file: !3707, line: 857, baseType: !602, size: 32)
!3710 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !3706, file: !3707, line: 858, baseType: !2846, size: 192, offset: 64)
!3711 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !3706, file: !3707, line: 859, baseType: !2812, size: 64, offset: 256)
!3712 = !DIDerivedType(tag: DW_TAG_member, name: "ucounts", scope: !3706, file: !3707, line: 860, baseType: !2954, size: 64, offset: 320)
!3713 = !DIDerivedType(tag: DW_TAG_member, name: "root_cset", scope: !3706, file: !3707, line: 861, baseType: !3714, size: 64, offset: 384)
!3714 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3715, size: 64)
!3715 = !DICompositeType(tag: DW_TAG_structure_type, name: "css_set", file: !3716, line: 16, flags: DIFlagFwdDecl)
!3716 = !DIFile(filename: "./include/linux/sched/task.h", directory: "/home/lizy2001/genbc/linux")
!3717 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !2359, file: !2360, line: 969, baseType: !3718, size: 64, offset: 9216)
!3718 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3719, size: 64)
!3719 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "signal_struct", file: !3720, line: 82, size: 7296, elements: !3721)
!3720 = !DIFile(filename: "./include/linux/sched/signal.h", directory: "/home/lizy2001/genbc/linux")
!3721 = !{!3722, !3723, !3724, !3725, !3726, !3727, !3728, !3739, !3740, !3741, !3742, !3743, !3744, !3745, !3746, !3747, !3748, !3749, !3750, !3751, !3757, !3766, !3767, !3769, !3770, !3771, !3774, !3775, !3776, !3777, !3778, !3779, !3780, !3781, !3782, !3783, !3784, !3785, !3786, !3787, !3788, !3789, !3790, !3791, !3792, !3793, !3794, !3795, !3796, !3799, !3800, !3807, !3808, !3809, !3810, !3811, !3812}
!3722 = !DIDerivedType(tag: DW_TAG_member, name: "sigcnt", scope: !3719, file: !3720, line: 83, baseType: !602, size: 32)
!3723 = !DIDerivedType(tag: DW_TAG_member, name: "live", scope: !3719, file: !3720, line: 84, baseType: !417, size: 32, offset: 32)
!3724 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !3719, file: !3720, line: 85, baseType: !5, size: 32, offset: 64)
!3725 = !DIDerivedType(tag: DW_TAG_member, name: "thread_head", scope: !3719, file: !3720, line: 86, baseType: !318, size: 128, offset: 128)
!3726 = !DIDerivedType(tag: DW_TAG_member, name: "wait_chldexit", scope: !3719, file: !3720, line: 88, baseType: !1921, size: 128, offset: 256)
!3727 = !DIDerivedType(tag: DW_TAG_member, name: "curr_target", scope: !3719, file: !3720, line: 91, baseType: !2358, size: 64, offset: 384)
!3728 = !DIDerivedType(tag: DW_TAG_member, name: "shared_pending", scope: !3719, file: !3720, line: 94, baseType: !3729, size: 192, offset: 448)
!3729 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigpending", file: !3730, line: 30, size: 192, elements: !3731)
!3730 = !DIFile(filename: "./include/linux/signal_types.h", directory: "/home/lizy2001/genbc/linux")
!3731 = !{!3732, !3733}
!3732 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3729, file: !3730, line: 31, baseType: !318, size: 128)
!3733 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !3729, file: !3730, line: 32, baseType: !3734, size: 64, offset: 128)
!3734 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigset_t", file: !3735, line: 25, baseType: !3736)
!3735 = !DIFile(filename: "./arch/x86/include/asm/signal.h", directory: "/home/lizy2001/genbc/linux")
!3736 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3735, line: 23, size: 64, elements: !3737)
!3737 = !{!3738}
!3738 = !DIDerivedType(tag: DW_TAG_member, name: "sig", scope: !3736, file: !3735, line: 24, baseType: !2503, size: 64)
!3739 = !DIDerivedType(tag: DW_TAG_member, name: "multiprocess", scope: !3719, file: !3720, line: 97, baseType: !1613, size: 64, offset: 640)
!3740 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_code", scope: !3719, file: !3720, line: 100, baseType: !5, size: 32, offset: 704)
!3741 = !DIDerivedType(tag: DW_TAG_member, name: "notify_count", scope: !3719, file: !3720, line: 106, baseType: !5, size: 32, offset: 736)
!3742 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_task", scope: !3719, file: !3720, line: 107, baseType: !2358, size: 64, offset: 768)
!3743 = !DIDerivedType(tag: DW_TAG_member, name: "group_stop_count", scope: !3719, file: !3720, line: 110, baseType: !5, size: 32, offset: 832)
!3744 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3719, file: !3720, line: 111, baseType: !11, size: 32, offset: 864)
!3745 = !DIDerivedType(tag: DW_TAG_member, name: "is_child_subreaper", scope: !3719, file: !3720, line: 122, baseType: !11, size: 1, offset: 896, flags: DIFlagBitField, extraData: i64 896)
!3746 = !DIDerivedType(tag: DW_TAG_member, name: "has_child_subreaper", scope: !3719, file: !3720, line: 123, baseType: !11, size: 1, offset: 897, flags: DIFlagBitField, extraData: i64 896)
!3747 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timer_id", scope: !3719, file: !3720, line: 128, baseType: !5, size: 32, offset: 928)
!3748 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timers", scope: !3719, file: !3720, line: 129, baseType: !318, size: 128, offset: 960)
!3749 = !DIDerivedType(tag: DW_TAG_member, name: "real_timer", scope: !3719, file: !3720, line: 132, baseType: !2429, size: 512, offset: 1088)
!3750 = !DIDerivedType(tag: DW_TAG_member, name: "it_real_incr", scope: !3719, file: !3720, line: 133, baseType: !487, size: 64, offset: 1600)
!3751 = !DIDerivedType(tag: DW_TAG_member, name: "it", scope: !3719, file: !3720, line: 140, baseType: !3752, size: 256, offset: 1664)
!3752 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3753, size: 256, elements: !2695)
!3753 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpu_itimer", file: !3720, line: 38, size: 128, elements: !3754)
!3754 = !{!3755, !3756}
!3755 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !3753, file: !3720, line: 39, baseType: !365, size: 64)
!3756 = !DIDerivedType(tag: DW_TAG_member, name: "incr", scope: !3753, file: !3720, line: 40, baseType: !365, size: 64, offset: 64)
!3757 = !DIDerivedType(tag: DW_TAG_member, name: "cputimer", scope: !3719, file: !3720, line: 146, baseType: !3758, size: 192, offset: 1920)
!3758 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_group_cputimer", file: !3720, line: 66, size: 192, elements: !3759)
!3759 = !{!3760}
!3760 = !DIDerivedType(tag: DW_TAG_member, name: "cputime_atomic", scope: !3758, file: !3720, line: 67, baseType: !3761, size: 192)
!3761 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_cputime_atomic", file: !3720, line: 47, size: 192, elements: !3762)
!3762 = !{!3763, !3764, !3765}
!3763 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !3761, file: !3720, line: 48, baseType: !407, size: 64)
!3764 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !3761, file: !3720, line: 49, baseType: !407, size: 64, offset: 64)
!3765 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !3761, file: !3720, line: 50, baseType: !407, size: 64, offset: 128)
!3766 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !3719, file: !3720, line: 150, baseType: !2656, size: 640, offset: 2112)
!3767 = !DIDerivedType(tag: DW_TAG_member, name: "pids", scope: !3719, file: !3720, line: 153, baseType: !3768, size: 256, offset: 2752)
!3768 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2603, size: 256, elements: !2304)
!3769 = !DIDerivedType(tag: DW_TAG_member, name: "tty_old_pgrp", scope: !3719, file: !3720, line: 159, baseType: !2603, size: 64, offset: 3008)
!3770 = !DIDerivedType(tag: DW_TAG_member, name: "leader", scope: !3719, file: !3720, line: 162, baseType: !5, size: 32, offset: 3072)
!3771 = !DIDerivedType(tag: DW_TAG_member, name: "tty", scope: !3719, file: !3720, line: 164, baseType: !3772, size: 64, offset: 3136)
!3772 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3773, size: 64)
!3773 = !DICompositeType(tag: DW_TAG_structure_type, name: "tty_struct", file: !3720, line: 164, flags: DIFlagFwdDecl)
!3774 = !DIDerivedType(tag: DW_TAG_member, name: "stats_lock", scope: !3719, file: !3720, line: 175, baseType: !3355, size: 32, offset: 3200)
!3775 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !3719, file: !3720, line: 176, baseType: !365, size: 64, offset: 3264)
!3776 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !3719, file: !3720, line: 176, baseType: !365, size: 64, offset: 3328)
!3777 = !DIDerivedType(tag: DW_TAG_member, name: "cutime", scope: !3719, file: !3720, line: 176, baseType: !365, size: 64, offset: 3392)
!3778 = !DIDerivedType(tag: DW_TAG_member, name: "cstime", scope: !3719, file: !3720, line: 176, baseType: !365, size: 64, offset: 3456)
!3779 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !3719, file: !3720, line: 177, baseType: !365, size: 64, offset: 3520)
!3780 = !DIDerivedType(tag: DW_TAG_member, name: "cgtime", scope: !3719, file: !3720, line: 178, baseType: !365, size: 64, offset: 3584)
!3781 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !3719, file: !3720, line: 179, baseType: !2644, size: 128, offset: 3648)
!3782 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !3719, file: !3720, line: 180, baseType: !346, size: 64, offset: 3776)
!3783 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !3719, file: !3720, line: 180, baseType: !346, size: 64, offset: 3840)
!3784 = !DIDerivedType(tag: DW_TAG_member, name: "cnvcsw", scope: !3719, file: !3720, line: 180, baseType: !346, size: 64, offset: 3904)
!3785 = !DIDerivedType(tag: DW_TAG_member, name: "cnivcsw", scope: !3719, file: !3720, line: 180, baseType: !346, size: 64, offset: 3968)
!3786 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !3719, file: !3720, line: 181, baseType: !346, size: 64, offset: 4032)
!3787 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !3719, file: !3720, line: 181, baseType: !346, size: 64, offset: 4096)
!3788 = !DIDerivedType(tag: DW_TAG_member, name: "cmin_flt", scope: !3719, file: !3720, line: 181, baseType: !346, size: 64, offset: 4160)
!3789 = !DIDerivedType(tag: DW_TAG_member, name: "cmaj_flt", scope: !3719, file: !3720, line: 181, baseType: !346, size: 64, offset: 4224)
!3790 = !DIDerivedType(tag: DW_TAG_member, name: "inblock", scope: !3719, file: !3720, line: 182, baseType: !346, size: 64, offset: 4288)
!3791 = !DIDerivedType(tag: DW_TAG_member, name: "oublock", scope: !3719, file: !3720, line: 182, baseType: !346, size: 64, offset: 4352)
!3792 = !DIDerivedType(tag: DW_TAG_member, name: "cinblock", scope: !3719, file: !3720, line: 182, baseType: !346, size: 64, offset: 4416)
!3793 = !DIDerivedType(tag: DW_TAG_member, name: "coublock", scope: !3719, file: !3720, line: 182, baseType: !346, size: 64, offset: 4480)
!3794 = !DIDerivedType(tag: DW_TAG_member, name: "maxrss", scope: !3719, file: !3720, line: 183, baseType: !346, size: 64, offset: 4544)
!3795 = !DIDerivedType(tag: DW_TAG_member, name: "cmaxrss", scope: !3719, file: !3720, line: 183, baseType: !346, size: 64, offset: 4608)
!3796 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !3719, file: !3720, line: 184, baseType: !3797, offset: 4672)
!3797 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_io_accounting", file: !3798, line: 12, elements: !1619)
!3798 = !DIFile(filename: "./include/linux/task_io_accounting.h", directory: "/home/lizy2001/genbc/linux")
!3799 = !DIDerivedType(tag: DW_TAG_member, name: "sum_sched_runtime", scope: !3719, file: !3720, line: 192, baseType: !369, size: 64, offset: 4672)
!3800 = !DIDerivedType(tag: DW_TAG_member, name: "rlim", scope: !3719, file: !3720, line: 203, baseType: !3801, size: 2048, offset: 4736)
!3801 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3802, size: 2048, elements: !303)
!3802 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rlimit", file: !3803, line: 43, size: 128, elements: !3804)
!3803 = !DIFile(filename: "./include/uapi/linux/resource.h", directory: "/home/lizy2001/genbc/linux")
!3804 = !{!3805, !3806}
!3805 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_cur", scope: !3802, file: !3803, line: 44, baseType: !1076, size: 64)
!3806 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_max", scope: !3802, file: !3803, line: 45, baseType: !1076, size: 64, offset: 64)
!3807 = !DIDerivedType(tag: DW_TAG_member, name: "oom_flag_origin", scope: !3719, file: !3720, line: 220, baseType: !805, size: 8, offset: 6784)
!3808 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj", scope: !3719, file: !3720, line: 221, baseType: !659, size: 16, offset: 6800)
!3809 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj_min", scope: !3719, file: !3720, line: 222, baseType: !659, size: 16, offset: 6816)
!3810 = !DIDerivedType(tag: DW_TAG_member, name: "oom_mm", scope: !3719, file: !3720, line: 224, baseType: !2123, size: 64, offset: 6848)
!3811 = !DIDerivedType(tag: DW_TAG_member, name: "cred_guard_mutex", scope: !3719, file: !3720, line: 227, baseType: !1697, size: 192, offset: 6912)
!3812 = !DIDerivedType(tag: DW_TAG_member, name: "exec_update_mutex", scope: !3719, file: !3720, line: 233, baseType: !1697, size: 192, offset: 7104)
!3813 = !DIDerivedType(tag: DW_TAG_member, name: "sighand", scope: !2359, file: !2360, line: 970, baseType: !3814, size: 64, offset: 9280)
!3814 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3815, size: 64)
!3815 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sighand_struct", file: !3720, line: 20, size: 16576, elements: !3816)
!3816 = !{!3817, !3818, !3819, !3820}
!3817 = !DIDerivedType(tag: DW_TAG_member, name: "siglock", scope: !3815, file: !3720, line: 21, baseType: !1702)
!3818 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3815, file: !3720, line: 22, baseType: !602, size: 32)
!3819 = !DIDerivedType(tag: DW_TAG_member, name: "signalfd_wqh", scope: !3815, file: !3720, line: 23, baseType: !1921, size: 128, offset: 64)
!3820 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !3815, file: !3720, line: 24, baseType: !3821, size: 16384, offset: 192)
!3821 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3822, size: 16384, elements: !3842)
!3822 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_sigaction", file: !3730, line: 49, size: 256, elements: !3823)
!3823 = !{!3824}
!3824 = !DIDerivedType(tag: DW_TAG_member, name: "sa", scope: !3822, file: !3730, line: 50, baseType: !3825, size: 256)
!3825 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigaction", file: !3730, line: 35, size: 256, elements: !3826)
!3826 = !{!3827, !3834, !3835, !3841}
!3827 = !DIDerivedType(tag: DW_TAG_member, name: "sa_handler", scope: !3825, file: !3730, line: 37, baseType: !3828, size: 64)
!3828 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sighandler_t", file: !3829, line: 19, baseType: !3830)
!3829 = !DIFile(filename: "./include/uapi/asm-generic/signal-defs.h", directory: "/home/lizy2001/genbc/linux")
!3830 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3831, size: 64)
!3831 = !DIDerivedType(tag: DW_TAG_typedef, name: "__signalfn_t", file: !3829, line: 18, baseType: !3832)
!3832 = !DISubroutineType(types: !3833)
!3833 = !{null, !5}
!3834 = !DIDerivedType(tag: DW_TAG_member, name: "sa_flags", scope: !3825, file: !3730, line: 38, baseType: !346, size: 64, offset: 64)
!3835 = !DIDerivedType(tag: DW_TAG_member, name: "sa_restorer", scope: !3825, file: !3730, line: 44, baseType: !3836, size: 64, offset: 128)
!3836 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sigrestore_t", file: !3829, line: 22, baseType: !3837)
!3837 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3838, size: 64)
!3838 = !DIDerivedType(tag: DW_TAG_typedef, name: "__restorefn_t", file: !3829, line: 21, baseType: !3839)
!3839 = !DISubroutineType(types: !3840)
!3840 = !{null}
!3841 = !DIDerivedType(tag: DW_TAG_member, name: "sa_mask", scope: !3825, file: !3730, line: 46, baseType: !3734, size: 64, offset: 192)
!3842 = !{!3843}
!3843 = !DISubrange(count: 64)
!3844 = !DIDerivedType(tag: DW_TAG_member, name: "blocked", scope: !2359, file: !2360, line: 971, baseType: !3734, size: 64, offset: 9344)
!3845 = !DIDerivedType(tag: DW_TAG_member, name: "real_blocked", scope: !2359, file: !2360, line: 972, baseType: !3734, size: 64, offset: 9408)
!3846 = !DIDerivedType(tag: DW_TAG_member, name: "saved_sigmask", scope: !2359, file: !2360, line: 974, baseType: !3734, size: 64, offset: 9472)
!3847 = !DIDerivedType(tag: DW_TAG_member, name: "pending", scope: !2359, file: !2360, line: 975, baseType: !3729, size: 192, offset: 9536)
!3848 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_sp", scope: !2359, file: !2360, line: 976, baseType: !346, size: 64, offset: 9728)
!3849 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_size", scope: !2359, file: !2360, line: 977, baseType: !1073, size: 64, offset: 9792)
!3850 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_flags", scope: !2359, file: !2360, line: 978, baseType: !11, size: 32, offset: 9856)
!3851 = !DIDerivedType(tag: DW_TAG_member, name: "task_works", scope: !2359, file: !2360, line: 980, baseType: !336, size: 64, offset: 9920)
!3852 = !DIDerivedType(tag: DW_TAG_member, name: "seccomp", scope: !2359, file: !2360, line: 989, baseType: !3853, size: 128, offset: 9984)
!3853 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp", file: !3854, line: 35, size: 128, elements: !3855)
!3854 = !DIFile(filename: "./include/linux/seccomp.h", directory: "/home/lizy2001/genbc/linux")
!3855 = !{!3856, !3857, !3858}
!3856 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !3853, file: !3854, line: 36, baseType: !5, size: 32)
!3857 = !DIDerivedType(tag: DW_TAG_member, name: "filter_count", scope: !3853, file: !3854, line: 37, baseType: !417, size: 32, offset: 32)
!3858 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !3853, file: !3854, line: 38, baseType: !3859, size: 64, offset: 64)
!3859 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3860, size: 64)
!3860 = !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp_filter", file: !3854, line: 23, flags: DIFlagFwdDecl)
!3861 = !DIDerivedType(tag: DW_TAG_member, name: "parent_exec_id", scope: !2359, file: !2360, line: 992, baseType: !365, size: 64, offset: 10112)
!3862 = !DIDerivedType(tag: DW_TAG_member, name: "self_exec_id", scope: !2359, file: !2360, line: 993, baseType: !365, size: 64, offset: 10176)
!3863 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_lock", scope: !2359, file: !2360, line: 996, baseType: !1702, offset: 10240)
!3864 = !DIDerivedType(tag: DW_TAG_member, name: "pi_lock", scope: !2359, file: !2360, line: 999, baseType: !1793, offset: 10240)
!3865 = !DIDerivedType(tag: DW_TAG_member, name: "wake_q", scope: !2359, file: !2360, line: 1001, baseType: !3866, size: 64, offset: 10240)
!3866 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wake_q_node", file: !2360, line: 636, size: 64, elements: !3867)
!3867 = !{!3868}
!3868 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3866, file: !2360, line: 637, baseType: !3869, size: 64)
!3869 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3866, size: 64)
!3870 = !DIDerivedType(tag: DW_TAG_member, name: "pi_waiters", scope: !2359, file: !2360, line: 1005, baseType: !1779, size: 128, offset: 10304)
!3871 = !DIDerivedType(tag: DW_TAG_member, name: "pi_top_task", scope: !2359, file: !2360, line: 1007, baseType: !2358, size: 64, offset: 10432)
!3872 = !DIDerivedType(tag: DW_TAG_member, name: "pi_blocked_on", scope: !2359, file: !2360, line: 1009, baseType: !3873, size: 64, offset: 10496)
!3873 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3874, size: 64)
!3874 = !DICompositeType(tag: DW_TAG_structure_type, name: "rt_mutex_waiter", file: !2360, line: 1009, flags: DIFlagFwdDecl)
!3875 = !DIDerivedType(tag: DW_TAG_member, name: "journal_info", scope: !2359, file: !2360, line: 1043, baseType: !625, size: 64, offset: 10560)
!3876 = !DIDerivedType(tag: DW_TAG_member, name: "bio_list", scope: !2359, file: !2360, line: 1046, baseType: !3877, size: 64, offset: 10624)
!3877 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3878, size: 64)
!3878 = !DICompositeType(tag: DW_TAG_structure_type, name: "bio_list", file: !2360, line: 41, flags: DIFlagFwdDecl)
!3879 = !DIDerivedType(tag: DW_TAG_member, name: "plug", scope: !2359, file: !2360, line: 1050, baseType: !3880, size: 64, offset: 10688)
!3880 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3881, size: 64)
!3881 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_plug", file: !2360, line: 42, flags: DIFlagFwdDecl)
!3882 = !DIDerivedType(tag: DW_TAG_member, name: "reclaim_state", scope: !2359, file: !2360, line: 1054, baseType: !3883, size: 64, offset: 10752)
!3883 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3884, size: 64)
!3884 = !DICompositeType(tag: DW_TAG_structure_type, name: "reclaim_state", file: !2360, line: 55, flags: DIFlagFwdDecl)
!3885 = !DIDerivedType(tag: DW_TAG_member, name: "backing_dev_info", scope: !2359, file: !2360, line: 1056, baseType: !3886, size: 64, offset: 10816)
!3886 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3887, size: 64)
!3887 = !DICompositeType(tag: DW_TAG_structure_type, name: "backing_dev_info", file: !2360, line: 40, flags: DIFlagFwdDecl)
!3888 = !DIDerivedType(tag: DW_TAG_member, name: "io_context", scope: !2359, file: !2360, line: 1058, baseType: !3889, size: 64, offset: 10880)
!3889 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3890, size: 64)
!3890 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_context", file: !3891, line: 99, size: 704, elements: !3892)
!3891 = !DIFile(filename: "./include/linux/iocontext.h", directory: "/home/lizy2001/genbc/linux")
!3892 = !{!3893, !3894, !3895, !3896, !3897, !3898, !3899, !3918, !3919}
!3893 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !3890, file: !3891, line: 100, baseType: !405, size: 64)
!3894 = !DIDerivedType(tag: DW_TAG_member, name: "active_ref", scope: !3890, file: !3891, line: 101, baseType: !417, size: 32, offset: 64)
!3895 = !DIDerivedType(tag: DW_TAG_member, name: "nr_tasks", scope: !3890, file: !3891, line: 102, baseType: !417, size: 32, offset: 96)
!3896 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3890, file: !3891, line: 105, baseType: !1702, offset: 128)
!3897 = !DIDerivedType(tag: DW_TAG_member, name: "ioprio", scope: !3890, file: !3891, line: 107, baseType: !510, size: 16, offset: 128)
!3898 = !DIDerivedType(tag: DW_TAG_member, name: "icq_tree", scope: !3890, file: !3891, line: 109, baseType: !1769, size: 128, offset: 192)
!3899 = !DIDerivedType(tag: DW_TAG_member, name: "icq_hint", scope: !3890, file: !3891, line: 110, baseType: !3900, size: 64, offset: 320)
!3900 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3901, size: 64)
!3901 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_cq", file: !3891, line: 73, size: 448, elements: !3902)
!3902 = !{!3903, !3906, !3907, !3912, !3917}
!3903 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !3901, file: !3891, line: 74, baseType: !3904, size: 64)
!3904 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3905, size: 64)
!3905 = !DICompositeType(tag: DW_TAG_structure_type, name: "request_queue", file: !3891, line: 74, flags: DIFlagFwdDecl)
!3906 = !DIDerivedType(tag: DW_TAG_member, name: "ioc", scope: !3901, file: !3891, line: 75, baseType: !3889, size: 64, offset: 64)
!3907 = !DIDerivedType(tag: DW_TAG_member, scope: !3901, file: !3891, line: 83, baseType: !3908, size: 128, offset: 128)
!3908 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3901, file: !3891, line: 83, size: 128, elements: !3909)
!3909 = !{!3910, !3911}
!3910 = !DIDerivedType(tag: DW_TAG_member, name: "q_node", scope: !3908, file: !3891, line: 84, baseType: !318, size: 128)
!3911 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_icq_cache", scope: !3908, file: !3891, line: 85, baseType: !2083, size: 64)
!3912 = !DIDerivedType(tag: DW_TAG_member, scope: !3901, file: !3891, line: 87, baseType: !3913, size: 128, offset: 256)
!3913 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3901, file: !3891, line: 87, size: 128, elements: !3914)
!3914 = !{!3915, !3916}
!3915 = !DIDerivedType(tag: DW_TAG_member, name: "ioc_node", scope: !3913, file: !3891, line: 88, baseType: !310, size: 128)
!3916 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_head", scope: !3913, file: !3891, line: 89, baseType: !333, size: 128, align: 64)
!3917 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3901, file: !3891, line: 92, baseType: !11, size: 32, offset: 384)
!3918 = !DIDerivedType(tag: DW_TAG_member, name: "icq_list", scope: !3890, file: !3891, line: 111, baseType: !1613, size: 64, offset: 384)
!3919 = !DIDerivedType(tag: DW_TAG_member, name: "release_work", scope: !3890, file: !3891, line: 113, baseType: !2860, size: 256, offset: 448)
!3920 = !DIDerivedType(tag: DW_TAG_member, name: "capture_control", scope: !2359, file: !2360, line: 1061, baseType: !3921, size: 64, offset: 10944)
!3921 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3922, size: 64)
!3922 = !DICompositeType(tag: DW_TAG_structure_type, name: "capture_control", file: !2360, line: 43, flags: DIFlagFwdDecl)
!3923 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_message", scope: !2359, file: !2360, line: 1064, baseType: !346, size: 64, offset: 11008)
!3924 = !DIDerivedType(tag: DW_TAG_member, name: "last_siginfo", scope: !2359, file: !2360, line: 1065, baseType: !3925, size: 64, offset: 11072)
!3925 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3926, size: 64)
!3926 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_siginfo_t", file: !3730, line: 14, baseType: !3927)
!3927 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_siginfo", file: !3730, line: 12, size: 384, elements: !3928)
!3928 = !{!3929}
!3929 = !DIDerivedType(tag: DW_TAG_member, scope: !3927, file: !3730, line: 13, baseType: !3930, size: 384)
!3930 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3927, file: !3730, line: 13, size: 384, elements: !3931)
!3931 = !{!3932, !3933, !3934, !3935}
!3932 = !DIDerivedType(tag: DW_TAG_member, name: "si_signo", scope: !3930, file: !3730, line: 13, baseType: !5, size: 32)
!3933 = !DIDerivedType(tag: DW_TAG_member, name: "si_errno", scope: !3930, file: !3730, line: 13, baseType: !5, size: 32, offset: 32)
!3934 = !DIDerivedType(tag: DW_TAG_member, name: "si_code", scope: !3930, file: !3730, line: 13, baseType: !5, size: 32, offset: 64)
!3935 = !DIDerivedType(tag: DW_TAG_member, name: "_sifields", scope: !3930, file: !3730, line: 13, baseType: !3936, size: 256, offset: 128)
!3936 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "__sifields", file: !3937, line: 32, size: 256, elements: !3938)
!3937 = !DIFile(filename: "./include/uapi/asm-generic/siginfo.h", directory: "/home/lizy2001/genbc/linux")
!3938 = !{!3939, !3944, !3957, !3963, !3972, !3992, !3997}
!3939 = !DIDerivedType(tag: DW_TAG_member, name: "_kill", scope: !3936, file: !3937, line: 37, baseType: !3940, size: 64)
!3940 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3936, file: !3937, line: 34, size: 64, elements: !3941)
!3941 = !{!3942, !3943}
!3942 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !3940, file: !3937, line: 35, baseType: !2592, size: 32)
!3943 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !3940, file: !3937, line: 36, baseType: !1421, size: 32, offset: 32)
!3944 = !DIDerivedType(tag: DW_TAG_member, name: "_timer", scope: !3936, file: !3937, line: 45, baseType: !3945, size: 192)
!3945 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3936, file: !3937, line: 40, size: 192, elements: !3946)
!3946 = !{!3947, !3949, !3950, !3956}
!3947 = !DIDerivedType(tag: DW_TAG_member, name: "_tid", scope: !3945, file: !3937, line: 41, baseType: !3948, size: 32)
!3948 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_timer_t", file: !1075, line: 95, baseType: !5)
!3949 = !DIDerivedType(tag: DW_TAG_member, name: "_overrun", scope: !3945, file: !3937, line: 42, baseType: !5, size: 32, offset: 32)
!3950 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !3945, file: !3937, line: 43, baseType: !3951, size: 64, offset: 64)
!3951 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigval_t", file: !3937, line: 11, baseType: !3952)
!3952 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "sigval", file: !3937, line: 8, size: 64, elements: !3953)
!3953 = !{!3954, !3955}
!3954 = !DIDerivedType(tag: DW_TAG_member, name: "sival_int", scope: !3952, file: !3937, line: 9, baseType: !5, size: 32)
!3955 = !DIDerivedType(tag: DW_TAG_member, name: "sival_ptr", scope: !3952, file: !3937, line: 10, baseType: !625, size: 64)
!3956 = !DIDerivedType(tag: DW_TAG_member, name: "_sys_private", scope: !3945, file: !3937, line: 44, baseType: !5, size: 32, offset: 128)
!3957 = !DIDerivedType(tag: DW_TAG_member, name: "_rt", scope: !3936, file: !3937, line: 52, baseType: !3958, size: 128)
!3958 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3936, file: !3937, line: 48, size: 128, elements: !3959)
!3959 = !{!3960, !3961, !3962}
!3960 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !3958, file: !3937, line: 49, baseType: !2592, size: 32)
!3961 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !3958, file: !3937, line: 50, baseType: !1421, size: 32, offset: 32)
!3962 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !3958, file: !3937, line: 51, baseType: !3951, size: 64, offset: 64)
!3963 = !DIDerivedType(tag: DW_TAG_member, name: "_sigchld", scope: !3936, file: !3937, line: 61, baseType: !3964, size: 256)
!3964 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3936, file: !3937, line: 55, size: 256, elements: !3965)
!3965 = !{!3966, !3967, !3968, !3969, !3971}
!3966 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !3964, file: !3937, line: 56, baseType: !2592, size: 32)
!3967 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !3964, file: !3937, line: 57, baseType: !1421, size: 32, offset: 32)
!3968 = !DIDerivedType(tag: DW_TAG_member, name: "_status", scope: !3964, file: !3937, line: 58, baseType: !5, size: 32, offset: 64)
!3969 = !DIDerivedType(tag: DW_TAG_member, name: "_utime", scope: !3964, file: !3937, line: 59, baseType: !3970, size: 64, offset: 128)
!3970 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clock_t", file: !1075, line: 94, baseType: !1556)
!3971 = !DIDerivedType(tag: DW_TAG_member, name: "_stime", scope: !3964, file: !3937, line: 60, baseType: !3970, size: 64, offset: 192)
!3972 = !DIDerivedType(tag: DW_TAG_member, name: "_sigfault", scope: !3936, file: !3937, line: 95, baseType: !3973, size: 256)
!3973 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3936, file: !3937, line: 64, size: 256, elements: !3974)
!3974 = !{!3975, !3976}
!3975 = !DIDerivedType(tag: DW_TAG_member, name: "_addr", scope: !3973, file: !3937, line: 65, baseType: !625, size: 64)
!3976 = !DIDerivedType(tag: DW_TAG_member, scope: !3973, file: !3937, line: 77, baseType: !3977, size: 192, offset: 64)
!3977 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3973, file: !3937, line: 77, size: 192, elements: !3978)
!3978 = !{!3979, !3980, !3987}
!3979 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_lsb", scope: !3977, file: !3937, line: 82, baseType: !659, size: 16)
!3980 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_bnd", scope: !3977, file: !3937, line: 88, baseType: !3981, size: 192)
!3981 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3977, file: !3937, line: 84, size: 192, elements: !3982)
!3982 = !{!3983, !3985, !3986}
!3983 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_bnd", scope: !3981, file: !3937, line: 85, baseType: !3984, size: 64)
!3984 = !DICompositeType(tag: DW_TAG_array_type, baseType: !302, size: 64, elements: !2465)
!3985 = !DIDerivedType(tag: DW_TAG_member, name: "_lower", scope: !3981, file: !3937, line: 86, baseType: !625, size: 64, offset: 64)
!3986 = !DIDerivedType(tag: DW_TAG_member, name: "_upper", scope: !3981, file: !3937, line: 87, baseType: !625, size: 64, offset: 128)
!3987 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_pkey", scope: !3977, file: !3937, line: 93, baseType: !3988, size: 96)
!3988 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3977, file: !3937, line: 90, size: 96, elements: !3989)
!3989 = !{!3990, !3991}
!3990 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_pkey", scope: !3988, file: !3937, line: 91, baseType: !3984, size: 64)
!3991 = !DIDerivedType(tag: DW_TAG_member, name: "_pkey", scope: !3988, file: !3937, line: 92, baseType: !527, size: 32, offset: 64)
!3992 = !DIDerivedType(tag: DW_TAG_member, name: "_sigpoll", scope: !3936, file: !3937, line: 101, baseType: !3993, size: 128)
!3993 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3936, file: !3937, line: 98, size: 128, elements: !3994)
!3994 = !{!3995, !3996}
!3995 = !DIDerivedType(tag: DW_TAG_member, name: "_band", scope: !3993, file: !3937, line: 99, baseType: !1032, size: 64)
!3996 = !DIDerivedType(tag: DW_TAG_member, name: "_fd", scope: !3993, file: !3937, line: 100, baseType: !5, size: 32, offset: 64)
!3997 = !DIDerivedType(tag: DW_TAG_member, name: "_sigsys", scope: !3936, file: !3937, line: 108, baseType: !3998, size: 128)
!3998 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3936, file: !3937, line: 104, size: 128, elements: !3999)
!3999 = !{!4000, !4001, !4002}
!4000 = !DIDerivedType(tag: DW_TAG_member, name: "_call_addr", scope: !3998, file: !3937, line: 105, baseType: !625, size: 64)
!4001 = !DIDerivedType(tag: DW_TAG_member, name: "_syscall", scope: !3998, file: !3937, line: 106, baseType: !5, size: 32, offset: 64)
!4002 = !DIDerivedType(tag: DW_TAG_member, name: "_arch", scope: !3998, file: !3937, line: 107, baseType: !11, size: 32, offset: 96)
!4003 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !2359, file: !2360, line: 1067, baseType: !3797, offset: 11136)
!4004 = !DIDerivedType(tag: DW_TAG_member, name: "robust_list", scope: !2359, file: !2360, line: 1099, baseType: !4005, size: 64, offset: 11136)
!4005 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4006, size: 64)
!4006 = !DICompositeType(tag: DW_TAG_structure_type, name: "robust_list_head", file: !2360, line: 56, flags: DIFlagFwdDecl)
!4007 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_list", scope: !2359, file: !2360, line: 1103, baseType: !318, size: 128, offset: 11200)
!4008 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_cache", scope: !2359, file: !2360, line: 1104, baseType: !4009, size: 64, offset: 11328)
!4009 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4010, size: 64)
!4010 = !DICompositeType(tag: DW_TAG_structure_type, name: "futex_pi_state", file: !2360, line: 46, flags: DIFlagFwdDecl)
!4011 = !DIDerivedType(tag: DW_TAG_member, name: "futex_exit_mutex", scope: !2359, file: !2360, line: 1105, baseType: !1697, size: 192, offset: 11392)
!4012 = !DIDerivedType(tag: DW_TAG_member, name: "futex_state", scope: !2359, file: !2360, line: 1106, baseType: !11, size: 32, offset: 11584)
!4013 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_ctxp", scope: !2359, file: !2360, line: 1109, baseType: !4014, size: 128, offset: 11648)
!4014 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4015, size: 128, elements: !2695)
!4015 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4016, size: 64)
!4016 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event_context", file: !2360, line: 51, flags: DIFlagFwdDecl)
!4017 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_mutex", scope: !2359, file: !2360, line: 1110, baseType: !1697, size: 192, offset: 11776)
!4018 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_list", scope: !2359, file: !2360, line: 1111, baseType: !318, size: 128, offset: 11968)
!4019 = !DIDerivedType(tag: DW_TAG_member, name: "rseq", scope: !2359, file: !2360, line: 1173, baseType: !4020, size: 64, offset: 12096)
!4020 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4021, size: 64)
!4021 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rseq", file: !4022, line: 62, size: 256, align: 256, elements: !4023)
!4022 = !DIFile(filename: "./include/uapi/linux/rseq.h", directory: "/home/lizy2001/genbc/linux")
!4023 = !{!4024, !4025, !4026, !4031}
!4024 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id_start", scope: !4021, file: !4022, line: 75, baseType: !527, size: 32)
!4025 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id", scope: !4021, file: !4022, line: 90, baseType: !527, size: 32, offset: 32)
!4026 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_cs", scope: !4021, file: !4022, line: 124, baseType: !4027, size: 64, offset: 64)
!4027 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4021, file: !4022, line: 109, size: 64, elements: !4028)
!4028 = !{!4029, !4030}
!4029 = !DIDerivedType(tag: DW_TAG_member, name: "ptr64", scope: !4027, file: !4022, line: 110, baseType: !367, size: 64)
!4030 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !4027, file: !4022, line: 112, baseType: !367, size: 64)
!4031 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4021, file: !4022, line: 144, baseType: !527, size: 32, offset: 128)
!4032 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_sig", scope: !2359, file: !2360, line: 1174, baseType: !1021, size: 32, offset: 12160)
!4033 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_event_mask", scope: !2359, file: !2360, line: 1179, baseType: !346, size: 64, offset: 12224)
!4034 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_ubc", scope: !2359, file: !2360, line: 1182, baseType: !4035, size: 128, offset: 12288)
!4035 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tlbflush_unmap_batch", file: !2300, line: 76, size: 128, elements: !4036)
!4036 = !{!4037, !4042, !4043}
!4037 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !4035, file: !2300, line: 85, baseType: !4038, size: 64)
!4038 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arch_tlbflush_unmap_batch", file: !4039, line: 7, size: 64, elements: !4040)
!4039 = !DIFile(filename: "./arch/x86/include/asm/tlbbatch.h", directory: "/home/lizy2001/genbc/linux")
!4040 = !{!4041}
!4041 = !DIDerivedType(tag: DW_TAG_member, name: "cpumask", scope: !4038, file: !4039, line: 12, baseType: !2500, size: 64)
!4042 = !DIDerivedType(tag: DW_TAG_member, name: "flush_required", scope: !4035, file: !2300, line: 88, baseType: !805, size: 8, offset: 64)
!4043 = !DIDerivedType(tag: DW_TAG_member, name: "writable", scope: !4035, file: !2300, line: 95, baseType: !805, size: 8, offset: 72)
!4044 = !DIDerivedType(tag: DW_TAG_member, scope: !2359, file: !2360, line: 1184, baseType: !4045, size: 128, offset: 12416)
!4045 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2359, file: !2360, line: 1184, size: 128, elements: !4046)
!4046 = !{!4047, !4048}
!4047 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_users", scope: !4045, file: !2360, line: 1185, baseType: !602, size: 32)
!4048 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !4045, file: !2360, line: 1186, baseType: !333, size: 128, align: 64)
!4049 = !DIDerivedType(tag: DW_TAG_member, name: "splice_pipe", scope: !2359, file: !2360, line: 1190, baseType: !1915, size: 64, offset: 12544)
!4050 = !DIDerivedType(tag: DW_TAG_member, name: "task_frag", scope: !2359, file: !2360, line: 1192, baseType: !4051, size: 128, offset: 12608)
!4051 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page_frag", file: !2300, line: 64, size: 128, elements: !4052)
!4052 = !{!4053, !4054, !4055}
!4053 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !4051, file: !2300, line: 65, baseType: !1751, size: 64)
!4054 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !4051, file: !2300, line: 67, baseType: !527, size: 32, offset: 64)
!4055 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4051, file: !2300, line: 68, baseType: !527, size: 32, offset: 96)
!4056 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied", scope: !2359, file: !2360, line: 1206, baseType: !5, size: 32, offset: 12736)
!4057 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied_pause", scope: !2359, file: !2360, line: 1207, baseType: !5, size: 32, offset: 12768)
!4058 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_paused_when", scope: !2359, file: !2360, line: 1209, baseType: !346, size: 64, offset: 12800)
!4059 = !DIDerivedType(tag: DW_TAG_member, name: "timer_slack_ns", scope: !2359, file: !2360, line: 1219, baseType: !365, size: 64, offset: 12864)
!4060 = !DIDerivedType(tag: DW_TAG_member, name: "default_timer_slack_ns", scope: !2359, file: !2360, line: 1220, baseType: !365, size: 64, offset: 12928)
!4061 = !DIDerivedType(tag: DW_TAG_member, name: "pagefault_disabled", scope: !2359, file: !2360, line: 1317, baseType: !5, size: 32, offset: 12992)
!4062 = !DIDerivedType(tag: DW_TAG_member, name: "oom_reaper_list", scope: !2359, file: !2360, line: 1319, baseType: !2358, size: 64, offset: 13056)
!4063 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm_area", scope: !2359, file: !2360, line: 1322, baseType: !4064, size: 64, offset: 13120)
!4064 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4065, size: 64)
!4065 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_struct", file: !4066, line: 56, size: 512, elements: !4067)
!4066 = !DIFile(filename: "./include/linux/vmalloc.h", directory: "/home/lizy2001/genbc/linux")
!4067 = !{!4068, !4069, !4070, !4071, !4072, !4073, !4074, !4076}
!4068 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4065, file: !4066, line: 57, baseType: !4064, size: 64)
!4069 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !4065, file: !4066, line: 58, baseType: !625, size: 64, offset: 64)
!4070 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4065, file: !4066, line: 59, baseType: !346, size: 64, offset: 128)
!4071 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4065, file: !4066, line: 60, baseType: !346, size: 64, offset: 192)
!4072 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !4065, file: !4066, line: 61, baseType: !1833, size: 64, offset: 256)
!4073 = !DIDerivedType(tag: DW_TAG_member, name: "nr_pages", scope: !4065, file: !4066, line: 62, baseType: !11, size: 32, offset: 320)
!4074 = !DIDerivedType(tag: DW_TAG_member, name: "phys_addr", scope: !4065, file: !4066, line: 63, baseType: !4075, size: 64, offset: 384)
!4075 = !DIDerivedType(tag: DW_TAG_typedef, name: "phys_addr_t", file: !311, line: 153, baseType: !365)
!4076 = !DIDerivedType(tag: DW_TAG_member, name: "caller", scope: !4065, file: !4066, line: 64, baseType: !3288, size: 64, offset: 448)
!4077 = !DIDerivedType(tag: DW_TAG_member, name: "stack_refcount", scope: !2359, file: !2360, line: 1326, baseType: !602, size: 32, offset: 13184)
!4078 = !DIDerivedType(tag: DW_TAG_member, name: "mce_vaddr", scope: !2359, file: !2360, line: 1342, baseType: !625, size: 64, offset: 13248)
!4079 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kflags", scope: !2359, file: !2360, line: 1343, baseType: !367, size: 64, offset: 13312)
!4080 = !DIDerivedType(tag: DW_TAG_member, name: "mce_addr", scope: !2359, file: !2360, line: 1344, baseType: !365, size: 64, offset: 13376)
!4081 = !DIDerivedType(tag: DW_TAG_member, name: "mce_ripv", scope: !2359, file: !2360, line: 1345, baseType: !367, size: 1, offset: 13440, flags: DIFlagBitField, extraData: i64 13440)
!4082 = !DIDerivedType(tag: DW_TAG_member, name: "mce_whole_page", scope: !2359, file: !2360, line: 1346, baseType: !367, size: 1, offset: 13441, flags: DIFlagBitField, extraData: i64 13440)
!4083 = !DIDerivedType(tag: DW_TAG_member, name: "__mce_reserved", scope: !2359, file: !2360, line: 1347, baseType: !367, size: 62, offset: 13442, flags: DIFlagBitField, extraData: i64 13440)
!4084 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kill_me", scope: !2359, file: !2360, line: 1348, baseType: !333, size: 128, align: 64, offset: 13504)
!4085 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !2359, file: !2360, line: 1358, baseType: !4086, size: 34816, offset: 13824)
!4086 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_struct", file: !4087, line: 485, size: 34816, elements: !4088)
!4087 = !DIFile(filename: "./arch/x86/include/asm/processor.h", directory: "/home/lizy2001/genbc/linux")
!4088 = !{!4089, !4107, !4108, !4109, !4110, !4111, !4112, !4113, !4114, !4118, !4119, !4120, !4121, !4122, !4123, !4126, !4127, !4128}
!4089 = !DIDerivedType(tag: DW_TAG_member, name: "tls_array", scope: !4086, file: !4087, line: 487, baseType: !4090, size: 192)
!4090 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4091, size: 192, elements: !1624)
!4091 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "desc_struct", file: !4092, line: 16, size: 64, elements: !4093)
!4092 = !DIFile(filename: "./arch/x86/include/asm/desc_defs.h", directory: "/home/lizy2001/genbc/linux")
!4093 = !{!4094, !4095, !4096, !4097, !4098, !4099, !4100, !4101, !4102, !4103, !4104, !4105, !4106}
!4094 = !DIDerivedType(tag: DW_TAG_member, name: "limit0", scope: !4091, file: !4092, line: 17, baseType: !615, size: 16)
!4095 = !DIDerivedType(tag: DW_TAG_member, name: "base0", scope: !4091, file: !4092, line: 18, baseType: !615, size: 16, offset: 16)
!4096 = !DIDerivedType(tag: DW_TAG_member, name: "base1", scope: !4091, file: !4092, line: 19, baseType: !615, size: 8, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!4097 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4091, file: !4092, line: 19, baseType: !615, size: 4, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!4098 = !DIDerivedType(tag: DW_TAG_member, name: "s", scope: !4091, file: !4092, line: 19, baseType: !615, size: 1, offset: 44, flags: DIFlagBitField, extraData: i64 32)
!4099 = !DIDerivedType(tag: DW_TAG_member, name: "dpl", scope: !4091, file: !4092, line: 19, baseType: !615, size: 2, offset: 45, flags: DIFlagBitField, extraData: i64 32)
!4100 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !4091, file: !4092, line: 19, baseType: !615, size: 1, offset: 47, flags: DIFlagBitField, extraData: i64 32)
!4101 = !DIDerivedType(tag: DW_TAG_member, name: "limit1", scope: !4091, file: !4092, line: 20, baseType: !615, size: 4, offset: 48, flags: DIFlagBitField, extraData: i64 32)
!4102 = !DIDerivedType(tag: DW_TAG_member, name: "avl", scope: !4091, file: !4092, line: 20, baseType: !615, size: 1, offset: 52, flags: DIFlagBitField, extraData: i64 32)
!4103 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !4091, file: !4092, line: 20, baseType: !615, size: 1, offset: 53, flags: DIFlagBitField, extraData: i64 32)
!4104 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !4091, file: !4092, line: 20, baseType: !615, size: 1, offset: 54, flags: DIFlagBitField, extraData: i64 32)
!4105 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !4091, file: !4092, line: 20, baseType: !615, size: 1, offset: 55, flags: DIFlagBitField, extraData: i64 32)
!4106 = !DIDerivedType(tag: DW_TAG_member, name: "base2", scope: !4091, file: !4092, line: 20, baseType: !615, size: 8, offset: 56, flags: DIFlagBitField, extraData: i64 32)
!4107 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !4086, file: !4087, line: 491, baseType: !346, size: 64, offset: 192)
!4108 = !DIDerivedType(tag: DW_TAG_member, name: "es", scope: !4086, file: !4087, line: 495, baseType: !510, size: 16, offset: 256)
!4109 = !DIDerivedType(tag: DW_TAG_member, name: "ds", scope: !4086, file: !4087, line: 496, baseType: !510, size: 16, offset: 272)
!4110 = !DIDerivedType(tag: DW_TAG_member, name: "fsindex", scope: !4086, file: !4087, line: 497, baseType: !510, size: 16, offset: 288)
!4111 = !DIDerivedType(tag: DW_TAG_member, name: "gsindex", scope: !4086, file: !4087, line: 498, baseType: !510, size: 16, offset: 304)
!4112 = !DIDerivedType(tag: DW_TAG_member, name: "fsbase", scope: !4086, file: !4087, line: 502, baseType: !346, size: 64, offset: 320)
!4113 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !4086, file: !4087, line: 503, baseType: !346, size: 64, offset: 384)
!4114 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_bps", scope: !4086, file: !4087, line: 514, baseType: !4115, size: 256, offset: 448)
!4115 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4116, size: 256, elements: !2304)
!4116 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4117, size: 64)
!4117 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event", file: !4087, line: 483, flags: DIFlagFwdDecl)
!4118 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_dr6", scope: !4086, file: !4087, line: 516, baseType: !346, size: 64, offset: 704)
!4119 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_dr7", scope: !4086, file: !4087, line: 518, baseType: !346, size: 64, offset: 768)
!4120 = !DIDerivedType(tag: DW_TAG_member, name: "cr2", scope: !4086, file: !4087, line: 520, baseType: !346, size: 64, offset: 832)
!4121 = !DIDerivedType(tag: DW_TAG_member, name: "trap_nr", scope: !4086, file: !4087, line: 521, baseType: !346, size: 64, offset: 896)
!4122 = !DIDerivedType(tag: DW_TAG_member, name: "error_code", scope: !4086, file: !4087, line: 522, baseType: !346, size: 64, offset: 960)
!4123 = !DIDerivedType(tag: DW_TAG_member, name: "io_bitmap", scope: !4086, file: !4087, line: 528, baseType: !4124, size: 64, offset: 1024)
!4124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4125, size: 64)
!4125 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_bitmap", file: !4087, line: 10, flags: DIFlagFwdDecl)
!4126 = !DIDerivedType(tag: DW_TAG_member, name: "iopl_emul", scope: !4086, file: !4087, line: 535, baseType: !346, size: 64, offset: 1088)
!4127 = !DIDerivedType(tag: DW_TAG_member, name: "sig_on_uaccess_err", scope: !4086, file: !4087, line: 537, baseType: !11, size: 1, offset: 1152, flags: DIFlagBitField, extraData: i64 1152)
!4128 = !DIDerivedType(tag: DW_TAG_member, name: "fpu", scope: !4086, file: !4087, line: 540, baseType: !4129, size: 33280, offset: 1536)
!4129 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fpu", file: !4130, line: 317, size: 33280, elements: !4131)
!4130 = !DIFile(filename: "./arch/x86/include/asm/fpu/types.h", directory: "/home/lizy2001/genbc/linux")
!4131 = !{!4132, !4133, !4134}
!4132 = !DIDerivedType(tag: DW_TAG_member, name: "last_cpu", scope: !4129, file: !4130, line: 330, baseType: !11, size: 32)
!4133 = !DIDerivedType(tag: DW_TAG_member, name: "avx512_timestamp", scope: !4129, file: !4130, line: 337, baseType: !346, size: 64, offset: 64)
!4134 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !4129, file: !4130, line: 348, baseType: !4135, size: 32768, offset: 512)
!4135 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "fpregs_state", file: !4130, line: 304, size: 32768, elements: !4136)
!4136 = !{!4137, !4150, !4187, !4237, !4250}
!4137 = !DIDerivedType(tag: DW_TAG_member, name: "fsave", scope: !4135, file: !4130, line: 305, baseType: !4138, size: 896)
!4138 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fregs_state", file: !4130, line: 12, size: 896, elements: !4139)
!4139 = !{!4140, !4141, !4142, !4143, !4144, !4145, !4146, !4147, !4149}
!4140 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !4138, file: !4130, line: 13, baseType: !1021, size: 32)
!4141 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !4138, file: !4130, line: 14, baseType: !1021, size: 32, offset: 32)
!4142 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !4138, file: !4130, line: 15, baseType: !1021, size: 32, offset: 64)
!4143 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !4138, file: !4130, line: 16, baseType: !1021, size: 32, offset: 96)
!4144 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !4138, file: !4130, line: 17, baseType: !1021, size: 32, offset: 128)
!4145 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !4138, file: !4130, line: 18, baseType: !1021, size: 32, offset: 160)
!4146 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !4138, file: !4130, line: 19, baseType: !1021, size: 32, offset: 192)
!4147 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !4138, file: !4130, line: 22, baseType: !4148, size: 640, offset: 224)
!4148 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1021, size: 640, elements: !934)
!4149 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !4138, file: !4130, line: 25, baseType: !1021, size: 32, offset: 864)
!4150 = !DIDerivedType(tag: DW_TAG_member, name: "fxsave", scope: !4135, file: !4130, line: 306, baseType: !4151, size: 4096, align: 128)
!4151 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fxregs_state", file: !4130, line: 34, size: 4096, align: 128, elements: !4152)
!4152 = !{!4153, !4154, !4155, !4156, !4157, !4172, !4173, !4174, !4176, !4178, !4182}
!4153 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !4151, file: !4130, line: 35, baseType: !615, size: 16)
!4154 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !4151, file: !4130, line: 36, baseType: !615, size: 16, offset: 16)
!4155 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !4151, file: !4130, line: 37, baseType: !615, size: 16, offset: 32)
!4156 = !DIDerivedType(tag: DW_TAG_member, name: "fop", scope: !4151, file: !4130, line: 38, baseType: !615, size: 16, offset: 48)
!4157 = !DIDerivedType(tag: DW_TAG_member, scope: !4151, file: !4130, line: 39, baseType: !4158, size: 128, offset: 64)
!4158 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4151, file: !4130, line: 39, size: 128, elements: !4159)
!4159 = !{!4160, !4165}
!4160 = !DIDerivedType(tag: DW_TAG_member, scope: !4158, file: !4130, line: 40, baseType: !4161, size: 128)
!4161 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4158, file: !4130, line: 40, size: 128, elements: !4162)
!4162 = !{!4163, !4164}
!4163 = !DIDerivedType(tag: DW_TAG_member, name: "rip", scope: !4161, file: !4130, line: 41, baseType: !365, size: 64)
!4164 = !DIDerivedType(tag: DW_TAG_member, name: "rdp", scope: !4161, file: !4130, line: 42, baseType: !365, size: 64, offset: 64)
!4165 = !DIDerivedType(tag: DW_TAG_member, scope: !4158, file: !4130, line: 44, baseType: !4166, size: 128)
!4166 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4158, file: !4130, line: 44, size: 128, elements: !4167)
!4167 = !{!4168, !4169, !4170, !4171}
!4168 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !4166, file: !4130, line: 45, baseType: !1021, size: 32)
!4169 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !4166, file: !4130, line: 46, baseType: !1021, size: 32, offset: 32)
!4170 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !4166, file: !4130, line: 47, baseType: !1021, size: 32, offset: 64)
!4171 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !4166, file: !4130, line: 48, baseType: !1021, size: 32, offset: 96)
!4172 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr", scope: !4151, file: !4130, line: 51, baseType: !1021, size: 32, offset: 192)
!4173 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr_mask", scope: !4151, file: !4130, line: 52, baseType: !1021, size: 32, offset: 224)
!4174 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !4151, file: !4130, line: 55, baseType: !4175, size: 1024, offset: 256)
!4175 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1021, size: 1024, elements: !853)
!4176 = !DIDerivedType(tag: DW_TAG_member, name: "xmm_space", scope: !4151, file: !4130, line: 58, baseType: !4177, size: 2048, offset: 1280)
!4177 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1021, size: 2048, elements: !3842)
!4178 = !DIDerivedType(tag: DW_TAG_member, name: "padding", scope: !4151, file: !4130, line: 60, baseType: !4179, size: 384, offset: 3328)
!4179 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1021, size: 384, elements: !4180)
!4180 = !{!4181}
!4181 = !DISubrange(count: 12)
!4182 = !DIDerivedType(tag: DW_TAG_member, scope: !4151, file: !4130, line: 62, baseType: !4183, size: 384, offset: 3712)
!4183 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4151, file: !4130, line: 62, size: 384, elements: !4184)
!4184 = !{!4185, !4186}
!4185 = !DIDerivedType(tag: DW_TAG_member, name: "padding1", scope: !4183, file: !4130, line: 63, baseType: !4179, size: 384)
!4186 = !DIDerivedType(tag: DW_TAG_member, name: "sw_reserved", scope: !4183, file: !4130, line: 64, baseType: !4179, size: 384)
!4187 = !DIDerivedType(tag: DW_TAG_member, name: "soft", scope: !4135, file: !4130, line: 307, baseType: !4188, size: 1088)
!4188 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swregs_state", file: !4130, line: 79, size: 1088, elements: !4189)
!4189 = !{!4190, !4191, !4192, !4193, !4194, !4195, !4196, !4197, !4198, !4199, !4200, !4201, !4202, !4203, !4204, !4236}
!4190 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !4188, file: !4130, line: 80, baseType: !1021, size: 32)
!4191 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !4188, file: !4130, line: 81, baseType: !1021, size: 32, offset: 32)
!4192 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !4188, file: !4130, line: 82, baseType: !1021, size: 32, offset: 64)
!4193 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !4188, file: !4130, line: 83, baseType: !1021, size: 32, offset: 96)
!4194 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !4188, file: !4130, line: 84, baseType: !1021, size: 32, offset: 128)
!4195 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !4188, file: !4130, line: 85, baseType: !1021, size: 32, offset: 160)
!4196 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !4188, file: !4130, line: 86, baseType: !1021, size: 32, offset: 192)
!4197 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !4188, file: !4130, line: 88, baseType: !4148, size: 640, offset: 224)
!4198 = !DIDerivedType(tag: DW_TAG_member, name: "ftop", scope: !4188, file: !4130, line: 89, baseType: !828, size: 8, offset: 864)
!4199 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !4188, file: !4130, line: 90, baseType: !828, size: 8, offset: 872)
!4200 = !DIDerivedType(tag: DW_TAG_member, name: "lookahead", scope: !4188, file: !4130, line: 91, baseType: !828, size: 8, offset: 880)
!4201 = !DIDerivedType(tag: DW_TAG_member, name: "no_update", scope: !4188, file: !4130, line: 92, baseType: !828, size: 8, offset: 888)
!4202 = !DIDerivedType(tag: DW_TAG_member, name: "rm", scope: !4188, file: !4130, line: 93, baseType: !828, size: 8, offset: 896)
!4203 = !DIDerivedType(tag: DW_TAG_member, name: "alimit", scope: !4188, file: !4130, line: 94, baseType: !828, size: 8, offset: 904)
!4204 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !4188, file: !4130, line: 95, baseType: !4205, size: 64, offset: 960)
!4205 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4206, size: 64)
!4206 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "math_emu_info", file: !4207, line: 11, size: 128, elements: !4208)
!4207 = !DIFile(filename: "./arch/x86/include/asm/math_emu.h", directory: "/home/lizy2001/genbc/linux")
!4208 = !{!4209, !4210}
!4209 = !DIDerivedType(tag: DW_TAG_member, name: "___orig_eip", scope: !4206, file: !4207, line: 12, baseType: !1032, size: 64)
!4210 = !DIDerivedType(tag: DW_TAG_member, name: "regs", scope: !4206, file: !4207, line: 13, baseType: !4211, size: 64, offset: 64)
!4211 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4212, size: 64)
!4212 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pt_regs", file: !4213, line: 56, size: 1344, elements: !4214)
!4213 = !DIFile(filename: "./arch/x86/include/asm/ptrace.h", directory: "/home/lizy2001/genbc/linux")
!4214 = !{!4215, !4216, !4217, !4218, !4219, !4220, !4221, !4222, !4223, !4224, !4225, !4226, !4227, !4228, !4229, !4230, !4231, !4232, !4233, !4234, !4235}
!4215 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !4212, file: !4213, line: 61, baseType: !346, size: 64)
!4216 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !4212, file: !4213, line: 62, baseType: !346, size: 64, offset: 64)
!4217 = !DIDerivedType(tag: DW_TAG_member, name: "r13", scope: !4212, file: !4213, line: 63, baseType: !346, size: 64, offset: 128)
!4218 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !4212, file: !4213, line: 64, baseType: !346, size: 64, offset: 192)
!4219 = !DIDerivedType(tag: DW_TAG_member, name: "bp", scope: !4212, file: !4213, line: 65, baseType: !346, size: 64, offset: 256)
!4220 = !DIDerivedType(tag: DW_TAG_member, name: "bx", scope: !4212, file: !4213, line: 66, baseType: !346, size: 64, offset: 320)
!4221 = !DIDerivedType(tag: DW_TAG_member, name: "r11", scope: !4212, file: !4213, line: 68, baseType: !346, size: 64, offset: 384)
!4222 = !DIDerivedType(tag: DW_TAG_member, name: "r10", scope: !4212, file: !4213, line: 69, baseType: !346, size: 64, offset: 448)
!4223 = !DIDerivedType(tag: DW_TAG_member, name: "r9", scope: !4212, file: !4213, line: 70, baseType: !346, size: 64, offset: 512)
!4224 = !DIDerivedType(tag: DW_TAG_member, name: "r8", scope: !4212, file: !4213, line: 71, baseType: !346, size: 64, offset: 576)
!4225 = !DIDerivedType(tag: DW_TAG_member, name: "ax", scope: !4212, file: !4213, line: 72, baseType: !346, size: 64, offset: 640)
!4226 = !DIDerivedType(tag: DW_TAG_member, name: "cx", scope: !4212, file: !4213, line: 73, baseType: !346, size: 64, offset: 704)
!4227 = !DIDerivedType(tag: DW_TAG_member, name: "dx", scope: !4212, file: !4213, line: 74, baseType: !346, size: 64, offset: 768)
!4228 = !DIDerivedType(tag: DW_TAG_member, name: "si", scope: !4212, file: !4213, line: 75, baseType: !346, size: 64, offset: 832)
!4229 = !DIDerivedType(tag: DW_TAG_member, name: "di", scope: !4212, file: !4213, line: 76, baseType: !346, size: 64, offset: 896)
!4230 = !DIDerivedType(tag: DW_TAG_member, name: "orig_ax", scope: !4212, file: !4213, line: 81, baseType: !346, size: 64, offset: 960)
!4231 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !4212, file: !4213, line: 83, baseType: !346, size: 64, offset: 1024)
!4232 = !DIDerivedType(tag: DW_TAG_member, name: "cs", scope: !4212, file: !4213, line: 84, baseType: !346, size: 64, offset: 1088)
!4233 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4212, file: !4213, line: 85, baseType: !346, size: 64, offset: 1152)
!4234 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !4212, file: !4213, line: 86, baseType: !346, size: 64, offset: 1216)
!4235 = !DIDerivedType(tag: DW_TAG_member, name: "ss", scope: !4212, file: !4213, line: 87, baseType: !346, size: 64, offset: 1280)
!4236 = !DIDerivedType(tag: DW_TAG_member, name: "entry_eip", scope: !4188, file: !4130, line: 96, baseType: !1021, size: 32, offset: 1024)
!4237 = !DIDerivedType(tag: DW_TAG_member, name: "xsave", scope: !4135, file: !4130, line: 308, baseType: !4238, size: 4608, align: 512)
!4238 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xregs_state", file: !4130, line: 289, size: 4608, align: 512, elements: !4239)
!4239 = !{!4240, !4241, !4248}
!4240 = !DIDerivedType(tag: DW_TAG_member, name: "i387", scope: !4238, file: !4130, line: 290, baseType: !4151, size: 4096, align: 128)
!4241 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !4238, file: !4130, line: 291, baseType: !4242, size: 512, offset: 4096)
!4242 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xstate_header", file: !4130, line: 268, size: 512, elements: !4243)
!4243 = !{!4244, !4245, !4246}
!4244 = !DIDerivedType(tag: DW_TAG_member, name: "xfeatures", scope: !4242, file: !4130, line: 269, baseType: !365, size: 64)
!4245 = !DIDerivedType(tag: DW_TAG_member, name: "xcomp_bv", scope: !4242, file: !4130, line: 270, baseType: !365, size: 64, offset: 64)
!4246 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !4242, file: !4130, line: 271, baseType: !4247, size: 384, offset: 128)
!4247 = !DICompositeType(tag: DW_TAG_array_type, baseType: !365, size: 384, elements: !1033)
!4248 = !DIDerivedType(tag: DW_TAG_member, name: "extended_state_area", scope: !4238, file: !4130, line: 292, baseType: !4249, offset: 4608)
!4249 = !DICompositeType(tag: DW_TAG_array_type, baseType: !828, elements: !517)
!4250 = !DIDerivedType(tag: DW_TAG_member, name: "__padding", scope: !4135, file: !4130, line: 309, baseType: !4251, size: 32768)
!4251 = !DICompositeType(tag: DW_TAG_array_type, baseType: !828, size: 32768, elements: !4252)
!4252 = !{!4253}
!4253 = !DISubrange(count: 4096)
!4254 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2355, file: !1753, line: 378, baseType: !4255, size: 64, offset: 64)
!4255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2355, size: 64)
!4256 = !DIDerivedType(tag: DW_TAG_member, name: "startup", scope: !2351, file: !1753, line: 384, baseType: !2628, size: 192, offset: 192)
!4257 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_lock", scope: !2127, file: !1753, line: 500, baseType: !1702, offset: 6656)
!4258 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_table", scope: !2127, file: !1753, line: 501, baseType: !4259, size: 64, offset: 6656)
!4259 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4260, size: 64)
!4260 = !DICompositeType(tag: DW_TAG_structure_type, name: "kioctx_table", file: !1753, line: 387, flags: DIFlagFwdDecl)
!4261 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !2127, file: !1753, line: 516, baseType: !2812, size: 64, offset: 6720)
!4262 = !DIDerivedType(tag: DW_TAG_member, name: "exe_file", scope: !2127, file: !1753, line: 519, baseType: !1349, size: 64, offset: 6784)
!4263 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_subscriptions", scope: !2127, file: !1753, line: 521, baseType: !4264, size: 64, offset: 6848)
!4264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4265, size: 64)
!4265 = !DICompositeType(tag: DW_TAG_structure_type, name: "mmu_notifier_subscriptions", file: !1753, line: 521, flags: DIFlagFwdDecl)
!4266 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_pending", scope: !2127, file: !1753, line: 545, baseType: !417, size: 32, offset: 6912)
!4267 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_batched", scope: !2127, file: !1753, line: 548, baseType: !805, size: 8, offset: 6944)
!4268 = !DIDerivedType(tag: DW_TAG_member, name: "uprobes_state", scope: !2127, file: !1753, line: 550, baseType: !4269, offset: 6952)
!4269 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uprobes_state", file: !4270, line: 142, elements: !1619)
!4270 = !DIFile(filename: "./include/linux/uprobes.h", directory: "/home/lizy2001/genbc/linux")
!4271 = !DIDerivedType(tag: DW_TAG_member, name: "async_put_work", scope: !2127, file: !1753, line: 554, baseType: !2860, size: 256, offset: 6976)
!4272 = !DIDerivedType(tag: DW_TAG_member, name: "pasid", scope: !2127, file: !1753, line: 557, baseType: !1021, size: 32, offset: 7232)
!4273 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_bitmap", scope: !2124, file: !1753, line: 565, baseType: !4274, offset: 7296)
!4274 = !DICompositeType(tag: DW_TAG_array_type, baseType: !346, elements: !343)
!4275 = !DIDerivedType(tag: DW_TAG_member, name: "pt_frag_refcount", scope: !2120, file: !1753, line: 151, baseType: !417, size: 32)
!4276 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !2112, file: !1753, line: 156, baseType: !1702, offset: 256)
!4277 = !DIDerivedType(tag: DW_TAG_member, scope: !1757, file: !1753, line: 159, baseType: !4278, size: 128)
!4278 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1757, file: !1753, line: 159, size: 128, elements: !4279)
!4279 = !{!4280, !4344}
!4280 = !DIDerivedType(tag: DW_TAG_member, name: "pgmap", scope: !4278, file: !1753, line: 161, baseType: !4281, size: 64)
!4281 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4282, size: 64)
!4282 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pagemap", file: !63, line: 110, size: 1152, elements: !4283)
!4283 = !{!4284, !4294, !4315, !4316, !4317, !4318, !4319, !4331, !4332, !4333}
!4284 = !DIDerivedType(tag: DW_TAG_member, name: "altmap", scope: !4282, file: !63, line: 111, baseType: !4285, size: 384)
!4285 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vmem_altmap", file: !63, line: 19, size: 384, elements: !4286)
!4286 = !{!4287, !4289, !4290, !4291, !4292, !4293}
!4287 = !DIDerivedType(tag: DW_TAG_member, name: "base_pfn", scope: !4285, file: !63, line: 20, baseType: !4288, size: 64)
!4288 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !346)
!4289 = !DIDerivedType(tag: DW_TAG_member, name: "end_pfn", scope: !4285, file: !63, line: 21, baseType: !4288, size: 64, offset: 64)
!4290 = !DIDerivedType(tag: DW_TAG_member, name: "reserve", scope: !4285, file: !63, line: 22, baseType: !4288, size: 64, offset: 128)
!4291 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !4285, file: !63, line: 23, baseType: !346, size: 64, offset: 192)
!4292 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !4285, file: !63, line: 24, baseType: !346, size: 64, offset: 256)
!4293 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !4285, file: !63, line: 25, baseType: !346, size: 64, offset: 320)
!4294 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !4282, file: !63, line: 112, baseType: !4295, size: 64, offset: 384)
!4295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4296, size: 64)
!4296 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_ref", file: !4297, line: 105, size: 128, elements: !4298)
!4297 = !DIFile(filename: "./include/linux/percpu-refcount.h", directory: "/home/lizy2001/genbc/linux")
!4298 = !{!4299, !4300}
!4299 = !DIDerivedType(tag: DW_TAG_member, name: "percpu_count_ptr", scope: !4296, file: !4297, line: 110, baseType: !346, size: 64)
!4300 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !4296, file: !4297, line: 118, baseType: !4301, size: 64, offset: 64)
!4301 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4302, size: 64)
!4302 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_ref_data", file: !4297, line: 95, size: 448, elements: !4303)
!4303 = !{!4304, !4305, !4310, !4311, !4312, !4313, !4314}
!4304 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !4302, file: !4297, line: 96, baseType: !405, size: 64)
!4305 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !4302, file: !4297, line: 97, baseType: !4306, size: 64, offset: 64)
!4306 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4307, size: 64)
!4307 = !DIDerivedType(tag: DW_TAG_typedef, name: "percpu_ref_func_t", file: !4297, line: 60, baseType: !4308)
!4308 = !DISubroutineType(types: !4309)
!4309 = !{null, !4295}
!4310 = !DIDerivedType(tag: DW_TAG_member, name: "confirm_switch", scope: !4302, file: !4297, line: 98, baseType: !4306, size: 64, offset: 128)
!4311 = !DIDerivedType(tag: DW_TAG_member, name: "force_atomic", scope: !4302, file: !4297, line: 99, baseType: !805, size: 1, offset: 192, flags: DIFlagBitField, extraData: i64 192)
!4312 = !DIDerivedType(tag: DW_TAG_member, name: "allow_reinit", scope: !4302, file: !4297, line: 100, baseType: !805, size: 1, offset: 193, flags: DIFlagBitField, extraData: i64 192)
!4313 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !4302, file: !4297, line: 101, baseType: !333, size: 128, align: 64, offset: 256)
!4314 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !4302, file: !4297, line: 102, baseType: !4295, size: 64, offset: 384)
!4315 = !DIDerivedType(tag: DW_TAG_member, name: "internal_ref", scope: !4282, file: !63, line: 113, baseType: !4296, size: 128, offset: 448)
!4316 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !4282, file: !63, line: 114, baseType: !2628, size: 192, offset: 576)
!4317 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4282, file: !63, line: 115, baseType: !62, size: 32, offset: 768)
!4318 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4282, file: !63, line: 116, baseType: !11, size: 32, offset: 800)
!4319 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4282, file: !63, line: 117, baseType: !4320, size: 64, offset: 832)
!4320 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4321, size: 64)
!4321 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4322)
!4322 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pagemap_ops", file: !63, line: 67, size: 256, elements: !4323)
!4323 = !{!4324, !4325, !4329, !4330}
!4324 = !DIDerivedType(tag: DW_TAG_member, name: "page_free", scope: !4322, file: !63, line: 73, baseType: !1853, size: 64)
!4325 = !DIDerivedType(tag: DW_TAG_member, name: "kill", scope: !4322, file: !63, line: 78, baseType: !4326, size: 64, offset: 64)
!4326 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4327, size: 64)
!4327 = !DISubroutineType(types: !4328)
!4328 = !{null, !4281}
!4329 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !4322, file: !63, line: 83, baseType: !4326, size: 64, offset: 128)
!4330 = !DIDerivedType(tag: DW_TAG_member, name: "migrate_to_ram", scope: !4322, file: !63, line: 89, baseType: !2176, size: 64, offset: 192)
!4331 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4282, file: !63, line: 118, baseType: !625, size: 64, offset: 896)
!4332 = !DIDerivedType(tag: DW_TAG_member, name: "nr_range", scope: !4282, file: !63, line: 119, baseType: !5, size: 32, offset: 960)
!4333 = !DIDerivedType(tag: DW_TAG_member, scope: !4282, file: !63, line: 120, baseType: !4334, size: 128, offset: 1024)
!4334 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4282, file: !63, line: 120, size: 128, elements: !4335)
!4335 = !{!4336, !4342}
!4336 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !4334, file: !63, line: 121, baseType: !4337, size: 128)
!4337 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "range", file: !4338, line: 6, size: 128, elements: !4339)
!4338 = !DIFile(filename: "./include/linux/range.h", directory: "/home/lizy2001/genbc/linux")
!4339 = !{!4340, !4341}
!4340 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !4337, file: !4338, line: 7, baseType: !365, size: 64)
!4341 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !4337, file: !4338, line: 8, baseType: !365, size: 64, offset: 64)
!4342 = !DIDerivedType(tag: DW_TAG_member, name: "ranges", scope: !4334, file: !63, line: 122, baseType: !4343)
!4343 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4337, elements: !517)
!4344 = !DIDerivedType(tag: DW_TAG_member, name: "zone_device_data", scope: !4278, file: !1753, line: 162, baseType: !625, size: 64, offset: 64)
!4345 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !1757, file: !1753, line: 176, baseType: !333, size: 128, align: 64)
!4346 = !DIDerivedType(tag: DW_TAG_member, scope: !1752, file: !1753, line: 179, baseType: !4347, size: 32, offset: 384)
!4347 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1752, file: !1753, line: 179, size: 32, elements: !4348)
!4348 = !{!4349, !4350, !4351, !4352}
!4349 = !DIDerivedType(tag: DW_TAG_member, name: "_mapcount", scope: !4347, file: !1753, line: 184, baseType: !417, size: 32)
!4350 = !DIDerivedType(tag: DW_TAG_member, name: "page_type", scope: !4347, file: !1753, line: 192, baseType: !11, size: 32)
!4351 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !4347, file: !1753, line: 194, baseType: !11, size: 32)
!4352 = !DIDerivedType(tag: DW_TAG_member, name: "units", scope: !4347, file: !1753, line: 195, baseType: !5, size: 32)
!4353 = !DIDerivedType(tag: DW_TAG_member, name: "_refcount", scope: !1752, file: !1753, line: 199, baseType: !417, size: 32, offset: 416)
!4354 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cached_objects", scope: !1632, file: !76, line: 1964, baseType: !4355, size: 64, offset: 1344)
!4355 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4356, size: 64)
!4356 = !DISubroutineType(types: !4357)
!4357 = !{!1032, !1578, !4358}
!4358 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4359, size: 64)
!4359 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrink_control", file: !4360, line: 12, size: 256, elements: !4361)
!4360 = !DIFile(filename: "./include/linux/shrinker.h", directory: "/home/lizy2001/genbc/linux")
!4361 = !{!4362, !4363, !4364, !4365, !4366}
!4362 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !4359, file: !4360, line: 13, baseType: !1774, size: 32)
!4363 = !DIDerivedType(tag: DW_TAG_member, name: "nid", scope: !4359, file: !4360, line: 16, baseType: !5, size: 32, offset: 32)
!4364 = !DIDerivedType(tag: DW_TAG_member, name: "nr_to_scan", scope: !4359, file: !4360, line: 23, baseType: !346, size: 64, offset: 64)
!4365 = !DIDerivedType(tag: DW_TAG_member, name: "nr_scanned", scope: !4359, file: !4360, line: 30, baseType: !346, size: 64, offset: 128)
!4366 = !DIDerivedType(tag: DW_TAG_member, name: "memcg", scope: !4359, file: !4360, line: 33, baseType: !4367, size: 64, offset: 192)
!4367 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4368, size: 64)
!4368 = !DICompositeType(tag: DW_TAG_structure_type, name: "mem_cgroup", file: !4360, line: 33, flags: DIFlagFwdDecl)
!4369 = !DIDerivedType(tag: DW_TAG_member, name: "free_cached_objects", scope: !1632, file: !76, line: 1966, baseType: !4355, size: 64, offset: 1408)
!4370 = !DIDerivedType(tag: DW_TAG_member, name: "dq_op", scope: !1579, file: !76, line: 1424, baseType: !4371, size: 64, offset: 448)
!4371 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4372, size: 64)
!4372 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4373)
!4373 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot_operations", file: !70, line: 322, size: 704, elements: !4374)
!4374 = !{!4375, !4421, !4425, !4429, !4430, !4431, !4432, !4433, !4438, !4443, !4447}
!4375 = !DIDerivedType(tag: DW_TAG_member, name: "write_dquot", scope: !4373, file: !70, line: 323, baseType: !4376, size: 64)
!4376 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4377, size: 64)
!4377 = !DISubroutineType(types: !4378)
!4378 = !{!5, !4379}
!4379 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4380, size: 64)
!4380 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot", file: !70, line: 294, size: 1600, elements: !4381)
!4381 = !{!4382, !4383, !4384, !4385, !4386, !4387, !4388, !4389, !4390, !4406, !4407, !4408}
!4382 = !DIDerivedType(tag: DW_TAG_member, name: "dq_hash", scope: !4380, file: !70, line: 295, baseType: !310, size: 128)
!4383 = !DIDerivedType(tag: DW_TAG_member, name: "dq_inuse", scope: !4380, file: !70, line: 296, baseType: !318, size: 128, offset: 128)
!4384 = !DIDerivedType(tag: DW_TAG_member, name: "dq_free", scope: !4380, file: !70, line: 297, baseType: !318, size: 128, offset: 256)
!4385 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dirty", scope: !4380, file: !70, line: 298, baseType: !318, size: 128, offset: 384)
!4386 = !DIDerivedType(tag: DW_TAG_member, name: "dq_lock", scope: !4380, file: !70, line: 299, baseType: !1697, size: 192, offset: 512)
!4387 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb_lock", scope: !4380, file: !70, line: 300, baseType: !1702, offset: 704)
!4388 = !DIDerivedType(tag: DW_TAG_member, name: "dq_count", scope: !4380, file: !70, line: 301, baseType: !417, size: 32, offset: 704)
!4389 = !DIDerivedType(tag: DW_TAG_member, name: "dq_sb", scope: !4380, file: !70, line: 302, baseType: !1578, size: 64, offset: 768)
!4390 = !DIDerivedType(tag: DW_TAG_member, name: "dq_id", scope: !4380, file: !70, line: 303, baseType: !4391, size: 64, offset: 832)
!4391 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kqid", file: !70, line: 68, size: 64, elements: !4392)
!4392 = !{!4393, !4405}
!4393 = !DIDerivedType(tag: DW_TAG_member, scope: !4391, file: !70, line: 69, baseType: !4394, size: 32)
!4394 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4391, file: !70, line: 69, size: 32, elements: !4395)
!4395 = !{!4396, !4397, !4398}
!4396 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !4394, file: !70, line: 70, baseType: !1415, size: 32)
!4397 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !4394, file: !70, line: 71, baseType: !1423, size: 32)
!4398 = !DIDerivedType(tag: DW_TAG_member, name: "projid", scope: !4394, file: !70, line: 72, baseType: !4399, size: 32)
!4399 = !DIDerivedType(tag: DW_TAG_typedef, name: "kprojid_t", file: !4400, line: 24, baseType: !4401)
!4400 = !DIFile(filename: "./include/linux/projid.h", directory: "/home/lizy2001/genbc/linux")
!4401 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !4400, line: 22, size: 32, elements: !4402)
!4402 = !{!4403}
!4403 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !4401, file: !4400, line: 23, baseType: !4404, size: 32)
!4404 = !DIDerivedType(tag: DW_TAG_typedef, name: "projid_t", file: !4400, line: 20, baseType: !1421)
!4405 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4391, file: !70, line: 74, baseType: !69, size: 32, offset: 32)
!4406 = !DIDerivedType(tag: DW_TAG_member, name: "dq_off", scope: !4380, file: !70, line: 304, baseType: !1509, size: 64, offset: 896)
!4407 = !DIDerivedType(tag: DW_TAG_member, name: "dq_flags", scope: !4380, file: !70, line: 305, baseType: !346, size: 64, offset: 960)
!4408 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb", scope: !4380, file: !70, line: 306, baseType: !4409, size: 576, offset: 1024)
!4409 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqblk", file: !70, line: 205, size: 576, elements: !4410)
!4410 = !{!4411, !4413, !4414, !4415, !4416, !4417, !4418, !4419, !4420}
!4411 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bhardlimit", scope: !4409, file: !70, line: 206, baseType: !4412, size: 64)
!4412 = !DIDerivedType(tag: DW_TAG_typedef, name: "qsize_t", file: !70, line: 66, baseType: !413)
!4413 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bsoftlimit", scope: !4409, file: !70, line: 207, baseType: !4412, size: 64, offset: 64)
!4414 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curspace", scope: !4409, file: !70, line: 208, baseType: !4412, size: 64, offset: 128)
!4415 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_rsvspace", scope: !4409, file: !70, line: 209, baseType: !4412, size: 64, offset: 192)
!4416 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_ihardlimit", scope: !4409, file: !70, line: 210, baseType: !4412, size: 64, offset: 256)
!4417 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_isoftlimit", scope: !4409, file: !70, line: 211, baseType: !4412, size: 64, offset: 320)
!4418 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curinodes", scope: !4409, file: !70, line: 212, baseType: !4412, size: 64, offset: 384)
!4419 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_btime", scope: !4409, file: !70, line: 213, baseType: !1516, size: 64, offset: 448)
!4420 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_itime", scope: !4409, file: !70, line: 214, baseType: !1516, size: 64, offset: 512)
!4421 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_dquot", scope: !4373, file: !70, line: 324, baseType: !4422, size: 64, offset: 64)
!4422 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4423, size: 64)
!4423 = !DISubroutineType(types: !4424)
!4424 = !{!4379, !1578, !5}
!4425 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_dquot", scope: !4373, file: !70, line: 325, baseType: !4426, size: 64, offset: 128)
!4426 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4427, size: 64)
!4427 = !DISubroutineType(types: !4428)
!4428 = !{null, !4379}
!4429 = !DIDerivedType(tag: DW_TAG_member, name: "acquire_dquot", scope: !4373, file: !70, line: 326, baseType: !4376, size: 64, offset: 192)
!4430 = !DIDerivedType(tag: DW_TAG_member, name: "release_dquot", scope: !4373, file: !70, line: 327, baseType: !4376, size: 64, offset: 256)
!4431 = !DIDerivedType(tag: DW_TAG_member, name: "mark_dirty", scope: !4373, file: !70, line: 328, baseType: !4376, size: 64, offset: 320)
!4432 = !DIDerivedType(tag: DW_TAG_member, name: "write_info", scope: !4373, file: !70, line: 329, baseType: !1660, size: 64, offset: 384)
!4433 = !DIDerivedType(tag: DW_TAG_member, name: "get_reserved_space", scope: !4373, file: !70, line: 332, baseType: !4434, size: 64, offset: 448)
!4434 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4435, size: 64)
!4435 = !DISubroutineType(types: !4436)
!4436 = !{!4437, !1408}
!4437 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4412, size: 64)
!4438 = !DIDerivedType(tag: DW_TAG_member, name: "get_projid", scope: !4373, file: !70, line: 333, baseType: !4439, size: 64, offset: 512)
!4439 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4440, size: 64)
!4440 = !DISubroutineType(types: !4441)
!4441 = !{!5, !1408, !4442}
!4442 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4399, size: 64)
!4443 = !DIDerivedType(tag: DW_TAG_member, name: "get_inode_usage", scope: !4373, file: !70, line: 335, baseType: !4444, size: 64, offset: 576)
!4444 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4445, size: 64)
!4445 = !DISubroutineType(types: !4446)
!4446 = !{!5, !1408, !4437}
!4447 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !4373, file: !70, line: 337, baseType: !4448, size: 64, offset: 640)
!4448 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4449, size: 64)
!4449 = !DISubroutineType(types: !4450)
!4450 = !{!5, !1578, !4451}
!4451 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4391, size: 64)
!4452 = !DIDerivedType(tag: DW_TAG_member, name: "s_qcop", scope: !1579, file: !76, line: 1425, baseType: !4453, size: 64, offset: 512)
!4453 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4454, size: 64)
!4454 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4455)
!4455 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quotactl_ops", file: !70, line: 428, size: 704, elements: !4456)
!4456 = !{!4457, !4461, !4462, !4466, !4467, !4468, !4483, !4506, !4510, !4511, !4534}
!4457 = !DIDerivedType(tag: DW_TAG_member, name: "quota_on", scope: !4455, file: !70, line: 429, baseType: !4458, size: 64)
!4458 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4459, size: 64)
!4459 = !DISubroutineType(types: !4460)
!4460 = !{!5, !1578, !5, !5, !1525}
!4461 = !DIDerivedType(tag: DW_TAG_member, name: "quota_off", scope: !4455, file: !70, line: 430, baseType: !1660, size: 64, offset: 64)
!4462 = !DIDerivedType(tag: DW_TAG_member, name: "quota_enable", scope: !4455, file: !70, line: 431, baseType: !4463, size: 64, offset: 128)
!4463 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4464, size: 64)
!4464 = !DISubroutineType(types: !4465)
!4465 = !{!5, !1578, !11}
!4466 = !DIDerivedType(tag: DW_TAG_member, name: "quota_disable", scope: !4455, file: !70, line: 432, baseType: !4463, size: 64, offset: 192)
!4467 = !DIDerivedType(tag: DW_TAG_member, name: "quota_sync", scope: !4455, file: !70, line: 433, baseType: !1660, size: 64, offset: 256)
!4468 = !DIDerivedType(tag: DW_TAG_member, name: "set_info", scope: !4455, file: !70, line: 434, baseType: !4469, size: 64, offset: 320)
!4469 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4470, size: 64)
!4470 = !DISubroutineType(types: !4471)
!4471 = !{!5, !1578, !5, !4472}
!4472 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4473, size: 64)
!4473 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_info", file: !70, line: 415, size: 256, elements: !4474)
!4474 = !{!4475, !4476, !4477, !4478, !4479, !4480, !4481, !4482}
!4475 = !DIDerivedType(tag: DW_TAG_member, name: "i_fieldmask", scope: !4473, file: !70, line: 416, baseType: !5, size: 32)
!4476 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !4473, file: !70, line: 417, baseType: !11, size: 32, offset: 32)
!4477 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_timelimit", scope: !4473, file: !70, line: 418, baseType: !11, size: 32, offset: 64)
!4478 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_timelimit", scope: !4473, file: !70, line: 420, baseType: !11, size: 32, offset: 96)
!4479 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_timelimit", scope: !4473, file: !70, line: 421, baseType: !11, size: 32, offset: 128)
!4480 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_warnlimit", scope: !4473, file: !70, line: 422, baseType: !11, size: 32, offset: 160)
!4481 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_warnlimit", scope: !4473, file: !70, line: 423, baseType: !11, size: 32, offset: 192)
!4482 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_warnlimit", scope: !4473, file: !70, line: 424, baseType: !11, size: 32, offset: 224)
!4483 = !DIDerivedType(tag: DW_TAG_member, name: "get_dqblk", scope: !4455, file: !70, line: 435, baseType: !4484, size: 64, offset: 384)
!4484 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4485, size: 64)
!4485 = !DISubroutineType(types: !4486)
!4486 = !{!5, !1578, !4391, !4487}
!4487 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4488, size: 64)
!4488 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_dqblk", file: !70, line: 343, size: 960, elements: !4489)
!4489 = !{!4490, !4491, !4492, !4493, !4494, !4495, !4496, !4497, !4498, !4499, !4500, !4501, !4502, !4503, !4504, !4505}
!4490 = !DIDerivedType(tag: DW_TAG_member, name: "d_fieldmask", scope: !4488, file: !70, line: 344, baseType: !5, size: 32)
!4491 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_hardlimit", scope: !4488, file: !70, line: 345, baseType: !365, size: 64, offset: 64)
!4492 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_softlimit", scope: !4488, file: !70, line: 346, baseType: !365, size: 64, offset: 128)
!4493 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_hardlimit", scope: !4488, file: !70, line: 347, baseType: !365, size: 64, offset: 192)
!4494 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_softlimit", scope: !4488, file: !70, line: 348, baseType: !365, size: 64, offset: 256)
!4495 = !DIDerivedType(tag: DW_TAG_member, name: "d_space", scope: !4488, file: !70, line: 349, baseType: !365, size: 64, offset: 320)
!4496 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_count", scope: !4488, file: !70, line: 350, baseType: !365, size: 64, offset: 384)
!4497 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_timer", scope: !4488, file: !70, line: 351, baseType: !411, size: 64, offset: 448)
!4498 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_timer", scope: !4488, file: !70, line: 353, baseType: !411, size: 64, offset: 512)
!4499 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_warns", scope: !4488, file: !70, line: 354, baseType: !5, size: 32, offset: 576)
!4500 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_warns", scope: !4488, file: !70, line: 355, baseType: !5, size: 32, offset: 608)
!4501 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_hardlimit", scope: !4488, file: !70, line: 356, baseType: !365, size: 64, offset: 640)
!4502 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_softlimit", scope: !4488, file: !70, line: 357, baseType: !365, size: 64, offset: 704)
!4503 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_space", scope: !4488, file: !70, line: 358, baseType: !365, size: 64, offset: 768)
!4504 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_timer", scope: !4488, file: !70, line: 359, baseType: !411, size: 64, offset: 832)
!4505 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_warns", scope: !4488, file: !70, line: 360, baseType: !5, size: 32, offset: 896)
!4506 = !DIDerivedType(tag: DW_TAG_member, name: "get_nextdqblk", scope: !4455, file: !70, line: 436, baseType: !4507, size: 64, offset: 448)
!4507 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4508, size: 64)
!4508 = !DISubroutineType(types: !4509)
!4509 = !{!5, !1578, !4451, !4487}
!4510 = !DIDerivedType(tag: DW_TAG_member, name: "set_dqblk", scope: !4455, file: !70, line: 438, baseType: !4484, size: 64, offset: 512)
!4511 = !DIDerivedType(tag: DW_TAG_member, name: "get_state", scope: !4455, file: !70, line: 439, baseType: !4512, size: 64, offset: 576)
!4512 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4513, size: 64)
!4513 = !DISubroutineType(types: !4514)
!4514 = !{!5, !1578, !4515}
!4515 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4516, size: 64)
!4516 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_state", file: !70, line: 409, size: 1408, elements: !4517)
!4517 = !{!4518, !4519}
!4518 = !DIDerivedType(tag: DW_TAG_member, name: "s_incoredqs", scope: !4516, file: !70, line: 410, baseType: !11, size: 32)
!4519 = !DIDerivedType(tag: DW_TAG_member, name: "s_state", scope: !4516, file: !70, line: 411, baseType: !4520, size: 1344, offset: 64)
!4520 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4521, size: 1344, elements: !1624)
!4521 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_type_state", file: !70, line: 395, size: 448, elements: !4522)
!4522 = !{!4523, !4524, !4525, !4526, !4527, !4528, !4529, !4530, !4531, !4533}
!4523 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4521, file: !70, line: 396, baseType: !11, size: 32)
!4524 = !DIDerivedType(tag: DW_TAG_member, name: "spc_timelimit", scope: !4521, file: !70, line: 397, baseType: !11, size: 32, offset: 32)
!4525 = !DIDerivedType(tag: DW_TAG_member, name: "ino_timelimit", scope: !4521, file: !70, line: 399, baseType: !11, size: 32, offset: 64)
!4526 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_timelimit", scope: !4521, file: !70, line: 400, baseType: !11, size: 32, offset: 96)
!4527 = !DIDerivedType(tag: DW_TAG_member, name: "spc_warnlimit", scope: !4521, file: !70, line: 401, baseType: !11, size: 32, offset: 128)
!4528 = !DIDerivedType(tag: DW_TAG_member, name: "ino_warnlimit", scope: !4521, file: !70, line: 402, baseType: !11, size: 32, offset: 160)
!4529 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_warnlimit", scope: !4521, file: !70, line: 403, baseType: !11, size: 32, offset: 192)
!4530 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !4521, file: !70, line: 404, baseType: !369, size: 64, offset: 256)
!4531 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !4521, file: !70, line: 405, baseType: !4532, size: 64, offset: 320)
!4532 = !DIDerivedType(tag: DW_TAG_typedef, name: "blkcnt_t", file: !311, line: 126, baseType: !365)
!4533 = !DIDerivedType(tag: DW_TAG_member, name: "nextents", scope: !4521, file: !70, line: 406, baseType: !4532, size: 64, offset: 384)
!4534 = !DIDerivedType(tag: DW_TAG_member, name: "rm_xquota", scope: !4455, file: !70, line: 440, baseType: !4463, size: 64, offset: 640)
!4535 = !DIDerivedType(tag: DW_TAG_member, name: "s_export_op", scope: !1579, file: !76, line: 1426, baseType: !4536, size: 64, offset: 576)
!4536 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4537, size: 64)
!4537 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4538)
!4538 = !DICompositeType(tag: DW_TAG_structure_type, name: "export_operations", file: !76, line: 49, flags: DIFlagFwdDecl)
!4539 = !DIDerivedType(tag: DW_TAG_member, name: "s_flags", scope: !1579, file: !76, line: 1427, baseType: !346, size: 64, offset: 640)
!4540 = !DIDerivedType(tag: DW_TAG_member, name: "s_iflags", scope: !1579, file: !76, line: 1428, baseType: !346, size: 64, offset: 704)
!4541 = !DIDerivedType(tag: DW_TAG_member, name: "s_magic", scope: !1579, file: !76, line: 1429, baseType: !346, size: 64, offset: 768)
!4542 = !DIDerivedType(tag: DW_TAG_member, name: "s_root", scope: !1579, file: !76, line: 1430, baseType: !1371, size: 64, offset: 832)
!4543 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount", scope: !1579, file: !76, line: 1431, baseType: !1787, size: 256, offset: 896)
!4544 = !DIDerivedType(tag: DW_TAG_member, name: "s_count", scope: !1579, file: !76, line: 1432, baseType: !5, size: 32, offset: 1152)
!4545 = !DIDerivedType(tag: DW_TAG_member, name: "s_active", scope: !1579, file: !76, line: 1433, baseType: !417, size: 32, offset: 1184)
!4546 = !DIDerivedType(tag: DW_TAG_member, name: "s_xattr", scope: !1579, file: !76, line: 1437, baseType: !4547, size: 64, offset: 1216)
!4547 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4548, size: 64)
!4548 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4549, size: 64)
!4549 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4550)
!4550 = !DICompositeType(tag: DW_TAG_structure_type, name: "xattr_handler", file: !76, line: 1437, flags: DIFlagFwdDecl)
!4551 = !DIDerivedType(tag: DW_TAG_member, name: "s_roots", scope: !1579, file: !76, line: 1449, baseType: !4552, size: 64, offset: 1280)
!4552 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_head", file: !1387, line: 34, size: 64, elements: !4553)
!4553 = !{!4554}
!4554 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !4552, file: !1387, line: 35, baseType: !1390, size: 64)
!4555 = !DIDerivedType(tag: DW_TAG_member, name: "s_mounts", scope: !1579, file: !76, line: 1450, baseType: !318, size: 128, offset: 1344)
!4556 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdev", scope: !1579, file: !76, line: 1451, baseType: !4557, size: 64, offset: 1472)
!4557 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4558, size: 64)
!4558 = !DICompositeType(tag: DW_TAG_structure_type, name: "block_device", file: !76, line: 699, flags: DIFlagFwdDecl)
!4559 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdi", scope: !1579, file: !76, line: 1452, baseType: !3886, size: 64, offset: 1536)
!4560 = !DIDerivedType(tag: DW_TAG_member, name: "s_mtd", scope: !1579, file: !76, line: 1453, baseType: !4561, size: 64, offset: 1600)
!4561 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4562, size: 64)
!4562 = !DICompositeType(tag: DW_TAG_structure_type, name: "mtd_info", file: !76, line: 1453, flags: DIFlagFwdDecl)
!4563 = !DIDerivedType(tag: DW_TAG_member, name: "s_instances", scope: !1579, file: !76, line: 1454, baseType: !310, size: 128, offset: 1664)
!4564 = !DIDerivedType(tag: DW_TAG_member, name: "s_quota_types", scope: !1579, file: !76, line: 1455, baseType: !11, size: 32, offset: 1792)
!4565 = !DIDerivedType(tag: DW_TAG_member, name: "s_dquot", scope: !1579, file: !76, line: 1456, baseType: !4566, size: 2432, offset: 1856)
!4566 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_info", file: !70, line: 518, size: 2432, elements: !4567)
!4567 = !{!4568, !4569, !4570, !4572, !4604}
!4568 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4566, file: !70, line: 519, baseType: !11, size: 32)
!4569 = !DIDerivedType(tag: DW_TAG_member, name: "dqio_sem", scope: !4566, file: !70, line: 520, baseType: !1787, size: 256, offset: 64)
!4570 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !4566, file: !70, line: 521, baseType: !4571, size: 192, offset: 320)
!4571 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1408, size: 192, elements: !1624)
!4572 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !4566, file: !70, line: 522, baseType: !4573, size: 1728, offset: 512)
!4573 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4574, size: 1728, elements: !1624)
!4574 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqinfo", file: !70, line: 222, size: 576, elements: !4575)
!4575 = !{!4576, !4596, !4597, !4598, !4599, !4600, !4601, !4602, !4603}
!4576 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_format", scope: !4574, file: !70, line: 223, baseType: !4577, size: 64)
!4577 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4578, size: 64)
!4578 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_type", file: !70, line: 443, size: 256, elements: !4579)
!4579 = !{!4580, !4581, !4594, !4595}
!4580 = !DIDerivedType(tag: DW_TAG_member, name: "qf_fmt_id", scope: !4578, file: !70, line: 444, baseType: !5, size: 32)
!4581 = !DIDerivedType(tag: DW_TAG_member, name: "qf_ops", scope: !4578, file: !70, line: 445, baseType: !4582, size: 64, offset: 64)
!4582 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4583, size: 64)
!4583 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4584)
!4584 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_ops", file: !70, line: 310, size: 512, elements: !4585)
!4585 = !{!4586, !4587, !4588, !4589, !4590, !4591, !4592, !4593}
!4586 = !DIDerivedType(tag: DW_TAG_member, name: "check_quota_file", scope: !4584, file: !70, line: 311, baseType: !1660, size: 64)
!4587 = !DIDerivedType(tag: DW_TAG_member, name: "read_file_info", scope: !4584, file: !70, line: 312, baseType: !1660, size: 64, offset: 64)
!4588 = !DIDerivedType(tag: DW_TAG_member, name: "write_file_info", scope: !4584, file: !70, line: 313, baseType: !1660, size: 64, offset: 128)
!4589 = !DIDerivedType(tag: DW_TAG_member, name: "free_file_info", scope: !4584, file: !70, line: 314, baseType: !1660, size: 64, offset: 192)
!4590 = !DIDerivedType(tag: DW_TAG_member, name: "read_dqblk", scope: !4584, file: !70, line: 315, baseType: !4376, size: 64, offset: 256)
!4591 = !DIDerivedType(tag: DW_TAG_member, name: "commit_dqblk", scope: !4584, file: !70, line: 316, baseType: !4376, size: 64, offset: 320)
!4592 = !DIDerivedType(tag: DW_TAG_member, name: "release_dqblk", scope: !4584, file: !70, line: 317, baseType: !4376, size: 64, offset: 384)
!4593 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !4584, file: !70, line: 318, baseType: !4448, size: 64, offset: 448)
!4594 = !DIDerivedType(tag: DW_TAG_member, name: "qf_owner", scope: !4578, file: !70, line: 446, baseType: !1014, size: 64, offset: 128)
!4595 = !DIDerivedType(tag: DW_TAG_member, name: "qf_next", scope: !4578, file: !70, line: 447, baseType: !4577, size: 64, offset: 192)
!4596 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_fmt_id", scope: !4574, file: !70, line: 224, baseType: !5, size: 32, offset: 64)
!4597 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_dirty_list", scope: !4574, file: !70, line: 226, baseType: !318, size: 128, offset: 128)
!4598 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_flags", scope: !4574, file: !70, line: 227, baseType: !346, size: 64, offset: 256)
!4599 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_bgrace", scope: !4574, file: !70, line: 228, baseType: !11, size: 32, offset: 320)
!4600 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_igrace", scope: !4574, file: !70, line: 229, baseType: !11, size: 32, offset: 352)
!4601 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_spc_limit", scope: !4574, file: !70, line: 230, baseType: !4412, size: 64, offset: 384)
!4602 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_ino_limit", scope: !4574, file: !70, line: 231, baseType: !4412, size: 64, offset: 448)
!4603 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_priv", scope: !4574, file: !70, line: 232, baseType: !625, size: 64, offset: 512)
!4604 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4566, file: !70, line: 523, baseType: !4605, size: 192, offset: 2240)
!4605 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4582, size: 192, elements: !1624)
!4606 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers", scope: !1579, file: !76, line: 1458, baseType: !4607, size: 2112, offset: 4288)
!4607 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sb_writers", file: !76, line: 1410, size: 2112, elements: !4608)
!4608 = !{!4609, !4610, !4611}
!4609 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !4607, file: !76, line: 1411, baseType: !5, size: 32)
!4610 = !DIDerivedType(tag: DW_TAG_member, name: "wait_unfrozen", scope: !4607, file: !76, line: 1412, baseType: !1921, size: 128, offset: 64)
!4611 = !DIDerivedType(tag: DW_TAG_member, name: "rw_sem", scope: !4607, file: !76, line: 1413, baseType: !4612, size: 1920, offset: 192)
!4612 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4613, size: 1920, elements: !1624)
!4613 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_rw_semaphore", file: !4614, line: 12, size: 640, elements: !4615)
!4614 = !DIFile(filename: "./include/linux/percpu-rwsem.h", directory: "/home/lizy2001/genbc/linux")
!4615 = !{!4616, !4624, !4626, !4631, !4632}
!4616 = !DIDerivedType(tag: DW_TAG_member, name: "rss", scope: !4613, file: !4614, line: 13, baseType: !4617, size: 320)
!4617 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcu_sync", file: !4618, line: 17, size: 320, elements: !4619)
!4618 = !DIFile(filename: "./include/linux/rcu_sync.h", directory: "/home/lizy2001/genbc/linux")
!4619 = !{!4620, !4621, !4622, !4623}
!4620 = !DIDerivedType(tag: DW_TAG_member, name: "gp_state", scope: !4617, file: !4618, line: 18, baseType: !5, size: 32)
!4621 = !DIDerivedType(tag: DW_TAG_member, name: "gp_count", scope: !4617, file: !4618, line: 19, baseType: !5, size: 32, offset: 32)
!4622 = !DIDerivedType(tag: DW_TAG_member, name: "gp_wait", scope: !4617, file: !4618, line: 20, baseType: !1921, size: 128, offset: 64)
!4623 = !DIDerivedType(tag: DW_TAG_member, name: "cb_head", scope: !4617, file: !4618, line: 22, baseType: !333, size: 128, align: 64, offset: 192)
!4624 = !DIDerivedType(tag: DW_TAG_member, name: "read_count", scope: !4613, file: !4614, line: 14, baseType: !4625, size: 64, offset: 320)
!4625 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11, size: 64)
!4626 = !DIDerivedType(tag: DW_TAG_member, name: "writer", scope: !4613, file: !4614, line: 15, baseType: !4627, size: 64, offset: 384)
!4627 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcuwait", file: !4628, line: 16, size: 64, elements: !4629)
!4628 = !DIFile(filename: "./include/linux/rcuwait.h", directory: "/home/lizy2001/genbc/linux")
!4629 = !{!4630}
!4630 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !4627, file: !4628, line: 17, baseType: !2358, size: 64)
!4631 = !DIDerivedType(tag: DW_TAG_member, name: "waiters", scope: !4613, file: !4614, line: 16, baseType: !1921, size: 128, offset: 448)
!4632 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !4613, file: !4614, line: 17, baseType: !417, size: 32, offset: 576)
!4633 = !DIDerivedType(tag: DW_TAG_member, name: "s_fs_info", scope: !1579, file: !76, line: 1465, baseType: !625, size: 64, offset: 6400)
!4634 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_gran", scope: !1579, file: !76, line: 1468, baseType: !1021, size: 32, offset: 6464)
!4635 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_min", scope: !1579, file: !76, line: 1470, baseType: !1516, size: 64, offset: 6528)
!4636 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_max", scope: !1579, file: !76, line: 1471, baseType: !1516, size: 64, offset: 6592)
!4637 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_mask", scope: !1579, file: !76, line: 1473, baseType: !527, size: 32, offset: 6656)
!4638 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_marks", scope: !1579, file: !76, line: 1474, baseType: !4639, size: 64, offset: 6720)
!4639 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4640, size: 64)
!4640 = !DICompositeType(tag: DW_TAG_structure_type, name: "fsnotify_mark_connector", file: !76, line: 603, flags: DIFlagFwdDecl)
!4641 = !DIDerivedType(tag: DW_TAG_member, name: "s_id", scope: !1579, file: !76, line: 1477, baseType: !4642, size: 256, offset: 6784)
!4642 = !DICompositeType(tag: DW_TAG_array_type, baseType: !302, size: 256, elements: !853)
!4643 = !DIDerivedType(tag: DW_TAG_member, name: "s_uuid", scope: !1579, file: !76, line: 1478, baseType: !4644, size: 128, offset: 7040)
!4644 = !DIDerivedType(tag: DW_TAG_typedef, name: "uuid_t", file: !4645, line: 18, baseType: !4646)
!4645 = !DIFile(filename: "./include/linux/uuid.h", directory: "/home/lizy2001/genbc/linux")
!4646 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !4645, line: 16, size: 128, elements: !4647)
!4647 = !{!4648}
!4648 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !4646, file: !4645, line: 17, baseType: !3255, size: 128)
!4649 = !DIDerivedType(tag: DW_TAG_member, name: "s_max_links", scope: !1579, file: !76, line: 1480, baseType: !11, size: 32, offset: 7168)
!4650 = !DIDerivedType(tag: DW_TAG_member, name: "s_mode", scope: !1579, file: !76, line: 1481, baseType: !4651, size: 32, offset: 7200)
!4651 = !DIDerivedType(tag: DW_TAG_typedef, name: "fmode_t", file: !311, line: 150, baseType: !11)
!4652 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_mutex", scope: !1579, file: !76, line: 1487, baseType: !1697, size: 192, offset: 7232)
!4653 = !DIDerivedType(tag: DW_TAG_member, name: "s_subtype", scope: !1579, file: !76, line: 1493, baseType: !326, size: 64, offset: 7424)
!4654 = !DIDerivedType(tag: DW_TAG_member, name: "s_d_op", scope: !1579, file: !76, line: 1495, baseType: !4655, size: 64, offset: 7488)
!4655 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4656, size: 64)
!4656 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4657)
!4657 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry_operations", file: !1369, line: 135, size: 1024, align: 512, elements: !4658)
!4658 = !{!4659, !4663, !4664, !4671, !4677, !4681, !4685, !4689, !4690, !4694, !4698, !4703, !4707}
!4659 = !DIDerivedType(tag: DW_TAG_member, name: "d_revalidate", scope: !4657, file: !1369, line: 136, baseType: !4660, size: 64)
!4660 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4661, size: 64)
!4661 = !DISubroutineType(types: !4662)
!4662 = !{!5, !1371, !11}
!4663 = !DIDerivedType(tag: DW_TAG_member, name: "d_weak_revalidate", scope: !4657, file: !1369, line: 137, baseType: !4660, size: 64, offset: 64)
!4664 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !4657, file: !1369, line: 138, baseType: !4665, size: 64, offset: 128)
!4665 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4666, size: 64)
!4666 = !DISubroutineType(types: !4667)
!4667 = !{!5, !4668, !4670}
!4668 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4669, size: 64)
!4669 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1372)
!4670 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1395, size: 64)
!4671 = !DIDerivedType(tag: DW_TAG_member, name: "d_compare", scope: !4657, file: !1369, line: 139, baseType: !4672, size: 64, offset: 192)
!4672 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4673, size: 64)
!4673 = !DISubroutineType(types: !4674)
!4674 = !{!5, !4668, !11, !326, !4675}
!4675 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4676, size: 64)
!4676 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1395)
!4677 = !DIDerivedType(tag: DW_TAG_member, name: "d_delete", scope: !4657, file: !1369, line: 141, baseType: !4678, size: 64, offset: 256)
!4678 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4679, size: 64)
!4679 = !DISubroutineType(types: !4680)
!4680 = !{!5, !4668}
!4681 = !DIDerivedType(tag: DW_TAG_member, name: "d_init", scope: !4657, file: !1369, line: 142, baseType: !4682, size: 64, offset: 320)
!4682 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4683, size: 64)
!4683 = !DISubroutineType(types: !4684)
!4684 = !{!5, !1371}
!4685 = !DIDerivedType(tag: DW_TAG_member, name: "d_release", scope: !4657, file: !1369, line: 143, baseType: !4686, size: 64, offset: 384)
!4686 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4687, size: 64)
!4687 = !DISubroutineType(types: !4688)
!4688 = !{null, !1371}
!4689 = !DIDerivedType(tag: DW_TAG_member, name: "d_prune", scope: !4657, file: !1369, line: 144, baseType: !4686, size: 64, offset: 448)
!4690 = !DIDerivedType(tag: DW_TAG_member, name: "d_iput", scope: !4657, file: !1369, line: 145, baseType: !4691, size: 64, offset: 512)
!4691 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4692, size: 64)
!4692 = !DISubroutineType(types: !4693)
!4693 = !{null, !1371, !1408}
!4694 = !DIDerivedType(tag: DW_TAG_member, name: "d_dname", scope: !4657, file: !1369, line: 146, baseType: !4695, size: 64, offset: 576)
!4695 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4696, size: 64)
!4696 = !DISubroutineType(types: !4697)
!4697 = !{!1072, !1371, !1072, !5}
!4698 = !DIDerivedType(tag: DW_TAG_member, name: "d_automount", scope: !4657, file: !1369, line: 147, baseType: !4699, size: 64, offset: 640)
!4699 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4700, size: 64)
!4700 = !DISubroutineType(types: !4701)
!4701 = !{!1367, !4702}
!4702 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1363, size: 64)
!4703 = !DIDerivedType(tag: DW_TAG_member, name: "d_manage", scope: !4657, file: !1369, line: 148, baseType: !4704, size: 64, offset: 704)
!4704 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4705, size: 64)
!4705 = !DISubroutineType(types: !4706)
!4706 = !{!5, !1525, !805}
!4707 = !DIDerivedType(tag: DW_TAG_member, name: "d_real", scope: !4657, file: !1369, line: 149, baseType: !4708, size: 64, offset: 768)
!4708 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4709, size: 64)
!4709 = !DISubroutineType(types: !4710)
!4710 = !{!1371, !1371, !4711}
!4711 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4712, size: 64)
!4712 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1409)
!4713 = !DIDerivedType(tag: DW_TAG_member, name: "cleancache_poolid", scope: !1579, file: !76, line: 1500, baseType: !5, size: 32, offset: 7552)
!4714 = !DIDerivedType(tag: DW_TAG_member, name: "s_shrink", scope: !1579, file: !76, line: 1502, baseType: !4715, size: 448, offset: 7616)
!4715 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrinker", file: !4360, line: 60, size: 448, elements: !4716)
!4716 = !{!4717, !4722, !4723, !4724, !4725, !4726, !4727}
!4717 = !DIDerivedType(tag: DW_TAG_member, name: "count_objects", scope: !4715, file: !4360, line: 61, baseType: !4718, size: 64)
!4718 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4719, size: 64)
!4719 = !DISubroutineType(types: !4720)
!4720 = !{!346, !4721, !4358}
!4721 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4715, size: 64)
!4722 = !DIDerivedType(tag: DW_TAG_member, name: "scan_objects", scope: !4715, file: !4360, line: 63, baseType: !4718, size: 64, offset: 64)
!4723 = !DIDerivedType(tag: DW_TAG_member, name: "batch", scope: !4715, file: !4360, line: 66, baseType: !1032, size: 64, offset: 128)
!4724 = !DIDerivedType(tag: DW_TAG_member, name: "seeks", scope: !4715, file: !4360, line: 67, baseType: !5, size: 32, offset: 192)
!4725 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4715, file: !4360, line: 68, baseType: !11, size: 32, offset: 224)
!4726 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !4715, file: !4360, line: 71, baseType: !318, size: 128, offset: 256)
!4727 = !DIDerivedType(tag: DW_TAG_member, name: "nr_deferred", scope: !4715, file: !4360, line: 77, baseType: !4728, size: 64, offset: 384)
!4728 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !405, size: 64)
!4729 = !DIDerivedType(tag: DW_TAG_member, name: "s_remove_count", scope: !1579, file: !76, line: 1505, baseType: !405, size: 64, offset: 8064)
!4730 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_inode_refs", scope: !1579, file: !76, line: 1508, baseType: !405, size: 64, offset: 8128)
!4731 = !DIDerivedType(tag: DW_TAG_member, name: "s_readonly_remount", scope: !1579, file: !76, line: 1511, baseType: !5, size: 32, offset: 8192)
!4732 = !DIDerivedType(tag: DW_TAG_member, name: "s_wb_err", scope: !1579, file: !76, line: 1514, baseType: !2057, size: 32, offset: 8224)
!4733 = !DIDerivedType(tag: DW_TAG_member, name: "s_dio_done_wq", scope: !1579, file: !76, line: 1517, baseType: !4734, size: 64, offset: 8256)
!4734 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4735, size: 64)
!4735 = !DICompositeType(tag: DW_TAG_structure_type, name: "workqueue_struct", file: !2861, line: 18, flags: DIFlagFwdDecl)
!4736 = !DIDerivedType(tag: DW_TAG_member, name: "s_pins", scope: !1579, file: !76, line: 1518, baseType: !1613, size: 64, offset: 8320)
!4737 = !DIDerivedType(tag: DW_TAG_member, name: "s_user_ns", scope: !1579, file: !76, line: 1525, baseType: !2812, size: 64, offset: 8384)
!4738 = !DIDerivedType(tag: DW_TAG_member, name: "s_dentry_lru", scope: !1579, file: !76, line: 1532, baseType: !4739, size: 64, offset: 8448)
!4739 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru", file: !4740, line: 52, size: 64, elements: !4741)
!4740 = !DIFile(filename: "./include/linux/list_lru.h", directory: "/home/lizy2001/genbc/linux")
!4741 = !{!4742}
!4742 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !4739, file: !4740, line: 53, baseType: !4743, size: 64)
!4743 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4744, size: 64)
!4744 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_node", file: !4740, line: 40, size: 256, elements: !4745)
!4745 = !{!4746, !4747, !4752}
!4746 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4744, file: !4740, line: 42, baseType: !1702)
!4747 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !4744, file: !4740, line: 44, baseType: !4748, size: 192)
!4748 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_one", file: !4740, line: 28, size: 192, elements: !4749)
!4749 = !{!4750, !4751}
!4750 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !4748, file: !4740, line: 29, baseType: !318, size: 128)
!4751 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !4748, file: !4740, line: 31, baseType: !1032, size: 64, offset: 128)
!4752 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !4744, file: !4740, line: 49, baseType: !1032, size: 64, offset: 192)
!4753 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_lru", scope: !1579, file: !76, line: 1533, baseType: !4739, size: 64, offset: 8512)
!4754 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1579, file: !76, line: 1534, baseType: !333, size: 128, align: 64, offset: 8576)
!4755 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_work", scope: !1579, file: !76, line: 1535, baseType: !2860, size: 256, offset: 8704)
!4756 = !DIDerivedType(tag: DW_TAG_member, name: "s_sync_lock", scope: !1579, file: !76, line: 1537, baseType: !1697, size: 192, offset: 8960)
!4757 = !DIDerivedType(tag: DW_TAG_member, name: "s_stack_depth", scope: !1579, file: !76, line: 1542, baseType: !5, size: 32, offset: 9152)
!4758 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_list_lock", scope: !1579, file: !76, line: 1545, baseType: !1702, offset: 9184)
!4759 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes", scope: !1579, file: !76, line: 1546, baseType: !318, size: 128, offset: 9216)
!4760 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_wblist_lock", scope: !1579, file: !76, line: 1548, baseType: !1702, offset: 9344)
!4761 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes_wb", scope: !1579, file: !76, line: 1549, baseType: !318, size: 128, offset: 9344)
!4762 = !DIDerivedType(tag: DW_TAG_member, name: "i_mapping", scope: !1409, file: !76, line: 624, baseType: !1764, size: 64, offset: 256)
!4763 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino", scope: !1409, file: !76, line: 631, baseType: !346, size: 64, offset: 320)
!4764 = !DIDerivedType(tag: DW_TAG_member, scope: !1409, file: !76, line: 639, baseType: !4765, size: 32, offset: 384)
!4765 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1409, file: !76, line: 639, size: 32, elements: !4766)
!4766 = !{!4767, !4769}
!4767 = !DIDerivedType(tag: DW_TAG_member, name: "i_nlink", scope: !4765, file: !76, line: 640, baseType: !4768, size: 32)
!4768 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11)
!4769 = !DIDerivedType(tag: DW_TAG_member, name: "__i_nlink", scope: !4765, file: !76, line: 641, baseType: !11, size: 32)
!4770 = !DIDerivedType(tag: DW_TAG_member, name: "i_rdev", scope: !1409, file: !76, line: 643, baseType: !1491, size: 32, offset: 416)
!4771 = !DIDerivedType(tag: DW_TAG_member, name: "i_size", scope: !1409, file: !76, line: 644, baseType: !1509, size: 64, offset: 448)
!4772 = !DIDerivedType(tag: DW_TAG_member, name: "i_atime", scope: !1409, file: !76, line: 645, baseType: !1512, size: 128, offset: 512)
!4773 = !DIDerivedType(tag: DW_TAG_member, name: "i_mtime", scope: !1409, file: !76, line: 646, baseType: !1512, size: 128, offset: 640)
!4774 = !DIDerivedType(tag: DW_TAG_member, name: "i_ctime", scope: !1409, file: !76, line: 647, baseType: !1512, size: 128, offset: 768)
!4775 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock", scope: !1409, file: !76, line: 648, baseType: !1702, offset: 896)
!4776 = !DIDerivedType(tag: DW_TAG_member, name: "i_bytes", scope: !1409, file: !76, line: 649, baseType: !510, size: 16, offset: 896)
!4777 = !DIDerivedType(tag: DW_TAG_member, name: "i_blkbits", scope: !1409, file: !76, line: 650, baseType: !828, size: 8, offset: 912)
!4778 = !DIDerivedType(tag: DW_TAG_member, name: "i_write_hint", scope: !1409, file: !76, line: 651, baseType: !828, size: 8, offset: 920)
!4779 = !DIDerivedType(tag: DW_TAG_member, name: "i_blocks", scope: !1409, file: !76, line: 652, baseType: !4532, size: 64, offset: 960)
!4780 = !DIDerivedType(tag: DW_TAG_member, name: "i_state", scope: !1409, file: !76, line: 659, baseType: !346, size: 64, offset: 1024)
!4781 = !DIDerivedType(tag: DW_TAG_member, name: "i_rwsem", scope: !1409, file: !76, line: 660, baseType: !1787, size: 256, offset: 1088)
!4782 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_when", scope: !1409, file: !76, line: 662, baseType: !346, size: 64, offset: 1344)
!4783 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_time_when", scope: !1409, file: !76, line: 663, baseType: !346, size: 64, offset: 1408)
!4784 = !DIDerivedType(tag: DW_TAG_member, name: "i_hash", scope: !1409, file: !76, line: 665, baseType: !310, size: 128, offset: 1472)
!4785 = !DIDerivedType(tag: DW_TAG_member, name: "i_io_list", scope: !1409, file: !76, line: 666, baseType: !318, size: 128, offset: 1600)
!4786 = !DIDerivedType(tag: DW_TAG_member, name: "i_lru", scope: !1409, file: !76, line: 675, baseType: !318, size: 128, offset: 1728)
!4787 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb_list", scope: !1409, file: !76, line: 676, baseType: !318, size: 128, offset: 1856)
!4788 = !DIDerivedType(tag: DW_TAG_member, name: "i_wb_list", scope: !1409, file: !76, line: 677, baseType: !318, size: 128, offset: 1984)
!4789 = !DIDerivedType(tag: DW_TAG_member, scope: !1409, file: !76, line: 678, baseType: !4790, size: 128, offset: 2112)
!4790 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1409, file: !76, line: 678, size: 128, elements: !4791)
!4791 = !{!4792, !4793}
!4792 = !DIDerivedType(tag: DW_TAG_member, name: "i_dentry", scope: !4790, file: !76, line: 679, baseType: !1613, size: 64)
!4793 = !DIDerivedType(tag: DW_TAG_member, name: "i_rcu", scope: !4790, file: !76, line: 680, baseType: !333, size: 128, align: 64)
!4794 = !DIDerivedType(tag: DW_TAG_member, name: "i_version", scope: !1409, file: !76, line: 682, baseType: !407, size: 64, offset: 2240)
!4795 = !DIDerivedType(tag: DW_TAG_member, name: "i_sequence", scope: !1409, file: !76, line: 683, baseType: !407, size: 64, offset: 2304)
!4796 = !DIDerivedType(tag: DW_TAG_member, name: "i_count", scope: !1409, file: !76, line: 684, baseType: !417, size: 32, offset: 2368)
!4797 = !DIDerivedType(tag: DW_TAG_member, name: "i_dio_count", scope: !1409, file: !76, line: 685, baseType: !417, size: 32, offset: 2400)
!4798 = !DIDerivedType(tag: DW_TAG_member, name: "i_writecount", scope: !1409, file: !76, line: 686, baseType: !417, size: 32, offset: 2432)
!4799 = !DIDerivedType(tag: DW_TAG_member, name: "i_readcount", scope: !1409, file: !76, line: 688, baseType: !417, size: 32, offset: 2464)
!4800 = !DIDerivedType(tag: DW_TAG_member, scope: !1409, file: !76, line: 690, baseType: !4801, size: 64, offset: 2496)
!4801 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1409, file: !76, line: 690, size: 64, elements: !4802)
!4802 = !{!4803, !5008}
!4803 = !DIDerivedType(tag: DW_TAG_member, name: "i_fop", scope: !4801, file: !76, line: 691, baseType: !4804, size: 64)
!4804 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4805, size: 64)
!4805 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4806)
!4806 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_operations", file: !76, line: 1822, size: 2048, elements: !4807)
!4807 = !{!4808, !4809, !4813, !4817, !4821, !4822, !4823, !4827, !4840, !4841, !4848, !4852, !4853, !4857, !4858, !4862, !4867, !4868, !4872, !4876, !4968, !4972, !4973, !4977, !4978, !4982, !4986, !4991, !4995, !4999, !5003, !5007}
!4808 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4806, file: !76, line: 1823, baseType: !1014, size: 64)
!4809 = !DIDerivedType(tag: DW_TAG_member, name: "llseek", scope: !4806, file: !76, line: 1824, baseType: !4810, size: 64, offset: 64)
!4810 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4811, size: 64)
!4811 = !DISubroutineType(types: !4812)
!4812 = !{!1509, !1349, !1509, !5}
!4813 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !4806, file: !76, line: 1825, baseType: !4814, size: 64, offset: 128)
!4814 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4815, size: 64)
!4815 = !DISubroutineType(types: !4816)
!4816 = !{!1554, !1349, !1072, !1073, !1726}
!4817 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !4806, file: !76, line: 1826, baseType: !4818, size: 64, offset: 192)
!4818 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4819, size: 64)
!4819 = !DISubroutineType(types: !4820)
!4820 = !{!1554, !1349, !326, !1073, !1726}
!4821 = !DIDerivedType(tag: DW_TAG_member, name: "read_iter", scope: !4806, file: !76, line: 1827, baseType: !1857, size: 64, offset: 256)
!4822 = !DIDerivedType(tag: DW_TAG_member, name: "write_iter", scope: !4806, file: !76, line: 1828, baseType: !1857, size: 64, offset: 320)
!4823 = !DIDerivedType(tag: DW_TAG_member, name: "iopoll", scope: !4806, file: !76, line: 1829, baseType: !4824, size: 64, offset: 384)
!4824 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4825, size: 64)
!4825 = !DISubroutineType(types: !4826)
!4826 = !{!5, !1860, !805}
!4827 = !DIDerivedType(tag: DW_TAG_member, name: "iterate", scope: !4806, file: !76, line: 1830, baseType: !4828, size: 64, offset: 448)
!4828 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4829, size: 64)
!4829 = !DISubroutineType(types: !4830)
!4830 = !{!5, !1349, !4831}
!4831 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4832, size: 64)
!4832 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dir_context", file: !76, line: 1776, size: 128, elements: !4833)
!4833 = !{!4834, !4839}
!4834 = !DIDerivedType(tag: DW_TAG_member, name: "actor", scope: !4832, file: !76, line: 1777, baseType: !4835, size: 64)
!4835 = !DIDerivedType(tag: DW_TAG_typedef, name: "filldir_t", file: !76, line: 1773, baseType: !4836)
!4836 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4837, size: 64)
!4837 = !DISubroutineType(types: !4838)
!4838 = !{!5, !4831, !326, !5, !1509, !365, !11}
!4839 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !4832, file: !76, line: 1778, baseType: !1509, size: 64, offset: 64)
!4840 = !DIDerivedType(tag: DW_TAG_member, name: "iterate_shared", scope: !4806, file: !76, line: 1831, baseType: !4828, size: 64, offset: 512)
!4841 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !4806, file: !76, line: 1832, baseType: !4842, size: 64, offset: 576)
!4842 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4843, size: 64)
!4843 = !DISubroutineType(types: !4844)
!4844 = !{!4845, !1349, !4846}
!4845 = !DIDerivedType(tag: DW_TAG_typedef, name: "__poll_t", file: !559, line: 52, baseType: !11)
!4846 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4847, size: 64)
!4847 = !DICompositeType(tag: DW_TAG_structure_type, name: "poll_table_struct", file: !76, line: 56, flags: DIFlagFwdDecl)
!4848 = !DIDerivedType(tag: DW_TAG_member, name: "unlocked_ioctl", scope: !4806, file: !76, line: 1833, baseType: !4849, size: 64, offset: 640)
!4849 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4850, size: 64)
!4850 = !DISubroutineType(types: !4851)
!4851 = !{!1032, !1349, !11, !346}
!4852 = !DIDerivedType(tag: DW_TAG_member, name: "compat_ioctl", scope: !4806, file: !76, line: 1834, baseType: !4849, size: 64, offset: 704)
!4853 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !4806, file: !76, line: 1835, baseType: !4854, size: 64, offset: 768)
!4854 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4855, size: 64)
!4855 = !DISubroutineType(types: !4856)
!4856 = !{!5, !1349, !2130}
!4857 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_supported_flags", scope: !4806, file: !76, line: 1836, baseType: !346, size: 64, offset: 832)
!4858 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !4806, file: !76, line: 1837, baseType: !4859, size: 64, offset: 896)
!4859 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4860, size: 64)
!4860 = !DISubroutineType(types: !4861)
!4861 = !{!5, !1408, !1349}
!4862 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !4806, file: !76, line: 1838, baseType: !4863, size: 64, offset: 960)
!4863 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4864, size: 64)
!4864 = !DISubroutineType(types: !4865)
!4865 = !{!5, !1349, !4866}
!4866 = !DIDerivedType(tag: DW_TAG_typedef, name: "fl_owner_t", file: !76, line: 1007, baseType: !625)
!4867 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !4806, file: !76, line: 1839, baseType: !4859, size: 64, offset: 1024)
!4868 = !DIDerivedType(tag: DW_TAG_member, name: "fsync", scope: !4806, file: !76, line: 1840, baseType: !4869, size: 64, offset: 1088)
!4869 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4870, size: 64)
!4870 = !DISubroutineType(types: !4871)
!4871 = !{!5, !1349, !1509, !1509, !5}
!4872 = !DIDerivedType(tag: DW_TAG_member, name: "fasync", scope: !4806, file: !76, line: 1841, baseType: !4873, size: 64, offset: 1152)
!4873 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4874, size: 64)
!4874 = !DISubroutineType(types: !4875)
!4875 = !{!5, !5, !1349, !5}
!4876 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4806, file: !76, line: 1842, baseType: !4877, size: 64, offset: 1216)
!4877 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4878, size: 64)
!4878 = !DISubroutineType(types: !4879)
!4879 = !{!5, !1349, !5, !4880}
!4880 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4881, size: 64)
!4881 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock", file: !76, line: 1062, size: 1664, elements: !4882)
!4882 = !{!4883, !4884, !4885, !4886, !4887, !4888, !4889, !4890, !4891, !4892, !4893, !4894, !4895, !4896, !4897, !4898, !4899, !4900, !4913, !4944}
!4883 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocker", scope: !4881, file: !76, line: 1063, baseType: !4880, size: 64)
!4884 = !DIDerivedType(tag: DW_TAG_member, name: "fl_list", scope: !4881, file: !76, line: 1064, baseType: !318, size: 128, offset: 64)
!4885 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link", scope: !4881, file: !76, line: 1065, baseType: !310, size: 128, offset: 192)
!4886 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_requests", scope: !4881, file: !76, line: 1066, baseType: !318, size: 128, offset: 320)
!4887 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_member", scope: !4881, file: !76, line: 1069, baseType: !318, size: 128, offset: 448)
!4888 = !DIDerivedType(tag: DW_TAG_member, name: "fl_owner", scope: !4881, file: !76, line: 1072, baseType: !4866, size: 64, offset: 576)
!4889 = !DIDerivedType(tag: DW_TAG_member, name: "fl_flags", scope: !4881, file: !76, line: 1073, baseType: !11, size: 32, offset: 640)
!4890 = !DIDerivedType(tag: DW_TAG_member, name: "fl_type", scope: !4881, file: !76, line: 1074, baseType: !516, size: 8, offset: 672)
!4891 = !DIDerivedType(tag: DW_TAG_member, name: "fl_pid", scope: !4881, file: !76, line: 1075, baseType: !11, size: 32, offset: 704)
!4892 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link_cpu", scope: !4881, file: !76, line: 1076, baseType: !5, size: 32, offset: 736)
!4893 = !DIDerivedType(tag: DW_TAG_member, name: "fl_wait", scope: !4881, file: !76, line: 1077, baseType: !1921, size: 128, offset: 768)
!4894 = !DIDerivedType(tag: DW_TAG_member, name: "fl_file", scope: !4881, file: !76, line: 1078, baseType: !1349, size: 64, offset: 896)
!4895 = !DIDerivedType(tag: DW_TAG_member, name: "fl_start", scope: !4881, file: !76, line: 1079, baseType: !1509, size: 64, offset: 960)
!4896 = !DIDerivedType(tag: DW_TAG_member, name: "fl_end", scope: !4881, file: !76, line: 1080, baseType: !1509, size: 64, offset: 1024)
!4897 = !DIDerivedType(tag: DW_TAG_member, name: "fl_fasync", scope: !4881, file: !76, line: 1082, baseType: !1940, size: 64, offset: 1088)
!4898 = !DIDerivedType(tag: DW_TAG_member, name: "fl_break_time", scope: !4881, file: !76, line: 1084, baseType: !346, size: 64, offset: 1152)
!4899 = !DIDerivedType(tag: DW_TAG_member, name: "fl_downgrade_time", scope: !4881, file: !76, line: 1085, baseType: !346, size: 64, offset: 1216)
!4900 = !DIDerivedType(tag: DW_TAG_member, name: "fl_ops", scope: !4881, file: !76, line: 1087, baseType: !4901, size: 64, offset: 1280)
!4901 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4902, size: 64)
!4902 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4903)
!4903 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_operations", file: !76, line: 1011, size: 128, elements: !4904)
!4904 = !{!4905, !4909}
!4905 = !DIDerivedType(tag: DW_TAG_member, name: "fl_copy_lock", scope: !4903, file: !76, line: 1012, baseType: !4906, size: 64)
!4906 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4907, size: 64)
!4907 = !DISubroutineType(types: !4908)
!4908 = !{null, !4880, !4880}
!4909 = !DIDerivedType(tag: DW_TAG_member, name: "fl_release_private", scope: !4903, file: !76, line: 1013, baseType: !4910, size: 64, offset: 64)
!4910 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4911, size: 64)
!4911 = !DISubroutineType(types: !4912)
!4912 = !{null, !4880}
!4913 = !DIDerivedType(tag: DW_TAG_member, name: "fl_lmops", scope: !4881, file: !76, line: 1088, baseType: !4914, size: 64, offset: 1344)
!4914 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4915, size: 64)
!4915 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4916)
!4916 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_manager_operations", file: !76, line: 1016, size: 512, elements: !4917)
!4917 = !{!4918, !4922, !4926, !4927, !4931, !4935, !4939, !4943}
!4918 = !DIDerivedType(tag: DW_TAG_member, name: "lm_get_owner", scope: !4916, file: !76, line: 1017, baseType: !4919, size: 64)
!4919 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4920, size: 64)
!4920 = !DISubroutineType(types: !4921)
!4921 = !{!4866, !4866}
!4922 = !DIDerivedType(tag: DW_TAG_member, name: "lm_put_owner", scope: !4916, file: !76, line: 1018, baseType: !4923, size: 64, offset: 64)
!4923 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4924, size: 64)
!4924 = !DISubroutineType(types: !4925)
!4925 = !{null, !4866}
!4926 = !DIDerivedType(tag: DW_TAG_member, name: "lm_notify", scope: !4916, file: !76, line: 1019, baseType: !4910, size: 64, offset: 128)
!4927 = !DIDerivedType(tag: DW_TAG_member, name: "lm_grant", scope: !4916, file: !76, line: 1020, baseType: !4928, size: 64, offset: 192)
!4928 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4929, size: 64)
!4929 = !DISubroutineType(types: !4930)
!4930 = !{!5, !4880, !5}
!4931 = !DIDerivedType(tag: DW_TAG_member, name: "lm_break", scope: !4916, file: !76, line: 1021, baseType: !4932, size: 64, offset: 256)
!4932 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4933, size: 64)
!4933 = !DISubroutineType(types: !4934)
!4934 = !{!805, !4880}
!4935 = !DIDerivedType(tag: DW_TAG_member, name: "lm_change", scope: !4916, file: !76, line: 1022, baseType: !4936, size: 64, offset: 320)
!4936 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4937, size: 64)
!4937 = !DISubroutineType(types: !4938)
!4938 = !{!5, !4880, !5, !321}
!4939 = !DIDerivedType(tag: DW_TAG_member, name: "lm_setup", scope: !4916, file: !76, line: 1023, baseType: !4940, size: 64, offset: 384)
!4940 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4941, size: 64)
!4941 = !DISubroutineType(types: !4942)
!4942 = !{null, !4880, !1834}
!4943 = !DIDerivedType(tag: DW_TAG_member, name: "lm_breaker_owns_lease", scope: !4916, file: !76, line: 1024, baseType: !4932, size: 64, offset: 448)
!4944 = !DIDerivedType(tag: DW_TAG_member, name: "fl_u", scope: !4881, file: !76, line: 1097, baseType: !4945, size: 256, offset: 1408)
!4945 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4881, file: !76, line: 1089, size: 256, elements: !4946)
!4946 = !{!4947, !4956, !4962}
!4947 = !DIDerivedType(tag: DW_TAG_member, name: "nfs_fl", scope: !4945, file: !76, line: 1090, baseType: !4948, size: 256)
!4948 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs_lock_info", file: !4949, line: 10, size: 256, elements: !4950)
!4949 = !DIFile(filename: "./include/linux/nfs_fs_i.h", directory: "/home/lizy2001/genbc/linux")
!4950 = !{!4951, !4952, !4955}
!4951 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !4948, file: !4949, line: 11, baseType: !1021, size: 32)
!4952 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4948, file: !4949, line: 12, baseType: !4953, size: 64, offset: 64)
!4953 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4954, size: 64)
!4954 = !DICompositeType(tag: DW_TAG_structure_type, name: "nlm_lockowner", file: !4949, line: 5, flags: DIFlagFwdDecl)
!4955 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !4948, file: !4949, line: 13, baseType: !318, size: 128, offset: 128)
!4956 = !DIDerivedType(tag: DW_TAG_member, name: "nfs4_fl", scope: !4945, file: !76, line: 1091, baseType: !4957, size: 64)
!4957 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_info", file: !4949, line: 17, size: 64, elements: !4958)
!4958 = !{!4959}
!4959 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4957, file: !4949, line: 18, baseType: !4960, size: 64)
!4960 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4961, size: 64)
!4961 = !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_state", file: !4949, line: 16, flags: DIFlagFwdDecl)
!4962 = !DIDerivedType(tag: DW_TAG_member, name: "afs", scope: !4945, file: !76, line: 1096, baseType: !4963, size: 192)
!4963 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4945, file: !76, line: 1092, size: 192, elements: !4964)
!4964 = !{!4965, !4966, !4967}
!4965 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !4963, file: !76, line: 1093, baseType: !318, size: 128)
!4966 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !4963, file: !76, line: 1094, baseType: !5, size: 32, offset: 128)
!4967 = !DIDerivedType(tag: DW_TAG_member, name: "debug_id", scope: !4963, file: !76, line: 1095, baseType: !11, size: 32, offset: 160)
!4968 = !DIDerivedType(tag: DW_TAG_member, name: "sendpage", scope: !4806, file: !76, line: 1843, baseType: !4969, size: 64, offset: 1280)
!4969 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4970, size: 64)
!4970 = !DISubroutineType(types: !4971)
!4971 = !{!1554, !1349, !1751, !5, !1073, !1726, !5}
!4972 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !4806, file: !76, line: 1844, baseType: !2250, size: 64, offset: 1344)
!4973 = !DIDerivedType(tag: DW_TAG_member, name: "check_flags", scope: !4806, file: !76, line: 1845, baseType: !4974, size: 64, offset: 1408)
!4974 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4975, size: 64)
!4975 = !DISubroutineType(types: !4976)
!4976 = !{!5, !5}
!4977 = !DIDerivedType(tag: DW_TAG_member, name: "flock", scope: !4806, file: !76, line: 1846, baseType: !4877, size: 64, offset: 1472)
!4978 = !DIDerivedType(tag: DW_TAG_member, name: "splice_write", scope: !4806, file: !76, line: 1847, baseType: !4979, size: 64, offset: 1536)
!4979 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4980, size: 64)
!4980 = !DISubroutineType(types: !4981)
!4981 = !{!1554, !1915, !1349, !1726, !1073, !11}
!4982 = !DIDerivedType(tag: DW_TAG_member, name: "splice_read", scope: !4806, file: !76, line: 1848, baseType: !4983, size: 64, offset: 1600)
!4983 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4984, size: 64)
!4984 = !DISubroutineType(types: !4985)
!4985 = !{!1554, !1349, !1726, !1915, !1073, !11}
!4986 = !DIDerivedType(tag: DW_TAG_member, name: "setlease", scope: !4806, file: !76, line: 1849, baseType: !4987, size: 64, offset: 1664)
!4987 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4988, size: 64)
!4988 = !DISubroutineType(types: !4989)
!4989 = !{!5, !1349, !1032, !4990, !1834}
!4990 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4880, size: 64)
!4991 = !DIDerivedType(tag: DW_TAG_member, name: "fallocate", scope: !4806, file: !76, line: 1850, baseType: !4992, size: 64, offset: 1728)
!4992 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4993, size: 64)
!4993 = !DISubroutineType(types: !4994)
!4994 = !{!1032, !1349, !5, !1509, !1509}
!4995 = !DIDerivedType(tag: DW_TAG_member, name: "show_fdinfo", scope: !4806, file: !76, line: 1852, baseType: !4996, size: 64, offset: 1792)
!4996 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4997, size: 64)
!4997 = !DISubroutineType(types: !4998)
!4998 = !{null, !1685, !1349}
!4999 = !DIDerivedType(tag: DW_TAG_member, name: "copy_file_range", scope: !4806, file: !76, line: 1856, baseType: !5000, size: 64, offset: 1856)
!5000 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5001, size: 64)
!5001 = !DISubroutineType(types: !5002)
!5002 = !{!1554, !1349, !1509, !1349, !1509, !1073, !11}
!5003 = !DIDerivedType(tag: DW_TAG_member, name: "remap_file_range", scope: !4806, file: !76, line: 1858, baseType: !5004, size: 64, offset: 1920)
!5004 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5005, size: 64)
!5005 = !DISubroutineType(types: !5006)
!5006 = !{!1509, !1349, !1509, !1349, !1509, !1509, !11}
!5007 = !DIDerivedType(tag: DW_TAG_member, name: "fadvise", scope: !4806, file: !76, line: 1861, baseType: !4869, size: 64, offset: 1984)
!5008 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !4801, file: !76, line: 692, baseType: !1639, size: 64)
!5009 = !DIDerivedType(tag: DW_TAG_member, name: "i_flctx", scope: !1409, file: !76, line: 694, baseType: !5010, size: 64, offset: 2560)
!5010 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5011, size: 64)
!5011 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_context", file: !76, line: 1100, size: 384, elements: !5012)
!5012 = !{!5013, !5014, !5015, !5016}
!5013 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lock", scope: !5011, file: !76, line: 1101, baseType: !1702)
!5014 = !DIDerivedType(tag: DW_TAG_member, name: "flc_flock", scope: !5011, file: !76, line: 1102, baseType: !318, size: 128)
!5015 = !DIDerivedType(tag: DW_TAG_member, name: "flc_posix", scope: !5011, file: !76, line: 1103, baseType: !318, size: 128, offset: 128)
!5016 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lease", scope: !5011, file: !76, line: 1104, baseType: !318, size: 128, offset: 256)
!5017 = !DIDerivedType(tag: DW_TAG_member, name: "i_data", scope: !1409, file: !76, line: 695, baseType: !1765, size: 1216, align: 64, offset: 2624)
!5018 = !DIDerivedType(tag: DW_TAG_member, name: "i_devices", scope: !1409, file: !76, line: 696, baseType: !318, size: 128, offset: 3840)
!5019 = !DIDerivedType(tag: DW_TAG_member, scope: !1409, file: !76, line: 697, baseType: !5020, size: 64, offset: 3968)
!5020 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1409, file: !76, line: 697, size: 64, elements: !5021)
!5021 = !{!5022, !5023, !5024, !5027, !5028}
!5022 = !DIDerivedType(tag: DW_TAG_member, name: "i_pipe", scope: !5020, file: !76, line: 698, baseType: !1915, size: 64)
!5023 = !DIDerivedType(tag: DW_TAG_member, name: "i_bdev", scope: !5020, file: !76, line: 699, baseType: !4557, size: 64)
!5024 = !DIDerivedType(tag: DW_TAG_member, name: "i_cdev", scope: !5020, file: !76, line: 700, baseType: !5025, size: 64)
!5025 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5026, size: 64)
!5026 = !DICompositeType(tag: DW_TAG_structure_type, name: "cdev", file: !76, line: 700, flags: DIFlagFwdDecl)
!5027 = !DIDerivedType(tag: DW_TAG_member, name: "i_link", scope: !5020, file: !76, line: 701, baseType: !1072, size: 64)
!5028 = !DIDerivedType(tag: DW_TAG_member, name: "i_dir_seq", scope: !5020, file: !76, line: 702, baseType: !11, size: 32)
!5029 = !DIDerivedType(tag: DW_TAG_member, name: "i_generation", scope: !1409, file: !76, line: 705, baseType: !527, size: 32, offset: 4032)
!5030 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_mask", scope: !1409, file: !76, line: 708, baseType: !527, size: 32, offset: 4064)
!5031 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_marks", scope: !1409, file: !76, line: 709, baseType: !4639, size: 64, offset: 4096)
!5032 = !DIDerivedType(tag: DW_TAG_member, name: "i_private", scope: !1409, file: !76, line: 720, baseType: !625, size: 64, offset: 4160)
!5033 = !DIDerivedType(tag: DW_TAG_member, name: "d_iname", scope: !1372, file: !1369, line: 98, baseType: !1065, size: 256, offset: 448)
!5034 = !DIDerivedType(tag: DW_TAG_member, name: "d_lockref", scope: !1372, file: !1369, line: 101, baseType: !5035, size: 32, offset: 704)
!5035 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lockref", file: !5036, line: 25, size: 32, elements: !5037)
!5036 = !DIFile(filename: "./include/linux/lockref.h", directory: "/home/lizy2001/genbc/linux")
!5037 = !{!5038}
!5038 = !DIDerivedType(tag: DW_TAG_member, scope: !5035, file: !5036, line: 26, baseType: !5039, size: 32)
!5039 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5035, file: !5036, line: 26, size: 32, elements: !5040)
!5040 = !{!5041}
!5041 = !DIDerivedType(tag: DW_TAG_member, scope: !5039, file: !5036, line: 30, baseType: !5042, size: 32)
!5042 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5039, file: !5036, line: 30, size: 32, elements: !5043)
!5043 = !{!5044, !5045}
!5044 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !5042, file: !5036, line: 31, baseType: !1702)
!5045 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !5042, file: !5036, line: 32, baseType: !5, size: 32)
!5046 = !DIDerivedType(tag: DW_TAG_member, name: "d_op", scope: !1372, file: !1369, line: 102, baseType: !4655, size: 64, offset: 768)
!5047 = !DIDerivedType(tag: DW_TAG_member, name: "d_sb", scope: !1372, file: !1369, line: 103, baseType: !1578, size: 64, offset: 832)
!5048 = !DIDerivedType(tag: DW_TAG_member, name: "d_time", scope: !1372, file: !1369, line: 104, baseType: !346, size: 64, offset: 896)
!5049 = !DIDerivedType(tag: DW_TAG_member, name: "d_fsdata", scope: !1372, file: !1369, line: 105, baseType: !625, size: 64, offset: 960)
!5050 = !DIDerivedType(tag: DW_TAG_member, scope: !1372, file: !1369, line: 107, baseType: !5051, size: 128, offset: 1024)
!5051 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1372, file: !1369, line: 107, size: 128, elements: !5052)
!5052 = !{!5053, !5054}
!5053 = !DIDerivedType(tag: DW_TAG_member, name: "d_lru", scope: !5051, file: !1369, line: 108, baseType: !318, size: 128)
!5054 = !DIDerivedType(tag: DW_TAG_member, name: "d_wait", scope: !5051, file: !1369, line: 109, baseType: !5055, size: 64)
!5055 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1921, size: 64)
!5056 = !DIDerivedType(tag: DW_TAG_member, name: "d_child", scope: !1372, file: !1369, line: 111, baseType: !318, size: 128, offset: 1152)
!5057 = !DIDerivedType(tag: DW_TAG_member, name: "d_subdirs", scope: !1372, file: !1369, line: 112, baseType: !318, size: 128, offset: 1280)
!5058 = !DIDerivedType(tag: DW_TAG_member, name: "d_u", scope: !1372, file: !1369, line: 120, baseType: !5059, size: 128, offset: 1408)
!5059 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1372, file: !1369, line: 116, size: 128, elements: !5060)
!5060 = !{!5061, !5062, !5063}
!5061 = !DIDerivedType(tag: DW_TAG_member, name: "d_alias", scope: !5059, file: !1369, line: 117, baseType: !310, size: 128)
!5062 = !DIDerivedType(tag: DW_TAG_member, name: "d_in_lookup_hash", scope: !5059, file: !1369, line: 118, baseType: !1386, size: 128)
!5063 = !DIDerivedType(tag: DW_TAG_member, name: "d_rcu", scope: !5059, file: !1369, line: 119, baseType: !333, size: 128, align: 64)
!5064 = !DIDerivedType(tag: DW_TAG_member, name: "f_inode", scope: !1350, file: !76, line: 922, baseType: !1408, size: 64, offset: 256)
!5065 = !DIDerivedType(tag: DW_TAG_member, name: "f_op", scope: !1350, file: !76, line: 923, baseType: !4804, size: 64, offset: 320)
!5066 = !DIDerivedType(tag: DW_TAG_member, name: "f_lock", scope: !1350, file: !76, line: 929, baseType: !1702, offset: 384)
!5067 = !DIDerivedType(tag: DW_TAG_member, name: "f_write_hint", scope: !1350, file: !76, line: 930, baseType: !75, size: 32, offset: 384)
!5068 = !DIDerivedType(tag: DW_TAG_member, name: "f_count", scope: !1350, file: !76, line: 931, baseType: !405, size: 64, offset: 448)
!5069 = !DIDerivedType(tag: DW_TAG_member, name: "f_flags", scope: !1350, file: !76, line: 932, baseType: !11, size: 32, offset: 512)
!5070 = !DIDerivedType(tag: DW_TAG_member, name: "f_mode", scope: !1350, file: !76, line: 933, baseType: !4651, size: 32, offset: 544)
!5071 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos_lock", scope: !1350, file: !76, line: 934, baseType: !1697, size: 192, offset: 576)
!5072 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos", scope: !1350, file: !76, line: 935, baseType: !1509, size: 64, offset: 768)
!5073 = !DIDerivedType(tag: DW_TAG_member, name: "f_owner", scope: !1350, file: !76, line: 936, baseType: !5074, size: 192, offset: 832)
!5074 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fown_struct", file: !76, line: 885, size: 192, elements: !5075)
!5075 = !{!5076, !5077, !5078, !5079, !5080, !5081}
!5076 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !5074, file: !76, line: 886, baseType: !1944)
!5077 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !5074, file: !76, line: 887, baseType: !2603, size: 64)
!5078 = !DIDerivedType(tag: DW_TAG_member, name: "pid_type", scope: !5074, file: !76, line: 888, baseType: !84, size: 32, offset: 64)
!5079 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !5074, file: !76, line: 889, baseType: !1415, size: 32, offset: 96)
!5080 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !5074, file: !76, line: 889, baseType: !1415, size: 32, offset: 128)
!5081 = !DIDerivedType(tag: DW_TAG_member, name: "signum", scope: !5074, file: !76, line: 890, baseType: !5, size: 32, offset: 160)
!5082 = !DIDerivedType(tag: DW_TAG_member, name: "f_cred", scope: !1350, file: !76, line: 937, baseType: !2673, size: 64, offset: 1024)
!5083 = !DIDerivedType(tag: DW_TAG_member, name: "f_ra", scope: !1350, file: !76, line: 938, baseType: !5084, size: 256, offset: 1088)
!5084 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_ra_state", file: !76, line: 896, size: 256, elements: !5085)
!5085 = !{!5086, !5087, !5088, !5089, !5090, !5091}
!5086 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !5084, file: !76, line: 897, baseType: !346, size: 64)
!5087 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !5084, file: !76, line: 898, baseType: !11, size: 32, offset: 64)
!5088 = !DIDerivedType(tag: DW_TAG_member, name: "async_size", scope: !5084, file: !76, line: 899, baseType: !11, size: 32, offset: 96)
!5089 = !DIDerivedType(tag: DW_TAG_member, name: "ra_pages", scope: !5084, file: !76, line: 902, baseType: !11, size: 32, offset: 128)
!5090 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_miss", scope: !5084, file: !76, line: 903, baseType: !11, size: 32, offset: 160)
!5091 = !DIDerivedType(tag: DW_TAG_member, name: "prev_pos", scope: !5084, file: !76, line: 904, baseType: !1509, size: 64, offset: 192)
!5092 = !DIDerivedType(tag: DW_TAG_member, name: "f_version", scope: !1350, file: !76, line: 940, baseType: !365, size: 64, offset: 1344)
!5093 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !1350, file: !76, line: 945, baseType: !625, size: 64, offset: 1408)
!5094 = !DIDerivedType(tag: DW_TAG_member, name: "f_ep_links", scope: !1350, file: !76, line: 949, baseType: !318, size: 128, offset: 1472)
!5095 = !DIDerivedType(tag: DW_TAG_member, name: "f_tfile_llink", scope: !1350, file: !76, line: 950, baseType: !318, size: 128, offset: 1600)
!5096 = !DIDerivedType(tag: DW_TAG_member, name: "f_mapping", scope: !1350, file: !76, line: 952, baseType: !1764, size: 64, offset: 1728)
!5097 = !DIDerivedType(tag: DW_TAG_member, name: "f_wb_err", scope: !1350, file: !76, line: 953, baseType: !2057, size: 32, offset: 1792)
!5098 = !DIDerivedType(tag: DW_TAG_member, name: "f_sb_err", scope: !1350, file: !76, line: 954, baseType: !2057, size: 32, offset: 1824)
!5099 = !DIDerivedType(tag: DW_TAG_member, name: "map_free", scope: !1139, file: !93, line: 59, baseType: !5100, size: 64, offset: 192)
!5100 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5101, size: 64)
!5101 = !DISubroutineType(types: !5102)
!5102 = !{null, !1344}
!5103 = !DIDerivedType(tag: DW_TAG_member, name: "map_get_next_key", scope: !1139, file: !93, line: 60, baseType: !5104, size: 64, offset: 256)
!5104 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5105, size: 64)
!5105 = !DISubroutineType(types: !5106)
!5106 = !{!5, !1344, !625, !625}
!5107 = !DIDerivedType(tag: DW_TAG_member, name: "map_release_uref", scope: !1139, file: !93, line: 61, baseType: !5100, size: 64, offset: 320)
!5108 = !DIDerivedType(tag: DW_TAG_member, name: "map_lookup_elem_sys_only", scope: !1139, file: !93, line: 62, baseType: !5109, size: 64, offset: 384)
!5109 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5110, size: 64)
!5110 = !DISubroutineType(types: !5111)
!5111 = !{!625, !1344, !625}
!5112 = !DIDerivedType(tag: DW_TAG_member, name: "map_lookup_batch", scope: !1139, file: !93, line: 63, baseType: !5113, size: 64, offset: 448)
!5113 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5114, size: 64)
!5114 = !DISubroutineType(types: !5115)
!5115 = !{!5, !1344, !5116, !1145}
!5116 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5117, size: 64)
!5117 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1146)
!5118 = !DIDerivedType(tag: DW_TAG_member, name: "map_lookup_and_delete_batch", scope: !1139, file: !93, line: 65, baseType: !5113, size: 64, offset: 512)
!5119 = !DIDerivedType(tag: DW_TAG_member, name: "map_update_batch", scope: !1139, file: !93, line: 68, baseType: !5113, size: 64, offset: 576)
!5120 = !DIDerivedType(tag: DW_TAG_member, name: "map_delete_batch", scope: !1139, file: !93, line: 70, baseType: !5113, size: 64, offset: 640)
!5121 = !DIDerivedType(tag: DW_TAG_member, name: "map_lookup_elem", scope: !1139, file: !93, line: 74, baseType: !5109, size: 64, offset: 704)
!5122 = !DIDerivedType(tag: DW_TAG_member, name: "map_update_elem", scope: !1139, file: !93, line: 75, baseType: !5123, size: 64, offset: 768)
!5123 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5124, size: 64)
!5124 = !DISubroutineType(types: !5125)
!5125 = !{!5, !1344, !625, !625, !365}
!5126 = !DIDerivedType(tag: DW_TAG_member, name: "map_delete_elem", scope: !1139, file: !93, line: 76, baseType: !5127, size: 64, offset: 832)
!5127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5128, size: 64)
!5128 = !DISubroutineType(types: !5129)
!5129 = !{!5, !1344, !625}
!5130 = !DIDerivedType(tag: DW_TAG_member, name: "map_push_elem", scope: !1139, file: !93, line: 77, baseType: !5131, size: 64, offset: 896)
!5131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5132, size: 64)
!5132 = !DISubroutineType(types: !5133)
!5133 = !{!5, !1344, !625, !365}
!5134 = !DIDerivedType(tag: DW_TAG_member, name: "map_pop_elem", scope: !1139, file: !93, line: 78, baseType: !5127, size: 64, offset: 960)
!5135 = !DIDerivedType(tag: DW_TAG_member, name: "map_peek_elem", scope: !1139, file: !93, line: 79, baseType: !5127, size: 64, offset: 1024)
!5136 = !DIDerivedType(tag: DW_TAG_member, name: "map_fd_get_ptr", scope: !1139, file: !93, line: 82, baseType: !5137, size: 64, offset: 1088)
!5137 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5138, size: 64)
!5138 = !DISubroutineType(types: !5139)
!5139 = !{!625, !1344, !1349, !5}
!5140 = !DIDerivedType(tag: DW_TAG_member, name: "map_fd_put_ptr", scope: !1139, file: !93, line: 84, baseType: !1448, size: 64, offset: 1152)
!5141 = !DIDerivedType(tag: DW_TAG_member, name: "map_gen_lookup", scope: !1139, file: !93, line: 85, baseType: !5142, size: 64, offset: 1216)
!5142 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5143, size: 64)
!5143 = !DISubroutineType(types: !5144)
!5144 = !{!5, !1344, !5145}
!5145 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5146, size: 64)
!5146 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_insn", file: !124, line: 65, size: 64, elements: !5147)
!5147 = !{!5148, !5149, !5150, !5151, !5152}
!5148 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !5146, file: !124, line: 66, baseType: !515, size: 8)
!5149 = !DIDerivedType(tag: DW_TAG_member, name: "dst_reg", scope: !5146, file: !124, line: 67, baseType: !515, size: 4, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!5150 = !DIDerivedType(tag: DW_TAG_member, name: "src_reg", scope: !5146, file: !124, line: 68, baseType: !515, size: 4, offset: 12, flags: DIFlagBitField, extraData: i64 8)
!5151 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !5146, file: !124, line: 69, baseType: !2347, size: 16, offset: 16)
!5152 = !DIDerivedType(tag: DW_TAG_member, name: "imm", scope: !5146, file: !124, line: 70, baseType: !976, size: 32, offset: 32)
!5153 = !DIDerivedType(tag: DW_TAG_member, name: "map_fd_sys_lookup_elem", scope: !1139, file: !93, line: 86, baseType: !5154, size: 64, offset: 1280)
!5154 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5155, size: 64)
!5155 = !DISubroutineType(types: !5156)
!5156 = !{!1021, !625}
!5157 = !DIDerivedType(tag: DW_TAG_member, name: "map_seq_show_elem", scope: !1139, file: !93, line: 87, baseType: !5158, size: 64, offset: 1344)
!5158 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5159, size: 64)
!5159 = !DISubroutineType(types: !5160)
!5160 = !{null, !1344, !625, !1685}
!5161 = !DIDerivedType(tag: DW_TAG_member, name: "map_check_btf", scope: !1139, file: !93, line: 89, baseType: !5162, size: 64, offset: 1408)
!5162 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5163, size: 64)
!5163 = !DISubroutineType(types: !5164)
!5164 = !{!5, !5165, !5167, !5170, !5170}
!5165 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5166, size: 64)
!5166 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1134)
!5167 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5168, size: 64)
!5168 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5169)
!5169 = !DICompositeType(tag: DW_TAG_structure_type, name: "btf", file: !93, line: 32, flags: DIFlagFwdDecl)
!5170 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5171, size: 64)
!5171 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5172)
!5172 = !DICompositeType(tag: DW_TAG_structure_type, name: "btf_type", file: !93, line: 33, flags: DIFlagFwdDecl)
!5173 = !DIDerivedType(tag: DW_TAG_member, name: "map_poke_track", scope: !1139, file: !93, line: 95, baseType: !5174, size: 64, offset: 1472)
!5174 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5175, size: 64)
!5175 = !DISubroutineType(types: !5176)
!5176 = !{!5, !1344, !5177}
!5177 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5178, size: 64)
!5178 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_prog_aux", file: !93, line: 757, size: 4928, elements: !5179)
!5179 = !{!5180, !5181, !5182, !5183, !5184, !5185, !5186, !5187, !5188, !5189, !5190, !5191, !5192, !5193, !5201, !5202, !5203, !5246, !5247, !5248, !5249, !5250, !5251, !5252, !5253, !5254, !5255, !5256, !5257, !5258, !5260, !5261, !5280, !5281, !5282, !5291, !5293, !5294, !5295, !5296, !5297, !5299, !5300, !5315, !5317, !5323, !5329, !5337, !5338, !5339, !5340, !5341, !5342, !5350, !5357}
!5180 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !5178, file: !93, line: 758, baseType: !407, size: 64)
!5181 = !DIDerivedType(tag: DW_TAG_member, name: "used_map_cnt", scope: !5178, file: !93, line: 759, baseType: !1021, size: 32, offset: 64)
!5182 = !DIDerivedType(tag: DW_TAG_member, name: "max_ctx_offset", scope: !5178, file: !93, line: 760, baseType: !1021, size: 32, offset: 96)
!5183 = !DIDerivedType(tag: DW_TAG_member, name: "max_pkt_offset", scope: !5178, file: !93, line: 761, baseType: !1021, size: 32, offset: 128)
!5184 = !DIDerivedType(tag: DW_TAG_member, name: "max_tp_access", scope: !5178, file: !93, line: 762, baseType: !1021, size: 32, offset: 160)
!5185 = !DIDerivedType(tag: DW_TAG_member, name: "stack_depth", scope: !5178, file: !93, line: 763, baseType: !1021, size: 32, offset: 192)
!5186 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !5178, file: !93, line: 764, baseType: !1021, size: 32, offset: 224)
!5187 = !DIDerivedType(tag: DW_TAG_member, name: "func_cnt", scope: !5178, file: !93, line: 765, baseType: !1021, size: 32, offset: 256)
!5188 = !DIDerivedType(tag: DW_TAG_member, name: "func_idx", scope: !5178, file: !93, line: 766, baseType: !1021, size: 32, offset: 288)
!5189 = !DIDerivedType(tag: DW_TAG_member, name: "attach_btf_id", scope: !5178, file: !93, line: 767, baseType: !1021, size: 32, offset: 320)
!5190 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_arg_info_size", scope: !5178, file: !93, line: 768, baseType: !1021, size: 32, offset: 352)
!5191 = !DIDerivedType(tag: DW_TAG_member, name: "max_rdonly_access", scope: !5178, file: !93, line: 769, baseType: !1021, size: 32, offset: 384)
!5192 = !DIDerivedType(tag: DW_TAG_member, name: "max_rdwr_access", scope: !5178, file: !93, line: 770, baseType: !1021, size: 32, offset: 416)
!5193 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_arg_info", scope: !5178, file: !93, line: 771, baseType: !5194, size: 64, offset: 448)
!5194 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5195, size: 64)
!5195 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5196)
!5196 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_ctx_arg_aux", file: !93, line: 751, size: 96, elements: !5197)
!5197 = !{!5198, !5199, !5200}
!5198 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !5196, file: !93, line: 752, baseType: !1021, size: 32)
!5199 = !DIDerivedType(tag: DW_TAG_member, name: "reg_type", scope: !5196, file: !93, line: 753, baseType: !92, size: 32, offset: 32)
!5200 = !DIDerivedType(tag: DW_TAG_member, name: "btf_id", scope: !5196, file: !93, line: 754, baseType: !1021, size: 32, offset: 64)
!5201 = !DIDerivedType(tag: DW_TAG_member, name: "dst_mutex", scope: !5178, file: !93, line: 772, baseType: !1697, size: 192, offset: 512)
!5202 = !DIDerivedType(tag: DW_TAG_member, name: "dst_prog", scope: !5178, file: !93, line: 773, baseType: !1122, size: 64, offset: 704)
!5203 = !DIDerivedType(tag: DW_TAG_member, name: "dst_trampoline", scope: !5178, file: !93, line: 774, baseType: !5204, size: 64, offset: 768)
!5204 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5205, size: 64)
!5205 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_trampoline", file: !93, line: 586, size: 2944, elements: !5206)
!5206 = !{!5207, !5208, !5209, !5210, !5211, !5223, !5224, !5226, !5227, !5228, !5229}
!5207 = !DIDerivedType(tag: DW_TAG_member, name: "hlist", scope: !5205, file: !93, line: 588, baseType: !310, size: 128)
!5208 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !5205, file: !93, line: 590, baseType: !1697, size: 192, offset: 128)
!5209 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !5205, file: !93, line: 591, baseType: !602, size: 32, offset: 320)
!5210 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !5205, file: !93, line: 592, baseType: !365, size: 64, offset: 384)
!5211 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !5205, file: !93, line: 597, baseType: !5212, size: 256, offset: 448)
!5212 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5205, file: !93, line: 593, size: 256, elements: !5213)
!5213 = !{!5214, !5221, !5222}
!5214 = !DIDerivedType(tag: DW_TAG_member, name: "model", scope: !5212, file: !93, line: 594, baseType: !5215, size: 112)
!5215 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "btf_func_model", file: !93, line: 509, size: 112, elements: !5216)
!5216 = !{!5217, !5218, !5219}
!5217 = !DIDerivedType(tag: DW_TAG_member, name: "ret_size", scope: !5215, file: !93, line: 510, baseType: !828, size: 8)
!5218 = !DIDerivedType(tag: DW_TAG_member, name: "nr_args", scope: !5215, file: !93, line: 511, baseType: !828, size: 8, offset: 8)
!5219 = !DIDerivedType(tag: DW_TAG_member, name: "arg_size", scope: !5215, file: !93, line: 512, baseType: !5220, size: 96, offset: 16)
!5220 = !DICompositeType(tag: DW_TAG_array_type, baseType: !828, size: 96, elements: !4180)
!5221 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !5212, file: !93, line: 595, baseType: !625, size: 64, offset: 128)
!5222 = !DIDerivedType(tag: DW_TAG_member, name: "ftrace_managed", scope: !5212, file: !93, line: 596, baseType: !805, size: 8, offset: 192)
!5223 = !DIDerivedType(tag: DW_TAG_member, name: "extension_prog", scope: !5205, file: !93, line: 602, baseType: !1122, size: 64, offset: 704)
!5224 = !DIDerivedType(tag: DW_TAG_member, name: "progs_hlist", scope: !5205, file: !93, line: 604, baseType: !5225, size: 192, offset: 768)
!5225 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1613, size: 192, elements: !1624)
!5226 = !DIDerivedType(tag: DW_TAG_member, name: "progs_cnt", scope: !5205, file: !93, line: 606, baseType: !3428, size: 96, offset: 960)
!5227 = !DIDerivedType(tag: DW_TAG_member, name: "image", scope: !5205, file: !93, line: 608, baseType: !625, size: 64, offset: 1088)
!5228 = !DIDerivedType(tag: DW_TAG_member, name: "selector", scope: !5205, file: !93, line: 609, baseType: !365, size: 64, offset: 1152)
!5229 = !DIDerivedType(tag: DW_TAG_member, name: "ksym", scope: !5205, file: !93, line: 610, baseType: !5230, size: 1728, offset: 1216)
!5230 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_ksym", file: !93, line: 569, size: 1728, elements: !5231)
!5231 = !{!5232, !5233, !5234, !5238, !5239, !5245}
!5232 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !5230, file: !93, line: 570, baseType: !346, size: 64)
!5233 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !5230, file: !93, line: 571, baseType: !346, size: 64, offset: 64)
!5234 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5230, file: !93, line: 572, baseType: !5235, size: 1024, offset: 128)
!5235 = !DICompositeType(tag: DW_TAG_array_type, baseType: !302, size: 1024, elements: !5236)
!5236 = !{!5237}
!5237 = !DISubrange(count: 128)
!5238 = !DIDerivedType(tag: DW_TAG_member, name: "lnode", scope: !5230, file: !93, line: 573, baseType: !318, size: 128, offset: 1152)
!5239 = !DIDerivedType(tag: DW_TAG_member, name: "tnode", scope: !5230, file: !93, line: 574, baseType: !5240, size: 384, offset: 1280)
!5240 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "latch_tree_node", file: !5241, line: 40, size: 384, elements: !5242)
!5241 = !DIFile(filename: "./include/linux/rbtree_latch.h", directory: "/home/lizy2001/genbc/linux")
!5242 = !{!5243}
!5243 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !5240, file: !5241, line: 41, baseType: !5244, size: 384)
!5244 = !DICompositeType(tag: DW_TAG_array_type, baseType: !467, size: 384, elements: !2695)
!5245 = !DIDerivedType(tag: DW_TAG_member, name: "prog", scope: !5230, file: !93, line: 575, baseType: !805, size: 8, offset: 1664)
!5246 = !DIDerivedType(tag: DW_TAG_member, name: "saved_dst_prog_type", scope: !5178, file: !93, line: 775, baseType: !123, size: 32, offset: 832)
!5247 = !DIDerivedType(tag: DW_TAG_member, name: "saved_dst_attach_type", scope: !5178, file: !93, line: 776, baseType: !157, size: 32, offset: 864)
!5248 = !DIDerivedType(tag: DW_TAG_member, name: "verifier_zext", scope: !5178, file: !93, line: 777, baseType: !805, size: 8, offset: 896)
!5249 = !DIDerivedType(tag: DW_TAG_member, name: "offload_requested", scope: !5178, file: !93, line: 778, baseType: !805, size: 8, offset: 904)
!5250 = !DIDerivedType(tag: DW_TAG_member, name: "attach_btf_trace", scope: !5178, file: !93, line: 779, baseType: !805, size: 8, offset: 912)
!5251 = !DIDerivedType(tag: DW_TAG_member, name: "func_proto_unreliable", scope: !5178, file: !93, line: 780, baseType: !805, size: 8, offset: 920)
!5252 = !DIDerivedType(tag: DW_TAG_member, name: "sleepable", scope: !5178, file: !93, line: 781, baseType: !805, size: 8, offset: 928)
!5253 = !DIDerivedType(tag: DW_TAG_member, name: "tail_call_reachable", scope: !5178, file: !93, line: 782, baseType: !805, size: 8, offset: 936)
!5254 = !DIDerivedType(tag: DW_TAG_member, name: "trampoline_prog_type", scope: !5178, file: !93, line: 783, baseType: !198, size: 32, offset: 960)
!5255 = !DIDerivedType(tag: DW_TAG_member, name: "tramp_hlist", scope: !5178, file: !93, line: 784, baseType: !310, size: 128, offset: 1024)
!5256 = !DIDerivedType(tag: DW_TAG_member, name: "attach_func_proto", scope: !5178, file: !93, line: 786, baseType: !5170, size: 64, offset: 1152)
!5257 = !DIDerivedType(tag: DW_TAG_member, name: "attach_func_name", scope: !5178, file: !93, line: 788, baseType: !326, size: 64, offset: 1216)
!5258 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !5178, file: !93, line: 789, baseType: !5259, size: 64, offset: 1280)
!5259 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1122, size: 64)
!5260 = !DIDerivedType(tag: DW_TAG_member, name: "jit_data", scope: !5178, file: !93, line: 790, baseType: !625, size: 64, offset: 1344)
!5261 = !DIDerivedType(tag: DW_TAG_member, name: "poke_tab", scope: !5178, file: !93, line: 791, baseType: !5262, size: 64, offset: 1408)
!5262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5263, size: 64)
!5263 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_jit_poke_descriptor", file: !93, line: 734, size: 384, elements: !5264)
!5264 = !{!5265, !5266, !5267, !5268, !5276, !5277, !5278, !5279}
!5265 = !DIDerivedType(tag: DW_TAG_member, name: "tailcall_target", scope: !5263, file: !93, line: 735, baseType: !625, size: 64)
!5266 = !DIDerivedType(tag: DW_TAG_member, name: "tailcall_bypass", scope: !5263, file: !93, line: 736, baseType: !625, size: 64, offset: 64)
!5267 = !DIDerivedType(tag: DW_TAG_member, name: "bypass_addr", scope: !5263, file: !93, line: 737, baseType: !625, size: 64, offset: 128)
!5268 = !DIDerivedType(tag: DW_TAG_member, scope: !5263, file: !93, line: 738, baseType: !5269, size: 128, offset: 192)
!5269 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5263, file: !93, line: 738, size: 128, elements: !5270)
!5270 = !{!5271}
!5271 = !DIDerivedType(tag: DW_TAG_member, name: "tail_call", scope: !5269, file: !93, line: 742, baseType: !5272, size: 128)
!5272 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5269, file: !93, line: 739, size: 128, elements: !5273)
!5273 = !{!5274, !5275}
!5274 = !DIDerivedType(tag: DW_TAG_member, name: "map", scope: !5272, file: !93, line: 740, baseType: !1344, size: 64)
!5275 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !5272, file: !93, line: 741, baseType: !1021, size: 32, offset: 64)
!5276 = !DIDerivedType(tag: DW_TAG_member, name: "tailcall_target_stable", scope: !5263, file: !93, line: 744, baseType: !805, size: 8, offset: 320)
!5277 = !DIDerivedType(tag: DW_TAG_member, name: "adj_off", scope: !5263, file: !93, line: 745, baseType: !828, size: 8, offset: 328)
!5278 = !DIDerivedType(tag: DW_TAG_member, name: "reason", scope: !5263, file: !93, line: 746, baseType: !615, size: 16, offset: 336)
!5279 = !DIDerivedType(tag: DW_TAG_member, name: "insn_idx", scope: !5263, file: !93, line: 747, baseType: !1021, size: 32, offset: 352)
!5280 = !DIDerivedType(tag: DW_TAG_member, name: "size_poke_tab", scope: !5178, file: !93, line: 792, baseType: !1021, size: 32, offset: 1472)
!5281 = !DIDerivedType(tag: DW_TAG_member, name: "ksym", scope: !5178, file: !93, line: 793, baseType: !5230, size: 1728, offset: 1536)
!5282 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !5178, file: !93, line: 794, baseType: !5283, size: 64, offset: 3264)
!5283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5284, size: 64)
!5284 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5285)
!5285 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_prog_ops", file: !93, line: 432, size: 64, elements: !5286)
!5286 = !{!5287}
!5287 = !DIDerivedType(tag: DW_TAG_member, name: "test_run", scope: !5285, file: !93, line: 433, baseType: !5288, size: 64)
!5288 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5289, size: 64)
!5289 = !DISubroutineType(types: !5290)
!5290 = !{!5, !1122, !5116, !1145}
!5291 = !DIDerivedType(tag: DW_TAG_member, name: "used_maps", scope: !5178, file: !93, line: 795, baseType: !5292, size: 64, offset: 3328)
!5292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1344, size: 64)
!5293 = !DIDerivedType(tag: DW_TAG_member, name: "used_maps_mutex", scope: !5178, file: !93, line: 796, baseType: !1697, size: 192, offset: 3392)
!5294 = !DIDerivedType(tag: DW_TAG_member, name: "prog", scope: !5178, file: !93, line: 797, baseType: !1122, size: 64, offset: 3584)
!5295 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !5178, file: !93, line: 798, baseType: !1985, size: 64, offset: 3648)
!5296 = !DIDerivedType(tag: DW_TAG_member, name: "load_time", scope: !5178, file: !93, line: 799, baseType: !365, size: 64, offset: 3712)
!5297 = !DIDerivedType(tag: DW_TAG_member, name: "cgroup_storage", scope: !5178, file: !93, line: 800, baseType: !5298, size: 128, offset: 3776)
!5298 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1344, size: 128, elements: !2695)
!5299 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5178, file: !93, line: 801, baseType: !301, size: 128, offset: 3904)
!5300 = !DIDerivedType(tag: DW_TAG_member, name: "offload", scope: !5178, file: !93, line: 805, baseType: !5301, size: 64, offset: 4032)
!5301 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5302, size: 64)
!5302 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_prog_offload", file: !93, line: 478, size: 576, elements: !5303)
!5303 = !{!5304, !5305, !5306, !5309, !5310, !5311, !5312, !5313, !5314}
!5304 = !DIDerivedType(tag: DW_TAG_member, name: "prog", scope: !5302, file: !93, line: 479, baseType: !1122, size: 64)
!5305 = !DIDerivedType(tag: DW_TAG_member, name: "netdev", scope: !5302, file: !93, line: 480, baseType: !324, size: 64, offset: 64)
!5306 = !DIDerivedType(tag: DW_TAG_member, name: "offdev", scope: !5302, file: !93, line: 481, baseType: !5307, size: 64, offset: 128)
!5307 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5308, size: 64)
!5308 = !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_offload_dev", file: !93, line: 209, flags: DIFlagFwdDecl)
!5309 = !DIDerivedType(tag: DW_TAG_member, name: "dev_priv", scope: !5302, file: !93, line: 482, baseType: !625, size: 64, offset: 192)
!5310 = !DIDerivedType(tag: DW_TAG_member, name: "offloads", scope: !5302, file: !93, line: 483, baseType: !318, size: 128, offset: 256)
!5311 = !DIDerivedType(tag: DW_TAG_member, name: "dev_state", scope: !5302, file: !93, line: 484, baseType: !805, size: 8, offset: 384)
!5312 = !DIDerivedType(tag: DW_TAG_member, name: "opt_failed", scope: !5302, file: !93, line: 485, baseType: !805, size: 8, offset: 392)
!5313 = !DIDerivedType(tag: DW_TAG_member, name: "jited_image", scope: !5302, file: !93, line: 486, baseType: !625, size: 64, offset: 448)
!5314 = !DIDerivedType(tag: DW_TAG_member, name: "jited_len", scope: !5302, file: !93, line: 487, baseType: !1021, size: 32, offset: 512)
!5315 = !DIDerivedType(tag: DW_TAG_member, name: "btf", scope: !5178, file: !93, line: 806, baseType: !5316, size: 64, offset: 4096)
!5316 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5169, size: 64)
!5317 = !DIDerivedType(tag: DW_TAG_member, name: "func_info", scope: !5178, file: !93, line: 807, baseType: !5318, size: 64, offset: 4160)
!5318 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5319, size: 64)
!5319 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_func_info", file: !124, line: 4963, size: 64, elements: !5320)
!5320 = !{!5321, !5322}
!5321 = !DIDerivedType(tag: DW_TAG_member, name: "insn_off", scope: !5319, file: !124, line: 4964, baseType: !527, size: 32)
!5322 = !DIDerivedType(tag: DW_TAG_member, name: "type_id", scope: !5319, file: !124, line: 4965, baseType: !527, size: 32, offset: 32)
!5323 = !DIDerivedType(tag: DW_TAG_member, name: "func_info_aux", scope: !5178, file: !93, line: 808, baseType: !5324, size: 64, offset: 4224)
!5324 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5325, size: 64)
!5325 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_func_info_aux", file: !93, line: 724, size: 32, elements: !5326)
!5326 = !{!5327, !5328}
!5327 = !DIDerivedType(tag: DW_TAG_member, name: "linkage", scope: !5325, file: !93, line: 725, baseType: !615, size: 16)
!5328 = !DIDerivedType(tag: DW_TAG_member, name: "unreliable", scope: !5325, file: !93, line: 726, baseType: !805, size: 8, offset: 16)
!5329 = !DIDerivedType(tag: DW_TAG_member, name: "linfo", scope: !5178, file: !93, line: 815, baseType: !5330, size: 64, offset: 4288)
!5330 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5331, size: 64)
!5331 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_line_info", file: !124, line: 4971, size: 128, elements: !5332)
!5332 = !{!5333, !5334, !5335, !5336}
!5333 = !DIDerivedType(tag: DW_TAG_member, name: "insn_off", scope: !5331, file: !124, line: 4972, baseType: !527, size: 32)
!5334 = !DIDerivedType(tag: DW_TAG_member, name: "file_name_off", scope: !5331, file: !124, line: 4973, baseType: !527, size: 32, offset: 32)
!5335 = !DIDerivedType(tag: DW_TAG_member, name: "line_off", scope: !5331, file: !124, line: 4974, baseType: !527, size: 32, offset: 64)
!5336 = !DIDerivedType(tag: DW_TAG_member, name: "line_col", scope: !5331, file: !124, line: 4975, baseType: !527, size: 32, offset: 96)
!5337 = !DIDerivedType(tag: DW_TAG_member, name: "jited_linfo", scope: !5178, file: !93, line: 823, baseType: !1834, size: 64, offset: 4352)
!5338 = !DIDerivedType(tag: DW_TAG_member, name: "func_info_cnt", scope: !5178, file: !93, line: 824, baseType: !1021, size: 32, offset: 4416)
!5339 = !DIDerivedType(tag: DW_TAG_member, name: "nr_linfo", scope: !5178, file: !93, line: 825, baseType: !1021, size: 32, offset: 4448)
!5340 = !DIDerivedType(tag: DW_TAG_member, name: "linfo_idx", scope: !5178, file: !93, line: 830, baseType: !1021, size: 32, offset: 4480)
!5341 = !DIDerivedType(tag: DW_TAG_member, name: "num_exentries", scope: !5178, file: !93, line: 831, baseType: !1021, size: 32, offset: 4512)
!5342 = !DIDerivedType(tag: DW_TAG_member, name: "extable", scope: !5178, file: !93, line: 832, baseType: !5343, size: 64, offset: 4544)
!5343 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5344, size: 64)
!5344 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "exception_table_entry", file: !5345, line: 17, size: 96, elements: !5346)
!5345 = !DIFile(filename: "./arch/x86/include/asm/extable.h", directory: "/home/lizy2001/genbc/linux")
!5346 = !{!5347, !5348, !5349}
!5347 = !DIDerivedType(tag: DW_TAG_member, name: "insn", scope: !5344, file: !5345, line: 18, baseType: !5, size: 32)
!5348 = !DIDerivedType(tag: DW_TAG_member, name: "fixup", scope: !5344, file: !5345, line: 18, baseType: !5, size: 32, offset: 32)
!5349 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !5344, file: !5345, line: 18, baseType: !5, size: 32, offset: 64)
!5350 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !5178, file: !93, line: 833, baseType: !5351, size: 64, offset: 4608)
!5351 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5352, size: 64)
!5352 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_prog_stats", file: !93, line: 503, size: 128, align: 128, elements: !5353)
!5353 = !{!5354, !5355, !5356}
!5354 = !DIDerivedType(tag: DW_TAG_member, name: "cnt", scope: !5352, file: !93, line: 504, baseType: !365, size: 64)
!5355 = !DIDerivedType(tag: DW_TAG_member, name: "nsecs", scope: !5352, file: !93, line: 505, baseType: !365, size: 64, offset: 64)
!5356 = !DIDerivedType(tag: DW_TAG_member, name: "syncp", scope: !5352, file: !93, line: 506, baseType: !3101, offset: 128)
!5357 = !DIDerivedType(tag: DW_TAG_member, scope: !5178, file: !93, line: 834, baseType: !5358, size: 256, offset: 4672)
!5358 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5178, file: !93, line: 834, size: 256, elements: !5359)
!5359 = !{!5360, !5361}
!5360 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !5358, file: !93, line: 835, baseType: !2860, size: 256)
!5361 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !5358, file: !93, line: 836, baseType: !333, size: 128, align: 64)
!5362 = !DIDerivedType(tag: DW_TAG_member, name: "map_poke_untrack", scope: !1139, file: !93, line: 96, baseType: !5363, size: 64, offset: 1536)
!5363 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5364, size: 64)
!5364 = !DISubroutineType(types: !5365)
!5365 = !{null, !1344, !5177}
!5366 = !DIDerivedType(tag: DW_TAG_member, name: "map_poke_run", scope: !1139, file: !93, line: 97, baseType: !5367, size: 64, offset: 1600)
!5367 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5368, size: 64)
!5368 = !DISubroutineType(types: !5369)
!5369 = !{null, !1344, !1021, !1122, !1122}
!5370 = !DIDerivedType(tag: DW_TAG_member, name: "map_direct_value_addr", scope: !1139, file: !93, line: 101, baseType: !5371, size: 64, offset: 1664)
!5371 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5372, size: 64)
!5372 = !DISubroutineType(types: !5373)
!5373 = !{!5, !5165, !5374, !1021}
!5374 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !365, size: 64)
!5375 = !DIDerivedType(tag: DW_TAG_member, name: "map_direct_value_meta", scope: !1139, file: !93, line: 103, baseType: !5376, size: 64, offset: 1728)
!5376 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5377, size: 64)
!5377 = !DISubroutineType(types: !5378)
!5378 = !{!5, !5165, !365, !2548}
!5379 = !DIDerivedType(tag: DW_TAG_member, name: "map_mmap", scope: !1139, file: !93, line: 105, baseType: !5380, size: 64, offset: 1792)
!5380 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5381, size: 64)
!5381 = !DISubroutineType(types: !5382)
!5382 = !{!5, !1344, !2130}
!5383 = !DIDerivedType(tag: DW_TAG_member, name: "map_poll", scope: !1139, file: !93, line: 106, baseType: !5384, size: 64, offset: 1856)
!5384 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5385, size: 64)
!5385 = !DISubroutineType(types: !5386)
!5386 = !{!4845, !1344, !1349, !4846}
!5387 = !DIDerivedType(tag: DW_TAG_member, name: "map_local_storage_charge", scope: !1139, file: !93, line: 110, baseType: !5388, size: 64, offset: 1920)
!5388 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5389, size: 64)
!5389 = !DISubroutineType(types: !5390)
!5390 = !{!5, !5391, !625, !1021}
!5391 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5392, size: 64)
!5392 = !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_local_storage_map", file: !93, line: 38, flags: DIFlagFwdDecl)
!5393 = !DIDerivedType(tag: DW_TAG_member, name: "map_local_storage_uncharge", scope: !1139, file: !93, line: 112, baseType: !5394, size: 64, offset: 1984)
!5394 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5395, size: 64)
!5395 = !DISubroutineType(types: !5396)
!5396 = !{null, !5391, !625, !1021}
!5397 = !DIDerivedType(tag: DW_TAG_member, name: "map_owner_storage_ptr", scope: !1139, file: !93, line: 114, baseType: !5398, size: 64, offset: 2048)
!5398 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5399, size: 64)
!5399 = !DISubroutineType(types: !5400)
!5400 = !{!5401, !625}
!5401 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5402, size: 64)
!5402 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5403, size: 64)
!5403 = !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_local_storage", file: !93, line: 37, flags: DIFlagFwdDecl)
!5404 = !DIDerivedType(tag: DW_TAG_member, name: "map_meta_equal", scope: !1139, file: !93, line: 125, baseType: !5405, size: 64, offset: 2112)
!5405 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5406, size: 64)
!5406 = !DISubroutineType(types: !5407)
!5407 = !{!805, !5165, !5165}
!5408 = !DIDerivedType(tag: DW_TAG_member, name: "map_btf_name", scope: !1139, file: !93, line: 129, baseType: !5409, size: 64, offset: 2176)
!5409 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !326)
!5410 = !DIDerivedType(tag: DW_TAG_member, name: "map_btf_id", scope: !1139, file: !93, line: 130, baseType: !1035, size: 64, offset: 2240)
!5411 = !DIDerivedType(tag: DW_TAG_member, name: "iter_seq_info", scope: !1139, file: !93, line: 133, baseType: !5412, size: 64, offset: 2304)
!5412 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5413, size: 64)
!5413 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5414)
!5414 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_iter_seq_info", file: !93, line: 46, size: 256, elements: !5415)
!5415 = !{!5416, !5417, !5424, !5426}
!5416 = !DIDerivedType(tag: DW_TAG_member, name: "seq_ops", scope: !5414, file: !93, line: 47, baseType: !1718, size: 64)
!5417 = !DIDerivedType(tag: DW_TAG_member, name: "init_seq_private", scope: !5414, file: !93, line: 48, baseType: !5418, size: 64, offset: 64)
!5418 = !DIDerivedType(tag: DW_TAG_typedef, name: "bpf_iter_init_seq_priv_t", file: !93, line: 43, baseType: !5419)
!5419 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5420, size: 64)
!5420 = !DISubroutineType(types: !5421)
!5421 = !{!5, !625, !5422}
!5422 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5423, size: 64)
!5423 = !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_iter_aux_info", file: !93, line: 36, flags: DIFlagFwdDecl)
!5424 = !DIDerivedType(tag: DW_TAG_member, name: "fini_seq_private", scope: !5414, file: !93, line: 49, baseType: !5425, size: 64, offset: 128)
!5425 = !DIDerivedType(tag: DW_TAG_typedef, name: "bpf_iter_fini_seq_priv_t", file: !93, line: 45, baseType: !1448)
!5426 = !DIDerivedType(tag: DW_TAG_member, name: "seq_priv_size", scope: !5414, file: !93, line: 50, baseType: !1021, size: 32, offset: 192)
!5427 = !DIDerivedType(tag: DW_TAG_member, name: "inner_map_meta", scope: !1134, file: !93, line: 146, baseType: !1344, size: 64, offset: 64)
!5428 = !DIDerivedType(tag: DW_TAG_member, name: "map_type", scope: !1134, file: !93, line: 150, baseType: !205, size: 32, offset: 128)
!5429 = !DIDerivedType(tag: DW_TAG_member, name: "key_size", scope: !1134, file: !93, line: 151, baseType: !1021, size: 32, offset: 160)
!5430 = !DIDerivedType(tag: DW_TAG_member, name: "value_size", scope: !1134, file: !93, line: 152, baseType: !1021, size: 32, offset: 192)
!5431 = !DIDerivedType(tag: DW_TAG_member, name: "max_entries", scope: !1134, file: !93, line: 153, baseType: !1021, size: 32, offset: 224)
!5432 = !DIDerivedType(tag: DW_TAG_member, name: "map_flags", scope: !1134, file: !93, line: 154, baseType: !1021, size: 32, offset: 256)
!5433 = !DIDerivedType(tag: DW_TAG_member, name: "spin_lock_off", scope: !1134, file: !93, line: 155, baseType: !5, size: 32, offset: 288)
!5434 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1134, file: !93, line: 156, baseType: !1021, size: 32, offset: 320)
!5435 = !DIDerivedType(tag: DW_TAG_member, name: "numa_node", scope: !1134, file: !93, line: 157, baseType: !5, size: 32, offset: 352)
!5436 = !DIDerivedType(tag: DW_TAG_member, name: "btf_key_type_id", scope: !1134, file: !93, line: 158, baseType: !1021, size: 32, offset: 384)
!5437 = !DIDerivedType(tag: DW_TAG_member, name: "btf_value_type_id", scope: !1134, file: !93, line: 159, baseType: !1021, size: 32, offset: 416)
!5438 = !DIDerivedType(tag: DW_TAG_member, name: "btf", scope: !1134, file: !93, line: 160, baseType: !5316, size: 64, offset: 448)
!5439 = !DIDerivedType(tag: DW_TAG_member, name: "memory", scope: !1134, file: !93, line: 161, baseType: !5440, size: 128, offset: 512)
!5440 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_map_memory", file: !93, line: 136, size: 128, elements: !5441)
!5441 = !{!5442, !5443}
!5442 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !5440, file: !93, line: 137, baseType: !1021, size: 32)
!5443 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !5440, file: !93, line: 138, baseType: !1985, size: 64, offset: 64)
!5444 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1134, file: !93, line: 162, baseType: !301, size: 128, offset: 640)
!5445 = !DIDerivedType(tag: DW_TAG_member, name: "btf_vmlinux_value_type_id", scope: !1134, file: !93, line: 163, baseType: !1021, size: 32, offset: 768)
!5446 = !DIDerivedType(tag: DW_TAG_member, name: "bypass_spec_v1", scope: !1134, file: !93, line: 164, baseType: !805, size: 8, offset: 800)
!5447 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !1134, file: !93, line: 165, baseType: !805, size: 8, offset: 808)
!5448 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !1134, file: !93, line: 171, baseType: !407, size: 64, align: 512, offset: 1024)
!5449 = !DIDerivedType(tag: DW_TAG_member, name: "usercnt", scope: !1134, file: !93, line: 172, baseType: !407, size: 64, offset: 1088)
!5450 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !1134, file: !93, line: 173, baseType: !2860, size: 256, offset: 1152)
!5451 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_mutex", scope: !1134, file: !93, line: 174, baseType: !1697, size: 192, offset: 1408)
!5452 = !DIDerivedType(tag: DW_TAG_member, name: "writecnt", scope: !1134, file: !93, line: 175, baseType: !365, size: 64, offset: 1600)
!5453 = !DIDerivedType(tag: DW_TAG_member, name: "netdev", scope: !1131, file: !93, line: 224, baseType: !324, size: 64, offset: 2048)
!5454 = !DIDerivedType(tag: DW_TAG_member, name: "dev_ops", scope: !1131, file: !93, line: 225, baseType: !5455, size: 64, offset: 2112)
!5455 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5456, size: 64)
!5456 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5457)
!5457 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_map_dev_ops", file: !93, line: 212, size: 256, elements: !5458)
!5458 = !{!5459, !5463, !5464, !5468}
!5459 = !DIDerivedType(tag: DW_TAG_member, name: "map_get_next_key", scope: !5457, file: !93, line: 213, baseType: !5460, size: 64)
!5460 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5461, size: 64)
!5461 = !DISubroutineType(types: !5462)
!5462 = !{!5, !1130, !625, !625}
!5463 = !DIDerivedType(tag: DW_TAG_member, name: "map_lookup_elem", scope: !5457, file: !93, line: 215, baseType: !5460, size: 64, offset: 64)
!5464 = !DIDerivedType(tag: DW_TAG_member, name: "map_update_elem", scope: !5457, file: !93, line: 217, baseType: !5465, size: 64, offset: 128)
!5465 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5466, size: 64)
!5466 = !DISubroutineType(types: !5467)
!5467 = !{!5, !1130, !625, !625, !365}
!5468 = !DIDerivedType(tag: DW_TAG_member, name: "map_delete_elem", scope: !5457, file: !93, line: 219, baseType: !5469, size: 64, offset: 192)
!5469 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5470, size: 64)
!5470 = !DISubroutineType(types: !5471)
!5471 = !{!5, !1130, !625}
!5472 = !DIDerivedType(tag: DW_TAG_member, name: "dev_priv", scope: !1131, file: !93, line: 226, baseType: !625, size: 64, offset: 2176)
!5473 = !DIDerivedType(tag: DW_TAG_member, name: "offloads", scope: !1131, file: !93, line: 227, baseType: !318, size: 128, offset: 2240)
!5474 = !DIDerivedType(tag: DW_TAG_member, name: "xsk", scope: !1115, file: !4, line: 911, baseType: !5475, size: 128)
!5475 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1115, file: !4, line: 908, size: 128, elements: !5476)
!5476 = !{!5477, !5480}
!5477 = !DIDerivedType(tag: DW_TAG_member, name: "pool", scope: !5475, file: !4, line: 909, baseType: !5478, size: 64)
!5478 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5479, size: 64)
!5479 = !DICompositeType(tag: DW_TAG_structure_type, name: "xsk_buff_pool", file: !4, line: 909, flags: DIFlagFwdDecl)
!5480 = !DIDerivedType(tag: DW_TAG_member, name: "queue_id", scope: !5475, file: !4, line: 910, baseType: !615, size: 16, offset: 64)
!5481 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_xdp_xmit", scope: !432, file: !4, line: 1481, baseType: !5482, size: 64, offset: 4096)
!5482 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5483, size: 64)
!5483 = !DISubroutineType(types: !5484)
!5484 = !{!5, !324, !5, !5485, !1021}
!5485 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5486, size: 64)
!5486 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5487, size: 64)
!5487 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xdp_frame", file: !5488, line: 94, size: 256, elements: !5489)
!5488 = !DIFile(filename: "./include/net/xdp.h", directory: "/home/lizy2001/genbc/linux")
!5489 = !{!5490, !5491, !5492, !5493, !5494, !5495, !5500}
!5490 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !5487, file: !5488, line: 95, baseType: !625, size: 64)
!5491 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !5487, file: !5488, line: 96, baseType: !615, size: 16, offset: 64)
!5492 = !DIDerivedType(tag: DW_TAG_member, name: "headroom", scope: !5487, file: !5488, line: 97, baseType: !615, size: 16, offset: 80)
!5493 = !DIDerivedType(tag: DW_TAG_member, name: "metasize", scope: !5487, file: !5488, line: 98, baseType: !1021, size: 8, offset: 96, flags: DIFlagBitField, extraData: i64 96)
!5494 = !DIDerivedType(tag: DW_TAG_member, name: "frame_sz", scope: !5487, file: !5488, line: 99, baseType: !1021, size: 24, offset: 104, flags: DIFlagBitField, extraData: i64 96)
!5495 = !DIDerivedType(tag: DW_TAG_member, name: "mem", scope: !5487, file: !5488, line: 103, baseType: !5496, size: 64, offset: 128)
!5496 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xdp_mem_info", file: !5488, line: 50, size: 64, elements: !5497)
!5497 = !{!5498, !5499}
!5498 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !5496, file: !5488, line: 51, baseType: !1021, size: 32)
!5499 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !5496, file: !5488, line: 52, baseType: !1021, size: 32, offset: 32)
!5500 = !DIDerivedType(tag: DW_TAG_member, name: "dev_rx", scope: !5487, file: !5488, line: 104, baseType: !324, size: 64, offset: 192)
!5501 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_xsk_wakeup", scope: !432, file: !4, line: 1484, baseType: !5502, size: 64, offset: 4160)
!5502 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5503, size: 64)
!5503 = !DISubroutineType(types: !5504)
!5504 = !{!5, !324, !1021, !1021}
!5505 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_devlink_port", scope: !432, file: !4, line: 1486, baseType: !5506, size: 64, offset: 4224)
!5506 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5507, size: 64)
!5507 = !DISubroutineType(types: !5508)
!5508 = !{!5509, !324}
!5509 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5510, size: 64)
!5510 = !DICompositeType(tag: DW_TAG_structure_type, name: "devlink_port", file: !4, line: 1486, flags: DIFlagFwdDecl)
!5511 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_tunnel_ctl", scope: !432, file: !4, line: 1487, baseType: !5512, size: 64, offset: 4288)
!5512 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5513, size: 64)
!5513 = !DISubroutineType(types: !5514)
!5514 = !{!5, !324, !5515, !5}
!5515 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5516, size: 64)
!5516 = !DICompositeType(tag: DW_TAG_structure_type, name: "ip_tunnel_parm", file: !4, line: 56, flags: DIFlagFwdDecl)
!5517 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_peer_dev", scope: !432, file: !4, line: 1489, baseType: !5518, size: 64, offset: 4352)
!5518 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5519, size: 64)
!5519 = !DISubroutineType(types: !5520)
!5520 = !{!324, !324}
!5521 = !DIDerivedType(tag: DW_TAG_member, name: "ethtool_ops", scope: !298, file: !4, line: 1917, baseType: !5522, size: 64, offset: 4032)
!5522 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5523, size: 64)
!5523 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5524)
!5524 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_ops", file: !279, line: 421, size: 3904, elements: !5525)
!5525 = !{!5526, !5527, !5547, !5548, !5559, !5571, !5575, !5579, !5583, !5584, !5585, !5602, !5603, !5615, !5616, !5646, !5647, !5663, !5667, !5676, !5687, !5691, !5704, !5708, !5712, !5722, !5723, !5724, !5725, !5729, !5730, !5832, !5836, !5846, !5850, !5851, !5852, !5856, !5864, !5868, !5872, !5888, !5892, !5904, !5908, !5909, !5924, !5936, !5937, !5953, !5954, !5968, !5972, !5976, !5977, !6016, !6022, !6033, !6034, !6035, !6036}
!5526 = !DIDerivedType(tag: DW_TAG_member, name: "supported_coalesce_params", scope: !5524, file: !279, line: 422, baseType: !1021, size: 32)
!5527 = !DIDerivedType(tag: DW_TAG_member, name: "get_drvinfo", scope: !5524, file: !279, line: 423, baseType: !5528, size: 64, offset: 64)
!5528 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5529, size: 64)
!5529 = !DISubroutineType(types: !5530)
!5530 = !{null, !324, !5531}
!5531 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5532, size: 64)
!5532 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_drvinfo", file: !237, line: 177, size: 1568, elements: !5533)
!5533 = !{!5534, !5535, !5536, !5537, !5538, !5539, !5540, !5542, !5543, !5544, !5545, !5546}
!5534 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !5532, file: !237, line: 178, baseType: !527, size: 32)
!5535 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !5532, file: !237, line: 179, baseType: !4642, size: 256, offset: 32)
!5536 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !5532, file: !237, line: 180, baseType: !4642, size: 256, offset: 288)
!5537 = !DIDerivedType(tag: DW_TAG_member, name: "fw_version", scope: !5532, file: !237, line: 181, baseType: !4642, size: 256, offset: 544)
!5538 = !DIDerivedType(tag: DW_TAG_member, name: "bus_info", scope: !5532, file: !237, line: 182, baseType: !4642, size: 256, offset: 800)
!5539 = !DIDerivedType(tag: DW_TAG_member, name: "erom_version", scope: !5532, file: !237, line: 183, baseType: !4642, size: 256, offset: 1056)
!5540 = !DIDerivedType(tag: DW_TAG_member, name: "reserved2", scope: !5532, file: !237, line: 184, baseType: !5541, size: 96, offset: 1312)
!5541 = !DICompositeType(tag: DW_TAG_array_type, baseType: !302, size: 96, elements: !4180)
!5542 = !DIDerivedType(tag: DW_TAG_member, name: "n_priv_flags", scope: !5532, file: !237, line: 185, baseType: !527, size: 32, offset: 1408)
!5543 = !DIDerivedType(tag: DW_TAG_member, name: "n_stats", scope: !5532, file: !237, line: 186, baseType: !527, size: 32, offset: 1440)
!5544 = !DIDerivedType(tag: DW_TAG_member, name: "testinfo_len", scope: !5532, file: !237, line: 187, baseType: !527, size: 32, offset: 1472)
!5545 = !DIDerivedType(tag: DW_TAG_member, name: "eedump_len", scope: !5532, file: !237, line: 188, baseType: !527, size: 32, offset: 1504)
!5546 = !DIDerivedType(tag: DW_TAG_member, name: "regdump_len", scope: !5532, file: !237, line: 189, baseType: !527, size: 32, offset: 1536)
!5547 = !DIDerivedType(tag: DW_TAG_member, name: "get_regs_len", scope: !5524, file: !279, line: 424, baseType: !435, size: 64, offset: 128)
!5548 = !DIDerivedType(tag: DW_TAG_member, name: "get_regs", scope: !5524, file: !279, line: 425, baseType: !5549, size: 64, offset: 192)
!5549 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5550, size: 64)
!5550 = !DISubroutineType(types: !5551)
!5551 = !{null, !324, !5552, !625}
!5552 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5553, size: 64)
!5553 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_regs", file: !237, line: 310, size: 96, elements: !5554)
!5554 = !{!5555, !5556, !5557, !5558}
!5555 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !5553, file: !237, line: 311, baseType: !527, size: 32)
!5556 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !5553, file: !237, line: 312, baseType: !527, size: 32, offset: 32)
!5557 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !5553, file: !237, line: 313, baseType: !527, size: 32, offset: 64)
!5558 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !5553, file: !237, line: 314, baseType: !514, offset: 96)
!5559 = !DIDerivedType(tag: DW_TAG_member, name: "get_wol", scope: !5524, file: !279, line: 426, baseType: !5560, size: 64, offset: 256)
!5560 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5561, size: 64)
!5561 = !DISubroutineType(types: !5562)
!5562 = !{null, !324, !5563}
!5563 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5564, size: 64)
!5564 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_wolinfo", file: !237, line: 203, size: 160, elements: !5565)
!5565 = !{!5566, !5567, !5568, !5569}
!5566 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !5564, file: !237, line: 204, baseType: !527, size: 32)
!5567 = !DIDerivedType(tag: DW_TAG_member, name: "supported", scope: !5564, file: !237, line: 205, baseType: !527, size: 32, offset: 32)
!5568 = !DIDerivedType(tag: DW_TAG_member, name: "wolopts", scope: !5564, file: !237, line: 206, baseType: !527, size: 32, offset: 64)
!5569 = !DIDerivedType(tag: DW_TAG_member, name: "sopass", scope: !5564, file: !237, line: 207, baseType: !5570, size: 48, offset: 96)
!5570 = !DICompositeType(tag: DW_TAG_array_type, baseType: !515, size: 48, elements: !1033)
!5571 = !DIDerivedType(tag: DW_TAG_member, name: "set_wol", scope: !5524, file: !279, line: 427, baseType: !5572, size: 64, offset: 320)
!5572 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5573, size: 64)
!5573 = !DISubroutineType(types: !5574)
!5574 = !{!5, !324, !5563}
!5575 = !DIDerivedType(tag: DW_TAG_member, name: "get_msglevel", scope: !5524, file: !279, line: 428, baseType: !5576, size: 64, offset: 384)
!5576 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5577, size: 64)
!5577 = !DISubroutineType(types: !5578)
!5578 = !{!1021, !324}
!5579 = !DIDerivedType(tag: DW_TAG_member, name: "set_msglevel", scope: !5524, file: !279, line: 429, baseType: !5580, size: 64, offset: 448)
!5580 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5581, size: 64)
!5581 = !DISubroutineType(types: !5582)
!5582 = !{null, !324, !1021}
!5583 = !DIDerivedType(tag: DW_TAG_member, name: "nway_reset", scope: !5524, file: !279, line: 430, baseType: !435, size: 64, offset: 512)
!5584 = !DIDerivedType(tag: DW_TAG_member, name: "get_link", scope: !5524, file: !279, line: 431, baseType: !5576, size: 64, offset: 576)
!5585 = !DIDerivedType(tag: DW_TAG_member, name: "get_link_ext_state", scope: !5524, file: !279, line: 432, baseType: !5586, size: 64, offset: 640)
!5586 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5587, size: 64)
!5587 = !DISubroutineType(types: !5588)
!5588 = !{!5, !324, !5589}
!5589 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5590, size: 64)
!5590 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_link_ext_state_info", file: !279, line: 93, size: 64, elements: !5591)
!5591 = !{!5592, !5593}
!5592 = !DIDerivedType(tag: DW_TAG_member, name: "link_ext_state", scope: !5590, file: !279, line: 94, baseType: !236, size: 32)
!5593 = !DIDerivedType(tag: DW_TAG_member, scope: !5590, file: !279, line: 95, baseType: !5594, size: 32, offset: 32)
!5594 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5590, file: !279, line: 95, size: 32, elements: !5595)
!5595 = !{!5596, !5597, !5598, !5599, !5600, !5601}
!5596 = !DIDerivedType(tag: DW_TAG_member, name: "autoneg", scope: !5594, file: !279, line: 96, baseType: !249, size: 32)
!5597 = !DIDerivedType(tag: DW_TAG_member, name: "link_training", scope: !5594, file: !279, line: 97, baseType: !257, size: 32)
!5598 = !DIDerivedType(tag: DW_TAG_member, name: "link_logical_mismatch", scope: !5594, file: !279, line: 98, baseType: !263, size: 32)
!5599 = !DIDerivedType(tag: DW_TAG_member, name: "bad_signal_integrity", scope: !5594, file: !279, line: 99, baseType: !270, size: 32)
!5600 = !DIDerivedType(tag: DW_TAG_member, name: "cable_issue", scope: !5594, file: !279, line: 100, baseType: !274, size: 32)
!5601 = !DIDerivedType(tag: DW_TAG_member, name: "__link_ext_substate", scope: !5594, file: !279, line: 101, baseType: !828, size: 8)
!5602 = !DIDerivedType(tag: DW_TAG_member, name: "get_eeprom_len", scope: !5524, file: !279, line: 434, baseType: !435, size: 64, offset: 704)
!5603 = !DIDerivedType(tag: DW_TAG_member, name: "get_eeprom", scope: !5524, file: !279, line: 435, baseType: !5604, size: 64, offset: 768)
!5604 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5605, size: 64)
!5605 = !DISubroutineType(types: !5606)
!5606 = !{!5, !324, !5607, !827}
!5607 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5608, size: 64)
!5608 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_eeprom", file: !237, line: 335, size: 128, elements: !5609)
!5609 = !{!5610, !5611, !5612, !5613, !5614}
!5610 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !5608, file: !237, line: 336, baseType: !527, size: 32)
!5611 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !5608, file: !237, line: 337, baseType: !527, size: 32, offset: 32)
!5612 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !5608, file: !237, line: 338, baseType: !527, size: 32, offset: 64)
!5613 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !5608, file: !237, line: 339, baseType: !527, size: 32, offset: 96)
!5614 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !5608, file: !237, line: 340, baseType: !514, offset: 128)
!5615 = !DIDerivedType(tag: DW_TAG_member, name: "set_eeprom", scope: !5524, file: !279, line: 437, baseType: !5604, size: 64, offset: 832)
!5616 = !DIDerivedType(tag: DW_TAG_member, name: "get_coalesce", scope: !5524, file: !279, line: 439, baseType: !5617, size: 64, offset: 896)
!5617 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5618, size: 64)
!5618 = !DISubroutineType(types: !5619)
!5619 = !{!5, !324, !5620}
!5620 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5621, size: 64)
!5621 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_coalesce", file: !237, line: 462, size: 736, elements: !5622)
!5622 = !{!5623, !5624, !5625, !5626, !5627, !5628, !5629, !5630, !5631, !5632, !5633, !5634, !5635, !5636, !5637, !5638, !5639, !5640, !5641, !5642, !5643, !5644, !5645}
!5623 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !5621, file: !237, line: 463, baseType: !527, size: 32)
!5624 = !DIDerivedType(tag: DW_TAG_member, name: "rx_coalesce_usecs", scope: !5621, file: !237, line: 464, baseType: !527, size: 32, offset: 32)
!5625 = !DIDerivedType(tag: DW_TAG_member, name: "rx_max_coalesced_frames", scope: !5621, file: !237, line: 465, baseType: !527, size: 32, offset: 64)
!5626 = !DIDerivedType(tag: DW_TAG_member, name: "rx_coalesce_usecs_irq", scope: !5621, file: !237, line: 466, baseType: !527, size: 32, offset: 96)
!5627 = !DIDerivedType(tag: DW_TAG_member, name: "rx_max_coalesced_frames_irq", scope: !5621, file: !237, line: 467, baseType: !527, size: 32, offset: 128)
!5628 = !DIDerivedType(tag: DW_TAG_member, name: "tx_coalesce_usecs", scope: !5621, file: !237, line: 468, baseType: !527, size: 32, offset: 160)
!5629 = !DIDerivedType(tag: DW_TAG_member, name: "tx_max_coalesced_frames", scope: !5621, file: !237, line: 469, baseType: !527, size: 32, offset: 192)
!5630 = !DIDerivedType(tag: DW_TAG_member, name: "tx_coalesce_usecs_irq", scope: !5621, file: !237, line: 470, baseType: !527, size: 32, offset: 224)
!5631 = !DIDerivedType(tag: DW_TAG_member, name: "tx_max_coalesced_frames_irq", scope: !5621, file: !237, line: 471, baseType: !527, size: 32, offset: 256)
!5632 = !DIDerivedType(tag: DW_TAG_member, name: "stats_block_coalesce_usecs", scope: !5621, file: !237, line: 472, baseType: !527, size: 32, offset: 288)
!5633 = !DIDerivedType(tag: DW_TAG_member, name: "use_adaptive_rx_coalesce", scope: !5621, file: !237, line: 473, baseType: !527, size: 32, offset: 320)
!5634 = !DIDerivedType(tag: DW_TAG_member, name: "use_adaptive_tx_coalesce", scope: !5621, file: !237, line: 474, baseType: !527, size: 32, offset: 352)
!5635 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_rate_low", scope: !5621, file: !237, line: 475, baseType: !527, size: 32, offset: 384)
!5636 = !DIDerivedType(tag: DW_TAG_member, name: "rx_coalesce_usecs_low", scope: !5621, file: !237, line: 476, baseType: !527, size: 32, offset: 416)
!5637 = !DIDerivedType(tag: DW_TAG_member, name: "rx_max_coalesced_frames_low", scope: !5621, file: !237, line: 477, baseType: !527, size: 32, offset: 448)
!5638 = !DIDerivedType(tag: DW_TAG_member, name: "tx_coalesce_usecs_low", scope: !5621, file: !237, line: 478, baseType: !527, size: 32, offset: 480)
!5639 = !DIDerivedType(tag: DW_TAG_member, name: "tx_max_coalesced_frames_low", scope: !5621, file: !237, line: 479, baseType: !527, size: 32, offset: 512)
!5640 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_rate_high", scope: !5621, file: !237, line: 480, baseType: !527, size: 32, offset: 544)
!5641 = !DIDerivedType(tag: DW_TAG_member, name: "rx_coalesce_usecs_high", scope: !5621, file: !237, line: 481, baseType: !527, size: 32, offset: 576)
!5642 = !DIDerivedType(tag: DW_TAG_member, name: "rx_max_coalesced_frames_high", scope: !5621, file: !237, line: 482, baseType: !527, size: 32, offset: 608)
!5643 = !DIDerivedType(tag: DW_TAG_member, name: "tx_coalesce_usecs_high", scope: !5621, file: !237, line: 483, baseType: !527, size: 32, offset: 640)
!5644 = !DIDerivedType(tag: DW_TAG_member, name: "tx_max_coalesced_frames_high", scope: !5621, file: !237, line: 484, baseType: !527, size: 32, offset: 672)
!5645 = !DIDerivedType(tag: DW_TAG_member, name: "rate_sample_interval", scope: !5621, file: !237, line: 485, baseType: !527, size: 32, offset: 704)
!5646 = !DIDerivedType(tag: DW_TAG_member, name: "set_coalesce", scope: !5524, file: !279, line: 440, baseType: !5617, size: 64, offset: 960)
!5647 = !DIDerivedType(tag: DW_TAG_member, name: "get_ringparam", scope: !5524, file: !279, line: 441, baseType: !5648, size: 64, offset: 1024)
!5648 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5649, size: 64)
!5649 = !DISubroutineType(types: !5650)
!5650 = !{null, !324, !5651}
!5651 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5652, size: 64)
!5652 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_ringparam", file: !237, line: 513, size: 288, elements: !5653)
!5653 = !{!5654, !5655, !5656, !5657, !5658, !5659, !5660, !5661, !5662}
!5654 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !5652, file: !237, line: 514, baseType: !527, size: 32)
!5655 = !DIDerivedType(tag: DW_TAG_member, name: "rx_max_pending", scope: !5652, file: !237, line: 515, baseType: !527, size: 32, offset: 32)
!5656 = !DIDerivedType(tag: DW_TAG_member, name: "rx_mini_max_pending", scope: !5652, file: !237, line: 516, baseType: !527, size: 32, offset: 64)
!5657 = !DIDerivedType(tag: DW_TAG_member, name: "rx_jumbo_max_pending", scope: !5652, file: !237, line: 517, baseType: !527, size: 32, offset: 96)
!5658 = !DIDerivedType(tag: DW_TAG_member, name: "tx_max_pending", scope: !5652, file: !237, line: 518, baseType: !527, size: 32, offset: 128)
!5659 = !DIDerivedType(tag: DW_TAG_member, name: "rx_pending", scope: !5652, file: !237, line: 519, baseType: !527, size: 32, offset: 160)
!5660 = !DIDerivedType(tag: DW_TAG_member, name: "rx_mini_pending", scope: !5652, file: !237, line: 520, baseType: !527, size: 32, offset: 192)
!5661 = !DIDerivedType(tag: DW_TAG_member, name: "rx_jumbo_pending", scope: !5652, file: !237, line: 521, baseType: !527, size: 32, offset: 224)
!5662 = !DIDerivedType(tag: DW_TAG_member, name: "tx_pending", scope: !5652, file: !237, line: 522, baseType: !527, size: 32, offset: 256)
!5663 = !DIDerivedType(tag: DW_TAG_member, name: "set_ringparam", scope: !5524, file: !279, line: 443, baseType: !5664, size: 64, offset: 1088)
!5664 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5665, size: 64)
!5665 = !DISubroutineType(types: !5666)
!5666 = !{!5, !324, !5651}
!5667 = !DIDerivedType(tag: DW_TAG_member, name: "get_pause_stats", scope: !5524, file: !279, line: 445, baseType: !5668, size: 64, offset: 1152)
!5668 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5669, size: 64)
!5669 = !DISubroutineType(types: !5670)
!5670 = !{null, !324, !5671}
!5671 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5672, size: 64)
!5672 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_pause_stats", file: !279, line: 260, size: 128, elements: !5673)
!5673 = !{!5674, !5675}
!5674 = !DIDerivedType(tag: DW_TAG_member, name: "tx_pause_frames", scope: !5672, file: !279, line: 261, baseType: !365, size: 64)
!5675 = !DIDerivedType(tag: DW_TAG_member, name: "rx_pause_frames", scope: !5672, file: !279, line: 262, baseType: !365, size: 64, offset: 64)
!5676 = !DIDerivedType(tag: DW_TAG_member, name: "get_pauseparam", scope: !5524, file: !279, line: 447, baseType: !5677, size: 64, offset: 1216)
!5677 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5678, size: 64)
!5678 = !DISubroutineType(types: !5679)
!5679 = !{null, !324, !5680}
!5680 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5681, size: 64)
!5681 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_pauseparam", file: !237, line: 575, size: 128, elements: !5682)
!5682 = !{!5683, !5684, !5685, !5686}
!5683 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !5681, file: !237, line: 576, baseType: !527, size: 32)
!5684 = !DIDerivedType(tag: DW_TAG_member, name: "autoneg", scope: !5681, file: !237, line: 577, baseType: !527, size: 32, offset: 32)
!5685 = !DIDerivedType(tag: DW_TAG_member, name: "rx_pause", scope: !5681, file: !237, line: 578, baseType: !527, size: 32, offset: 64)
!5686 = !DIDerivedType(tag: DW_TAG_member, name: "tx_pause", scope: !5681, file: !237, line: 579, baseType: !527, size: 32, offset: 96)
!5687 = !DIDerivedType(tag: DW_TAG_member, name: "set_pauseparam", scope: !5524, file: !279, line: 449, baseType: !5688, size: 64, offset: 1280)
!5688 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5689, size: 64)
!5689 = !DISubroutineType(types: !5690)
!5690 = !{!5, !324, !5680}
!5691 = !DIDerivedType(tag: DW_TAG_member, name: "self_test", scope: !5524, file: !279, line: 451, baseType: !5692, size: 64, offset: 1344)
!5692 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5693, size: 64)
!5693 = !DISubroutineType(types: !5694)
!5694 = !{null, !324, !5695, !5374}
!5695 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5696, size: 64)
!5696 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_test", file: !237, line: 770, size: 128, elements: !5697)
!5697 = !{!5698, !5699, !5700, !5701, !5702}
!5698 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !5696, file: !237, line: 771, baseType: !527, size: 32)
!5699 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5696, file: !237, line: 772, baseType: !527, size: 32, offset: 32)
!5700 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !5696, file: !237, line: 773, baseType: !527, size: 32, offset: 64)
!5701 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !5696, file: !237, line: 774, baseType: !527, size: 32, offset: 96)
!5702 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !5696, file: !237, line: 775, baseType: !5703, offset: 128)
!5703 = !DICompositeType(tag: DW_TAG_array_type, baseType: !367, elements: !517)
!5704 = !DIDerivedType(tag: DW_TAG_member, name: "get_strings", scope: !5524, file: !279, line: 452, baseType: !5705, size: 64, offset: 1408)
!5705 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5706, size: 64)
!5706 = !DISubroutineType(types: !5707)
!5707 = !{null, !324, !1021, !827}
!5708 = !DIDerivedType(tag: DW_TAG_member, name: "set_phys_id", scope: !5524, file: !279, line: 453, baseType: !5709, size: 64, offset: 1472)
!5709 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5710, size: 64)
!5710 = !DISubroutineType(types: !5711)
!5711 = !{!5, !324, !278}
!5712 = !DIDerivedType(tag: DW_TAG_member, name: "get_ethtool_stats", scope: !5524, file: !279, line: 454, baseType: !5713, size: 64, offset: 1536)
!5713 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5714, size: 64)
!5714 = !DISubroutineType(types: !5715)
!5715 = !{null, !324, !5716, !5374}
!5716 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5717, size: 64)
!5717 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_stats", file: !237, line: 789, size: 64, elements: !5718)
!5718 = !{!5719, !5720, !5721}
!5719 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !5717, file: !237, line: 790, baseType: !527, size: 32)
!5720 = !DIDerivedType(tag: DW_TAG_member, name: "n_stats", scope: !5717, file: !237, line: 791, baseType: !527, size: 32, offset: 32)
!5721 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !5717, file: !237, line: 792, baseType: !5703, offset: 64)
!5722 = !DIDerivedType(tag: DW_TAG_member, name: "begin", scope: !5524, file: !279, line: 456, baseType: !435, size: 64, offset: 1600)
!5723 = !DIDerivedType(tag: DW_TAG_member, name: "complete", scope: !5524, file: !279, line: 457, baseType: !439, size: 64, offset: 1664)
!5724 = !DIDerivedType(tag: DW_TAG_member, name: "get_priv_flags", scope: !5524, file: !279, line: 458, baseType: !5576, size: 64, offset: 1728)
!5725 = !DIDerivedType(tag: DW_TAG_member, name: "set_priv_flags", scope: !5524, file: !279, line: 459, baseType: !5726, size: 64, offset: 1792)
!5726 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5727, size: 64)
!5727 = !DISubroutineType(types: !5728)
!5728 = !{!5, !324, !1021}
!5729 = !DIDerivedType(tag: DW_TAG_member, name: "get_sset_count", scope: !5524, file: !279, line: 460, baseType: !756, size: 64, offset: 1856)
!5730 = !DIDerivedType(tag: DW_TAG_member, name: "get_rxnfc", scope: !5524, file: !279, line: 461, baseType: !5731, size: 64, offset: 1920)
!5731 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5732, size: 64)
!5732 = !DISubroutineType(types: !5733)
!5733 = !{!5, !324, !5734, !2548}
!5734 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5735, size: 64)
!5735 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_rxnfc", file: !237, line: 1088, size: 1536, elements: !5736)
!5736 = !{!5737, !5738, !5739, !5740, !5826, !5831}
!5737 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !5735, file: !237, line: 1089, baseType: !527, size: 32)
!5738 = !DIDerivedType(tag: DW_TAG_member, name: "flow_type", scope: !5735, file: !237, line: 1090, baseType: !527, size: 32, offset: 32)
!5739 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !5735, file: !237, line: 1091, baseType: !367, size: 64, offset: 64)
!5740 = !DIDerivedType(tag: DW_TAG_member, name: "fs", scope: !5735, file: !237, line: 1092, baseType: !5741, size: 1344, offset: 128)
!5741 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_rx_flow_spec", file: !237, line: 992, size: 1344, elements: !5742)
!5742 = !{!5743, !5744, !5812, !5822, !5823, !5824, !5825}
!5743 = !DIDerivedType(tag: DW_TAG_member, name: "flow_type", scope: !5741, file: !237, line: 993, baseType: !527, size: 32)
!5744 = !DIDerivedType(tag: DW_TAG_member, name: "h_u", scope: !5741, file: !237, line: 994, baseType: !5745, size: 416, offset: 32)
!5745 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "ethtool_flow_union", file: !237, line: 939, size: 416, elements: !5746)
!5746 = !{!5747, !5755, !5756, !5757, !5764, !5765, !5774, !5782, !5783, !5784, !5791, !5792, !5800, !5808}
!5747 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_ip4_spec", scope: !5745, file: !237, line: 940, baseType: !5748, size: 128)
!5748 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_tcpip4_spec", file: !237, line: 845, size: 128, elements: !5749)
!5749 = !{!5750, !5751, !5752, !5753, !5754}
!5750 = !DIDerivedType(tag: DW_TAG_member, name: "ip4src", scope: !5748, file: !237, line: 846, baseType: !3238, size: 32)
!5751 = !DIDerivedType(tag: DW_TAG_member, name: "ip4dst", scope: !5748, file: !237, line: 847, baseType: !3238, size: 32, offset: 32)
!5752 = !DIDerivedType(tag: DW_TAG_member, name: "psrc", scope: !5748, file: !237, line: 848, baseType: !569, size: 16, offset: 64)
!5753 = !DIDerivedType(tag: DW_TAG_member, name: "pdst", scope: !5748, file: !237, line: 849, baseType: !569, size: 16, offset: 80)
!5754 = !DIDerivedType(tag: DW_TAG_member, name: "tos", scope: !5748, file: !237, line: 850, baseType: !515, size: 8, offset: 96)
!5755 = !DIDerivedType(tag: DW_TAG_member, name: "udp_ip4_spec", scope: !5745, file: !237, line: 941, baseType: !5748, size: 128)
!5756 = !DIDerivedType(tag: DW_TAG_member, name: "sctp_ip4_spec", scope: !5745, file: !237, line: 942, baseType: !5748, size: 128)
!5757 = !DIDerivedType(tag: DW_TAG_member, name: "ah_ip4_spec", scope: !5745, file: !237, line: 943, baseType: !5758, size: 128)
!5758 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_ah_espip4_spec", file: !237, line: 862, size: 128, elements: !5759)
!5759 = !{!5760, !5761, !5762, !5763}
!5760 = !DIDerivedType(tag: DW_TAG_member, name: "ip4src", scope: !5758, file: !237, line: 863, baseType: !3238, size: 32)
!5761 = !DIDerivedType(tag: DW_TAG_member, name: "ip4dst", scope: !5758, file: !237, line: 864, baseType: !3238, size: 32, offset: 32)
!5762 = !DIDerivedType(tag: DW_TAG_member, name: "spi", scope: !5758, file: !237, line: 865, baseType: !3238, size: 32, offset: 64)
!5763 = !DIDerivedType(tag: DW_TAG_member, name: "tos", scope: !5758, file: !237, line: 866, baseType: !515, size: 8, offset: 96)
!5764 = !DIDerivedType(tag: DW_TAG_member, name: "esp_ip4_spec", scope: !5745, file: !237, line: 944, baseType: !5758, size: 128)
!5765 = !DIDerivedType(tag: DW_TAG_member, name: "usr_ip4_spec", scope: !5745, file: !237, line: 945, baseType: !5766, size: 128)
!5766 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_usrip4_spec", file: !237, line: 880, size: 128, elements: !5767)
!5767 = !{!5768, !5769, !5770, !5771, !5772, !5773}
!5768 = !DIDerivedType(tag: DW_TAG_member, name: "ip4src", scope: !5766, file: !237, line: 881, baseType: !3238, size: 32)
!5769 = !DIDerivedType(tag: DW_TAG_member, name: "ip4dst", scope: !5766, file: !237, line: 882, baseType: !3238, size: 32, offset: 32)
!5770 = !DIDerivedType(tag: DW_TAG_member, name: "l4_4_bytes", scope: !5766, file: !237, line: 883, baseType: !3238, size: 32, offset: 64)
!5771 = !DIDerivedType(tag: DW_TAG_member, name: "tos", scope: !5766, file: !237, line: 884, baseType: !515, size: 8, offset: 96)
!5772 = !DIDerivedType(tag: DW_TAG_member, name: "ip_ver", scope: !5766, file: !237, line: 885, baseType: !515, size: 8, offset: 104)
!5773 = !DIDerivedType(tag: DW_TAG_member, name: "proto", scope: !5766, file: !237, line: 886, baseType: !515, size: 8, offset: 112)
!5774 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_ip6_spec", scope: !5745, file: !237, line: 946, baseType: !5775, size: 320)
!5775 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_tcpip6_spec", file: !237, line: 899, size: 320, elements: !5776)
!5776 = !{!5777, !5778, !5779, !5780, !5781}
!5777 = !DIDerivedType(tag: DW_TAG_member, name: "ip6src", scope: !5775, file: !237, line: 900, baseType: !3259, size: 128)
!5778 = !DIDerivedType(tag: DW_TAG_member, name: "ip6dst", scope: !5775, file: !237, line: 901, baseType: !3259, size: 128, offset: 128)
!5779 = !DIDerivedType(tag: DW_TAG_member, name: "psrc", scope: !5775, file: !237, line: 902, baseType: !569, size: 16, offset: 256)
!5780 = !DIDerivedType(tag: DW_TAG_member, name: "pdst", scope: !5775, file: !237, line: 903, baseType: !569, size: 16, offset: 272)
!5781 = !DIDerivedType(tag: DW_TAG_member, name: "tclass", scope: !5775, file: !237, line: 904, baseType: !515, size: 8, offset: 288)
!5782 = !DIDerivedType(tag: DW_TAG_member, name: "udp_ip6_spec", scope: !5745, file: !237, line: 947, baseType: !5775, size: 320)
!5783 = !DIDerivedType(tag: DW_TAG_member, name: "sctp_ip6_spec", scope: !5745, file: !237, line: 948, baseType: !5775, size: 320)
!5784 = !DIDerivedType(tag: DW_TAG_member, name: "ah_ip6_spec", scope: !5745, file: !237, line: 949, baseType: !5785, size: 320)
!5785 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_ah_espip6_spec", file: !237, line: 916, size: 320, elements: !5786)
!5786 = !{!5787, !5788, !5789, !5790}
!5787 = !DIDerivedType(tag: DW_TAG_member, name: "ip6src", scope: !5785, file: !237, line: 917, baseType: !3259, size: 128)
!5788 = !DIDerivedType(tag: DW_TAG_member, name: "ip6dst", scope: !5785, file: !237, line: 918, baseType: !3259, size: 128, offset: 128)
!5789 = !DIDerivedType(tag: DW_TAG_member, name: "spi", scope: !5785, file: !237, line: 919, baseType: !3238, size: 32, offset: 256)
!5790 = !DIDerivedType(tag: DW_TAG_member, name: "tclass", scope: !5785, file: !237, line: 920, baseType: !515, size: 8, offset: 288)
!5791 = !DIDerivedType(tag: DW_TAG_member, name: "esp_ip6_spec", scope: !5745, file: !237, line: 950, baseType: !5785, size: 320)
!5792 = !DIDerivedType(tag: DW_TAG_member, name: "usr_ip6_spec", scope: !5745, file: !237, line: 951, baseType: !5793, size: 320)
!5793 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_usrip6_spec", file: !237, line: 931, size: 320, elements: !5794)
!5794 = !{!5795, !5796, !5797, !5798, !5799}
!5795 = !DIDerivedType(tag: DW_TAG_member, name: "ip6src", scope: !5793, file: !237, line: 932, baseType: !3259, size: 128)
!5796 = !DIDerivedType(tag: DW_TAG_member, name: "ip6dst", scope: !5793, file: !237, line: 933, baseType: !3259, size: 128, offset: 128)
!5797 = !DIDerivedType(tag: DW_TAG_member, name: "l4_4_bytes", scope: !5793, file: !237, line: 934, baseType: !3238, size: 32, offset: 256)
!5798 = !DIDerivedType(tag: DW_TAG_member, name: "tclass", scope: !5793, file: !237, line: 935, baseType: !515, size: 8, offset: 288)
!5799 = !DIDerivedType(tag: DW_TAG_member, name: "l4_proto", scope: !5793, file: !237, line: 936, baseType: !515, size: 8, offset: 296)
!5800 = !DIDerivedType(tag: DW_TAG_member, name: "ether_spec", scope: !5745, file: !237, line: 952, baseType: !5801, size: 112)
!5801 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethhdr", file: !5802, line: 164, size: 112, elements: !5803)
!5802 = !DIFile(filename: "./include/uapi/linux/if_ether.h", directory: "/home/lizy2001/genbc/linux")
!5803 = !{!5804, !5806, !5807}
!5804 = !DIDerivedType(tag: DW_TAG_member, name: "h_dest", scope: !5801, file: !5802, line: 165, baseType: !5805, size: 48)
!5805 = !DICompositeType(tag: DW_TAG_array_type, baseType: !516, size: 48, elements: !1033)
!5806 = !DIDerivedType(tag: DW_TAG_member, name: "h_source", scope: !5801, file: !5802, line: 166, baseType: !5805, size: 48, offset: 48)
!5807 = !DIDerivedType(tag: DW_TAG_member, name: "h_proto", scope: !5801, file: !5802, line: 167, baseType: !569, size: 16, offset: 96)
!5808 = !DIDerivedType(tag: DW_TAG_member, name: "hdata", scope: !5745, file: !237, line: 953, baseType: !5809, size: 416)
!5809 = !DICompositeType(tag: DW_TAG_array_type, baseType: !515, size: 416, elements: !5810)
!5810 = !{!5811}
!5811 = !DISubrange(count: 52)
!5812 = !DIDerivedType(tag: DW_TAG_member, name: "h_ext", scope: !5741, file: !237, line: 995, baseType: !5813, size: 160, offset: 448)
!5813 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_flow_ext", file: !237, line: 967, size: 160, elements: !5814)
!5814 = !{!5815, !5817, !5818, !5819, !5820}
!5815 = !DIDerivedType(tag: DW_TAG_member, name: "padding", scope: !5813, file: !237, line: 968, baseType: !5816, size: 16)
!5816 = !DICompositeType(tag: DW_TAG_array_type, baseType: !515, size: 16, elements: !2695)
!5817 = !DIDerivedType(tag: DW_TAG_member, name: "h_dest", scope: !5813, file: !237, line: 969, baseType: !5805, size: 48, offset: 16)
!5818 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_etype", scope: !5813, file: !237, line: 970, baseType: !569, size: 16, offset: 64)
!5819 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_tci", scope: !5813, file: !237, line: 971, baseType: !569, size: 16, offset: 80)
!5820 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !5813, file: !237, line: 972, baseType: !5821, size: 64, offset: 96)
!5821 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3238, size: 64, elements: !2695)
!5822 = !DIDerivedType(tag: DW_TAG_member, name: "m_u", scope: !5741, file: !237, line: 996, baseType: !5745, size: 416, offset: 608)
!5823 = !DIDerivedType(tag: DW_TAG_member, name: "m_ext", scope: !5741, file: !237, line: 997, baseType: !5813, size: 160, offset: 1024)
!5824 = !DIDerivedType(tag: DW_TAG_member, name: "ring_cookie", scope: !5741, file: !237, line: 998, baseType: !367, size: 64, offset: 1216)
!5825 = !DIDerivedType(tag: DW_TAG_member, name: "location", scope: !5741, file: !237, line: 999, baseType: !527, size: 32, offset: 1280)
!5826 = !DIDerivedType(tag: DW_TAG_member, scope: !5735, file: !237, line: 1093, baseType: !5827, size: 32, offset: 1472)
!5827 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5735, file: !237, line: 1093, size: 32, elements: !5828)
!5828 = !{!5829, !5830}
!5829 = !DIDerivedType(tag: DW_TAG_member, name: "rule_cnt", scope: !5827, file: !237, line: 1094, baseType: !527, size: 32)
!5830 = !DIDerivedType(tag: DW_TAG_member, name: "rss_context", scope: !5827, file: !237, line: 1095, baseType: !527, size: 32)
!5831 = !DIDerivedType(tag: DW_TAG_member, name: "rule_locs", scope: !5735, file: !237, line: 1097, baseType: !526, offset: 1504)
!5832 = !DIDerivedType(tag: DW_TAG_member, name: "set_rxnfc", scope: !5524, file: !279, line: 463, baseType: !5833, size: 64, offset: 1984)
!5833 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5834, size: 64)
!5834 = !DISubroutineType(types: !5835)
!5835 = !{!5, !324, !5734}
!5836 = !DIDerivedType(tag: DW_TAG_member, name: "flash_device", scope: !5524, file: !279, line: 464, baseType: !5837, size: 64, offset: 2048)
!5837 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5838, size: 64)
!5838 = !DISubroutineType(types: !5839)
!5839 = !{!5, !324, !5840}
!5840 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5841, size: 64)
!5841 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_flash", file: !237, line: 1217, size: 1088, elements: !5842)
!5842 = !{!5843, !5844, !5845}
!5843 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !5841, file: !237, line: 1218, baseType: !527, size: 32)
!5844 = !DIDerivedType(tag: DW_TAG_member, name: "region", scope: !5841, file: !237, line: 1219, baseType: !527, size: 32, offset: 32)
!5845 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !5841, file: !237, line: 1220, baseType: !5235, size: 1024, offset: 64)
!5846 = !DIDerivedType(tag: DW_TAG_member, name: "reset", scope: !5524, file: !279, line: 465, baseType: !5847, size: 64, offset: 2112)
!5847 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5848, size: 64)
!5848 = !DISubroutineType(types: !5849)
!5849 = !{!5, !324, !2548}
!5850 = !DIDerivedType(tag: DW_TAG_member, name: "get_rxfh_key_size", scope: !5524, file: !279, line: 466, baseType: !5576, size: 64, offset: 2176)
!5851 = !DIDerivedType(tag: DW_TAG_member, name: "get_rxfh_indir_size", scope: !5524, file: !279, line: 467, baseType: !5576, size: 64, offset: 2240)
!5852 = !DIDerivedType(tag: DW_TAG_member, name: "get_rxfh", scope: !5524, file: !279, line: 468, baseType: !5853, size: 64, offset: 2304)
!5853 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5854, size: 64)
!5854 = !DISubroutineType(types: !5855)
!5855 = !{!5, !324, !2548, !827, !827}
!5856 = !DIDerivedType(tag: DW_TAG_member, name: "set_rxfh", scope: !5524, file: !279, line: 470, baseType: !5857, size: 64, offset: 2368)
!5857 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5858, size: 64)
!5858 = !DISubroutineType(types: !5859)
!5859 = !{!5, !324, !5860, !5862, !5863}
!5860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5861, size: 64)
!5861 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1021)
!5862 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5863, size: 64)
!5863 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !828)
!5864 = !DIDerivedType(tag: DW_TAG_member, name: "get_rxfh_context", scope: !5524, file: !279, line: 472, baseType: !5865, size: 64, offset: 2432)
!5865 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5866, size: 64)
!5866 = !DISubroutineType(types: !5867)
!5867 = !{!5, !324, !2548, !827, !827, !1021}
!5868 = !DIDerivedType(tag: DW_TAG_member, name: "set_rxfh_context", scope: !5524, file: !279, line: 474, baseType: !5869, size: 64, offset: 2496)
!5869 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5870, size: 64)
!5870 = !DISubroutineType(types: !5871)
!5871 = !{!5, !324, !5860, !5862, !5863, !2548, !805}
!5872 = !DIDerivedType(tag: DW_TAG_member, name: "get_channels", scope: !5524, file: !279, line: 477, baseType: !5873, size: 64, offset: 2560)
!5873 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5874, size: 64)
!5874 = !DISubroutineType(types: !5875)
!5875 = !{null, !324, !5876}
!5876 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5877, size: 64)
!5877 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_channels", file: !237, line: 541, size: 288, elements: !5878)
!5878 = !{!5879, !5880, !5881, !5882, !5883, !5884, !5885, !5886, !5887}
!5879 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !5877, file: !237, line: 542, baseType: !527, size: 32)
!5880 = !DIDerivedType(tag: DW_TAG_member, name: "max_rx", scope: !5877, file: !237, line: 543, baseType: !527, size: 32, offset: 32)
!5881 = !DIDerivedType(tag: DW_TAG_member, name: "max_tx", scope: !5877, file: !237, line: 544, baseType: !527, size: 32, offset: 64)
!5882 = !DIDerivedType(tag: DW_TAG_member, name: "max_other", scope: !5877, file: !237, line: 545, baseType: !527, size: 32, offset: 96)
!5883 = !DIDerivedType(tag: DW_TAG_member, name: "max_combined", scope: !5877, file: !237, line: 546, baseType: !527, size: 32, offset: 128)
!5884 = !DIDerivedType(tag: DW_TAG_member, name: "rx_count", scope: !5877, file: !237, line: 547, baseType: !527, size: 32, offset: 160)
!5885 = !DIDerivedType(tag: DW_TAG_member, name: "tx_count", scope: !5877, file: !237, line: 548, baseType: !527, size: 32, offset: 192)
!5886 = !DIDerivedType(tag: DW_TAG_member, name: "other_count", scope: !5877, file: !237, line: 549, baseType: !527, size: 32, offset: 224)
!5887 = !DIDerivedType(tag: DW_TAG_member, name: "combined_count", scope: !5877, file: !237, line: 550, baseType: !527, size: 32, offset: 256)
!5888 = !DIDerivedType(tag: DW_TAG_member, name: "set_channels", scope: !5524, file: !279, line: 478, baseType: !5889, size: 64, offset: 2624)
!5889 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5890, size: 64)
!5890 = !DISubroutineType(types: !5891)
!5891 = !{!5, !324, !5876}
!5892 = !DIDerivedType(tag: DW_TAG_member, name: "get_dump_flag", scope: !5524, file: !279, line: 479, baseType: !5893, size: 64, offset: 2688)
!5893 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5894, size: 64)
!5894 = !DISubroutineType(types: !5895)
!5895 = !{!5, !324, !5896}
!5896 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5897, size: 64)
!5897 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_dump", file: !237, line: 1237, size: 128, elements: !5898)
!5898 = !{!5899, !5900, !5901, !5902, !5903}
!5899 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !5897, file: !237, line: 1238, baseType: !527, size: 32)
!5900 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !5897, file: !237, line: 1239, baseType: !527, size: 32, offset: 32)
!5901 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !5897, file: !237, line: 1240, baseType: !527, size: 32, offset: 64)
!5902 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !5897, file: !237, line: 1241, baseType: !527, size: 32, offset: 96)
!5903 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !5897, file: !237, line: 1242, baseType: !514, offset: 128)
!5904 = !DIDerivedType(tag: DW_TAG_member, name: "get_dump_data", scope: !5524, file: !279, line: 480, baseType: !5905, size: 64, offset: 2752)
!5905 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5906, size: 64)
!5906 = !DISubroutineType(types: !5907)
!5907 = !{!5, !324, !5896, !625}
!5908 = !DIDerivedType(tag: DW_TAG_member, name: "set_dump", scope: !5524, file: !279, line: 482, baseType: !5893, size: 64, offset: 2816)
!5909 = !DIDerivedType(tag: DW_TAG_member, name: "get_ts_info", scope: !5524, file: !279, line: 483, baseType: !5910, size: 64, offset: 2880)
!5910 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5911, size: 64)
!5911 = !DISubroutineType(types: !5912)
!5912 = !{!5, !324, !5913}
!5913 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5914, size: 64)
!5914 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_ts_info", file: !237, line: 1317, size: 352, elements: !5915)
!5915 = !{!5916, !5917, !5918, !5919, !5920, !5922, !5923}
!5916 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !5914, file: !237, line: 1318, baseType: !527, size: 32)
!5917 = !DIDerivedType(tag: DW_TAG_member, name: "so_timestamping", scope: !5914, file: !237, line: 1319, baseType: !527, size: 32, offset: 32)
!5918 = !DIDerivedType(tag: DW_TAG_member, name: "phc_index", scope: !5914, file: !237, line: 1320, baseType: !976, size: 32, offset: 64)
!5919 = !DIDerivedType(tag: DW_TAG_member, name: "tx_types", scope: !5914, file: !237, line: 1321, baseType: !527, size: 32, offset: 96)
!5920 = !DIDerivedType(tag: DW_TAG_member, name: "tx_reserved", scope: !5914, file: !237, line: 1322, baseType: !5921, size: 96, offset: 128)
!5921 = !DICompositeType(tag: DW_TAG_array_type, baseType: !527, size: 96, elements: !1624)
!5922 = !DIDerivedType(tag: DW_TAG_member, name: "rx_filters", scope: !5914, file: !237, line: 1323, baseType: !527, size: 32, offset: 224)
!5923 = !DIDerivedType(tag: DW_TAG_member, name: "rx_reserved", scope: !5914, file: !237, line: 1324, baseType: !5921, size: 96, offset: 256)
!5924 = !DIDerivedType(tag: DW_TAG_member, name: "get_module_info", scope: !5524, file: !279, line: 484, baseType: !5925, size: 64, offset: 2944)
!5925 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5926, size: 64)
!5926 = !DISubroutineType(types: !5927)
!5927 = !{!5, !324, !5928}
!5928 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5929, size: 64)
!5929 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_modinfo", file: !237, line: 382, size: 352, elements: !5930)
!5930 = !{!5931, !5932, !5933, !5934}
!5931 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !5929, file: !237, line: 383, baseType: !527, size: 32)
!5932 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !5929, file: !237, line: 384, baseType: !527, size: 32, offset: 32)
!5933 = !DIDerivedType(tag: DW_TAG_member, name: "eeprom_len", scope: !5929, file: !237, line: 385, baseType: !527, size: 32, offset: 64)
!5934 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !5929, file: !237, line: 386, baseType: !5935, size: 256, offset: 96)
!5935 = !DICompositeType(tag: DW_TAG_array_type, baseType: !527, size: 256, elements: !2465)
!5936 = !DIDerivedType(tag: DW_TAG_member, name: "get_module_eeprom", scope: !5524, file: !279, line: 486, baseType: !5604, size: 64, offset: 3008)
!5937 = !DIDerivedType(tag: DW_TAG_member, name: "get_eee", scope: !5524, file: !279, line: 488, baseType: !5938, size: 64, offset: 3072)
!5938 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5939, size: 64)
!5939 = !DISubroutineType(types: !5940)
!5940 = !{!5, !324, !5941}
!5941 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5942, size: 64)
!5942 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_eee", file: !237, line: 360, size: 320, elements: !5943)
!5943 = !{!5944, !5945, !5946, !5947, !5948, !5949, !5950, !5951, !5952}
!5944 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !5942, file: !237, line: 361, baseType: !527, size: 32)
!5945 = !DIDerivedType(tag: DW_TAG_member, name: "supported", scope: !5942, file: !237, line: 362, baseType: !527, size: 32, offset: 32)
!5946 = !DIDerivedType(tag: DW_TAG_member, name: "advertised", scope: !5942, file: !237, line: 363, baseType: !527, size: 32, offset: 64)
!5947 = !DIDerivedType(tag: DW_TAG_member, name: "lp_advertised", scope: !5942, file: !237, line: 364, baseType: !527, size: 32, offset: 96)
!5948 = !DIDerivedType(tag: DW_TAG_member, name: "eee_active", scope: !5942, file: !237, line: 365, baseType: !527, size: 32, offset: 128)
!5949 = !DIDerivedType(tag: DW_TAG_member, name: "eee_enabled", scope: !5942, file: !237, line: 366, baseType: !527, size: 32, offset: 160)
!5950 = !DIDerivedType(tag: DW_TAG_member, name: "tx_lpi_enabled", scope: !5942, file: !237, line: 367, baseType: !527, size: 32, offset: 192)
!5951 = !DIDerivedType(tag: DW_TAG_member, name: "tx_lpi_timer", scope: !5942, file: !237, line: 368, baseType: !527, size: 32, offset: 224)
!5952 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !5942, file: !237, line: 369, baseType: !2694, size: 64, offset: 256)
!5953 = !DIDerivedType(tag: DW_TAG_member, name: "set_eee", scope: !5524, file: !279, line: 489, baseType: !5938, size: 64, offset: 3136)
!5954 = !DIDerivedType(tag: DW_TAG_member, name: "get_tunable", scope: !5524, file: !279, line: 490, baseType: !5955, size: 64, offset: 3200)
!5955 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5956, size: 64)
!5956 = !DISubroutineType(types: !5957)
!5957 = !{!5, !324, !5958, !625}
!5958 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5959, size: 64)
!5959 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5960)
!5960 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_tunable", file: !237, line: 244, size: 128, elements: !5961)
!5961 = !{!5962, !5963, !5964, !5965, !5966}
!5962 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !5960, file: !237, line: 245, baseType: !527, size: 32)
!5963 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !5960, file: !237, line: 246, baseType: !527, size: 32, offset: 32)
!5964 = !DIDerivedType(tag: DW_TAG_member, name: "type_id", scope: !5960, file: !237, line: 247, baseType: !527, size: 32, offset: 64)
!5965 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !5960, file: !237, line: 248, baseType: !527, size: 32, offset: 96)
!5966 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !5960, file: !237, line: 249, baseType: !5967, offset: 128)
!5967 = !DICompositeType(tag: DW_TAG_array_type, baseType: !625, elements: !517)
!5968 = !DIDerivedType(tag: DW_TAG_member, name: "set_tunable", scope: !5524, file: !279, line: 492, baseType: !5969, size: 64, offset: 3264)
!5969 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5970, size: 64)
!5970 = !DISubroutineType(types: !5971)
!5971 = !{!5, !324, !5958, !3288}
!5972 = !DIDerivedType(tag: DW_TAG_member, name: "get_per_queue_coalesce", scope: !5524, file: !279, line: 494, baseType: !5973, size: 64, offset: 3328)
!5973 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5974, size: 64)
!5974 = !DISubroutineType(types: !5975)
!5975 = !{!5, !324, !1021, !5620}
!5976 = !DIDerivedType(tag: DW_TAG_member, name: "set_per_queue_coalesce", scope: !5524, file: !279, line: 496, baseType: !5973, size: 64, offset: 3392)
!5977 = !DIDerivedType(tag: DW_TAG_member, name: "get_link_ksettings", scope: !5524, file: !279, line: 498, baseType: !5978, size: 64, offset: 3456)
!5978 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5979, size: 64)
!5979 = !DISubroutineType(types: !5980)
!5980 = !{!5, !324, !5981}
!5981 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5982, size: 64)
!5982 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_link_ksettings", file: !279, line: 124, size: 768, elements: !5983)
!5983 = !{!5984, !6009}
!5984 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !5982, file: !279, line: 125, baseType: !5985, size: 384)
!5985 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_link_settings", file: !237, line: 1996, size: 384, elements: !5986)
!5986 = !{!5987, !5988, !5989, !5990, !5991, !5992, !5993, !5994, !5995, !5996, !5999, !6000, !6001, !6002, !6004, !6008}
!5987 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !5985, file: !237, line: 1997, baseType: !527, size: 32)
!5988 = !DIDerivedType(tag: DW_TAG_member, name: "speed", scope: !5985, file: !237, line: 1998, baseType: !527, size: 32, offset: 32)
!5989 = !DIDerivedType(tag: DW_TAG_member, name: "duplex", scope: !5985, file: !237, line: 1999, baseType: !515, size: 8, offset: 64)
!5990 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !5985, file: !237, line: 2000, baseType: !515, size: 8, offset: 72)
!5991 = !DIDerivedType(tag: DW_TAG_member, name: "phy_address", scope: !5985, file: !237, line: 2001, baseType: !515, size: 8, offset: 80)
!5992 = !DIDerivedType(tag: DW_TAG_member, name: "autoneg", scope: !5985, file: !237, line: 2002, baseType: !515, size: 8, offset: 88)
!5993 = !DIDerivedType(tag: DW_TAG_member, name: "mdio_support", scope: !5985, file: !237, line: 2003, baseType: !515, size: 8, offset: 96)
!5994 = !DIDerivedType(tag: DW_TAG_member, name: "eth_tp_mdix", scope: !5985, file: !237, line: 2004, baseType: !515, size: 8, offset: 104)
!5995 = !DIDerivedType(tag: DW_TAG_member, name: "eth_tp_mdix_ctrl", scope: !5985, file: !237, line: 2005, baseType: !515, size: 8, offset: 112)
!5996 = !DIDerivedType(tag: DW_TAG_member, name: "link_mode_masks_nwords", scope: !5985, file: !237, line: 2006, baseType: !5997, size: 8, offset: 120)
!5997 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s8", file: !368, line: 20, baseType: !5998)
!5998 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!5999 = !DIDerivedType(tag: DW_TAG_member, name: "transceiver", scope: !5985, file: !237, line: 2007, baseType: !515, size: 8, offset: 128)
!6000 = !DIDerivedType(tag: DW_TAG_member, name: "master_slave_cfg", scope: !5985, file: !237, line: 2008, baseType: !515, size: 8, offset: 136)
!6001 = !DIDerivedType(tag: DW_TAG_member, name: "master_slave_state", scope: !5985, file: !237, line: 2009, baseType: !515, size: 8, offset: 144)
!6002 = !DIDerivedType(tag: DW_TAG_member, name: "reserved1", scope: !5985, file: !237, line: 2010, baseType: !6003, size: 8, offset: 152)
!6003 = !DICompositeType(tag: DW_TAG_array_type, baseType: !515, size: 8, elements: !2504)
!6004 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !5985, file: !237, line: 2011, baseType: !6005, size: 224, offset: 160)
!6005 = !DICompositeType(tag: DW_TAG_array_type, baseType: !527, size: 224, elements: !6006)
!6006 = !{!6007}
!6007 = !DISubrange(count: 7)
!6008 = !DIDerivedType(tag: DW_TAG_member, name: "link_mode_masks", scope: !5985, file: !237, line: 2012, baseType: !526, offset: 384)
!6009 = !DIDerivedType(tag: DW_TAG_member, name: "link_modes", scope: !5982, file: !279, line: 130, baseType: !6010, size: 384, offset: 384)
!6010 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5982, file: !279, line: 126, size: 384, elements: !6011)
!6011 = !{!6012, !6014, !6015}
!6012 = !DIDerivedType(tag: DW_TAG_member, name: "supported", scope: !6010, file: !279, line: 127, baseType: !6013, size: 128)
!6013 = !DICompositeType(tag: DW_TAG_array_type, baseType: !346, size: 128, elements: !2695)
!6014 = !DIDerivedType(tag: DW_TAG_member, name: "advertising", scope: !6010, file: !279, line: 128, baseType: !6013, size: 128, offset: 128)
!6015 = !DIDerivedType(tag: DW_TAG_member, name: "lp_advertising", scope: !6010, file: !279, line: 129, baseType: !6013, size: 128, offset: 256)
!6016 = !DIDerivedType(tag: DW_TAG_member, name: "set_link_ksettings", scope: !5524, file: !279, line: 500, baseType: !6017, size: 64, offset: 3520)
!6017 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6018, size: 64)
!6018 = !DISubroutineType(types: !6019)
!6019 = !{!5, !324, !6020}
!6020 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6021, size: 64)
!6021 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5982)
!6022 = !DIDerivedType(tag: DW_TAG_member, name: "get_fecparam", scope: !5524, file: !279, line: 502, baseType: !6023, size: 64, offset: 3584)
!6023 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6024, size: 64)
!6024 = !DISubroutineType(types: !6025)
!6025 = !{!5, !324, !6026}
!6026 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6027, size: 64)
!6027 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_fecparam", file: !237, line: 1389, size: 128, elements: !6028)
!6028 = !{!6029, !6030, !6031, !6032}
!6029 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !6027, file: !237, line: 1390, baseType: !527, size: 32)
!6030 = !DIDerivedType(tag: DW_TAG_member, name: "active_fec", scope: !6027, file: !237, line: 1392, baseType: !527, size: 32, offset: 32)
!6031 = !DIDerivedType(tag: DW_TAG_member, name: "fec", scope: !6027, file: !237, line: 1393, baseType: !527, size: 32, offset: 64)
!6032 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !6027, file: !237, line: 1394, baseType: !527, size: 32, offset: 96)
!6033 = !DIDerivedType(tag: DW_TAG_member, name: "set_fecparam", scope: !5524, file: !279, line: 504, baseType: !6023, size: 64, offset: 3648)
!6034 = !DIDerivedType(tag: DW_TAG_member, name: "get_ethtool_phy_stats", scope: !5524, file: !279, line: 506, baseType: !5713, size: 64, offset: 3712)
!6035 = !DIDerivedType(tag: DW_TAG_member, name: "get_phy_tunable", scope: !5524, file: !279, line: 508, baseType: !5955, size: 64, offset: 3776)
!6036 = !DIDerivedType(tag: DW_TAG_member, name: "set_phy_tunable", scope: !5524, file: !279, line: 510, baseType: !5969, size: 64, offset: 3840)
!6037 = !DIDerivedType(tag: DW_TAG_member, name: "ndisc_ops", scope: !298, file: !4, line: 1922, baseType: !6038, size: 64, offset: 4096)
!6038 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6039, size: 64)
!6039 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6040)
!6040 = !DICompositeType(tag: DW_TAG_structure_type, name: "ndisc_ops", file: !4, line: 1922, flags: DIFlagFwdDecl)
!6041 = !DIDerivedType(tag: DW_TAG_member, name: "header_ops", scope: !298, file: !4, line: 1933, baseType: !6042, size: 64, offset: 4160)
!6042 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6043, size: 64)
!6043 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6044)
!6044 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "header_ops", file: !4, line: 270, size: 384, elements: !6045)
!6045 = !{!6046, !6050, !6056, !6069, !6073, !6077}
!6046 = !DIDerivedType(tag: DW_TAG_member, name: "create", scope: !6044, file: !4, line: 271, baseType: !6047, size: 64)
!6047 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6048, size: 64)
!6048 = !DISubroutineType(types: !6049)
!6049 = !{!5, !449, !324, !510, !3288, !3288, !11}
!6050 = !DIDerivedType(tag: DW_TAG_member, name: "parse", scope: !6044, file: !4, line: 274, baseType: !6051, size: 64, offset: 64)
!6051 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6052, size: 64)
!6052 = !DISubroutineType(types: !6053)
!6053 = !{!5, !6054, !598}
!6054 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6055, size: 64)
!6055 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !450)
!6056 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !6044, file: !4, line: 275, baseType: !6057, size: 64, offset: 128)
!6057 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6058, size: 64)
!6058 = !DISubroutineType(types: !6059)
!6059 = !{!5, !6060, !6062, !569}
!6060 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6061, size: 64)
!6061 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !958)
!6062 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6063, size: 64)
!6063 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hh_cache", file: !4, line: 244, size: 832, elements: !6064)
!6064 = !{!6065, !6066, !6067}
!6065 = !DIDerivedType(tag: DW_TAG_member, name: "hh_len", scope: !6063, file: !4, line: 245, baseType: !11, size: 32)
!6066 = !DIDerivedType(tag: DW_TAG_member, name: "hh_lock", scope: !6063, file: !4, line: 246, baseType: !3355, size: 32, offset: 32)
!6067 = !DIDerivedType(tag: DW_TAG_member, name: "hh_data", scope: !6063, file: !4, line: 254, baseType: !6068, size: 768, offset: 64)
!6068 = !DICompositeType(tag: DW_TAG_array_type, baseType: !346, size: 768, elements: !4180)
!6069 = !DIDerivedType(tag: DW_TAG_member, name: "cache_update", scope: !6044, file: !4, line: 276, baseType: !6070, size: 64, offset: 192)
!6070 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6071, size: 64)
!6071 = !DISubroutineType(types: !6072)
!6072 = !{null, !6062, !807, !980}
!6073 = !DIDerivedType(tag: DW_TAG_member, name: "validate", scope: !6044, file: !4, line: 279, baseType: !6074, size: 64, offset: 256)
!6074 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6075, size: 64)
!6075 = !DISubroutineType(types: !6076)
!6076 = !{!805, !326, !11}
!6077 = !DIDerivedType(tag: DW_TAG_member, name: "parse_protocol", scope: !6044, file: !4, line: 280, baseType: !6078, size: 64, offset: 320)
!6078 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6079, size: 64)
!6079 = !DISubroutineType(types: !6080)
!6080 = !{!569, !6054}
!6081 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !298, file: !4, line: 1935, baseType: !11, size: 32, offset: 4224)
!6082 = !DIDerivedType(tag: DW_TAG_member, name: "priv_flags", scope: !298, file: !4, line: 1936, baseType: !11, size: 32, offset: 4256)
!6083 = !DIDerivedType(tag: DW_TAG_member, name: "gflags", scope: !298, file: !4, line: 1938, baseType: !510, size: 16, offset: 4288)
!6084 = !DIDerivedType(tag: DW_TAG_member, name: "padded", scope: !298, file: !4, line: 1939, baseType: !510, size: 16, offset: 4304)
!6085 = !DIDerivedType(tag: DW_TAG_member, name: "operstate", scope: !298, file: !4, line: 1941, baseType: !516, size: 8, offset: 4320)
!6086 = !DIDerivedType(tag: DW_TAG_member, name: "link_mode", scope: !298, file: !4, line: 1942, baseType: !516, size: 8, offset: 4328)
!6087 = !DIDerivedType(tag: DW_TAG_member, name: "if_port", scope: !298, file: !4, line: 1944, baseType: !516, size: 8, offset: 4336)
!6088 = !DIDerivedType(tag: DW_TAG_member, name: "dma", scope: !298, file: !4, line: 1945, baseType: !516, size: 8, offset: 4344)
!6089 = !DIDerivedType(tag: DW_TAG_member, name: "mtu", scope: !298, file: !4, line: 1952, baseType: !11, size: 32, offset: 4352)
!6090 = !DIDerivedType(tag: DW_TAG_member, name: "min_mtu", scope: !298, file: !4, line: 1953, baseType: !11, size: 32, offset: 4384)
!6091 = !DIDerivedType(tag: DW_TAG_member, name: "max_mtu", scope: !298, file: !4, line: 1954, baseType: !11, size: 32, offset: 4416)
!6092 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !298, file: !4, line: 1955, baseType: !510, size: 16, offset: 4448)
!6093 = !DIDerivedType(tag: DW_TAG_member, name: "hard_header_len", scope: !298, file: !4, line: 1956, baseType: !510, size: 16, offset: 4464)
!6094 = !DIDerivedType(tag: DW_TAG_member, name: "min_header_len", scope: !298, file: !4, line: 1957, baseType: !516, size: 8, offset: 4480)
!6095 = !DIDerivedType(tag: DW_TAG_member, name: "name_assign_type", scope: !298, file: !4, line: 1958, baseType: !516, size: 8, offset: 4488)
!6096 = !DIDerivedType(tag: DW_TAG_member, name: "needed_headroom", scope: !298, file: !4, line: 1960, baseType: !510, size: 16, offset: 4496)
!6097 = !DIDerivedType(tag: DW_TAG_member, name: "needed_tailroom", scope: !298, file: !4, line: 1961, baseType: !510, size: 16, offset: 4512)
!6098 = !DIDerivedType(tag: DW_TAG_member, name: "perm_addr", scope: !298, file: !4, line: 1964, baseType: !1065, size: 256, offset: 4528)
!6099 = !DIDerivedType(tag: DW_TAG_member, name: "addr_assign_type", scope: !298, file: !4, line: 1965, baseType: !516, size: 8, offset: 4784)
!6100 = !DIDerivedType(tag: DW_TAG_member, name: "addr_len", scope: !298, file: !4, line: 1966, baseType: !516, size: 8, offset: 4792)
!6101 = !DIDerivedType(tag: DW_TAG_member, name: "upper_level", scope: !298, file: !4, line: 1967, baseType: !516, size: 8, offset: 4800)
!6102 = !DIDerivedType(tag: DW_TAG_member, name: "lower_level", scope: !298, file: !4, line: 1968, baseType: !516, size: 8, offset: 4808)
!6103 = !DIDerivedType(tag: DW_TAG_member, name: "neigh_priv_len", scope: !298, file: !4, line: 1970, baseType: !510, size: 16, offset: 4816)
!6104 = !DIDerivedType(tag: DW_TAG_member, name: "dev_id", scope: !298, file: !4, line: 1971, baseType: !510, size: 16, offset: 4832)
!6105 = !DIDerivedType(tag: DW_TAG_member, name: "dev_port", scope: !298, file: !4, line: 1972, baseType: !510, size: 16, offset: 4848)
!6106 = !DIDerivedType(tag: DW_TAG_member, name: "addr_list_lock", scope: !298, file: !4, line: 1973, baseType: !1702, offset: 4864)
!6107 = !DIDerivedType(tag: DW_TAG_member, name: "uc", scope: !298, file: !4, line: 1975, baseType: !6108, size: 192, offset: 4864)
!6108 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netdev_hw_addr_list", file: !4, line: 224, size: 192, elements: !6109)
!6109 = !{!6110, !6111}
!6110 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !6108, file: !4, line: 225, baseType: !318, size: 128)
!6111 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !6108, file: !4, line: 226, baseType: !5, size: 32, offset: 128)
!6112 = !DIDerivedType(tag: DW_TAG_member, name: "mc", scope: !298, file: !4, line: 1976, baseType: !6108, size: 192, offset: 5056)
!6113 = !DIDerivedType(tag: DW_TAG_member, name: "dev_addrs", scope: !298, file: !4, line: 1977, baseType: !6108, size: 192, offset: 5248)
!6114 = !DIDerivedType(tag: DW_TAG_member, name: "queues_kset", scope: !298, file: !4, line: 1980, baseType: !6115, size: 64, offset: 5440)
!6115 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6116, size: 64)
!6116 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset", file: !6117, line: 192, size: 704, elements: !6118)
!6117 = !DIFile(filename: "./include/linux/kobject.h", directory: "/home/lizy2001/genbc/linux")
!6118 = !{!6119, !6120, !6121, !6357}
!6119 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !6116, file: !6117, line: 193, baseType: !318, size: 128)
!6120 = !DIDerivedType(tag: DW_TAG_member, name: "list_lock", scope: !6116, file: !6117, line: 194, baseType: !1702, offset: 128)
!6121 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !6116, file: !6117, line: 195, baseType: !6122, size: 512, offset: 128)
!6122 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobject", file: !6117, line: 64, size: 512, elements: !6123)
!6123 = !{!6124, !6125, !6126, !6128, !6129, !6225, !6347, !6352, !6353, !6354, !6355, !6356}
!6124 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !6122, file: !6117, line: 65, baseType: !326, size: 64)
!6125 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !6122, file: !6117, line: 66, baseType: !318, size: 128, offset: 64)
!6126 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !6122, file: !6117, line: 67, baseType: !6127, size: 64, offset: 192)
!6127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6122, size: 64)
!6128 = !DIDerivedType(tag: DW_TAG_member, name: "kset", scope: !6122, file: !6117, line: 68, baseType: !6115, size: 64, offset: 256)
!6129 = !DIDerivedType(tag: DW_TAG_member, name: "ktype", scope: !6122, file: !6117, line: 69, baseType: !6130, size: 64, offset: 320)
!6130 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6131, size: 64)
!6131 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_type", file: !6117, line: 138, size: 448, elements: !6132)
!6132 = !{!6133, !6137, !6156, !6158, !6191, !6217, !6221}
!6133 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !6131, file: !6117, line: 139, baseType: !6134, size: 64)
!6134 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6135, size: 64)
!6135 = !DISubroutineType(types: !6136)
!6136 = !{null, !6127}
!6137 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_ops", scope: !6131, file: !6117, line: 140, baseType: !6138, size: 64, offset: 64)
!6138 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6139, size: 64)
!6139 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6140)
!6140 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sysfs_ops", file: !6141, line: 230, size: 128, elements: !6142)
!6141 = !DIFile(filename: "./include/linux/sysfs.h", directory: "/home/lizy2001/genbc/linux")
!6142 = !{!6143, !6152}
!6143 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !6140, file: !6141, line: 231, baseType: !6144, size: 64)
!6144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6145, size: 64)
!6145 = !DISubroutineType(types: !6146)
!6146 = !{!1554, !6127, !6147, !1072}
!6147 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6148, size: 64)
!6148 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute", file: !6141, line: 30, size: 128, elements: !6149)
!6149 = !{!6150, !6151}
!6150 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !6148, file: !6141, line: 31, baseType: !326, size: 64)
!6151 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !6148, file: !6141, line: 32, baseType: !1412, size: 16, offset: 64)
!6152 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !6140, file: !6141, line: 232, baseType: !6153, size: 64, offset: 64)
!6153 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6154, size: 64)
!6154 = !DISubroutineType(types: !6155)
!6155 = !{!1554, !6127, !6147, !326, !1073}
!6156 = !DIDerivedType(tag: DW_TAG_member, name: "default_attrs", scope: !6131, file: !6117, line: 141, baseType: !6157, size: 64, offset: 128)
!6157 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6147, size: 64)
!6158 = !DIDerivedType(tag: DW_TAG_member, name: "default_groups", scope: !6131, file: !6117, line: 142, baseType: !6159, size: 64, offset: 192)
!6159 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6160, size: 64)
!6160 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6161, size: 64)
!6161 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6162)
!6162 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute_group", file: !6141, line: 84, size: 320, elements: !6163)
!6163 = !{!6164, !6165, !6169, !6188, !6189}
!6164 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !6162, file: !6141, line: 85, baseType: !326, size: 64)
!6165 = !DIDerivedType(tag: DW_TAG_member, name: "is_visible", scope: !6162, file: !6141, line: 86, baseType: !6166, size: 64, offset: 64)
!6166 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6167, size: 64)
!6167 = !DISubroutineType(types: !6168)
!6168 = !{!1412, !6127, !6147, !5}
!6169 = !DIDerivedType(tag: DW_TAG_member, name: "is_bin_visible", scope: !6162, file: !6141, line: 88, baseType: !6170, size: 64, offset: 128)
!6170 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6171, size: 64)
!6171 = !DISubroutineType(types: !6172)
!6172 = !{!1412, !6127, !6173, !5}
!6173 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6174, size: 64)
!6174 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bin_attribute", file: !6141, line: 168, size: 448, elements: !6175)
!6175 = !{!6176, !6177, !6178, !6179, !6183, !6184}
!6176 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !6174, file: !6141, line: 169, baseType: !6148, size: 128)
!6177 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !6174, file: !6141, line: 170, baseType: !1073, size: 64, offset: 128)
!6178 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !6174, file: !6141, line: 171, baseType: !625, size: 64, offset: 192)
!6179 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !6174, file: !6141, line: 172, baseType: !6180, size: 64, offset: 256)
!6180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6181, size: 64)
!6181 = !DISubroutineType(types: !6182)
!6182 = !{!1554, !1349, !6127, !6173, !1072, !1509, !1073}
!6183 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !6174, file: !6141, line: 174, baseType: !6180, size: 64, offset: 320)
!6184 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !6174, file: !6141, line: 176, baseType: !6185, size: 64, offset: 384)
!6185 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6186, size: 64)
!6186 = !DISubroutineType(types: !6187)
!6187 = !{!5, !1349, !6127, !6173, !2130}
!6188 = !DIDerivedType(tag: DW_TAG_member, name: "attrs", scope: !6162, file: !6141, line: 90, baseType: !6157, size: 64, offset: 192)
!6189 = !DIDerivedType(tag: DW_TAG_member, name: "bin_attrs", scope: !6162, file: !6141, line: 91, baseType: !6190, size: 64, offset: 256)
!6190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6173, size: 64)
!6191 = !DIDerivedType(tag: DW_TAG_member, name: "child_ns_type", scope: !6131, file: !6117, line: 143, baseType: !6192, size: 64, offset: 256)
!6192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6193, size: 64)
!6193 = !DISubroutineType(types: !6194)
!6194 = !{!6195, !6127}
!6195 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6196, size: 64)
!6196 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6197)
!6197 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_ns_type_operations", file: !286, line: 39, size: 384, elements: !6198)
!6198 = !{!6199, !6200, !6204, !6208, !6212, !6216}
!6199 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !6197, file: !286, line: 40, baseType: !285, size: 32)
!6200 = !DIDerivedType(tag: DW_TAG_member, name: "current_may_mount", scope: !6197, file: !286, line: 41, baseType: !6201, size: 64, offset: 64)
!6201 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6202, size: 64)
!6202 = !DISubroutineType(types: !6203)
!6203 = !{!805}
!6204 = !DIDerivedType(tag: DW_TAG_member, name: "grab_current_ns", scope: !6197, file: !286, line: 42, baseType: !6205, size: 64, offset: 128)
!6205 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6206, size: 64)
!6206 = !DISubroutineType(types: !6207)
!6207 = !{!625}
!6208 = !DIDerivedType(tag: DW_TAG_member, name: "netlink_ns", scope: !6197, file: !286, line: 43, baseType: !6209, size: 64, offset: 192)
!6209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6210, size: 64)
!6210 = !DISubroutineType(types: !6211)
!6211 = !{!3288, !479}
!6212 = !DIDerivedType(tag: DW_TAG_member, name: "initial_ns", scope: !6197, file: !286, line: 44, baseType: !6213, size: 64, offset: 256)
!6213 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6214, size: 64)
!6214 = !DISubroutineType(types: !6215)
!6215 = !{!3288}
!6216 = !DIDerivedType(tag: DW_TAG_member, name: "drop_ns", scope: !6197, file: !286, line: 45, baseType: !1448, size: 64, offset: 320)
!6217 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !6131, file: !6117, line: 144, baseType: !6218, size: 64, offset: 320)
!6218 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6219, size: 64)
!6219 = !DISubroutineType(types: !6220)
!6220 = !{!3288, !6127}
!6221 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !6131, file: !6117, line: 145, baseType: !6222, size: 64, offset: 384)
!6222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6223, size: 64)
!6223 = !DISubroutineType(types: !6224)
!6224 = !{null, !6127, !2935, !2936}
!6225 = !DIDerivedType(tag: DW_TAG_member, name: "sd", scope: !6122, file: !6117, line: 70, baseType: !6226, size: 64, offset: 384)
!6226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6227, size: 64)
!6227 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_node", file: !6228, line: 123, size: 1024, elements: !6229)
!6228 = !DIFile(filename: "./include/linux/kernfs.h", directory: "/home/lizy2001/genbc/linux")
!6229 = !{!6230, !6231, !6232, !6233, !6234, !6235, !6236, !6237, !6340, !6341, !6342, !6343, !6344}
!6230 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !6227, file: !6228, line: 124, baseType: !417, size: 32)
!6231 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !6227, file: !6228, line: 125, baseType: !417, size: 32, offset: 32)
!6232 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !6227, file: !6228, line: 135, baseType: !6226, size: 64, offset: 64)
!6233 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !6227, file: !6228, line: 136, baseType: !326, size: 64, offset: 128)
!6234 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !6227, file: !6228, line: 138, baseType: !467, size: 192, align: 64, offset: 192)
!6235 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !6227, file: !6228, line: 140, baseType: !3288, size: 64, offset: 384)
!6236 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !6227, file: !6228, line: 141, baseType: !11, size: 32, offset: 448)
!6237 = !DIDerivedType(tag: DW_TAG_member, scope: !6227, file: !6228, line: 142, baseType: !6238, size: 256, offset: 512)
!6238 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6227, file: !6228, line: 142, size: 256, elements: !6239)
!6239 = !{!6240, !6280, !6284}
!6240 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !6238, file: !6228, line: 143, baseType: !6241, size: 192)
!6241 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_dir", file: !6228, line: 91, size: 192, elements: !6242)
!6242 = !{!6243, !6244, !6245}
!6243 = !DIDerivedType(tag: DW_TAG_member, name: "subdirs", scope: !6241, file: !6228, line: 92, baseType: !346, size: 64)
!6244 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !6241, file: !6228, line: 94, baseType: !1782, size: 64, offset: 64)
!6245 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !6241, file: !6228, line: 100, baseType: !6246, size: 64, offset: 128)
!6246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6247, size: 64)
!6247 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_root", file: !6228, line: 180, size: 704, elements: !6248)
!6248 = !{!6249, !6250, !6251, !6252, !6253, !6254, !6278, !6279}
!6249 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !6247, file: !6228, line: 182, baseType: !6226, size: 64)
!6250 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !6247, file: !6228, line: 183, baseType: !11, size: 32, offset: 64)
!6251 = !DIDerivedType(tag: DW_TAG_member, name: "ino_idr", scope: !6247, file: !6228, line: 186, baseType: !3032, size: 192, offset: 128)
!6252 = !DIDerivedType(tag: DW_TAG_member, name: "last_id_lowbits", scope: !6247, file: !6228, line: 187, baseType: !1021, size: 32, offset: 320)
!6253 = !DIDerivedType(tag: DW_TAG_member, name: "id_highbits", scope: !6247, file: !6228, line: 188, baseType: !1021, size: 32, offset: 352)
!6254 = !DIDerivedType(tag: DW_TAG_member, name: "syscall_ops", scope: !6247, file: !6228, line: 189, baseType: !6255, size: 64, offset: 384)
!6255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6256, size: 64)
!6256 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_syscall_ops", file: !6228, line: 168, size: 320, elements: !6257)
!6257 = !{!6258, !6262, !6266, !6270, !6274}
!6258 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !6256, file: !6228, line: 169, baseType: !6259, size: 64)
!6259 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6260, size: 64)
!6260 = !DISubroutineType(types: !6261)
!6261 = !{!5, !1685, !6246}
!6262 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !6256, file: !6228, line: 171, baseType: !6263, size: 64, offset: 64)
!6263 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6264, size: 64)
!6264 = !DISubroutineType(types: !6265)
!6265 = !{!5, !6226, !326, !1412}
!6266 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !6256, file: !6228, line: 173, baseType: !6267, size: 64, offset: 128)
!6267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6268, size: 64)
!6268 = !DISubroutineType(types: !6269)
!6269 = !{!5, !6226}
!6270 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !6256, file: !6228, line: 174, baseType: !6271, size: 64, offset: 192)
!6271 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6272, size: 64)
!6272 = !DISubroutineType(types: !6273)
!6273 = !{!5, !6226, !6226, !326}
!6274 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !6256, file: !6228, line: 176, baseType: !6275, size: 64, offset: 256)
!6275 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6276, size: 64)
!6276 = !DISubroutineType(types: !6277)
!6277 = !{!5, !1685, !6226, !6246}
!6278 = !DIDerivedType(tag: DW_TAG_member, name: "supers", scope: !6247, file: !6228, line: 192, baseType: !318, size: 128, offset: 448)
!6279 = !DIDerivedType(tag: DW_TAG_member, name: "deactivate_waitq", scope: !6247, file: !6228, line: 194, baseType: !1921, size: 128, offset: 576)
!6280 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !6238, file: !6228, line: 144, baseType: !6281, size: 64)
!6281 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_symlink", file: !6228, line: 103, size: 64, elements: !6282)
!6282 = !{!6283}
!6283 = !DIDerivedType(tag: DW_TAG_member, name: "target_kn", scope: !6281, file: !6228, line: 104, baseType: !6226, size: 64)
!6284 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !6238, file: !6228, line: 145, baseType: !6285, size: 256)
!6285 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_attr", file: !6228, line: 107, size: 256, elements: !6286)
!6286 = !{!6287, !6335, !6338, !6339}
!6287 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !6285, file: !6228, line: 108, baseType: !6288, size: 64)
!6288 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6289, size: 64)
!6289 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6290)
!6290 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_ops", file: !6228, line: 217, size: 768, elements: !6291)
!6291 = !{!6292, !6312, !6316, !6317, !6318, !6319, !6320, !6324, !6325, !6326, !6327, !6331}
!6292 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !6290, file: !6228, line: 222, baseType: !6293, size: 64)
!6293 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6294, size: 64)
!6294 = !DISubroutineType(types: !6295)
!6295 = !{!5, !6296}
!6296 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6297, size: 64)
!6297 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_file", file: !6228, line: 197, size: 1088, elements: !6298)
!6298 = !{!6299, !6300, !6301, !6302, !6303, !6304, !6305, !6306, !6307, !6308, !6309, !6310, !6311}
!6299 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !6297, file: !6228, line: 199, baseType: !6226, size: 64)
!6300 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !6297, file: !6228, line: 200, baseType: !1349, size: 64, offset: 64)
!6301 = !DIDerivedType(tag: DW_TAG_member, name: "seq_file", scope: !6297, file: !6228, line: 201, baseType: !1685, size: 64, offset: 128)
!6302 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !6297, file: !6228, line: 202, baseType: !625, size: 64, offset: 192)
!6303 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !6297, file: !6228, line: 205, baseType: !1697, size: 192, offset: 256)
!6304 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_mutex", scope: !6297, file: !6228, line: 206, baseType: !1697, size: 192, offset: 448)
!6305 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !6297, file: !6228, line: 207, baseType: !5, size: 32, offset: 640)
!6306 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !6297, file: !6228, line: 208, baseType: !318, size: 128, offset: 704)
!6307 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_buf", scope: !6297, file: !6228, line: 209, baseType: !1072, size: 64, offset: 832)
!6308 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !6297, file: !6228, line: 211, baseType: !1073, size: 64, offset: 896)
!6309 = !DIDerivedType(tag: DW_TAG_member, name: "mmapped", scope: !6297, file: !6228, line: 212, baseType: !805, size: 1, offset: 960, flags: DIFlagBitField, extraData: i64 960)
!6310 = !DIDerivedType(tag: DW_TAG_member, name: "released", scope: !6297, file: !6228, line: 213, baseType: !805, size: 1, offset: 961, flags: DIFlagBitField, extraData: i64 960)
!6311 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !6297, file: !6228, line: 214, baseType: !2158, size: 64, offset: 1024)
!6312 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !6290, file: !6228, line: 223, baseType: !6313, size: 64, offset: 64)
!6313 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6314, size: 64)
!6314 = !DISubroutineType(types: !6315)
!6315 = !{null, !6296}
!6316 = !DIDerivedType(tag: DW_TAG_member, name: "seq_show", scope: !6290, file: !6228, line: 236, baseType: !1736, size: 64, offset: 128)
!6317 = !DIDerivedType(tag: DW_TAG_member, name: "seq_start", scope: !6290, file: !6228, line: 238, baseType: !1723, size: 64, offset: 192)
!6318 = !DIDerivedType(tag: DW_TAG_member, name: "seq_next", scope: !6290, file: !6228, line: 239, baseType: !1732, size: 64, offset: 256)
!6319 = !DIDerivedType(tag: DW_TAG_member, name: "seq_stop", scope: !6290, file: !6228, line: 240, baseType: !1728, size: 64, offset: 320)
!6320 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !6290, file: !6228, line: 242, baseType: !6321, size: 64, offset: 384)
!6321 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6322, size: 64)
!6322 = !DISubroutineType(types: !6323)
!6323 = !{!1554, !6296, !1072, !1073, !1509}
!6324 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !6290, file: !6228, line: 252, baseType: !1073, size: 64, offset: 448)
!6325 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc", scope: !6290, file: !6228, line: 259, baseType: !805, size: 8, offset: 512)
!6326 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !6290, file: !6228, line: 260, baseType: !6321, size: 64, offset: 576)
!6327 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !6290, file: !6228, line: 263, baseType: !6328, size: 64, offset: 640)
!6328 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6329, size: 64)
!6329 = !DISubroutineType(types: !6330)
!6330 = !{!4845, !6296, !4846}
!6331 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !6290, file: !6228, line: 266, baseType: !6332, size: 64, offset: 704)
!6332 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6333, size: 64)
!6333 = !DISubroutineType(types: !6334)
!6334 = !{!5, !6296, !2130}
!6335 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !6285, file: !6228, line: 109, baseType: !6336, size: 64, offset: 64)
!6336 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6337, size: 64)
!6337 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_node", file: !6228, line: 31, flags: DIFlagFwdDecl)
!6338 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !6285, file: !6228, line: 110, baseType: !1509, size: 64, offset: 128)
!6339 = !DIDerivedType(tag: DW_TAG_member, name: "notify_next", scope: !6285, file: !6228, line: 111, baseType: !6226, size: 64, offset: 192)
!6340 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !6227, file: !6228, line: 148, baseType: !625, size: 64, offset: 768)
!6341 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !6227, file: !6228, line: 154, baseType: !365, size: 64, offset: 832)
!6342 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !6227, file: !6228, line: 156, baseType: !510, size: 16, offset: 896)
!6343 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !6227, file: !6228, line: 157, baseType: !1412, size: 16, offset: 912)
!6344 = !DIDerivedType(tag: DW_TAG_member, name: "iattr", scope: !6227, file: !6228, line: 158, baseType: !6345, size: 64, offset: 960)
!6345 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6346, size: 64)
!6346 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_iattrs", file: !6228, line: 32, flags: DIFlagFwdDecl)
!6347 = !DIDerivedType(tag: DW_TAG_member, name: "kref", scope: !6122, file: !6117, line: 71, baseType: !6348, size: 32, offset: 448)
!6348 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kref", file: !6349, line: 19, size: 32, elements: !6350)
!6349 = !DIFile(filename: "./include/linux/kref.h", directory: "/home/lizy2001/genbc/linux")
!6350 = !{!6351}
!6351 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !6348, file: !6349, line: 20, baseType: !602, size: 32)
!6352 = !DIDerivedType(tag: DW_TAG_member, name: "state_initialized", scope: !6122, file: !6117, line: 75, baseType: !11, size: 1, offset: 480, flags: DIFlagBitField, extraData: i64 480)
!6353 = !DIDerivedType(tag: DW_TAG_member, name: "state_in_sysfs", scope: !6122, file: !6117, line: 76, baseType: !11, size: 1, offset: 481, flags: DIFlagBitField, extraData: i64 480)
!6354 = !DIDerivedType(tag: DW_TAG_member, name: "state_add_uevent_sent", scope: !6122, file: !6117, line: 77, baseType: !11, size: 1, offset: 482, flags: DIFlagBitField, extraData: i64 480)
!6355 = !DIDerivedType(tag: DW_TAG_member, name: "state_remove_uevent_sent", scope: !6122, file: !6117, line: 78, baseType: !11, size: 1, offset: 483, flags: DIFlagBitField, extraData: i64 480)
!6356 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_suppress", scope: !6122, file: !6117, line: 79, baseType: !11, size: 1, offset: 484, flags: DIFlagBitField, extraData: i64 480)
!6357 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_ops", scope: !6116, file: !6117, line: 196, baseType: !6358, size: 64, offset: 640)
!6358 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6359, size: 64)
!6359 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6360)
!6360 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset_uevent_ops", file: !6117, line: 156, size: 192, elements: !6361)
!6361 = !{!6362, !6367, !6372}
!6362 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !6360, file: !6117, line: 157, baseType: !6363, size: 64)
!6363 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6364)
!6364 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6365, size: 64)
!6365 = !DISubroutineType(types: !6366)
!6366 = !{!5, !6115, !6127}
!6367 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !6360, file: !6117, line: 158, baseType: !6368, size: 64, offset: 64)
!6368 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6369)
!6369 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6370, size: 64)
!6370 = !DISubroutineType(types: !6371)
!6371 = !{!326, !6115, !6127}
!6372 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !6360, file: !6117, line: 159, baseType: !6373, size: 64, offset: 128)
!6373 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6374)
!6374 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6375, size: 64)
!6375 = !DISubroutineType(types: !6376)
!6376 = !{!5, !6115, !6127, !6377}
!6377 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6378, size: 64)
!6378 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_uevent_env", file: !6117, line: 148, size: 20736, elements: !6379)
!6379 = !{!6380, !6382, !6384, !6385, !6389}
!6380 = !DIDerivedType(tag: DW_TAG_member, name: "argv", scope: !6378, file: !6117, line: 149, baseType: !6381, size: 192)
!6381 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1072, size: 192, elements: !1624)
!6382 = !DIDerivedType(tag: DW_TAG_member, name: "envp", scope: !6378, file: !6117, line: 150, baseType: !6383, size: 4096, offset: 192)
!6383 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1072, size: 4096, elements: !3842)
!6384 = !DIDerivedType(tag: DW_TAG_member, name: "envp_idx", scope: !6378, file: !6117, line: 151, baseType: !5, size: 32, offset: 4288)
!6385 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !6378, file: !6117, line: 152, baseType: !6386, size: 16384, offset: 4320)
!6386 = !DICompositeType(tag: DW_TAG_array_type, baseType: !302, size: 16384, elements: !6387)
!6387 = !{!6388}
!6388 = !DISubrange(count: 2048)
!6389 = !DIDerivedType(tag: DW_TAG_member, name: "buflen", scope: !6378, file: !6117, line: 153, baseType: !5, size: 32, offset: 20704)
!6390 = !DIDerivedType(tag: DW_TAG_member, name: "promiscuity", scope: !298, file: !4, line: 1985, baseType: !11, size: 32, offset: 5504)
!6391 = !DIDerivedType(tag: DW_TAG_member, name: "allmulti", scope: !298, file: !4, line: 1986, baseType: !11, size: 32, offset: 5536)
!6392 = !DIDerivedType(tag: DW_TAG_member, name: "uc_promisc", scope: !298, file: !4, line: 1987, baseType: !805, size: 8, offset: 5568)
!6393 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_info", scope: !298, file: !4, line: 1996, baseType: !6394, size: 64, offset: 5632)
!6394 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6395, size: 64)
!6395 = !DICompositeType(tag: DW_TAG_structure_type, name: "vlan_info", file: !4, line: 1996, flags: DIFlagFwdDecl)
!6396 = !DIDerivedType(tag: DW_TAG_member, name: "ip_ptr", scope: !298, file: !4, line: 2007, baseType: !6397, size: 64, offset: 5696)
!6397 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6398, size: 64)
!6398 = !DICompositeType(tag: DW_TAG_structure_type, name: "in_device", file: !4, line: 2007, flags: DIFlagFwdDecl)
!6399 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_ptr", scope: !298, file: !4, line: 2011, baseType: !6400, size: 64, offset: 5760)
!6400 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6401, size: 64)
!6401 = !DICompositeType(tag: DW_TAG_structure_type, name: "inet6_dev", file: !4, line: 2011, flags: DIFlagFwdDecl)
!6402 = !DIDerivedType(tag: DW_TAG_member, name: "ieee80211_ptr", scope: !298, file: !4, line: 2015, baseType: !6403, size: 64, offset: 5824)
!6403 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6404, size: 64)
!6404 = !DICompositeType(tag: DW_TAG_structure_type, name: "wireless_dev", file: !4, line: 62, flags: DIFlagFwdDecl)
!6405 = !DIDerivedType(tag: DW_TAG_member, name: "ieee802154_ptr", scope: !298, file: !4, line: 2016, baseType: !6406, size: 64, offset: 5888)
!6406 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6407, size: 64)
!6407 = !DICompositeType(tag: DW_TAG_structure_type, name: "wpan_dev", file: !4, line: 64, flags: DIFlagFwdDecl)
!6408 = !DIDerivedType(tag: DW_TAG_member, name: "dev_addr", scope: !298, file: !4, line: 2025, baseType: !598, size: 64, offset: 5952)
!6409 = !DIDerivedType(tag: DW_TAG_member, name: "_rx", scope: !298, file: !4, line: 2027, baseType: !6410, size: 64, offset: 6016)
!6410 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6411, size: 64)
!6411 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netdev_rx_queue", file: !4, line: 736, size: 1536, elements: !6412)
!6412 = !{!6413, !6414, !6415}
!6413 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !6411, file: !4, line: 741, baseType: !6122, size: 512)
!6414 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !6411, file: !4, line: 742, baseType: !324, size: 64, offset: 512)
!6415 = !DIDerivedType(tag: DW_TAG_member, name: "xdp_rxq", scope: !6411, file: !4, line: 743, baseType: !6416, size: 512, align: 512, offset: 1024)
!6416 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xdp_rxq_info", file: !5488, line: 57, size: 512, align: 512, elements: !6417)
!6417 = !{!6418, !6419, !6420, !6421}
!6418 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !6416, file: !5488, line: 58, baseType: !324, size: 64)
!6419 = !DIDerivedType(tag: DW_TAG_member, name: "queue_index", scope: !6416, file: !5488, line: 59, baseType: !1021, size: 32, offset: 64)
!6420 = !DIDerivedType(tag: DW_TAG_member, name: "reg_state", scope: !6416, file: !5488, line: 60, baseType: !1021, size: 32, offset: 96)
!6421 = !DIDerivedType(tag: DW_TAG_member, name: "mem", scope: !6416, file: !5488, line: 61, baseType: !5496, size: 64, offset: 128)
!6422 = !DIDerivedType(tag: DW_TAG_member, name: "num_rx_queues", scope: !298, file: !4, line: 2028, baseType: !11, size: 32, offset: 6080)
!6423 = !DIDerivedType(tag: DW_TAG_member, name: "real_num_rx_queues", scope: !298, file: !4, line: 2029, baseType: !11, size: 32, offset: 6112)
!6424 = !DIDerivedType(tag: DW_TAG_member, name: "xdp_prog", scope: !298, file: !4, line: 2031, baseType: !1122, size: 64, offset: 6144)
!6425 = !DIDerivedType(tag: DW_TAG_member, name: "gro_flush_timeout", scope: !298, file: !4, line: 2032, baseType: !346, size: 64, offset: 6208)
!6426 = !DIDerivedType(tag: DW_TAG_member, name: "napi_defer_hard_irqs", scope: !298, file: !4, line: 2033, baseType: !5, size: 32, offset: 6272)
!6427 = !DIDerivedType(tag: DW_TAG_member, name: "rx_handler", scope: !298, file: !4, line: 2034, baseType: !6428, size: 64, offset: 6336)
!6428 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6429, size: 64)
!6429 = !DIDerivedType(tag: DW_TAG_typedef, name: "rx_handler_func_t", file: !4, line: 430, baseType: !6430)
!6430 = !DISubroutineType(types: !6431)
!6431 = !{!6432, !6433}
!6432 = !DIDerivedType(tag: DW_TAG_typedef, name: "rx_handler_result_t", file: !4, line: 429, baseType: !291)
!6433 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !449, size: 64)
!6434 = !DIDerivedType(tag: DW_TAG_member, name: "rx_handler_data", scope: !298, file: !4, line: 2035, baseType: !625, size: 64, offset: 6400)
!6435 = !DIDerivedType(tag: DW_TAG_member, name: "ingress_queue", scope: !298, file: !4, line: 2040, baseType: !6436, size: 64, offset: 6464)
!6436 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6437, size: 64)
!6437 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netdev_queue", file: !4, line: 584, size: 1600, elements: !6438)
!6438 = !{!6439, !6440, !6443, !6444, !6445, !6446, !6447, !6448, !6449, !6450, !6451, !6452}
!6439 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !6437, file: !4, line: 588, baseType: !324, size: 64)
!6440 = !DIDerivedType(tag: DW_TAG_member, name: "qdisc", scope: !6437, file: !4, line: 589, baseType: !6441, size: 64, offset: 64)
!6441 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6442, size: 64)
!6442 = !DICompositeType(tag: DW_TAG_structure_type, name: "Qdisc", file: !4, line: 589, flags: DIFlagFwdDecl)
!6443 = !DIDerivedType(tag: DW_TAG_member, name: "qdisc_sleeping", scope: !6437, file: !4, line: 590, baseType: !6441, size: 64, offset: 128)
!6444 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !6437, file: !4, line: 592, baseType: !6122, size: 512, offset: 192)
!6445 = !DIDerivedType(tag: DW_TAG_member, name: "tx_maxrate", scope: !6437, file: !4, line: 597, baseType: !346, size: 64, offset: 704)
!6446 = !DIDerivedType(tag: DW_TAG_member, name: "trans_timeout", scope: !6437, file: !4, line: 602, baseType: !346, size: 64, offset: 768)
!6447 = !DIDerivedType(tag: DW_TAG_member, name: "sb_dev", scope: !6437, file: !4, line: 605, baseType: !324, size: 64, offset: 832)
!6448 = !DIDerivedType(tag: DW_TAG_member, name: "_xmit_lock", scope: !6437, file: !4, line: 612, baseType: !1702, offset: 896)
!6449 = !DIDerivedType(tag: DW_TAG_member, name: "xmit_lock_owner", scope: !6437, file: !4, line: 613, baseType: !5, size: 32, offset: 896)
!6450 = !DIDerivedType(tag: DW_TAG_member, name: "trans_start", scope: !6437, file: !4, line: 617, baseType: !346, size: 64, offset: 960)
!6451 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !6437, file: !4, line: 619, baseType: !346, size: 64, offset: 1024)
!6452 = !DIDerivedType(tag: DW_TAG_member, name: "dql", scope: !6437, file: !4, line: 622, baseType: !6453, size: 512, offset: 1088)
!6453 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dql", file: !6454, line: 43, size: 512, elements: !6455)
!6454 = !DIFile(filename: "./include/linux/dynamic_queue_limits.h", directory: "/home/lizy2001/genbc/linux")
!6455 = !{!6456, !6457, !6458, !6459, !6460, !6461, !6462, !6463, !6464, !6465, !6466, !6467, !6468}
!6456 = !DIDerivedType(tag: DW_TAG_member, name: "num_queued", scope: !6453, file: !6454, line: 45, baseType: !11, size: 32)
!6457 = !DIDerivedType(tag: DW_TAG_member, name: "adj_limit", scope: !6453, file: !6454, line: 46, baseType: !11, size: 32, offset: 32)
!6458 = !DIDerivedType(tag: DW_TAG_member, name: "last_obj_cnt", scope: !6453, file: !6454, line: 47, baseType: !11, size: 32, offset: 64)
!6459 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !6453, file: !6454, line: 51, baseType: !11, size: 32, offset: 96)
!6460 = !DIDerivedType(tag: DW_TAG_member, name: "num_completed", scope: !6453, file: !6454, line: 52, baseType: !11, size: 32, offset: 128)
!6461 = !DIDerivedType(tag: DW_TAG_member, name: "prev_ovlimit", scope: !6453, file: !6454, line: 54, baseType: !11, size: 32, offset: 160)
!6462 = !DIDerivedType(tag: DW_TAG_member, name: "prev_num_queued", scope: !6453, file: !6454, line: 55, baseType: !11, size: 32, offset: 192)
!6463 = !DIDerivedType(tag: DW_TAG_member, name: "prev_last_obj_cnt", scope: !6453, file: !6454, line: 56, baseType: !11, size: 32, offset: 224)
!6464 = !DIDerivedType(tag: DW_TAG_member, name: "lowest_slack", scope: !6453, file: !6454, line: 58, baseType: !11, size: 32, offset: 256)
!6465 = !DIDerivedType(tag: DW_TAG_member, name: "slack_start_time", scope: !6453, file: !6454, line: 59, baseType: !346, size: 64, offset: 320)
!6466 = !DIDerivedType(tag: DW_TAG_member, name: "max_limit", scope: !6453, file: !6454, line: 62, baseType: !11, size: 32, offset: 384)
!6467 = !DIDerivedType(tag: DW_TAG_member, name: "min_limit", scope: !6453, file: !6454, line: 63, baseType: !11, size: 32, offset: 416)
!6468 = !DIDerivedType(tag: DW_TAG_member, name: "slack_hold_time", scope: !6453, file: !6454, line: 64, baseType: !11, size: 32, offset: 448)
!6469 = !DIDerivedType(tag: DW_TAG_member, name: "broadcast", scope: !298, file: !4, line: 2045, baseType: !1065, size: 256, offset: 6528)
!6470 = !DIDerivedType(tag: DW_TAG_member, name: "index_hlist", scope: !298, file: !4, line: 2049, baseType: !310, size: 128, offset: 6784)
!6471 = !DIDerivedType(tag: DW_TAG_member, name: "_tx", scope: !298, file: !4, line: 2054, baseType: !6436, size: 64, offset: 6912)
!6472 = !DIDerivedType(tag: DW_TAG_member, name: "num_tx_queues", scope: !298, file: !4, line: 2055, baseType: !11, size: 32, offset: 6976)
!6473 = !DIDerivedType(tag: DW_TAG_member, name: "real_num_tx_queues", scope: !298, file: !4, line: 2056, baseType: !11, size: 32, offset: 7008)
!6474 = !DIDerivedType(tag: DW_TAG_member, name: "qdisc", scope: !298, file: !4, line: 2057, baseType: !6441, size: 64, offset: 7040)
!6475 = !DIDerivedType(tag: DW_TAG_member, name: "tx_queue_len", scope: !298, file: !4, line: 2058, baseType: !11, size: 32, offset: 7104)
!6476 = !DIDerivedType(tag: DW_TAG_member, name: "tx_global_lock", scope: !298, file: !4, line: 2059, baseType: !1702, offset: 7136)
!6477 = !DIDerivedType(tag: DW_TAG_member, name: "xdp_bulkq", scope: !298, file: !4, line: 2061, baseType: !6478, size: 64, offset: 7168)
!6478 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6479, size: 64)
!6479 = !DICompositeType(tag: DW_TAG_structure_type, name: "xdp_dev_bulk_queue", file: !4, line: 879, flags: DIFlagFwdDecl)
!6480 = !DIDerivedType(tag: DW_TAG_member, name: "watchdog_timer", scope: !298, file: !4, line: 2075, baseType: !3265, size: 320, offset: 7232)
!6481 = !DIDerivedType(tag: DW_TAG_member, name: "watchdog_timeo", scope: !298, file: !4, line: 2076, baseType: !5, size: 32, offset: 7552)
!6482 = !DIDerivedType(tag: DW_TAG_member, name: "proto_down_reason", scope: !298, file: !4, line: 2078, baseType: !1021, size: 32, offset: 7584)
!6483 = !DIDerivedType(tag: DW_TAG_member, name: "todo_list", scope: !298, file: !4, line: 2080, baseType: !318, size: 128, offset: 7616)
!6484 = !DIDerivedType(tag: DW_TAG_member, name: "pcpu_refcnt", scope: !298, file: !4, line: 2081, baseType: !1035, size: 64, offset: 7744)
!6485 = !DIDerivedType(tag: DW_TAG_member, name: "link_watch_list", scope: !298, file: !4, line: 2083, baseType: !318, size: 128, offset: 7808)
!6486 = !DIDerivedType(tag: DW_TAG_member, name: "reg_state", scope: !298, file: !4, line: 2091, baseType: !297, size: 8, offset: 7936, flags: DIFlagBitField, extraData: i64 7936)
!6487 = !DIDerivedType(tag: DW_TAG_member, name: "dismantle", scope: !298, file: !4, line: 2093, baseType: !805, size: 8, offset: 7944)
!6488 = !DIDerivedType(tag: DW_TAG_member, name: "rtnl_link_state", scope: !298, file: !4, line: 2098, baseType: !6489, size: 16, offset: 7952, flags: DIFlagBitField, extraData: i64 7952)
!6489 = !DICompositeType(tag: DW_TAG_enumeration_type, scope: !298, file: !4, line: 2095, baseType: !11, size: 32, elements: !6490)
!6490 = !{!6491, !6492}
!6491 = !DIEnumerator(name: "RTNL_LINK_INITIALIZED", value: 0, isUnsigned: true)
!6492 = !DIEnumerator(name: "RTNL_LINK_INITIALIZING", value: 1, isUnsigned: true)
!6493 = !DIDerivedType(tag: DW_TAG_member, name: "needs_free_netdev", scope: !298, file: !4, line: 2100, baseType: !805, size: 8, offset: 7968)
!6494 = !DIDerivedType(tag: DW_TAG_member, name: "priv_destructor", scope: !298, file: !4, line: 2101, baseType: !439, size: 64, offset: 8000)
!6495 = !DIDerivedType(tag: DW_TAG_member, name: "nd_net", scope: !298, file: !4, line: 2107, baseType: !6496, size: 64, offset: 8064)
!6496 = !DIDerivedType(tag: DW_TAG_typedef, name: "possible_net_t", file: !3015, line: 318, baseType: !6497)
!6497 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3015, line: 314, size: 64, elements: !6498)
!6498 = !{!6499}
!6499 = !DIDerivedType(tag: DW_TAG_member, name: "net", scope: !6497, file: !3015, line: 316, baseType: !3013, size: 64)
!6500 = !DIDerivedType(tag: DW_TAG_member, scope: !298, file: !4, line: 2110, baseType: !6501, size: 64, offset: 8128)
!6501 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !298, file: !4, line: 2110, size: 64, elements: !6502)
!6502 = !{!6503, !6504, !6525, !6534}
!6503 = !DIDerivedType(tag: DW_TAG_member, name: "ml_priv", scope: !6501, file: !4, line: 2111, baseType: !625, size: 64)
!6504 = !DIDerivedType(tag: DW_TAG_member, name: "lstats", scope: !6501, file: !4, line: 2112, baseType: !6505, size: 64)
!6505 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6506, size: 64)
!6506 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pcpu_lstats", file: !4, line: 2542, size: 128, align: 128, elements: !6507)
!6507 = !{!6508, !6523, !6524}
!6508 = !DIDerivedType(tag: DW_TAG_member, name: "packets", scope: !6506, file: !4, line: 2543, baseType: !6509, size: 64)
!6509 = !DIDerivedType(tag: DW_TAG_typedef, name: "u64_stats_t", file: !3102, line: 79, baseType: !6510)
!6510 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3102, line: 77, size: 64, elements: !6511)
!6511 = !{!6512}
!6512 = !DIDerivedType(tag: DW_TAG_member, name: "v", scope: !6510, file: !3102, line: 78, baseType: !6513, size: 64)
!6513 = !DIDerivedType(tag: DW_TAG_typedef, name: "local64_t", file: !6514, line: 26, baseType: !6515)
!6514 = !DIFile(filename: "./include/asm-generic/local64.h", directory: "/home/lizy2001/genbc/linux")
!6515 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !6514, line: 24, size: 64, elements: !6516)
!6516 = !{!6517}
!6517 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !6515, file: !6514, line: 25, baseType: !6518, size: 64)
!6518 = !DIDerivedType(tag: DW_TAG_typedef, name: "local_t", file: !6519, line: 12, baseType: !6520)
!6519 = !DIFile(filename: "./arch/x86/include/asm/local.h", directory: "/home/lizy2001/genbc/linux")
!6520 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !6519, line: 10, size: 64, elements: !6521)
!6521 = !{!6522}
!6522 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !6520, file: !6519, line: 11, baseType: !405, size: 64)
!6523 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !6506, file: !4, line: 2544, baseType: !6509, size: 64, offset: 64)
!6524 = !DIDerivedType(tag: DW_TAG_member, name: "syncp", scope: !6506, file: !4, line: 2545, baseType: !3101, offset: 128)
!6525 = !DIDerivedType(tag: DW_TAG_member, name: "tstats", scope: !6501, file: !4, line: 2113, baseType: !6526, size: 64)
!6526 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6527, size: 64)
!6527 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pcpu_sw_netstats", file: !4, line: 2534, size: 256, align: 256, elements: !6528)
!6528 = !{!6529, !6530, !6531, !6532, !6533}
!6529 = !DIDerivedType(tag: DW_TAG_member, name: "rx_packets", scope: !6527, file: !4, line: 2535, baseType: !365, size: 64)
!6530 = !DIDerivedType(tag: DW_TAG_member, name: "rx_bytes", scope: !6527, file: !4, line: 2536, baseType: !365, size: 64, offset: 64)
!6531 = !DIDerivedType(tag: DW_TAG_member, name: "tx_packets", scope: !6527, file: !4, line: 2537, baseType: !365, size: 64, offset: 128)
!6532 = !DIDerivedType(tag: DW_TAG_member, name: "tx_bytes", scope: !6527, file: !4, line: 2538, baseType: !365, size: 64, offset: 192)
!6533 = !DIDerivedType(tag: DW_TAG_member, name: "syncp", scope: !6527, file: !4, line: 2539, baseType: !3101, offset: 256)
!6534 = !DIDerivedType(tag: DW_TAG_member, name: "dstats", scope: !6501, file: !4, line: 2114, baseType: !6535, size: 64)
!6535 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6536, size: 64)
!6536 = !DICompositeType(tag: DW_TAG_structure_type, name: "pcpu_dstats", file: !4, line: 2114, flags: DIFlagFwdDecl)
!6537 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !298, file: !4, line: 2124, baseType: !6538, size: 5568, offset: 8192)
!6538 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !6539, line: 461, size: 5568, elements: !6540)
!6539 = !DIFile(filename: "./include/linux/device.h", directory: "/home/lizy2001/genbc/linux")
!6540 = !{!6541, !6542, !6544, !6547, !6548, !6600, !6692, !6693, !6694, !6695, !6696, !6711, !6818, !6831, !6835, !6836, !6840, !6841, !6842, !6843, !6847, !6853, !6854, !6857, !6861, !6951, !6952, !6953, !6954, !6955, !6987, !6988, !6989, !6992, !6995, !6996, !6997, !6998}
!6541 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !6538, file: !6539, line: 462, baseType: !6122, size: 512)
!6542 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !6538, file: !6539, line: 463, baseType: !6543, size: 64, offset: 512)
!6543 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6538, size: 64)
!6544 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !6538, file: !6539, line: 465, baseType: !6545, size: 64, offset: 576)
!6545 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6546, size: 64)
!6546 = !DICompositeType(tag: DW_TAG_structure_type, name: "device_private", file: !6539, line: 36, flags: DIFlagFwdDecl)
!6547 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !6538, file: !6539, line: 467, baseType: !326, size: 64, offset: 640)
!6548 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !6538, file: !6539, line: 468, baseType: !6549, size: 64, offset: 704)
!6549 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6550, size: 64)
!6550 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6551)
!6551 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_type", file: !6539, line: 87, size: 384, elements: !6552)
!6552 = !{!6553, !6554, !6555, !6559, !6564, !6568}
!6553 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !6551, file: !6539, line: 88, baseType: !326, size: 64)
!6554 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !6551, file: !6539, line: 89, baseType: !6159, size: 64, offset: 64)
!6555 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !6551, file: !6539, line: 90, baseType: !6556, size: 64, offset: 128)
!6556 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6557, size: 64)
!6557 = !DISubroutineType(types: !6558)
!6558 = !{!5, !6543, !6377}
!6559 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !6551, file: !6539, line: 91, baseType: !6560, size: 64, offset: 192)
!6560 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6561, size: 64)
!6561 = !DISubroutineType(types: !6562)
!6562 = !{!1072, !6543, !6563, !2935, !2936}
!6563 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1412, size: 64)
!6564 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !6551, file: !6539, line: 93, baseType: !6565, size: 64, offset: 256)
!6565 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6566, size: 64)
!6566 = !DISubroutineType(types: !6567)
!6567 = !{null, !6543}
!6568 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !6551, file: !6539, line: 95, baseType: !6569, size: 64, offset: 320)
!6569 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6570, size: 64)
!6570 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6571)
!6571 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_ops", file: !6572, line: 278, size: 1472, elements: !6573)
!6572 = !DIFile(filename: "./include/linux/pm.h", directory: "/home/lizy2001/genbc/linux")
!6573 = !{!6574, !6578, !6579, !6580, !6581, !6582, !6583, !6584, !6585, !6586, !6587, !6588, !6589, !6590, !6591, !6592, !6593, !6594, !6595, !6596, !6597, !6598, !6599}
!6574 = !DIDerivedType(tag: DW_TAG_member, name: "prepare", scope: !6571, file: !6572, line: 279, baseType: !6575, size: 64)
!6575 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6576, size: 64)
!6576 = !DISubroutineType(types: !6577)
!6577 = !{!5, !6543}
!6578 = !DIDerivedType(tag: DW_TAG_member, name: "complete", scope: !6571, file: !6572, line: 280, baseType: !6565, size: 64, offset: 64)
!6579 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !6571, file: !6572, line: 281, baseType: !6575, size: 64, offset: 128)
!6580 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !6571, file: !6572, line: 282, baseType: !6575, size: 64, offset: 192)
!6581 = !DIDerivedType(tag: DW_TAG_member, name: "freeze", scope: !6571, file: !6572, line: 283, baseType: !6575, size: 64, offset: 256)
!6582 = !DIDerivedType(tag: DW_TAG_member, name: "thaw", scope: !6571, file: !6572, line: 284, baseType: !6575, size: 64, offset: 320)
!6583 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff", scope: !6571, file: !6572, line: 285, baseType: !6575, size: 64, offset: 384)
!6584 = !DIDerivedType(tag: DW_TAG_member, name: "restore", scope: !6571, file: !6572, line: 286, baseType: !6575, size: 64, offset: 448)
!6585 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_late", scope: !6571, file: !6572, line: 287, baseType: !6575, size: 64, offset: 512)
!6586 = !DIDerivedType(tag: DW_TAG_member, name: "resume_early", scope: !6571, file: !6572, line: 288, baseType: !6575, size: 64, offset: 576)
!6587 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_late", scope: !6571, file: !6572, line: 289, baseType: !6575, size: 64, offset: 640)
!6588 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_early", scope: !6571, file: !6572, line: 290, baseType: !6575, size: 64, offset: 704)
!6589 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_late", scope: !6571, file: !6572, line: 291, baseType: !6575, size: 64, offset: 768)
!6590 = !DIDerivedType(tag: DW_TAG_member, name: "restore_early", scope: !6571, file: !6572, line: 292, baseType: !6575, size: 64, offset: 832)
!6591 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_noirq", scope: !6571, file: !6572, line: 293, baseType: !6575, size: 64, offset: 896)
!6592 = !DIDerivedType(tag: DW_TAG_member, name: "resume_noirq", scope: !6571, file: !6572, line: 294, baseType: !6575, size: 64, offset: 960)
!6593 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_noirq", scope: !6571, file: !6572, line: 295, baseType: !6575, size: 64, offset: 1024)
!6594 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_noirq", scope: !6571, file: !6572, line: 296, baseType: !6575, size: 64, offset: 1088)
!6595 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_noirq", scope: !6571, file: !6572, line: 297, baseType: !6575, size: 64, offset: 1152)
!6596 = !DIDerivedType(tag: DW_TAG_member, name: "restore_noirq", scope: !6571, file: !6572, line: 298, baseType: !6575, size: 64, offset: 1216)
!6597 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_suspend", scope: !6571, file: !6572, line: 299, baseType: !6575, size: 64, offset: 1280)
!6598 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_resume", scope: !6571, file: !6572, line: 300, baseType: !6575, size: 64, offset: 1344)
!6599 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_idle", scope: !6571, file: !6572, line: 301, baseType: !6575, size: 64, offset: 1408)
!6600 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !6538, file: !6539, line: 470, baseType: !6601, size: 64, offset: 768)
!6601 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6602, size: 64)
!6602 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bus_type", file: !6603, line: 82, size: 1408, elements: !6604)
!6603 = !DIFile(filename: "./include/linux/device/bus.h", directory: "/home/lizy2001/genbc/linux")
!6604 = !{!6605, !6606, !6607, !6608, !6609, !6610, !6611, !6671, !6672, !6673, !6674, !6675, !6676, !6677, !6678, !6679, !6680, !6681, !6682, !6683, !6687, !6690, !6691}
!6605 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !6602, file: !6603, line: 83, baseType: !326, size: 64)
!6606 = !DIDerivedType(tag: DW_TAG_member, name: "dev_name", scope: !6602, file: !6603, line: 84, baseType: !326, size: 64, offset: 64)
!6607 = !DIDerivedType(tag: DW_TAG_member, name: "dev_root", scope: !6602, file: !6603, line: 85, baseType: !6543, size: 64, offset: 128)
!6608 = !DIDerivedType(tag: DW_TAG_member, name: "bus_groups", scope: !6602, file: !6603, line: 86, baseType: !6159, size: 64, offset: 192)
!6609 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !6602, file: !6603, line: 87, baseType: !6159, size: 64, offset: 256)
!6610 = !DIDerivedType(tag: DW_TAG_member, name: "drv_groups", scope: !6602, file: !6603, line: 88, baseType: !6159, size: 64, offset: 320)
!6611 = !DIDerivedType(tag: DW_TAG_member, name: "match", scope: !6602, file: !6603, line: 90, baseType: !6612, size: 64, offset: 384)
!6612 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6613, size: 64)
!6613 = !DISubroutineType(types: !6614)
!6614 = !{!5, !6543, !6615}
!6615 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6616, size: 64)
!6616 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_driver", file: !6617, line: 95, size: 1152, elements: !6618)
!6617 = !DIFile(filename: "./include/linux/device/driver.h", directory: "/home/lizy2001/genbc/linux")
!6618 = !{!6619, !6620, !6621, !6622, !6623, !6624, !6630, !6640, !6651, !6652, !6653, !6654, !6655, !6663, !6664, !6665, !6666, !6667, !6668}
!6619 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !6616, file: !6617, line: 96, baseType: !326, size: 64)
!6620 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !6616, file: !6617, line: 97, baseType: !6601, size: 64, offset: 64)
!6621 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !6616, file: !6617, line: 99, baseType: !1014, size: 64, offset: 128)
!6622 = !DIDerivedType(tag: DW_TAG_member, name: "mod_name", scope: !6616, file: !6617, line: 100, baseType: !326, size: 64, offset: 192)
!6623 = !DIDerivedType(tag: DW_TAG_member, name: "suppress_bind_attrs", scope: !6616, file: !6617, line: 102, baseType: !805, size: 8, offset: 256)
!6624 = !DIDerivedType(tag: DW_TAG_member, name: "probe_type", scope: !6616, file: !6617, line: 103, baseType: !6625, size: 32, offset: 288)
!6625 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "probe_type", file: !6617, line: 44, baseType: !11, size: 32, elements: !6626)
!6626 = !{!6627, !6628, !6629}
!6627 = !DIEnumerator(name: "PROBE_DEFAULT_STRATEGY", value: 0, isUnsigned: true)
!6628 = !DIEnumerator(name: "PROBE_PREFER_ASYNCHRONOUS", value: 1, isUnsigned: true)
!6629 = !DIEnumerator(name: "PROBE_FORCE_SYNCHRONOUS", value: 2, isUnsigned: true)
!6630 = !DIDerivedType(tag: DW_TAG_member, name: "of_match_table", scope: !6616, file: !6617, line: 105, baseType: !6631, size: 64, offset: 320)
!6631 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6632, size: 64)
!6632 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6633)
!6633 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "of_device_id", file: !6634, line: 262, size: 1600, elements: !6635)
!6634 = !DIFile(filename: "./include/linux/mod_devicetable.h", directory: "/home/lizy2001/genbc/linux")
!6635 = !{!6636, !6637, !6638, !6639}
!6636 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !6633, file: !6634, line: 263, baseType: !4642, size: 256)
!6637 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !6633, file: !6634, line: 264, baseType: !4642, size: 256, offset: 256)
!6638 = !DIDerivedType(tag: DW_TAG_member, name: "compatible", scope: !6633, file: !6634, line: 265, baseType: !5235, size: 1024, offset: 512)
!6639 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !6633, file: !6634, line: 266, baseType: !3288, size: 64, offset: 1536)
!6640 = !DIDerivedType(tag: DW_TAG_member, name: "acpi_match_table", scope: !6616, file: !6617, line: 106, baseType: !6641, size: 64, offset: 384)
!6641 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6642, size: 64)
!6642 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6643)
!6643 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_id", file: !6634, line: 210, size: 256, elements: !6644)
!6644 = !{!6645, !6647, !6649, !6650}
!6645 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !6643, file: !6634, line: 211, baseType: !6646, size: 72)
!6646 = !DICompositeType(tag: DW_TAG_array_type, baseType: !515, size: 72, elements: !3117)
!6647 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !6643, file: !6634, line: 212, baseType: !6648, size: 64, offset: 128)
!6648 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_ulong_t", file: !6634, line: 14, baseType: !346)
!6649 = !DIDerivedType(tag: DW_TAG_member, name: "cls", scope: !6643, file: !6634, line: 213, baseType: !527, size: 32, offset: 192)
!6650 = !DIDerivedType(tag: DW_TAG_member, name: "cls_msk", scope: !6643, file: !6634, line: 214, baseType: !527, size: 32, offset: 224)
!6651 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !6616, file: !6617, line: 108, baseType: !6575, size: 64, offset: 448)
!6652 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !6616, file: !6617, line: 109, baseType: !6565, size: 64, offset: 512)
!6653 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !6616, file: !6617, line: 110, baseType: !6575, size: 64, offset: 576)
!6654 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !6616, file: !6617, line: 111, baseType: !6565, size: 64, offset: 640)
!6655 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !6616, file: !6617, line: 112, baseType: !6656, size: 64, offset: 704)
!6656 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6657, size: 64)
!6657 = !DISubroutineType(types: !6658)
!6658 = !{!5, !6543, !6659}
!6659 = !DIDerivedType(tag: DW_TAG_typedef, name: "pm_message_t", file: !6572, line: 52, baseType: !6660)
!6660 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_message", file: !6572, line: 50, size: 32, elements: !6661)
!6661 = !{!6662}
!6662 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !6660, file: !6572, line: 51, baseType: !5, size: 32)
!6663 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !6616, file: !6617, line: 113, baseType: !6575, size: 64, offset: 768)
!6664 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !6616, file: !6617, line: 114, baseType: !6159, size: 64, offset: 832)
!6665 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !6616, file: !6617, line: 115, baseType: !6159, size: 64, offset: 896)
!6666 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !6616, file: !6617, line: 117, baseType: !6569, size: 64, offset: 960)
!6667 = !DIDerivedType(tag: DW_TAG_member, name: "coredump", scope: !6616, file: !6617, line: 118, baseType: !6565, size: 64, offset: 1024)
!6668 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !6616, file: !6617, line: 120, baseType: !6669, size: 64, offset: 1088)
!6669 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6670, size: 64)
!6670 = !DICompositeType(tag: DW_TAG_structure_type, name: "driver_private", file: !6617, line: 120, flags: DIFlagFwdDecl)
!6671 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !6602, file: !6603, line: 91, baseType: !6556, size: 64, offset: 448)
!6672 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !6602, file: !6603, line: 92, baseType: !6575, size: 64, offset: 512)
!6673 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !6602, file: !6603, line: 93, baseType: !6565, size: 64, offset: 576)
!6674 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !6602, file: !6603, line: 94, baseType: !6575, size: 64, offset: 640)
!6675 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !6602, file: !6603, line: 95, baseType: !6565, size: 64, offset: 704)
!6676 = !DIDerivedType(tag: DW_TAG_member, name: "online", scope: !6602, file: !6603, line: 97, baseType: !6575, size: 64, offset: 768)
!6677 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !6602, file: !6603, line: 98, baseType: !6575, size: 64, offset: 832)
!6678 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !6602, file: !6603, line: 100, baseType: !6656, size: 64, offset: 896)
!6679 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !6602, file: !6603, line: 101, baseType: !6575, size: 64, offset: 960)
!6680 = !DIDerivedType(tag: DW_TAG_member, name: "num_vf", scope: !6602, file: !6603, line: 103, baseType: !6575, size: 64, offset: 1024)
!6681 = !DIDerivedType(tag: DW_TAG_member, name: "dma_configure", scope: !6602, file: !6603, line: 105, baseType: !6575, size: 64, offset: 1088)
!6682 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !6602, file: !6603, line: 107, baseType: !6569, size: 64, offset: 1152)
!6683 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_ops", scope: !6602, file: !6603, line: 109, baseType: !6684, size: 64, offset: 1216)
!6684 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6685, size: 64)
!6685 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6686)
!6686 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_ops", file: !6603, line: 109, flags: DIFlagFwdDecl)
!6687 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !6602, file: !6603, line: 111, baseType: !6688, size: 64, offset: 1280)
!6688 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6689, size: 64)
!6689 = !DICompositeType(tag: DW_TAG_structure_type, name: "subsys_private", file: !6603, line: 111, flags: DIFlagFwdDecl)
!6690 = !DIDerivedType(tag: DW_TAG_member, name: "lock_key", scope: !6602, file: !6603, line: 112, baseType: !1617, offset: 1344)
!6691 = !DIDerivedType(tag: DW_TAG_member, name: "need_parent_lock", scope: !6602, file: !6603, line: 114, baseType: !805, size: 8, offset: 1344)
!6692 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !6538, file: !6539, line: 471, baseType: !6615, size: 64, offset: 832)
!6693 = !DIDerivedType(tag: DW_TAG_member, name: "platform_data", scope: !6538, file: !6539, line: 473, baseType: !625, size: 64, offset: 896)
!6694 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !6538, file: !6539, line: 475, baseType: !625, size: 64, offset: 960)
!6695 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !6538, file: !6539, line: 480, baseType: !1697, size: 192, offset: 1024)
!6696 = !DIDerivedType(tag: DW_TAG_member, name: "links", scope: !6538, file: !6539, line: 484, baseType: !6697, size: 576, offset: 1216)
!6697 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_links_info", file: !6539, line: 361, size: 576, elements: !6698)
!6698 = !{!6699, !6700, !6701, !6702, !6703, !6704}
!6699 = !DIDerivedType(tag: DW_TAG_member, name: "suppliers", scope: !6697, file: !6539, line: 362, baseType: !318, size: 128)
!6700 = !DIDerivedType(tag: DW_TAG_member, name: "consumers", scope: !6697, file: !6539, line: 363, baseType: !318, size: 128, offset: 128)
!6701 = !DIDerivedType(tag: DW_TAG_member, name: "needs_suppliers", scope: !6697, file: !6539, line: 364, baseType: !318, size: 128, offset: 256)
!6702 = !DIDerivedType(tag: DW_TAG_member, name: "defer_hook", scope: !6697, file: !6539, line: 365, baseType: !318, size: 128, offset: 384)
!6703 = !DIDerivedType(tag: DW_TAG_member, name: "need_for_probe", scope: !6697, file: !6539, line: 366, baseType: !805, size: 8, offset: 512)
!6704 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !6697, file: !6539, line: 367, baseType: !6705, size: 32, offset: 544)
!6705 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dl_dev_state", file: !6539, line: 343, baseType: !11, size: 32, elements: !6706)
!6706 = !{!6707, !6708, !6709, !6710}
!6707 = !DIEnumerator(name: "DL_DEV_NO_DRIVER", value: 0, isUnsigned: true)
!6708 = !DIEnumerator(name: "DL_DEV_PROBING", value: 1, isUnsigned: true)
!6709 = !DIEnumerator(name: "DL_DEV_DRIVER_BOUND", value: 2, isUnsigned: true)
!6710 = !DIEnumerator(name: "DL_DEV_UNBINDING", value: 3, isUnsigned: true)
!6711 = !DIDerivedType(tag: DW_TAG_member, name: "power", scope: !6538, file: !6539, line: 485, baseType: !6712, size: 2304, offset: 1792)
!6712 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_info", file: !6572, line: 565, size: 2304, elements: !6713)
!6713 = !{!6714, !6715, !6716, !6717, !6718, !6719, !6720, !6721, !6722, !6723, !6724, !6725, !6726, !6727, !6728, !6729, !6756, !6757, !6758, !6759, !6760, !6761, !6762, !6763, !6764, !6765, !6766, !6767, !6768, !6769, !6770, !6771, !6772, !6773, !6774, !6775, !6776, !6777, !6778, !6779, !6780, !6788, !6795, !6796, !6797, !6798, !6799, !6800, !6801, !6811, !6815}
!6714 = !DIDerivedType(tag: DW_TAG_member, name: "power_state", scope: !6712, file: !6572, line: 566, baseType: !6659, size: 32)
!6715 = !DIDerivedType(tag: DW_TAG_member, name: "can_wakeup", scope: !6712, file: !6572, line: 567, baseType: !11, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!6716 = !DIDerivedType(tag: DW_TAG_member, name: "async_suspend", scope: !6712, file: !6572, line: 568, baseType: !11, size: 1, offset: 33, flags: DIFlagBitField, extraData: i64 32)
!6717 = !DIDerivedType(tag: DW_TAG_member, name: "in_dpm_list", scope: !6712, file: !6572, line: 569, baseType: !805, size: 1, offset: 34, flags: DIFlagBitField, extraData: i64 32)
!6718 = !DIDerivedType(tag: DW_TAG_member, name: "is_prepared", scope: !6712, file: !6572, line: 570, baseType: !805, size: 1, offset: 35, flags: DIFlagBitField, extraData: i64 32)
!6719 = !DIDerivedType(tag: DW_TAG_member, name: "is_suspended", scope: !6712, file: !6572, line: 571, baseType: !805, size: 1, offset: 36, flags: DIFlagBitField, extraData: i64 32)
!6720 = !DIDerivedType(tag: DW_TAG_member, name: "is_noirq_suspended", scope: !6712, file: !6572, line: 572, baseType: !805, size: 1, offset: 37, flags: DIFlagBitField, extraData: i64 32)
!6721 = !DIDerivedType(tag: DW_TAG_member, name: "is_late_suspended", scope: !6712, file: !6572, line: 573, baseType: !805, size: 1, offset: 38, flags: DIFlagBitField, extraData: i64 32)
!6722 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm", scope: !6712, file: !6572, line: 574, baseType: !805, size: 1, offset: 39, flags: DIFlagBitField, extraData: i64 32)
!6723 = !DIDerivedType(tag: DW_TAG_member, name: "early_init", scope: !6712, file: !6572, line: 575, baseType: !805, size: 1, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!6724 = !DIDerivedType(tag: DW_TAG_member, name: "direct_complete", scope: !6712, file: !6572, line: 576, baseType: !805, size: 1, offset: 41, flags: DIFlagBitField, extraData: i64 32)
!6725 = !DIDerivedType(tag: DW_TAG_member, name: "driver_flags", scope: !6712, file: !6572, line: 577, baseType: !1021, size: 32, offset: 64)
!6726 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !6712, file: !6572, line: 578, baseType: !1702, offset: 96)
!6727 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !6712, file: !6572, line: 580, baseType: !318, size: 128, offset: 128)
!6728 = !DIDerivedType(tag: DW_TAG_member, name: "completion", scope: !6712, file: !6572, line: 581, baseType: !2628, size: 192, offset: 256)
!6729 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup", scope: !6712, file: !6572, line: 582, baseType: !6730, size: 64, offset: 448)
!6730 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6731, size: 64)
!6731 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wakeup_source", file: !6732, line: 43, size: 1472, elements: !6733)
!6732 = !DIFile(filename: "./include/linux/pm_wakeup.h", directory: "/home/lizy2001/genbc/linux")
!6733 = !{!6734, !6735, !6736, !6737, !6738, !6741, !6742, !6743, !6744, !6745, !6746, !6747, !6748, !6749, !6750, !6751, !6752, !6753, !6754, !6755}
!6734 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !6731, file: !6732, line: 44, baseType: !326, size: 64)
!6735 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !6731, file: !6732, line: 45, baseType: !5, size: 32, offset: 64)
!6736 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !6731, file: !6732, line: 46, baseType: !318, size: 128, offset: 128)
!6737 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !6731, file: !6732, line: 47, baseType: !1702, offset: 256)
!6738 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !6731, file: !6732, line: 48, baseType: !6739, size: 64, offset: 256)
!6739 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6740, size: 64)
!6740 = !DICompositeType(tag: DW_TAG_structure_type, name: "wake_irq", file: !6572, line: 533, flags: DIFlagFwdDecl)
!6741 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !6731, file: !6732, line: 49, baseType: !3265, size: 320, offset: 320)
!6742 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !6731, file: !6732, line: 50, baseType: !346, size: 64, offset: 640)
!6743 = !DIDerivedType(tag: DW_TAG_member, name: "total_time", scope: !6731, file: !6732, line: 51, baseType: !487, size: 64, offset: 704)
!6744 = !DIDerivedType(tag: DW_TAG_member, name: "max_time", scope: !6731, file: !6732, line: 52, baseType: !487, size: 64, offset: 768)
!6745 = !DIDerivedType(tag: DW_TAG_member, name: "last_time", scope: !6731, file: !6732, line: 53, baseType: !487, size: 64, offset: 832)
!6746 = !DIDerivedType(tag: DW_TAG_member, name: "start_prevent_time", scope: !6731, file: !6732, line: 54, baseType: !487, size: 64, offset: 896)
!6747 = !DIDerivedType(tag: DW_TAG_member, name: "prevent_sleep_time", scope: !6731, file: !6732, line: 55, baseType: !487, size: 64, offset: 960)
!6748 = !DIDerivedType(tag: DW_TAG_member, name: "event_count", scope: !6731, file: !6732, line: 56, baseType: !346, size: 64, offset: 1024)
!6749 = !DIDerivedType(tag: DW_TAG_member, name: "active_count", scope: !6731, file: !6732, line: 57, baseType: !346, size: 64, offset: 1088)
!6750 = !DIDerivedType(tag: DW_TAG_member, name: "relax_count", scope: !6731, file: !6732, line: 58, baseType: !346, size: 64, offset: 1152)
!6751 = !DIDerivedType(tag: DW_TAG_member, name: "expire_count", scope: !6731, file: !6732, line: 59, baseType: !346, size: 64, offset: 1216)
!6752 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_count", scope: !6731, file: !6732, line: 60, baseType: !346, size: 64, offset: 1280)
!6753 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !6731, file: !6732, line: 61, baseType: !6543, size: 64, offset: 1344)
!6754 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !6731, file: !6732, line: 62, baseType: !805, size: 1, offset: 1408, flags: DIFlagBitField, extraData: i64 1408)
!6755 = !DIDerivedType(tag: DW_TAG_member, name: "autosleep_enabled", scope: !6731, file: !6732, line: 63, baseType: !805, size: 1, offset: 1409, flags: DIFlagBitField, extraData: i64 1408)
!6756 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_path", scope: !6712, file: !6572, line: 583, baseType: !805, size: 1, offset: 512, flags: DIFlagBitField, extraData: i64 512)
!6757 = !DIDerivedType(tag: DW_TAG_member, name: "syscore", scope: !6712, file: !6572, line: 584, baseType: !805, size: 1, offset: 513, flags: DIFlagBitField, extraData: i64 512)
!6758 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm_callbacks", scope: !6712, file: !6572, line: 585, baseType: !805, size: 1, offset: 514, flags: DIFlagBitField, extraData: i64 512)
!6759 = !DIDerivedType(tag: DW_TAG_member, name: "must_resume", scope: !6712, file: !6572, line: 586, baseType: !11, size: 1, offset: 515, flags: DIFlagBitField, extraData: i64 512)
!6760 = !DIDerivedType(tag: DW_TAG_member, name: "may_skip_resume", scope: !6712, file: !6572, line: 587, baseType: !11, size: 1, offset: 516, flags: DIFlagBitField, extraData: i64 512)
!6761 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_timer", scope: !6712, file: !6572, line: 592, baseType: !2429, size: 512, offset: 576)
!6762 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !6712, file: !6572, line: 593, baseType: !365, size: 64, offset: 1088)
!6763 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !6712, file: !6572, line: 594, baseType: !2860, size: 256, offset: 1152)
!6764 = !DIDerivedType(tag: DW_TAG_member, name: "wait_queue", scope: !6712, file: !6572, line: 595, baseType: !1921, size: 128, offset: 1408)
!6765 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !6712, file: !6572, line: 596, baseType: !6739, size: 64, offset: 1536)
!6766 = !DIDerivedType(tag: DW_TAG_member, name: "usage_count", scope: !6712, file: !6572, line: 597, baseType: !417, size: 32, offset: 1600)
!6767 = !DIDerivedType(tag: DW_TAG_member, name: "child_count", scope: !6712, file: !6572, line: 598, baseType: !417, size: 32, offset: 1632)
!6768 = !DIDerivedType(tag: DW_TAG_member, name: "disable_depth", scope: !6712, file: !6572, line: 599, baseType: !11, size: 3, offset: 1664, flags: DIFlagBitField, extraData: i64 1664)
!6769 = !DIDerivedType(tag: DW_TAG_member, name: "idle_notification", scope: !6712, file: !6572, line: 600, baseType: !11, size: 1, offset: 1667, flags: DIFlagBitField, extraData: i64 1664)
!6770 = !DIDerivedType(tag: DW_TAG_member, name: "request_pending", scope: !6712, file: !6572, line: 601, baseType: !11, size: 1, offset: 1668, flags: DIFlagBitField, extraData: i64 1664)
!6771 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_resume", scope: !6712, file: !6572, line: 602, baseType: !11, size: 1, offset: 1669, flags: DIFlagBitField, extraData: i64 1664)
!6772 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_auto", scope: !6712, file: !6572, line: 603, baseType: !11, size: 1, offset: 1670, flags: DIFlagBitField, extraData: i64 1664)
!6773 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_children", scope: !6712, file: !6572, line: 604, baseType: !805, size: 1, offset: 1671, flags: DIFlagBitField, extraData: i64 1664)
!6774 = !DIDerivedType(tag: DW_TAG_member, name: "no_callbacks", scope: !6712, file: !6572, line: 605, baseType: !11, size: 1, offset: 1672, flags: DIFlagBitField, extraData: i64 1664)
!6775 = !DIDerivedType(tag: DW_TAG_member, name: "irq_safe", scope: !6712, file: !6572, line: 606, baseType: !11, size: 1, offset: 1673, flags: DIFlagBitField, extraData: i64 1664)
!6776 = !DIDerivedType(tag: DW_TAG_member, name: "use_autosuspend", scope: !6712, file: !6572, line: 607, baseType: !11, size: 1, offset: 1674, flags: DIFlagBitField, extraData: i64 1664)
!6777 = !DIDerivedType(tag: DW_TAG_member, name: "timer_autosuspends", scope: !6712, file: !6572, line: 608, baseType: !11, size: 1, offset: 1675, flags: DIFlagBitField, extraData: i64 1664)
!6778 = !DIDerivedType(tag: DW_TAG_member, name: "memalloc_noio", scope: !6712, file: !6572, line: 609, baseType: !11, size: 1, offset: 1676, flags: DIFlagBitField, extraData: i64 1664)
!6779 = !DIDerivedType(tag: DW_TAG_member, name: "links_count", scope: !6712, file: !6572, line: 610, baseType: !11, size: 32, offset: 1696)
!6780 = !DIDerivedType(tag: DW_TAG_member, name: "request", scope: !6712, file: !6572, line: 611, baseType: !6781, size: 32, offset: 1728)
!6781 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_request", file: !6572, line: 524, baseType: !11, size: 32, elements: !6782)
!6782 = !{!6783, !6784, !6785, !6786, !6787}
!6783 = !DIEnumerator(name: "RPM_REQ_NONE", value: 0, isUnsigned: true)
!6784 = !DIEnumerator(name: "RPM_REQ_IDLE", value: 1, isUnsigned: true)
!6785 = !DIEnumerator(name: "RPM_REQ_SUSPEND", value: 2, isUnsigned: true)
!6786 = !DIEnumerator(name: "RPM_REQ_AUTOSUSPEND", value: 3, isUnsigned: true)
!6787 = !DIEnumerator(name: "RPM_REQ_RESUME", value: 4, isUnsigned: true)
!6788 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_status", scope: !6712, file: !6572, line: 612, baseType: !6789, size: 32, offset: 1760)
!6789 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_status", file: !6572, line: 502, baseType: !11, size: 32, elements: !6790)
!6790 = !{!6791, !6792, !6793, !6794}
!6791 = !DIEnumerator(name: "RPM_ACTIVE", value: 0, isUnsigned: true)
!6792 = !DIEnumerator(name: "RPM_RESUMING", value: 1, isUnsigned: true)
!6793 = !DIEnumerator(name: "RPM_SUSPENDED", value: 2, isUnsigned: true)
!6794 = !DIEnumerator(name: "RPM_SUSPENDING", value: 3, isUnsigned: true)
!6795 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_error", scope: !6712, file: !6572, line: 613, baseType: !5, size: 32, offset: 1792)
!6796 = !DIDerivedType(tag: DW_TAG_member, name: "autosuspend_delay", scope: !6712, file: !6572, line: 614, baseType: !5, size: 32, offset: 1824)
!6797 = !DIDerivedType(tag: DW_TAG_member, name: "last_busy", scope: !6712, file: !6572, line: 615, baseType: !365, size: 64, offset: 1856)
!6798 = !DIDerivedType(tag: DW_TAG_member, name: "active_time", scope: !6712, file: !6572, line: 616, baseType: !365, size: 64, offset: 1920)
!6799 = !DIDerivedType(tag: DW_TAG_member, name: "suspended_time", scope: !6712, file: !6572, line: 617, baseType: !365, size: 64, offset: 1984)
!6800 = !DIDerivedType(tag: DW_TAG_member, name: "accounting_timestamp", scope: !6712, file: !6572, line: 618, baseType: !365, size: 64, offset: 2048)
!6801 = !DIDerivedType(tag: DW_TAG_member, name: "subsys_data", scope: !6712, file: !6572, line: 620, baseType: !6802, size: 64, offset: 2112)
!6802 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6803, size: 64)
!6803 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_subsys_data", file: !6572, line: 536, size: 256, elements: !6804)
!6804 = !{!6805, !6806, !6807, !6808}
!6805 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !6803, file: !6572, line: 537, baseType: !1702)
!6806 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !6803, file: !6572, line: 538, baseType: !11, size: 32)
!6807 = !DIDerivedType(tag: DW_TAG_member, name: "clock_list", scope: !6803, file: !6572, line: 540, baseType: !318, size: 128, offset: 64)
!6808 = !DIDerivedType(tag: DW_TAG_member, name: "domain_data", scope: !6803, file: !6572, line: 543, baseType: !6809, size: 64, offset: 192)
!6809 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6810, size: 64)
!6810 = !DICompositeType(tag: DW_TAG_structure_type, name: "pm_domain_data", file: !6572, line: 534, flags: DIFlagFwdDecl)
!6811 = !DIDerivedType(tag: DW_TAG_member, name: "set_latency_tolerance", scope: !6712, file: !6572, line: 621, baseType: !6812, size: 64, offset: 2176)
!6812 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6813, size: 64)
!6813 = !DISubroutineType(types: !6814)
!6814 = !{null, !6543, !2577}
!6815 = !DIDerivedType(tag: DW_TAG_member, name: "qos", scope: !6712, file: !6572, line: 622, baseType: !6816, size: 64, offset: 2240)
!6816 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6817, size: 64)
!6817 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_qos", file: !6572, line: 622, flags: DIFlagFwdDecl)
!6818 = !DIDerivedType(tag: DW_TAG_member, name: "pm_domain", scope: !6538, file: !6539, line: 486, baseType: !6819, size: 64, offset: 4096)
!6819 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6820, size: 64)
!6820 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_domain", file: !6572, line: 642, size: 1792, elements: !6821)
!6821 = !{!6822, !6823, !6824, !6828, !6829, !6830}
!6822 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !6820, file: !6572, line: 643, baseType: !6571, size: 1472)
!6823 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !6820, file: !6572, line: 644, baseType: !6575, size: 64, offset: 1472)
!6824 = !DIDerivedType(tag: DW_TAG_member, name: "detach", scope: !6820, file: !6572, line: 645, baseType: !6825, size: 64, offset: 1536)
!6825 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6826, size: 64)
!6826 = !DISubroutineType(types: !6827)
!6827 = !{null, !6543, !805}
!6828 = !DIDerivedType(tag: DW_TAG_member, name: "activate", scope: !6820, file: !6572, line: 646, baseType: !6575, size: 64, offset: 1600)
!6829 = !DIDerivedType(tag: DW_TAG_member, name: "sync", scope: !6820, file: !6572, line: 647, baseType: !6565, size: 64, offset: 1664)
!6830 = !DIDerivedType(tag: DW_TAG_member, name: "dismiss", scope: !6820, file: !6572, line: 648, baseType: !6565, size: 64, offset: 1728)
!6831 = !DIDerivedType(tag: DW_TAG_member, name: "msi_domain", scope: !6538, file: !6539, line: 493, baseType: !6832, size: 64, offset: 4160)
!6832 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6833, size: 64)
!6833 = !DICompositeType(tag: DW_TAG_structure_type, name: "irq_domain", file: !6834, line: 13, flags: DIFlagFwdDecl)
!6834 = !DIFile(filename: "./arch/x86/include/asm/x86_init.h", directory: "/home/lizy2001/genbc/linux")
!6835 = !DIDerivedType(tag: DW_TAG_member, name: "msi_list", scope: !6538, file: !6539, line: 499, baseType: !318, size: 128, offset: 4224)
!6836 = !DIDerivedType(tag: DW_TAG_member, name: "dma_ops", scope: !6538, file: !6539, line: 502, baseType: !6837, size: 64, offset: 4352)
!6837 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6838, size: 64)
!6838 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6839)
!6839 = !DICompositeType(tag: DW_TAG_structure_type, name: "dma_map_ops", file: !6539, line: 502, flags: DIFlagFwdDecl)
!6840 = !DIDerivedType(tag: DW_TAG_member, name: "dma_mask", scope: !6538, file: !6539, line: 504, baseType: !5374, size: 64, offset: 4416)
!6841 = !DIDerivedType(tag: DW_TAG_member, name: "coherent_dma_mask", scope: !6538, file: !6539, line: 505, baseType: !365, size: 64, offset: 4480)
!6842 = !DIDerivedType(tag: DW_TAG_member, name: "bus_dma_limit", scope: !6538, file: !6539, line: 510, baseType: !365, size: 64, offset: 4544)
!6843 = !DIDerivedType(tag: DW_TAG_member, name: "dma_range_map", scope: !6538, file: !6539, line: 511, baseType: !6844, size: 64, offset: 4608)
!6844 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6845, size: 64)
!6845 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6846)
!6846 = !DICompositeType(tag: DW_TAG_structure_type, name: "bus_dma_region", file: !6539, line: 511, flags: DIFlagFwdDecl)
!6847 = !DIDerivedType(tag: DW_TAG_member, name: "dma_parms", scope: !6538, file: !6539, line: 513, baseType: !6848, size: 64, offset: 4672)
!6848 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6849, size: 64)
!6849 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_dma_parameters", file: !6539, line: 288, size: 128, elements: !6850)
!6850 = !{!6851, !6852}
!6851 = !DIDerivedType(tag: DW_TAG_member, name: "max_segment_size", scope: !6849, file: !6539, line: 293, baseType: !11, size: 32)
!6852 = !DIDerivedType(tag: DW_TAG_member, name: "segment_boundary_mask", scope: !6849, file: !6539, line: 294, baseType: !346, size: 64, offset: 64)
!6853 = !DIDerivedType(tag: DW_TAG_member, name: "dma_pools", scope: !6538, file: !6539, line: 515, baseType: !318, size: 128, offset: 4736)
!6854 = !DIDerivedType(tag: DW_TAG_member, name: "archdata", scope: !6538, file: !6539, line: 526, baseType: !6855, offset: 4864)
!6855 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_archdata", file: !6856, line: 5, elements: !1619)
!6856 = !DIFile(filename: "./arch/x86/include/asm/device.h", directory: "/home/lizy2001/genbc/linux")
!6857 = !DIDerivedType(tag: DW_TAG_member, name: "of_node", scope: !6538, file: !6539, line: 528, baseType: !6858, size: 64, offset: 4864)
!6858 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6859, size: 64)
!6859 = !DICompositeType(tag: DW_TAG_structure_type, name: "device_node", file: !6860, line: 14, flags: DIFlagFwdDecl)
!6860 = !DIFile(filename: "./include/linux/arch_topology.h", directory: "/home/lizy2001/genbc/linux")
!6861 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !6538, file: !6539, line: 529, baseType: !6862, size: 64, offset: 4928)
!6862 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6863, size: 64)
!6863 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_handle", file: !6864, line: 17, size: 192, elements: !6865)
!6864 = !DIFile(filename: "./include/linux/fwnode.h", directory: "/home/lizy2001/genbc/linux")
!6865 = !{!6866, !6867, !6950}
!6866 = !DIDerivedType(tag: DW_TAG_member, name: "secondary", scope: !6863, file: !6864, line: 18, baseType: !6862, size: 64)
!6867 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !6863, file: !6864, line: 19, baseType: !6868, size: 64, offset: 64)
!6868 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6869, size: 64)
!6869 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6870)
!6870 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_operations", file: !6864, line: 110, size: 1152, elements: !6871)
!6871 = !{!6872, !6876, !6880, !6886, !6892, !6896, !6900, !6905, !6909, !6910, !6914, !6918, !6922, !6933, !6934, !6935, !6936, !6946}
!6872 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !6870, file: !6864, line: 111, baseType: !6873, size: 64)
!6873 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6874, size: 64)
!6874 = !DISubroutineType(types: !6875)
!6875 = !{!6862, !6862}
!6876 = !DIDerivedType(tag: DW_TAG_member, name: "put", scope: !6870, file: !6864, line: 112, baseType: !6877, size: 64, offset: 64)
!6877 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6878, size: 64)
!6878 = !DISubroutineType(types: !6879)
!6879 = !{null, !6862}
!6880 = !DIDerivedType(tag: DW_TAG_member, name: "device_is_available", scope: !6870, file: !6864, line: 113, baseType: !6881, size: 64, offset: 128)
!6881 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6882, size: 64)
!6882 = !DISubroutineType(types: !6883)
!6883 = !{!805, !6884}
!6884 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6885, size: 64)
!6885 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6863)
!6886 = !DIDerivedType(tag: DW_TAG_member, name: "device_get_match_data", scope: !6870, file: !6864, line: 114, baseType: !6887, size: 64, offset: 192)
!6887 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6888, size: 64)
!6888 = !DISubroutineType(types: !6889)
!6889 = !{!3288, !6884, !6890}
!6890 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6891, size: 64)
!6891 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6538)
!6892 = !DIDerivedType(tag: DW_TAG_member, name: "property_present", scope: !6870, file: !6864, line: 116, baseType: !6893, size: 64, offset: 256)
!6893 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6894, size: 64)
!6894 = !DISubroutineType(types: !6895)
!6895 = !{!805, !6884, !326}
!6896 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_int_array", scope: !6870, file: !6864, line: 118, baseType: !6897, size: 64, offset: 320)
!6897 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6898, size: 64)
!6898 = !DISubroutineType(types: !6899)
!6899 = !{!5, !6884, !326, !11, !625, !1073}
!6900 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_string_array", scope: !6870, file: !6864, line: 123, baseType: !6901, size: 64, offset: 384)
!6901 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6902, size: 64)
!6902 = !DISubroutineType(types: !6903)
!6903 = !{!5, !6884, !326, !6904, !1073}
!6904 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !326, size: 64)
!6905 = !DIDerivedType(tag: DW_TAG_member, name: "get_name", scope: !6870, file: !6864, line: 126, baseType: !6906, size: 64, offset: 448)
!6906 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6907, size: 64)
!6907 = !DISubroutineType(types: !6908)
!6908 = !{!326, !6884}
!6909 = !DIDerivedType(tag: DW_TAG_member, name: "get_name_prefix", scope: !6870, file: !6864, line: 127, baseType: !6906, size: 64, offset: 512)
!6910 = !DIDerivedType(tag: DW_TAG_member, name: "get_parent", scope: !6870, file: !6864, line: 128, baseType: !6911, size: 64, offset: 576)
!6911 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6912, size: 64)
!6912 = !DISubroutineType(types: !6913)
!6913 = !{!6862, !6884}
!6914 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_child_node", scope: !6870, file: !6864, line: 130, baseType: !6915, size: 64, offset: 640)
!6915 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6916, size: 64)
!6916 = !DISubroutineType(types: !6917)
!6917 = !{!6862, !6884, !6862}
!6918 = !DIDerivedType(tag: DW_TAG_member, name: "get_named_child_node", scope: !6870, file: !6864, line: 133, baseType: !6919, size: 64, offset: 704)
!6919 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6920, size: 64)
!6920 = !DISubroutineType(types: !6921)
!6921 = !{!6862, !6884, !326}
!6922 = !DIDerivedType(tag: DW_TAG_member, name: "get_reference_args", scope: !6870, file: !6864, line: 135, baseType: !6923, size: 64, offset: 768)
!6923 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6924, size: 64)
!6924 = !DISubroutineType(types: !6925)
!6925 = !{!5, !6884, !326, !326, !11, !11, !6926}
!6926 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6927, size: 64)
!6927 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_reference_args", file: !6864, line: 43, size: 640, elements: !6928)
!6928 = !{!6929, !6930, !6931}
!6929 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !6927, file: !6864, line: 44, baseType: !6862, size: 64)
!6930 = !DIDerivedType(tag: DW_TAG_member, name: "nargs", scope: !6927, file: !6864, line: 45, baseType: !11, size: 32, offset: 64)
!6931 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !6927, file: !6864, line: 46, baseType: !6932, size: 512, offset: 128)
!6932 = !DICompositeType(tag: DW_TAG_array_type, baseType: !365, size: 512, elements: !2465)
!6933 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_next_endpoint", scope: !6870, file: !6864, line: 140, baseType: !6915, size: 64, offset: 832)
!6934 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_remote_endpoint", scope: !6870, file: !6864, line: 143, baseType: !6911, size: 64, offset: 896)
!6935 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_port_parent", scope: !6870, file: !6864, line: 145, baseType: !6873, size: 64, offset: 960)
!6936 = !DIDerivedType(tag: DW_TAG_member, name: "graph_parse_endpoint", scope: !6870, file: !6864, line: 146, baseType: !6937, size: 64, offset: 1024)
!6937 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6938, size: 64)
!6938 = !DISubroutineType(types: !6939)
!6939 = !{!5, !6884, !6940}
!6940 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6941, size: 64)
!6941 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_endpoint", file: !6864, line: 29, size: 128, elements: !6942)
!6942 = !{!6943, !6944, !6945}
!6943 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !6941, file: !6864, line: 30, baseType: !11, size: 32)
!6944 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !6941, file: !6864, line: 31, baseType: !11, size: 32, offset: 32)
!6945 = !DIDerivedType(tag: DW_TAG_member, name: "local_fwnode", scope: !6941, file: !6864, line: 32, baseType: !6884, size: 64, offset: 64)
!6946 = !DIDerivedType(tag: DW_TAG_member, name: "add_links", scope: !6870, file: !6864, line: 148, baseType: !6947, size: 64, offset: 1088)
!6947 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6948, size: 64)
!6948 = !DISubroutineType(types: !6949)
!6949 = !{!5, !6884, !6543}
!6950 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !6863, file: !6864, line: 20, baseType: !6543, size: 64, offset: 128)
!6951 = !DIDerivedType(tag: DW_TAG_member, name: "devt", scope: !6538, file: !6539, line: 534, baseType: !1491, size: 32, offset: 4992)
!6952 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !6538, file: !6539, line: 535, baseType: !1021, size: 32, offset: 5024)
!6953 = !DIDerivedType(tag: DW_TAG_member, name: "devres_lock", scope: !6538, file: !6539, line: 537, baseType: !1702, offset: 5056)
!6954 = !DIDerivedType(tag: DW_TAG_member, name: "devres_head", scope: !6538, file: !6539, line: 538, baseType: !318, size: 128, offset: 5056)
!6955 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !6538, file: !6539, line: 540, baseType: !6956, size: 64, offset: 5184)
!6956 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6957, size: 64)
!6957 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "class", file: !6958, line: 54, size: 960, elements: !6959)
!6958 = !DIFile(filename: "./include/linux/device/class.h", directory: "/home/lizy2001/genbc/linux")
!6959 = !{!6960, !6961, !6962, !6963, !6964, !6965, !6966, !6970, !6974, !6975, !6976, !6977, !6981, !6985, !6986}
!6960 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !6957, file: !6958, line: 55, baseType: !326, size: 64)
!6961 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !6957, file: !6958, line: 56, baseType: !1014, size: 64, offset: 64)
!6962 = !DIDerivedType(tag: DW_TAG_member, name: "class_groups", scope: !6957, file: !6958, line: 58, baseType: !6159, size: 64, offset: 128)
!6963 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !6957, file: !6958, line: 59, baseType: !6159, size: 64, offset: 192)
!6964 = !DIDerivedType(tag: DW_TAG_member, name: "dev_kobj", scope: !6957, file: !6958, line: 60, baseType: !6127, size: 64, offset: 256)
!6965 = !DIDerivedType(tag: DW_TAG_member, name: "dev_uevent", scope: !6957, file: !6958, line: 62, baseType: !6556, size: 64, offset: 320)
!6966 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !6957, file: !6958, line: 63, baseType: !6967, size: 64, offset: 384)
!6967 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6968, size: 64)
!6968 = !DISubroutineType(types: !6969)
!6969 = !{!1072, !6543, !6563}
!6970 = !DIDerivedType(tag: DW_TAG_member, name: "class_release", scope: !6957, file: !6958, line: 65, baseType: !6971, size: 64, offset: 448)
!6971 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6972, size: 64)
!6972 = !DISubroutineType(types: !6973)
!6973 = !{null, !6956}
!6974 = !DIDerivedType(tag: DW_TAG_member, name: "dev_release", scope: !6957, file: !6958, line: 66, baseType: !6565, size: 64, offset: 512)
!6975 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown_pre", scope: !6957, file: !6958, line: 68, baseType: !6575, size: 64, offset: 576)
!6976 = !DIDerivedType(tag: DW_TAG_member, name: "ns_type", scope: !6957, file: !6958, line: 70, baseType: !6195, size: 64, offset: 640)
!6977 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !6957, file: !6958, line: 71, baseType: !6978, size: 64, offset: 704)
!6978 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6979, size: 64)
!6979 = !DISubroutineType(types: !6980)
!6980 = !{!3288, !6543}
!6981 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !6957, file: !6958, line: 73, baseType: !6982, size: 64, offset: 768)
!6982 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6983, size: 64)
!6983 = !DISubroutineType(types: !6984)
!6984 = !{null, !6543, !2935, !2936}
!6985 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !6957, file: !6958, line: 75, baseType: !6569, size: 64, offset: 832)
!6986 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !6957, file: !6958, line: 77, baseType: !6688, size: 64, offset: 896)
!6987 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !6538, file: !6539, line: 541, baseType: !6159, size: 64, offset: 5248)
!6988 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !6538, file: !6539, line: 543, baseType: !6565, size: 64, offset: 5312)
!6989 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_group", scope: !6538, file: !6539, line: 544, baseType: !6990, size: 64, offset: 5376)
!6990 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6991, size: 64)
!6991 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_group", file: !6539, line: 45, flags: DIFlagFwdDecl)
!6992 = !DIDerivedType(tag: DW_TAG_member, name: "iommu", scope: !6538, file: !6539, line: 545, baseType: !6993, size: 64, offset: 5440)
!6993 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6994, size: 64)
!6994 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_iommu", file: !6539, line: 47, flags: DIFlagFwdDecl)
!6995 = !DIDerivedType(tag: DW_TAG_member, name: "offline_disabled", scope: !6538, file: !6539, line: 547, baseType: !805, size: 1, offset: 5504, flags: DIFlagBitField, extraData: i64 5504)
!6996 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !6538, file: !6539, line: 548, baseType: !805, size: 1, offset: 5505, flags: DIFlagBitField, extraData: i64 5504)
!6997 = !DIDerivedType(tag: DW_TAG_member, name: "of_node_reused", scope: !6538, file: !6539, line: 549, baseType: !805, size: 1, offset: 5506, flags: DIFlagBitField, extraData: i64 5504)
!6998 = !DIDerivedType(tag: DW_TAG_member, name: "state_synced", scope: !6538, file: !6539, line: 550, baseType: !805, size: 1, offset: 5507, flags: DIFlagBitField, extraData: i64 5504)
!6999 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_groups", scope: !298, file: !4, line: 2125, baseType: !7000, size: 256, offset: 13760)
!7000 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6160, size: 256, elements: !2304)
!7001 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_rx_queue_group", scope: !298, file: !4, line: 2126, baseType: !6160, size: 64, offset: 14016)
!7002 = !DIDerivedType(tag: DW_TAG_member, name: "rtnl_link_ops", scope: !298, file: !4, line: 2128, baseType: !7003, size: 64, offset: 14080)
!7003 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7004, size: 64)
!7004 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7005)
!7005 = !DICompositeType(tag: DW_TAG_structure_type, name: "rtnl_link_ops", file: !4, line: 2128, flags: DIFlagFwdDecl)
!7006 = !DIDerivedType(tag: DW_TAG_member, name: "gso_max_size", scope: !298, file: !4, line: 2132, baseType: !11, size: 32, offset: 14144)
!7007 = !DIDerivedType(tag: DW_TAG_member, name: "gso_max_segs", scope: !298, file: !4, line: 2134, baseType: !615, size: 16, offset: 14176)
!7008 = !DIDerivedType(tag: DW_TAG_member, name: "num_tc", scope: !298, file: !4, line: 2139, baseType: !2346, size: 16, offset: 14192)
!7009 = !DIDerivedType(tag: DW_TAG_member, name: "tc_to_txq", scope: !298, file: !4, line: 2140, baseType: !7010, size: 512, offset: 14208)
!7010 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7011, size: 512, elements: !303)
!7011 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netdev_tc_txq", file: !4, line: 793, size: 32, elements: !7012)
!7012 = !{!7013, !7014}
!7013 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !7011, file: !4, line: 794, baseType: !615, size: 16)
!7014 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !7011, file: !4, line: 795, baseType: !615, size: 16, offset: 16)
!7015 = !DIDerivedType(tag: DW_TAG_member, name: "prio_tc_map", scope: !298, file: !4, line: 2141, baseType: !7016, size: 128, offset: 14720)
!7016 = !DICompositeType(tag: DW_TAG_array_type, baseType: !828, size: 128, elements: !303)
!7017 = !DIDerivedType(tag: DW_TAG_member, name: "phydev", scope: !298, file: !4, line: 2149, baseType: !7018, size: 64, offset: 14848)
!7018 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7019, size: 64)
!7019 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "phy_device", file: !7020, line: 539, size: 10112, elements: !7021)
!7020 = !DIFile(filename: "./include/linux/phy.h", directory: "/home/lizy2001/genbc/linux")
!7021 = !{!7022, !7114, !7234, !7235, !7241, !7242, !7243, !7244, !7245, !7246, !7247, !7248, !7249, !7250, !7251, !7252, !7253, !7254, !7255, !7265, !7266, !7297, !7298, !7299, !7300, !7301, !7302, !7303, !7304, !7305, !7306, !7307, !7308, !7309, !7310, !7311, !7312, !7313, !7314, !7315, !7322, !7323, !7324, !7327, !7330, !7331, !7357, !7358, !7359, !7363}
!7022 = !DIDerivedType(tag: DW_TAG_member, name: "mdio", scope: !7019, file: !7020, line: 540, baseType: !7023, size: 6336)
!7023 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mdio_device", file: !7024, line: 34, size: 6336, elements: !7025)
!7024 = !DIFile(filename: "./include/linux/mdio.h", directory: "/home/lizy2001/genbc/linux")
!7025 = !{!7026, !7027, !7099, !7100, !7101, !7105, !7106, !7107, !7108, !7109, !7112, !7113}
!7026 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !7023, file: !7024, line: 35, baseType: !6538, size: 5568)
!7027 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !7023, file: !7024, line: 37, baseType: !7028, size: 64, offset: 5568)
!7028 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7029, size: 64)
!7029 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mii_bus", file: !7020, line: 301, size: 20544, elements: !7030)
!7030 = !{!7031, !7032, !7033, !7037, !7038, !7042, !7046, !7050, !7059, !7060, !7061, !7068, !7069, !7072, !7073, !7074, !7076, !7077, !7078, !7081, !7088, !7089}
!7031 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !7029, file: !7020, line: 302, baseType: !1014, size: 64)
!7032 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !7029, file: !7020, line: 303, baseType: !326, size: 64, offset: 64)
!7033 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !7029, file: !7020, line: 304, baseType: !7034, size: 488, offset: 128)
!7034 = !DICompositeType(tag: DW_TAG_array_type, baseType: !302, size: 488, elements: !7035)
!7035 = !{!7036}
!7036 = !DISubrange(count: 61)
!7037 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !7029, file: !7020, line: 305, baseType: !625, size: 64, offset: 640)
!7038 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !7029, file: !7020, line: 307, baseType: !7039, size: 64, offset: 704)
!7039 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7040, size: 64)
!7040 = !DISubroutineType(types: !7041)
!7041 = !{!5, !7028, !5, !5}
!7042 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !7029, file: !7020, line: 309, baseType: !7043, size: 64, offset: 768)
!7043 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7044, size: 64)
!7044 = !DISubroutineType(types: !7045)
!7045 = !{!5, !7028, !5, !5, !615}
!7046 = !DIDerivedType(tag: DW_TAG_member, name: "reset", scope: !7029, file: !7020, line: 311, baseType: !7047, size: 64, offset: 832)
!7047 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7048, size: 64)
!7048 = !DISubroutineType(types: !7049)
!7049 = !{!5, !7028}
!7050 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !7029, file: !7020, line: 314, baseType: !7051, size: 8192, offset: 896)
!7051 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7052, size: 8192, elements: !853)
!7052 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mdio_bus_stats", file: !7020, line: 250, size: 256, elements: !7053)
!7053 = !{!7054, !7055, !7056, !7057, !7058}
!7054 = !DIDerivedType(tag: DW_TAG_member, name: "transfers", scope: !7052, file: !7020, line: 251, baseType: !6509, size: 64)
!7055 = !DIDerivedType(tag: DW_TAG_member, name: "errors", scope: !7052, file: !7020, line: 252, baseType: !6509, size: 64, offset: 64)
!7056 = !DIDerivedType(tag: DW_TAG_member, name: "writes", scope: !7052, file: !7020, line: 253, baseType: !6509, size: 64, offset: 128)
!7057 = !DIDerivedType(tag: DW_TAG_member, name: "reads", scope: !7052, file: !7020, line: 254, baseType: !6509, size: 64, offset: 192)
!7058 = !DIDerivedType(tag: DW_TAG_member, name: "syncp", scope: !7052, file: !7020, line: 256, baseType: !3101, offset: 256)
!7059 = !DIDerivedType(tag: DW_TAG_member, name: "mdio_lock", scope: !7029, file: !7020, line: 320, baseType: !1697, size: 192, offset: 9088)
!7060 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !7029, file: !7020, line: 323, baseType: !6543, size: 64, offset: 9280)
!7061 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !7029, file: !7020, line: 330, baseType: !7062, size: 32, offset: 9344)
!7062 = !DICompositeType(tag: DW_TAG_enumeration_type, scope: !7029, file: !7020, line: 325, baseType: !11, size: 32, elements: !7063)
!7063 = !{!7064, !7065, !7066, !7067}
!7064 = !DIEnumerator(name: "MDIOBUS_ALLOCATED", value: 1, isUnsigned: true)
!7065 = !DIEnumerator(name: "MDIOBUS_REGISTERED", value: 2, isUnsigned: true)
!7066 = !DIEnumerator(name: "MDIOBUS_UNREGISTERED", value: 3, isUnsigned: true)
!7067 = !DIEnumerator(name: "MDIOBUS_RELEASED", value: 4, isUnsigned: true)
!7068 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !7029, file: !7020, line: 333, baseType: !6538, size: 5568, offset: 9408)
!7069 = !DIDerivedType(tag: DW_TAG_member, name: "mdio_map", scope: !7029, file: !7020, line: 336, baseType: !7070, size: 2048, offset: 14976)
!7070 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7071, size: 2048, elements: !853)
!7071 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7023, size: 64)
!7072 = !DIDerivedType(tag: DW_TAG_member, name: "phy_mask", scope: !7029, file: !7020, line: 339, baseType: !1021, size: 32, offset: 17024)
!7073 = !DIDerivedType(tag: DW_TAG_member, name: "phy_ignore_ta_mask", scope: !7029, file: !7020, line: 342, baseType: !1021, size: 32, offset: 17056)
!7074 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !7029, file: !7020, line: 348, baseType: !7075, size: 1024, offset: 17088)
!7075 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5, size: 1024, elements: !853)
!7076 = !DIDerivedType(tag: DW_TAG_member, name: "reset_delay_us", scope: !7029, file: !7020, line: 351, baseType: !5, size: 32, offset: 18112)
!7077 = !DIDerivedType(tag: DW_TAG_member, name: "reset_post_delay_us", scope: !7029, file: !7020, line: 353, baseType: !5, size: 32, offset: 18144)
!7078 = !DIDerivedType(tag: DW_TAG_member, name: "reset_gpiod", scope: !7029, file: !7020, line: 355, baseType: !7079, size: 64, offset: 18176)
!7079 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7080, size: 64)
!7080 = !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_desc", file: !7024, line: 19, flags: DIFlagFwdDecl)
!7081 = !DIDerivedType(tag: DW_TAG_member, name: "probe_capabilities", scope: !7029, file: !7020, line: 363, baseType: !7082, size: 32, offset: 18240)
!7082 = !DICompositeType(tag: DW_TAG_enumeration_type, scope: !7029, file: !7020, line: 358, baseType: !11, size: 32, elements: !7083)
!7083 = !{!7084, !7085, !7086, !7087}
!7084 = !DIEnumerator(name: "MDIOBUS_NO_CAP", value: 0, isUnsigned: true)
!7085 = !DIEnumerator(name: "MDIOBUS_C22", value: 1, isUnsigned: true)
!7086 = !DIEnumerator(name: "MDIOBUS_C45", value: 2, isUnsigned: true)
!7087 = !DIEnumerator(name: "MDIOBUS_C22_C45", value: 3, isUnsigned: true)
!7088 = !DIDerivedType(tag: DW_TAG_member, name: "shared_lock", scope: !7029, file: !7020, line: 366, baseType: !1697, size: 192, offset: 18304)
!7089 = !DIDerivedType(tag: DW_TAG_member, name: "shared", scope: !7029, file: !7020, line: 369, baseType: !7090, size: 2048, offset: 18496)
!7090 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7091, size: 2048, elements: !853)
!7091 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7092, size: 64)
!7092 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "phy_package_shared", file: !7020, line: 271, size: 256, elements: !7093)
!7093 = !{!7094, !7095, !7096, !7097, !7098}
!7094 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !7092, file: !7020, line: 272, baseType: !5, size: 32)
!7095 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !7092, file: !7020, line: 273, baseType: !602, size: 32, offset: 32)
!7096 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !7092, file: !7020, line: 274, baseType: !346, size: 64, offset: 64)
!7097 = !DIDerivedType(tag: DW_TAG_member, name: "priv_size", scope: !7092, file: !7020, line: 275, baseType: !1073, size: 64, offset: 128)
!7098 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !7092, file: !7020, line: 283, baseType: !625, size: 64, offset: 192)
!7099 = !DIDerivedType(tag: DW_TAG_member, name: "modalias", scope: !7023, file: !7024, line: 38, baseType: !4642, size: 256, offset: 5632)
!7100 = !DIDerivedType(tag: DW_TAG_member, name: "bus_match", scope: !7023, file: !7024, line: 40, baseType: !6612, size: 64, offset: 5888)
!7101 = !DIDerivedType(tag: DW_TAG_member, name: "device_free", scope: !7023, file: !7024, line: 41, baseType: !7102, size: 64, offset: 5952)
!7102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7103, size: 64)
!7103 = !DISubroutineType(types: !7104)
!7104 = !{null, !7071}
!7105 = !DIDerivedType(tag: DW_TAG_member, name: "device_remove", scope: !7023, file: !7024, line: 42, baseType: !7102, size: 64, offset: 6016)
!7106 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !7023, file: !7024, line: 45, baseType: !5, size: 32, offset: 6080)
!7107 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !7023, file: !7024, line: 46, baseType: !5, size: 32, offset: 6112)
!7108 = !DIDerivedType(tag: DW_TAG_member, name: "reset_gpio", scope: !7023, file: !7024, line: 47, baseType: !7079, size: 64, offset: 6144)
!7109 = !DIDerivedType(tag: DW_TAG_member, name: "reset_ctrl", scope: !7023, file: !7024, line: 48, baseType: !7110, size: 64, offset: 6208)
!7110 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7111, size: 64)
!7111 = !DICompositeType(tag: DW_TAG_structure_type, name: "reset_control", file: !7024, line: 21, flags: DIFlagFwdDecl)
!7112 = !DIDerivedType(tag: DW_TAG_member, name: "reset_assert_delay", scope: !7023, file: !7024, line: 49, baseType: !11, size: 32, offset: 6272)
!7113 = !DIDerivedType(tag: DW_TAG_member, name: "reset_deassert_delay", scope: !7023, file: !7024, line: 50, baseType: !11, size: 32, offset: 6304)
!7114 = !DIDerivedType(tag: DW_TAG_member, name: "drv", scope: !7019, file: !7020, line: 544, baseType: !7115, size: 64, offset: 6336)
!7115 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7116, size: 64)
!7116 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "phy_driver", file: !7020, line: 694, size: 3840, elements: !7117)
!7117 = !{!7118, !7123, !7124, !7125, !7126, !7129, !7130, !7131, !7135, !7136, !7137, !7138, !7139, !7140, !7141, !7142, !7143, !7144, !7145, !7146, !7157, !7161, !7162, !7166, !7170, !7171, !7175, !7179, !7180, !7184, !7188, !7192, !7193, !7206, !7210, !7211, !7215, !7219, !7224, !7228, !7232, !7233}
!7118 = !DIDerivedType(tag: DW_TAG_member, name: "mdiodrv", scope: !7116, file: !7020, line: 695, baseType: !7119, size: 1216)
!7119 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mdio_driver_common", file: !7024, line: 55, size: 1216, elements: !7120)
!7120 = !{!7121, !7122}
!7121 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !7119, file: !7024, line: 56, baseType: !6616, size: 1152)
!7122 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !7119, file: !7024, line: 57, baseType: !5, size: 32, offset: 1152)
!7123 = !DIDerivedType(tag: DW_TAG_member, name: "phy_id", scope: !7116, file: !7020, line: 696, baseType: !1021, size: 32, offset: 1216)
!7124 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !7116, file: !7020, line: 697, baseType: !1072, size: 64, offset: 1280)
!7125 = !DIDerivedType(tag: DW_TAG_member, name: "phy_id_mask", scope: !7116, file: !7020, line: 698, baseType: !1021, size: 32, offset: 1344)
!7126 = !DIDerivedType(tag: DW_TAG_member, name: "features", scope: !7116, file: !7020, line: 699, baseType: !7127, size: 64, offset: 1408)
!7127 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7128)
!7128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4288, size: 64)
!7129 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !7116, file: !7020, line: 700, baseType: !1021, size: 32, offset: 1472)
!7130 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !7116, file: !7020, line: 701, baseType: !3288, size: 64, offset: 1536)
!7131 = !DIDerivedType(tag: DW_TAG_member, name: "soft_reset", scope: !7116, file: !7020, line: 706, baseType: !7132, size: 64, offset: 1600)
!7132 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7133, size: 64)
!7133 = !DISubroutineType(types: !7134)
!7134 = !{!5, !7018}
!7135 = !DIDerivedType(tag: DW_TAG_member, name: "config_init", scope: !7116, file: !7020, line: 712, baseType: !7132, size: 64, offset: 1664)
!7136 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !7116, file: !7020, line: 718, baseType: !7132, size: 64, offset: 1728)
!7137 = !DIDerivedType(tag: DW_TAG_member, name: "get_features", scope: !7116, file: !7020, line: 724, baseType: !7132, size: 64, offset: 1792)
!7138 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !7116, file: !7020, line: 728, baseType: !7132, size: 64, offset: 1856)
!7139 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !7116, file: !7020, line: 730, baseType: !7132, size: 64, offset: 1920)
!7140 = !DIDerivedType(tag: DW_TAG_member, name: "config_aneg", scope: !7116, file: !7020, line: 738, baseType: !7132, size: 64, offset: 1984)
!7141 = !DIDerivedType(tag: DW_TAG_member, name: "aneg_done", scope: !7116, file: !7020, line: 741, baseType: !7132, size: 64, offset: 2048)
!7142 = !DIDerivedType(tag: DW_TAG_member, name: "read_status", scope: !7116, file: !7020, line: 744, baseType: !7132, size: 64, offset: 2112)
!7143 = !DIDerivedType(tag: DW_TAG_member, name: "ack_interrupt", scope: !7116, file: !7020, line: 747, baseType: !7132, size: 64, offset: 2176)
!7144 = !DIDerivedType(tag: DW_TAG_member, name: "config_intr", scope: !7116, file: !7020, line: 750, baseType: !7132, size: 64, offset: 2240)
!7145 = !DIDerivedType(tag: DW_TAG_member, name: "did_interrupt", scope: !7116, file: !7020, line: 757, baseType: !7132, size: 64, offset: 2304)
!7146 = !DIDerivedType(tag: DW_TAG_member, name: "handle_interrupt", scope: !7116, file: !7020, line: 760, baseType: !7147, size: 64, offset: 2368)
!7147 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7148, size: 64)
!7148 = !DISubroutineType(types: !7149)
!7149 = !{!7150, !7018}
!7150 = !DIDerivedType(tag: DW_TAG_typedef, name: "irqreturn_t", file: !7151, line: 17, baseType: !7152)
!7151 = !DIFile(filename: "./include/linux/irqreturn.h", directory: "/home/lizy2001/genbc/linux")
!7152 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "irqreturn", file: !7151, line: 11, baseType: !11, size: 32, elements: !7153)
!7153 = !{!7154, !7155, !7156}
!7154 = !DIEnumerator(name: "IRQ_NONE", value: 0, isUnsigned: true)
!7155 = !DIEnumerator(name: "IRQ_HANDLED", value: 1, isUnsigned: true)
!7156 = !DIEnumerator(name: "IRQ_WAKE_THREAD", value: 2, isUnsigned: true)
!7157 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !7116, file: !7020, line: 763, baseType: !7158, size: 64, offset: 2432)
!7158 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7159, size: 64)
!7159 = !DISubroutineType(types: !7160)
!7160 = !{null, !7018}
!7161 = !DIDerivedType(tag: DW_TAG_member, name: "match_phy_device", scope: !7116, file: !7020, line: 770, baseType: !7132, size: 64, offset: 2496)
!7162 = !DIDerivedType(tag: DW_TAG_member, name: "set_wol", scope: !7116, file: !7020, line: 778, baseType: !7163, size: 64, offset: 2560)
!7163 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7164, size: 64)
!7164 = !DISubroutineType(types: !7165)
!7165 = !{!5, !7018, !5563}
!7166 = !DIDerivedType(tag: DW_TAG_member, name: "get_wol", scope: !7116, file: !7020, line: 784, baseType: !7167, size: 64, offset: 2624)
!7167 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7168, size: 64)
!7168 = !DISubroutineType(types: !7169)
!7169 = !{null, !7018, !5563}
!7170 = !DIDerivedType(tag: DW_TAG_member, name: "link_change_notify", scope: !7116, file: !7020, line: 794, baseType: !7158, size: 64, offset: 2688)
!7171 = !DIDerivedType(tag: DW_TAG_member, name: "read_mmd", scope: !7116, file: !7020, line: 806, baseType: !7172, size: 64, offset: 2752)
!7172 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7173, size: 64)
!7173 = !DISubroutineType(types: !7174)
!7174 = !{!5, !7018, !5, !615}
!7175 = !DIDerivedType(tag: DW_TAG_member, name: "write_mmd", scope: !7116, file: !7020, line: 818, baseType: !7176, size: 64, offset: 2816)
!7176 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7177, size: 64)
!7177 = !DISubroutineType(types: !7178)
!7178 = !{!5, !7018, !5, !615, !615}
!7179 = !DIDerivedType(tag: DW_TAG_member, name: "read_page", scope: !7116, file: !7020, line: 822, baseType: !7132, size: 64, offset: 2880)
!7180 = !DIDerivedType(tag: DW_TAG_member, name: "write_page", scope: !7116, file: !7020, line: 824, baseType: !7181, size: 64, offset: 2944)
!7181 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7182, size: 64)
!7182 = !DISubroutineType(types: !7183)
!7183 = !{!5, !7018, !5}
!7184 = !DIDerivedType(tag: DW_TAG_member, name: "module_info", scope: !7116, file: !7020, line: 830, baseType: !7185, size: 64, offset: 3008)
!7185 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7186, size: 64)
!7186 = !DISubroutineType(types: !7187)
!7187 = !{!5, !7018, !5928}
!7188 = !DIDerivedType(tag: DW_TAG_member, name: "module_eeprom", scope: !7116, file: !7020, line: 837, baseType: !7189, size: 64, offset: 3072)
!7189 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7190, size: 64)
!7190 = !DISubroutineType(types: !7191)
!7191 = !{!5, !7018, !5607, !827}
!7192 = !DIDerivedType(tag: DW_TAG_member, name: "cable_test_start", scope: !7116, file: !7020, line: 841, baseType: !7132, size: 64, offset: 3136)
!7193 = !DIDerivedType(tag: DW_TAG_member, name: "cable_test_tdr_start", scope: !7116, file: !7020, line: 844, baseType: !7194, size: 64, offset: 3200)
!7194 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7195, size: 64)
!7195 = !DISubroutineType(types: !7196)
!7196 = !{!5, !7018, !7197}
!7197 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7198, size: 64)
!7198 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7199)
!7199 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "phy_tdr_config", file: !7020, line: 663, size: 128, elements: !7200)
!7200 = !{!7201, !7202, !7203, !7204}
!7201 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !7199, file: !7020, line: 664, baseType: !1021, size: 32)
!7202 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !7199, file: !7020, line: 665, baseType: !1021, size: 32, offset: 32)
!7203 = !DIDerivedType(tag: DW_TAG_member, name: "step", scope: !7199, file: !7020, line: 666, baseType: !1021, size: 32, offset: 64)
!7204 = !DIDerivedType(tag: DW_TAG_member, name: "pair", scope: !7199, file: !7020, line: 667, baseType: !7205, size: 8, offset: 96)
!7205 = !DIDerivedType(tag: DW_TAG_typedef, name: "s8", file: !366, line: 16, baseType: !5997)
!7206 = !DIDerivedType(tag: DW_TAG_member, name: "cable_test_get_status", scope: !7116, file: !7020, line: 851, baseType: !7207, size: 64, offset: 3264)
!7207 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7208, size: 64)
!7208 = !DISubroutineType(types: !7209)
!7209 = !{!5, !7018, !2039}
!7210 = !DIDerivedType(tag: DW_TAG_member, name: "get_sset_count", scope: !7116, file: !7020, line: 855, baseType: !7132, size: 64, offset: 3328)
!7211 = !DIDerivedType(tag: DW_TAG_member, name: "get_strings", scope: !7116, file: !7020, line: 857, baseType: !7212, size: 64, offset: 3392)
!7212 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7213, size: 64)
!7213 = !DISubroutineType(types: !7214)
!7214 = !{null, !7018, !827}
!7215 = !DIDerivedType(tag: DW_TAG_member, name: "get_stats", scope: !7116, file: !7020, line: 859, baseType: !7216, size: 64, offset: 3456)
!7216 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7217, size: 64)
!7217 = !DISubroutineType(types: !7218)
!7218 = !{null, !7018, !5716, !5374}
!7219 = !DIDerivedType(tag: DW_TAG_member, name: "get_tunable", scope: !7116, file: !7020, line: 864, baseType: !7220, size: 64, offset: 3520)
!7220 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7221, size: 64)
!7221 = !DISubroutineType(types: !7222)
!7222 = !{!5, !7018, !7223, !625}
!7223 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5960, size: 64)
!7224 = !DIDerivedType(tag: DW_TAG_member, name: "set_tunable", scope: !7116, file: !7020, line: 867, baseType: !7225, size: 64, offset: 3584)
!7225 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7226, size: 64)
!7226 = !DISubroutineType(types: !7227)
!7227 = !{!5, !7018, !7223, !3288}
!7228 = !DIDerivedType(tag: DW_TAG_member, name: "set_loopback", scope: !7116, file: !7020, line: 871, baseType: !7229, size: 64, offset: 3648)
!7229 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7230, size: 64)
!7230 = !DISubroutineType(types: !7231)
!7231 = !{!5, !7018, !805}
!7232 = !DIDerivedType(tag: DW_TAG_member, name: "get_sqi", scope: !7116, file: !7020, line: 873, baseType: !7132, size: 64, offset: 3712)
!7233 = !DIDerivedType(tag: DW_TAG_member, name: "get_sqi_max", scope: !7116, file: !7020, line: 875, baseType: !7132, size: 64, offset: 3776)
!7234 = !DIDerivedType(tag: DW_TAG_member, name: "phy_id", scope: !7019, file: !7020, line: 546, baseType: !1021, size: 32, offset: 6400)
!7235 = !DIDerivedType(tag: DW_TAG_member, name: "c45_ids", scope: !7019, file: !7020, line: 548, baseType: !7236, size: 1088, offset: 6432)
!7236 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "phy_c45_device_ids", file: !7020, line: 461, size: 1088, elements: !7237)
!7237 = !{!7238, !7239, !7240}
!7238 = !DIDerivedType(tag: DW_TAG_member, name: "devices_in_package", scope: !7236, file: !7020, line: 462, baseType: !1021, size: 32)
!7239 = !DIDerivedType(tag: DW_TAG_member, name: "mmds_present", scope: !7236, file: !7020, line: 463, baseType: !1021, size: 32, offset: 32)
!7240 = !DIDerivedType(tag: DW_TAG_member, name: "device_ids", scope: !7236, file: !7020, line: 464, baseType: !4175, size: 1024, offset: 64)
!7241 = !DIDerivedType(tag: DW_TAG_member, name: "is_c45", scope: !7019, file: !7020, line: 549, baseType: !11, size: 1, offset: 7520, flags: DIFlagBitField, extraData: i64 7520)
!7242 = !DIDerivedType(tag: DW_TAG_member, name: "is_internal", scope: !7019, file: !7020, line: 550, baseType: !11, size: 1, offset: 7521, flags: DIFlagBitField, extraData: i64 7520)
!7243 = !DIDerivedType(tag: DW_TAG_member, name: "is_pseudo_fixed_link", scope: !7019, file: !7020, line: 551, baseType: !11, size: 1, offset: 7522, flags: DIFlagBitField, extraData: i64 7520)
!7244 = !DIDerivedType(tag: DW_TAG_member, name: "is_gigabit_capable", scope: !7019, file: !7020, line: 552, baseType: !11, size: 1, offset: 7523, flags: DIFlagBitField, extraData: i64 7520)
!7245 = !DIDerivedType(tag: DW_TAG_member, name: "has_fixups", scope: !7019, file: !7020, line: 553, baseType: !11, size: 1, offset: 7524, flags: DIFlagBitField, extraData: i64 7520)
!7246 = !DIDerivedType(tag: DW_TAG_member, name: "suspended", scope: !7019, file: !7020, line: 554, baseType: !11, size: 1, offset: 7525, flags: DIFlagBitField, extraData: i64 7520)
!7247 = !DIDerivedType(tag: DW_TAG_member, name: "suspended_by_mdio_bus", scope: !7019, file: !7020, line: 555, baseType: !11, size: 1, offset: 7526, flags: DIFlagBitField, extraData: i64 7520)
!7248 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_links", scope: !7019, file: !7020, line: 556, baseType: !11, size: 1, offset: 7527, flags: DIFlagBitField, extraData: i64 7520)
!7249 = !DIDerivedType(tag: DW_TAG_member, name: "loopback_enabled", scope: !7019, file: !7020, line: 557, baseType: !11, size: 1, offset: 7528, flags: DIFlagBitField, extraData: i64 7520)
!7250 = !DIDerivedType(tag: DW_TAG_member, name: "downshifted_rate", scope: !7019, file: !7020, line: 558, baseType: !11, size: 1, offset: 7529, flags: DIFlagBitField, extraData: i64 7520)
!7251 = !DIDerivedType(tag: DW_TAG_member, name: "autoneg", scope: !7019, file: !7020, line: 560, baseType: !11, size: 1, offset: 7530, flags: DIFlagBitField, extraData: i64 7520)
!7252 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !7019, file: !7020, line: 562, baseType: !11, size: 1, offset: 7531, flags: DIFlagBitField, extraData: i64 7520)
!7253 = !DIDerivedType(tag: DW_TAG_member, name: "autoneg_complete", scope: !7019, file: !7020, line: 563, baseType: !11, size: 1, offset: 7532, flags: DIFlagBitField, extraData: i64 7520)
!7254 = !DIDerivedType(tag: DW_TAG_member, name: "interrupts", scope: !7019, file: !7020, line: 566, baseType: !11, size: 1, offset: 7533, flags: DIFlagBitField, extraData: i64 7520)
!7255 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !7019, file: !7020, line: 568, baseType: !7256, size: 32, offset: 7552)
!7256 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "phy_state", file: !7020, line: 443, baseType: !11, size: 32, elements: !7257)
!7257 = !{!7258, !7259, !7260, !7261, !7262, !7263, !7264}
!7258 = !DIEnumerator(name: "PHY_DOWN", value: 0, isUnsigned: true)
!7259 = !DIEnumerator(name: "PHY_READY", value: 1, isUnsigned: true)
!7260 = !DIEnumerator(name: "PHY_HALTED", value: 2, isUnsigned: true)
!7261 = !DIEnumerator(name: "PHY_UP", value: 3, isUnsigned: true)
!7262 = !DIEnumerator(name: "PHY_RUNNING", value: 4, isUnsigned: true)
!7263 = !DIEnumerator(name: "PHY_NOLINK", value: 5, isUnsigned: true)
!7264 = !DIEnumerator(name: "PHY_CABLETEST", value: 6, isUnsigned: true)
!7265 = !DIDerivedType(tag: DW_TAG_member, name: "dev_flags", scope: !7019, file: !7020, line: 570, baseType: !1021, size: 32, offset: 7584)
!7266 = !DIDerivedType(tag: DW_TAG_member, name: "interface", scope: !7019, file: !7020, line: 572, baseType: !7267, size: 32, offset: 7616)
!7267 = !DIDerivedType(tag: DW_TAG_typedef, name: "phy_interface_t", file: !7020, line: 148, baseType: !7268)
!7268 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !7020, line: 118, baseType: !11, size: 32, elements: !7269)
!7269 = !{!7270, !7271, !7272, !7273, !7274, !7275, !7276, !7277, !7278, !7279, !7280, !7281, !7282, !7283, !7284, !7285, !7286, !7287, !7288, !7289, !7290, !7291, !7292, !7293, !7294, !7295, !7296}
!7270 = !DIEnumerator(name: "PHY_INTERFACE_MODE_NA", value: 0, isUnsigned: true)
!7271 = !DIEnumerator(name: "PHY_INTERFACE_MODE_INTERNAL", value: 1, isUnsigned: true)
!7272 = !DIEnumerator(name: "PHY_INTERFACE_MODE_MII", value: 2, isUnsigned: true)
!7273 = !DIEnumerator(name: "PHY_INTERFACE_MODE_GMII", value: 3, isUnsigned: true)
!7274 = !DIEnumerator(name: "PHY_INTERFACE_MODE_SGMII", value: 4, isUnsigned: true)
!7275 = !DIEnumerator(name: "PHY_INTERFACE_MODE_TBI", value: 5, isUnsigned: true)
!7276 = !DIEnumerator(name: "PHY_INTERFACE_MODE_REVMII", value: 6, isUnsigned: true)
!7277 = !DIEnumerator(name: "PHY_INTERFACE_MODE_RMII", value: 7, isUnsigned: true)
!7278 = !DIEnumerator(name: "PHY_INTERFACE_MODE_RGMII", value: 8, isUnsigned: true)
!7279 = !DIEnumerator(name: "PHY_INTERFACE_MODE_RGMII_ID", value: 9, isUnsigned: true)
!7280 = !DIEnumerator(name: "PHY_INTERFACE_MODE_RGMII_RXID", value: 10, isUnsigned: true)
!7281 = !DIEnumerator(name: "PHY_INTERFACE_MODE_RGMII_TXID", value: 11, isUnsigned: true)
!7282 = !DIEnumerator(name: "PHY_INTERFACE_MODE_RTBI", value: 12, isUnsigned: true)
!7283 = !DIEnumerator(name: "PHY_INTERFACE_MODE_SMII", value: 13, isUnsigned: true)
!7284 = !DIEnumerator(name: "PHY_INTERFACE_MODE_XGMII", value: 14, isUnsigned: true)
!7285 = !DIEnumerator(name: "PHY_INTERFACE_MODE_XLGMII", value: 15, isUnsigned: true)
!7286 = !DIEnumerator(name: "PHY_INTERFACE_MODE_MOCA", value: 16, isUnsigned: true)
!7287 = !DIEnumerator(name: "PHY_INTERFACE_MODE_QSGMII", value: 17, isUnsigned: true)
!7288 = !DIEnumerator(name: "PHY_INTERFACE_MODE_TRGMII", value: 18, isUnsigned: true)
!7289 = !DIEnumerator(name: "PHY_INTERFACE_MODE_1000BASEX", value: 19, isUnsigned: true)
!7290 = !DIEnumerator(name: "PHY_INTERFACE_MODE_2500BASEX", value: 20, isUnsigned: true)
!7291 = !DIEnumerator(name: "PHY_INTERFACE_MODE_RXAUI", value: 21, isUnsigned: true)
!7292 = !DIEnumerator(name: "PHY_INTERFACE_MODE_XAUI", value: 22, isUnsigned: true)
!7293 = !DIEnumerator(name: "PHY_INTERFACE_MODE_10GBASER", value: 23, isUnsigned: true)
!7294 = !DIEnumerator(name: "PHY_INTERFACE_MODE_USXGMII", value: 24, isUnsigned: true)
!7295 = !DIEnumerator(name: "PHY_INTERFACE_MODE_10GKR", value: 25, isUnsigned: true)
!7296 = !DIEnumerator(name: "PHY_INTERFACE_MODE_MAX", value: 26, isUnsigned: true)
!7297 = !DIDerivedType(tag: DW_TAG_member, name: "speed", scope: !7019, file: !7020, line: 578, baseType: !5, size: 32, offset: 7648)
!7298 = !DIDerivedType(tag: DW_TAG_member, name: "duplex", scope: !7019, file: !7020, line: 579, baseType: !5, size: 32, offset: 7680)
!7299 = !DIDerivedType(tag: DW_TAG_member, name: "pause", scope: !7019, file: !7020, line: 580, baseType: !5, size: 32, offset: 7712)
!7300 = !DIDerivedType(tag: DW_TAG_member, name: "asym_pause", scope: !7019, file: !7020, line: 581, baseType: !5, size: 32, offset: 7744)
!7301 = !DIDerivedType(tag: DW_TAG_member, name: "master_slave_get", scope: !7019, file: !7020, line: 582, baseType: !828, size: 8, offset: 7776)
!7302 = !DIDerivedType(tag: DW_TAG_member, name: "master_slave_set", scope: !7019, file: !7020, line: 583, baseType: !828, size: 8, offset: 7784)
!7303 = !DIDerivedType(tag: DW_TAG_member, name: "master_slave_state", scope: !7019, file: !7020, line: 584, baseType: !828, size: 8, offset: 7792)
!7304 = !DIDerivedType(tag: DW_TAG_member, name: "supported", scope: !7019, file: !7020, line: 588, baseType: !6013, size: 128, offset: 7808)
!7305 = !DIDerivedType(tag: DW_TAG_member, name: "advertising", scope: !7019, file: !7020, line: 589, baseType: !6013, size: 128, offset: 7936)
!7306 = !DIDerivedType(tag: DW_TAG_member, name: "lp_advertising", scope: !7019, file: !7020, line: 590, baseType: !6013, size: 128, offset: 8064)
!7307 = !DIDerivedType(tag: DW_TAG_member, name: "adv_old", scope: !7019, file: !7020, line: 592, baseType: !6013, size: 128, offset: 8192)
!7308 = !DIDerivedType(tag: DW_TAG_member, name: "eee_broken_modes", scope: !7019, file: !7020, line: 595, baseType: !1021, size: 32, offset: 8320)
!7309 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !7019, file: !7020, line: 609, baseType: !5, size: 32, offset: 8352)
!7310 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !7019, file: !7020, line: 613, baseType: !625, size: 64, offset: 8384)
!7311 = !DIDerivedType(tag: DW_TAG_member, name: "shared", scope: !7019, file: !7020, line: 617, baseType: !7091, size: 64, offset: 8448)
!7312 = !DIDerivedType(tag: DW_TAG_member, name: "skb", scope: !7019, file: !7020, line: 620, baseType: !449, size: 64, offset: 8512)
!7313 = !DIDerivedType(tag: DW_TAG_member, name: "ehdr", scope: !7019, file: !7020, line: 621, baseType: !625, size: 64, offset: 8576)
!7314 = !DIDerivedType(tag: DW_TAG_member, name: "nest", scope: !7019, file: !7020, line: 622, baseType: !888, size: 64, offset: 8640)
!7315 = !DIDerivedType(tag: DW_TAG_member, name: "state_queue", scope: !7019, file: !7020, line: 625, baseType: !7316, size: 704, offset: 8704)
!7316 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "delayed_work", file: !2861, line: 115, size: 704, elements: !7317)
!7317 = !{!7318, !7319, !7320, !7321}
!7318 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !7316, file: !2861, line: 116, baseType: !2860, size: 256)
!7319 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !7316, file: !2861, line: 117, baseType: !3265, size: 320, offset: 256)
!7320 = !DIDerivedType(tag: DW_TAG_member, name: "wq", scope: !7316, file: !2861, line: 120, baseType: !4734, size: 64, offset: 576)
!7321 = !DIDerivedType(tag: DW_TAG_member, name: "cpu", scope: !7316, file: !2861, line: 121, baseType: !5, size: 32, offset: 640)
!7322 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !7019, file: !7020, line: 627, baseType: !1697, size: 192, offset: 9408)
!7323 = !DIDerivedType(tag: DW_TAG_member, name: "sfp_bus_attached", scope: !7019, file: !7020, line: 630, baseType: !805, size: 8, offset: 9600)
!7324 = !DIDerivedType(tag: DW_TAG_member, name: "sfp_bus", scope: !7019, file: !7020, line: 631, baseType: !7325, size: 64, offset: 9664)
!7325 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7326, size: 64)
!7326 = !DICompositeType(tag: DW_TAG_structure_type, name: "sfp_bus", file: !7020, line: 238, flags: DIFlagFwdDecl)
!7327 = !DIDerivedType(tag: DW_TAG_member, name: "phylink", scope: !7019, file: !7020, line: 632, baseType: !7328, size: 64, offset: 9728)
!7328 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7329, size: 64)
!7329 = !DICompositeType(tag: DW_TAG_structure_type, name: "phylink", file: !7020, line: 237, flags: DIFlagFwdDecl)
!7330 = !DIDerivedType(tag: DW_TAG_member, name: "attached_dev", scope: !7019, file: !7020, line: 633, baseType: !324, size: 64, offset: 9792)
!7331 = !DIDerivedType(tag: DW_TAG_member, name: "mii_ts", scope: !7019, file: !7020, line: 634, baseType: !7332, size: 64, offset: 9856)
!7332 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7333, size: 64)
!7333 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mii_timestamper", file: !7334, line: 46, size: 384, elements: !7335)
!7334 = !DIFile(filename: "./include/linux/mii_timestamper.h", directory: "/home/lizy2001/genbc/linux")
!7335 = !{!7336, !7340, !7344, !7348, !7352, !7356}
!7336 = !DIDerivedType(tag: DW_TAG_member, name: "rxtstamp", scope: !7333, file: !7334, line: 47, baseType: !7337, size: 64)
!7337 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7338, size: 64)
!7338 = !DISubroutineType(types: !7339)
!7339 = !{!805, !7332, !449, !5}
!7340 = !DIDerivedType(tag: DW_TAG_member, name: "txtstamp", scope: !7333, file: !7334, line: 50, baseType: !7341, size: 64, offset: 64)
!7341 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7342, size: 64)
!7342 = !DISubroutineType(types: !7343)
!7343 = !{null, !7332, !449, !5}
!7344 = !DIDerivedType(tag: DW_TAG_member, name: "hwtstamp", scope: !7333, file: !7334, line: 53, baseType: !7345, size: 64, offset: 128)
!7345 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7346, size: 64)
!7346 = !DISubroutineType(types: !7347)
!7347 = !{!5, !7332, !631}
!7348 = !DIDerivedType(tag: DW_TAG_member, name: "link_state", scope: !7333, file: !7334, line: 56, baseType: !7349, size: 64, offset: 192)
!7349 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7350, size: 64)
!7350 = !DISubroutineType(types: !7351)
!7351 = !{null, !7332, !7018}
!7352 = !DIDerivedType(tag: DW_TAG_member, name: "ts_info", scope: !7333, file: !7334, line: 59, baseType: !7353, size: 64, offset: 256)
!7353 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7354, size: 64)
!7354 = !DISubroutineType(types: !7355)
!7355 = !{!5, !7332, !5913}
!7356 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !7333, file: !7334, line: 62, baseType: !6543, size: 64, offset: 320)
!7357 = !DIDerivedType(tag: DW_TAG_member, name: "mdix", scope: !7019, file: !7020, line: 636, baseType: !828, size: 8, offset: 9920)
!7358 = !DIDerivedType(tag: DW_TAG_member, name: "mdix_ctrl", scope: !7019, file: !7020, line: 637, baseType: !828, size: 8, offset: 9928)
!7359 = !DIDerivedType(tag: DW_TAG_member, name: "phy_link_change", scope: !7019, file: !7020, line: 639, baseType: !7360, size: 64, offset: 9984)
!7360 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7361, size: 64)
!7361 = !DISubroutineType(types: !7362)
!7362 = !{null, !7018, !805}
!7363 = !DIDerivedType(tag: DW_TAG_member, name: "adjust_link", scope: !7019, file: !7020, line: 640, baseType: !439, size: 64, offset: 10048)
!7364 = !DIDerivedType(tag: DW_TAG_member, name: "sfp_bus", scope: !298, file: !4, line: 2150, baseType: !7325, size: 64, offset: 14912)
!7365 = !DIDerivedType(tag: DW_TAG_member, name: "qdisc_tx_busylock", scope: !298, file: !4, line: 2151, baseType: !7366, size: 64, offset: 14976)
!7366 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1617, size: 64)
!7367 = !DIDerivedType(tag: DW_TAG_member, name: "qdisc_running_key", scope: !298, file: !4, line: 2152, baseType: !7366, size: 64, offset: 15040)
!7368 = !DIDerivedType(tag: DW_TAG_member, name: "proto_down", scope: !298, file: !4, line: 2153, baseType: !805, size: 8, offset: 15104)
!7369 = !DIDerivedType(tag: DW_TAG_member, name: "wol_enabled", scope: !298, file: !4, line: 2154, baseType: !11, size: 1, offset: 15112, flags: DIFlagBitField, extraData: i64 15112)
!7370 = !DIDerivedType(tag: DW_TAG_member, name: "net_notifier_list", scope: !298, file: !4, line: 2156, baseType: !318, size: 128, offset: 15168)
!7371 = !DIDerivedType(tag: DW_TAG_member, name: "udp_tunnel_nic_info", scope: !298, file: !4, line: 2162, baseType: !7372, size: 64, offset: 15296)
!7372 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7373, size: 64)
!7373 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7374)
!7374 = !DICompositeType(tag: DW_TAG_structure_type, name: "udp_tunnel_nic_info", file: !4, line: 68, flags: DIFlagFwdDecl)
!7375 = !DIDerivedType(tag: DW_TAG_member, name: "udp_tunnel_nic", scope: !298, file: !4, line: 2163, baseType: !7376, size: 64, offset: 15360)
!7376 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7377, size: 64)
!7377 = !DICompositeType(tag: DW_TAG_structure_type, name: "udp_tunnel_nic", file: !4, line: 69, flags: DIFlagFwdDecl)
!7378 = !DIDerivedType(tag: DW_TAG_member, name: "xdp_state", scope: !298, file: !4, line: 2166, baseType: !7379, size: 384, offset: 15424)
!7379 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7380, size: 384, elements: !1624)
!7380 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_xdp_entity", file: !4, line: 889, size: 128, elements: !7381)
!7381 = !{!7382, !7383}
!7382 = !DIDerivedType(tag: DW_TAG_member, name: "prog", scope: !7380, file: !4, line: 890, baseType: !1122, size: 64)
!7383 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !7380, file: !4, line: 891, baseType: !7384, size: 64, offset: 64)
!7384 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7385, size: 64)
!7385 = !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_xdp_link", file: !4, line: 880, flags: DIFlagFwdDecl)
!7386 = !{!7387, !7388, !7389, !7390, !7391, !7392}
!7387 = !DIEnumerator(name: "NETREG_UNINITIALIZED", value: 0, isUnsigned: true)
!7388 = !DIEnumerator(name: "NETREG_REGISTERED", value: 1, isUnsigned: true)
!7389 = !DIEnumerator(name: "NETREG_UNREGISTERING", value: 2, isUnsigned: true)
!7390 = !DIEnumerator(name: "NETREG_UNREGISTERED", value: 3, isUnsigned: true)
!7391 = !DIEnumerator(name: "NETREG_RELEASED", value: 4, isUnsigned: true)
!7392 = !DIEnumerator(name: "NETREG_DUMMY", value: 5, isUnsigned: true)
!7393 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "pkt_hash_types", file: !451, line: 1238, baseType: !11, size: 32, elements: !7394)
!7394 = !{!7395, !7396, !7397, !7398}
!7395 = !DIEnumerator(name: "PKT_HASH_TYPE_NONE", value: 0, isUnsigned: true)
!7396 = !DIEnumerator(name: "PKT_HASH_TYPE_L2", value: 1, isUnsigned: true)
!7397 = !DIEnumerator(name: "PKT_HASH_TYPE_L3", value: 2, isUnsigned: true)
!7398 = !DIEnumerator(name: "PKT_HASH_TYPE_L4", value: 3, isUnsigned: true)
!7399 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "xlgmac_int", file: !7400, line: 134, baseType: !11, size: 32, elements: !7401)
!7400 = !DIFile(filename: "drivers/net/ethernet/synopsys/dwc-xlgmac.h", directory: "/home/lizy2001/genbc/linux")
!7401 = !{!7402, !7403, !7404, !7405, !7406, !7407, !7408, !7409, !7410}
!7402 = !DIEnumerator(name: "XLGMAC_INT_DMA_CH_SR_TI", value: 0, isUnsigned: true)
!7403 = !DIEnumerator(name: "XLGMAC_INT_DMA_CH_SR_TPS", value: 1, isUnsigned: true)
!7404 = !DIEnumerator(name: "XLGMAC_INT_DMA_CH_SR_TBU", value: 2, isUnsigned: true)
!7405 = !DIEnumerator(name: "XLGMAC_INT_DMA_CH_SR_RI", value: 3, isUnsigned: true)
!7406 = !DIEnumerator(name: "XLGMAC_INT_DMA_CH_SR_RBU", value: 4, isUnsigned: true)
!7407 = !DIEnumerator(name: "XLGMAC_INT_DMA_CH_SR_RPS", value: 5, isUnsigned: true)
!7408 = !DIEnumerator(name: "XLGMAC_INT_DMA_CH_SR_TI_RI", value: 6, isUnsigned: true)
!7409 = !DIEnumerator(name: "XLGMAC_INT_DMA_CH_SR_FBE", value: 7, isUnsigned: true)
!7410 = !DIEnumerator(name: "XLGMAC_INT_DMA_ALL", value: 8, isUnsigned: true)
!7411 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !364, line: 14, baseType: !11, size: 32, elements: !7412)
!7412 = !{!7413, !7414, !7415, !7416, !7417, !7418, !7419, !7420, !7421, !7422, !7423, !7424, !7425, !7426, !7427, !7428, !7429, !7430, !7431, !7432, !7433, !7434, !7435, !7436, !7437, !7438, !7439, !7440, !7441, !7442, !7443, !7444, !7445, !7446, !7447, !7448, !7449, !7450, !7451, !7452, !7453, !7454, !7455, !7456, !7457, !7458, !7459, !7460, !7461, !7462, !7463, !7464, !7465, !7466, !7467, !7468, !7469, !7470, !7471, !7472, !7473, !7474}
!7413 = !DIEnumerator(name: "NETIF_F_SG_BIT", value: 0, isUnsigned: true)
!7414 = !DIEnumerator(name: "NETIF_F_IP_CSUM_BIT", value: 1, isUnsigned: true)
!7415 = !DIEnumerator(name: "__UNUSED_NETIF_F_1", value: 2, isUnsigned: true)
!7416 = !DIEnumerator(name: "NETIF_F_HW_CSUM_BIT", value: 3, isUnsigned: true)
!7417 = !DIEnumerator(name: "NETIF_F_IPV6_CSUM_BIT", value: 4, isUnsigned: true)
!7418 = !DIEnumerator(name: "NETIF_F_HIGHDMA_BIT", value: 5, isUnsigned: true)
!7419 = !DIEnumerator(name: "NETIF_F_FRAGLIST_BIT", value: 6, isUnsigned: true)
!7420 = !DIEnumerator(name: "NETIF_F_HW_VLAN_CTAG_TX_BIT", value: 7, isUnsigned: true)
!7421 = !DIEnumerator(name: "NETIF_F_HW_VLAN_CTAG_RX_BIT", value: 8, isUnsigned: true)
!7422 = !DIEnumerator(name: "NETIF_F_HW_VLAN_CTAG_FILTER_BIT", value: 9, isUnsigned: true)
!7423 = !DIEnumerator(name: "NETIF_F_VLAN_CHALLENGED_BIT", value: 10, isUnsigned: true)
!7424 = !DIEnumerator(name: "NETIF_F_GSO_BIT", value: 11, isUnsigned: true)
!7425 = !DIEnumerator(name: "NETIF_F_LLTX_BIT", value: 12, isUnsigned: true)
!7426 = !DIEnumerator(name: "NETIF_F_NETNS_LOCAL_BIT", value: 13, isUnsigned: true)
!7427 = !DIEnumerator(name: "NETIF_F_GRO_BIT", value: 14, isUnsigned: true)
!7428 = !DIEnumerator(name: "NETIF_F_LRO_BIT", value: 15, isUnsigned: true)
!7429 = !DIEnumerator(name: "NETIF_F_GSO_SHIFT", value: 16, isUnsigned: true)
!7430 = !DIEnumerator(name: "NETIF_F_TSO_BIT", value: 16, isUnsigned: true)
!7431 = !DIEnumerator(name: "NETIF_F_GSO_ROBUST_BIT", value: 17, isUnsigned: true)
!7432 = !DIEnumerator(name: "NETIF_F_TSO_ECN_BIT", value: 18, isUnsigned: true)
!7433 = !DIEnumerator(name: "NETIF_F_TSO_MANGLEID_BIT", value: 19, isUnsigned: true)
!7434 = !DIEnumerator(name: "NETIF_F_TSO6_BIT", value: 20, isUnsigned: true)
!7435 = !DIEnumerator(name: "NETIF_F_FSO_BIT", value: 21, isUnsigned: true)
!7436 = !DIEnumerator(name: "NETIF_F_GSO_GRE_BIT", value: 22, isUnsigned: true)
!7437 = !DIEnumerator(name: "NETIF_F_GSO_GRE_CSUM_BIT", value: 23, isUnsigned: true)
!7438 = !DIEnumerator(name: "NETIF_F_GSO_IPXIP4_BIT", value: 24, isUnsigned: true)
!7439 = !DIEnumerator(name: "NETIF_F_GSO_IPXIP6_BIT", value: 25, isUnsigned: true)
!7440 = !DIEnumerator(name: "NETIF_F_GSO_UDP_TUNNEL_BIT", value: 26, isUnsigned: true)
!7441 = !DIEnumerator(name: "NETIF_F_GSO_UDP_TUNNEL_CSUM_BIT", value: 27, isUnsigned: true)
!7442 = !DIEnumerator(name: "NETIF_F_GSO_PARTIAL_BIT", value: 28, isUnsigned: true)
!7443 = !DIEnumerator(name: "NETIF_F_GSO_TUNNEL_REMCSUM_BIT", value: 29, isUnsigned: true)
!7444 = !DIEnumerator(name: "NETIF_F_GSO_SCTP_BIT", value: 30, isUnsigned: true)
!7445 = !DIEnumerator(name: "NETIF_F_GSO_ESP_BIT", value: 31, isUnsigned: true)
!7446 = !DIEnumerator(name: "NETIF_F_GSO_UDP_BIT", value: 32, isUnsigned: true)
!7447 = !DIEnumerator(name: "NETIF_F_GSO_UDP_L4_BIT", value: 33, isUnsigned: true)
!7448 = !DIEnumerator(name: "NETIF_F_GSO_FRAGLIST_BIT", value: 34, isUnsigned: true)
!7449 = !DIEnumerator(name: "NETIF_F_GSO_LAST", value: 34, isUnsigned: true)
!7450 = !DIEnumerator(name: "NETIF_F_FCOE_CRC_BIT", value: 35, isUnsigned: true)
!7451 = !DIEnumerator(name: "NETIF_F_SCTP_CRC_BIT", value: 36, isUnsigned: true)
!7452 = !DIEnumerator(name: "NETIF_F_FCOE_MTU_BIT", value: 37, isUnsigned: true)
!7453 = !DIEnumerator(name: "NETIF_F_NTUPLE_BIT", value: 38, isUnsigned: true)
!7454 = !DIEnumerator(name: "NETIF_F_RXHASH_BIT", value: 39, isUnsigned: true)
!7455 = !DIEnumerator(name: "NETIF_F_RXCSUM_BIT", value: 40, isUnsigned: true)
!7456 = !DIEnumerator(name: "NETIF_F_NOCACHE_COPY_BIT", value: 41, isUnsigned: true)
!7457 = !DIEnumerator(name: "NETIF_F_LOOPBACK_BIT", value: 42, isUnsigned: true)
!7458 = !DIEnumerator(name: "NETIF_F_RXFCS_BIT", value: 43, isUnsigned: true)
!7459 = !DIEnumerator(name: "NETIF_F_RXALL_BIT", value: 44, isUnsigned: true)
!7460 = !DIEnumerator(name: "NETIF_F_HW_VLAN_STAG_TX_BIT", value: 45, isUnsigned: true)
!7461 = !DIEnumerator(name: "NETIF_F_HW_VLAN_STAG_RX_BIT", value: 46, isUnsigned: true)
!7462 = !DIEnumerator(name: "NETIF_F_HW_VLAN_STAG_FILTER_BIT", value: 47, isUnsigned: true)
!7463 = !DIEnumerator(name: "NETIF_F_HW_L2FW_DOFFLOAD_BIT", value: 48, isUnsigned: true)
!7464 = !DIEnumerator(name: "NETIF_F_HW_TC_BIT", value: 49, isUnsigned: true)
!7465 = !DIEnumerator(name: "NETIF_F_HW_ESP_BIT", value: 50, isUnsigned: true)
!7466 = !DIEnumerator(name: "NETIF_F_HW_ESP_TX_CSUM_BIT", value: 51, isUnsigned: true)
!7467 = !DIEnumerator(name: "NETIF_F_RX_UDP_TUNNEL_PORT_BIT", value: 52, isUnsigned: true)
!7468 = !DIEnumerator(name: "NETIF_F_HW_TLS_TX_BIT", value: 53, isUnsigned: true)
!7469 = !DIEnumerator(name: "NETIF_F_HW_TLS_RX_BIT", value: 54, isUnsigned: true)
!7470 = !DIEnumerator(name: "NETIF_F_GRO_HW_BIT", value: 55, isUnsigned: true)
!7471 = !DIEnumerator(name: "NETIF_F_HW_TLS_RECORD_BIT", value: 56, isUnsigned: true)
!7472 = !DIEnumerator(name: "NETIF_F_GRO_FRAGLIST_BIT", value: 57, isUnsigned: true)
!7473 = !DIEnumerator(name: "NETIF_F_HW_MACSEC_BIT", value: 58, isUnsigned: true)
!7474 = !DIEnumerator(name: "NETDEV_FEATURE_COUNT", value: 59, isUnsigned: true)
!7475 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !4, line: 4102, baseType: !11, size: 32, elements: !7476)
!7476 = !{!7477, !7478, !7479, !7480, !7481, !7482, !7483, !7484, !7485, !7486, !7487, !7488, !7489, !7490, !7491, !7492}
!7477 = !DIEnumerator(name: "NETIF_MSG_DRV_BIT", value: 0, isUnsigned: true)
!7478 = !DIEnumerator(name: "NETIF_MSG_PROBE_BIT", value: 1, isUnsigned: true)
!7479 = !DIEnumerator(name: "NETIF_MSG_LINK_BIT", value: 2, isUnsigned: true)
!7480 = !DIEnumerator(name: "NETIF_MSG_TIMER_BIT", value: 3, isUnsigned: true)
!7481 = !DIEnumerator(name: "NETIF_MSG_IFDOWN_BIT", value: 4, isUnsigned: true)
!7482 = !DIEnumerator(name: "NETIF_MSG_IFUP_BIT", value: 5, isUnsigned: true)
!7483 = !DIEnumerator(name: "NETIF_MSG_RX_ERR_BIT", value: 6, isUnsigned: true)
!7484 = !DIEnumerator(name: "NETIF_MSG_TX_ERR_BIT", value: 7, isUnsigned: true)
!7485 = !DIEnumerator(name: "NETIF_MSG_TX_QUEUED_BIT", value: 8, isUnsigned: true)
!7486 = !DIEnumerator(name: "NETIF_MSG_INTR_BIT", value: 9, isUnsigned: true)
!7487 = !DIEnumerator(name: "NETIF_MSG_TX_DONE_BIT", value: 10, isUnsigned: true)
!7488 = !DIEnumerator(name: "NETIF_MSG_RX_STATUS_BIT", value: 11, isUnsigned: true)
!7489 = !DIEnumerator(name: "NETIF_MSG_PKTDATA_BIT", value: 12, isUnsigned: true)
!7490 = !DIEnumerator(name: "NETIF_MSG_HW_BIT", value: 13, isUnsigned: true)
!7491 = !DIEnumerator(name: "NETIF_MSG_WOL_BIT", value: 14, isUnsigned: true)
!7492 = !DIEnumerator(name: "NETIF_MSG_CLASS_COUNT", value: 15, isUnsigned: true)
!7493 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "netdev_queue_state_t", file: !4, line: 558, baseType: !11, size: 32, elements: !7494)
!7494 = !{!7495, !7496, !7497}
!7495 = !DIEnumerator(name: "__QUEUE_STATE_DRV_XOFF", value: 0, isUnsigned: true)
!7496 = !DIEnumerator(name: "__QUEUE_STATE_STACK_XOFF", value: 1, isUnsigned: true)
!7497 = !DIEnumerator(name: "__QUEUE_STATE_FROZEN", value: 2, isUnsigned: true)
!7498 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "net_device_flags", file: !633, line: 82, baseType: !11, size: 32, elements: !7499)
!7499 = !{!7500, !7501, !7502, !7503, !7504, !7505, !7506, !7507, !7508, !7509, !7510, !7511, !7512, !7513, !7514, !7515, !7516, !7517, !7518}
!7500 = !DIEnumerator(name: "IFF_UP", value: 1, isUnsigned: true)
!7501 = !DIEnumerator(name: "IFF_BROADCAST", value: 2, isUnsigned: true)
!7502 = !DIEnumerator(name: "IFF_DEBUG", value: 4, isUnsigned: true)
!7503 = !DIEnumerator(name: "IFF_LOOPBACK", value: 8, isUnsigned: true)
!7504 = !DIEnumerator(name: "IFF_POINTOPOINT", value: 16, isUnsigned: true)
!7505 = !DIEnumerator(name: "IFF_NOTRAILERS", value: 32, isUnsigned: true)
!7506 = !DIEnumerator(name: "IFF_RUNNING", value: 64, isUnsigned: true)
!7507 = !DIEnumerator(name: "IFF_NOARP", value: 128, isUnsigned: true)
!7508 = !DIEnumerator(name: "IFF_PROMISC", value: 256, isUnsigned: true)
!7509 = !DIEnumerator(name: "IFF_ALLMULTI", value: 512, isUnsigned: true)
!7510 = !DIEnumerator(name: "IFF_MASTER", value: 1024, isUnsigned: true)
!7511 = !DIEnumerator(name: "IFF_SLAVE", value: 2048, isUnsigned: true)
!7512 = !DIEnumerator(name: "IFF_MULTICAST", value: 4096, isUnsigned: true)
!7513 = !DIEnumerator(name: "IFF_PORTSEL", value: 8192, isUnsigned: true)
!7514 = !DIEnumerator(name: "IFF_AUTOMEDIA", value: 16384, isUnsigned: true)
!7515 = !DIEnumerator(name: "IFF_DYNAMIC", value: 32768, isUnsigned: true)
!7516 = !DIEnumerator(name: "IFF_LOWER_UP", value: 65536, isUnsigned: true)
!7517 = !DIEnumerator(name: "IFF_DORMANT", value: 131072, isUnsigned: true)
!7518 = !DIEnumerator(name: "IFF_ECHO", value: 262144, isUnsigned: true)
!7519 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !7520, line: 10, baseType: !11, size: 32, elements: !7521)
!7520 = !DIFile(filename: "./include/linux/stddef.h", directory: "/home/lizy2001/genbc/linux")
!7521 = !{!7522, !7523}
!7522 = !DIEnumerator(name: "false", value: 0, isUnsigned: true)
!7523 = !DIEnumerator(name: "true", value: 1, isUnsigned: true)
!7524 = !{!5, !7525, !363, !11, !1021, !527, !7527, !1032, !827, !625, !828, !346, !7528, !7539, !509, !598, !365, !4625}
!7525 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7526, size: 64)
!7526 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !11)
!7527 = !DIDerivedType(tag: DW_TAG_typedef, name: "__le32", file: !559, line: 31, baseType: !527)
!7528 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7529, size: 64)
!7529 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netdev_hw_addr", file: !4, line: 209, size: 640, elements: !7530)
!7530 = !{!7531, !7532, !7533, !7534, !7535, !7536, !7537, !7538}
!7531 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !7529, file: !4, line: 210, baseType: !318, size: 128)
!7532 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !7529, file: !4, line: 211, baseType: !1065, size: 256, offset: 128)
!7533 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !7529, file: !4, line: 212, baseType: !516, size: 8, offset: 384)
!7534 = !DIDerivedType(tag: DW_TAG_member, name: "global_use", scope: !7529, file: !4, line: 217, baseType: !805, size: 8, offset: 392)
!7535 = !DIDerivedType(tag: DW_TAG_member, name: "sync_cnt", scope: !7529, file: !4, line: 218, baseType: !5, size: 32, offset: 416)
!7536 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !7529, file: !4, line: 219, baseType: !5, size: 32, offset: 448)
!7537 = !DIDerivedType(tag: DW_TAG_member, name: "synced", scope: !7529, file: !4, line: 220, baseType: !5, size: 32, offset: 480)
!7538 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !7529, file: !4, line: 221, baseType: !333, size: 128, align: 64, offset: 512)
!7539 = !DIDerivedType(tag: DW_TAG_typedef, name: "__le16", file: !559, line: 29, baseType: !509)
!7540 = !{i32 7, !"Dwarf Version", i32 4}
!7541 = !{i32 2, !"Debug Info Version", i32 3}
!7542 = !{i32 1, !"wchar_size", i32 2}
!7543 = !{i32 1, !"Code Model", i32 2}
!7544 = !{!"clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)"}
!7545 = distinct !DISubprogram(name: "xlgmac_init_hw_ops", scope: !1, file: !1, line: 3065, type: !7546, scopeLine: 3066, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1619)
!7546 = !DISubroutineType(types: !7547)
!7547 = !{null, !7548}
!7548 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7549, size: 64)
!7549 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xlgmac_hw_ops", file: !7400, line: 395, size: 3456, elements: !7550)
!7550 = !{!7551, !7853, !7854, !7858, !7859, !7860, !7861, !7862, !7866, !7867, !7871, !7875, !7879, !7880, !7881, !7882, !7883, !7884, !7885, !7886, !7887, !7888, !7892, !7896, !7897, !7898, !7902, !7903, !7904, !7905, !7906, !7907, !7908, !7909, !7910, !7911, !7915, !7916, !7920, !7921, !7922, !7923, !7924, !7925, !7926, !7927, !7928, !7929, !7930, !7931, !7932, !7933, !7934, !7938}
!7551 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !7549, file: !7400, line: 396, baseType: !7552, size: 64)
!7552 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7553, size: 64)
!7553 = !DISubroutineType(types: !7554)
!7554 = !{!5, !7555}
!7555 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7556, size: 64)
!7556 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xlgmac_pdata", file: !7400, line: 542, size: 26880, elements: !7557)
!7557 = !{!7558, !7559, !7560, !7561, !7712, !7767, !7768, !7769, !7805, !7806, !7807, !7808, !7809, !7810, !7811, !7812, !7813, !7814, !7815, !7816, !7817, !7818, !7819, !7820, !7821, !7822, !7823, !7824, !7825, !7826, !7827, !7828, !7829, !7830, !7831, !7832, !7834, !7835, !7836, !7837, !7839, !7840, !7841, !7845, !7849, !7850, !7851, !7852}
!7558 = !DIDerivedType(tag: DW_TAG_member, name: "netdev", scope: !7556, file: !7400, line: 543, baseType: !324, size: 64)
!7559 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !7556, file: !7400, line: 544, baseType: !6543, size: 64, offset: 64)
!7560 = !DIDerivedType(tag: DW_TAG_member, name: "hw_ops", scope: !7556, file: !7400, line: 546, baseType: !7549, size: 3456, offset: 128)
!7561 = !DIDerivedType(tag: DW_TAG_member, name: "desc_ops", scope: !7556, file: !7400, line: 547, baseType: !7562, size: 448, offset: 3584)
!7562 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xlgmac_desc_ops", file: !7400, line: 381, size: 448, elements: !7563)
!7563 = !{!7564, !7565, !7569, !7702, !7706, !7710, !7711}
!7564 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_channles_and_rings", scope: !7562, file: !7400, line: 382, baseType: !7552, size: 64)
!7565 = !DIDerivedType(tag: DW_TAG_member, name: "free_channels_and_rings", scope: !7562, file: !7400, line: 383, baseType: !7566, size: 64, offset: 64)
!7566 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7567, size: 64)
!7567 = !DISubroutineType(types: !7568)
!7568 = !{null, !7555}
!7569 = !DIDerivedType(tag: DW_TAG_member, name: "map_tx_skb", scope: !7562, file: !7400, line: 384, baseType: !7570, size: 64, offset: 128)
!7570 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7571, size: 64)
!7571 = !DISubroutineType(types: !7572)
!7572 = !{!5, !7573, !449}
!7573 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7574, size: 64)
!7574 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xlgmac_channel", file: !7400, line: 355, size: 4608, align: 512, elements: !7575)
!7575 = !{!7576, !7577, !7578, !7579, !7580, !7581, !7582, !7609, !7610, !7611, !7612, !7701}
!7576 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !7574, file: !7400, line: 356, baseType: !301, size: 128)
!7577 = !DIDerivedType(tag: DW_TAG_member, name: "pdata", scope: !7574, file: !7400, line: 359, baseType: !7555, size: 64, offset: 128)
!7578 = !DIDerivedType(tag: DW_TAG_member, name: "queue_index", scope: !7574, file: !7400, line: 362, baseType: !11, size: 32, offset: 192)
!7579 = !DIDerivedType(tag: DW_TAG_member, name: "dma_regs", scope: !7574, file: !7400, line: 363, baseType: !625, size: 64, offset: 256)
!7580 = !DIDerivedType(tag: DW_TAG_member, name: "dma_irq", scope: !7574, file: !7400, line: 366, baseType: !5, size: 32, offset: 320)
!7581 = !DIDerivedType(tag: DW_TAG_member, name: "dma_irq_name", scope: !7574, file: !7400, line: 367, baseType: !491, size: 384, offset: 352)
!7582 = !DIDerivedType(tag: DW_TAG_member, name: "napi", scope: !7574, file: !7400, line: 370, baseType: !7583, size: 3072, offset: 768)
!7583 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "napi_struct", file: !4, line: 324, size: 3072, elements: !7584)
!7584 = !{!7585, !7586, !7587, !7588, !7589, !7590, !7595, !7596, !7602, !7603, !7604, !7605, !7606, !7607, !7608}
!7585 = !DIDerivedType(tag: DW_TAG_member, name: "poll_list", scope: !7583, file: !4, line: 331, baseType: !318, size: 128)
!7586 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !7583, file: !4, line: 333, baseType: !346, size: 64, offset: 128)
!7587 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !7583, file: !4, line: 334, baseType: !5, size: 32, offset: 192)
!7588 = !DIDerivedType(tag: DW_TAG_member, name: "defer_hard_irqs_count", scope: !7583, file: !4, line: 335, baseType: !5, size: 32, offset: 224)
!7589 = !DIDerivedType(tag: DW_TAG_member, name: "gro_bitmask", scope: !7583, file: !4, line: 336, baseType: !346, size: 64, offset: 256)
!7590 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !7583, file: !4, line: 337, baseType: !7591, size: 64, offset: 320)
!7591 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7592, size: 64)
!7592 = !DISubroutineType(types: !7593)
!7593 = !{!5, !7594, !5}
!7594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7583, size: 64)
!7595 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !7583, file: !4, line: 341, baseType: !324, size: 64, offset: 384)
!7596 = !DIDerivedType(tag: DW_TAG_member, name: "gro_hash", scope: !7583, file: !4, line: 342, baseType: !7597, size: 1536, offset: 448)
!7597 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7598, size: 1536, elements: !2465)
!7598 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gro_list", file: !4, line: 310, size: 192, elements: !7599)
!7599 = !{!7600, !7601}
!7600 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !7598, file: !4, line: 311, baseType: !318, size: 128)
!7601 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !7598, file: !4, line: 312, baseType: !5, size: 32, offset: 128)
!7602 = !DIDerivedType(tag: DW_TAG_member, name: "skb", scope: !7583, file: !4, line: 343, baseType: !449, size: 64, offset: 1984)
!7603 = !DIDerivedType(tag: DW_TAG_member, name: "rx_list", scope: !7583, file: !4, line: 344, baseType: !318, size: 128, offset: 2048)
!7604 = !DIDerivedType(tag: DW_TAG_member, name: "rx_count", scope: !7583, file: !4, line: 345, baseType: !5, size: 32, offset: 2176)
!7605 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !7583, file: !4, line: 346, baseType: !2429, size: 512, offset: 2240)
!7606 = !DIDerivedType(tag: DW_TAG_member, name: "dev_list", scope: !7583, file: !4, line: 347, baseType: !318, size: 128, offset: 2752)
!7607 = !DIDerivedType(tag: DW_TAG_member, name: "napi_hash_node", scope: !7583, file: !4, line: 348, baseType: !310, size: 128, offset: 2880)
!7608 = !DIDerivedType(tag: DW_TAG_member, name: "napi_id", scope: !7583, file: !4, line: 349, baseType: !11, size: 32, offset: 3008)
!7609 = !DIDerivedType(tag: DW_TAG_member, name: "saved_ier", scope: !7574, file: !7400, line: 372, baseType: !11, size: 32, offset: 3840)
!7610 = !DIDerivedType(tag: DW_TAG_member, name: "tx_timer_active", scope: !7574, file: !7400, line: 374, baseType: !11, size: 32, offset: 3872)
!7611 = !DIDerivedType(tag: DW_TAG_member, name: "tx_timer", scope: !7574, file: !7400, line: 375, baseType: !3265, size: 320, offset: 3904)
!7612 = !DIDerivedType(tag: DW_TAG_member, name: "tx_ring", scope: !7574, file: !7400, line: 377, baseType: !7613, size: 64, offset: 4224)
!7613 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7614, size: 64)
!7614 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xlgmac_ring", file: !7400, line: 315, size: 1536, align: 512, elements: !7615)
!7615 = !{!7616, !7634, !7642, !7643, !7644, !7686, !7687, !7688, !7689, !7690, !7691}
!7616 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_info", scope: !7614, file: !7400, line: 317, baseType: !7617, size: 512)
!7617 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xlgmac_pkt_info", file: !7400, line: 254, size: 512, elements: !7618)
!7618 = !{!7619, !7620, !7621, !7622, !7623, !7624, !7625, !7626, !7627, !7628, !7629, !7630, !7631, !7632, !7633}
!7619 = !DIDerivedType(tag: DW_TAG_member, name: "skb", scope: !7617, file: !7400, line: 255, baseType: !449, size: 64)
!7620 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !7617, file: !7400, line: 257, baseType: !11, size: 32, offset: 64)
!7621 = !DIDerivedType(tag: DW_TAG_member, name: "errors", scope: !7617, file: !7400, line: 259, baseType: !11, size: 32, offset: 96)
!7622 = !DIDerivedType(tag: DW_TAG_member, name: "desc_count", scope: !7617, file: !7400, line: 262, baseType: !11, size: 32, offset: 128)
!7623 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !7617, file: !7400, line: 263, baseType: !11, size: 32, offset: 160)
!7624 = !DIDerivedType(tag: DW_TAG_member, name: "tx_packets", scope: !7617, file: !7400, line: 265, baseType: !11, size: 32, offset: 192)
!7625 = !DIDerivedType(tag: DW_TAG_member, name: "tx_bytes", scope: !7617, file: !7400, line: 266, baseType: !11, size: 32, offset: 224)
!7626 = !DIDerivedType(tag: DW_TAG_member, name: "header_len", scope: !7617, file: !7400, line: 268, baseType: !11, size: 32, offset: 256)
!7627 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_header_len", scope: !7617, file: !7400, line: 269, baseType: !11, size: 32, offset: 288)
!7628 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_payload_len", scope: !7617, file: !7400, line: 270, baseType: !11, size: 32, offset: 320)
!7629 = !DIDerivedType(tag: DW_TAG_member, name: "mss", scope: !7617, file: !7400, line: 271, baseType: !510, size: 16, offset: 352)
!7630 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_ctag", scope: !7617, file: !7400, line: 273, baseType: !510, size: 16, offset: 368)
!7631 = !DIDerivedType(tag: DW_TAG_member, name: "rx_tstamp", scope: !7617, file: !7400, line: 275, baseType: !365, size: 64, offset: 384)
!7632 = !DIDerivedType(tag: DW_TAG_member, name: "rss_hash", scope: !7617, file: !7400, line: 277, baseType: !1021, size: 32, offset: 448)
!7633 = !DIDerivedType(tag: DW_TAG_member, name: "rss_hash_type", scope: !7617, file: !7400, line: 278, baseType: !7393, size: 32, offset: 480)
!7634 = !DIDerivedType(tag: DW_TAG_member, name: "dma_desc_head", scope: !7614, file: !7400, line: 320, baseType: !7635, size: 64, offset: 512)
!7635 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7636, size: 64)
!7636 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xlgmac_dma_desc", file: !7400, line: 213, size: 128, elements: !7637)
!7637 = !{!7638, !7639, !7640, !7641}
!7638 = !DIDerivedType(tag: DW_TAG_member, name: "desc0", scope: !7636, file: !7400, line: 214, baseType: !7527, size: 32)
!7639 = !DIDerivedType(tag: DW_TAG_member, name: "desc1", scope: !7636, file: !7400, line: 215, baseType: !7527, size: 32, offset: 32)
!7640 = !DIDerivedType(tag: DW_TAG_member, name: "desc2", scope: !7636, file: !7400, line: 216, baseType: !7527, size: 32, offset: 64)
!7641 = !DIDerivedType(tag: DW_TAG_member, name: "desc3", scope: !7636, file: !7400, line: 217, baseType: !7527, size: 32, offset: 96)
!7642 = !DIDerivedType(tag: DW_TAG_member, name: "dma_desc_head_addr", scope: !7614, file: !7400, line: 321, baseType: !2068, size: 64, offset: 576)
!7643 = !DIDerivedType(tag: DW_TAG_member, name: "dma_desc_count", scope: !7614, file: !7400, line: 322, baseType: !11, size: 32, offset: 640)
!7644 = !DIDerivedType(tag: DW_TAG_member, name: "desc_data_head", scope: !7614, file: !7400, line: 327, baseType: !7645, size: 64, offset: 704)
!7645 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7646, size: 64)
!7646 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xlgmac_desc_data", file: !7400, line: 281, size: 1792, elements: !7647)
!7647 = !{!7648, !7649, !7650, !7651, !7652, !7653, !7658, !7678, !7679, !7680}
!7648 = !DIDerivedType(tag: DW_TAG_member, name: "dma_desc", scope: !7646, file: !7400, line: 285, baseType: !7635, size: 64)
!7649 = !DIDerivedType(tag: DW_TAG_member, name: "dma_desc_addr", scope: !7646, file: !7400, line: 286, baseType: !2068, size: 64, offset: 64)
!7650 = !DIDerivedType(tag: DW_TAG_member, name: "skb", scope: !7646, file: !7400, line: 292, baseType: !449, size: 64, offset: 128)
!7651 = !DIDerivedType(tag: DW_TAG_member, name: "skb_dma", scope: !7646, file: !7400, line: 293, baseType: !2068, size: 64, offset: 192)
!7652 = !DIDerivedType(tag: DW_TAG_member, name: "skb_dma_len", scope: !7646, file: !7400, line: 294, baseType: !11, size: 32, offset: 256)
!7653 = !DIDerivedType(tag: DW_TAG_member, name: "tx", scope: !7646, file: !7400, line: 297, baseType: !7654, size: 64, offset: 288)
!7654 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xlgmac_tx_desc_data", file: !7400, line: 240, size: 64, elements: !7655)
!7655 = !{!7656, !7657}
!7656 = !DIDerivedType(tag: DW_TAG_member, name: "packets", scope: !7654, file: !7400, line: 241, baseType: !11, size: 32)
!7657 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !7654, file: !7400, line: 242, baseType: !11, size: 32, offset: 32)
!7658 = !DIDerivedType(tag: DW_TAG_member, name: "rx", scope: !7646, file: !7400, line: 298, baseType: !7659, size: 1216, offset: 384)
!7659 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xlgmac_rx_desc_data", file: !7400, line: 246, size: 1216, elements: !7660)
!7660 = !{!7661, !7675, !7676, !7677}
!7661 = !DIDerivedType(tag: DW_TAG_member, name: "hdr", scope: !7659, file: !7400, line: 247, baseType: !7662, size: 576)
!7662 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xlgmac_buffer_data", file: !7400, line: 230, size: 576, elements: !7663)
!7663 = !{!7664, !7671, !7672, !7673, !7674}
!7664 = !DIDerivedType(tag: DW_TAG_member, name: "pa", scope: !7662, file: !7400, line: 231, baseType: !7665, size: 192)
!7665 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xlgmac_page_alloc", file: !7400, line: 221, size: 192, elements: !7666)
!7666 = !{!7667, !7668, !7669, !7670}
!7667 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !7665, file: !7400, line: 222, baseType: !1751, size: 64)
!7668 = !DIDerivedType(tag: DW_TAG_member, name: "pages_len", scope: !7665, file: !7400, line: 223, baseType: !11, size: 32, offset: 64)
!7669 = !DIDerivedType(tag: DW_TAG_member, name: "pages_offset", scope: !7665, file: !7400, line: 224, baseType: !11, size: 32, offset: 96)
!7670 = !DIDerivedType(tag: DW_TAG_member, name: "pages_dma", scope: !7665, file: !7400, line: 226, baseType: !2068, size: 64, offset: 128)
!7671 = !DIDerivedType(tag: DW_TAG_member, name: "pa_unmap", scope: !7662, file: !7400, line: 232, baseType: !7665, size: 192, offset: 192)
!7672 = !DIDerivedType(tag: DW_TAG_member, name: "dma_base", scope: !7662, file: !7400, line: 234, baseType: !2068, size: 64, offset: 384)
!7673 = !DIDerivedType(tag: DW_TAG_member, name: "dma_off", scope: !7662, file: !7400, line: 235, baseType: !346, size: 64, offset: 448)
!7674 = !DIDerivedType(tag: DW_TAG_member, name: "dma_len", scope: !7662, file: !7400, line: 236, baseType: !11, size: 32, offset: 512)
!7675 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !7659, file: !7400, line: 248, baseType: !7662, size: 576, offset: 576)
!7676 = !DIDerivedType(tag: DW_TAG_member, name: "hdr_len", scope: !7659, file: !7400, line: 250, baseType: !510, size: 16, offset: 1152)
!7677 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !7659, file: !7400, line: 251, baseType: !510, size: 16, offset: 1168)
!7678 = !DIDerivedType(tag: DW_TAG_member, name: "mapped_as_page", scope: !7646, file: !7400, line: 300, baseType: !11, size: 32, offset: 1600)
!7679 = !DIDerivedType(tag: DW_TAG_member, name: "state_saved", scope: !7646, file: !7400, line: 307, baseType: !11, size: 32, offset: 1632)
!7680 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !7646, file: !7400, line: 312, baseType: !7681, size: 128, offset: 1664)
!7681 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7646, file: !7400, line: 308, size: 128, elements: !7682)
!7682 = !{!7683, !7684, !7685}
!7683 = !DIDerivedType(tag: DW_TAG_member, name: "skb", scope: !7681, file: !7400, line: 309, baseType: !449, size: 64)
!7684 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !7681, file: !7400, line: 310, baseType: !11, size: 32, offset: 64)
!7685 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !7681, file: !7400, line: 311, baseType: !11, size: 32, offset: 96)
!7686 = !DIDerivedType(tag: DW_TAG_member, name: "rx_hdr_pa", scope: !7614, file: !7400, line: 330, baseType: !7665, size: 192, offset: 768)
!7687 = !DIDerivedType(tag: DW_TAG_member, name: "rx_buf_pa", scope: !7614, file: !7400, line: 331, baseType: !7665, size: 192, offset: 960)
!7688 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !7614, file: !7400, line: 339, baseType: !11, size: 32, offset: 1152)
!7689 = !DIDerivedType(tag: DW_TAG_member, name: "dirty", scope: !7614, file: !7400, line: 340, baseType: !11, size: 32, offset: 1184)
!7690 = !DIDerivedType(tag: DW_TAG_member, name: "coalesce_count", scope: !7614, file: !7400, line: 343, baseType: !11, size: 32, offset: 1216)
!7691 = !DIDerivedType(tag: DW_TAG_member, scope: !7614, file: !7400, line: 345, baseType: !7692, size: 96, offset: 1248)
!7692 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7614, file: !7400, line: 345, size: 96, elements: !7693)
!7693 = !{!7694}
!7694 = !DIDerivedType(tag: DW_TAG_member, name: "tx", scope: !7692, file: !7400, line: 351, baseType: !7695, size: 96)
!7695 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7692, file: !7400, line: 346, size: 96, elements: !7696)
!7696 = !{!7697, !7698, !7699, !7700}
!7697 = !DIDerivedType(tag: DW_TAG_member, name: "xmit_more", scope: !7695, file: !7400, line: 347, baseType: !11, size: 32)
!7698 = !DIDerivedType(tag: DW_TAG_member, name: "queue_stopped", scope: !7695, file: !7400, line: 348, baseType: !11, size: 32, offset: 32)
!7699 = !DIDerivedType(tag: DW_TAG_member, name: "cur_mss", scope: !7695, file: !7400, line: 349, baseType: !510, size: 16, offset: 64)
!7700 = !DIDerivedType(tag: DW_TAG_member, name: "cur_vlan_ctag", scope: !7695, file: !7400, line: 350, baseType: !510, size: 16, offset: 80)
!7701 = !DIDerivedType(tag: DW_TAG_member, name: "rx_ring", scope: !7574, file: !7400, line: 378, baseType: !7613, size: 64, offset: 4288)
!7702 = !DIDerivedType(tag: DW_TAG_member, name: "map_rx_buffer", scope: !7562, file: !7400, line: 386, baseType: !7703, size: 64, offset: 192)
!7703 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7704, size: 64)
!7704 = !DISubroutineType(types: !7705)
!7705 = !{!5, !7555, !7613, !7645}
!7706 = !DIDerivedType(tag: DW_TAG_member, name: "unmap_desc_data", scope: !7562, file: !7400, line: 389, baseType: !7707, size: 64, offset: 256)
!7707 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7708, size: 64)
!7708 = !DISubroutineType(types: !7709)
!7709 = !{null, !7555, !7645}
!7710 = !DIDerivedType(tag: DW_TAG_member, name: "tx_desc_init", scope: !7562, file: !7400, line: 391, baseType: !7566, size: 64, offset: 320)
!7711 = !DIDerivedType(tag: DW_TAG_member, name: "rx_desc_init", scope: !7562, file: !7400, line: 392, baseType: !7566, size: 64, offset: 384)
!7712 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !7556, file: !7400, line: 550, baseType: !7713, size: 3328, offset: 4032)
!7713 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xlgmac_stats", file: !7400, line: 146, size: 3328, elements: !7714)
!7714 = !{!7715, !7716, !7717, !7718, !7719, !7720, !7721, !7722, !7723, !7724, !7725, !7726, !7727, !7728, !7729, !7730, !7731, !7732, !7733, !7734, !7735, !7736, !7737, !7738, !7739, !7740, !7741, !7742, !7743, !7744, !7745, !7746, !7747, !7748, !7749, !7750, !7751, !7752, !7753, !7754, !7755, !7756, !7757, !7758, !7759, !7760, !7761, !7762, !7763, !7764, !7765, !7766}
!7715 = !DIDerivedType(tag: DW_TAG_member, name: "txoctetcount_gb", scope: !7713, file: !7400, line: 148, baseType: !365, size: 64)
!7716 = !DIDerivedType(tag: DW_TAG_member, name: "txframecount_gb", scope: !7713, file: !7400, line: 149, baseType: !365, size: 64, offset: 64)
!7717 = !DIDerivedType(tag: DW_TAG_member, name: "txbroadcastframes_g", scope: !7713, file: !7400, line: 150, baseType: !365, size: 64, offset: 128)
!7718 = !DIDerivedType(tag: DW_TAG_member, name: "txmulticastframes_g", scope: !7713, file: !7400, line: 151, baseType: !365, size: 64, offset: 192)
!7719 = !DIDerivedType(tag: DW_TAG_member, name: "tx64octets_gb", scope: !7713, file: !7400, line: 152, baseType: !365, size: 64, offset: 256)
!7720 = !DIDerivedType(tag: DW_TAG_member, name: "tx65to127octets_gb", scope: !7713, file: !7400, line: 153, baseType: !365, size: 64, offset: 320)
!7721 = !DIDerivedType(tag: DW_TAG_member, name: "tx128to255octets_gb", scope: !7713, file: !7400, line: 154, baseType: !365, size: 64, offset: 384)
!7722 = !DIDerivedType(tag: DW_TAG_member, name: "tx256to511octets_gb", scope: !7713, file: !7400, line: 155, baseType: !365, size: 64, offset: 448)
!7723 = !DIDerivedType(tag: DW_TAG_member, name: "tx512to1023octets_gb", scope: !7713, file: !7400, line: 156, baseType: !365, size: 64, offset: 512)
!7724 = !DIDerivedType(tag: DW_TAG_member, name: "tx1024tomaxoctets_gb", scope: !7713, file: !7400, line: 157, baseType: !365, size: 64, offset: 576)
!7725 = !DIDerivedType(tag: DW_TAG_member, name: "txunicastframes_gb", scope: !7713, file: !7400, line: 158, baseType: !365, size: 64, offset: 640)
!7726 = !DIDerivedType(tag: DW_TAG_member, name: "txmulticastframes_gb", scope: !7713, file: !7400, line: 159, baseType: !365, size: 64, offset: 704)
!7727 = !DIDerivedType(tag: DW_TAG_member, name: "txbroadcastframes_gb", scope: !7713, file: !7400, line: 160, baseType: !365, size: 64, offset: 768)
!7728 = !DIDerivedType(tag: DW_TAG_member, name: "txunderflowerror", scope: !7713, file: !7400, line: 161, baseType: !365, size: 64, offset: 832)
!7729 = !DIDerivedType(tag: DW_TAG_member, name: "txoctetcount_g", scope: !7713, file: !7400, line: 162, baseType: !365, size: 64, offset: 896)
!7730 = !DIDerivedType(tag: DW_TAG_member, name: "txframecount_g", scope: !7713, file: !7400, line: 163, baseType: !365, size: 64, offset: 960)
!7731 = !DIDerivedType(tag: DW_TAG_member, name: "txpauseframes", scope: !7713, file: !7400, line: 164, baseType: !365, size: 64, offset: 1024)
!7732 = !DIDerivedType(tag: DW_TAG_member, name: "txvlanframes_g", scope: !7713, file: !7400, line: 165, baseType: !365, size: 64, offset: 1088)
!7733 = !DIDerivedType(tag: DW_TAG_member, name: "rxframecount_gb", scope: !7713, file: !7400, line: 168, baseType: !365, size: 64, offset: 1152)
!7734 = !DIDerivedType(tag: DW_TAG_member, name: "rxoctetcount_gb", scope: !7713, file: !7400, line: 169, baseType: !365, size: 64, offset: 1216)
!7735 = !DIDerivedType(tag: DW_TAG_member, name: "rxoctetcount_g", scope: !7713, file: !7400, line: 170, baseType: !365, size: 64, offset: 1280)
!7736 = !DIDerivedType(tag: DW_TAG_member, name: "rxbroadcastframes_g", scope: !7713, file: !7400, line: 171, baseType: !365, size: 64, offset: 1344)
!7737 = !DIDerivedType(tag: DW_TAG_member, name: "rxmulticastframes_g", scope: !7713, file: !7400, line: 172, baseType: !365, size: 64, offset: 1408)
!7738 = !DIDerivedType(tag: DW_TAG_member, name: "rxcrcerror", scope: !7713, file: !7400, line: 173, baseType: !365, size: 64, offset: 1472)
!7739 = !DIDerivedType(tag: DW_TAG_member, name: "rxrunterror", scope: !7713, file: !7400, line: 174, baseType: !365, size: 64, offset: 1536)
!7740 = !DIDerivedType(tag: DW_TAG_member, name: "rxjabbererror", scope: !7713, file: !7400, line: 175, baseType: !365, size: 64, offset: 1600)
!7741 = !DIDerivedType(tag: DW_TAG_member, name: "rxundersize_g", scope: !7713, file: !7400, line: 176, baseType: !365, size: 64, offset: 1664)
!7742 = !DIDerivedType(tag: DW_TAG_member, name: "rxoversize_g", scope: !7713, file: !7400, line: 177, baseType: !365, size: 64, offset: 1728)
!7743 = !DIDerivedType(tag: DW_TAG_member, name: "rx64octets_gb", scope: !7713, file: !7400, line: 178, baseType: !365, size: 64, offset: 1792)
!7744 = !DIDerivedType(tag: DW_TAG_member, name: "rx65to127octets_gb", scope: !7713, file: !7400, line: 179, baseType: !365, size: 64, offset: 1856)
!7745 = !DIDerivedType(tag: DW_TAG_member, name: "rx128to255octets_gb", scope: !7713, file: !7400, line: 180, baseType: !365, size: 64, offset: 1920)
!7746 = !DIDerivedType(tag: DW_TAG_member, name: "rx256to511octets_gb", scope: !7713, file: !7400, line: 181, baseType: !365, size: 64, offset: 1984)
!7747 = !DIDerivedType(tag: DW_TAG_member, name: "rx512to1023octets_gb", scope: !7713, file: !7400, line: 182, baseType: !365, size: 64, offset: 2048)
!7748 = !DIDerivedType(tag: DW_TAG_member, name: "rx1024tomaxoctets_gb", scope: !7713, file: !7400, line: 183, baseType: !365, size: 64, offset: 2112)
!7749 = !DIDerivedType(tag: DW_TAG_member, name: "rxunicastframes_g", scope: !7713, file: !7400, line: 184, baseType: !365, size: 64, offset: 2176)
!7750 = !DIDerivedType(tag: DW_TAG_member, name: "rxlengtherror", scope: !7713, file: !7400, line: 185, baseType: !365, size: 64, offset: 2240)
!7751 = !DIDerivedType(tag: DW_TAG_member, name: "rxoutofrangetype", scope: !7713, file: !7400, line: 186, baseType: !365, size: 64, offset: 2304)
!7752 = !DIDerivedType(tag: DW_TAG_member, name: "rxpauseframes", scope: !7713, file: !7400, line: 187, baseType: !365, size: 64, offset: 2368)
!7753 = !DIDerivedType(tag: DW_TAG_member, name: "rxfifooverflow", scope: !7713, file: !7400, line: 188, baseType: !365, size: 64, offset: 2432)
!7754 = !DIDerivedType(tag: DW_TAG_member, name: "rxvlanframes_gb", scope: !7713, file: !7400, line: 189, baseType: !365, size: 64, offset: 2496)
!7755 = !DIDerivedType(tag: DW_TAG_member, name: "rxwatchdogerror", scope: !7713, file: !7400, line: 190, baseType: !365, size: 64, offset: 2560)
!7756 = !DIDerivedType(tag: DW_TAG_member, name: "tx_tso_packets", scope: !7713, file: !7400, line: 193, baseType: !365, size: 64, offset: 2624)
!7757 = !DIDerivedType(tag: DW_TAG_member, name: "rx_split_header_packets", scope: !7713, file: !7400, line: 194, baseType: !365, size: 64, offset: 2688)
!7758 = !DIDerivedType(tag: DW_TAG_member, name: "tx_process_stopped", scope: !7713, file: !7400, line: 195, baseType: !365, size: 64, offset: 2752)
!7759 = !DIDerivedType(tag: DW_TAG_member, name: "rx_process_stopped", scope: !7713, file: !7400, line: 196, baseType: !365, size: 64, offset: 2816)
!7760 = !DIDerivedType(tag: DW_TAG_member, name: "tx_buffer_unavailable", scope: !7713, file: !7400, line: 197, baseType: !365, size: 64, offset: 2880)
!7761 = !DIDerivedType(tag: DW_TAG_member, name: "rx_buffer_unavailable", scope: !7713, file: !7400, line: 198, baseType: !365, size: 64, offset: 2944)
!7762 = !DIDerivedType(tag: DW_TAG_member, name: "fatal_bus_error", scope: !7713, file: !7400, line: 199, baseType: !365, size: 64, offset: 3008)
!7763 = !DIDerivedType(tag: DW_TAG_member, name: "tx_vlan_packets", scope: !7713, file: !7400, line: 200, baseType: !365, size: 64, offset: 3072)
!7764 = !DIDerivedType(tag: DW_TAG_member, name: "rx_vlan_packets", scope: !7713, file: !7400, line: 201, baseType: !365, size: 64, offset: 3136)
!7765 = !DIDerivedType(tag: DW_TAG_member, name: "napi_poll_isr", scope: !7713, file: !7400, line: 202, baseType: !365, size: 64, offset: 3200)
!7766 = !DIDerivedType(tag: DW_TAG_member, name: "napi_poll_txtimer", scope: !7713, file: !7400, line: 203, baseType: !365, size: 64, offset: 3264)
!7767 = !DIDerivedType(tag: DW_TAG_member, name: "msg_enable", scope: !7556, file: !7400, line: 552, baseType: !1021, size: 32, offset: 7360)
!7768 = !DIDerivedType(tag: DW_TAG_member, name: "mac_regs", scope: !7556, file: !7400, line: 555, baseType: !625, size: 64, offset: 7424)
!7769 = !DIDerivedType(tag: DW_TAG_member, name: "hw_feat", scope: !7556, file: !7400, line: 558, baseType: !7770, size: 1056, offset: 7488)
!7770 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xlgmac_hw_features", file: !7400, line: 494, size: 1056, elements: !7771)
!7771 = !{!7772, !7773, !7774, !7775, !7776, !7777, !7778, !7779, !7780, !7781, !7782, !7783, !7784, !7785, !7786, !7787, !7788, !7789, !7790, !7791, !7792, !7793, !7794, !7795, !7796, !7797, !7798, !7799, !7800, !7801, !7802, !7803, !7804}
!7772 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !7770, file: !7400, line: 496, baseType: !11, size: 32)
!7773 = !DIDerivedType(tag: DW_TAG_member, name: "phyifsel", scope: !7770, file: !7400, line: 499, baseType: !11, size: 32, offset: 32)
!7774 = !DIDerivedType(tag: DW_TAG_member, name: "vlhash", scope: !7770, file: !7400, line: 500, baseType: !11, size: 32, offset: 64)
!7775 = !DIDerivedType(tag: DW_TAG_member, name: "sma", scope: !7770, file: !7400, line: 501, baseType: !11, size: 32, offset: 96)
!7776 = !DIDerivedType(tag: DW_TAG_member, name: "rwk", scope: !7770, file: !7400, line: 502, baseType: !11, size: 32, offset: 128)
!7777 = !DIDerivedType(tag: DW_TAG_member, name: "mgk", scope: !7770, file: !7400, line: 503, baseType: !11, size: 32, offset: 160)
!7778 = !DIDerivedType(tag: DW_TAG_member, name: "mmc", scope: !7770, file: !7400, line: 504, baseType: !11, size: 32, offset: 192)
!7779 = !DIDerivedType(tag: DW_TAG_member, name: "aoe", scope: !7770, file: !7400, line: 505, baseType: !11, size: 32, offset: 224)
!7780 = !DIDerivedType(tag: DW_TAG_member, name: "ts", scope: !7770, file: !7400, line: 506, baseType: !11, size: 32, offset: 256)
!7781 = !DIDerivedType(tag: DW_TAG_member, name: "eee", scope: !7770, file: !7400, line: 507, baseType: !11, size: 32, offset: 288)
!7782 = !DIDerivedType(tag: DW_TAG_member, name: "tx_coe", scope: !7770, file: !7400, line: 508, baseType: !11, size: 32, offset: 320)
!7783 = !DIDerivedType(tag: DW_TAG_member, name: "rx_coe", scope: !7770, file: !7400, line: 509, baseType: !11, size: 32, offset: 352)
!7784 = !DIDerivedType(tag: DW_TAG_member, name: "addn_mac", scope: !7770, file: !7400, line: 510, baseType: !11, size: 32, offset: 384)
!7785 = !DIDerivedType(tag: DW_TAG_member, name: "ts_src", scope: !7770, file: !7400, line: 511, baseType: !11, size: 32, offset: 416)
!7786 = !DIDerivedType(tag: DW_TAG_member, name: "sa_vlan_ins", scope: !7770, file: !7400, line: 512, baseType: !11, size: 32, offset: 448)
!7787 = !DIDerivedType(tag: DW_TAG_member, name: "rx_fifo_size", scope: !7770, file: !7400, line: 515, baseType: !11, size: 32, offset: 480)
!7788 = !DIDerivedType(tag: DW_TAG_member, name: "tx_fifo_size", scope: !7770, file: !7400, line: 516, baseType: !11, size: 32, offset: 512)
!7789 = !DIDerivedType(tag: DW_TAG_member, name: "adv_ts_hi", scope: !7770, file: !7400, line: 517, baseType: !11, size: 32, offset: 544)
!7790 = !DIDerivedType(tag: DW_TAG_member, name: "dma_width", scope: !7770, file: !7400, line: 518, baseType: !11, size: 32, offset: 576)
!7791 = !DIDerivedType(tag: DW_TAG_member, name: "dcb", scope: !7770, file: !7400, line: 519, baseType: !11, size: 32, offset: 608)
!7792 = !DIDerivedType(tag: DW_TAG_member, name: "sph", scope: !7770, file: !7400, line: 520, baseType: !11, size: 32, offset: 640)
!7793 = !DIDerivedType(tag: DW_TAG_member, name: "tso", scope: !7770, file: !7400, line: 521, baseType: !11, size: 32, offset: 672)
!7794 = !DIDerivedType(tag: DW_TAG_member, name: "dma_debug", scope: !7770, file: !7400, line: 522, baseType: !11, size: 32, offset: 704)
!7795 = !DIDerivedType(tag: DW_TAG_member, name: "rss", scope: !7770, file: !7400, line: 523, baseType: !11, size: 32, offset: 736)
!7796 = !DIDerivedType(tag: DW_TAG_member, name: "tc_cnt", scope: !7770, file: !7400, line: 524, baseType: !11, size: 32, offset: 768)
!7797 = !DIDerivedType(tag: DW_TAG_member, name: "hash_table_size", scope: !7770, file: !7400, line: 525, baseType: !11, size: 32, offset: 800)
!7798 = !DIDerivedType(tag: DW_TAG_member, name: "l3l4_filter_num", scope: !7770, file: !7400, line: 526, baseType: !11, size: 32, offset: 832)
!7799 = !DIDerivedType(tag: DW_TAG_member, name: "rx_q_cnt", scope: !7770, file: !7400, line: 529, baseType: !11, size: 32, offset: 864)
!7800 = !DIDerivedType(tag: DW_TAG_member, name: "tx_q_cnt", scope: !7770, file: !7400, line: 530, baseType: !11, size: 32, offset: 896)
!7801 = !DIDerivedType(tag: DW_TAG_member, name: "rx_ch_cnt", scope: !7770, file: !7400, line: 531, baseType: !11, size: 32, offset: 928)
!7802 = !DIDerivedType(tag: DW_TAG_member, name: "tx_ch_cnt", scope: !7770, file: !7400, line: 532, baseType: !11, size: 32, offset: 960)
!7803 = !DIDerivedType(tag: DW_TAG_member, name: "pps_out_num", scope: !7770, file: !7400, line: 533, baseType: !11, size: 32, offset: 992)
!7804 = !DIDerivedType(tag: DW_TAG_member, name: "aux_snap_num", scope: !7770, file: !7400, line: 534, baseType: !11, size: 32, offset: 1024)
!7805 = !DIDerivedType(tag: DW_TAG_member, name: "restart_work", scope: !7556, file: !7400, line: 560, baseType: !2860, size: 256, offset: 8576)
!7806 = !DIDerivedType(tag: DW_TAG_member, name: "channel_head", scope: !7556, file: !7400, line: 563, baseType: !7573, size: 64, offset: 8832)
!7807 = !DIDerivedType(tag: DW_TAG_member, name: "channel_count", scope: !7556, file: !7400, line: 564, baseType: !11, size: 32, offset: 8896)
!7808 = !DIDerivedType(tag: DW_TAG_member, name: "tx_ring_count", scope: !7556, file: !7400, line: 565, baseType: !11, size: 32, offset: 8928)
!7809 = !DIDerivedType(tag: DW_TAG_member, name: "rx_ring_count", scope: !7556, file: !7400, line: 566, baseType: !11, size: 32, offset: 8960)
!7810 = !DIDerivedType(tag: DW_TAG_member, name: "tx_desc_count", scope: !7556, file: !7400, line: 567, baseType: !11, size: 32, offset: 8992)
!7811 = !DIDerivedType(tag: DW_TAG_member, name: "rx_desc_count", scope: !7556, file: !7400, line: 568, baseType: !11, size: 32, offset: 9024)
!7812 = !DIDerivedType(tag: DW_TAG_member, name: "tx_q_count", scope: !7556, file: !7400, line: 569, baseType: !11, size: 32, offset: 9056)
!7813 = !DIDerivedType(tag: DW_TAG_member, name: "rx_q_count", scope: !7556, file: !7400, line: 570, baseType: !11, size: 32, offset: 9088)
!7814 = !DIDerivedType(tag: DW_TAG_member, name: "pblx8", scope: !7556, file: !7400, line: 573, baseType: !11, size: 32, offset: 9120)
!7815 = !DIDerivedType(tag: DW_TAG_member, name: "tx_sf_mode", scope: !7556, file: !7400, line: 576, baseType: !11, size: 32, offset: 9152)
!7816 = !DIDerivedType(tag: DW_TAG_member, name: "tx_threshold", scope: !7556, file: !7400, line: 577, baseType: !11, size: 32, offset: 9184)
!7817 = !DIDerivedType(tag: DW_TAG_member, name: "tx_pbl", scope: !7556, file: !7400, line: 578, baseType: !11, size: 32, offset: 9216)
!7818 = !DIDerivedType(tag: DW_TAG_member, name: "tx_osp_mode", scope: !7556, file: !7400, line: 579, baseType: !11, size: 32, offset: 9248)
!7819 = !DIDerivedType(tag: DW_TAG_member, name: "rx_sf_mode", scope: !7556, file: !7400, line: 582, baseType: !11, size: 32, offset: 9280)
!7820 = !DIDerivedType(tag: DW_TAG_member, name: "rx_threshold", scope: !7556, file: !7400, line: 583, baseType: !11, size: 32, offset: 9312)
!7821 = !DIDerivedType(tag: DW_TAG_member, name: "rx_pbl", scope: !7556, file: !7400, line: 584, baseType: !11, size: 32, offset: 9344)
!7822 = !DIDerivedType(tag: DW_TAG_member, name: "tx_usecs", scope: !7556, file: !7400, line: 587, baseType: !11, size: 32, offset: 9376)
!7823 = !DIDerivedType(tag: DW_TAG_member, name: "tx_frames", scope: !7556, file: !7400, line: 588, baseType: !11, size: 32, offset: 9408)
!7824 = !DIDerivedType(tag: DW_TAG_member, name: "rx_riwt", scope: !7556, file: !7400, line: 591, baseType: !11, size: 32, offset: 9440)
!7825 = !DIDerivedType(tag: DW_TAG_member, name: "rx_usecs", scope: !7556, file: !7400, line: 592, baseType: !11, size: 32, offset: 9472)
!7826 = !DIDerivedType(tag: DW_TAG_member, name: "rx_frames", scope: !7556, file: !7400, line: 593, baseType: !11, size: 32, offset: 9504)
!7827 = !DIDerivedType(tag: DW_TAG_member, name: "rx_buf_size", scope: !7556, file: !7400, line: 596, baseType: !11, size: 32, offset: 9536)
!7828 = !DIDerivedType(tag: DW_TAG_member, name: "tx_pause", scope: !7556, file: !7400, line: 599, baseType: !11, size: 32, offset: 9568)
!7829 = !DIDerivedType(tag: DW_TAG_member, name: "rx_pause", scope: !7556, file: !7400, line: 600, baseType: !11, size: 32, offset: 9600)
!7830 = !DIDerivedType(tag: DW_TAG_member, name: "dev_irq", scope: !7556, file: !7400, line: 603, baseType: !5, size: 32, offset: 9632)
!7831 = !DIDerivedType(tag: DW_TAG_member, name: "per_channel_irq", scope: !7556, file: !7400, line: 604, baseType: !11, size: 32, offset: 9664)
!7832 = !DIDerivedType(tag: DW_TAG_member, name: "channel_irq", scope: !7556, file: !7400, line: 605, baseType: !7833, size: 512, offset: 9696)
!7833 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5, size: 512, elements: !303)
!7834 = !DIDerivedType(tag: DW_TAG_member, name: "mac_addr", scope: !7556, file: !7400, line: 608, baseType: !5805, size: 48, offset: 10208)
!7835 = !DIDerivedType(tag: DW_TAG_member, name: "netdev_features", scope: !7556, file: !7400, line: 609, baseType: !363, size: 64, offset: 10304)
!7836 = !DIDerivedType(tag: DW_TAG_member, name: "napi", scope: !7556, file: !7400, line: 610, baseType: !7583, size: 3072, offset: 10368)
!7837 = !DIDerivedType(tag: DW_TAG_member, name: "active_vlans", scope: !7556, file: !7400, line: 613, baseType: !7838, size: 4096, offset: 13440)
!7838 = !DICompositeType(tag: DW_TAG_array_type, baseType: !346, size: 4096, elements: !3842)
!7839 = !DIDerivedType(tag: DW_TAG_member, name: "sysclk_rate", scope: !7556, file: !7400, line: 616, baseType: !346, size: 64, offset: 17536)
!7840 = !DIDerivedType(tag: DW_TAG_member, name: "rss_mutex", scope: !7556, file: !7400, line: 619, baseType: !1697, size: 192, offset: 17600)
!7841 = !DIDerivedType(tag: DW_TAG_member, name: "rss_key", scope: !7556, file: !7400, line: 622, baseType: !7842, size: 320, offset: 17792)
!7842 = !DICompositeType(tag: DW_TAG_array_type, baseType: !828, size: 320, elements: !7843)
!7843 = !{!7844}
!7844 = !DISubrange(count: 40)
!7845 = !DIDerivedType(tag: DW_TAG_member, name: "rss_table", scope: !7556, file: !7400, line: 623, baseType: !7846, size: 8192, offset: 18112)
!7846 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1021, size: 8192, elements: !7847)
!7847 = !{!7848}
!7848 = !DISubrange(count: 256)
!7849 = !DIDerivedType(tag: DW_TAG_member, name: "rss_options", scope: !7556, file: !7400, line: 624, baseType: !1021, size: 32, offset: 26304)
!7850 = !DIDerivedType(tag: DW_TAG_member, name: "phy_speed", scope: !7556, file: !7400, line: 626, baseType: !5, size: 32, offset: 26336)
!7851 = !DIDerivedType(tag: DW_TAG_member, name: "drv_name", scope: !7556, file: !7400, line: 628, baseType: !4642, size: 256, offset: 26368)
!7852 = !DIDerivedType(tag: DW_TAG_member, name: "drv_ver", scope: !7556, file: !7400, line: 629, baseType: !4642, size: 256, offset: 26624)
!7853 = !DIDerivedType(tag: DW_TAG_member, name: "exit", scope: !7549, file: !7400, line: 397, baseType: !7552, size: 64, offset: 64)
!7854 = !DIDerivedType(tag: DW_TAG_member, name: "tx_complete", scope: !7549, file: !7400, line: 399, baseType: !7855, size: 64, offset: 128)
!7855 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7856, size: 64)
!7856 = !DISubroutineType(types: !7857)
!7857 = !{!5, !7635}
!7858 = !DIDerivedType(tag: DW_TAG_member, name: "enable_tx", scope: !7549, file: !7400, line: 401, baseType: !7566, size: 64, offset: 192)
!7859 = !DIDerivedType(tag: DW_TAG_member, name: "disable_tx", scope: !7549, file: !7400, line: 402, baseType: !7566, size: 64, offset: 256)
!7860 = !DIDerivedType(tag: DW_TAG_member, name: "enable_rx", scope: !7549, file: !7400, line: 403, baseType: !7566, size: 64, offset: 320)
!7861 = !DIDerivedType(tag: DW_TAG_member, name: "disable_rx", scope: !7549, file: !7400, line: 404, baseType: !7566, size: 64, offset: 384)
!7862 = !DIDerivedType(tag: DW_TAG_member, name: "enable_int", scope: !7549, file: !7400, line: 406, baseType: !7863, size: 64, offset: 448)
!7863 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7864, size: 64)
!7864 = !DISubroutineType(types: !7865)
!7865 = !{!5, !7573, !7399}
!7866 = !DIDerivedType(tag: DW_TAG_member, name: "disable_int", scope: !7549, file: !7400, line: 408, baseType: !7863, size: 64, offset: 512)
!7867 = !DIDerivedType(tag: DW_TAG_member, name: "dev_xmit", scope: !7549, file: !7400, line: 410, baseType: !7868, size: 64, offset: 576)
!7868 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7869, size: 64)
!7869 = !DISubroutineType(types: !7870)
!7870 = !{null, !7573}
!7871 = !DIDerivedType(tag: DW_TAG_member, name: "dev_read", scope: !7549, file: !7400, line: 411, baseType: !7872, size: 64, offset: 640)
!7872 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7873, size: 64)
!7873 = !DISubroutineType(types: !7874)
!7874 = !{!5, !7573}
!7875 = !DIDerivedType(tag: DW_TAG_member, name: "set_mac_address", scope: !7549, file: !7400, line: 413, baseType: !7876, size: 64, offset: 704)
!7876 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7877, size: 64)
!7877 = !DISubroutineType(types: !7878)
!7878 = !{!5, !7555, !827}
!7879 = !DIDerivedType(tag: DW_TAG_member, name: "config_rx_mode", scope: !7549, file: !7400, line: 414, baseType: !7552, size: 64, offset: 768)
!7880 = !DIDerivedType(tag: DW_TAG_member, name: "enable_rx_csum", scope: !7549, file: !7400, line: 415, baseType: !7552, size: 64, offset: 832)
!7881 = !DIDerivedType(tag: DW_TAG_member, name: "disable_rx_csum", scope: !7549, file: !7400, line: 416, baseType: !7552, size: 64, offset: 896)
!7882 = !DIDerivedType(tag: DW_TAG_member, name: "set_xlgmii_25000_speed", scope: !7549, file: !7400, line: 419, baseType: !7552, size: 64, offset: 960)
!7883 = !DIDerivedType(tag: DW_TAG_member, name: "set_xlgmii_40000_speed", scope: !7549, file: !7400, line: 420, baseType: !7552, size: 64, offset: 1024)
!7884 = !DIDerivedType(tag: DW_TAG_member, name: "set_xlgmii_50000_speed", scope: !7549, file: !7400, line: 421, baseType: !7552, size: 64, offset: 1088)
!7885 = !DIDerivedType(tag: DW_TAG_member, name: "set_xlgmii_100000_speed", scope: !7549, file: !7400, line: 422, baseType: !7552, size: 64, offset: 1152)
!7886 = !DIDerivedType(tag: DW_TAG_member, name: "tx_desc_init", scope: !7549, file: !7400, line: 425, baseType: !7868, size: 64, offset: 1216)
!7887 = !DIDerivedType(tag: DW_TAG_member, name: "rx_desc_init", scope: !7549, file: !7400, line: 426, baseType: !7868, size: 64, offset: 1280)
!7888 = !DIDerivedType(tag: DW_TAG_member, name: "tx_desc_reset", scope: !7549, file: !7400, line: 427, baseType: !7889, size: 64, offset: 1344)
!7889 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7890, size: 64)
!7890 = !DISubroutineType(types: !7891)
!7891 = !{null, !7645}
!7892 = !DIDerivedType(tag: DW_TAG_member, name: "rx_desc_reset", scope: !7549, file: !7400, line: 428, baseType: !7893, size: 64, offset: 1408)
!7893 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7894, size: 64)
!7894 = !DISubroutineType(types: !7895)
!7895 = !{null, !7555, !7645, !11}
!7896 = !DIDerivedType(tag: DW_TAG_member, name: "is_last_desc", scope: !7549, file: !7400, line: 431, baseType: !7855, size: 64, offset: 1472)
!7897 = !DIDerivedType(tag: DW_TAG_member, name: "is_context_desc", scope: !7549, file: !7400, line: 432, baseType: !7855, size: 64, offset: 1536)
!7898 = !DIDerivedType(tag: DW_TAG_member, name: "tx_start_xmit", scope: !7549, file: !7400, line: 433, baseType: !7899, size: 64, offset: 1600)
!7899 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7900, size: 64)
!7900 = !DISubroutineType(types: !7901)
!7901 = !{null, !7573, !7613}
!7902 = !DIDerivedType(tag: DW_TAG_member, name: "config_tx_flow_control", scope: !7549, file: !7400, line: 437, baseType: !7552, size: 64, offset: 1664)
!7903 = !DIDerivedType(tag: DW_TAG_member, name: "config_rx_flow_control", scope: !7549, file: !7400, line: 438, baseType: !7552, size: 64, offset: 1728)
!7904 = !DIDerivedType(tag: DW_TAG_member, name: "enable_rx_vlan_stripping", scope: !7549, file: !7400, line: 441, baseType: !7552, size: 64, offset: 1792)
!7905 = !DIDerivedType(tag: DW_TAG_member, name: "disable_rx_vlan_stripping", scope: !7549, file: !7400, line: 442, baseType: !7552, size: 64, offset: 1856)
!7906 = !DIDerivedType(tag: DW_TAG_member, name: "enable_rx_vlan_filtering", scope: !7549, file: !7400, line: 443, baseType: !7552, size: 64, offset: 1920)
!7907 = !DIDerivedType(tag: DW_TAG_member, name: "disable_rx_vlan_filtering", scope: !7549, file: !7400, line: 444, baseType: !7552, size: 64, offset: 1984)
!7908 = !DIDerivedType(tag: DW_TAG_member, name: "update_vlan_hash_table", scope: !7549, file: !7400, line: 445, baseType: !7552, size: 64, offset: 2048)
!7909 = !DIDerivedType(tag: DW_TAG_member, name: "config_rx_coalesce", scope: !7549, file: !7400, line: 448, baseType: !7552, size: 64, offset: 2112)
!7910 = !DIDerivedType(tag: DW_TAG_member, name: "config_tx_coalesce", scope: !7549, file: !7400, line: 449, baseType: !7552, size: 64, offset: 2176)
!7911 = !DIDerivedType(tag: DW_TAG_member, name: "usec_to_riwt", scope: !7549, file: !7400, line: 450, baseType: !7912, size: 64, offset: 2240)
!7912 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7913, size: 64)
!7913 = !DISubroutineType(types: !7914)
!7914 = !{!11, !7555, !11}
!7915 = !DIDerivedType(tag: DW_TAG_member, name: "riwt_to_usec", scope: !7549, file: !7400, line: 452, baseType: !7912, size: 64, offset: 2304)
!7916 = !DIDerivedType(tag: DW_TAG_member, name: "config_rx_threshold", scope: !7549, file: !7400, line: 456, baseType: !7917, size: 64, offset: 2368)
!7917 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7918, size: 64)
!7918 = !DISubroutineType(types: !7919)
!7919 = !{!5, !7555, !11}
!7920 = !DIDerivedType(tag: DW_TAG_member, name: "config_tx_threshold", scope: !7549, file: !7400, line: 458, baseType: !7917, size: 64, offset: 2432)
!7921 = !DIDerivedType(tag: DW_TAG_member, name: "config_rsf_mode", scope: !7549, file: !7400, line: 462, baseType: !7917, size: 64, offset: 2496)
!7922 = !DIDerivedType(tag: DW_TAG_member, name: "config_tsf_mode", scope: !7549, file: !7400, line: 464, baseType: !7917, size: 64, offset: 2560)
!7923 = !DIDerivedType(tag: DW_TAG_member, name: "config_osp_mode", scope: !7549, file: !7400, line: 468, baseType: !7552, size: 64, offset: 2624)
!7924 = !DIDerivedType(tag: DW_TAG_member, name: "config_rx_pbl_val", scope: !7549, file: !7400, line: 471, baseType: !7552, size: 64, offset: 2688)
!7925 = !DIDerivedType(tag: DW_TAG_member, name: "get_rx_pbl_val", scope: !7549, file: !7400, line: 472, baseType: !7552, size: 64, offset: 2752)
!7926 = !DIDerivedType(tag: DW_TAG_member, name: "config_tx_pbl_val", scope: !7549, file: !7400, line: 473, baseType: !7552, size: 64, offset: 2816)
!7927 = !DIDerivedType(tag: DW_TAG_member, name: "get_tx_pbl_val", scope: !7549, file: !7400, line: 474, baseType: !7552, size: 64, offset: 2880)
!7928 = !DIDerivedType(tag: DW_TAG_member, name: "config_pblx8", scope: !7549, file: !7400, line: 475, baseType: !7552, size: 64, offset: 2944)
!7929 = !DIDerivedType(tag: DW_TAG_member, name: "rx_mmc_int", scope: !7549, file: !7400, line: 478, baseType: !7566, size: 64, offset: 3008)
!7930 = !DIDerivedType(tag: DW_TAG_member, name: "tx_mmc_int", scope: !7549, file: !7400, line: 479, baseType: !7566, size: 64, offset: 3072)
!7931 = !DIDerivedType(tag: DW_TAG_member, name: "read_mmc_stats", scope: !7549, file: !7400, line: 480, baseType: !7566, size: 64, offset: 3136)
!7932 = !DIDerivedType(tag: DW_TAG_member, name: "enable_rss", scope: !7549, file: !7400, line: 483, baseType: !7552, size: 64, offset: 3200)
!7933 = !DIDerivedType(tag: DW_TAG_member, name: "disable_rss", scope: !7549, file: !7400, line: 484, baseType: !7552, size: 64, offset: 3264)
!7934 = !DIDerivedType(tag: DW_TAG_member, name: "set_rss_hash_key", scope: !7549, file: !7400, line: 485, baseType: !7935, size: 64, offset: 3328)
!7935 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7936, size: 64)
!7936 = !DISubroutineType(types: !7937)
!7937 = !{!5, !7555, !5862}
!7938 = !DIDerivedType(tag: DW_TAG_member, name: "set_rss_lookup_table", scope: !7549, file: !7400, line: 487, baseType: !7939, size: 64, offset: 3392)
!7939 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7940, size: 64)
!7940 = !DISubroutineType(types: !7941)
!7941 = !{!5, !7555, !5860}
!7942 = !DILocalVariable(name: "hw_ops", arg: 1, scope: !7545, file: !1, line: 3065, type: !7548)
!7943 = !DILocation(line: 3065, column: 47, scope: !7545)
!7944 = !DILocation(line: 3067, column: 2, scope: !7545)
!7945 = !DILocation(line: 3067, column: 10, scope: !7545)
!7946 = !DILocation(line: 3067, column: 15, scope: !7545)
!7947 = !DILocation(line: 3068, column: 2, scope: !7545)
!7948 = !DILocation(line: 3068, column: 10, scope: !7545)
!7949 = !DILocation(line: 3068, column: 15, scope: !7545)
!7950 = !DILocation(line: 3070, column: 2, scope: !7545)
!7951 = !DILocation(line: 3070, column: 10, scope: !7545)
!7952 = !DILocation(line: 3070, column: 22, scope: !7545)
!7953 = !DILocation(line: 3072, column: 2, scope: !7545)
!7954 = !DILocation(line: 3072, column: 10, scope: !7545)
!7955 = !DILocation(line: 3072, column: 20, scope: !7545)
!7956 = !DILocation(line: 3073, column: 2, scope: !7545)
!7957 = !DILocation(line: 3073, column: 10, scope: !7545)
!7958 = !DILocation(line: 3073, column: 21, scope: !7545)
!7959 = !DILocation(line: 3074, column: 2, scope: !7545)
!7960 = !DILocation(line: 3074, column: 10, scope: !7545)
!7961 = !DILocation(line: 3074, column: 20, scope: !7545)
!7962 = !DILocation(line: 3075, column: 2, scope: !7545)
!7963 = !DILocation(line: 3075, column: 10, scope: !7545)
!7964 = !DILocation(line: 3075, column: 21, scope: !7545)
!7965 = !DILocation(line: 3077, column: 2, scope: !7545)
!7966 = !DILocation(line: 3077, column: 10, scope: !7545)
!7967 = !DILocation(line: 3077, column: 19, scope: !7545)
!7968 = !DILocation(line: 3078, column: 2, scope: !7545)
!7969 = !DILocation(line: 3078, column: 10, scope: !7545)
!7970 = !DILocation(line: 3078, column: 19, scope: !7545)
!7971 = !DILocation(line: 3079, column: 2, scope: !7545)
!7972 = !DILocation(line: 3079, column: 10, scope: !7545)
!7973 = !DILocation(line: 3079, column: 21, scope: !7545)
!7974 = !DILocation(line: 3080, column: 2, scope: !7545)
!7975 = !DILocation(line: 3080, column: 10, scope: !7545)
!7976 = !DILocation(line: 3080, column: 22, scope: !7545)
!7977 = !DILocation(line: 3082, column: 2, scope: !7545)
!7978 = !DILocation(line: 3082, column: 10, scope: !7545)
!7979 = !DILocation(line: 3082, column: 26, scope: !7545)
!7980 = !DILocation(line: 3083, column: 2, scope: !7545)
!7981 = !DILocation(line: 3083, column: 10, scope: !7545)
!7982 = !DILocation(line: 3083, column: 25, scope: !7545)
!7983 = !DILocation(line: 3084, column: 2, scope: !7545)
!7984 = !DILocation(line: 3084, column: 10, scope: !7545)
!7985 = !DILocation(line: 3084, column: 25, scope: !7545)
!7986 = !DILocation(line: 3085, column: 2, scope: !7545)
!7987 = !DILocation(line: 3085, column: 10, scope: !7545)
!7988 = !DILocation(line: 3085, column: 26, scope: !7545)
!7989 = !DILocation(line: 3088, column: 2, scope: !7545)
!7990 = !DILocation(line: 3088, column: 10, scope: !7545)
!7991 = !DILocation(line: 3088, column: 33, scope: !7545)
!7992 = !DILocation(line: 3089, column: 2, scope: !7545)
!7993 = !DILocation(line: 3089, column: 10, scope: !7545)
!7994 = !DILocation(line: 3089, column: 33, scope: !7545)
!7995 = !DILocation(line: 3090, column: 2, scope: !7545)
!7996 = !DILocation(line: 3090, column: 10, scope: !7545)
!7997 = !DILocation(line: 3090, column: 33, scope: !7545)
!7998 = !DILocation(line: 3091, column: 2, scope: !7545)
!7999 = !DILocation(line: 3091, column: 10, scope: !7545)
!8000 = !DILocation(line: 3091, column: 34, scope: !7545)
!8001 = !DILocation(line: 3094, column: 2, scope: !7545)
!8002 = !DILocation(line: 3094, column: 10, scope: !7545)
!8003 = !DILocation(line: 3094, column: 23, scope: !7545)
!8004 = !DILocation(line: 3095, column: 2, scope: !7545)
!8005 = !DILocation(line: 3095, column: 10, scope: !7545)
!8006 = !DILocation(line: 3095, column: 23, scope: !7545)
!8007 = !DILocation(line: 3096, column: 2, scope: !7545)
!8008 = !DILocation(line: 3096, column: 10, scope: !7545)
!8009 = !DILocation(line: 3096, column: 24, scope: !7545)
!8010 = !DILocation(line: 3097, column: 2, scope: !7545)
!8011 = !DILocation(line: 3097, column: 10, scope: !7545)
!8012 = !DILocation(line: 3097, column: 24, scope: !7545)
!8013 = !DILocation(line: 3098, column: 2, scope: !7545)
!8014 = !DILocation(line: 3098, column: 10, scope: !7545)
!8015 = !DILocation(line: 3098, column: 23, scope: !7545)
!8016 = !DILocation(line: 3099, column: 2, scope: !7545)
!8017 = !DILocation(line: 3099, column: 10, scope: !7545)
!8018 = !DILocation(line: 3099, column: 26, scope: !7545)
!8019 = !DILocation(line: 3100, column: 2, scope: !7545)
!8020 = !DILocation(line: 3100, column: 10, scope: !7545)
!8021 = !DILocation(line: 3100, column: 24, scope: !7545)
!8022 = !DILocation(line: 3103, column: 2, scope: !7545)
!8023 = !DILocation(line: 3103, column: 10, scope: !7545)
!8024 = !DILocation(line: 3103, column: 33, scope: !7545)
!8025 = !DILocation(line: 3104, column: 2, scope: !7545)
!8026 = !DILocation(line: 3104, column: 10, scope: !7545)
!8027 = !DILocation(line: 3104, column: 33, scope: !7545)
!8028 = !DILocation(line: 3107, column: 2, scope: !7545)
!8029 = !DILocation(line: 3107, column: 10, scope: !7545)
!8030 = !DILocation(line: 3107, column: 35, scope: !7545)
!8031 = !DILocation(line: 3108, column: 2, scope: !7545)
!8032 = !DILocation(line: 3108, column: 10, scope: !7545)
!8033 = !DILocation(line: 3108, column: 36, scope: !7545)
!8034 = !DILocation(line: 3109, column: 2, scope: !7545)
!8035 = !DILocation(line: 3109, column: 10, scope: !7545)
!8036 = !DILocation(line: 3109, column: 35, scope: !7545)
!8037 = !DILocation(line: 3110, column: 2, scope: !7545)
!8038 = !DILocation(line: 3110, column: 10, scope: !7545)
!8039 = !DILocation(line: 3110, column: 36, scope: !7545)
!8040 = !DILocation(line: 3111, column: 2, scope: !7545)
!8041 = !DILocation(line: 3111, column: 10, scope: !7545)
!8042 = !DILocation(line: 3111, column: 33, scope: !7545)
!8043 = !DILocation(line: 3114, column: 2, scope: !7545)
!8044 = !DILocation(line: 3114, column: 10, scope: !7545)
!8045 = !DILocation(line: 3114, column: 29, scope: !7545)
!8046 = !DILocation(line: 3115, column: 2, scope: !7545)
!8047 = !DILocation(line: 3115, column: 10, scope: !7545)
!8048 = !DILocation(line: 3115, column: 29, scope: !7545)
!8049 = !DILocation(line: 3116, column: 2, scope: !7545)
!8050 = !DILocation(line: 3116, column: 10, scope: !7545)
!8051 = !DILocation(line: 3116, column: 23, scope: !7545)
!8052 = !DILocation(line: 3117, column: 2, scope: !7545)
!8053 = !DILocation(line: 3117, column: 10, scope: !7545)
!8054 = !DILocation(line: 3117, column: 23, scope: !7545)
!8055 = !DILocation(line: 3120, column: 2, scope: !7545)
!8056 = !DILocation(line: 3120, column: 10, scope: !7545)
!8057 = !DILocation(line: 3120, column: 30, scope: !7545)
!8058 = !DILocation(line: 3121, column: 2, scope: !7545)
!8059 = !DILocation(line: 3121, column: 10, scope: !7545)
!8060 = !DILocation(line: 3121, column: 30, scope: !7545)
!8061 = !DILocation(line: 3124, column: 2, scope: !7545)
!8062 = !DILocation(line: 3124, column: 10, scope: !7545)
!8063 = !DILocation(line: 3124, column: 26, scope: !7545)
!8064 = !DILocation(line: 3125, column: 2, scope: !7545)
!8065 = !DILocation(line: 3125, column: 10, scope: !7545)
!8066 = !DILocation(line: 3125, column: 26, scope: !7545)
!8067 = !DILocation(line: 3128, column: 2, scope: !7545)
!8068 = !DILocation(line: 3128, column: 10, scope: !7545)
!8069 = !DILocation(line: 3128, column: 26, scope: !7545)
!8070 = !DILocation(line: 3131, column: 2, scope: !7545)
!8071 = !DILocation(line: 3131, column: 10, scope: !7545)
!8072 = !DILocation(line: 3131, column: 28, scope: !7545)
!8073 = !DILocation(line: 3132, column: 2, scope: !7545)
!8074 = !DILocation(line: 3132, column: 10, scope: !7545)
!8075 = !DILocation(line: 3132, column: 25, scope: !7545)
!8076 = !DILocation(line: 3133, column: 2, scope: !7545)
!8077 = !DILocation(line: 3133, column: 10, scope: !7545)
!8078 = !DILocation(line: 3133, column: 28, scope: !7545)
!8079 = !DILocation(line: 3134, column: 2, scope: !7545)
!8080 = !DILocation(line: 3134, column: 10, scope: !7545)
!8081 = !DILocation(line: 3134, column: 25, scope: !7545)
!8082 = !DILocation(line: 3135, column: 2, scope: !7545)
!8083 = !DILocation(line: 3135, column: 10, scope: !7545)
!8084 = !DILocation(line: 3135, column: 23, scope: !7545)
!8085 = !DILocation(line: 3138, column: 2, scope: !7545)
!8086 = !DILocation(line: 3138, column: 10, scope: !7545)
!8087 = !DILocation(line: 3138, column: 21, scope: !7545)
!8088 = !DILocation(line: 3139, column: 2, scope: !7545)
!8089 = !DILocation(line: 3139, column: 10, scope: !7545)
!8090 = !DILocation(line: 3139, column: 21, scope: !7545)
!8091 = !DILocation(line: 3140, column: 2, scope: !7545)
!8092 = !DILocation(line: 3140, column: 10, scope: !7545)
!8093 = !DILocation(line: 3140, column: 25, scope: !7545)
!8094 = !DILocation(line: 3143, column: 2, scope: !7545)
!8095 = !DILocation(line: 3143, column: 10, scope: !7545)
!8096 = !DILocation(line: 3143, column: 21, scope: !7545)
!8097 = !DILocation(line: 3144, column: 2, scope: !7545)
!8098 = !DILocation(line: 3144, column: 10, scope: !7545)
!8099 = !DILocation(line: 3144, column: 22, scope: !7545)
!8100 = !DILocation(line: 3145, column: 2, scope: !7545)
!8101 = !DILocation(line: 3145, column: 10, scope: !7545)
!8102 = !DILocation(line: 3145, column: 27, scope: !7545)
!8103 = !DILocation(line: 3146, column: 2, scope: !7545)
!8104 = !DILocation(line: 3146, column: 10, scope: !7545)
!8105 = !DILocation(line: 3146, column: 31, scope: !7545)
!8106 = !DILocation(line: 3147, column: 1, scope: !7545)
!8107 = distinct !DISubprogram(name: "xlgmac_hw_init", scope: !1, file: !1, line: 2987, type: !7553, scopeLine: 2988, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1619)
!8108 = !DILocalVariable(name: "pdata", arg: 1, scope: !8107, file: !1, line: 2987, type: !7555)
!8109 = !DILocation(line: 2987, column: 48, scope: !8107)
!8110 = !DILocalVariable(name: "desc_ops", scope: !8107, file: !1, line: 2989, type: !8111)
!8111 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7562, size: 64)
!8112 = !DILocation(line: 2989, column: 26, scope: !8107)
!8113 = !DILocation(line: 2989, column: 38, scope: !8107)
!8114 = !DILocation(line: 2989, column: 45, scope: !8107)
!8115 = !DILocalVariable(name: "ret", scope: !8107, file: !1, line: 2990, type: !5)
!8116 = !DILocation(line: 2990, column: 6, scope: !8107)
!8117 = !DILocation(line: 2993, column: 31, scope: !8107)
!8118 = !DILocation(line: 2993, column: 8, scope: !8107)
!8119 = !DILocation(line: 2993, column: 6, scope: !8107)
!8120 = !DILocation(line: 2994, column: 6, scope: !8121)
!8121 = distinct !DILexicalBlock(scope: !8107, file: !1, line: 2994, column: 6)
!8122 = !DILocation(line: 2994, column: 6, scope: !8107)
!8123 = !DILocation(line: 2995, column: 10, scope: !8121)
!8124 = !DILocation(line: 2995, column: 3, scope: !8121)
!8125 = !DILocation(line: 2998, column: 24, scope: !8107)
!8126 = !DILocation(line: 2998, column: 2, scope: !8107)
!8127 = !DILocation(line: 2999, column: 25, scope: !8107)
!8128 = !DILocation(line: 2999, column: 2, scope: !8107)
!8129 = !DILocation(line: 3000, column: 22, scope: !8107)
!8130 = !DILocation(line: 3000, column: 2, scope: !8107)
!8131 = !DILocation(line: 3001, column: 27, scope: !8107)
!8132 = !DILocation(line: 3001, column: 2, scope: !8107)
!8133 = !DILocation(line: 3002, column: 27, scope: !8107)
!8134 = !DILocation(line: 3002, column: 2, scope: !8107)
!8135 = !DILocation(line: 3003, column: 28, scope: !8107)
!8136 = !DILocation(line: 3003, column: 2, scope: !8107)
!8137 = !DILocation(line: 3004, column: 28, scope: !8107)
!8138 = !DILocation(line: 3004, column: 2, scope: !8107)
!8139 = !DILocation(line: 3005, column: 31, scope: !8107)
!8140 = !DILocation(line: 3005, column: 2, scope: !8107)
!8141 = !DILocation(line: 3006, column: 25, scope: !8107)
!8142 = !DILocation(line: 3006, column: 2, scope: !8107)
!8143 = !DILocation(line: 3007, column: 25, scope: !8107)
!8144 = !DILocation(line: 3007, column: 2, scope: !8107)
!8145 = !DILocation(line: 3008, column: 20, scope: !8107)
!8146 = !DILocation(line: 3008, column: 2, scope: !8107)
!8147 = !DILocation(line: 3009, column: 2, scope: !8107)
!8148 = !DILocation(line: 3009, column: 12, scope: !8107)
!8149 = !DILocation(line: 3009, column: 25, scope: !8107)
!8150 = !DILocation(line: 3010, column: 2, scope: !8107)
!8151 = !DILocation(line: 3010, column: 12, scope: !8107)
!8152 = !DILocation(line: 3010, column: 25, scope: !8107)
!8153 = !DILocation(line: 3011, column: 31, scope: !8107)
!8154 = !DILocation(line: 3011, column: 2, scope: !8107)
!8155 = !DILocation(line: 3014, column: 25, scope: !8107)
!8156 = !DILocation(line: 3014, column: 2, scope: !8107)
!8157 = !DILocation(line: 3015, column: 30, scope: !8107)
!8158 = !DILocation(line: 3015, column: 2, scope: !8107)
!8159 = !DILocation(line: 3016, column: 25, scope: !8107)
!8160 = !DILocation(line: 3016, column: 32, scope: !8107)
!8161 = !DILocation(line: 3016, column: 39, scope: !8107)
!8162 = !DILocation(line: 3016, column: 2, scope: !8107)
!8163 = !DILocation(line: 3017, column: 25, scope: !8107)
!8164 = !DILocation(line: 3017, column: 32, scope: !8107)
!8165 = !DILocation(line: 3017, column: 39, scope: !8107)
!8166 = !DILocation(line: 3017, column: 2, scope: !8107)
!8167 = !DILocation(line: 3018, column: 29, scope: !8107)
!8168 = !DILocation(line: 3018, column: 36, scope: !8107)
!8169 = !DILocation(line: 3018, column: 43, scope: !8107)
!8170 = !DILocation(line: 3018, column: 2, scope: !8107)
!8171 = !DILocation(line: 3019, column: 29, scope: !8107)
!8172 = !DILocation(line: 3019, column: 36, scope: !8107)
!8173 = !DILocation(line: 3019, column: 43, scope: !8107)
!8174 = !DILocation(line: 3019, column: 2, scope: !8107)
!8175 = !DILocation(line: 3020, column: 29, scope: !8107)
!8176 = !DILocation(line: 3020, column: 2, scope: !8107)
!8177 = !DILocation(line: 3021, column: 29, scope: !8107)
!8178 = !DILocation(line: 3021, column: 2, scope: !8107)
!8179 = !DILocation(line: 3022, column: 39, scope: !8107)
!8180 = !DILocation(line: 3022, column: 2, scope: !8107)
!8181 = !DILocation(line: 3023, column: 30, scope: !8107)
!8182 = !DILocation(line: 3023, column: 2, scope: !8107)
!8183 = !DILocation(line: 3024, column: 30, scope: !8107)
!8184 = !DILocation(line: 3024, column: 2, scope: !8107)
!8185 = !DILocation(line: 3025, column: 31, scope: !8107)
!8186 = !DILocation(line: 3025, column: 2, scope: !8107)
!8187 = !DILocation(line: 3028, column: 28, scope: !8107)
!8188 = !DILocation(line: 3028, column: 2, scope: !8107)
!8189 = !DILocation(line: 3029, column: 24, scope: !8107)
!8190 = !DILocation(line: 3029, column: 2, scope: !8107)
!8191 = !DILocation(line: 3030, column: 29, scope: !8107)
!8192 = !DILocation(line: 3030, column: 2, scope: !8107)
!8193 = !DILocation(line: 3031, column: 29, scope: !8107)
!8194 = !DILocation(line: 3031, column: 2, scope: !8107)
!8195 = !DILocation(line: 3032, column: 26, scope: !8107)
!8196 = !DILocation(line: 3032, column: 2, scope: !8107)
!8197 = !DILocation(line: 3033, column: 33, scope: !8107)
!8198 = !DILocation(line: 3033, column: 2, scope: !8107)
!8199 = !DILocation(line: 3034, column: 29, scope: !8107)
!8200 = !DILocation(line: 3034, column: 2, scope: !8107)
!8201 = !DILocation(line: 3035, column: 20, scope: !8107)
!8202 = !DILocation(line: 3035, column: 2, scope: !8107)
!8203 = !DILocation(line: 3036, column: 31, scope: !8107)
!8204 = !DILocation(line: 3036, column: 2, scope: !8107)
!8205 = !DILocation(line: 3038, column: 2, scope: !8107)
!8206 = !DILocation(line: 3039, column: 1, scope: !8107)
!8207 = distinct !DISubprogram(name: "xlgmac_hw_exit", scope: !1, file: !1, line: 3041, type: !7553, scopeLine: 3042, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1619)
!8208 = !DILocalVariable(name: "pdata", arg: 1, scope: !8207, file: !1, line: 3041, type: !7555)
!8209 = !DILocation(line: 3041, column: 48, scope: !8207)
!8210 = !DILocalVariable(name: "count", scope: !8207, file: !1, line: 3043, type: !11)
!8211 = !DILocation(line: 3043, column: 15, scope: !8207)
!8212 = !DILocalVariable(name: "regval", scope: !8207, file: !1, line: 3044, type: !1021)
!8213 = !DILocation(line: 3044, column: 6, scope: !8207)
!8214 = !DILocation(line: 3047, column: 17, scope: !8207)
!8215 = !DILocation(line: 3047, column: 24, scope: !8207)
!8216 = !DILocation(line: 3047, column: 33, scope: !8207)
!8217 = !DILocation(line: 3047, column: 11, scope: !8207)
!8218 = !DILocation(line: 3047, column: 9, scope: !8207)
!8219 = !DILocalVariable(name: "_var", scope: !8220, file: !1, line: 3048, type: !1021)
!8220 = distinct !DILexicalBlock(scope: !8207, file: !1, line: 3048, column: 11)
!8221 = !DILocation(line: 3048, column: 11, scope: !8220)
!8222 = !DILocalVariable(name: "_pos", scope: !8220, file: !1, line: 3048, type: !5)
!8223 = !DILocalVariable(name: "_len", scope: !8220, file: !1, line: 3048, type: !5)
!8224 = !DILocalVariable(name: "_val", scope: !8220, file: !1, line: 3048, type: !5)
!8225 = !DILocation(line: 3048, column: 9, scope: !8207)
!8226 = !DILocation(line: 3050, column: 9, scope: !8207)
!8227 = !DILocation(line: 3050, column: 17, scope: !8207)
!8228 = !DILocation(line: 3050, column: 24, scope: !8207)
!8229 = !DILocation(line: 3050, column: 33, scope: !8207)
!8230 = !DILocation(line: 3050, column: 2, scope: !8207)
!8231 = !DILocation(line: 3051, column: 2, scope: !8207)
!8232 = !DILocation(line: 3054, column: 2, scope: !8207)
!8233 = !DILocation(line: 3054, column: 9, scope: !8207)
!8234 = !DILocation(line: 3054, column: 17, scope: !8207)
!8235 = !DILocalVariable(name: "_pos", scope: !8236, file: !1, line: 3055, type: !5)
!8236 = distinct !DILexicalBlock(scope: !8207, file: !1, line: 3055, column: 9)
!8237 = !DILocation(line: 3055, column: 9, scope: !8236)
!8238 = !DILocalVariable(name: "_len", scope: !8236, file: !1, line: 3055, type: !5)
!8239 = !DILocation(line: 0, scope: !8207)
!8240 = !DILocation(line: 3057, column: 3, scope: !8207)
!8241 = distinct !{!8241, !8232, !8242}
!8242 = !DILocation(line: 3057, column: 24, scope: !8207)
!8243 = !DILocation(line: 3059, column: 7, scope: !8244)
!8244 = distinct !DILexicalBlock(scope: !8207, file: !1, line: 3059, column: 6)
!8245 = !DILocation(line: 3059, column: 6, scope: !8207)
!8246 = !DILocation(line: 3060, column: 3, scope: !8244)
!8247 = !DILocation(line: 3062, column: 2, scope: !8207)
!8248 = !DILocation(line: 3063, column: 1, scope: !8207)
!8249 = distinct !DISubprogram(name: "xlgmac_tx_complete", scope: !1, file: !1, line: 29, type: !7856, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1619)
!8250 = !DILocalVariable(name: "dma_desc", arg: 1, scope: !8249, file: !1, line: 29, type: !7635)
!8251 = !DILocation(line: 29, column: 55, scope: !8249)
!8252 = !DILocalVariable(name: "_pos", scope: !8253, file: !1, line: 31, type: !5)
!8253 = distinct !DILexicalBlock(scope: !8249, file: !1, line: 31, column: 10)
!8254 = !DILocation(line: 31, column: 10, scope: !8253)
!8255 = !DILocalVariable(name: "_len", scope: !8253, file: !1, line: 31, type: !5)
!8256 = !DILocalVariable(name: "_var", scope: !8253, file: !1, line: 31, type: !7527)
!8257 = !DILocation(line: 31, column: 9, scope: !8249)
!8258 = !DILocation(line: 31, column: 2, scope: !8249)
!8259 = distinct !DISubprogram(name: "xlgmac_enable_tx", scope: !1, file: !1, line: 497, type: !7567, scopeLine: 498, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1619)
!8260 = !DILocalVariable(name: "pdata", arg: 1, scope: !8259, file: !1, line: 497, type: !7555)
!8261 = !DILocation(line: 497, column: 51, scope: !8259)
!8262 = !DILocalVariable(name: "channel", scope: !8259, file: !1, line: 499, type: !7573)
!8263 = !DILocation(line: 499, column: 25, scope: !8259)
!8264 = !DILocalVariable(name: "i", scope: !8259, file: !1, line: 500, type: !11)
!8265 = !DILocation(line: 500, column: 15, scope: !8259)
!8266 = !DILocalVariable(name: "regval", scope: !8259, file: !1, line: 501, type: !1021)
!8267 = !DILocation(line: 501, column: 6, scope: !8259)
!8268 = !DILocation(line: 504, column: 12, scope: !8259)
!8269 = !DILocation(line: 504, column: 19, scope: !8259)
!8270 = !DILocation(line: 504, column: 10, scope: !8259)
!8271 = !DILocation(line: 505, column: 9, scope: !8272)
!8272 = distinct !DILexicalBlock(scope: !8259, file: !1, line: 505, column: 2)
!8273 = !DILocation(line: 505, column: 7, scope: !8272)
!8274 = !DILocation(line: 505, column: 14, scope: !8275)
!8275 = distinct !DILexicalBlock(scope: !8272, file: !1, line: 505, column: 2)
!8276 = !DILocation(line: 505, column: 18, scope: !8275)
!8277 = !DILocation(line: 505, column: 25, scope: !8275)
!8278 = !DILocation(line: 505, column: 16, scope: !8275)
!8279 = !DILocation(line: 505, column: 2, scope: !8272)
!8280 = !DILocation(line: 506, column: 8, scope: !8281)
!8281 = distinct !DILexicalBlock(scope: !8282, file: !1, line: 506, column: 7)
!8282 = distinct !DILexicalBlock(scope: !8275, file: !1, line: 505, column: 56)
!8283 = !DILocation(line: 506, column: 17, scope: !8281)
!8284 = !DILocation(line: 506, column: 7, scope: !8282)
!8285 = !DILocation(line: 507, column: 4, scope: !8281)
!8286 = !DILocation(line: 509, column: 18, scope: !8282)
!8287 = !DILocation(line: 509, column: 12, scope: !8282)
!8288 = !DILocation(line: 509, column: 10, scope: !8282)
!8289 = !DILocalVariable(name: "_var", scope: !8290, file: !1, line: 510, type: !1021)
!8290 = distinct !DILexicalBlock(scope: !8282, file: !1, line: 510, column: 12)
!8291 = !DILocation(line: 510, column: 12, scope: !8290)
!8292 = !DILocalVariable(name: "_pos", scope: !8290, file: !1, line: 510, type: !5)
!8293 = !DILocalVariable(name: "_len", scope: !8290, file: !1, line: 510, type: !5)
!8294 = !DILocalVariable(name: "_val", scope: !8290, file: !1, line: 510, type: !5)
!8295 = !DILocation(line: 510, column: 10, scope: !8282)
!8296 = !DILocation(line: 512, column: 10, scope: !8282)
!8297 = !DILocation(line: 512, column: 18, scope: !8282)
!8298 = !DILocation(line: 512, column: 3, scope: !8282)
!8299 = !DILocation(line: 513, column: 2, scope: !8282)
!8300 = !DILocation(line: 505, column: 41, scope: !8275)
!8301 = !DILocation(line: 505, column: 52, scope: !8275)
!8302 = !DILocation(line: 505, column: 2, scope: !8275)
!8303 = distinct !{!8303, !8279, !8304}
!8304 = !DILocation(line: 513, column: 2, scope: !8272)
!8305 = !DILocation(line: 516, column: 9, scope: !8306)
!8306 = distinct !DILexicalBlock(scope: !8259, file: !1, line: 516, column: 2)
!8307 = !DILocation(line: 516, column: 7, scope: !8306)
!8308 = !DILocation(line: 516, column: 14, scope: !8309)
!8309 = distinct !DILexicalBlock(scope: !8306, file: !1, line: 516, column: 2)
!8310 = !DILocation(line: 516, column: 18, scope: !8309)
!8311 = !DILocation(line: 516, column: 25, scope: !8309)
!8312 = !DILocation(line: 516, column: 16, scope: !8309)
!8313 = !DILocation(line: 516, column: 2, scope: !8306)
!8314 = !DILocation(line: 517, column: 18, scope: !8315)
!8315 = distinct !DILexicalBlock(scope: !8309, file: !1, line: 516, column: 42)
!8316 = !DILocation(line: 517, column: 12, scope: !8315)
!8317 = !DILocation(line: 517, column: 10, scope: !8315)
!8318 = !DILocalVariable(name: "_var", scope: !8319, file: !1, line: 518, type: !1021)
!8319 = distinct !DILexicalBlock(scope: !8315, file: !1, line: 518, column: 12)
!8320 = !DILocation(line: 518, column: 12, scope: !8319)
!8321 = !DILocalVariable(name: "_pos", scope: !8319, file: !1, line: 518, type: !5)
!8322 = !DILocalVariable(name: "_len", scope: !8319, file: !1, line: 518, type: !5)
!8323 = !DILocalVariable(name: "_val", scope: !8319, file: !1, line: 518, type: !5)
!8324 = !DILocation(line: 518, column: 10, scope: !8315)
!8325 = !DILocation(line: 521, column: 10, scope: !8315)
!8326 = !DILocation(line: 521, column: 18, scope: !8315)
!8327 = !DILocation(line: 521, column: 3, scope: !8315)
!8328 = !DILocation(line: 522, column: 2, scope: !8315)
!8329 = !DILocation(line: 516, column: 38, scope: !8309)
!8330 = !DILocation(line: 516, column: 2, scope: !8309)
!8331 = distinct !{!8331, !8313, !8332}
!8332 = !DILocation(line: 522, column: 2, scope: !8306)
!8333 = !DILocation(line: 525, column: 17, scope: !8259)
!8334 = !DILocation(line: 525, column: 24, scope: !8259)
!8335 = !DILocation(line: 525, column: 33, scope: !8259)
!8336 = !DILocation(line: 525, column: 11, scope: !8259)
!8337 = !DILocation(line: 525, column: 9, scope: !8259)
!8338 = !DILocalVariable(name: "_var", scope: !8339, file: !1, line: 526, type: !1021)
!8339 = distinct !DILexicalBlock(scope: !8259, file: !1, line: 526, column: 11)
!8340 = !DILocation(line: 526, column: 11, scope: !8339)
!8341 = !DILocalVariable(name: "_pos", scope: !8339, file: !1, line: 526, type: !5)
!8342 = !DILocalVariable(name: "_len", scope: !8339, file: !1, line: 526, type: !5)
!8343 = !DILocalVariable(name: "_val", scope: !8339, file: !1, line: 526, type: !5)
!8344 = !DILocation(line: 526, column: 9, scope: !8259)
!8345 = !DILocation(line: 528, column: 9, scope: !8259)
!8346 = !DILocation(line: 528, column: 17, scope: !8259)
!8347 = !DILocation(line: 528, column: 24, scope: !8259)
!8348 = !DILocation(line: 528, column: 33, scope: !8259)
!8349 = !DILocation(line: 528, column: 2, scope: !8259)
!8350 = !DILocation(line: 529, column: 1, scope: !8259)
!8351 = distinct !DISubprogram(name: "xlgmac_disable_tx", scope: !1, file: !1, line: 531, type: !7567, scopeLine: 532, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1619)
!8352 = !DILocalVariable(name: "pdata", arg: 1, scope: !8351, file: !1, line: 531, type: !7555)
!8353 = !DILocation(line: 531, column: 52, scope: !8351)
!8354 = !DILocalVariable(name: "channel", scope: !8351, file: !1, line: 533, type: !7573)
!8355 = !DILocation(line: 533, column: 25, scope: !8351)
!8356 = !DILocalVariable(name: "i", scope: !8351, file: !1, line: 534, type: !11)
!8357 = !DILocation(line: 534, column: 15, scope: !8351)
!8358 = !DILocalVariable(name: "regval", scope: !8351, file: !1, line: 535, type: !1021)
!8359 = !DILocation(line: 535, column: 6, scope: !8351)
!8360 = !DILocation(line: 538, column: 12, scope: !8351)
!8361 = !DILocation(line: 538, column: 19, scope: !8351)
!8362 = !DILocation(line: 538, column: 10, scope: !8351)
!8363 = !DILocation(line: 539, column: 9, scope: !8364)
!8364 = distinct !DILexicalBlock(scope: !8351, file: !1, line: 539, column: 2)
!8365 = !DILocation(line: 539, column: 7, scope: !8364)
!8366 = !DILocation(line: 539, column: 14, scope: !8367)
!8367 = distinct !DILexicalBlock(scope: !8364, file: !1, line: 539, column: 2)
!8368 = !DILocation(line: 539, column: 18, scope: !8367)
!8369 = !DILocation(line: 539, column: 25, scope: !8367)
!8370 = !DILocation(line: 539, column: 16, scope: !8367)
!8371 = !DILocation(line: 539, column: 2, scope: !8364)
!8372 = !DILocation(line: 540, column: 8, scope: !8373)
!8373 = distinct !DILexicalBlock(scope: !8374, file: !1, line: 540, column: 7)
!8374 = distinct !DILexicalBlock(scope: !8367, file: !1, line: 539, column: 56)
!8375 = !DILocation(line: 540, column: 17, scope: !8373)
!8376 = !DILocation(line: 540, column: 7, scope: !8374)
!8377 = !DILocation(line: 541, column: 4, scope: !8373)
!8378 = !DILocation(line: 543, column: 26, scope: !8374)
!8379 = !DILocation(line: 543, column: 33, scope: !8374)
!8380 = !DILocation(line: 543, column: 3, scope: !8374)
!8381 = !DILocation(line: 544, column: 2, scope: !8374)
!8382 = !DILocation(line: 539, column: 41, scope: !8367)
!8383 = !DILocation(line: 539, column: 52, scope: !8367)
!8384 = !DILocation(line: 539, column: 2, scope: !8367)
!8385 = distinct !{!8385, !8371, !8386}
!8386 = !DILocation(line: 544, column: 2, scope: !8364)
!8387 = !DILocation(line: 547, column: 17, scope: !8351)
!8388 = !DILocation(line: 547, column: 24, scope: !8351)
!8389 = !DILocation(line: 547, column: 33, scope: !8351)
!8390 = !DILocation(line: 547, column: 11, scope: !8351)
!8391 = !DILocation(line: 547, column: 9, scope: !8351)
!8392 = !DILocalVariable(name: "_var", scope: !8393, file: !1, line: 548, type: !1021)
!8393 = distinct !DILexicalBlock(scope: !8351, file: !1, line: 548, column: 11)
!8394 = !DILocation(line: 548, column: 11, scope: !8393)
!8395 = !DILocalVariable(name: "_pos", scope: !8393, file: !1, line: 548, type: !5)
!8396 = !DILocalVariable(name: "_len", scope: !8393, file: !1, line: 548, type: !5)
!8397 = !DILocalVariable(name: "_val", scope: !8393, file: !1, line: 548, type: !5)
!8398 = !DILocation(line: 548, column: 9, scope: !8351)
!8399 = !DILocation(line: 550, column: 9, scope: !8351)
!8400 = !DILocation(line: 550, column: 17, scope: !8351)
!8401 = !DILocation(line: 550, column: 24, scope: !8351)
!8402 = !DILocation(line: 550, column: 33, scope: !8351)
!8403 = !DILocation(line: 550, column: 2, scope: !8351)
!8404 = !DILocation(line: 553, column: 9, scope: !8405)
!8405 = distinct !DILexicalBlock(scope: !8351, file: !1, line: 553, column: 2)
!8406 = !DILocation(line: 553, column: 7, scope: !8405)
!8407 = !DILocation(line: 553, column: 14, scope: !8408)
!8408 = distinct !DILexicalBlock(scope: !8405, file: !1, line: 553, column: 2)
!8409 = !DILocation(line: 553, column: 18, scope: !8408)
!8410 = !DILocation(line: 553, column: 25, scope: !8408)
!8411 = !DILocation(line: 553, column: 16, scope: !8408)
!8412 = !DILocation(line: 553, column: 2, scope: !8405)
!8413 = !DILocation(line: 554, column: 18, scope: !8414)
!8414 = distinct !DILexicalBlock(scope: !8408, file: !1, line: 553, column: 42)
!8415 = !DILocation(line: 554, column: 12, scope: !8414)
!8416 = !DILocation(line: 554, column: 10, scope: !8414)
!8417 = !DILocalVariable(name: "_var", scope: !8418, file: !1, line: 555, type: !1021)
!8418 = distinct !DILexicalBlock(scope: !8414, file: !1, line: 555, column: 12)
!8419 = !DILocation(line: 555, column: 12, scope: !8418)
!8420 = !DILocalVariable(name: "_pos", scope: !8418, file: !1, line: 555, type: !5)
!8421 = !DILocalVariable(name: "_len", scope: !8418, file: !1, line: 555, type: !5)
!8422 = !DILocalVariable(name: "_val", scope: !8418, file: !1, line: 555, type: !5)
!8423 = !DILocation(line: 555, column: 10, scope: !8414)
!8424 = !DILocation(line: 557, column: 10, scope: !8414)
!8425 = !DILocation(line: 557, column: 18, scope: !8414)
!8426 = !DILocation(line: 557, column: 3, scope: !8414)
!8427 = !DILocation(line: 558, column: 2, scope: !8414)
!8428 = !DILocation(line: 553, column: 38, scope: !8408)
!8429 = !DILocation(line: 553, column: 2, scope: !8408)
!8430 = distinct !{!8430, !8412, !8431}
!8431 = !DILocation(line: 558, column: 2, scope: !8405)
!8432 = !DILocation(line: 561, column: 12, scope: !8351)
!8433 = !DILocation(line: 561, column: 19, scope: !8351)
!8434 = !DILocation(line: 561, column: 10, scope: !8351)
!8435 = !DILocation(line: 562, column: 9, scope: !8436)
!8436 = distinct !DILexicalBlock(scope: !8351, file: !1, line: 562, column: 2)
!8437 = !DILocation(line: 562, column: 7, scope: !8436)
!8438 = !DILocation(line: 562, column: 14, scope: !8439)
!8439 = distinct !DILexicalBlock(scope: !8436, file: !1, line: 562, column: 2)
!8440 = !DILocation(line: 562, column: 18, scope: !8439)
!8441 = !DILocation(line: 562, column: 25, scope: !8439)
!8442 = !DILocation(line: 562, column: 16, scope: !8439)
!8443 = !DILocation(line: 562, column: 2, scope: !8436)
!8444 = !DILocation(line: 563, column: 8, scope: !8445)
!8445 = distinct !DILexicalBlock(scope: !8446, file: !1, line: 563, column: 7)
!8446 = distinct !DILexicalBlock(scope: !8439, file: !1, line: 562, column: 56)
!8447 = !DILocation(line: 563, column: 17, scope: !8445)
!8448 = !DILocation(line: 563, column: 7, scope: !8446)
!8449 = !DILocation(line: 564, column: 4, scope: !8445)
!8450 = !DILocation(line: 566, column: 18, scope: !8446)
!8451 = !DILocation(line: 566, column: 12, scope: !8446)
!8452 = !DILocation(line: 566, column: 10, scope: !8446)
!8453 = !DILocalVariable(name: "_var", scope: !8454, file: !1, line: 567, type: !1021)
!8454 = distinct !DILexicalBlock(scope: !8446, file: !1, line: 567, column: 12)
!8455 = !DILocation(line: 567, column: 12, scope: !8454)
!8456 = !DILocalVariable(name: "_pos", scope: !8454, file: !1, line: 567, type: !5)
!8457 = !DILocalVariable(name: "_len", scope: !8454, file: !1, line: 567, type: !5)
!8458 = !DILocalVariable(name: "_val", scope: !8454, file: !1, line: 567, type: !5)
!8459 = !DILocation(line: 567, column: 10, scope: !8446)
!8460 = !DILocation(line: 569, column: 10, scope: !8446)
!8461 = !DILocation(line: 569, column: 18, scope: !8446)
!8462 = !DILocation(line: 569, column: 3, scope: !8446)
!8463 = !DILocation(line: 570, column: 2, scope: !8446)
!8464 = !DILocation(line: 562, column: 41, scope: !8439)
!8465 = !DILocation(line: 562, column: 52, scope: !8439)
!8466 = !DILocation(line: 562, column: 2, scope: !8439)
!8467 = distinct !{!8467, !8443, !8468}
!8468 = !DILocation(line: 570, column: 2, scope: !8436)
!8469 = !DILocation(line: 571, column: 1, scope: !8351)
!8470 = distinct !DISubprogram(name: "xlgmac_enable_rx", scope: !1, file: !1, line: 602, type: !7567, scopeLine: 603, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1619)
!8471 = !DILocalVariable(name: "pdata", arg: 1, scope: !8470, file: !1, line: 602, type: !7555)
!8472 = !DILocation(line: 602, column: 51, scope: !8470)
!8473 = !DILocalVariable(name: "channel", scope: !8470, file: !1, line: 604, type: !7573)
!8474 = !DILocation(line: 604, column: 25, scope: !8470)
!8475 = !DILocalVariable(name: "regval", scope: !8470, file: !1, line: 605, type: !11)
!8476 = !DILocation(line: 605, column: 15, scope: !8470)
!8477 = !DILocalVariable(name: "i", scope: !8470, file: !1, line: 605, type: !11)
!8478 = !DILocation(line: 605, column: 23, scope: !8470)
!8479 = !DILocation(line: 608, column: 12, scope: !8470)
!8480 = !DILocation(line: 608, column: 19, scope: !8470)
!8481 = !DILocation(line: 608, column: 10, scope: !8470)
!8482 = !DILocation(line: 609, column: 9, scope: !8483)
!8483 = distinct !DILexicalBlock(scope: !8470, file: !1, line: 609, column: 2)
!8484 = !DILocation(line: 609, column: 7, scope: !8483)
!8485 = !DILocation(line: 609, column: 14, scope: !8486)
!8486 = distinct !DILexicalBlock(scope: !8483, file: !1, line: 609, column: 2)
!8487 = !DILocation(line: 609, column: 18, scope: !8486)
!8488 = !DILocation(line: 609, column: 25, scope: !8486)
!8489 = !DILocation(line: 609, column: 16, scope: !8486)
!8490 = !DILocation(line: 609, column: 2, scope: !8483)
!8491 = !DILocation(line: 610, column: 8, scope: !8492)
!8492 = distinct !DILexicalBlock(scope: !8493, file: !1, line: 610, column: 7)
!8493 = distinct !DILexicalBlock(scope: !8486, file: !1, line: 609, column: 56)
!8494 = !DILocation(line: 610, column: 17, scope: !8492)
!8495 = !DILocation(line: 610, column: 7, scope: !8493)
!8496 = !DILocation(line: 611, column: 4, scope: !8492)
!8497 = !DILocation(line: 613, column: 18, scope: !8493)
!8498 = !DILocation(line: 613, column: 12, scope: !8493)
!8499 = !DILocation(line: 613, column: 10, scope: !8493)
!8500 = !DILocalVariable(name: "_var", scope: !8501, file: !1, line: 614, type: !11)
!8501 = distinct !DILexicalBlock(scope: !8493, file: !1, line: 614, column: 12)
!8502 = !DILocation(line: 614, column: 12, scope: !8501)
!8503 = !DILocalVariable(name: "_pos", scope: !8501, file: !1, line: 614, type: !5)
!8504 = !DILocalVariable(name: "_len", scope: !8501, file: !1, line: 614, type: !5)
!8505 = !DILocalVariable(name: "_val", scope: !8501, file: !1, line: 614, type: !5)
!8506 = !DILocation(line: 614, column: 10, scope: !8493)
!8507 = !DILocation(line: 616, column: 10, scope: !8493)
!8508 = !DILocation(line: 616, column: 18, scope: !8493)
!8509 = !DILocation(line: 616, column: 3, scope: !8493)
!8510 = !DILocation(line: 617, column: 2, scope: !8493)
!8511 = !DILocation(line: 609, column: 41, scope: !8486)
!8512 = !DILocation(line: 609, column: 52, scope: !8486)
!8513 = !DILocation(line: 609, column: 2, scope: !8486)
!8514 = distinct !{!8514, !8490, !8515}
!8515 = !DILocation(line: 617, column: 2, scope: !8483)
!8516 = !DILocation(line: 620, column: 9, scope: !8470)
!8517 = !DILocation(line: 621, column: 9, scope: !8518)
!8518 = distinct !DILexicalBlock(scope: !8470, file: !1, line: 621, column: 2)
!8519 = !DILocation(line: 621, column: 7, scope: !8518)
!8520 = !DILocation(line: 621, column: 14, scope: !8521)
!8521 = distinct !DILexicalBlock(scope: !8518, file: !1, line: 621, column: 2)
!8522 = !DILocation(line: 621, column: 18, scope: !8521)
!8523 = !DILocation(line: 621, column: 25, scope: !8521)
!8524 = !DILocation(line: 621, column: 16, scope: !8521)
!8525 = !DILocation(line: 621, column: 2, scope: !8518)
!8526 = !DILocation(line: 622, column: 23, scope: !8521)
!8527 = !DILocation(line: 622, column: 25, scope: !8521)
!8528 = !DILocation(line: 622, column: 19, scope: !8521)
!8529 = !DILocation(line: 622, column: 10, scope: !8521)
!8530 = !DILocation(line: 622, column: 3, scope: !8521)
!8531 = !DILocation(line: 621, column: 38, scope: !8521)
!8532 = !DILocation(line: 621, column: 2, scope: !8521)
!8533 = distinct !{!8533, !8525, !8534}
!8534 = !DILocation(line: 622, column: 30, scope: !8518)
!8535 = !DILocation(line: 623, column: 9, scope: !8470)
!8536 = !DILocation(line: 623, column: 17, scope: !8470)
!8537 = !DILocation(line: 623, column: 24, scope: !8470)
!8538 = !DILocation(line: 623, column: 33, scope: !8470)
!8539 = !DILocation(line: 623, column: 2, scope: !8470)
!8540 = !DILocation(line: 626, column: 17, scope: !8470)
!8541 = !DILocation(line: 626, column: 24, scope: !8470)
!8542 = !DILocation(line: 626, column: 33, scope: !8470)
!8543 = !DILocation(line: 626, column: 11, scope: !8470)
!8544 = !DILocation(line: 626, column: 9, scope: !8470)
!8545 = !DILocalVariable(name: "_var", scope: !8546, file: !1, line: 627, type: !11)
!8546 = distinct !DILexicalBlock(scope: !8470, file: !1, line: 627, column: 11)
!8547 = !DILocation(line: 627, column: 11, scope: !8546)
!8548 = !DILocalVariable(name: "_pos", scope: !8546, file: !1, line: 627, type: !5)
!8549 = !DILocalVariable(name: "_len", scope: !8546, file: !1, line: 627, type: !5)
!8550 = !DILocalVariable(name: "_val", scope: !8546, file: !1, line: 627, type: !5)
!8551 = !DILocation(line: 627, column: 9, scope: !8470)
!8552 = !DILocalVariable(name: "_var", scope: !8553, file: !1, line: 629, type: !11)
!8553 = distinct !DILexicalBlock(scope: !8470, file: !1, line: 629, column: 11)
!8554 = !DILocation(line: 629, column: 11, scope: !8553)
!8555 = !DILocalVariable(name: "_pos", scope: !8553, file: !1, line: 629, type: !5)
!8556 = !DILocalVariable(name: "_len", scope: !8553, file: !1, line: 629, type: !5)
!8557 = !DILocalVariable(name: "_val", scope: !8553, file: !1, line: 629, type: !5)
!8558 = !DILocation(line: 629, column: 9, scope: !8470)
!8559 = !DILocalVariable(name: "_var", scope: !8560, file: !1, line: 631, type: !11)
!8560 = distinct !DILexicalBlock(scope: !8470, file: !1, line: 631, column: 11)
!8561 = !DILocation(line: 631, column: 11, scope: !8560)
!8562 = !DILocalVariable(name: "_pos", scope: !8560, file: !1, line: 631, type: !5)
!8563 = !DILocalVariable(name: "_len", scope: !8560, file: !1, line: 631, type: !5)
!8564 = !DILocalVariable(name: "_val", scope: !8560, file: !1, line: 631, type: !5)
!8565 = !DILocation(line: 631, column: 9, scope: !8470)
!8566 = !DILocalVariable(name: "_var", scope: !8567, file: !1, line: 633, type: !11)
!8567 = distinct !DILexicalBlock(scope: !8470, file: !1, line: 633, column: 11)
!8568 = !DILocation(line: 633, column: 11, scope: !8567)
!8569 = !DILocalVariable(name: "_pos", scope: !8567, file: !1, line: 633, type: !5)
!8570 = !DILocalVariable(name: "_len", scope: !8567, file: !1, line: 633, type: !5)
!8571 = !DILocalVariable(name: "_val", scope: !8567, file: !1, line: 633, type: !5)
!8572 = !DILocation(line: 633, column: 9, scope: !8470)
!8573 = !DILocation(line: 635, column: 9, scope: !8470)
!8574 = !DILocation(line: 635, column: 17, scope: !8470)
!8575 = !DILocation(line: 635, column: 24, scope: !8470)
!8576 = !DILocation(line: 635, column: 33, scope: !8470)
!8577 = !DILocation(line: 635, column: 2, scope: !8470)
!8578 = !DILocation(line: 636, column: 1, scope: !8470)
!8579 = distinct !DISubprogram(name: "xlgmac_disable_rx", scope: !1, file: !1, line: 638, type: !7567, scopeLine: 639, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1619)
!8580 = !DILocalVariable(name: "pdata", arg: 1, scope: !8579, file: !1, line: 638, type: !7555)
!8581 = !DILocation(line: 638, column: 52, scope: !8579)
!8582 = !DILocalVariable(name: "channel", scope: !8579, file: !1, line: 640, type: !7573)
!8583 = !DILocation(line: 640, column: 25, scope: !8579)
!8584 = !DILocalVariable(name: "i", scope: !8579, file: !1, line: 641, type: !11)
!8585 = !DILocation(line: 641, column: 15, scope: !8579)
!8586 = !DILocalVariable(name: "regval", scope: !8579, file: !1, line: 642, type: !1021)
!8587 = !DILocation(line: 642, column: 6, scope: !8579)
!8588 = !DILocation(line: 645, column: 17, scope: !8579)
!8589 = !DILocation(line: 645, column: 24, scope: !8579)
!8590 = !DILocation(line: 645, column: 33, scope: !8579)
!8591 = !DILocation(line: 645, column: 11, scope: !8579)
!8592 = !DILocation(line: 645, column: 9, scope: !8579)
!8593 = !DILocalVariable(name: "_var", scope: !8594, file: !1, line: 646, type: !1021)
!8594 = distinct !DILexicalBlock(scope: !8579, file: !1, line: 646, column: 11)
!8595 = !DILocation(line: 646, column: 11, scope: !8594)
!8596 = !DILocalVariable(name: "_pos", scope: !8594, file: !1, line: 646, type: !5)
!8597 = !DILocalVariable(name: "_len", scope: !8594, file: !1, line: 646, type: !5)
!8598 = !DILocalVariable(name: "_val", scope: !8594, file: !1, line: 646, type: !5)
!8599 = !DILocation(line: 646, column: 9, scope: !8579)
!8600 = !DILocalVariable(name: "_var", scope: !8601, file: !1, line: 648, type: !1021)
!8601 = distinct !DILexicalBlock(scope: !8579, file: !1, line: 648, column: 11)
!8602 = !DILocation(line: 648, column: 11, scope: !8601)
!8603 = !DILocalVariable(name: "_pos", scope: !8601, file: !1, line: 648, type: !5)
!8604 = !DILocalVariable(name: "_len", scope: !8601, file: !1, line: 648, type: !5)
!8605 = !DILocalVariable(name: "_val", scope: !8601, file: !1, line: 648, type: !5)
!8606 = !DILocation(line: 648, column: 9, scope: !8579)
!8607 = !DILocalVariable(name: "_var", scope: !8608, file: !1, line: 650, type: !1021)
!8608 = distinct !DILexicalBlock(scope: !8579, file: !1, line: 650, column: 11)
!8609 = !DILocation(line: 650, column: 11, scope: !8608)
!8610 = !DILocalVariable(name: "_pos", scope: !8608, file: !1, line: 650, type: !5)
!8611 = !DILocalVariable(name: "_len", scope: !8608, file: !1, line: 650, type: !5)
!8612 = !DILocalVariable(name: "_val", scope: !8608, file: !1, line: 650, type: !5)
!8613 = !DILocation(line: 650, column: 9, scope: !8579)
!8614 = !DILocalVariable(name: "_var", scope: !8615, file: !1, line: 652, type: !1021)
!8615 = distinct !DILexicalBlock(scope: !8579, file: !1, line: 652, column: 11)
!8616 = !DILocation(line: 652, column: 11, scope: !8615)
!8617 = !DILocalVariable(name: "_pos", scope: !8615, file: !1, line: 652, type: !5)
!8618 = !DILocalVariable(name: "_len", scope: !8615, file: !1, line: 652, type: !5)
!8619 = !DILocalVariable(name: "_val", scope: !8615, file: !1, line: 652, type: !5)
!8620 = !DILocation(line: 652, column: 9, scope: !8579)
!8621 = !DILocation(line: 654, column: 9, scope: !8579)
!8622 = !DILocation(line: 654, column: 17, scope: !8579)
!8623 = !DILocation(line: 654, column: 24, scope: !8579)
!8624 = !DILocation(line: 654, column: 33, scope: !8579)
!8625 = !DILocation(line: 654, column: 2, scope: !8579)
!8626 = !DILocation(line: 657, column: 9, scope: !8627)
!8627 = distinct !DILexicalBlock(scope: !8579, file: !1, line: 657, column: 2)
!8628 = !DILocation(line: 657, column: 7, scope: !8627)
!8629 = !DILocation(line: 657, column: 14, scope: !8630)
!8630 = distinct !DILexicalBlock(scope: !8627, file: !1, line: 657, column: 2)
!8631 = !DILocation(line: 657, column: 18, scope: !8630)
!8632 = !DILocation(line: 657, column: 25, scope: !8630)
!8633 = !DILocation(line: 657, column: 16, scope: !8630)
!8634 = !DILocation(line: 657, column: 2, scope: !8627)
!8635 = !DILocation(line: 658, column: 26, scope: !8630)
!8636 = !DILocation(line: 658, column: 33, scope: !8630)
!8637 = !DILocation(line: 658, column: 3, scope: !8630)
!8638 = !DILocation(line: 657, column: 38, scope: !8630)
!8639 = !DILocation(line: 657, column: 2, scope: !8630)
!8640 = distinct !{!8640, !8634, !8641}
!8641 = !DILocation(line: 658, column: 34, scope: !8627)
!8642 = !DILocation(line: 661, column: 12, scope: !8579)
!8643 = !DILocation(line: 661, column: 19, scope: !8579)
!8644 = !DILocation(line: 661, column: 28, scope: !8579)
!8645 = !DILocation(line: 661, column: 2, scope: !8579)
!8646 = !DILocation(line: 664, column: 12, scope: !8579)
!8647 = !DILocation(line: 664, column: 19, scope: !8579)
!8648 = !DILocation(line: 664, column: 10, scope: !8579)
!8649 = !DILocation(line: 665, column: 9, scope: !8650)
!8650 = distinct !DILexicalBlock(scope: !8579, file: !1, line: 665, column: 2)
!8651 = !DILocation(line: 665, column: 7, scope: !8650)
!8652 = !DILocation(line: 665, column: 14, scope: !8653)
!8653 = distinct !DILexicalBlock(scope: !8650, file: !1, line: 665, column: 2)
!8654 = !DILocation(line: 665, column: 18, scope: !8653)
!8655 = !DILocation(line: 665, column: 25, scope: !8653)
!8656 = !DILocation(line: 665, column: 16, scope: !8653)
!8657 = !DILocation(line: 665, column: 2, scope: !8650)
!8658 = !DILocation(line: 666, column: 8, scope: !8659)
!8659 = distinct !DILexicalBlock(scope: !8660, file: !1, line: 666, column: 7)
!8660 = distinct !DILexicalBlock(scope: !8653, file: !1, line: 665, column: 56)
!8661 = !DILocation(line: 666, column: 17, scope: !8659)
!8662 = !DILocation(line: 666, column: 7, scope: !8660)
!8663 = !DILocation(line: 667, column: 4, scope: !8659)
!8664 = !DILocation(line: 669, column: 18, scope: !8660)
!8665 = !DILocation(line: 669, column: 12, scope: !8660)
!8666 = !DILocation(line: 669, column: 10, scope: !8660)
!8667 = !DILocalVariable(name: "_var", scope: !8668, file: !1, line: 670, type: !1021)
!8668 = distinct !DILexicalBlock(scope: !8660, file: !1, line: 670, column: 12)
!8669 = !DILocation(line: 670, column: 12, scope: !8668)
!8670 = !DILocalVariable(name: "_pos", scope: !8668, file: !1, line: 670, type: !5)
!8671 = !DILocalVariable(name: "_len", scope: !8668, file: !1, line: 670, type: !5)
!8672 = !DILocalVariable(name: "_val", scope: !8668, file: !1, line: 670, type: !5)
!8673 = !DILocation(line: 670, column: 10, scope: !8660)
!8674 = !DILocation(line: 672, column: 10, scope: !8660)
!8675 = !DILocation(line: 672, column: 18, scope: !8660)
!8676 = !DILocation(line: 672, column: 3, scope: !8660)
!8677 = !DILocation(line: 673, column: 2, scope: !8660)
!8678 = !DILocation(line: 665, column: 41, scope: !8653)
!8679 = !DILocation(line: 665, column: 52, scope: !8653)
!8680 = !DILocation(line: 665, column: 2, scope: !8653)
!8681 = distinct !{!8681, !8657, !8682}
!8682 = !DILocation(line: 673, column: 2, scope: !8650)
!8683 = !DILocation(line: 674, column: 1, scope: !8579)
!8684 = distinct !DISubprogram(name: "xlgmac_dev_xmit", scope: !1, file: !1, line: 702, type: !7869, scopeLine: 703, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1619)
!8685 = !DILocalVariable(name: "channel", arg: 1, scope: !8684, file: !1, line: 702, type: !7573)
!8686 = !DILocation(line: 702, column: 52, scope: !8684)
!8687 = !DILocalVariable(name: "pdata", scope: !8684, file: !1, line: 704, type: !7555)
!8688 = !DILocation(line: 704, column: 23, scope: !8684)
!8689 = !DILocation(line: 704, column: 31, scope: !8684)
!8690 = !DILocation(line: 704, column: 40, scope: !8684)
!8691 = !DILocalVariable(name: "ring", scope: !8684, file: !1, line: 705, type: !7613)
!8692 = !DILocation(line: 705, column: 22, scope: !8684)
!8693 = !DILocation(line: 705, column: 29, scope: !8684)
!8694 = !DILocation(line: 705, column: 38, scope: !8684)
!8695 = !DILocalVariable(name: "tso_context", scope: !8684, file: !1, line: 706, type: !11)
!8696 = !DILocation(line: 706, column: 15, scope: !8684)
!8697 = !DILocalVariable(name: "vlan_context", scope: !8684, file: !1, line: 706, type: !11)
!8698 = !DILocation(line: 706, column: 28, scope: !8684)
!8699 = !DILocalVariable(name: "desc_data", scope: !8684, file: !1, line: 707, type: !7645)
!8700 = !DILocation(line: 707, column: 27, scope: !8684)
!8701 = !DILocalVariable(name: "dma_desc", scope: !8684, file: !1, line: 708, type: !7635)
!8702 = !DILocation(line: 708, column: 26, scope: !8684)
!8703 = !DILocalVariable(name: "pkt_info", scope: !8684, file: !1, line: 709, type: !8704)
!8704 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7617, size: 64)
!8705 = !DILocation(line: 709, column: 26, scope: !8684)
!8706 = !DILocalVariable(name: "csum", scope: !8684, file: !1, line: 710, type: !11)
!8707 = !DILocation(line: 710, column: 15, scope: !8684)
!8708 = !DILocalVariable(name: "tso", scope: !8684, file: !1, line: 710, type: !11)
!8709 = !DILocation(line: 710, column: 21, scope: !8684)
!8710 = !DILocalVariable(name: "vlan", scope: !8684, file: !1, line: 710, type: !11)
!8711 = !DILocation(line: 710, column: 26, scope: !8684)
!8712 = !DILocalVariable(name: "start_index", scope: !8684, file: !1, line: 711, type: !5)
!8713 = !DILocation(line: 711, column: 6, scope: !8684)
!8714 = !DILocation(line: 711, column: 20, scope: !8684)
!8715 = !DILocation(line: 711, column: 26, scope: !8684)
!8716 = !DILocalVariable(name: "cur_index", scope: !8684, file: !1, line: 712, type: !5)
!8717 = !DILocation(line: 712, column: 6, scope: !8684)
!8718 = !DILocation(line: 712, column: 18, scope: !8684)
!8719 = !DILocation(line: 712, column: 24, scope: !8684)
!8720 = !DILocalVariable(name: "tx_set_ic", scope: !8684, file: !1, line: 713, type: !11)
!8721 = !DILocation(line: 713, column: 15, scope: !8684)
!8722 = !DILocalVariable(name: "i", scope: !8684, file: !1, line: 714, type: !5)
!8723 = !DILocation(line: 714, column: 6, scope: !8684)
!8724 = !DILocation(line: 716, column: 14, scope: !8684)
!8725 = !DILocation(line: 716, column: 20, scope: !8684)
!8726 = !DILocation(line: 716, column: 11, scope: !8684)
!8727 = !DILocalVariable(name: "_pos", scope: !8728, file: !1, line: 717, type: !5)
!8728 = distinct !DILexicalBlock(scope: !8684, file: !1, line: 717, column: 9)
!8729 = !DILocation(line: 717, column: 9, scope: !8728)
!8730 = !DILocalVariable(name: "_len", scope: !8728, file: !1, line: 717, type: !5)
!8731 = !DILocation(line: 717, column: 9, scope: !8684)
!8732 = !DILocation(line: 717, column: 7, scope: !8684)
!8733 = !DILocalVariable(name: "_pos", scope: !8734, file: !1, line: 720, type: !5)
!8734 = distinct !DILexicalBlock(scope: !8684, file: !1, line: 720, column: 8)
!8735 = !DILocation(line: 720, column: 8, scope: !8734)
!8736 = !DILocalVariable(name: "_len", scope: !8734, file: !1, line: 720, type: !5)
!8737 = !DILocation(line: 720, column: 8, scope: !8684)
!8738 = !DILocation(line: 720, column: 6, scope: !8684)
!8739 = !DILocalVariable(name: "_pos", scope: !8740, file: !1, line: 723, type: !5)
!8740 = distinct !DILexicalBlock(scope: !8684, file: !1, line: 723, column: 9)
!8741 = !DILocation(line: 723, column: 9, scope: !8740)
!8742 = !DILocalVariable(name: "_len", scope: !8740, file: !1, line: 723, type: !5)
!8743 = !DILocation(line: 723, column: 9, scope: !8684)
!8744 = !DILocation(line: 723, column: 7, scope: !8684)
!8745 = !DILocation(line: 727, column: 6, scope: !8746)
!8746 = distinct !DILexicalBlock(scope: !8684, file: !1, line: 727, column: 6)
!8747 = !DILocation(line: 727, column: 10, scope: !8746)
!8748 = !DILocation(line: 727, column: 14, scope: !8746)
!8749 = !DILocation(line: 727, column: 24, scope: !8746)
!8750 = !DILocation(line: 727, column: 31, scope: !8746)
!8751 = !DILocation(line: 727, column: 37, scope: !8746)
!8752 = !DILocation(line: 727, column: 40, scope: !8746)
!8753 = !DILocation(line: 727, column: 28, scope: !8746)
!8754 = !DILocation(line: 727, column: 6, scope: !8684)
!8755 = !DILocation(line: 728, column: 15, scope: !8746)
!8756 = !DILocation(line: 728, column: 3, scope: !8746)
!8757 = !DILocation(line: 730, column: 15, scope: !8746)
!8758 = !DILocation(line: 732, column: 6, scope: !8759)
!8759 = distinct !DILexicalBlock(scope: !8684, file: !1, line: 732, column: 6)
!8760 = !DILocation(line: 732, column: 11, scope: !8759)
!8761 = !DILocation(line: 732, column: 15, scope: !8759)
!8762 = !DILocation(line: 732, column: 25, scope: !8759)
!8763 = !DILocation(line: 732, column: 38, scope: !8759)
!8764 = !DILocation(line: 732, column: 44, scope: !8759)
!8765 = !DILocation(line: 732, column: 47, scope: !8759)
!8766 = !DILocation(line: 732, column: 35, scope: !8759)
!8767 = !DILocation(line: 732, column: 6, scope: !8684)
!8768 = !DILocation(line: 733, column: 16, scope: !8759)
!8769 = !DILocation(line: 733, column: 3, scope: !8759)
!8770 = !DILocation(line: 735, column: 16, scope: !8759)
!8771 = !DILocation(line: 747, column: 26, scope: !8684)
!8772 = !DILocation(line: 747, column: 36, scope: !8684)
!8773 = !DILocation(line: 747, column: 2, scope: !8684)
!8774 = !DILocation(line: 747, column: 8, scope: !8684)
!8775 = !DILocation(line: 747, column: 23, scope: !8684)
!8776 = !DILocation(line: 748, column: 7, scope: !8777)
!8777 = distinct !DILexicalBlock(scope: !8684, file: !1, line: 748, column: 6)
!8778 = !DILocation(line: 748, column: 14, scope: !8777)
!8779 = !DILocation(line: 748, column: 6, scope: !8684)
!8780 = !DILocation(line: 749, column: 13, scope: !8777)
!8781 = !DILocation(line: 749, column: 3, scope: !8777)
!8782 = !DILocation(line: 750, column: 11, scope: !8783)
!8783 = distinct !DILexicalBlock(scope: !8777, file: !1, line: 750, column: 11)
!8784 = !DILocation(line: 750, column: 21, scope: !8783)
!8785 = !DILocation(line: 750, column: 34, scope: !8783)
!8786 = !DILocation(line: 750, column: 41, scope: !8783)
!8787 = !DILocation(line: 750, column: 32, scope: !8783)
!8788 = !DILocation(line: 750, column: 11, scope: !8777)
!8789 = !DILocation(line: 751, column: 13, scope: !8783)
!8790 = !DILocation(line: 751, column: 3, scope: !8783)
!8791 = !DILocation(line: 752, column: 12, scope: !8792)
!8792 = distinct !DILexicalBlock(scope: !8783, file: !1, line: 752, column: 11)
!8793 = !DILocation(line: 752, column: 18, scope: !8792)
!8794 = !DILocation(line: 752, column: 35, scope: !8792)
!8795 = !DILocation(line: 752, column: 42, scope: !8792)
!8796 = !DILocation(line: 752, column: 33, scope: !8792)
!8797 = !DILocation(line: 753, column: 4, scope: !8792)
!8798 = !DILocation(line: 753, column: 14, scope: !8792)
!8799 = !DILocation(line: 752, column: 53, scope: !8792)
!8800 = !DILocation(line: 752, column: 11, scope: !8783)
!8801 = !DILocation(line: 754, column: 13, scope: !8792)
!8802 = !DILocation(line: 754, column: 3, scope: !8792)
!8803 = !DILocation(line: 756, column: 13, scope: !8792)
!8804 = !DILocalVariable(name: "_ring", scope: !8805, file: !1, line: 758, type: !7613)
!8805 = distinct !DILexicalBlock(scope: !8684, file: !1, line: 758, column: 14)
!8806 = !DILocation(line: 758, column: 14, scope: !8805)
!8807 = !DILocation(line: 758, column: 12, scope: !8684)
!8808 = !DILocation(line: 759, column: 13, scope: !8684)
!8809 = !DILocation(line: 759, column: 24, scope: !8684)
!8810 = !DILocation(line: 759, column: 11, scope: !8684)
!8811 = !DILocation(line: 762, column: 6, scope: !8812)
!8812 = distinct !DILexicalBlock(scope: !8684, file: !1, line: 762, column: 6)
!8813 = !DILocation(line: 762, column: 18, scope: !8812)
!8814 = !DILocation(line: 762, column: 21, scope: !8812)
!8815 = !DILocation(line: 762, column: 6, scope: !8684)
!8816 = !DILocation(line: 763, column: 7, scope: !8817)
!8817 = distinct !DILexicalBlock(scope: !8818, file: !1, line: 763, column: 7)
!8818 = distinct !DILexicalBlock(scope: !8812, file: !1, line: 762, column: 35)
!8819 = !DILocation(line: 763, column: 7, scope: !8818)
!8820 = !DILocation(line: 764, column: 4, scope: !8821)
!8821 = distinct !DILexicalBlock(scope: !8822, file: !1, line: 764, column: 4)
!8822 = distinct !DILexicalBlock(scope: !8823, file: !1, line: 764, column: 4)
!8823 = distinct !DILexicalBlock(scope: !8817, file: !1, line: 763, column: 20)
!8824 = !DILocation(line: 764, column: 4, scope: !8822)
!8825 = !DILocalVariable(name: "_var", scope: !8826, file: !1, line: 769, type: !7527)
!8826 = distinct !DILexicalBlock(scope: !8823, file: !1, line: 769, column: 22)
!8827 = !DILocation(line: 769, column: 22, scope: !8826)
!8828 = !DILocalVariable(name: "_pos", scope: !8826, file: !1, line: 769, type: !5)
!8829 = !DILocalVariable(name: "_len", scope: !8826, file: !1, line: 769, type: !5)
!8830 = !DILocalVariable(name: "_val", scope: !8826, file: !1, line: 769, type: !510)
!8831 = !DILocation(line: 769, column: 4, scope: !8823)
!8832 = !DILocation(line: 769, column: 14, scope: !8823)
!8833 = !DILocation(line: 769, column: 20, scope: !8823)
!8834 = !DILocalVariable(name: "_var", scope: !8835, file: !1, line: 776, type: !7527)
!8835 = distinct !DILexicalBlock(scope: !8823, file: !1, line: 776, column: 22)
!8836 = !DILocation(line: 776, column: 22, scope: !8835)
!8837 = !DILocalVariable(name: "_pos", scope: !8835, file: !1, line: 776, type: !5)
!8838 = !DILocalVariable(name: "_len", scope: !8835, file: !1, line: 776, type: !5)
!8839 = !DILocalVariable(name: "_val", scope: !8835, file: !1, line: 776, type: !5)
!8840 = !DILocation(line: 776, column: 4, scope: !8823)
!8841 = !DILocation(line: 776, column: 14, scope: !8823)
!8842 = !DILocation(line: 776, column: 20, scope: !8823)
!8843 = !DILocalVariable(name: "_var", scope: !8844, file: !1, line: 783, type: !7527)
!8844 = distinct !DILexicalBlock(scope: !8823, file: !1, line: 783, column: 22)
!8845 = !DILocation(line: 783, column: 22, scope: !8844)
!8846 = !DILocalVariable(name: "_pos", scope: !8844, file: !1, line: 783, type: !5)
!8847 = !DILocalVariable(name: "_len", scope: !8844, file: !1, line: 783, type: !5)
!8848 = !DILocalVariable(name: "_val", scope: !8844, file: !1, line: 783, type: !5)
!8849 = !DILocation(line: 783, column: 4, scope: !8823)
!8850 = !DILocation(line: 783, column: 14, scope: !8823)
!8851 = !DILocation(line: 783, column: 20, scope: !8823)
!8852 = !DILocation(line: 789, column: 23, scope: !8823)
!8853 = !DILocation(line: 789, column: 33, scope: !8823)
!8854 = !DILocation(line: 789, column: 4, scope: !8823)
!8855 = !DILocation(line: 789, column: 10, scope: !8823)
!8856 = !DILocation(line: 789, column: 13, scope: !8823)
!8857 = !DILocation(line: 789, column: 21, scope: !8823)
!8858 = !DILocation(line: 790, column: 3, scope: !8823)
!8859 = !DILocation(line: 792, column: 7, scope: !8860)
!8860 = distinct !DILexicalBlock(scope: !8818, file: !1, line: 792, column: 7)
!8861 = !DILocation(line: 792, column: 7, scope: !8818)
!8862 = !DILocation(line: 793, column: 4, scope: !8863)
!8863 = distinct !DILexicalBlock(scope: !8864, file: !1, line: 793, column: 4)
!8864 = distinct !DILexicalBlock(scope: !8865, file: !1, line: 793, column: 4)
!8865 = distinct !DILexicalBlock(scope: !8860, file: !1, line: 792, column: 21)
!8866 = !DILocation(line: 793, column: 4, scope: !8864)
!8867 = !DILocalVariable(name: "_var", scope: !8868, file: !1, line: 798, type: !7527)
!8868 = distinct !DILexicalBlock(scope: !8865, file: !1, line: 798, column: 22)
!8869 = !DILocation(line: 798, column: 22, scope: !8868)
!8870 = !DILocalVariable(name: "_pos", scope: !8868, file: !1, line: 798, type: !5)
!8871 = !DILocalVariable(name: "_len", scope: !8868, file: !1, line: 798, type: !5)
!8872 = !DILocalVariable(name: "_val", scope: !8868, file: !1, line: 798, type: !5)
!8873 = !DILocation(line: 798, column: 4, scope: !8865)
!8874 = !DILocation(line: 798, column: 14, scope: !8865)
!8875 = !DILocation(line: 798, column: 20, scope: !8865)
!8876 = !DILocalVariable(name: "_var", scope: !8877, file: !1, line: 805, type: !7527)
!8877 = distinct !DILexicalBlock(scope: !8865, file: !1, line: 805, column: 22)
!8878 = !DILocation(line: 805, column: 22, scope: !8877)
!8879 = !DILocalVariable(name: "_pos", scope: !8877, file: !1, line: 805, type: !5)
!8880 = !DILocalVariable(name: "_len", scope: !8877, file: !1, line: 805, type: !5)
!8881 = !DILocalVariable(name: "_val", scope: !8877, file: !1, line: 805, type: !510)
!8882 = !DILocation(line: 805, column: 4, scope: !8865)
!8883 = !DILocation(line: 805, column: 14, scope: !8865)
!8884 = !DILocation(line: 805, column: 20, scope: !8865)
!8885 = !DILocalVariable(name: "_var", scope: !8886, file: !1, line: 812, type: !7527)
!8886 = distinct !DILexicalBlock(scope: !8865, file: !1, line: 812, column: 22)
!8887 = !DILocation(line: 812, column: 22, scope: !8886)
!8888 = !DILocalVariable(name: "_pos", scope: !8886, file: !1, line: 812, type: !5)
!8889 = !DILocalVariable(name: "_len", scope: !8886, file: !1, line: 812, type: !5)
!8890 = !DILocalVariable(name: "_val", scope: !8886, file: !1, line: 812, type: !5)
!8891 = !DILocation(line: 812, column: 4, scope: !8865)
!8892 = !DILocation(line: 812, column: 14, scope: !8865)
!8893 = !DILocation(line: 812, column: 20, scope: !8865)
!8894 = !DILocation(line: 818, column: 29, scope: !8865)
!8895 = !DILocation(line: 818, column: 39, scope: !8865)
!8896 = !DILocation(line: 818, column: 4, scope: !8865)
!8897 = !DILocation(line: 818, column: 10, scope: !8865)
!8898 = !DILocation(line: 818, column: 13, scope: !8865)
!8899 = !DILocation(line: 818, column: 27, scope: !8865)
!8900 = !DILocation(line: 819, column: 3, scope: !8865)
!8901 = !DILocation(line: 821, column: 12, scope: !8818)
!8902 = !DILocalVariable(name: "_ring", scope: !8903, file: !1, line: 822, type: !7613)
!8903 = distinct !DILexicalBlock(scope: !8818, file: !1, line: 822, column: 15)
!8904 = !DILocation(line: 822, column: 15, scope: !8903)
!8905 = !DILocation(line: 822, column: 13, scope: !8818)
!8906 = !DILocation(line: 823, column: 14, scope: !8818)
!8907 = !DILocation(line: 823, column: 25, scope: !8818)
!8908 = !DILocation(line: 823, column: 12, scope: !8818)
!8909 = !DILocation(line: 824, column: 2, scope: !8818)
!8910 = !DILocation(line: 827, column: 21, scope: !8684)
!8911 = !DILocation(line: 827, column: 2, scope: !8684)
!8912 = !DILocation(line: 827, column: 12, scope: !8684)
!8913 = !DILocation(line: 827, column: 18, scope: !8684)
!8914 = !DILocation(line: 828, column: 21, scope: !8684)
!8915 = !DILocation(line: 828, column: 2, scope: !8684)
!8916 = !DILocation(line: 828, column: 12, scope: !8684)
!8917 = !DILocation(line: 828, column: 18, scope: !8684)
!8918 = !DILocalVariable(name: "_var", scope: !8919, file: !1, line: 831, type: !7527)
!8919 = distinct !DILexicalBlock(scope: !8684, file: !1, line: 831, column: 20)
!8920 = !DILocation(line: 831, column: 20, scope: !8919)
!8921 = !DILocalVariable(name: "_pos", scope: !8919, file: !1, line: 831, type: !5)
!8922 = !DILocalVariable(name: "_len", scope: !8919, file: !1, line: 831, type: !5)
!8923 = !DILocalVariable(name: "_val", scope: !8919, file: !1, line: 831, type: !11)
!8924 = !DILocation(line: 831, column: 2, scope: !8684)
!8925 = !DILocation(line: 831, column: 12, scope: !8684)
!8926 = !DILocation(line: 831, column: 18, scope: !8684)
!8927 = !DILocation(line: 838, column: 6, scope: !8928)
!8928 = distinct !DILexicalBlock(scope: !8684, file: !1, line: 838, column: 6)
!8929 = !DILocation(line: 838, column: 6, scope: !8684)
!8930 = !DILocalVariable(name: "_var", scope: !8931, file: !1, line: 839, type: !7527)
!8931 = distinct !DILexicalBlock(scope: !8932, file: !1, line: 839, column: 21)
!8932 = distinct !DILexicalBlock(scope: !8928, file: !1, line: 838, column: 12)
!8933 = !DILocation(line: 839, column: 21, scope: !8931)
!8934 = !DILocalVariable(name: "_pos", scope: !8931, file: !1, line: 839, type: !5)
!8935 = !DILocalVariable(name: "_len", scope: !8931, file: !1, line: 839, type: !5)
!8936 = !DILocalVariable(name: "_val", scope: !8931, file: !1, line: 839, type: !5)
!8937 = !DILocation(line: 839, column: 3, scope: !8932)
!8938 = !DILocation(line: 839, column: 13, scope: !8932)
!8939 = !DILocation(line: 839, column: 19, scope: !8932)
!8940 = !DILocation(line: 844, column: 3, scope: !8932)
!8941 = !DILocation(line: 844, column: 10, scope: !8932)
!8942 = !DILocation(line: 844, column: 16, scope: !8932)
!8943 = !DILocation(line: 844, column: 31, scope: !8932)
!8944 = !DILocation(line: 845, column: 2, scope: !8932)
!8945 = !DILocalVariable(name: "_pos", scope: !8946, file: !1, line: 848, type: !5)
!8946 = distinct !DILexicalBlock(scope: !8947, file: !1, line: 848, column: 6)
!8947 = distinct !DILexicalBlock(scope: !8684, file: !1, line: 848, column: 6)
!8948 = !DILocation(line: 848, column: 6, scope: !8946)
!8949 = !DILocalVariable(name: "_len", scope: !8946, file: !1, line: 848, type: !5)
!8950 = !DILocation(line: 848, column: 6, scope: !8947)
!8951 = !DILocation(line: 848, column: 6, scope: !8684)
!8952 = !DILocalVariable(name: "_var", scope: !8953, file: !1, line: 851, type: !7527)
!8953 = distinct !DILexicalBlock(scope: !8947, file: !1, line: 851, column: 21)
!8954 = !DILocation(line: 851, column: 21, scope: !8953)
!8955 = !DILocalVariable(name: "_pos", scope: !8953, file: !1, line: 851, type: !5)
!8956 = !DILocalVariable(name: "_len", scope: !8953, file: !1, line: 851, type: !5)
!8957 = !DILocalVariable(name: "_val", scope: !8953, file: !1, line: 851, type: !5)
!8958 = !DILocation(line: 851, column: 3, scope: !8947)
!8959 = !DILocation(line: 851, column: 13, scope: !8947)
!8960 = !DILocation(line: 851, column: 19, scope: !8947)
!8961 = !DILocalVariable(name: "_var", scope: !8962, file: !1, line: 858, type: !7527)
!8962 = distinct !DILexicalBlock(scope: !8684, file: !1, line: 858, column: 20)
!8963 = !DILocation(line: 858, column: 20, scope: !8962)
!8964 = !DILocalVariable(name: "_pos", scope: !8962, file: !1, line: 858, type: !5)
!8965 = !DILocalVariable(name: "_len", scope: !8962, file: !1, line: 858, type: !5)
!8966 = !DILocalVariable(name: "_val", scope: !8962, file: !1, line: 858, type: !5)
!8967 = !DILocation(line: 858, column: 2, scope: !8684)
!8968 = !DILocation(line: 858, column: 12, scope: !8684)
!8969 = !DILocation(line: 858, column: 18, scope: !8684)
!8970 = !DILocalVariable(name: "_var", scope: !8971, file: !1, line: 865, type: !7527)
!8971 = distinct !DILexicalBlock(scope: !8684, file: !1, line: 865, column: 20)
!8972 = !DILocation(line: 865, column: 20, scope: !8971)
!8973 = !DILocalVariable(name: "_pos", scope: !8971, file: !1, line: 865, type: !5)
!8974 = !DILocalVariable(name: "_len", scope: !8971, file: !1, line: 865, type: !5)
!8975 = !DILocalVariable(name: "_val", scope: !8971, file: !1, line: 865, type: !5)
!8976 = !DILocation(line: 865, column: 2, scope: !8684)
!8977 = !DILocation(line: 865, column: 12, scope: !8684)
!8978 = !DILocation(line: 865, column: 18, scope: !8684)
!8979 = !DILocation(line: 872, column: 6, scope: !8980)
!8980 = distinct !DILexicalBlock(scope: !8684, file: !1, line: 872, column: 6)
!8981 = !DILocation(line: 872, column: 19, scope: !8980)
!8982 = !DILocation(line: 872, column: 16, scope: !8980)
!8983 = !DILocation(line: 872, column: 6, scope: !8684)
!8984 = !DILocalVariable(name: "_var", scope: !8985, file: !1, line: 873, type: !7527)
!8985 = distinct !DILexicalBlock(scope: !8980, file: !1, line: 873, column: 21)
!8986 = !DILocation(line: 873, column: 21, scope: !8985)
!8987 = !DILocalVariable(name: "_pos", scope: !8985, file: !1, line: 873, type: !5)
!8988 = !DILocalVariable(name: "_len", scope: !8985, file: !1, line: 873, type: !5)
!8989 = !DILocalVariable(name: "_val", scope: !8985, file: !1, line: 873, type: !5)
!8990 = !DILocation(line: 873, column: 3, scope: !8980)
!8991 = !DILocation(line: 873, column: 13, scope: !8980)
!8992 = !DILocation(line: 873, column: 19, scope: !8980)
!8993 = !DILocation(line: 879, column: 6, scope: !8994)
!8994 = distinct !DILexicalBlock(scope: !8684, file: !1, line: 879, column: 6)
!8995 = !DILocation(line: 879, column: 6, scope: !8684)
!8996 = !DILocalVariable(name: "_var", scope: !8997, file: !1, line: 881, type: !7527)
!8997 = distinct !DILexicalBlock(scope: !8998, file: !1, line: 881, column: 21)
!8998 = distinct !DILexicalBlock(scope: !8994, file: !1, line: 879, column: 11)
!8999 = !DILocation(line: 881, column: 21, scope: !8997)
!9000 = !DILocalVariable(name: "_pos", scope: !8997, file: !1, line: 881, type: !5)
!9001 = !DILocalVariable(name: "_len", scope: !8997, file: !1, line: 881, type: !5)
!9002 = !DILocalVariable(name: "_val", scope: !8997, file: !1, line: 881, type: !5)
!9003 = !DILocation(line: 881, column: 3, scope: !8998)
!9004 = !DILocation(line: 881, column: 13, scope: !8998)
!9005 = !DILocation(line: 881, column: 19, scope: !8998)
!9006 = !DILocalVariable(name: "_var", scope: !9007, file: !1, line: 885, type: !7527)
!9007 = distinct !DILexicalBlock(scope: !8998, file: !1, line: 885, column: 21)
!9008 = !DILocation(line: 885, column: 21, scope: !9007)
!9009 = !DILocalVariable(name: "_pos", scope: !9007, file: !1, line: 885, type: !5)
!9010 = !DILocalVariable(name: "_len", scope: !9007, file: !1, line: 885, type: !5)
!9011 = !DILocalVariable(name: "_val", scope: !9007, file: !1, line: 885, type: !11)
!9012 = !DILocation(line: 885, column: 3, scope: !8998)
!9013 = !DILocation(line: 885, column: 13, scope: !8998)
!9014 = !DILocation(line: 885, column: 19, scope: !8998)
!9015 = !DILocalVariable(name: "_var", scope: !9016, file: !1, line: 890, type: !7527)
!9016 = distinct !DILexicalBlock(scope: !8998, file: !1, line: 890, column: 21)
!9017 = !DILocation(line: 890, column: 21, scope: !9016)
!9018 = !DILocalVariable(name: "_pos", scope: !9016, file: !1, line: 890, type: !5)
!9019 = !DILocalVariable(name: "_len", scope: !9016, file: !1, line: 890, type: !5)
!9020 = !DILocalVariable(name: "_val", scope: !9016, file: !1, line: 890, type: !11)
!9021 = !DILocation(line: 890, column: 3, scope: !8998)
!9022 = !DILocation(line: 890, column: 13, scope: !8998)
!9023 = !DILocation(line: 890, column: 19, scope: !8998)
!9024 = !DILocation(line: 896, column: 3, scope: !8998)
!9025 = !DILocation(line: 896, column: 10, scope: !8998)
!9026 = !DILocation(line: 896, column: 16, scope: !8998)
!9027 = !DILocation(line: 896, column: 30, scope: !8998)
!9028 = !DILocation(line: 897, column: 2, scope: !8998)
!9029 = !DILocalVariable(name: "_var", scope: !9030, file: !1, line: 899, type: !7527)
!9030 = distinct !DILexicalBlock(scope: !9031, file: !1, line: 899, column: 21)
!9031 = distinct !DILexicalBlock(scope: !8994, file: !1, line: 897, column: 9)
!9032 = !DILocation(line: 899, column: 21, scope: !9030)
!9033 = !DILocalVariable(name: "_pos", scope: !9030, file: !1, line: 899, type: !5)
!9034 = !DILocalVariable(name: "_len", scope: !9030, file: !1, line: 899, type: !5)
!9035 = !DILocalVariable(name: "_val", scope: !9030, file: !1, line: 899, type: !5)
!9036 = !DILocation(line: 899, column: 3, scope: !9031)
!9037 = !DILocation(line: 899, column: 13, scope: !9031)
!9038 = !DILocation(line: 899, column: 19, scope: !9031)
!9039 = !DILocation(line: 905, column: 7, scope: !9040)
!9040 = distinct !DILexicalBlock(scope: !9031, file: !1, line: 905, column: 7)
!9041 = !DILocation(line: 905, column: 7, scope: !9031)
!9042 = !DILocalVariable(name: "_var", scope: !9043, file: !1, line: 906, type: !7527)
!9043 = distinct !DILexicalBlock(scope: !9040, file: !1, line: 906, column: 22)
!9044 = !DILocation(line: 906, column: 22, scope: !9043)
!9045 = !DILocalVariable(name: "_pos", scope: !9043, file: !1, line: 906, type: !5)
!9046 = !DILocalVariable(name: "_len", scope: !9043, file: !1, line: 906, type: !5)
!9047 = !DILocalVariable(name: "_val", scope: !9043, file: !1, line: 906, type: !5)
!9048 = !DILocation(line: 906, column: 4, scope: !9040)
!9049 = !DILocation(line: 906, column: 14, scope: !9040)
!9050 = !DILocation(line: 906, column: 20, scope: !9040)
!9051 = !DILocalVariable(name: "_var", scope: !9052, file: !1, line: 913, type: !7527)
!9052 = distinct !DILexicalBlock(scope: !9031, file: !1, line: 913, column: 21)
!9053 = !DILocation(line: 913, column: 21, scope: !9052)
!9054 = !DILocalVariable(name: "_pos", scope: !9052, file: !1, line: 913, type: !5)
!9055 = !DILocalVariable(name: "_len", scope: !9052, file: !1, line: 913, type: !5)
!9056 = !DILocalVariable(name: "_val", scope: !9052, file: !1, line: 913, type: !11)
!9057 = !DILocation(line: 913, column: 3, scope: !9031)
!9058 = !DILocation(line: 913, column: 13, scope: !9031)
!9059 = !DILocation(line: 913, column: 19, scope: !9031)
!9060 = !DILocation(line: 920, column: 11, scope: !9061)
!9061 = distinct !DILexicalBlock(scope: !8684, file: !1, line: 920, column: 2)
!9062 = !DILocation(line: 920, column: 23, scope: !9061)
!9063 = !DILocation(line: 920, column: 21, scope: !9061)
!9064 = !DILocation(line: 920, column: 35, scope: !9061)
!9065 = !DILocation(line: 920, column: 9, scope: !9061)
!9066 = !DILocation(line: 920, column: 7, scope: !9061)
!9067 = !DILocation(line: 920, column: 40, scope: !9068)
!9068 = distinct !DILexicalBlock(scope: !9061, file: !1, line: 920, column: 2)
!9069 = !DILocation(line: 920, column: 44, scope: !9068)
!9070 = !DILocation(line: 920, column: 54, scope: !9068)
!9071 = !DILocation(line: 920, column: 42, scope: !9068)
!9072 = !DILocation(line: 920, column: 2, scope: !9061)
!9073 = !DILocation(line: 921, column: 12, scope: !9074)
!9074 = distinct !DILexicalBlock(scope: !9068, file: !1, line: 920, column: 71)
!9075 = !DILocalVariable(name: "_ring", scope: !9076, file: !1, line: 922, type: !7613)
!9076 = distinct !DILexicalBlock(scope: !9074, file: !1, line: 922, column: 15)
!9077 = !DILocation(line: 922, column: 15, scope: !9076)
!9078 = !DILocation(line: 922, column: 13, scope: !9074)
!9079 = !DILocation(line: 923, column: 14, scope: !9074)
!9080 = !DILocation(line: 923, column: 25, scope: !9074)
!9081 = !DILocation(line: 923, column: 12, scope: !9074)
!9082 = !DILocation(line: 927, column: 4, scope: !9074)
!9083 = !DILocation(line: 926, column: 3, scope: !9074)
!9084 = !DILocation(line: 926, column: 13, scope: !9074)
!9085 = !DILocation(line: 926, column: 19, scope: !9074)
!9086 = !DILocation(line: 929, column: 4, scope: !9074)
!9087 = !DILocation(line: 928, column: 3, scope: !9074)
!9088 = !DILocation(line: 928, column: 13, scope: !9074)
!9089 = !DILocation(line: 928, column: 19, scope: !9074)
!9090 = !DILocalVariable(name: "_var", scope: !9091, file: !1, line: 932, type: !7527)
!9091 = distinct !DILexicalBlock(scope: !9074, file: !1, line: 932, column: 21)
!9092 = !DILocation(line: 932, column: 21, scope: !9091)
!9093 = !DILocalVariable(name: "_pos", scope: !9091, file: !1, line: 932, type: !5)
!9094 = !DILocalVariable(name: "_len", scope: !9091, file: !1, line: 932, type: !5)
!9095 = !DILocalVariable(name: "_val", scope: !9091, file: !1, line: 932, type: !11)
!9096 = !DILocation(line: 932, column: 3, scope: !9074)
!9097 = !DILocation(line: 932, column: 13, scope: !9074)
!9098 = !DILocation(line: 932, column: 19, scope: !9074)
!9099 = !DILocalVariable(name: "_var", scope: !9100, file: !1, line: 939, type: !7527)
!9100 = distinct !DILexicalBlock(scope: !9074, file: !1, line: 939, column: 21)
!9101 = !DILocation(line: 939, column: 21, scope: !9100)
!9102 = !DILocalVariable(name: "_pos", scope: !9100, file: !1, line: 939, type: !5)
!9103 = !DILocalVariable(name: "_len", scope: !9100, file: !1, line: 939, type: !5)
!9104 = !DILocalVariable(name: "_val", scope: !9100, file: !1, line: 939, type: !5)
!9105 = !DILocation(line: 939, column: 3, scope: !9074)
!9106 = !DILocation(line: 939, column: 13, scope: !9074)
!9107 = !DILocation(line: 939, column: 19, scope: !9074)
!9108 = !DILocalVariable(name: "_var", scope: !9109, file: !1, line: 945, type: !7527)
!9109 = distinct !DILexicalBlock(scope: !9074, file: !1, line: 945, column: 21)
!9110 = !DILocation(line: 945, column: 21, scope: !9109)
!9111 = !DILocalVariable(name: "_pos", scope: !9109, file: !1, line: 945, type: !5)
!9112 = !DILocalVariable(name: "_len", scope: !9109, file: !1, line: 945, type: !5)
!9113 = !DILocalVariable(name: "_val", scope: !9109, file: !1, line: 945, type: !5)
!9114 = !DILocation(line: 945, column: 3, scope: !9074)
!9115 = !DILocation(line: 945, column: 13, scope: !9074)
!9116 = !DILocation(line: 945, column: 19, scope: !9074)
!9117 = !DILocation(line: 951, column: 7, scope: !9118)
!9118 = distinct !DILexicalBlock(scope: !9074, file: !1, line: 951, column: 7)
!9119 = !DILocation(line: 951, column: 7, scope: !9074)
!9120 = !DILocalVariable(name: "_var", scope: !9121, file: !1, line: 952, type: !7527)
!9121 = distinct !DILexicalBlock(scope: !9118, file: !1, line: 952, column: 22)
!9122 = !DILocation(line: 952, column: 22, scope: !9121)
!9123 = !DILocalVariable(name: "_pos", scope: !9121, file: !1, line: 952, type: !5)
!9124 = !DILocalVariable(name: "_len", scope: !9121, file: !1, line: 952, type: !5)
!9125 = !DILocalVariable(name: "_val", scope: !9121, file: !1, line: 952, type: !5)
!9126 = !DILocation(line: 952, column: 4, scope: !9118)
!9127 = !DILocation(line: 952, column: 14, scope: !9118)
!9128 = !DILocation(line: 952, column: 20, scope: !9118)
!9129 = !DILocation(line: 957, column: 2, scope: !9074)
!9130 = !DILocation(line: 920, column: 67, scope: !9068)
!9131 = !DILocation(line: 920, column: 2, scope: !9068)
!9132 = distinct !{!9132, !9072, !9133}
!9133 = !DILocation(line: 957, column: 2, scope: !9061)
!9134 = !DILocalVariable(name: "_var", scope: !9135, file: !1, line: 960, type: !7527)
!9135 = distinct !DILexicalBlock(scope: !8684, file: !1, line: 960, column: 20)
!9136 = !DILocation(line: 960, column: 20, scope: !9135)
!9137 = !DILocalVariable(name: "_pos", scope: !9135, file: !1, line: 960, type: !5)
!9138 = !DILocalVariable(name: "_len", scope: !9135, file: !1, line: 960, type: !5)
!9139 = !DILocalVariable(name: "_val", scope: !9135, file: !1, line: 960, type: !5)
!9140 = !DILocation(line: 960, column: 2, scope: !8684)
!9141 = !DILocation(line: 960, column: 12, scope: !8684)
!9142 = !DILocation(line: 960, column: 18, scope: !8684)
!9143 = !DILocation(line: 966, column: 6, scope: !9144)
!9144 = distinct !DILexicalBlock(scope: !8684, file: !1, line: 966, column: 6)
!9145 = !DILocation(line: 966, column: 6, scope: !8684)
!9146 = !DILocalVariable(name: "_var", scope: !9147, file: !1, line: 967, type: !7527)
!9147 = distinct !DILexicalBlock(scope: !9144, file: !1, line: 967, column: 21)
!9148 = !DILocation(line: 967, column: 21, scope: !9147)
!9149 = !DILocalVariable(name: "_pos", scope: !9147, file: !1, line: 967, type: !5)
!9150 = !DILocalVariable(name: "_len", scope: !9147, file: !1, line: 967, type: !5)
!9151 = !DILocalVariable(name: "_val", scope: !9147, file: !1, line: 967, type: !5)
!9152 = !DILocation(line: 967, column: 3, scope: !9144)
!9153 = !DILocation(line: 967, column: 13, scope: !9144)
!9154 = !DILocation(line: 967, column: 19, scope: !9144)
!9155 = !DILocation(line: 973, column: 26, scope: !8684)
!9156 = !DILocation(line: 973, column: 36, scope: !8684)
!9157 = !DILocation(line: 973, column: 2, scope: !8684)
!9158 = !DILocation(line: 973, column: 13, scope: !8684)
!9159 = !DILocation(line: 973, column: 16, scope: !8684)
!9160 = !DILocation(line: 973, column: 24, scope: !8684)
!9161 = !DILocation(line: 974, column: 24, scope: !8684)
!9162 = !DILocation(line: 974, column: 34, scope: !8684)
!9163 = !DILocation(line: 974, column: 2, scope: !8684)
!9164 = !DILocation(line: 974, column: 13, scope: !8684)
!9165 = !DILocation(line: 974, column: 16, scope: !8684)
!9166 = !DILocation(line: 974, column: 22, scope: !8684)
!9167 = !DILocation(line: 980, column: 2, scope: !8684)
!9168 = !{i32 -2139566826}
!9169 = !DILocalVariable(name: "_ring", scope: !9170, file: !1, line: 983, type: !7613)
!9170 = distinct !DILexicalBlock(scope: !8684, file: !1, line: 983, column: 14)
!9171 = !DILocation(line: 983, column: 14, scope: !9170)
!9172 = !DILocation(line: 983, column: 12, scope: !8684)
!9173 = !DILocation(line: 984, column: 13, scope: !8684)
!9174 = !DILocation(line: 984, column: 24, scope: !8684)
!9175 = !DILocation(line: 984, column: 11, scope: !8684)
!9176 = !DILocalVariable(name: "_var", scope: !9177, file: !1, line: 985, type: !7527)
!9177 = distinct !DILexicalBlock(scope: !8684, file: !1, line: 985, column: 20)
!9178 = !DILocation(line: 985, column: 20, scope: !9177)
!9179 = !DILocalVariable(name: "_pos", scope: !9177, file: !1, line: 985, type: !5)
!9180 = !DILocalVariable(name: "_len", scope: !9177, file: !1, line: 985, type: !5)
!9181 = !DILocalVariable(name: "_val", scope: !9177, file: !1, line: 985, type: !5)
!9182 = !DILocation(line: 985, column: 2, scope: !8684)
!9183 = !DILocation(line: 985, column: 12, scope: !8684)
!9184 = !DILocation(line: 985, column: 18, scope: !8684)
!9185 = !DILocation(line: 990, column: 6, scope: !9186)
!9186 = distinct !DILexicalBlock(scope: !8684, file: !1, line: 990, column: 6)
!9187 = !DILocation(line: 990, column: 6, scope: !8684)
!9188 = !DILocation(line: 991, column: 23, scope: !9186)
!9189 = !DILocation(line: 991, column: 30, scope: !9186)
!9190 = !DILocation(line: 991, column: 36, scope: !9186)
!9191 = !DILocation(line: 992, column: 9, scope: !9186)
!9192 = !DILocation(line: 992, column: 19, scope: !9186)
!9193 = !DILocation(line: 991, column: 3, scope: !9186)
!9194 = !DILocation(line: 995, column: 2, scope: !8684)
!9195 = !{i32 -2139564738}
!9196 = !DILocation(line: 997, column: 14, scope: !8684)
!9197 = !DILocation(line: 997, column: 24, scope: !8684)
!9198 = !DILocation(line: 997, column: 2, scope: !8684)
!9199 = !DILocation(line: 997, column: 8, scope: !8684)
!9200 = !DILocation(line: 997, column: 12, scope: !8684)
!9201 = !DILocation(line: 998, column: 7, scope: !9202)
!9202 = distinct !DILexicalBlock(scope: !8684, file: !1, line: 998, column: 6)
!9203 = !DILocation(line: 998, column: 26, scope: !9202)
!9204 = !DILocation(line: 999, column: 45, scope: !9202)
!9205 = !DILocation(line: 999, column: 52, scope: !9202)
!9206 = !DILocation(line: 1000, column: 10, scope: !9202)
!9207 = !DILocation(line: 1000, column: 19, scope: !9202)
!9208 = !DILocation(line: 999, column: 25, scope: !9202)
!9209 = !DILocation(line: 999, column: 6, scope: !9202)
!9210 = !DILocation(line: 998, column: 6, scope: !8684)
!9211 = !DILocation(line: 1001, column: 24, scope: !9202)
!9212 = !DILocation(line: 1001, column: 33, scope: !9202)
!9213 = !DILocation(line: 1001, column: 3, scope: !9202)
!9214 = !DILocation(line: 1003, column: 3, scope: !9202)
!9215 = !DILocation(line: 1003, column: 9, scope: !9202)
!9216 = !DILocation(line: 1003, column: 12, scope: !9202)
!9217 = !DILocation(line: 1003, column: 22, scope: !9202)
!9218 = !DILocation(line: 1005, column: 2, scope: !8684)
!9219 = !DILocation(line: 1005, column: 2, scope: !9220)
!9220 = distinct !DILexicalBlock(scope: !8684, file: !1, line: 1005, column: 2)
!9221 = !DILocation(line: 1008, column: 1, scope: !8684)
!9222 = distinct !DISubprogram(name: "xlgmac_dev_read", scope: !1, file: !1, line: 2638, type: !7873, scopeLine: 2639, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1619)
!9223 = !DILocalVariable(name: "channel", arg: 1, scope: !9222, file: !1, line: 2638, type: !7573)
!9224 = !DILocation(line: 2638, column: 51, scope: !9222)
!9225 = !DILocalVariable(name: "pdata", scope: !9222, file: !1, line: 2640, type: !7555)
!9226 = !DILocation(line: 2640, column: 23, scope: !9222)
!9227 = !DILocation(line: 2640, column: 31, scope: !9222)
!9228 = !DILocation(line: 2640, column: 40, scope: !9222)
!9229 = !DILocalVariable(name: "ring", scope: !9222, file: !1, line: 2641, type: !7613)
!9230 = !DILocation(line: 2641, column: 22, scope: !9222)
!9231 = !DILocation(line: 2641, column: 29, scope: !9222)
!9232 = !DILocation(line: 2641, column: 38, scope: !9222)
!9233 = !DILocalVariable(name: "netdev", scope: !9222, file: !1, line: 2642, type: !324)
!9234 = !DILocation(line: 2642, column: 21, scope: !9222)
!9235 = !DILocation(line: 2642, column: 30, scope: !9222)
!9236 = !DILocation(line: 2642, column: 37, scope: !9222)
!9237 = !DILocalVariable(name: "desc_data", scope: !9222, file: !1, line: 2643, type: !7645)
!9238 = !DILocation(line: 2643, column: 27, scope: !9222)
!9239 = !DILocalVariable(name: "dma_desc", scope: !9222, file: !1, line: 2644, type: !7635)
!9240 = !DILocation(line: 2644, column: 26, scope: !9222)
!9241 = !DILocalVariable(name: "pkt_info", scope: !9222, file: !1, line: 2645, type: !8704)
!9242 = !DILocation(line: 2645, column: 26, scope: !9222)
!9243 = !DILocalVariable(name: "err", scope: !9222, file: !1, line: 2646, type: !11)
!9244 = !DILocation(line: 2646, column: 15, scope: !9222)
!9245 = !DILocalVariable(name: "etlt", scope: !9222, file: !1, line: 2646, type: !11)
!9246 = !DILocation(line: 2646, column: 20, scope: !9222)
!9247 = !DILocalVariable(name: "l34t", scope: !9222, file: !1, line: 2646, type: !11)
!9248 = !DILocation(line: 2646, column: 26, scope: !9222)
!9249 = !DILocalVariable(name: "_ring", scope: !9250, file: !1, line: 2648, type: !7613)
!9250 = distinct !DILexicalBlock(scope: !9222, file: !1, line: 2648, column: 14)
!9251 = !DILocation(line: 2648, column: 14, scope: !9250)
!9252 = !DILocation(line: 2648, column: 12, scope: !9222)
!9253 = !DILocation(line: 2649, column: 13, scope: !9222)
!9254 = !DILocation(line: 2649, column: 24, scope: !9222)
!9255 = !DILocation(line: 2649, column: 11, scope: !9222)
!9256 = !DILocation(line: 2650, column: 14, scope: !9222)
!9257 = !DILocation(line: 2650, column: 20, scope: !9222)
!9258 = !DILocation(line: 2650, column: 11, scope: !9222)
!9259 = !DILocalVariable(name: "_pos", scope: !9260, file: !1, line: 2653, type: !5)
!9260 = distinct !DILexicalBlock(scope: !9261, file: !1, line: 2653, column: 6)
!9261 = distinct !DILexicalBlock(scope: !9222, file: !1, line: 2653, column: 6)
!9262 = !DILocation(line: 2653, column: 6, scope: !9260)
!9263 = !DILocalVariable(name: "_len", scope: !9260, file: !1, line: 2653, type: !5)
!9264 = !DILocalVariable(name: "_var", scope: !9260, file: !1, line: 2653, type: !7527)
!9265 = !DILocation(line: 2653, column: 6, scope: !9261)
!9266 = !DILocation(line: 2653, column: 6, scope: !9222)
!9267 = !DILocation(line: 2656, column: 3, scope: !9261)
!9268 = !DILocation(line: 2659, column: 2, scope: !9222)
!9269 = !{i32 -2139398475}
!9270 = !DILocation(line: 2661, column: 6, scope: !9271)
!9271 = distinct !DILexicalBlock(scope: !9222, file: !1, line: 2661, column: 6)
!9272 = !DILocation(line: 2661, column: 6, scope: !9222)
!9273 = !DILocation(line: 2662, column: 23, scope: !9271)
!9274 = !DILocation(line: 2662, column: 30, scope: !9271)
!9275 = !DILocation(line: 2662, column: 36, scope: !9271)
!9276 = !DILocation(line: 2662, column: 42, scope: !9271)
!9277 = !DILocation(line: 2662, column: 3, scope: !9271)
!9278 = !DILocalVariable(name: "_pos", scope: !9279, file: !1, line: 2664, type: !5)
!9279 = distinct !DILexicalBlock(scope: !9280, file: !1, line: 2664, column: 6)
!9280 = distinct !DILexicalBlock(scope: !9222, file: !1, line: 2664, column: 6)
!9281 = !DILocation(line: 2664, column: 6, scope: !9279)
!9282 = !DILocalVariable(name: "_len", scope: !9279, file: !1, line: 2664, type: !5)
!9283 = !DILocalVariable(name: "_var", scope: !9279, file: !1, line: 2664, type: !7527)
!9284 = !DILocation(line: 2664, column: 6, scope: !9280)
!9285 = !DILocation(line: 2664, column: 6, scope: !9222)
!9286 = !DILocation(line: 2668, column: 24, scope: !9287)
!9287 = distinct !DILexicalBlock(scope: !9280, file: !1, line: 2666, column: 35)
!9288 = !DILocation(line: 2668, column: 34, scope: !9287)
!9289 = !DILocation(line: 2668, column: 3, scope: !9287)
!9290 = !DILocalVariable(name: "_var", scope: !9291, file: !1, line: 2670, type: !11)
!9291 = distinct !DILexicalBlock(scope: !9287, file: !1, line: 2670, column: 26)
!9292 = !DILocation(line: 2670, column: 26, scope: !9291)
!9293 = !DILocalVariable(name: "_pos", scope: !9291, file: !1, line: 2670, type: !5)
!9294 = !DILocalVariable(name: "_len", scope: !9291, file: !1, line: 2670, type: !5)
!9295 = !DILocalVariable(name: "_val", scope: !9291, file: !1, line: 2670, type: !5)
!9296 = !DILocation(line: 2670, column: 3, scope: !9287)
!9297 = !DILocation(line: 2670, column: 13, scope: !9287)
!9298 = !DILocation(line: 2670, column: 24, scope: !9287)
!9299 = !DILocalVariable(name: "_var", scope: !9300, file: !1, line: 2675, type: !11)
!9300 = distinct !DILexicalBlock(scope: !9287, file: !1, line: 2675, column: 26)
!9301 = !DILocation(line: 2675, column: 26, scope: !9300)
!9302 = !DILocalVariable(name: "_pos", scope: !9300, file: !1, line: 2675, type: !5)
!9303 = !DILocalVariable(name: "_len", scope: !9300, file: !1, line: 2675, type: !5)
!9304 = !DILocalVariable(name: "_val", scope: !9300, file: !1, line: 2675, type: !5)
!9305 = !DILocation(line: 2675, column: 3, scope: !9287)
!9306 = !DILocation(line: 2675, column: 13, scope: !9287)
!9307 = !DILocation(line: 2675, column: 24, scope: !9287)
!9308 = !DILocation(line: 2680, column: 3, scope: !9287)
!9309 = !DILocalVariable(name: "_var", scope: !9310, file: !1, line: 2684, type: !11)
!9310 = distinct !DILexicalBlock(scope: !9222, file: !1, line: 2684, column: 25)
!9311 = !DILocation(line: 2684, column: 25, scope: !9310)
!9312 = !DILocalVariable(name: "_pos", scope: !9310, file: !1, line: 2684, type: !5)
!9313 = !DILocalVariable(name: "_len", scope: !9310, file: !1, line: 2684, type: !5)
!9314 = !DILocalVariable(name: "_val", scope: !9310, file: !1, line: 2684, type: !5)
!9315 = !DILocation(line: 2684, column: 2, scope: !9222)
!9316 = !DILocation(line: 2684, column: 12, scope: !9222)
!9317 = !DILocation(line: 2684, column: 23, scope: !9222)
!9318 = !DILocalVariable(name: "_pos", scope: !9319, file: !1, line: 2691, type: !5)
!9319 = distinct !DILexicalBlock(scope: !9320, file: !1, line: 2691, column: 6)
!9320 = distinct !DILexicalBlock(scope: !9222, file: !1, line: 2691, column: 6)
!9321 = !DILocation(line: 2691, column: 6, scope: !9319)
!9322 = !DILocalVariable(name: "_len", scope: !9319, file: !1, line: 2691, type: !5)
!9323 = !DILocalVariable(name: "_var", scope: !9319, file: !1, line: 2691, type: !7527)
!9324 = !DILocation(line: 2691, column: 6, scope: !9320)
!9325 = !DILocation(line: 2691, column: 6, scope: !9222)
!9326 = !DILocalVariable(name: "_var", scope: !9327, file: !1, line: 2694, type: !11)
!9327 = distinct !DILexicalBlock(scope: !9320, file: !1, line: 2694, column: 26)
!9328 = !DILocation(line: 2694, column: 26, scope: !9327)
!9329 = !DILocalVariable(name: "_pos", scope: !9327, file: !1, line: 2694, type: !5)
!9330 = !DILocalVariable(name: "_len", scope: !9327, file: !1, line: 2694, type: !5)
!9331 = !DILocalVariable(name: "_val", scope: !9327, file: !1, line: 2694, type: !5)
!9332 = !DILocation(line: 2694, column: 3, scope: !9320)
!9333 = !DILocation(line: 2694, column: 13, scope: !9320)
!9334 = !DILocation(line: 2694, column: 24, scope: !9320)
!9335 = !DILocalVariable(name: "_pos", scope: !9336, file: !1, line: 2701, type: !5)
!9336 = distinct !DILexicalBlock(scope: !9337, file: !1, line: 2701, column: 6)
!9337 = distinct !DILexicalBlock(scope: !9222, file: !1, line: 2701, column: 6)
!9338 = !DILocation(line: 2701, column: 6, scope: !9336)
!9339 = !DILocalVariable(name: "_len", scope: !9336, file: !1, line: 2701, type: !5)
!9340 = !DILocalVariable(name: "_var", scope: !9336, file: !1, line: 2701, type: !7527)
!9341 = !DILocation(line: 2701, column: 6, scope: !9337)
!9342 = !DILocation(line: 2701, column: 6, scope: !9222)
!9343 = !DILocalVariable(name: "_pos", scope: !9344, file: !1, line: 2704, type: !5)
!9344 = distinct !DILexicalBlock(scope: !9345, file: !1, line: 2704, column: 27)
!9345 = distinct !DILexicalBlock(scope: !9337, file: !1, line: 2703, column: 33)
!9346 = !DILocation(line: 2704, column: 27, scope: !9344)
!9347 = !DILocalVariable(name: "_len", scope: !9344, file: !1, line: 2704, type: !5)
!9348 = !DILocalVariable(name: "_var", scope: !9344, file: !1, line: 2704, type: !7527)
!9349 = !DILocation(line: 2704, column: 27, scope: !9345)
!9350 = !DILocation(line: 2704, column: 3, scope: !9345)
!9351 = !DILocation(line: 2704, column: 14, scope: !9345)
!9352 = !DILocation(line: 2704, column: 17, scope: !9345)
!9353 = !DILocation(line: 2704, column: 25, scope: !9345)
!9354 = !DILocation(line: 2707, column: 7, scope: !9355)
!9355 = distinct !DILexicalBlock(scope: !9345, file: !1, line: 2707, column: 7)
!9356 = !DILocation(line: 2707, column: 18, scope: !9355)
!9357 = !DILocation(line: 2707, column: 21, scope: !9355)
!9358 = !DILocation(line: 2707, column: 7, scope: !9345)
!9359 = !DILocation(line: 2708, column: 4, scope: !9355)
!9360 = !DILocation(line: 2708, column: 11, scope: !9355)
!9361 = !DILocation(line: 2708, column: 17, scope: !9355)
!9362 = !DILocation(line: 2708, column: 40, scope: !9355)
!9363 = !DILocation(line: 2709, column: 2, scope: !9345)
!9364 = !DILocalVariable(name: "_pos", scope: !9365, file: !1, line: 2712, type: !5)
!9365 = distinct !DILexicalBlock(scope: !9366, file: !1, line: 2712, column: 6)
!9366 = distinct !DILexicalBlock(scope: !9222, file: !1, line: 2712, column: 6)
!9367 = !DILocation(line: 2712, column: 6, scope: !9365)
!9368 = !DILocalVariable(name: "_len", scope: !9365, file: !1, line: 2712, type: !5)
!9369 = !DILocalVariable(name: "_var", scope: !9365, file: !1, line: 2712, type: !7527)
!9370 = !DILocation(line: 2712, column: 6, scope: !9366)
!9371 = !DILocation(line: 2712, column: 6, scope: !9222)
!9372 = !DILocalVariable(name: "_var", scope: !9373, file: !1, line: 2715, type: !11)
!9373 = distinct !DILexicalBlock(scope: !9374, file: !1, line: 2715, column: 26)
!9374 = distinct !DILexicalBlock(scope: !9366, file: !1, line: 2714, column: 34)
!9375 = !DILocation(line: 2715, column: 26, scope: !9373)
!9376 = !DILocalVariable(name: "_pos", scope: !9373, file: !1, line: 2715, type: !5)
!9377 = !DILocalVariable(name: "_len", scope: !9373, file: !1, line: 2715, type: !5)
!9378 = !DILocalVariable(name: "_val", scope: !9373, file: !1, line: 2715, type: !5)
!9379 = !DILocation(line: 2715, column: 3, scope: !9374)
!9380 = !DILocation(line: 2715, column: 13, scope: !9374)
!9381 = !DILocation(line: 2715, column: 24, scope: !9374)
!9382 = !DILocation(line: 2721, column: 24, scope: !9374)
!9383 = !DILocation(line: 2721, column: 3, scope: !9374)
!9384 = !DILocation(line: 2721, column: 13, scope: !9374)
!9385 = !DILocation(line: 2721, column: 22, scope: !9374)
!9386 = !DILocalVariable(name: "_pos", scope: !9387, file: !1, line: 2723, type: !5)
!9387 = distinct !DILexicalBlock(scope: !9374, file: !1, line: 2723, column: 10)
!9388 = !DILocation(line: 2723, column: 10, scope: !9387)
!9389 = !DILocalVariable(name: "_len", scope: !9387, file: !1, line: 2723, type: !5)
!9390 = !DILocalVariable(name: "_var", scope: !9387, file: !1, line: 2723, type: !7527)
!9391 = !DILocation(line: 2723, column: 10, scope: !9374)
!9392 = !DILocation(line: 2723, column: 8, scope: !9374)
!9393 = !DILocation(line: 2726, column: 11, scope: !9374)
!9394 = !DILocation(line: 2726, column: 3, scope: !9374)
!9395 = !DILocation(line: 2731, column: 4, scope: !9396)
!9396 = distinct !DILexicalBlock(scope: !9374, file: !1, line: 2726, column: 17)
!9397 = !DILocation(line: 2731, column: 14, scope: !9396)
!9398 = !DILocation(line: 2731, column: 28, scope: !9396)
!9399 = !DILocation(line: 2732, column: 4, scope: !9396)
!9400 = !DILocation(line: 2734, column: 4, scope: !9396)
!9401 = !DILocation(line: 2734, column: 14, scope: !9396)
!9402 = !DILocation(line: 2734, column: 28, scope: !9396)
!9403 = !DILocation(line: 2735, column: 3, scope: !9396)
!9404 = !DILocation(line: 2736, column: 2, scope: !9374)
!9405 = !DILocalVariable(name: "_pos", scope: !9406, file: !1, line: 2739, type: !5)
!9406 = distinct !DILexicalBlock(scope: !9222, file: !1, line: 2739, column: 22)
!9407 = !DILocation(line: 2739, column: 22, scope: !9406)
!9408 = !DILocalVariable(name: "_len", scope: !9406, file: !1, line: 2739, type: !5)
!9409 = !DILocalVariable(name: "_var", scope: !9406, file: !1, line: 2739, type: !7527)
!9410 = !DILocation(line: 2739, column: 22, scope: !9222)
!9411 = !DILocation(line: 2739, column: 2, scope: !9222)
!9412 = !DILocation(line: 2739, column: 13, scope: !9222)
!9413 = !DILocation(line: 2739, column: 16, scope: !9222)
!9414 = !DILocation(line: 2739, column: 20, scope: !9222)
!9415 = !DILocalVariable(name: "_pos", scope: !9416, file: !1, line: 2743, type: !5)
!9416 = distinct !DILexicalBlock(scope: !9417, file: !1, line: 2743, column: 7)
!9417 = distinct !DILexicalBlock(scope: !9222, file: !1, line: 2743, column: 6)
!9418 = !DILocation(line: 2743, column: 7, scope: !9416)
!9419 = !DILocalVariable(name: "_len", scope: !9416, file: !1, line: 2743, type: !5)
!9420 = !DILocalVariable(name: "_var", scope: !9416, file: !1, line: 2743, type: !7527)
!9421 = !DILocation(line: 2743, column: 7, scope: !9417)
!9422 = !DILocation(line: 2743, column: 6, scope: !9222)
!9423 = !DILocalVariable(name: "_var", scope: !9424, file: !1, line: 2747, type: !11)
!9424 = distinct !DILexicalBlock(scope: !9425, file: !1, line: 2747, column: 26)
!9425 = distinct !DILexicalBlock(scope: !9417, file: !1, line: 2745, column: 34)
!9426 = !DILocation(line: 2747, column: 26, scope: !9424)
!9427 = !DILocalVariable(name: "_pos", scope: !9424, file: !1, line: 2747, type: !5)
!9428 = !DILocalVariable(name: "_len", scope: !9424, file: !1, line: 2747, type: !5)
!9429 = !DILocalVariable(name: "_val", scope: !9424, file: !1, line: 2747, type: !5)
!9430 = !DILocation(line: 2747, column: 3, scope: !9425)
!9431 = !DILocation(line: 2747, column: 13, scope: !9425)
!9432 = !DILocation(line: 2747, column: 24, scope: !9425)
!9433 = !DILocation(line: 2752, column: 3, scope: !9425)
!9434 = !DILocalVariable(name: "_var", scope: !9435, file: !1, line: 2756, type: !11)
!9435 = distinct !DILexicalBlock(scope: !9222, file: !1, line: 2756, column: 25)
!9436 = !DILocation(line: 2756, column: 25, scope: !9435)
!9437 = !DILocalVariable(name: "_pos", scope: !9435, file: !1, line: 2756, type: !5)
!9438 = !DILocalVariable(name: "_len", scope: !9435, file: !1, line: 2756, type: !5)
!9439 = !DILocalVariable(name: "_val", scope: !9435, file: !1, line: 2756, type: !5)
!9440 = !DILocation(line: 2756, column: 2, scope: !9222)
!9441 = !DILocation(line: 2756, column: 12, scope: !9222)
!9442 = !DILocation(line: 2756, column: 23, scope: !9222)
!9443 = !DILocation(line: 2763, column: 6, scope: !9444)
!9444 = distinct !DILexicalBlock(scope: !9222, file: !1, line: 2763, column: 6)
!9445 = !DILocation(line: 2763, column: 14, scope: !9444)
!9446 = !DILocation(line: 2763, column: 23, scope: !9444)
!9447 = !DILocation(line: 2763, column: 6, scope: !9222)
!9448 = !DILocalVariable(name: "_var", scope: !9449, file: !1, line: 2764, type: !11)
!9449 = distinct !DILexicalBlock(scope: !9444, file: !1, line: 2764, column: 26)
!9450 = !DILocation(line: 2764, column: 26, scope: !9449)
!9451 = !DILocalVariable(name: "_pos", scope: !9449, file: !1, line: 2764, type: !5)
!9452 = !DILocalVariable(name: "_len", scope: !9449, file: !1, line: 2764, type: !5)
!9453 = !DILocalVariable(name: "_val", scope: !9449, file: !1, line: 2764, type: !5)
!9454 = !DILocation(line: 2764, column: 3, scope: !9444)
!9455 = !DILocation(line: 2764, column: 13, scope: !9444)
!9456 = !DILocation(line: 2764, column: 24, scope: !9444)
!9457 = !DILocalVariable(name: "_pos", scope: !9458, file: !1, line: 2771, type: !5)
!9458 = distinct !DILexicalBlock(scope: !9222, file: !1, line: 2771, column: 8)
!9459 = !DILocation(line: 2771, column: 8, scope: !9458)
!9460 = !DILocalVariable(name: "_len", scope: !9458, file: !1, line: 2771, type: !5)
!9461 = !DILocalVariable(name: "_var", scope: !9458, file: !1, line: 2771, type: !7527)
!9462 = !DILocation(line: 2771, column: 8, scope: !9222)
!9463 = !DILocation(line: 2771, column: 6, scope: !9222)
!9464 = !DILocalVariable(name: "_pos", scope: !9465, file: !1, line: 2774, type: !5)
!9465 = distinct !DILexicalBlock(scope: !9222, file: !1, line: 2774, column: 9)
!9466 = !DILocation(line: 2774, column: 9, scope: !9465)
!9467 = !DILocalVariable(name: "_len", scope: !9465, file: !1, line: 2774, type: !5)
!9468 = !DILocalVariable(name: "_var", scope: !9465, file: !1, line: 2774, type: !7527)
!9469 = !DILocation(line: 2774, column: 9, scope: !9222)
!9470 = !DILocation(line: 2774, column: 7, scope: !9222)
!9471 = !DILocation(line: 2777, column: 2, scope: !9472)
!9472 = distinct !DILexicalBlock(scope: !9473, file: !1, line: 2777, column: 2)
!9473 = distinct !DILexicalBlock(scope: !9222, file: !1, line: 2777, column: 2)
!9474 = !DILocation(line: 2777, column: 2, scope: !9473)
!9475 = !DILocation(line: 2779, column: 7, scope: !9476)
!9476 = distinct !DILexicalBlock(scope: !9222, file: !1, line: 2779, column: 6)
!9477 = !DILocation(line: 2779, column: 11, scope: !9476)
!9478 = !DILocation(line: 2779, column: 15, scope: !9476)
!9479 = !DILocation(line: 2779, column: 6, scope: !9222)
!9480 = !DILocation(line: 2781, column: 8, scope: !9481)
!9481 = distinct !DILexicalBlock(scope: !9482, file: !1, line: 2781, column: 7)
!9482 = distinct !DILexicalBlock(scope: !9476, file: !1, line: 2779, column: 21)
!9483 = !DILocation(line: 2781, column: 13, scope: !9481)
!9484 = !DILocation(line: 2781, column: 22, scope: !9481)
!9485 = !DILocation(line: 2782, column: 8, scope: !9481)
!9486 = !DILocation(line: 2782, column: 16, scope: !9481)
!9487 = !DILocation(line: 2782, column: 25, scope: !9481)
!9488 = !DILocation(line: 2781, column: 7, scope: !9482)
!9489 = !DILocalVariable(name: "_var", scope: !9490, file: !1, line: 2783, type: !11)
!9490 = distinct !DILexicalBlock(scope: !9491, file: !1, line: 2783, column: 27)
!9491 = distinct !DILexicalBlock(scope: !9481, file: !1, line: 2782, column: 53)
!9492 = !DILocation(line: 2783, column: 27, scope: !9490)
!9493 = !DILocalVariable(name: "_pos", scope: !9490, file: !1, line: 2783, type: !5)
!9494 = !DILocalVariable(name: "_len", scope: !9490, file: !1, line: 2783, type: !5)
!9495 = !DILocalVariable(name: "_val", scope: !9490, file: !1, line: 2783, type: !5)
!9496 = !DILocation(line: 2783, column: 4, scope: !9491)
!9497 = !DILocation(line: 2783, column: 14, scope: !9491)
!9498 = !DILocation(line: 2783, column: 25, scope: !9491)
!9499 = !DILocalVariable(name: "_pos", scope: !9500, file: !1, line: 2789, type: !5)
!9500 = distinct !DILexicalBlock(scope: !9491, file: !1, line: 2789, column: 5)
!9501 = !DILocation(line: 2789, column: 5, scope: !9500)
!9502 = !DILocalVariable(name: "_len", scope: !9500, file: !1, line: 2789, type: !5)
!9503 = !DILocalVariable(name: "_var", scope: !9500, file: !1, line: 2789, type: !7527)
!9504 = !DILocation(line: 2789, column: 5, scope: !9491)
!9505 = !DILocation(line: 2788, column: 4, scope: !9491)
!9506 = !DILocation(line: 2788, column: 14, scope: !9491)
!9507 = !DILocation(line: 2788, column: 24, scope: !9491)
!9508 = !DILocation(line: 2792, column: 4, scope: !9509)
!9509 = distinct !DILexicalBlock(scope: !9510, file: !1, line: 2792, column: 4)
!9510 = distinct !DILexicalBlock(scope: !9491, file: !1, line: 2792, column: 4)
!9511 = !DILocation(line: 2792, column: 4, scope: !9510)
!9512 = !DILocation(line: 2794, column: 3, scope: !9491)
!9513 = !DILocation(line: 2795, column: 2, scope: !9482)
!9514 = !DILocation(line: 2796, column: 8, scope: !9515)
!9515 = distinct !DILexicalBlock(scope: !9516, file: !1, line: 2796, column: 7)
!9516 = distinct !DILexicalBlock(scope: !9476, file: !1, line: 2795, column: 9)
!9517 = !DILocation(line: 2796, column: 13, scope: !9515)
!9518 = !DILocation(line: 2796, column: 22, scope: !9515)
!9519 = !DILocation(line: 2796, column: 26, scope: !9515)
!9520 = !DILocation(line: 2796, column: 31, scope: !9515)
!9521 = !DILocation(line: 2796, column: 7, scope: !9516)
!9522 = !DILocalVariable(name: "_var", scope: !9523, file: !1, line: 2797, type: !11)
!9523 = distinct !DILexicalBlock(scope: !9515, file: !1, line: 2797, column: 27)
!9524 = !DILocation(line: 2797, column: 27, scope: !9523)
!9525 = !DILocalVariable(name: "_pos", scope: !9523, file: !1, line: 2797, type: !5)
!9526 = !DILocalVariable(name: "_len", scope: !9523, file: !1, line: 2797, type: !5)
!9527 = !DILocalVariable(name: "_val", scope: !9523, file: !1, line: 2797, type: !5)
!9528 = !DILocation(line: 2797, column: 4, scope: !9515)
!9529 = !DILocation(line: 2797, column: 14, scope: !9515)
!9530 = !DILocation(line: 2797, column: 25, scope: !9515)
!9531 = !DILocalVariable(name: "_var", scope: !9532, file: !1, line: 2803, type: !11)
!9532 = distinct !DILexicalBlock(scope: !9515, file: !1, line: 2803, column: 23)
!9533 = !DILocation(line: 2803, column: 23, scope: !9532)
!9534 = !DILocalVariable(name: "_pos", scope: !9532, file: !1, line: 2803, type: !5)
!9535 = !DILocalVariable(name: "_len", scope: !9532, file: !1, line: 2803, type: !5)
!9536 = !DILocalVariable(name: "_val", scope: !9532, file: !1, line: 2803, type: !5)
!9537 = !DILocation(line: 2803, column: 4, scope: !9515)
!9538 = !DILocation(line: 2803, column: 14, scope: !9515)
!9539 = !DILocation(line: 2803, column: 21, scope: !9515)
!9540 = !DILocation(line: 2810, column: 2, scope: !9222)
!9541 = !DILocation(line: 2810, column: 2, scope: !9542)
!9542 = distinct !DILexicalBlock(scope: !9222, file: !1, line: 2810, column: 2)
!9543 = !DILocation(line: 2813, column: 2, scope: !9222)
!9544 = !DILocation(line: 2814, column: 1, scope: !9222)
!9545 = distinct !DISubprogram(name: "xlgmac_enable_int", scope: !1, file: !1, line: 2816, type: !7864, scopeLine: 2818, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1619)
!9546 = !DILocalVariable(name: "channel", arg: 1, scope: !9545, file: !1, line: 2816, type: !7573)
!9547 = !DILocation(line: 2816, column: 53, scope: !9545)
!9548 = !DILocalVariable(name: "int_id", arg: 2, scope: !9545, file: !1, line: 2817, type: !7399)
!9549 = !DILocation(line: 2817, column: 25, scope: !9545)
!9550 = !DILocalVariable(name: "dma_ch_ier", scope: !9545, file: !1, line: 2819, type: !11)
!9551 = !DILocation(line: 2819, column: 15, scope: !9545)
!9552 = !DILocation(line: 2821, column: 21, scope: !9545)
!9553 = !DILocation(line: 2821, column: 15, scope: !9545)
!9554 = !DILocation(line: 2821, column: 13, scope: !9545)
!9555 = !DILocation(line: 2823, column: 10, scope: !9545)
!9556 = !DILocation(line: 2823, column: 2, scope: !9545)
!9557 = !DILocalVariable(name: "_var", scope: !9558, file: !1, line: 2825, type: !11)
!9558 = distinct !DILexicalBlock(scope: !9559, file: !1, line: 2825, column: 16)
!9559 = distinct !DILexicalBlock(scope: !9545, file: !1, line: 2823, column: 18)
!9560 = !DILocation(line: 2825, column: 16, scope: !9558)
!9561 = !DILocalVariable(name: "_pos", scope: !9558, file: !1, line: 2825, type: !5)
!9562 = !DILocalVariable(name: "_len", scope: !9558, file: !1, line: 2825, type: !5)
!9563 = !DILocalVariable(name: "_val", scope: !9558, file: !1, line: 2825, type: !5)
!9564 = !DILocation(line: 2825, column: 14, scope: !9559)
!9565 = !DILocation(line: 2828, column: 3, scope: !9559)
!9566 = !DILocalVariable(name: "_var", scope: !9567, file: !1, line: 2830, type: !11)
!9567 = distinct !DILexicalBlock(scope: !9559, file: !1, line: 2830, column: 16)
!9568 = !DILocation(line: 2830, column: 16, scope: !9567)
!9569 = !DILocalVariable(name: "_pos", scope: !9567, file: !1, line: 2830, type: !5)
!9570 = !DILocalVariable(name: "_len", scope: !9567, file: !1, line: 2830, type: !5)
!9571 = !DILocalVariable(name: "_val", scope: !9567, file: !1, line: 2830, type: !5)
!9572 = !DILocation(line: 2830, column: 14, scope: !9559)
!9573 = !DILocation(line: 2833, column: 3, scope: !9559)
!9574 = !DILocalVariable(name: "_var", scope: !9575, file: !1, line: 2835, type: !11)
!9575 = distinct !DILexicalBlock(scope: !9559, file: !1, line: 2835, column: 16)
!9576 = !DILocation(line: 2835, column: 16, scope: !9575)
!9577 = !DILocalVariable(name: "_pos", scope: !9575, file: !1, line: 2835, type: !5)
!9578 = !DILocalVariable(name: "_len", scope: !9575, file: !1, line: 2835, type: !5)
!9579 = !DILocalVariable(name: "_val", scope: !9575, file: !1, line: 2835, type: !5)
!9580 = !DILocation(line: 2835, column: 14, scope: !9559)
!9581 = !DILocation(line: 2838, column: 3, scope: !9559)
!9582 = !DILocalVariable(name: "_var", scope: !9583, file: !1, line: 2840, type: !11)
!9583 = distinct !DILexicalBlock(scope: !9559, file: !1, line: 2840, column: 16)
!9584 = !DILocation(line: 2840, column: 16, scope: !9583)
!9585 = !DILocalVariable(name: "_pos", scope: !9583, file: !1, line: 2840, type: !5)
!9586 = !DILocalVariable(name: "_len", scope: !9583, file: !1, line: 2840, type: !5)
!9587 = !DILocalVariable(name: "_val", scope: !9583, file: !1, line: 2840, type: !5)
!9588 = !DILocation(line: 2840, column: 14, scope: !9559)
!9589 = !DILocation(line: 2843, column: 3, scope: !9559)
!9590 = !DILocalVariable(name: "_var", scope: !9591, file: !1, line: 2845, type: !11)
!9591 = distinct !DILexicalBlock(scope: !9559, file: !1, line: 2845, column: 16)
!9592 = !DILocation(line: 2845, column: 16, scope: !9591)
!9593 = !DILocalVariable(name: "_pos", scope: !9591, file: !1, line: 2845, type: !5)
!9594 = !DILocalVariable(name: "_len", scope: !9591, file: !1, line: 2845, type: !5)
!9595 = !DILocalVariable(name: "_val", scope: !9591, file: !1, line: 2845, type: !5)
!9596 = !DILocation(line: 2845, column: 14, scope: !9559)
!9597 = !DILocation(line: 2848, column: 3, scope: !9559)
!9598 = !DILocalVariable(name: "_var", scope: !9599, file: !1, line: 2850, type: !11)
!9599 = distinct !DILexicalBlock(scope: !9559, file: !1, line: 2850, column: 16)
!9600 = !DILocation(line: 2850, column: 16, scope: !9599)
!9601 = !DILocalVariable(name: "_pos", scope: !9599, file: !1, line: 2850, type: !5)
!9602 = !DILocalVariable(name: "_len", scope: !9599, file: !1, line: 2850, type: !5)
!9603 = !DILocalVariable(name: "_val", scope: !9599, file: !1, line: 2850, type: !5)
!9604 = !DILocation(line: 2850, column: 14, scope: !9559)
!9605 = !DILocation(line: 2853, column: 3, scope: !9559)
!9606 = !DILocalVariable(name: "_var", scope: !9607, file: !1, line: 2855, type: !11)
!9607 = distinct !DILexicalBlock(scope: !9559, file: !1, line: 2855, column: 16)
!9608 = !DILocation(line: 2855, column: 16, scope: !9607)
!9609 = !DILocalVariable(name: "_pos", scope: !9607, file: !1, line: 2855, type: !5)
!9610 = !DILocalVariable(name: "_len", scope: !9607, file: !1, line: 2855, type: !5)
!9611 = !DILocalVariable(name: "_val", scope: !9607, file: !1, line: 2855, type: !5)
!9612 = !DILocation(line: 2855, column: 14, scope: !9559)
!9613 = !DILocalVariable(name: "_var", scope: !9614, file: !1, line: 2858, type: !11)
!9614 = distinct !DILexicalBlock(scope: !9559, file: !1, line: 2858, column: 16)
!9615 = !DILocation(line: 2858, column: 16, scope: !9614)
!9616 = !DILocalVariable(name: "_pos", scope: !9614, file: !1, line: 2858, type: !5)
!9617 = !DILocalVariable(name: "_len", scope: !9614, file: !1, line: 2858, type: !5)
!9618 = !DILocalVariable(name: "_val", scope: !9614, file: !1, line: 2858, type: !5)
!9619 = !DILocation(line: 2858, column: 14, scope: !9559)
!9620 = !DILocation(line: 2861, column: 3, scope: !9559)
!9621 = !DILocalVariable(name: "_var", scope: !9622, file: !1, line: 2863, type: !11)
!9622 = distinct !DILexicalBlock(scope: !9559, file: !1, line: 2863, column: 16)
!9623 = !DILocation(line: 2863, column: 16, scope: !9622)
!9624 = !DILocalVariable(name: "_pos", scope: !9622, file: !1, line: 2863, type: !5)
!9625 = !DILocalVariable(name: "_len", scope: !9622, file: !1, line: 2863, type: !5)
!9626 = !DILocalVariable(name: "_val", scope: !9622, file: !1, line: 2863, type: !5)
!9627 = !DILocation(line: 2863, column: 14, scope: !9559)
!9628 = !DILocation(line: 2866, column: 3, scope: !9559)
!9629 = !DILocation(line: 2868, column: 17, scope: !9559)
!9630 = !DILocation(line: 2868, column: 26, scope: !9559)
!9631 = !DILocation(line: 2868, column: 14, scope: !9559)
!9632 = !DILocation(line: 2869, column: 3, scope: !9559)
!9633 = !DILocation(line: 2871, column: 3, scope: !9559)
!9634 = !DILocation(line: 2874, column: 9, scope: !9545)
!9635 = !DILocation(line: 2874, column: 21, scope: !9545)
!9636 = !DILocation(line: 2874, column: 2, scope: !9545)
!9637 = !DILocation(line: 2876, column: 2, scope: !9545)
!9638 = !DILocation(line: 2877, column: 1, scope: !9545)
!9639 = distinct !DISubprogram(name: "xlgmac_disable_int", scope: !1, file: !1, line: 2879, type: !7864, scopeLine: 2881, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1619)
!9640 = !DILocalVariable(name: "channel", arg: 1, scope: !9639, file: !1, line: 2879, type: !7573)
!9641 = !DILocation(line: 2879, column: 54, scope: !9639)
!9642 = !DILocalVariable(name: "int_id", arg: 2, scope: !9639, file: !1, line: 2880, type: !7399)
!9643 = !DILocation(line: 2880, column: 26, scope: !9639)
!9644 = !DILocalVariable(name: "dma_ch_ier", scope: !9639, file: !1, line: 2882, type: !11)
!9645 = !DILocation(line: 2882, column: 15, scope: !9639)
!9646 = !DILocation(line: 2884, column: 21, scope: !9639)
!9647 = !DILocation(line: 2884, column: 15, scope: !9639)
!9648 = !DILocation(line: 2884, column: 13, scope: !9639)
!9649 = !DILocation(line: 2886, column: 10, scope: !9639)
!9650 = !DILocation(line: 2886, column: 2, scope: !9639)
!9651 = !DILocalVariable(name: "_var", scope: !9652, file: !1, line: 2888, type: !11)
!9652 = distinct !DILexicalBlock(scope: !9653, file: !1, line: 2888, column: 16)
!9653 = distinct !DILexicalBlock(scope: !9639, file: !1, line: 2886, column: 18)
!9654 = !DILocation(line: 2888, column: 16, scope: !9652)
!9655 = !DILocalVariable(name: "_pos", scope: !9652, file: !1, line: 2888, type: !5)
!9656 = !DILocalVariable(name: "_len", scope: !9652, file: !1, line: 2888, type: !5)
!9657 = !DILocalVariable(name: "_val", scope: !9652, file: !1, line: 2888, type: !5)
!9658 = !DILocation(line: 2888, column: 14, scope: !9653)
!9659 = !DILocation(line: 2891, column: 3, scope: !9653)
!9660 = !DILocalVariable(name: "_var", scope: !9661, file: !1, line: 2893, type: !11)
!9661 = distinct !DILexicalBlock(scope: !9653, file: !1, line: 2893, column: 16)
!9662 = !DILocation(line: 2893, column: 16, scope: !9661)
!9663 = !DILocalVariable(name: "_pos", scope: !9661, file: !1, line: 2893, type: !5)
!9664 = !DILocalVariable(name: "_len", scope: !9661, file: !1, line: 2893, type: !5)
!9665 = !DILocalVariable(name: "_val", scope: !9661, file: !1, line: 2893, type: !5)
!9666 = !DILocation(line: 2893, column: 14, scope: !9653)
!9667 = !DILocation(line: 2896, column: 3, scope: !9653)
!9668 = !DILocalVariable(name: "_var", scope: !9669, file: !1, line: 2898, type: !11)
!9669 = distinct !DILexicalBlock(scope: !9653, file: !1, line: 2898, column: 16)
!9670 = !DILocation(line: 2898, column: 16, scope: !9669)
!9671 = !DILocalVariable(name: "_pos", scope: !9669, file: !1, line: 2898, type: !5)
!9672 = !DILocalVariable(name: "_len", scope: !9669, file: !1, line: 2898, type: !5)
!9673 = !DILocalVariable(name: "_val", scope: !9669, file: !1, line: 2898, type: !5)
!9674 = !DILocation(line: 2898, column: 14, scope: !9653)
!9675 = !DILocation(line: 2901, column: 3, scope: !9653)
!9676 = !DILocalVariable(name: "_var", scope: !9677, file: !1, line: 2903, type: !11)
!9677 = distinct !DILexicalBlock(scope: !9653, file: !1, line: 2903, column: 16)
!9678 = !DILocation(line: 2903, column: 16, scope: !9677)
!9679 = !DILocalVariable(name: "_pos", scope: !9677, file: !1, line: 2903, type: !5)
!9680 = !DILocalVariable(name: "_len", scope: !9677, file: !1, line: 2903, type: !5)
!9681 = !DILocalVariable(name: "_val", scope: !9677, file: !1, line: 2903, type: !5)
!9682 = !DILocation(line: 2903, column: 14, scope: !9653)
!9683 = !DILocation(line: 2906, column: 3, scope: !9653)
!9684 = !DILocalVariable(name: "_var", scope: !9685, file: !1, line: 2908, type: !11)
!9685 = distinct !DILexicalBlock(scope: !9653, file: !1, line: 2908, column: 16)
!9686 = !DILocation(line: 2908, column: 16, scope: !9685)
!9687 = !DILocalVariable(name: "_pos", scope: !9685, file: !1, line: 2908, type: !5)
!9688 = !DILocalVariable(name: "_len", scope: !9685, file: !1, line: 2908, type: !5)
!9689 = !DILocalVariable(name: "_val", scope: !9685, file: !1, line: 2908, type: !5)
!9690 = !DILocation(line: 2908, column: 14, scope: !9653)
!9691 = !DILocation(line: 2911, column: 3, scope: !9653)
!9692 = !DILocalVariable(name: "_var", scope: !9693, file: !1, line: 2913, type: !11)
!9693 = distinct !DILexicalBlock(scope: !9653, file: !1, line: 2913, column: 16)
!9694 = !DILocation(line: 2913, column: 16, scope: !9693)
!9695 = !DILocalVariable(name: "_pos", scope: !9693, file: !1, line: 2913, type: !5)
!9696 = !DILocalVariable(name: "_len", scope: !9693, file: !1, line: 2913, type: !5)
!9697 = !DILocalVariable(name: "_val", scope: !9693, file: !1, line: 2913, type: !5)
!9698 = !DILocation(line: 2913, column: 14, scope: !9653)
!9699 = !DILocation(line: 2916, column: 3, scope: !9653)
!9700 = !DILocalVariable(name: "_var", scope: !9701, file: !1, line: 2918, type: !11)
!9701 = distinct !DILexicalBlock(scope: !9653, file: !1, line: 2918, column: 16)
!9702 = !DILocation(line: 2918, column: 16, scope: !9701)
!9703 = !DILocalVariable(name: "_pos", scope: !9701, file: !1, line: 2918, type: !5)
!9704 = !DILocalVariable(name: "_len", scope: !9701, file: !1, line: 2918, type: !5)
!9705 = !DILocalVariable(name: "_val", scope: !9701, file: !1, line: 2918, type: !5)
!9706 = !DILocation(line: 2918, column: 14, scope: !9653)
!9707 = !DILocalVariable(name: "_var", scope: !9708, file: !1, line: 2921, type: !11)
!9708 = distinct !DILexicalBlock(scope: !9653, file: !1, line: 2921, column: 16)
!9709 = !DILocation(line: 2921, column: 16, scope: !9708)
!9710 = !DILocalVariable(name: "_pos", scope: !9708, file: !1, line: 2921, type: !5)
!9711 = !DILocalVariable(name: "_len", scope: !9708, file: !1, line: 2921, type: !5)
!9712 = !DILocalVariable(name: "_val", scope: !9708, file: !1, line: 2921, type: !5)
!9713 = !DILocation(line: 2921, column: 14, scope: !9653)
!9714 = !DILocation(line: 2924, column: 3, scope: !9653)
!9715 = !DILocalVariable(name: "_var", scope: !9716, file: !1, line: 2926, type: !11)
!9716 = distinct !DILexicalBlock(scope: !9653, file: !1, line: 2926, column: 16)
!9717 = !DILocation(line: 2926, column: 16, scope: !9716)
!9718 = !DILocalVariable(name: "_pos", scope: !9716, file: !1, line: 2926, type: !5)
!9719 = !DILocalVariable(name: "_len", scope: !9716, file: !1, line: 2926, type: !5)
!9720 = !DILocalVariable(name: "_val", scope: !9716, file: !1, line: 2926, type: !5)
!9721 = !DILocation(line: 2926, column: 14, scope: !9653)
!9722 = !DILocation(line: 2929, column: 3, scope: !9653)
!9723 = !DILocation(line: 2931, column: 24, scope: !9653)
!9724 = !DILocation(line: 2931, column: 35, scope: !9653)
!9725 = !DILocation(line: 2931, column: 3, scope: !9653)
!9726 = !DILocation(line: 2931, column: 12, scope: !9653)
!9727 = !DILocation(line: 2931, column: 22, scope: !9653)
!9728 = !DILocation(line: 2932, column: 14, scope: !9653)
!9729 = !DILocation(line: 2933, column: 3, scope: !9653)
!9730 = !DILocation(line: 2935, column: 3, scope: !9653)
!9731 = !DILocation(line: 2938, column: 9, scope: !9639)
!9732 = !DILocation(line: 2938, column: 21, scope: !9639)
!9733 = !DILocation(line: 2938, column: 2, scope: !9639)
!9734 = !DILocation(line: 2940, column: 2, scope: !9639)
!9735 = !DILocation(line: 2941, column: 1, scope: !9639)
!9736 = distinct !DISubprogram(name: "xlgmac_set_mac_address", scope: !1, file: !1, line: 60, type: !7877, scopeLine: 61, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1619)
!9737 = !DILocalVariable(name: "pdata", arg: 1, scope: !9736, file: !1, line: 60, type: !7555)
!9738 = !DILocation(line: 60, column: 56, scope: !9736)
!9739 = !DILocalVariable(name: "addr", arg: 2, scope: !9736, file: !1, line: 60, type: !827)
!9740 = !DILocation(line: 60, column: 67, scope: !9736)
!9741 = !DILocalVariable(name: "mac_addr_hi", scope: !9736, file: !1, line: 62, type: !11)
!9742 = !DILocation(line: 62, column: 15, scope: !9736)
!9743 = !DILocalVariable(name: "mac_addr_lo", scope: !9736, file: !1, line: 62, type: !11)
!9744 = !DILocation(line: 62, column: 28, scope: !9736)
!9745 = !DILocation(line: 64, column: 17, scope: !9736)
!9746 = !DILocation(line: 64, column: 25, scope: !9736)
!9747 = !DILocation(line: 64, column: 35, scope: !9736)
!9748 = !DILocation(line: 64, column: 43, scope: !9736)
!9749 = !DILocation(line: 64, column: 32, scope: !9736)
!9750 = !DILocation(line: 64, column: 14, scope: !9736)
!9751 = !DILocation(line: 65, column: 17, scope: !9736)
!9752 = !DILocation(line: 65, column: 25, scope: !9736)
!9753 = !DILocation(line: 65, column: 35, scope: !9736)
!9754 = !DILocation(line: 65, column: 43, scope: !9736)
!9755 = !DILocation(line: 65, column: 32, scope: !9736)
!9756 = !DILocation(line: 66, column: 10, scope: !9736)
!9757 = !DILocation(line: 66, column: 18, scope: !9736)
!9758 = !DILocation(line: 65, column: 50, scope: !9736)
!9759 = !DILocation(line: 66, column: 28, scope: !9736)
!9760 = !DILocation(line: 66, column: 36, scope: !9736)
!9761 = !DILocation(line: 66, column: 25, scope: !9736)
!9762 = !DILocation(line: 65, column: 14, scope: !9736)
!9763 = !DILocation(line: 68, column: 9, scope: !9736)
!9764 = !DILocation(line: 68, column: 22, scope: !9736)
!9765 = !DILocation(line: 68, column: 29, scope: !9736)
!9766 = !DILocation(line: 68, column: 38, scope: !9736)
!9767 = !DILocation(line: 68, column: 2, scope: !9736)
!9768 = !DILocation(line: 69, column: 9, scope: !9736)
!9769 = !DILocation(line: 69, column: 22, scope: !9736)
!9770 = !DILocation(line: 69, column: 29, scope: !9736)
!9771 = !DILocation(line: 69, column: 38, scope: !9736)
!9772 = !DILocation(line: 69, column: 2, scope: !9736)
!9773 = !DILocation(line: 71, column: 2, scope: !9736)
!9774 = distinct !DISubprogram(name: "xlgmac_config_rx_mode", scope: !1, file: !1, line: 439, type: !7553, scopeLine: 440, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1619)
!9775 = !DILocalVariable(name: "pdata", arg: 1, scope: !9774, file: !1, line: 439, type: !7555)
!9776 = !DILocation(line: 439, column: 55, scope: !9774)
!9777 = !DILocalVariable(name: "netdev", scope: !9774, file: !1, line: 441, type: !324)
!9778 = !DILocation(line: 441, column: 21, scope: !9774)
!9779 = !DILocation(line: 441, column: 30, scope: !9774)
!9780 = !DILocation(line: 441, column: 37, scope: !9774)
!9781 = !DILocalVariable(name: "pr_mode", scope: !9774, file: !1, line: 442, type: !11)
!9782 = !DILocation(line: 442, column: 15, scope: !9774)
!9783 = !DILocalVariable(name: "am_mode", scope: !9774, file: !1, line: 442, type: !11)
!9784 = !DILocation(line: 442, column: 24, scope: !9774)
!9785 = !DILocation(line: 444, column: 14, scope: !9774)
!9786 = !DILocation(line: 444, column: 22, scope: !9774)
!9787 = !DILocation(line: 444, column: 28, scope: !9774)
!9788 = !DILocation(line: 444, column: 43, scope: !9774)
!9789 = !DILocation(line: 444, column: 10, scope: !9774)
!9790 = !DILocation(line: 445, column: 14, scope: !9774)
!9791 = !DILocation(line: 445, column: 22, scope: !9774)
!9792 = !DILocation(line: 445, column: 28, scope: !9774)
!9793 = !DILocation(line: 445, column: 44, scope: !9774)
!9794 = !DILocation(line: 445, column: 10, scope: !9774)
!9795 = !DILocation(line: 447, column: 30, scope: !9774)
!9796 = !DILocation(line: 447, column: 37, scope: !9774)
!9797 = !DILocation(line: 447, column: 2, scope: !9774)
!9798 = !DILocation(line: 448, column: 32, scope: !9774)
!9799 = !DILocation(line: 448, column: 39, scope: !9774)
!9800 = !DILocation(line: 448, column: 2, scope: !9774)
!9801 = !DILocation(line: 450, column: 27, scope: !9774)
!9802 = !DILocation(line: 450, column: 2, scope: !9774)
!9803 = !DILocation(line: 452, column: 2, scope: !9774)
!9804 = distinct !DISubprogram(name: "xlgmac_enable_rx_csum", scope: !1, file: !1, line: 48, type: !7553, scopeLine: 49, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1619)
!9805 = !DILocalVariable(name: "pdata", arg: 1, scope: !9804, file: !1, line: 48, type: !7555)
!9806 = !DILocation(line: 48, column: 55, scope: !9804)
!9807 = !DILocalVariable(name: "regval", scope: !9804, file: !1, line: 50, type: !1021)
!9808 = !DILocation(line: 50, column: 6, scope: !9804)
!9809 = !DILocation(line: 52, column: 17, scope: !9804)
!9810 = !DILocation(line: 52, column: 24, scope: !9804)
!9811 = !DILocation(line: 52, column: 33, scope: !9804)
!9812 = !DILocation(line: 52, column: 11, scope: !9804)
!9813 = !DILocation(line: 52, column: 9, scope: !9804)
!9814 = !DILocalVariable(name: "_var", scope: !9815, file: !1, line: 53, type: !1021)
!9815 = distinct !DILexicalBlock(scope: !9804, file: !1, line: 53, column: 11)
!9816 = !DILocation(line: 53, column: 11, scope: !9815)
!9817 = !DILocalVariable(name: "_pos", scope: !9815, file: !1, line: 53, type: !5)
!9818 = !DILocalVariable(name: "_len", scope: !9815, file: !1, line: 53, type: !5)
!9819 = !DILocalVariable(name: "_val", scope: !9815, file: !1, line: 53, type: !5)
!9820 = !DILocation(line: 53, column: 9, scope: !9804)
!9821 = !DILocation(line: 55, column: 9, scope: !9804)
!9822 = !DILocation(line: 55, column: 17, scope: !9804)
!9823 = !DILocation(line: 55, column: 24, scope: !9804)
!9824 = !DILocation(line: 55, column: 33, scope: !9804)
!9825 = !DILocation(line: 55, column: 2, scope: !9804)
!9826 = !DILocation(line: 57, column: 2, scope: !9804)
!9827 = distinct !DISubprogram(name: "xlgmac_disable_rx_csum", scope: !1, file: !1, line: 36, type: !7553, scopeLine: 37, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1619)
!9828 = !DILocalVariable(name: "pdata", arg: 1, scope: !9827, file: !1, line: 36, type: !7555)
!9829 = !DILocation(line: 36, column: 56, scope: !9827)
!9830 = !DILocalVariable(name: "regval", scope: !9827, file: !1, line: 38, type: !1021)
!9831 = !DILocation(line: 38, column: 6, scope: !9827)
!9832 = !DILocation(line: 40, column: 17, scope: !9827)
!9833 = !DILocation(line: 40, column: 24, scope: !9827)
!9834 = !DILocation(line: 40, column: 33, scope: !9827)
!9835 = !DILocation(line: 40, column: 11, scope: !9827)
!9836 = !DILocation(line: 40, column: 9, scope: !9827)
!9837 = !DILocalVariable(name: "_var", scope: !9838, file: !1, line: 41, type: !1021)
!9838 = distinct !DILexicalBlock(scope: !9827, file: !1, line: 41, column: 11)
!9839 = !DILocation(line: 41, column: 11, scope: !9838)
!9840 = !DILocalVariable(name: "_pos", scope: !9838, file: !1, line: 41, type: !5)
!9841 = !DILocalVariable(name: "_len", scope: !9838, file: !1, line: 41, type: !5)
!9842 = !DILocalVariable(name: "_val", scope: !9838, file: !1, line: 41, type: !5)
!9843 = !DILocation(line: 41, column: 9, scope: !9827)
!9844 = !DILocation(line: 43, column: 9, scope: !9827)
!9845 = !DILocation(line: 43, column: 17, scope: !9827)
!9846 = !DILocation(line: 43, column: 24, scope: !9827)
!9847 = !DILocation(line: 43, column: 33, scope: !9827)
!9848 = !DILocation(line: 43, column: 2, scope: !9827)
!9849 = !DILocation(line: 45, column: 2, scope: !9827)
!9850 = distinct !DISubprogram(name: "xlgmac_set_xlgmii_25000_speed", scope: !1, file: !1, line: 2549, type: !7553, scopeLine: 2550, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1619)
!9851 = !DILocalVariable(name: "pdata", arg: 1, scope: !9850, file: !1, line: 2549, type: !7555)
!9852 = !DILocation(line: 2549, column: 63, scope: !9850)
!9853 = !DILocalVariable(name: "regval", scope: !9850, file: !1, line: 2551, type: !1021)
!9854 = !DILocation(line: 2551, column: 6, scope: !9850)
!9855 = !DILocalVariable(name: "_pos", scope: !9856, file: !1, line: 2553, type: !5)
!9856 = distinct !DILexicalBlock(scope: !9850, file: !1, line: 2553, column: 11)
!9857 = !DILocation(line: 2553, column: 11, scope: !9856)
!9858 = !DILocalVariable(name: "_len", scope: !9856, file: !1, line: 2553, type: !5)
!9859 = !DILocation(line: 2553, column: 11, scope: !9850)
!9860 = !DILocation(line: 2553, column: 9, scope: !9850)
!9861 = !DILocation(line: 2555, column: 6, scope: !9862)
!9862 = distinct !DILexicalBlock(scope: !9850, file: !1, line: 2555, column: 6)
!9863 = !DILocation(line: 2555, column: 13, scope: !9862)
!9864 = !DILocation(line: 2555, column: 6, scope: !9850)
!9865 = !DILocation(line: 2556, column: 3, scope: !9862)
!9866 = !DILocation(line: 2558, column: 17, scope: !9850)
!9867 = !DILocation(line: 2558, column: 24, scope: !9850)
!9868 = !DILocation(line: 2558, column: 33, scope: !9850)
!9869 = !DILocation(line: 2558, column: 11, scope: !9850)
!9870 = !DILocation(line: 2558, column: 9, scope: !9850)
!9871 = !DILocalVariable(name: "_var", scope: !9872, file: !1, line: 2559, type: !1021)
!9872 = distinct !DILexicalBlock(scope: !9850, file: !1, line: 2559, column: 11)
!9873 = !DILocation(line: 2559, column: 11, scope: !9872)
!9874 = !DILocalVariable(name: "_pos", scope: !9872, file: !1, line: 2559, type: !5)
!9875 = !DILocalVariable(name: "_len", scope: !9872, file: !1, line: 2559, type: !5)
!9876 = !DILocalVariable(name: "_val", scope: !9872, file: !1, line: 2559, type: !5)
!9877 = !DILocation(line: 2559, column: 9, scope: !9850)
!9878 = !DILocation(line: 2561, column: 9, scope: !9850)
!9879 = !DILocation(line: 2561, column: 17, scope: !9850)
!9880 = !DILocation(line: 2561, column: 24, scope: !9850)
!9881 = !DILocation(line: 2561, column: 33, scope: !9850)
!9882 = !DILocation(line: 2561, column: 2, scope: !9850)
!9883 = !DILocation(line: 2563, column: 2, scope: !9850)
!9884 = !DILocation(line: 2564, column: 1, scope: !9850)
!9885 = distinct !DISubprogram(name: "xlgmac_set_xlgmii_40000_speed", scope: !1, file: !1, line: 2566, type: !7553, scopeLine: 2567, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1619)
!9886 = !DILocalVariable(name: "pdata", arg: 1, scope: !9885, file: !1, line: 2566, type: !7555)
!9887 = !DILocation(line: 2566, column: 63, scope: !9885)
!9888 = !DILocalVariable(name: "regval", scope: !9885, file: !1, line: 2568, type: !1021)
!9889 = !DILocation(line: 2568, column: 6, scope: !9885)
!9890 = !DILocalVariable(name: "_pos", scope: !9891, file: !1, line: 2570, type: !5)
!9891 = distinct !DILexicalBlock(scope: !9885, file: !1, line: 2570, column: 11)
!9892 = !DILocation(line: 2570, column: 11, scope: !9891)
!9893 = !DILocalVariable(name: "_len", scope: !9891, file: !1, line: 2570, type: !5)
!9894 = !DILocation(line: 2570, column: 11, scope: !9885)
!9895 = !DILocation(line: 2570, column: 9, scope: !9885)
!9896 = !DILocation(line: 2572, column: 6, scope: !9897)
!9897 = distinct !DILexicalBlock(scope: !9885, file: !1, line: 2572, column: 6)
!9898 = !DILocation(line: 2572, column: 13, scope: !9897)
!9899 = !DILocation(line: 2572, column: 6, scope: !9885)
!9900 = !DILocation(line: 2573, column: 3, scope: !9897)
!9901 = !DILocation(line: 2575, column: 17, scope: !9885)
!9902 = !DILocation(line: 2575, column: 24, scope: !9885)
!9903 = !DILocation(line: 2575, column: 33, scope: !9885)
!9904 = !DILocation(line: 2575, column: 11, scope: !9885)
!9905 = !DILocation(line: 2575, column: 9, scope: !9885)
!9906 = !DILocalVariable(name: "_var", scope: !9907, file: !1, line: 2576, type: !1021)
!9907 = distinct !DILexicalBlock(scope: !9885, file: !1, line: 2576, column: 11)
!9908 = !DILocation(line: 2576, column: 11, scope: !9907)
!9909 = !DILocalVariable(name: "_pos", scope: !9907, file: !1, line: 2576, type: !5)
!9910 = !DILocalVariable(name: "_len", scope: !9907, file: !1, line: 2576, type: !5)
!9911 = !DILocalVariable(name: "_val", scope: !9907, file: !1, line: 2576, type: !5)
!9912 = !DILocation(line: 2576, column: 9, scope: !9885)
!9913 = !DILocation(line: 2578, column: 9, scope: !9885)
!9914 = !DILocation(line: 2578, column: 17, scope: !9885)
!9915 = !DILocation(line: 2578, column: 24, scope: !9885)
!9916 = !DILocation(line: 2578, column: 33, scope: !9885)
!9917 = !DILocation(line: 2578, column: 2, scope: !9885)
!9918 = !DILocation(line: 2580, column: 2, scope: !9885)
!9919 = !DILocation(line: 2581, column: 1, scope: !9885)
!9920 = distinct !DISubprogram(name: "xlgmac_set_xlgmii_50000_speed", scope: !1, file: !1, line: 2583, type: !7553, scopeLine: 2584, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1619)
!9921 = !DILocalVariable(name: "pdata", arg: 1, scope: !9920, file: !1, line: 2583, type: !7555)
!9922 = !DILocation(line: 2583, column: 63, scope: !9920)
!9923 = !DILocalVariable(name: "regval", scope: !9920, file: !1, line: 2585, type: !1021)
!9924 = !DILocation(line: 2585, column: 6, scope: !9920)
!9925 = !DILocalVariable(name: "_pos", scope: !9926, file: !1, line: 2587, type: !5)
!9926 = distinct !DILexicalBlock(scope: !9920, file: !1, line: 2587, column: 11)
!9927 = !DILocation(line: 2587, column: 11, scope: !9926)
!9928 = !DILocalVariable(name: "_len", scope: !9926, file: !1, line: 2587, type: !5)
!9929 = !DILocation(line: 2587, column: 11, scope: !9920)
!9930 = !DILocation(line: 2587, column: 9, scope: !9920)
!9931 = !DILocation(line: 2589, column: 6, scope: !9932)
!9932 = distinct !DILexicalBlock(scope: !9920, file: !1, line: 2589, column: 6)
!9933 = !DILocation(line: 2589, column: 13, scope: !9932)
!9934 = !DILocation(line: 2589, column: 6, scope: !9920)
!9935 = !DILocation(line: 2590, column: 3, scope: !9932)
!9936 = !DILocation(line: 2592, column: 17, scope: !9920)
!9937 = !DILocation(line: 2592, column: 24, scope: !9920)
!9938 = !DILocation(line: 2592, column: 33, scope: !9920)
!9939 = !DILocation(line: 2592, column: 11, scope: !9920)
!9940 = !DILocation(line: 2592, column: 9, scope: !9920)
!9941 = !DILocalVariable(name: "_var", scope: !9942, file: !1, line: 2593, type: !1021)
!9942 = distinct !DILexicalBlock(scope: !9920, file: !1, line: 2593, column: 11)
!9943 = !DILocation(line: 2593, column: 11, scope: !9942)
!9944 = !DILocalVariable(name: "_pos", scope: !9942, file: !1, line: 2593, type: !5)
!9945 = !DILocalVariable(name: "_len", scope: !9942, file: !1, line: 2593, type: !5)
!9946 = !DILocalVariable(name: "_val", scope: !9942, file: !1, line: 2593, type: !5)
!9947 = !DILocation(line: 2593, column: 9, scope: !9920)
!9948 = !DILocation(line: 2595, column: 9, scope: !9920)
!9949 = !DILocation(line: 2595, column: 17, scope: !9920)
!9950 = !DILocation(line: 2595, column: 24, scope: !9920)
!9951 = !DILocation(line: 2595, column: 33, scope: !9920)
!9952 = !DILocation(line: 2595, column: 2, scope: !9920)
!9953 = !DILocation(line: 2597, column: 2, scope: !9920)
!9954 = !DILocation(line: 2598, column: 1, scope: !9920)
!9955 = distinct !DISubprogram(name: "xlgmac_set_xlgmii_100000_speed", scope: !1, file: !1, line: 2600, type: !7553, scopeLine: 2601, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1619)
!9956 = !DILocalVariable(name: "pdata", arg: 1, scope: !9955, file: !1, line: 2600, type: !7555)
!9957 = !DILocation(line: 2600, column: 64, scope: !9955)
!9958 = !DILocalVariable(name: "regval", scope: !9955, file: !1, line: 2602, type: !1021)
!9959 = !DILocation(line: 2602, column: 6, scope: !9955)
!9960 = !DILocalVariable(name: "_pos", scope: !9961, file: !1, line: 2604, type: !5)
!9961 = distinct !DILexicalBlock(scope: !9955, file: !1, line: 2604, column: 11)
!9962 = !DILocation(line: 2604, column: 11, scope: !9961)
!9963 = !DILocalVariable(name: "_len", scope: !9961, file: !1, line: 2604, type: !5)
!9964 = !DILocation(line: 2604, column: 11, scope: !9955)
!9965 = !DILocation(line: 2604, column: 9, scope: !9955)
!9966 = !DILocation(line: 2606, column: 6, scope: !9967)
!9967 = distinct !DILexicalBlock(scope: !9955, file: !1, line: 2606, column: 6)
!9968 = !DILocation(line: 2606, column: 13, scope: !9967)
!9969 = !DILocation(line: 2606, column: 6, scope: !9955)
!9970 = !DILocation(line: 2607, column: 3, scope: !9967)
!9971 = !DILocation(line: 2609, column: 17, scope: !9955)
!9972 = !DILocation(line: 2609, column: 24, scope: !9955)
!9973 = !DILocation(line: 2609, column: 33, scope: !9955)
!9974 = !DILocation(line: 2609, column: 11, scope: !9955)
!9975 = !DILocation(line: 2609, column: 9, scope: !9955)
!9976 = !DILocalVariable(name: "_var", scope: !9977, file: !1, line: 2610, type: !1021)
!9977 = distinct !DILexicalBlock(scope: !9955, file: !1, line: 2610, column: 11)
!9978 = !DILocation(line: 2610, column: 11, scope: !9977)
!9979 = !DILocalVariable(name: "_pos", scope: !9977, file: !1, line: 2610, type: !5)
!9980 = !DILocalVariable(name: "_len", scope: !9977, file: !1, line: 2610, type: !5)
!9981 = !DILocalVariable(name: "_val", scope: !9977, file: !1, line: 2610, type: !5)
!9982 = !DILocation(line: 2610, column: 9, scope: !9955)
!9983 = !DILocation(line: 2612, column: 9, scope: !9955)
!9984 = !DILocation(line: 2612, column: 17, scope: !9955)
!9985 = !DILocation(line: 2612, column: 24, scope: !9955)
!9986 = !DILocation(line: 2612, column: 33, scope: !9955)
!9987 = !DILocation(line: 2612, column: 2, scope: !9955)
!9988 = !DILocation(line: 2614, column: 2, scope: !9955)
!9989 = !DILocation(line: 2615, column: 1, scope: !9955)
!9990 = distinct !DISubprogram(name: "xlgmac_tx_desc_init", scope: !1, file: !1, line: 1056, type: !7869, scopeLine: 1057, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1619)
!9991 = !DILocalVariable(name: "channel", arg: 1, scope: !9990, file: !1, line: 1056, type: !7573)
!9992 = !DILocation(line: 1056, column: 56, scope: !9990)
!9993 = !DILocalVariable(name: "ring", scope: !9990, file: !1, line: 1058, type: !7613)
!9994 = !DILocation(line: 1058, column: 22, scope: !9990)
!9995 = !DILocation(line: 1058, column: 29, scope: !9990)
!9996 = !DILocation(line: 1058, column: 38, scope: !9990)
!9997 = !DILocalVariable(name: "desc_data", scope: !9990, file: !1, line: 1059, type: !7645)
!9998 = !DILocation(line: 1059, column: 27, scope: !9990)
!9999 = !DILocalVariable(name: "start_index", scope: !9990, file: !1, line: 1060, type: !5)
!10000 = !DILocation(line: 1060, column: 6, scope: !9990)
!10001 = !DILocation(line: 1060, column: 20, scope: !9990)
!10002 = !DILocation(line: 1060, column: 26, scope: !9990)
!10003 = !DILocalVariable(name: "i", scope: !9990, file: !1, line: 1061, type: !5)
!10004 = !DILocation(line: 1061, column: 6, scope: !9990)
!10005 = !DILocation(line: 1064, column: 9, scope: !10006)
!10006 = distinct !DILexicalBlock(scope: !9990, file: !1, line: 1064, column: 2)
!10007 = !DILocation(line: 1064, column: 7, scope: !10006)
!10008 = !DILocation(line: 1064, column: 14, scope: !10009)
!10009 = distinct !DILexicalBlock(scope: !10006, file: !1, line: 1064, column: 2)
!10010 = !DILocation(line: 1064, column: 18, scope: !10009)
!10011 = !DILocation(line: 1064, column: 24, scope: !10009)
!10012 = !DILocation(line: 1064, column: 16, scope: !10009)
!10013 = !DILocation(line: 1064, column: 2, scope: !10006)
!10014 = !DILocalVariable(name: "_ring", scope: !10015, file: !1, line: 1065, type: !7613)
!10015 = distinct !DILexicalBlock(scope: !10016, file: !1, line: 1065, column: 15)
!10016 = distinct !DILexicalBlock(scope: !10009, file: !1, line: 1064, column: 45)
!10017 = !DILocation(line: 1065, column: 15, scope: !10015)
!10018 = !DILocation(line: 1065, column: 13, scope: !10016)
!10019 = !DILocation(line: 1068, column: 24, scope: !10016)
!10020 = !DILocation(line: 1068, column: 3, scope: !10016)
!10021 = !DILocation(line: 1069, column: 2, scope: !10016)
!10022 = !DILocation(line: 1064, column: 41, scope: !10009)
!10023 = !DILocation(line: 1064, column: 2, scope: !10009)
!10024 = distinct !{!10024, !10013, !10025}
!10025 = !DILocation(line: 1069, column: 2, scope: !10006)
!10026 = !DILocation(line: 1072, column: 9, scope: !9990)
!10027 = !DILocation(line: 1072, column: 15, scope: !9990)
!10028 = !DILocation(line: 1072, column: 30, scope: !9990)
!10029 = !DILocation(line: 1072, column: 35, scope: !9990)
!10030 = !DILocation(line: 1072, column: 2, scope: !9990)
!10031 = !DILocalVariable(name: "_ring", scope: !10032, file: !1, line: 1075, type: !7613)
!10032 = distinct !DILexicalBlock(scope: !9990, file: !1, line: 1075, column: 14)
!10033 = !DILocation(line: 1075, column: 14, scope: !10032)
!10034 = !DILocation(line: 1075, column: 12, scope: !9990)
!10035 = !DILocation(line: 1076, column: 9, scope: !9990)
!10036 = !DILocation(line: 1077, column: 9, scope: !9990)
!10037 = !DILocation(line: 1076, column: 2, scope: !9990)
!10038 = !DILocation(line: 1078, column: 9, scope: !9990)
!10039 = !DILocation(line: 1079, column: 9, scope: !9990)
!10040 = !DILocation(line: 1078, column: 2, scope: !9990)
!10041 = !DILocation(line: 1080, column: 1, scope: !9990)
!10042 = distinct !DISubprogram(name: "xlgmac_rx_desc_init", scope: !1, file: !1, line: 1139, type: !7869, scopeLine: 1140, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1619)
!10043 = !DILocalVariable(name: "channel", arg: 1, scope: !10042, file: !1, line: 1139, type: !7573)
!10044 = !DILocation(line: 1139, column: 56, scope: !10042)
!10045 = !DILocalVariable(name: "pdata", scope: !10042, file: !1, line: 1141, type: !7555)
!10046 = !DILocation(line: 1141, column: 23, scope: !10042)
!10047 = !DILocation(line: 1141, column: 31, scope: !10042)
!10048 = !DILocation(line: 1141, column: 40, scope: !10042)
!10049 = !DILocalVariable(name: "ring", scope: !10042, file: !1, line: 1142, type: !7613)
!10050 = !DILocation(line: 1142, column: 22, scope: !10042)
!10051 = !DILocation(line: 1142, column: 29, scope: !10042)
!10052 = !DILocation(line: 1142, column: 38, scope: !10042)
!10053 = !DILocalVariable(name: "start_index", scope: !10042, file: !1, line: 1143, type: !11)
!10054 = !DILocation(line: 1143, column: 15, scope: !10042)
!10055 = !DILocation(line: 1143, column: 29, scope: !10042)
!10056 = !DILocation(line: 1143, column: 35, scope: !10042)
!10057 = !DILocalVariable(name: "desc_data", scope: !10042, file: !1, line: 1144, type: !7645)
!10058 = !DILocation(line: 1144, column: 27, scope: !10042)
!10059 = !DILocalVariable(name: "i", scope: !10042, file: !1, line: 1145, type: !11)
!10060 = !DILocation(line: 1145, column: 15, scope: !10042)
!10061 = !DILocation(line: 1148, column: 9, scope: !10062)
!10062 = distinct !DILexicalBlock(scope: !10042, file: !1, line: 1148, column: 2)
!10063 = !DILocation(line: 1148, column: 7, scope: !10062)
!10064 = !DILocation(line: 1148, column: 14, scope: !10065)
!10065 = distinct !DILexicalBlock(scope: !10062, file: !1, line: 1148, column: 2)
!10066 = !DILocation(line: 1148, column: 18, scope: !10065)
!10067 = !DILocation(line: 1148, column: 24, scope: !10065)
!10068 = !DILocation(line: 1148, column: 16, scope: !10065)
!10069 = !DILocation(line: 1148, column: 2, scope: !10062)
!10070 = !DILocalVariable(name: "_ring", scope: !10071, file: !1, line: 1149, type: !7613)
!10071 = distinct !DILexicalBlock(scope: !10072, file: !1, line: 1149, column: 15)
!10072 = distinct !DILexicalBlock(scope: !10065, file: !1, line: 1148, column: 45)
!10073 = !DILocation(line: 1149, column: 15, scope: !10071)
!10074 = !DILocation(line: 1149, column: 13, scope: !10072)
!10075 = !DILocation(line: 1152, column: 24, scope: !10072)
!10076 = !DILocation(line: 1152, column: 31, scope: !10072)
!10077 = !DILocation(line: 1152, column: 42, scope: !10072)
!10078 = !DILocation(line: 1152, column: 3, scope: !10072)
!10079 = !DILocation(line: 1153, column: 2, scope: !10072)
!10080 = !DILocation(line: 1148, column: 41, scope: !10065)
!10081 = !DILocation(line: 1148, column: 2, scope: !10065)
!10082 = distinct !{!10082, !10069, !10083}
!10083 = !DILocation(line: 1153, column: 2, scope: !10062)
!10084 = !DILocation(line: 1156, column: 9, scope: !10042)
!10085 = !DILocation(line: 1156, column: 15, scope: !10042)
!10086 = !DILocation(line: 1156, column: 30, scope: !10042)
!10087 = !DILocation(line: 1156, column: 35, scope: !10042)
!10088 = !DILocation(line: 1156, column: 2, scope: !10042)
!10089 = !DILocalVariable(name: "_ring", scope: !10090, file: !1, line: 1159, type: !7613)
!10090 = distinct !DILexicalBlock(scope: !10042, file: !1, line: 1159, column: 14)
!10091 = !DILocation(line: 1159, column: 14, scope: !10090)
!10092 = !DILocation(line: 1159, column: 12, scope: !10042)
!10093 = !DILocation(line: 1160, column: 9, scope: !10042)
!10094 = !DILocation(line: 1161, column: 9, scope: !10042)
!10095 = !DILocation(line: 1160, column: 2, scope: !10042)
!10096 = !DILocation(line: 1162, column: 9, scope: !10042)
!10097 = !DILocation(line: 1163, column: 9, scope: !10042)
!10098 = !DILocation(line: 1162, column: 2, scope: !10042)
!10099 = !DILocalVariable(name: "_ring", scope: !10100, file: !1, line: 1166, type: !7613)
!10100 = distinct !DILexicalBlock(scope: !10042, file: !1, line: 1166, column: 14)
!10101 = !DILocation(line: 1166, column: 14, scope: !10100)
!10102 = !DILocation(line: 1166, column: 12, scope: !10042)
!10103 = !DILocation(line: 1168, column: 9, scope: !10042)
!10104 = !DILocation(line: 1169, column: 9, scope: !10042)
!10105 = !DILocation(line: 1168, column: 2, scope: !10042)
!10106 = !DILocation(line: 1170, column: 1, scope: !10042)
!10107 = distinct !DISubprogram(name: "xlgmac_tx_desc_reset", scope: !1, file: !1, line: 1037, type: !7890, scopeLine: 1038, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1619)
!10108 = !DILocalVariable(name: "desc_data", arg: 1, scope: !10107, file: !1, line: 1037, type: !7645)
!10109 = !DILocation(line: 1037, column: 59, scope: !10107)
!10110 = !DILocalVariable(name: "dma_desc", scope: !10107, file: !1, line: 1039, type: !7635)
!10111 = !DILocation(line: 1039, column: 26, scope: !10107)
!10112 = !DILocation(line: 1039, column: 37, scope: !10107)
!10113 = !DILocation(line: 1039, column: 48, scope: !10107)
!10114 = !DILocation(line: 1047, column: 2, scope: !10107)
!10115 = !DILocation(line: 1047, column: 12, scope: !10107)
!10116 = !DILocation(line: 1047, column: 18, scope: !10107)
!10117 = !DILocation(line: 1048, column: 2, scope: !10107)
!10118 = !DILocation(line: 1048, column: 12, scope: !10107)
!10119 = !DILocation(line: 1048, column: 18, scope: !10107)
!10120 = !DILocation(line: 1049, column: 2, scope: !10107)
!10121 = !DILocation(line: 1049, column: 12, scope: !10107)
!10122 = !DILocation(line: 1049, column: 18, scope: !10107)
!10123 = !DILocation(line: 1050, column: 2, scope: !10107)
!10124 = !DILocation(line: 1050, column: 12, scope: !10107)
!10125 = !DILocation(line: 1050, column: 18, scope: !10107)
!10126 = !DILocation(line: 1053, column: 2, scope: !10107)
!10127 = !{i32 -2139561041}
!10128 = !DILocation(line: 1054, column: 1, scope: !10107)
!10129 = distinct !DISubprogram(name: "xlgmac_rx_desc_reset", scope: !1, file: !1, line: 1082, type: !7894, scopeLine: 1085, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1619)
!10130 = !DILocalVariable(name: "pdata", arg: 1, scope: !10129, file: !1, line: 1082, type: !7555)
!10131 = !DILocation(line: 1082, column: 55, scope: !10129)
!10132 = !DILocalVariable(name: "desc_data", arg: 2, scope: !10129, file: !1, line: 1083, type: !7645)
!10133 = !DILocation(line: 1083, column: 31, scope: !10129)
!10134 = !DILocalVariable(name: "index", arg: 3, scope: !10129, file: !1, line: 1084, type: !11)
!10135 = !DILocation(line: 1084, column: 19, scope: !10129)
!10136 = !DILocalVariable(name: "dma_desc", scope: !10129, file: !1, line: 1086, type: !7635)
!10137 = !DILocation(line: 1086, column: 26, scope: !10129)
!10138 = !DILocation(line: 1086, column: 37, scope: !10129)
!10139 = !DILocation(line: 1086, column: 48, scope: !10129)
!10140 = !DILocalVariable(name: "rx_frames", scope: !10129, file: !1, line: 1087, type: !11)
!10141 = !DILocation(line: 1087, column: 15, scope: !10129)
!10142 = !DILocation(line: 1087, column: 27, scope: !10129)
!10143 = !DILocation(line: 1087, column: 34, scope: !10129)
!10144 = !DILocalVariable(name: "rx_usecs", scope: !10129, file: !1, line: 1088, type: !11)
!10145 = !DILocation(line: 1088, column: 15, scope: !10129)
!10146 = !DILocation(line: 1088, column: 26, scope: !10129)
!10147 = !DILocation(line: 1088, column: 33, scope: !10129)
!10148 = !DILocalVariable(name: "hdr_dma", scope: !10129, file: !1, line: 1089, type: !2068)
!10149 = !DILocation(line: 1089, column: 13, scope: !10129)
!10150 = !DILocalVariable(name: "buf_dma", scope: !10129, file: !1, line: 1089, type: !2068)
!10151 = !DILocation(line: 1089, column: 22, scope: !10129)
!10152 = !DILocalVariable(name: "inte", scope: !10129, file: !1, line: 1090, type: !11)
!10153 = !DILocation(line: 1090, column: 15, scope: !10129)
!10154 = !DILocation(line: 1092, column: 7, scope: !10155)
!10155 = distinct !DILexicalBlock(scope: !10129, file: !1, line: 1092, column: 6)
!10156 = !DILocation(line: 1092, column: 16, scope: !10155)
!10157 = !DILocation(line: 1092, column: 20, scope: !10155)
!10158 = !DILocation(line: 1092, column: 6, scope: !10129)
!10159 = !DILocation(line: 1094, column: 8, scope: !10160)
!10160 = distinct !DILexicalBlock(scope: !10155, file: !1, line: 1092, column: 31)
!10161 = !DILocation(line: 1095, column: 2, scope: !10160)
!10162 = !DILocation(line: 1097, column: 7, scope: !10163)
!10163 = distinct !DILexicalBlock(scope: !10164, file: !1, line: 1097, column: 7)
!10164 = distinct !DILexicalBlock(scope: !10155, file: !1, line: 1095, column: 9)
!10165 = !DILocation(line: 1097, column: 17, scope: !10163)
!10166 = !DILocation(line: 1097, column: 23, scope: !10163)
!10167 = !DILocation(line: 1097, column: 29, scope: !10163)
!10168 = !DILocation(line: 1097, column: 36, scope: !10163)
!10169 = !DILocation(line: 1097, column: 34, scope: !10163)
!10170 = !DILocation(line: 1097, column: 7, scope: !10164)
!10171 = !DILocation(line: 1098, column: 9, scope: !10163)
!10172 = !DILocation(line: 1098, column: 4, scope: !10163)
!10173 = !DILocation(line: 1100, column: 9, scope: !10163)
!10174 = !DILocation(line: 1110, column: 12, scope: !10129)
!10175 = !DILocation(line: 1110, column: 23, scope: !10129)
!10176 = !DILocation(line: 1110, column: 26, scope: !10129)
!10177 = !DILocation(line: 1110, column: 30, scope: !10129)
!10178 = !DILocation(line: 1110, column: 41, scope: !10129)
!10179 = !DILocation(line: 1110, column: 52, scope: !10129)
!10180 = !DILocation(line: 1110, column: 55, scope: !10129)
!10181 = !DILocation(line: 1110, column: 59, scope: !10129)
!10182 = !DILocation(line: 1110, column: 39, scope: !10129)
!10183 = !DILocation(line: 1110, column: 10, scope: !10129)
!10184 = !DILocation(line: 1111, column: 12, scope: !10129)
!10185 = !DILocation(line: 1111, column: 23, scope: !10129)
!10186 = !DILocation(line: 1111, column: 26, scope: !10129)
!10187 = !DILocation(line: 1111, column: 30, scope: !10129)
!10188 = !DILocation(line: 1111, column: 41, scope: !10129)
!10189 = !DILocation(line: 1111, column: 52, scope: !10129)
!10190 = !DILocation(line: 1111, column: 55, scope: !10129)
!10191 = !DILocation(line: 1111, column: 59, scope: !10129)
!10192 = !DILocation(line: 1111, column: 39, scope: !10129)
!10193 = !DILocation(line: 1111, column: 10, scope: !10129)
!10194 = !DILocation(line: 1112, column: 20, scope: !10129)
!10195 = !DILocation(line: 1112, column: 2, scope: !10129)
!10196 = !DILocation(line: 1112, column: 12, scope: !10129)
!10197 = !DILocation(line: 1112, column: 18, scope: !10129)
!10198 = !DILocation(line: 1113, column: 20, scope: !10129)
!10199 = !DILocation(line: 1113, column: 2, scope: !10129)
!10200 = !DILocation(line: 1113, column: 12, scope: !10129)
!10201 = !DILocation(line: 1113, column: 18, scope: !10129)
!10202 = !DILocation(line: 1114, column: 20, scope: !10129)
!10203 = !DILocation(line: 1114, column: 2, scope: !10129)
!10204 = !DILocation(line: 1114, column: 12, scope: !10129)
!10205 = !DILocation(line: 1114, column: 18, scope: !10129)
!10206 = !DILocation(line: 1115, column: 20, scope: !10129)
!10207 = !DILocation(line: 1115, column: 2, scope: !10129)
!10208 = !DILocation(line: 1115, column: 12, scope: !10129)
!10209 = !DILocation(line: 1115, column: 18, scope: !10129)
!10210 = !DILocalVariable(name: "_var", scope: !10211, file: !1, line: 1117, type: !7527)
!10211 = distinct !DILexicalBlock(scope: !10129, file: !1, line: 1117, column: 20)
!10212 = !DILocation(line: 1117, column: 20, scope: !10211)
!10213 = !DILocalVariable(name: "_pos", scope: !10211, file: !1, line: 1117, type: !5)
!10214 = !DILocalVariable(name: "_len", scope: !10211, file: !1, line: 1117, type: !5)
!10215 = !DILocalVariable(name: "_val", scope: !10211, file: !1, line: 1117, type: !11)
!10216 = !DILocation(line: 1117, column: 2, scope: !10129)
!10217 = !DILocation(line: 1117, column: 12, scope: !10129)
!10218 = !DILocation(line: 1117, column: 18, scope: !10129)
!10219 = !DILocation(line: 1127, column: 2, scope: !10129)
!10220 = !{i32 -2139558279}
!10221 = !DILocalVariable(name: "_var", scope: !10222, file: !1, line: 1129, type: !7527)
!10222 = distinct !DILexicalBlock(scope: !10129, file: !1, line: 1129, column: 20)
!10223 = !DILocation(line: 1129, column: 20, scope: !10222)
!10224 = !DILocalVariable(name: "_pos", scope: !10222, file: !1, line: 1129, type: !5)
!10225 = !DILocalVariable(name: "_len", scope: !10222, file: !1, line: 1129, type: !5)
!10226 = !DILocalVariable(name: "_val", scope: !10222, file: !1, line: 1129, type: !5)
!10227 = !DILocation(line: 1129, column: 2, scope: !10129)
!10228 = !DILocation(line: 1129, column: 12, scope: !10129)
!10229 = !DILocation(line: 1129, column: 18, scope: !10129)
!10230 = !DILocation(line: 1136, column: 2, scope: !10129)
!10231 = !{i32 -2139556531}
!10232 = !DILocation(line: 1137, column: 1, scope: !10129)
!10233 = distinct !DISubprogram(name: "xlgmac_is_last_desc", scope: !1, file: !1, line: 1180, type: !7856, scopeLine: 1181, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1619)
!10234 = !DILocalVariable(name: "dma_desc", arg: 1, scope: !10233, file: !1, line: 1180, type: !7635)
!10235 = !DILocation(line: 1180, column: 56, scope: !10233)
!10236 = !DILocalVariable(name: "_pos", scope: !10237, file: !1, line: 1183, type: !5)
!10237 = distinct !DILexicalBlock(scope: !10233, file: !1, line: 1183, column: 9)
!10238 = !DILocation(line: 1183, column: 9, scope: !10237)
!10239 = !DILocalVariable(name: "_len", scope: !10237, file: !1, line: 1183, type: !5)
!10240 = !DILocalVariable(name: "_var", scope: !10237, file: !1, line: 1183, type: !7527)
!10241 = !DILocation(line: 1183, column: 9, scope: !10233)
!10242 = !DILocation(line: 1183, column: 2, scope: !10233)
!10243 = distinct !DISubprogram(name: "xlgmac_is_context_desc", scope: !1, file: !1, line: 1172, type: !7856, scopeLine: 1173, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1619)
!10244 = !DILocalVariable(name: "dma_desc", arg: 1, scope: !10243, file: !1, line: 1172, type: !7635)
!10245 = !DILocation(line: 1172, column: 59, scope: !10243)
!10246 = !DILocalVariable(name: "_pos", scope: !10247, file: !1, line: 1175, type: !5)
!10247 = distinct !DILexicalBlock(scope: !10243, file: !1, line: 1175, column: 9)
!10248 = !DILocation(line: 1175, column: 9, scope: !10247)
!10249 = !DILocalVariable(name: "_len", scope: !10247, file: !1, line: 1175, type: !5)
!10250 = !DILocalVariable(name: "_var", scope: !10247, file: !1, line: 1175, type: !7527)
!10251 = !DILocation(line: 1175, column: 9, scope: !10243)
!10252 = !DILocation(line: 1175, column: 2, scope: !10243)
!10253 = distinct !DISubprogram(name: "xlgmac_tx_start_xmit", scope: !1, file: !1, line: 676, type: !7900, scopeLine: 678, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1619)
!10254 = !DILocalVariable(name: "u", arg: 1, scope: !10255, file: !10256, line: 410, type: !4768)
!10255 = distinct !DISubprogram(name: "usecs_to_jiffies", scope: !10256, file: !10256, line: 410, type: !10257, scopeLine: 411, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1619)
!10256 = !DIFile(filename: "./include/linux/jiffies.h", directory: "/home/lizy2001/genbc/linux")
!10257 = !DISubroutineType(types: !10258)
!10258 = !{!346, !4768}
!10259 = !DILocation(line: 410, column: 74, scope: !10255, inlinedAt: !10260)
!10260 = distinct !DILocation(line: 696, column: 16, scope: !10261)
!10261 = distinct !DILexicalBlock(scope: !10262, file: !1, line: 693, column: 52)
!10262 = distinct !DILexicalBlock(scope: !10253, file: !1, line: 693, column: 6)
!10263 = !DILocalVariable(name: "channel", arg: 1, scope: !10253, file: !1, line: 676, type: !7573)
!10264 = !DILocation(line: 676, column: 57, scope: !10253)
!10265 = !DILocalVariable(name: "ring", arg: 2, scope: !10253, file: !1, line: 677, type: !7613)
!10266 = !DILocation(line: 677, column: 26, scope: !10253)
!10267 = !DILocalVariable(name: "pdata", scope: !10253, file: !1, line: 679, type: !7555)
!10268 = !DILocation(line: 679, column: 23, scope: !10253)
!10269 = !DILocation(line: 679, column: 31, scope: !10253)
!10270 = !DILocation(line: 679, column: 40, scope: !10253)
!10271 = !DILocalVariable(name: "desc_data", scope: !10253, file: !1, line: 680, type: !7645)
!10272 = !DILocation(line: 680, column: 27, scope: !10253)
!10273 = !DILocation(line: 683, column: 2, scope: !10253)
!10274 = !{i32 -2139617813}
!10275 = !DILocalVariable(name: "_ring", scope: !10276, file: !1, line: 688, type: !7613)
!10276 = distinct !DILexicalBlock(scope: !10253, file: !1, line: 688, column: 14)
!10277 = !DILocation(line: 688, column: 14, scope: !10276)
!10278 = !DILocation(line: 688, column: 12, scope: !10253)
!10279 = !DILocation(line: 689, column: 9, scope: !10253)
!10280 = !DILocation(line: 690, column: 9, scope: !10253)
!10281 = !DILocation(line: 689, column: 2, scope: !10253)
!10282 = !DILocation(line: 693, column: 6, scope: !10262)
!10283 = !DILocation(line: 693, column: 13, scope: !10262)
!10284 = !DILocation(line: 693, column: 22, scope: !10262)
!10285 = !DILocation(line: 693, column: 26, scope: !10262)
!10286 = !DILocation(line: 693, column: 35, scope: !10262)
!10287 = !DILocation(line: 693, column: 6, scope: !10253)
!10288 = !DILocation(line: 694, column: 3, scope: !10261)
!10289 = !DILocation(line: 694, column: 12, scope: !10261)
!10290 = !DILocation(line: 694, column: 28, scope: !10261)
!10291 = !DILocation(line: 695, column: 14, scope: !10261)
!10292 = !DILocation(line: 695, column: 23, scope: !10261)
!10293 = !DILocation(line: 696, column: 6, scope: !10261)
!10294 = !DILocation(line: 696, column: 33, scope: !10261)
!10295 = !DILocation(line: 696, column: 40, scope: !10261)
!10296 = !DILocation(line: 412, column: 27, scope: !10297, inlinedAt: !10260)
!10297 = distinct !DILexicalBlock(scope: !10255, file: !10256, line: 412, column: 6)
!10298 = !DILocation(line: 412, column: 6, scope: !10297, inlinedAt: !10260)
!10299 = !DILocation(line: 412, column: 6, scope: !10255, inlinedAt: !10260)
!10300 = !DILocation(line: 413, column: 7, scope: !10301, inlinedAt: !10260)
!10301 = distinct !DILexicalBlock(scope: !10302, file: !10256, line: 413, column: 7)
!10302 = distinct !DILexicalBlock(scope: !10297, file: !10256, line: 412, column: 31)
!10303 = !DILocation(line: 413, column: 11, scope: !10301, inlinedAt: !10260)
!10304 = !DILocation(line: 413, column: 9, scope: !10301, inlinedAt: !10260)
!10305 = !DILocation(line: 413, column: 7, scope: !10302, inlinedAt: !10260)
!10306 = !DILocation(line: 414, column: 4, scope: !10301, inlinedAt: !10260)
!10307 = !DILocation(line: 415, column: 28, scope: !10302, inlinedAt: !10260)
!10308 = !DILocation(line: 415, column: 10, scope: !10302, inlinedAt: !10260)
!10309 = !DILocation(line: 415, column: 3, scope: !10302, inlinedAt: !10260)
!10310 = !DILocation(line: 417, column: 29, scope: !10311, inlinedAt: !10260)
!10311 = distinct !DILexicalBlock(scope: !10297, file: !10256, line: 416, column: 9)
!10312 = !DILocation(line: 417, column: 10, scope: !10311, inlinedAt: !10260)
!10313 = !DILocation(line: 417, column: 3, scope: !10311, inlinedAt: !10260)
!10314 = !DILocation(line: 419, column: 1, scope: !10255, inlinedAt: !10260)
!10315 = !DILocation(line: 696, column: 14, scope: !10261)
!10316 = !DILocation(line: 695, column: 3, scope: !10261)
!10317 = !DILocation(line: 697, column: 2, scope: !10261)
!10318 = !DILocation(line: 699, column: 2, scope: !10253)
!10319 = !DILocation(line: 699, column: 8, scope: !10253)
!10320 = !DILocation(line: 699, column: 11, scope: !10253)
!10321 = !DILocation(line: 699, column: 21, scope: !10253)
!10322 = !DILocation(line: 700, column: 1, scope: !10253)
!10323 = distinct !DISubprogram(name: "xlgmac_config_tx_flow_control", scope: !1, file: !1, line: 1280, type: !7553, scopeLine: 1281, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1619)
!10324 = !DILocalVariable(name: "pdata", arg: 1, scope: !10323, file: !1, line: 1280, type: !7555)
!10325 = !DILocation(line: 1280, column: 63, scope: !10323)
!10326 = !DILocation(line: 1282, column: 6, scope: !10327)
!10327 = distinct !DILexicalBlock(scope: !10323, file: !1, line: 1282, column: 6)
!10328 = !DILocation(line: 1282, column: 13, scope: !10327)
!10329 = !DILocation(line: 1282, column: 6, scope: !10323)
!10330 = !DILocation(line: 1283, column: 33, scope: !10327)
!10331 = !DILocation(line: 1283, column: 3, scope: !10327)
!10332 = !DILocation(line: 1285, column: 34, scope: !10327)
!10333 = !DILocation(line: 1285, column: 3, scope: !10327)
!10334 = !DILocation(line: 1287, column: 2, scope: !10323)
!10335 = distinct !DISubprogram(name: "xlgmac_config_rx_flow_control", scope: !1, file: !1, line: 1290, type: !7553, scopeLine: 1291, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1619)
!10336 = !DILocalVariable(name: "pdata", arg: 1, scope: !10335, file: !1, line: 1290, type: !7555)
!10337 = !DILocation(line: 1290, column: 63, scope: !10335)
!10338 = !DILocation(line: 1292, column: 6, scope: !10339)
!10339 = distinct !DILexicalBlock(scope: !10335, file: !1, line: 1292, column: 6)
!10340 = !DILocation(line: 1292, column: 13, scope: !10339)
!10341 = !DILocation(line: 1292, column: 6, scope: !10335)
!10342 = !DILocation(line: 1293, column: 33, scope: !10339)
!10343 = !DILocation(line: 1293, column: 3, scope: !10339)
!10344 = !DILocation(line: 1295, column: 34, scope: !10339)
!10345 = !DILocation(line: 1295, column: 3, scope: !10339)
!10346 = !DILocation(line: 1297, column: 2, scope: !10335)
!10347 = distinct !DISubprogram(name: "xlgmac_enable_rx_vlan_stripping", scope: !1, file: !1, line: 110, type: !7553, scopeLine: 111, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1619)
!10348 = !DILocalVariable(name: "pdata", arg: 1, scope: !10347, file: !1, line: 110, type: !7555)
!10349 = !DILocation(line: 110, column: 65, scope: !10347)
!10350 = !DILocalVariable(name: "regval", scope: !10347, file: !1, line: 112, type: !1021)
!10351 = !DILocation(line: 112, column: 6, scope: !10347)
!10352 = !DILocation(line: 114, column: 17, scope: !10347)
!10353 = !DILocation(line: 114, column: 24, scope: !10347)
!10354 = !DILocation(line: 114, column: 33, scope: !10347)
!10355 = !DILocation(line: 114, column: 11, scope: !10347)
!10356 = !DILocation(line: 114, column: 9, scope: !10347)
!10357 = !DILocalVariable(name: "_var", scope: !10358, file: !1, line: 116, type: !1021)
!10358 = distinct !DILexicalBlock(scope: !10347, file: !1, line: 116, column: 11)
!10359 = !DILocation(line: 116, column: 11, scope: !10358)
!10360 = !DILocalVariable(name: "_pos", scope: !10358, file: !1, line: 116, type: !5)
!10361 = !DILocalVariable(name: "_len", scope: !10358, file: !1, line: 116, type: !5)
!10362 = !DILocalVariable(name: "_val", scope: !10358, file: !1, line: 116, type: !5)
!10363 = !DILocation(line: 116, column: 9, scope: !10347)
!10364 = !DILocalVariable(name: "_var", scope: !10365, file: !1, line: 119, type: !1021)
!10365 = distinct !DILexicalBlock(scope: !10347, file: !1, line: 119, column: 11)
!10366 = !DILocation(line: 119, column: 11, scope: !10365)
!10367 = !DILocalVariable(name: "_pos", scope: !10365, file: !1, line: 119, type: !5)
!10368 = !DILocalVariable(name: "_len", scope: !10365, file: !1, line: 119, type: !5)
!10369 = !DILocalVariable(name: "_val", scope: !10365, file: !1, line: 119, type: !5)
!10370 = !DILocation(line: 119, column: 9, scope: !10347)
!10371 = !DILocalVariable(name: "_var", scope: !10372, file: !1, line: 122, type: !1021)
!10372 = distinct !DILexicalBlock(scope: !10347, file: !1, line: 122, column: 11)
!10373 = !DILocation(line: 122, column: 11, scope: !10372)
!10374 = !DILocalVariable(name: "_pos", scope: !10372, file: !1, line: 122, type: !5)
!10375 = !DILocalVariable(name: "_len", scope: !10372, file: !1, line: 122, type: !5)
!10376 = !DILocalVariable(name: "_val", scope: !10372, file: !1, line: 122, type: !5)
!10377 = !DILocation(line: 122, column: 9, scope: !10347)
!10378 = !DILocalVariable(name: "_var", scope: !10379, file: !1, line: 125, type: !1021)
!10379 = distinct !DILexicalBlock(scope: !10347, file: !1, line: 125, column: 11)
!10380 = !DILocation(line: 125, column: 11, scope: !10379)
!10381 = !DILocalVariable(name: "_pos", scope: !10379, file: !1, line: 125, type: !5)
!10382 = !DILocalVariable(name: "_len", scope: !10379, file: !1, line: 125, type: !5)
!10383 = !DILocalVariable(name: "_val", scope: !10379, file: !1, line: 125, type: !5)
!10384 = !DILocation(line: 125, column: 9, scope: !10347)
!10385 = !DILocalVariable(name: "_var", scope: !10386, file: !1, line: 128, type: !1021)
!10386 = distinct !DILexicalBlock(scope: !10347, file: !1, line: 128, column: 11)
!10387 = !DILocation(line: 128, column: 11, scope: !10386)
!10388 = !DILocalVariable(name: "_pos", scope: !10386, file: !1, line: 128, type: !5)
!10389 = !DILocalVariable(name: "_len", scope: !10386, file: !1, line: 128, type: !5)
!10390 = !DILocalVariable(name: "_val", scope: !10386, file: !1, line: 128, type: !5)
!10391 = !DILocation(line: 128, column: 9, scope: !10347)
!10392 = !DILocation(line: 130, column: 9, scope: !10347)
!10393 = !DILocation(line: 130, column: 17, scope: !10347)
!10394 = !DILocation(line: 130, column: 24, scope: !10347)
!10395 = !DILocation(line: 130, column: 33, scope: !10347)
!10396 = !DILocation(line: 130, column: 2, scope: !10347)
!10397 = !DILocation(line: 132, column: 2, scope: !10347)
!10398 = distinct !DISubprogram(name: "xlgmac_disable_rx_vlan_stripping", scope: !1, file: !1, line: 135, type: !7553, scopeLine: 136, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1619)
!10399 = !DILocalVariable(name: "pdata", arg: 1, scope: !10398, file: !1, line: 135, type: !7555)
!10400 = !DILocation(line: 135, column: 66, scope: !10398)
!10401 = !DILocalVariable(name: "regval", scope: !10398, file: !1, line: 137, type: !1021)
!10402 = !DILocation(line: 137, column: 6, scope: !10398)
!10403 = !DILocation(line: 139, column: 17, scope: !10398)
!10404 = !DILocation(line: 139, column: 24, scope: !10398)
!10405 = !DILocation(line: 139, column: 33, scope: !10398)
!10406 = !DILocation(line: 139, column: 11, scope: !10398)
!10407 = !DILocation(line: 139, column: 9, scope: !10398)
!10408 = !DILocalVariable(name: "_var", scope: !10409, file: !1, line: 140, type: !1021)
!10409 = distinct !DILexicalBlock(scope: !10398, file: !1, line: 140, column: 11)
!10410 = !DILocation(line: 140, column: 11, scope: !10409)
!10411 = !DILocalVariable(name: "_pos", scope: !10409, file: !1, line: 140, type: !5)
!10412 = !DILocalVariable(name: "_len", scope: !10409, file: !1, line: 140, type: !5)
!10413 = !DILocalVariable(name: "_val", scope: !10409, file: !1, line: 140, type: !5)
!10414 = !DILocation(line: 140, column: 9, scope: !10398)
!10415 = !DILocation(line: 142, column: 9, scope: !10398)
!10416 = !DILocation(line: 142, column: 17, scope: !10398)
!10417 = !DILocation(line: 142, column: 24, scope: !10398)
!10418 = !DILocation(line: 142, column: 33, scope: !10398)
!10419 = !DILocation(line: 142, column: 2, scope: !10398)
!10420 = !DILocation(line: 144, column: 2, scope: !10398)
!10421 = distinct !DISubprogram(name: "xlgmac_enable_rx_vlan_filtering", scope: !1, file: !1, line: 147, type: !7553, scopeLine: 148, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1619)
!10422 = !DILocalVariable(name: "pdata", arg: 1, scope: !10421, file: !1, line: 147, type: !7555)
!10423 = !DILocation(line: 147, column: 65, scope: !10421)
!10424 = !DILocalVariable(name: "regval", scope: !10421, file: !1, line: 149, type: !1021)
!10425 = !DILocation(line: 149, column: 6, scope: !10421)
!10426 = !DILocation(line: 151, column: 17, scope: !10421)
!10427 = !DILocation(line: 151, column: 24, scope: !10421)
!10428 = !DILocation(line: 151, column: 33, scope: !10421)
!10429 = !DILocation(line: 151, column: 11, scope: !10421)
!10430 = !DILocation(line: 151, column: 9, scope: !10421)
!10431 = !DILocalVariable(name: "_var", scope: !10432, file: !1, line: 153, type: !1021)
!10432 = distinct !DILexicalBlock(scope: !10421, file: !1, line: 153, column: 11)
!10433 = !DILocation(line: 153, column: 11, scope: !10432)
!10434 = !DILocalVariable(name: "_pos", scope: !10432, file: !1, line: 153, type: !5)
!10435 = !DILocalVariable(name: "_len", scope: !10432, file: !1, line: 153, type: !5)
!10436 = !DILocalVariable(name: "_val", scope: !10432, file: !1, line: 153, type: !5)
!10437 = !DILocation(line: 153, column: 9, scope: !10421)
!10438 = !DILocation(line: 155, column: 9, scope: !10421)
!10439 = !DILocation(line: 155, column: 17, scope: !10421)
!10440 = !DILocation(line: 155, column: 24, scope: !10421)
!10441 = !DILocation(line: 155, column: 33, scope: !10421)
!10442 = !DILocation(line: 155, column: 2, scope: !10421)
!10443 = !DILocation(line: 157, column: 17, scope: !10421)
!10444 = !DILocation(line: 157, column: 24, scope: !10421)
!10445 = !DILocation(line: 157, column: 33, scope: !10421)
!10446 = !DILocation(line: 157, column: 11, scope: !10421)
!10447 = !DILocation(line: 157, column: 9, scope: !10421)
!10448 = !DILocalVariable(name: "_var", scope: !10449, file: !1, line: 159, type: !1021)
!10449 = distinct !DILexicalBlock(scope: !10421, file: !1, line: 159, column: 11)
!10450 = !DILocation(line: 159, column: 11, scope: !10449)
!10451 = !DILocalVariable(name: "_pos", scope: !10449, file: !1, line: 159, type: !5)
!10452 = !DILocalVariable(name: "_len", scope: !10449, file: !1, line: 159, type: !5)
!10453 = !DILocalVariable(name: "_val", scope: !10449, file: !1, line: 159, type: !5)
!10454 = !DILocation(line: 159, column: 9, scope: !10421)
!10455 = !DILocalVariable(name: "_var", scope: !10456, file: !1, line: 162, type: !1021)
!10456 = distinct !DILexicalBlock(scope: !10421, file: !1, line: 162, column: 11)
!10457 = !DILocation(line: 162, column: 11, scope: !10456)
!10458 = !DILocalVariable(name: "_pos", scope: !10456, file: !1, line: 162, type: !5)
!10459 = !DILocalVariable(name: "_len", scope: !10456, file: !1, line: 162, type: !5)
!10460 = !DILocalVariable(name: "_val", scope: !10456, file: !1, line: 162, type: !5)
!10461 = !DILocation(line: 162, column: 9, scope: !10421)
!10462 = !DILocalVariable(name: "_var", scope: !10463, file: !1, line: 165, type: !1021)
!10463 = distinct !DILexicalBlock(scope: !10421, file: !1, line: 165, column: 11)
!10464 = !DILocation(line: 165, column: 11, scope: !10463)
!10465 = !DILocalVariable(name: "_pos", scope: !10463, file: !1, line: 165, type: !5)
!10466 = !DILocalVariable(name: "_len", scope: !10463, file: !1, line: 165, type: !5)
!10467 = !DILocalVariable(name: "_val", scope: !10463, file: !1, line: 165, type: !5)
!10468 = !DILocation(line: 165, column: 9, scope: !10421)
!10469 = !DILocalVariable(name: "_var", scope: !10470, file: !1, line: 173, type: !1021)
!10470 = distinct !DILexicalBlock(scope: !10421, file: !1, line: 173, column: 11)
!10471 = !DILocation(line: 173, column: 11, scope: !10470)
!10472 = !DILocalVariable(name: "_pos", scope: !10470, file: !1, line: 173, type: !5)
!10473 = !DILocalVariable(name: "_len", scope: !10470, file: !1, line: 173, type: !5)
!10474 = !DILocalVariable(name: "_val", scope: !10470, file: !1, line: 173, type: !5)
!10475 = !DILocation(line: 173, column: 9, scope: !10421)
!10476 = !DILocation(line: 175, column: 9, scope: !10421)
!10477 = !DILocation(line: 175, column: 17, scope: !10421)
!10478 = !DILocation(line: 175, column: 24, scope: !10421)
!10479 = !DILocation(line: 175, column: 33, scope: !10421)
!10480 = !DILocation(line: 175, column: 2, scope: !10421)
!10481 = !DILocation(line: 177, column: 2, scope: !10421)
!10482 = distinct !DISubprogram(name: "xlgmac_disable_rx_vlan_filtering", scope: !1, file: !1, line: 180, type: !7553, scopeLine: 181, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1619)
!10483 = !DILocalVariable(name: "pdata", arg: 1, scope: !10482, file: !1, line: 180, type: !7555)
!10484 = !DILocation(line: 180, column: 66, scope: !10482)
!10485 = !DILocalVariable(name: "regval", scope: !10482, file: !1, line: 182, type: !1021)
!10486 = !DILocation(line: 182, column: 6, scope: !10482)
!10487 = !DILocation(line: 184, column: 17, scope: !10482)
!10488 = !DILocation(line: 184, column: 24, scope: !10482)
!10489 = !DILocation(line: 184, column: 33, scope: !10482)
!10490 = !DILocation(line: 184, column: 11, scope: !10482)
!10491 = !DILocation(line: 184, column: 9, scope: !10482)
!10492 = !DILocalVariable(name: "_var", scope: !10493, file: !1, line: 186, type: !1021)
!10493 = distinct !DILexicalBlock(scope: !10482, file: !1, line: 186, column: 11)
!10494 = !DILocation(line: 186, column: 11, scope: !10493)
!10495 = !DILocalVariable(name: "_pos", scope: !10493, file: !1, line: 186, type: !5)
!10496 = !DILocalVariable(name: "_len", scope: !10493, file: !1, line: 186, type: !5)
!10497 = !DILocalVariable(name: "_val", scope: !10493, file: !1, line: 186, type: !5)
!10498 = !DILocation(line: 186, column: 9, scope: !10482)
!10499 = !DILocation(line: 188, column: 9, scope: !10482)
!10500 = !DILocation(line: 188, column: 17, scope: !10482)
!10501 = !DILocation(line: 188, column: 24, scope: !10482)
!10502 = !DILocation(line: 188, column: 33, scope: !10482)
!10503 = !DILocation(line: 188, column: 2, scope: !10482)
!10504 = !DILocation(line: 190, column: 2, scope: !10482)
!10505 = distinct !DISubprogram(name: "xlgmac_update_vlan_hash_table", scope: !1, file: !1, line: 217, type: !7553, scopeLine: 218, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1619)
!10506 = !DILocalVariable(name: "pdata", arg: 1, scope: !10505, file: !1, line: 217, type: !7555)
!10507 = !DILocation(line: 217, column: 63, scope: !10505)
!10508 = !DILocalVariable(name: "vlan_hash_table", scope: !10505, file: !1, line: 219, type: !615)
!10509 = !DILocation(line: 219, column: 6, scope: !10505)
!10510 = !DILocalVariable(name: "vid_le", scope: !10505, file: !1, line: 220, type: !7539)
!10511 = !DILocation(line: 220, column: 9, scope: !10505)
!10512 = !DILocalVariable(name: "regval", scope: !10505, file: !1, line: 221, type: !1021)
!10513 = !DILocation(line: 221, column: 6, scope: !10505)
!10514 = !DILocalVariable(name: "crc", scope: !10505, file: !1, line: 222, type: !1021)
!10515 = !DILocation(line: 222, column: 6, scope: !10505)
!10516 = !DILocalVariable(name: "vid", scope: !10505, file: !1, line: 223, type: !615)
!10517 = !DILocation(line: 223, column: 6, scope: !10505)
!10518 = !DILocation(line: 226, column: 2, scope: !10519)
!10519 = distinct !DILexicalBlock(scope: !10505, file: !1, line: 226, column: 2)
!10520 = !DILocation(line: 226, column: 2, scope: !10521)
!10521 = distinct !DILexicalBlock(scope: !10519, file: !1, line: 226, column: 2)
!10522 = !DILocation(line: 228, column: 12, scope: !10523)
!10523 = distinct !DILexicalBlock(scope: !10521, file: !1, line: 226, column: 57)
!10524 = !DILocation(line: 228, column: 10, scope: !10523)
!10525 = !DILocalVariable(name: "__x", scope: !10526, file: !1, line: 229, type: !1021)
!10526 = distinct !DILexicalBlock(scope: !10523, file: !1, line: 229, column: 9)
!10527 = !DILocation(line: 229, column: 9, scope: !10526)
!10528 = !DILocalVariable(name: "___x", scope: !10529, file: !1, line: 229, type: !1021)
!10529 = distinct !DILexicalBlock(scope: !10526, file: !1, line: 229, column: 9)
!10530 = !DILocation(line: 229, column: 9, scope: !10529)
!10531 = !DILocation(line: 229, column: 48, scope: !10523)
!10532 = !DILocation(line: 229, column: 7, scope: !10523)
!10533 = !DILocation(line: 231, column: 28, scope: !10523)
!10534 = !DILocation(line: 231, column: 25, scope: !10523)
!10535 = !DILocation(line: 231, column: 19, scope: !10523)
!10536 = !DILocation(line: 232, column: 2, scope: !10523)
!10537 = distinct !{!10537, !10518, !10538}
!10538 = !DILocation(line: 232, column: 2, scope: !10519)
!10539 = !DILocation(line: 234, column: 17, scope: !10505)
!10540 = !DILocation(line: 234, column: 24, scope: !10505)
!10541 = !DILocation(line: 234, column: 33, scope: !10505)
!10542 = !DILocation(line: 234, column: 11, scope: !10505)
!10543 = !DILocation(line: 234, column: 9, scope: !10505)
!10544 = !DILocalVariable(name: "_var", scope: !10545, file: !1, line: 236, type: !1021)
!10545 = distinct !DILexicalBlock(scope: !10505, file: !1, line: 236, column: 11)
!10546 = !DILocation(line: 236, column: 11, scope: !10545)
!10547 = !DILocalVariable(name: "_pos", scope: !10545, file: !1, line: 236, type: !5)
!10548 = !DILocalVariable(name: "_len", scope: !10545, file: !1, line: 236, type: !5)
!10549 = !DILocalVariable(name: "_val", scope: !10545, file: !1, line: 236, type: !615)
!10550 = !DILocation(line: 236, column: 9, scope: !10505)
!10551 = !DILocation(line: 238, column: 9, scope: !10505)
!10552 = !DILocation(line: 238, column: 17, scope: !10505)
!10553 = !DILocation(line: 238, column: 24, scope: !10505)
!10554 = !DILocation(line: 238, column: 33, scope: !10505)
!10555 = !DILocation(line: 238, column: 2, scope: !10505)
!10556 = !DILocation(line: 240, column: 2, scope: !10505)
!10557 = distinct !DISubprogram(name: "xlgmac_config_rx_coalesce", scope: !1, file: !1, line: 1300, type: !7553, scopeLine: 1301, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1619)
!10558 = !DILocalVariable(name: "pdata", arg: 1, scope: !10557, file: !1, line: 1300, type: !7555)
!10559 = !DILocation(line: 1300, column: 59, scope: !10557)
!10560 = !DILocalVariable(name: "channel", scope: !10557, file: !1, line: 1302, type: !7573)
!10561 = !DILocation(line: 1302, column: 25, scope: !10557)
!10562 = !DILocalVariable(name: "i", scope: !10557, file: !1, line: 1303, type: !11)
!10563 = !DILocation(line: 1303, column: 15, scope: !10557)
!10564 = !DILocalVariable(name: "regval", scope: !10557, file: !1, line: 1304, type: !1021)
!10565 = !DILocation(line: 1304, column: 6, scope: !10557)
!10566 = !DILocation(line: 1306, column: 12, scope: !10557)
!10567 = !DILocation(line: 1306, column: 19, scope: !10557)
!10568 = !DILocation(line: 1306, column: 10, scope: !10557)
!10569 = !DILocation(line: 1307, column: 9, scope: !10570)
!10570 = distinct !DILexicalBlock(scope: !10557, file: !1, line: 1307, column: 2)
!10571 = !DILocation(line: 1307, column: 7, scope: !10570)
!10572 = !DILocation(line: 1307, column: 14, scope: !10573)
!10573 = distinct !DILexicalBlock(scope: !10570, file: !1, line: 1307, column: 2)
!10574 = !DILocation(line: 1307, column: 18, scope: !10573)
!10575 = !DILocation(line: 1307, column: 25, scope: !10573)
!10576 = !DILocation(line: 1307, column: 16, scope: !10573)
!10577 = !DILocation(line: 1307, column: 2, scope: !10570)
!10578 = !DILocation(line: 1308, column: 8, scope: !10579)
!10579 = distinct !DILexicalBlock(scope: !10580, file: !1, line: 1308, column: 7)
!10580 = distinct !DILexicalBlock(scope: !10573, file: !1, line: 1307, column: 56)
!10581 = !DILocation(line: 1308, column: 17, scope: !10579)
!10582 = !DILocation(line: 1308, column: 7, scope: !10580)
!10583 = !DILocation(line: 1309, column: 4, scope: !10579)
!10584 = !DILocation(line: 1311, column: 18, scope: !10580)
!10585 = !DILocation(line: 1311, column: 12, scope: !10580)
!10586 = !DILocation(line: 1311, column: 10, scope: !10580)
!10587 = !DILocalVariable(name: "_var", scope: !10588, file: !1, line: 1312, type: !1021)
!10588 = distinct !DILexicalBlock(scope: !10580, file: !1, line: 1312, column: 12)
!10589 = !DILocation(line: 1312, column: 12, scope: !10588)
!10590 = !DILocalVariable(name: "_pos", scope: !10588, file: !1, line: 1312, type: !5)
!10591 = !DILocalVariable(name: "_len", scope: !10588, file: !1, line: 1312, type: !5)
!10592 = !DILocalVariable(name: "_val", scope: !10588, file: !1, line: 1312, type: !11)
!10593 = !DILocation(line: 1312, column: 10, scope: !10580)
!10594 = !DILocation(line: 1315, column: 10, scope: !10580)
!10595 = !DILocation(line: 1315, column: 18, scope: !10580)
!10596 = !DILocation(line: 1315, column: 3, scope: !10580)
!10597 = !DILocation(line: 1316, column: 2, scope: !10580)
!10598 = !DILocation(line: 1307, column: 41, scope: !10573)
!10599 = !DILocation(line: 1307, column: 52, scope: !10573)
!10600 = !DILocation(line: 1307, column: 2, scope: !10573)
!10601 = distinct !{!10601, !10577, !10602}
!10602 = !DILocation(line: 1316, column: 2, scope: !10570)
!10603 = !DILocation(line: 1318, column: 2, scope: !10557)
!10604 = distinct !DISubprogram(name: "xlgmac_config_tx_coalesce", scope: !1, file: !1, line: 1353, type: !7553, scopeLine: 1354, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1619)
!10605 = !DILocalVariable(name: "pdata", arg: 1, scope: !10604, file: !1, line: 1353, type: !7555)
!10606 = !DILocation(line: 1353, column: 59, scope: !10604)
!10607 = !DILocation(line: 1355, column: 2, scope: !10604)
!10608 = distinct !DISubprogram(name: "xlgmac_usec_to_riwt", scope: !1, file: !1, line: 1421, type: !7913, scopeLine: 1423, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1619)
!10609 = !DILocalVariable(name: "pdata", arg: 1, scope: !10608, file: !1, line: 1421, type: !7555)
!10610 = !DILocation(line: 1421, column: 62, scope: !10608)
!10611 = !DILocalVariable(name: "usec", arg: 2, scope: !10608, file: !1, line: 1422, type: !11)
!10612 = !DILocation(line: 1422, column: 19, scope: !10608)
!10613 = !DILocalVariable(name: "rate", scope: !10608, file: !1, line: 1424, type: !346)
!10614 = !DILocation(line: 1424, column: 16, scope: !10608)
!10615 = !DILocalVariable(name: "ret", scope: !10608, file: !1, line: 1425, type: !11)
!10616 = !DILocation(line: 1425, column: 15, scope: !10608)
!10617 = !DILocation(line: 1427, column: 9, scope: !10608)
!10618 = !DILocation(line: 1427, column: 16, scope: !10608)
!10619 = !DILocation(line: 1427, column: 7, scope: !10608)
!10620 = !DILocation(line: 1434, column: 9, scope: !10608)
!10621 = !DILocation(line: 1434, column: 17, scope: !10608)
!10622 = !DILocation(line: 1434, column: 22, scope: !10608)
!10623 = !DILocation(line: 1434, column: 14, scope: !10608)
!10624 = !DILocation(line: 1434, column: 34, scope: !10608)
!10625 = !DILocation(line: 1434, column: 8, scope: !10608)
!10626 = !DILocation(line: 1434, column: 6, scope: !10608)
!10627 = !DILocation(line: 1436, column: 9, scope: !10608)
!10628 = !DILocation(line: 1436, column: 2, scope: !10608)
!10629 = distinct !DISubprogram(name: "xlgmac_riwt_to_usec", scope: !1, file: !1, line: 1439, type: !7913, scopeLine: 1441, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1619)
!10630 = !DILocalVariable(name: "pdata", arg: 1, scope: !10629, file: !1, line: 1439, type: !7555)
!10631 = !DILocation(line: 1439, column: 62, scope: !10629)
!10632 = !DILocalVariable(name: "riwt", arg: 2, scope: !10629, file: !1, line: 1440, type: !11)
!10633 = !DILocation(line: 1440, column: 19, scope: !10629)
!10634 = !DILocalVariable(name: "rate", scope: !10629, file: !1, line: 1442, type: !346)
!10635 = !DILocation(line: 1442, column: 16, scope: !10629)
!10636 = !DILocalVariable(name: "ret", scope: !10629, file: !1, line: 1443, type: !11)
!10637 = !DILocation(line: 1443, column: 15, scope: !10629)
!10638 = !DILocation(line: 1445, column: 9, scope: !10629)
!10639 = !DILocation(line: 1445, column: 16, scope: !10629)
!10640 = !DILocation(line: 1445, column: 7, scope: !10629)
!10641 = !DILocation(line: 1452, column: 9, scope: !10629)
!10642 = !DILocation(line: 1452, column: 14, scope: !10629)
!10643 = !DILocation(line: 1452, column: 8, scope: !10629)
!10644 = !DILocation(line: 1452, column: 24, scope: !10629)
!10645 = !DILocation(line: 1452, column: 29, scope: !10629)
!10646 = !DILocation(line: 1452, column: 21, scope: !10629)
!10647 = !DILocation(line: 1452, column: 6, scope: !10629)
!10648 = !DILocation(line: 1454, column: 9, scope: !10629)
!10649 = !DILocation(line: 1454, column: 2, scope: !10629)
!10650 = distinct !DISubprogram(name: "xlgmac_config_rx_threshold", scope: !1, file: !1, line: 1457, type: !7918, scopeLine: 1459, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1619)
!10651 = !DILocalVariable(name: "pdata", arg: 1, scope: !10650, file: !1, line: 1457, type: !7555)
!10652 = !DILocation(line: 1457, column: 60, scope: !10650)
!10653 = !DILocalVariable(name: "val", arg: 2, scope: !10650, file: !1, line: 1458, type: !11)
!10654 = !DILocation(line: 1458, column: 24, scope: !10650)
!10655 = !DILocalVariable(name: "i", scope: !10650, file: !1, line: 1460, type: !11)
!10656 = !DILocation(line: 1460, column: 15, scope: !10650)
!10657 = !DILocalVariable(name: "regval", scope: !10650, file: !1, line: 1461, type: !1021)
!10658 = !DILocation(line: 1461, column: 6, scope: !10650)
!10659 = !DILocation(line: 1463, column: 9, scope: !10660)
!10660 = distinct !DILexicalBlock(scope: !10650, file: !1, line: 1463, column: 2)
!10661 = !DILocation(line: 1463, column: 7, scope: !10660)
!10662 = !DILocation(line: 1463, column: 14, scope: !10663)
!10663 = distinct !DILexicalBlock(scope: !10660, file: !1, line: 1463, column: 2)
!10664 = !DILocation(line: 1463, column: 18, scope: !10663)
!10665 = !DILocation(line: 1463, column: 25, scope: !10663)
!10666 = !DILocation(line: 1463, column: 16, scope: !10663)
!10667 = !DILocation(line: 1463, column: 2, scope: !10660)
!10668 = !DILocation(line: 1464, column: 18, scope: !10669)
!10669 = distinct !DILexicalBlock(scope: !10663, file: !1, line: 1463, column: 42)
!10670 = !DILocation(line: 1464, column: 12, scope: !10669)
!10671 = !DILocation(line: 1464, column: 10, scope: !10669)
!10672 = !DILocalVariable(name: "_var", scope: !10673, file: !1, line: 1465, type: !1021)
!10673 = distinct !DILexicalBlock(scope: !10669, file: !1, line: 1465, column: 12)
!10674 = !DILocation(line: 1465, column: 12, scope: !10673)
!10675 = !DILocalVariable(name: "_pos", scope: !10673, file: !1, line: 1465, type: !5)
!10676 = !DILocalVariable(name: "_len", scope: !10673, file: !1, line: 1465, type: !5)
!10677 = !DILocalVariable(name: "_val", scope: !10673, file: !1, line: 1465, type: !11)
!10678 = !DILocation(line: 1465, column: 10, scope: !10669)
!10679 = !DILocation(line: 1467, column: 10, scope: !10669)
!10680 = !DILocation(line: 1467, column: 18, scope: !10669)
!10681 = !DILocation(line: 1467, column: 3, scope: !10669)
!10682 = !DILocation(line: 1468, column: 2, scope: !10669)
!10683 = !DILocation(line: 1463, column: 38, scope: !10663)
!10684 = !DILocation(line: 1463, column: 2, scope: !10663)
!10685 = distinct !{!10685, !10667, !10686}
!10686 = !DILocation(line: 1468, column: 2, scope: !10660)
!10687 = !DILocation(line: 1470, column: 2, scope: !10650)
!10688 = distinct !DISubprogram(name: "xlgmac_config_tx_threshold", scope: !1, file: !1, line: 1691, type: !7918, scopeLine: 1693, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1619)
!10689 = !DILocalVariable(name: "pdata", arg: 1, scope: !10688, file: !1, line: 1691, type: !7555)
!10690 = !DILocation(line: 1691, column: 60, scope: !10688)
!10691 = !DILocalVariable(name: "val", arg: 2, scope: !10688, file: !1, line: 1692, type: !11)
!10692 = !DILocation(line: 1692, column: 24, scope: !10688)
!10693 = !DILocalVariable(name: "i", scope: !10688, file: !1, line: 1694, type: !11)
!10694 = !DILocation(line: 1694, column: 15, scope: !10688)
!10695 = !DILocalVariable(name: "regval", scope: !10688, file: !1, line: 1695, type: !1021)
!10696 = !DILocation(line: 1695, column: 6, scope: !10688)
!10697 = !DILocation(line: 1697, column: 9, scope: !10698)
!10698 = distinct !DILexicalBlock(scope: !10688, file: !1, line: 1697, column: 2)
!10699 = !DILocation(line: 1697, column: 7, scope: !10698)
!10700 = !DILocation(line: 1697, column: 14, scope: !10701)
!10701 = distinct !DILexicalBlock(scope: !10698, file: !1, line: 1697, column: 2)
!10702 = !DILocation(line: 1697, column: 18, scope: !10701)
!10703 = !DILocation(line: 1697, column: 25, scope: !10701)
!10704 = !DILocation(line: 1697, column: 16, scope: !10701)
!10705 = !DILocation(line: 1697, column: 2, scope: !10698)
!10706 = !DILocation(line: 1698, column: 18, scope: !10707)
!10707 = distinct !DILexicalBlock(scope: !10701, file: !1, line: 1697, column: 42)
!10708 = !DILocation(line: 1698, column: 12, scope: !10707)
!10709 = !DILocation(line: 1698, column: 10, scope: !10707)
!10710 = !DILocalVariable(name: "_var", scope: !10711, file: !1, line: 1699, type: !1021)
!10711 = distinct !DILexicalBlock(scope: !10707, file: !1, line: 1699, column: 12)
!10712 = !DILocation(line: 1699, column: 12, scope: !10711)
!10713 = !DILocalVariable(name: "_pos", scope: !10711, file: !1, line: 1699, type: !5)
!10714 = !DILocalVariable(name: "_len", scope: !10711, file: !1, line: 1699, type: !5)
!10715 = !DILocalVariable(name: "_val", scope: !10711, file: !1, line: 1699, type: !11)
!10716 = !DILocation(line: 1699, column: 10, scope: !10707)
!10717 = !DILocation(line: 1701, column: 10, scope: !10707)
!10718 = !DILocation(line: 1701, column: 18, scope: !10707)
!10719 = !DILocation(line: 1701, column: 3, scope: !10707)
!10720 = !DILocation(line: 1702, column: 2, scope: !10707)
!10721 = !DILocation(line: 1697, column: 38, scope: !10701)
!10722 = !DILocation(line: 1697, column: 2, scope: !10701)
!10723 = distinct !{!10723, !10705, !10724}
!10724 = !DILocation(line: 1702, column: 2, scope: !10698)
!10725 = !DILocation(line: 1704, column: 2, scope: !10688)
!10726 = distinct !DISubprogram(name: "xlgmac_config_rsf_mode", scope: !1, file: !1, line: 1707, type: !7918, scopeLine: 1709, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1619)
!10727 = !DILocalVariable(name: "pdata", arg: 1, scope: !10726, file: !1, line: 1707, type: !7555)
!10728 = !DILocation(line: 1707, column: 56, scope: !10726)
!10729 = !DILocalVariable(name: "val", arg: 2, scope: !10726, file: !1, line: 1708, type: !11)
!10730 = !DILocation(line: 1708, column: 20, scope: !10726)
!10731 = !DILocalVariable(name: "i", scope: !10726, file: !1, line: 1710, type: !11)
!10732 = !DILocation(line: 1710, column: 15, scope: !10726)
!10733 = !DILocalVariable(name: "regval", scope: !10726, file: !1, line: 1711, type: !1021)
!10734 = !DILocation(line: 1711, column: 6, scope: !10726)
!10735 = !DILocation(line: 1713, column: 9, scope: !10736)
!10736 = distinct !DILexicalBlock(scope: !10726, file: !1, line: 1713, column: 2)
!10737 = !DILocation(line: 1713, column: 7, scope: !10736)
!10738 = !DILocation(line: 1713, column: 14, scope: !10739)
!10739 = distinct !DILexicalBlock(scope: !10736, file: !1, line: 1713, column: 2)
!10740 = !DILocation(line: 1713, column: 18, scope: !10739)
!10741 = !DILocation(line: 1713, column: 25, scope: !10739)
!10742 = !DILocation(line: 1713, column: 16, scope: !10739)
!10743 = !DILocation(line: 1713, column: 2, scope: !10736)
!10744 = !DILocation(line: 1714, column: 18, scope: !10745)
!10745 = distinct !DILexicalBlock(scope: !10739, file: !1, line: 1713, column: 42)
!10746 = !DILocation(line: 1714, column: 12, scope: !10745)
!10747 = !DILocation(line: 1714, column: 10, scope: !10745)
!10748 = !DILocalVariable(name: "_var", scope: !10749, file: !1, line: 1715, type: !1021)
!10749 = distinct !DILexicalBlock(scope: !10745, file: !1, line: 1715, column: 12)
!10750 = !DILocation(line: 1715, column: 12, scope: !10749)
!10751 = !DILocalVariable(name: "_pos", scope: !10749, file: !1, line: 1715, type: !5)
!10752 = !DILocalVariable(name: "_len", scope: !10749, file: !1, line: 1715, type: !5)
!10753 = !DILocalVariable(name: "_val", scope: !10749, file: !1, line: 1715, type: !11)
!10754 = !DILocation(line: 1715, column: 10, scope: !10745)
!10755 = !DILocation(line: 1717, column: 10, scope: !10745)
!10756 = !DILocation(line: 1717, column: 18, scope: !10745)
!10757 = !DILocation(line: 1717, column: 3, scope: !10745)
!10758 = !DILocation(line: 1718, column: 2, scope: !10745)
!10759 = !DILocation(line: 1713, column: 38, scope: !10739)
!10760 = !DILocation(line: 1713, column: 2, scope: !10739)
!10761 = distinct !{!10761, !10743, !10762}
!10762 = !DILocation(line: 1718, column: 2, scope: !10736)
!10763 = !DILocation(line: 1720, column: 2, scope: !10726)
!10764 = distinct !DISubprogram(name: "xlgmac_config_tsf_mode", scope: !1, file: !1, line: 1723, type: !7918, scopeLine: 1725, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1619)
!10765 = !DILocalVariable(name: "pdata", arg: 1, scope: !10764, file: !1, line: 1723, type: !7555)
!10766 = !DILocation(line: 1723, column: 56, scope: !10764)
!10767 = !DILocalVariable(name: "val", arg: 2, scope: !10764, file: !1, line: 1724, type: !11)
!10768 = !DILocation(line: 1724, column: 20, scope: !10764)
!10769 = !DILocalVariable(name: "i", scope: !10764, file: !1, line: 1726, type: !11)
!10770 = !DILocation(line: 1726, column: 15, scope: !10764)
!10771 = !DILocalVariable(name: "regval", scope: !10764, file: !1, line: 1727, type: !1021)
!10772 = !DILocation(line: 1727, column: 6, scope: !10764)
!10773 = !DILocation(line: 1729, column: 9, scope: !10774)
!10774 = distinct !DILexicalBlock(scope: !10764, file: !1, line: 1729, column: 2)
!10775 = !DILocation(line: 1729, column: 7, scope: !10774)
!10776 = !DILocation(line: 1729, column: 14, scope: !10777)
!10777 = distinct !DILexicalBlock(scope: !10774, file: !1, line: 1729, column: 2)
!10778 = !DILocation(line: 1729, column: 18, scope: !10777)
!10779 = !DILocation(line: 1729, column: 25, scope: !10777)
!10780 = !DILocation(line: 1729, column: 16, scope: !10777)
!10781 = !DILocation(line: 1729, column: 2, scope: !10774)
!10782 = !DILocation(line: 1730, column: 18, scope: !10783)
!10783 = distinct !DILexicalBlock(scope: !10777, file: !1, line: 1729, column: 42)
!10784 = !DILocation(line: 1730, column: 12, scope: !10783)
!10785 = !DILocation(line: 1730, column: 10, scope: !10783)
!10786 = !DILocalVariable(name: "_var", scope: !10787, file: !1, line: 1731, type: !1021)
!10787 = distinct !DILexicalBlock(scope: !10783, file: !1, line: 1731, column: 12)
!10788 = !DILocation(line: 1731, column: 12, scope: !10787)
!10789 = !DILocalVariable(name: "_pos", scope: !10787, file: !1, line: 1731, type: !5)
!10790 = !DILocalVariable(name: "_len", scope: !10787, file: !1, line: 1731, type: !5)
!10791 = !DILocalVariable(name: "_val", scope: !10787, file: !1, line: 1731, type: !11)
!10792 = !DILocation(line: 1731, column: 10, scope: !10783)
!10793 = !DILocation(line: 1733, column: 10, scope: !10783)
!10794 = !DILocation(line: 1733, column: 18, scope: !10783)
!10795 = !DILocation(line: 1733, column: 3, scope: !10783)
!10796 = !DILocation(line: 1734, column: 2, scope: !10783)
!10797 = !DILocation(line: 1729, column: 38, scope: !10777)
!10798 = !DILocation(line: 1729, column: 2, scope: !10777)
!10799 = distinct !{!10799, !10781, !10800}
!10800 = !DILocation(line: 1734, column: 2, scope: !10774)
!10801 = !DILocation(line: 1736, column: 2, scope: !10764)
!10802 = distinct !DISubprogram(name: "xlgmac_config_osp_mode", scope: !1, file: !1, line: 1739, type: !7553, scopeLine: 1740, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1619)
!10803 = !DILocalVariable(name: "pdata", arg: 1, scope: !10802, file: !1, line: 1739, type: !7555)
!10804 = !DILocation(line: 1739, column: 56, scope: !10802)
!10805 = !DILocalVariable(name: "channel", scope: !10802, file: !1, line: 1741, type: !7573)
!10806 = !DILocation(line: 1741, column: 25, scope: !10802)
!10807 = !DILocalVariable(name: "i", scope: !10802, file: !1, line: 1742, type: !11)
!10808 = !DILocation(line: 1742, column: 15, scope: !10802)
!10809 = !DILocalVariable(name: "regval", scope: !10802, file: !1, line: 1743, type: !1021)
!10810 = !DILocation(line: 1743, column: 6, scope: !10802)
!10811 = !DILocation(line: 1745, column: 12, scope: !10802)
!10812 = !DILocation(line: 1745, column: 19, scope: !10802)
!10813 = !DILocation(line: 1745, column: 10, scope: !10802)
!10814 = !DILocation(line: 1746, column: 9, scope: !10815)
!10815 = distinct !DILexicalBlock(scope: !10802, file: !1, line: 1746, column: 2)
!10816 = !DILocation(line: 1746, column: 7, scope: !10815)
!10817 = !DILocation(line: 1746, column: 14, scope: !10818)
!10818 = distinct !DILexicalBlock(scope: !10815, file: !1, line: 1746, column: 2)
!10819 = !DILocation(line: 1746, column: 18, scope: !10818)
!10820 = !DILocation(line: 1746, column: 25, scope: !10818)
!10821 = !DILocation(line: 1746, column: 16, scope: !10818)
!10822 = !DILocation(line: 1746, column: 2, scope: !10815)
!10823 = !DILocation(line: 1747, column: 8, scope: !10824)
!10824 = distinct !DILexicalBlock(scope: !10825, file: !1, line: 1747, column: 7)
!10825 = distinct !DILexicalBlock(scope: !10818, file: !1, line: 1746, column: 56)
!10826 = !DILocation(line: 1747, column: 17, scope: !10824)
!10827 = !DILocation(line: 1747, column: 7, scope: !10825)
!10828 = !DILocation(line: 1748, column: 4, scope: !10824)
!10829 = !DILocation(line: 1750, column: 18, scope: !10825)
!10830 = !DILocation(line: 1750, column: 12, scope: !10825)
!10831 = !DILocation(line: 1750, column: 10, scope: !10825)
!10832 = !DILocalVariable(name: "_var", scope: !10833, file: !1, line: 1751, type: !1021)
!10833 = distinct !DILexicalBlock(scope: !10825, file: !1, line: 1751, column: 12)
!10834 = !DILocation(line: 1751, column: 12, scope: !10833)
!10835 = !DILocalVariable(name: "_pos", scope: !10833, file: !1, line: 1751, type: !5)
!10836 = !DILocalVariable(name: "_len", scope: !10833, file: !1, line: 1751, type: !5)
!10837 = !DILocalVariable(name: "_val", scope: !10833, file: !1, line: 1751, type: !11)
!10838 = !DILocation(line: 1751, column: 10, scope: !10825)
!10839 = !DILocation(line: 1754, column: 10, scope: !10825)
!10840 = !DILocation(line: 1754, column: 18, scope: !10825)
!10841 = !DILocation(line: 1754, column: 3, scope: !10825)
!10842 = !DILocation(line: 1755, column: 2, scope: !10825)
!10843 = !DILocation(line: 1746, column: 41, scope: !10818)
!10844 = !DILocation(line: 1746, column: 52, scope: !10818)
!10845 = !DILocation(line: 1746, column: 2, scope: !10818)
!10846 = distinct !{!10846, !10822, !10847}
!10847 = !DILocation(line: 1755, column: 2, scope: !10815)
!10848 = !DILocation(line: 1757, column: 2, scope: !10802)
!10849 = distinct !DISubprogram(name: "xlgmac_config_rx_pbl_val", scope: !1, file: !1, line: 1819, type: !7553, scopeLine: 1820, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1619)
!10850 = !DILocalVariable(name: "pdata", arg: 1, scope: !10849, file: !1, line: 1819, type: !7555)
!10851 = !DILocation(line: 1819, column: 58, scope: !10849)
!10852 = !DILocalVariable(name: "channel", scope: !10849, file: !1, line: 1821, type: !7573)
!10853 = !DILocation(line: 1821, column: 25, scope: !10849)
!10854 = !DILocalVariable(name: "i", scope: !10849, file: !1, line: 1822, type: !11)
!10855 = !DILocation(line: 1822, column: 15, scope: !10849)
!10856 = !DILocalVariable(name: "regval", scope: !10849, file: !1, line: 1823, type: !1021)
!10857 = !DILocation(line: 1823, column: 6, scope: !10849)
!10858 = !DILocation(line: 1825, column: 12, scope: !10849)
!10859 = !DILocation(line: 1825, column: 19, scope: !10849)
!10860 = !DILocation(line: 1825, column: 10, scope: !10849)
!10861 = !DILocation(line: 1826, column: 9, scope: !10862)
!10862 = distinct !DILexicalBlock(scope: !10849, file: !1, line: 1826, column: 2)
!10863 = !DILocation(line: 1826, column: 7, scope: !10862)
!10864 = !DILocation(line: 1826, column: 14, scope: !10865)
!10865 = distinct !DILexicalBlock(scope: !10862, file: !1, line: 1826, column: 2)
!10866 = !DILocation(line: 1826, column: 18, scope: !10865)
!10867 = !DILocation(line: 1826, column: 25, scope: !10865)
!10868 = !DILocation(line: 1826, column: 16, scope: !10865)
!10869 = !DILocation(line: 1826, column: 2, scope: !10862)
!10870 = !DILocation(line: 1827, column: 8, scope: !10871)
!10871 = distinct !DILexicalBlock(scope: !10872, file: !1, line: 1827, column: 7)
!10872 = distinct !DILexicalBlock(scope: !10865, file: !1, line: 1826, column: 56)
!10873 = !DILocation(line: 1827, column: 17, scope: !10871)
!10874 = !DILocation(line: 1827, column: 7, scope: !10872)
!10875 = !DILocation(line: 1828, column: 4, scope: !10871)
!10876 = !DILocation(line: 1830, column: 18, scope: !10872)
!10877 = !DILocation(line: 1830, column: 12, scope: !10872)
!10878 = !DILocation(line: 1830, column: 10, scope: !10872)
!10879 = !DILocalVariable(name: "_var", scope: !10880, file: !1, line: 1831, type: !1021)
!10880 = distinct !DILexicalBlock(scope: !10872, file: !1, line: 1831, column: 12)
!10881 = !DILocation(line: 1831, column: 12, scope: !10880)
!10882 = !DILocalVariable(name: "_pos", scope: !10880, file: !1, line: 1831, type: !5)
!10883 = !DILocalVariable(name: "_len", scope: !10880, file: !1, line: 1831, type: !5)
!10884 = !DILocalVariable(name: "_val", scope: !10880, file: !1, line: 1831, type: !11)
!10885 = !DILocation(line: 1831, column: 10, scope: !10872)
!10886 = !DILocation(line: 1834, column: 10, scope: !10872)
!10887 = !DILocation(line: 1834, column: 18, scope: !10872)
!10888 = !DILocation(line: 1834, column: 3, scope: !10872)
!10889 = !DILocation(line: 1835, column: 2, scope: !10872)
!10890 = !DILocation(line: 1826, column: 41, scope: !10865)
!10891 = !DILocation(line: 1826, column: 52, scope: !10865)
!10892 = !DILocation(line: 1826, column: 2, scope: !10865)
!10893 = distinct !{!10893, !10869, !10894}
!10894 = !DILocation(line: 1835, column: 2, scope: !10862)
!10895 = !DILocation(line: 1837, column: 2, scope: !10849)
!10896 = distinct !DISubprogram(name: "xlgmac_get_rx_pbl_val", scope: !1, file: !1, line: 1809, type: !7553, scopeLine: 1810, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1619)
!10897 = !DILocalVariable(name: "pdata", arg: 1, scope: !10896, file: !1, line: 1809, type: !7555)
!10898 = !DILocation(line: 1809, column: 55, scope: !10896)
!10899 = !DILocalVariable(name: "regval", scope: !10896, file: !1, line: 1811, type: !1021)
!10900 = !DILocation(line: 1811, column: 6, scope: !10896)
!10901 = !DILocation(line: 1813, column: 17, scope: !10896)
!10902 = !DILocation(line: 1813, column: 11, scope: !10896)
!10903 = !DILocation(line: 1813, column: 9, scope: !10896)
!10904 = !DILocalVariable(name: "_pos", scope: !10905, file: !1, line: 1814, type: !5)
!10905 = distinct !DILexicalBlock(scope: !10896, file: !1, line: 1814, column: 11)
!10906 = !DILocation(line: 1814, column: 11, scope: !10905)
!10907 = !DILocalVariable(name: "_len", scope: !10905, file: !1, line: 1814, type: !5)
!10908 = !DILocation(line: 1814, column: 11, scope: !10896)
!10909 = !DILocation(line: 1814, column: 9, scope: !10896)
!10910 = !DILocation(line: 1816, column: 9, scope: !10896)
!10911 = !DILocation(line: 1816, column: 2, scope: !10896)
!10912 = distinct !DISubprogram(name: "xlgmac_config_tx_pbl_val", scope: !1, file: !1, line: 1788, type: !7553, scopeLine: 1789, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1619)
!10913 = !DILocalVariable(name: "pdata", arg: 1, scope: !10912, file: !1, line: 1788, type: !7555)
!10914 = !DILocation(line: 1788, column: 58, scope: !10912)
!10915 = !DILocalVariable(name: "channel", scope: !10912, file: !1, line: 1790, type: !7573)
!10916 = !DILocation(line: 1790, column: 25, scope: !10912)
!10917 = !DILocalVariable(name: "i", scope: !10912, file: !1, line: 1791, type: !11)
!10918 = !DILocation(line: 1791, column: 15, scope: !10912)
!10919 = !DILocalVariable(name: "regval", scope: !10912, file: !1, line: 1792, type: !1021)
!10920 = !DILocation(line: 1792, column: 6, scope: !10912)
!10921 = !DILocation(line: 1794, column: 12, scope: !10912)
!10922 = !DILocation(line: 1794, column: 19, scope: !10912)
!10923 = !DILocation(line: 1794, column: 10, scope: !10912)
!10924 = !DILocation(line: 1795, column: 9, scope: !10925)
!10925 = distinct !DILexicalBlock(scope: !10912, file: !1, line: 1795, column: 2)
!10926 = !DILocation(line: 1795, column: 7, scope: !10925)
!10927 = !DILocation(line: 1795, column: 14, scope: !10928)
!10928 = distinct !DILexicalBlock(scope: !10925, file: !1, line: 1795, column: 2)
!10929 = !DILocation(line: 1795, column: 18, scope: !10928)
!10930 = !DILocation(line: 1795, column: 25, scope: !10928)
!10931 = !DILocation(line: 1795, column: 16, scope: !10928)
!10932 = !DILocation(line: 1795, column: 2, scope: !10925)
!10933 = !DILocation(line: 1796, column: 8, scope: !10934)
!10934 = distinct !DILexicalBlock(scope: !10935, file: !1, line: 1796, column: 7)
!10935 = distinct !DILexicalBlock(scope: !10928, file: !1, line: 1795, column: 56)
!10936 = !DILocation(line: 1796, column: 17, scope: !10934)
!10937 = !DILocation(line: 1796, column: 7, scope: !10935)
!10938 = !DILocation(line: 1797, column: 4, scope: !10934)
!10939 = !DILocation(line: 1799, column: 18, scope: !10935)
!10940 = !DILocation(line: 1799, column: 12, scope: !10935)
!10941 = !DILocation(line: 1799, column: 10, scope: !10935)
!10942 = !DILocalVariable(name: "_var", scope: !10943, file: !1, line: 1800, type: !1021)
!10943 = distinct !DILexicalBlock(scope: !10935, file: !1, line: 1800, column: 12)
!10944 = !DILocation(line: 1800, column: 12, scope: !10943)
!10945 = !DILocalVariable(name: "_pos", scope: !10943, file: !1, line: 1800, type: !5)
!10946 = !DILocalVariable(name: "_len", scope: !10943, file: !1, line: 1800, type: !5)
!10947 = !DILocalVariable(name: "_val", scope: !10943, file: !1, line: 1800, type: !11)
!10948 = !DILocation(line: 1800, column: 10, scope: !10935)
!10949 = !DILocation(line: 1803, column: 10, scope: !10935)
!10950 = !DILocation(line: 1803, column: 18, scope: !10935)
!10951 = !DILocation(line: 1803, column: 3, scope: !10935)
!10952 = !DILocation(line: 1804, column: 2, scope: !10935)
!10953 = !DILocation(line: 1795, column: 41, scope: !10928)
!10954 = !DILocation(line: 1795, column: 52, scope: !10928)
!10955 = !DILocation(line: 1795, column: 2, scope: !10928)
!10956 = distinct !{!10956, !10932, !10957}
!10957 = !DILocation(line: 1804, column: 2, scope: !10925)
!10958 = !DILocation(line: 1806, column: 2, scope: !10912)
!10959 = distinct !DISubprogram(name: "xlgmac_get_tx_pbl_val", scope: !1, file: !1, line: 1778, type: !7553, scopeLine: 1779, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1619)
!10960 = !DILocalVariable(name: "pdata", arg: 1, scope: !10959, file: !1, line: 1778, type: !7555)
!10961 = !DILocation(line: 1778, column: 55, scope: !10959)
!10962 = !DILocalVariable(name: "regval", scope: !10959, file: !1, line: 1780, type: !1021)
!10963 = !DILocation(line: 1780, column: 6, scope: !10959)
!10964 = !DILocation(line: 1782, column: 17, scope: !10959)
!10965 = !DILocation(line: 1782, column: 11, scope: !10959)
!10966 = !DILocation(line: 1782, column: 9, scope: !10959)
!10967 = !DILocalVariable(name: "_pos", scope: !10968, file: !1, line: 1783, type: !5)
!10968 = distinct !DILexicalBlock(scope: !10959, file: !1, line: 1783, column: 11)
!10969 = !DILocation(line: 1783, column: 11, scope: !10968)
!10970 = !DILocalVariable(name: "_len", scope: !10968, file: !1, line: 1783, type: !5)
!10971 = !DILocation(line: 1783, column: 11, scope: !10959)
!10972 = !DILocation(line: 1783, column: 9, scope: !10959)
!10973 = !DILocation(line: 1785, column: 9, scope: !10959)
!10974 = !DILocation(line: 1785, column: 2, scope: !10959)
!10975 = distinct !DISubprogram(name: "xlgmac_config_pblx8", scope: !1, file: !1, line: 1760, type: !7553, scopeLine: 1761, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1619)
!10976 = !DILocalVariable(name: "pdata", arg: 1, scope: !10975, file: !1, line: 1760, type: !7555)
!10977 = !DILocation(line: 1760, column: 53, scope: !10975)
!10978 = !DILocalVariable(name: "channel", scope: !10975, file: !1, line: 1762, type: !7573)
!10979 = !DILocation(line: 1762, column: 25, scope: !10975)
!10980 = !DILocalVariable(name: "i", scope: !10975, file: !1, line: 1763, type: !11)
!10981 = !DILocation(line: 1763, column: 15, scope: !10975)
!10982 = !DILocalVariable(name: "regval", scope: !10975, file: !1, line: 1764, type: !1021)
!10983 = !DILocation(line: 1764, column: 6, scope: !10975)
!10984 = !DILocation(line: 1766, column: 12, scope: !10975)
!10985 = !DILocation(line: 1766, column: 19, scope: !10975)
!10986 = !DILocation(line: 1766, column: 10, scope: !10975)
!10987 = !DILocation(line: 1767, column: 9, scope: !10988)
!10988 = distinct !DILexicalBlock(scope: !10975, file: !1, line: 1767, column: 2)
!10989 = !DILocation(line: 1767, column: 7, scope: !10988)
!10990 = !DILocation(line: 1767, column: 14, scope: !10991)
!10991 = distinct !DILexicalBlock(scope: !10988, file: !1, line: 1767, column: 2)
!10992 = !DILocation(line: 1767, column: 18, scope: !10991)
!10993 = !DILocation(line: 1767, column: 25, scope: !10991)
!10994 = !DILocation(line: 1767, column: 16, scope: !10991)
!10995 = !DILocation(line: 1767, column: 2, scope: !10988)
!10996 = !DILocation(line: 1768, column: 18, scope: !10997)
!10997 = distinct !DILexicalBlock(scope: !10991, file: !1, line: 1767, column: 56)
!10998 = !DILocation(line: 1768, column: 12, scope: !10997)
!10999 = !DILocation(line: 1768, column: 10, scope: !10997)
!11000 = !DILocalVariable(name: "_var", scope: !11001, file: !1, line: 1769, type: !1021)
!11001 = distinct !DILexicalBlock(scope: !10997, file: !1, line: 1769, column: 12)
!11002 = !DILocation(line: 1769, column: 12, scope: !11001)
!11003 = !DILocalVariable(name: "_pos", scope: !11001, file: !1, line: 1769, type: !5)
!11004 = !DILocalVariable(name: "_len", scope: !11001, file: !1, line: 1769, type: !5)
!11005 = !DILocalVariable(name: "_val", scope: !11001, file: !1, line: 1769, type: !11)
!11006 = !DILocation(line: 1769, column: 10, scope: !10997)
!11007 = !DILocation(line: 1772, column: 10, scope: !10997)
!11008 = !DILocation(line: 1772, column: 18, scope: !10997)
!11009 = !DILocation(line: 1772, column: 3, scope: !10997)
!11010 = !DILocation(line: 1773, column: 2, scope: !10997)
!11011 = !DILocation(line: 1767, column: 41, scope: !10991)
!11012 = !DILocation(line: 1767, column: 52, scope: !10991)
!11013 = !DILocation(line: 1767, column: 2, scope: !10991)
!11014 = distinct !{!11014, !10995, !11015}
!11015 = !DILocation(line: 1773, column: 2, scope: !10988)
!11016 = !DILocation(line: 1775, column: 2, scope: !10975)
!11017 = distinct !DISubprogram(name: "xlgmac_tx_mmc_int", scope: !1, file: !1, line: 1866, type: !7567, scopeLine: 1867, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1619)
!11018 = !DILocalVariable(name: "pdata", arg: 1, scope: !11017, file: !1, line: 1866, type: !7555)
!11019 = !DILocation(line: 1866, column: 52, scope: !11017)
!11020 = !DILocalVariable(name: "mmc_isr", scope: !11017, file: !1, line: 1868, type: !11)
!11021 = !DILocation(line: 1868, column: 15, scope: !11017)
!11022 = !DILocation(line: 1868, column: 31, scope: !11017)
!11023 = !DILocation(line: 1868, column: 38, scope: !11017)
!11024 = !DILocation(line: 1868, column: 47, scope: !11017)
!11025 = !DILocation(line: 1868, column: 25, scope: !11017)
!11026 = !DILocalVariable(name: "stats", scope: !11017, file: !1, line: 1869, type: !11027)
!11027 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7713, size: 64)
!11028 = !DILocation(line: 1869, column: 23, scope: !11017)
!11029 = !DILocation(line: 1869, column: 32, scope: !11017)
!11030 = !DILocation(line: 1869, column: 39, scope: !11017)
!11031 = !DILocalVariable(name: "_pos", scope: !11032, file: !1, line: 1871, type: !5)
!11032 = distinct !DILexicalBlock(scope: !11033, file: !1, line: 1871, column: 6)
!11033 = distinct !DILexicalBlock(scope: !11017, file: !1, line: 1871, column: 6)
!11034 = !DILocation(line: 1871, column: 6, scope: !11032)
!11035 = !DILocalVariable(name: "_len", scope: !11032, file: !1, line: 1871, type: !5)
!11036 = !DILocation(line: 1871, column: 6, scope: !11033)
!11037 = !DILocation(line: 1871, column: 6, scope: !11017)
!11038 = !DILocation(line: 1875, column: 20, scope: !11033)
!11039 = !DILocation(line: 1875, column: 4, scope: !11033)
!11040 = !DILocation(line: 1874, column: 3, scope: !11033)
!11041 = !DILocation(line: 1874, column: 10, scope: !11033)
!11042 = !DILocation(line: 1874, column: 26, scope: !11033)
!11043 = !DILocalVariable(name: "_pos", scope: !11044, file: !1, line: 1877, type: !5)
!11044 = distinct !DILexicalBlock(scope: !11045, file: !1, line: 1877, column: 6)
!11045 = distinct !DILexicalBlock(scope: !11017, file: !1, line: 1877, column: 6)
!11046 = !DILocation(line: 1877, column: 6, scope: !11044)
!11047 = !DILocalVariable(name: "_len", scope: !11044, file: !1, line: 1877, type: !5)
!11048 = !DILocation(line: 1877, column: 6, scope: !11045)
!11049 = !DILocation(line: 1877, column: 6, scope: !11017)
!11050 = !DILocation(line: 1881, column: 20, scope: !11045)
!11051 = !DILocation(line: 1881, column: 4, scope: !11045)
!11052 = !DILocation(line: 1880, column: 3, scope: !11045)
!11053 = !DILocation(line: 1880, column: 10, scope: !11045)
!11054 = !DILocation(line: 1880, column: 26, scope: !11045)
!11055 = !DILocalVariable(name: "_pos", scope: !11056, file: !1, line: 1883, type: !5)
!11056 = distinct !DILexicalBlock(scope: !11057, file: !1, line: 1883, column: 6)
!11057 = distinct !DILexicalBlock(scope: !11017, file: !1, line: 1883, column: 6)
!11058 = !DILocation(line: 1883, column: 6, scope: !11056)
!11059 = !DILocalVariable(name: "_len", scope: !11056, file: !1, line: 1883, type: !5)
!11060 = !DILocation(line: 1883, column: 6, scope: !11057)
!11061 = !DILocation(line: 1883, column: 6, scope: !11017)
!11062 = !DILocation(line: 1887, column: 20, scope: !11057)
!11063 = !DILocation(line: 1887, column: 4, scope: !11057)
!11064 = !DILocation(line: 1886, column: 3, scope: !11057)
!11065 = !DILocation(line: 1886, column: 10, scope: !11057)
!11066 = !DILocation(line: 1886, column: 30, scope: !11057)
!11067 = !DILocalVariable(name: "_pos", scope: !11068, file: !1, line: 1889, type: !5)
!11068 = distinct !DILexicalBlock(scope: !11069, file: !1, line: 1889, column: 6)
!11069 = distinct !DILexicalBlock(scope: !11017, file: !1, line: 1889, column: 6)
!11070 = !DILocation(line: 1889, column: 6, scope: !11068)
!11071 = !DILocalVariable(name: "_len", scope: !11068, file: !1, line: 1889, type: !5)
!11072 = !DILocation(line: 1889, column: 6, scope: !11069)
!11073 = !DILocation(line: 1889, column: 6, scope: !11017)
!11074 = !DILocation(line: 1893, column: 20, scope: !11069)
!11075 = !DILocation(line: 1893, column: 4, scope: !11069)
!11076 = !DILocation(line: 1892, column: 3, scope: !11069)
!11077 = !DILocation(line: 1892, column: 10, scope: !11069)
!11078 = !DILocation(line: 1892, column: 30, scope: !11069)
!11079 = !DILocalVariable(name: "_pos", scope: !11080, file: !1, line: 1895, type: !5)
!11080 = distinct !DILexicalBlock(scope: !11081, file: !1, line: 1895, column: 6)
!11081 = distinct !DILexicalBlock(scope: !11017, file: !1, line: 1895, column: 6)
!11082 = !DILocation(line: 1895, column: 6, scope: !11080)
!11083 = !DILocalVariable(name: "_len", scope: !11080, file: !1, line: 1895, type: !5)
!11084 = !DILocation(line: 1895, column: 6, scope: !11081)
!11085 = !DILocation(line: 1895, column: 6, scope: !11017)
!11086 = !DILocation(line: 1899, column: 20, scope: !11081)
!11087 = !DILocation(line: 1899, column: 4, scope: !11081)
!11088 = !DILocation(line: 1898, column: 3, scope: !11081)
!11089 = !DILocation(line: 1898, column: 10, scope: !11081)
!11090 = !DILocation(line: 1898, column: 24, scope: !11081)
!11091 = !DILocalVariable(name: "_pos", scope: !11092, file: !1, line: 1901, type: !5)
!11092 = distinct !DILexicalBlock(scope: !11093, file: !1, line: 1901, column: 6)
!11093 = distinct !DILexicalBlock(scope: !11017, file: !1, line: 1901, column: 6)
!11094 = !DILocation(line: 1901, column: 6, scope: !11092)
!11095 = !DILocalVariable(name: "_len", scope: !11092, file: !1, line: 1901, type: !5)
!11096 = !DILocation(line: 1901, column: 6, scope: !11093)
!11097 = !DILocation(line: 1901, column: 6, scope: !11017)
!11098 = !DILocation(line: 1905, column: 20, scope: !11093)
!11099 = !DILocation(line: 1905, column: 4, scope: !11093)
!11100 = !DILocation(line: 1904, column: 3, scope: !11093)
!11101 = !DILocation(line: 1904, column: 10, scope: !11093)
!11102 = !DILocation(line: 1904, column: 29, scope: !11093)
!11103 = !DILocalVariable(name: "_pos", scope: !11104, file: !1, line: 1907, type: !5)
!11104 = distinct !DILexicalBlock(scope: !11105, file: !1, line: 1907, column: 6)
!11105 = distinct !DILexicalBlock(scope: !11017, file: !1, line: 1907, column: 6)
!11106 = !DILocation(line: 1907, column: 6, scope: !11104)
!11107 = !DILocalVariable(name: "_len", scope: !11104, file: !1, line: 1907, type: !5)
!11108 = !DILocation(line: 1907, column: 6, scope: !11105)
!11109 = !DILocation(line: 1907, column: 6, scope: !11017)
!11110 = !DILocation(line: 1911, column: 20, scope: !11105)
!11111 = !DILocation(line: 1911, column: 4, scope: !11105)
!11112 = !DILocation(line: 1910, column: 3, scope: !11105)
!11113 = !DILocation(line: 1910, column: 10, scope: !11105)
!11114 = !DILocation(line: 1910, column: 30, scope: !11105)
!11115 = !DILocalVariable(name: "_pos", scope: !11116, file: !1, line: 1913, type: !5)
!11116 = distinct !DILexicalBlock(scope: !11117, file: !1, line: 1913, column: 6)
!11117 = distinct !DILexicalBlock(scope: !11017, file: !1, line: 1913, column: 6)
!11118 = !DILocation(line: 1913, column: 6, scope: !11116)
!11119 = !DILocalVariable(name: "_len", scope: !11116, file: !1, line: 1913, type: !5)
!11120 = !DILocation(line: 1913, column: 6, scope: !11117)
!11121 = !DILocation(line: 1913, column: 6, scope: !11017)
!11122 = !DILocation(line: 1917, column: 20, scope: !11117)
!11123 = !DILocation(line: 1917, column: 4, scope: !11117)
!11124 = !DILocation(line: 1916, column: 3, scope: !11117)
!11125 = !DILocation(line: 1916, column: 10, scope: !11117)
!11126 = !DILocation(line: 1916, column: 30, scope: !11117)
!11127 = !DILocalVariable(name: "_pos", scope: !11128, file: !1, line: 1919, type: !5)
!11128 = distinct !DILexicalBlock(scope: !11129, file: !1, line: 1919, column: 6)
!11129 = distinct !DILexicalBlock(scope: !11017, file: !1, line: 1919, column: 6)
!11130 = !DILocation(line: 1919, column: 6, scope: !11128)
!11131 = !DILocalVariable(name: "_len", scope: !11128, file: !1, line: 1919, type: !5)
!11132 = !DILocation(line: 1919, column: 6, scope: !11129)
!11133 = !DILocation(line: 1919, column: 6, scope: !11017)
!11134 = !DILocation(line: 1923, column: 20, scope: !11129)
!11135 = !DILocation(line: 1923, column: 4, scope: !11129)
!11136 = !DILocation(line: 1922, column: 3, scope: !11129)
!11137 = !DILocation(line: 1922, column: 10, scope: !11129)
!11138 = !DILocation(line: 1922, column: 31, scope: !11129)
!11139 = !DILocalVariable(name: "_pos", scope: !11140, file: !1, line: 1925, type: !5)
!11140 = distinct !DILexicalBlock(scope: !11141, file: !1, line: 1925, column: 6)
!11141 = distinct !DILexicalBlock(scope: !11017, file: !1, line: 1925, column: 6)
!11142 = !DILocation(line: 1925, column: 6, scope: !11140)
!11143 = !DILocalVariable(name: "_len", scope: !11140, file: !1, line: 1925, type: !5)
!11144 = !DILocation(line: 1925, column: 6, scope: !11141)
!11145 = !DILocation(line: 1925, column: 6, scope: !11017)
!11146 = !DILocation(line: 1929, column: 20, scope: !11141)
!11147 = !DILocation(line: 1929, column: 4, scope: !11141)
!11148 = !DILocation(line: 1928, column: 3, scope: !11141)
!11149 = !DILocation(line: 1928, column: 10, scope: !11141)
!11150 = !DILocation(line: 1928, column: 31, scope: !11141)
!11151 = !DILocalVariable(name: "_pos", scope: !11152, file: !1, line: 1931, type: !5)
!11152 = distinct !DILexicalBlock(scope: !11153, file: !1, line: 1931, column: 6)
!11153 = distinct !DILexicalBlock(scope: !11017, file: !1, line: 1931, column: 6)
!11154 = !DILocation(line: 1931, column: 6, scope: !11152)
!11155 = !DILocalVariable(name: "_len", scope: !11152, file: !1, line: 1931, type: !5)
!11156 = !DILocation(line: 1931, column: 6, scope: !11153)
!11157 = !DILocation(line: 1931, column: 6, scope: !11017)
!11158 = !DILocation(line: 1935, column: 20, scope: !11153)
!11159 = !DILocation(line: 1935, column: 4, scope: !11153)
!11160 = !DILocation(line: 1934, column: 3, scope: !11153)
!11161 = !DILocation(line: 1934, column: 10, scope: !11153)
!11162 = !DILocation(line: 1934, column: 29, scope: !11153)
!11163 = !DILocalVariable(name: "_pos", scope: !11164, file: !1, line: 1937, type: !5)
!11164 = distinct !DILexicalBlock(scope: !11165, file: !1, line: 1937, column: 6)
!11165 = distinct !DILexicalBlock(scope: !11017, file: !1, line: 1937, column: 6)
!11166 = !DILocation(line: 1937, column: 6, scope: !11164)
!11167 = !DILocalVariable(name: "_len", scope: !11164, file: !1, line: 1937, type: !5)
!11168 = !DILocation(line: 1937, column: 6, scope: !11165)
!11169 = !DILocation(line: 1937, column: 6, scope: !11017)
!11170 = !DILocation(line: 1941, column: 20, scope: !11165)
!11171 = !DILocation(line: 1941, column: 4, scope: !11165)
!11172 = !DILocation(line: 1940, column: 3, scope: !11165)
!11173 = !DILocation(line: 1940, column: 10, scope: !11165)
!11174 = !DILocation(line: 1940, column: 31, scope: !11165)
!11175 = !DILocalVariable(name: "_pos", scope: !11176, file: !1, line: 1943, type: !5)
!11176 = distinct !DILexicalBlock(scope: !11177, file: !1, line: 1943, column: 6)
!11177 = distinct !DILexicalBlock(scope: !11017, file: !1, line: 1943, column: 6)
!11178 = !DILocation(line: 1943, column: 6, scope: !11176)
!11179 = !DILocalVariable(name: "_len", scope: !11176, file: !1, line: 1943, type: !5)
!11180 = !DILocation(line: 1943, column: 6, scope: !11177)
!11181 = !DILocation(line: 1943, column: 6, scope: !11017)
!11182 = !DILocation(line: 1947, column: 20, scope: !11177)
!11183 = !DILocation(line: 1947, column: 4, scope: !11177)
!11184 = !DILocation(line: 1946, column: 3, scope: !11177)
!11185 = !DILocation(line: 1946, column: 10, scope: !11177)
!11186 = !DILocation(line: 1946, column: 30, scope: !11177)
!11187 = !DILocalVariable(name: "_pos", scope: !11188, file: !1, line: 1949, type: !5)
!11188 = distinct !DILexicalBlock(scope: !11189, file: !1, line: 1949, column: 6)
!11189 = distinct !DILexicalBlock(scope: !11017, file: !1, line: 1949, column: 6)
!11190 = !DILocation(line: 1949, column: 6, scope: !11188)
!11191 = !DILocalVariable(name: "_len", scope: !11188, file: !1, line: 1949, type: !5)
!11192 = !DILocation(line: 1949, column: 6, scope: !11189)
!11193 = !DILocation(line: 1949, column: 6, scope: !11017)
!11194 = !DILocation(line: 1953, column: 20, scope: !11189)
!11195 = !DILocation(line: 1953, column: 4, scope: !11189)
!11196 = !DILocation(line: 1952, column: 3, scope: !11189)
!11197 = !DILocation(line: 1952, column: 10, scope: !11189)
!11198 = !DILocation(line: 1952, column: 27, scope: !11189)
!11199 = !DILocalVariable(name: "_pos", scope: !11200, file: !1, line: 1955, type: !5)
!11200 = distinct !DILexicalBlock(scope: !11201, file: !1, line: 1955, column: 6)
!11201 = distinct !DILexicalBlock(scope: !11017, file: !1, line: 1955, column: 6)
!11202 = !DILocation(line: 1955, column: 6, scope: !11200)
!11203 = !DILocalVariable(name: "_len", scope: !11200, file: !1, line: 1955, type: !5)
!11204 = !DILocation(line: 1955, column: 6, scope: !11201)
!11205 = !DILocation(line: 1955, column: 6, scope: !11017)
!11206 = !DILocation(line: 1959, column: 20, scope: !11201)
!11207 = !DILocation(line: 1959, column: 4, scope: !11201)
!11208 = !DILocation(line: 1958, column: 3, scope: !11201)
!11209 = !DILocation(line: 1958, column: 10, scope: !11201)
!11210 = !DILocation(line: 1958, column: 25, scope: !11201)
!11211 = !DILocalVariable(name: "_pos", scope: !11212, file: !1, line: 1961, type: !5)
!11212 = distinct !DILexicalBlock(scope: !11213, file: !1, line: 1961, column: 6)
!11213 = distinct !DILexicalBlock(scope: !11017, file: !1, line: 1961, column: 6)
!11214 = !DILocation(line: 1961, column: 6, scope: !11212)
!11215 = !DILocalVariable(name: "_len", scope: !11212, file: !1, line: 1961, type: !5)
!11216 = !DILocation(line: 1961, column: 6, scope: !11213)
!11217 = !DILocation(line: 1961, column: 6, scope: !11017)
!11218 = !DILocation(line: 1965, column: 20, scope: !11213)
!11219 = !DILocation(line: 1965, column: 4, scope: !11213)
!11220 = !DILocation(line: 1964, column: 3, scope: !11213)
!11221 = !DILocation(line: 1964, column: 10, scope: !11213)
!11222 = !DILocation(line: 1964, column: 25, scope: !11213)
!11223 = !DILocalVariable(name: "_pos", scope: !11224, file: !1, line: 1967, type: !5)
!11224 = distinct !DILexicalBlock(scope: !11225, file: !1, line: 1967, column: 6)
!11225 = distinct !DILexicalBlock(scope: !11017, file: !1, line: 1967, column: 6)
!11226 = !DILocation(line: 1967, column: 6, scope: !11224)
!11227 = !DILocalVariable(name: "_len", scope: !11224, file: !1, line: 1967, type: !5)
!11228 = !DILocation(line: 1967, column: 6, scope: !11225)
!11229 = !DILocation(line: 1967, column: 6, scope: !11017)
!11230 = !DILocation(line: 1971, column: 20, scope: !11225)
!11231 = !DILocation(line: 1971, column: 4, scope: !11225)
!11232 = !DILocation(line: 1970, column: 3, scope: !11225)
!11233 = !DILocation(line: 1970, column: 10, scope: !11225)
!11234 = !DILocation(line: 1970, column: 24, scope: !11225)
!11235 = !DILocalVariable(name: "_pos", scope: !11236, file: !1, line: 1973, type: !5)
!11236 = distinct !DILexicalBlock(scope: !11237, file: !1, line: 1973, column: 6)
!11237 = distinct !DILexicalBlock(scope: !11017, file: !1, line: 1973, column: 6)
!11238 = !DILocation(line: 1973, column: 6, scope: !11236)
!11239 = !DILocalVariable(name: "_len", scope: !11236, file: !1, line: 1973, type: !5)
!11240 = !DILocation(line: 1973, column: 6, scope: !11237)
!11241 = !DILocation(line: 1973, column: 6, scope: !11017)
!11242 = !DILocation(line: 1977, column: 20, scope: !11237)
!11243 = !DILocation(line: 1977, column: 4, scope: !11237)
!11244 = !DILocation(line: 1976, column: 3, scope: !11237)
!11245 = !DILocation(line: 1976, column: 10, scope: !11237)
!11246 = !DILocation(line: 1976, column: 25, scope: !11237)
!11247 = !DILocation(line: 1978, column: 1, scope: !11017)
!11248 = distinct !DISubprogram(name: "xlgmac_rx_mmc_int", scope: !1, file: !1, line: 1980, type: !7567, scopeLine: 1981, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1619)
!11249 = !DILocalVariable(name: "pdata", arg: 1, scope: !11248, file: !1, line: 1980, type: !7555)
!11250 = !DILocation(line: 1980, column: 52, scope: !11248)
!11251 = !DILocalVariable(name: "mmc_isr", scope: !11248, file: !1, line: 1982, type: !11)
!11252 = !DILocation(line: 1982, column: 15, scope: !11248)
!11253 = !DILocation(line: 1982, column: 31, scope: !11248)
!11254 = !DILocation(line: 1982, column: 38, scope: !11248)
!11255 = !DILocation(line: 1982, column: 47, scope: !11248)
!11256 = !DILocation(line: 1982, column: 25, scope: !11248)
!11257 = !DILocalVariable(name: "stats", scope: !11248, file: !1, line: 1983, type: !11027)
!11258 = !DILocation(line: 1983, column: 23, scope: !11248)
!11259 = !DILocation(line: 1983, column: 32, scope: !11248)
!11260 = !DILocation(line: 1983, column: 39, scope: !11248)
!11261 = !DILocalVariable(name: "_pos", scope: !11262, file: !1, line: 1985, type: !5)
!11262 = distinct !DILexicalBlock(scope: !11263, file: !1, line: 1985, column: 6)
!11263 = distinct !DILexicalBlock(scope: !11248, file: !1, line: 1985, column: 6)
!11264 = !DILocation(line: 1985, column: 6, scope: !11262)
!11265 = !DILocalVariable(name: "_len", scope: !11262, file: !1, line: 1985, type: !5)
!11266 = !DILocation(line: 1985, column: 6, scope: !11263)
!11267 = !DILocation(line: 1985, column: 6, scope: !11248)
!11268 = !DILocation(line: 1989, column: 20, scope: !11263)
!11269 = !DILocation(line: 1989, column: 4, scope: !11263)
!11270 = !DILocation(line: 1988, column: 3, scope: !11263)
!11271 = !DILocation(line: 1988, column: 10, scope: !11263)
!11272 = !DILocation(line: 1988, column: 26, scope: !11263)
!11273 = !DILocalVariable(name: "_pos", scope: !11274, file: !1, line: 1991, type: !5)
!11274 = distinct !DILexicalBlock(scope: !11275, file: !1, line: 1991, column: 6)
!11275 = distinct !DILexicalBlock(scope: !11248, file: !1, line: 1991, column: 6)
!11276 = !DILocation(line: 1991, column: 6, scope: !11274)
!11277 = !DILocalVariable(name: "_len", scope: !11274, file: !1, line: 1991, type: !5)
!11278 = !DILocation(line: 1991, column: 6, scope: !11275)
!11279 = !DILocation(line: 1991, column: 6, scope: !11248)
!11280 = !DILocation(line: 1995, column: 20, scope: !11275)
!11281 = !DILocation(line: 1995, column: 4, scope: !11275)
!11282 = !DILocation(line: 1994, column: 3, scope: !11275)
!11283 = !DILocation(line: 1994, column: 10, scope: !11275)
!11284 = !DILocation(line: 1994, column: 26, scope: !11275)
!11285 = !DILocalVariable(name: "_pos", scope: !11286, file: !1, line: 1997, type: !5)
!11286 = distinct !DILexicalBlock(scope: !11287, file: !1, line: 1997, column: 6)
!11287 = distinct !DILexicalBlock(scope: !11248, file: !1, line: 1997, column: 6)
!11288 = !DILocation(line: 1997, column: 6, scope: !11286)
!11289 = !DILocalVariable(name: "_len", scope: !11286, file: !1, line: 1997, type: !5)
!11290 = !DILocation(line: 1997, column: 6, scope: !11287)
!11291 = !DILocation(line: 1997, column: 6, scope: !11248)
!11292 = !DILocation(line: 2001, column: 20, scope: !11287)
!11293 = !DILocation(line: 2001, column: 4, scope: !11287)
!11294 = !DILocation(line: 2000, column: 3, scope: !11287)
!11295 = !DILocation(line: 2000, column: 10, scope: !11287)
!11296 = !DILocation(line: 2000, column: 25, scope: !11287)
!11297 = !DILocalVariable(name: "_pos", scope: !11298, file: !1, line: 2003, type: !5)
!11298 = distinct !DILexicalBlock(scope: !11299, file: !1, line: 2003, column: 6)
!11299 = distinct !DILexicalBlock(scope: !11248, file: !1, line: 2003, column: 6)
!11300 = !DILocation(line: 2003, column: 6, scope: !11298)
!11301 = !DILocalVariable(name: "_len", scope: !11298, file: !1, line: 2003, type: !5)
!11302 = !DILocation(line: 2003, column: 6, scope: !11299)
!11303 = !DILocation(line: 2003, column: 6, scope: !11248)
!11304 = !DILocation(line: 2007, column: 20, scope: !11299)
!11305 = !DILocation(line: 2007, column: 4, scope: !11299)
!11306 = !DILocation(line: 2006, column: 3, scope: !11299)
!11307 = !DILocation(line: 2006, column: 10, scope: !11299)
!11308 = !DILocation(line: 2006, column: 30, scope: !11299)
!11309 = !DILocalVariable(name: "_pos", scope: !11310, file: !1, line: 2009, type: !5)
!11310 = distinct !DILexicalBlock(scope: !11311, file: !1, line: 2009, column: 6)
!11311 = distinct !DILexicalBlock(scope: !11248, file: !1, line: 2009, column: 6)
!11312 = !DILocation(line: 2009, column: 6, scope: !11310)
!11313 = !DILocalVariable(name: "_len", scope: !11310, file: !1, line: 2009, type: !5)
!11314 = !DILocation(line: 2009, column: 6, scope: !11311)
!11315 = !DILocation(line: 2009, column: 6, scope: !11248)
!11316 = !DILocation(line: 2013, column: 20, scope: !11311)
!11317 = !DILocation(line: 2013, column: 4, scope: !11311)
!11318 = !DILocation(line: 2012, column: 3, scope: !11311)
!11319 = !DILocation(line: 2012, column: 10, scope: !11311)
!11320 = !DILocation(line: 2012, column: 30, scope: !11311)
!11321 = !DILocalVariable(name: "_pos", scope: !11322, file: !1, line: 2015, type: !5)
!11322 = distinct !DILexicalBlock(scope: !11323, file: !1, line: 2015, column: 6)
!11323 = distinct !DILexicalBlock(scope: !11248, file: !1, line: 2015, column: 6)
!11324 = !DILocation(line: 2015, column: 6, scope: !11322)
!11325 = !DILocalVariable(name: "_len", scope: !11322, file: !1, line: 2015, type: !5)
!11326 = !DILocation(line: 2015, column: 6, scope: !11323)
!11327 = !DILocation(line: 2015, column: 6, scope: !11248)
!11328 = !DILocation(line: 2019, column: 20, scope: !11323)
!11329 = !DILocation(line: 2019, column: 4, scope: !11323)
!11330 = !DILocation(line: 2018, column: 3, scope: !11323)
!11331 = !DILocation(line: 2018, column: 10, scope: !11323)
!11332 = !DILocation(line: 2018, column: 21, scope: !11323)
!11333 = !DILocalVariable(name: "_pos", scope: !11334, file: !1, line: 2021, type: !5)
!11334 = distinct !DILexicalBlock(scope: !11335, file: !1, line: 2021, column: 6)
!11335 = distinct !DILexicalBlock(scope: !11248, file: !1, line: 2021, column: 6)
!11336 = !DILocation(line: 2021, column: 6, scope: !11334)
!11337 = !DILocalVariable(name: "_len", scope: !11334, file: !1, line: 2021, type: !5)
!11338 = !DILocation(line: 2021, column: 6, scope: !11335)
!11339 = !DILocation(line: 2021, column: 6, scope: !11248)
!11340 = !DILocation(line: 2025, column: 20, scope: !11335)
!11341 = !DILocation(line: 2025, column: 4, scope: !11335)
!11342 = !DILocation(line: 2024, column: 3, scope: !11335)
!11343 = !DILocation(line: 2024, column: 10, scope: !11335)
!11344 = !DILocation(line: 2024, column: 22, scope: !11335)
!11345 = !DILocalVariable(name: "_pos", scope: !11346, file: !1, line: 2027, type: !5)
!11346 = distinct !DILexicalBlock(scope: !11347, file: !1, line: 2027, column: 6)
!11347 = distinct !DILexicalBlock(scope: !11248, file: !1, line: 2027, column: 6)
!11348 = !DILocation(line: 2027, column: 6, scope: !11346)
!11349 = !DILocalVariable(name: "_len", scope: !11346, file: !1, line: 2027, type: !5)
!11350 = !DILocation(line: 2027, column: 6, scope: !11347)
!11351 = !DILocation(line: 2027, column: 6, scope: !11248)
!11352 = !DILocation(line: 2031, column: 20, scope: !11347)
!11353 = !DILocation(line: 2031, column: 4, scope: !11347)
!11354 = !DILocation(line: 2030, column: 3, scope: !11347)
!11355 = !DILocation(line: 2030, column: 10, scope: !11347)
!11356 = !DILocation(line: 2030, column: 24, scope: !11347)
!11357 = !DILocalVariable(name: "_pos", scope: !11358, file: !1, line: 2033, type: !5)
!11358 = distinct !DILexicalBlock(scope: !11359, file: !1, line: 2033, column: 6)
!11359 = distinct !DILexicalBlock(scope: !11248, file: !1, line: 2033, column: 6)
!11360 = !DILocation(line: 2033, column: 6, scope: !11358)
!11361 = !DILocalVariable(name: "_len", scope: !11358, file: !1, line: 2033, type: !5)
!11362 = !DILocation(line: 2033, column: 6, scope: !11359)
!11363 = !DILocation(line: 2033, column: 6, scope: !11248)
!11364 = !DILocation(line: 2037, column: 20, scope: !11359)
!11365 = !DILocation(line: 2037, column: 4, scope: !11359)
!11366 = !DILocation(line: 2036, column: 3, scope: !11359)
!11367 = !DILocation(line: 2036, column: 10, scope: !11359)
!11368 = !DILocation(line: 2036, column: 24, scope: !11359)
!11369 = !DILocalVariable(name: "_pos", scope: !11370, file: !1, line: 2039, type: !5)
!11370 = distinct !DILexicalBlock(scope: !11371, file: !1, line: 2039, column: 6)
!11371 = distinct !DILexicalBlock(scope: !11248, file: !1, line: 2039, column: 6)
!11372 = !DILocation(line: 2039, column: 6, scope: !11370)
!11373 = !DILocalVariable(name: "_len", scope: !11370, file: !1, line: 2039, type: !5)
!11374 = !DILocation(line: 2039, column: 6, scope: !11371)
!11375 = !DILocation(line: 2039, column: 6, scope: !11248)
!11376 = !DILocation(line: 2043, column: 20, scope: !11371)
!11377 = !DILocation(line: 2043, column: 4, scope: !11371)
!11378 = !DILocation(line: 2042, column: 3, scope: !11371)
!11379 = !DILocation(line: 2042, column: 10, scope: !11371)
!11380 = !DILocation(line: 2042, column: 23, scope: !11371)
!11381 = !DILocalVariable(name: "_pos", scope: !11382, file: !1, line: 2045, type: !5)
!11382 = distinct !DILexicalBlock(scope: !11383, file: !1, line: 2045, column: 6)
!11383 = distinct !DILexicalBlock(scope: !11248, file: !1, line: 2045, column: 6)
!11384 = !DILocation(line: 2045, column: 6, scope: !11382)
!11385 = !DILocalVariable(name: "_len", scope: !11382, file: !1, line: 2045, type: !5)
!11386 = !DILocation(line: 2045, column: 6, scope: !11383)
!11387 = !DILocation(line: 2045, column: 6, scope: !11248)
!11388 = !DILocation(line: 2049, column: 20, scope: !11383)
!11389 = !DILocation(line: 2049, column: 4, scope: !11383)
!11390 = !DILocation(line: 2048, column: 3, scope: !11383)
!11391 = !DILocation(line: 2048, column: 10, scope: !11383)
!11392 = !DILocation(line: 2048, column: 24, scope: !11383)
!11393 = !DILocalVariable(name: "_pos", scope: !11394, file: !1, line: 2051, type: !5)
!11394 = distinct !DILexicalBlock(scope: !11395, file: !1, line: 2051, column: 6)
!11395 = distinct !DILexicalBlock(scope: !11248, file: !1, line: 2051, column: 6)
!11396 = !DILocation(line: 2051, column: 6, scope: !11394)
!11397 = !DILocalVariable(name: "_len", scope: !11394, file: !1, line: 2051, type: !5)
!11398 = !DILocation(line: 2051, column: 6, scope: !11395)
!11399 = !DILocation(line: 2051, column: 6, scope: !11248)
!11400 = !DILocation(line: 2055, column: 20, scope: !11395)
!11401 = !DILocation(line: 2055, column: 4, scope: !11395)
!11402 = !DILocation(line: 2054, column: 3, scope: !11395)
!11403 = !DILocation(line: 2054, column: 10, scope: !11395)
!11404 = !DILocation(line: 2054, column: 29, scope: !11395)
!11405 = !DILocalVariable(name: "_pos", scope: !11406, file: !1, line: 2057, type: !5)
!11406 = distinct !DILexicalBlock(scope: !11407, file: !1, line: 2057, column: 6)
!11407 = distinct !DILexicalBlock(scope: !11248, file: !1, line: 2057, column: 6)
!11408 = !DILocation(line: 2057, column: 6, scope: !11406)
!11409 = !DILocalVariable(name: "_len", scope: !11406, file: !1, line: 2057, type: !5)
!11410 = !DILocation(line: 2057, column: 6, scope: !11407)
!11411 = !DILocation(line: 2057, column: 6, scope: !11248)
!11412 = !DILocation(line: 2061, column: 20, scope: !11407)
!11413 = !DILocation(line: 2061, column: 4, scope: !11407)
!11414 = !DILocation(line: 2060, column: 3, scope: !11407)
!11415 = !DILocation(line: 2060, column: 10, scope: !11407)
!11416 = !DILocation(line: 2060, column: 30, scope: !11407)
!11417 = !DILocalVariable(name: "_pos", scope: !11418, file: !1, line: 2063, type: !5)
!11418 = distinct !DILexicalBlock(scope: !11419, file: !1, line: 2063, column: 6)
!11419 = distinct !DILexicalBlock(scope: !11248, file: !1, line: 2063, column: 6)
!11420 = !DILocation(line: 2063, column: 6, scope: !11418)
!11421 = !DILocalVariable(name: "_len", scope: !11418, file: !1, line: 2063, type: !5)
!11422 = !DILocation(line: 2063, column: 6, scope: !11419)
!11423 = !DILocation(line: 2063, column: 6, scope: !11248)
!11424 = !DILocation(line: 2067, column: 20, scope: !11419)
!11425 = !DILocation(line: 2067, column: 4, scope: !11419)
!11426 = !DILocation(line: 2066, column: 3, scope: !11419)
!11427 = !DILocation(line: 2066, column: 10, scope: !11419)
!11428 = !DILocation(line: 2066, column: 30, scope: !11419)
!11429 = !DILocalVariable(name: "_pos", scope: !11430, file: !1, line: 2069, type: !5)
!11430 = distinct !DILexicalBlock(scope: !11431, file: !1, line: 2069, column: 6)
!11431 = distinct !DILexicalBlock(scope: !11248, file: !1, line: 2069, column: 6)
!11432 = !DILocation(line: 2069, column: 6, scope: !11430)
!11433 = !DILocalVariable(name: "_len", scope: !11430, file: !1, line: 2069, type: !5)
!11434 = !DILocation(line: 2069, column: 6, scope: !11431)
!11435 = !DILocation(line: 2069, column: 6, scope: !11248)
!11436 = !DILocation(line: 2073, column: 20, scope: !11431)
!11437 = !DILocation(line: 2073, column: 4, scope: !11431)
!11438 = !DILocation(line: 2072, column: 3, scope: !11431)
!11439 = !DILocation(line: 2072, column: 10, scope: !11431)
!11440 = !DILocation(line: 2072, column: 31, scope: !11431)
!11441 = !DILocalVariable(name: "_pos", scope: !11442, file: !1, line: 2075, type: !5)
!11442 = distinct !DILexicalBlock(scope: !11443, file: !1, line: 2075, column: 6)
!11443 = distinct !DILexicalBlock(scope: !11248, file: !1, line: 2075, column: 6)
!11444 = !DILocation(line: 2075, column: 6, scope: !11442)
!11445 = !DILocalVariable(name: "_len", scope: !11442, file: !1, line: 2075, type: !5)
!11446 = !DILocation(line: 2075, column: 6, scope: !11443)
!11447 = !DILocation(line: 2075, column: 6, scope: !11248)
!11448 = !DILocation(line: 2079, column: 20, scope: !11443)
!11449 = !DILocation(line: 2079, column: 4, scope: !11443)
!11450 = !DILocation(line: 2078, column: 3, scope: !11443)
!11451 = !DILocation(line: 2078, column: 10, scope: !11443)
!11452 = !DILocation(line: 2078, column: 31, scope: !11443)
!11453 = !DILocalVariable(name: "_pos", scope: !11454, file: !1, line: 2081, type: !5)
!11454 = distinct !DILexicalBlock(scope: !11455, file: !1, line: 2081, column: 6)
!11455 = distinct !DILexicalBlock(scope: !11248, file: !1, line: 2081, column: 6)
!11456 = !DILocation(line: 2081, column: 6, scope: !11454)
!11457 = !DILocalVariable(name: "_len", scope: !11454, file: !1, line: 2081, type: !5)
!11458 = !DILocation(line: 2081, column: 6, scope: !11455)
!11459 = !DILocation(line: 2081, column: 6, scope: !11248)
!11460 = !DILocation(line: 2085, column: 20, scope: !11455)
!11461 = !DILocation(line: 2085, column: 4, scope: !11455)
!11462 = !DILocation(line: 2084, column: 3, scope: !11455)
!11463 = !DILocation(line: 2084, column: 10, scope: !11455)
!11464 = !DILocation(line: 2084, column: 28, scope: !11455)
!11465 = !DILocalVariable(name: "_pos", scope: !11466, file: !1, line: 2087, type: !5)
!11466 = distinct !DILexicalBlock(scope: !11467, file: !1, line: 2087, column: 6)
!11467 = distinct !DILexicalBlock(scope: !11248, file: !1, line: 2087, column: 6)
!11468 = !DILocation(line: 2087, column: 6, scope: !11466)
!11469 = !DILocalVariable(name: "_len", scope: !11466, file: !1, line: 2087, type: !5)
!11470 = !DILocation(line: 2087, column: 6, scope: !11467)
!11471 = !DILocation(line: 2087, column: 6, scope: !11248)
!11472 = !DILocation(line: 2091, column: 20, scope: !11467)
!11473 = !DILocation(line: 2091, column: 4, scope: !11467)
!11474 = !DILocation(line: 2090, column: 3, scope: !11467)
!11475 = !DILocation(line: 2090, column: 10, scope: !11467)
!11476 = !DILocation(line: 2090, column: 24, scope: !11467)
!11477 = !DILocalVariable(name: "_pos", scope: !11478, file: !1, line: 2093, type: !5)
!11478 = distinct !DILexicalBlock(scope: !11479, file: !1, line: 2093, column: 6)
!11479 = distinct !DILexicalBlock(scope: !11248, file: !1, line: 2093, column: 6)
!11480 = !DILocation(line: 2093, column: 6, scope: !11478)
!11481 = !DILocalVariable(name: "_len", scope: !11478, file: !1, line: 2093, type: !5)
!11482 = !DILocation(line: 2093, column: 6, scope: !11479)
!11483 = !DILocation(line: 2093, column: 6, scope: !11248)
!11484 = !DILocation(line: 2097, column: 20, scope: !11479)
!11485 = !DILocation(line: 2097, column: 4, scope: !11479)
!11486 = !DILocation(line: 2096, column: 3, scope: !11479)
!11487 = !DILocation(line: 2096, column: 10, scope: !11479)
!11488 = !DILocation(line: 2096, column: 27, scope: !11479)
!11489 = !DILocalVariable(name: "_pos", scope: !11490, file: !1, line: 2099, type: !5)
!11490 = distinct !DILexicalBlock(scope: !11491, file: !1, line: 2099, column: 6)
!11491 = distinct !DILexicalBlock(scope: !11248, file: !1, line: 2099, column: 6)
!11492 = !DILocation(line: 2099, column: 6, scope: !11490)
!11493 = !DILocalVariable(name: "_len", scope: !11490, file: !1, line: 2099, type: !5)
!11494 = !DILocation(line: 2099, column: 6, scope: !11491)
!11495 = !DILocation(line: 2099, column: 6, scope: !11248)
!11496 = !DILocation(line: 2103, column: 20, scope: !11491)
!11497 = !DILocation(line: 2103, column: 4, scope: !11491)
!11498 = !DILocation(line: 2102, column: 3, scope: !11491)
!11499 = !DILocation(line: 2102, column: 10, scope: !11491)
!11500 = !DILocation(line: 2102, column: 24, scope: !11491)
!11501 = !DILocalVariable(name: "_pos", scope: !11502, file: !1, line: 2105, type: !5)
!11502 = distinct !DILexicalBlock(scope: !11503, file: !1, line: 2105, column: 6)
!11503 = distinct !DILexicalBlock(scope: !11248, file: !1, line: 2105, column: 6)
!11504 = !DILocation(line: 2105, column: 6, scope: !11502)
!11505 = !DILocalVariable(name: "_len", scope: !11502, file: !1, line: 2105, type: !5)
!11506 = !DILocation(line: 2105, column: 6, scope: !11503)
!11507 = !DILocation(line: 2105, column: 6, scope: !11248)
!11508 = !DILocation(line: 2109, column: 20, scope: !11503)
!11509 = !DILocation(line: 2109, column: 4, scope: !11503)
!11510 = !DILocation(line: 2108, column: 3, scope: !11503)
!11511 = !DILocation(line: 2108, column: 10, scope: !11503)
!11512 = !DILocation(line: 2108, column: 25, scope: !11503)
!11513 = !DILocalVariable(name: "_pos", scope: !11514, file: !1, line: 2111, type: !5)
!11514 = distinct !DILexicalBlock(scope: !11515, file: !1, line: 2111, column: 6)
!11515 = distinct !DILexicalBlock(scope: !11248, file: !1, line: 2111, column: 6)
!11516 = !DILocation(line: 2111, column: 6, scope: !11514)
!11517 = !DILocalVariable(name: "_len", scope: !11514, file: !1, line: 2111, type: !5)
!11518 = !DILocation(line: 2111, column: 6, scope: !11515)
!11519 = !DILocation(line: 2111, column: 6, scope: !11248)
!11520 = !DILocation(line: 2115, column: 20, scope: !11515)
!11521 = !DILocation(line: 2115, column: 4, scope: !11515)
!11522 = !DILocation(line: 2114, column: 3, scope: !11515)
!11523 = !DILocation(line: 2114, column: 10, scope: !11515)
!11524 = !DILocation(line: 2114, column: 26, scope: !11515)
!11525 = !DILocalVariable(name: "_pos", scope: !11526, file: !1, line: 2117, type: !5)
!11526 = distinct !DILexicalBlock(scope: !11527, file: !1, line: 2117, column: 6)
!11527 = distinct !DILexicalBlock(scope: !11248, file: !1, line: 2117, column: 6)
!11528 = !DILocation(line: 2117, column: 6, scope: !11526)
!11529 = !DILocalVariable(name: "_len", scope: !11526, file: !1, line: 2117, type: !5)
!11530 = !DILocation(line: 2117, column: 6, scope: !11527)
!11531 = !DILocation(line: 2117, column: 6, scope: !11248)
!11532 = !DILocation(line: 2121, column: 20, scope: !11527)
!11533 = !DILocation(line: 2121, column: 4, scope: !11527)
!11534 = !DILocation(line: 2120, column: 3, scope: !11527)
!11535 = !DILocation(line: 2120, column: 10, scope: !11527)
!11536 = !DILocation(line: 2120, column: 26, scope: !11527)
!11537 = !DILocation(line: 2122, column: 1, scope: !11248)
!11538 = distinct !DISubprogram(name: "xlgmac_read_mmc_stats", scope: !1, file: !1, line: 2124, type: !7567, scopeLine: 2125, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1619)
!11539 = !DILocalVariable(name: "pdata", arg: 1, scope: !11538, file: !1, line: 2124, type: !7555)
!11540 = !DILocation(line: 2124, column: 56, scope: !11538)
!11541 = !DILocalVariable(name: "stats", scope: !11538, file: !1, line: 2126, type: !11027)
!11542 = !DILocation(line: 2126, column: 23, scope: !11538)
!11543 = !DILocation(line: 2126, column: 32, scope: !11538)
!11544 = !DILocation(line: 2126, column: 39, scope: !11538)
!11545 = !DILocalVariable(name: "regval", scope: !11538, file: !1, line: 2127, type: !1021)
!11546 = !DILocation(line: 2127, column: 6, scope: !11538)
!11547 = !DILocation(line: 2130, column: 17, scope: !11538)
!11548 = !DILocation(line: 2130, column: 24, scope: !11538)
!11549 = !DILocation(line: 2130, column: 33, scope: !11538)
!11550 = !DILocation(line: 2130, column: 11, scope: !11538)
!11551 = !DILocation(line: 2130, column: 9, scope: !11538)
!11552 = !DILocalVariable(name: "_var", scope: !11553, file: !1, line: 2131, type: !1021)
!11553 = distinct !DILexicalBlock(scope: !11538, file: !1, line: 2131, column: 11)
!11554 = !DILocation(line: 2131, column: 11, scope: !11553)
!11555 = !DILocalVariable(name: "_pos", scope: !11553, file: !1, line: 2131, type: !5)
!11556 = !DILocalVariable(name: "_len", scope: !11553, file: !1, line: 2131, type: !5)
!11557 = !DILocalVariable(name: "_val", scope: !11553, file: !1, line: 2131, type: !5)
!11558 = !DILocation(line: 2131, column: 9, scope: !11538)
!11559 = !DILocation(line: 2133, column: 9, scope: !11538)
!11560 = !DILocation(line: 2133, column: 17, scope: !11538)
!11561 = !DILocation(line: 2133, column: 24, scope: !11538)
!11562 = !DILocation(line: 2133, column: 33, scope: !11538)
!11563 = !DILocation(line: 2133, column: 2, scope: !11538)
!11564 = !DILocation(line: 2136, column: 19, scope: !11538)
!11565 = !DILocation(line: 2136, column: 3, scope: !11538)
!11566 = !DILocation(line: 2135, column: 2, scope: !11538)
!11567 = !DILocation(line: 2135, column: 9, scope: !11538)
!11568 = !DILocation(line: 2135, column: 25, scope: !11538)
!11569 = !DILocation(line: 2139, column: 19, scope: !11538)
!11570 = !DILocation(line: 2139, column: 3, scope: !11538)
!11571 = !DILocation(line: 2138, column: 2, scope: !11538)
!11572 = !DILocation(line: 2138, column: 9, scope: !11538)
!11573 = !DILocation(line: 2138, column: 25, scope: !11538)
!11574 = !DILocation(line: 2142, column: 19, scope: !11538)
!11575 = !DILocation(line: 2142, column: 3, scope: !11538)
!11576 = !DILocation(line: 2141, column: 2, scope: !11538)
!11577 = !DILocation(line: 2141, column: 9, scope: !11538)
!11578 = !DILocation(line: 2141, column: 29, scope: !11538)
!11579 = !DILocation(line: 2145, column: 19, scope: !11538)
!11580 = !DILocation(line: 2145, column: 3, scope: !11538)
!11581 = !DILocation(line: 2144, column: 2, scope: !11538)
!11582 = !DILocation(line: 2144, column: 9, scope: !11538)
!11583 = !DILocation(line: 2144, column: 29, scope: !11538)
!11584 = !DILocation(line: 2148, column: 19, scope: !11538)
!11585 = !DILocation(line: 2148, column: 3, scope: !11538)
!11586 = !DILocation(line: 2147, column: 2, scope: !11538)
!11587 = !DILocation(line: 2147, column: 9, scope: !11538)
!11588 = !DILocation(line: 2147, column: 23, scope: !11538)
!11589 = !DILocation(line: 2151, column: 19, scope: !11538)
!11590 = !DILocation(line: 2151, column: 3, scope: !11538)
!11591 = !DILocation(line: 2150, column: 2, scope: !11538)
!11592 = !DILocation(line: 2150, column: 9, scope: !11538)
!11593 = !DILocation(line: 2150, column: 28, scope: !11538)
!11594 = !DILocation(line: 2154, column: 19, scope: !11538)
!11595 = !DILocation(line: 2154, column: 3, scope: !11538)
!11596 = !DILocation(line: 2153, column: 2, scope: !11538)
!11597 = !DILocation(line: 2153, column: 9, scope: !11538)
!11598 = !DILocation(line: 2153, column: 29, scope: !11538)
!11599 = !DILocation(line: 2157, column: 19, scope: !11538)
!11600 = !DILocation(line: 2157, column: 3, scope: !11538)
!11601 = !DILocation(line: 2156, column: 2, scope: !11538)
!11602 = !DILocation(line: 2156, column: 9, scope: !11538)
!11603 = !DILocation(line: 2156, column: 29, scope: !11538)
!11604 = !DILocation(line: 2160, column: 19, scope: !11538)
!11605 = !DILocation(line: 2160, column: 3, scope: !11538)
!11606 = !DILocation(line: 2159, column: 2, scope: !11538)
!11607 = !DILocation(line: 2159, column: 9, scope: !11538)
!11608 = !DILocation(line: 2159, column: 30, scope: !11538)
!11609 = !DILocation(line: 2163, column: 19, scope: !11538)
!11610 = !DILocation(line: 2163, column: 3, scope: !11538)
!11611 = !DILocation(line: 2162, column: 2, scope: !11538)
!11612 = !DILocation(line: 2162, column: 9, scope: !11538)
!11613 = !DILocation(line: 2162, column: 30, scope: !11538)
!11614 = !DILocation(line: 2166, column: 19, scope: !11538)
!11615 = !DILocation(line: 2166, column: 3, scope: !11538)
!11616 = !DILocation(line: 2165, column: 2, scope: !11538)
!11617 = !DILocation(line: 2165, column: 9, scope: !11538)
!11618 = !DILocation(line: 2165, column: 28, scope: !11538)
!11619 = !DILocation(line: 2169, column: 19, scope: !11538)
!11620 = !DILocation(line: 2169, column: 3, scope: !11538)
!11621 = !DILocation(line: 2168, column: 2, scope: !11538)
!11622 = !DILocation(line: 2168, column: 9, scope: !11538)
!11623 = !DILocation(line: 2168, column: 30, scope: !11538)
!11624 = !DILocation(line: 2172, column: 19, scope: !11538)
!11625 = !DILocation(line: 2172, column: 3, scope: !11538)
!11626 = !DILocation(line: 2171, column: 2, scope: !11538)
!11627 = !DILocation(line: 2171, column: 9, scope: !11538)
!11628 = !DILocation(line: 2171, column: 29, scope: !11538)
!11629 = !DILocation(line: 2175, column: 19, scope: !11538)
!11630 = !DILocation(line: 2175, column: 3, scope: !11538)
!11631 = !DILocation(line: 2174, column: 2, scope: !11538)
!11632 = !DILocation(line: 2174, column: 9, scope: !11538)
!11633 = !DILocation(line: 2174, column: 26, scope: !11538)
!11634 = !DILocation(line: 2178, column: 19, scope: !11538)
!11635 = !DILocation(line: 2178, column: 3, scope: !11538)
!11636 = !DILocation(line: 2177, column: 2, scope: !11538)
!11637 = !DILocation(line: 2177, column: 9, scope: !11538)
!11638 = !DILocation(line: 2177, column: 24, scope: !11538)
!11639 = !DILocation(line: 2181, column: 19, scope: !11538)
!11640 = !DILocation(line: 2181, column: 3, scope: !11538)
!11641 = !DILocation(line: 2180, column: 2, scope: !11538)
!11642 = !DILocation(line: 2180, column: 9, scope: !11538)
!11643 = !DILocation(line: 2180, column: 24, scope: !11538)
!11644 = !DILocation(line: 2184, column: 19, scope: !11538)
!11645 = !DILocation(line: 2184, column: 3, scope: !11538)
!11646 = !DILocation(line: 2183, column: 2, scope: !11538)
!11647 = !DILocation(line: 2183, column: 9, scope: !11538)
!11648 = !DILocation(line: 2183, column: 23, scope: !11538)
!11649 = !DILocation(line: 2187, column: 19, scope: !11538)
!11650 = !DILocation(line: 2187, column: 3, scope: !11538)
!11651 = !DILocation(line: 2186, column: 2, scope: !11538)
!11652 = !DILocation(line: 2186, column: 9, scope: !11538)
!11653 = !DILocation(line: 2186, column: 24, scope: !11538)
!11654 = !DILocation(line: 2190, column: 19, scope: !11538)
!11655 = !DILocation(line: 2190, column: 3, scope: !11538)
!11656 = !DILocation(line: 2189, column: 2, scope: !11538)
!11657 = !DILocation(line: 2189, column: 9, scope: !11538)
!11658 = !DILocation(line: 2189, column: 25, scope: !11538)
!11659 = !DILocation(line: 2193, column: 19, scope: !11538)
!11660 = !DILocation(line: 2193, column: 3, scope: !11538)
!11661 = !DILocation(line: 2192, column: 2, scope: !11538)
!11662 = !DILocation(line: 2192, column: 9, scope: !11538)
!11663 = !DILocation(line: 2192, column: 25, scope: !11538)
!11664 = !DILocation(line: 2196, column: 19, scope: !11538)
!11665 = !DILocation(line: 2196, column: 3, scope: !11538)
!11666 = !DILocation(line: 2195, column: 2, scope: !11538)
!11667 = !DILocation(line: 2195, column: 9, scope: !11538)
!11668 = !DILocation(line: 2195, column: 24, scope: !11538)
!11669 = !DILocation(line: 2199, column: 19, scope: !11538)
!11670 = !DILocation(line: 2199, column: 3, scope: !11538)
!11671 = !DILocation(line: 2198, column: 2, scope: !11538)
!11672 = !DILocation(line: 2198, column: 9, scope: !11538)
!11673 = !DILocation(line: 2198, column: 29, scope: !11538)
!11674 = !DILocation(line: 2202, column: 19, scope: !11538)
!11675 = !DILocation(line: 2202, column: 3, scope: !11538)
!11676 = !DILocation(line: 2201, column: 2, scope: !11538)
!11677 = !DILocation(line: 2201, column: 9, scope: !11538)
!11678 = !DILocation(line: 2201, column: 29, scope: !11538)
!11679 = !DILocation(line: 2205, column: 19, scope: !11538)
!11680 = !DILocation(line: 2205, column: 3, scope: !11538)
!11681 = !DILocation(line: 2204, column: 2, scope: !11538)
!11682 = !DILocation(line: 2204, column: 9, scope: !11538)
!11683 = !DILocation(line: 2204, column: 20, scope: !11538)
!11684 = !DILocation(line: 2208, column: 19, scope: !11538)
!11685 = !DILocation(line: 2208, column: 3, scope: !11538)
!11686 = !DILocation(line: 2207, column: 2, scope: !11538)
!11687 = !DILocation(line: 2207, column: 9, scope: !11538)
!11688 = !DILocation(line: 2207, column: 21, scope: !11538)
!11689 = !DILocation(line: 2211, column: 19, scope: !11538)
!11690 = !DILocation(line: 2211, column: 3, scope: !11538)
!11691 = !DILocation(line: 2210, column: 2, scope: !11538)
!11692 = !DILocation(line: 2210, column: 9, scope: !11538)
!11693 = !DILocation(line: 2210, column: 23, scope: !11538)
!11694 = !DILocation(line: 2214, column: 19, scope: !11538)
!11695 = !DILocation(line: 2214, column: 3, scope: !11538)
!11696 = !DILocation(line: 2213, column: 2, scope: !11538)
!11697 = !DILocation(line: 2213, column: 9, scope: !11538)
!11698 = !DILocation(line: 2213, column: 23, scope: !11538)
!11699 = !DILocation(line: 2217, column: 19, scope: !11538)
!11700 = !DILocation(line: 2217, column: 3, scope: !11538)
!11701 = !DILocation(line: 2216, column: 2, scope: !11538)
!11702 = !DILocation(line: 2216, column: 9, scope: !11538)
!11703 = !DILocation(line: 2216, column: 22, scope: !11538)
!11704 = !DILocation(line: 2220, column: 19, scope: !11538)
!11705 = !DILocation(line: 2220, column: 3, scope: !11538)
!11706 = !DILocation(line: 2219, column: 2, scope: !11538)
!11707 = !DILocation(line: 2219, column: 9, scope: !11538)
!11708 = !DILocation(line: 2219, column: 23, scope: !11538)
!11709 = !DILocation(line: 2223, column: 19, scope: !11538)
!11710 = !DILocation(line: 2223, column: 3, scope: !11538)
!11711 = !DILocation(line: 2222, column: 2, scope: !11538)
!11712 = !DILocation(line: 2222, column: 9, scope: !11538)
!11713 = !DILocation(line: 2222, column: 28, scope: !11538)
!11714 = !DILocation(line: 2226, column: 19, scope: !11538)
!11715 = !DILocation(line: 2226, column: 3, scope: !11538)
!11716 = !DILocation(line: 2225, column: 2, scope: !11538)
!11717 = !DILocation(line: 2225, column: 9, scope: !11538)
!11718 = !DILocation(line: 2225, column: 29, scope: !11538)
!11719 = !DILocation(line: 2229, column: 19, scope: !11538)
!11720 = !DILocation(line: 2229, column: 3, scope: !11538)
!11721 = !DILocation(line: 2228, column: 2, scope: !11538)
!11722 = !DILocation(line: 2228, column: 9, scope: !11538)
!11723 = !DILocation(line: 2228, column: 29, scope: !11538)
!11724 = !DILocation(line: 2232, column: 19, scope: !11538)
!11725 = !DILocation(line: 2232, column: 3, scope: !11538)
!11726 = !DILocation(line: 2231, column: 2, scope: !11538)
!11727 = !DILocation(line: 2231, column: 9, scope: !11538)
!11728 = !DILocation(line: 2231, column: 30, scope: !11538)
!11729 = !DILocation(line: 2235, column: 19, scope: !11538)
!11730 = !DILocation(line: 2235, column: 3, scope: !11538)
!11731 = !DILocation(line: 2234, column: 2, scope: !11538)
!11732 = !DILocation(line: 2234, column: 9, scope: !11538)
!11733 = !DILocation(line: 2234, column: 30, scope: !11538)
!11734 = !DILocation(line: 2238, column: 19, scope: !11538)
!11735 = !DILocation(line: 2238, column: 3, scope: !11538)
!11736 = !DILocation(line: 2237, column: 2, scope: !11538)
!11737 = !DILocation(line: 2237, column: 9, scope: !11538)
!11738 = !DILocation(line: 2237, column: 27, scope: !11538)
!11739 = !DILocation(line: 2241, column: 19, scope: !11538)
!11740 = !DILocation(line: 2241, column: 3, scope: !11538)
!11741 = !DILocation(line: 2240, column: 2, scope: !11538)
!11742 = !DILocation(line: 2240, column: 9, scope: !11538)
!11743 = !DILocation(line: 2240, column: 23, scope: !11538)
!11744 = !DILocation(line: 2244, column: 19, scope: !11538)
!11745 = !DILocation(line: 2244, column: 3, scope: !11538)
!11746 = !DILocation(line: 2243, column: 2, scope: !11538)
!11747 = !DILocation(line: 2243, column: 9, scope: !11538)
!11748 = !DILocation(line: 2243, column: 26, scope: !11538)
!11749 = !DILocation(line: 2247, column: 19, scope: !11538)
!11750 = !DILocation(line: 2247, column: 3, scope: !11538)
!11751 = !DILocation(line: 2246, column: 2, scope: !11538)
!11752 = !DILocation(line: 2246, column: 9, scope: !11538)
!11753 = !DILocation(line: 2246, column: 23, scope: !11538)
!11754 = !DILocation(line: 2250, column: 19, scope: !11538)
!11755 = !DILocation(line: 2250, column: 3, scope: !11538)
!11756 = !DILocation(line: 2249, column: 2, scope: !11538)
!11757 = !DILocation(line: 2249, column: 9, scope: !11538)
!11758 = !DILocation(line: 2249, column: 24, scope: !11538)
!11759 = !DILocation(line: 2253, column: 19, scope: !11538)
!11760 = !DILocation(line: 2253, column: 3, scope: !11538)
!11761 = !DILocation(line: 2252, column: 2, scope: !11538)
!11762 = !DILocation(line: 2252, column: 9, scope: !11538)
!11763 = !DILocation(line: 2252, column: 25, scope: !11538)
!11764 = !DILocation(line: 2256, column: 19, scope: !11538)
!11765 = !DILocation(line: 2256, column: 3, scope: !11538)
!11766 = !DILocation(line: 2255, column: 2, scope: !11538)
!11767 = !DILocation(line: 2255, column: 9, scope: !11538)
!11768 = !DILocation(line: 2255, column: 25, scope: !11538)
!11769 = !DILocation(line: 2259, column: 17, scope: !11538)
!11770 = !DILocation(line: 2259, column: 24, scope: !11538)
!11771 = !DILocation(line: 2259, column: 33, scope: !11538)
!11772 = !DILocation(line: 2259, column: 11, scope: !11538)
!11773 = !DILocation(line: 2259, column: 9, scope: !11538)
!11774 = !DILocalVariable(name: "_var", scope: !11775, file: !1, line: 2260, type: !1021)
!11775 = distinct !DILexicalBlock(scope: !11538, file: !1, line: 2260, column: 11)
!11776 = !DILocation(line: 2260, column: 11, scope: !11775)
!11777 = !DILocalVariable(name: "_pos", scope: !11775, file: !1, line: 2260, type: !5)
!11778 = !DILocalVariable(name: "_len", scope: !11775, file: !1, line: 2260, type: !5)
!11779 = !DILocalVariable(name: "_val", scope: !11775, file: !1, line: 2260, type: !5)
!11780 = !DILocation(line: 2260, column: 9, scope: !11538)
!11781 = !DILocation(line: 2262, column: 9, scope: !11538)
!11782 = !DILocation(line: 2262, column: 17, scope: !11538)
!11783 = !DILocation(line: 2262, column: 24, scope: !11538)
!11784 = !DILocation(line: 2262, column: 33, scope: !11538)
!11785 = !DILocation(line: 2262, column: 2, scope: !11538)
!11786 = !DILocation(line: 2263, column: 1, scope: !11538)
!11787 = distinct !DISubprogram(name: "xlgmac_enable_rss", scope: !1, file: !1, line: 2384, type: !7553, scopeLine: 2385, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1619)
!11788 = !DILocalVariable(name: "pdata", arg: 1, scope: !11787, file: !1, line: 2384, type: !7555)
!11789 = !DILocation(line: 2384, column: 51, scope: !11787)
!11790 = !DILocalVariable(name: "regval", scope: !11787, file: !1, line: 2386, type: !1021)
!11791 = !DILocation(line: 2386, column: 6, scope: !11787)
!11792 = !DILocalVariable(name: "ret", scope: !11787, file: !1, line: 2387, type: !5)
!11793 = !DILocation(line: 2387, column: 6, scope: !11787)
!11794 = !DILocation(line: 2389, column: 7, scope: !11795)
!11795 = distinct !DILexicalBlock(scope: !11787, file: !1, line: 2389, column: 6)
!11796 = !DILocation(line: 2389, column: 14, scope: !11795)
!11797 = !DILocation(line: 2389, column: 22, scope: !11795)
!11798 = !DILocation(line: 2389, column: 6, scope: !11787)
!11799 = !DILocation(line: 2390, column: 3, scope: !11795)
!11800 = !DILocation(line: 2393, column: 34, scope: !11787)
!11801 = !DILocation(line: 2393, column: 8, scope: !11787)
!11802 = !DILocation(line: 2393, column: 6, scope: !11787)
!11803 = !DILocation(line: 2394, column: 6, scope: !11804)
!11804 = distinct !DILexicalBlock(scope: !11787, file: !1, line: 2394, column: 6)
!11805 = !DILocation(line: 2394, column: 6, scope: !11787)
!11806 = !DILocation(line: 2395, column: 10, scope: !11804)
!11807 = !DILocation(line: 2395, column: 3, scope: !11804)
!11808 = !DILocation(line: 2398, column: 38, scope: !11787)
!11809 = !DILocation(line: 2398, column: 8, scope: !11787)
!11810 = !DILocation(line: 2398, column: 6, scope: !11787)
!11811 = !DILocation(line: 2399, column: 6, scope: !11812)
!11812 = distinct !DILexicalBlock(scope: !11787, file: !1, line: 2399, column: 6)
!11813 = !DILocation(line: 2399, column: 6, scope: !11787)
!11814 = !DILocation(line: 2400, column: 10, scope: !11812)
!11815 = !DILocation(line: 2400, column: 3, scope: !11812)
!11816 = !DILocation(line: 2403, column: 9, scope: !11787)
!11817 = !DILocation(line: 2403, column: 16, scope: !11787)
!11818 = !DILocation(line: 2403, column: 29, scope: !11787)
!11819 = !DILocation(line: 2403, column: 36, scope: !11787)
!11820 = !DILocation(line: 2403, column: 45, scope: !11787)
!11821 = !DILocation(line: 2403, column: 2, scope: !11787)
!11822 = !DILocation(line: 2406, column: 17, scope: !11787)
!11823 = !DILocation(line: 2406, column: 24, scope: !11787)
!11824 = !DILocation(line: 2406, column: 33, scope: !11787)
!11825 = !DILocation(line: 2406, column: 11, scope: !11787)
!11826 = !DILocation(line: 2406, column: 9, scope: !11787)
!11827 = !DILocalVariable(name: "_var", scope: !11828, file: !1, line: 2407, type: !1021)
!11828 = distinct !DILexicalBlock(scope: !11787, file: !1, line: 2407, column: 11)
!11829 = !DILocation(line: 2407, column: 11, scope: !11828)
!11830 = !DILocalVariable(name: "_pos", scope: !11828, file: !1, line: 2407, type: !5)
!11831 = !DILocalVariable(name: "_len", scope: !11828, file: !1, line: 2407, type: !5)
!11832 = !DILocalVariable(name: "_val", scope: !11828, file: !1, line: 2407, type: !5)
!11833 = !DILocation(line: 2407, column: 9, scope: !11787)
!11834 = !DILocation(line: 2409, column: 9, scope: !11787)
!11835 = !DILocation(line: 2409, column: 17, scope: !11787)
!11836 = !DILocation(line: 2409, column: 24, scope: !11787)
!11837 = !DILocation(line: 2409, column: 33, scope: !11787)
!11838 = !DILocation(line: 2409, column: 2, scope: !11787)
!11839 = !DILocation(line: 2411, column: 2, scope: !11787)
!11840 = !DILocation(line: 2412, column: 1, scope: !11787)
!11841 = distinct !DISubprogram(name: "xlgmac_disable_rss", scope: !1, file: !1, line: 2414, type: !7553, scopeLine: 2415, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1619)
!11842 = !DILocalVariable(name: "pdata", arg: 1, scope: !11841, file: !1, line: 2414, type: !7555)
!11843 = !DILocation(line: 2414, column: 52, scope: !11841)
!11844 = !DILocalVariable(name: "regval", scope: !11841, file: !1, line: 2416, type: !1021)
!11845 = !DILocation(line: 2416, column: 6, scope: !11841)
!11846 = !DILocation(line: 2418, column: 7, scope: !11847)
!11847 = distinct !DILexicalBlock(scope: !11841, file: !1, line: 2418, column: 6)
!11848 = !DILocation(line: 2418, column: 14, scope: !11847)
!11849 = !DILocation(line: 2418, column: 22, scope: !11847)
!11850 = !DILocation(line: 2418, column: 6, scope: !11841)
!11851 = !DILocation(line: 2419, column: 3, scope: !11847)
!11852 = !DILocation(line: 2421, column: 17, scope: !11841)
!11853 = !DILocation(line: 2421, column: 24, scope: !11841)
!11854 = !DILocation(line: 2421, column: 33, scope: !11841)
!11855 = !DILocation(line: 2421, column: 11, scope: !11841)
!11856 = !DILocation(line: 2421, column: 9, scope: !11841)
!11857 = !DILocalVariable(name: "_var", scope: !11858, file: !1, line: 2422, type: !1021)
!11858 = distinct !DILexicalBlock(scope: !11841, file: !1, line: 2422, column: 11)
!11859 = !DILocation(line: 2422, column: 11, scope: !11858)
!11860 = !DILocalVariable(name: "_pos", scope: !11858, file: !1, line: 2422, type: !5)
!11861 = !DILocalVariable(name: "_len", scope: !11858, file: !1, line: 2422, type: !5)
!11862 = !DILocalVariable(name: "_val", scope: !11858, file: !1, line: 2422, type: !5)
!11863 = !DILocation(line: 2422, column: 9, scope: !11841)
!11864 = !DILocation(line: 2424, column: 9, scope: !11841)
!11865 = !DILocation(line: 2424, column: 17, scope: !11841)
!11866 = !DILocation(line: 2424, column: 24, scope: !11841)
!11867 = !DILocation(line: 2424, column: 33, scope: !11841)
!11868 = !DILocation(line: 2424, column: 2, scope: !11841)
!11869 = !DILocation(line: 2426, column: 2, scope: !11841)
!11870 = !DILocation(line: 2427, column: 1, scope: !11841)
!11871 = distinct !DISubprogram(name: "xlgmac_set_rss_hash_key", scope: !1, file: !1, line: 2359, type: !7936, scopeLine: 2360, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1619)
!11872 = !DILocalVariable(name: "pdata", arg: 1, scope: !11871, file: !1, line: 2359, type: !7555)
!11873 = !DILocation(line: 2359, column: 57, scope: !11871)
!11874 = !DILocalVariable(name: "key", arg: 2, scope: !11871, file: !1, line: 2359, type: !5862)
!11875 = !DILocation(line: 2359, column: 74, scope: !11871)
!11876 = !DILocation(line: 2361, column: 9, scope: !11871)
!11877 = !DILocation(line: 2361, column: 16, scope: !11871)
!11878 = !DILocation(line: 2361, column: 2, scope: !11871)
!11879 = !DILocation(line: 2361, column: 25, scope: !11871)
!11880 = !DILocation(line: 2363, column: 35, scope: !11871)
!11881 = !DILocation(line: 2363, column: 9, scope: !11871)
!11882 = !DILocation(line: 2363, column: 2, scope: !11871)
!11883 = distinct !DISubprogram(name: "xlgmac_set_rss_lookup_table", scope: !1, file: !1, line: 2366, type: !7940, scopeLine: 2368, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1619)
!11884 = !DILocalVariable(name: "pdata", arg: 1, scope: !11883, file: !1, line: 2366, type: !7555)
!11885 = !DILocation(line: 2366, column: 61, scope: !11883)
!11886 = !DILocalVariable(name: "table", arg: 2, scope: !11883, file: !1, line: 2367, type: !5860)
!11887 = !DILocation(line: 2367, column: 23, scope: !11883)
!11888 = !DILocalVariable(name: "i", scope: !11883, file: !1, line: 2369, type: !11)
!11889 = !DILocation(line: 2369, column: 15, scope: !11883)
!11890 = !DILocalVariable(name: "tval", scope: !11883, file: !1, line: 2370, type: !1021)
!11891 = !DILocation(line: 2370, column: 6, scope: !11883)
!11892 = !DILocation(line: 2372, column: 9, scope: !11893)
!11893 = distinct !DILexicalBlock(scope: !11883, file: !1, line: 2372, column: 2)
!11894 = !DILocation(line: 2372, column: 7, scope: !11893)
!11895 = !DILocation(line: 2372, column: 14, scope: !11896)
!11896 = distinct !DILexicalBlock(scope: !11893, file: !1, line: 2372, column: 2)
!11897 = !DILocation(line: 2372, column: 16, scope: !11896)
!11898 = !DILocation(line: 2372, column: 2, scope: !11893)
!11899 = !DILocation(line: 2373, column: 10, scope: !11900)
!11900 = distinct !DILexicalBlock(scope: !11896, file: !1, line: 2372, column: 53)
!11901 = !DILocation(line: 2373, column: 16, scope: !11900)
!11902 = !DILocation(line: 2373, column: 8, scope: !11900)
!11903 = !DILocalVariable(name: "_var", scope: !11904, file: !1, line: 2374, type: !1021)
!11904 = distinct !DILexicalBlock(scope: !11900, file: !1, line: 2374, column: 25)
!11905 = !DILocation(line: 2374, column: 25, scope: !11904)
!11906 = !DILocalVariable(name: "_pos", scope: !11904, file: !1, line: 2374, type: !5)
!11907 = !DILocalVariable(name: "_len", scope: !11904, file: !1, line: 2374, type: !5)
!11908 = !DILocalVariable(name: "_val", scope: !11904, file: !1, line: 2374, type: !1021)
!11909 = !DILocation(line: 2374, column: 3, scope: !11900)
!11910 = !DILocation(line: 2374, column: 10, scope: !11900)
!11911 = !DILocation(line: 2374, column: 20, scope: !11900)
!11912 = !DILocation(line: 2374, column: 23, scope: !11900)
!11913 = !DILocation(line: 2379, column: 2, scope: !11900)
!11914 = !DILocation(line: 2372, column: 49, scope: !11896)
!11915 = !DILocation(line: 2372, column: 2, scope: !11896)
!11916 = distinct !{!11916, !11898, !11917}
!11917 = !DILocation(line: 2379, column: 2, scope: !11893)
!11918 = !DILocation(line: 2381, column: 39, scope: !11883)
!11919 = !DILocation(line: 2381, column: 9, scope: !11883)
!11920 = !DILocation(line: 2381, column: 2, scope: !11883)
!11921 = distinct !DISubprogram(name: "xlgmac_flush_tx_queues", scope: !1, file: !1, line: 2943, type: !7553, scopeLine: 2944, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1619)
!11922 = !DILocalVariable(name: "pdata", arg: 1, scope: !11921, file: !1, line: 2943, type: !7555)
!11923 = !DILocation(line: 2943, column: 56, scope: !11921)
!11924 = !DILocalVariable(name: "i", scope: !11921, file: !1, line: 2945, type: !11)
!11925 = !DILocation(line: 2945, column: 15, scope: !11921)
!11926 = !DILocalVariable(name: "count", scope: !11921, file: !1, line: 2945, type: !11)
!11927 = !DILocation(line: 2945, column: 18, scope: !11921)
!11928 = !DILocalVariable(name: "regval", scope: !11921, file: !1, line: 2946, type: !1021)
!11929 = !DILocation(line: 2946, column: 6, scope: !11921)
!11930 = !DILocation(line: 2948, column: 9, scope: !11931)
!11931 = distinct !DILexicalBlock(scope: !11921, file: !1, line: 2948, column: 2)
!11932 = !DILocation(line: 2948, column: 7, scope: !11931)
!11933 = !DILocation(line: 2948, column: 14, scope: !11934)
!11934 = distinct !DILexicalBlock(scope: !11931, file: !1, line: 2948, column: 2)
!11935 = !DILocation(line: 2948, column: 18, scope: !11934)
!11936 = !DILocation(line: 2948, column: 25, scope: !11934)
!11937 = !DILocation(line: 2948, column: 16, scope: !11934)
!11938 = !DILocation(line: 2948, column: 2, scope: !11931)
!11939 = !DILocation(line: 2949, column: 18, scope: !11940)
!11940 = distinct !DILexicalBlock(scope: !11934, file: !1, line: 2948, column: 42)
!11941 = !DILocation(line: 2949, column: 12, scope: !11940)
!11942 = !DILocation(line: 2949, column: 10, scope: !11940)
!11943 = !DILocalVariable(name: "_var", scope: !11944, file: !1, line: 2950, type: !1021)
!11944 = distinct !DILexicalBlock(scope: !11940, file: !1, line: 2950, column: 12)
!11945 = !DILocation(line: 2950, column: 12, scope: !11944)
!11946 = !DILocalVariable(name: "_pos", scope: !11944, file: !1, line: 2950, type: !5)
!11947 = !DILocalVariable(name: "_len", scope: !11944, file: !1, line: 2950, type: !5)
!11948 = !DILocalVariable(name: "_val", scope: !11944, file: !1, line: 2950, type: !5)
!11949 = !DILocation(line: 2950, column: 10, scope: !11940)
!11950 = !DILocation(line: 2952, column: 10, scope: !11940)
!11951 = !DILocation(line: 2952, column: 18, scope: !11940)
!11952 = !DILocation(line: 2952, column: 3, scope: !11940)
!11953 = !DILocation(line: 2953, column: 2, scope: !11940)
!11954 = !DILocation(line: 2948, column: 38, scope: !11934)
!11955 = !DILocation(line: 2948, column: 2, scope: !11934)
!11956 = distinct !{!11956, !11938, !11957}
!11957 = !DILocation(line: 2953, column: 2, scope: !11931)
!11958 = !DILocation(line: 2956, column: 9, scope: !11959)
!11959 = distinct !DILexicalBlock(scope: !11921, file: !1, line: 2956, column: 2)
!11960 = !DILocation(line: 2956, column: 7, scope: !11959)
!11961 = !DILocation(line: 2956, column: 14, scope: !11962)
!11962 = distinct !DILexicalBlock(scope: !11959, file: !1, line: 2956, column: 2)
!11963 = !DILocation(line: 2956, column: 18, scope: !11962)
!11964 = !DILocation(line: 2956, column: 25, scope: !11962)
!11965 = !DILocation(line: 2956, column: 16, scope: !11962)
!11966 = !DILocation(line: 2956, column: 2, scope: !11959)
!11967 = !DILocation(line: 2957, column: 9, scope: !11968)
!11968 = distinct !DILexicalBlock(scope: !11962, file: !1, line: 2956, column: 42)
!11969 = !DILocation(line: 2958, column: 18, scope: !11968)
!11970 = !DILocation(line: 2958, column: 12, scope: !11968)
!11971 = !DILocation(line: 2958, column: 10, scope: !11968)
!11972 = !DILocalVariable(name: "_pos", scope: !11973, file: !1, line: 2959, type: !5)
!11973 = distinct !DILexicalBlock(scope: !11968, file: !1, line: 2959, column: 12)
!11974 = !DILocation(line: 2959, column: 12, scope: !11973)
!11975 = !DILocalVariable(name: "_len", scope: !11973, file: !1, line: 2959, type: !5)
!11976 = !DILocation(line: 2959, column: 12, scope: !11968)
!11977 = !DILocation(line: 2959, column: 10, scope: !11968)
!11978 = !DILocation(line: 2961, column: 3, scope: !11968)
!11979 = !DILocation(line: 2961, column: 10, scope: !11968)
!11980 = !DILocation(line: 2961, column: 18, scope: !11968)
!11981 = !DILocation(line: 2961, column: 21, scope: !11968)
!11982 = !DILocation(line: 0, scope: !11968)
!11983 = !DILocation(line: 2962, column: 4, scope: !11968)
!11984 = distinct !{!11984, !11978, !11985}
!11985 = !DILocation(line: 2962, column: 25, scope: !11968)
!11986 = !DILocation(line: 2964, column: 8, scope: !11987)
!11987 = distinct !DILexicalBlock(scope: !11968, file: !1, line: 2964, column: 7)
!11988 = !DILocation(line: 2964, column: 7, scope: !11968)
!11989 = !DILocation(line: 2965, column: 4, scope: !11987)
!11990 = !DILocation(line: 2966, column: 2, scope: !11968)
!11991 = !DILocation(line: 2956, column: 38, scope: !11962)
!11992 = !DILocation(line: 2956, column: 2, scope: !11962)
!11993 = distinct !{!11993, !11966, !11994}
!11994 = !DILocation(line: 2966, column: 2, scope: !11959)
!11995 = !DILocation(line: 2968, column: 2, scope: !11921)
!11996 = !DILocation(line: 2969, column: 1, scope: !11921)
!11997 = distinct !DISubprogram(name: "xlgmac_config_dma_bus", scope: !1, file: !1, line: 2971, type: !7567, scopeLine: 2972, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1619)
!11998 = !DILocalVariable(name: "pdata", arg: 1, scope: !11997, file: !1, line: 2971, type: !7555)
!11999 = !DILocation(line: 2971, column: 56, scope: !11997)
!12000 = !DILocalVariable(name: "regval", scope: !11997, file: !1, line: 2973, type: !1021)
!12001 = !DILocation(line: 2973, column: 6, scope: !11997)
!12002 = !DILocation(line: 2975, column: 17, scope: !11997)
!12003 = !DILocation(line: 2975, column: 24, scope: !11997)
!12004 = !DILocation(line: 2975, column: 33, scope: !11997)
!12005 = !DILocation(line: 2975, column: 11, scope: !11997)
!12006 = !DILocation(line: 2975, column: 9, scope: !11997)
!12007 = !DILocalVariable(name: "_var", scope: !12008, file: !1, line: 2977, type: !1021)
!12008 = distinct !DILexicalBlock(scope: !11997, file: !1, line: 2977, column: 11)
!12009 = !DILocation(line: 2977, column: 11, scope: !12008)
!12010 = !DILocalVariable(name: "_pos", scope: !12008, file: !1, line: 2977, type: !5)
!12011 = !DILocalVariable(name: "_len", scope: !12008, file: !1, line: 2977, type: !5)
!12012 = !DILocalVariable(name: "_val", scope: !12008, file: !1, line: 2977, type: !5)
!12013 = !DILocation(line: 2977, column: 9, scope: !11997)
!12014 = !DILocalVariable(name: "_var", scope: !12015, file: !1, line: 2980, type: !1021)
!12015 = distinct !DILexicalBlock(scope: !11997, file: !1, line: 2980, column: 11)
!12016 = !DILocation(line: 2980, column: 11, scope: !12015)
!12017 = !DILocalVariable(name: "_pos", scope: !12015, file: !1, line: 2980, type: !5)
!12018 = !DILocalVariable(name: "_len", scope: !12015, file: !1, line: 2980, type: !5)
!12019 = !DILocalVariable(name: "_val", scope: !12015, file: !1, line: 2980, type: !5)
!12020 = !DILocation(line: 2980, column: 9, scope: !11997)
!12021 = !DILocalVariable(name: "_var", scope: !12022, file: !1, line: 2982, type: !1021)
!12022 = distinct !DILexicalBlock(scope: !11997, file: !1, line: 2982, column: 11)
!12023 = !DILocation(line: 2982, column: 11, scope: !12022)
!12024 = !DILocalVariable(name: "_pos", scope: !12022, file: !1, line: 2982, type: !5)
!12025 = !DILocalVariable(name: "_len", scope: !12022, file: !1, line: 2982, type: !5)
!12026 = !DILocalVariable(name: "_val", scope: !12022, file: !1, line: 2982, type: !5)
!12027 = !DILocation(line: 2982, column: 9, scope: !11997)
!12028 = !DILocation(line: 2984, column: 9, scope: !11997)
!12029 = !DILocation(line: 2984, column: 17, scope: !11997)
!12030 = !DILocation(line: 2984, column: 24, scope: !11997)
!12031 = !DILocation(line: 2984, column: 33, scope: !11997)
!12032 = !DILocation(line: 2984, column: 2, scope: !11997)
!12033 = !DILocation(line: 2985, column: 1, scope: !11997)
!12034 = distinct !DISubprogram(name: "xlgmac_config_rx_buffer_size", scope: !1, file: !1, line: 1358, type: !7567, scopeLine: 1359, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1619)
!12035 = !DILocalVariable(name: "pdata", arg: 1, scope: !12034, file: !1, line: 1358, type: !7555)
!12036 = !DILocation(line: 1358, column: 63, scope: !12034)
!12037 = !DILocalVariable(name: "channel", scope: !12034, file: !1, line: 1360, type: !7573)
!12038 = !DILocation(line: 1360, column: 25, scope: !12034)
!12039 = !DILocalVariable(name: "i", scope: !12034, file: !1, line: 1361, type: !11)
!12040 = !DILocation(line: 1361, column: 15, scope: !12034)
!12041 = !DILocalVariable(name: "regval", scope: !12034, file: !1, line: 1362, type: !1021)
!12042 = !DILocation(line: 1362, column: 6, scope: !12034)
!12043 = !DILocation(line: 1364, column: 12, scope: !12034)
!12044 = !DILocation(line: 1364, column: 19, scope: !12034)
!12045 = !DILocation(line: 1364, column: 10, scope: !12034)
!12046 = !DILocation(line: 1365, column: 9, scope: !12047)
!12047 = distinct !DILexicalBlock(scope: !12034, file: !1, line: 1365, column: 2)
!12048 = !DILocation(line: 1365, column: 7, scope: !12047)
!12049 = !DILocation(line: 1365, column: 14, scope: !12050)
!12050 = distinct !DILexicalBlock(scope: !12047, file: !1, line: 1365, column: 2)
!12051 = !DILocation(line: 1365, column: 18, scope: !12050)
!12052 = !DILocation(line: 1365, column: 25, scope: !12050)
!12053 = !DILocation(line: 1365, column: 16, scope: !12050)
!12054 = !DILocation(line: 1365, column: 2, scope: !12047)
!12055 = !DILocation(line: 1366, column: 8, scope: !12056)
!12056 = distinct !DILexicalBlock(scope: !12057, file: !1, line: 1366, column: 7)
!12057 = distinct !DILexicalBlock(scope: !12050, file: !1, line: 1365, column: 56)
!12058 = !DILocation(line: 1366, column: 17, scope: !12056)
!12059 = !DILocation(line: 1366, column: 7, scope: !12057)
!12060 = !DILocation(line: 1367, column: 4, scope: !12056)
!12061 = !DILocation(line: 1369, column: 18, scope: !12057)
!12062 = !DILocation(line: 1369, column: 12, scope: !12057)
!12063 = !DILocation(line: 1369, column: 10, scope: !12057)
!12064 = !DILocalVariable(name: "_var", scope: !12065, file: !1, line: 1370, type: !1021)
!12065 = distinct !DILexicalBlock(scope: !12057, file: !1, line: 1370, column: 12)
!12066 = !DILocation(line: 1370, column: 12, scope: !12065)
!12067 = !DILocalVariable(name: "_pos", scope: !12065, file: !1, line: 1370, type: !5)
!12068 = !DILocalVariable(name: "_len", scope: !12065, file: !1, line: 1370, type: !5)
!12069 = !DILocalVariable(name: "_val", scope: !12065, file: !1, line: 1370, type: !11)
!12070 = !DILocation(line: 1370, column: 10, scope: !12057)
!12071 = !DILocation(line: 1373, column: 10, scope: !12057)
!12072 = !DILocation(line: 1373, column: 18, scope: !12057)
!12073 = !DILocation(line: 1373, column: 3, scope: !12057)
!12074 = !DILocation(line: 1374, column: 2, scope: !12057)
!12075 = !DILocation(line: 1365, column: 41, scope: !12050)
!12076 = !DILocation(line: 1365, column: 52, scope: !12050)
!12077 = !DILocation(line: 1365, column: 2, scope: !12050)
!12078 = distinct !{!12078, !12054, !12079}
!12079 = !DILocation(line: 1374, column: 2, scope: !12047)
!12080 = !DILocation(line: 1375, column: 1, scope: !12034)
!12081 = distinct !DISubprogram(name: "xlgmac_config_tso_mode", scope: !1, file: !1, line: 1377, type: !7567, scopeLine: 1378, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1619)
!12082 = !DILocalVariable(name: "pdata", arg: 1, scope: !12081, file: !1, line: 1377, type: !7555)
!12083 = !DILocation(line: 1377, column: 57, scope: !12081)
!12084 = !DILocalVariable(name: "channel", scope: !12081, file: !1, line: 1379, type: !7573)
!12085 = !DILocation(line: 1379, column: 25, scope: !12081)
!12086 = !DILocalVariable(name: "i", scope: !12081, file: !1, line: 1380, type: !11)
!12087 = !DILocation(line: 1380, column: 15, scope: !12081)
!12088 = !DILocalVariable(name: "regval", scope: !12081, file: !1, line: 1381, type: !1021)
!12089 = !DILocation(line: 1381, column: 6, scope: !12081)
!12090 = !DILocation(line: 1383, column: 12, scope: !12081)
!12091 = !DILocation(line: 1383, column: 19, scope: !12081)
!12092 = !DILocation(line: 1383, column: 10, scope: !12081)
!12093 = !DILocation(line: 1384, column: 9, scope: !12094)
!12094 = distinct !DILexicalBlock(scope: !12081, file: !1, line: 1384, column: 2)
!12095 = !DILocation(line: 1384, column: 7, scope: !12094)
!12096 = !DILocation(line: 1384, column: 14, scope: !12097)
!12097 = distinct !DILexicalBlock(scope: !12094, file: !1, line: 1384, column: 2)
!12098 = !DILocation(line: 1384, column: 18, scope: !12097)
!12099 = !DILocation(line: 1384, column: 25, scope: !12097)
!12100 = !DILocation(line: 1384, column: 16, scope: !12097)
!12101 = !DILocation(line: 1384, column: 2, scope: !12094)
!12102 = !DILocation(line: 1385, column: 8, scope: !12103)
!12103 = distinct !DILexicalBlock(scope: !12104, file: !1, line: 1385, column: 7)
!12104 = distinct !DILexicalBlock(scope: !12097, file: !1, line: 1384, column: 56)
!12105 = !DILocation(line: 1385, column: 17, scope: !12103)
!12106 = !DILocation(line: 1385, column: 7, scope: !12104)
!12107 = !DILocation(line: 1386, column: 4, scope: !12103)
!12108 = !DILocation(line: 1388, column: 7, scope: !12109)
!12109 = distinct !DILexicalBlock(scope: !12104, file: !1, line: 1388, column: 7)
!12110 = !DILocation(line: 1388, column: 14, scope: !12109)
!12111 = !DILocation(line: 1388, column: 22, scope: !12109)
!12112 = !DILocation(line: 1388, column: 7, scope: !12104)
!12113 = !DILocation(line: 1389, column: 19, scope: !12114)
!12114 = distinct !DILexicalBlock(scope: !12109, file: !1, line: 1388, column: 27)
!12115 = !DILocation(line: 1389, column: 13, scope: !12114)
!12116 = !DILocation(line: 1389, column: 11, scope: !12114)
!12117 = !DILocalVariable(name: "_var", scope: !12118, file: !1, line: 1390, type: !1021)
!12118 = distinct !DILexicalBlock(scope: !12114, file: !1, line: 1390, column: 13)
!12119 = !DILocation(line: 1390, column: 13, scope: !12118)
!12120 = !DILocalVariable(name: "_pos", scope: !12118, file: !1, line: 1390, type: !5)
!12121 = !DILocalVariable(name: "_len", scope: !12118, file: !1, line: 1390, type: !5)
!12122 = !DILocalVariable(name: "_val", scope: !12118, file: !1, line: 1390, type: !5)
!12123 = !DILocation(line: 1390, column: 11, scope: !12114)
!12124 = !DILocation(line: 1392, column: 11, scope: !12114)
!12125 = !DILocation(line: 1392, column: 19, scope: !12114)
!12126 = !DILocation(line: 1392, column: 4, scope: !12114)
!12127 = !DILocation(line: 1393, column: 3, scope: !12114)
!12128 = !DILocation(line: 1394, column: 2, scope: !12104)
!12129 = !DILocation(line: 1384, column: 41, scope: !12097)
!12130 = !DILocation(line: 1384, column: 52, scope: !12097)
!12131 = !DILocation(line: 1384, column: 2, scope: !12097)
!12132 = distinct !{!12132, !12101, !12133}
!12133 = !DILocation(line: 1394, column: 2, scope: !12094)
!12134 = !DILocation(line: 1395, column: 1, scope: !12081)
!12135 = distinct !DISubprogram(name: "xlgmac_config_sph_mode", scope: !1, file: !1, line: 1397, type: !7567, scopeLine: 1398, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1619)
!12136 = !DILocalVariable(name: "pdata", arg: 1, scope: !12135, file: !1, line: 1397, type: !7555)
!12137 = !DILocation(line: 1397, column: 57, scope: !12135)
!12138 = !DILocalVariable(name: "channel", scope: !12135, file: !1, line: 1399, type: !7573)
!12139 = !DILocation(line: 1399, column: 25, scope: !12135)
!12140 = !DILocalVariable(name: "i", scope: !12135, file: !1, line: 1400, type: !11)
!12141 = !DILocation(line: 1400, column: 15, scope: !12135)
!12142 = !DILocalVariable(name: "regval", scope: !12135, file: !1, line: 1401, type: !1021)
!12143 = !DILocation(line: 1401, column: 6, scope: !12135)
!12144 = !DILocation(line: 1403, column: 12, scope: !12135)
!12145 = !DILocation(line: 1403, column: 19, scope: !12135)
!12146 = !DILocation(line: 1403, column: 10, scope: !12135)
!12147 = !DILocation(line: 1404, column: 9, scope: !12148)
!12148 = distinct !DILexicalBlock(scope: !12135, file: !1, line: 1404, column: 2)
!12149 = !DILocation(line: 1404, column: 7, scope: !12148)
!12150 = !DILocation(line: 1404, column: 14, scope: !12151)
!12151 = distinct !DILexicalBlock(scope: !12148, file: !1, line: 1404, column: 2)
!12152 = !DILocation(line: 1404, column: 18, scope: !12151)
!12153 = !DILocation(line: 1404, column: 25, scope: !12151)
!12154 = !DILocation(line: 1404, column: 16, scope: !12151)
!12155 = !DILocation(line: 1404, column: 2, scope: !12148)
!12156 = !DILocation(line: 1405, column: 8, scope: !12157)
!12157 = distinct !DILexicalBlock(scope: !12158, file: !1, line: 1405, column: 7)
!12158 = distinct !DILexicalBlock(scope: !12151, file: !1, line: 1404, column: 56)
!12159 = !DILocation(line: 1405, column: 17, scope: !12157)
!12160 = !DILocation(line: 1405, column: 7, scope: !12158)
!12161 = !DILocation(line: 1406, column: 4, scope: !12157)
!12162 = !DILocation(line: 1408, column: 18, scope: !12158)
!12163 = !DILocation(line: 1408, column: 12, scope: !12158)
!12164 = !DILocation(line: 1408, column: 10, scope: !12158)
!12165 = !DILocalVariable(name: "_var", scope: !12166, file: !1, line: 1409, type: !1021)
!12166 = distinct !DILexicalBlock(scope: !12158, file: !1, line: 1409, column: 12)
!12167 = !DILocation(line: 1409, column: 12, scope: !12166)
!12168 = !DILocalVariable(name: "_pos", scope: !12166, file: !1, line: 1409, type: !5)
!12169 = !DILocalVariable(name: "_len", scope: !12166, file: !1, line: 1409, type: !5)
!12170 = !DILocalVariable(name: "_val", scope: !12166, file: !1, line: 1409, type: !5)
!12171 = !DILocation(line: 1409, column: 10, scope: !12158)
!12172 = !DILocation(line: 1411, column: 10, scope: !12158)
!12173 = !DILocation(line: 1411, column: 18, scope: !12158)
!12174 = !DILocation(line: 1411, column: 3, scope: !12158)
!12175 = !DILocation(line: 1412, column: 2, scope: !12158)
!12176 = !DILocation(line: 1404, column: 41, scope: !12151)
!12177 = !DILocation(line: 1404, column: 52, scope: !12151)
!12178 = !DILocation(line: 1404, column: 2, scope: !12151)
!12179 = distinct !{!12179, !12155, !12180}
!12180 = !DILocation(line: 1412, column: 2, scope: !12148)
!12181 = !DILocation(line: 1414, column: 17, scope: !12135)
!12182 = !DILocation(line: 1414, column: 24, scope: !12135)
!12183 = !DILocation(line: 1414, column: 33, scope: !12135)
!12184 = !DILocation(line: 1414, column: 11, scope: !12135)
!12185 = !DILocation(line: 1414, column: 9, scope: !12135)
!12186 = !DILocalVariable(name: "_var", scope: !12187, file: !1, line: 1415, type: !1021)
!12187 = distinct !DILexicalBlock(scope: !12135, file: !1, line: 1415, column: 11)
!12188 = !DILocation(line: 1415, column: 11, scope: !12187)
!12189 = !DILocalVariable(name: "_pos", scope: !12187, file: !1, line: 1415, type: !5)
!12190 = !DILocalVariable(name: "_len", scope: !12187, file: !1, line: 1415, type: !5)
!12191 = !DILocalVariable(name: "_val", scope: !12187, file: !1, line: 1415, type: !5)
!12192 = !DILocation(line: 1415, column: 9, scope: !12135)
!12193 = !DILocation(line: 1418, column: 9, scope: !12135)
!12194 = !DILocation(line: 1418, column: 17, scope: !12135)
!12195 = !DILocation(line: 1418, column: 24, scope: !12135)
!12196 = !DILocation(line: 1418, column: 33, scope: !12135)
!12197 = !DILocation(line: 1418, column: 2, scope: !12135)
!12198 = !DILocation(line: 1419, column: 1, scope: !12135)
!12199 = distinct !DISubprogram(name: "xlgmac_config_rss", scope: !1, file: !1, line: 2429, type: !7567, scopeLine: 2430, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1619)
!12200 = !DILocalVariable(name: "pdata", arg: 1, scope: !12199, file: !1, line: 2429, type: !7555)
!12201 = !DILocation(line: 2429, column: 52, scope: !12199)
!12202 = !DILocalVariable(name: "ret", scope: !12199, file: !1, line: 2431, type: !5)
!12203 = !DILocation(line: 2431, column: 6, scope: !12199)
!12204 = !DILocation(line: 2433, column: 7, scope: !12205)
!12205 = distinct !DILexicalBlock(scope: !12199, file: !1, line: 2433, column: 6)
!12206 = !DILocation(line: 2433, column: 14, scope: !12205)
!12207 = !DILocation(line: 2433, column: 22, scope: !12205)
!12208 = !DILocation(line: 2433, column: 6, scope: !12199)
!12209 = !DILocation(line: 2434, column: 3, scope: !12205)
!12210 = !DILocation(line: 2436, column: 6, scope: !12211)
!12211 = distinct !DILexicalBlock(scope: !12199, file: !1, line: 2436, column: 6)
!12212 = !DILocation(line: 2436, column: 13, scope: !12211)
!12213 = !DILocation(line: 2436, column: 21, scope: !12211)
!12214 = !DILocation(line: 2436, column: 30, scope: !12211)
!12215 = !DILocation(line: 2436, column: 6, scope: !12199)
!12216 = !DILocation(line: 2437, column: 27, scope: !12211)
!12217 = !DILocation(line: 2437, column: 9, scope: !12211)
!12218 = !DILocation(line: 2437, column: 7, scope: !12211)
!12219 = !DILocation(line: 2437, column: 3, scope: !12211)
!12220 = !DILocation(line: 2439, column: 28, scope: !12211)
!12221 = !DILocation(line: 2439, column: 9, scope: !12211)
!12222 = !DILocation(line: 2439, column: 7, scope: !12211)
!12223 = !DILocation(line: 2441, column: 6, scope: !12224)
!12224 = distinct !DILexicalBlock(scope: !12199, file: !1, line: 2441, column: 6)
!12225 = !DILocation(line: 2441, column: 6, scope: !12199)
!12226 = !DILocation(line: 2442, column: 14, scope: !12224)
!12227 = !DILocation(line: 2442, column: 21, scope: !12224)
!12228 = !DILocation(line: 2442, column: 3, scope: !12224)
!12229 = !DILocation(line: 2444, column: 1, scope: !12199)
!12230 = distinct !DISubprogram(name: "xlgmac_enable_dma_interrupts", scope: !1, file: !1, line: 2446, type: !7567, scopeLine: 2447, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1619)
!12231 = !DILocalVariable(name: "pdata", arg: 1, scope: !12230, file: !1, line: 2446, type: !7555)
!12232 = !DILocation(line: 2446, column: 63, scope: !12230)
!12233 = !DILocalVariable(name: "dma_ch_isr", scope: !12230, file: !1, line: 2448, type: !11)
!12234 = !DILocation(line: 2448, column: 15, scope: !12230)
!12235 = !DILocalVariable(name: "dma_ch_ier", scope: !12230, file: !1, line: 2448, type: !11)
!12236 = !DILocation(line: 2448, column: 27, scope: !12230)
!12237 = !DILocalVariable(name: "channel", scope: !12230, file: !1, line: 2449, type: !7573)
!12238 = !DILocation(line: 2449, column: 25, scope: !12230)
!12239 = !DILocalVariable(name: "i", scope: !12230, file: !1, line: 2450, type: !11)
!12240 = !DILocation(line: 2450, column: 15, scope: !12230)
!12241 = !DILocation(line: 2452, column: 12, scope: !12230)
!12242 = !DILocation(line: 2452, column: 19, scope: !12230)
!12243 = !DILocation(line: 2452, column: 10, scope: !12230)
!12244 = !DILocation(line: 2453, column: 9, scope: !12245)
!12245 = distinct !DILexicalBlock(scope: !12230, file: !1, line: 2453, column: 2)
!12246 = !DILocation(line: 2453, column: 7, scope: !12245)
!12247 = !DILocation(line: 2453, column: 14, scope: !12248)
!12248 = distinct !DILexicalBlock(scope: !12245, file: !1, line: 2453, column: 2)
!12249 = !DILocation(line: 2453, column: 18, scope: !12248)
!12250 = !DILocation(line: 2453, column: 25, scope: !12248)
!12251 = !DILocation(line: 2453, column: 16, scope: !12248)
!12252 = !DILocation(line: 2453, column: 2, scope: !12245)
!12253 = !DILocation(line: 2455, column: 22, scope: !12254)
!12254 = distinct !DILexicalBlock(scope: !12248, file: !1, line: 2453, column: 56)
!12255 = !DILocation(line: 2455, column: 16, scope: !12254)
!12256 = !DILocation(line: 2455, column: 14, scope: !12254)
!12257 = !DILocation(line: 2456, column: 10, scope: !12254)
!12258 = !DILocation(line: 2456, column: 22, scope: !12254)
!12259 = !DILocation(line: 2456, column: 3, scope: !12254)
!12260 = !DILocation(line: 2459, column: 14, scope: !12254)
!12261 = !DILocalVariable(name: "_var", scope: !12262, file: !1, line: 2466, type: !11)
!12262 = distinct !DILexicalBlock(scope: !12254, file: !1, line: 2466, column: 16)
!12263 = !DILocation(line: 2466, column: 16, scope: !12262)
!12264 = !DILocalVariable(name: "_pos", scope: !12262, file: !1, line: 2466, type: !5)
!12265 = !DILocalVariable(name: "_len", scope: !12262, file: !1, line: 2466, type: !5)
!12266 = !DILocalVariable(name: "_val", scope: !12262, file: !1, line: 2466, type: !5)
!12267 = !DILocation(line: 2466, column: 14, scope: !12254)
!12268 = !DILocalVariable(name: "_var", scope: !12269, file: !1, line: 2469, type: !11)
!12269 = distinct !DILexicalBlock(scope: !12254, file: !1, line: 2469, column: 16)
!12270 = !DILocation(line: 2469, column: 16, scope: !12269)
!12271 = !DILocalVariable(name: "_pos", scope: !12269, file: !1, line: 2469, type: !5)
!12272 = !DILocalVariable(name: "_len", scope: !12269, file: !1, line: 2469, type: !5)
!12273 = !DILocalVariable(name: "_val", scope: !12269, file: !1, line: 2469, type: !5)
!12274 = !DILocation(line: 2469, column: 14, scope: !12254)
!12275 = !DILocalVariable(name: "_var", scope: !12276, file: !1, line: 2472, type: !11)
!12276 = distinct !DILexicalBlock(scope: !12254, file: !1, line: 2472, column: 16)
!12277 = !DILocation(line: 2472, column: 16, scope: !12276)
!12278 = !DILocalVariable(name: "_pos", scope: !12276, file: !1, line: 2472, type: !5)
!12279 = !DILocalVariable(name: "_len", scope: !12276, file: !1, line: 2472, type: !5)
!12280 = !DILocalVariable(name: "_val", scope: !12276, file: !1, line: 2472, type: !5)
!12281 = !DILocation(line: 2472, column: 14, scope: !12254)
!12282 = !DILocation(line: 2476, column: 7, scope: !12283)
!12283 = distinct !DILexicalBlock(scope: !12254, file: !1, line: 2476, column: 7)
!12284 = !DILocation(line: 2476, column: 16, scope: !12283)
!12285 = !DILocation(line: 2476, column: 7, scope: !12254)
!12286 = !DILocation(line: 2481, column: 9, scope: !12287)
!12287 = distinct !DILexicalBlock(scope: !12288, file: !1, line: 2481, column: 8)
!12288 = distinct !DILexicalBlock(scope: !12283, file: !1, line: 2476, column: 25)
!12289 = !DILocation(line: 2481, column: 16, scope: !12287)
!12290 = !DILocation(line: 2481, column: 8, scope: !12288)
!12291 = !DILocalVariable(name: "_var", scope: !12292, file: !1, line: 2482, type: !11)
!12292 = distinct !DILexicalBlock(scope: !12287, file: !1, line: 2482, column: 18)
!12293 = !DILocation(line: 2482, column: 18, scope: !12292)
!12294 = !DILocalVariable(name: "_pos", scope: !12292, file: !1, line: 2482, type: !5)
!12295 = !DILocalVariable(name: "_len", scope: !12292, file: !1, line: 2482, type: !5)
!12296 = !DILocalVariable(name: "_val", scope: !12292, file: !1, line: 2482, type: !5)
!12297 = !DILocation(line: 2482, column: 16, scope: !12287)
!12298 = !DILocation(line: 2482, column: 5, scope: !12287)
!12299 = !DILocation(line: 2487, column: 3, scope: !12288)
!12300 = !DILocation(line: 2488, column: 7, scope: !12301)
!12301 = distinct !DILexicalBlock(scope: !12254, file: !1, line: 2488, column: 7)
!12302 = !DILocation(line: 2488, column: 16, scope: !12301)
!12303 = !DILocation(line: 2488, column: 7, scope: !12254)
!12304 = !DILocalVariable(name: "_var", scope: !12305, file: !1, line: 2494, type: !11)
!12305 = distinct !DILexicalBlock(scope: !12306, file: !1, line: 2494, column: 17)
!12306 = distinct !DILexicalBlock(scope: !12301, file: !1, line: 2488, column: 25)
!12307 = !DILocation(line: 2494, column: 17, scope: !12305)
!12308 = !DILocalVariable(name: "_pos", scope: !12305, file: !1, line: 2494, type: !5)
!12309 = !DILocalVariable(name: "_len", scope: !12305, file: !1, line: 2494, type: !5)
!12310 = !DILocalVariable(name: "_val", scope: !12305, file: !1, line: 2494, type: !5)
!12311 = !DILocation(line: 2494, column: 15, scope: !12306)
!12312 = !DILocation(line: 2499, column: 9, scope: !12313)
!12313 = distinct !DILexicalBlock(scope: !12306, file: !1, line: 2499, column: 8)
!12314 = !DILocation(line: 2499, column: 16, scope: !12313)
!12315 = !DILocation(line: 2499, column: 8, scope: !12306)
!12316 = !DILocalVariable(name: "_var", scope: !12317, file: !1, line: 2500, type: !11)
!12317 = distinct !DILexicalBlock(scope: !12313, file: !1, line: 2500, column: 18)
!12318 = !DILocation(line: 2500, column: 18, scope: !12317)
!12319 = !DILocalVariable(name: "_pos", scope: !12317, file: !1, line: 2500, type: !5)
!12320 = !DILocalVariable(name: "_len", scope: !12317, file: !1, line: 2500, type: !5)
!12321 = !DILocalVariable(name: "_val", scope: !12317, file: !1, line: 2500, type: !5)
!12322 = !DILocation(line: 2500, column: 16, scope: !12313)
!12323 = !DILocation(line: 2500, column: 5, scope: !12313)
!12324 = !DILocation(line: 2505, column: 3, scope: !12306)
!12325 = !DILocation(line: 2507, column: 10, scope: !12254)
!12326 = !DILocation(line: 2507, column: 22, scope: !12254)
!12327 = !DILocation(line: 2507, column: 3, scope: !12254)
!12328 = !DILocation(line: 2508, column: 2, scope: !12254)
!12329 = !DILocation(line: 2453, column: 41, scope: !12248)
!12330 = !DILocation(line: 2453, column: 52, scope: !12248)
!12331 = !DILocation(line: 2453, column: 2, scope: !12248)
!12332 = distinct !{!12332, !12252, !12333}
!12333 = !DILocation(line: 2508, column: 2, scope: !12245)
!12334 = !DILocation(line: 2509, column: 1, scope: !12230)
!12335 = distinct !DISubprogram(name: "xlgmac_config_mtl_mode", scope: !1, file: !1, line: 1473, type: !7567, scopeLine: 1474, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1619)
!12336 = !DILocalVariable(name: "pdata", arg: 1, scope: !12335, file: !1, line: 1473, type: !7555)
!12337 = !DILocation(line: 1473, column: 57, scope: !12335)
!12338 = !DILocalVariable(name: "i", scope: !12335, file: !1, line: 1475, type: !11)
!12339 = !DILocation(line: 1475, column: 15, scope: !12335)
!12340 = !DILocalVariable(name: "regval", scope: !12335, file: !1, line: 1476, type: !1021)
!12341 = !DILocation(line: 1476, column: 6, scope: !12335)
!12342 = !DILocation(line: 1479, column: 17, scope: !12335)
!12343 = !DILocation(line: 1479, column: 24, scope: !12335)
!12344 = !DILocation(line: 1479, column: 33, scope: !12335)
!12345 = !DILocation(line: 1479, column: 11, scope: !12335)
!12346 = !DILocation(line: 1479, column: 9, scope: !12335)
!12347 = !DILocalVariable(name: "_var", scope: !12348, file: !1, line: 1480, type: !1021)
!12348 = distinct !DILexicalBlock(scope: !12335, file: !1, line: 1480, column: 11)
!12349 = !DILocation(line: 1480, column: 11, scope: !12348)
!12350 = !DILocalVariable(name: "_pos", scope: !12348, file: !1, line: 1480, type: !5)
!12351 = !DILocalVariable(name: "_len", scope: !12348, file: !1, line: 1480, type: !5)
!12352 = !DILocalVariable(name: "_val", scope: !12348, file: !1, line: 1480, type: !5)
!12353 = !DILocation(line: 1480, column: 9, scope: !12335)
!12354 = !DILocation(line: 1482, column: 9, scope: !12335)
!12355 = !DILocation(line: 1482, column: 17, scope: !12335)
!12356 = !DILocation(line: 1482, column: 24, scope: !12335)
!12357 = !DILocation(line: 1482, column: 33, scope: !12335)
!12358 = !DILocation(line: 1482, column: 2, scope: !12335)
!12359 = !DILocation(line: 1485, column: 9, scope: !12360)
!12360 = distinct !DILexicalBlock(scope: !12335, file: !1, line: 1485, column: 2)
!12361 = !DILocation(line: 1485, column: 7, scope: !12360)
!12362 = !DILocation(line: 1485, column: 14, scope: !12363)
!12363 = distinct !DILexicalBlock(scope: !12360, file: !1, line: 1485, column: 2)
!12364 = !DILocation(line: 1485, column: 18, scope: !12363)
!12365 = !DILocation(line: 1485, column: 25, scope: !12363)
!12366 = !DILocation(line: 1485, column: 33, scope: !12363)
!12367 = !DILocation(line: 1485, column: 16, scope: !12363)
!12368 = !DILocation(line: 1485, column: 2, scope: !12360)
!12369 = !DILocation(line: 1486, column: 18, scope: !12370)
!12370 = distinct !DILexicalBlock(scope: !12363, file: !1, line: 1485, column: 46)
!12371 = !DILocation(line: 1486, column: 12, scope: !12370)
!12372 = !DILocation(line: 1486, column: 10, scope: !12370)
!12373 = !DILocalVariable(name: "_var", scope: !12374, file: !1, line: 1487, type: !1021)
!12374 = distinct !DILexicalBlock(scope: !12370, file: !1, line: 1487, column: 12)
!12375 = !DILocation(line: 1487, column: 12, scope: !12374)
!12376 = !DILocalVariable(name: "_pos", scope: !12374, file: !1, line: 1487, type: !5)
!12377 = !DILocalVariable(name: "_len", scope: !12374, file: !1, line: 1487, type: !5)
!12378 = !DILocalVariable(name: "_val", scope: !12374, file: !1, line: 1487, type: !5)
!12379 = !DILocation(line: 1487, column: 10, scope: !12370)
!12380 = !DILocation(line: 1489, column: 10, scope: !12370)
!12381 = !DILocation(line: 1489, column: 18, scope: !12370)
!12382 = !DILocation(line: 1489, column: 3, scope: !12370)
!12383 = !DILocation(line: 1491, column: 18, scope: !12370)
!12384 = !DILocation(line: 1491, column: 12, scope: !12370)
!12385 = !DILocation(line: 1491, column: 10, scope: !12370)
!12386 = !DILocalVariable(name: "_var", scope: !12387, file: !1, line: 1492, type: !1021)
!12387 = distinct !DILexicalBlock(scope: !12370, file: !1, line: 1492, column: 12)
!12388 = !DILocation(line: 1492, column: 12, scope: !12387)
!12389 = !DILocalVariable(name: "_pos", scope: !12387, file: !1, line: 1492, type: !5)
!12390 = !DILocalVariable(name: "_len", scope: !12387, file: !1, line: 1492, type: !5)
!12391 = !DILocalVariable(name: "_val", scope: !12387, file: !1, line: 1492, type: !5)
!12392 = !DILocation(line: 1492, column: 10, scope: !12370)
!12393 = !DILocation(line: 1494, column: 10, scope: !12370)
!12394 = !DILocation(line: 1494, column: 18, scope: !12370)
!12395 = !DILocation(line: 1494, column: 3, scope: !12370)
!12396 = !DILocation(line: 1495, column: 2, scope: !12370)
!12397 = !DILocation(line: 1485, column: 42, scope: !12363)
!12398 = !DILocation(line: 1485, column: 2, scope: !12363)
!12399 = distinct !{!12399, !12368, !12400}
!12400 = !DILocation(line: 1495, column: 2, scope: !12360)
!12401 = !DILocation(line: 1498, column: 17, scope: !12335)
!12402 = !DILocation(line: 1498, column: 24, scope: !12335)
!12403 = !DILocation(line: 1498, column: 33, scope: !12335)
!12404 = !DILocation(line: 1498, column: 11, scope: !12335)
!12405 = !DILocation(line: 1498, column: 9, scope: !12335)
!12406 = !DILocalVariable(name: "_var", scope: !12407, file: !1, line: 1499, type: !1021)
!12407 = distinct !DILexicalBlock(scope: !12335, file: !1, line: 1499, column: 11)
!12408 = !DILocation(line: 1499, column: 11, scope: !12407)
!12409 = !DILocalVariable(name: "_pos", scope: !12407, file: !1, line: 1499, type: !5)
!12410 = !DILocalVariable(name: "_len", scope: !12407, file: !1, line: 1499, type: !5)
!12411 = !DILocalVariable(name: "_val", scope: !12407, file: !1, line: 1499, type: !5)
!12412 = !DILocation(line: 1499, column: 9, scope: !12335)
!12413 = !DILocation(line: 1501, column: 9, scope: !12335)
!12414 = !DILocation(line: 1501, column: 17, scope: !12335)
!12415 = !DILocation(line: 1501, column: 24, scope: !12335)
!12416 = !DILocation(line: 1501, column: 33, scope: !12335)
!12417 = !DILocation(line: 1501, column: 2, scope: !12335)
!12418 = !DILocation(line: 1502, column: 1, scope: !12335)
!12419 = distinct !DISubprogram(name: "xlgmac_config_queue_mapping", scope: !1, file: !1, line: 1504, type: !7567, scopeLine: 1505, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1619)
!12420 = !DILocalVariable(name: "pdata", arg: 1, scope: !12419, file: !1, line: 1504, type: !7555)
!12421 = !DILocation(line: 1504, column: 62, scope: !12419)
!12422 = !DILocalVariable(name: "ppq", scope: !12419, file: !1, line: 1506, type: !11)
!12423 = !DILocation(line: 1506, column: 15, scope: !12419)
!12424 = !DILocalVariable(name: "ppq_extra", scope: !12419, file: !1, line: 1506, type: !11)
!12425 = !DILocation(line: 1506, column: 20, scope: !12419)
!12426 = !DILocalVariable(name: "prio", scope: !12419, file: !1, line: 1506, type: !11)
!12427 = !DILocation(line: 1506, column: 31, scope: !12419)
!12428 = !DILocalVariable(name: "prio_queues", scope: !12419, file: !1, line: 1506, type: !11)
!12429 = !DILocation(line: 1506, column: 37, scope: !12419)
!12430 = !DILocalVariable(name: "qptc", scope: !12419, file: !1, line: 1507, type: !11)
!12431 = !DILocation(line: 1507, column: 15, scope: !12419)
!12432 = !DILocalVariable(name: "qptc_extra", scope: !12419, file: !1, line: 1507, type: !11)
!12433 = !DILocation(line: 1507, column: 21, scope: !12419)
!12434 = !DILocalVariable(name: "queue", scope: !12419, file: !1, line: 1507, type: !11)
!12435 = !DILocation(line: 1507, column: 33, scope: !12419)
!12436 = !DILocalVariable(name: "reg", scope: !12419, file: !1, line: 1508, type: !11)
!12437 = !DILocation(line: 1508, column: 15, scope: !12419)
!12438 = !DILocalVariable(name: "regval", scope: !12419, file: !1, line: 1508, type: !11)
!12439 = !DILocation(line: 1508, column: 20, scope: !12419)
!12440 = !DILocalVariable(name: "mask", scope: !12419, file: !1, line: 1509, type: !11)
!12441 = !DILocation(line: 1509, column: 15, scope: !12419)
!12442 = !DILocalVariable(name: "i", scope: !12419, file: !1, line: 1510, type: !11)
!12443 = !DILocation(line: 1510, column: 15, scope: !12419)
!12444 = !DILocalVariable(name: "j", scope: !12419, file: !1, line: 1510, type: !11)
!12445 = !DILocation(line: 1510, column: 18, scope: !12419)
!12446 = !DILocation(line: 1515, column: 9, scope: !12419)
!12447 = !DILocation(line: 1515, column: 16, scope: !12419)
!12448 = !DILocation(line: 1515, column: 29, scope: !12419)
!12449 = !DILocation(line: 1515, column: 36, scope: !12419)
!12450 = !DILocation(line: 1515, column: 44, scope: !12419)
!12451 = !DILocation(line: 1515, column: 27, scope: !12419)
!12452 = !DILocation(line: 1515, column: 7, scope: !12419)
!12453 = !DILocation(line: 1516, column: 15, scope: !12419)
!12454 = !DILocation(line: 1516, column: 22, scope: !12419)
!12455 = !DILocation(line: 1516, column: 35, scope: !12419)
!12456 = !DILocation(line: 1516, column: 42, scope: !12419)
!12457 = !DILocation(line: 1516, column: 50, scope: !12419)
!12458 = !DILocation(line: 1516, column: 33, scope: !12419)
!12459 = !DILocation(line: 1516, column: 13, scope: !12419)
!12460 = !DILocation(line: 1518, column: 9, scope: !12461)
!12461 = distinct !DILexicalBlock(scope: !12419, file: !1, line: 1518, column: 2)
!12462 = !DILocation(line: 1518, column: 20, scope: !12461)
!12463 = !DILocation(line: 1518, column: 7, scope: !12461)
!12464 = !DILocation(line: 1518, column: 25, scope: !12465)
!12465 = distinct !DILexicalBlock(scope: !12461, file: !1, line: 1518, column: 2)
!12466 = !DILocation(line: 1518, column: 29, scope: !12465)
!12467 = !DILocation(line: 1518, column: 36, scope: !12465)
!12468 = !DILocation(line: 1518, column: 44, scope: !12465)
!12469 = !DILocation(line: 1518, column: 27, scope: !12465)
!12470 = !DILocation(line: 1518, column: 2, scope: !12461)
!12471 = !DILocation(line: 1519, column: 10, scope: !12472)
!12472 = distinct !DILexicalBlock(scope: !12473, file: !1, line: 1519, column: 3)
!12473 = distinct !DILexicalBlock(scope: !12465, file: !1, line: 1518, column: 57)
!12474 = !DILocation(line: 1519, column: 8, scope: !12472)
!12475 = !DILocation(line: 1519, column: 15, scope: !12476)
!12476 = distinct !DILexicalBlock(scope: !12472, file: !1, line: 1519, column: 3)
!12477 = !DILocation(line: 1519, column: 19, scope: !12476)
!12478 = !DILocation(line: 1519, column: 17, scope: !12476)
!12479 = !DILocation(line: 1519, column: 3, scope: !12472)
!12480 = !DILocation(line: 1520, column: 4, scope: !12481)
!12481 = distinct !DILexicalBlock(scope: !12482, file: !1, line: 1520, column: 4)
!12482 = distinct !DILexicalBlock(scope: !12483, file: !1, line: 1520, column: 4)
!12483 = distinct !DILexicalBlock(scope: !12476, file: !1, line: 1519, column: 30)
!12484 = !DILocation(line: 1520, column: 4, scope: !12482)
!12485 = !DILocation(line: 1522, column: 19, scope: !12483)
!12486 = !DILocation(line: 1522, column: 13, scope: !12483)
!12487 = !DILocation(line: 1522, column: 11, scope: !12483)
!12488 = !DILocalVariable(name: "_var", scope: !12489, file: !1, line: 1524, type: !11)
!12489 = distinct !DILexicalBlock(scope: !12483, file: !1, line: 1524, column: 13)
!12490 = !DILocation(line: 1524, column: 13, scope: !12489)
!12491 = !DILocalVariable(name: "_pos", scope: !12489, file: !1, line: 1524, type: !5)
!12492 = !DILocalVariable(name: "_len", scope: !12489, file: !1, line: 1524, type: !5)
!12493 = !DILocalVariable(name: "_val", scope: !12489, file: !1, line: 1524, type: !11)
!12494 = !DILocation(line: 1524, column: 11, scope: !12483)
!12495 = !DILocation(line: 1528, column: 11, scope: !12483)
!12496 = !DILocation(line: 1528, column: 19, scope: !12483)
!12497 = !DILocation(line: 1528, column: 4, scope: !12483)
!12498 = !DILocation(line: 1530, column: 9, scope: !12483)
!12499 = !DILocation(line: 1531, column: 3, scope: !12483)
!12500 = !DILocation(line: 1519, column: 26, scope: !12476)
!12501 = !DILocation(line: 1519, column: 3, scope: !12476)
!12502 = distinct !{!12502, !12479, !12503}
!12503 = !DILocation(line: 1531, column: 3, scope: !12472)
!12504 = !DILocation(line: 1533, column: 7, scope: !12505)
!12505 = distinct !DILexicalBlock(scope: !12473, file: !1, line: 1533, column: 7)
!12506 = !DILocation(line: 1533, column: 11, scope: !12505)
!12507 = !DILocation(line: 1533, column: 9, scope: !12505)
!12508 = !DILocation(line: 1533, column: 7, scope: !12473)
!12509 = !DILocation(line: 1534, column: 4, scope: !12510)
!12510 = distinct !DILexicalBlock(scope: !12511, file: !1, line: 1534, column: 4)
!12511 = distinct !DILexicalBlock(scope: !12512, file: !1, line: 1534, column: 4)
!12512 = distinct !DILexicalBlock(scope: !12505, file: !1, line: 1533, column: 23)
!12513 = !DILocation(line: 1534, column: 4, scope: !12511)
!12514 = !DILocation(line: 1536, column: 19, scope: !12512)
!12515 = !DILocation(line: 1536, column: 13, scope: !12512)
!12516 = !DILocation(line: 1536, column: 11, scope: !12512)
!12517 = !DILocalVariable(name: "_var", scope: !12518, file: !1, line: 1538, type: !11)
!12518 = distinct !DILexicalBlock(scope: !12512, file: !1, line: 1538, column: 13)
!12519 = !DILocation(line: 1538, column: 13, scope: !12518)
!12520 = !DILocalVariable(name: "_pos", scope: !12518, file: !1, line: 1538, type: !5)
!12521 = !DILocalVariable(name: "_len", scope: !12518, file: !1, line: 1538, type: !5)
!12522 = !DILocalVariable(name: "_val", scope: !12518, file: !1, line: 1538, type: !11)
!12523 = !DILocation(line: 1538, column: 11, scope: !12512)
!12524 = !DILocation(line: 1542, column: 11, scope: !12512)
!12525 = !DILocation(line: 1542, column: 19, scope: !12512)
!12526 = !DILocation(line: 1542, column: 4, scope: !12512)
!12527 = !DILocation(line: 1544, column: 9, scope: !12512)
!12528 = !DILocation(line: 1545, column: 3, scope: !12512)
!12529 = !DILocation(line: 1546, column: 2, scope: !12473)
!12530 = !DILocation(line: 1518, column: 53, scope: !12465)
!12531 = !DILocation(line: 1518, column: 2, scope: !12465)
!12532 = distinct !{!12532, !12470, !12533}
!12533 = !DILocation(line: 1546, column: 2, scope: !12461)
!12534 = !DILocalVariable(name: "__UNIQUE_ID___x334", scope: !12535, file: !1, line: 1549, type: !11)
!12535 = distinct !DILexicalBlock(scope: !12419, file: !1, line: 1549, column: 16)
!12536 = !DILocation(line: 1549, column: 16, scope: !12535)
!12537 = !DILocalVariable(name: "__UNIQUE_ID___y335", scope: !12535, file: !1, line: 1549, type: !11)
!12538 = !DILocation(line: 1549, column: 14, scope: !12419)
!12539 = !DILocation(line: 1551, column: 31, scope: !12419)
!12540 = !DILocation(line: 1551, column: 29, scope: !12419)
!12541 = !DILocation(line: 1551, column: 6, scope: !12419)
!12542 = !DILocation(line: 1552, column: 37, scope: !12419)
!12543 = !DILocation(line: 1552, column: 35, scope: !12419)
!12544 = !DILocation(line: 1552, column: 12, scope: !12419)
!12545 = !DILocation(line: 1554, column: 6, scope: !12419)
!12546 = !DILocation(line: 1555, column: 9, scope: !12419)
!12547 = !DILocation(line: 1556, column: 9, scope: !12548)
!12548 = distinct !DILexicalBlock(scope: !12419, file: !1, line: 1556, column: 2)
!12549 = !DILocation(line: 1556, column: 19, scope: !12548)
!12550 = !DILocation(line: 1556, column: 7, scope: !12548)
!12551 = !DILocation(line: 1556, column: 24, scope: !12552)
!12552 = distinct !DILexicalBlock(scope: !12548, file: !1, line: 1556, column: 2)
!12553 = !DILocation(line: 1556, column: 28, scope: !12552)
!12554 = !DILocation(line: 1556, column: 26, scope: !12552)
!12555 = !DILocation(line: 1556, column: 2, scope: !12548)
!12556 = !DILocation(line: 1557, column: 8, scope: !12557)
!12557 = distinct !DILexicalBlock(scope: !12552, file: !1, line: 1556, column: 42)
!12558 = !DILocation(line: 1558, column: 10, scope: !12559)
!12559 = distinct !DILexicalBlock(scope: !12557, file: !1, line: 1558, column: 3)
!12560 = !DILocation(line: 1558, column: 8, scope: !12559)
!12561 = !DILocation(line: 1558, column: 15, scope: !12562)
!12562 = distinct !DILexicalBlock(scope: !12559, file: !1, line: 1558, column: 3)
!12563 = !DILocation(line: 1558, column: 19, scope: !12562)
!12564 = !DILocation(line: 1558, column: 17, scope: !12562)
!12565 = !DILocation(line: 1558, column: 3, scope: !12559)
!12566 = !DILocation(line: 1559, column: 4, scope: !12567)
!12567 = distinct !DILexicalBlock(scope: !12568, file: !1, line: 1559, column: 4)
!12568 = distinct !DILexicalBlock(scope: !12569, file: !1, line: 1559, column: 4)
!12569 = distinct !DILexicalBlock(scope: !12562, file: !1, line: 1558, column: 29)
!12570 = !DILocation(line: 1559, column: 4, scope: !12568)
!12571 = !DILocation(line: 1561, column: 18, scope: !12569)
!12572 = !DILocation(line: 1561, column: 15, scope: !12569)
!12573 = !DILocation(line: 1561, column: 9, scope: !12569)
!12574 = !DILocation(line: 1562, column: 8, scope: !12569)
!12575 = !DILocation(line: 1563, column: 3, scope: !12569)
!12576 = !DILocation(line: 1558, column: 25, scope: !12562)
!12577 = !DILocation(line: 1558, column: 3, scope: !12562)
!12578 = distinct !{!12578, !12565, !12579}
!12579 = !DILocation(line: 1563, column: 3, scope: !12559)
!12580 = !DILocation(line: 1565, column: 7, scope: !12581)
!12581 = distinct !DILexicalBlock(scope: !12557, file: !1, line: 1565, column: 7)
!12582 = !DILocation(line: 1565, column: 11, scope: !12581)
!12583 = !DILocation(line: 1565, column: 9, scope: !12581)
!12584 = !DILocation(line: 1565, column: 7, scope: !12557)
!12585 = !DILocation(line: 1566, column: 4, scope: !12586)
!12586 = distinct !DILexicalBlock(scope: !12587, file: !1, line: 1566, column: 4)
!12587 = distinct !DILexicalBlock(scope: !12588, file: !1, line: 1566, column: 4)
!12588 = distinct !DILexicalBlock(scope: !12581, file: !1, line: 1565, column: 22)
!12589 = !DILocation(line: 1566, column: 4, scope: !12587)
!12590 = !DILocation(line: 1568, column: 18, scope: !12588)
!12591 = !DILocation(line: 1568, column: 15, scope: !12588)
!12592 = !DILocation(line: 1568, column: 9, scope: !12588)
!12593 = !DILocation(line: 1569, column: 8, scope: !12588)
!12594 = !DILocation(line: 1570, column: 3, scope: !12588)
!12595 = !DILocation(line: 1572, column: 14, scope: !12557)
!12596 = !DILocation(line: 1572, column: 25, scope: !12557)
!12597 = !DILocation(line: 1572, column: 28, scope: !12557)
!12598 = !DILocation(line: 1572, column: 50, scope: !12557)
!12599 = !DILocation(line: 1572, column: 19, scope: !12557)
!12600 = !DILocation(line: 1572, column: 10, scope: !12557)
!12601 = !DILocation(line: 1574, column: 8, scope: !12602)
!12602 = distinct !DILexicalBlock(scope: !12557, file: !1, line: 1574, column: 7)
!12603 = !DILocation(line: 1574, column: 10, scope: !12602)
!12604 = !DILocation(line: 1574, column: 32, scope: !12602)
!12605 = !DILocation(line: 1574, column: 36, scope: !12602)
!12606 = !DILocation(line: 1574, column: 41, scope: !12602)
!12607 = !DILocation(line: 1574, column: 38, scope: !12602)
!12608 = !DILocation(line: 1574, column: 7, scope: !12557)
!12609 = !DILocation(line: 1575, column: 4, scope: !12602)
!12610 = distinct !{!12610, !12555, !12611}
!12611 = !DILocation(line: 1580, column: 2, scope: !12548)
!12612 = !DILocation(line: 1577, column: 10, scope: !12557)
!12613 = !DILocation(line: 1577, column: 18, scope: !12557)
!12614 = !DILocation(line: 1577, column: 25, scope: !12557)
!12615 = !DILocation(line: 1577, column: 36, scope: !12557)
!12616 = !DILocation(line: 1577, column: 34, scope: !12557)
!12617 = !DILocation(line: 1577, column: 3, scope: !12557)
!12618 = !DILocation(line: 1578, column: 7, scope: !12557)
!12619 = !DILocation(line: 1579, column: 10, scope: !12557)
!12620 = !DILocation(line: 1556, column: 2, scope: !12552)
!12621 = !DILocation(line: 1585, column: 6, scope: !12419)
!12622 = !DILocation(line: 1586, column: 17, scope: !12419)
!12623 = !DILocation(line: 1586, column: 24, scope: !12419)
!12624 = !DILocation(line: 1586, column: 35, scope: !12419)
!12625 = !DILocation(line: 1586, column: 33, scope: !12419)
!12626 = !DILocation(line: 1586, column: 11, scope: !12419)
!12627 = !DILocation(line: 1586, column: 9, scope: !12419)
!12628 = !DILocation(line: 1587, column: 9, scope: !12419)
!12629 = !DILocation(line: 1589, column: 9, scope: !12419)
!12630 = !DILocation(line: 1589, column: 17, scope: !12419)
!12631 = !DILocation(line: 1589, column: 24, scope: !12419)
!12632 = !DILocation(line: 1589, column: 35, scope: !12419)
!12633 = !DILocation(line: 1589, column: 33, scope: !12419)
!12634 = !DILocation(line: 1589, column: 2, scope: !12419)
!12635 = !DILocation(line: 1591, column: 6, scope: !12419)
!12636 = !DILocation(line: 1592, column: 17, scope: !12419)
!12637 = !DILocation(line: 1592, column: 24, scope: !12419)
!12638 = !DILocation(line: 1592, column: 35, scope: !12419)
!12639 = !DILocation(line: 1592, column: 33, scope: !12419)
!12640 = !DILocation(line: 1592, column: 11, scope: !12419)
!12641 = !DILocation(line: 1592, column: 9, scope: !12419)
!12642 = !DILocation(line: 1593, column: 9, scope: !12419)
!12643 = !DILocation(line: 1595, column: 9, scope: !12419)
!12644 = !DILocation(line: 1595, column: 17, scope: !12419)
!12645 = !DILocation(line: 1595, column: 24, scope: !12419)
!12646 = !DILocation(line: 1595, column: 35, scope: !12419)
!12647 = !DILocation(line: 1595, column: 33, scope: !12419)
!12648 = !DILocation(line: 1595, column: 2, scope: !12419)
!12649 = !DILocation(line: 1597, column: 6, scope: !12419)
!12650 = !DILocation(line: 1598, column: 17, scope: !12419)
!12651 = !DILocation(line: 1598, column: 24, scope: !12419)
!12652 = !DILocation(line: 1598, column: 35, scope: !12419)
!12653 = !DILocation(line: 1598, column: 33, scope: !12419)
!12654 = !DILocation(line: 1598, column: 11, scope: !12419)
!12655 = !DILocation(line: 1598, column: 9, scope: !12419)
!12656 = !DILocation(line: 1599, column: 9, scope: !12419)
!12657 = !DILocation(line: 1601, column: 9, scope: !12419)
!12658 = !DILocation(line: 1601, column: 17, scope: !12419)
!12659 = !DILocation(line: 1601, column: 24, scope: !12419)
!12660 = !DILocation(line: 1601, column: 35, scope: !12419)
!12661 = !DILocation(line: 1601, column: 33, scope: !12419)
!12662 = !DILocation(line: 1601, column: 2, scope: !12419)
!12663 = !DILocation(line: 1602, column: 1, scope: !12419)
!12664 = distinct !DISubprogram(name: "xlgmac_config_tx_fifo_size", scope: !1, file: !1, line: 1630, type: !7567, scopeLine: 1631, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1619)
!12665 = !DILocalVariable(name: "pdata", arg: 1, scope: !12664, file: !1, line: 1630, type: !7555)
!12666 = !DILocation(line: 1630, column: 61, scope: !12664)
!12667 = !DILocalVariable(name: "fifo_size", scope: !12664, file: !1, line: 1632, type: !11)
!12668 = !DILocation(line: 1632, column: 15, scope: !12664)
!12669 = !DILocalVariable(name: "i", scope: !12664, file: !1, line: 1633, type: !11)
!12670 = !DILocation(line: 1633, column: 15, scope: !12664)
!12671 = !DILocalVariable(name: "regval", scope: !12664, file: !1, line: 1634, type: !1021)
!12672 = !DILocation(line: 1634, column: 6, scope: !12664)
!12673 = !DILocation(line: 1637, column: 5, scope: !12664)
!12674 = !DILocation(line: 1637, column: 12, scope: !12664)
!12675 = !DILocation(line: 1637, column: 20, scope: !12664)
!12676 = !DILocation(line: 1638, column: 5, scope: !12664)
!12677 = !DILocation(line: 1638, column: 12, scope: !12664)
!12678 = !DILocation(line: 1636, column: 14, scope: !12664)
!12679 = !DILocation(line: 1636, column: 12, scope: !12664)
!12680 = !DILocation(line: 1640, column: 9, scope: !12681)
!12681 = distinct !DILexicalBlock(scope: !12664, file: !1, line: 1640, column: 2)
!12682 = !DILocation(line: 1640, column: 7, scope: !12681)
!12683 = !DILocation(line: 1640, column: 14, scope: !12684)
!12684 = distinct !DILexicalBlock(scope: !12681, file: !1, line: 1640, column: 2)
!12685 = !DILocation(line: 1640, column: 18, scope: !12684)
!12686 = !DILocation(line: 1640, column: 25, scope: !12684)
!12687 = !DILocation(line: 1640, column: 16, scope: !12684)
!12688 = !DILocation(line: 1640, column: 2, scope: !12681)
!12689 = !DILocation(line: 1641, column: 18, scope: !12690)
!12690 = distinct !DILexicalBlock(scope: !12684, file: !1, line: 1640, column: 42)
!12691 = !DILocation(line: 1641, column: 12, scope: !12690)
!12692 = !DILocation(line: 1641, column: 10, scope: !12690)
!12693 = !DILocalVariable(name: "_var", scope: !12694, file: !1, line: 1642, type: !1021)
!12694 = distinct !DILexicalBlock(scope: !12690, file: !1, line: 1642, column: 12)
!12695 = !DILocation(line: 1642, column: 12, scope: !12694)
!12696 = !DILocalVariable(name: "_pos", scope: !12694, file: !1, line: 1642, type: !5)
!12697 = !DILocalVariable(name: "_len", scope: !12694, file: !1, line: 1642, type: !5)
!12698 = !DILocalVariable(name: "_val", scope: !12694, file: !1, line: 1642, type: !11)
!12699 = !DILocation(line: 1642, column: 10, scope: !12690)
!12700 = !DILocation(line: 1644, column: 10, scope: !12690)
!12701 = !DILocation(line: 1644, column: 18, scope: !12690)
!12702 = !DILocation(line: 1644, column: 3, scope: !12690)
!12703 = !DILocation(line: 1645, column: 2, scope: !12690)
!12704 = !DILocation(line: 1640, column: 38, scope: !12684)
!12705 = !DILocation(line: 1640, column: 2, scope: !12684)
!12706 = distinct !{!12706, !12688, !12707}
!12707 = !DILocation(line: 1645, column: 2, scope: !12681)
!12708 = !DILocation(line: 1647, column: 2, scope: !12664)
!12709 = !DILocation(line: 1647, column: 2, scope: !12710)
!12710 = distinct !DILexicalBlock(scope: !12711, file: !1, line: 1647, column: 2)
!12711 = distinct !DILexicalBlock(scope: !12664, file: !1, line: 1647, column: 2)
!12712 = !DILocation(line: 1647, column: 2, scope: !12711)
!12713 = !DILocation(line: 1650, column: 1, scope: !12664)
!12714 = distinct !DISubprogram(name: "xlgmac_config_rx_fifo_size", scope: !1, file: !1, line: 1652, type: !7567, scopeLine: 1653, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1619)
!12715 = !DILocalVariable(name: "pdata", arg: 1, scope: !12714, file: !1, line: 1652, type: !7555)
!12716 = !DILocation(line: 1652, column: 61, scope: !12714)
!12717 = !DILocalVariable(name: "fifo_size", scope: !12714, file: !1, line: 1654, type: !11)
!12718 = !DILocation(line: 1654, column: 15, scope: !12714)
!12719 = !DILocalVariable(name: "i", scope: !12714, file: !1, line: 1655, type: !11)
!12720 = !DILocation(line: 1655, column: 15, scope: !12714)
!12721 = !DILocalVariable(name: "regval", scope: !12714, file: !1, line: 1656, type: !1021)
!12722 = !DILocation(line: 1656, column: 6, scope: !12714)
!12723 = !DILocation(line: 1659, column: 6, scope: !12714)
!12724 = !DILocation(line: 1659, column: 13, scope: !12714)
!12725 = !DILocation(line: 1659, column: 21, scope: !12714)
!12726 = !DILocation(line: 1660, column: 6, scope: !12714)
!12727 = !DILocation(line: 1660, column: 13, scope: !12714)
!12728 = !DILocation(line: 1658, column: 14, scope: !12714)
!12729 = !DILocation(line: 1658, column: 12, scope: !12714)
!12730 = !DILocation(line: 1662, column: 9, scope: !12731)
!12731 = distinct !DILexicalBlock(scope: !12714, file: !1, line: 1662, column: 2)
!12732 = !DILocation(line: 1662, column: 7, scope: !12731)
!12733 = !DILocation(line: 1662, column: 14, scope: !12734)
!12734 = distinct !DILexicalBlock(scope: !12731, file: !1, line: 1662, column: 2)
!12735 = !DILocation(line: 1662, column: 18, scope: !12734)
!12736 = !DILocation(line: 1662, column: 25, scope: !12734)
!12737 = !DILocation(line: 1662, column: 16, scope: !12734)
!12738 = !DILocation(line: 1662, column: 2, scope: !12731)
!12739 = !DILocation(line: 1663, column: 18, scope: !12740)
!12740 = distinct !DILexicalBlock(scope: !12734, file: !1, line: 1662, column: 42)
!12741 = !DILocation(line: 1663, column: 12, scope: !12740)
!12742 = !DILocation(line: 1663, column: 10, scope: !12740)
!12743 = !DILocalVariable(name: "_var", scope: !12744, file: !1, line: 1664, type: !1021)
!12744 = distinct !DILexicalBlock(scope: !12740, file: !1, line: 1664, column: 12)
!12745 = !DILocation(line: 1664, column: 12, scope: !12744)
!12746 = !DILocalVariable(name: "_pos", scope: !12744, file: !1, line: 1664, type: !5)
!12747 = !DILocalVariable(name: "_len", scope: !12744, file: !1, line: 1664, type: !5)
!12748 = !DILocalVariable(name: "_val", scope: !12744, file: !1, line: 1664, type: !11)
!12749 = !DILocation(line: 1664, column: 10, scope: !12740)
!12750 = !DILocation(line: 1666, column: 10, scope: !12740)
!12751 = !DILocation(line: 1666, column: 18, scope: !12740)
!12752 = !DILocation(line: 1666, column: 3, scope: !12740)
!12753 = !DILocation(line: 1667, column: 2, scope: !12740)
!12754 = !DILocation(line: 1662, column: 38, scope: !12734)
!12755 = !DILocation(line: 1662, column: 2, scope: !12734)
!12756 = distinct !{!12756, !12738, !12757}
!12757 = !DILocation(line: 1667, column: 2, scope: !12731)
!12758 = !DILocation(line: 1669, column: 2, scope: !12714)
!12759 = !DILocation(line: 1669, column: 2, scope: !12760)
!12760 = distinct !DILexicalBlock(scope: !12761, file: !1, line: 1669, column: 2)
!12761 = distinct !DILexicalBlock(scope: !12714, file: !1, line: 1669, column: 2)
!12762 = !DILocation(line: 1669, column: 2, scope: !12761)
!12763 = !DILocation(line: 1672, column: 1, scope: !12714)
!12764 = distinct !DISubprogram(name: "xlgmac_config_flow_control_threshold", scope: !1, file: !1, line: 1674, type: !7567, scopeLine: 1675, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1619)
!12765 = !DILocalVariable(name: "pdata", arg: 1, scope: !12764, file: !1, line: 1674, type: !7555)
!12766 = !DILocation(line: 1674, column: 71, scope: !12764)
!12767 = !DILocalVariable(name: "i", scope: !12764, file: !1, line: 1676, type: !11)
!12768 = !DILocation(line: 1676, column: 15, scope: !12764)
!12769 = !DILocalVariable(name: "regval", scope: !12764, file: !1, line: 1677, type: !1021)
!12770 = !DILocation(line: 1677, column: 6, scope: !12764)
!12771 = !DILocation(line: 1679, column: 9, scope: !12772)
!12772 = distinct !DILexicalBlock(scope: !12764, file: !1, line: 1679, column: 2)
!12773 = !DILocation(line: 1679, column: 7, scope: !12772)
!12774 = !DILocation(line: 1679, column: 14, scope: !12775)
!12775 = distinct !DILexicalBlock(scope: !12772, file: !1, line: 1679, column: 2)
!12776 = !DILocation(line: 1679, column: 18, scope: !12775)
!12777 = !DILocation(line: 1679, column: 25, scope: !12775)
!12778 = !DILocation(line: 1679, column: 16, scope: !12775)
!12779 = !DILocation(line: 1679, column: 2, scope: !12772)
!12780 = !DILocation(line: 1680, column: 18, scope: !12781)
!12781 = distinct !DILexicalBlock(scope: !12775, file: !1, line: 1679, column: 42)
!12782 = !DILocation(line: 1680, column: 12, scope: !12781)
!12783 = !DILocation(line: 1680, column: 10, scope: !12781)
!12784 = !DILocalVariable(name: "_var", scope: !12785, file: !1, line: 1682, type: !1021)
!12785 = distinct !DILexicalBlock(scope: !12781, file: !1, line: 1682, column: 12)
!12786 = !DILocation(line: 1682, column: 12, scope: !12785)
!12787 = !DILocalVariable(name: "_pos", scope: !12785, file: !1, line: 1682, type: !5)
!12788 = !DILocalVariable(name: "_len", scope: !12785, file: !1, line: 1682, type: !5)
!12789 = !DILocalVariable(name: "_val", scope: !12785, file: !1, line: 1682, type: !5)
!12790 = !DILocation(line: 1682, column: 10, scope: !12781)
!12791 = !DILocalVariable(name: "_var", scope: !12792, file: !1, line: 1685, type: !1021)
!12792 = distinct !DILexicalBlock(scope: !12781, file: !1, line: 1685, column: 12)
!12793 = !DILocation(line: 1685, column: 12, scope: !12792)
!12794 = !DILocalVariable(name: "_pos", scope: !12792, file: !1, line: 1685, type: !5)
!12795 = !DILocalVariable(name: "_len", scope: !12792, file: !1, line: 1685, type: !5)
!12796 = !DILocalVariable(name: "_val", scope: !12792, file: !1, line: 1685, type: !5)
!12797 = !DILocation(line: 1685, column: 10, scope: !12781)
!12798 = !DILocation(line: 1687, column: 10, scope: !12781)
!12799 = !DILocation(line: 1687, column: 18, scope: !12781)
!12800 = !DILocation(line: 1687, column: 3, scope: !12781)
!12801 = !DILocation(line: 1688, column: 2, scope: !12781)
!12802 = !DILocation(line: 1679, column: 38, scope: !12775)
!12803 = !DILocation(line: 1679, column: 2, scope: !12775)
!12804 = distinct !{!12804, !12779, !12805}
!12805 = !DILocation(line: 1688, column: 2, scope: !12772)
!12806 = !DILocation(line: 1689, column: 1, scope: !12764)
!12807 = distinct !DISubprogram(name: "xlgmac_config_rx_fep_enable", scope: !1, file: !1, line: 1327, type: !7567, scopeLine: 1328, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1619)
!12808 = !DILocalVariable(name: "pdata", arg: 1, scope: !12807, file: !1, line: 1327, type: !7555)
!12809 = !DILocation(line: 1327, column: 62, scope: !12807)
!12810 = !DILocalVariable(name: "i", scope: !12807, file: !1, line: 1329, type: !11)
!12811 = !DILocation(line: 1329, column: 15, scope: !12807)
!12812 = !DILocalVariable(name: "regval", scope: !12807, file: !1, line: 1330, type: !1021)
!12813 = !DILocation(line: 1330, column: 6, scope: !12807)
!12814 = !DILocation(line: 1332, column: 9, scope: !12815)
!12815 = distinct !DILexicalBlock(scope: !12807, file: !1, line: 1332, column: 2)
!12816 = !DILocation(line: 1332, column: 7, scope: !12815)
!12817 = !DILocation(line: 1332, column: 14, scope: !12818)
!12818 = distinct !DILexicalBlock(scope: !12815, file: !1, line: 1332, column: 2)
!12819 = !DILocation(line: 1332, column: 18, scope: !12818)
!12820 = !DILocation(line: 1332, column: 25, scope: !12818)
!12821 = !DILocation(line: 1332, column: 16, scope: !12818)
!12822 = !DILocation(line: 1332, column: 2, scope: !12815)
!12823 = !DILocation(line: 1333, column: 18, scope: !12824)
!12824 = distinct !DILexicalBlock(scope: !12818, file: !1, line: 1332, column: 42)
!12825 = !DILocation(line: 1333, column: 12, scope: !12824)
!12826 = !DILocation(line: 1333, column: 10, scope: !12824)
!12827 = !DILocalVariable(name: "_var", scope: !12828, file: !1, line: 1334, type: !1021)
!12828 = distinct !DILexicalBlock(scope: !12824, file: !1, line: 1334, column: 12)
!12829 = !DILocation(line: 1334, column: 12, scope: !12828)
!12830 = !DILocalVariable(name: "_pos", scope: !12828, file: !1, line: 1334, type: !5)
!12831 = !DILocalVariable(name: "_len", scope: !12828, file: !1, line: 1334, type: !5)
!12832 = !DILocalVariable(name: "_val", scope: !12828, file: !1, line: 1334, type: !5)
!12833 = !DILocation(line: 1334, column: 10, scope: !12824)
!12834 = !DILocation(line: 1336, column: 10, scope: !12824)
!12835 = !DILocation(line: 1336, column: 18, scope: !12824)
!12836 = !DILocation(line: 1336, column: 3, scope: !12824)
!12837 = !DILocation(line: 1337, column: 2, scope: !12824)
!12838 = !DILocation(line: 1332, column: 38, scope: !12818)
!12839 = !DILocation(line: 1332, column: 2, scope: !12818)
!12840 = distinct !{!12840, !12822, !12841}
!12841 = !DILocation(line: 1337, column: 2, scope: !12815)
!12842 = !DILocation(line: 1338, column: 1, scope: !12807)
!12843 = distinct !DISubprogram(name: "xlgmac_config_rx_fup_enable", scope: !1, file: !1, line: 1340, type: !7567, scopeLine: 1341, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1619)
!12844 = !DILocalVariable(name: "pdata", arg: 1, scope: !12843, file: !1, line: 1340, type: !7555)
!12845 = !DILocation(line: 1340, column: 62, scope: !12843)
!12846 = !DILocalVariable(name: "i", scope: !12843, file: !1, line: 1342, type: !11)
!12847 = !DILocation(line: 1342, column: 15, scope: !12843)
!12848 = !DILocalVariable(name: "regval", scope: !12843, file: !1, line: 1343, type: !1021)
!12849 = !DILocation(line: 1343, column: 6, scope: !12843)
!12850 = !DILocation(line: 1345, column: 9, scope: !12851)
!12851 = distinct !DILexicalBlock(scope: !12843, file: !1, line: 1345, column: 2)
!12852 = !DILocation(line: 1345, column: 7, scope: !12851)
!12853 = !DILocation(line: 1345, column: 14, scope: !12854)
!12854 = distinct !DILexicalBlock(scope: !12851, file: !1, line: 1345, column: 2)
!12855 = !DILocation(line: 1345, column: 18, scope: !12854)
!12856 = !DILocation(line: 1345, column: 25, scope: !12854)
!12857 = !DILocation(line: 1345, column: 16, scope: !12854)
!12858 = !DILocation(line: 1345, column: 2, scope: !12851)
!12859 = !DILocation(line: 1346, column: 18, scope: !12860)
!12860 = distinct !DILexicalBlock(scope: !12854, file: !1, line: 1345, column: 42)
!12861 = !DILocation(line: 1346, column: 12, scope: !12860)
!12862 = !DILocation(line: 1346, column: 10, scope: !12860)
!12863 = !DILocalVariable(name: "_var", scope: !12864, file: !1, line: 1347, type: !1021)
!12864 = distinct !DILexicalBlock(scope: !12860, file: !1, line: 1347, column: 12)
!12865 = !DILocation(line: 1347, column: 12, scope: !12864)
!12866 = !DILocalVariable(name: "_pos", scope: !12864, file: !1, line: 1347, type: !5)
!12867 = !DILocalVariable(name: "_len", scope: !12864, file: !1, line: 1347, type: !5)
!12868 = !DILocalVariable(name: "_val", scope: !12864, file: !1, line: 1347, type: !5)
!12869 = !DILocation(line: 1347, column: 10, scope: !12860)
!12870 = !DILocation(line: 1349, column: 10, scope: !12860)
!12871 = !DILocation(line: 1349, column: 18, scope: !12860)
!12872 = !DILocation(line: 1349, column: 3, scope: !12860)
!12873 = !DILocation(line: 1350, column: 2, scope: !12860)
!12874 = !DILocation(line: 1345, column: 38, scope: !12854)
!12875 = !DILocation(line: 1345, column: 2, scope: !12854)
!12876 = distinct !{!12876, !12858, !12877}
!12877 = !DILocation(line: 1350, column: 2, scope: !12851)
!12878 = !DILocation(line: 1351, column: 1, scope: !12843)
!12879 = distinct !DISubprogram(name: "xlgmac_enable_mtl_interrupts", scope: !1, file: !1, line: 2511, type: !7567, scopeLine: 2512, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1619)
!12880 = !DILocalVariable(name: "pdata", arg: 1, scope: !12879, file: !1, line: 2511, type: !7555)
!12881 = !DILocation(line: 2511, column: 63, scope: !12879)
!12882 = !DILocalVariable(name: "q_count", scope: !12879, file: !1, line: 2513, type: !11)
!12883 = !DILocation(line: 2513, column: 15, scope: !12879)
!12884 = !DILocalVariable(name: "i", scope: !12879, file: !1, line: 2513, type: !11)
!12885 = !DILocation(line: 2513, column: 24, scope: !12879)
!12886 = !DILocalVariable(name: "mtl_q_isr", scope: !12879, file: !1, line: 2514, type: !11)
!12887 = !DILocation(line: 2514, column: 15, scope: !12879)
!12888 = !DILocalVariable(name: "__UNIQUE_ID___x338", scope: !12889, file: !1, line: 2516, type: !11)
!12889 = distinct !DILexicalBlock(scope: !12879, file: !1, line: 2516, column: 12)
!12890 = !DILocation(line: 2516, column: 12, scope: !12889)
!12891 = !DILocalVariable(name: "__UNIQUE_ID___y339", scope: !12889, file: !1, line: 2516, type: !11)
!12892 = !DILocation(line: 2516, column: 10, scope: !12879)
!12893 = !DILocation(line: 2517, column: 9, scope: !12894)
!12894 = distinct !DILexicalBlock(scope: !12879, file: !1, line: 2517, column: 2)
!12895 = !DILocation(line: 2517, column: 7, scope: !12894)
!12896 = !DILocation(line: 2517, column: 14, scope: !12897)
!12897 = distinct !DILexicalBlock(scope: !12894, file: !1, line: 2517, column: 2)
!12898 = !DILocation(line: 2517, column: 18, scope: !12897)
!12899 = !DILocation(line: 2517, column: 16, scope: !12897)
!12900 = !DILocation(line: 2517, column: 2, scope: !12894)
!12901 = !DILocation(line: 2519, column: 21, scope: !12902)
!12902 = distinct !DILexicalBlock(scope: !12897, file: !1, line: 2517, column: 32)
!12903 = !DILocation(line: 2519, column: 15, scope: !12902)
!12904 = !DILocation(line: 2519, column: 13, scope: !12902)
!12905 = !DILocation(line: 2520, column: 10, scope: !12902)
!12906 = !DILocation(line: 2520, column: 21, scope: !12902)
!12907 = !DILocation(line: 2520, column: 3, scope: !12902)
!12908 = !DILocation(line: 2523, column: 13, scope: !12902)
!12909 = !DILocation(line: 2523, column: 3, scope: !12902)
!12910 = !DILocation(line: 2524, column: 2, scope: !12902)
!12911 = !DILocation(line: 2517, column: 28, scope: !12897)
!12912 = !DILocation(line: 2517, column: 2, scope: !12897)
!12913 = distinct !{!12913, !12900, !12914}
!12914 = !DILocation(line: 2524, column: 2, scope: !12894)
!12915 = !DILocation(line: 2525, column: 1, scope: !12879)
!12916 = distinct !DISubprogram(name: "xlgmac_config_mac_address", scope: !1, file: !1, line: 373, type: !7567, scopeLine: 374, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1619)
!12917 = !DILocalVariable(name: "pdata", arg: 1, scope: !12916, file: !1, line: 373, type: !7555)
!12918 = !DILocation(line: 373, column: 60, scope: !12916)
!12919 = !DILocalVariable(name: "regval", scope: !12916, file: !1, line: 375, type: !1021)
!12920 = !DILocation(line: 375, column: 6, scope: !12916)
!12921 = !DILocation(line: 377, column: 25, scope: !12916)
!12922 = !DILocation(line: 377, column: 32, scope: !12916)
!12923 = !DILocation(line: 377, column: 39, scope: !12916)
!12924 = !DILocation(line: 377, column: 47, scope: !12916)
!12925 = !DILocation(line: 377, column: 2, scope: !12916)
!12926 = !DILocation(line: 380, column: 6, scope: !12927)
!12927 = distinct !DILexicalBlock(scope: !12916, file: !1, line: 380, column: 6)
!12928 = !DILocation(line: 380, column: 13, scope: !12927)
!12929 = !DILocation(line: 380, column: 21, scope: !12927)
!12930 = !DILocation(line: 380, column: 6, scope: !12916)
!12931 = !DILocation(line: 381, column: 18, scope: !12932)
!12932 = distinct !DILexicalBlock(scope: !12927, file: !1, line: 380, column: 38)
!12933 = !DILocation(line: 381, column: 25, scope: !12932)
!12934 = !DILocation(line: 381, column: 34, scope: !12932)
!12935 = !DILocation(line: 381, column: 12, scope: !12932)
!12936 = !DILocation(line: 381, column: 10, scope: !12932)
!12937 = !DILocalVariable(name: "_var", scope: !12938, file: !1, line: 382, type: !1021)
!12938 = distinct !DILexicalBlock(scope: !12932, file: !1, line: 382, column: 12)
!12939 = !DILocation(line: 382, column: 12, scope: !12938)
!12940 = !DILocalVariable(name: "_pos", scope: !12938, file: !1, line: 382, type: !5)
!12941 = !DILocalVariable(name: "_len", scope: !12938, file: !1, line: 382, type: !5)
!12942 = !DILocalVariable(name: "_val", scope: !12938, file: !1, line: 382, type: !5)
!12943 = !DILocation(line: 382, column: 10, scope: !12932)
!12944 = !DILocalVariable(name: "_var", scope: !12945, file: !1, line: 384, type: !1021)
!12945 = distinct !DILexicalBlock(scope: !12932, file: !1, line: 384, column: 12)
!12946 = !DILocation(line: 384, column: 12, scope: !12945)
!12947 = !DILocalVariable(name: "_pos", scope: !12945, file: !1, line: 384, type: !5)
!12948 = !DILocalVariable(name: "_len", scope: !12945, file: !1, line: 384, type: !5)
!12949 = !DILocalVariable(name: "_val", scope: !12945, file: !1, line: 384, type: !5)
!12950 = !DILocation(line: 384, column: 10, scope: !12932)
!12951 = !DILocalVariable(name: "_var", scope: !12952, file: !1, line: 386, type: !1021)
!12952 = distinct !DILexicalBlock(scope: !12932, file: !1, line: 386, column: 12)
!12953 = !DILocation(line: 386, column: 12, scope: !12952)
!12954 = !DILocalVariable(name: "_pos", scope: !12952, file: !1, line: 386, type: !5)
!12955 = !DILocalVariable(name: "_len", scope: !12952, file: !1, line: 386, type: !5)
!12956 = !DILocalVariable(name: "_val", scope: !12952, file: !1, line: 386, type: !5)
!12957 = !DILocation(line: 386, column: 10, scope: !12932)
!12958 = !DILocation(line: 388, column: 10, scope: !12932)
!12959 = !DILocation(line: 388, column: 18, scope: !12932)
!12960 = !DILocation(line: 388, column: 25, scope: !12932)
!12961 = !DILocation(line: 388, column: 34, scope: !12932)
!12962 = !DILocation(line: 388, column: 3, scope: !12932)
!12963 = !DILocation(line: 389, column: 2, scope: !12932)
!12964 = !DILocation(line: 390, column: 1, scope: !12916)
!12965 = distinct !DISubprogram(name: "xlgmac_config_jumbo_enable", scope: !1, file: !1, line: 392, type: !7567, scopeLine: 393, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1619)
!12966 = !DILocalVariable(name: "pdata", arg: 1, scope: !12965, file: !1, line: 392, type: !7555)
!12967 = !DILocation(line: 392, column: 61, scope: !12965)
!12968 = !DILocalVariable(name: "val", scope: !12965, file: !1, line: 394, type: !11)
!12969 = !DILocation(line: 394, column: 15, scope: !12965)
!12970 = !DILocalVariable(name: "regval", scope: !12965, file: !1, line: 395, type: !1021)
!12971 = !DILocation(line: 395, column: 6, scope: !12965)
!12972 = !DILocation(line: 397, column: 9, scope: !12965)
!12973 = !DILocation(line: 397, column: 16, scope: !12965)
!12974 = !DILocation(line: 397, column: 24, scope: !12965)
!12975 = !DILocation(line: 397, column: 28, scope: !12965)
!12976 = !DILocation(line: 397, column: 8, scope: !12965)
!12977 = !DILocation(line: 397, column: 6, scope: !12965)
!12978 = !DILocation(line: 399, column: 17, scope: !12965)
!12979 = !DILocation(line: 399, column: 24, scope: !12965)
!12980 = !DILocation(line: 399, column: 33, scope: !12965)
!12981 = !DILocation(line: 399, column: 11, scope: !12965)
!12982 = !DILocation(line: 399, column: 9, scope: !12965)
!12983 = !DILocalVariable(name: "_var", scope: !12984, file: !1, line: 400, type: !1021)
!12984 = distinct !DILexicalBlock(scope: !12965, file: !1, line: 400, column: 11)
!12985 = !DILocation(line: 400, column: 11, scope: !12984)
!12986 = !DILocalVariable(name: "_pos", scope: !12984, file: !1, line: 400, type: !5)
!12987 = !DILocalVariable(name: "_len", scope: !12984, file: !1, line: 400, type: !5)
!12988 = !DILocalVariable(name: "_val", scope: !12984, file: !1, line: 400, type: !11)
!12989 = !DILocation(line: 400, column: 9, scope: !12965)
!12990 = !DILocation(line: 402, column: 9, scope: !12965)
!12991 = !DILocation(line: 402, column: 17, scope: !12965)
!12992 = !DILocation(line: 402, column: 24, scope: !12965)
!12993 = !DILocation(line: 402, column: 33, scope: !12965)
!12994 = !DILocation(line: 402, column: 2, scope: !12965)
!12995 = !DILocation(line: 403, column: 1, scope: !12965)
!12996 = distinct !DISubprogram(name: "xlgmac_config_flow_control", scope: !1, file: !1, line: 1321, type: !7567, scopeLine: 1322, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1619)
!12997 = !DILocalVariable(name: "pdata", arg: 1, scope: !12996, file: !1, line: 1321, type: !7555)
!12998 = !DILocation(line: 1321, column: 61, scope: !12996)
!12999 = !DILocation(line: 1323, column: 32, scope: !12996)
!13000 = !DILocation(line: 1323, column: 2, scope: !12996)
!13001 = !DILocation(line: 1324, column: 32, scope: !12996)
!13002 = !DILocation(line: 1324, column: 2, scope: !12996)
!13003 = !DILocation(line: 1325, column: 1, scope: !12996)
!13004 = distinct !DISubprogram(name: "xlgmac_config_mac_speed", scope: !1, file: !1, line: 2617, type: !7567, scopeLine: 2618, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1619)
!13005 = !DILocalVariable(name: "pdata", arg: 1, scope: !13004, file: !1, line: 2617, type: !7555)
!13006 = !DILocation(line: 2617, column: 58, scope: !13004)
!13007 = !DILocation(line: 2619, column: 10, scope: !13004)
!13008 = !DILocation(line: 2619, column: 17, scope: !13004)
!13009 = !DILocation(line: 2619, column: 2, scope: !13004)
!13010 = !DILocation(line: 2621, column: 34, scope: !13011)
!13011 = distinct !DILexicalBlock(scope: !13004, file: !1, line: 2619, column: 28)
!13012 = !DILocation(line: 2621, column: 3, scope: !13011)
!13013 = !DILocation(line: 2622, column: 3, scope: !13011)
!13014 = !DILocation(line: 2625, column: 33, scope: !13011)
!13015 = !DILocation(line: 2625, column: 3, scope: !13011)
!13016 = !DILocation(line: 2626, column: 3, scope: !13011)
!13017 = !DILocation(line: 2629, column: 33, scope: !13011)
!13018 = !DILocation(line: 2629, column: 3, scope: !13011)
!13019 = !DILocation(line: 2630, column: 3, scope: !13011)
!13020 = !DILocation(line: 2633, column: 33, scope: !13011)
!13021 = !DILocation(line: 2633, column: 3, scope: !13011)
!13022 = !DILocation(line: 2634, column: 3, scope: !13011)
!13023 = !DILocation(line: 2636, column: 1, scope: !13004)
!13024 = distinct !DISubprogram(name: "xlgmac_config_checksum_offload", scope: !1, file: !1, line: 405, type: !7567, scopeLine: 406, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1619)
!13025 = !DILocalVariable(name: "pdata", arg: 1, scope: !13024, file: !1, line: 405, type: !7555)
!13026 = !DILocation(line: 405, column: 65, scope: !13024)
!13027 = !DILocation(line: 407, column: 6, scope: !13028)
!13028 = distinct !DILexicalBlock(scope: !13024, file: !1, line: 407, column: 6)
!13029 = !DILocation(line: 407, column: 13, scope: !13028)
!13030 = !DILocation(line: 407, column: 21, scope: !13028)
!13031 = !DILocation(line: 407, column: 30, scope: !13028)
!13032 = !DILocation(line: 407, column: 6, scope: !13024)
!13033 = !DILocation(line: 408, column: 25, scope: !13028)
!13034 = !DILocation(line: 408, column: 3, scope: !13028)
!13035 = !DILocation(line: 410, column: 26, scope: !13028)
!13036 = !DILocation(line: 410, column: 3, scope: !13028)
!13037 = !DILocation(line: 411, column: 1, scope: !13024)
!13038 = distinct !DISubprogram(name: "xlgmac_config_vlan_support", scope: !1, file: !1, line: 413, type: !7567, scopeLine: 414, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1619)
!13039 = !DILocalVariable(name: "pdata", arg: 1, scope: !13038, file: !1, line: 413, type: !7555)
!13040 = !DILocation(line: 413, column: 61, scope: !13038)
!13041 = !DILocalVariable(name: "regval", scope: !13038, file: !1, line: 415, type: !1021)
!13042 = !DILocation(line: 415, column: 6, scope: !13038)
!13043 = !DILocation(line: 417, column: 17, scope: !13038)
!13044 = !DILocation(line: 417, column: 24, scope: !13038)
!13045 = !DILocation(line: 417, column: 33, scope: !13038)
!13046 = !DILocation(line: 417, column: 11, scope: !13038)
!13047 = !DILocation(line: 417, column: 9, scope: !13038)
!13048 = !DILocalVariable(name: "_var", scope: !13049, file: !1, line: 419, type: !1021)
!13049 = distinct !DILexicalBlock(scope: !13038, file: !1, line: 419, column: 11)
!13050 = !DILocation(line: 419, column: 11, scope: !13049)
!13051 = !DILocalVariable(name: "_pos", scope: !13049, file: !1, line: 419, type: !5)
!13052 = !DILocalVariable(name: "_len", scope: !13049, file: !1, line: 419, type: !5)
!13053 = !DILocalVariable(name: "_val", scope: !13049, file: !1, line: 419, type: !5)
!13054 = !DILocation(line: 419, column: 9, scope: !13038)
!13055 = !DILocalVariable(name: "_var", scope: !13056, file: !1, line: 421, type: !1021)
!13056 = distinct !DILexicalBlock(scope: !13038, file: !1, line: 421, column: 11)
!13057 = !DILocation(line: 421, column: 11, scope: !13056)
!13058 = !DILocalVariable(name: "_pos", scope: !13056, file: !1, line: 421, type: !5)
!13059 = !DILocalVariable(name: "_len", scope: !13056, file: !1, line: 421, type: !5)
!13060 = !DILocalVariable(name: "_val", scope: !13056, file: !1, line: 421, type: !5)
!13061 = !DILocation(line: 421, column: 9, scope: !13038)
!13062 = !DILocation(line: 423, column: 9, scope: !13038)
!13063 = !DILocation(line: 423, column: 17, scope: !13038)
!13064 = !DILocation(line: 423, column: 24, scope: !13038)
!13065 = !DILocation(line: 423, column: 33, scope: !13038)
!13066 = !DILocation(line: 423, column: 2, scope: !13038)
!13067 = !DILocation(line: 426, column: 32, scope: !13038)
!13068 = !DILocation(line: 426, column: 2, scope: !13038)
!13069 = !DILocation(line: 428, column: 6, scope: !13070)
!13070 = distinct !DILexicalBlock(scope: !13038, file: !1, line: 428, column: 6)
!13071 = !DILocation(line: 428, column: 13, scope: !13070)
!13072 = !DILocation(line: 428, column: 21, scope: !13070)
!13073 = !DILocation(line: 428, column: 30, scope: !13070)
!13074 = !DILocation(line: 428, column: 6, scope: !13038)
!13075 = !DILocation(line: 429, column: 35, scope: !13070)
!13076 = !DILocation(line: 429, column: 3, scope: !13070)
!13077 = !DILocation(line: 431, column: 36, scope: !13070)
!13078 = !DILocation(line: 431, column: 3, scope: !13070)
!13079 = !DILocation(line: 433, column: 6, scope: !13080)
!13080 = distinct !DILexicalBlock(scope: !13038, file: !1, line: 433, column: 6)
!13081 = !DILocation(line: 433, column: 13, scope: !13080)
!13082 = !DILocation(line: 433, column: 21, scope: !13080)
!13083 = !DILocation(line: 433, column: 30, scope: !13080)
!13084 = !DILocation(line: 433, column: 6, scope: !13038)
!13085 = !DILocation(line: 434, column: 35, scope: !13080)
!13086 = !DILocation(line: 434, column: 3, scope: !13080)
!13087 = !DILocation(line: 436, column: 36, scope: !13080)
!13088 = !DILocation(line: 436, column: 3, scope: !13080)
!13089 = !DILocation(line: 437, column: 1, scope: !13038)
!13090 = distinct !DISubprogram(name: "xlgmac_config_mmc", scope: !1, file: !1, line: 2265, type: !7567, scopeLine: 2266, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1619)
!13091 = !DILocalVariable(name: "pdata", arg: 1, scope: !13090, file: !1, line: 2265, type: !7555)
!13092 = !DILocation(line: 2265, column: 52, scope: !13090)
!13093 = !DILocalVariable(name: "regval", scope: !13090, file: !1, line: 2267, type: !1021)
!13094 = !DILocation(line: 2267, column: 6, scope: !13090)
!13095 = !DILocation(line: 2269, column: 17, scope: !13090)
!13096 = !DILocation(line: 2269, column: 24, scope: !13090)
!13097 = !DILocation(line: 2269, column: 33, scope: !13090)
!13098 = !DILocation(line: 2269, column: 11, scope: !13090)
!13099 = !DILocation(line: 2269, column: 9, scope: !13090)
!13100 = !DILocalVariable(name: "_var", scope: !13101, file: !1, line: 2271, type: !1021)
!13101 = distinct !DILexicalBlock(scope: !13090, file: !1, line: 2271, column: 11)
!13102 = !DILocation(line: 2271, column: 11, scope: !13101)
!13103 = !DILocalVariable(name: "_pos", scope: !13101, file: !1, line: 2271, type: !5)
!13104 = !DILocalVariable(name: "_len", scope: !13101, file: !1, line: 2271, type: !5)
!13105 = !DILocalVariable(name: "_val", scope: !13101, file: !1, line: 2271, type: !5)
!13106 = !DILocation(line: 2271, column: 9, scope: !13090)
!13107 = !DILocalVariable(name: "_var", scope: !13108, file: !1, line: 2274, type: !1021)
!13108 = distinct !DILexicalBlock(scope: !13090, file: !1, line: 2274, column: 11)
!13109 = !DILocation(line: 2274, column: 11, scope: !13108)
!13110 = !DILocalVariable(name: "_pos", scope: !13108, file: !1, line: 2274, type: !5)
!13111 = !DILocalVariable(name: "_len", scope: !13108, file: !1, line: 2274, type: !5)
!13112 = !DILocalVariable(name: "_val", scope: !13108, file: !1, line: 2274, type: !5)
!13113 = !DILocation(line: 2274, column: 9, scope: !13090)
!13114 = !DILocation(line: 2276, column: 9, scope: !13090)
!13115 = !DILocation(line: 2276, column: 17, scope: !13090)
!13116 = !DILocation(line: 2276, column: 24, scope: !13090)
!13117 = !DILocation(line: 2276, column: 33, scope: !13090)
!13118 = !DILocation(line: 2276, column: 2, scope: !13090)
!13119 = !DILocation(line: 2277, column: 1, scope: !13090)
!13120 = distinct !DISubprogram(name: "xlgmac_enable_mac_interrupts", scope: !1, file: !1, line: 2527, type: !7567, scopeLine: 2528, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1619)
!13121 = !DILocalVariable(name: "pdata", arg: 1, scope: !13120, file: !1, line: 2527, type: !7555)
!13122 = !DILocation(line: 2527, column: 63, scope: !13120)
!13123 = !DILocalVariable(name: "mac_ier", scope: !13120, file: !1, line: 2529, type: !11)
!13124 = !DILocation(line: 2529, column: 15, scope: !13120)
!13125 = !DILocalVariable(name: "regval", scope: !13120, file: !1, line: 2530, type: !1021)
!13126 = !DILocation(line: 2530, column: 6, scope: !13120)
!13127 = !DILocalVariable(name: "_var", scope: !13128, file: !1, line: 2533, type: !11)
!13128 = distinct !DILexicalBlock(scope: !13120, file: !1, line: 2533, column: 12)
!13129 = !DILocation(line: 2533, column: 12, scope: !13128)
!13130 = !DILocalVariable(name: "_pos", scope: !13128, file: !1, line: 2533, type: !5)
!13131 = !DILocalVariable(name: "_len", scope: !13128, file: !1, line: 2533, type: !5)
!13132 = !DILocalVariable(name: "_val", scope: !13128, file: !1, line: 2533, type: !5)
!13133 = !DILocation(line: 2533, column: 10, scope: !13120)
!13134 = !DILocation(line: 2536, column: 9, scope: !13120)
!13135 = !DILocation(line: 2536, column: 18, scope: !13120)
!13136 = !DILocation(line: 2536, column: 25, scope: !13120)
!13137 = !DILocation(line: 2536, column: 34, scope: !13120)
!13138 = !DILocation(line: 2536, column: 2, scope: !13120)
!13139 = !DILocation(line: 2539, column: 17, scope: !13120)
!13140 = !DILocation(line: 2539, column: 24, scope: !13120)
!13141 = !DILocation(line: 2539, column: 33, scope: !13120)
!13142 = !DILocation(line: 2539, column: 11, scope: !13120)
!13143 = !DILocation(line: 2539, column: 9, scope: !13120)
!13144 = !DILocalVariable(name: "_var", scope: !13145, file: !1, line: 2540, type: !1021)
!13145 = distinct !DILexicalBlock(scope: !13120, file: !1, line: 2540, column: 11)
!13146 = !DILocation(line: 2540, column: 11, scope: !13145)
!13147 = !DILocalVariable(name: "_pos", scope: !13145, file: !1, line: 2540, type: !5)
!13148 = !DILocalVariable(name: "_len", scope: !13145, file: !1, line: 2540, type: !5)
!13149 = !DILocalVariable(name: "_val", scope: !13145, file: !1, line: 2540, type: !11)
!13150 = !DILocation(line: 2540, column: 9, scope: !13120)
!13151 = !DILocation(line: 2542, column: 9, scope: !13120)
!13152 = !DILocation(line: 2542, column: 17, scope: !13120)
!13153 = !DILocation(line: 2542, column: 24, scope: !13120)
!13154 = !DILocation(line: 2542, column: 33, scope: !13120)
!13155 = !DILocation(line: 2542, column: 2, scope: !13120)
!13156 = !DILocation(line: 2543, column: 17, scope: !13120)
!13157 = !DILocation(line: 2543, column: 24, scope: !13120)
!13158 = !DILocation(line: 2543, column: 33, scope: !13120)
!13159 = !DILocation(line: 2543, column: 11, scope: !13120)
!13160 = !DILocation(line: 2543, column: 9, scope: !13120)
!13161 = !DILocalVariable(name: "_var", scope: !13162, file: !1, line: 2544, type: !1021)
!13162 = distinct !DILexicalBlock(scope: !13120, file: !1, line: 2544, column: 11)
!13163 = !DILocation(line: 2544, column: 11, scope: !13162)
!13164 = !DILocalVariable(name: "_pos", scope: !13162, file: !1, line: 2544, type: !5)
!13165 = !DILocalVariable(name: "_len", scope: !13162, file: !1, line: 2544, type: !5)
!13166 = !DILocalVariable(name: "_val", scope: !13162, file: !1, line: 2544, type: !11)
!13167 = !DILocation(line: 2544, column: 9, scope: !13120)
!13168 = !DILocation(line: 2546, column: 9, scope: !13120)
!13169 = !DILocation(line: 2546, column: 17, scope: !13120)
!13170 = !DILocation(line: 2546, column: 24, scope: !13120)
!13171 = !DILocation(line: 2546, column: 33, scope: !13120)
!13172 = !DILocation(line: 2546, column: 2, scope: !13120)
!13173 = !DILocation(line: 2547, column: 1, scope: !13120)
!13174 = distinct !DISubprogram(name: "readl", scope: !13175, file: !13175, line: 59, type: !13176, scopeLine: 59, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1619)
!13175 = !DIFile(filename: "./arch/x86/include/asm/io.h", directory: "/home/lizy2001/genbc/linux")
!13176 = !DISubroutineType(types: !13177)
!13177 = !{!11, !13178}
!13178 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13179, size: 64)
!13179 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !13180)
!13180 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: null)
!13181 = !DILocalVariable(name: "addr", arg: 1, scope: !13174, file: !13175, line: 59, type: !13178)
!13182 = !DILocation(line: 59, column: 1, scope: !13174)
!13183 = !DILocalVariable(name: "ret", scope: !13174, file: !13175, line: 59, type: !11)
!13184 = !{i32 -2141730648}
!13185 = distinct !DISubprogram(name: "writel", scope: !13175, file: !13175, line: 67, type: !13186, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1619)
!13186 = !DISubroutineType(types: !13187)
!13187 = !{null, !11, !13188}
!13188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13180, size: 64)
!13189 = !DILocalVariable(name: "val", arg: 1, scope: !13185, file: !13175, line: 67, type: !11)
!13190 = !DILocation(line: 67, column: 1, scope: !13185)
!13191 = !DILocalVariable(name: "addr", arg: 2, scope: !13185, file: !13175, line: 67, type: !13188)
!13192 = !{i32 -2141728255}
!13193 = distinct !DISubprogram(name: "xlgmac_calculate_per_queue_fifo", scope: !1, file: !1, line: 1604, type: !13194, scopeLine: 1607, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1619)
!13194 = !DISubroutineType(types: !13195)
!13195 = !{!11, !11, !11}
!13196 = !DILocalVariable(name: "fifo_size", arg: 1, scope: !13193, file: !1, line: 1605, type: !11)
!13197 = !DILocation(line: 1605, column: 19, scope: !13193)
!13198 = !DILocalVariable(name: "queue_count", arg: 2, scope: !13193, file: !1, line: 1606, type: !11)
!13199 = !DILocation(line: 1606, column: 19, scope: !13193)
!13200 = !DILocalVariable(name: "q_fifo_size", scope: !13193, file: !1, line: 1608, type: !11)
!13201 = !DILocation(line: 1608, column: 15, scope: !13193)
!13202 = !DILocalVariable(name: "p_fifo", scope: !13193, file: !1, line: 1609, type: !11)
!13203 = !DILocation(line: 1609, column: 15, scope: !13193)
!13204 = !DILocation(line: 1612, column: 22, scope: !13193)
!13205 = !DILocation(line: 1612, column: 32, scope: !13193)
!13206 = !DILocation(line: 1612, column: 18, scope: !13193)
!13207 = !DILocation(line: 1612, column: 14, scope: !13193)
!13208 = !DILocalVariable(name: "__UNIQUE_ID___x336", scope: !13209, file: !1, line: 1615, type: !11)
!13209 = distinct !DILexicalBlock(scope: !13193, file: !1, line: 1615, column: 16)
!13210 = !DILocation(line: 1615, column: 16, scope: !13209)
!13211 = !DILocalVariable(name: "__UNIQUE_ID___y337", scope: !13209, file: !1, line: 1615, type: !11)
!13212 = !DILocation(line: 1615, column: 14, scope: !13193)
!13213 = !DILocation(line: 1617, column: 16, scope: !13193)
!13214 = !DILocation(line: 1617, column: 30, scope: !13193)
!13215 = !DILocation(line: 1617, column: 28, scope: !13193)
!13216 = !DILocation(line: 1617, column: 14, scope: !13193)
!13217 = !DILocation(line: 1623, column: 11, scope: !13193)
!13218 = !DILocation(line: 1623, column: 23, scope: !13193)
!13219 = !DILocation(line: 1623, column: 9, scope: !13193)
!13220 = !DILocation(line: 1624, column: 6, scope: !13221)
!13221 = distinct !DILexicalBlock(scope: !13193, file: !1, line: 1624, column: 6)
!13222 = !DILocation(line: 1624, column: 6, scope: !13193)
!13223 = !DILocation(line: 1625, column: 9, scope: !13221)
!13224 = !DILocation(line: 1625, column: 3, scope: !13221)
!13225 = !DILocation(line: 1627, column: 9, scope: !13193)
!13226 = !DILocation(line: 1627, column: 2, scope: !13193)
!13227 = distinct !DISubprogram(name: "xlgmac_prepare_tx_stop", scope: !1, file: !1, line: 455, type: !13228, scopeLine: 457, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1619)
!13228 = !DISubroutineType(types: !13229)
!13229 = !{null, !7555, !7573}
!13230 = !DILocalVariable(name: "pdata", arg: 1, scope: !13227, file: !1, line: 455, type: !7555)
!13231 = !DILocation(line: 455, column: 57, scope: !13227)
!13232 = !DILocalVariable(name: "channel", arg: 2, scope: !13227, file: !1, line: 456, type: !7573)
!13233 = !DILocation(line: 456, column: 31, scope: !13227)
!13234 = !DILocalVariable(name: "tx_dsr", scope: !13227, file: !1, line: 458, type: !11)
!13235 = !DILocation(line: 458, column: 15, scope: !13227)
!13236 = !DILocalVariable(name: "tx_pos", scope: !13227, file: !1, line: 458, type: !11)
!13237 = !DILocation(line: 458, column: 23, scope: !13227)
!13238 = !DILocalVariable(name: "tx_qidx", scope: !13227, file: !1, line: 458, type: !11)
!13239 = !DILocation(line: 458, column: 31, scope: !13227)
!13240 = !DILocalVariable(name: "tx_timeout", scope: !13227, file: !1, line: 459, type: !346)
!13241 = !DILocation(line: 459, column: 16, scope: !13227)
!13242 = !DILocalVariable(name: "tx_status", scope: !13227, file: !1, line: 460, type: !11)
!13243 = !DILocation(line: 460, column: 15, scope: !13227)
!13244 = !DILocation(line: 463, column: 6, scope: !13245)
!13245 = distinct !DILexicalBlock(scope: !13227, file: !1, line: 463, column: 6)
!13246 = !DILocation(line: 463, column: 15, scope: !13245)
!13247 = !DILocation(line: 463, column: 27, scope: !13245)
!13248 = !DILocation(line: 463, column: 6, scope: !13227)
!13249 = !DILocation(line: 464, column: 10, scope: !13250)
!13250 = distinct !DILexicalBlock(scope: !13245, file: !1, line: 463, column: 51)
!13251 = !DILocation(line: 465, column: 13, scope: !13250)
!13252 = !DILocation(line: 465, column: 22, scope: !13250)
!13253 = !DILocation(line: 465, column: 34, scope: !13250)
!13254 = !DILocation(line: 465, column: 51, scope: !13250)
!13255 = !DILocation(line: 465, column: 10, scope: !13250)
!13256 = !DILocation(line: 467, column: 2, scope: !13250)
!13257 = !DILocation(line: 468, column: 13, scope: !13258)
!13258 = distinct !DILexicalBlock(scope: !13245, file: !1, line: 467, column: 9)
!13259 = !DILocation(line: 468, column: 22, scope: !13258)
!13260 = !DILocation(line: 468, column: 34, scope: !13258)
!13261 = !DILocation(line: 468, column: 11, scope: !13258)
!13262 = !DILocation(line: 470, column: 25, scope: !13258)
!13263 = !DILocation(line: 470, column: 33, scope: !13258)
!13264 = !DILocation(line: 470, column: 49, scope: !13258)
!13265 = !DILocation(line: 470, column: 21, scope: !13258)
!13266 = !DILocation(line: 470, column: 10, scope: !13258)
!13267 = !DILocation(line: 471, column: 14, scope: !13258)
!13268 = !DILocation(line: 471, column: 22, scope: !13258)
!13269 = !DILocation(line: 471, column: 38, scope: !13258)
!13270 = !DILocation(line: 471, column: 55, scope: !13258)
!13271 = !DILocation(line: 471, column: 10, scope: !13258)
!13272 = !DILocation(line: 479, column: 15, scope: !13227)
!13273 = !DILocation(line: 479, column: 23, scope: !13227)
!13274 = !DILocation(line: 479, column: 13, scope: !13227)
!13275 = !DILocation(line: 480, column: 2, scope: !13227)
!13276 = !DILocation(line: 480, column: 9, scope: !13227)
!13277 = !DILocation(line: 481, column: 21, scope: !13278)
!13278 = distinct !DILexicalBlock(scope: !13227, file: !1, line: 480, column: 43)
!13279 = !DILocation(line: 481, column: 28, scope: !13278)
!13280 = !DILocation(line: 481, column: 39, scope: !13278)
!13281 = !DILocation(line: 481, column: 37, scope: !13278)
!13282 = !DILocation(line: 481, column: 15, scope: !13278)
!13283 = !DILocation(line: 481, column: 13, scope: !13278)
!13284 = !DILocalVariable(name: "_pos", scope: !13285, file: !1, line: 482, type: !11)
!13285 = distinct !DILexicalBlock(scope: !13278, file: !1, line: 482, column: 15)
!13286 = !DILocation(line: 482, column: 15, scope: !13285)
!13287 = !DILocalVariable(name: "_len", scope: !13285, file: !1, line: 482, type: !5)
!13288 = !DILocation(line: 482, column: 15, scope: !13278)
!13289 = !DILocation(line: 482, column: 13, scope: !13278)
!13290 = !DILocation(line: 484, column: 8, scope: !13291)
!13291 = distinct !DILexicalBlock(scope: !13278, file: !1, line: 484, column: 7)
!13292 = !DILocation(line: 484, column: 18, scope: !13291)
!13293 = !DILocation(line: 484, column: 38, scope: !13291)
!13294 = !DILocation(line: 485, column: 8, scope: !13291)
!13295 = !DILocation(line: 485, column: 18, scope: !13291)
!13296 = !DILocation(line: 484, column: 7, scope: !13278)
!13297 = !DILocation(line: 486, column: 4, scope: !13291)
!13298 = !DILocation(line: 488, column: 3, scope: !13278)
!13299 = distinct !{!13299, !13275, !13300}
!13300 = !DILocation(line: 489, column: 2, scope: !13227)
!13301 = !DILocation(line: 491, column: 7, scope: !13302)
!13302 = distinct !DILexicalBlock(scope: !13227, file: !1, line: 491, column: 6)
!13303 = !DILocation(line: 491, column: 6, scope: !13227)
!13304 = !DILocation(line: 492, column: 15, scope: !13302)
!13305 = !DILocation(line: 492, column: 22, scope: !13302)
!13306 = !DILocation(line: 494, column: 8, scope: !13302)
!13307 = !DILocation(line: 494, column: 17, scope: !13302)
!13308 = !DILocation(line: 492, column: 3, scope: !13302)
!13309 = !DILocation(line: 495, column: 1, scope: !13227)
!13310 = distinct !DISubprogram(name: "xlgmac_prepare_rx_stop", scope: !1, file: !1, line: 573, type: !13311, scopeLine: 575, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1619)
!13311 = !DISubroutineType(types: !13312)
!13312 = !{null, !7555, !11}
!13313 = !DILocalVariable(name: "pdata", arg: 1, scope: !13310, file: !1, line: 573, type: !7555)
!13314 = !DILocation(line: 573, column: 57, scope: !13310)
!13315 = !DILocalVariable(name: "queue", arg: 2, scope: !13310, file: !1, line: 574, type: !11)
!13316 = !DILocation(line: 574, column: 21, scope: !13310)
!13317 = !DILocalVariable(name: "rx_status", scope: !13310, file: !1, line: 576, type: !11)
!13318 = !DILocation(line: 576, column: 15, scope: !13310)
!13319 = !DILocalVariable(name: "prxq", scope: !13310, file: !1, line: 576, type: !11)
!13320 = !DILocation(line: 576, column: 26, scope: !13310)
!13321 = !DILocalVariable(name: "rxqsts", scope: !13310, file: !1, line: 576, type: !11)
!13322 = !DILocation(line: 576, column: 32, scope: !13310)
!13323 = !DILocalVariable(name: "rx_timeout", scope: !13310, file: !1, line: 577, type: !346)
!13324 = !DILocation(line: 577, column: 16, scope: !13310)
!13325 = !DILocation(line: 583, column: 15, scope: !13310)
!13326 = !DILocation(line: 583, column: 23, scope: !13310)
!13327 = !DILocation(line: 583, column: 13, scope: !13310)
!13328 = !DILocation(line: 584, column: 2, scope: !13310)
!13329 = !DILocation(line: 584, column: 9, scope: !13310)
!13330 = !DILocation(line: 585, column: 21, scope: !13331)
!13331 = distinct !DILexicalBlock(scope: !13310, file: !1, line: 584, column: 43)
!13332 = !DILocation(line: 585, column: 15, scope: !13331)
!13333 = !DILocation(line: 585, column: 13, scope: !13331)
!13334 = !DILocalVariable(name: "_pos", scope: !13335, file: !1, line: 586, type: !5)
!13335 = distinct !DILexicalBlock(scope: !13331, file: !1, line: 586, column: 10)
!13336 = !DILocation(line: 586, column: 10, scope: !13335)
!13337 = !DILocalVariable(name: "_len", scope: !13335, file: !1, line: 586, type: !5)
!13338 = !DILocation(line: 586, column: 10, scope: !13331)
!13339 = !DILocation(line: 586, column: 8, scope: !13331)
!13340 = !DILocalVariable(name: "_pos", scope: !13341, file: !1, line: 588, type: !5)
!13341 = distinct !DILexicalBlock(scope: !13331, file: !1, line: 588, column: 12)
!13342 = !DILocation(line: 588, column: 12, scope: !13341)
!13343 = !DILocalVariable(name: "_len", scope: !13341, file: !1, line: 588, type: !5)
!13344 = !DILocation(line: 588, column: 12, scope: !13331)
!13345 = !DILocation(line: 588, column: 10, scope: !13331)
!13346 = !DILocation(line: 590, column: 8, scope: !13347)
!13347 = distinct !DILexicalBlock(scope: !13331, file: !1, line: 590, column: 7)
!13348 = !DILocation(line: 590, column: 13, scope: !13347)
!13349 = !DILocation(line: 590, column: 19, scope: !13347)
!13350 = !DILocation(line: 590, column: 23, scope: !13347)
!13351 = !DILocation(line: 590, column: 30, scope: !13347)
!13352 = !DILocation(line: 590, column: 7, scope: !13331)
!13353 = !DILocation(line: 591, column: 4, scope: !13347)
!13354 = !DILocation(line: 593, column: 3, scope: !13331)
!13355 = distinct !{!13355, !13328, !13356}
!13356 = !DILocation(line: 594, column: 2, scope: !13310)
!13357 = !DILocation(line: 596, column: 7, scope: !13358)
!13358 = distinct !DILexicalBlock(scope: !13310, file: !1, line: 596, column: 6)
!13359 = !DILocation(line: 596, column: 6, scope: !13310)
!13360 = !DILocation(line: 597, column: 15, scope: !13358)
!13361 = !DILocation(line: 597, column: 22, scope: !13358)
!13362 = !DILocation(line: 599, column: 8, scope: !13358)
!13363 = !DILocation(line: 597, column: 3, scope: !13358)
!13364 = !DILocation(line: 600, column: 1, scope: !13310)
!13365 = distinct !DISubprogram(name: "netdev_xmit_more", scope: !4, file: !4, line: 4738, type: !6202, scopeLine: 4739, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1619)
!13366 = !DILocation(line: 4740, column: 9, scope: !13367)
!13367 = distinct !DILexicalBlock(scope: !13365, file: !4, line: 4740, column: 9)
!13368 = !DILocalVariable(name: "pscr_ret__", scope: !13369, file: !4, line: 4740, type: !828)
!13369 = distinct !DILexicalBlock(scope: !13367, file: !4, line: 4740, column: 9)
!13370 = !DILocation(line: 4740, column: 9, scope: !13369)
!13371 = !DILocalVariable(name: "__vpp_verify", scope: !13372, file: !4, line: 4740, type: !3288)
!13372 = distinct !DILexicalBlock(scope: !13369, file: !4, line: 4740, column: 9)
!13373 = !DILocation(line: 4740, column: 9, scope: !13372)
!13374 = !DILocalVariable(name: "pfo_val__", scope: !13375, file: !4, line: 4740, type: !828)
!13375 = distinct !DILexicalBlock(scope: !13369, file: !4, line: 4740, column: 9)
!13376 = !DILocation(line: 4740, column: 9, scope: !13375)
!13377 = !{i32 -2139905885}
!13378 = !DILocation(line: 4740, column: 9, scope: !13365)
!13379 = !DILocation(line: 4740, column: 2, scope: !13365)
!13380 = distinct !DISubprogram(name: "netif_xmit_stopped", scope: !4, file: !4, line: 3359, type: !13381, scopeLine: 3360, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1619)
!13381 = !DISubroutineType(types: !13382)
!13382 = !{!805, !13383}
!13383 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13384, size: 64)
!13384 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6437)
!13385 = !DILocalVariable(name: "dev_queue", arg: 1, scope: !13380, file: !4, line: 3359, type: !13383)
!13386 = !DILocation(line: 3359, column: 66, scope: !13380)
!13387 = !DILocation(line: 3361, column: 9, scope: !13380)
!13388 = !DILocation(line: 3361, column: 20, scope: !13380)
!13389 = !DILocation(line: 3361, column: 26, scope: !13380)
!13390 = !DILocation(line: 3361, column: 2, scope: !13380)
!13391 = distinct !DISubprogram(name: "netdev_get_tx_queue", scope: !4, file: !4, line: 2234, type: !13392, scopeLine: 2236, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1619)
!13392 = !DISubroutineType(types: !13393)
!13393 = !{!6436, !807, !11}
!13394 = !DILocalVariable(name: "dev", arg: 1, scope: !13391, file: !4, line: 2234, type: !807)
!13395 = !DILocation(line: 2234, column: 67, scope: !13391)
!13396 = !DILocalVariable(name: "index", arg: 2, scope: !13391, file: !4, line: 2235, type: !11)
!13397 = !DILocation(line: 2235, column: 20, scope: !13391)
!13398 = !DILocation(line: 2237, column: 10, scope: !13391)
!13399 = !DILocation(line: 2237, column: 15, scope: !13391)
!13400 = !DILocation(line: 2237, column: 19, scope: !13391)
!13401 = !DILocation(line: 2237, column: 2, scope: !13391)
!13402 = distinct !DISubprogram(name: "__this_cpu_preempt_check", scope: !13403, file: !13403, line: 313, type: !13404, scopeLine: 313, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1619)
!13403 = !DIFile(filename: "./include/linux/percpu-defs.h", directory: "/home/lizy2001/genbc/linux")
!13404 = !DISubroutineType(types: !13405)
!13405 = !{null, !326}
!13406 = !DILocalVariable(name: "op", arg: 1, scope: !13402, file: !13403, line: 313, type: !326)
!13407 = !DILocation(line: 313, column: 57, scope: !13402)
!13408 = !DILocation(line: 313, column: 63, scope: !13402)
!13409 = distinct !DISubprogram(name: "xlgmac_get_rx_tstamp", scope: !1, file: !1, line: 1010, type: !13410, scopeLine: 1012, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1619)
!13410 = !DISubroutineType(types: !13411)
!13411 = !{null, !8704, !7635}
!13412 = !DILocalVariable(name: "pkt_info", arg: 1, scope: !13409, file: !1, line: 1010, type: !8704)
!13413 = !DILocation(line: 1010, column: 58, scope: !13409)
!13414 = !DILocalVariable(name: "dma_desc", arg: 2, scope: !13409, file: !1, line: 1011, type: !7635)
!13415 = !DILocation(line: 1011, column: 30, scope: !13409)
!13416 = !DILocalVariable(name: "tsa", scope: !13409, file: !1, line: 1013, type: !1021)
!13417 = !DILocation(line: 1013, column: 6, scope: !13409)
!13418 = !DILocalVariable(name: "tsd", scope: !13409, file: !1, line: 1013, type: !1021)
!13419 = !DILocation(line: 1013, column: 11, scope: !13409)
!13420 = !DILocalVariable(name: "nsec", scope: !13409, file: !1, line: 1014, type: !365)
!13421 = !DILocation(line: 1014, column: 6, scope: !13409)
!13422 = !DILocalVariable(name: "_pos", scope: !13423, file: !1, line: 1016, type: !5)
!13423 = distinct !DILexicalBlock(scope: !13409, file: !1, line: 1016, column: 8)
!13424 = !DILocation(line: 1016, column: 8, scope: !13423)
!13425 = !DILocalVariable(name: "_len", scope: !13423, file: !1, line: 1016, type: !5)
!13426 = !DILocalVariable(name: "_var", scope: !13423, file: !1, line: 1016, type: !7527)
!13427 = !DILocation(line: 1016, column: 8, scope: !13409)
!13428 = !DILocation(line: 1016, column: 6, scope: !13409)
!13429 = !DILocalVariable(name: "_pos", scope: !13430, file: !1, line: 1019, type: !5)
!13430 = distinct !DILexicalBlock(scope: !13409, file: !1, line: 1019, column: 8)
!13431 = !DILocation(line: 1019, column: 8, scope: !13430)
!13432 = !DILocalVariable(name: "_len", scope: !13430, file: !1, line: 1019, type: !5)
!13433 = !DILocalVariable(name: "_var", scope: !13430, file: !1, line: 1019, type: !7527)
!13434 = !DILocation(line: 1019, column: 8, scope: !13409)
!13435 = !DILocation(line: 1019, column: 6, scope: !13409)
!13436 = !DILocation(line: 1022, column: 6, scope: !13437)
!13437 = distinct !DILexicalBlock(scope: !13409, file: !1, line: 1022, column: 6)
!13438 = !DILocation(line: 1022, column: 10, scope: !13437)
!13439 = !DILocation(line: 1022, column: 14, scope: !13437)
!13440 = !DILocation(line: 1022, column: 6, scope: !13409)
!13441 = !DILocation(line: 1023, column: 10, scope: !13442)
!13442 = distinct !DILexicalBlock(scope: !13437, file: !1, line: 1022, column: 19)
!13443 = !DILocation(line: 1023, column: 8, scope: !13442)
!13444 = !DILocation(line: 1024, column: 8, scope: !13442)
!13445 = !DILocation(line: 1025, column: 11, scope: !13442)
!13446 = !DILocation(line: 1025, column: 8, scope: !13442)
!13447 = !DILocation(line: 1026, column: 7, scope: !13448)
!13448 = distinct !DILexicalBlock(scope: !13442, file: !1, line: 1026, column: 7)
!13449 = !DILocation(line: 1026, column: 12, scope: !13448)
!13450 = !DILocation(line: 1026, column: 7, scope: !13442)
!13451 = !DILocation(line: 1027, column: 26, scope: !13452)
!13452 = distinct !DILexicalBlock(scope: !13448, file: !1, line: 1026, column: 38)
!13453 = !DILocation(line: 1027, column: 4, scope: !13452)
!13454 = !DILocation(line: 1027, column: 14, scope: !13452)
!13455 = !DILocation(line: 1027, column: 24, scope: !13452)
!13456 = !DILocalVariable(name: "_var", scope: !13457, file: !1, line: 1028, type: !11)
!13457 = distinct !DILexicalBlock(scope: !13452, file: !1, line: 1028, column: 27)
!13458 = !DILocation(line: 1028, column: 27, scope: !13457)
!13459 = !DILocalVariable(name: "_pos", scope: !13457, file: !1, line: 1028, type: !5)
!13460 = !DILocalVariable(name: "_len", scope: !13457, file: !1, line: 1028, type: !5)
!13461 = !DILocalVariable(name: "_val", scope: !13457, file: !1, line: 1028, type: !5)
!13462 = !DILocation(line: 1028, column: 4, scope: !13452)
!13463 = !DILocation(line: 1028, column: 14, scope: !13452)
!13464 = !DILocation(line: 1028, column: 25, scope: !13452)
!13465 = !DILocation(line: 1033, column: 3, scope: !13452)
!13466 = !DILocation(line: 1034, column: 2, scope: !13442)
!13467 = !DILocation(line: 1035, column: 1, scope: !13409)
!13468 = distinct !DISubprogram(name: "xlgmac_set_promiscuous_mode", scope: !1, file: !1, line: 243, type: !7918, scopeLine: 245, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1619)
!13469 = !DILocalVariable(name: "pdata", arg: 1, scope: !13468, file: !1, line: 243, type: !7555)
!13470 = !DILocation(line: 243, column: 61, scope: !13468)
!13471 = !DILocalVariable(name: "enable", arg: 2, scope: !13468, file: !1, line: 244, type: !11)
!13472 = !DILocation(line: 244, column: 25, scope: !13468)
!13473 = !DILocalVariable(name: "val", scope: !13468, file: !1, line: 246, type: !11)
!13474 = !DILocation(line: 246, column: 15, scope: !13468)
!13475 = !DILocation(line: 246, column: 21, scope: !13468)
!13476 = !DILocalVariable(name: "regval", scope: !13468, file: !1, line: 247, type: !1021)
!13477 = !DILocation(line: 247, column: 6, scope: !13468)
!13478 = !DILocalVariable(name: "_pos", scope: !13479, file: !1, line: 249, type: !5)
!13479 = distinct !DILexicalBlock(scope: !13468, file: !1, line: 249, column: 11)
!13480 = !DILocation(line: 249, column: 11, scope: !13479)
!13481 = !DILocalVariable(name: "_len", scope: !13479, file: !1, line: 249, type: !5)
!13482 = !DILocation(line: 249, column: 11, scope: !13468)
!13483 = !DILocation(line: 249, column: 9, scope: !13468)
!13484 = !DILocation(line: 251, column: 6, scope: !13485)
!13485 = distinct !DILexicalBlock(scope: !13468, file: !1, line: 251, column: 6)
!13486 = !DILocation(line: 251, column: 16, scope: !13485)
!13487 = !DILocation(line: 251, column: 13, scope: !13485)
!13488 = !DILocation(line: 251, column: 6, scope: !13468)
!13489 = !DILocation(line: 252, column: 3, scope: !13485)
!13490 = !DILocation(line: 254, column: 2, scope: !13491)
!13491 = distinct !DILexicalBlock(scope: !13492, file: !1, line: 254, column: 2)
!13492 = distinct !DILexicalBlock(scope: !13468, file: !1, line: 254, column: 2)
!13493 = !DILocation(line: 254, column: 2, scope: !13492)
!13494 = !DILocation(line: 257, column: 17, scope: !13468)
!13495 = !DILocation(line: 257, column: 24, scope: !13468)
!13496 = !DILocation(line: 257, column: 33, scope: !13468)
!13497 = !DILocation(line: 257, column: 11, scope: !13468)
!13498 = !DILocation(line: 257, column: 9, scope: !13468)
!13499 = !DILocalVariable(name: "_var", scope: !13500, file: !1, line: 258, type: !1021)
!13500 = distinct !DILexicalBlock(scope: !13468, file: !1, line: 258, column: 11)
!13501 = !DILocation(line: 258, column: 11, scope: !13500)
!13502 = !DILocalVariable(name: "_pos", scope: !13500, file: !1, line: 258, type: !5)
!13503 = !DILocalVariable(name: "_len", scope: !13500, file: !1, line: 258, type: !5)
!13504 = !DILocalVariable(name: "_val", scope: !13500, file: !1, line: 258, type: !11)
!13505 = !DILocation(line: 258, column: 9, scope: !13468)
!13506 = !DILocation(line: 260, column: 9, scope: !13468)
!13507 = !DILocation(line: 260, column: 17, scope: !13468)
!13508 = !DILocation(line: 260, column: 24, scope: !13468)
!13509 = !DILocation(line: 260, column: 33, scope: !13468)
!13510 = !DILocation(line: 260, column: 2, scope: !13468)
!13511 = !DILocation(line: 263, column: 6, scope: !13512)
!13512 = distinct !DILexicalBlock(scope: !13468, file: !1, line: 263, column: 6)
!13513 = !DILocation(line: 263, column: 6, scope: !13468)
!13514 = !DILocation(line: 264, column: 36, scope: !13515)
!13515 = distinct !DILexicalBlock(scope: !13512, file: !1, line: 263, column: 14)
!13516 = !DILocation(line: 264, column: 3, scope: !13515)
!13517 = !DILocation(line: 265, column: 2, scope: !13515)
!13518 = !DILocation(line: 266, column: 7, scope: !13519)
!13519 = distinct !DILexicalBlock(scope: !13520, file: !1, line: 266, column: 7)
!13520 = distinct !DILexicalBlock(scope: !13512, file: !1, line: 265, column: 9)
!13521 = !DILocation(line: 266, column: 14, scope: !13519)
!13522 = !DILocation(line: 266, column: 22, scope: !13519)
!13523 = !DILocation(line: 266, column: 31, scope: !13519)
!13524 = !DILocation(line: 266, column: 7, scope: !13520)
!13525 = !DILocation(line: 267, column: 36, scope: !13519)
!13526 = !DILocation(line: 267, column: 4, scope: !13519)
!13527 = !DILocation(line: 270, column: 2, scope: !13468)
!13528 = !DILocation(line: 271, column: 1, scope: !13468)
!13529 = distinct !DISubprogram(name: "xlgmac_set_all_multicast_mode", scope: !1, file: !1, line: 273, type: !7918, scopeLine: 275, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1619)
!13530 = !DILocalVariable(name: "pdata", arg: 1, scope: !13529, file: !1, line: 273, type: !7555)
!13531 = !DILocation(line: 273, column: 63, scope: !13529)
!13532 = !DILocalVariable(name: "enable", arg: 2, scope: !13529, file: !1, line: 274, type: !11)
!13533 = !DILocation(line: 274, column: 20, scope: !13529)
!13534 = !DILocalVariable(name: "val", scope: !13529, file: !1, line: 276, type: !11)
!13535 = !DILocation(line: 276, column: 15, scope: !13529)
!13536 = !DILocation(line: 276, column: 21, scope: !13529)
!13537 = !DILocalVariable(name: "regval", scope: !13529, file: !1, line: 277, type: !1021)
!13538 = !DILocation(line: 277, column: 6, scope: !13529)
!13539 = !DILocalVariable(name: "_pos", scope: !13540, file: !1, line: 279, type: !5)
!13540 = distinct !DILexicalBlock(scope: !13529, file: !1, line: 279, column: 11)
!13541 = !DILocation(line: 279, column: 11, scope: !13540)
!13542 = !DILocalVariable(name: "_len", scope: !13540, file: !1, line: 279, type: !5)
!13543 = !DILocation(line: 279, column: 11, scope: !13529)
!13544 = !DILocation(line: 279, column: 9, scope: !13529)
!13545 = !DILocation(line: 281, column: 6, scope: !13546)
!13546 = distinct !DILexicalBlock(scope: !13529, file: !1, line: 281, column: 6)
!13547 = !DILocation(line: 281, column: 16, scope: !13546)
!13548 = !DILocation(line: 281, column: 13, scope: !13546)
!13549 = !DILocation(line: 281, column: 6, scope: !13529)
!13550 = !DILocation(line: 282, column: 3, scope: !13546)
!13551 = !DILocation(line: 284, column: 2, scope: !13552)
!13552 = distinct !DILexicalBlock(scope: !13553, file: !1, line: 284, column: 2)
!13553 = distinct !DILexicalBlock(scope: !13529, file: !1, line: 284, column: 2)
!13554 = !DILocation(line: 284, column: 2, scope: !13553)
!13555 = !DILocation(line: 287, column: 17, scope: !13529)
!13556 = !DILocation(line: 287, column: 24, scope: !13529)
!13557 = !DILocation(line: 287, column: 33, scope: !13529)
!13558 = !DILocation(line: 287, column: 11, scope: !13529)
!13559 = !DILocation(line: 287, column: 9, scope: !13529)
!13560 = !DILocalVariable(name: "_var", scope: !13561, file: !1, line: 288, type: !1021)
!13561 = distinct !DILexicalBlock(scope: !13529, file: !1, line: 288, column: 11)
!13562 = !DILocation(line: 288, column: 11, scope: !13561)
!13563 = !DILocalVariable(name: "_pos", scope: !13561, file: !1, line: 288, type: !5)
!13564 = !DILocalVariable(name: "_len", scope: !13561, file: !1, line: 288, type: !5)
!13565 = !DILocalVariable(name: "_val", scope: !13561, file: !1, line: 288, type: !11)
!13566 = !DILocation(line: 288, column: 9, scope: !13529)
!13567 = !DILocation(line: 290, column: 9, scope: !13529)
!13568 = !DILocation(line: 290, column: 17, scope: !13529)
!13569 = !DILocation(line: 290, column: 24, scope: !13529)
!13570 = !DILocation(line: 290, column: 33, scope: !13529)
!13571 = !DILocation(line: 290, column: 2, scope: !13529)
!13572 = !DILocation(line: 292, column: 2, scope: !13529)
!13573 = !DILocation(line: 293, column: 1, scope: !13529)
!13574 = distinct !DISubprogram(name: "xlgmac_add_mac_addresses", scope: !1, file: !1, line: 363, type: !7553, scopeLine: 364, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1619)
!13575 = !DILocalVariable(name: "pdata", arg: 1, scope: !13574, file: !1, line: 363, type: !7555)
!13576 = !DILocation(line: 363, column: 58, scope: !13574)
!13577 = !DILocation(line: 365, column: 6, scope: !13578)
!13578 = distinct !DILexicalBlock(scope: !13574, file: !1, line: 365, column: 6)
!13579 = !DILocation(line: 365, column: 13, scope: !13578)
!13580 = !DILocation(line: 365, column: 21, scope: !13578)
!13581 = !DILocation(line: 365, column: 6, scope: !13574)
!13582 = !DILocation(line: 366, column: 29, scope: !13578)
!13583 = !DILocation(line: 366, column: 3, scope: !13578)
!13584 = !DILocation(line: 368, column: 29, scope: !13578)
!13585 = !DILocation(line: 368, column: 3, scope: !13578)
!13586 = !DILocation(line: 370, column: 2, scope: !13574)
!13587 = distinct !DISubprogram(name: "xlgmac_set_mac_hash_table", scope: !1, file: !1, line: 328, type: !7567, scopeLine: 329, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1619)
!13588 = !DILocalVariable(name: "pdata", arg: 1, scope: !13587, file: !1, line: 328, type: !7555)
!13589 = !DILocation(line: 328, column: 60, scope: !13587)
!13590 = !DILocalVariable(name: "hash_table_shift", scope: !13587, file: !1, line: 330, type: !11)
!13591 = !DILocation(line: 330, column: 15, scope: !13587)
!13592 = !DILocalVariable(name: "hash_table_count", scope: !13587, file: !1, line: 330, type: !11)
!13593 = !DILocation(line: 330, column: 33, scope: !13587)
!13594 = !DILocalVariable(name: "hash_table", scope: !13587, file: !1, line: 331, type: !13595)
!13595 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1021, size: 256, elements: !2465)
!13596 = !DILocation(line: 331, column: 6, scope: !13587)
!13597 = !DILocalVariable(name: "netdev", scope: !13587, file: !1, line: 332, type: !324)
!13598 = !DILocation(line: 332, column: 21, scope: !13587)
!13599 = !DILocation(line: 332, column: 30, scope: !13587)
!13600 = !DILocation(line: 332, column: 37, scope: !13587)
!13601 = !DILocalVariable(name: "ha", scope: !13587, file: !1, line: 333, type: !7528)
!13602 = !DILocation(line: 333, column: 25, scope: !13587)
!13603 = !DILocalVariable(name: "hash_reg", scope: !13587, file: !1, line: 334, type: !11)
!13604 = !DILocation(line: 334, column: 15, scope: !13587)
!13605 = !DILocalVariable(name: "i", scope: !13587, file: !1, line: 335, type: !11)
!13606 = !DILocation(line: 335, column: 15, scope: !13587)
!13607 = !DILocalVariable(name: "crc", scope: !13587, file: !1, line: 336, type: !1021)
!13608 = !DILocation(line: 336, column: 6, scope: !13587)
!13609 = !DILocation(line: 338, column: 27, scope: !13587)
!13610 = !DILocation(line: 338, column: 34, scope: !13587)
!13611 = !DILocation(line: 338, column: 42, scope: !13587)
!13612 = !DILocation(line: 338, column: 58, scope: !13587)
!13613 = !DILocation(line: 338, column: 24, scope: !13587)
!13614 = !DILocation(line: 338, column: 19, scope: !13587)
!13615 = !DILocation(line: 339, column: 21, scope: !13587)
!13616 = !DILocation(line: 339, column: 28, scope: !13587)
!13617 = !DILocation(line: 339, column: 36, scope: !13587)
!13618 = !DILocation(line: 339, column: 52, scope: !13587)
!13619 = !DILocation(line: 339, column: 19, scope: !13587)
!13620 = !DILocation(line: 340, column: 2, scope: !13587)
!13621 = !DILocalVariable(name: "__mptr", scope: !13622, file: !1, line: 343, type: !625)
!13622 = distinct !DILexicalBlock(scope: !13623, file: !1, line: 343, column: 2)
!13623 = distinct !DILexicalBlock(scope: !13587, file: !1, line: 343, column: 2)
!13624 = !DILocation(line: 343, column: 2, scope: !13622)
!13625 = !DILocation(line: 343, column: 2, scope: !13626)
!13626 = distinct !DILexicalBlock(scope: !13622, file: !1, line: 343, column: 2)
!13627 = !DILocation(line: 343, column: 2, scope: !13623)
!13628 = !DILocation(line: 343, column: 2, scope: !13629)
!13629 = distinct !DILexicalBlock(scope: !13623, file: !1, line: 343, column: 2)
!13630 = !DILocalVariable(name: "__x", scope: !13631, file: !1, line: 344, type: !1021)
!13631 = distinct !DILexicalBlock(scope: !13632, file: !1, line: 344, column: 9)
!13632 = distinct !DILexicalBlock(scope: !13629, file: !1, line: 343, column: 38)
!13633 = !DILocation(line: 344, column: 9, scope: !13631)
!13634 = !DILocalVariable(name: "___x", scope: !13635, file: !1, line: 344, type: !1021)
!13635 = distinct !DILexicalBlock(scope: !13631, file: !1, line: 344, column: 9)
!13636 = !DILocation(line: 344, column: 9, scope: !13635)
!13637 = !DILocation(line: 344, column: 7, scope: !13632)
!13638 = !DILocation(line: 345, column: 11, scope: !13632)
!13639 = !DILocation(line: 345, column: 7, scope: !13632)
!13640 = !DILocation(line: 346, column: 34, scope: !13632)
!13641 = !DILocation(line: 346, column: 38, scope: !13632)
!13642 = !DILocation(line: 346, column: 30, scope: !13632)
!13643 = !DILocation(line: 346, column: 14, scope: !13632)
!13644 = !DILocation(line: 346, column: 18, scope: !13632)
!13645 = !DILocation(line: 346, column: 3, scope: !13632)
!13646 = !DILocation(line: 346, column: 24, scope: !13632)
!13647 = !DILocation(line: 347, column: 2, scope: !13632)
!13648 = !DILocalVariable(name: "__mptr", scope: !13649, file: !1, line: 343, type: !625)
!13649 = distinct !DILexicalBlock(scope: !13629, file: !1, line: 343, column: 2)
!13650 = !DILocation(line: 343, column: 2, scope: !13649)
!13651 = !DILocation(line: 343, column: 2, scope: !13652)
!13652 = distinct !DILexicalBlock(scope: !13649, file: !1, line: 343, column: 2)
!13653 = distinct !{!13653, !13627, !13654}
!13654 = !DILocation(line: 347, column: 2, scope: !13623)
!13655 = !DILocalVariable(name: "__mptr", scope: !13656, file: !1, line: 349, type: !625)
!13656 = distinct !DILexicalBlock(scope: !13657, file: !1, line: 349, column: 2)
!13657 = distinct !DILexicalBlock(scope: !13587, file: !1, line: 349, column: 2)
!13658 = !DILocation(line: 349, column: 2, scope: !13656)
!13659 = !DILocation(line: 349, column: 2, scope: !13660)
!13660 = distinct !DILexicalBlock(scope: !13656, file: !1, line: 349, column: 2)
!13661 = !DILocation(line: 349, column: 2, scope: !13657)
!13662 = !DILocation(line: 349, column: 2, scope: !13663)
!13663 = distinct !DILexicalBlock(scope: !13657, file: !1, line: 349, column: 2)
!13664 = !DILocalVariable(name: "__x", scope: !13665, file: !1, line: 350, type: !1021)
!13665 = distinct !DILexicalBlock(scope: !13666, file: !1, line: 350, column: 9)
!13666 = distinct !DILexicalBlock(scope: !13663, file: !1, line: 349, column: 38)
!13667 = !DILocation(line: 350, column: 9, scope: !13665)
!13668 = !DILocalVariable(name: "___x", scope: !13669, file: !1, line: 350, type: !1021)
!13669 = distinct !DILexicalBlock(scope: !13665, file: !1, line: 350, column: 9)
!13670 = !DILocation(line: 350, column: 9, scope: !13669)
!13671 = !DILocation(line: 350, column: 7, scope: !13666)
!13672 = !DILocation(line: 351, column: 11, scope: !13666)
!13673 = !DILocation(line: 351, column: 7, scope: !13666)
!13674 = !DILocation(line: 352, column: 34, scope: !13666)
!13675 = !DILocation(line: 352, column: 38, scope: !13666)
!13676 = !DILocation(line: 352, column: 30, scope: !13666)
!13677 = !DILocation(line: 352, column: 14, scope: !13666)
!13678 = !DILocation(line: 352, column: 18, scope: !13666)
!13679 = !DILocation(line: 352, column: 3, scope: !13666)
!13680 = !DILocation(line: 352, column: 24, scope: !13666)
!13681 = !DILocation(line: 353, column: 2, scope: !13666)
!13682 = !DILocalVariable(name: "__mptr", scope: !13683, file: !1, line: 349, type: !625)
!13683 = distinct !DILexicalBlock(scope: !13663, file: !1, line: 349, column: 2)
!13684 = !DILocation(line: 349, column: 2, scope: !13683)
!13685 = !DILocation(line: 349, column: 2, scope: !13686)
!13686 = distinct !DILexicalBlock(scope: !13683, file: !1, line: 349, column: 2)
!13687 = distinct !{!13687, !13661, !13688}
!13688 = !DILocation(line: 353, column: 2, scope: !13657)
!13689 = !DILocation(line: 356, column: 11, scope: !13587)
!13690 = !DILocation(line: 357, column: 9, scope: !13691)
!13691 = distinct !DILexicalBlock(scope: !13587, file: !1, line: 357, column: 2)
!13692 = !DILocation(line: 357, column: 7, scope: !13691)
!13693 = !DILocation(line: 357, column: 14, scope: !13694)
!13694 = distinct !DILexicalBlock(scope: !13691, file: !1, line: 357, column: 2)
!13695 = !DILocation(line: 357, column: 18, scope: !13694)
!13696 = !DILocation(line: 357, column: 16, scope: !13694)
!13697 = !DILocation(line: 357, column: 2, scope: !13691)
!13698 = !DILocation(line: 358, column: 21, scope: !13699)
!13699 = distinct !DILexicalBlock(scope: !13694, file: !1, line: 357, column: 41)
!13700 = !DILocation(line: 358, column: 10, scope: !13699)
!13701 = !DILocation(line: 358, column: 25, scope: !13699)
!13702 = !DILocation(line: 358, column: 32, scope: !13699)
!13703 = !DILocation(line: 358, column: 43, scope: !13699)
!13704 = !DILocation(line: 358, column: 41, scope: !13699)
!13705 = !DILocation(line: 358, column: 3, scope: !13699)
!13706 = !DILocation(line: 359, column: 12, scope: !13699)
!13707 = !DILocation(line: 360, column: 2, scope: !13699)
!13708 = !DILocation(line: 357, column: 37, scope: !13694)
!13709 = !DILocation(line: 357, column: 2, scope: !13694)
!13710 = distinct !{!13710, !13697, !13711}
!13711 = !DILocation(line: 360, column: 2, scope: !13691)
!13712 = !DILocation(line: 361, column: 1, scope: !13587)
!13713 = distinct !DISubprogram(name: "xlgmac_set_mac_addn_addrs", scope: !1, file: !1, line: 295, type: !7567, scopeLine: 296, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1619)
!13714 = !DILocalVariable(name: "pdata", arg: 1, scope: !13713, file: !1, line: 295, type: !7555)
!13715 = !DILocation(line: 295, column: 60, scope: !13713)
!13716 = !DILocalVariable(name: "netdev", scope: !13713, file: !1, line: 297, type: !324)
!13717 = !DILocation(line: 297, column: 21, scope: !13713)
!13718 = !DILocation(line: 297, column: 30, scope: !13713)
!13719 = !DILocation(line: 297, column: 37, scope: !13713)
!13720 = !DILocalVariable(name: "ha", scope: !13713, file: !1, line: 298, type: !7528)
!13721 = !DILocation(line: 298, column: 25, scope: !13713)
!13722 = !DILocalVariable(name: "addn_macs", scope: !13713, file: !1, line: 299, type: !11)
!13723 = !DILocation(line: 299, column: 15, scope: !13713)
!13724 = !DILocalVariable(name: "mac_reg", scope: !13713, file: !1, line: 300, type: !11)
!13725 = !DILocation(line: 300, column: 15, scope: !13713)
!13726 = !DILocation(line: 302, column: 10, scope: !13713)
!13727 = !DILocation(line: 303, column: 14, scope: !13713)
!13728 = !DILocation(line: 303, column: 21, scope: !13713)
!13729 = !DILocation(line: 303, column: 29, scope: !13713)
!13730 = !DILocation(line: 303, column: 12, scope: !13713)
!13731 = !DILocation(line: 305, column: 6, scope: !13732)
!13732 = distinct !DILexicalBlock(scope: !13713, file: !1, line: 305, column: 6)
!13733 = !DILocation(line: 305, column: 32, scope: !13732)
!13734 = !DILocation(line: 305, column: 30, scope: !13732)
!13735 = !DILocation(line: 305, column: 6, scope: !13713)
!13736 = !DILocation(line: 306, column: 31, scope: !13737)
!13737 = distinct !DILexicalBlock(scope: !13732, file: !1, line: 305, column: 43)
!13738 = !DILocation(line: 306, column: 3, scope: !13737)
!13739 = !DILocation(line: 307, column: 2, scope: !13737)
!13740 = !DILocalVariable(name: "__mptr", scope: !13741, file: !1, line: 308, type: !625)
!13741 = distinct !DILexicalBlock(scope: !13742, file: !1, line: 308, column: 3)
!13742 = distinct !DILexicalBlock(scope: !13743, file: !1, line: 308, column: 3)
!13743 = distinct !DILexicalBlock(scope: !13732, file: !1, line: 307, column: 9)
!13744 = !DILocation(line: 308, column: 3, scope: !13741)
!13745 = !DILocation(line: 308, column: 3, scope: !13746)
!13746 = distinct !DILexicalBlock(scope: !13741, file: !1, line: 308, column: 3)
!13747 = !DILocation(line: 308, column: 3, scope: !13742)
!13748 = !DILocation(line: 308, column: 3, scope: !13749)
!13749 = distinct !DILexicalBlock(scope: !13742, file: !1, line: 308, column: 3)
!13750 = !DILocation(line: 309, column: 23, scope: !13751)
!13751 = distinct !DILexicalBlock(scope: !13749, file: !1, line: 308, column: 39)
!13752 = !DILocation(line: 309, column: 30, scope: !13751)
!13753 = !DILocation(line: 309, column: 4, scope: !13751)
!13754 = !DILocation(line: 310, column: 13, scope: !13751)
!13755 = !DILocation(line: 311, column: 3, scope: !13751)
!13756 = !DILocalVariable(name: "__mptr", scope: !13757, file: !1, line: 308, type: !625)
!13757 = distinct !DILexicalBlock(scope: !13749, file: !1, line: 308, column: 3)
!13758 = !DILocation(line: 308, column: 3, scope: !13757)
!13759 = !DILocation(line: 308, column: 3, scope: !13760)
!13760 = distinct !DILexicalBlock(scope: !13757, file: !1, line: 308, column: 3)
!13761 = distinct !{!13761, !13747, !13762}
!13762 = !DILocation(line: 311, column: 3, scope: !13742)
!13763 = !DILocation(line: 313, column: 7, scope: !13764)
!13764 = distinct !DILexicalBlock(scope: !13743, file: !1, line: 313, column: 7)
!13765 = !DILocation(line: 313, column: 33, scope: !13764)
!13766 = !DILocation(line: 313, column: 31, scope: !13764)
!13767 = !DILocation(line: 313, column: 7, scope: !13743)
!13768 = !DILocation(line: 314, column: 34, scope: !13769)
!13769 = distinct !DILexicalBlock(scope: !13764, file: !1, line: 313, column: 44)
!13770 = !DILocation(line: 314, column: 4, scope: !13769)
!13771 = !DILocation(line: 315, column: 3, scope: !13769)
!13772 = !DILocalVariable(name: "__mptr", scope: !13773, file: !1, line: 316, type: !625)
!13773 = distinct !DILexicalBlock(scope: !13774, file: !1, line: 316, column: 4)
!13774 = distinct !DILexicalBlock(scope: !13775, file: !1, line: 316, column: 4)
!13775 = distinct !DILexicalBlock(scope: !13764, file: !1, line: 315, column: 10)
!13776 = !DILocation(line: 316, column: 4, scope: !13773)
!13777 = !DILocation(line: 316, column: 4, scope: !13778)
!13778 = distinct !DILexicalBlock(scope: !13773, file: !1, line: 316, column: 4)
!13779 = !DILocation(line: 316, column: 4, scope: !13774)
!13780 = !DILocation(line: 316, column: 4, scope: !13781)
!13781 = distinct !DILexicalBlock(scope: !13774, file: !1, line: 316, column: 4)
!13782 = !DILocation(line: 317, column: 24, scope: !13783)
!13783 = distinct !DILexicalBlock(scope: !13781, file: !1, line: 316, column: 40)
!13784 = !DILocation(line: 317, column: 31, scope: !13783)
!13785 = !DILocation(line: 317, column: 5, scope: !13783)
!13786 = !DILocation(line: 318, column: 14, scope: !13783)
!13787 = !DILocation(line: 319, column: 4, scope: !13783)
!13788 = !DILocalVariable(name: "__mptr", scope: !13789, file: !1, line: 316, type: !625)
!13789 = distinct !DILexicalBlock(scope: !13781, file: !1, line: 316, column: 4)
!13790 = !DILocation(line: 316, column: 4, scope: !13789)
!13791 = !DILocation(line: 316, column: 4, scope: !13792)
!13792 = distinct !DILexicalBlock(scope: !13789, file: !1, line: 316, column: 4)
!13793 = distinct !{!13793, !13779, !13794}
!13794 = !DILocation(line: 319, column: 4, scope: !13774)
!13795 = !DILocation(line: 324, column: 2, scope: !13713)
!13796 = !DILocation(line: 324, column: 18, scope: !13713)
!13797 = !DILocation(line: 325, column: 22, scope: !13713)
!13798 = !DILocation(line: 325, column: 3, scope: !13713)
!13799 = distinct !{!13799, !13795, !13800}
!13800 = !DILocation(line: 325, column: 43, scope: !13713)
!13801 = !DILocation(line: 326, column: 1, scope: !13713)
!13802 = distinct !DISubprogram(name: "__bitrev32", scope: !13803, file: !13803, line: 26, type: !13804, scopeLine: 27, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1619)
!13803 = !DIFile(filename: "./include/linux/bitrev.h", directory: "/home/lizy2001/genbc/linux")
!13804 = !DISubroutineType(types: !13805)
!13805 = !{!1021, !1021}
!13806 = !DILocalVariable(name: "x", arg: 1, scope: !13802, file: !13803, line: 26, type: !1021)
!13807 = !DILocation(line: 26, column: 34, scope: !13802)
!13808 = !DILocation(line: 28, column: 21, scope: !13802)
!13809 = !DILocation(line: 28, column: 23, scope: !13802)
!13810 = !DILocation(line: 28, column: 10, scope: !13802)
!13811 = !DILocation(line: 28, column: 33, scope: !13802)
!13812 = !DILocation(line: 28, column: 53, scope: !13802)
!13813 = !DILocation(line: 28, column: 55, scope: !13802)
!13814 = !DILocation(line: 28, column: 42, scope: !13802)
!13815 = !DILocation(line: 28, column: 40, scope: !13802)
!13816 = !DILocation(line: 28, column: 2, scope: !13802)
!13817 = distinct !DISubprogram(name: "__bitrev16", scope: !13803, file: !13803, line: 21, type: !13818, scopeLine: 22, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1619)
!13818 = !DISubroutineType(types: !13819)
!13819 = !{!615, !615}
!13820 = !DILocalVariable(name: "x", arg: 1, scope: !13817, file: !13803, line: 21, type: !615)
!13821 = !DILocation(line: 21, column: 34, scope: !13817)
!13822 = !DILocation(line: 23, column: 20, scope: !13817)
!13823 = !DILocation(line: 23, column: 22, scope: !13817)
!13824 = !DILocation(line: 23, column: 10, scope: !13817)
!13825 = !DILocation(line: 23, column: 30, scope: !13817)
!13826 = !DILocation(line: 23, column: 48, scope: !13817)
!13827 = !DILocation(line: 23, column: 50, scope: !13817)
!13828 = !DILocation(line: 23, column: 38, scope: !13817)
!13829 = !DILocation(line: 23, column: 36, scope: !13817)
!13830 = !DILocation(line: 23, column: 9, scope: !13817)
!13831 = !DILocation(line: 23, column: 2, scope: !13817)
!13832 = distinct !DISubprogram(name: "__bitrev8", scope: !13803, file: !13803, line: 16, type: !13833, scopeLine: 17, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1619)
!13833 = !DISubroutineType(types: !13834)
!13834 = !{!828, !828}
!13835 = !DILocalVariable(name: "byte", arg: 1, scope: !13832, file: !13803, line: 16, type: !828)
!13836 = !DILocation(line: 16, column: 31, scope: !13832)
!13837 = !DILocation(line: 18, column: 24, scope: !13832)
!13838 = !DILocation(line: 18, column: 9, scope: !13832)
!13839 = !DILocation(line: 18, column: 2, scope: !13832)
!13840 = distinct !DISubprogram(name: "xlgmac_set_mac_reg", scope: !1, file: !1, line: 74, type: !13841, scopeLine: 77, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1619)
!13841 = !DISubroutineType(types: !13842)
!13842 = !{null, !7555, !7528, !4625}
!13843 = !DILocalVariable(name: "pdata", arg: 1, scope: !13840, file: !1, line: 74, type: !7555)
!13844 = !DILocation(line: 74, column: 53, scope: !13840)
!13845 = !DILocalVariable(name: "ha", arg: 2, scope: !13840, file: !1, line: 75, type: !7528)
!13846 = !DILocation(line: 75, column: 34, scope: !13840)
!13847 = !DILocalVariable(name: "mac_reg", arg: 3, scope: !13840, file: !1, line: 76, type: !4625)
!13848 = !DILocation(line: 76, column: 25, scope: !13840)
!13849 = !DILocalVariable(name: "mac_addr_hi", scope: !13840, file: !1, line: 78, type: !11)
!13850 = !DILocation(line: 78, column: 15, scope: !13840)
!13851 = !DILocalVariable(name: "mac_addr_lo", scope: !13840, file: !1, line: 78, type: !11)
!13852 = !DILocation(line: 78, column: 28, scope: !13840)
!13853 = !DILocalVariable(name: "mac_addr", scope: !13840, file: !1, line: 79, type: !827)
!13854 = !DILocation(line: 79, column: 6, scope: !13840)
!13855 = !DILocation(line: 81, column: 14, scope: !13840)
!13856 = !DILocation(line: 82, column: 14, scope: !13840)
!13857 = !DILocation(line: 84, column: 6, scope: !13858)
!13858 = distinct !DILexicalBlock(scope: !13840, file: !1, line: 84, column: 6)
!13859 = !DILocation(line: 84, column: 6, scope: !13840)
!13860 = !DILocation(line: 85, column: 14, scope: !13861)
!13861 = distinct !DILexicalBlock(scope: !13858, file: !1, line: 84, column: 10)
!13862 = !DILocation(line: 85, column: 12, scope: !13861)
!13863 = !DILocation(line: 86, column: 17, scope: !13861)
!13864 = !DILocation(line: 86, column: 21, scope: !13861)
!13865 = !DILocation(line: 86, column: 3, scope: !13861)
!13866 = !DILocation(line: 86, column: 15, scope: !13861)
!13867 = !DILocation(line: 87, column: 17, scope: !13861)
!13868 = !DILocation(line: 87, column: 21, scope: !13861)
!13869 = !DILocation(line: 87, column: 3, scope: !13861)
!13870 = !DILocation(line: 87, column: 15, scope: !13861)
!13871 = !DILocation(line: 88, column: 17, scope: !13861)
!13872 = !DILocation(line: 88, column: 21, scope: !13861)
!13873 = !DILocation(line: 88, column: 3, scope: !13861)
!13874 = !DILocation(line: 88, column: 15, scope: !13861)
!13875 = !DILocation(line: 89, column: 17, scope: !13861)
!13876 = !DILocation(line: 89, column: 21, scope: !13861)
!13877 = !DILocation(line: 89, column: 3, scope: !13861)
!13878 = !DILocation(line: 89, column: 15, scope: !13861)
!13879 = !DILocation(line: 90, column: 14, scope: !13861)
!13880 = !DILocation(line: 90, column: 12, scope: !13861)
!13881 = !DILocation(line: 91, column: 17, scope: !13861)
!13882 = !DILocation(line: 91, column: 21, scope: !13861)
!13883 = !DILocation(line: 91, column: 3, scope: !13861)
!13884 = !DILocation(line: 91, column: 15, scope: !13861)
!13885 = !DILocation(line: 92, column: 17, scope: !13861)
!13886 = !DILocation(line: 92, column: 21, scope: !13861)
!13887 = !DILocation(line: 92, column: 3, scope: !13861)
!13888 = !DILocation(line: 92, column: 15, scope: !13861)
!13889 = !DILocation(line: 94, column: 3, scope: !13890)
!13890 = distinct !DILexicalBlock(scope: !13891, file: !1, line: 94, column: 3)
!13891 = distinct !DILexicalBlock(scope: !13861, file: !1, line: 94, column: 3)
!13892 = !DILocation(line: 94, column: 3, scope: !13891)
!13893 = !DILocalVariable(name: "_var", scope: !13894, file: !1, line: 98, type: !11)
!13894 = distinct !DILexicalBlock(scope: !13861, file: !1, line: 98, column: 17)
!13895 = !DILocation(line: 98, column: 17, scope: !13894)
!13896 = !DILocalVariable(name: "_pos", scope: !13894, file: !1, line: 98, type: !5)
!13897 = !DILocalVariable(name: "_len", scope: !13894, file: !1, line: 98, type: !5)
!13898 = !DILocalVariable(name: "_val", scope: !13894, file: !1, line: 98, type: !5)
!13899 = !DILocation(line: 98, column: 15, scope: !13861)
!13900 = !DILocation(line: 102, column: 2, scope: !13861)
!13901 = !DILocation(line: 104, column: 9, scope: !13840)
!13902 = !DILocation(line: 104, column: 22, scope: !13840)
!13903 = !DILocation(line: 104, column: 29, scope: !13840)
!13904 = !DILocation(line: 104, column: 41, scope: !13840)
!13905 = !DILocation(line: 104, column: 40, scope: !13840)
!13906 = !DILocation(line: 104, column: 38, scope: !13840)
!13907 = !DILocation(line: 104, column: 2, scope: !13840)
!13908 = !DILocation(line: 105, column: 3, scope: !13840)
!13909 = !DILocation(line: 105, column: 11, scope: !13840)
!13910 = !DILocation(line: 106, column: 9, scope: !13840)
!13911 = !DILocation(line: 106, column: 22, scope: !13840)
!13912 = !DILocation(line: 106, column: 29, scope: !13840)
!13913 = !DILocation(line: 106, column: 41, scope: !13840)
!13914 = !DILocation(line: 106, column: 40, scope: !13840)
!13915 = !DILocation(line: 106, column: 38, scope: !13840)
!13916 = !DILocation(line: 106, column: 2, scope: !13840)
!13917 = !DILocation(line: 107, column: 3, scope: !13840)
!13918 = !DILocation(line: 107, column: 11, scope: !13840)
!13919 = !DILocation(line: 108, column: 1, scope: !13840)
!13920 = distinct !DISubprogram(name: "_usecs_to_jiffies", scope: !10256, file: !10256, line: 376, type: !10257, scopeLine: 377, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1619)
!13921 = !DILocalVariable(name: "u", arg: 1, scope: !13920, file: !10256, line: 376, type: !4768)
!13922 = !DILocation(line: 376, column: 66, scope: !13920)
!13923 = !DILocation(line: 378, column: 10, scope: !13920)
!13924 = !DILocation(line: 378, column: 12, scope: !13920)
!13925 = !DILocation(line: 378, column: 34, scope: !13920)
!13926 = !DILocation(line: 378, column: 39, scope: !13920)
!13927 = !DILocation(line: 378, column: 2, scope: !13920)
!13928 = distinct !DISubprogram(name: "xlgmac_enable_tx_flow_control", scope: !1, file: !1, line: 1220, type: !7553, scopeLine: 1221, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1619)
!13929 = !DILocalVariable(name: "pdata", arg: 1, scope: !13928, file: !1, line: 1220, type: !7555)
!13930 = !DILocation(line: 1220, column: 63, scope: !13928)
!13931 = !DILocalVariable(name: "max_q_count", scope: !13928, file: !1, line: 1222, type: !11)
!13932 = !DILocation(line: 1222, column: 15, scope: !13928)
!13933 = !DILocalVariable(name: "q_count", scope: !13928, file: !1, line: 1222, type: !11)
!13934 = !DILocation(line: 1222, column: 28, scope: !13928)
!13935 = !DILocalVariable(name: "reg", scope: !13928, file: !1, line: 1223, type: !11)
!13936 = !DILocation(line: 1223, column: 15, scope: !13928)
!13937 = !DILocalVariable(name: "regval", scope: !13928, file: !1, line: 1223, type: !11)
!13938 = !DILocation(line: 1223, column: 20, scope: !13928)
!13939 = !DILocalVariable(name: "i", scope: !13928, file: !1, line: 1224, type: !11)
!13940 = !DILocation(line: 1224, column: 15, scope: !13928)
!13941 = !DILocation(line: 1227, column: 9, scope: !13942)
!13942 = distinct !DILexicalBlock(scope: !13928, file: !1, line: 1227, column: 2)
!13943 = !DILocation(line: 1227, column: 7, scope: !13942)
!13944 = !DILocation(line: 1227, column: 14, scope: !13945)
!13945 = distinct !DILexicalBlock(scope: !13942, file: !1, line: 1227, column: 2)
!13946 = !DILocation(line: 1227, column: 18, scope: !13945)
!13947 = !DILocation(line: 1227, column: 25, scope: !13945)
!13948 = !DILocation(line: 1227, column: 16, scope: !13945)
!13949 = !DILocation(line: 1227, column: 2, scope: !13942)
!13950 = !DILocation(line: 1228, column: 18, scope: !13951)
!13951 = distinct !DILexicalBlock(scope: !13945, file: !1, line: 1227, column: 42)
!13952 = !DILocation(line: 1228, column: 12, scope: !13951)
!13953 = !DILocation(line: 1228, column: 10, scope: !13951)
!13954 = !DILocalVariable(name: "_var", scope: !13955, file: !1, line: 1229, type: !11)
!13955 = distinct !DILexicalBlock(scope: !13951, file: !1, line: 1229, column: 12)
!13956 = !DILocation(line: 1229, column: 12, scope: !13955)
!13957 = !DILocalVariable(name: "_pos", scope: !13955, file: !1, line: 1229, type: !5)
!13958 = !DILocalVariable(name: "_len", scope: !13955, file: !1, line: 1229, type: !5)
!13959 = !DILocalVariable(name: "_val", scope: !13955, file: !1, line: 1229, type: !5)
!13960 = !DILocation(line: 1229, column: 10, scope: !13951)
!13961 = !DILocation(line: 1231, column: 10, scope: !13951)
!13962 = !DILocation(line: 1231, column: 18, scope: !13951)
!13963 = !DILocation(line: 1231, column: 3, scope: !13951)
!13964 = !DILocation(line: 1232, column: 2, scope: !13951)
!13965 = !DILocation(line: 1227, column: 38, scope: !13945)
!13966 = !DILocation(line: 1227, column: 2, scope: !13945)
!13967 = distinct !{!13967, !13949, !13968}
!13968 = !DILocation(line: 1232, column: 2, scope: !13942)
!13969 = !DILocation(line: 1235, column: 14, scope: !13928)
!13970 = !DILocalVariable(name: "__UNIQUE_ID___x332", scope: !13971, file: !1, line: 1236, type: !11)
!13971 = distinct !DILexicalBlock(scope: !13928, file: !1, line: 1236, column: 12)
!13972 = !DILocation(line: 1236, column: 12, scope: !13971)
!13973 = !DILocalVariable(name: "__UNIQUE_ID___y333", scope: !13971, file: !1, line: 1236, type: !11)
!13974 = !DILocation(line: 1236, column: 10, scope: !13928)
!13975 = !DILocation(line: 1237, column: 6, scope: !13928)
!13976 = !DILocation(line: 1238, column: 9, scope: !13977)
!13977 = distinct !DILexicalBlock(scope: !13928, file: !1, line: 1238, column: 2)
!13978 = !DILocation(line: 1238, column: 7, scope: !13977)
!13979 = !DILocation(line: 1238, column: 14, scope: !13980)
!13980 = distinct !DILexicalBlock(scope: !13977, file: !1, line: 1238, column: 2)
!13981 = !DILocation(line: 1238, column: 18, scope: !13980)
!13982 = !DILocation(line: 1238, column: 16, scope: !13980)
!13983 = !DILocation(line: 1238, column: 2, scope: !13977)
!13984 = !DILocation(line: 1239, column: 18, scope: !13985)
!13985 = distinct !DILexicalBlock(scope: !13980, file: !1, line: 1238, column: 32)
!13986 = !DILocation(line: 1239, column: 25, scope: !13985)
!13987 = !DILocation(line: 1239, column: 36, scope: !13985)
!13988 = !DILocation(line: 1239, column: 34, scope: !13985)
!13989 = !DILocation(line: 1239, column: 12, scope: !13985)
!13990 = !DILocation(line: 1239, column: 10, scope: !13985)
!13991 = !DILocalVariable(name: "_var", scope: !13992, file: !1, line: 1242, type: !11)
!13992 = distinct !DILexicalBlock(scope: !13985, file: !1, line: 1242, column: 12)
!13993 = !DILocation(line: 1242, column: 12, scope: !13992)
!13994 = !DILocalVariable(name: "_pos", scope: !13992, file: !1, line: 1242, type: !5)
!13995 = !DILocalVariable(name: "_len", scope: !13992, file: !1, line: 1242, type: !5)
!13996 = !DILocalVariable(name: "_val", scope: !13992, file: !1, line: 1242, type: !5)
!13997 = !DILocation(line: 1242, column: 10, scope: !13985)
!13998 = !DILocalVariable(name: "_var", scope: !13999, file: !1, line: 1245, type: !11)
!13999 = distinct !DILexicalBlock(scope: !13985, file: !1, line: 1245, column: 12)
!14000 = !DILocation(line: 1245, column: 12, scope: !13999)
!14001 = !DILocalVariable(name: "_pos", scope: !13999, file: !1, line: 1245, type: !5)
!14002 = !DILocalVariable(name: "_len", scope: !13999, file: !1, line: 1245, type: !5)
!14003 = !DILocalVariable(name: "_val", scope: !13999, file: !1, line: 1245, type: !5)
!14004 = !DILocation(line: 1245, column: 10, scope: !13985)
!14005 = !DILocation(line: 1248, column: 10, scope: !13985)
!14006 = !DILocation(line: 1248, column: 18, scope: !13985)
!14007 = !DILocation(line: 1248, column: 25, scope: !13985)
!14008 = !DILocation(line: 1248, column: 36, scope: !13985)
!14009 = !DILocation(line: 1248, column: 34, scope: !13985)
!14010 = !DILocation(line: 1248, column: 3, scope: !13985)
!14011 = !DILocation(line: 1250, column: 7, scope: !13985)
!14012 = !DILocation(line: 1251, column: 2, scope: !13985)
!14013 = !DILocation(line: 1238, column: 28, scope: !13980)
!14014 = !DILocation(line: 1238, column: 2, scope: !13980)
!14015 = distinct !{!14015, !13983, !14016}
!14016 = !DILocation(line: 1251, column: 2, scope: !13977)
!14017 = !DILocation(line: 1253, column: 2, scope: !13928)
!14018 = distinct !DISubprogram(name: "xlgmac_disable_tx_flow_control", scope: !1, file: !1, line: 1188, type: !7553, scopeLine: 1189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1619)
!14019 = !DILocalVariable(name: "pdata", arg: 1, scope: !14018, file: !1, line: 1188, type: !7555)
!14020 = !DILocation(line: 1188, column: 64, scope: !14018)
!14021 = !DILocalVariable(name: "max_q_count", scope: !14018, file: !1, line: 1190, type: !11)
!14022 = !DILocation(line: 1190, column: 15, scope: !14018)
!14023 = !DILocalVariable(name: "q_count", scope: !14018, file: !1, line: 1190, type: !11)
!14024 = !DILocation(line: 1190, column: 28, scope: !14018)
!14025 = !DILocalVariable(name: "reg", scope: !14018, file: !1, line: 1191, type: !11)
!14026 = !DILocation(line: 1191, column: 15, scope: !14018)
!14027 = !DILocalVariable(name: "regval", scope: !14018, file: !1, line: 1191, type: !11)
!14028 = !DILocation(line: 1191, column: 20, scope: !14018)
!14029 = !DILocalVariable(name: "i", scope: !14018, file: !1, line: 1192, type: !11)
!14030 = !DILocation(line: 1192, column: 15, scope: !14018)
!14031 = !DILocation(line: 1195, column: 9, scope: !14032)
!14032 = distinct !DILexicalBlock(scope: !14018, file: !1, line: 1195, column: 2)
!14033 = !DILocation(line: 1195, column: 7, scope: !14032)
!14034 = !DILocation(line: 1195, column: 14, scope: !14035)
!14035 = distinct !DILexicalBlock(scope: !14032, file: !1, line: 1195, column: 2)
!14036 = !DILocation(line: 1195, column: 18, scope: !14035)
!14037 = !DILocation(line: 1195, column: 25, scope: !14035)
!14038 = !DILocation(line: 1195, column: 16, scope: !14035)
!14039 = !DILocation(line: 1195, column: 2, scope: !14032)
!14040 = !DILocation(line: 1196, column: 18, scope: !14041)
!14041 = distinct !DILexicalBlock(scope: !14035, file: !1, line: 1195, column: 42)
!14042 = !DILocation(line: 1196, column: 12, scope: !14041)
!14043 = !DILocation(line: 1196, column: 10, scope: !14041)
!14044 = !DILocalVariable(name: "_var", scope: !14045, file: !1, line: 1197, type: !11)
!14045 = distinct !DILexicalBlock(scope: !14041, file: !1, line: 1197, column: 12)
!14046 = !DILocation(line: 1197, column: 12, scope: !14045)
!14047 = !DILocalVariable(name: "_pos", scope: !14045, file: !1, line: 1197, type: !5)
!14048 = !DILocalVariable(name: "_len", scope: !14045, file: !1, line: 1197, type: !5)
!14049 = !DILocalVariable(name: "_val", scope: !14045, file: !1, line: 1197, type: !5)
!14050 = !DILocation(line: 1197, column: 10, scope: !14041)
!14051 = !DILocation(line: 1199, column: 10, scope: !14041)
!14052 = !DILocation(line: 1199, column: 18, scope: !14041)
!14053 = !DILocation(line: 1199, column: 3, scope: !14041)
!14054 = !DILocation(line: 1200, column: 2, scope: !14041)
!14055 = !DILocation(line: 1195, column: 38, scope: !14035)
!14056 = !DILocation(line: 1195, column: 2, scope: !14035)
!14057 = distinct !{!14057, !14039, !14058}
!14058 = !DILocation(line: 1200, column: 2, scope: !14032)
!14059 = !DILocation(line: 1203, column: 14, scope: !14018)
!14060 = !DILocalVariable(name: "__UNIQUE_ID___x330", scope: !14061, file: !1, line: 1204, type: !11)
!14061 = distinct !DILexicalBlock(scope: !14018, file: !1, line: 1204, column: 12)
!14062 = !DILocation(line: 1204, column: 12, scope: !14061)
!14063 = !DILocalVariable(name: "__UNIQUE_ID___y331", scope: !14061, file: !1, line: 1204, type: !11)
!14064 = !DILocation(line: 1204, column: 10, scope: !14018)
!14065 = !DILocation(line: 1205, column: 6, scope: !14018)
!14066 = !DILocation(line: 1206, column: 9, scope: !14067)
!14067 = distinct !DILexicalBlock(scope: !14018, file: !1, line: 1206, column: 2)
!14068 = !DILocation(line: 1206, column: 7, scope: !14067)
!14069 = !DILocation(line: 1206, column: 14, scope: !14070)
!14070 = distinct !DILexicalBlock(scope: !14067, file: !1, line: 1206, column: 2)
!14071 = !DILocation(line: 1206, column: 18, scope: !14070)
!14072 = !DILocation(line: 1206, column: 16, scope: !14070)
!14073 = !DILocation(line: 1206, column: 2, scope: !14067)
!14074 = !DILocation(line: 1207, column: 18, scope: !14075)
!14075 = distinct !DILexicalBlock(scope: !14070, file: !1, line: 1206, column: 32)
!14076 = !DILocation(line: 1207, column: 25, scope: !14075)
!14077 = !DILocation(line: 1207, column: 36, scope: !14075)
!14078 = !DILocation(line: 1207, column: 34, scope: !14075)
!14079 = !DILocation(line: 1207, column: 12, scope: !14075)
!14080 = !DILocation(line: 1207, column: 10, scope: !14075)
!14081 = !DILocalVariable(name: "_var", scope: !14082, file: !1, line: 1208, type: !11)
!14082 = distinct !DILexicalBlock(scope: !14075, file: !1, line: 1208, column: 12)
!14083 = !DILocation(line: 1208, column: 12, scope: !14082)
!14084 = !DILocalVariable(name: "_pos", scope: !14082, file: !1, line: 1208, type: !5)
!14085 = !DILocalVariable(name: "_len", scope: !14082, file: !1, line: 1208, type: !5)
!14086 = !DILocalVariable(name: "_val", scope: !14082, file: !1, line: 1208, type: !5)
!14087 = !DILocation(line: 1208, column: 10, scope: !14075)
!14088 = !DILocation(line: 1212, column: 10, scope: !14075)
!14089 = !DILocation(line: 1212, column: 18, scope: !14075)
!14090 = !DILocation(line: 1212, column: 25, scope: !14075)
!14091 = !DILocation(line: 1212, column: 36, scope: !14075)
!14092 = !DILocation(line: 1212, column: 34, scope: !14075)
!14093 = !DILocation(line: 1212, column: 3, scope: !14075)
!14094 = !DILocation(line: 1214, column: 7, scope: !14075)
!14095 = !DILocation(line: 1215, column: 2, scope: !14075)
!14096 = !DILocation(line: 1206, column: 28, scope: !14070)
!14097 = !DILocation(line: 1206, column: 2, scope: !14070)
!14098 = distinct !{!14098, !14073, !14099}
!14099 = !DILocation(line: 1215, column: 2, scope: !14067)
!14100 = !DILocation(line: 1217, column: 2, scope: !14018)
!14101 = distinct !DISubprogram(name: "xlgmac_enable_rx_flow_control", scope: !1, file: !1, line: 1268, type: !7553, scopeLine: 1269, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1619)
!14102 = !DILocalVariable(name: "pdata", arg: 1, scope: !14101, file: !1, line: 1268, type: !7555)
!14103 = !DILocation(line: 1268, column: 63, scope: !14101)
!14104 = !DILocalVariable(name: "regval", scope: !14101, file: !1, line: 1270, type: !1021)
!14105 = !DILocation(line: 1270, column: 6, scope: !14101)
!14106 = !DILocation(line: 1272, column: 17, scope: !14101)
!14107 = !DILocation(line: 1272, column: 24, scope: !14101)
!14108 = !DILocation(line: 1272, column: 33, scope: !14101)
!14109 = !DILocation(line: 1272, column: 11, scope: !14101)
!14110 = !DILocation(line: 1272, column: 9, scope: !14101)
!14111 = !DILocalVariable(name: "_var", scope: !14112, file: !1, line: 1273, type: !1021)
!14112 = distinct !DILexicalBlock(scope: !14101, file: !1, line: 1273, column: 11)
!14113 = !DILocation(line: 1273, column: 11, scope: !14112)
!14114 = !DILocalVariable(name: "_pos", scope: !14112, file: !1, line: 1273, type: !5)
!14115 = !DILocalVariable(name: "_len", scope: !14112, file: !1, line: 1273, type: !5)
!14116 = !DILocalVariable(name: "_val", scope: !14112, file: !1, line: 1273, type: !5)
!14117 = !DILocation(line: 1273, column: 9, scope: !14101)
!14118 = !DILocation(line: 1275, column: 9, scope: !14101)
!14119 = !DILocation(line: 1275, column: 17, scope: !14101)
!14120 = !DILocation(line: 1275, column: 24, scope: !14101)
!14121 = !DILocation(line: 1275, column: 33, scope: !14101)
!14122 = !DILocation(line: 1275, column: 2, scope: !14101)
!14123 = !DILocation(line: 1277, column: 2, scope: !14101)
!14124 = distinct !DISubprogram(name: "xlgmac_disable_rx_flow_control", scope: !1, file: !1, line: 1256, type: !7553, scopeLine: 1257, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1619)
!14125 = !DILocalVariable(name: "pdata", arg: 1, scope: !14124, file: !1, line: 1256, type: !7555)
!14126 = !DILocation(line: 1256, column: 64, scope: !14124)
!14127 = !DILocalVariable(name: "regval", scope: !14124, file: !1, line: 1258, type: !1021)
!14128 = !DILocation(line: 1258, column: 6, scope: !14124)
!14129 = !DILocation(line: 1260, column: 17, scope: !14124)
!14130 = !DILocation(line: 1260, column: 24, scope: !14124)
!14131 = !DILocation(line: 1260, column: 33, scope: !14124)
!14132 = !DILocation(line: 1260, column: 11, scope: !14124)
!14133 = !DILocation(line: 1260, column: 9, scope: !14124)
!14134 = !DILocalVariable(name: "_var", scope: !14135, file: !1, line: 1261, type: !1021)
!14135 = distinct !DILexicalBlock(scope: !14124, file: !1, line: 1261, column: 11)
!14136 = !DILocation(line: 1261, column: 11, scope: !14135)
!14137 = !DILocalVariable(name: "_pos", scope: !14135, file: !1, line: 1261, type: !5)
!14138 = !DILocalVariable(name: "_len", scope: !14135, file: !1, line: 1261, type: !5)
!14139 = !DILocalVariable(name: "_val", scope: !14135, file: !1, line: 1261, type: !5)
!14140 = !DILocation(line: 1261, column: 9, scope: !14124)
!14141 = !DILocation(line: 1263, column: 9, scope: !14124)
!14142 = !DILocation(line: 1263, column: 17, scope: !14124)
!14143 = !DILocation(line: 1263, column: 24, scope: !14124)
!14144 = !DILocation(line: 1263, column: 33, scope: !14124)
!14145 = !DILocation(line: 1263, column: 2, scope: !14124)
!14146 = !DILocation(line: 1265, column: 2, scope: !14124)
!14147 = distinct !DISubprogram(name: "xlgmac_vid_crc32_le", scope: !1, file: !1, line: 193, type: !14148, scopeLine: 194, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1619)
!14148 = !DISubroutineType(types: !14149)
!14149 = !{!1021, !7539}
!14150 = !DILocalVariable(name: "vid_le", arg: 1, scope: !14147, file: !1, line: 193, type: !7539)
!14151 = !DILocation(line: 193, column: 39, scope: !14147)
!14152 = !DILocalVariable(name: "data", scope: !14147, file: !1, line: 195, type: !598)
!14153 = !DILocation(line: 195, column: 17, scope: !14147)
!14154 = !DILocation(line: 195, column: 24, scope: !14147)
!14155 = !DILocalVariable(name: "data_byte", scope: !14147, file: !1, line: 196, type: !516)
!14156 = !DILocation(line: 196, column: 16, scope: !14147)
!14157 = !DILocalVariable(name: "crc", scope: !14147, file: !1, line: 197, type: !1021)
!14158 = !DILocation(line: 197, column: 6, scope: !14147)
!14159 = !DILocalVariable(name: "temp", scope: !14147, file: !1, line: 198, type: !1021)
!14160 = !DILocation(line: 198, column: 6, scope: !14147)
!14161 = !DILocalVariable(name: "i", scope: !14147, file: !1, line: 199, type: !5)
!14162 = !DILocation(line: 199, column: 6, scope: !14147)
!14163 = !DILocalVariable(name: "bits", scope: !14147, file: !1, line: 199, type: !5)
!14164 = !DILocation(line: 199, column: 9, scope: !14147)
!14165 = !DILocation(line: 201, column: 9, scope: !14147)
!14166 = !DILocation(line: 201, column: 7, scope: !14147)
!14167 = !DILocation(line: 202, column: 9, scope: !14168)
!14168 = distinct !DILexicalBlock(scope: !14147, file: !1, line: 202, column: 2)
!14169 = !DILocation(line: 202, column: 7, scope: !14168)
!14170 = !DILocation(line: 202, column: 14, scope: !14171)
!14171 = distinct !DILexicalBlock(scope: !14168, file: !1, line: 202, column: 2)
!14172 = !DILocation(line: 202, column: 18, scope: !14171)
!14173 = !DILocation(line: 202, column: 16, scope: !14171)
!14174 = !DILocation(line: 202, column: 2, scope: !14168)
!14175 = !DILocation(line: 203, column: 8, scope: !14176)
!14176 = distinct !DILexicalBlock(scope: !14177, file: !1, line: 203, column: 7)
!14177 = distinct !DILexicalBlock(scope: !14171, file: !1, line: 202, column: 29)
!14178 = !DILocation(line: 203, column: 10, scope: !14176)
!14179 = !DILocation(line: 203, column: 15, scope: !14176)
!14180 = !DILocation(line: 203, column: 7, scope: !14177)
!14181 = !DILocation(line: 204, column: 16, scope: !14176)
!14182 = !DILocation(line: 204, column: 21, scope: !14176)
!14183 = !DILocation(line: 204, column: 23, scope: !14176)
!14184 = !DILocation(line: 204, column: 14, scope: !14176)
!14185 = !DILocation(line: 204, column: 4, scope: !14176)
!14186 = !DILocation(line: 206, column: 12, scope: !14177)
!14187 = !DILocation(line: 206, column: 16, scope: !14177)
!14188 = !DILocation(line: 206, column: 23, scope: !14177)
!14189 = !DILocation(line: 206, column: 21, scope: !14177)
!14190 = !DILocation(line: 206, column: 34, scope: !14177)
!14191 = !DILocation(line: 206, column: 8, scope: !14177)
!14192 = !DILocation(line: 207, column: 7, scope: !14177)
!14193 = !DILocation(line: 208, column: 13, scope: !14177)
!14194 = !DILocation(line: 210, column: 7, scope: !14195)
!14195 = distinct !DILexicalBlock(scope: !14177, file: !1, line: 210, column: 7)
!14196 = !DILocation(line: 210, column: 7, scope: !14177)
!14197 = !DILocation(line: 211, column: 8, scope: !14195)
!14198 = !DILocation(line: 211, column: 4, scope: !14195)
!14199 = !DILocation(line: 212, column: 2, scope: !14177)
!14200 = !DILocation(line: 202, column: 25, scope: !14171)
!14201 = !DILocation(line: 202, column: 2, scope: !14171)
!14202 = distinct !{!14202, !14174, !14203}
!14203 = !DILocation(line: 212, column: 2, scope: !14168)
!14204 = !DILocation(line: 214, column: 9, scope: !14147)
!14205 = !DILocation(line: 214, column: 2, scope: !14147)
!14206 = distinct !DISubprogram(name: "get_bitmask_order", scope: !14207, file: !14207, line: 65, type: !14208, scopeLine: 66, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1619)
!14207 = !DIFile(filename: "./include/linux/bitops.h", directory: "/home/lizy2001/genbc/linux")
!14208 = !DISubroutineType(types: !14209)
!14209 = !{!5, !11}
!14210 = !DILocalVariable(name: "x", arg: 1, scope: !14211, file: !14212, line: 324, type: !11)
!14211 = distinct !DISubprogram(name: "fls", scope: !14212, file: !14212, line: 324, type: !14208, scopeLine: 325, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1619)
!14212 = !DIFile(filename: "./arch/x86/include/asm/bitops.h", directory: "/home/lizy2001/genbc/linux")
!14213 = !DILocation(line: 324, column: 45, scope: !14211, inlinedAt: !14214)
!14214 = distinct !DILocation(line: 69, column: 10, scope: !14206)
!14215 = !DILocalVariable(name: "r", scope: !14211, file: !14212, line: 326, type: !5)
!14216 = !DILocation(line: 326, column: 6, scope: !14211, inlinedAt: !14214)
!14217 = !DILocalVariable(name: "count", arg: 1, scope: !14206, file: !14207, line: 65, type: !11)
!14218 = !DILocation(line: 65, column: 50, scope: !14206)
!14219 = !DILocalVariable(name: "order", scope: !14206, file: !14207, line: 67, type: !5)
!14220 = !DILocation(line: 67, column: 6, scope: !14206)
!14221 = !DILocation(line: 69, column: 14, scope: !14206)
!14222 = !DILocation(line: 340, column: 14, scope: !14211, inlinedAt: !14214)
!14223 = !DILocation(line: 338, column: 2, scope: !14211, inlinedAt: !14214)
!14224 = !{i32 440881}
!14225 = !DILocation(line: 351, column: 9, scope: !14211, inlinedAt: !14214)
!14226 = !DILocation(line: 351, column: 11, scope: !14211, inlinedAt: !14214)
!14227 = !DILocation(line: 69, column: 8, scope: !14206)
!14228 = !DILocation(line: 70, column: 9, scope: !14206)
!14229 = !DILocation(line: 70, column: 2, scope: !14206)
!14230 = distinct !DISubprogram(name: "xlgmac_mmc_read", scope: !1, file: !1, line: 1840, type: !14231, scopeLine: 1841, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1619)
!14231 = !DISubroutineType(types: !14232)
!14232 = !{!365, !7555, !11}
!14233 = !DILocalVariable(name: "pdata", arg: 1, scope: !14230, file: !1, line: 1840, type: !7555)
!14234 = !DILocation(line: 1840, column: 49, scope: !14230)
!14235 = !DILocalVariable(name: "reg_lo", arg: 2, scope: !14230, file: !1, line: 1840, type: !11)
!14236 = !DILocation(line: 1840, column: 69, scope: !14230)
!14237 = !DILocalVariable(name: "read_hi", scope: !14230, file: !1, line: 1842, type: !805)
!14238 = !DILocation(line: 1842, column: 7, scope: !14230)
!14239 = !DILocalVariable(name: "val", scope: !14230, file: !1, line: 1843, type: !365)
!14240 = !DILocation(line: 1843, column: 6, scope: !14230)
!14241 = !DILocation(line: 1845, column: 10, scope: !14230)
!14242 = !DILocation(line: 1845, column: 2, scope: !14230)
!14243 = !DILocation(line: 1851, column: 11, scope: !14244)
!14244 = distinct !DILexicalBlock(scope: !14230, file: !1, line: 1845, column: 18)
!14245 = !DILocation(line: 1852, column: 3, scope: !14244)
!14246 = !DILocation(line: 1855, column: 11, scope: !14244)
!14247 = !DILocation(line: 1856, column: 2, scope: !14244)
!14248 = !DILocation(line: 1858, column: 19, scope: !14230)
!14249 = !DILocation(line: 1858, column: 26, scope: !14230)
!14250 = !DILocation(line: 1858, column: 37, scope: !14230)
!14251 = !DILocation(line: 1858, column: 35, scope: !14230)
!14252 = !DILocation(line: 1858, column: 13, scope: !14230)
!14253 = !DILocation(line: 1858, column: 8, scope: !14230)
!14254 = !DILocation(line: 1858, column: 6, scope: !14230)
!14255 = !DILocation(line: 1860, column: 6, scope: !14256)
!14256 = distinct !DILexicalBlock(scope: !14230, file: !1, line: 1860, column: 6)
!14257 = !DILocation(line: 1860, column: 6, scope: !14230)
!14258 = !DILocation(line: 1861, column: 22, scope: !14256)
!14259 = !DILocation(line: 1861, column: 29, scope: !14256)
!14260 = !DILocation(line: 1861, column: 40, scope: !14256)
!14261 = !DILocation(line: 1861, column: 38, scope: !14256)
!14262 = !DILocation(line: 1861, column: 47, scope: !14256)
!14263 = !DILocation(line: 1861, column: 16, scope: !14256)
!14264 = !DILocation(line: 1861, column: 11, scope: !14256)
!14265 = !DILocation(line: 1861, column: 52, scope: !14256)
!14266 = !DILocation(line: 1861, column: 7, scope: !14256)
!14267 = !DILocation(line: 1861, column: 3, scope: !14256)
!14268 = !DILocation(line: 1863, column: 9, scope: !14230)
!14269 = !DILocation(line: 1863, column: 2, scope: !14230)
!14270 = distinct !DISubprogram(name: "xlgmac_write_rss_hash_key", scope: !1, file: !1, line: 2327, type: !7553, scopeLine: 2328, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1619)
!14271 = !DILocalVariable(name: "pdata", arg: 1, scope: !14270, file: !1, line: 2327, type: !7555)
!14272 = !DILocation(line: 2327, column: 59, scope: !14270)
!14273 = !DILocalVariable(name: "key_regs", scope: !14270, file: !1, line: 2329, type: !11)
!14274 = !DILocation(line: 2329, column: 15, scope: !14270)
!14275 = !DILocalVariable(name: "key", scope: !14270, file: !1, line: 2330, type: !4625)
!14276 = !DILocation(line: 2330, column: 16, scope: !14270)
!14277 = !DILocation(line: 2330, column: 39, scope: !14270)
!14278 = !DILocation(line: 2330, column: 46, scope: !14270)
!14279 = !DILocation(line: 2330, column: 22, scope: !14270)
!14280 = !DILocalVariable(name: "ret", scope: !14270, file: !1, line: 2331, type: !5)
!14281 = !DILocation(line: 2331, column: 6, scope: !14270)
!14282 = !DILocation(line: 2333, column: 2, scope: !14270)
!14283 = !DILocation(line: 2333, column: 17, scope: !14270)
!14284 = !DILocation(line: 2334, column: 30, scope: !14285)
!14285 = distinct !DILexicalBlock(scope: !14270, file: !1, line: 2333, column: 21)
!14286 = !DILocation(line: 2335, column: 9, scope: !14285)
!14287 = !DILocation(line: 2335, column: 23, scope: !14285)
!14288 = !DILocation(line: 2335, column: 19, scope: !14285)
!14289 = !DILocation(line: 2334, column: 9, scope: !14285)
!14290 = !DILocation(line: 2334, column: 7, scope: !14285)
!14291 = !DILocation(line: 2336, column: 7, scope: !14292)
!14292 = distinct !DILexicalBlock(scope: !14285, file: !1, line: 2336, column: 7)
!14293 = !DILocation(line: 2336, column: 7, scope: !14285)
!14294 = !DILocation(line: 2337, column: 11, scope: !14292)
!14295 = !DILocation(line: 2337, column: 4, scope: !14292)
!14296 = distinct !{!14296, !14282, !14297}
!14297 = !DILocation(line: 2338, column: 2, scope: !14270)
!14298 = !DILocation(line: 2340, column: 2, scope: !14270)
!14299 = !DILocation(line: 2341, column: 1, scope: !14270)
!14300 = distinct !DISubprogram(name: "xlgmac_write_rss_lookup_table", scope: !1, file: !1, line: 2343, type: !7553, scopeLine: 2344, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1619)
!14301 = !DILocalVariable(name: "pdata", arg: 1, scope: !14300, file: !1, line: 2343, type: !7555)
!14302 = !DILocation(line: 2343, column: 63, scope: !14300)
!14303 = !DILocalVariable(name: "i", scope: !14300, file: !1, line: 2345, type: !11)
!14304 = !DILocation(line: 2345, column: 15, scope: !14300)
!14305 = !DILocalVariable(name: "ret", scope: !14300, file: !1, line: 2346, type: !5)
!14306 = !DILocation(line: 2346, column: 6, scope: !14300)
!14307 = !DILocation(line: 2348, column: 9, scope: !14308)
!14308 = distinct !DILexicalBlock(scope: !14300, file: !1, line: 2348, column: 2)
!14309 = !DILocation(line: 2348, column: 7, scope: !14308)
!14310 = !DILocation(line: 2348, column: 14, scope: !14311)
!14311 = distinct !DILexicalBlock(scope: !14308, file: !1, line: 2348, column: 2)
!14312 = !DILocation(line: 2348, column: 16, scope: !14311)
!14313 = !DILocation(line: 2348, column: 2, scope: !14308)
!14314 = !DILocation(line: 2349, column: 30, scope: !14315)
!14315 = distinct !DILexicalBlock(scope: !14311, file: !1, line: 2348, column: 53)
!14316 = !DILocation(line: 2350, column: 39, scope: !14315)
!14317 = !DILocation(line: 2351, column: 9, scope: !14315)
!14318 = !DILocation(line: 2351, column: 16, scope: !14315)
!14319 = !DILocation(line: 2351, column: 26, scope: !14315)
!14320 = !DILocation(line: 2349, column: 9, scope: !14315)
!14321 = !DILocation(line: 2349, column: 7, scope: !14315)
!14322 = !DILocation(line: 2352, column: 7, scope: !14323)
!14323 = distinct !DILexicalBlock(scope: !14315, file: !1, line: 2352, column: 7)
!14324 = !DILocation(line: 2352, column: 7, scope: !14315)
!14325 = !DILocation(line: 2353, column: 11, scope: !14323)
!14326 = !DILocation(line: 2353, column: 4, scope: !14323)
!14327 = !DILocation(line: 2354, column: 2, scope: !14315)
!14328 = !DILocation(line: 2348, column: 49, scope: !14311)
!14329 = !DILocation(line: 2348, column: 2, scope: !14311)
!14330 = distinct !{!14330, !14313, !14331}
!14331 = !DILocation(line: 2354, column: 2, scope: !14308)
!14332 = !DILocation(line: 2356, column: 2, scope: !14300)
!14333 = !DILocation(line: 2357, column: 1, scope: !14300)
!14334 = distinct !DISubprogram(name: "xlgmac_write_rss_reg", scope: !1, file: !1, line: 2279, type: !14335, scopeLine: 2281, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1619)
!14335 = !DISubroutineType(types: !14336)
!14336 = !{!5, !7555, !11, !11, !11}
!14337 = !DILocalVariable(name: "pdata", arg: 1, scope: !14334, file: !1, line: 2279, type: !7555)
!14338 = !DILocation(line: 2279, column: 54, scope: !14334)
!14339 = !DILocalVariable(name: "type", arg: 2, scope: !14334, file: !1, line: 2279, type: !11)
!14340 = !DILocation(line: 2279, column: 74, scope: !14334)
!14341 = !DILocalVariable(name: "index", arg: 3, scope: !14334, file: !1, line: 2280, type: !11)
!14342 = !DILocation(line: 2280, column: 18, scope: !14334)
!14343 = !DILocalVariable(name: "val", arg: 4, scope: !14334, file: !1, line: 2280, type: !11)
!14344 = !DILocation(line: 2280, column: 38, scope: !14334)
!14345 = !DILocalVariable(name: "wait", scope: !14334, file: !1, line: 2282, type: !11)
!14346 = !DILocation(line: 2282, column: 15, scope: !14334)
!14347 = !DILocalVariable(name: "ret", scope: !14334, file: !1, line: 2283, type: !5)
!14348 = !DILocation(line: 2283, column: 6, scope: !14334)
!14349 = !DILocalVariable(name: "regval", scope: !14334, file: !1, line: 2284, type: !1021)
!14350 = !DILocation(line: 2284, column: 6, scope: !14334)
!14351 = !DILocation(line: 2286, column: 14, scope: !14334)
!14352 = !DILocation(line: 2286, column: 21, scope: !14334)
!14353 = !DILocation(line: 2286, column: 2, scope: !14334)
!14354 = !DILocalVariable(name: "_pos", scope: !14355, file: !1, line: 2288, type: !5)
!14355 = distinct !DILexicalBlock(scope: !14334, file: !1, line: 2288, column: 11)
!14356 = !DILocation(line: 2288, column: 11, scope: !14355)
!14357 = !DILocalVariable(name: "_len", scope: !14355, file: !1, line: 2288, type: !5)
!14358 = !DILocation(line: 2288, column: 11, scope: !14334)
!14359 = !DILocation(line: 2288, column: 9, scope: !14334)
!14360 = !DILocation(line: 2290, column: 6, scope: !14361)
!14361 = distinct !DILexicalBlock(scope: !14334, file: !1, line: 2290, column: 6)
!14362 = !DILocation(line: 2290, column: 6, scope: !14334)
!14363 = !DILocation(line: 2291, column: 7, scope: !14364)
!14364 = distinct !DILexicalBlock(scope: !14361, file: !1, line: 2290, column: 14)
!14365 = !DILocation(line: 2292, column: 3, scope: !14364)
!14366 = !DILocation(line: 2295, column: 9, scope: !14334)
!14367 = !DILocation(line: 2295, column: 14, scope: !14334)
!14368 = !DILocation(line: 2295, column: 21, scope: !14334)
!14369 = !DILocation(line: 2295, column: 30, scope: !14334)
!14370 = !DILocation(line: 2295, column: 2, scope: !14334)
!14371 = !DILocation(line: 2297, column: 17, scope: !14334)
!14372 = !DILocation(line: 2297, column: 24, scope: !14334)
!14373 = !DILocation(line: 2297, column: 33, scope: !14334)
!14374 = !DILocation(line: 2297, column: 11, scope: !14334)
!14375 = !DILocation(line: 2297, column: 9, scope: !14334)
!14376 = !DILocalVariable(name: "_var", scope: !14377, file: !1, line: 2298, type: !1021)
!14377 = distinct !DILexicalBlock(scope: !14334, file: !1, line: 2298, column: 11)
!14378 = !DILocation(line: 2298, column: 11, scope: !14377)
!14379 = !DILocalVariable(name: "_pos", scope: !14377, file: !1, line: 2298, type: !5)
!14380 = !DILocalVariable(name: "_len", scope: !14377, file: !1, line: 2298, type: !5)
!14381 = !DILocalVariable(name: "_val", scope: !14377, file: !1, line: 2298, type: !11)
!14382 = !DILocation(line: 2298, column: 9, scope: !14334)
!14383 = !DILocalVariable(name: "_var", scope: !14384, file: !1, line: 2300, type: !1021)
!14384 = distinct !DILexicalBlock(scope: !14334, file: !1, line: 2300, column: 11)
!14385 = !DILocation(line: 2300, column: 11, scope: !14384)
!14386 = !DILocalVariable(name: "_pos", scope: !14384, file: !1, line: 2300, type: !5)
!14387 = !DILocalVariable(name: "_len", scope: !14384, file: !1, line: 2300, type: !5)
!14388 = !DILocalVariable(name: "_val", scope: !14384, file: !1, line: 2300, type: !11)
!14389 = !DILocation(line: 2300, column: 9, scope: !14334)
!14390 = !DILocalVariable(name: "_var", scope: !14391, file: !1, line: 2302, type: !1021)
!14391 = distinct !DILexicalBlock(scope: !14334, file: !1, line: 2302, column: 11)
!14392 = !DILocation(line: 2302, column: 11, scope: !14391)
!14393 = !DILocalVariable(name: "_pos", scope: !14391, file: !1, line: 2302, type: !5)
!14394 = !DILocalVariable(name: "_len", scope: !14391, file: !1, line: 2302, type: !5)
!14395 = !DILocalVariable(name: "_val", scope: !14391, file: !1, line: 2302, type: !5)
!14396 = !DILocation(line: 2302, column: 9, scope: !14334)
!14397 = !DILocalVariable(name: "_var", scope: !14398, file: !1, line: 2304, type: !1021)
!14398 = distinct !DILexicalBlock(scope: !14334, file: !1, line: 2304, column: 11)
!14399 = !DILocation(line: 2304, column: 11, scope: !14398)
!14400 = !DILocalVariable(name: "_pos", scope: !14398, file: !1, line: 2304, type: !5)
!14401 = !DILocalVariable(name: "_len", scope: !14398, file: !1, line: 2304, type: !5)
!14402 = !DILocalVariable(name: "_val", scope: !14398, file: !1, line: 2304, type: !5)
!14403 = !DILocation(line: 2304, column: 9, scope: !14334)
!14404 = !DILocation(line: 2306, column: 9, scope: !14334)
!14405 = !DILocation(line: 2306, column: 17, scope: !14334)
!14406 = !DILocation(line: 2306, column: 24, scope: !14334)
!14407 = !DILocation(line: 2306, column: 33, scope: !14334)
!14408 = !DILocation(line: 2306, column: 2, scope: !14334)
!14409 = !DILocation(line: 2308, column: 7, scope: !14334)
!14410 = !DILocation(line: 2309, column: 2, scope: !14334)
!14411 = !DILocation(line: 2309, column: 13, scope: !14334)
!14412 = !DILocalVariable(name: "_pos", scope: !14413, file: !1, line: 2310, type: !5)
!14413 = distinct !DILexicalBlock(scope: !14414, file: !1, line: 2310, column: 12)
!14414 = distinct !DILexicalBlock(scope: !14334, file: !1, line: 2309, column: 17)
!14415 = !DILocation(line: 2310, column: 12, scope: !14413)
!14416 = !DILocalVariable(name: "_len", scope: !14413, file: !1, line: 2310, type: !5)
!14417 = !DILocation(line: 2310, column: 12, scope: !14414)
!14418 = !DILocation(line: 2310, column: 10, scope: !14414)
!14419 = !DILocation(line: 2313, column: 8, scope: !14420)
!14420 = distinct !DILexicalBlock(scope: !14414, file: !1, line: 2313, column: 7)
!14421 = !DILocation(line: 2313, column: 7, scope: !14414)
!14422 = !DILocation(line: 2314, column: 4, scope: !14420)
!14423 = !DILocation(line: 2316, column: 3, scope: !14414)
!14424 = distinct !{!14424, !14410, !14425}
!14425 = !DILocation(line: 2317, column: 2, scope: !14334)
!14426 = !DILocation(line: 2319, column: 6, scope: !14334)
!14427 = !DILocation(line: 2319, column: 2, scope: !14334)
!14428 = !DILabel(scope: !14334, name: "unlock", file: !1, line: 2321)
!14429 = !DILocation(line: 2321, column: 1, scope: !14334)
!14430 = !DILocation(line: 2322, column: 16, scope: !14334)
!14431 = !DILocation(line: 2322, column: 23, scope: !14334)
!14432 = !DILocation(line: 2322, column: 2, scope: !14334)
!14433 = !DILocation(line: 2324, column: 9, scope: !14334)
!14434 = !DILocation(line: 2324, column: 2, scope: !14334)
