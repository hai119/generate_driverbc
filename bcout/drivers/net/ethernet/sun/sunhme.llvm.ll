; ModuleID = '../bcout/drivers/net/ethernet/sun/sunhme.llvm.bc'
source_filename = "drivers/net/ethernet/sun/sunhme.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64"

module asm ".section\09\22.initcall6.init\22, \22a\22\09"
module asm "__initcall_happy_meal_probe6:\09\09\09"
module asm ".long\09happy_meal_probe - .\09\09\09"
module asm ".previous\09\09\09\09\09"

%struct.module_version_attribute = type { %struct.module_attribute, i8*, i8* }
%struct.module_attribute = type { %struct.attribute, i64 (%struct.module_attribute*, %struct.module_kobject*, i8*)*, i64 (%struct.module_attribute*, %struct.module_kobject*, i8*, i64)*, void (%struct.module*, i8*)*, i32 (%struct.module*)*, void (%struct.module*)* }
%struct.attribute = type { i8*, i16 }
%struct.module_kobject = type { %struct.kobject, %struct.module*, %struct.kobject*, %struct.module_param_attrs*, %struct.completion* }
%struct.kobject = type { i8*, %struct.list_head, %struct.kobject*, %struct.kset*, %struct.kobj_type*, %struct.kernfs_node*, %struct.kref, i8 }
%struct.list_head = type { %struct.list_head*, %struct.list_head* }
%struct.kset = type { %struct.list_head, %struct.spinlock, %struct.kobject, %struct.kset_uevent_ops* }
%struct.spinlock = type { %union.anon.1 }
%union.anon.1 = type { %struct.raw_spinlock }
%struct.raw_spinlock = type { %struct.arch_spinlock_t }
%struct.arch_spinlock_t = type {}
%struct.kset_uevent_ops = type { i32 (%struct.kset*, %struct.kobject*)*, i8* (%struct.kset*, %struct.kobject*)*, i32 (%struct.kset*, %struct.kobject*, %struct.kobj_uevent_env*)* }
%struct.kobj_uevent_env = type { [3 x i8*], [64 x i8*], i32, [2048 x i8], i32 }
%struct.kobj_type = type { void (%struct.kobject*)*, %struct.sysfs_ops*, %struct.attribute**, %struct.attribute_group**, %struct.kobj_ns_type_operations* (%struct.kobject*)*, i8* (%struct.kobject*)*, void (%struct.kobject*, %struct.kuid_t*, %struct.kgid_t*)* }
%struct.sysfs_ops = type { i64 (%struct.kobject*, %struct.attribute*, i8*)*, i64 (%struct.kobject*, %struct.attribute*, i8*, i64)* }
%struct.attribute_group = type { i8*, i16 (%struct.kobject*, %struct.attribute*, i32)*, i16 (%struct.kobject*, %struct.bin_attribute*, i32)*, %struct.attribute**, %struct.bin_attribute** }
%struct.bin_attribute = type { %struct.attribute, i64, i8*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i32 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, %struct.vm_area_struct*)* }
%struct.file = type { %union.anon, %struct.path, %struct.inode*, %struct.file_operations*, %struct.spinlock, i32, %struct.atomic64_t, i32, i32, %struct.mutex, i64, %struct.fown_struct, %struct.cred*, %struct.file_ra_state, i64, i8*, %struct.list_head, %struct.list_head, %struct.address_space*, i32, i32 }
%union.anon = type { %struct.callback_head }
%struct.callback_head = type { %struct.callback_head*, void (%struct.callback_head*)* }
%struct.path = type { %struct.vfsmount*, %struct.dentry* }
%struct.vfsmount = type opaque
%struct.dentry = type { i32, %struct.seqcount_spinlock, %struct.hlist_bl_node, %struct.dentry*, %struct.qstr, %struct.inode*, [32 x i8], %struct.lockref, %struct.dentry_operations*, %struct.super_block*, i64, i8*, %union.anon.84, %struct.list_head, %struct.list_head, %union.anon.85 }
%struct.seqcount_spinlock = type { %struct.seqcount }
%struct.seqcount = type { i32 }
%struct.hlist_bl_node = type { %struct.hlist_bl_node*, %struct.hlist_bl_node** }
%struct.qstr = type { %union.anon.0, i8* }
%union.anon.0 = type { i64 }
%struct.lockref = type { %union.anon.82 }
%union.anon.82 = type { %struct.anon.83 }
%struct.anon.83 = type { %struct.spinlock, i32 }
%struct.dentry_operations = type { i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.qstr*)*, i32 (%struct.dentry*, i32, i8*, %struct.qstr*)*, i32 (%struct.dentry*)*, i32 (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*, %struct.inode*)*, i8* (%struct.dentry*, i8*, i32)*, %struct.vfsmount* (%struct.path*)*, i32 (%struct.path*, i1)*, %struct.dentry* (%struct.dentry*, %struct.inode*)*, [24 x i8] }
%struct.super_block = type { %struct.list_head, i32, i8, i64, i64, %struct.file_system_type*, %struct.super_operations*, %struct.dquot_operations*, %struct.quotactl_ops*, %struct.export_operations*, i64, i64, i64, %struct.dentry*, %struct.rw_semaphore, i32, %struct.atomic_t, %struct.xattr_handler**, %struct.hlist_bl_head, %struct.list_head, %struct.block_device*, %struct.backing_dev_info*, %struct.mtd_info*, %struct.hlist_node, i32, %struct.quota_info, %struct.sb_writers, i8*, i32, i64, i64, i32, %struct.fsnotify_mark_connector*, [32 x i8], %struct.uuid_t, i32, i32, %struct.mutex, i8*, %struct.dentry_operations*, i32, %struct.shrinker, %struct.atomic64_t, %struct.atomic64_t, i32, i32, %struct.workqueue_struct*, %struct.hlist_head, %struct.user_namespace*, %struct.list_lru, %struct.list_lru, %struct.callback_head, %struct.work_struct, %struct.mutex, i32, %struct.spinlock, %struct.list_head, %struct.spinlock, %struct.list_head }
%struct.file_system_type = type { i8*, i32, i32 (%struct.fs_context*)*, %struct.fs_parameter_spec*, %struct.dentry* (%struct.file_system_type*, i32, i8*, i8*)*, void (%struct.super_block*)*, %struct.module*, %struct.file_system_type*, %struct.hlist_head, %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key, [3 x %struct.lock_class_key], %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key }
%struct.fs_context = type opaque
%struct.fs_parameter_spec = type opaque
%struct.lock_class_key = type {}
%struct.super_operations = type { %struct.inode* (%struct.super_block*)*, void (%struct.inode*)*, void (%struct.inode*)*, void (%struct.inode*, i32)*, i32 (%struct.inode*, %struct.writeback_control*)*, i32 (%struct.inode*)*, void (%struct.inode*)*, void (%struct.super_block*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.dentry*, %struct.kstatfs*)*, i32 (%struct.super_block*, i32*, i8*)*, void (%struct.super_block*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.super_block*, %struct.page*, i32)*, i64 (%struct.super_block*, %struct.shrink_control*)*, i64 (%struct.super_block*, %struct.shrink_control*)* }
%struct.writeback_control = type opaque
%struct.kstatfs = type opaque
%struct.seq_file = type { i8*, i64, i64, i64, i64, i64, i64, %struct.mutex, %struct.seq_operations*, i32, %struct.file*, i8* }
%struct.seq_operations = type { i8* (%struct.seq_file*, i64*)*, void (%struct.seq_file*, i8*)*, i8* (%struct.seq_file*, i8*, i64*)*, i32 (%struct.seq_file*, i8*)* }
%struct.page = type { i64, %union.anon.2, %union.anon.74, %struct.atomic_t, [8 x i8] }
%union.anon.2 = type { %struct.anon.3 }
%struct.anon.3 = type { %struct.list_head, %struct.address_space*, i64, i64 }
%union.anon.74 = type { %struct.atomic_t }
%struct.shrink_control = type { i32, i32, i64, i64, %struct.mem_cgroup* }
%struct.mem_cgroup = type opaque
%struct.dquot_operations = type { i32 (%struct.dquot*)*, %struct.dquot* (%struct.super_block*, i32)*, void (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, i32)*, i64* (%struct.inode*)*, i32 (%struct.inode*, %struct.kprojid_t*)*, i32 (%struct.inode*, i64*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.dquot = type { %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.mutex, %struct.spinlock, %struct.atomic_t, %struct.super_block*, %struct.kqid, i64, i64, %struct.mem_dqblk }
%struct.kqid = type { %union.anon.75, i32 }
%union.anon.75 = type { %struct.kuid_t }
%struct.kuid_t = type { i32 }
%struct.mem_dqblk = type { i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.kprojid_t = type { i32 }
%struct.quotactl_ops = type { i32 (%struct.super_block*, i32, i32, %struct.path*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32, %struct.qc_info*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.kqid*, %struct.qc_dqblk*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.qc_state*)*, i32 (%struct.super_block*, i32)* }
%struct.qc_info = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.qc_dqblk = type { i32, i64, i64, i64, i64, i64, i64, i64, i64, i32, i32, i64, i64, i64, i64, i32 }
%struct.qc_state = type { i32, [3 x %struct.qc_type_state] }
%struct.qc_type_state = type { i32, i32, i32, i32, i32, i32, i32, i64, i64, i64 }
%struct.export_operations = type opaque
%struct.rw_semaphore = type { %struct.atomic64_t, %struct.atomic64_t, %struct.raw_spinlock, %struct.list_head }
%struct.atomic_t = type { i32 }
%struct.xattr_handler = type opaque
%struct.hlist_bl_head = type { %struct.hlist_bl_node* }
%struct.block_device = type opaque
%struct.backing_dev_info = type opaque
%struct.mtd_info = type opaque
%struct.hlist_node = type { %struct.hlist_node*, %struct.hlist_node** }
%struct.quota_info = type { i32, %struct.rw_semaphore, [3 x %struct.inode*], [3 x %struct.mem_dqinfo], [3 x %struct.quota_format_ops*] }
%struct.mem_dqinfo = type { %struct.quota_format_type*, i32, %struct.list_head, i64, i32, i32, i64, i64, i8* }
%struct.quota_format_type = type { i32, %struct.quota_format_ops*, %struct.module*, %struct.quota_format_type* }
%struct.quota_format_ops = type { i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.sb_writers = type { i32, %struct.wait_queue_head, [3 x %struct.percpu_rw_semaphore] }
%struct.wait_queue_head = type { %struct.spinlock, %struct.list_head }
%struct.percpu_rw_semaphore = type { %struct.rcu_sync, i32*, %struct.rcuwait, %struct.wait_queue_head, %struct.atomic_t }
%struct.rcu_sync = type { i32, i32, %struct.wait_queue_head, %struct.callback_head }
%struct.rcuwait = type { %struct.task_struct* }
%struct.task_struct = type { %struct.thread_info, i64, i8*, %struct.refcount_struct, i32, i32, i32, i32, i32, i32, i32, %struct.sched_class*, %struct.sched_entity, %struct.sched_rt_entity, %struct.sched_dl_entity, i32, i32, %struct.cpumask*, %struct.cpumask, %struct.sched_info, %struct.list_head, %struct.mm_struct*, %struct.mm_struct*, %struct.vmacache, i32, i32, i32, i32, i64, i32, i8, [3 x i8], i8, i64, %struct.restart_block, i32, i32, i64, %struct.task_struct*, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.pid*, [4 x %struct.hlist_node], %struct.list_head, %struct.list_head, %struct.completion*, i32*, i32*, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, %struct.posix_cputimers, %struct.posix_cputimers_work, %struct.cred*, %struct.cred*, %struct.cred*, %struct.key*, [16 x i8], %struct.nameidata*, %struct.fs_struct*, %struct.files_struct*, %struct.io_uring_task*, %struct.nsproxy*, %struct.signal_struct*, %struct.sighand_struct*, %struct.sigset_t, %struct.sigset_t, %struct.sigset_t, %struct.sigpending, i64, i64, i32, %struct.callback_head*, %struct.seccomp, i64, i64, %struct.spinlock, %struct.raw_spinlock, %struct.wake_q_node, %struct.rb_root_cached, %struct.task_struct*, %struct.rt_mutex_waiter*, i8*, %struct.bio_list*, %struct.blk_plug*, %struct.reclaim_state*, %struct.backing_dev_info*, %struct.io_context*, %struct.capture_control*, i64, %struct.kernel_siginfo*, %struct.task_io_accounting, %struct.robust_list_head*, %struct.list_head, %struct.futex_pi_state*, %struct.mutex, i32, [2 x %struct.perf_event_context*], %struct.mutex, %struct.list_head, %struct.rseq*, i32, i64, %struct.tlbflush_unmap_batch, %union.anon.67, %struct.pipe_inode_info*, %struct.page_frag, i32, i32, i64, i64, i64, i32, %struct.task_struct*, %struct.vm_struct*, %struct.refcount_struct, i8*, i64, i64, i64, %struct.callback_head, [24 x i8], %struct.thread_struct }
%struct.thread_info = type { i64, i32 }
%struct.sched_class = type opaque
%struct.sched_entity = type { %struct.load_weight, %struct.rb_node, %struct.list_head, i32, i64, i64, i64, i64, i64, %struct.sched_statistics }
%struct.load_weight = type { i64, i32 }
%struct.rb_node = type { i64, %struct.rb_node*, %struct.rb_node* }
%struct.sched_statistics = type {}
%struct.sched_rt_entity = type { %struct.list_head, i64, i64, i32, i16, i16, %struct.sched_rt_entity* }
%struct.sched_dl_entity = type { %struct.rb_node, i64, i64, i64, i64, i64, i64, i64, i32, i8, %struct.hrtimer, %struct.hrtimer, %struct.sched_dl_entity* }
%struct.hrtimer = type { %struct.timerqueue_node, i64, i32 (%struct.hrtimer*)*, %struct.hrtimer_clock_base*, i8, i8, i8, i8 }
%struct.timerqueue_node = type { %struct.rb_node, i64 }
%struct.hrtimer_clock_base = type { %struct.hrtimer_cpu_base*, i32, i32, %struct.seqcount_raw_spinlock, %struct.hrtimer*, %struct.timerqueue_head, i64 ()*, i64 }
%struct.hrtimer_cpu_base = type { %struct.raw_spinlock, i32, i32, i32, i8, i64, %struct.hrtimer*, i64, %struct.hrtimer*, [16 x i8], [8 x %struct.hrtimer_clock_base] }
%struct.seqcount_raw_spinlock = type { %struct.seqcount }
%struct.timerqueue_head = type { %struct.rb_root_cached }
%struct.cpumask = type { [1 x i64] }
%struct.sched_info = type {}
%struct.mm_struct = type { %struct.anon.18, [0 x i64] }
%struct.anon.18 = type { %struct.vm_area_struct*, %struct.rb_root, i64, i64 (%struct.file*, i64, i64, i64, i64)*, i64, i64, i64, i64, %struct.pgd_t*, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i32, %struct.spinlock, %struct.rw_semaphore, %struct.list_head, i64, i64, i64, i64, %struct.atomic64_t, i64, i64, i64, i64, %struct.spinlock, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, [44 x i64], %struct.mm_rss_stat, %struct.linux_binfmt*, %struct.mm_context_t, i64, %struct.core_state*, %struct.spinlock, %struct.kioctx_table*, %struct.user_namespace*, %struct.file*, %struct.mmu_notifier_subscriptions*, %struct.atomic_t, i8, %struct.uprobes_state, %struct.work_struct, i32 }
%struct.vm_area_struct = type { i64, i64, %struct.vm_area_struct*, %struct.vm_area_struct*, %struct.rb_node, i64, %struct.mm_struct*, %struct.pgprot, i64, %struct.anon.19, %struct.list_head, %struct.anon_vma*, %struct.vm_operations_struct*, i64, %struct.file*, i8*, %struct.atomic64_t, %struct.vm_userfaultfd_ctx }
%struct.pgprot = type { i64 }
%struct.anon.19 = type { %struct.rb_node, i64 }
%struct.anon_vma = type opaque
%struct.vm_operations_struct = type { void (%struct.vm_area_struct*)*, void (%struct.vm_area_struct*)*, i32 (%struct.vm_area_struct*, i64)*, i32 (%struct.vm_area_struct*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_fault*, i32)*, void (%struct.vm_fault*, i64, i64)*, i64 (%struct.vm_area_struct*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_area_struct*, i64, i8*, i32, i32)*, i8* (%struct.vm_area_struct*)*, %struct.page* (%struct.vm_area_struct*, i64)* }
%struct.vm_fault = type { %struct.vm_area_struct*, i32, i32, i64, i64, %struct.pmd_t*, %struct.pud_t*, %struct.pte_t, %struct.page*, %struct.page*, %struct.pte_t*, %struct.spinlock*, %struct.page* }
%struct.pmd_t = type { i64 }
%struct.pud_t = type { i64 }
%struct.pte_t = type { i64 }
%struct.vm_userfaultfd_ctx = type {}
%struct.rb_root = type { %struct.rb_node* }
%struct.pgd_t = type { i64 }
%struct.mm_rss_stat = type { [4 x %struct.atomic64_t] }
%struct.linux_binfmt = type opaque
%struct.mm_context_t = type { i64, %struct.atomic64_t, %struct.rw_semaphore, %struct.ldt_struct*, i16, %struct.mutex, i8*, %struct.vdso_image*, %struct.atomic_t, i16, i16 }
%struct.ldt_struct = type opaque
%struct.vdso_image = type { i8*, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.core_state = type { %struct.atomic_t, %struct.core_thread, %struct.completion }
%struct.core_thread = type { %struct.task_struct*, %struct.core_thread* }
%struct.completion = type { i32, %struct.swait_queue_head }
%struct.swait_queue_head = type { %struct.raw_spinlock, %struct.list_head }
%struct.kioctx_table = type opaque
%struct.mmu_notifier_subscriptions = type opaque
%struct.uprobes_state = type {}
%struct.vmacache = type { i64, [4 x %struct.vm_area_struct*] }
%struct.restart_block = type { i64 (%struct.restart_block*)*, %union.anon.20 }
%union.anon.20 = type { %struct.anon.21 }
%struct.anon.21 = type { i32*, i32, i32, i32, i64, i32* }
%struct.pid = type { %struct.refcount_struct, i32, %struct.spinlock, [4 x %struct.hlist_head], %struct.hlist_head, %struct.wait_queue_head, %struct.callback_head, [1 x %struct.upid] }
%struct.upid = type { i32, %struct.pid_namespace* }
%struct.pid_namespace = type opaque
%struct.prev_cputime = type { i64, i64, %struct.raw_spinlock }
%struct.posix_cputimers = type { [3 x %struct.posix_cputimer_base], i32, i32 }
%struct.posix_cputimer_base = type { i64, %struct.timerqueue_head }
%struct.posix_cputimers_work = type { %struct.callback_head, i32 }
%struct.key = type { %struct.refcount_struct, i32, %union.anon.25, %struct.rw_semaphore, %struct.key_user*, i8*, %union.anon.26, i64, %struct.kuid_t, %struct.kgid_t, i32, i16, i16, i16, i64, %union.anon.27, %union.anon.31, %struct.key_restriction* }
%union.anon.25 = type { %struct.rb_node }
%struct.key_user = type opaque
%union.anon.26 = type { i64 }
%struct.kgid_t = type { i32 }
%union.anon.27 = type { %struct.keyring_index_key }
%struct.keyring_index_key = type { i64, %union.anon.28, %struct.key_type*, %struct.key_tag*, i8* }
%union.anon.28 = type { i64 }
%struct.key_type = type opaque
%struct.key_tag = type { %struct.callback_head, %struct.refcount_struct, i8 }
%union.anon.31 = type { %union.key_payload }
%union.key_payload = type { [4 x i8*] }
%struct.key_restriction = type { i32 (%struct.key*, %struct.key_type*, %union.key_payload*, %struct.key*)*, %struct.key*, %struct.key_type* }
%struct.nameidata = type opaque
%struct.fs_struct = type opaque
%struct.files_struct = type opaque
%struct.io_uring_task = type opaque
%struct.nsproxy = type { %struct.atomic_t, %struct.uts_namespace*, %struct.ipc_namespace*, %struct.mnt_namespace*, %struct.pid_namespace*, %struct.net*, %struct.time_namespace*, %struct.time_namespace*, %struct.cgroup_namespace* }
%struct.uts_namespace = type opaque
%struct.ipc_namespace = type opaque
%struct.mnt_namespace = type opaque
%struct.net = type { %struct.refcount_struct, %struct.refcount_struct, %struct.spinlock, i32, i32, i32, %struct.spinlock, %struct.atomic_t, %struct.list_head, %struct.list_head, %struct.llist_node, %struct.key_tag*, %struct.user_namespace*, %struct.ucounts*, %struct.idr, %struct.ns_common, %struct.list_head, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.ctl_table_set, %struct.sock*, %struct.sock*, %struct.uevent_sock*, %struct.hlist_head*, %struct.hlist_head*, %struct.raw_notifier_head, i32, %struct.net_device*, %struct.list_head, %struct.netns_core, %struct.netns_mib, %struct.netns_packet, %struct.netns_unix, %struct.netns_nexthop, %struct.netns_ipv4, %struct.netns_ipv6, %struct.sk_buff_head, %struct.net_generic*, %struct.netns_bpf, %struct.atomic64_t, %struct.netns_can, %struct.sock* }
%struct.llist_node = type { %struct.llist_node* }
%struct.ucounts = type { %struct.hlist_node, %struct.user_namespace*, %struct.kuid_t, i32, [10 x %struct.atomic_t] }
%struct.idr = type { %struct.xarray, i32, i32 }
%struct.xarray = type { %struct.spinlock, i32, i8* }
%struct.ns_common = type { %struct.atomic64_t, %struct.proc_ns_operations*, i32 }
%struct.proc_ns_operations = type opaque
%struct.proc_dir_entry = type opaque
%struct.ctl_table_set = type { i32 (%struct.ctl_table_set*)*, %struct.ctl_dir }
%struct.ctl_dir = type { %struct.ctl_table_header, %struct.rb_root }
%struct.ctl_table_header = type { %union.anon.35, %struct.completion*, %struct.ctl_table*, %struct.ctl_table_root*, %struct.ctl_table_set*, %struct.ctl_dir*, %struct.ctl_node*, %struct.hlist_head }
%union.anon.35 = type { %struct.anon.36 }
%struct.anon.36 = type { %struct.ctl_table*, i32, i32, i32 }
%struct.ctl_table = type { i8*, i8*, i32, i16, %struct.ctl_table*, i32 (%struct.ctl_table*, i32, i8*, i64*, i64*)*, %struct.ctl_table_poll*, i8*, i8* }
%struct.ctl_table_poll = type { %struct.atomic_t, %struct.wait_queue_head }
%struct.ctl_table_root = type { %struct.ctl_table_set, %struct.ctl_table_set* (%struct.ctl_table_root*)*, void (%struct.ctl_table_header*, %struct.ctl_table*, %struct.kuid_t*, %struct.kgid_t*)*, i32 (%struct.ctl_table_header*, %struct.ctl_table*)* }
%struct.ctl_node = type { %struct.rb_node, %struct.ctl_table_header* }
%struct.uevent_sock = type opaque
%struct.raw_notifier_head = type { %struct.notifier_block* }
%struct.notifier_block = type { i32 (%struct.notifier_block*, i64, i8*)*, %struct.notifier_block*, i32 }
%struct.net_device = type { [16 x i8], %struct.netdev_name_node*, %struct.dev_ifalias*, i64, i64, i64, i32, i64, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.anon.87, i64, i64, i64, i64, i64, i64, i64, i32, i32, %struct.net_device_stats, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.iw_handler_def*, %struct.iw_public_data*, %struct.net_device_ops*, %struct.ethtool_ops*, %struct.ndisc_ops*, %struct.header_ops*, i32, i32, i16, i16, i8, i8, i8, i8, i32, i32, i32, i16, i16, i8, i8, i16, i16, [32 x i8], i8, i8, i8, i8, i16, i16, i16, %struct.spinlock, %struct.netdev_hw_addr_list, %struct.netdev_hw_addr_list, %struct.netdev_hw_addr_list, %struct.kset*, i32, i32, i8, %struct.vlan_info*, %struct.in_device*, %struct.inet6_dev*, %struct.wireless_dev*, %struct.wpan_dev*, i8*, %struct.netdev_rx_queue*, i32, i32, %struct.bpf_prog*, i64, i32, i32 (%struct.sk_buff**)*, i8*, %struct.netdev_queue*, [32 x i8], %struct.hlist_node, %struct.netdev_queue*, i32, i32, %struct.Qdisc*, i32, %struct.spinlock, %struct.xdp_dev_bulk_queue*, %struct.timer_list, i32, i32, %struct.list_head, i32*, %struct.list_head, i8, i8, i16, i8, void (%struct.net_device*)*, %struct.possible_net_t, %union.anon.127, %struct.device, [4 x %struct.attribute_group*], %struct.attribute_group*, %struct.rtnl_link_ops*, i32, i16, i16, [16 x %struct.netdev_tc_txq], [16 x i8], %struct.phy_device*, %struct.sfp_bus*, %struct.lock_class_key*, %struct.lock_class_key*, i8, i8, %struct.list_head, %struct.udp_tunnel_nic_info*, %struct.udp_tunnel_nic*, [3 x %struct.bpf_xdp_entity] }
%struct.netdev_name_node = type { %struct.hlist_node, %struct.list_head, %struct.net_device*, i8* }
%struct.dev_ifalias = type { %struct.callback_head, [0 x i8] }
%struct.anon.87 = type { %struct.list_head, %struct.list_head }
%struct.net_device_stats = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.iw_handler_def = type opaque
%struct.iw_public_data = type opaque
%struct.net_device_ops = type { i32 (%struct.net_device*)*, void (%struct.net_device*)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*)*, i32 (%struct.sk_buff*, %struct.net_device*)*, i64 (%struct.sk_buff*, %struct.net_device*, i64)*, i16 (%struct.net_device*, %struct.sk_buff*, %struct.net_device*)*, void (%struct.net_device*, i32)*, void (%struct.net_device*)*, i32 (%struct.net_device*, i8*)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*, %struct.ifreq*, i32)*, i32 (%struct.net_device*, %struct.ifmap*)*, i32 (%struct.net_device*, i32)*, i32 (%struct.net_device*, %struct.neigh_parms*)*, void (%struct.net_device*, i32)*, void (%struct.net_device*, %struct.rtnl_link_stats64*)*, i1 (%struct.net_device*, i32)*, i32 (i32, %struct.net_device*, i8*)*, %struct.net_device_stats* (%struct.net_device*)*, i32 (%struct.net_device*, i16, i16)*, i32 (%struct.net_device*, i16, i16)*, i32 (%struct.net_device*, i32, i8*)*, i32 (%struct.net_device*, i32, i16, i8, i16)*, i32 (%struct.net_device*, i32, i32, i32)*, i32 (%struct.net_device*, i32, i1)*, i32 (%struct.net_device*, i32, i1)*, i32 (%struct.net_device*, i32, %struct.ifla_vf_info*)*, i32 (%struct.net_device*, i32, i32)*, i32 (%struct.net_device*, i32, %struct.ifla_vf_stats*)*, i32 (%struct.net_device*, i32, %struct.nlattr**)*, i32 (%struct.net_device*, i32, %struct.sk_buff*)*, i32 (%struct.net_device*, i32, %struct.ifla_vf_guid*, %struct.ifla_vf_guid*)*, i32 (%struct.net_device*, i32, i64, i32)*, i32 (%struct.net_device*, i32, i1)*, i32 (%struct.net_device*, i32, i8*)*, i32 (%struct.net_device*, %struct.net_device*, %struct.netlink_ext_ack*)*, i32 (%struct.net_device*, %struct.net_device*)*, %struct.net_device* (%struct.net_device*, %struct.sk_buff*, i1)*, i64 (%struct.net_device*, i64)*, i32 (%struct.net_device*, i64)*, i32 (%struct.net_device*, %struct.neighbour*)*, void (%struct.net_device*, %struct.neighbour*)*, i32 (%struct.ndmsg*, %struct.nlattr**, %struct.net_device*, i8*, i16, i16, %struct.netlink_ext_ack*)*, i32 (%struct.ndmsg*, %struct.nlattr**, %struct.net_device*, i8*, i16)*, i32 (%struct.sk_buff*, %struct.netlink_callback*, %struct.net_device*, %struct.net_device*, i32*)*, i32 (%struct.sk_buff*, %struct.nlattr**, %struct.net_device*, i8*, i16, i32, i32, %struct.netlink_ext_ack*)*, i32 (%struct.net_device*, %struct.nlmsghdr*, i16, %struct.netlink_ext_ack*)*, i32 (%struct.sk_buff*, i32, i32, %struct.net_device*, i32, i32)*, i32 (%struct.net_device*, %struct.nlmsghdr*, i16)*, i32 (%struct.net_device*, i1)*, i32 (%struct.net_device*, %struct.netdev_phys_item_id*)*, i32 (%struct.net_device*, %struct.netdev_phys_item_id*)*, i32 (%struct.net_device*, i8*, i64)*, void (%struct.net_device*, %struct.udp_tunnel_info*)*, void (%struct.net_device*, %struct.udp_tunnel_info*)*, i8* (%struct.net_device*, %struct.net_device*)*, void (%struct.net_device*, i8*)*, i32 (%struct.net_device*, i32, i32)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*, i1)*, i32 (%struct.net_device*, %struct.sk_buff*)*, void (%struct.net_device*, i32)*, i32 (%struct.net_device*, %struct.netdev_bpf*)*, i32 (%struct.net_device*, i32, %struct.xdp_frame**, i32)*, i32 (%struct.net_device*, i32, i32)*, %struct.devlink_port* (%struct.net_device*)*, i32 (%struct.net_device*, %struct.ip_tunnel_parm*, i32)*, %struct.net_device* (%struct.net_device*)* }
%struct.sk_buff = type { %union.anon.40, %union.anon.43, %union.anon.44, [48 x i8], %union.anon.45, i32, i32, i16, i16, i16, [0 x i8], i8, [0 x i32], [0 x i8], i16, [0 x i8], i16, %union.anon.47, i32, i32, i32, i16, i16, %union.anon.49, %union.anon.50, %union.anon.51, i16, i16, i16, i16, i16, i16, i16, [0 x i32], i32, i32, i8*, i8*, i32, %struct.refcount_struct }
%union.anon.40 = type { %struct.anon.41 }
%struct.anon.41 = type { %struct.sk_buff*, %struct.sk_buff*, %union.anon.42 }
%union.anon.42 = type { %struct.net_device* }
%union.anon.43 = type { %struct.sock* }
%union.anon.44 = type { i64 }
%union.anon.45 = type { %struct.anon.46 }
%struct.anon.46 = type { i64, void (%struct.sk_buff*)* }
%union.anon.47 = type { i32 }
%union.anon.49 = type { i32 }
%union.anon.50 = type { i32 }
%union.anon.51 = type { i16 }
%struct.ifreq = type { %union.anon.88, %union.anon.89 }
%union.anon.88 = type { [16 x i8] }
%union.anon.89 = type { %struct.ifmap }
%struct.ifmap = type { i64, i64, i16, i8, i8, i8 }
%struct.neigh_parms = type opaque
%struct.rtnl_link_stats64 = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.ifla_vf_info = type { i32, [32 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i16 }
%struct.ifla_vf_stats = type { i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.nlattr = type { i16, i16 }
%struct.ifla_vf_guid = type { i32, i64 }
%struct.netlink_ext_ack = type { i8*, %struct.nlattr*, %struct.nla_policy*, [20 x i8], i8 }
%struct.nla_policy = type opaque
%struct.neighbour = type opaque
%struct.ndmsg = type { i8, i8, i16, i32, i16, i8, i8 }
%struct.netlink_callback = type { %struct.sk_buff*, %struct.nlmsghdr*, i32 (%struct.sk_buff*, %struct.netlink_callback*)*, i32 (%struct.netlink_callback*)*, i8*, %struct.module*, %struct.netlink_ext_ack*, i16, i16, i32, i32, i32, i8, %union.anon.91 }
%struct.nlmsghdr = type { i32, i16, i16, i32, i32 }
%union.anon.91 = type { [6 x i64] }
%struct.netdev_phys_item_id = type { [32 x i8], i8 }
%struct.udp_tunnel_info = type opaque
%struct.netdev_bpf = type { i32, %union.anon.92 }
%union.anon.92 = type { %struct.anon.93 }
%struct.anon.93 = type { i32, %struct.bpf_prog*, %struct.netlink_ext_ack* }
%struct.xdp_frame = type { i8*, i16, i16, i32, %struct.xdp_mem_info, %struct.net_device* }
%struct.xdp_mem_info = type { i32, i32 }
%struct.devlink_port = type opaque
%struct.ip_tunnel_parm = type opaque
%struct.ethtool_ops = type { i32, void (%struct.net_device*, %struct.ethtool_drvinfo*)*, i32 (%struct.net_device*)*, void (%struct.net_device*, %struct.ethtool_regs*, i8*)*, void (%struct.net_device*, %struct.ethtool_wolinfo*)*, i32 (%struct.net_device*, %struct.ethtool_wolinfo*)*, i32 (%struct.net_device*)*, void (%struct.net_device*, i32)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*, %struct.ethtool_link_ext_state_info*)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*, %struct.ethtool_eeprom*, i8*)*, i32 (%struct.net_device*, %struct.ethtool_eeprom*, i8*)*, i32 (%struct.net_device*, %struct.ethtool_coalesce*)*, i32 (%struct.net_device*, %struct.ethtool_coalesce*)*, void (%struct.net_device*, %struct.ethtool_ringparam*)*, i32 (%struct.net_device*, %struct.ethtool_ringparam*)*, void (%struct.net_device*, %struct.ethtool_pause_stats*)*, void (%struct.net_device*, %struct.ethtool_pauseparam*)*, i32 (%struct.net_device*, %struct.ethtool_pauseparam*)*, void (%struct.net_device*, %struct.ethtool_test*, i64*)*, void (%struct.net_device*, i32, i8*)*, i32 (%struct.net_device*, i32)*, void (%struct.net_device*, %struct.ethtool_stats*, i64*)*, i32 (%struct.net_device*)*, void (%struct.net_device*)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*, i32)*, i32 (%struct.net_device*, i32)*, i32 (%struct.net_device*, %struct.ethtool_rxnfc*, i32*)*, i32 (%struct.net_device*, %struct.ethtool_rxnfc*)*, i32 (%struct.net_device*, %struct.ethtool_flash*)*, i32 (%struct.net_device*, i32*)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*, i32*, i8*, i8*)*, i32 (%struct.net_device*, i32*, i8*, i8)*, i32 (%struct.net_device*, i32*, i8*, i8*, i32)*, i32 (%struct.net_device*, i32*, i8*, i8, i32*, i1)*, void (%struct.net_device*, %struct.ethtool_channels*)*, i32 (%struct.net_device*, %struct.ethtool_channels*)*, i32 (%struct.net_device*, %struct.ethtool_dump*)*, i32 (%struct.net_device*, %struct.ethtool_dump*, i8*)*, i32 (%struct.net_device*, %struct.ethtool_dump*)*, i32 (%struct.net_device*, %struct.ethtool_ts_info*)*, i32 (%struct.net_device*, %struct.ethtool_modinfo*)*, i32 (%struct.net_device*, %struct.ethtool_eeprom*, i8*)*, i32 (%struct.net_device*, %struct.ethtool_eee*)*, i32 (%struct.net_device*, %struct.ethtool_eee*)*, i32 (%struct.net_device*, %struct.ethtool_tunable*, i8*)*, i32 (%struct.net_device*, %struct.ethtool_tunable*, i8*)*, i32 (%struct.net_device*, i32, %struct.ethtool_coalesce*)*, i32 (%struct.net_device*, i32, %struct.ethtool_coalesce*)*, i32 (%struct.net_device*, %struct.ethtool_link_ksettings*)*, i32 (%struct.net_device*, %struct.ethtool_link_ksettings*)*, i32 (%struct.net_device*, %struct.ethtool_fecparam*)*, i32 (%struct.net_device*, %struct.ethtool_fecparam*)*, void (%struct.net_device*, %struct.ethtool_stats*, i64*)*, i32 (%struct.net_device*, %struct.ethtool_tunable*, i8*)*, i32 (%struct.net_device*, %struct.ethtool_tunable*, i8*)* }
%struct.ethtool_drvinfo = type { i32, [32 x i8], [32 x i8], [32 x i8], [32 x i8], [32 x i8], [12 x i8], i32, i32, i32, i32, i32 }
%struct.ethtool_regs = type { i32, i32, i32, [0 x i8] }
%struct.ethtool_wolinfo = type { i32, i32, i32, [6 x i8] }
%struct.ethtool_link_ext_state_info = type { i32, %union.anon.124 }
%union.anon.124 = type { i32 }
%struct.ethtool_coalesce = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.ethtool_ringparam = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.ethtool_pause_stats = type { i64, i64 }
%struct.ethtool_pauseparam = type { i32, i32, i32, i32 }
%struct.ethtool_test = type { i32, i32, i32, i32, [0 x i64] }
%struct.ethtool_rxnfc = type { i32, i32, i64, %struct.ethtool_rx_flow_spec, %union.anon.125, [0 x i32] }
%struct.ethtool_rx_flow_spec = type { i32, %union.ethtool_flow_union, %struct.ethtool_flow_ext, %union.ethtool_flow_union, %struct.ethtool_flow_ext, i64, i32 }
%union.ethtool_flow_union = type { %struct.ethtool_tcpip6_spec, [12 x i8] }
%struct.ethtool_tcpip6_spec = type { [4 x i32], [4 x i32], i16, i16, i8 }
%struct.ethtool_flow_ext = type { [2 x i8], [6 x i8], i16, i16, [2 x i32] }
%union.anon.125 = type { i32 }
%struct.ethtool_flash = type { i32, i32, [128 x i8] }
%struct.ethtool_channels = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.ethtool_dump = type { i32, i32, i32, i32, [0 x i8] }
%struct.ethtool_ts_info = type { i32, i32, i32, i32, [3 x i32], i32, [3 x i32] }
%struct.ethtool_modinfo = type { i32, i32, i32, [8 x i32] }
%struct.ethtool_eeprom = type { i32, i32, i32, i32, [0 x i8] }
%struct.ethtool_eee = type { i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%struct.ethtool_link_ksettings = type { %struct.ethtool_link_settings, %struct.anon.126 }
%struct.ethtool_link_settings = type { i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [1 x i8], [7 x i32], [0 x i32] }
%struct.anon.126 = type { [2 x i64], [2 x i64], [2 x i64] }
%struct.ethtool_fecparam = type { i32, i32, i32, i32 }
%struct.ethtool_stats = type { i32, i32, [0 x i64] }
%struct.ethtool_tunable = type { i32, i32, i32, i32, [0 x i8*] }
%struct.ndisc_ops = type opaque
%struct.header_ops = type { i32 (%struct.sk_buff*, %struct.net_device*, i16, i8*, i8*, i32)*, i32 (%struct.sk_buff*, i8*)*, i32 (%struct.neighbour*, %struct.hh_cache*, i16)*, void (%struct.hh_cache*, %struct.net_device*, i8*)*, i1 (i8*, i32)*, i16 (%struct.sk_buff*)* }
%struct.hh_cache = type { i32, %struct.seqlock_t, [12 x i64] }
%struct.seqlock_t = type { %struct.seqcount_spinlock, %struct.spinlock }
%struct.netdev_hw_addr_list = type { %struct.list_head, i32 }
%struct.vlan_info = type opaque
%struct.in_device = type opaque
%struct.inet6_dev = type opaque
%struct.wireless_dev = type opaque
%struct.wpan_dev = type opaque
%struct.netdev_rx_queue = type { %struct.kobject, %struct.net_device*, [56 x i8], %struct.xdp_rxq_info }
%struct.xdp_rxq_info = type { %struct.net_device*, i32, i32, %struct.xdp_mem_info, [40 x i8] }
%struct.bpf_prog = type opaque
%struct.netdev_queue = type { %struct.net_device*, %struct.Qdisc*, %struct.Qdisc*, %struct.kobject, i64, i64, %struct.net_device*, %struct.spinlock, i32, i64, i64, %struct.dql }
%struct.dql = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32 }
%struct.Qdisc = type opaque
%struct.xdp_dev_bulk_queue = type opaque
%struct.timer_list = type { %struct.hlist_node, i64, void (%struct.timer_list*)*, i32 }
%struct.possible_net_t = type { %struct.net* }
%union.anon.127 = type { i8* }
%struct.device = type { %struct.kobject, %struct.device*, %struct.device_private*, i8*, %struct.device_type*, %struct.bus_type*, %struct.device_driver*, i8*, i8*, %struct.mutex, %struct.dev_links_info, %struct.dev_pm_info, %struct.dev_pm_domain*, %struct.irq_domain*, %struct.list_head, %struct.dma_map_ops*, i64*, i64, i64, %struct.bus_dma_region*, %struct.device_dma_parameters*, %struct.list_head, %struct.dev_archdata, %struct.device_node*, %struct.fwnode_handle*, i32, i32, %struct.spinlock, %struct.list_head, %struct.class*, %struct.attribute_group**, void (%struct.device*)*, %struct.iommu_group*, %struct.dev_iommu*, i8 }
%struct.device_private = type opaque
%struct.device_type = type { i8*, %struct.attribute_group**, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*, %struct.kuid_t*, %struct.kgid_t*)*, void (%struct.device*)*, %struct.dev_pm_ops* }
%struct.dev_pm_ops = type { i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)* }
%struct.bus_type = type { i8*, i8*, %struct.device*, %struct.attribute_group**, %struct.attribute_group**, %struct.attribute_group**, i32 (%struct.device*, %struct.device_driver*)*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, %struct.dev_pm_ops*, %struct.iommu_ops*, %struct.subsys_private*, %struct.lock_class_key, i8 }
%struct.iommu_ops = type opaque
%struct.subsys_private = type opaque
%struct.device_driver = type { i8*, %struct.bus_type*, %struct.module*, i8*, i8, i32, %struct.of_device_id*, %struct.acpi_device_id*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, %struct.attribute_group**, %struct.attribute_group**, %struct.dev_pm_ops*, void (%struct.device*)*, %struct.driver_private* }
%struct.of_device_id = type { [32 x i8], [32 x i8], [128 x i8], i8* }
%struct.acpi_device_id = type { [9 x i8], i64, i32, i32 }
%struct.driver_private = type opaque
%struct.dev_links_info = type { %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, i8, i32 }
%struct.dev_pm_info = type { %struct.pm_message, i16, i32, %struct.spinlock, %struct.list_head, %struct.completion, %struct.wakeup_source*, i8, %struct.hrtimer, i64, %struct.work_struct, %struct.wait_queue_head, %struct.wake_irq*, %struct.atomic_t, %struct.atomic_t, i16, i32, i32, i32, i32, i32, i64, i64, i64, i64, %struct.pm_subsys_data*, void (%struct.device*, i32)*, %struct.dev_pm_qos* }
%struct.pm_message = type { i32 }
%struct.wakeup_source = type { i8*, i32, %struct.list_head, %struct.spinlock, %struct.wake_irq*, %struct.timer_list, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.device*, i8 }
%struct.wake_irq = type opaque
%struct.pm_subsys_data = type { %struct.spinlock, i32, %struct.list_head, %struct.pm_domain_data* }
%struct.pm_domain_data = type opaque
%struct.dev_pm_qos = type opaque
%struct.dev_pm_domain = type { %struct.dev_pm_ops, i32 (%struct.device*)*, void (%struct.device*, i1)*, i32 (%struct.device*)*, void (%struct.device*)*, void (%struct.device*)* }
%struct.irq_domain = type opaque
%struct.dma_map_ops = type opaque
%struct.bus_dma_region = type opaque
%struct.device_dma_parameters = type { i32, i64 }
%struct.dev_archdata = type {}
%struct.device_node = type opaque
%struct.fwnode_handle = type { %struct.fwnode_handle*, %struct.fwnode_operations*, %struct.device* }
%struct.fwnode_operations = type { %struct.fwnode_handle* (%struct.fwnode_handle*)*, void (%struct.fwnode_handle*)*, i1 (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*, %struct.device*)*, i1 (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i32, i8*, i64)*, i32 (%struct.fwnode_handle*, i8*, i8**, i64)*, i8* (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i8*, i32, i32, %struct.fwnode_reference_args*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, i32 (%struct.fwnode_handle*, %struct.fwnode_endpoint*)*, i32 (%struct.fwnode_handle*, %struct.device*)* }
%struct.fwnode_reference_args = type { %struct.fwnode_handle*, i32, [8 x i64] }
%struct.fwnode_endpoint = type { i32, i32, %struct.fwnode_handle* }
%struct.class = type { i8*, %struct.module*, %struct.attribute_group**, %struct.attribute_group**, %struct.kobject*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*)*, void (%struct.class*)*, void (%struct.device*)*, i32 (%struct.device*)*, %struct.kobj_ns_type_operations*, i8* (%struct.device*)*, void (%struct.device*, %struct.kuid_t*, %struct.kgid_t*)*, %struct.dev_pm_ops*, %struct.subsys_private* }
%struct.kobj_ns_type_operations = type { i32, i1 ()*, i8* ()*, i8* (%struct.sock*)*, i8* ()*, void (i8*)* }
%struct.iommu_group = type opaque
%struct.dev_iommu = type opaque
%struct.rtnl_link_ops = type opaque
%struct.netdev_tc_txq = type { i16, i16 }
%struct.phy_device = type opaque
%struct.sfp_bus = type opaque
%struct.udp_tunnel_nic_info = type opaque
%struct.udp_tunnel_nic = type opaque
%struct.bpf_xdp_entity = type { %struct.bpf_prog*, %struct.bpf_xdp_link* }
%struct.bpf_xdp_link = type opaque
%struct.netns_core = type { %struct.ctl_table_header*, i32, i32*, %struct.prot_inuse* }
%struct.prot_inuse = type opaque
%struct.netns_mib = type { %struct.tcp_mib*, %struct.ipstats_mib*, %struct.linux_mib*, %struct.udp_mib*, %struct.udp_mib*, %struct.icmp_mib*, %struct.icmpmsg_mib*, %struct.proc_dir_entry*, %struct.udp_mib*, %struct.udp_mib*, %struct.ipstats_mib*, %struct.icmpv6_mib*, %struct.icmpv6msg_mib* }
%struct.tcp_mib = type { [16 x i64] }
%struct.linux_mib = type { [124 x i64] }
%struct.icmp_mib = type { [28 x i64] }
%struct.icmpmsg_mib = type { [512 x %struct.atomic64_t] }
%struct.udp_mib = type { [9 x i64] }
%struct.ipstats_mib = type { [37 x i64], %struct.u64_stats_sync }
%struct.u64_stats_sync = type {}
%struct.icmpv6_mib = type { [6 x i64] }
%struct.icmpv6msg_mib = type { [512 x %struct.atomic64_t] }
%struct.netns_packet = type { %struct.mutex, %struct.hlist_head }
%struct.netns_unix = type { i32, %struct.ctl_table_header* }
%struct.netns_nexthop = type { %struct.rb_root, %struct.hlist_head*, i32, i32, %struct.blocking_notifier_head }
%struct.blocking_notifier_head = type { %struct.rw_semaphore, %struct.notifier_block* }
%struct.netns_ipv4 = type { %struct.ctl_table_header*, %struct.ctl_table_header*, %struct.ctl_table_header*, %struct.ctl_table_header*, %struct.ctl_table_header*, %struct.ipv4_devconf*, %struct.ipv4_devconf*, %struct.ip_ra_chain*, %struct.mutex, i8, %struct.hlist_head*, i8, %struct.sock*, %struct.sock**, %struct.sock*, %struct.inet_peer_base*, %struct.sock**, %struct.fqdir*, i32, i32, i32, i32, i32, i32, %struct.local_ports, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [3 x i32], [3 x i32], i32, i64, i64, %struct.inet_timewait_death_row, i32, i32, %struct.tcp_congestion_ops*, %struct.tcp_fastopen_context*, %struct.spinlock, i32, %struct.atomic_t, i64, i32, i32, i32, i32, i32, i32, i32, %struct.ping_group_range, %struct.atomic_t, i64*, i32, %struct.fib_notifier_ops*, i32, %struct.fib_notifier_ops*, i32, %struct.atomic_t, %struct.siphash_key_t }
%struct.ipv4_devconf = type opaque
%struct.ip_ra_chain = type opaque
%struct.inet_peer_base = type opaque
%struct.fqdir = type { i64, i64, i32, i32, %struct.inet_frags*, %struct.net*, i8, %struct.rhashtable, %struct.atomic64_t, %struct.work_struct }
%struct.inet_frags = type { i32, void (%struct.inet_frag_queue*, i8*)*, void (%struct.inet_frag_queue*)*, void (%struct.timer_list*)*, %struct.kmem_cache*, i8*, %struct.rhashtable_params, %struct.refcount_struct, %struct.completion }
%struct.inet_frag_queue = type { %struct.rhash_head, %union.anon.38, %struct.timer_list, %struct.spinlock, %struct.refcount_struct, %struct.rb_root, %struct.sk_buff*, %struct.sk_buff*, i64, i32, i32, i8, i16, %struct.fqdir*, %struct.callback_head }
%struct.rhash_head = type { %struct.rhash_head* }
%union.anon.38 = type { %struct.frag_v6_compare_key }
%struct.frag_v6_compare_key = type { %struct.in6_addr, %struct.in6_addr, i32, i32, i32 }
%struct.in6_addr = type { %union.anon.39 }
%union.anon.39 = type { [4 x i32] }
%struct.kmem_cache = type opaque
%struct.rhashtable_params = type { i16, i16, i16, i16, i32, i16, i8, i32 (i8*, i32, i32)*, i32 (i8*, i32, i32)*, i32 (%struct.rhashtable_compare_arg*, i8*)* }
%struct.rhashtable_compare_arg = type { %struct.rhashtable*, i8* }
%struct.rhashtable = type { %struct.bucket_table*, i32, i32, %struct.rhashtable_params, i8, %struct.work_struct, %struct.mutex, %struct.spinlock, %struct.atomic_t }
%struct.bucket_table = type opaque
%struct.local_ports = type { %struct.seqlock_t, [2 x i32], i8 }
%struct.inet_timewait_death_row = type { %struct.atomic_t, %struct.inet_hashinfo*, i32 }
%struct.inet_hashinfo = type opaque
%struct.tcp_congestion_ops = type opaque
%struct.tcp_fastopen_context = type opaque
%struct.ping_group_range = type { %struct.seqlock_t, [2 x %struct.kgid_t] }
%struct.fib_notifier_ops = type opaque
%struct.siphash_key_t = type { [2 x i64] }
%struct.netns_ipv6 = type { %struct.netns_sysctl_ipv6, %struct.ipv6_devconf*, %struct.ipv6_devconf*, %struct.inet_peer_base*, %struct.fqdir*, %struct.fib6_info*, %struct.rt6_info*, %struct.rt6_statistics*, %struct.timer_list, %struct.hlist_head*, %struct.fib6_table*, %struct.list_head, %struct.dst_ops, %struct.rwlock_t, %struct.spinlock, i32, i64, %struct.sock**, %struct.sock*, %struct.sock*, %struct.sock*, %struct.sock*, %struct.atomic_t, %struct.atomic_t, %struct.seg6_pernet_data*, %struct.fib_notifier_ops*, %struct.fib_notifier_ops*, i32, %struct.anon.52 }
%struct.netns_sysctl_ipv6 = type { %struct.ctl_table_header*, %struct.ctl_table_header*, %struct.ctl_table_header*, %struct.ctl_table_header*, %struct.ctl_table_header*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i64], i64*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8 }
%struct.ipv6_devconf = type opaque
%struct.fib6_info = type opaque
%struct.rt6_info = type opaque
%struct.rt6_statistics = type opaque
%struct.fib6_table = type opaque
%struct.dst_ops = type { i16, i32, i32 (%struct.dst_ops*)*, %struct.dst_entry* (%struct.dst_entry*, i32)*, i32 (%struct.dst_entry*)*, i32 (%struct.dst_entry*)*, i32* (%struct.dst_entry*, i64)*, void (%struct.dst_entry*)*, void (%struct.dst_entry*, %struct.net_device*, i32)*, %struct.dst_entry* (%struct.dst_entry*)*, void (%struct.sk_buff*)*, void (%struct.dst_entry*, %struct.sock*, %struct.sk_buff*, i32, i1)*, void (%struct.dst_entry*, %struct.sock*, %struct.sk_buff*)*, i32 (%struct.net*, %struct.sock*, %struct.sk_buff*)*, %struct.neighbour* (%struct.dst_entry*, %struct.sk_buff*, i8*)*, void (%struct.dst_entry*, i8*)*, %struct.kmem_cache*, %struct.percpu_counter }
%struct.dst_entry = type opaque
%struct.percpu_counter = type { i64 }
%struct.rwlock_t = type { %struct.arch_rwlock_t }
%struct.arch_rwlock_t = type {}
%struct.seg6_pernet_data = type opaque
%struct.anon.52 = type { %struct.hlist_head, %struct.spinlock, i32 }
%struct.sk_buff_head = type { %struct.sk_buff*, %struct.sk_buff*, i32, %struct.spinlock }
%struct.net_generic = type opaque
%struct.netns_bpf = type { [2 x %struct.bpf_prog_array*], [2 x %struct.bpf_prog*], [2 x %struct.list_head] }
%struct.bpf_prog_array = type { %struct.callback_head, [0 x %struct.bpf_prog_array_item] }
%struct.bpf_prog_array_item = type { %struct.bpf_prog*, [2 x %struct.bpf_cgroup_storage*] }
%struct.bpf_cgroup_storage = type opaque
%struct.netns_can = type { %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.can_dev_rcv_lists*, %struct.spinlock, %struct.timer_list, %struct.can_pkg_stats*, %struct.can_rcv_lists_stats*, %struct.hlist_head }
%struct.can_dev_rcv_lists = type opaque
%struct.can_pkg_stats = type opaque
%struct.can_rcv_lists_stats = type opaque
%struct.sock = type opaque
%struct.time_namespace = type opaque
%struct.cgroup_namespace = type { %struct.refcount_struct, %struct.ns_common, %struct.user_namespace*, %struct.ucounts*, %struct.css_set* }
%struct.css_set = type opaque
%struct.signal_struct = type { %struct.refcount_struct, %struct.atomic_t, i32, %struct.list_head, %struct.wait_queue_head, %struct.task_struct*, %struct.sigpending, %struct.hlist_head, i32, i32, %struct.task_struct*, i32, i32, i8, i32, %struct.list_head, %struct.hrtimer, i64, [2 x %struct.cpu_itimer], %struct.thread_group_cputimer, %struct.posix_cputimers, [4 x %struct.pid*], %struct.pid*, i32, %struct.tty_struct*, %struct.seqlock_t, i64, i64, i64, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.task_io_accounting, i64, [16 x %struct.rlimit], i8, i16, i16, %struct.mm_struct*, %struct.mutex, %struct.mutex }
%struct.cpu_itimer = type { i64, i64 }
%struct.thread_group_cputimer = type { %struct.task_cputime_atomic }
%struct.task_cputime_atomic = type { %struct.atomic64_t, %struct.atomic64_t, %struct.atomic64_t }
%struct.tty_struct = type opaque
%struct.rlimit = type { i64, i64 }
%struct.sighand_struct = type { %struct.spinlock, %struct.refcount_struct, %struct.wait_queue_head, [64 x %struct.k_sigaction] }
%struct.k_sigaction = type { %struct.sigaction }
%struct.sigaction = type { void (i32)*, i64, void ()*, %struct.sigset_t }
%struct.sigset_t = type { [1 x i64] }
%struct.sigpending = type { %struct.list_head, %struct.sigset_t }
%struct.seccomp = type { i32, %struct.atomic_t, %struct.seccomp_filter* }
%struct.seccomp_filter = type opaque
%struct.wake_q_node = type { %struct.wake_q_node* }
%struct.rb_root_cached = type { %struct.rb_root, %struct.rb_node* }
%struct.rt_mutex_waiter = type opaque
%struct.bio_list = type opaque
%struct.blk_plug = type opaque
%struct.reclaim_state = type opaque
%struct.io_context = type { %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.spinlock, i16, %struct.xarray, %struct.io_cq*, %struct.hlist_head, %struct.work_struct }
%struct.io_cq = type { %struct.request_queue*, %struct.io_context*, %union.anon.53, %union.anon.54, i32 }
%struct.request_queue = type opaque
%union.anon.53 = type { %struct.list_head }
%union.anon.54 = type { %struct.hlist_node }
%struct.capture_control = type opaque
%struct.kernel_siginfo = type { %struct.anon.55 }
%struct.anon.55 = type { i32, i32, i32, %union.__sifields }
%union.__sifields = type { %struct.anon.59 }
%struct.anon.59 = type { i32, i32, i32, i64, i64 }
%struct.task_io_accounting = type {}
%struct.robust_list_head = type opaque
%struct.futex_pi_state = type opaque
%struct.perf_event_context = type opaque
%struct.rseq = type { i32, i32, %union.anon.66, i32, [12 x i8] }
%union.anon.66 = type { i64 }
%struct.tlbflush_unmap_batch = type { %struct.arch_tlbflush_unmap_batch, i8, i8 }
%struct.arch_tlbflush_unmap_batch = type { %struct.cpumask }
%union.anon.67 = type { %struct.callback_head }
%struct.pipe_inode_info = type { %struct.mutex, %struct.wait_queue_head, %struct.wait_queue_head, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.page*, %struct.fasync_struct*, %struct.fasync_struct*, %struct.pipe_buffer*, %struct.user_struct* }
%struct.fasync_struct = type { %struct.rwlock_t, i32, i32, %struct.fasync_struct*, %struct.file*, %struct.callback_head }
%struct.pipe_buffer = type { %struct.page*, i32, i32, %struct.pipe_buf_operations*, i32, i64 }
%struct.pipe_buf_operations = type { i32 (%struct.pipe_inode_info*, %struct.pipe_buffer*)*, void (%struct.pipe_inode_info*, %struct.pipe_buffer*)*, i1 (%struct.pipe_inode_info*, %struct.pipe_buffer*)*, i1 (%struct.pipe_inode_info*, %struct.pipe_buffer*)* }
%struct.user_struct = type { %struct.refcount_struct, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i64, i64, %struct.atomic64_t, %struct.hlist_node, %struct.kuid_t, %struct.atomic64_t, %struct.ratelimit_state }
%struct.ratelimit_state = type { %struct.raw_spinlock, i32, i32, i32, i32, i64, i64 }
%struct.page_frag = type { %struct.page*, i32, i32 }
%struct.vm_struct = type { %struct.vm_struct*, i8*, i64, i64, %struct.page**, i32, i64, i8* }
%struct.refcount_struct = type { %struct.atomic_t }
%struct.thread_struct = type { [3 x %struct.desc_struct], i64, i16, i16, i16, i16, i64, i64, [4 x %struct.perf_event*], i64, i64, i64, i64, i64, %struct.io_bitmap*, i64, i8, [47 x i8], %struct.fpu }
%struct.desc_struct = type { i16, i16, i32 }
%struct.perf_event = type opaque
%struct.io_bitmap = type opaque
%struct.fpu = type { i32, i64, [48 x i8], %union.fpregs_state }
%union.fpregs_state = type { %struct.xregs_state, [3520 x i8] }
%struct.xregs_state = type { %struct.fxregs_state, %struct.xstate_header, [0 x i8] }
%struct.fxregs_state = type { i16, i16, i16, i16, %union.anon.68, i32, i32, [32 x i32], [64 x i32], [12 x i32], %union.anon.71 }
%union.anon.68 = type { %struct.anon.69 }
%struct.anon.69 = type { i64, i64 }
%union.anon.71 = type { [12 x i32] }
%struct.xstate_header = type { i64, i64, [6 x i64] }
%struct.fsnotify_mark_connector = type opaque
%struct.uuid_t = type { [16 x i8] }
%struct.shrinker = type { i64 (%struct.shrinker*, %struct.shrink_control*)*, i64 (%struct.shrinker*, %struct.shrink_control*)*, i64, i32, i32, %struct.list_head, %struct.atomic64_t* }
%struct.workqueue_struct = type opaque
%struct.hlist_head = type { %struct.hlist_node* }
%struct.user_namespace = type { %struct.uid_gid_map, %struct.uid_gid_map, %struct.uid_gid_map, %struct.atomic_t, %struct.user_namespace*, i32, %struct.kuid_t, %struct.kgid_t, %struct.ns_common, i64, %struct.list_head, %struct.key*, %struct.rw_semaphore, %struct.work_struct, %struct.ctl_table_set, %struct.ctl_table_header*, %struct.ucounts*, [10 x i32] }
%struct.uid_gid_map = type { i32, %union.anon.33 }
%union.anon.33 = type { %struct.anon.34, [48 x i8] }
%struct.anon.34 = type { %struct.uid_gid_extent*, %struct.uid_gid_extent* }
%struct.uid_gid_extent = type { i32, i32, i32 }
%struct.list_lru = type { %struct.list_lru_node* }
%struct.list_lru_node = type { %struct.spinlock, %struct.list_lru_one, i64 }
%struct.list_lru_one = type { %struct.list_head, i64 }
%struct.work_struct = type { %struct.atomic64_t, %struct.list_head, void (%struct.work_struct*)* }
%union.anon.84 = type { %struct.list_head }
%union.anon.85 = type { %struct.hlist_node }
%struct.inode = type { i16, i16, %struct.kuid_t, %struct.kgid_t, i32, %struct.inode_operations*, %struct.super_block*, %struct.address_space*, i64, %union.anon.76, i32, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.spinlock, i16, i8, i8, i64, i64, %struct.rw_semaphore, i64, i64, %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %union.anon.77, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %union.anon.78, %struct.file_lock_context*, %struct.address_space, %struct.list_head, %union.anon.81, i32, i32, %struct.fsnotify_mark_connector*, i8* }
%struct.inode_operations = type { %struct.dentry* (%struct.inode*, %struct.dentry*, i32)*, i8* (%struct.dentry*, %struct.inode*, %struct.delayed_call*)*, i32 (%struct.inode*, i32)*, %struct.posix_acl* (%struct.inode*, i32)*, i32 (%struct.dentry*, i8*, i32)*, i32 (%struct.inode*, %struct.dentry*, i16, i1)*, i32 (%struct.dentry*, %struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i8*)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i16, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.inode*, %struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.iattr*)*, i32 (%struct.path*, %struct.kstat*, i32, i32)*, i64 (%struct.dentry*, i8*, i64)*, i32 (%struct.inode*, %struct.fiemap_extent_info*, i64, i64)*, i32 (%struct.inode*, %struct.timespec64*, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.file*, i32, i16)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.posix_acl*, i32)*, [24 x i8] }
%struct.delayed_call = type { void (i8*)*, i8* }
%struct.posix_acl = type opaque
%struct.iattr = type { i32, i16, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.file* }
%struct.kstat = type { i32, i16, i32, i32, i64, i64, i64, i32, i32, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.timespec64, i64, i64 }
%struct.fiemap_extent_info = type opaque
%union.anon.76 = type { i32 }
%struct.timespec64 = type { i64, i64 }
%union.anon.77 = type { %struct.callback_head }
%union.anon.78 = type { %struct.file_operations* }
%struct.file_lock_context = type { %struct.spinlock, %struct.list_head, %struct.list_head, %struct.list_head }
%struct.address_space = type { %struct.inode*, %struct.xarray, i32, %struct.atomic_t, %struct.rb_root_cached, %struct.rw_semaphore, i64, i64, i64, %struct.address_space_operations*, i64, i32, %struct.spinlock, %struct.list_head, i8* }
%struct.address_space_operations = type { i32 (%struct.page*, %struct.writeback_control*)*, i32 (%struct.file*, %struct.page*)*, i32 (%struct.address_space*, %struct.writeback_control*)*, i32 (%struct.page*)*, i32 (%struct.file*, %struct.address_space*, %struct.list_head*, i32)*, void (%struct.readahead_control*)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page**, i8**)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page*, i8*)*, i64 (%struct.address_space*, i64)*, void (%struct.page*, i32, i32)*, i32 (%struct.page*, i32)*, void (%struct.page*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.address_space*, %struct.page*, %struct.page*, i32)*, i1 (%struct.page*, i32)*, void (%struct.page*)*, i32 (%struct.page*)*, i32 (%struct.page*, i64, i64)*, void (%struct.page*, i8*, i8*)*, i32 (%struct.address_space*, %struct.page*)*, i32 (%struct.swap_info_struct*, %struct.file*, i64*)*, void (%struct.file*)* }
%struct.readahead_control = type opaque
%struct.kiocb = type { %struct.file*, i64, void (%struct.kiocb*, i64, i64)*, i8*, i32, i16, i16, %union.anon.4 }
%union.anon.4 = type { %struct.wait_page_queue* }
%struct.wait_page_queue = type opaque
%struct.iov_iter = type { i32, i64, i64, %union.anon.5, %union.anon.6 }
%union.anon.5 = type { %struct.iovec* }
%struct.iovec = type { i8*, i64 }
%union.anon.6 = type { i64 }
%struct.swap_info_struct = type opaque
%union.anon.81 = type { %struct.pipe_inode_info* }
%struct.file_operations = type { %struct.module*, i64 (%struct.file*, i64, i32)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.kiocb*, i1)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.poll_table_struct*)*, i64 (%struct.file*, i32, i64)*, i64 (%struct.file*, i32, i64)*, i32 (%struct.file*, %struct.vm_area_struct*)*, i64, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i8*)*, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i64, i64, i32)*, i32 (i32, %struct.file*, i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.file*, %struct.page*, i32, i64, i64*, i32)*, i64 (%struct.file*, i64, i64, i64, i64)*, i32 (i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.pipe_inode_info*, %struct.file*, i64*, i64, i32)*, i64 (%struct.file*, i64*, %struct.pipe_inode_info*, i64, i32)*, i32 (%struct.file*, i64, %struct.file_lock**, i8**)*, i64 (%struct.file*, i32, i64, i64)*, void (%struct.seq_file*, %struct.file*)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i32 (%struct.file*, i64, i64, i32)* }
%struct.dir_context = type { i32 (%struct.dir_context*, i8*, i32, i64, i64, i32)*, i64 }
%struct.poll_table_struct = type opaque
%struct.file_lock = type { %struct.file_lock*, %struct.list_head, %struct.hlist_node, %struct.list_head, %struct.list_head, i8*, i32, i8, i32, i32, %struct.wait_queue_head, %struct.file*, i64, i64, %struct.fasync_struct*, i64, i64, %struct.file_lock_operations*, %struct.lock_manager_operations*, %union.anon.79 }
%struct.file_lock_operations = type { void (%struct.file_lock*, %struct.file_lock*)*, void (%struct.file_lock*)* }
%struct.lock_manager_operations = type { i8* (i8*)*, void (i8*)*, void (%struct.file_lock*)*, i32 (%struct.file_lock*, i32)*, i1 (%struct.file_lock*)*, i32 (%struct.file_lock*, i32, %struct.list_head*)*, void (%struct.file_lock*, i8**)*, i1 (%struct.file_lock*)* }
%union.anon.79 = type { %struct.nfs_lock_info }
%struct.nfs_lock_info = type { i32, %struct.nlm_lockowner*, %struct.list_head }
%struct.nlm_lockowner = type opaque
%struct.atomic64_t = type { i64 }
%struct.mutex = type { %struct.atomic64_t, %struct.spinlock, %struct.list_head }
%struct.fown_struct = type { %struct.rwlock_t, %struct.pid*, i32, %struct.kuid_t, %struct.kuid_t, i32 }
%struct.cred = type { %struct.atomic_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, i32, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, i8, %struct.key*, %struct.key*, %struct.key*, %struct.key*, %struct.user_struct*, %struct.user_namespace*, %struct.group_info*, %union.anon.37 }
%struct.kernel_cap_struct = type { [2 x i32] }
%struct.group_info = type { %struct.atomic_t, i32, [0 x %struct.kgid_t] }
%union.anon.37 = type { %struct.callback_head }
%struct.file_ra_state = type { i64, i32, i32, i32, i32, i64 }
%struct.kernfs_node = type { %struct.atomic_t, %struct.atomic_t, %struct.kernfs_node*, i8*, %struct.rb_node, i8*, i32, %union.anon.86, i8*, i64, i16, i16, %struct.kernfs_iattrs* }
%union.anon.86 = type { %struct.kernfs_elem_attr }
%struct.kernfs_elem_attr = type { %struct.kernfs_ops*, %struct.kernfs_open_node*, i64, %struct.kernfs_node* }
%struct.kernfs_ops = type { i32 (%struct.kernfs_open_file*)*, void (%struct.kernfs_open_file*)*, i32 (%struct.seq_file*, i8*)*, i8* (%struct.seq_file*, i64*)*, i8* (%struct.seq_file*, i8*, i64*)*, void (%struct.seq_file*, i8*)*, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i64, i8, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i32 (%struct.kernfs_open_file*, %struct.poll_table_struct*)*, i32 (%struct.kernfs_open_file*, %struct.vm_area_struct*)* }
%struct.kernfs_open_file = type { %struct.kernfs_node*, %struct.file*, %struct.seq_file*, i8*, %struct.mutex, %struct.mutex, i32, %struct.list_head, i8*, i64, i8, %struct.vm_operations_struct* }
%struct.kernfs_open_node = type opaque
%struct.kernfs_iattrs = type opaque
%struct.kref = type { %struct.refcount_struct }
%struct.module = type opaque
%struct.module_param_attrs = type opaque
%struct.kernel_param_ops = type { i32, i32 (i8*, %struct.kernel_param*)*, i32 (i8*, %struct.kernel_param*)*, void (i8*)* }
%struct.kernel_param = type { i8*, %struct.module*, %struct.kernel_param_ops*, i16, i8, i8, %union.anon.128 }
%union.anon.128 = type { i8* }
%struct.kparam_array = type { i32, i32, i32*, %struct.kernel_param_ops*, i8* }
%struct.pci_driver = type { %struct.list_head, i8*, %struct.pci_device_id*, i32 (%struct.pci_dev*, %struct.pci_device_id*)*, void (%struct.pci_dev*)*, i32 (%struct.pci_dev*, i32)*, i32 (%struct.pci_dev*)*, void (%struct.pci_dev*)*, i32 (%struct.pci_dev*, i32)*, %struct.pci_error_handlers*, %struct.attribute_group**, %struct.device_driver, %struct.pci_dynids }
%struct.pci_device_id = type { i32, i32, i32, i32, i32, i32, i64 }
%struct.pci_dev = type <{ %struct.list_head, %struct.pci_bus*, %struct.pci_bus*, i8*, %struct.proc_dir_entry*, %struct.pci_slot*, i32, i16, i16, i16, i16, i32, i8, i8, i8, i8, i8, i8, i8, i8, i16, [6 x i8], i64*, %struct.pci_driver*, i64, %struct.device_dma_parameters, i32, i8, i8, i24, [2 x i8], i32, i32, [4 x i8], %struct.pcie_link_state*, i8, [3 x i8], i32, i8, [3 x i8], i32, %struct.device, i32, i32, [17 x %struct.resource], i8, [5 x i8], i16, %struct.atomic_t, [16 x i32], [4 x i8], %struct.hlist_head, %struct.bin_attribute*, i32, [4 x i8], [17 x %struct.bin_attribute*], [17 x %struct.bin_attribute*], %struct.attribute_group**, %struct.pci_vpd*, %union.anon.129, i16, i8, i8, i16, [2 x i8], i64, i64, i8*, i64 }>
%struct.pci_bus = type { %struct.list_head, %struct.pci_bus*, %struct.list_head, %struct.list_head, %struct.pci_dev*, %struct.list_head, [4 x %struct.resource*], %struct.list_head, %struct.resource, %struct.pci_ops*, %struct.msi_controller*, i8*, %struct.proc_dir_entry*, i8, i8, i8, i8, [48 x i8], i16, i16, %struct.device*, %struct.device, %struct.bin_attribute*, %struct.bin_attribute*, i8 }
%struct.resource = type { i64, i64, i8*, i64, i64, %struct.resource*, %struct.resource*, %struct.resource* }
%struct.pci_ops = type { i32 (%struct.pci_bus*)*, void (%struct.pci_bus*)*, i8* (%struct.pci_bus*, i32, i32)*, i32 (%struct.pci_bus*, i32, i32, i32, i32*)*, i32 (%struct.pci_bus*, i32, i32, i32, i32)* }
%struct.msi_controller = type opaque
%struct.pci_slot = type { %struct.pci_bus*, %struct.list_head, %struct.hotplug_slot*, i8, %struct.kobject }
%struct.hotplug_slot = type opaque
%struct.pcie_link_state = type opaque
%struct.pci_vpd = type opaque
%union.anon.129 = type { %struct.pci_sriov* }
%struct.pci_sriov = type opaque
%struct.pci_error_handlers = type { i32 (%struct.pci_dev*, i32)*, i32 (%struct.pci_dev*)*, i32 (%struct.pci_dev*)*, void (%struct.pci_dev*)*, void (%struct.pci_dev*)*, void (%struct.pci_dev*)* }
%struct.pci_dynids = type { %struct.spinlock, %struct.list_head }
%struct.quattro = type { [4 x %struct.net_device*], i8*, %struct.quattro*, i32 }
%struct.paravirt_patch_template = type { %struct.pv_init_ops, %struct.pv_time_ops, %struct.pv_cpu_ops, %struct.pv_irq_ops, %struct.pv_mmu_ops, %struct.pv_lock_ops }
%struct.pv_init_ops = type { i32 (i8, i8*, i64, i32)* }
%struct.pv_time_ops = type { i64 ()*, i64 (i32)* }
%struct.pv_cpu_ops = type { void ()*, i64 (i32)*, void (i32, i64)*, i64 ()*, void (i64)*, void (i64)*, void ()*, void (%struct.desc_ptr*)*, void (%struct.desc_ptr*)*, void (i8*, i32)*, i64 ()*, void (%struct.thread_struct*, i32)*, void (i32)*, void (%struct.desc_struct*, i32, i8*)*, void (%struct.desc_struct*, i32, i8*, i32)*, void (%struct.gate_struct*, i32, %struct.gate_struct*)*, void (%struct.desc_struct*, i32)*, void (%struct.desc_struct*, i32)*, void (i64)*, void ()*, void ()*, void ()*, void (i32*, i32*, i32*, i32*)*, i64 (i32)*, void (i32, i32, i32)*, i64 (i32, i32*)*, i32 (i32, i32, i32)*, i64 (i32)*, void ()*, void ()*, void ()*, void (%struct.task_struct*)*, void (%struct.task_struct*)* }
%struct.desc_ptr = type <{ i16, i64 }>
%struct.gate_struct = type { i16, i16, %struct.idt_bits, i16, i32, i32 }
%struct.idt_bits = type { i16 }
%struct.pv_irq_ops = type { %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void ()*, void ()* }
%struct.paravirt_callee_save = type { i8* }
%struct.pv_mmu_ops = type { void ()*, void ()*, void (i64)*, void (%struct.cpumask*, %struct.flush_tlb_info*)*, void (%struct.mmu_gather*, i8*)*, void (%struct.mm_struct*)*, %struct.paravirt_callee_save, void (i64)*, i64 ()*, void (i64)*, void (%struct.mm_struct*, %struct.mm_struct*)*, void (%struct.mm_struct*, %struct.mm_struct*)*, i32 (%struct.mm_struct*)*, void (%struct.mm_struct*, %struct.pgd_t*)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (i64)*, void (i64)*, void (i64)*, void (i64)*, void (%struct.pte_t*, i64)*, void (%struct.pmd_t*, i64)*, i64 (%struct.vm_area_struct*, i64, %struct.pte_t*)*, void (%struct.vm_area_struct*, i64, %struct.pte_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.pud_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.p4d_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.pgd_t*, i64)*, %struct.pv_lazy_ops, void (i32, i64, i64)* }
%struct.flush_tlb_info = type opaque
%struct.mmu_gather = type opaque
%struct.p4d_t = type { i64 }
%struct.pv_lazy_ops = type { void ()*, void ()*, void ()* }
%struct.pv_lock_ops = type { void (%struct.qspinlock*, i32)*, %struct.paravirt_callee_save, void (i8*, i8)*, void (i32)*, %struct.paravirt_callee_save }
%struct.qspinlock = type opaque
%struct.happy_meal = type { i8*, %struct.hmeal_init_block*, i8*, %struct.device*, %struct.spinlock, [32 x %struct.sk_buff*], [32 x %struct.sk_buff*], i32, i32, i32, i32, i8*, i8*, i8*, i8*, i64, i32, i32, i32, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i32, i32, i32, i32, i32, i32, i32, i32, %struct.timer_list, i32, i32, %struct.net_device*, %struct.quattro*, i32 }
%struct.hmeal_init_block = type { [256 x %struct.happy_meal_rxd], [256 x %struct.happy_meal_txd] }
%struct.happy_meal_rxd = type { i32, i32 }
%struct.happy_meal_txd = type { i32, i32 }
%struct.netdev_hw_addr = type { %struct.list_head, [32 x i8], i8, i8, i32, i32, i32, %struct.callback_head }
%struct.skb_shared_info = type { i8, i8, i8, i8, i16, i16, %struct.sk_buff*, %struct.skb_shared_hwtstamps, i32, i32, %struct.atomic_t, i8*, [17 x %struct.bio_vec] }
%struct.skb_shared_hwtstamps = type { i64 }
%struct.bio_vec = type { %struct.page*, i32, i32 }
%struct.anon.48 = type { i16, i16 }

@__UNIQUE_ID_version319 = internal constant [20 x i8] c"sunhme.version=3.10\00", section ".modinfo", align 1, !dbg !0
@___modver_attr = internal global %struct.module_version_attribute { %struct.module_attribute { %struct.attribute { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i16 292 }, i64 (%struct.module_attribute*, %struct.module_kobject*, i8*)* @__modver_version_show, i64 (%struct.module_attribute*, %struct.module_kobject*, i8*, i64)* null, void (%struct.module*, i8*)* null, i32 (%struct.module*)* null, void (%struct.module*)* null }, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i32 0, i32 0) }, align 8, !dbg !7795
@__modver_attr = internal constant %struct.module_version_attribute* @___modver_attr, section "__modver", align 8, !dbg !7669
@__UNIQUE_ID_author320 = internal constant [52 x i8] c"sunhme.author=David S. Miller (davem@davemloft.net)\00", section ".modinfo", align 1, !dbg !7714
@__UNIQUE_ID_description321 = internal constant [74 x i8] c"sunhme.description=Sun HappyMealEthernet(HME) 10/100baseT ethernet driver\00", section ".modinfo", align 1, !dbg !7717
@__UNIQUE_ID_file322 = internal constant [44 x i8] c"sunhme.file=drivers/net/ethernet/sun/sunhme\00", section ".modinfo", align 1, !dbg !7722
@__UNIQUE_ID_license323 = internal constant [19 x i8] c"sunhme.license=GPL\00", section ".modinfo", align 1, !dbg !7725
@__param_str_macaddr = internal constant [15 x i8] c"sunhme.macaddr\00", align 1, !dbg !7797
@param_array_ops = external dso_local constant %struct.kernel_param_ops, align 8
@__param_arr_macaddr = internal constant %struct.kparam_array { i32 6, i32 4, i32* null, %struct.kernel_param_ops* @param_ops_int, i8* bitcast ([6 x i32]* @macaddr to i8*) }, align 8, !dbg !7802
@__param_macaddr = internal constant { i8*, %struct.module*, %struct.kernel_param_ops*, i16, i8, i8, { %struct.kparam_array* } } { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__param_str_macaddr, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @param_array_ops, i16 0, i8 -1, i8 0, { %struct.kparam_array* } { %struct.kparam_array* @__param_arr_macaddr } }, section "__param", align 8, !dbg !7730
@__UNIQUE_ID_macaddrtype324 = internal constant [37 x i8] c"sunhme.parmtype=macaddr:array of int\00", section ".modinfo", align 1, !dbg !7780
@__UNIQUE_ID_macaddr325 = internal constant [50 x i8] c"sunhme.parm=macaddr:Happy Meal MAC address to set\00", section ".modinfo", align 1, !dbg !7783
@__UNIQUE_ID___addressable_happy_meal_probe333 = internal global i8* bitcast (i32 ()* @happy_meal_probe to i8*), section ".discard.addressable", align 8, !dbg !7788
@__exitcall_happy_meal_exit = internal global void ()* @happy_meal_exit, section ".exitcall.exit", align 8, !dbg !7790
@.str = private unnamed_addr constant [8 x i8] c"version\00", align 1
@.str.1 = private unnamed_addr constant [7 x i8] c"sunhme\00", align 1
@.str.2 = private unnamed_addr constant [5 x i8] c"3.10\00", align 1
@param_ops_int = external dso_local constant %struct.kernel_param_ops, align 8
@macaddr = internal global [6 x i32] zeroinitializer, align 16, !dbg !7804
@hme_pci_driver = internal global %struct.pci_driver { %struct.list_head zeroinitializer, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3, i32 0, i32 0), %struct.pci_device_id* getelementptr inbounds ([2 x %struct.pci_device_id], [2 x %struct.pci_device_id]* @happymeal_pci_ids, i32 0, i32 0), i32 (%struct.pci_dev*, %struct.pci_device_id*)* @happy_meal_pci_probe, void (%struct.pci_dev*)* @happy_meal_pci_remove, i32 (%struct.pci_dev*, i32)* null, i32 (%struct.pci_dev*)* null, void (%struct.pci_dev*)* null, i32 (%struct.pci_dev*, i32)* null, %struct.pci_error_handlers* null, %struct.attribute_group** null, %struct.device_driver zeroinitializer, %struct.pci_dynids zeroinitializer }, align 8, !dbg !7807
@qfe_pci_list = internal global %struct.quattro* null, align 8, !dbg !7829
@.str.3 = private unnamed_addr constant [4 x i8] c"hme\00", align 1
@happymeal_pci_ids = internal constant [2 x %struct.pci_device_id] [%struct.pci_device_id { i32 4238, i32 4097, i32 -1, i32 -1, i32 0, i32 0, i64 0 }, %struct.pci_device_id zeroinitializer], align 16, !dbg !7809
@.str.4 = private unnamed_addr constant [9 x i8] c"SUNW,qfe\00", align 1
@.str.5 = private unnamed_addr constant [9 x i8] c"SUNW,hme\00", align 1
@.str.6 = private unnamed_addr constant [4 x i8] c"qfe\00", align 1
@hme_version_printed = internal global i32 0, align 4, !dbg !7812
@.str.7 = private unnamed_addr constant [5 x i8] c"\016%s\00", align 1
@version = internal global [70 x i8] c"sunhme.c:v3.10 August 26, 2008 David S. Miller (davem@davemloft.net)\0A\00", align 16, !dbg !7814
@.str.8 = private unnamed_addr constant [63 x i8] c"\013happymeal(PCI): Cannot find proper PCI device base address.\0A\00", align 1
@.str.9 = private unnamed_addr constant [58 x i8] c"\013happymeal(PCI): Cannot obtain PCI resources, aborting.\0A\00", align 1
@.str.10 = private unnamed_addr constant [48 x i8] c"\013happymeal(PCI): Unable to remap card memory.\0A\00", align 1
@hme_netdev_ops = internal constant %struct.net_device_ops { i32 (%struct.net_device*)* null, void (%struct.net_device*)* null, i32 (%struct.net_device*)* @happy_meal_open, i32 (%struct.net_device*)* @happy_meal_close, i32 (%struct.sk_buff*, %struct.net_device*)* @happy_meal_start_xmit, i64 (%struct.sk_buff*, %struct.net_device*, i64)* null, i16 (%struct.net_device*, %struct.sk_buff*, %struct.net_device*)* null, void (%struct.net_device*, i32)* null, void (%struct.net_device*)* @happy_meal_set_multicast, i32 (%struct.net_device*, i8*)* @eth_mac_addr, i32 (%struct.net_device*)* @eth_validate_addr, i32 (%struct.net_device*, %struct.ifreq*, i32)* null, i32 (%struct.net_device*, %struct.ifmap*)* null, i32 (%struct.net_device*, i32)* null, i32 (%struct.net_device*, %struct.neigh_parms*)* null, void (%struct.net_device*, i32)* @happy_meal_tx_timeout, void (%struct.net_device*, %struct.rtnl_link_stats64*)* null, i1 (%struct.net_device*, i32)* null, i32 (i32, %struct.net_device*, i8*)* null, %struct.net_device_stats* (%struct.net_device*)* @happy_meal_get_stats, i32 (%struct.net_device*, i16, i16)* null, i32 (%struct.net_device*, i16, i16)* null, i32 (%struct.net_device*, i32, i8*)* null, i32 (%struct.net_device*, i32, i16, i8, i16)* null, i32 (%struct.net_device*, i32, i32, i32)* null, i32 (%struct.net_device*, i32, i1)* null, i32 (%struct.net_device*, i32, i1)* null, i32 (%struct.net_device*, i32, %struct.ifla_vf_info*)* null, i32 (%struct.net_device*, i32, i32)* null, i32 (%struct.net_device*, i32, %struct.ifla_vf_stats*)* null, i32 (%struct.net_device*, i32, %struct.nlattr**)* null, i32 (%struct.net_device*, i32, %struct.sk_buff*)* null, i32 (%struct.net_device*, i32, %struct.ifla_vf_guid*, %struct.ifla_vf_guid*)* null, i32 (%struct.net_device*, i32, i64, i32)* null, i32 (%struct.net_device*, i32, i1)* null, i32 (%struct.net_device*, i32, i8*)* null, i32 (%struct.net_device*, %struct.net_device*, %struct.netlink_ext_ack*)* null, i32 (%struct.net_device*, %struct.net_device*)* null, %struct.net_device* (%struct.net_device*, %struct.sk_buff*, i1)* null, i64 (%struct.net_device*, i64)* null, i32 (%struct.net_device*, i64)* null, i32 (%struct.net_device*, %struct.neighbour*)* null, void (%struct.net_device*, %struct.neighbour*)* null, i32 (%struct.ndmsg*, %struct.nlattr**, %struct.net_device*, i8*, i16, i16, %struct.netlink_ext_ack*)* null, i32 (%struct.ndmsg*, %struct.nlattr**, %struct.net_device*, i8*, i16)* null, i32 (%struct.sk_buff*, %struct.netlink_callback*, %struct.net_device*, %struct.net_device*, i32*)* null, i32 (%struct.sk_buff*, %struct.nlattr**, %struct.net_device*, i8*, i16, i32, i32, %struct.netlink_ext_ack*)* null, i32 (%struct.net_device*, %struct.nlmsghdr*, i16, %struct.netlink_ext_ack*)* null, i32 (%struct.sk_buff*, i32, i32, %struct.net_device*, i32, i32)* null, i32 (%struct.net_device*, %struct.nlmsghdr*, i16)* null, i32 (%struct.net_device*, i1)* null, i32 (%struct.net_device*, %struct.netdev_phys_item_id*)* null, i32 (%struct.net_device*, %struct.netdev_phys_item_id*)* null, i32 (%struct.net_device*, i8*, i64)* null, void (%struct.net_device*, %struct.udp_tunnel_info*)* null, void (%struct.net_device*, %struct.udp_tunnel_info*)* null, i8* (%struct.net_device*, %struct.net_device*)* null, void (%struct.net_device*, i8*)* null, i32 (%struct.net_device*, i32, i32)* null, i32 (%struct.net_device*)* null, i32 (%struct.net_device*, i1)* null, i32 (%struct.net_device*, %struct.sk_buff*)* null, void (%struct.net_device*, i32)* null, i32 (%struct.net_device*, %struct.netdev_bpf*)* null, i32 (%struct.net_device*, i32, %struct.xdp_frame**, i32)* null, i32 (%struct.net_device*, i32, i32)* null, %struct.devlink_port* (%struct.net_device*)* null, i32 (%struct.net_device*, %struct.ip_tunnel_parm*, i32)* null, %struct.net_device* (%struct.net_device*)* null }, align 8, !dbg !7825
@hme_ethtool_ops = internal constant %struct.ethtool_ops { i32 0, void (%struct.net_device*, %struct.ethtool_drvinfo*)* @hme_get_drvinfo, i32 (%struct.net_device*)* null, void (%struct.net_device*, %struct.ethtool_regs*, i8*)* null, void (%struct.net_device*, %struct.ethtool_wolinfo*)* null, i32 (%struct.net_device*, %struct.ethtool_wolinfo*)* null, i32 (%struct.net_device*)* null, void (%struct.net_device*, i32)* null, i32 (%struct.net_device*)* null, i32 (%struct.net_device*)* @hme_get_link, i32 (%struct.net_device*, %struct.ethtool_link_ext_state_info*)* null, i32 (%struct.net_device*)* null, i32 (%struct.net_device*, %struct.ethtool_eeprom*, i8*)* null, i32 (%struct.net_device*, %struct.ethtool_eeprom*, i8*)* null, i32 (%struct.net_device*, %struct.ethtool_coalesce*)* null, i32 (%struct.net_device*, %struct.ethtool_coalesce*)* null, void (%struct.net_device*, %struct.ethtool_ringparam*)* null, i32 (%struct.net_device*, %struct.ethtool_ringparam*)* null, void (%struct.net_device*, %struct.ethtool_pause_stats*)* null, void (%struct.net_device*, %struct.ethtool_pauseparam*)* null, i32 (%struct.net_device*, %struct.ethtool_pauseparam*)* null, void (%struct.net_device*, %struct.ethtool_test*, i64*)* null, void (%struct.net_device*, i32, i8*)* null, i32 (%struct.net_device*, i32)* null, void (%struct.net_device*, %struct.ethtool_stats*, i64*)* null, i32 (%struct.net_device*)* null, void (%struct.net_device*)* null, i32 (%struct.net_device*)* null, i32 (%struct.net_device*, i32)* null, i32 (%struct.net_device*, i32)* null, i32 (%struct.net_device*, %struct.ethtool_rxnfc*, i32*)* null, i32 (%struct.net_device*, %struct.ethtool_rxnfc*)* null, i32 (%struct.net_device*, %struct.ethtool_flash*)* null, i32 (%struct.net_device*, i32*)* null, i32 (%struct.net_device*)* null, i32 (%struct.net_device*)* null, i32 (%struct.net_device*, i32*, i8*, i8*)* null, i32 (%struct.net_device*, i32*, i8*, i8)* null, i32 (%struct.net_device*, i32*, i8*, i8*, i32)* null, i32 (%struct.net_device*, i32*, i8*, i8, i32*, i1)* null, void (%struct.net_device*, %struct.ethtool_channels*)* null, i32 (%struct.net_device*, %struct.ethtool_channels*)* null, i32 (%struct.net_device*, %struct.ethtool_dump*)* null, i32 (%struct.net_device*, %struct.ethtool_dump*, i8*)* null, i32 (%struct.net_device*, %struct.ethtool_dump*)* null, i32 (%struct.net_device*, %struct.ethtool_ts_info*)* null, i32 (%struct.net_device*, %struct.ethtool_modinfo*)* null, i32 (%struct.net_device*, %struct.ethtool_eeprom*, i8*)* null, i32 (%struct.net_device*, %struct.ethtool_eee*)* null, i32 (%struct.net_device*, %struct.ethtool_eee*)* null, i32 (%struct.net_device*, %struct.ethtool_tunable*, i8*)* null, i32 (%struct.net_device*, %struct.ethtool_tunable*, i8*)* null, i32 (%struct.net_device*, i32, %struct.ethtool_coalesce*)* null, i32 (%struct.net_device*, i32, %struct.ethtool_coalesce*)* null, i32 (%struct.net_device*, %struct.ethtool_link_ksettings*)* @hme_get_link_ksettings, i32 (%struct.net_device*, %struct.ethtool_link_ksettings*)* @hme_set_link_ksettings, i32 (%struct.net_device*, %struct.ethtool_fecparam*)* null, i32 (%struct.net_device*, %struct.ethtool_fecparam*)* null, void (%struct.net_device*, %struct.ethtool_stats*, i64*)* null, i32 (%struct.net_device*, %struct.ethtool_tunable*, i8*)* null, i32 (%struct.net_device*, %struct.ethtool_tunable*, i8*)* null }, align 8, !dbg !7827
@.str.11 = private unnamed_addr constant [57 x i8] c"\013happymeal(PCI): Cannot register net device, aborting.\0A\00", align 1
@.str.12 = private unnamed_addr constant [4 x i8] c"eth\00", align 1
@.str.13 = private unnamed_addr constant [4 x i8] c"-%d\00", align 1
@.str.14 = private unnamed_addr constant [56 x i8] c"\016%s%s: Quattro HME (PCI/CheerIO) 10/100baseT Ethernet \00", align 1
@.str.15 = private unnamed_addr constant [22 x i8] c"DEC 21153 PCI Bridge\0A\00", align 1
@.str.16 = private unnamed_addr constant [26 x i8] c"unknown bridge %04x.%04x\0A\00", align 1
@.str.17 = private unnamed_addr constant [62 x i8] c"\016%s: Quattro HME slot %d (PCI/CheerIO) 10/100baseT Ethernet \00", align 1
@.str.18 = private unnamed_addr constant [53 x i8] c"\016%s: HAPPY MEAL (PCI/CheerIO) 10/100BaseT Ethernet \00", align 1
@.str.19 = private unnamed_addr constant [5 x i8] c"%pM\0A\00", align 1
@kmalloc_caches = external dso_local global [3 x [14 x %struct.kmem_cache*]], align 16
@.str.20 = private unnamed_addr constant [21 x i8] c"include/linux/slab.h\00", align 1
@.str.21 = private unnamed_addr constant [61 x i8] c"\015%s: Auto-Negotiation unsuccessful, trying force link mode\0A\00", align 1
@.str.22 = private unnamed_addr constant [66 x i8] c"\015%s: Auto negotiation successful, link still not completely up.\0A\00", align 1
@.str.23 = private unnamed_addr constant [33 x i8] c"\015%s: Link down, cable problem?\0A\00", align 1
@.str.24 = private unnamed_addr constant [45 x i8] c"\013%s: Error, cannot re-init the Happy Meal.\0A\00", align 1
@.str.25 = private unnamed_addr constant [59 x i8] c"\013%s: Aieee, link timer is asleep but we got one anyways!\0A\00", align 1
@jiffies = external dso_local global i64, align 8
@.str.26 = private unnamed_addr constant [51 x i8] c"\013happy meal: Aieee, transceiver MIF read bolixed\0A\00", align 1
@.str.27 = private unnamed_addr constant [52 x i8] c"\013happy meal: Aieee, transceiver MIF write bolixed\0A\00", align 1
@.str.28 = private unnamed_addr constant [24 x i8] c"\016%s: Link is up using \00", align 1
@.str.29 = private unnamed_addr constant [10 x i8] c"external \00", align 1
@.str.30 = private unnamed_addr constant [10 x i8] c"internal \00", align 1
@.str.31 = private unnamed_addr constant [16 x i8] c"transceiver at \00", align 1
@.str.32 = private unnamed_addr constant [23 x i8] c"100Mb/s, Full Duplex.\0A\00", align 1
@.str.33 = private unnamed_addr constant [23 x i8] c"100Mb/s, Half Duplex.\0A\00", align 1
@.str.34 = private unnamed_addr constant [22 x i8] c"10Mb/s, Full Duplex.\0A\00", align 1
@.str.35 = private unnamed_addr constant [22 x i8] c"10Mb/s, Half Duplex.\0A\00", align 1
@.str.36 = private unnamed_addr constant [37 x i8] c"\016%s: Link has been forced up using \00", align 1
@.str.37 = private unnamed_addr constant [10 x i8] c"100Mb/s, \00", align 1
@.str.38 = private unnamed_addr constant [9 x i8] c"10Mb/s, \00", align 1
@.str.39 = private unnamed_addr constant [14 x i8] c"Full Duplex.\0A\00", align 1
@.str.40 = private unnamed_addr constant [14 x i8] c"Half Duplex.\0A\00", align 1
@.str.41 = private unnamed_addr constant [60 x i8] c"\013happy meal: Eieee, rx config register gets greasy fries.\0A\00", align 1
@.str.42 = private unnamed_addr constant [53 x i8] c"\013happy meal: Trying to set %08x, reread gives %08x\0A\00", align 1
@.str.43 = private unnamed_addr constant [24 x i8] c"\013happy meal: Fry guys.\00", align 1
@dma_map_single_attrs.__warned = internal global i8 0, section ".data.once", align 1, !dbg !7819
@.str.44 = private unnamed_addr constant [44 x i8] c"%s %s: rejecting DMA map of vmalloc memory\0A\00", align 1
@.str.45 = private unnamed_addr constant [28 x i8] c"include/linux/dma-mapping.h\00", align 1
@vmemmap_base = external dso_local global i64, align 8
@phys_base = external dso_local global i64, align 8
@page_offset_base = external dso_local global i64, align 8
@.str.46 = private unnamed_addr constant [45 x i8] c"\013happy meal: Transceiver and a coke please.\00", align 1
@.str.47 = private unnamed_addr constant [41 x i8] c"\013happy meal: Transceiver BigMac ATTACK!\00", align 1
@.str.48 = private unnamed_addr constant [38 x i8] c"\013happy meal: Receiver BigMac ATTACK!\00", align 1
@.str.49 = private unnamed_addr constant [63 x i8] c"\013%s: Happy Meal would not start auto negotiation BMCR=0x%04x\0A\00", align 1
@.str.50 = private unnamed_addr constant [40 x i8] c"\015%s: Performing force link detection.\0A\00", align 1
@.str.51 = private unnamed_addr constant [47 x i8] c"\013happy_meal(SBUS): Can't order irq %d to go.\0A\00", align 1
@.str.52 = private unnamed_addr constant [53 x i8] c"\013%s: Error interrupt for happy meal, status = %08x\0A\00", align 1
@.str.53 = private unnamed_addr constant [41 x i8] c"\017%s: Happy Meal receive FIFO overflow.\0A\00", align 1
@.str.54 = private unnamed_addr constant [42 x i8] c"\013%s: Happy Meal BigMAC SQE test failed.\0A\00", align 1
@.str.55 = private unnamed_addr constant [56 x i8] c"\013%s: Happy Meal transmitter FIFO underrun, DMA error.\0A\00", align 1
@.str.56 = private unnamed_addr constant [41 x i8] c"\013%s: Happy Meal MAX Packet size error.\0A\00", align 1
@.str.57 = private unnamed_addr constant [62 x i8] c"\016%s: Happy Meal out of receive descriptors, packet dropped.\0A\00", align 1
@.str.58 = private unnamed_addr constant [34 x i8] c"\013%s: Happy Meal rx DMA errors [ \00", align 1
@.str.59 = private unnamed_addr constant [14 x i8] c"GenericError \00", align 1
@.str.60 = private unnamed_addr constant [13 x i8] c"ParityError \00", align 1
@.str.61 = private unnamed_addr constant [12 x i8] c"RxTagBotch \00", align 1
@.str.62 = private unnamed_addr constant [3 x i8] c"]\0A\00", align 1
@.str.63 = private unnamed_addr constant [54 x i8] c"\013%s: EOP not set in happy meal transmit descriptor!\0A\00", align 1
@.str.64 = private unnamed_addr constant [33 x i8] c"\013%s: Happy Meal MIF interrupt.\0A\00", align 1
@.str.65 = private unnamed_addr constant [34 x i8] c"\013%s: Happy Meal tx DMA errors [ \00", align 1
@.str.66 = private unnamed_addr constant [11 x i8] c"LateError \00", align 1
@.str.67 = private unnamed_addr constant [10 x i8] c"TagBotch \00", align 1
@.str.68 = private unnamed_addr constant [57 x i8] c"\013%s: Happy Meal register access SBUS slave (%s) error.\0A\00", align 1
@.str.69 = private unnamed_addr constant [7 x i8] c"parity\00", align 1
@.str.70 = private unnamed_addr constant [8 x i8] c"generic\00", align 1
@.str.71 = private unnamed_addr constant [20 x i8] c"\015%s: Resetting...\0A\00", align 1
@.str.72 = private unnamed_addr constant [27 x i8] c"\016%s: Link status change.\0A\00", align 1
@.str.73 = private unnamed_addr constant [43 x i8] c"\016%s: Switching to 100Mbps at full duplex.\00", align 1
@.str.74 = private unnamed_addr constant [43 x i8] c"\016%s: Switching to 100MBps at half duplex.\00", align 1
@.str.75 = private unnamed_addr constant [42 x i8] c"\016%s: Switching to 10MBps at full duplex.\00", align 1
@.str.76 = private unnamed_addr constant [35 x i8] c"\016%s: Using 10Mbps at half duplex.\00", align 1
@.str.77 = private unnamed_addr constant [41 x i8] c"\016%s: Memory squeeze, deferring packet.\0A\00", align 1
@.str.78 = private unnamed_addr constant [43 x i8] c"\013%s: BUG! Tx Ring full when queue awake!\0A\00", align 1
@.str.79 = private unnamed_addr constant [37 x i8] c"\013%s: transmit timed out, resetting\0A\00", align 1
@.str.80 = private unnamed_addr constant [39 x i8] c"\013%s: Happy Status %08x TX[%08x:%08x]\0A\00", align 1
@.str.81 = private unnamed_addr constant [5 x i8] c"2.02\00", align 1
@pv_ops = external dso_local global %struct.paravirt_patch_template, align 8
@llvm.used = appending global [12 x i8*] [i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__UNIQUE_ID_version319, i32 0, i32 0), i8* bitcast (%struct.module_version_attribute** @__modver_attr to i8*), i8* getelementptr inbounds ([52 x i8], [52 x i8]* @__UNIQUE_ID_author320, i32 0, i32 0), i8* getelementptr inbounds ([74 x i8], [74 x i8]* @__UNIQUE_ID_description321, i32 0, i32 0), i8* getelementptr inbounds ([44 x i8], [44 x i8]* @__UNIQUE_ID_file322, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__UNIQUE_ID_license323, i32 0, i32 0), i8* bitcast ({ i8*, %struct.module*, %struct.kernel_param_ops*, i16, i8, i8, { %struct.kparam_array* } }* @__param_macaddr to i8*), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @__UNIQUE_ID_macaddrtype324, i32 0, i32 0), i8* getelementptr inbounds ([50 x i8], [50 x i8]* @__UNIQUE_ID_macaddr325, i32 0, i32 0), i8* bitcast (void ()* @happy_meal_exit to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_happy_meal_probe333 to i8*), i8* bitcast (void ()** @__exitcall_happy_meal_exit to i8*)], section "llvm.metadata"

; Function Attrs: cold noinline noredzone nounwind optnone sspstrong
define internal void @happy_meal_exit() #0 section ".exit.text" !dbg !7838 {
entry:
  call void @happy_meal_pci_exit() #12, !dbg !7839
  ret void, !dbg !7840
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @happy_meal_pci_exit() #1 !dbg !7841 {
entry:
  %qfe = alloca %struct.quattro*, align 8
  %next = alloca %struct.quattro*, align 8
  call void @pci_unregister_driver(%struct.pci_driver* @hme_pci_driver) #12, !dbg !7842
  br label %while.cond, !dbg !7843

while.cond:                                       ; preds = %while.body, %entry
  %0 = load %struct.quattro*, %struct.quattro** @qfe_pci_list, align 8, !dbg !7844
  %tobool = icmp ne %struct.quattro* %0, null, !dbg !7843
  br i1 %tobool, label %while.body, label %while.end, !dbg !7843

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata %struct.quattro** %qfe, metadata !7845, metadata !DIExpression()), !dbg !7847
  %1 = load %struct.quattro*, %struct.quattro** @qfe_pci_list, align 8, !dbg !7848
  store %struct.quattro* %1, %struct.quattro** %qfe, align 8, !dbg !7847
  call void @llvm.dbg.declare(metadata %struct.quattro** %next, metadata !7849, metadata !DIExpression()), !dbg !7850
  %2 = load %struct.quattro*, %struct.quattro** %qfe, align 8, !dbg !7851
  %next1 = getelementptr inbounds %struct.quattro, %struct.quattro* %2, i32 0, i32 2, !dbg !7852
  %3 = load %struct.quattro*, %struct.quattro** %next1, align 8, !dbg !7852
  store %struct.quattro* %3, %struct.quattro** %next, align 8, !dbg !7850
  %4 = load %struct.quattro*, %struct.quattro** %qfe, align 8, !dbg !7853
  %5 = bitcast %struct.quattro* %4 to i8*, !dbg !7853
  call void @kfree(i8* %5) #12, !dbg !7854
  %6 = load %struct.quattro*, %struct.quattro** %next, align 8, !dbg !7855
  store %struct.quattro* %6, %struct.quattro** @qfe_pci_list, align 8, !dbg !7856
  br label %while.cond, !dbg !7843, !llvm.loop !7857

while.end:                                        ; preds = %while.cond
  ret void, !dbg !7859
}

; Function Attrs: cold noinline noredzone nounwind optnone sspstrong
define internal i32 @happy_meal_probe() #0 section ".init.text" !dbg !7860 {
entry:
  %err = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %err, metadata !7863, metadata !DIExpression()), !dbg !7864
  store i32 0, i32* %err, align 4, !dbg !7864
  %0 = load i32, i32* %err, align 4, !dbg !7865
  %tobool = icmp ne i32 %0, 0, !dbg !7865
  br i1 %tobool, label %if.end, label %if.then, !dbg !7867

if.then:                                          ; preds = %entry
  %call = call i32 @happy_meal_pci_init() #13, !dbg !7868
  store i32 %call, i32* %err, align 4, !dbg !7870
  br label %if.end, !dbg !7871

if.end:                                           ; preds = %if.then, %entry
  %1 = load i32, i32* %err, align 4, !dbg !7872
  ret i32 %1, !dbg !7873
}

; Function Attrs: noredzone
declare dso_local i64 @__modver_version_show(%struct.module_attribute*, %struct.module_kobject*, i8*) #2

; Function Attrs: noredzone
declare dso_local void @pci_unregister_driver(%struct.pci_driver*) #2

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #3

; Function Attrs: noredzone
declare dso_local void @kfree(i8*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @happy_meal_pci_probe(%struct.pci_dev* %pdev, %struct.pci_device_id* %ent) #1 !dbg !7874 {
entry:
  %lock.addr.i205 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i205, metadata !7875, metadata !DIExpression()), !dbg !7880
  %lock.addr.i203 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i203, metadata !7882, metadata !DIExpression()), !dbg !7884
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !7886, metadata !DIExpression()), !dbg !7891
  %retval = alloca i32, align 4
  %pdev.addr = alloca %struct.pci_dev*, align 8
  %ent.addr = alloca %struct.pci_device_id*, align 8
  %qp = alloca %struct.quattro*, align 8
  %hp = alloca %struct.happy_meal*, align 8
  %dev = alloca %struct.net_device*, align 8
  %hpreg_base = alloca i8*, align 8
  %hpreg_res = alloca i64, align 8
  %i = alloca i32, align 4
  %qfe_slot = alloca i32, align 4
  %prom_name = alloca [64 x i8], align 16
  %err = alloca i32, align 4
  %.compoundliteral = alloca %struct.spinlock, align 1
  %qpdev = alloca %struct.pci_dev*, align 8
  %i152 = alloca i32, align 4
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !7894, metadata !DIExpression()), !dbg !7895
  store %struct.pci_device_id* %ent, %struct.pci_device_id** %ent.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_device_id** %ent.addr, metadata !7896, metadata !DIExpression()), !dbg !7897
  call void @llvm.dbg.declare(metadata %struct.quattro** %qp, metadata !7898, metadata !DIExpression()), !dbg !7899
  store %struct.quattro* null, %struct.quattro** %qp, align 8, !dbg !7899
  call void @llvm.dbg.declare(metadata %struct.happy_meal** %hp, metadata !7900, metadata !DIExpression()), !dbg !7901
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev, metadata !7902, metadata !DIExpression()), !dbg !7903
  call void @llvm.dbg.declare(metadata i8** %hpreg_base, metadata !7904, metadata !DIExpression()), !dbg !7905
  call void @llvm.dbg.declare(metadata i64* %hpreg_res, metadata !7906, metadata !DIExpression()), !dbg !7907
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7908, metadata !DIExpression()), !dbg !7909
  call void @llvm.dbg.declare(metadata i32* %qfe_slot, metadata !7910, metadata !DIExpression()), !dbg !7911
  store i32 -1, i32* %qfe_slot, align 4, !dbg !7911
  call void @llvm.dbg.declare(metadata [64 x i8]* %prom_name, metadata !7912, metadata !DIExpression()), !dbg !7914
  call void @llvm.dbg.declare(metadata i32* %err, metadata !7915, metadata !DIExpression()), !dbg !7916
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !7917
  %call = call i32 @is_quattro_p(%struct.pci_dev* %0) #12, !dbg !7919
  %tobool = icmp ne i32 %call, 0, !dbg !7919
  br i1 %tobool, label %if.then, label %if.else, !dbg !7920

if.then:                                          ; preds = %entry
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %prom_name, i64 0, i64 0, !dbg !7921
  %call1 = call i8* @strcpy(i8* %arraydecay, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.4, i64 0, i64 0)) #12, !dbg !7922
  br label %if.end, !dbg !7922

if.else:                                          ; preds = %entry
  %arraydecay2 = getelementptr inbounds [64 x i8], [64 x i8]* %prom_name, i64 0, i64 0, !dbg !7923
  %call3 = call i8* @strcpy(i8* %arraydecay2, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5, i64 0, i64 0)) #12, !dbg !7924
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  store i32 -19, i32* %err, align 4, !dbg !7925
  %1 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !7926
  %call4 = call i32 @pci_enable_device(%struct.pci_dev* %1) #12, !dbg !7928
  %tobool5 = icmp ne i32 %call4, 0, !dbg !7928
  br i1 %tobool5, label %if.then6, label %if.end7, !dbg !7929

if.then6:                                         ; preds = %if.end
  br label %err_out, !dbg !7930

if.end7:                                          ; preds = %if.end
  %2 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !7931
  call void @pci_set_master(%struct.pci_dev* %2) #12, !dbg !7932
  %arraydecay8 = getelementptr inbounds [64 x i8], [64 x i8]* %prom_name, i64 0, i64 0, !dbg !7933
  %call9 = call i32 @strcmp(i8* %arraydecay8, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.4, i64 0, i64 0)) #12, !dbg !7935
  %tobool10 = icmp ne i32 %call9, 0, !dbg !7935
  br i1 %tobool10, label %lor.lhs.false, label %if.then14, !dbg !7936

lor.lhs.false:                                    ; preds = %if.end7
  %arraydecay11 = getelementptr inbounds [64 x i8], [64 x i8]* %prom_name, i64 0, i64 0, !dbg !7937
  %call12 = call i32 @strcmp(i8* %arraydecay11, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.6, i64 0, i64 0)) #12, !dbg !7938
  %tobool13 = icmp ne i32 %call12, 0, !dbg !7938
  br i1 %tobool13, label %if.end25, label %if.then14, !dbg !7939

if.then14:                                        ; preds = %lor.lhs.false, %if.end7
  %3 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !7940
  %call15 = call %struct.quattro* @quattro_pci_find(%struct.pci_dev* %3) #12, !dbg !7942
  store %struct.quattro* %call15, %struct.quattro** %qp, align 8, !dbg !7943
  %4 = load %struct.quattro*, %struct.quattro** %qp, align 8, !dbg !7944
  %cmp = icmp eq %struct.quattro* %4, null, !dbg !7946
  br i1 %cmp, label %if.then16, label %if.end17, !dbg !7947

if.then16:                                        ; preds = %if.then14
  br label %err_out, !dbg !7948

if.end17:                                         ; preds = %if.then14
  store i32 0, i32* %qfe_slot, align 4, !dbg !7949
  br label %for.cond, !dbg !7951

for.cond:                                         ; preds = %for.inc, %if.end17
  %5 = load i32, i32* %qfe_slot, align 4, !dbg !7952
  %cmp18 = icmp slt i32 %5, 4, !dbg !7954
  br i1 %cmp18, label %for.body, label %for.end, !dbg !7955

for.body:                                         ; preds = %for.cond
  %6 = load %struct.quattro*, %struct.quattro** %qp, align 8, !dbg !7956
  %happy_meals = getelementptr inbounds %struct.quattro, %struct.quattro* %6, i32 0, i32 0, !dbg !7958
  %7 = load i32, i32* %qfe_slot, align 4, !dbg !7959
  %idxprom = sext i32 %7 to i64, !dbg !7956
  %arrayidx = getelementptr [4 x %struct.net_device*], [4 x %struct.net_device*]* %happy_meals, i64 0, i64 %idxprom, !dbg !7956
  %8 = load %struct.net_device*, %struct.net_device** %arrayidx, align 8, !dbg !7956
  %cmp19 = icmp eq %struct.net_device* %8, null, !dbg !7960
  br i1 %cmp19, label %if.then20, label %if.end21, !dbg !7961

if.then20:                                        ; preds = %for.body
  br label %for.end, !dbg !7962

if.end21:                                         ; preds = %for.body
  br label %for.inc, !dbg !7963

for.inc:                                          ; preds = %if.end21
  %9 = load i32, i32* %qfe_slot, align 4, !dbg !7964
  %inc = add i32 %9, 1, !dbg !7964
  store i32 %inc, i32* %qfe_slot, align 4, !dbg !7964
  br label %for.cond, !dbg !7965, !llvm.loop !7966

for.end:                                          ; preds = %if.then20, %for.cond
  %10 = load i32, i32* %qfe_slot, align 4, !dbg !7968
  %cmp22 = icmp eq i32 %10, 4, !dbg !7970
  br i1 %cmp22, label %if.then23, label %if.end24, !dbg !7971

if.then23:                                        ; preds = %for.end
  br label %err_out, !dbg !7972

if.end24:                                         ; preds = %for.end
  br label %if.end25, !dbg !7973

if.end25:                                         ; preds = %if.end24, %lor.lhs.false
  %call26 = call %struct.net_device* @alloc_etherdev_mqs(i32 744, i32 1, i32 1) #12, !dbg !7974
  store %struct.net_device* %call26, %struct.net_device** %dev, align 8, !dbg !7975
  store i32 -12, i32* %err, align 4, !dbg !7976
  %11 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !7977
  %tobool27 = icmp ne %struct.net_device* %11, null, !dbg !7977
  br i1 %tobool27, label %if.end29, label %if.then28, !dbg !7979

if.then28:                                        ; preds = %if.end25
  br label %err_out, !dbg !7980

if.end29:                                         ; preds = %if.end25
  %12 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !7981
  %dev30 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %12, i32 0, i32 41, !dbg !7981
  %13 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !7981
  %dev31 = getelementptr inbounds %struct.net_device, %struct.net_device* %13, i32 0, i32 106, !dbg !7981
  %parent = getelementptr inbounds %struct.device, %struct.device* %dev31, i32 0, i32 1, !dbg !7981
  store %struct.device* %dev30, %struct.device** %parent, align 8, !dbg !7981
  %14 = load i32, i32* @hme_version_printed, align 4, !dbg !7982
  %inc32 = add i32 %14, 1, !dbg !7982
  store i32 %inc32, i32* @hme_version_printed, align 4, !dbg !7982
  %cmp33 = icmp eq i32 %14, 0, !dbg !7984
  br i1 %cmp33, label %if.then34, label %if.end36, !dbg !7985

if.then34:                                        ; preds = %if.end29
  %call35 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([70 x i8], [70 x i8]* @version, i64 0, i64 0)) #13, !dbg !7986
  br label %if.end36, !dbg !7986

if.end36:                                         ; preds = %if.then34, %if.end29
  %15 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !7987
  %call37 = call i8* @netdev_priv(%struct.net_device* %15) #12, !dbg !7988
  %16 = bitcast i8* %call37 to %struct.happy_meal*, !dbg !7988
  store %struct.happy_meal* %16, %struct.happy_meal** %hp, align 8, !dbg !7989
  %17 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !7990
  %18 = bitcast %struct.pci_dev* %17 to i8*, !dbg !7990
  %19 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !7991
  %happy_dev = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %19, i32 0, i32 2, !dbg !7992
  store i8* %18, i8** %happy_dev, align 8, !dbg !7993
  %20 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !7994
  %dev38 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %20, i32 0, i32 41, !dbg !7995
  %21 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !7996
  %dma_dev = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %21, i32 0, i32 3, !dbg !7997
  store %struct.device* %dev38, %struct.device** %dma_dev, align 8, !dbg !7998
  br label %do.body, !dbg !7999

do.body:                                          ; preds = %if.end36
  %22 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !8000
  %happy_lock = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %22, i32 0, i32 4, !dbg !8000
  store %struct.spinlock* %happy_lock, %struct.spinlock** %lock.addr.i, align 8
  %23 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !8001
  %24 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %23, i32 0, i32 0, !dbg !8002
  %rlock.i = bitcast %union.anon.1* %24 to %struct.raw_spinlock*, !dbg !8002
  %25 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !8000
  %happy_lock40 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %25, i32 0, i32 4, !dbg !8000
  %26 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %.compoundliteral, i32 0, i32 0, !dbg !8000
  %rlock = bitcast %union.anon.1* %26 to %struct.raw_spinlock*, !dbg !8000
  %27 = bitcast %struct.spinlock* %happy_lock40 to i8*, !dbg !8000
  %28 = bitcast %struct.spinlock* %.compoundliteral to i8*, !dbg !8000
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %27, i8* align 1 %28, i64 0, i1 false), !dbg !8000
  br label %do.end, !dbg !8000

do.end:                                           ; preds = %do.body
  %29 = load %struct.quattro*, %struct.quattro** %qp, align 8, !dbg !8003
  %cmp41 = icmp ne %struct.quattro* %29, null, !dbg !8005
  br i1 %cmp41, label %if.then42, label %if.end46, !dbg !8006

if.then42:                                        ; preds = %do.end
  %30 = load %struct.quattro*, %struct.quattro** %qp, align 8, !dbg !8007
  %31 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !8009
  %qfe_parent = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %31, i32 0, i32 42, !dbg !8010
  store %struct.quattro* %30, %struct.quattro** %qfe_parent, align 8, !dbg !8011
  %32 = load i32, i32* %qfe_slot, align 4, !dbg !8012
  %33 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !8013
  %qfe_ent = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %33, i32 0, i32 43, !dbg !8014
  store i32 %32, i32* %qfe_ent, align 8, !dbg !8015
  %34 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !8016
  %35 = load %struct.quattro*, %struct.quattro** %qp, align 8, !dbg !8017
  %happy_meals43 = getelementptr inbounds %struct.quattro, %struct.quattro* %35, i32 0, i32 0, !dbg !8018
  %36 = load i32, i32* %qfe_slot, align 4, !dbg !8019
  %idxprom44 = sext i32 %36 to i64, !dbg !8017
  %arrayidx45 = getelementptr [4 x %struct.net_device*], [4 x %struct.net_device*]* %happy_meals43, i64 0, i64 %idxprom44, !dbg !8017
  store %struct.net_device* %34, %struct.net_device** %arrayidx45, align 8, !dbg !8020
  br label %if.end46, !dbg !8021

if.end46:                                         ; preds = %if.then42, %do.end
  %37 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !8022
  %resource = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %37, i32 0, i32 44, !dbg !8022
  %arrayidx47 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource, i64 0, i64 0, !dbg !8022
  %start = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx47, i32 0, i32 0, !dbg !8022
  %38 = load i64, i64* %start, align 8, !dbg !8022
  store i64 %38, i64* %hpreg_res, align 8, !dbg !8023
  store i32 -19, i32* %err, align 4, !dbg !8024
  %39 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !8025
  %resource48 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %39, i32 0, i32 44, !dbg !8025
  %arrayidx49 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource48, i64 0, i64 0, !dbg !8025
  %flags = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx49, i32 0, i32 3, !dbg !8025
  %40 = load i64, i64* %flags, align 8, !dbg !8025
  %and = and i64 %40, 256, !dbg !8027
  %cmp50 = icmp ne i64 %and, 0, !dbg !8028
  br i1 %cmp50, label %if.then51, label %if.end53, !dbg !8029

if.then51:                                        ; preds = %if.end46
  %call52 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.8, i64 0, i64 0)) #13, !dbg !8030
  br label %err_out_clear_quattro, !dbg !8032

if.end53:                                         ; preds = %if.end46
  %41 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !8033
  %call54 = call i32 @pci_request_regions(%struct.pci_dev* %41, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0)) #12, !dbg !8035
  %tobool55 = icmp ne i32 %call54, 0, !dbg !8035
  br i1 %tobool55, label %if.then56, label %if.end58, !dbg !8036

if.then56:                                        ; preds = %if.end53
  %call57 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.9, i64 0, i64 0)) #13, !dbg !8037
  br label %err_out_clear_quattro, !dbg !8039

if.end58:                                         ; preds = %if.end53
  %42 = load i64, i64* %hpreg_res, align 8, !dbg !8040
  %call59 = call i8* @ioremap(i64 %42, i64 32768) #12, !dbg !8042
  store i8* %call59, i8** %hpreg_base, align 8, !dbg !8043
  %cmp60 = icmp eq i8* %call59, null, !dbg !8044
  br i1 %cmp60, label %if.then61, label %if.end63, !dbg !8045

if.then61:                                        ; preds = %if.end58
  %call62 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.10, i64 0, i64 0)) #13, !dbg !8046
  br label %err_out_free_res, !dbg !8048

if.end63:                                         ; preds = %if.end58
  store i32 0, i32* %i, align 4, !dbg !8049
  br label %for.cond64, !dbg !8051

for.cond64:                                       ; preds = %for.inc72, %if.end63
  %43 = load i32, i32* %i, align 4, !dbg !8052
  %cmp65 = icmp slt i32 %43, 6, !dbg !8054
  br i1 %cmp65, label %for.body66, label %for.end74, !dbg !8055

for.body66:                                       ; preds = %for.cond64
  %44 = load i32, i32* %i, align 4, !dbg !8056
  %idxprom67 = sext i32 %44 to i64, !dbg !8059
  %arrayidx68 = getelementptr [6 x i32], [6 x i32]* @macaddr, i64 0, i64 %idxprom67, !dbg !8059
  %45 = load i32, i32* %arrayidx68, align 4, !dbg !8059
  %cmp69 = icmp ne i32 %45, 0, !dbg !8060
  br i1 %cmp69, label %if.then70, label %if.end71, !dbg !8061

if.then70:                                        ; preds = %for.body66
  br label %for.end74, !dbg !8062

if.end71:                                         ; preds = %for.body66
  br label %for.inc72, !dbg !8063

for.inc72:                                        ; preds = %if.end71
  %46 = load i32, i32* %i, align 4, !dbg !8064
  %inc73 = add i32 %46, 1, !dbg !8064
  store i32 %inc73, i32* %i, align 4, !dbg !8064
  br label %for.cond64, !dbg !8065, !llvm.loop !8066

for.end74:                                        ; preds = %if.then70, %for.cond64
  %47 = load i32, i32* %i, align 4, !dbg !8068
  %cmp75 = icmp slt i32 %47, 6, !dbg !8070
  br i1 %cmp75, label %if.then76, label %if.else88, !dbg !8071

if.then76:                                        ; preds = %for.end74
  store i32 0, i32* %i, align 4, !dbg !8072
  br label %for.cond77, !dbg !8075

for.cond77:                                       ; preds = %for.inc84, %if.then76
  %48 = load i32, i32* %i, align 4, !dbg !8076
  %cmp78 = icmp slt i32 %48, 6, !dbg !8078
  br i1 %cmp78, label %for.body79, label %for.end86, !dbg !8079

for.body79:                                       ; preds = %for.cond77
  %49 = load i32, i32* %i, align 4, !dbg !8080
  %idxprom80 = sext i32 %49 to i64, !dbg !8081
  %arrayidx81 = getelementptr [6 x i32], [6 x i32]* @macaddr, i64 0, i64 %idxprom80, !dbg !8081
  %50 = load i32, i32* %arrayidx81, align 4, !dbg !8081
  %conv = trunc i32 %50 to i8, !dbg !8081
  %51 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !8082
  %dev_addr = getelementptr inbounds %struct.net_device, %struct.net_device* %51, i32 0, i32 74, !dbg !8083
  %52 = load i8*, i8** %dev_addr, align 8, !dbg !8083
  %53 = load i32, i32* %i, align 4, !dbg !8084
  %idxprom82 = sext i32 %53 to i64, !dbg !8082
  %arrayidx83 = getelementptr i8, i8* %52, i64 %idxprom82, !dbg !8082
  store i8 %conv, i8* %arrayidx83, align 1, !dbg !8085
  br label %for.inc84, !dbg !8082

for.inc84:                                        ; preds = %for.body79
  %54 = load i32, i32* %i, align 4, !dbg !8086
  %inc85 = add i32 %54, 1, !dbg !8086
  store i32 %inc85, i32* %i, align 4, !dbg !8086
  br label %for.cond77, !dbg !8087, !llvm.loop !8088

for.end86:                                        ; preds = %for.cond77
  %55 = load i32, i32* getelementptr inbounds ([6 x i32], [6 x i32]* @macaddr, i64 0, i64 5), align 4, !dbg !8090
  %inc87 = add i32 %55, 1, !dbg !8090
  store i32 %inc87, i32* getelementptr inbounds ([6 x i32], [6 x i32]* @macaddr, i64 0, i64 5), align 4, !dbg !8090
  br label %if.end91, !dbg !8091

if.else88:                                        ; preds = %for.end74
  %56 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !8092
  %57 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !8094
  %dev_addr89 = getelementptr inbounds %struct.net_device, %struct.net_device* %57, i32 0, i32 74, !dbg !8095
  %58 = load i8*, i8** %dev_addr89, align 8, !dbg !8095
  %arrayidx90 = getelementptr i8, i8* %58, i64 0, !dbg !8094
  call void @get_hme_mac_nonsparc(%struct.pci_dev* %56, i8* %arrayidx90) #12, !dbg !8096
  br label %if.end91

if.end91:                                         ; preds = %if.else88, %for.end86
  %59 = load i8*, i8** %hpreg_base, align 8, !dbg !8097
  %add.ptr = getelementptr i8, i8* %59, i64 0, !dbg !8098
  %60 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !8099
  %gregs = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %60, i32 0, i32 0, !dbg !8100
  store i8* %add.ptr, i8** %gregs, align 8, !dbg !8101
  %61 = load i8*, i8** %hpreg_base, align 8, !dbg !8102
  %add.ptr92 = getelementptr i8, i8* %61, i64 8192, !dbg !8103
  %62 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !8104
  %etxregs = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %62, i32 0, i32 11, !dbg !8105
  store i8* %add.ptr92, i8** %etxregs, align 8, !dbg !8106
  %63 = load i8*, i8** %hpreg_base, align 8, !dbg !8107
  %add.ptr93 = getelementptr i8, i8* %63, i64 16384, !dbg !8108
  %64 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !8109
  %erxregs = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %64, i32 0, i32 12, !dbg !8110
  store i8* %add.ptr93, i8** %erxregs, align 8, !dbg !8111
  %65 = load i8*, i8** %hpreg_base, align 8, !dbg !8112
  %add.ptr94 = getelementptr i8, i8* %65, i64 24576, !dbg !8113
  %66 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !8114
  %bigmacregs = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %66, i32 0, i32 13, !dbg !8115
  store i8* %add.ptr94, i8** %bigmacregs, align 8, !dbg !8116
  %67 = load i8*, i8** %hpreg_base, align 8, !dbg !8117
  %add.ptr95 = getelementptr i8, i8* %67, i64 28672, !dbg !8118
  %68 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !8119
  %tcvregs = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %68, i32 0, i32 14, !dbg !8120
  store i8* %add.ptr95, i8** %tcvregs, align 8, !dbg !8121
  %69 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !8122
  %hm_revision = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %69, i32 0, i32 21, !dbg !8123
  store i16 32, i16* %hm_revision, align 4, !dbg !8124
  %70 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !8125
  %hm_revision96 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %70, i32 0, i32 21, !dbg !8127
  %71 = load i16, i16* %hm_revision96, align 4, !dbg !8127
  %conv97 = zext i16 %71 to i32, !dbg !8125
  %cmp98 = icmp eq i32 %conv97, 32, !dbg !8128
  br i1 %cmp98, label %if.then105, label %lor.lhs.false100, !dbg !8129

lor.lhs.false100:                                 ; preds = %if.end91
  %72 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !8130
  %hm_revision101 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %72, i32 0, i32 21, !dbg !8131
  %73 = load i16, i16* %hm_revision101, align 4, !dbg !8131
  %conv102 = zext i16 %73 to i32, !dbg !8130
  %cmp103 = icmp eq i32 %conv102, 33, !dbg !8132
  br i1 %cmp103, label %if.then105, label %if.else106, !dbg !8133

if.then105:                                       ; preds = %lor.lhs.false100, %if.end91
  %74 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !8134
  %happy_flags = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %74, i32 0, i32 16, !dbg !8135
  store i32 130, i32* %happy_flags, align 8, !dbg !8136
  br label %if.end118, !dbg !8134

if.else106:                                       ; preds = %lor.lhs.false100
  %75 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !8137
  %hm_revision107 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %75, i32 0, i32 21, !dbg !8139
  %76 = load i16, i16* %hm_revision107, align 4, !dbg !8139
  %conv108 = zext i16 %76 to i32, !dbg !8137
  %cmp109 = icmp ne i32 %conv108, 160, !dbg !8140
  br i1 %cmp109, label %land.lhs.true, label %if.end117, !dbg !8141

land.lhs.true:                                    ; preds = %if.else106
  %77 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !8142
  %hm_revision111 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %77, i32 0, i32 21, !dbg !8143
  %78 = load i16, i16* %hm_revision111, align 4, !dbg !8143
  %conv112 = zext i16 %78 to i32, !dbg !8142
  %cmp113 = icmp ne i32 %conv112, 192, !dbg !8144
  br i1 %cmp113, label %if.then115, label %if.end117, !dbg !8145

if.then115:                                       ; preds = %land.lhs.true
  %79 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !8146
  %happy_flags116 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %79, i32 0, i32 16, !dbg !8147
  store i32 390, i32* %happy_flags116, align 8, !dbg !8148
  br label %if.end117, !dbg !8146

if.end117:                                        ; preds = %if.then115, %land.lhs.true, %if.else106
  br label %if.end118

if.end118:                                        ; preds = %if.end117, %if.then105
  %80 = load %struct.quattro*, %struct.quattro** %qp, align 8, !dbg !8149
  %cmp119 = icmp ne %struct.quattro* %80, null, !dbg !8151
  br i1 %cmp119, label %if.then121, label %if.end123, !dbg !8152

if.then121:                                       ; preds = %if.end118
  %81 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !8153
  %happy_flags122 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %81, i32 0, i32 16, !dbg !8154
  %82 = load i32, i32* %happy_flags122, align 8, !dbg !8155
  %or = or i32 %82, 4096, !dbg !8155
  store i32 %or, i32* %happy_flags122, align 8, !dbg !8155
  br label %if.end123, !dbg !8153

if.end123:                                        ; preds = %if.then121, %if.end118
  %83 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !8156
  %happy_flags124 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %83, i32 0, i32 16, !dbg !8157
  %84 = load i32, i32* %happy_flags124, align 8, !dbg !8158
  %or125 = or i32 %84, 2048, !dbg !8158
  store i32 %or125, i32* %happy_flags124, align 8, !dbg !8158
  %85 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !8159
  %dev126 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %85, i32 0, i32 41, !dbg !8160
  %86 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !8161
  %hblock_dvma = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %86, i32 0, i32 15, !dbg !8162
  %call127 = call i8* @dma_alloc_coherent(%struct.device* %dev126, i64 4096, i64* %hblock_dvma, i32 3264) #12, !dbg !8163
  %87 = bitcast i8* %call127 to %struct.hmeal_init_block*, !dbg !8163
  %88 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !8164
  %happy_block = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %88, i32 0, i32 1, !dbg !8165
  store %struct.hmeal_init_block* %87, %struct.hmeal_init_block** %happy_block, align 8, !dbg !8166
  store i32 -19, i32* %err, align 4, !dbg !8167
  %89 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !8168
  %happy_block128 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %89, i32 0, i32 1, !dbg !8170
  %90 = load %struct.hmeal_init_block*, %struct.hmeal_init_block** %happy_block128, align 8, !dbg !8170
  %tobool129 = icmp ne %struct.hmeal_init_block* %90, null, !dbg !8168
  br i1 %tobool129, label %if.end131, label %if.then130, !dbg !8171

if.then130:                                       ; preds = %if.end123
  br label %err_out_iounmap, !dbg !8172

if.end131:                                        ; preds = %if.end123
  %91 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !8173
  %linkcheck = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %91, i32 0, i32 34, !dbg !8174
  store i32 0, i32* %linkcheck, align 8, !dbg !8175
  %92 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !8176
  %timer_state = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %92, i32 0, i32 39, !dbg !8177
  store i32 3, i32* %timer_state, align 8, !dbg !8178
  %93 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !8179
  %timer_ticks = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %93, i32 0, i32 40, !dbg !8180
  store i32 0, i32* %timer_ticks, align 4, !dbg !8181
  %94 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !8182
  %happy_timer = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %94, i32 0, i32 38, !dbg !8182
  call void @init_timer_key(%struct.timer_list* %happy_timer, void (%struct.timer_list*)* @happy_meal_timer, i32 0, i8* null, %struct.lock_class_key* null) #12, !dbg !8182
  %95 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !8183
  %irq = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %95, i32 0, i32 43, !dbg !8184
  %96 = load i32, i32* %irq, align 4, !dbg !8184
  %97 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !8185
  %irq132 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %97, i32 0, i32 17, !dbg !8186
  store i32 %96, i32* %irq132, align 4, !dbg !8187
  %98 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !8188
  %99 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !8189
  %dev133 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %99, i32 0, i32 41, !dbg !8190
  store %struct.net_device* %98, %struct.net_device** %dev133, align 8, !dbg !8191
  %100 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !8192
  %netdev_ops = getelementptr inbounds %struct.net_device, %struct.net_device* %100, i32 0, i32 32, !dbg !8193
  store %struct.net_device_ops* @hme_netdev_ops, %struct.net_device_ops** %netdev_ops, align 8, !dbg !8194
  %101 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !8195
  %watchdog_timeo = getelementptr inbounds %struct.net_device, %struct.net_device* %101, i32 0, i32 94, !dbg !8196
  store i32 1250, i32* %watchdog_timeo, align 8, !dbg !8197
  %102 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !8198
  %ethtool_ops = getelementptr inbounds %struct.net_device, %struct.net_device* %102, i32 0, i32 33, !dbg !8199
  store %struct.ethtool_ops* @hme_ethtool_ops, %struct.ethtool_ops** %ethtool_ops, align 8, !dbg !8200
  %103 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !8201
  %hw_features = getelementptr inbounds %struct.net_device, %struct.net_device* %103, i32 0, i32 16, !dbg !8202
  store i64 9, i64* %hw_features, align 8, !dbg !8203
  %104 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !8204
  %hw_features134 = getelementptr inbounds %struct.net_device, %struct.net_device* %104, i32 0, i32 16, !dbg !8205
  %105 = load i64, i64* %hw_features134, align 8, !dbg !8205
  %or135 = or i64 %105, 1099511627776, !dbg !8206
  %106 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !8207
  %features = getelementptr inbounds %struct.net_device, %struct.net_device* %106, i32 0, i32 15, !dbg !8208
  %107 = load i64, i64* %features, align 8, !dbg !8209
  %or136 = or i64 %107, %or135, !dbg !8209
  store i64 %or136, i64* %features, align 8, !dbg !8209
  %108 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !8210
  %happy_lock137 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %108, i32 0, i32 4, !dbg !8211
  store %struct.spinlock* %happy_lock137, %struct.spinlock** %lock.addr.i203, align 8
  call void @arch_local_irq_disable() #14, !dbg !8212
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #11, !dbg !8215, !srcloc !8217
  %109 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i203, align 8, !dbg !8218
  %110 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %109, i32 0, i32 0, !dbg !8218
  %rlock.i204 = bitcast %union.anon.1* %110 to %struct.raw_spinlock*, !dbg !8218
  %111 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !8220
  call void @happy_meal_set_initial_advertisement(%struct.happy_meal* %111) #12, !dbg !8221
  %112 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !8222
  %happy_lock138 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %112, i32 0, i32 4, !dbg !8223
  store %struct.spinlock* %happy_lock138, %struct.spinlock** %lock.addr.i205, align 8
  call void @arch_local_irq_enable() #14, !dbg !8224
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #11, !dbg !8227, !srcloc !8229
  %113 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i205, align 8, !dbg !8230
  %114 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %113, i32 0, i32 0, !dbg !8230
  %rlock.i206 = bitcast %union.anon.1* %114 to %struct.raw_spinlock*, !dbg !8230
  %115 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !8232
  %dev139 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %115, i32 0, i32 41, !dbg !8233
  %116 = load %struct.net_device*, %struct.net_device** %dev139, align 8, !dbg !8233
  %call140 = call i32 @register_netdev(%struct.net_device* %116) #12, !dbg !8234
  store i32 %call140, i32* %err, align 4, !dbg !8235
  %117 = load i32, i32* %err, align 4, !dbg !8236
  %tobool141 = icmp ne i32 %117, 0, !dbg !8236
  br i1 %tobool141, label %if.then142, label %if.end144, !dbg !8238

if.then142:                                       ; preds = %if.end131
  %call143 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.11, i64 0, i64 0)) #13, !dbg !8239
  br label %err_out_iounmap, !dbg !8241

if.end144:                                        ; preds = %if.end131
  %118 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !8242
  %119 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !8243
  %120 = bitcast %struct.happy_meal* %119 to i8*, !dbg !8243
  call void @pci_set_drvdata(%struct.pci_dev* %118, i8* %120) #12, !dbg !8244
  %121 = load i32, i32* %qfe_slot, align 4, !dbg !8245
  %tobool145 = icmp ne i32 %121, 0, !dbg !8245
  br i1 %tobool145, label %if.end181, label %if.then146, !dbg !8247

if.then146:                                       ; preds = %if.end144
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %qpdev, metadata !8248, metadata !DIExpression()), !dbg !8250
  %122 = load %struct.quattro*, %struct.quattro** %qp, align 8, !dbg !8251
  %quattro_dev = getelementptr inbounds %struct.quattro, %struct.quattro* %122, i32 0, i32 1, !dbg !8252
  %123 = load i8*, i8** %quattro_dev, align 8, !dbg !8252
  %124 = bitcast i8* %123 to %struct.pci_dev*, !dbg !8251
  store %struct.pci_dev* %124, %struct.pci_dev** %qpdev, align 8, !dbg !8250
  %arrayidx147 = getelementptr [64 x i8], [64 x i8]* %prom_name, i64 0, i64 0, !dbg !8253
  store i8 0, i8* %arrayidx147, align 16, !dbg !8254
  %125 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !8255
  %name = getelementptr inbounds %struct.net_device, %struct.net_device* %125, i32 0, i32 0, !dbg !8257
  %arraydecay148 = getelementptr inbounds [16 x i8], [16 x i8]* %name, i64 0, i64 0, !dbg !8255
  %call149 = call i32 @strncmp(i8* %arraydecay148, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.12, i64 0, i64 0), i64 3) #12, !dbg !8258
  %tobool150 = icmp ne i32 %call149, 0, !dbg !8258
  br i1 %tobool150, label %if.end160, label %if.then151, !dbg !8259

if.then151:                                       ; preds = %if.then146
  call void @llvm.dbg.declare(metadata i32* %i152, metadata !8260, metadata !DIExpression()), !dbg !8262
  %126 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !8263
  %name153 = getelementptr inbounds %struct.net_device, %struct.net_device* %126, i32 0, i32 0, !dbg !8264
  %arraydecay154 = getelementptr inbounds [16 x i8], [16 x i8]* %name153, i64 0, i64 0, !dbg !8263
  %add.ptr155 = getelementptr i8, i8* %arraydecay154, i64 3, !dbg !8265
  %call156 = call i64 @simple_strtoul(i8* %add.ptr155, i8** null, i32 10) #12, !dbg !8266
  %conv157 = trunc i64 %call156 to i32, !dbg !8266
  store i32 %conv157, i32* %i152, align 4, !dbg !8262
  %arraydecay158 = getelementptr inbounds [64 x i8], [64 x i8]* %prom_name, i64 0, i64 0, !dbg !8267
  %127 = load i32, i32* %i152, align 4, !dbg !8268
  %add = add i32 %127, 3, !dbg !8269
  %call159 = call i32 (i8*, i8*, ...) @sprintf(i8* %arraydecay158, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.13, i64 0, i64 0), i32 %add) #12, !dbg !8270
  br label %if.end160, !dbg !8271

if.end160:                                        ; preds = %if.then151, %if.then146
  %128 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !8272
  %name161 = getelementptr inbounds %struct.net_device, %struct.net_device* %128, i32 0, i32 0, !dbg !8273
  %arraydecay162 = getelementptr inbounds [16 x i8], [16 x i8]* %name161, i64 0, i64 0, !dbg !8272
  %arraydecay163 = getelementptr inbounds [64 x i8], [64 x i8]* %prom_name, i64 0, i64 0, !dbg !8274
  %call164 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.14, i64 0, i64 0), i8* %arraydecay162, i8* %arraydecay163) #13, !dbg !8275
  %129 = load %struct.pci_dev*, %struct.pci_dev** %qpdev, align 8, !dbg !8276
  %vendor = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %129, i32 0, i32 7, !dbg !8278
  %130 = load i16, i16* %vendor, align 4, !dbg !8278
  %conv165 = zext i16 %130 to i32, !dbg !8276
  %cmp166 = icmp eq i32 %conv165, 4113, !dbg !8279
  br i1 %cmp166, label %land.lhs.true168, label %if.else174, !dbg !8280

land.lhs.true168:                                 ; preds = %if.end160
  %131 = load %struct.pci_dev*, %struct.pci_dev** %qpdev, align 8, !dbg !8281
  %device = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %131, i32 0, i32 8, !dbg !8282
  %132 = load i16, i16* %device, align 2, !dbg !8282
  %conv169 = zext i16 %132 to i32, !dbg !8281
  %cmp170 = icmp eq i32 %conv169, 37, !dbg !8283
  br i1 %cmp170, label %if.then172, label %if.else174, !dbg !8284

if.then172:                                       ; preds = %land.lhs.true168
  %call173 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.15, i64 0, i64 0)) #13, !dbg !8285
  br label %if.end180, !dbg !8285

if.else174:                                       ; preds = %land.lhs.true168, %if.end160
  %133 = load %struct.pci_dev*, %struct.pci_dev** %qpdev, align 8, !dbg !8286
  %vendor175 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %133, i32 0, i32 7, !dbg !8287
  %134 = load i16, i16* %vendor175, align 4, !dbg !8287
  %conv176 = zext i16 %134 to i32, !dbg !8286
  %135 = load %struct.pci_dev*, %struct.pci_dev** %qpdev, align 8, !dbg !8288
  %device177 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %135, i32 0, i32 8, !dbg !8289
  %136 = load i16, i16* %device177, align 2, !dbg !8289
  %conv178 = zext i16 %136 to i32, !dbg !8288
  %call179 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.16, i64 0, i64 0), i32 %conv176, i32 %conv178) #13, !dbg !8290
  br label %if.end180

if.end180:                                        ; preds = %if.else174, %if.then172
  br label %if.end181, !dbg !8291

if.end181:                                        ; preds = %if.end180, %if.end144
  %137 = load i32, i32* %qfe_slot, align 4, !dbg !8292
  %cmp182 = icmp ne i32 %137, -1, !dbg !8294
  br i1 %cmp182, label %if.then184, label %if.else188, !dbg !8295

if.then184:                                       ; preds = %if.end181
  %138 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !8296
  %name185 = getelementptr inbounds %struct.net_device, %struct.net_device* %138, i32 0, i32 0, !dbg !8297
  %arraydecay186 = getelementptr inbounds [16 x i8], [16 x i8]* %name185, i64 0, i64 0, !dbg !8296
  %139 = load i32, i32* %qfe_slot, align 4, !dbg !8298
  %call187 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.17, i64 0, i64 0), i8* %arraydecay186, i32 %139) #13, !dbg !8299
  br label %if.end192, !dbg !8299

if.else188:                                       ; preds = %if.end181
  %140 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !8300
  %name189 = getelementptr inbounds %struct.net_device, %struct.net_device* %140, i32 0, i32 0, !dbg !8301
  %arraydecay190 = getelementptr inbounds [16 x i8], [16 x i8]* %name189, i64 0, i64 0, !dbg !8300
  %call191 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.18, i64 0, i64 0), i8* %arraydecay190) #13, !dbg !8302
  br label %if.end192

if.end192:                                        ; preds = %if.else188, %if.then184
  %141 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !8303
  %dev_addr193 = getelementptr inbounds %struct.net_device, %struct.net_device* %141, i32 0, i32 74, !dbg !8304
  %142 = load i8*, i8** %dev_addr193, align 8, !dbg !8304
  %call194 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.19, i64 0, i64 0), i8* %142) #13, !dbg !8305
  store i32 0, i32* %retval, align 4, !dbg !8306
  br label %return, !dbg !8306

err_out_iounmap:                                  ; preds = %if.then142, %if.then130
  call void @llvm.dbg.label(metadata !8307), !dbg !8308
  %143 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !8309
  %gregs195 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %143, i32 0, i32 0, !dbg !8310
  %144 = load i8*, i8** %gregs195, align 8, !dbg !8310
  call void @iounmap(i8* %144) #12, !dbg !8311
  br label %err_out_free_res, !dbg !8311

err_out_free_res:                                 ; preds = %err_out_iounmap, %if.then61
  call void @llvm.dbg.label(metadata !8312), !dbg !8313
  %145 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !8314
  call void @pci_release_regions(%struct.pci_dev* %145) #12, !dbg !8315
  br label %err_out_clear_quattro, !dbg !8315

err_out_clear_quattro:                            ; preds = %err_out_free_res, %if.then56, %if.then51
  call void @llvm.dbg.label(metadata !8316), !dbg !8317
  %146 = load %struct.quattro*, %struct.quattro** %qp, align 8, !dbg !8318
  %cmp196 = icmp ne %struct.quattro* %146, null, !dbg !8320
  br i1 %cmp196, label %if.then198, label %if.end202, !dbg !8321

if.then198:                                       ; preds = %err_out_clear_quattro
  %147 = load %struct.quattro*, %struct.quattro** %qp, align 8, !dbg !8322
  %happy_meals199 = getelementptr inbounds %struct.quattro, %struct.quattro* %147, i32 0, i32 0, !dbg !8323
  %148 = load i32, i32* %qfe_slot, align 4, !dbg !8324
  %idxprom200 = sext i32 %148 to i64, !dbg !8322
  %arrayidx201 = getelementptr [4 x %struct.net_device*], [4 x %struct.net_device*]* %happy_meals199, i64 0, i64 %idxprom200, !dbg !8322
  store %struct.net_device* null, %struct.net_device** %arrayidx201, align 8, !dbg !8325
  br label %if.end202, !dbg !8322

if.end202:                                        ; preds = %if.then198, %err_out_clear_quattro
  %149 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !8326
  call void @free_netdev(%struct.net_device* %149) #12, !dbg !8327
  br label %err_out, !dbg !8327

err_out:                                          ; preds = %if.end202, %if.then28, %if.then23, %if.then16, %if.then6
  call void @llvm.dbg.label(metadata !8328), !dbg !8329
  %150 = load i32, i32* %err, align 4, !dbg !8330
  store i32 %150, i32* %retval, align 4, !dbg !8331
  br label %return, !dbg !8331

return:                                           ; preds = %err_out, %if.end192
  %151 = load i32, i32* %retval, align 4, !dbg !8332
  ret i32 %151, !dbg !8332
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @happy_meal_pci_remove(%struct.pci_dev* %pdev) #1 !dbg !8333 {
entry:
  %pdev.addr = alloca %struct.pci_dev*, align 8
  %hp = alloca %struct.happy_meal*, align 8
  %net_dev = alloca %struct.net_device*, align 8
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !8334, metadata !DIExpression()), !dbg !8335
  call void @llvm.dbg.declare(metadata %struct.happy_meal** %hp, metadata !8336, metadata !DIExpression()), !dbg !8337
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !8338
  %call = call i8* @pci_get_drvdata(%struct.pci_dev* %0) #12, !dbg !8339
  %1 = bitcast i8* %call to %struct.happy_meal*, !dbg !8339
  store %struct.happy_meal* %1, %struct.happy_meal** %hp, align 8, !dbg !8337
  call void @llvm.dbg.declare(metadata %struct.net_device** %net_dev, metadata !8340, metadata !DIExpression()), !dbg !8341
  %2 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !8342
  %dev = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %2, i32 0, i32 41, !dbg !8343
  %3 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !8343
  store %struct.net_device* %3, %struct.net_device** %net_dev, align 8, !dbg !8341
  %4 = load %struct.net_device*, %struct.net_device** %net_dev, align 8, !dbg !8344
  call void @unregister_netdev(%struct.net_device* %4) #12, !dbg !8345
  %5 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !8346
  %dma_dev = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %5, i32 0, i32 3, !dbg !8347
  %6 = load %struct.device*, %struct.device** %dma_dev, align 8, !dbg !8347
  %7 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !8348
  %happy_block = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %7, i32 0, i32 1, !dbg !8349
  %8 = load %struct.hmeal_init_block*, %struct.hmeal_init_block** %happy_block, align 8, !dbg !8349
  %9 = bitcast %struct.hmeal_init_block* %8 to i8*, !dbg !8348
  %10 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !8350
  %hblock_dvma = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %10, i32 0, i32 15, !dbg !8351
  %11 = load i64, i64* %hblock_dvma, align 8, !dbg !8351
  call void @dma_free_coherent(%struct.device* %6, i64 4096, i8* %9, i64 %11) #12, !dbg !8352
  %12 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !8353
  %gregs = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %12, i32 0, i32 0, !dbg !8354
  %13 = load i8*, i8** %gregs, align 8, !dbg !8354
  call void @iounmap(i8* %13) #12, !dbg !8355
  %14 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !8356
  %happy_dev = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %14, i32 0, i32 2, !dbg !8357
  %15 = load i8*, i8** %happy_dev, align 8, !dbg !8357
  %16 = bitcast i8* %15 to %struct.pci_dev*, !dbg !8356
  call void @pci_release_regions(%struct.pci_dev* %16) #12, !dbg !8358
  %17 = load %struct.net_device*, %struct.net_device** %net_dev, align 8, !dbg !8359
  call void @free_netdev(%struct.net_device* %17) #12, !dbg !8360
  ret void, !dbg !8361
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @is_quattro_p(%struct.pci_dev* %pdev) #1 !dbg !8362 {
entry:
  %retval = alloca i32, align 4
  %pdev.addr = alloca %struct.pci_dev*, align 8
  %busdev = alloca %struct.pci_dev*, align 8
  %this_pdev = alloca %struct.pci_dev*, align 8
  %n_hmes = alloca i32, align 4
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.pci_dev*, align 8
  %__mptr22 = alloca i8*, align 8
  %tmp27 = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !8363, metadata !DIExpression()), !dbg !8364
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %busdev, metadata !8365, metadata !DIExpression()), !dbg !8366
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !8367
  %bus = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 1, !dbg !8368
  %1 = load %struct.pci_bus*, %struct.pci_bus** %bus, align 8, !dbg !8368
  %self = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %1, i32 0, i32 4, !dbg !8369
  %2 = load %struct.pci_dev*, %struct.pci_dev** %self, align 8, !dbg !8369
  store %struct.pci_dev* %2, %struct.pci_dev** %busdev, align 8, !dbg !8366
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %this_pdev, metadata !8370, metadata !DIExpression()), !dbg !8371
  call void @llvm.dbg.declare(metadata i32* %n_hmes, metadata !8372, metadata !DIExpression()), !dbg !8373
  %3 = load %struct.pci_dev*, %struct.pci_dev** %busdev, align 8, !dbg !8374
  %cmp = icmp eq %struct.pci_dev* %3, null, !dbg !8376
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !8377

lor.lhs.false:                                    ; preds = %entry
  %4 = load %struct.pci_dev*, %struct.pci_dev** %busdev, align 8, !dbg !8378
  %vendor = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %4, i32 0, i32 7, !dbg !8379
  %5 = load i16, i16* %vendor, align 4, !dbg !8379
  %conv = zext i16 %5 to i32, !dbg !8378
  %cmp1 = icmp ne i32 %conv, 4113, !dbg !8380
  br i1 %cmp1, label %if.then, label %lor.lhs.false3, !dbg !8381

lor.lhs.false3:                                   ; preds = %lor.lhs.false
  %6 = load %struct.pci_dev*, %struct.pci_dev** %busdev, align 8, !dbg !8382
  %device = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %6, i32 0, i32 8, !dbg !8383
  %7 = load i16, i16* %device, align 2, !dbg !8383
  %conv4 = zext i16 %7 to i32, !dbg !8382
  %cmp5 = icmp ne i32 %conv4, 37, !dbg !8384
  br i1 %cmp5, label %if.then, label %if.end, !dbg !8385

if.then:                                          ; preds = %lor.lhs.false3, %lor.lhs.false, %entry
  store i32 0, i32* %retval, align 4, !dbg !8386
  br label %return, !dbg !8386

if.end:                                           ; preds = %lor.lhs.false3
  store i32 0, i32* %n_hmes, align 4, !dbg !8387
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !8388, metadata !DIExpression()), !dbg !8391
  %8 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !8391
  %bus7 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %8, i32 0, i32 1, !dbg !8391
  %9 = load %struct.pci_bus*, %struct.pci_bus** %bus7, align 8, !dbg !8391
  %devices = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %9, i32 0, i32 3, !dbg !8391
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %devices, i32 0, i32 0, !dbg !8391
  %10 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !8391
  %11 = bitcast %struct.list_head* %10 to i8*, !dbg !8391
  store i8* %11, i8** %__mptr, align 8, !dbg !8391
  br label %do.body, !dbg !8391

do.body:                                          ; preds = %if.end
  br label %do.end, !dbg !8392

do.end:                                           ; preds = %do.body
  %12 = load i8*, i8** %__mptr, align 8, !dbg !8391
  %add.ptr = getelementptr i8, i8* %12, i64 0, !dbg !8391
  %13 = bitcast i8* %add.ptr to %struct.pci_dev*, !dbg !8391
  store %struct.pci_dev* %13, %struct.pci_dev** %tmp, align 8, !dbg !8392
  %14 = load %struct.pci_dev*, %struct.pci_dev** %tmp, align 8, !dbg !8391
  store %struct.pci_dev* %14, %struct.pci_dev** %this_pdev, align 8, !dbg !8394
  br label %for.cond, !dbg !8394

for.cond:                                         ; preds = %do.end26, %do.end
  %15 = load %struct.pci_dev*, %struct.pci_dev** %this_pdev, align 8, !dbg !8395
  %bus_list = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %15, i32 0, i32 0, !dbg !8395
  %16 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !8395
  %bus8 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %16, i32 0, i32 1, !dbg !8395
  %17 = load %struct.pci_bus*, %struct.pci_bus** %bus8, align 8, !dbg !8395
  %devices9 = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %17, i32 0, i32 3, !dbg !8395
  %cmp10 = icmp eq %struct.list_head* %bus_list, %devices9, !dbg !8395
  %lnot = xor i1 %cmp10, true, !dbg !8395
  br i1 %lnot, label %for.body, label %for.end, !dbg !8394

for.body:                                         ; preds = %for.cond
  %18 = load %struct.pci_dev*, %struct.pci_dev** %this_pdev, align 8, !dbg !8397
  %vendor12 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %18, i32 0, i32 7, !dbg !8400
  %19 = load i16, i16* %vendor12, align 4, !dbg !8400
  %conv13 = zext i16 %19 to i32, !dbg !8397
  %cmp14 = icmp eq i32 %conv13, 4238, !dbg !8401
  br i1 %cmp14, label %land.lhs.true, label %if.end21, !dbg !8402

land.lhs.true:                                    ; preds = %for.body
  %20 = load %struct.pci_dev*, %struct.pci_dev** %this_pdev, align 8, !dbg !8403
  %device16 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %20, i32 0, i32 8, !dbg !8404
  %21 = load i16, i16* %device16, align 2, !dbg !8404
  %conv17 = zext i16 %21 to i32, !dbg !8403
  %cmp18 = icmp eq i32 %conv17, 4097, !dbg !8405
  br i1 %cmp18, label %if.then20, label %if.end21, !dbg !8406

if.then20:                                        ; preds = %land.lhs.true
  %22 = load i32, i32* %n_hmes, align 4, !dbg !8407
  %inc = add i32 %22, 1, !dbg !8407
  store i32 %inc, i32* %n_hmes, align 4, !dbg !8407
  br label %if.end21, !dbg !8408

if.end21:                                         ; preds = %if.then20, %land.lhs.true, %for.body
  br label %for.inc, !dbg !8409

for.inc:                                          ; preds = %if.end21
  call void @llvm.dbg.declare(metadata i8** %__mptr22, metadata !8410, metadata !DIExpression()), !dbg !8412
  %23 = load %struct.pci_dev*, %struct.pci_dev** %this_pdev, align 8, !dbg !8412
  %bus_list23 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %23, i32 0, i32 0, !dbg !8412
  %next24 = getelementptr inbounds %struct.list_head, %struct.list_head* %bus_list23, i32 0, i32 0, !dbg !8412
  %24 = load %struct.list_head*, %struct.list_head** %next24, align 8, !dbg !8412
  %25 = bitcast %struct.list_head* %24 to i8*, !dbg !8412
  store i8* %25, i8** %__mptr22, align 8, !dbg !8412
  br label %do.body25, !dbg !8412

do.body25:                                        ; preds = %for.inc
  br label %do.end26, !dbg !8413

do.end26:                                         ; preds = %do.body25
  %26 = load i8*, i8** %__mptr22, align 8, !dbg !8412
  %add.ptr28 = getelementptr i8, i8* %26, i64 0, !dbg !8412
  %27 = bitcast i8* %add.ptr28 to %struct.pci_dev*, !dbg !8412
  store %struct.pci_dev* %27, %struct.pci_dev** %tmp27, align 8, !dbg !8413
  %28 = load %struct.pci_dev*, %struct.pci_dev** %tmp27, align 8, !dbg !8412
  store %struct.pci_dev* %28, %struct.pci_dev** %this_pdev, align 8, !dbg !8395
  br label %for.cond, !dbg !8395, !llvm.loop !8415

for.end:                                          ; preds = %for.cond
  %29 = load i32, i32* %n_hmes, align 4, !dbg !8417
  %cmp29 = icmp ne i32 %29, 4, !dbg !8419
  br i1 %cmp29, label %if.then31, label %if.end32, !dbg !8420

if.then31:                                        ; preds = %for.end
  store i32 0, i32* %retval, align 4, !dbg !8421
  br label %return, !dbg !8421

if.end32:                                         ; preds = %for.end
  store i32 1, i32* %retval, align 4, !dbg !8422
  br label %return, !dbg !8422

return:                                           ; preds = %if.end32, %if.then31, %if.then
  %30 = load i32, i32* %retval, align 4, !dbg !8423
  ret i32 %30, !dbg !8423
}

; Function Attrs: noredzone
declare dso_local i8* @strcpy(i8*, i8*) #2

; Function Attrs: noredzone
declare dso_local i32 @pci_enable_device(%struct.pci_dev*) #2

; Function Attrs: noredzone
declare dso_local void @pci_set_master(%struct.pci_dev*) #2

; Function Attrs: noredzone
declare dso_local i32 @strcmp(i8*, i8*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.quattro* @quattro_pci_find(%struct.pci_dev* %pdev) #1 !dbg !8424 {
entry:
  %s.addr.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i, metadata !8427, metadata !DIExpression()), !dbg !8431
  %flags.addr.i17.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i17.i, metadata !8439, metadata !DIExpression()), !dbg !8440
  %size.addr.i18.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i18.i, metadata !8441, metadata !DIExpression()), !dbg !8442
  %ret.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i, metadata !8443, metadata !DIExpression()), !dbg !8444
  %retval.i12.i = alloca i32, align 4
  %flags.addr.i13.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i13.i, metadata !8445, metadata !DIExpression()), !dbg !8449
  %retval.i.i = alloca i32, align 4
  %size.addr.i11.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i11.i, metadata !8451, metadata !DIExpression()), !dbg !8455
  %size.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i, metadata !8457, metadata !DIExpression()), !dbg !8461
  %flags.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i, metadata !8466, metadata !DIExpression()), !dbg !8467
  %order.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr.i.i.i, metadata !8468, metadata !DIExpression()), !dbg !8469
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !8470, metadata !DIExpression()), !dbg !8471
  %flags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i, metadata !8472, metadata !DIExpression()), !dbg !8473
  %order.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.i.i, metadata !8474, metadata !DIExpression()), !dbg !8475
  %retval.i = alloca i8*, align 8
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !8476, metadata !DIExpression()), !dbg !8477
  %flags.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i, metadata !8478, metadata !DIExpression()), !dbg !8479
  %index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.i, metadata !8480, metadata !DIExpression()), !dbg !8481
  %retval = alloca %struct.quattro*, align 8
  %pdev.addr = alloca %struct.pci_dev*, align 8
  %bdev = alloca %struct.pci_dev*, align 8
  %qp = alloca %struct.quattro*, align 8
  %qpdev = alloca %struct.pci_dev*, align 8
  %i = alloca i32, align 4
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !8482, metadata !DIExpression()), !dbg !8483
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %bdev, metadata !8484, metadata !DIExpression()), !dbg !8485
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !8486
  %bus = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 1, !dbg !8487
  %1 = load %struct.pci_bus*, %struct.pci_bus** %bus, align 8, !dbg !8487
  %self = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %1, i32 0, i32 4, !dbg !8488
  %2 = load %struct.pci_dev*, %struct.pci_dev** %self, align 8, !dbg !8488
  store %struct.pci_dev* %2, %struct.pci_dev** %bdev, align 8, !dbg !8485
  call void @llvm.dbg.declare(metadata %struct.quattro** %qp, metadata !8489, metadata !DIExpression()), !dbg !8490
  %3 = load %struct.pci_dev*, %struct.pci_dev** %bdev, align 8, !dbg !8491
  %tobool = icmp ne %struct.pci_dev* %3, null, !dbg !8491
  br i1 %tobool, label %if.end, label %if.then, !dbg !8493

if.then:                                          ; preds = %entry
  store %struct.quattro* null, %struct.quattro** %retval, align 8, !dbg !8494
  br label %return, !dbg !8494

if.end:                                           ; preds = %entry
  %4 = load %struct.quattro*, %struct.quattro** @qfe_pci_list, align 8, !dbg !8495
  store %struct.quattro* %4, %struct.quattro** %qp, align 8, !dbg !8497
  br label %for.cond, !dbg !8498

for.cond:                                         ; preds = %for.inc, %if.end
  %5 = load %struct.quattro*, %struct.quattro** %qp, align 8, !dbg !8499
  %cmp = icmp ne %struct.quattro* %5, null, !dbg !8501
  br i1 %cmp, label %for.body, label %for.end, !dbg !8502

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %qpdev, metadata !8503, metadata !DIExpression()), !dbg !8505
  %6 = load %struct.quattro*, %struct.quattro** %qp, align 8, !dbg !8506
  %quattro_dev = getelementptr inbounds %struct.quattro, %struct.quattro* %6, i32 0, i32 1, !dbg !8507
  %7 = load i8*, i8** %quattro_dev, align 8, !dbg !8507
  %8 = bitcast i8* %7 to %struct.pci_dev*, !dbg !8506
  store %struct.pci_dev* %8, %struct.pci_dev** %qpdev, align 8, !dbg !8505
  %9 = load %struct.pci_dev*, %struct.pci_dev** %qpdev, align 8, !dbg !8508
  %10 = load %struct.pci_dev*, %struct.pci_dev** %bdev, align 8, !dbg !8510
  %cmp1 = icmp eq %struct.pci_dev* %9, %10, !dbg !8511
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !8512

if.then2:                                         ; preds = %for.body
  %11 = load %struct.quattro*, %struct.quattro** %qp, align 8, !dbg !8513
  store %struct.quattro* %11, %struct.quattro** %retval, align 8, !dbg !8514
  br label %return, !dbg !8514

if.end3:                                          ; preds = %for.body
  br label %for.inc, !dbg !8515

for.inc:                                          ; preds = %if.end3
  %12 = load %struct.quattro*, %struct.quattro** %qp, align 8, !dbg !8516
  %next = getelementptr inbounds %struct.quattro, %struct.quattro* %12, i32 0, i32 2, !dbg !8517
  %13 = load %struct.quattro*, %struct.quattro** %next, align 8, !dbg !8517
  store %struct.quattro* %13, %struct.quattro** %qp, align 8, !dbg !8518
  br label %for.cond, !dbg !8519, !llvm.loop !8520

for.end:                                          ; preds = %for.cond
  store i64 56, i64* %size.addr.i, align 8
  store i32 3264, i32* %flags.addr.i, align 4
  %14 = load i64, i64* %size.addr.i, align 8, !dbg !8522
  %15 = call i1 @llvm.is.constant.i64(i64 %14) #11, !dbg !8523
  br i1 %15, label %if.then.i, label %if.end9.i, !dbg !8524

if.then.i:                                        ; preds = %for.end
  %16 = load i64, i64* %size.addr.i, align 8, !dbg !8525
  %cmp.i = icmp ugt i64 %16, 8192, !dbg !8526
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !8527

if.then1.i:                                       ; preds = %if.then.i
  %17 = load i64, i64* %size.addr.i, align 8, !dbg !8528
  %18 = load i32, i32* %flags.addr.i, align 4, !dbg !8529
  store i64 %17, i64* %size.addr.i.i, align 8
  store i32 %18, i32* %flags.addr.i.i, align 4
  %19 = load i64, i64* %size.addr.i.i, align 8, !dbg !8530
  %call.i.i = call i32 @get_order(i64 %19) #15, !dbg !8531
  store i32 %call.i.i, i32* %order.i.i, align 4, !dbg !8475
  %20 = load i64, i64* %size.addr.i.i, align 8, !dbg !8532
  %21 = load i32, i32* %flags.addr.i.i, align 4, !dbg !8533
  %22 = load i32, i32* %order.i.i, align 4, !dbg !8534
  store i64 %20, i64* %size.addr.i.i.i, align 8
  store i32 %21, i32* %flags.addr.i.i.i, align 4
  store i32 %22, i32* %order.addr.i.i.i, align 4
  %23 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !8535
  %24 = load i32, i32* %flags.addr.i.i.i, align 4, !dbg !8536
  %25 = load i32, i32* %order.addr.i.i.i, align 4, !dbg !8537
  %call.i.i.i = call noalias i8* @kmalloc_order(i64 %23, i32 %24, i32 %25) #14, !dbg !8538
  %ptrint.i.i.i = ptrtoint i8* %call.i.i.i to i64, !dbg !8538
  %maskedptr.i.i.i = and i64 %ptrint.i.i.i, 4095, !dbg !8538
  %maskcond.i.i.i = icmp eq i64 %maskedptr.i.i.i, 0, !dbg !8538
  call void @llvm.assume(i1 %maskcond.i.i.i) #11, !dbg !8538
  store i8* %call.i.i.i, i8** %retval.i, align 8, !dbg !8539
  br label %kmalloc.exit, !dbg !8539

if.end.i:                                         ; preds = %if.then.i
  %26 = load i64, i64* %size.addr.i, align 8, !dbg !8540
  store i64 %26, i64* %size.addr.i11.i, align 8
  %27 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8541
  %tobool.i.i = icmp ne i64 %27, 0, !dbg !8541
  br i1 %tobool.i.i, label %if.end.i.i, label %if.then.i.i, !dbg !8543

if.then.i.i:                                      ; preds = %if.end.i
  store i32 0, i32* %retval.i.i, align 4, !dbg !8544
  br label %kmalloc_index.exit.i, !dbg !8544

if.end.i.i:                                       ; preds = %if.end.i
  %28 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8545
  %cmp.i.i = icmp ule i64 %28, 8, !dbg !8547
  br i1 %cmp.i.i, label %if.then1.i.i, label %if.end2.i.i, !dbg !8548

if.then1.i.i:                                     ; preds = %if.end.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !8549
  br label %kmalloc_index.exit.i, !dbg !8549

if.end2.i.i:                                      ; preds = %if.end.i.i
  %29 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8550
  %cmp3.i.i = icmp ugt i64 %29, 64, !dbg !8552
  br i1 %cmp3.i.i, label %land.lhs.true.i.i, label %if.end6.i.i, !dbg !8553

land.lhs.true.i.i:                                ; preds = %if.end2.i.i
  %30 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8554
  %cmp4.i.i = icmp ule i64 %30, 96, !dbg !8555
  br i1 %cmp4.i.i, label %if.then5.i.i, label %if.end6.i.i, !dbg !8556

if.then5.i.i:                                     ; preds = %land.lhs.true.i.i
  store i32 1, i32* %retval.i.i, align 4, !dbg !8557
  br label %kmalloc_index.exit.i, !dbg !8557

if.end6.i.i:                                      ; preds = %land.lhs.true.i.i, %if.end2.i.i
  %31 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8558
  %cmp7.i.i = icmp ugt i64 %31, 128, !dbg !8560
  br i1 %cmp7.i.i, label %land.lhs.true8.i.i, label %if.end11.i.i, !dbg !8561

land.lhs.true8.i.i:                               ; preds = %if.end6.i.i
  %32 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8562
  %cmp9.i.i = icmp ule i64 %32, 192, !dbg !8563
  br i1 %cmp9.i.i, label %if.then10.i.i, label %if.end11.i.i, !dbg !8564

if.then10.i.i:                                    ; preds = %land.lhs.true8.i.i
  store i32 2, i32* %retval.i.i, align 4, !dbg !8565
  br label %kmalloc_index.exit.i, !dbg !8565

if.end11.i.i:                                     ; preds = %land.lhs.true8.i.i, %if.end6.i.i
  %33 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8566
  %cmp12.i.i = icmp ule i64 %33, 8, !dbg !8568
  br i1 %cmp12.i.i, label %if.then13.i.i, label %if.end14.i.i, !dbg !8569

if.then13.i.i:                                    ; preds = %if.end11.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !8570
  br label %kmalloc_index.exit.i, !dbg !8570

if.end14.i.i:                                     ; preds = %if.end11.i.i
  %34 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8571
  %cmp15.i.i = icmp ule i64 %34, 16, !dbg !8573
  br i1 %cmp15.i.i, label %if.then16.i.i, label %if.end17.i.i, !dbg !8574

if.then16.i.i:                                    ; preds = %if.end14.i.i
  store i32 4, i32* %retval.i.i, align 4, !dbg !8575
  br label %kmalloc_index.exit.i, !dbg !8575

if.end17.i.i:                                     ; preds = %if.end14.i.i
  %35 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8576
  %cmp18.i.i = icmp ule i64 %35, 32, !dbg !8578
  br i1 %cmp18.i.i, label %if.then19.i.i, label %if.end20.i.i, !dbg !8579

if.then19.i.i:                                    ; preds = %if.end17.i.i
  store i32 5, i32* %retval.i.i, align 4, !dbg !8580
  br label %kmalloc_index.exit.i, !dbg !8580

if.end20.i.i:                                     ; preds = %if.end17.i.i
  %36 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8581
  %cmp21.i.i = icmp ule i64 %36, 64, !dbg !8583
  br i1 %cmp21.i.i, label %if.then22.i.i, label %if.end23.i.i, !dbg !8584

if.then22.i.i:                                    ; preds = %if.end20.i.i
  store i32 6, i32* %retval.i.i, align 4, !dbg !8585
  br label %kmalloc_index.exit.i, !dbg !8585

if.end23.i.i:                                     ; preds = %if.end20.i.i
  %37 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8586
  %cmp24.i.i = icmp ule i64 %37, 128, !dbg !8588
  br i1 %cmp24.i.i, label %if.then25.i.i, label %if.end26.i.i, !dbg !8589

if.then25.i.i:                                    ; preds = %if.end23.i.i
  store i32 7, i32* %retval.i.i, align 4, !dbg !8590
  br label %kmalloc_index.exit.i, !dbg !8590

if.end26.i.i:                                     ; preds = %if.end23.i.i
  %38 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8591
  %cmp27.i.i = icmp ule i64 %38, 256, !dbg !8593
  br i1 %cmp27.i.i, label %if.then28.i.i, label %if.end29.i.i, !dbg !8594

if.then28.i.i:                                    ; preds = %if.end26.i.i
  store i32 8, i32* %retval.i.i, align 4, !dbg !8595
  br label %kmalloc_index.exit.i, !dbg !8595

if.end29.i.i:                                     ; preds = %if.end26.i.i
  %39 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8596
  %cmp30.i.i = icmp ule i64 %39, 512, !dbg !8598
  br i1 %cmp30.i.i, label %if.then31.i.i, label %if.end32.i.i, !dbg !8599

if.then31.i.i:                                    ; preds = %if.end29.i.i
  store i32 9, i32* %retval.i.i, align 4, !dbg !8600
  br label %kmalloc_index.exit.i, !dbg !8600

if.end32.i.i:                                     ; preds = %if.end29.i.i
  %40 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8601
  %cmp33.i.i = icmp ule i64 %40, 1024, !dbg !8603
  br i1 %cmp33.i.i, label %if.then34.i.i, label %if.end35.i.i, !dbg !8604

if.then34.i.i:                                    ; preds = %if.end32.i.i
  store i32 10, i32* %retval.i.i, align 4, !dbg !8605
  br label %kmalloc_index.exit.i, !dbg !8605

if.end35.i.i:                                     ; preds = %if.end32.i.i
  %41 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8606
  %cmp36.i.i = icmp ule i64 %41, 2048, !dbg !8608
  br i1 %cmp36.i.i, label %if.then37.i.i, label %if.end38.i.i, !dbg !8609

if.then37.i.i:                                    ; preds = %if.end35.i.i
  store i32 11, i32* %retval.i.i, align 4, !dbg !8610
  br label %kmalloc_index.exit.i, !dbg !8610

if.end38.i.i:                                     ; preds = %if.end35.i.i
  %42 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8611
  %cmp39.i.i = icmp ule i64 %42, 4096, !dbg !8613
  br i1 %cmp39.i.i, label %if.then40.i.i, label %if.end41.i.i, !dbg !8614

if.then40.i.i:                                    ; preds = %if.end38.i.i
  store i32 12, i32* %retval.i.i, align 4, !dbg !8615
  br label %kmalloc_index.exit.i, !dbg !8615

if.end41.i.i:                                     ; preds = %if.end38.i.i
  %43 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8616
  %cmp42.i.i = icmp ule i64 %43, 8192, !dbg !8618
  br i1 %cmp42.i.i, label %if.then43.i.i, label %if.end44.i.i, !dbg !8619

if.then43.i.i:                                    ; preds = %if.end41.i.i
  store i32 13, i32* %retval.i.i, align 4, !dbg !8620
  br label %kmalloc_index.exit.i, !dbg !8620

if.end44.i.i:                                     ; preds = %if.end41.i.i
  %44 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8621
  %cmp45.i.i = icmp ule i64 %44, 16384, !dbg !8623
  br i1 %cmp45.i.i, label %if.then46.i.i, label %if.end47.i.i, !dbg !8624

if.then46.i.i:                                    ; preds = %if.end44.i.i
  store i32 14, i32* %retval.i.i, align 4, !dbg !8625
  br label %kmalloc_index.exit.i, !dbg !8625

if.end47.i.i:                                     ; preds = %if.end44.i.i
  %45 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8626
  %cmp48.i.i = icmp ule i64 %45, 32768, !dbg !8628
  br i1 %cmp48.i.i, label %if.then49.i.i, label %if.end50.i.i, !dbg !8629

if.then49.i.i:                                    ; preds = %if.end47.i.i
  store i32 15, i32* %retval.i.i, align 4, !dbg !8630
  br label %kmalloc_index.exit.i, !dbg !8630

if.end50.i.i:                                     ; preds = %if.end47.i.i
  %46 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8631
  %cmp51.i.i = icmp ule i64 %46, 65536, !dbg !8633
  br i1 %cmp51.i.i, label %if.then52.i.i, label %if.end53.i.i, !dbg !8634

if.then52.i.i:                                    ; preds = %if.end50.i.i
  store i32 16, i32* %retval.i.i, align 4, !dbg !8635
  br label %kmalloc_index.exit.i, !dbg !8635

if.end53.i.i:                                     ; preds = %if.end50.i.i
  %47 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8636
  %cmp54.i.i = icmp ule i64 %47, 131072, !dbg !8638
  br i1 %cmp54.i.i, label %if.then55.i.i, label %if.end56.i.i, !dbg !8639

if.then55.i.i:                                    ; preds = %if.end53.i.i
  store i32 17, i32* %retval.i.i, align 4, !dbg !8640
  br label %kmalloc_index.exit.i, !dbg !8640

if.end56.i.i:                                     ; preds = %if.end53.i.i
  %48 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8641
  %cmp57.i.i = icmp ule i64 %48, 262144, !dbg !8643
  br i1 %cmp57.i.i, label %if.then58.i.i, label %if.end59.i.i, !dbg !8644

if.then58.i.i:                                    ; preds = %if.end56.i.i
  store i32 18, i32* %retval.i.i, align 4, !dbg !8645
  br label %kmalloc_index.exit.i, !dbg !8645

if.end59.i.i:                                     ; preds = %if.end56.i.i
  %49 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8646
  %cmp60.i.i = icmp ule i64 %49, 524288, !dbg !8648
  br i1 %cmp60.i.i, label %if.then61.i.i, label %if.end62.i.i, !dbg !8649

if.then61.i.i:                                    ; preds = %if.end59.i.i
  store i32 19, i32* %retval.i.i, align 4, !dbg !8650
  br label %kmalloc_index.exit.i, !dbg !8650

if.end62.i.i:                                     ; preds = %if.end59.i.i
  %50 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8651
  %cmp63.i.i = icmp ule i64 %50, 1048576, !dbg !8653
  br i1 %cmp63.i.i, label %if.then64.i.i, label %if.end65.i.i, !dbg !8654

if.then64.i.i:                                    ; preds = %if.end62.i.i
  store i32 20, i32* %retval.i.i, align 4, !dbg !8655
  br label %kmalloc_index.exit.i, !dbg !8655

if.end65.i.i:                                     ; preds = %if.end62.i.i
  %51 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8656
  %cmp66.i.i = icmp ule i64 %51, 2097152, !dbg !8658
  br i1 %cmp66.i.i, label %if.then67.i.i, label %if.end68.i.i, !dbg !8659

if.then67.i.i:                                    ; preds = %if.end65.i.i
  store i32 21, i32* %retval.i.i, align 4, !dbg !8660
  br label %kmalloc_index.exit.i, !dbg !8660

if.end68.i.i:                                     ; preds = %if.end65.i.i
  %52 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8661
  %cmp69.i.i = icmp ule i64 %52, 4194304, !dbg !8663
  br i1 %cmp69.i.i, label %if.then70.i.i, label %if.end71.i.i, !dbg !8664

if.then70.i.i:                                    ; preds = %if.end68.i.i
  store i32 22, i32* %retval.i.i, align 4, !dbg !8665
  br label %kmalloc_index.exit.i, !dbg !8665

if.end71.i.i:                                     ; preds = %if.end68.i.i
  %53 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8666
  %cmp72.i.i = icmp ule i64 %53, 8388608, !dbg !8668
  br i1 %cmp72.i.i, label %if.then73.i.i, label %if.end74.i.i, !dbg !8669

if.then73.i.i:                                    ; preds = %if.end71.i.i
  store i32 23, i32* %retval.i.i, align 4, !dbg !8670
  br label %kmalloc_index.exit.i, !dbg !8670

if.end74.i.i:                                     ; preds = %if.end71.i.i
  %54 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8671
  %cmp75.i.i = icmp ule i64 %54, 16777216, !dbg !8673
  br i1 %cmp75.i.i, label %if.then76.i.i, label %if.end77.i.i, !dbg !8674

if.then76.i.i:                                    ; preds = %if.end74.i.i
  store i32 24, i32* %retval.i.i, align 4, !dbg !8675
  br label %kmalloc_index.exit.i, !dbg !8675

if.end77.i.i:                                     ; preds = %if.end74.i.i
  %55 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8676
  %cmp78.i.i = icmp ule i64 %55, 33554432, !dbg !8678
  br i1 %cmp78.i.i, label %if.then79.i.i, label %if.end80.i.i, !dbg !8679

if.then79.i.i:                                    ; preds = %if.end77.i.i
  store i32 25, i32* %retval.i.i, align 4, !dbg !8680
  br label %kmalloc_index.exit.i, !dbg !8680

if.end80.i.i:                                     ; preds = %if.end77.i.i
  %56 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8681
  %cmp81.i.i = icmp ule i64 %56, 67108864, !dbg !8683
  br i1 %cmp81.i.i, label %if.then82.i.i, label %if.end83.i.i, !dbg !8684

if.then82.i.i:                                    ; preds = %if.end80.i.i
  store i32 26, i32* %retval.i.i, align 4, !dbg !8685
  br label %kmalloc_index.exit.i, !dbg !8685

if.end83.i.i:                                     ; preds = %if.end80.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.20, i64 0, i64 0), i32 382, i32 0, i64 12) #11, !dbg !8686, !srcloc !8689
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 109) #11, !dbg !8690, !srcloc !8693
  unreachable, !dbg !8694

kmalloc_index.exit.i:                             ; preds = %if.then82.i.i, %if.then79.i.i, %if.then76.i.i, %if.then73.i.i, %if.then70.i.i, %if.then67.i.i, %if.then64.i.i, %if.then61.i.i, %if.then58.i.i, %if.then55.i.i, %if.then52.i.i, %if.then49.i.i, %if.then46.i.i, %if.then43.i.i, %if.then40.i.i, %if.then37.i.i, %if.then34.i.i, %if.then31.i.i, %if.then28.i.i, %if.then25.i.i, %if.then22.i.i, %if.then19.i.i, %if.then16.i.i, %if.then13.i.i, %if.then10.i.i, %if.then5.i.i, %if.then1.i.i, %if.then.i.i
  %57 = load i32, i32* %retval.i.i, align 4, !dbg !8695
  store i32 %57, i32* %index.i, align 4, !dbg !8696
  %58 = load i32, i32* %index.i, align 4, !dbg !8697
  %tobool.i = icmp ne i32 %58, 0, !dbg !8697
  br i1 %tobool.i, label %if.end4.i, label %if.then3.i, !dbg !8699

if.then3.i:                                       ; preds = %kmalloc_index.exit.i
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i, align 8, !dbg !8700
  br label %kmalloc.exit, !dbg !8700

if.end4.i:                                        ; preds = %kmalloc_index.exit.i
  %59 = load i32, i32* %flags.addr.i, align 4, !dbg !8701
  store i32 %59, i32* %flags.addr.i13.i, align 4
  %60 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !8702
  %and.i.i = and i32 %60, 17, !dbg !8702
  %cmp.i14.i = icmp eq i32 %and.i.i, 0, !dbg !8702
  %lnot.i.i = xor i1 %cmp.i14.i, true, !dbg !8702
  %lnot.ext.i.i = zext i1 %cmp.i14.i to i32, !dbg !8702
  %conv.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !8702
  br i1 %cmp.i14.i, label %if.then.i15.i, label %if.end.i16.i, !dbg !8704

if.then.i15.i:                                    ; preds = %if.end4.i
  store i32 0, i32* %retval.i12.i, align 4, !dbg !8705
  br label %kmalloc_type.exit.i, !dbg !8705

if.end.i16.i:                                     ; preds = %if.end4.i
  %61 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !8706
  %and2.i.i = and i32 %61, 1, !dbg !8707
  %tobool3.i.i = icmp ne i32 %and2.i.i, 0, !dbg !8706
  %62 = zext i1 %tobool3.i.i to i64, !dbg !8706
  %cond.i.i = select i1 %tobool3.i.i, i32 2, i32 1, !dbg !8706
  store i32 %cond.i.i, i32* %retval.i12.i, align 4, !dbg !8708
  br label %kmalloc_type.exit.i, !dbg !8708

kmalloc_type.exit.i:                              ; preds = %if.end.i16.i, %if.then.i15.i
  %63 = load i32, i32* %retval.i12.i, align 4, !dbg !8709
  %idxprom.i = zext i32 %63 to i64, !dbg !8710
  %arrayidx.i = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i, !dbg !8710
  %64 = load i32, i32* %index.i, align 4, !dbg !8711
  %idxprom6.i = zext i32 %64 to i64, !dbg !8710
  %arrayidx7.i = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i, i64 0, i64 %idxprom6.i, !dbg !8710
  %65 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx7.i, align 8, !dbg !8710
  %66 = load i32, i32* %flags.addr.i, align 4, !dbg !8712
  %67 = load i64, i64* %size.addr.i, align 8, !dbg !8713
  store %struct.kmem_cache* %65, %struct.kmem_cache** %s.addr.i.i, align 8
  store i32 %66, i32* %flags.addr.i17.i, align 4
  store i64 %67, i64* %size.addr.i18.i, align 8
  %68 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !8714
  %69 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !8715
  %call.i19.i = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %68, i32 %69) #14, !dbg !8716
  %ptrint.i.i = ptrtoint i8* %call.i19.i to i64, !dbg !8716
  %maskedptr.i.i = and i64 %ptrint.i.i, 7, !dbg !8716
  %maskcond.i.i = icmp eq i64 %maskedptr.i.i, 0, !dbg !8716
  call void @llvm.assume(i1 %maskcond.i.i) #11, !dbg !8716
  store i8* %call.i19.i, i8** %ret.i.i, align 8, !dbg !8444
  %70 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !8717
  %71 = load i8*, i8** %ret.i.i, align 8, !dbg !8718
  %72 = load i64, i64* %size.addr.i18.i, align 8, !dbg !8719
  %73 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !8720
  %call1.i.i = call i8* @kasan_kmalloc(%struct.kmem_cache* %70, i8* %71, i64 %72, i32 %73) #14, !dbg !8721
  store i8* %call1.i.i, i8** %ret.i.i, align 8, !dbg !8722
  %74 = load i8*, i8** %ret.i.i, align 8, !dbg !8723
  store i8* %74, i8** %retval.i, align 8, !dbg !8724
  br label %kmalloc.exit, !dbg !8724

if.end9.i:                                        ; preds = %for.end
  %75 = load i64, i64* %size.addr.i, align 8, !dbg !8725
  %76 = load i32, i32* %flags.addr.i, align 4, !dbg !8726
  %call10.i = call noalias i8* @__kmalloc(i64 %75, i32 %76) #14, !dbg !8727
  %ptrint.i = ptrtoint i8* %call10.i to i64, !dbg !8727
  %maskedptr.i = and i64 %ptrint.i, 7, !dbg !8727
  %maskcond.i = icmp eq i64 %maskedptr.i, 0, !dbg !8727
  call void @llvm.assume(i1 %maskcond.i) #11, !dbg !8727
  store i8* %call10.i, i8** %retval.i, align 8, !dbg !8728
  br label %kmalloc.exit, !dbg !8728

kmalloc.exit:                                     ; preds = %if.then1.i, %if.then3.i, %kmalloc_type.exit.i, %if.end9.i
  %77 = load i8*, i8** %retval.i, align 8, !dbg !8729
  %78 = bitcast i8* %77 to %struct.quattro*, !dbg !8730
  store %struct.quattro* %78, %struct.quattro** %qp, align 8, !dbg !8731
  %79 = load %struct.quattro*, %struct.quattro** %qp, align 8, !dbg !8732
  %cmp4 = icmp ne %struct.quattro* %79, null, !dbg !8734
  br i1 %cmp4, label %if.then5, label %if.end13, !dbg !8735

if.then5:                                         ; preds = %kmalloc.exit
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8736, metadata !DIExpression()), !dbg !8738
  store i32 0, i32* %i, align 4, !dbg !8739
  br label %for.cond6, !dbg !8741

for.cond6:                                        ; preds = %for.inc9, %if.then5
  %80 = load i32, i32* %i, align 4, !dbg !8742
  %cmp7 = icmp slt i32 %80, 4, !dbg !8744
  br i1 %cmp7, label %for.body8, label %for.end10, !dbg !8745

for.body8:                                        ; preds = %for.cond6
  %81 = load %struct.quattro*, %struct.quattro** %qp, align 8, !dbg !8746
  %happy_meals = getelementptr inbounds %struct.quattro, %struct.quattro* %81, i32 0, i32 0, !dbg !8747
  %82 = load i32, i32* %i, align 4, !dbg !8748
  %idxprom = sext i32 %82 to i64, !dbg !8746
  %arrayidx = getelementptr [4 x %struct.net_device*], [4 x %struct.net_device*]* %happy_meals, i64 0, i64 %idxprom, !dbg !8746
  store %struct.net_device* null, %struct.net_device** %arrayidx, align 8, !dbg !8749
  br label %for.inc9, !dbg !8746

for.inc9:                                         ; preds = %for.body8
  %83 = load i32, i32* %i, align 4, !dbg !8750
  %inc = add i32 %83, 1, !dbg !8750
  store i32 %inc, i32* %i, align 4, !dbg !8750
  br label %for.cond6, !dbg !8751, !llvm.loop !8752

for.end10:                                        ; preds = %for.cond6
  %84 = load %struct.pci_dev*, %struct.pci_dev** %bdev, align 8, !dbg !8754
  %85 = bitcast %struct.pci_dev* %84 to i8*, !dbg !8754
  %86 = load %struct.quattro*, %struct.quattro** %qp, align 8, !dbg !8755
  %quattro_dev11 = getelementptr inbounds %struct.quattro, %struct.quattro* %86, i32 0, i32 1, !dbg !8756
  store i8* %85, i8** %quattro_dev11, align 8, !dbg !8757
  %87 = load %struct.quattro*, %struct.quattro** @qfe_pci_list, align 8, !dbg !8758
  %88 = load %struct.quattro*, %struct.quattro** %qp, align 8, !dbg !8759
  %next12 = getelementptr inbounds %struct.quattro, %struct.quattro* %88, i32 0, i32 2, !dbg !8760
  store %struct.quattro* %87, %struct.quattro** %next12, align 8, !dbg !8761
  %89 = load %struct.quattro*, %struct.quattro** %qp, align 8, !dbg !8762
  store %struct.quattro* %89, %struct.quattro** @qfe_pci_list, align 8, !dbg !8763
  %90 = load %struct.quattro*, %struct.quattro** %qp, align 8, !dbg !8764
  %nranges = getelementptr inbounds %struct.quattro, %struct.quattro* %90, i32 0, i32 3, !dbg !8765
  store i32 0, i32* %nranges, align 8, !dbg !8766
  br label %if.end13, !dbg !8767

if.end13:                                         ; preds = %for.end10, %kmalloc.exit
  %91 = load %struct.quattro*, %struct.quattro** %qp, align 8, !dbg !8768
  store %struct.quattro* %91, %struct.quattro** %retval, align 8, !dbg !8769
  br label %return, !dbg !8769

return:                                           ; preds = %if.end13, %if.then2, %if.then
  %92 = load %struct.quattro*, %struct.quattro** %retval, align 8, !dbg !8770
  ret %struct.quattro* %92, !dbg !8770
}

; Function Attrs: noredzone
declare dso_local %struct.net_device* @alloc_etherdev_mqs(i32, i32, i32) #2

; Function Attrs: cold noredzone
declare dso_local i32 @printk(i8*, ...) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @netdev_priv(%struct.net_device* %dev) #1 !dbg !8771 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !8774, metadata !DIExpression()), !dbg !8775
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !8776
  %1 = bitcast %struct.net_device* %0 to i8*, !dbg !8777
  %add.ptr = getelementptr i8, i8* %1, i64 1984, !dbg !8778
  ret i8* %add.ptr, !dbg !8779
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #5

; Function Attrs: noredzone
declare dso_local i32 @pci_request_regions(%struct.pci_dev*, i8*) #2

; Function Attrs: noredzone
declare dso_local i8* @ioremap(i64, i64) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @get_hme_mac_nonsparc(%struct.pci_dev* %pdev, i8* %dev_addr) #1 !dbg !8780 {
entry:
  %pdev.addr = alloca %struct.pci_dev*, align 8
  %dev_addr.addr = alloca i8*, align 8
  %size = alloca i64, align 8
  %p = alloca i8*, align 8
  %index = alloca i32, align 4
  %found = alloca i32, align 4
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !8783, metadata !DIExpression()), !dbg !8784
  store i8* %dev_addr, i8** %dev_addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dev_addr.addr, metadata !8785, metadata !DIExpression()), !dbg !8786
  call void @llvm.dbg.declare(metadata i64* %size, metadata !8787, metadata !DIExpression()), !dbg !8788
  call void @llvm.dbg.declare(metadata i8** %p, metadata !8789, metadata !DIExpression()), !dbg !8790
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !8791
  %call = call i8* @pci_map_rom(%struct.pci_dev* %0, i64* %size) #12, !dbg !8792
  store i8* %call, i8** %p, align 8, !dbg !8790
  %1 = load i8*, i8** %p, align 8, !dbg !8793
  %tobool = icmp ne i8* %1, null, !dbg !8793
  br i1 %tobool, label %if.then, label %if.end15, !dbg !8795

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %index, metadata !8796, metadata !DIExpression()), !dbg !8798
  store i32 0, i32* %index, align 4, !dbg !8798
  call void @llvm.dbg.declare(metadata i32* %found, metadata !8799, metadata !DIExpression()), !dbg !8800
  %2 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !8801
  %call1 = call i32 @is_quattro_p(%struct.pci_dev* %2) #12, !dbg !8803
  %tobool2 = icmp ne i32 %call1, 0, !dbg !8803
  br i1 %tobool2, label %if.then3, label %if.end, !dbg !8804

if.then3:                                         ; preds = %if.then
  %3 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !8805
  %devfn = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %3, i32 0, i32 6, !dbg !8805
  %4 = load i32, i32* %devfn, align 8, !dbg !8805
  %shr = lshr i32 %4, 3, !dbg !8805
  %and = and i32 %shr, 31, !dbg !8805
  store i32 %and, i32* %index, align 4, !dbg !8806
  br label %if.end, !dbg !8807

if.end:                                           ; preds = %if.then3, %if.then
  %5 = load i8*, i8** %p, align 8, !dbg !8808
  %call4 = call zeroext i8 @readb(i8* %5) #12, !dbg !8809
  %conv = zext i8 %call4 to i32, !dbg !8809
  %cmp = icmp eq i32 %conv, 85, !dbg !8810
  br i1 %cmp, label %land.lhs.true, label %land.end, !dbg !8811

land.lhs.true:                                    ; preds = %if.end
  %6 = load i8*, i8** %p, align 8, !dbg !8812
  %add.ptr = getelementptr i8, i8* %6, i64 1, !dbg !8813
  %call6 = call zeroext i8 @readb(i8* %add.ptr) #12, !dbg !8814
  %conv7 = zext i8 %call6 to i32, !dbg !8814
  %cmp8 = icmp eq i32 %conv7, 170, !dbg !8815
  br i1 %cmp8, label %land.rhs, label %land.end, !dbg !8816

land.rhs:                                         ; preds = %land.lhs.true
  %7 = load i8*, i8** %p, align 8, !dbg !8817
  %8 = load i32, i32* %index, align 4, !dbg !8818
  %9 = load i8*, i8** %dev_addr.addr, align 8, !dbg !8819
  %call10 = call i32 @find_eth_addr_in_vpd(i8* %7, i32 65536, i32 %8, i8* %9) #12, !dbg !8820
  %tobool11 = icmp ne i32 %call10, 0, !dbg !8816
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true, %if.end
  %10 = phi i1 [ false, %land.lhs.true ], [ false, %if.end ], [ %tobool11, %land.rhs ], !dbg !8821
  %land.ext = zext i1 %10 to i32, !dbg !8816
  store i32 %land.ext, i32* %found, align 4, !dbg !8822
  %11 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !8823
  %12 = load i8*, i8** %p, align 8, !dbg !8824
  call void @pci_unmap_rom(%struct.pci_dev* %11, i8* %12) #12, !dbg !8825
  %13 = load i32, i32* %found, align 4, !dbg !8826
  %tobool12 = icmp ne i32 %13, 0, !dbg !8826
  br i1 %tobool12, label %if.then13, label %if.end14, !dbg !8828

if.then13:                                        ; preds = %land.end
  br label %return, !dbg !8829

if.end14:                                         ; preds = %land.end
  br label %if.end15, !dbg !8830

if.end15:                                         ; preds = %if.end14, %entry
  %14 = load i8*, i8** %dev_addr.addr, align 8, !dbg !8831
  %arrayidx = getelementptr i8, i8* %14, i64 0, !dbg !8831
  store i8 8, i8* %arrayidx, align 1, !dbg !8832
  %15 = load i8*, i8** %dev_addr.addr, align 8, !dbg !8833
  %arrayidx16 = getelementptr i8, i8* %15, i64 1, !dbg !8833
  store i8 0, i8* %arrayidx16, align 1, !dbg !8834
  %16 = load i8*, i8** %dev_addr.addr, align 8, !dbg !8835
  %arrayidx17 = getelementptr i8, i8* %16, i64 2, !dbg !8835
  store i8 32, i8* %arrayidx17, align 1, !dbg !8836
  %17 = load i8*, i8** %dev_addr.addr, align 8, !dbg !8837
  %arrayidx18 = getelementptr i8, i8* %17, i64 3, !dbg !8837
  call void @get_random_bytes(i8* %arrayidx18, i32 3) #12, !dbg !8838
  br label %return, !dbg !8839

return:                                           ; preds = %if.end15, %if.then13
  ret void, !dbg !8839
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @dma_alloc_coherent(%struct.device* %dev, i64 %size, i64* %dma_handle, i32 %gfp) #1 !dbg !8840 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %size.addr = alloca i64, align 8
  %dma_handle.addr = alloca i64*, align 8
  %gfp.addr = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !8844, metadata !DIExpression()), !dbg !8845
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !8846, metadata !DIExpression()), !dbg !8847
  store i64* %dma_handle, i64** %dma_handle.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %dma_handle.addr, metadata !8848, metadata !DIExpression()), !dbg !8849
  store i32 %gfp, i32* %gfp.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %gfp.addr, metadata !8850, metadata !DIExpression()), !dbg !8851
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !8852
  %1 = load i64, i64* %size.addr, align 8, !dbg !8853
  %2 = load i64*, i64** %dma_handle.addr, align 8, !dbg !8854
  %3 = load i32, i32* %gfp.addr, align 4, !dbg !8855
  %4 = load i32, i32* %gfp.addr, align 4, !dbg !8856
  %and = and i32 %4, 8192, !dbg !8857
  %tobool = icmp ne i32 %and, 0, !dbg !8858
  %5 = zext i1 %tobool to i64, !dbg !8858
  %cond = select i1 %tobool, i64 256, i64 0, !dbg !8858
  %call = call i8* @dma_alloc_attrs(%struct.device* %0, i64 %1, i64* %2, i32 %3, i64 %cond) #12, !dbg !8859
  ret i8* %call, !dbg !8860
}

; Function Attrs: noredzone
declare dso_local void @init_timer_key(%struct.timer_list*, void (%struct.timer_list*)*, i32, i8*, %struct.lock_class_key*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @happy_meal_timer(%struct.timer_list* %t) #1 !dbg !8861 {
entry:
  %lock.addr.i145 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i145, metadata !7875, metadata !DIExpression()), !dbg !8862
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !7882, metadata !DIExpression()), !dbg !8864
  %t.addr = alloca %struct.timer_list*, align 8
  %hp = alloca %struct.happy_meal*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.happy_meal*, align 8
  %tregs = alloca i8*, align 8
  %restart_timer = alloca i32, align 4
  %ret = alloca i32, align 4
  %ret99 = alloca i32, align 4
  store %struct.timer_list* %t, %struct.timer_list** %t.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.timer_list** %t.addr, metadata !8866, metadata !DIExpression()), !dbg !8867
  call void @llvm.dbg.declare(metadata %struct.happy_meal** %hp, metadata !8868, metadata !DIExpression()), !dbg !8869
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !8870, metadata !DIExpression()), !dbg !8872
  %0 = load %struct.timer_list*, %struct.timer_list** %t.addr, align 8, !dbg !8872
  %1 = bitcast %struct.timer_list* %0 to i8*, !dbg !8872
  store i8* %1, i8** %__mptr, align 8, !dbg !8872
  br label %do.body, !dbg !8872

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !8873

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !8872
  %add.ptr = getelementptr i8, i8* %2, i64 -672, !dbg !8872
  %3 = bitcast i8* %add.ptr to %struct.happy_meal*, !dbg !8872
  store %struct.happy_meal* %3, %struct.happy_meal** %tmp, align 8, !dbg !8873
  %4 = load %struct.happy_meal*, %struct.happy_meal** %tmp, align 8, !dbg !8872
  store %struct.happy_meal* %4, %struct.happy_meal** %hp, align 8, !dbg !8869
  call void @llvm.dbg.declare(metadata i8** %tregs, metadata !8875, metadata !DIExpression()), !dbg !8876
  %5 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !8877
  %tcvregs = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %5, i32 0, i32 14, !dbg !8878
  %6 = load i8*, i8** %tcvregs, align 8, !dbg !8878
  store i8* %6, i8** %tregs, align 8, !dbg !8876
  call void @llvm.dbg.declare(metadata i32* %restart_timer, metadata !8879, metadata !DIExpression()), !dbg !8880
  store i32 0, i32* %restart_timer, align 4, !dbg !8880
  %7 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !8881
  %happy_lock = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %7, i32 0, i32 4, !dbg !8882
  store %struct.spinlock* %happy_lock, %struct.spinlock** %lock.addr.i, align 8
  call void @arch_local_irq_disable() #14, !dbg !8883
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #11, !dbg !8884, !srcloc !8217
  %8 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !8885
  %9 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %8, i32 0, i32 0, !dbg !8885
  %rlock.i = bitcast %union.anon.1* %9 to %struct.raw_spinlock*, !dbg !8885
  %10 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !8886
  %timer_ticks = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %10, i32 0, i32 40, !dbg !8887
  %11 = load i32, i32* %timer_ticks, align 4, !dbg !8888
  %inc = add i32 %11, 1, !dbg !8888
  store i32 %inc, i32* %timer_ticks, align 4, !dbg !8888
  %12 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !8889
  %timer_state = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %12, i32 0, i32 39, !dbg !8890
  %13 = load i32, i32* %timer_state, align 8, !dbg !8890
  switch i32 %13, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb30
    i32 2, label %sw.bb53
    i32 3, label %sw.bb133
  ], !dbg !8891

sw.bb:                                            ; preds = %do.end
  %14 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !8892
  %timer_ticks1 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %14, i32 0, i32 40, !dbg !8895
  %15 = load i32, i32* %timer_ticks1, align 4, !dbg !8895
  %cmp = icmp uge i32 %15, 10, !dbg !8896
  br i1 %cmp, label %if.then, label %if.else, !dbg !8897

if.then:                                          ; preds = %sw.bb
  br label %do_force_mode, !dbg !8898

do_force_mode:                                    ; preds = %if.then24, %if.then
  call void @llvm.dbg.label(metadata !8899), !dbg !8901
  %16 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !8902
  %17 = load i8*, i8** %tregs, align 8, !dbg !8903
  %call = call i32 @happy_meal_tcvr_read(%struct.happy_meal* %16, i8* %17, i32 0) #12, !dbg !8904
  %conv = trunc i32 %call to i16, !dbg !8904
  %18 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !8905
  %sw_bmcr = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %18, i32 0, i32 22, !dbg !8906
  store i16 %conv, i16* %sw_bmcr, align 2, !dbg !8907
  %19 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !8908
  %dev = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %19, i32 0, i32 41, !dbg !8909
  %20 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !8909
  %name = getelementptr inbounds %struct.net_device, %struct.net_device* %20, i32 0, i32 0, !dbg !8910
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %name, i64 0, i64 0, !dbg !8908
  %call2 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.21, i64 0, i64 0), i8* %arraydecay) #13, !dbg !8911
  %21 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !8912
  %sw_bmcr3 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %21, i32 0, i32 22, !dbg !8913
  store i16 8192, i16* %sw_bmcr3, align 2, !dbg !8914
  %22 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !8915
  %23 = load i8*, i8** %tregs, align 8, !dbg !8916
  %24 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !8917
  %sw_bmcr4 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %24, i32 0, i32 22, !dbg !8918
  %25 = load i16, i16* %sw_bmcr4, align 2, !dbg !8918
  call void @happy_meal_tcvr_write(%struct.happy_meal* %22, i8* %23, i32 0, i16 zeroext %25) #12, !dbg !8919
  %26 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !8920
  %call5 = call i32 @is_lucent_phy(%struct.happy_meal* %26) #12, !dbg !8922
  %tobool = icmp ne i32 %call5, 0, !dbg !8922
  br i1 %tobool, label %if.end, label %if.then6, !dbg !8923

if.then6:                                         ; preds = %do_force_mode
  %27 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !8924
  %28 = load i8*, i8** %tregs, align 8, !dbg !8926
  %call7 = call i32 @happy_meal_tcvr_read(%struct.happy_meal* %27, i8* %28, i32 23) #12, !dbg !8927
  %conv8 = trunc i32 %call7 to i16, !dbg !8927
  %29 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !8928
  %sw_csconfig = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %29, i32 0, i32 29, !dbg !8929
  store i16 %conv8, i16* %sw_csconfig, align 4, !dbg !8930
  %30 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !8931
  %sw_csconfig9 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %30, i32 0, i32 29, !dbg !8932
  %31 = load i16, i16* %sw_csconfig9, align 4, !dbg !8933
  %conv10 = zext i16 %31 to i32, !dbg !8933
  %and = and i32 %conv10, -17, !dbg !8933
  %conv11 = trunc i32 %and to i16, !dbg !8933
  store i16 %conv11, i16* %sw_csconfig9, align 4, !dbg !8933
  %32 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !8934
  %33 = load i8*, i8** %tregs, align 8, !dbg !8935
  %34 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !8936
  %sw_csconfig12 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %34, i32 0, i32 29, !dbg !8937
  %35 = load i16, i16* %sw_csconfig12, align 4, !dbg !8937
  call void @happy_meal_tcvr_write(%struct.happy_meal* %32, i8* %33, i32 23, i16 zeroext %35) #12, !dbg !8938
  br label %if.end, !dbg !8939

if.end:                                           ; preds = %if.then6, %do_force_mode
  %36 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !8940
  %timer_state13 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %36, i32 0, i32 39, !dbg !8941
  store i32 2, i32* %timer_state13, align 8, !dbg !8942
  %37 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !8943
  %timer_ticks14 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %37, i32 0, i32 40, !dbg !8944
  store i32 0, i32* %timer_ticks14, align 4, !dbg !8945
  store i32 1, i32* %restart_timer, align 4, !dbg !8946
  br label %if.end29, !dbg !8947

if.else:                                          ; preds = %sw.bb
  %38 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !8948
  %39 = load i8*, i8** %tregs, align 8, !dbg !8950
  %call15 = call i32 @happy_meal_tcvr_read(%struct.happy_meal* %38, i8* %39, i32 1) #12, !dbg !8951
  %conv16 = trunc i32 %call15 to i16, !dbg !8951
  %40 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !8952
  %sw_bmsr = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %40, i32 0, i32 23, !dbg !8953
  store i16 %conv16, i16* %sw_bmsr, align 8, !dbg !8954
  %41 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !8955
  %sw_bmsr17 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %41, i32 0, i32 23, !dbg !8957
  %42 = load i16, i16* %sw_bmsr17, align 8, !dbg !8957
  %conv18 = zext i16 %42 to i32, !dbg !8955
  %and19 = and i32 %conv18, 32, !dbg !8958
  %tobool20 = icmp ne i32 %and19, 0, !dbg !8958
  br i1 %tobool20, label %if.then21, label %if.else27, !dbg !8959

if.then21:                                        ; preds = %if.else
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !8960, metadata !DIExpression()), !dbg !8962
  %43 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !8963
  %44 = load i8*, i8** %tregs, align 8, !dbg !8964
  %call22 = call i32 @set_happy_link_modes(%struct.happy_meal* %43, i8* %44) #12, !dbg !8965
  store i32 %call22, i32* %ret, align 4, !dbg !8966
  %45 = load i32, i32* %ret, align 4, !dbg !8967
  %tobool23 = icmp ne i32 %45, 0, !dbg !8967
  br i1 %tobool23, label %if.then24, label %if.end25, !dbg !8969

if.then24:                                        ; preds = %if.then21
  br label %do_force_mode, !dbg !8970

if.end25:                                         ; preds = %if.then21
  %46 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !8972
  %timer_state26 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %46, i32 0, i32 39, !dbg !8973
  store i32 1, i32* %timer_state26, align 8, !dbg !8974
  store i32 1, i32* %restart_timer, align 4, !dbg !8975
  br label %if.end28, !dbg !8976

if.else27:                                        ; preds = %if.else
  store i32 1, i32* %restart_timer, align 4, !dbg !8977
  br label %if.end28

if.end28:                                         ; preds = %if.else27, %if.end25
  br label %if.end29

if.end29:                                         ; preds = %if.end28, %if.end
  br label %sw.epilog, !dbg !8979

sw.bb30:                                          ; preds = %do.end
  %47 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !8980
  %48 = load i8*, i8** %tregs, align 8, !dbg !8981
  %call31 = call i32 @happy_meal_tcvr_read(%struct.happy_meal* %47, i8* %48, i32 1) #12, !dbg !8982
  %conv32 = trunc i32 %call31 to i16, !dbg !8982
  %49 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !8983
  %sw_bmsr33 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %49, i32 0, i32 23, !dbg !8984
  store i16 %conv32, i16* %sw_bmsr33, align 8, !dbg !8985
  %50 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !8986
  %sw_bmsr34 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %50, i32 0, i32 23, !dbg !8988
  %51 = load i16, i16* %sw_bmsr34, align 8, !dbg !8988
  %conv35 = zext i16 %51 to i32, !dbg !8986
  %and36 = and i32 %conv35, 4, !dbg !8989
  %tobool37 = icmp ne i32 %and36, 0, !dbg !8989
  br i1 %tobool37, label %if.then38, label %if.else40, !dbg !8990

if.then38:                                        ; preds = %sw.bb30
  %52 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !8991
  %53 = load i8*, i8** %tregs, align 8, !dbg !8993
  call void @display_link_mode(%struct.happy_meal* %52, i8* %53) #12, !dbg !8994
  %54 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !8995
  %timer_state39 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %54, i32 0, i32 39, !dbg !8996
  store i32 3, i32* %timer_state39, align 8, !dbg !8997
  store i32 0, i32* %restart_timer, align 4, !dbg !8998
  br label %if.end52, !dbg !8999

if.else40:                                        ; preds = %sw.bb30
  %55 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !9000
  %timer_ticks41 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %55, i32 0, i32 40, !dbg !9003
  %56 = load i32, i32* %timer_ticks41, align 4, !dbg !9003
  %cmp42 = icmp uge i32 %56, 10, !dbg !9004
  br i1 %cmp42, label %if.then44, label %if.else50, !dbg !9005

if.then44:                                        ; preds = %if.else40
  %57 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !9006
  %dev45 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %57, i32 0, i32 41, !dbg !9008
  %58 = load %struct.net_device*, %struct.net_device** %dev45, align 8, !dbg !9008
  %name46 = getelementptr inbounds %struct.net_device, %struct.net_device* %58, i32 0, i32 0, !dbg !9009
  %arraydecay47 = getelementptr inbounds [16 x i8], [16 x i8]* %name46, i64 0, i64 0, !dbg !9006
  %call48 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.22, i64 0, i64 0), i8* %arraydecay47) #13, !dbg !9010
  %59 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !9011
  %timer_ticks49 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %59, i32 0, i32 40, !dbg !9012
  store i32 0, i32* %timer_ticks49, align 4, !dbg !9013
  store i32 1, i32* %restart_timer, align 4, !dbg !9014
  br label %if.end51, !dbg !9015

if.else50:                                        ; preds = %if.else40
  store i32 1, i32* %restart_timer, align 4, !dbg !9016
  br label %if.end51

if.end51:                                         ; preds = %if.else50, %if.then44
  br label %if.end52

if.end52:                                         ; preds = %if.end51, %if.then38
  br label %sw.epilog, !dbg !9018

sw.bb53:                                          ; preds = %do.end
  %60 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !9019
  %61 = load i8*, i8** %tregs, align 8, !dbg !9020
  %call54 = call i32 @happy_meal_tcvr_read(%struct.happy_meal* %60, i8* %61, i32 1) #12, !dbg !9021
  %conv55 = trunc i32 %call54 to i16, !dbg !9021
  %62 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !9022
  %sw_bmsr56 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %62, i32 0, i32 23, !dbg !9023
  store i16 %conv55, i16* %sw_bmsr56, align 8, !dbg !9024
  %63 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !9025
  %64 = load i8*, i8** %tregs, align 8, !dbg !9026
  %call57 = call i32 @happy_meal_tcvr_read(%struct.happy_meal* %63, i8* %64, i32 23) #12, !dbg !9027
  %conv58 = trunc i32 %call57 to i16, !dbg !9027
  %65 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !9028
  %sw_csconfig59 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %65, i32 0, i32 29, !dbg !9029
  store i16 %conv58, i16* %sw_csconfig59, align 4, !dbg !9030
  %66 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !9031
  %timer_ticks60 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %66, i32 0, i32 40, !dbg !9033
  %67 = load i32, i32* %timer_ticks60, align 4, !dbg !9033
  %cmp61 = icmp eq i32 %67, 1, !dbg !9034
  br i1 %cmp61, label %if.then63, label %if.end72, !dbg !9035

if.then63:                                        ; preds = %sw.bb53
  %68 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !9036
  %call64 = call i32 @is_lucent_phy(%struct.happy_meal* %68) #12, !dbg !9039
  %tobool65 = icmp ne i32 %call64, 0, !dbg !9039
  br i1 %tobool65, label %if.end71, label %if.then66, !dbg !9040

if.then66:                                        ; preds = %if.then63
  %69 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !9041
  %sw_csconfig67 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %69, i32 0, i32 29, !dbg !9043
  %70 = load i16, i16* %sw_csconfig67, align 4, !dbg !9044
  %conv68 = zext i16 %70 to i32, !dbg !9044
  %or = or i32 %conv68, 16, !dbg !9044
  %conv69 = trunc i32 %or to i16, !dbg !9044
  store i16 %conv69, i16* %sw_csconfig67, align 4, !dbg !9044
  %71 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !9045
  %72 = load i8*, i8** %tregs, align 8, !dbg !9046
  %73 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !9047
  %sw_csconfig70 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %73, i32 0, i32 29, !dbg !9048
  %74 = load i16, i16* %sw_csconfig70, align 4, !dbg !9048
  call void @happy_meal_tcvr_write(%struct.happy_meal* %71, i8* %72, i32 23, i16 zeroext %74) #12, !dbg !9049
  br label %if.end71, !dbg !9050

if.end71:                                         ; preds = %if.then66, %if.then63
  store i32 1, i32* %restart_timer, align 4, !dbg !9051
  br label %sw.epilog, !dbg !9052

if.end72:                                         ; preds = %sw.bb53
  %75 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !9053
  %timer_ticks73 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %75, i32 0, i32 40, !dbg !9055
  %76 = load i32, i32* %timer_ticks73, align 4, !dbg !9055
  %cmp74 = icmp eq i32 %76, 2, !dbg !9056
  br i1 %cmp74, label %if.then76, label %if.end86, !dbg !9057

if.then76:                                        ; preds = %if.end72
  %77 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !9058
  %call77 = call i32 @is_lucent_phy(%struct.happy_meal* %77) #12, !dbg !9061
  %tobool78 = icmp ne i32 %call77, 0, !dbg !9061
  br i1 %tobool78, label %if.end85, label %if.then79, !dbg !9062

if.then79:                                        ; preds = %if.then76
  %78 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !9063
  %sw_csconfig80 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %78, i32 0, i32 29, !dbg !9065
  %79 = load i16, i16* %sw_csconfig80, align 4, !dbg !9066
  %conv81 = zext i16 %79 to i32, !dbg !9066
  %and82 = and i32 %conv81, -17, !dbg !9066
  %conv83 = trunc i32 %and82 to i16, !dbg !9066
  store i16 %conv83, i16* %sw_csconfig80, align 4, !dbg !9066
  %80 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !9067
  %81 = load i8*, i8** %tregs, align 8, !dbg !9068
  %82 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !9069
  %sw_csconfig84 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %82, i32 0, i32 29, !dbg !9070
  %83 = load i16, i16* %sw_csconfig84, align 4, !dbg !9070
  call void @happy_meal_tcvr_write(%struct.happy_meal* %80, i8* %81, i32 23, i16 zeroext %83) #12, !dbg !9071
  br label %if.end85, !dbg !9072

if.end85:                                         ; preds = %if.then79, %if.then76
  store i32 1, i32* %restart_timer, align 4, !dbg !9073
  br label %sw.epilog, !dbg !9074

if.end86:                                         ; preds = %if.end72
  %84 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !9075
  %sw_bmsr87 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %84, i32 0, i32 23, !dbg !9077
  %85 = load i16, i16* %sw_bmsr87, align 8, !dbg !9077
  %conv88 = zext i16 %85 to i32, !dbg !9075
  %and89 = and i32 %conv88, 4, !dbg !9078
  %tobool90 = icmp ne i32 %and89, 0, !dbg !9078
  br i1 %tobool90, label %if.then91, label %if.else94, !dbg !9079

if.then91:                                        ; preds = %if.end86
  %86 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !9080
  %87 = load i8*, i8** %tregs, align 8, !dbg !9082
  call void @display_forced_link_mode(%struct.happy_meal* %86, i8* %87) #12, !dbg !9083
  %88 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !9084
  %89 = load i8*, i8** %tregs, align 8, !dbg !9085
  %call92 = call i32 @set_happy_link_modes(%struct.happy_meal* %88, i8* %89) #12, !dbg !9086
  %90 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !9087
  %timer_state93 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %90, i32 0, i32 39, !dbg !9088
  store i32 3, i32* %timer_state93, align 8, !dbg !9089
  store i32 0, i32* %restart_timer, align 4, !dbg !9090
  br label %if.end132, !dbg !9091

if.else94:                                        ; preds = %if.end86
  %91 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !9092
  %timer_ticks95 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %91, i32 0, i32 40, !dbg !9095
  %92 = load i32, i32* %timer_ticks95, align 4, !dbg !9095
  %cmp96 = icmp uge i32 %92, 4, !dbg !9096
  br i1 %cmp96, label %if.then98, label %if.else130, !dbg !9097

if.then98:                                        ; preds = %if.else94
  call void @llvm.dbg.declare(metadata i32* %ret99, metadata !9098, metadata !DIExpression()), !dbg !9100
  %93 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !9101
  %94 = load i8*, i8** %tregs, align 8, !dbg !9102
  %call100 = call i32 @try_next_permutation(%struct.happy_meal* %93, i8* %94) #12, !dbg !9103
  store i32 %call100, i32* %ret99, align 4, !dbg !9104
  %95 = load i32, i32* %ret99, align 4, !dbg !9105
  %cmp101 = icmp eq i32 %95, -1, !dbg !9107
  br i1 %cmp101, label %if.then103, label %if.end116, !dbg !9108

if.then103:                                       ; preds = %if.then98
  %96 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !9109
  %dev104 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %96, i32 0, i32 41, !dbg !9111
  %97 = load %struct.net_device*, %struct.net_device** %dev104, align 8, !dbg !9111
  %name105 = getelementptr inbounds %struct.net_device, %struct.net_device* %97, i32 0, i32 0, !dbg !9112
  %arraydecay106 = getelementptr inbounds [16 x i8], [16 x i8]* %name105, i64 0, i64 0, !dbg !9109
  %call107 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.23, i64 0, i64 0), i8* %arraydecay106) #13, !dbg !9113
  %98 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !9114
  %call108 = call i32 @happy_meal_init(%struct.happy_meal* %98) #12, !dbg !9115
  store i32 %call108, i32* %ret99, align 4, !dbg !9116
  %99 = load i32, i32* %ret99, align 4, !dbg !9117
  %tobool109 = icmp ne i32 %99, 0, !dbg !9117
  br i1 %tobool109, label %if.then110, label %if.end115, !dbg !9119

if.then110:                                       ; preds = %if.then103
  %100 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !9120
  %dev111 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %100, i32 0, i32 41, !dbg !9122
  %101 = load %struct.net_device*, %struct.net_device** %dev111, align 8, !dbg !9122
  %name112 = getelementptr inbounds %struct.net_device, %struct.net_device* %101, i32 0, i32 0, !dbg !9123
  %arraydecay113 = getelementptr inbounds [16 x i8], [16 x i8]* %name112, i64 0, i64 0, !dbg !9120
  %call114 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.24, i64 0, i64 0), i8* %arraydecay113) #13, !dbg !9124
  br label %if.end115, !dbg !9125

if.end115:                                        ; preds = %if.then110, %if.then103
  br label %out, !dbg !9126

if.end116:                                        ; preds = %if.then98
  %102 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !9127
  %call117 = call i32 @is_lucent_phy(%struct.happy_meal* %102) #12, !dbg !9129
  %tobool118 = icmp ne i32 %call117, 0, !dbg !9129
  br i1 %tobool118, label %if.end128, label %if.then119, !dbg !9130

if.then119:                                       ; preds = %if.end116
  %103 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !9131
  %104 = load i8*, i8** %tregs, align 8, !dbg !9133
  %call120 = call i32 @happy_meal_tcvr_read(%struct.happy_meal* %103, i8* %104, i32 23) #12, !dbg !9134
  %conv121 = trunc i32 %call120 to i16, !dbg !9134
  %105 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !9135
  %sw_csconfig122 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %105, i32 0, i32 29, !dbg !9136
  store i16 %conv121, i16* %sw_csconfig122, align 4, !dbg !9137
  %106 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !9138
  %sw_csconfig123 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %106, i32 0, i32 29, !dbg !9139
  %107 = load i16, i16* %sw_csconfig123, align 4, !dbg !9140
  %conv124 = zext i16 %107 to i32, !dbg !9140
  %or125 = or i32 %conv124, 16, !dbg !9140
  %conv126 = trunc i32 %or125 to i16, !dbg !9140
  store i16 %conv126, i16* %sw_csconfig123, align 4, !dbg !9140
  %108 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !9141
  %109 = load i8*, i8** %tregs, align 8, !dbg !9142
  %110 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !9143
  %sw_csconfig127 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %110, i32 0, i32 29, !dbg !9144
  %111 = load i16, i16* %sw_csconfig127, align 4, !dbg !9144
  call void @happy_meal_tcvr_write(%struct.happy_meal* %108, i8* %109, i32 23, i16 zeroext %111) #12, !dbg !9145
  br label %if.end128, !dbg !9146

if.end128:                                        ; preds = %if.then119, %if.end116
  %112 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !9147
  %timer_ticks129 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %112, i32 0, i32 40, !dbg !9148
  store i32 0, i32* %timer_ticks129, align 4, !dbg !9149
  store i32 1, i32* %restart_timer, align 4, !dbg !9150
  br label %if.end131, !dbg !9151

if.else130:                                       ; preds = %if.else94
  store i32 1, i32* %restart_timer, align 4, !dbg !9152
  br label %if.end131

if.end131:                                        ; preds = %if.else130, %if.end128
  br label %if.end132

if.end132:                                        ; preds = %if.end131, %if.then91
  br label %sw.epilog, !dbg !9154

sw.bb133:                                         ; preds = %do.end
  br label %sw.default, !dbg !9154

sw.default:                                       ; preds = %do.end, %sw.bb133
  %113 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !9155
  %dev134 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %113, i32 0, i32 41, !dbg !9156
  %114 = load %struct.net_device*, %struct.net_device** %dev134, align 8, !dbg !9156
  %name135 = getelementptr inbounds %struct.net_device, %struct.net_device* %114, i32 0, i32 0, !dbg !9157
  %arraydecay136 = getelementptr inbounds [16 x i8], [16 x i8]* %name135, i64 0, i64 0, !dbg !9155
  %call137 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.25, i64 0, i64 0), i8* %arraydecay136) #13, !dbg !9158
  store i32 0, i32* %restart_timer, align 4, !dbg !9159
  %115 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !9160
  %timer_ticks138 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %115, i32 0, i32 40, !dbg !9161
  store i32 0, i32* %timer_ticks138, align 4, !dbg !9162
  %116 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !9163
  %timer_state139 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %116, i32 0, i32 39, !dbg !9164
  store i32 3, i32* %timer_state139, align 8, !dbg !9165
  br label %sw.epilog, !dbg !9166

sw.epilog:                                        ; preds = %sw.default, %if.end132, %if.end85, %if.end71, %if.end52, %if.end29
  %117 = load i32, i32* %restart_timer, align 4, !dbg !9167
  %tobool140 = icmp ne i32 %117, 0, !dbg !9167
  br i1 %tobool140, label %if.then141, label %if.end143, !dbg !9169

if.then141:                                       ; preds = %sw.epilog
  %118 = load volatile i64, i64* @jiffies, align 8, !dbg !9170
  %add = add i64 %118, 300, !dbg !9172
  %119 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !9173
  %happy_timer = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %119, i32 0, i32 38, !dbg !9174
  %expires = getelementptr inbounds %struct.timer_list, %struct.timer_list* %happy_timer, i32 0, i32 1, !dbg !9175
  store i64 %add, i64* %expires, align 8, !dbg !9176
  %120 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !9177
  %happy_timer142 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %120, i32 0, i32 38, !dbg !9178
  call void @add_timer(%struct.timer_list* %happy_timer142) #12, !dbg !9179
  br label %if.end143, !dbg !9180

if.end143:                                        ; preds = %if.then141, %sw.epilog
  br label %out, !dbg !9167

out:                                              ; preds = %if.end143, %if.end115
  call void @llvm.dbg.label(metadata !9181), !dbg !9182
  %121 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !9183
  %happy_lock144 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %121, i32 0, i32 4, !dbg !9184
  store %struct.spinlock* %happy_lock144, %struct.spinlock** %lock.addr.i145, align 8
  call void @arch_local_irq_enable() #14, !dbg !9185
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #11, !dbg !9186, !srcloc !8229
  %122 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i145, align 8, !dbg !9187
  %123 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %122, i32 0, i32 0, !dbg !9187
  %rlock.i146 = bitcast %union.anon.1* %123 to %struct.raw_spinlock*, !dbg !9187
  ret void, !dbg !9188
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @happy_meal_set_initial_advertisement(%struct.happy_meal* %hp) #1 !dbg !9189 {
entry:
  %hp.addr = alloca %struct.happy_meal*, align 8
  %tregs = alloca i8*, align 8
  %bregs = alloca i8*, align 8
  %gregs = alloca i8*, align 8
  store %struct.happy_meal* %hp, %struct.happy_meal** %hp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.happy_meal** %hp.addr, metadata !9192, metadata !DIExpression()), !dbg !9193
  call void @llvm.dbg.declare(metadata i8** %tregs, metadata !9194, metadata !DIExpression()), !dbg !9195
  %0 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !9196
  %tcvregs = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %0, i32 0, i32 14, !dbg !9197
  %1 = load i8*, i8** %tcvregs, align 8, !dbg !9197
  store i8* %1, i8** %tregs, align 8, !dbg !9195
  call void @llvm.dbg.declare(metadata i8** %bregs, metadata !9198, metadata !DIExpression()), !dbg !9199
  %2 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !9200
  %bigmacregs = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %2, i32 0, i32 13, !dbg !9201
  %3 = load i8*, i8** %bigmacregs, align 8, !dbg !9201
  store i8* %3, i8** %bregs, align 8, !dbg !9199
  call void @llvm.dbg.declare(metadata i8** %gregs, metadata !9202, metadata !DIExpression()), !dbg !9203
  %4 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !9204
  %gregs1 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %4, i32 0, i32 0, !dbg !9205
  %5 = load i8*, i8** %gregs1, align 8, !dbg !9205
  store i8* %5, i8** %gregs, align 8, !dbg !9203
  %6 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !9206
  %7 = load i8*, i8** %gregs, align 8, !dbg !9207
  call void @happy_meal_stop(%struct.happy_meal* %6, i8* %7) #12, !dbg !9208
  %8 = load i8*, i8** %tregs, align 8, !dbg !9209
  %add.ptr = getelementptr i8, i8* %8, i64 20, !dbg !9209
  call void @writel(i32 65535, i8* %add.ptr) #12, !dbg !9209
  %9 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !9210
  %happy_flags = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %9, i32 0, i32 16, !dbg !9212
  %10 = load i32, i32* %happy_flags, align 8, !dbg !9212
  %and = and i32 %10, 2, !dbg !9213
  %tobool = icmp ne i32 %and, 0, !dbg !9213
  br i1 %tobool, label %if.then, label %if.else, !dbg !9214

if.then:                                          ; preds = %entry
  %11 = load i8*, i8** %tregs, align 8, !dbg !9215
  %add.ptr2 = getelementptr i8, i8* %11, i64 16, !dbg !9215
  %call = call i32 @readl(i8* %add.ptr2) #12, !dbg !9215
  %and3 = and i32 %call, -5, !dbg !9215
  %12 = load i8*, i8** %tregs, align 8, !dbg !9215
  %add.ptr4 = getelementptr i8, i8* %12, i64 16, !dbg !9215
  call void @writel(i32 %and3, i8* %add.ptr4) #12, !dbg !9215
  br label %if.end, !dbg !9215

if.else:                                          ; preds = %entry
  %13 = load i8*, i8** %tregs, align 8, !dbg !9216
  %add.ptr5 = getelementptr i8, i8* %13, i64 16, !dbg !9216
  %call6 = call i32 @readl(i8* %add.ptr5) #12, !dbg !9216
  %or = or i32 %call6, 4, !dbg !9216
  %14 = load i8*, i8** %tregs, align 8, !dbg !9216
  %add.ptr7 = getelementptr i8, i8* %14, i64 16, !dbg !9216
  call void @writel(i32 %or, i8* %add.ptr7) #12, !dbg !9216
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %15 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !9217
  %16 = load i8*, i8** %tregs, align 8, !dbg !9218
  call void @happy_meal_transceiver_check(%struct.happy_meal* %15, i8* %16) #12, !dbg !9219
  %17 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !9220
  %tcvr_type = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %17, i32 0, i32 18, !dbg !9221
  %18 = load i32, i32* %tcvr_type, align 8, !dbg !9221
  switch i32 %18, label %sw.epilog [
    i32 2, label %sw.bb
    i32 1, label %sw.bb8
    i32 0, label %sw.bb10
  ], !dbg !9222

sw.bb:                                            ; preds = %if.end
  br label %return, !dbg !9223

sw.bb8:                                           ; preds = %if.end
  %19 = load i8*, i8** %bregs, align 8, !dbg !9225
  %add.ptr9 = getelementptr i8, i8* %19, i64 0, !dbg !9225
  call void @writel(i32 0, i8* %add.ptr9) #12, !dbg !9225
  br label %sw.epilog, !dbg !9226

sw.bb10:                                          ; preds = %if.end
  %20 = load i8*, i8** %bregs, align 8, !dbg !9227
  %add.ptr11 = getelementptr i8, i8* %20, i64 0, !dbg !9227
  call void @writel(i32 8, i8* %add.ptr11) #12, !dbg !9227
  br label %sw.epilog, !dbg !9228

sw.epilog:                                        ; preds = %if.end, %sw.bb10, %sw.bb8
  %21 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !9229
  %22 = load i8*, i8** %tregs, align 8, !dbg !9231
  %call12 = call i32 @happy_meal_tcvr_reset(%struct.happy_meal* %21, i8* %22) #12, !dbg !9232
  %tobool13 = icmp ne i32 %call12, 0, !dbg !9232
  br i1 %tobool13, label %if.then14, label %if.end15, !dbg !9233

if.then14:                                        ; preds = %sw.epilog
  br label %return, !dbg !9234

if.end15:                                         ; preds = %sw.epilog
  %23 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !9235
  %24 = load i8*, i8** %tregs, align 8, !dbg !9236
  %call16 = call i32 @happy_meal_tcvr_read(%struct.happy_meal* %23, i8* %24, i32 1) #12, !dbg !9237
  %conv = trunc i32 %call16 to i16, !dbg !9237
  %25 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !9238
  %sw_bmsr = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %25, i32 0, i32 23, !dbg !9239
  store i16 %conv, i16* %sw_bmsr, align 8, !dbg !9240
  %26 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !9241
  %27 = load i8*, i8** %tregs, align 8, !dbg !9242
  %call17 = call i32 @happy_meal_tcvr_read(%struct.happy_meal* %26, i8* %27, i32 4) #12, !dbg !9243
  %conv18 = trunc i32 %call17 to i16, !dbg !9243
  %28 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !9244
  %sw_advertise = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %28, i32 0, i32 26, !dbg !9245
  store i16 %conv18, i16* %sw_advertise, align 2, !dbg !9246
  %29 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !9247
  %sw_bmsr19 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %29, i32 0, i32 23, !dbg !9249
  %30 = load i16, i16* %sw_bmsr19, align 8, !dbg !9249
  %conv20 = zext i16 %30 to i32, !dbg !9247
  %and21 = and i32 %conv20, 2048, !dbg !9250
  %tobool22 = icmp ne i32 %and21, 0, !dbg !9250
  br i1 %tobool22, label %if.then23, label %if.else28, !dbg !9251

if.then23:                                        ; preds = %if.end15
  %31 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !9252
  %sw_advertise24 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %31, i32 0, i32 26, !dbg !9253
  %32 = load i16, i16* %sw_advertise24, align 2, !dbg !9254
  %conv25 = zext i16 %32 to i32, !dbg !9254
  %or26 = or i32 %conv25, 32, !dbg !9254
  %conv27 = trunc i32 %or26 to i16, !dbg !9254
  store i16 %conv27, i16* %sw_advertise24, align 2, !dbg !9254
  br label %if.end33, !dbg !9252

if.else28:                                        ; preds = %if.end15
  %33 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !9255
  %sw_advertise29 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %33, i32 0, i32 26, !dbg !9256
  %34 = load i16, i16* %sw_advertise29, align 2, !dbg !9257
  %conv30 = zext i16 %34 to i32, !dbg !9257
  %and31 = and i32 %conv30, -33, !dbg !9257
  %conv32 = trunc i32 %and31 to i16, !dbg !9257
  store i16 %conv32, i16* %sw_advertise29, align 2, !dbg !9257
  br label %if.end33

if.end33:                                         ; preds = %if.else28, %if.then23
  %35 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !9258
  %sw_bmsr34 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %35, i32 0, i32 23, !dbg !9260
  %36 = load i16, i16* %sw_bmsr34, align 8, !dbg !9260
  %conv35 = zext i16 %36 to i32, !dbg !9258
  %and36 = and i32 %conv35, 4096, !dbg !9261
  %tobool37 = icmp ne i32 %and36, 0, !dbg !9261
  br i1 %tobool37, label %if.then38, label %if.else43, !dbg !9262

if.then38:                                        ; preds = %if.end33
  %37 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !9263
  %sw_advertise39 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %37, i32 0, i32 26, !dbg !9264
  %38 = load i16, i16* %sw_advertise39, align 2, !dbg !9265
  %conv40 = zext i16 %38 to i32, !dbg !9265
  %or41 = or i32 %conv40, 64, !dbg !9265
  %conv42 = trunc i32 %or41 to i16, !dbg !9265
  store i16 %conv42, i16* %sw_advertise39, align 2, !dbg !9265
  br label %if.end48, !dbg !9263

if.else43:                                        ; preds = %if.end33
  %39 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !9266
  %sw_advertise44 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %39, i32 0, i32 26, !dbg !9267
  %40 = load i16, i16* %sw_advertise44, align 2, !dbg !9268
  %conv45 = zext i16 %40 to i32, !dbg !9268
  %and46 = and i32 %conv45, -65, !dbg !9268
  %conv47 = trunc i32 %and46 to i16, !dbg !9268
  store i16 %conv47, i16* %sw_advertise44, align 2, !dbg !9268
  br label %if.end48

if.end48:                                         ; preds = %if.else43, %if.then38
  %41 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !9269
  %sw_bmsr49 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %41, i32 0, i32 23, !dbg !9271
  %42 = load i16, i16* %sw_bmsr49, align 8, !dbg !9271
  %conv50 = zext i16 %42 to i32, !dbg !9269
  %and51 = and i32 %conv50, 8192, !dbg !9272
  %tobool52 = icmp ne i32 %and51, 0, !dbg !9272
  br i1 %tobool52, label %if.then53, label %if.else58, !dbg !9273

if.then53:                                        ; preds = %if.end48
  %43 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !9274
  %sw_advertise54 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %43, i32 0, i32 26, !dbg !9275
  %44 = load i16, i16* %sw_advertise54, align 2, !dbg !9276
  %conv55 = zext i16 %44 to i32, !dbg !9276
  %or56 = or i32 %conv55, 128, !dbg !9276
  %conv57 = trunc i32 %or56 to i16, !dbg !9276
  store i16 %conv57, i16* %sw_advertise54, align 2, !dbg !9276
  br label %if.end63, !dbg !9274

if.else58:                                        ; preds = %if.end48
  %45 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !9277
  %sw_advertise59 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %45, i32 0, i32 26, !dbg !9278
  %46 = load i16, i16* %sw_advertise59, align 2, !dbg !9279
  %conv60 = zext i16 %46 to i32, !dbg !9279
  %and61 = and i32 %conv60, -129, !dbg !9279
  %conv62 = trunc i32 %and61 to i16, !dbg !9279
  store i16 %conv62, i16* %sw_advertise59, align 2, !dbg !9279
  br label %if.end63

if.end63:                                         ; preds = %if.else58, %if.then53
  %47 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !9280
  %sw_bmsr64 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %47, i32 0, i32 23, !dbg !9282
  %48 = load i16, i16* %sw_bmsr64, align 8, !dbg !9282
  %conv65 = zext i16 %48 to i32, !dbg !9280
  %and66 = and i32 %conv65, 16384, !dbg !9283
  %tobool67 = icmp ne i32 %and66, 0, !dbg !9283
  br i1 %tobool67, label %if.then68, label %if.else73, !dbg !9284

if.then68:                                        ; preds = %if.end63
  %49 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !9285
  %sw_advertise69 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %49, i32 0, i32 26, !dbg !9286
  %50 = load i16, i16* %sw_advertise69, align 2, !dbg !9287
  %conv70 = zext i16 %50 to i32, !dbg !9287
  %or71 = or i32 %conv70, 256, !dbg !9287
  %conv72 = trunc i32 %or71 to i16, !dbg !9287
  store i16 %conv72, i16* %sw_advertise69, align 2, !dbg !9287
  br label %if.end78, !dbg !9285

if.else73:                                        ; preds = %if.end63
  %51 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !9288
  %sw_advertise74 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %51, i32 0, i32 26, !dbg !9289
  %52 = load i16, i16* %sw_advertise74, align 2, !dbg !9290
  %conv75 = zext i16 %52 to i32, !dbg !9290
  %and76 = and i32 %conv75, -257, !dbg !9290
  %conv77 = trunc i32 %and76 to i16, !dbg !9290
  store i16 %conv77, i16* %sw_advertise74, align 2, !dbg !9290
  br label %if.end78

if.end78:                                         ; preds = %if.else73, %if.then68
  %53 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !9291
  %54 = load i8*, i8** %tregs, align 8, !dbg !9292
  %55 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !9293
  %sw_advertise79 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %55, i32 0, i32 26, !dbg !9294
  %56 = load i16, i16* %sw_advertise79, align 2, !dbg !9294
  call void @happy_meal_tcvr_write(%struct.happy_meal* %53, i8* %54, i32 4, i16 zeroext %56) #12, !dbg !9295
  br label %return, !dbg !9296

return:                                           ; preds = %if.end78, %if.then14, %sw.bb
  ret void, !dbg !9296
}

; Function Attrs: noredzone
declare dso_local i32 @register_netdev(%struct.net_device*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pci_set_drvdata(%struct.pci_dev* %pdev, i8* %data) #1 !dbg !9297 {
entry:
  %pdev.addr = alloca %struct.pci_dev*, align 8
  %data.addr = alloca i8*, align 8
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !9300, metadata !DIExpression()), !dbg !9301
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !9302, metadata !DIExpression()), !dbg !9303
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !9304
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 41, !dbg !9305
  %1 = load i8*, i8** %data.addr, align 8, !dbg !9306
  call void @dev_set_drvdata(%struct.device* %dev, i8* %1) #12, !dbg !9307
  ret void, !dbg !9308
}

; Function Attrs: noredzone
declare dso_local i32 @strncmp(i8*, i8*, i64) #2

; Function Attrs: noredzone
declare dso_local i64 @simple_strtoul(i8*, i8**, i32) #2

; Function Attrs: noredzone
declare dso_local i32 @sprintf(i8*, i8*, ...) #2

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #3

; Function Attrs: noredzone
declare dso_local void @iounmap(i8*) #2

; Function Attrs: noredzone
declare dso_local void @pci_release_regions(%struct.pci_dev*) #2

; Function Attrs: noredzone
declare dso_local void @free_netdev(%struct.net_device*) #2

; Function Attrs: nounwind readnone willreturn
declare i1 @llvm.is.constant.i64(i64) #6

; Function Attrs: noredzone
declare dso_local noalias i8* @__kmalloc(i64, i32) #2

; Function Attrs: nounwind willreturn
declare void @llvm.assume(i1) #7

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @get_order(i64 %size) #8 !dbg !9309 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !9313, metadata !DIExpression()), !dbg !9318
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !9320, metadata !DIExpression()), !dbg !9321
  %retval = alloca i32, align 4
  %size.addr = alloca i64, align 8
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !9322, metadata !DIExpression()), !dbg !9323
  %0 = load i64, i64* %size.addr, align 8, !dbg !9324
  %1 = call i1 @llvm.is.constant.i64(i64 %0), !dbg !9326
  br i1 %1, label %if.then, label %if.end447, !dbg !9327

if.then:                                          ; preds = %entry
  %2 = load i64, i64* %size.addr, align 8, !dbg !9328
  %tobool = icmp ne i64 %2, 0, !dbg !9328
  br i1 %tobool, label %if.end, label %if.then1, !dbg !9331

if.then1:                                         ; preds = %if.then
  store i32 52, i32* %retval, align 4, !dbg !9332
  br label %return, !dbg !9332

if.end:                                           ; preds = %if.then
  %3 = load i64, i64* %size.addr, align 8, !dbg !9333
  %cmp = icmp ult i64 %3, 4096, !dbg !9335
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !9336

if.then2:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !9337
  br label %return, !dbg !9337

if.end3:                                          ; preds = %if.end
  %4 = load i64, i64* %size.addr, align 8, !dbg !9338
  %sub = sub i64 %4, 1, !dbg !9338
  %5 = call i1 @llvm.is.constant.i64(i64 %sub), !dbg !9338
  br i1 %5, label %cond.true, label %cond.false442, !dbg !9338

cond.true:                                        ; preds = %if.end3
  %6 = load i64, i64* %size.addr, align 8, !dbg !9338
  %sub4 = sub i64 %6, 1, !dbg !9338
  %7 = call i1 @llvm.is.constant.i64(i64 %sub4), !dbg !9338
  br i1 %7, label %cond.true5, label %cond.false439, !dbg !9338

cond.true5:                                       ; preds = %cond.true
  %8 = load i64, i64* %size.addr, align 8, !dbg !9338
  %sub6 = sub i64 %8, 1, !dbg !9338
  %cmp7 = icmp ult i64 %sub6, 2, !dbg !9338
  br i1 %cmp7, label %cond.true8, label %cond.false, !dbg !9338

cond.true8:                                       ; preds = %cond.true5
  br label %cond.end437, !dbg !9338

cond.false:                                       ; preds = %cond.true5
  %9 = load i64, i64* %size.addr, align 8, !dbg !9338
  %sub9 = sub i64 %9, 1, !dbg !9338
  %and = and i64 %sub9, -9223372036854775808, !dbg !9338
  %tobool10 = icmp ne i64 %and, 0, !dbg !9338
  br i1 %tobool10, label %cond.true11, label %cond.false12, !dbg !9338

cond.true11:                                      ; preds = %cond.false
  br label %cond.end435, !dbg !9338

cond.false12:                                     ; preds = %cond.false
  %10 = load i64, i64* %size.addr, align 8, !dbg !9338
  %sub13 = sub i64 %10, 1, !dbg !9338
  %and14 = and i64 %sub13, 4611686018427387904, !dbg !9338
  %tobool15 = icmp ne i64 %and14, 0, !dbg !9338
  br i1 %tobool15, label %cond.true16, label %cond.false17, !dbg !9338

cond.true16:                                      ; preds = %cond.false12
  br label %cond.end433, !dbg !9338

cond.false17:                                     ; preds = %cond.false12
  %11 = load i64, i64* %size.addr, align 8, !dbg !9338
  %sub18 = sub i64 %11, 1, !dbg !9338
  %and19 = and i64 %sub18, 2305843009213693952, !dbg !9338
  %tobool20 = icmp ne i64 %and19, 0, !dbg !9338
  br i1 %tobool20, label %cond.true21, label %cond.false22, !dbg !9338

cond.true21:                                      ; preds = %cond.false17
  br label %cond.end431, !dbg !9338

cond.false22:                                     ; preds = %cond.false17
  %12 = load i64, i64* %size.addr, align 8, !dbg !9338
  %sub23 = sub i64 %12, 1, !dbg !9338
  %and24 = and i64 %sub23, 1152921504606846976, !dbg !9338
  %tobool25 = icmp ne i64 %and24, 0, !dbg !9338
  br i1 %tobool25, label %cond.true26, label %cond.false27, !dbg !9338

cond.true26:                                      ; preds = %cond.false22
  br label %cond.end429, !dbg !9338

cond.false27:                                     ; preds = %cond.false22
  %13 = load i64, i64* %size.addr, align 8, !dbg !9338
  %sub28 = sub i64 %13, 1, !dbg !9338
  %and29 = and i64 %sub28, 576460752303423488, !dbg !9338
  %tobool30 = icmp ne i64 %and29, 0, !dbg !9338
  br i1 %tobool30, label %cond.true31, label %cond.false32, !dbg !9338

cond.true31:                                      ; preds = %cond.false27
  br label %cond.end427, !dbg !9338

cond.false32:                                     ; preds = %cond.false27
  %14 = load i64, i64* %size.addr, align 8, !dbg !9338
  %sub33 = sub i64 %14, 1, !dbg !9338
  %and34 = and i64 %sub33, 288230376151711744, !dbg !9338
  %tobool35 = icmp ne i64 %and34, 0, !dbg !9338
  br i1 %tobool35, label %cond.true36, label %cond.false37, !dbg !9338

cond.true36:                                      ; preds = %cond.false32
  br label %cond.end425, !dbg !9338

cond.false37:                                     ; preds = %cond.false32
  %15 = load i64, i64* %size.addr, align 8, !dbg !9338
  %sub38 = sub i64 %15, 1, !dbg !9338
  %and39 = and i64 %sub38, 144115188075855872, !dbg !9338
  %tobool40 = icmp ne i64 %and39, 0, !dbg !9338
  br i1 %tobool40, label %cond.true41, label %cond.false42, !dbg !9338

cond.true41:                                      ; preds = %cond.false37
  br label %cond.end423, !dbg !9338

cond.false42:                                     ; preds = %cond.false37
  %16 = load i64, i64* %size.addr, align 8, !dbg !9338
  %sub43 = sub i64 %16, 1, !dbg !9338
  %and44 = and i64 %sub43, 72057594037927936, !dbg !9338
  %tobool45 = icmp ne i64 %and44, 0, !dbg !9338
  br i1 %tobool45, label %cond.true46, label %cond.false47, !dbg !9338

cond.true46:                                      ; preds = %cond.false42
  br label %cond.end421, !dbg !9338

cond.false47:                                     ; preds = %cond.false42
  %17 = load i64, i64* %size.addr, align 8, !dbg !9338
  %sub48 = sub i64 %17, 1, !dbg !9338
  %and49 = and i64 %sub48, 36028797018963968, !dbg !9338
  %tobool50 = icmp ne i64 %and49, 0, !dbg !9338
  br i1 %tobool50, label %cond.true51, label %cond.false52, !dbg !9338

cond.true51:                                      ; preds = %cond.false47
  br label %cond.end419, !dbg !9338

cond.false52:                                     ; preds = %cond.false47
  %18 = load i64, i64* %size.addr, align 8, !dbg !9338
  %sub53 = sub i64 %18, 1, !dbg !9338
  %and54 = and i64 %sub53, 18014398509481984, !dbg !9338
  %tobool55 = icmp ne i64 %and54, 0, !dbg !9338
  br i1 %tobool55, label %cond.true56, label %cond.false57, !dbg !9338

cond.true56:                                      ; preds = %cond.false52
  br label %cond.end417, !dbg !9338

cond.false57:                                     ; preds = %cond.false52
  %19 = load i64, i64* %size.addr, align 8, !dbg !9338
  %sub58 = sub i64 %19, 1, !dbg !9338
  %and59 = and i64 %sub58, 9007199254740992, !dbg !9338
  %tobool60 = icmp ne i64 %and59, 0, !dbg !9338
  br i1 %tobool60, label %cond.true61, label %cond.false62, !dbg !9338

cond.true61:                                      ; preds = %cond.false57
  br label %cond.end415, !dbg !9338

cond.false62:                                     ; preds = %cond.false57
  %20 = load i64, i64* %size.addr, align 8, !dbg !9338
  %sub63 = sub i64 %20, 1, !dbg !9338
  %and64 = and i64 %sub63, 4503599627370496, !dbg !9338
  %tobool65 = icmp ne i64 %and64, 0, !dbg !9338
  br i1 %tobool65, label %cond.true66, label %cond.false67, !dbg !9338

cond.true66:                                      ; preds = %cond.false62
  br label %cond.end413, !dbg !9338

cond.false67:                                     ; preds = %cond.false62
  %21 = load i64, i64* %size.addr, align 8, !dbg !9338
  %sub68 = sub i64 %21, 1, !dbg !9338
  %and69 = and i64 %sub68, 2251799813685248, !dbg !9338
  %tobool70 = icmp ne i64 %and69, 0, !dbg !9338
  br i1 %tobool70, label %cond.true71, label %cond.false72, !dbg !9338

cond.true71:                                      ; preds = %cond.false67
  br label %cond.end411, !dbg !9338

cond.false72:                                     ; preds = %cond.false67
  %22 = load i64, i64* %size.addr, align 8, !dbg !9338
  %sub73 = sub i64 %22, 1, !dbg !9338
  %and74 = and i64 %sub73, 1125899906842624, !dbg !9338
  %tobool75 = icmp ne i64 %and74, 0, !dbg !9338
  br i1 %tobool75, label %cond.true76, label %cond.false77, !dbg !9338

cond.true76:                                      ; preds = %cond.false72
  br label %cond.end409, !dbg !9338

cond.false77:                                     ; preds = %cond.false72
  %23 = load i64, i64* %size.addr, align 8, !dbg !9338
  %sub78 = sub i64 %23, 1, !dbg !9338
  %and79 = and i64 %sub78, 562949953421312, !dbg !9338
  %tobool80 = icmp ne i64 %and79, 0, !dbg !9338
  br i1 %tobool80, label %cond.true81, label %cond.false82, !dbg !9338

cond.true81:                                      ; preds = %cond.false77
  br label %cond.end407, !dbg !9338

cond.false82:                                     ; preds = %cond.false77
  %24 = load i64, i64* %size.addr, align 8, !dbg !9338
  %sub83 = sub i64 %24, 1, !dbg !9338
  %and84 = and i64 %sub83, 281474976710656, !dbg !9338
  %tobool85 = icmp ne i64 %and84, 0, !dbg !9338
  br i1 %tobool85, label %cond.true86, label %cond.false87, !dbg !9338

cond.true86:                                      ; preds = %cond.false82
  br label %cond.end405, !dbg !9338

cond.false87:                                     ; preds = %cond.false82
  %25 = load i64, i64* %size.addr, align 8, !dbg !9338
  %sub88 = sub i64 %25, 1, !dbg !9338
  %and89 = and i64 %sub88, 140737488355328, !dbg !9338
  %tobool90 = icmp ne i64 %and89, 0, !dbg !9338
  br i1 %tobool90, label %cond.true91, label %cond.false92, !dbg !9338

cond.true91:                                      ; preds = %cond.false87
  br label %cond.end403, !dbg !9338

cond.false92:                                     ; preds = %cond.false87
  %26 = load i64, i64* %size.addr, align 8, !dbg !9338
  %sub93 = sub i64 %26, 1, !dbg !9338
  %and94 = and i64 %sub93, 70368744177664, !dbg !9338
  %tobool95 = icmp ne i64 %and94, 0, !dbg !9338
  br i1 %tobool95, label %cond.true96, label %cond.false97, !dbg !9338

cond.true96:                                      ; preds = %cond.false92
  br label %cond.end401, !dbg !9338

cond.false97:                                     ; preds = %cond.false92
  %27 = load i64, i64* %size.addr, align 8, !dbg !9338
  %sub98 = sub i64 %27, 1, !dbg !9338
  %and99 = and i64 %sub98, 35184372088832, !dbg !9338
  %tobool100 = icmp ne i64 %and99, 0, !dbg !9338
  br i1 %tobool100, label %cond.true101, label %cond.false102, !dbg !9338

cond.true101:                                     ; preds = %cond.false97
  br label %cond.end399, !dbg !9338

cond.false102:                                    ; preds = %cond.false97
  %28 = load i64, i64* %size.addr, align 8, !dbg !9338
  %sub103 = sub i64 %28, 1, !dbg !9338
  %and104 = and i64 %sub103, 17592186044416, !dbg !9338
  %tobool105 = icmp ne i64 %and104, 0, !dbg !9338
  br i1 %tobool105, label %cond.true106, label %cond.false107, !dbg !9338

cond.true106:                                     ; preds = %cond.false102
  br label %cond.end397, !dbg !9338

cond.false107:                                    ; preds = %cond.false102
  %29 = load i64, i64* %size.addr, align 8, !dbg !9338
  %sub108 = sub i64 %29, 1, !dbg !9338
  %and109 = and i64 %sub108, 8796093022208, !dbg !9338
  %tobool110 = icmp ne i64 %and109, 0, !dbg !9338
  br i1 %tobool110, label %cond.true111, label %cond.false112, !dbg !9338

cond.true111:                                     ; preds = %cond.false107
  br label %cond.end395, !dbg !9338

cond.false112:                                    ; preds = %cond.false107
  %30 = load i64, i64* %size.addr, align 8, !dbg !9338
  %sub113 = sub i64 %30, 1, !dbg !9338
  %and114 = and i64 %sub113, 4398046511104, !dbg !9338
  %tobool115 = icmp ne i64 %and114, 0, !dbg !9338
  br i1 %tobool115, label %cond.true116, label %cond.false117, !dbg !9338

cond.true116:                                     ; preds = %cond.false112
  br label %cond.end393, !dbg !9338

cond.false117:                                    ; preds = %cond.false112
  %31 = load i64, i64* %size.addr, align 8, !dbg !9338
  %sub118 = sub i64 %31, 1, !dbg !9338
  %and119 = and i64 %sub118, 2199023255552, !dbg !9338
  %tobool120 = icmp ne i64 %and119, 0, !dbg !9338
  br i1 %tobool120, label %cond.true121, label %cond.false122, !dbg !9338

cond.true121:                                     ; preds = %cond.false117
  br label %cond.end391, !dbg !9338

cond.false122:                                    ; preds = %cond.false117
  %32 = load i64, i64* %size.addr, align 8, !dbg !9338
  %sub123 = sub i64 %32, 1, !dbg !9338
  %and124 = and i64 %sub123, 1099511627776, !dbg !9338
  %tobool125 = icmp ne i64 %and124, 0, !dbg !9338
  br i1 %tobool125, label %cond.true126, label %cond.false127, !dbg !9338

cond.true126:                                     ; preds = %cond.false122
  br label %cond.end389, !dbg !9338

cond.false127:                                    ; preds = %cond.false122
  %33 = load i64, i64* %size.addr, align 8, !dbg !9338
  %sub128 = sub i64 %33, 1, !dbg !9338
  %and129 = and i64 %sub128, 549755813888, !dbg !9338
  %tobool130 = icmp ne i64 %and129, 0, !dbg !9338
  br i1 %tobool130, label %cond.true131, label %cond.false132, !dbg !9338

cond.true131:                                     ; preds = %cond.false127
  br label %cond.end387, !dbg !9338

cond.false132:                                    ; preds = %cond.false127
  %34 = load i64, i64* %size.addr, align 8, !dbg !9338
  %sub133 = sub i64 %34, 1, !dbg !9338
  %and134 = and i64 %sub133, 274877906944, !dbg !9338
  %tobool135 = icmp ne i64 %and134, 0, !dbg !9338
  br i1 %tobool135, label %cond.true136, label %cond.false137, !dbg !9338

cond.true136:                                     ; preds = %cond.false132
  br label %cond.end385, !dbg !9338

cond.false137:                                    ; preds = %cond.false132
  %35 = load i64, i64* %size.addr, align 8, !dbg !9338
  %sub138 = sub i64 %35, 1, !dbg !9338
  %and139 = and i64 %sub138, 137438953472, !dbg !9338
  %tobool140 = icmp ne i64 %and139, 0, !dbg !9338
  br i1 %tobool140, label %cond.true141, label %cond.false142, !dbg !9338

cond.true141:                                     ; preds = %cond.false137
  br label %cond.end383, !dbg !9338

cond.false142:                                    ; preds = %cond.false137
  %36 = load i64, i64* %size.addr, align 8, !dbg !9338
  %sub143 = sub i64 %36, 1, !dbg !9338
  %and144 = and i64 %sub143, 68719476736, !dbg !9338
  %tobool145 = icmp ne i64 %and144, 0, !dbg !9338
  br i1 %tobool145, label %cond.true146, label %cond.false147, !dbg !9338

cond.true146:                                     ; preds = %cond.false142
  br label %cond.end381, !dbg !9338

cond.false147:                                    ; preds = %cond.false142
  %37 = load i64, i64* %size.addr, align 8, !dbg !9338
  %sub148 = sub i64 %37, 1, !dbg !9338
  %and149 = and i64 %sub148, 34359738368, !dbg !9338
  %tobool150 = icmp ne i64 %and149, 0, !dbg !9338
  br i1 %tobool150, label %cond.true151, label %cond.false152, !dbg !9338

cond.true151:                                     ; preds = %cond.false147
  br label %cond.end379, !dbg !9338

cond.false152:                                    ; preds = %cond.false147
  %38 = load i64, i64* %size.addr, align 8, !dbg !9338
  %sub153 = sub i64 %38, 1, !dbg !9338
  %and154 = and i64 %sub153, 17179869184, !dbg !9338
  %tobool155 = icmp ne i64 %and154, 0, !dbg !9338
  br i1 %tobool155, label %cond.true156, label %cond.false157, !dbg !9338

cond.true156:                                     ; preds = %cond.false152
  br label %cond.end377, !dbg !9338

cond.false157:                                    ; preds = %cond.false152
  %39 = load i64, i64* %size.addr, align 8, !dbg !9338
  %sub158 = sub i64 %39, 1, !dbg !9338
  %and159 = and i64 %sub158, 8589934592, !dbg !9338
  %tobool160 = icmp ne i64 %and159, 0, !dbg !9338
  br i1 %tobool160, label %cond.true161, label %cond.false162, !dbg !9338

cond.true161:                                     ; preds = %cond.false157
  br label %cond.end375, !dbg !9338

cond.false162:                                    ; preds = %cond.false157
  %40 = load i64, i64* %size.addr, align 8, !dbg !9338
  %sub163 = sub i64 %40, 1, !dbg !9338
  %and164 = and i64 %sub163, 4294967296, !dbg !9338
  %tobool165 = icmp ne i64 %and164, 0, !dbg !9338
  br i1 %tobool165, label %cond.true166, label %cond.false167, !dbg !9338

cond.true166:                                     ; preds = %cond.false162
  br label %cond.end373, !dbg !9338

cond.false167:                                    ; preds = %cond.false162
  %41 = load i64, i64* %size.addr, align 8, !dbg !9338
  %sub168 = sub i64 %41, 1, !dbg !9338
  %and169 = and i64 %sub168, 2147483648, !dbg !9338
  %tobool170 = icmp ne i64 %and169, 0, !dbg !9338
  br i1 %tobool170, label %cond.true171, label %cond.false172, !dbg !9338

cond.true171:                                     ; preds = %cond.false167
  br label %cond.end371, !dbg !9338

cond.false172:                                    ; preds = %cond.false167
  %42 = load i64, i64* %size.addr, align 8, !dbg !9338
  %sub173 = sub i64 %42, 1, !dbg !9338
  %and174 = and i64 %sub173, 1073741824, !dbg !9338
  %tobool175 = icmp ne i64 %and174, 0, !dbg !9338
  br i1 %tobool175, label %cond.true176, label %cond.false177, !dbg !9338

cond.true176:                                     ; preds = %cond.false172
  br label %cond.end369, !dbg !9338

cond.false177:                                    ; preds = %cond.false172
  %43 = load i64, i64* %size.addr, align 8, !dbg !9338
  %sub178 = sub i64 %43, 1, !dbg !9338
  %and179 = and i64 %sub178, 536870912, !dbg !9338
  %tobool180 = icmp ne i64 %and179, 0, !dbg !9338
  br i1 %tobool180, label %cond.true181, label %cond.false182, !dbg !9338

cond.true181:                                     ; preds = %cond.false177
  br label %cond.end367, !dbg !9338

cond.false182:                                    ; preds = %cond.false177
  %44 = load i64, i64* %size.addr, align 8, !dbg !9338
  %sub183 = sub i64 %44, 1, !dbg !9338
  %and184 = and i64 %sub183, 268435456, !dbg !9338
  %tobool185 = icmp ne i64 %and184, 0, !dbg !9338
  br i1 %tobool185, label %cond.true186, label %cond.false187, !dbg !9338

cond.true186:                                     ; preds = %cond.false182
  br label %cond.end365, !dbg !9338

cond.false187:                                    ; preds = %cond.false182
  %45 = load i64, i64* %size.addr, align 8, !dbg !9338
  %sub188 = sub i64 %45, 1, !dbg !9338
  %and189 = and i64 %sub188, 134217728, !dbg !9338
  %tobool190 = icmp ne i64 %and189, 0, !dbg !9338
  br i1 %tobool190, label %cond.true191, label %cond.false192, !dbg !9338

cond.true191:                                     ; preds = %cond.false187
  br label %cond.end363, !dbg !9338

cond.false192:                                    ; preds = %cond.false187
  %46 = load i64, i64* %size.addr, align 8, !dbg !9338
  %sub193 = sub i64 %46, 1, !dbg !9338
  %and194 = and i64 %sub193, 67108864, !dbg !9338
  %tobool195 = icmp ne i64 %and194, 0, !dbg !9338
  br i1 %tobool195, label %cond.true196, label %cond.false197, !dbg !9338

cond.true196:                                     ; preds = %cond.false192
  br label %cond.end361, !dbg !9338

cond.false197:                                    ; preds = %cond.false192
  %47 = load i64, i64* %size.addr, align 8, !dbg !9338
  %sub198 = sub i64 %47, 1, !dbg !9338
  %and199 = and i64 %sub198, 33554432, !dbg !9338
  %tobool200 = icmp ne i64 %and199, 0, !dbg !9338
  br i1 %tobool200, label %cond.true201, label %cond.false202, !dbg !9338

cond.true201:                                     ; preds = %cond.false197
  br label %cond.end359, !dbg !9338

cond.false202:                                    ; preds = %cond.false197
  %48 = load i64, i64* %size.addr, align 8, !dbg !9338
  %sub203 = sub i64 %48, 1, !dbg !9338
  %and204 = and i64 %sub203, 16777216, !dbg !9338
  %tobool205 = icmp ne i64 %and204, 0, !dbg !9338
  br i1 %tobool205, label %cond.true206, label %cond.false207, !dbg !9338

cond.true206:                                     ; preds = %cond.false202
  br label %cond.end357, !dbg !9338

cond.false207:                                    ; preds = %cond.false202
  %49 = load i64, i64* %size.addr, align 8, !dbg !9338
  %sub208 = sub i64 %49, 1, !dbg !9338
  %and209 = and i64 %sub208, 8388608, !dbg !9338
  %tobool210 = icmp ne i64 %and209, 0, !dbg !9338
  br i1 %tobool210, label %cond.true211, label %cond.false212, !dbg !9338

cond.true211:                                     ; preds = %cond.false207
  br label %cond.end355, !dbg !9338

cond.false212:                                    ; preds = %cond.false207
  %50 = load i64, i64* %size.addr, align 8, !dbg !9338
  %sub213 = sub i64 %50, 1, !dbg !9338
  %and214 = and i64 %sub213, 4194304, !dbg !9338
  %tobool215 = icmp ne i64 %and214, 0, !dbg !9338
  br i1 %tobool215, label %cond.true216, label %cond.false217, !dbg !9338

cond.true216:                                     ; preds = %cond.false212
  br label %cond.end353, !dbg !9338

cond.false217:                                    ; preds = %cond.false212
  %51 = load i64, i64* %size.addr, align 8, !dbg !9338
  %sub218 = sub i64 %51, 1, !dbg !9338
  %and219 = and i64 %sub218, 2097152, !dbg !9338
  %tobool220 = icmp ne i64 %and219, 0, !dbg !9338
  br i1 %tobool220, label %cond.true221, label %cond.false222, !dbg !9338

cond.true221:                                     ; preds = %cond.false217
  br label %cond.end351, !dbg !9338

cond.false222:                                    ; preds = %cond.false217
  %52 = load i64, i64* %size.addr, align 8, !dbg !9338
  %sub223 = sub i64 %52, 1, !dbg !9338
  %and224 = and i64 %sub223, 1048576, !dbg !9338
  %tobool225 = icmp ne i64 %and224, 0, !dbg !9338
  br i1 %tobool225, label %cond.true226, label %cond.false227, !dbg !9338

cond.true226:                                     ; preds = %cond.false222
  br label %cond.end349, !dbg !9338

cond.false227:                                    ; preds = %cond.false222
  %53 = load i64, i64* %size.addr, align 8, !dbg !9338
  %sub228 = sub i64 %53, 1, !dbg !9338
  %and229 = and i64 %sub228, 524288, !dbg !9338
  %tobool230 = icmp ne i64 %and229, 0, !dbg !9338
  br i1 %tobool230, label %cond.true231, label %cond.false232, !dbg !9338

cond.true231:                                     ; preds = %cond.false227
  br label %cond.end347, !dbg !9338

cond.false232:                                    ; preds = %cond.false227
  %54 = load i64, i64* %size.addr, align 8, !dbg !9338
  %sub233 = sub i64 %54, 1, !dbg !9338
  %and234 = and i64 %sub233, 262144, !dbg !9338
  %tobool235 = icmp ne i64 %and234, 0, !dbg !9338
  br i1 %tobool235, label %cond.true236, label %cond.false237, !dbg !9338

cond.true236:                                     ; preds = %cond.false232
  br label %cond.end345, !dbg !9338

cond.false237:                                    ; preds = %cond.false232
  %55 = load i64, i64* %size.addr, align 8, !dbg !9338
  %sub238 = sub i64 %55, 1, !dbg !9338
  %and239 = and i64 %sub238, 131072, !dbg !9338
  %tobool240 = icmp ne i64 %and239, 0, !dbg !9338
  br i1 %tobool240, label %cond.true241, label %cond.false242, !dbg !9338

cond.true241:                                     ; preds = %cond.false237
  br label %cond.end343, !dbg !9338

cond.false242:                                    ; preds = %cond.false237
  %56 = load i64, i64* %size.addr, align 8, !dbg !9338
  %sub243 = sub i64 %56, 1, !dbg !9338
  %and244 = and i64 %sub243, 65536, !dbg !9338
  %tobool245 = icmp ne i64 %and244, 0, !dbg !9338
  br i1 %tobool245, label %cond.true246, label %cond.false247, !dbg !9338

cond.true246:                                     ; preds = %cond.false242
  br label %cond.end341, !dbg !9338

cond.false247:                                    ; preds = %cond.false242
  %57 = load i64, i64* %size.addr, align 8, !dbg !9338
  %sub248 = sub i64 %57, 1, !dbg !9338
  %and249 = and i64 %sub248, 32768, !dbg !9338
  %tobool250 = icmp ne i64 %and249, 0, !dbg !9338
  br i1 %tobool250, label %cond.true251, label %cond.false252, !dbg !9338

cond.true251:                                     ; preds = %cond.false247
  br label %cond.end339, !dbg !9338

cond.false252:                                    ; preds = %cond.false247
  %58 = load i64, i64* %size.addr, align 8, !dbg !9338
  %sub253 = sub i64 %58, 1, !dbg !9338
  %and254 = and i64 %sub253, 16384, !dbg !9338
  %tobool255 = icmp ne i64 %and254, 0, !dbg !9338
  br i1 %tobool255, label %cond.true256, label %cond.false257, !dbg !9338

cond.true256:                                     ; preds = %cond.false252
  br label %cond.end337, !dbg !9338

cond.false257:                                    ; preds = %cond.false252
  %59 = load i64, i64* %size.addr, align 8, !dbg !9338
  %sub258 = sub i64 %59, 1, !dbg !9338
  %and259 = and i64 %sub258, 8192, !dbg !9338
  %tobool260 = icmp ne i64 %and259, 0, !dbg !9338
  br i1 %tobool260, label %cond.true261, label %cond.false262, !dbg !9338

cond.true261:                                     ; preds = %cond.false257
  br label %cond.end335, !dbg !9338

cond.false262:                                    ; preds = %cond.false257
  %60 = load i64, i64* %size.addr, align 8, !dbg !9338
  %sub263 = sub i64 %60, 1, !dbg !9338
  %and264 = and i64 %sub263, 4096, !dbg !9338
  %tobool265 = icmp ne i64 %and264, 0, !dbg !9338
  br i1 %tobool265, label %cond.true266, label %cond.false267, !dbg !9338

cond.true266:                                     ; preds = %cond.false262
  br label %cond.end333, !dbg !9338

cond.false267:                                    ; preds = %cond.false262
  %61 = load i64, i64* %size.addr, align 8, !dbg !9338
  %sub268 = sub i64 %61, 1, !dbg !9338
  %and269 = and i64 %sub268, 2048, !dbg !9338
  %tobool270 = icmp ne i64 %and269, 0, !dbg !9338
  br i1 %tobool270, label %cond.true271, label %cond.false272, !dbg !9338

cond.true271:                                     ; preds = %cond.false267
  br label %cond.end331, !dbg !9338

cond.false272:                                    ; preds = %cond.false267
  %62 = load i64, i64* %size.addr, align 8, !dbg !9338
  %sub273 = sub i64 %62, 1, !dbg !9338
  %and274 = and i64 %sub273, 1024, !dbg !9338
  %tobool275 = icmp ne i64 %and274, 0, !dbg !9338
  br i1 %tobool275, label %cond.true276, label %cond.false277, !dbg !9338

cond.true276:                                     ; preds = %cond.false272
  br label %cond.end329, !dbg !9338

cond.false277:                                    ; preds = %cond.false272
  %63 = load i64, i64* %size.addr, align 8, !dbg !9338
  %sub278 = sub i64 %63, 1, !dbg !9338
  %and279 = and i64 %sub278, 512, !dbg !9338
  %tobool280 = icmp ne i64 %and279, 0, !dbg !9338
  br i1 %tobool280, label %cond.true281, label %cond.false282, !dbg !9338

cond.true281:                                     ; preds = %cond.false277
  br label %cond.end327, !dbg !9338

cond.false282:                                    ; preds = %cond.false277
  %64 = load i64, i64* %size.addr, align 8, !dbg !9338
  %sub283 = sub i64 %64, 1, !dbg !9338
  %and284 = and i64 %sub283, 256, !dbg !9338
  %tobool285 = icmp ne i64 %and284, 0, !dbg !9338
  br i1 %tobool285, label %cond.true286, label %cond.false287, !dbg !9338

cond.true286:                                     ; preds = %cond.false282
  br label %cond.end325, !dbg !9338

cond.false287:                                    ; preds = %cond.false282
  %65 = load i64, i64* %size.addr, align 8, !dbg !9338
  %sub288 = sub i64 %65, 1, !dbg !9338
  %and289 = and i64 %sub288, 128, !dbg !9338
  %tobool290 = icmp ne i64 %and289, 0, !dbg !9338
  br i1 %tobool290, label %cond.true291, label %cond.false292, !dbg !9338

cond.true291:                                     ; preds = %cond.false287
  br label %cond.end323, !dbg !9338

cond.false292:                                    ; preds = %cond.false287
  %66 = load i64, i64* %size.addr, align 8, !dbg !9338
  %sub293 = sub i64 %66, 1, !dbg !9338
  %and294 = and i64 %sub293, 64, !dbg !9338
  %tobool295 = icmp ne i64 %and294, 0, !dbg !9338
  br i1 %tobool295, label %cond.true296, label %cond.false297, !dbg !9338

cond.true296:                                     ; preds = %cond.false292
  br label %cond.end321, !dbg !9338

cond.false297:                                    ; preds = %cond.false292
  %67 = load i64, i64* %size.addr, align 8, !dbg !9338
  %sub298 = sub i64 %67, 1, !dbg !9338
  %and299 = and i64 %sub298, 32, !dbg !9338
  %tobool300 = icmp ne i64 %and299, 0, !dbg !9338
  br i1 %tobool300, label %cond.true301, label %cond.false302, !dbg !9338

cond.true301:                                     ; preds = %cond.false297
  br label %cond.end319, !dbg !9338

cond.false302:                                    ; preds = %cond.false297
  %68 = load i64, i64* %size.addr, align 8, !dbg !9338
  %sub303 = sub i64 %68, 1, !dbg !9338
  %and304 = and i64 %sub303, 16, !dbg !9338
  %tobool305 = icmp ne i64 %and304, 0, !dbg !9338
  br i1 %tobool305, label %cond.true306, label %cond.false307, !dbg !9338

cond.true306:                                     ; preds = %cond.false302
  br label %cond.end317, !dbg !9338

cond.false307:                                    ; preds = %cond.false302
  %69 = load i64, i64* %size.addr, align 8, !dbg !9338
  %sub308 = sub i64 %69, 1, !dbg !9338
  %and309 = and i64 %sub308, 8, !dbg !9338
  %tobool310 = icmp ne i64 %and309, 0, !dbg !9338
  br i1 %tobool310, label %cond.true311, label %cond.false312, !dbg !9338

cond.true311:                                     ; preds = %cond.false307
  br label %cond.end, !dbg !9338

cond.false312:                                    ; preds = %cond.false307
  %70 = load i64, i64* %size.addr, align 8, !dbg !9338
  %sub313 = sub i64 %70, 1, !dbg !9338
  %and314 = and i64 %sub313, 4, !dbg !9338
  %tobool315 = icmp ne i64 %and314, 0, !dbg !9338
  %71 = zext i1 %tobool315 to i64, !dbg !9338
  %cond = select i1 %tobool315, i32 2, i32 1, !dbg !9338
  br label %cond.end, !dbg !9338

cond.end:                                         ; preds = %cond.false312, %cond.true311
  %cond316 = phi i32 [ 3, %cond.true311 ], [ %cond, %cond.false312 ], !dbg !9338
  br label %cond.end317, !dbg !9338

cond.end317:                                      ; preds = %cond.end, %cond.true306
  %cond318 = phi i32 [ 4, %cond.true306 ], [ %cond316, %cond.end ], !dbg !9338
  br label %cond.end319, !dbg !9338

cond.end319:                                      ; preds = %cond.end317, %cond.true301
  %cond320 = phi i32 [ 5, %cond.true301 ], [ %cond318, %cond.end317 ], !dbg !9338
  br label %cond.end321, !dbg !9338

cond.end321:                                      ; preds = %cond.end319, %cond.true296
  %cond322 = phi i32 [ 6, %cond.true296 ], [ %cond320, %cond.end319 ], !dbg !9338
  br label %cond.end323, !dbg !9338

cond.end323:                                      ; preds = %cond.end321, %cond.true291
  %cond324 = phi i32 [ 7, %cond.true291 ], [ %cond322, %cond.end321 ], !dbg !9338
  br label %cond.end325, !dbg !9338

cond.end325:                                      ; preds = %cond.end323, %cond.true286
  %cond326 = phi i32 [ 8, %cond.true286 ], [ %cond324, %cond.end323 ], !dbg !9338
  br label %cond.end327, !dbg !9338

cond.end327:                                      ; preds = %cond.end325, %cond.true281
  %cond328 = phi i32 [ 9, %cond.true281 ], [ %cond326, %cond.end325 ], !dbg !9338
  br label %cond.end329, !dbg !9338

cond.end329:                                      ; preds = %cond.end327, %cond.true276
  %cond330 = phi i32 [ 10, %cond.true276 ], [ %cond328, %cond.end327 ], !dbg !9338
  br label %cond.end331, !dbg !9338

cond.end331:                                      ; preds = %cond.end329, %cond.true271
  %cond332 = phi i32 [ 11, %cond.true271 ], [ %cond330, %cond.end329 ], !dbg !9338
  br label %cond.end333, !dbg !9338

cond.end333:                                      ; preds = %cond.end331, %cond.true266
  %cond334 = phi i32 [ 12, %cond.true266 ], [ %cond332, %cond.end331 ], !dbg !9338
  br label %cond.end335, !dbg !9338

cond.end335:                                      ; preds = %cond.end333, %cond.true261
  %cond336 = phi i32 [ 13, %cond.true261 ], [ %cond334, %cond.end333 ], !dbg !9338
  br label %cond.end337, !dbg !9338

cond.end337:                                      ; preds = %cond.end335, %cond.true256
  %cond338 = phi i32 [ 14, %cond.true256 ], [ %cond336, %cond.end335 ], !dbg !9338
  br label %cond.end339, !dbg !9338

cond.end339:                                      ; preds = %cond.end337, %cond.true251
  %cond340 = phi i32 [ 15, %cond.true251 ], [ %cond338, %cond.end337 ], !dbg !9338
  br label %cond.end341, !dbg !9338

cond.end341:                                      ; preds = %cond.end339, %cond.true246
  %cond342 = phi i32 [ 16, %cond.true246 ], [ %cond340, %cond.end339 ], !dbg !9338
  br label %cond.end343, !dbg !9338

cond.end343:                                      ; preds = %cond.end341, %cond.true241
  %cond344 = phi i32 [ 17, %cond.true241 ], [ %cond342, %cond.end341 ], !dbg !9338
  br label %cond.end345, !dbg !9338

cond.end345:                                      ; preds = %cond.end343, %cond.true236
  %cond346 = phi i32 [ 18, %cond.true236 ], [ %cond344, %cond.end343 ], !dbg !9338
  br label %cond.end347, !dbg !9338

cond.end347:                                      ; preds = %cond.end345, %cond.true231
  %cond348 = phi i32 [ 19, %cond.true231 ], [ %cond346, %cond.end345 ], !dbg !9338
  br label %cond.end349, !dbg !9338

cond.end349:                                      ; preds = %cond.end347, %cond.true226
  %cond350 = phi i32 [ 20, %cond.true226 ], [ %cond348, %cond.end347 ], !dbg !9338
  br label %cond.end351, !dbg !9338

cond.end351:                                      ; preds = %cond.end349, %cond.true221
  %cond352 = phi i32 [ 21, %cond.true221 ], [ %cond350, %cond.end349 ], !dbg !9338
  br label %cond.end353, !dbg !9338

cond.end353:                                      ; preds = %cond.end351, %cond.true216
  %cond354 = phi i32 [ 22, %cond.true216 ], [ %cond352, %cond.end351 ], !dbg !9338
  br label %cond.end355, !dbg !9338

cond.end355:                                      ; preds = %cond.end353, %cond.true211
  %cond356 = phi i32 [ 23, %cond.true211 ], [ %cond354, %cond.end353 ], !dbg !9338
  br label %cond.end357, !dbg !9338

cond.end357:                                      ; preds = %cond.end355, %cond.true206
  %cond358 = phi i32 [ 24, %cond.true206 ], [ %cond356, %cond.end355 ], !dbg !9338
  br label %cond.end359, !dbg !9338

cond.end359:                                      ; preds = %cond.end357, %cond.true201
  %cond360 = phi i32 [ 25, %cond.true201 ], [ %cond358, %cond.end357 ], !dbg !9338
  br label %cond.end361, !dbg !9338

cond.end361:                                      ; preds = %cond.end359, %cond.true196
  %cond362 = phi i32 [ 26, %cond.true196 ], [ %cond360, %cond.end359 ], !dbg !9338
  br label %cond.end363, !dbg !9338

cond.end363:                                      ; preds = %cond.end361, %cond.true191
  %cond364 = phi i32 [ 27, %cond.true191 ], [ %cond362, %cond.end361 ], !dbg !9338
  br label %cond.end365, !dbg !9338

cond.end365:                                      ; preds = %cond.end363, %cond.true186
  %cond366 = phi i32 [ 28, %cond.true186 ], [ %cond364, %cond.end363 ], !dbg !9338
  br label %cond.end367, !dbg !9338

cond.end367:                                      ; preds = %cond.end365, %cond.true181
  %cond368 = phi i32 [ 29, %cond.true181 ], [ %cond366, %cond.end365 ], !dbg !9338
  br label %cond.end369, !dbg !9338

cond.end369:                                      ; preds = %cond.end367, %cond.true176
  %cond370 = phi i32 [ 30, %cond.true176 ], [ %cond368, %cond.end367 ], !dbg !9338
  br label %cond.end371, !dbg !9338

cond.end371:                                      ; preds = %cond.end369, %cond.true171
  %cond372 = phi i32 [ 31, %cond.true171 ], [ %cond370, %cond.end369 ], !dbg !9338
  br label %cond.end373, !dbg !9338

cond.end373:                                      ; preds = %cond.end371, %cond.true166
  %cond374 = phi i32 [ 32, %cond.true166 ], [ %cond372, %cond.end371 ], !dbg !9338
  br label %cond.end375, !dbg !9338

cond.end375:                                      ; preds = %cond.end373, %cond.true161
  %cond376 = phi i32 [ 33, %cond.true161 ], [ %cond374, %cond.end373 ], !dbg !9338
  br label %cond.end377, !dbg !9338

cond.end377:                                      ; preds = %cond.end375, %cond.true156
  %cond378 = phi i32 [ 34, %cond.true156 ], [ %cond376, %cond.end375 ], !dbg !9338
  br label %cond.end379, !dbg !9338

cond.end379:                                      ; preds = %cond.end377, %cond.true151
  %cond380 = phi i32 [ 35, %cond.true151 ], [ %cond378, %cond.end377 ], !dbg !9338
  br label %cond.end381, !dbg !9338

cond.end381:                                      ; preds = %cond.end379, %cond.true146
  %cond382 = phi i32 [ 36, %cond.true146 ], [ %cond380, %cond.end379 ], !dbg !9338
  br label %cond.end383, !dbg !9338

cond.end383:                                      ; preds = %cond.end381, %cond.true141
  %cond384 = phi i32 [ 37, %cond.true141 ], [ %cond382, %cond.end381 ], !dbg !9338
  br label %cond.end385, !dbg !9338

cond.end385:                                      ; preds = %cond.end383, %cond.true136
  %cond386 = phi i32 [ 38, %cond.true136 ], [ %cond384, %cond.end383 ], !dbg !9338
  br label %cond.end387, !dbg !9338

cond.end387:                                      ; preds = %cond.end385, %cond.true131
  %cond388 = phi i32 [ 39, %cond.true131 ], [ %cond386, %cond.end385 ], !dbg !9338
  br label %cond.end389, !dbg !9338

cond.end389:                                      ; preds = %cond.end387, %cond.true126
  %cond390 = phi i32 [ 40, %cond.true126 ], [ %cond388, %cond.end387 ], !dbg !9338
  br label %cond.end391, !dbg !9338

cond.end391:                                      ; preds = %cond.end389, %cond.true121
  %cond392 = phi i32 [ 41, %cond.true121 ], [ %cond390, %cond.end389 ], !dbg !9338
  br label %cond.end393, !dbg !9338

cond.end393:                                      ; preds = %cond.end391, %cond.true116
  %cond394 = phi i32 [ 42, %cond.true116 ], [ %cond392, %cond.end391 ], !dbg !9338
  br label %cond.end395, !dbg !9338

cond.end395:                                      ; preds = %cond.end393, %cond.true111
  %cond396 = phi i32 [ 43, %cond.true111 ], [ %cond394, %cond.end393 ], !dbg !9338
  br label %cond.end397, !dbg !9338

cond.end397:                                      ; preds = %cond.end395, %cond.true106
  %cond398 = phi i32 [ 44, %cond.true106 ], [ %cond396, %cond.end395 ], !dbg !9338
  br label %cond.end399, !dbg !9338

cond.end399:                                      ; preds = %cond.end397, %cond.true101
  %cond400 = phi i32 [ 45, %cond.true101 ], [ %cond398, %cond.end397 ], !dbg !9338
  br label %cond.end401, !dbg !9338

cond.end401:                                      ; preds = %cond.end399, %cond.true96
  %cond402 = phi i32 [ 46, %cond.true96 ], [ %cond400, %cond.end399 ], !dbg !9338
  br label %cond.end403, !dbg !9338

cond.end403:                                      ; preds = %cond.end401, %cond.true91
  %cond404 = phi i32 [ 47, %cond.true91 ], [ %cond402, %cond.end401 ], !dbg !9338
  br label %cond.end405, !dbg !9338

cond.end405:                                      ; preds = %cond.end403, %cond.true86
  %cond406 = phi i32 [ 48, %cond.true86 ], [ %cond404, %cond.end403 ], !dbg !9338
  br label %cond.end407, !dbg !9338

cond.end407:                                      ; preds = %cond.end405, %cond.true81
  %cond408 = phi i32 [ 49, %cond.true81 ], [ %cond406, %cond.end405 ], !dbg !9338
  br label %cond.end409, !dbg !9338

cond.end409:                                      ; preds = %cond.end407, %cond.true76
  %cond410 = phi i32 [ 50, %cond.true76 ], [ %cond408, %cond.end407 ], !dbg !9338
  br label %cond.end411, !dbg !9338

cond.end411:                                      ; preds = %cond.end409, %cond.true71
  %cond412 = phi i32 [ 51, %cond.true71 ], [ %cond410, %cond.end409 ], !dbg !9338
  br label %cond.end413, !dbg !9338

cond.end413:                                      ; preds = %cond.end411, %cond.true66
  %cond414 = phi i32 [ 52, %cond.true66 ], [ %cond412, %cond.end411 ], !dbg !9338
  br label %cond.end415, !dbg !9338

cond.end415:                                      ; preds = %cond.end413, %cond.true61
  %cond416 = phi i32 [ 53, %cond.true61 ], [ %cond414, %cond.end413 ], !dbg !9338
  br label %cond.end417, !dbg !9338

cond.end417:                                      ; preds = %cond.end415, %cond.true56
  %cond418 = phi i32 [ 54, %cond.true56 ], [ %cond416, %cond.end415 ], !dbg !9338
  br label %cond.end419, !dbg !9338

cond.end419:                                      ; preds = %cond.end417, %cond.true51
  %cond420 = phi i32 [ 55, %cond.true51 ], [ %cond418, %cond.end417 ], !dbg !9338
  br label %cond.end421, !dbg !9338

cond.end421:                                      ; preds = %cond.end419, %cond.true46
  %cond422 = phi i32 [ 56, %cond.true46 ], [ %cond420, %cond.end419 ], !dbg !9338
  br label %cond.end423, !dbg !9338

cond.end423:                                      ; preds = %cond.end421, %cond.true41
  %cond424 = phi i32 [ 57, %cond.true41 ], [ %cond422, %cond.end421 ], !dbg !9338
  br label %cond.end425, !dbg !9338

cond.end425:                                      ; preds = %cond.end423, %cond.true36
  %cond426 = phi i32 [ 58, %cond.true36 ], [ %cond424, %cond.end423 ], !dbg !9338
  br label %cond.end427, !dbg !9338

cond.end427:                                      ; preds = %cond.end425, %cond.true31
  %cond428 = phi i32 [ 59, %cond.true31 ], [ %cond426, %cond.end425 ], !dbg !9338
  br label %cond.end429, !dbg !9338

cond.end429:                                      ; preds = %cond.end427, %cond.true26
  %cond430 = phi i32 [ 60, %cond.true26 ], [ %cond428, %cond.end427 ], !dbg !9338
  br label %cond.end431, !dbg !9338

cond.end431:                                      ; preds = %cond.end429, %cond.true21
  %cond432 = phi i32 [ 61, %cond.true21 ], [ %cond430, %cond.end429 ], !dbg !9338
  br label %cond.end433, !dbg !9338

cond.end433:                                      ; preds = %cond.end431, %cond.true16
  %cond434 = phi i32 [ 62, %cond.true16 ], [ %cond432, %cond.end431 ], !dbg !9338
  br label %cond.end435, !dbg !9338

cond.end435:                                      ; preds = %cond.end433, %cond.true11
  %cond436 = phi i32 [ 63, %cond.true11 ], [ %cond434, %cond.end433 ], !dbg !9338
  br label %cond.end437, !dbg !9338

cond.end437:                                      ; preds = %cond.end435, %cond.true8
  %cond438 = phi i32 [ 0, %cond.true8 ], [ %cond436, %cond.end435 ], !dbg !9338
  br label %cond.end440, !dbg !9338

cond.false439:                                    ; preds = %cond.true
  br label %cond.end440, !dbg !9338

cond.end440:                                      ; preds = %cond.false439, %cond.end437
  %cond441 = phi i32 [ %cond438, %cond.end437 ], [ -1, %cond.false439 ], !dbg !9338
  br label %cond.end444, !dbg !9338

cond.false442:                                    ; preds = %if.end3
  %72 = load i64, i64* %size.addr, align 8, !dbg !9338
  %sub443 = sub i64 %72, 1, !dbg !9338
  %call = call i32 @__ilog2_u64(i64 %sub443) #15, !dbg !9338
  br label %cond.end444, !dbg !9338

cond.end444:                                      ; preds = %cond.false442, %cond.end440
  %cond445 = phi i32 [ %cond441, %cond.end440 ], [ %call, %cond.false442 ], !dbg !9338
  %sub446 = sub i32 %cond445, 12, !dbg !9339
  %add = add i32 %sub446, 1, !dbg !9340
  store i32 %add, i32* %retval, align 4, !dbg !9341
  br label %return, !dbg !9341

if.end447:                                        ; preds = %entry
  %73 = load i64, i64* %size.addr, align 8, !dbg !9342
  %dec = add i64 %73, -1, !dbg !9342
  store i64 %dec, i64* %size.addr, align 8, !dbg !9342
  %74 = load i64, i64* %size.addr, align 8, !dbg !9343
  %shr = lshr i64 %74, 12, !dbg !9343
  store i64 %shr, i64* %size.addr, align 8, !dbg !9343
  %75 = load i64, i64* %size.addr, align 8, !dbg !9344
  store i64 %75, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !9321
  %76 = load i32, i32* %bitpos.i, align 4, !dbg !9345
  %77 = load i64, i64* %x.addr.i, align 8, !dbg !9346
  %78 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %77, i32 %76) #10, !dbg !9345, !srcloc !9347
  store i32 %78, i32* %bitpos.i, align 4, !dbg !9345
  %79 = load i32, i32* %bitpos.i, align 4, !dbg !9348
  %add.i = add i32 %79, 1, !dbg !9349
  store i32 %add.i, i32* %retval, align 4, !dbg !9350
  br label %return, !dbg !9350

return:                                           ; preds = %if.end447, %cond.end444, %if.then2, %if.then1
  %80 = load i32, i32* %retval, align 4, !dbg !9351
  ret i32 %80, !dbg !9351
}

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @__ilog2_u64(i64 %n) #8 !dbg !9352 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !9313, metadata !DIExpression()), !dbg !9356
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !9320, metadata !DIExpression()), !dbg !9358
  %n.addr = alloca i64, align 8
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !9359, metadata !DIExpression()), !dbg !9360
  %0 = load i64, i64* %n.addr, align 8, !dbg !9361
  store i64 %0, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !9358
  %1 = load i32, i32* %bitpos.i, align 4, !dbg !9362
  %2 = load i64, i64* %x.addr.i, align 8, !dbg !9363
  %3 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %2, i32 %1) #10, !dbg !9362, !srcloc !9347
  store i32 %3, i32* %bitpos.i, align 4, !dbg !9362
  %4 = load i32, i32* %bitpos.i, align 4, !dbg !9364
  %add.i = add i32 %4, 1, !dbg !9365
  %sub = sub i32 %add.i, 1, !dbg !9366
  ret i32 %sub, !dbg !9367
}

; Function Attrs: noredzone
declare dso_local noalias i8* @kmalloc_order(i64, i32, i32) #2

; Function Attrs: noredzone
declare dso_local noalias i8* @kmem_cache_alloc(%struct.kmem_cache*, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kasan_kmalloc(%struct.kmem_cache* %s, i8* %object, i64 %size, i32 %flags) #1 !dbg !9368 {
entry:
  %s.addr = alloca %struct.kmem_cache*, align 8
  %object.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store %struct.kmem_cache* %s, %struct.kmem_cache** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr, metadata !9372, metadata !DIExpression()), !dbg !9373
  store i8* %object, i8** %object.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %object.addr, metadata !9374, metadata !DIExpression()), !dbg !9375
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !9376, metadata !DIExpression()), !dbg !9377
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !9378, metadata !DIExpression()), !dbg !9379
  %0 = load i8*, i8** %object.addr, align 8, !dbg !9380
  ret i8* %0, !dbg !9381
}

; Function Attrs: noredzone
declare dso_local i8* @pci_map_rom(%struct.pci_dev*, i64*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i8 @readb(i8* %addr) #1 !dbg !9382 {
entry:
  %addr.addr = alloca i8*, align 8
  %ret = alloca i8, align 1
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !9389, metadata !DIExpression()), !dbg !9390
  call void @llvm.dbg.declare(metadata i8* %ret, metadata !9391, metadata !DIExpression()), !dbg !9390
  %0 = load i8*, i8** %addr.addr, align 8, !dbg !9390
  %1 = call i8 asm sideeffect "movb $1,$0", "=q,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i8* %0) #11, !dbg !9390, !srcloc !9392
  store i8 %1, i8* %ret, align 1, !dbg !9390
  %2 = load i8, i8* %ret, align 1, !dbg !9390
  ret i8 %2, !dbg !9390
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @find_eth_addr_in_vpd(i8* %rom_base, i32 %len, i32 %index, i8* %dev_addr) #1 !dbg !9393 {
entry:
  %retval = alloca i32, align 4
  %rom_base.addr = alloca i8*, align 8
  %len.addr = alloca i32, align 4
  %index.addr = alloca i32, align 4
  %dev_addr.addr = alloca i8*, align 8
  %this_offset = alloca i32, align 4
  %p = alloca i8*, align 8
  %i = alloca i32, align 4
  store i8* %rom_base, i8** %rom_base.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %rom_base.addr, metadata !9396, metadata !DIExpression()), !dbg !9397
  store i32 %len, i32* %len.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %len.addr, metadata !9398, metadata !DIExpression()), !dbg !9399
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !9400, metadata !DIExpression()), !dbg !9401
  store i8* %dev_addr, i8** %dev_addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dev_addr.addr, metadata !9402, metadata !DIExpression()), !dbg !9403
  call void @llvm.dbg.declare(metadata i32* %this_offset, metadata !9404, metadata !DIExpression()), !dbg !9405
  store i32 32, i32* %this_offset, align 4, !dbg !9406
  br label %for.cond, !dbg !9408

for.cond:                                         ; preds = %for.inc45, %entry
  %0 = load i32, i32* %this_offset, align 4, !dbg !9409
  %1 = load i32, i32* %len.addr, align 4, !dbg !9411
  %cmp = icmp slt i32 %0, %1, !dbg !9412
  br i1 %cmp, label %for.body, label %for.end47, !dbg !9413

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i8** %p, metadata !9414, metadata !DIExpression()), !dbg !9416
  %2 = load i8*, i8** %rom_base.addr, align 8, !dbg !9417
  %3 = load i32, i32* %this_offset, align 4, !dbg !9418
  %idx.ext = sext i32 %3 to i64, !dbg !9419
  %add.ptr = getelementptr i8, i8* %2, i64 %idx.ext, !dbg !9419
  store i8* %add.ptr, i8** %p, align 8, !dbg !9416
  %4 = load i8*, i8** %p, align 8, !dbg !9420
  %add.ptr1 = getelementptr i8, i8* %4, i64 0, !dbg !9422
  %call = call zeroext i8 @readb(i8* %add.ptr1) #12, !dbg !9423
  %conv = zext i8 %call to i32, !dbg !9423
  %cmp2 = icmp ne i32 %conv, 144, !dbg !9424
  br i1 %cmp2, label %if.then, label %lor.lhs.false, !dbg !9425

lor.lhs.false:                                    ; preds = %for.body
  %5 = load i8*, i8** %p, align 8, !dbg !9426
  %add.ptr4 = getelementptr i8, i8* %5, i64 1, !dbg !9427
  %call5 = call zeroext i8 @readb(i8* %add.ptr4) #12, !dbg !9428
  %conv6 = zext i8 %call5 to i32, !dbg !9428
  %cmp7 = icmp ne i32 %conv6, 0, !dbg !9429
  br i1 %cmp7, label %if.then, label %lor.lhs.false9, !dbg !9430

lor.lhs.false9:                                   ; preds = %lor.lhs.false
  %6 = load i8*, i8** %p, align 8, !dbg !9431
  %add.ptr10 = getelementptr i8, i8* %6, i64 2, !dbg !9432
  %call11 = call zeroext i8 @readb(i8* %add.ptr10) #12, !dbg !9433
  %conv12 = zext i8 %call11 to i32, !dbg !9433
  %cmp13 = icmp ne i32 %conv12, 9, !dbg !9434
  br i1 %cmp13, label %if.then, label %lor.lhs.false15, !dbg !9435

lor.lhs.false15:                                  ; preds = %lor.lhs.false9
  %7 = load i8*, i8** %p, align 8, !dbg !9436
  %add.ptr16 = getelementptr i8, i8* %7, i64 3, !dbg !9437
  %call17 = call zeroext i8 @readb(i8* %add.ptr16) #12, !dbg !9438
  %conv18 = zext i8 %call17 to i32, !dbg !9438
  %cmp19 = icmp ne i32 %conv18, 78, !dbg !9439
  br i1 %cmp19, label %if.then, label %lor.lhs.false21, !dbg !9440

lor.lhs.false21:                                  ; preds = %lor.lhs.false15
  %8 = load i8*, i8** %p, align 8, !dbg !9441
  %add.ptr22 = getelementptr i8, i8* %8, i64 4, !dbg !9442
  %call23 = call zeroext i8 @readb(i8* %add.ptr22) #12, !dbg !9443
  %conv24 = zext i8 %call23 to i32, !dbg !9443
  %cmp25 = icmp ne i32 %conv24, 65, !dbg !9444
  br i1 %cmp25, label %if.then, label %lor.lhs.false27, !dbg !9445

lor.lhs.false27:                                  ; preds = %lor.lhs.false21
  %9 = load i8*, i8** %p, align 8, !dbg !9446
  %add.ptr28 = getelementptr i8, i8* %9, i64 5, !dbg !9447
  %call29 = call zeroext i8 @readb(i8* %add.ptr28) #12, !dbg !9448
  %conv30 = zext i8 %call29 to i32, !dbg !9448
  %cmp31 = icmp ne i32 %conv30, 6, !dbg !9449
  br i1 %cmp31, label %if.then, label %if.end, !dbg !9450

if.then:                                          ; preds = %lor.lhs.false27, %lor.lhs.false21, %lor.lhs.false15, %lor.lhs.false9, %lor.lhs.false, %for.body
  br label %for.inc45, !dbg !9451

if.end:                                           ; preds = %lor.lhs.false27
  %10 = load i32, i32* %this_offset, align 4, !dbg !9452
  %add = add i32 %10, 6, !dbg !9452
  store i32 %add, i32* %this_offset, align 4, !dbg !9452
  %11 = load i8*, i8** %p, align 8, !dbg !9453
  %add.ptr33 = getelementptr i8, i8* %11, i64 6, !dbg !9453
  store i8* %add.ptr33, i8** %p, align 8, !dbg !9453
  %12 = load i32, i32* %index.addr, align 4, !dbg !9454
  %cmp34 = icmp eq i32 %12, 0, !dbg !9456
  br i1 %cmp34, label %if.then36, label %if.end44, !dbg !9457

if.then36:                                        ; preds = %if.end
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9458, metadata !DIExpression()), !dbg !9460
  store i32 0, i32* %i, align 4, !dbg !9461
  br label %for.cond37, !dbg !9463

for.cond37:                                       ; preds = %for.inc, %if.then36
  %13 = load i32, i32* %i, align 4, !dbg !9464
  %cmp38 = icmp slt i32 %13, 6, !dbg !9466
  br i1 %cmp38, label %for.body40, label %for.end, !dbg !9467

for.body40:                                       ; preds = %for.cond37
  %14 = load i8*, i8** %p, align 8, !dbg !9468
  %15 = load i32, i32* %i, align 4, !dbg !9469
  %idx.ext41 = sext i32 %15 to i64, !dbg !9470
  %add.ptr42 = getelementptr i8, i8* %14, i64 %idx.ext41, !dbg !9470
  %call43 = call zeroext i8 @readb(i8* %add.ptr42) #12, !dbg !9471
  %16 = load i8*, i8** %dev_addr.addr, align 8, !dbg !9472
  %17 = load i32, i32* %i, align 4, !dbg !9473
  %idxprom = sext i32 %17 to i64, !dbg !9472
  %arrayidx = getelementptr i8, i8* %16, i64 %idxprom, !dbg !9472
  store i8 %call43, i8* %arrayidx, align 1, !dbg !9474
  br label %for.inc, !dbg !9472

for.inc:                                          ; preds = %for.body40
  %18 = load i32, i32* %i, align 4, !dbg !9475
  %inc = add i32 %18, 1, !dbg !9475
  store i32 %inc, i32* %i, align 4, !dbg !9475
  br label %for.cond37, !dbg !9476, !llvm.loop !9477

for.end:                                          ; preds = %for.cond37
  store i32 1, i32* %retval, align 4, !dbg !9479
  br label %return, !dbg !9479

if.end44:                                         ; preds = %if.end
  %19 = load i32, i32* %index.addr, align 4, !dbg !9480
  %dec = add i32 %19, -1, !dbg !9480
  store i32 %dec, i32* %index.addr, align 4, !dbg !9480
  br label %for.inc45, !dbg !9481

for.inc45:                                        ; preds = %if.end44, %if.then
  %20 = load i32, i32* %this_offset, align 4, !dbg !9482
  %inc46 = add i32 %20, 1, !dbg !9482
  store i32 %inc46, i32* %this_offset, align 4, !dbg !9482
  br label %for.cond, !dbg !9483, !llvm.loop !9484

for.end47:                                        ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !9486
  br label %return, !dbg !9486

return:                                           ; preds = %for.end47, %for.end
  %21 = load i32, i32* %retval, align 4, !dbg !9487
  ret i32 %21, !dbg !9487
}

; Function Attrs: noredzone
declare dso_local void @pci_unmap_rom(%struct.pci_dev*, i8*) #2

; Function Attrs: noredzone
declare dso_local void @get_random_bytes(i8*, i32) #2

; Function Attrs: noredzone
declare dso_local i8* @dma_alloc_attrs(%struct.device*, i64, i64*, i32, i64) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @happy_meal_tcvr_read(%struct.happy_meal* %hp, i8* %tregs, i32 %reg) #1 !dbg !9488 {
entry:
  %retval = alloca i32, align 4
  %hp.addr = alloca %struct.happy_meal*, align 8
  %tregs.addr = alloca i8*, align 8
  %reg.addr = alloca i32, align 4
  %tries = alloca i32, align 4
  %retval1 = alloca i32, align 4
  store %struct.happy_meal* %hp, %struct.happy_meal** %hp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.happy_meal** %hp.addr, metadata !9491, metadata !DIExpression()), !dbg !9492
  store i8* %tregs, i8** %tregs.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %tregs.addr, metadata !9493, metadata !DIExpression()), !dbg !9494
  store i32 %reg, i32* %reg.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %reg.addr, metadata !9495, metadata !DIExpression()), !dbg !9496
  call void @llvm.dbg.declare(metadata i32* %tries, metadata !9497, metadata !DIExpression()), !dbg !9498
  store i32 16, i32* %tries, align 4, !dbg !9498
  call void @llvm.dbg.declare(metadata i32* %retval1, metadata !9499, metadata !DIExpression()), !dbg !9500
  %0 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !9501
  %tcvr_type = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %0, i32 0, i32 18, !dbg !9503
  %1 = load i32, i32* %tcvr_type, align 8, !dbg !9503
  %cmp = icmp eq i32 %1, 2, !dbg !9504
  br i1 %cmp, label %if.then, label %if.end, !dbg !9505

if.then:                                          ; preds = %entry
  store i32 -2147483648, i32* %retval, align 4, !dbg !9506
  br label %return, !dbg !9506

if.end:                                           ; preds = %entry
  %2 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !9508
  %happy_flags = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %2, i32 0, i32 16, !dbg !9510
  %3 = load i32, i32* %happy_flags, align 8, !dbg !9510
  %and = and i32 %3, 2, !dbg !9511
  %tobool = icmp ne i32 %and, 0, !dbg !9511
  br i1 %tobool, label %if.end3, label %if.then2, !dbg !9512

if.then2:                                         ; preds = %if.end
  %4 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !9513
  %5 = load i8*, i8** %tregs.addr, align 8, !dbg !9515
  %6 = load i32, i32* %reg.addr, align 4, !dbg !9516
  %call = call i32 @happy_meal_bb_read(%struct.happy_meal* %4, i8* %5, i32 %6) #12, !dbg !9517
  store i32 %call, i32* %retval, align 4, !dbg !9518
  br label %return, !dbg !9518

if.end3:                                          ; preds = %if.end
  %7 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !9519
  %paddr = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %7, i32 0, i32 20, !dbg !9519
  %8 = load i32, i32* %paddr, align 8, !dbg !9519
  %shl = shl i32 %8, 23, !dbg !9519
  %or = or i32 1610743808, %shl, !dbg !9519
  %9 = load i32, i32* %reg.addr, align 4, !dbg !9519
  %and4 = and i32 %9, 255, !dbg !9519
  %shl5 = shl i32 %and4, 18, !dbg !9519
  %or6 = or i32 %or, %shl5, !dbg !9519
  %10 = load i8*, i8** %tregs.addr, align 8, !dbg !9519
  %add.ptr = getelementptr i8, i8* %10, i64 12, !dbg !9519
  call void @writel(i32 %or6, i8* %add.ptr) #12, !dbg !9519
  br label %while.cond, !dbg !9520

while.cond:                                       ; preds = %while.body, %if.end3
  %11 = load i8*, i8** %tregs.addr, align 8, !dbg !9521
  %add.ptr7 = getelementptr i8, i8* %11, i64 12, !dbg !9521
  %call8 = call i32 @readl(i8* %add.ptr7) #12, !dbg !9521
  %and9 = and i32 %call8, 65536, !dbg !9522
  %tobool10 = icmp ne i32 %and9, 0, !dbg !9522
  br i1 %tobool10, label %land.end, label %land.rhs, !dbg !9523

land.rhs:                                         ; preds = %while.cond
  %12 = load i32, i32* %tries, align 4, !dbg !9524
  %dec = add i32 %12, -1, !dbg !9524
  store i32 %dec, i32* %tries, align 4, !dbg !9524
  %tobool11 = icmp ne i32 %dec, 0, !dbg !9523
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %13 = phi i1 [ false, %while.cond ], [ %tobool11, %land.rhs ], !dbg !9525
  br i1 %13, label %while.body, label %while.end, !dbg !9520

while.body:                                       ; preds = %land.end
  call void @__const_udelay(i64 85900) #12, !dbg !9526
  br label %while.cond, !dbg !9520, !llvm.loop !9531

while.end:                                        ; preds = %land.end
  %14 = load i32, i32* %tries, align 4, !dbg !9533
  %tobool12 = icmp ne i32 %14, 0, !dbg !9533
  br i1 %tobool12, label %if.end15, label %if.then13, !dbg !9535

if.then13:                                        ; preds = %while.end
  %call14 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.26, i64 0, i64 0)) #13, !dbg !9536
  store i32 -2147483648, i32* %retval, align 4, !dbg !9538
  br label %return, !dbg !9538

if.end15:                                         ; preds = %while.end
  %15 = load i8*, i8** %tregs.addr, align 8, !dbg !9539
  %add.ptr16 = getelementptr i8, i8* %15, i64 12, !dbg !9539
  %call17 = call i32 @readl(i8* %add.ptr16) #12, !dbg !9539
  %and18 = and i32 %call17, 65535, !dbg !9540
  store i32 %and18, i32* %retval1, align 4, !dbg !9541
  %16 = load i32, i32* %retval1, align 4, !dbg !9542
  store i32 %16, i32* %retval, align 4, !dbg !9543
  br label %return, !dbg !9543

return:                                           ; preds = %if.end15, %if.then13, %if.then2, %if.then
  %17 = load i32, i32* %retval, align 4, !dbg !9544
  ret i32 %17, !dbg !9544
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @happy_meal_tcvr_write(%struct.happy_meal* %hp, i8* %tregs, i32 %reg, i16 zeroext %value) #1 !dbg !9545 {
entry:
  %hp.addr = alloca %struct.happy_meal*, align 8
  %tregs.addr = alloca i8*, align 8
  %reg.addr = alloca i32, align 4
  %value.addr = alloca i16, align 2
  %tries = alloca i32, align 4
  store %struct.happy_meal* %hp, %struct.happy_meal** %hp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.happy_meal** %hp.addr, metadata !9548, metadata !DIExpression()), !dbg !9549
  store i8* %tregs, i8** %tregs.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %tregs.addr, metadata !9550, metadata !DIExpression()), !dbg !9551
  store i32 %reg, i32* %reg.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %reg.addr, metadata !9552, metadata !DIExpression()), !dbg !9553
  store i16 %value, i16* %value.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %value.addr, metadata !9554, metadata !DIExpression()), !dbg !9555
  call void @llvm.dbg.declare(metadata i32* %tries, metadata !9556, metadata !DIExpression()), !dbg !9557
  store i32 16, i32* %tries, align 4, !dbg !9557
  %0 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !9558
  %happy_flags = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %0, i32 0, i32 16, !dbg !9560
  %1 = load i32, i32* %happy_flags, align 8, !dbg !9560
  %and = and i32 %1, 2, !dbg !9561
  %tobool = icmp ne i32 %and, 0, !dbg !9561
  br i1 %tobool, label %if.end, label %if.then, !dbg !9562

if.then:                                          ; preds = %entry
  %2 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !9563
  %3 = load i8*, i8** %tregs.addr, align 8, !dbg !9565
  %4 = load i32, i32* %reg.addr, align 4, !dbg !9566
  %5 = load i16, i16* %value.addr, align 2, !dbg !9567
  call void @happy_meal_bb_write(%struct.happy_meal* %2, i8* %3, i32 %4, i16 zeroext %5) #12, !dbg !9568
  br label %if.end13, !dbg !9569

if.end:                                           ; preds = %entry
  %6 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !9570
  %paddr = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %6, i32 0, i32 20, !dbg !9570
  %7 = load i32, i32* %paddr, align 8, !dbg !9570
  %shl = shl i32 %7, 23, !dbg !9570
  %or = or i32 1342308352, %shl, !dbg !9570
  %8 = load i32, i32* %reg.addr, align 4, !dbg !9570
  %and1 = and i32 %8, 255, !dbg !9570
  %shl2 = shl i32 %and1, 18, !dbg !9570
  %or3 = or i32 %or, %shl2, !dbg !9570
  %9 = load i16, i16* %value.addr, align 2, !dbg !9570
  %conv = zext i16 %9 to i32, !dbg !9570
  %and4 = and i32 %conv, 65535, !dbg !9570
  %or5 = or i32 %or3, %and4, !dbg !9570
  %10 = load i8*, i8** %tregs.addr, align 8, !dbg !9570
  %add.ptr = getelementptr i8, i8* %10, i64 12, !dbg !9570
  call void @writel(i32 %or5, i8* %add.ptr) #12, !dbg !9570
  br label %while.cond, !dbg !9571

while.cond:                                       ; preds = %while.body, %if.end
  %11 = load i8*, i8** %tregs.addr, align 8, !dbg !9572
  %add.ptr6 = getelementptr i8, i8* %11, i64 12, !dbg !9572
  %call = call i32 @readl(i8* %add.ptr6) #12, !dbg !9572
  %and7 = and i32 %call, 65536, !dbg !9573
  %tobool8 = icmp ne i32 %and7, 0, !dbg !9573
  br i1 %tobool8, label %land.end, label %land.rhs, !dbg !9574

land.rhs:                                         ; preds = %while.cond
  %12 = load i32, i32* %tries, align 4, !dbg !9575
  %dec = add i32 %12, -1, !dbg !9575
  store i32 %dec, i32* %tries, align 4, !dbg !9575
  %tobool9 = icmp ne i32 %dec, 0, !dbg !9574
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %13 = phi i1 [ false, %while.cond ], [ %tobool9, %land.rhs ], !dbg !9576
  br i1 %13, label %while.body, label %while.end, !dbg !9571

while.body:                                       ; preds = %land.end
  call void @__const_udelay(i64 85900) #12, !dbg !9577
  br label %while.cond, !dbg !9571, !llvm.loop !9582

while.end:                                        ; preds = %land.end
  %14 = load i32, i32* %tries, align 4, !dbg !9584
  %tobool10 = icmp ne i32 %14, 0, !dbg !9584
  br i1 %tobool10, label %if.end13, label %if.then11, !dbg !9586

if.then11:                                        ; preds = %while.end
  %call12 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.27, i64 0, i64 0)) #13, !dbg !9587
  br label %if.end13, !dbg !9587

if.end13:                                         ; preds = %if.then, %if.then11, %while.end
  ret void, !dbg !9588
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @is_lucent_phy(%struct.happy_meal* %hp) #1 !dbg !9589 {
entry:
  %hp.addr = alloca %struct.happy_meal*, align 8
  %tregs = alloca i8*, align 8
  %mr2 = alloca i16, align 2
  %mr3 = alloca i16, align 2
  %ret = alloca i32, align 4
  store %struct.happy_meal* %hp, %struct.happy_meal** %hp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.happy_meal** %hp.addr, metadata !9592, metadata !DIExpression()), !dbg !9593
  call void @llvm.dbg.declare(metadata i8** %tregs, metadata !9594, metadata !DIExpression()), !dbg !9595
  %0 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !9596
  %tcvregs = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %0, i32 0, i32 14, !dbg !9597
  %1 = load i8*, i8** %tcvregs, align 8, !dbg !9597
  store i8* %1, i8** %tregs, align 8, !dbg !9595
  call void @llvm.dbg.declare(metadata i16* %mr2, metadata !9598, metadata !DIExpression()), !dbg !9599
  call void @llvm.dbg.declare(metadata i16* %mr3, metadata !9600, metadata !DIExpression()), !dbg !9601
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !9602, metadata !DIExpression()), !dbg !9603
  store i32 0, i32* %ret, align 4, !dbg !9603
  %2 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !9604
  %3 = load i8*, i8** %tregs, align 8, !dbg !9605
  %call = call i32 @happy_meal_tcvr_read(%struct.happy_meal* %2, i8* %3, i32 2) #12, !dbg !9606
  %conv = trunc i32 %call to i16, !dbg !9606
  store i16 %conv, i16* %mr2, align 2, !dbg !9607
  %4 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !9608
  %5 = load i8*, i8** %tregs, align 8, !dbg !9609
  %call1 = call i32 @happy_meal_tcvr_read(%struct.happy_meal* %4, i8* %5, i32 3) #12, !dbg !9610
  %conv2 = trunc i32 %call1 to i16, !dbg !9610
  store i16 %conv2, i16* %mr3, align 2, !dbg !9611
  %6 = load i16, i16* %mr2, align 2, !dbg !9612
  %conv3 = zext i16 %6 to i32, !dbg !9612
  %and = and i32 %conv3, 65535, !dbg !9614
  %cmp = icmp eq i32 %and, 384, !dbg !9615
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !9616

land.lhs.true:                                    ; preds = %entry
  %7 = load i16, i16* %mr3, align 2, !dbg !9617
  %conv5 = zext i16 %7 to i32, !dbg !9617
  %and6 = and i32 %conv5, 65535, !dbg !9618
  %shr = ashr i32 %and6, 10, !dbg !9619
  %cmp7 = icmp eq i32 %shr, 29, !dbg !9620
  br i1 %cmp7, label %if.then, label %if.end, !dbg !9621

if.then:                                          ; preds = %land.lhs.true
  store i32 1, i32* %ret, align 4, !dbg !9622
  br label %if.end, !dbg !9623

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %8 = load i32, i32* %ret, align 4, !dbg !9624
  ret i32 %8, !dbg !9625
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @set_happy_link_modes(%struct.happy_meal* %hp, i8* %tregs) #1 !dbg !9626 {
entry:
  %retval = alloca i32, align 4
  %hp.addr = alloca %struct.happy_meal*, align 8
  %tregs.addr = alloca i8*, align 8
  %full = alloca i32, align 4
  store %struct.happy_meal* %hp, %struct.happy_meal** %hp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.happy_meal** %hp.addr, metadata !9629, metadata !DIExpression()), !dbg !9630
  store i8* %tregs, i8** %tregs.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %tregs.addr, metadata !9631, metadata !DIExpression()), !dbg !9632
  call void @llvm.dbg.declare(metadata i32* %full, metadata !9633, metadata !DIExpression()), !dbg !9634
  %0 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !9635
  %timer_state = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %0, i32 0, i32 39, !dbg !9637
  %1 = load i32, i32* %timer_state, align 8, !dbg !9637
  %cmp = icmp eq i32 %1, 0, !dbg !9638
  br i1 %cmp, label %if.then, label %if.else24, !dbg !9639

if.then:                                          ; preds = %entry
  %2 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !9640
  %3 = load i8*, i8** %tregs.addr, align 8, !dbg !9642
  %call = call i32 @happy_meal_tcvr_read(%struct.happy_meal* %2, i8* %3, i32 5) #12, !dbg !9643
  %conv = trunc i32 %call to i16, !dbg !9643
  %4 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !9644
  %sw_lpa = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %4, i32 0, i32 27, !dbg !9645
  store i16 %conv, i16* %sw_lpa, align 8, !dbg !9646
  %5 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !9647
  %sw_lpa1 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %5, i32 0, i32 27, !dbg !9649
  %6 = load i16, i16* %sw_lpa1, align 8, !dbg !9649
  %conv2 = zext i16 %6 to i32, !dbg !9647
  %and = and i32 %conv2, 480, !dbg !9650
  %tobool = icmp ne i32 %and, 0, !dbg !9650
  br i1 %tobool, label %if.end, label %if.then3, !dbg !9651

if.then3:                                         ; preds = %if.then
  br label %no_response, !dbg !9652

if.end:                                           ; preds = %if.then
  %7 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !9653
  %sw_lpa4 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %7, i32 0, i32 27, !dbg !9655
  %8 = load i16, i16* %sw_lpa4, align 8, !dbg !9655
  %conv5 = zext i16 %8 to i32, !dbg !9653
  %and6 = and i32 %conv5, 256, !dbg !9656
  %tobool7 = icmp ne i32 %and6, 0, !dbg !9656
  br i1 %tobool7, label %if.then8, label %if.else, !dbg !9657

if.then8:                                         ; preds = %if.end
  store i32 1, i32* %full, align 4, !dbg !9658
  br label %if.end23, !dbg !9659

if.else:                                          ; preds = %if.end
  %9 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !9660
  %sw_lpa9 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %9, i32 0, i32 27, !dbg !9662
  %10 = load i16, i16* %sw_lpa9, align 8, !dbg !9662
  %conv10 = zext i16 %10 to i32, !dbg !9660
  %and11 = and i32 %conv10, 128, !dbg !9663
  %tobool12 = icmp ne i32 %and11, 0, !dbg !9663
  br i1 %tobool12, label %if.then13, label %if.else14, !dbg !9664

if.then13:                                        ; preds = %if.else
  store i32 0, i32* %full, align 4, !dbg !9665
  br label %if.end22, !dbg !9666

if.else14:                                        ; preds = %if.else
  %11 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !9667
  %sw_lpa15 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %11, i32 0, i32 27, !dbg !9669
  %12 = load i16, i16* %sw_lpa15, align 8, !dbg !9669
  %conv16 = zext i16 %12 to i32, !dbg !9667
  %and17 = and i32 %conv16, 64, !dbg !9670
  %tobool18 = icmp ne i32 %and17, 0, !dbg !9670
  br i1 %tobool18, label %if.then19, label %if.else20, !dbg !9671

if.then19:                                        ; preds = %if.else14
  store i32 1, i32* %full, align 4, !dbg !9672
  br label %if.end21, !dbg !9673

if.else20:                                        ; preds = %if.else14
  store i32 0, i32* %full, align 4, !dbg !9674
  br label %if.end21

if.end21:                                         ; preds = %if.else20, %if.then19
  br label %if.end22

if.end22:                                         ; preds = %if.end21, %if.then13
  br label %if.end23

if.end23:                                         ; preds = %if.end22, %if.then8
  br label %if.end34, !dbg !9675

if.else24:                                        ; preds = %entry
  %13 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !9676
  %14 = load i8*, i8** %tregs.addr, align 8, !dbg !9678
  %call25 = call i32 @happy_meal_tcvr_read(%struct.happy_meal* %13, i8* %14, i32 0) #12, !dbg !9679
  %conv26 = trunc i32 %call25 to i16, !dbg !9679
  %15 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !9680
  %sw_bmcr = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %15, i32 0, i32 22, !dbg !9681
  store i16 %conv26, i16* %sw_bmcr, align 2, !dbg !9682
  %16 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !9683
  %sw_bmcr27 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %16, i32 0, i32 22, !dbg !9685
  %17 = load i16, i16* %sw_bmcr27, align 2, !dbg !9685
  %conv28 = zext i16 %17 to i32, !dbg !9683
  %and29 = and i32 %conv28, 256, !dbg !9686
  %tobool30 = icmp ne i32 %and29, 0, !dbg !9686
  br i1 %tobool30, label %if.then31, label %if.else32, !dbg !9687

if.then31:                                        ; preds = %if.else24
  store i32 1, i32* %full, align 4, !dbg !9688
  br label %if.end33, !dbg !9689

if.else32:                                        ; preds = %if.else24
  store i32 0, i32* %full, align 4, !dbg !9690
  br label %if.end33

if.end33:                                         ; preds = %if.else32, %if.then31
  br label %if.end34

if.end34:                                         ; preds = %if.end33, %if.end23
  %18 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !9691
  %bigmacregs = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %18, i32 0, i32 13, !dbg !9691
  %19 = load i8*, i8** %bigmacregs, align 8, !dbg !9691
  %add.ptr = getelementptr i8, i8* %19, i64 524, !dbg !9691
  %call35 = call i32 @readl(i8* %add.ptr) #12, !dbg !9691
  %and36 = and i32 %call35, -2, !dbg !9691
  %20 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !9691
  %bigmacregs37 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %20, i32 0, i32 13, !dbg !9691
  %21 = load i8*, i8** %bigmacregs37, align 8, !dbg !9691
  %add.ptr38 = getelementptr i8, i8* %21, i64 524, !dbg !9691
  call void @writel(i32 %and36, i8* %add.ptr38) #12, !dbg !9691
  br label %while.cond, !dbg !9692

while.cond:                                       ; preds = %while.body, %if.end34
  %22 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !9693
  %bigmacregs39 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %22, i32 0, i32 13, !dbg !9693
  %23 = load i8*, i8** %bigmacregs39, align 8, !dbg !9693
  %add.ptr40 = getelementptr i8, i8* %23, i64 524, !dbg !9693
  %call41 = call i32 @readl(i8* %add.ptr40) #12, !dbg !9693
  %and42 = and i32 %call41, 1, !dbg !9694
  %tobool43 = icmp ne i32 %and42, 0, !dbg !9692
  br i1 %tobool43, label %while.body, label %while.end, !dbg !9692

while.body:                                       ; preds = %while.cond
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #11, !dbg !9695, !srcloc !9696
  br label %while.cond, !dbg !9692, !llvm.loop !9697

while.end:                                        ; preds = %while.cond
  %24 = load i32, i32* %full, align 4, !dbg !9698
  %tobool44 = icmp ne i32 %24, 0, !dbg !9698
  br i1 %tobool44, label %if.then45, label %if.else52, !dbg !9700

if.then45:                                        ; preds = %while.end
  %25 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !9701
  %happy_flags = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %25, i32 0, i32 16, !dbg !9703
  %26 = load i32, i32* %happy_flags, align 8, !dbg !9704
  %or = or i32 %26, 32, !dbg !9704
  store i32 %or, i32* %happy_flags, align 8, !dbg !9704
  %27 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !9705
  %bigmacregs46 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %27, i32 0, i32 13, !dbg !9705
  %28 = load i8*, i8** %bigmacregs46, align 8, !dbg !9705
  %add.ptr47 = getelementptr i8, i8* %28, i64 524, !dbg !9705
  %call48 = call i32 @readl(i8* %add.ptr47) #12, !dbg !9705
  %or49 = or i32 %call48, 512, !dbg !9705
  %29 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !9705
  %bigmacregs50 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %29, i32 0, i32 13, !dbg !9705
  %30 = load i8*, i8** %bigmacregs50, align 8, !dbg !9705
  %add.ptr51 = getelementptr i8, i8* %30, i64 524, !dbg !9705
  call void @writel(i32 %or49, i8* %add.ptr51) #12, !dbg !9705
  br label %if.end61, !dbg !9706

if.else52:                                        ; preds = %while.end
  %31 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !9707
  %happy_flags53 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %31, i32 0, i32 16, !dbg !9709
  %32 = load i32, i32* %happy_flags53, align 8, !dbg !9710
  %and54 = and i32 %32, -33, !dbg !9710
  store i32 %and54, i32* %happy_flags53, align 8, !dbg !9710
  %33 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !9711
  %bigmacregs55 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %33, i32 0, i32 13, !dbg !9711
  %34 = load i8*, i8** %bigmacregs55, align 8, !dbg !9711
  %add.ptr56 = getelementptr i8, i8* %34, i64 524, !dbg !9711
  %call57 = call i32 @readl(i8* %add.ptr56) #12, !dbg !9711
  %and58 = and i32 %call57, -513, !dbg !9711
  %35 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !9711
  %bigmacregs59 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %35, i32 0, i32 13, !dbg !9711
  %36 = load i8*, i8** %bigmacregs59, align 8, !dbg !9711
  %add.ptr60 = getelementptr i8, i8* %36, i64 524, !dbg !9711
  call void @writel(i32 %and58, i8* %add.ptr60) #12, !dbg !9711
  br label %if.end61

if.end61:                                         ; preds = %if.else52, %if.then45
  %37 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !9712
  %bigmacregs62 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %37, i32 0, i32 13, !dbg !9712
  %38 = load i8*, i8** %bigmacregs62, align 8, !dbg !9712
  %add.ptr63 = getelementptr i8, i8* %38, i64 524, !dbg !9712
  %call64 = call i32 @readl(i8* %add.ptr63) #12, !dbg !9712
  %or65 = or i32 %call64, 1, !dbg !9712
  %39 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !9712
  %bigmacregs66 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %39, i32 0, i32 13, !dbg !9712
  %40 = load i8*, i8** %bigmacregs66, align 8, !dbg !9712
  %add.ptr67 = getelementptr i8, i8* %40, i64 524, !dbg !9712
  call void @writel(i32 %or65, i8* %add.ptr67) #12, !dbg !9712
  store i32 0, i32* %retval, align 4, !dbg !9713
  br label %return, !dbg !9713

no_response:                                      ; preds = %if.then3
  call void @llvm.dbg.label(metadata !9714), !dbg !9715
  store i32 1, i32* %retval, align 4, !dbg !9716
  br label %return, !dbg !9716

return:                                           ; preds = %no_response, %if.end61
  %41 = load i32, i32* %retval, align 4, !dbg !9717
  ret i32 %41, !dbg !9717
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @display_link_mode(%struct.happy_meal* %hp, i8* %tregs) #1 !dbg !9718 {
entry:
  %hp.addr = alloca %struct.happy_meal*, align 8
  %tregs.addr = alloca i8*, align 8
  store %struct.happy_meal* %hp, %struct.happy_meal** %hp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.happy_meal** %hp.addr, metadata !9721, metadata !DIExpression()), !dbg !9722
  store i8* %tregs, i8** %tregs.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %tregs.addr, metadata !9723, metadata !DIExpression()), !dbg !9724
  %0 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !9725
  %dev = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %0, i32 0, i32 41, !dbg !9726
  %1 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !9726
  %name = getelementptr inbounds %struct.net_device, %struct.net_device* %1, i32 0, i32 0, !dbg !9727
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %name, i64 0, i64 0, !dbg !9725
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.28, i64 0, i64 0), i8* %arraydecay) #13, !dbg !9728
  %2 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !9729
  %tcvr_type = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %2, i32 0, i32 18, !dbg !9731
  %3 = load i32, i32* %tcvr_type, align 8, !dbg !9731
  %cmp = icmp eq i32 %3, 0, !dbg !9732
  br i1 %cmp, label %if.then, label %if.else, !dbg !9733

if.then:                                          ; preds = %entry
  %call1 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.29, i64 0, i64 0)) #13, !dbg !9734
  br label %if.end, !dbg !9734

if.else:                                          ; preds = %entry
  %call2 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.30, i64 0, i64 0)) #13, !dbg !9735
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %call3 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.31, i64 0, i64 0)) #13, !dbg !9736
  %4 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !9737
  %5 = load i8*, i8** %tregs.addr, align 8, !dbg !9738
  %call4 = call i32 @happy_meal_tcvr_read(%struct.happy_meal* %4, i8* %5, i32 5) #12, !dbg !9739
  %conv = trunc i32 %call4 to i16, !dbg !9739
  %6 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !9740
  %sw_lpa = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %6, i32 0, i32 27, !dbg !9741
  store i16 %conv, i16* %sw_lpa, align 8, !dbg !9742
  %7 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !9743
  %sw_lpa5 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %7, i32 0, i32 27, !dbg !9745
  %8 = load i16, i16* %sw_lpa5, align 8, !dbg !9745
  %conv6 = zext i16 %8 to i32, !dbg !9743
  %and = and i32 %conv6, 384, !dbg !9746
  %tobool = icmp ne i32 %and, 0, !dbg !9746
  br i1 %tobool, label %if.then7, label %if.else17, !dbg !9747

if.then7:                                         ; preds = %if.end
  %9 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !9748
  %sw_lpa8 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %9, i32 0, i32 27, !dbg !9751
  %10 = load i16, i16* %sw_lpa8, align 8, !dbg !9751
  %conv9 = zext i16 %10 to i32, !dbg !9748
  %and10 = and i32 %conv9, 256, !dbg !9752
  %tobool11 = icmp ne i32 %and10, 0, !dbg !9752
  br i1 %tobool11, label %if.then12, label %if.else14, !dbg !9753

if.then12:                                        ; preds = %if.then7
  %call13 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.32, i64 0, i64 0)) #13, !dbg !9754
  br label %if.end16, !dbg !9754

if.else14:                                        ; preds = %if.then7
  %call15 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.33, i64 0, i64 0)) #13, !dbg !9755
  br label %if.end16

if.end16:                                         ; preds = %if.else14, %if.then12
  br label %if.end27, !dbg !9756

if.else17:                                        ; preds = %if.end
  %11 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !9757
  %sw_lpa18 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %11, i32 0, i32 27, !dbg !9760
  %12 = load i16, i16* %sw_lpa18, align 8, !dbg !9760
  %conv19 = zext i16 %12 to i32, !dbg !9757
  %and20 = and i32 %conv19, 64, !dbg !9761
  %tobool21 = icmp ne i32 %and20, 0, !dbg !9761
  br i1 %tobool21, label %if.then22, label %if.else24, !dbg !9762

if.then22:                                        ; preds = %if.else17
  %call23 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.34, i64 0, i64 0)) #13, !dbg !9763
  br label %if.end26, !dbg !9763

if.else24:                                        ; preds = %if.else17
  %call25 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.35, i64 0, i64 0)) #13, !dbg !9764
  br label %if.end26

if.end26:                                         ; preds = %if.else24, %if.then22
  br label %if.end27

if.end27:                                         ; preds = %if.end26, %if.end16
  ret void, !dbg !9765
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @display_forced_link_mode(%struct.happy_meal* %hp, i8* %tregs) #1 !dbg !9766 {
entry:
  %hp.addr = alloca %struct.happy_meal*, align 8
  %tregs.addr = alloca i8*, align 8
  store %struct.happy_meal* %hp, %struct.happy_meal** %hp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.happy_meal** %hp.addr, metadata !9767, metadata !DIExpression()), !dbg !9768
  store i8* %tregs, i8** %tregs.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %tregs.addr, metadata !9769, metadata !DIExpression()), !dbg !9770
  %0 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !9771
  %dev = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %0, i32 0, i32 41, !dbg !9772
  %1 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !9772
  %name = getelementptr inbounds %struct.net_device, %struct.net_device* %1, i32 0, i32 0, !dbg !9773
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %name, i64 0, i64 0, !dbg !9771
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.36, i64 0, i64 0), i8* %arraydecay) #13, !dbg !9774
  %2 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !9775
  %tcvr_type = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %2, i32 0, i32 18, !dbg !9777
  %3 = load i32, i32* %tcvr_type, align 8, !dbg !9777
  %cmp = icmp eq i32 %3, 0, !dbg !9778
  br i1 %cmp, label %if.then, label %if.else, !dbg !9779

if.then:                                          ; preds = %entry
  %call1 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.29, i64 0, i64 0)) #13, !dbg !9780
  br label %if.end, !dbg !9780

if.else:                                          ; preds = %entry
  %call2 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.30, i64 0, i64 0)) #13, !dbg !9781
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %call3 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.31, i64 0, i64 0)) #13, !dbg !9782
  %4 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !9783
  %5 = load i8*, i8** %tregs.addr, align 8, !dbg !9784
  %call4 = call i32 @happy_meal_tcvr_read(%struct.happy_meal* %4, i8* %5, i32 0) #12, !dbg !9785
  %conv = trunc i32 %call4 to i16, !dbg !9785
  %6 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !9786
  %sw_bmcr = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %6, i32 0, i32 22, !dbg !9787
  store i16 %conv, i16* %sw_bmcr, align 2, !dbg !9788
  %7 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !9789
  %sw_bmcr5 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %7, i32 0, i32 22, !dbg !9791
  %8 = load i16, i16* %sw_bmcr5, align 2, !dbg !9791
  %conv6 = zext i16 %8 to i32, !dbg !9789
  %and = and i32 %conv6, 8192, !dbg !9792
  %tobool = icmp ne i32 %and, 0, !dbg !9792
  br i1 %tobool, label %if.then7, label %if.else9, !dbg !9793

if.then7:                                         ; preds = %if.end
  %call8 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.37, i64 0, i64 0)) #13, !dbg !9794
  br label %if.end11, !dbg !9794

if.else9:                                         ; preds = %if.end
  %call10 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.38, i64 0, i64 0)) #13, !dbg !9795
  br label %if.end11

if.end11:                                         ; preds = %if.else9, %if.then7
  %9 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !9796
  %sw_bmcr12 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %9, i32 0, i32 22, !dbg !9798
  %10 = load i16, i16* %sw_bmcr12, align 2, !dbg !9798
  %conv13 = zext i16 %10 to i32, !dbg !9796
  %and14 = and i32 %conv13, 256, !dbg !9799
  %tobool15 = icmp ne i32 %and14, 0, !dbg !9799
  br i1 %tobool15, label %if.then16, label %if.else18, !dbg !9800

if.then16:                                        ; preds = %if.end11
  %call17 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.39, i64 0, i64 0)) #13, !dbg !9801
  br label %if.end20, !dbg !9801

if.else18:                                        ; preds = %if.end11
  %call19 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.40, i64 0, i64 0)) #13, !dbg !9802
  br label %if.end20

if.end20:                                         ; preds = %if.else18, %if.then16
  ret void, !dbg !9803
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @try_next_permutation(%struct.happy_meal* %hp, i8* %tregs) #1 !dbg !9804 {
entry:
  %retval = alloca i32, align 4
  %hp.addr = alloca %struct.happy_meal*, align 8
  %tregs.addr = alloca i8*, align 8
  store %struct.happy_meal* %hp, %struct.happy_meal** %hp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.happy_meal** %hp.addr, metadata !9805, metadata !DIExpression()), !dbg !9806
  store i8* %tregs, i8** %tregs.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %tregs.addr, metadata !9807, metadata !DIExpression()), !dbg !9808
  %0 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !9809
  %1 = load i8*, i8** %tregs.addr, align 8, !dbg !9810
  %call = call i32 @happy_meal_tcvr_read(%struct.happy_meal* %0, i8* %1, i32 0) #12, !dbg !9811
  %conv = trunc i32 %call to i16, !dbg !9811
  %2 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !9812
  %sw_bmcr = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %2, i32 0, i32 22, !dbg !9813
  store i16 %conv, i16* %sw_bmcr, align 2, !dbg !9814
  %3 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !9815
  %sw_bmcr1 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %3, i32 0, i32 22, !dbg !9817
  %4 = load i16, i16* %sw_bmcr1, align 2, !dbg !9817
  %conv2 = zext i16 %4 to i32, !dbg !9815
  %and = and i32 %conv2, 256, !dbg !9818
  %tobool = icmp ne i32 %and, 0, !dbg !9818
  br i1 %tobool, label %if.then, label %if.end, !dbg !9819

if.then:                                          ; preds = %entry
  %5 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !9820
  %sw_bmcr3 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %5, i32 0, i32 22, !dbg !9822
  %6 = load i16, i16* %sw_bmcr3, align 2, !dbg !9823
  %conv4 = zext i16 %6 to i32, !dbg !9823
  %and5 = and i32 %conv4, -257, !dbg !9823
  %conv6 = trunc i32 %and5 to i16, !dbg !9823
  store i16 %conv6, i16* %sw_bmcr3, align 2, !dbg !9823
  %7 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !9824
  %8 = load i8*, i8** %tregs.addr, align 8, !dbg !9825
  %9 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !9826
  %sw_bmcr7 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %9, i32 0, i32 22, !dbg !9827
  %10 = load i16, i16* %sw_bmcr7, align 2, !dbg !9827
  call void @happy_meal_tcvr_write(%struct.happy_meal* %7, i8* %8, i32 0, i16 zeroext %10) #12, !dbg !9828
  store i32 0, i32* %retval, align 4, !dbg !9829
  br label %return, !dbg !9829

if.end:                                           ; preds = %entry
  %11 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !9830
  %sw_bmcr8 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %11, i32 0, i32 22, !dbg !9832
  %12 = load i16, i16* %sw_bmcr8, align 2, !dbg !9832
  %conv9 = zext i16 %12 to i32, !dbg !9830
  %and10 = and i32 %conv9, 8192, !dbg !9833
  %tobool11 = icmp ne i32 %and10, 0, !dbg !9833
  br i1 %tobool11, label %if.then12, label %if.end18, !dbg !9834

if.then12:                                        ; preds = %if.end
  %13 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !9835
  %sw_bmcr13 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %13, i32 0, i32 22, !dbg !9837
  %14 = load i16, i16* %sw_bmcr13, align 2, !dbg !9838
  %conv14 = zext i16 %14 to i32, !dbg !9838
  %and15 = and i32 %conv14, -8193, !dbg !9838
  %conv16 = trunc i32 %and15 to i16, !dbg !9838
  store i16 %conv16, i16* %sw_bmcr13, align 2, !dbg !9838
  %15 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !9839
  %16 = load i8*, i8** %tregs.addr, align 8, !dbg !9840
  %17 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !9841
  %sw_bmcr17 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %17, i32 0, i32 22, !dbg !9842
  %18 = load i16, i16* %sw_bmcr17, align 2, !dbg !9842
  call void @happy_meal_tcvr_write(%struct.happy_meal* %15, i8* %16, i32 0, i16 zeroext %18) #12, !dbg !9843
  store i32 0, i32* %retval, align 4, !dbg !9844
  br label %return, !dbg !9844

if.end18:                                         ; preds = %if.end
  store i32 -1, i32* %retval, align 4, !dbg !9845
  br label %return, !dbg !9845

return:                                           ; preds = %if.end18, %if.then12, %if.then
  %19 = load i32, i32* %retval, align 4, !dbg !9846
  ret i32 %19, !dbg !9846
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @happy_meal_init(%struct.happy_meal* %hp) #1 !dbg !9847 {
entry:
  %retval = alloca i32, align 4
  %hp.addr = alloca %struct.happy_meal*, align 8
  %gregs = alloca i8*, align 8
  %etxregs = alloca i8*, align 8
  %erxregs = alloca i8*, align 8
  %bregs = alloca i8*, align 8
  %tregs = alloca i8*, align 8
  %regtmp = alloca i32, align 4
  %rxcfg = alloca i32, align 4
  %e = alloca i8*, align 8
  %hash_table = alloca [4 x i16], align 2
  %ha = alloca %struct.netdev_hw_addr*, align 8
  %crc = alloca i32, align 4
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.netdev_hw_addr*, align 8
  %__mptr91 = alloca i8*, align 8
  %tmp96 = alloca %struct.netdev_hw_addr*, align 8
  store %struct.happy_meal* %hp, %struct.happy_meal** %hp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.happy_meal** %hp.addr, metadata !9848, metadata !DIExpression()), !dbg !9849
  call void @llvm.dbg.declare(metadata i8** %gregs, metadata !9850, metadata !DIExpression()), !dbg !9851
  %0 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !9852
  %gregs1 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %0, i32 0, i32 0, !dbg !9853
  %1 = load i8*, i8** %gregs1, align 8, !dbg !9853
  store i8* %1, i8** %gregs, align 8, !dbg !9851
  call void @llvm.dbg.declare(metadata i8** %etxregs, metadata !9854, metadata !DIExpression()), !dbg !9855
  %2 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !9856
  %etxregs2 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %2, i32 0, i32 11, !dbg !9857
  %3 = load i8*, i8** %etxregs2, align 8, !dbg !9857
  store i8* %3, i8** %etxregs, align 8, !dbg !9855
  call void @llvm.dbg.declare(metadata i8** %erxregs, metadata !9858, metadata !DIExpression()), !dbg !9859
  %4 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !9860
  %erxregs3 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %4, i32 0, i32 12, !dbg !9861
  %5 = load i8*, i8** %erxregs3, align 8, !dbg !9861
  store i8* %5, i8** %erxregs, align 8, !dbg !9859
  call void @llvm.dbg.declare(metadata i8** %bregs, metadata !9862, metadata !DIExpression()), !dbg !9863
  %6 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !9864
  %bigmacregs = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %6, i32 0, i32 13, !dbg !9865
  %7 = load i8*, i8** %bigmacregs, align 8, !dbg !9865
  store i8* %7, i8** %bregs, align 8, !dbg !9863
  call void @llvm.dbg.declare(metadata i8** %tregs, metadata !9866, metadata !DIExpression()), !dbg !9867
  %8 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !9868
  %tcvregs = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %8, i32 0, i32 14, !dbg !9869
  %9 = load i8*, i8** %tcvregs, align 8, !dbg !9869
  store i8* %9, i8** %tregs, align 8, !dbg !9867
  call void @llvm.dbg.declare(metadata i32* %regtmp, metadata !9870, metadata !DIExpression()), !dbg !9871
  call void @llvm.dbg.declare(metadata i32* %rxcfg, metadata !9872, metadata !DIExpression()), !dbg !9873
  call void @llvm.dbg.declare(metadata i8** %e, metadata !9874, metadata !DIExpression()), !dbg !9875
  %10 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !9876
  %dev = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %10, i32 0, i32 41, !dbg !9877
  %11 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !9877
  %dev_addr = getelementptr inbounds %struct.net_device, %struct.net_device* %11, i32 0, i32 74, !dbg !9878
  %12 = load i8*, i8** %dev_addr, align 8, !dbg !9878
  %arrayidx = getelementptr i8, i8* %12, i64 0, !dbg !9876
  store i8* %arrayidx, i8** %e, align 8, !dbg !9875
  %13 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !9879
  %happy_timer = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %13, i32 0, i32 38, !dbg !9880
  %call = call i32 @del_timer(%struct.timer_list* %happy_timer) #12, !dbg !9881
  %14 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !9882
  %happy_flags = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %14, i32 0, i32 16, !dbg !9884
  %15 = load i32, i32* %happy_flags, align 8, !dbg !9884
  %and = and i32 %15, 512, !dbg !9885
  %tobool = icmp ne i32 %and, 0, !dbg !9885
  br i1 %tobool, label %if.end, label %if.then, !dbg !9886

if.then:                                          ; preds = %entry
  %16 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !9887
  %happy_flags4 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %16, i32 0, i32 16, !dbg !9889
  %17 = load i32, i32* %happy_flags4, align 8, !dbg !9890
  %or = or i32 %17, 512, !dbg !9890
  store i32 %or, i32* %happy_flags4, align 8, !dbg !9890
  %18 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !9891
  %19 = load i8*, i8** %bregs, align 8, !dbg !9892
  call void @happy_meal_get_counters(%struct.happy_meal* %18, i8* %19) #12, !dbg !9893
  br label %if.end, !dbg !9894

if.end:                                           ; preds = %if.then, %entry
  %20 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !9895
  %21 = load i8*, i8** %tregs, align 8, !dbg !9896
  call void @happy_meal_poll_stop(%struct.happy_meal* %20, i8* %21) #12, !dbg !9897
  %22 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !9898
  %23 = load i8*, i8** %gregs, align 8, !dbg !9899
  call void @happy_meal_stop(%struct.happy_meal* %22, i8* %23) #12, !dbg !9900
  %24 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !9901
  call void @happy_meal_init_rings(%struct.happy_meal* %24) #12, !dbg !9902
  %25 = load i8*, i8** %tregs, align 8, !dbg !9903
  %add.ptr = getelementptr i8, i8* %25, i64 20, !dbg !9903
  call void @writel(i32 65535, i8* %add.ptr) #12, !dbg !9903
  %26 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !9904
  %happy_flags5 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %26, i32 0, i32 16, !dbg !9906
  %27 = load i32, i32* %happy_flags5, align 8, !dbg !9906
  %and6 = and i32 %27, 2, !dbg !9907
  %tobool7 = icmp ne i32 %and6, 0, !dbg !9907
  br i1 %tobool7, label %if.then8, label %if.else, !dbg !9908

if.then8:                                         ; preds = %if.end
  %28 = load i8*, i8** %tregs, align 8, !dbg !9909
  %add.ptr9 = getelementptr i8, i8* %28, i64 16, !dbg !9909
  %call10 = call i32 @readl(i8* %add.ptr9) #12, !dbg !9909
  %and11 = and i32 %call10, -5, !dbg !9909
  %29 = load i8*, i8** %tregs, align 8, !dbg !9909
  %add.ptr12 = getelementptr i8, i8* %29, i64 16, !dbg !9909
  call void @writel(i32 %and11, i8* %add.ptr12) #12, !dbg !9909
  br label %if.end17, !dbg !9911

if.else:                                          ; preds = %if.end
  %30 = load i8*, i8** %tregs, align 8, !dbg !9912
  %add.ptr13 = getelementptr i8, i8* %30, i64 16, !dbg !9912
  %call14 = call i32 @readl(i8* %add.ptr13) #12, !dbg !9912
  %or15 = or i32 %call14, 4, !dbg !9912
  %31 = load i8*, i8** %tregs, align 8, !dbg !9912
  %add.ptr16 = getelementptr i8, i8* %31, i64 16, !dbg !9912
  call void @writel(i32 %or15, i8* %add.ptr16) #12, !dbg !9912
  br label %if.end17

if.end17:                                         ; preds = %if.else, %if.then8
  %32 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !9914
  %33 = load i8*, i8** %tregs, align 8, !dbg !9915
  call void @happy_meal_transceiver_check(%struct.happy_meal* %32, i8* %33) #12, !dbg !9916
  %34 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !9917
  %tcvr_type = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %34, i32 0, i32 18, !dbg !9918
  %35 = load i32, i32* %tcvr_type, align 8, !dbg !9918
  switch i32 %35, label %sw.epilog [
    i32 2, label %sw.bb
    i32 1, label %sw.bb18
    i32 0, label %sw.bb20
  ], !dbg !9919

sw.bb:                                            ; preds = %if.end17
  store i32 -11, i32* %retval, align 4, !dbg !9920
  br label %return, !dbg !9920

sw.bb18:                                          ; preds = %if.end17
  %36 = load i8*, i8** %bregs, align 8, !dbg !9922
  %add.ptr19 = getelementptr i8, i8* %36, i64 0, !dbg !9922
  call void @writel(i32 0, i8* %add.ptr19) #12, !dbg !9922
  br label %sw.epilog, !dbg !9923

sw.bb20:                                          ; preds = %if.end17
  %37 = load i8*, i8** %bregs, align 8, !dbg !9924
  %add.ptr21 = getelementptr i8, i8* %37, i64 0, !dbg !9924
  call void @writel(i32 8, i8* %add.ptr21) #12, !dbg !9924
  br label %sw.epilog, !dbg !9925

sw.epilog:                                        ; preds = %if.end17, %sw.bb20, %sw.bb18
  %38 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !9926
  %39 = load i8*, i8** %tregs, align 8, !dbg !9928
  %call22 = call i32 @happy_meal_tcvr_reset(%struct.happy_meal* %38, i8* %39) #12, !dbg !9929
  %tobool23 = icmp ne i32 %call22, 0, !dbg !9929
  br i1 %tobool23, label %if.then24, label %if.end25, !dbg !9930

if.then24:                                        ; preds = %sw.epilog
  store i32 -11, i32* %retval, align 4, !dbg !9931
  br label %return, !dbg !9931

if.end25:                                         ; preds = %sw.epilog
  %40 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !9932
  %41 = load i8*, i8** %bregs, align 8, !dbg !9933
  call void @happy_meal_tx_reset(%struct.happy_meal* %40, i8* %41) #12, !dbg !9934
  %42 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !9935
  %43 = load i8*, i8** %bregs, align 8, !dbg !9936
  call void @happy_meal_rx_reset(%struct.happy_meal* %42, i8* %43) #12, !dbg !9937
  %44 = load i8*, i8** %bregs, align 8, !dbg !9938
  %add.ptr26 = getelementptr i8, i8* %44, i64 556, !dbg !9938
  call void @writel(i32 4, i8* %add.ptr26) #12, !dbg !9938
  %45 = load i8*, i8** %bregs, align 8, !dbg !9939
  %add.ptr27 = getelementptr i8, i8* %45, i64 528, !dbg !9939
  call void @writel(i32 8, i8* %add.ptr27) #12, !dbg !9939
  %46 = load i8*, i8** %bregs, align 8, !dbg !9940
  %add.ptr28 = getelementptr i8, i8* %46, i64 532, !dbg !9940
  call void @writel(i32 4, i8* %add.ptr28) #12, !dbg !9940
  %47 = load i8*, i8** %e, align 8, !dbg !9941
  %arrayidx29 = getelementptr i8, i8* %47, i64 5, !dbg !9941
  %48 = load i8, i8* %arrayidx29, align 1, !dbg !9941
  %conv = zext i8 %48 to i32, !dbg !9941
  %49 = load i8*, i8** %e, align 8, !dbg !9941
  %arrayidx30 = getelementptr i8, i8* %49, i64 4, !dbg !9941
  %50 = load i8, i8* %arrayidx30, align 1, !dbg !9941
  %conv31 = zext i8 %50 to i32, !dbg !9941
  %shl = shl i32 %conv31, 8, !dbg !9941
  %or32 = or i32 %conv, %shl, !dbg !9941
  %and33 = and i32 %or32, 1023, !dbg !9941
  %51 = load i8*, i8** %bregs, align 8, !dbg !9941
  %add.ptr34 = getelementptr i8, i8* %51, i64 592, !dbg !9941
  call void @writel(i32 %and33, i8* %add.ptr34) #12, !dbg !9941
  %52 = load i8*, i8** %e, align 8, !dbg !9942
  %arrayidx35 = getelementptr i8, i8* %52, i64 4, !dbg !9942
  %53 = load i8, i8* %arrayidx35, align 1, !dbg !9942
  %conv36 = zext i8 %53 to i32, !dbg !9942
  %shl37 = shl i32 %conv36, 8, !dbg !9942
  %54 = load i8*, i8** %e, align 8, !dbg !9942
  %arrayidx38 = getelementptr i8, i8* %54, i64 5, !dbg !9942
  %55 = load i8, i8* %arrayidx38, align 1, !dbg !9942
  %conv39 = zext i8 %55 to i32, !dbg !9942
  %or40 = or i32 %shl37, %conv39, !dbg !9942
  %56 = load i8*, i8** %bregs, align 8, !dbg !9942
  %add.ptr41 = getelementptr i8, i8* %56, i64 792, !dbg !9942
  call void @writel(i32 %or40, i8* %add.ptr41) #12, !dbg !9942
  %57 = load i8*, i8** %e, align 8, !dbg !9943
  %arrayidx42 = getelementptr i8, i8* %57, i64 2, !dbg !9943
  %58 = load i8, i8* %arrayidx42, align 1, !dbg !9943
  %conv43 = zext i8 %58 to i32, !dbg !9943
  %shl44 = shl i32 %conv43, 8, !dbg !9943
  %59 = load i8*, i8** %e, align 8, !dbg !9943
  %arrayidx45 = getelementptr i8, i8* %59, i64 3, !dbg !9943
  %60 = load i8, i8* %arrayidx45, align 1, !dbg !9943
  %conv46 = zext i8 %60 to i32, !dbg !9943
  %or47 = or i32 %shl44, %conv46, !dbg !9943
  %61 = load i8*, i8** %bregs, align 8, !dbg !9943
  %add.ptr48 = getelementptr i8, i8* %61, i64 796, !dbg !9943
  call void @writel(i32 %or47, i8* %add.ptr48) #12, !dbg !9943
  %62 = load i8*, i8** %e, align 8, !dbg !9944
  %arrayidx49 = getelementptr i8, i8* %62, i64 0, !dbg !9944
  %63 = load i8, i8* %arrayidx49, align 1, !dbg !9944
  %conv50 = zext i8 %63 to i32, !dbg !9944
  %shl51 = shl i32 %conv50, 8, !dbg !9944
  %64 = load i8*, i8** %e, align 8, !dbg !9944
  %arrayidx52 = getelementptr i8, i8* %64, i64 1, !dbg !9944
  %65 = load i8, i8* %arrayidx52, align 1, !dbg !9944
  %conv53 = zext i8 %65 to i32, !dbg !9944
  %or54 = or i32 %shl51, %conv53, !dbg !9944
  %66 = load i8*, i8** %bregs, align 8, !dbg !9944
  %add.ptr55 = getelementptr i8, i8* %66, i64 800, !dbg !9944
  call void @writel(i32 %or54, i8* %add.ptr55) #12, !dbg !9944
  %67 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !9945
  %dev56 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %67, i32 0, i32 41, !dbg !9947
  %68 = load %struct.net_device*, %struct.net_device** %dev56, align 8, !dbg !9947
  %flags = getelementptr inbounds %struct.net_device, %struct.net_device* %68, i32 0, i32 36, !dbg !9948
  %69 = load i32, i32* %flags, align 8, !dbg !9948
  %and57 = and i32 %69, 512, !dbg !9949
  %tobool58 = icmp ne i32 %and57, 0, !dbg !9949
  br i1 %tobool58, label %if.then61, label %lor.lhs.false, !dbg !9950

lor.lhs.false:                                    ; preds = %if.end25
  %70 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !9951
  %dev59 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %70, i32 0, i32 41, !dbg !9951
  %71 = load %struct.net_device*, %struct.net_device** %dev59, align 8, !dbg !9951
  %mc = getelementptr inbounds %struct.net_device, %struct.net_device* %71, i32 0, i32 63, !dbg !9951
  %count = getelementptr inbounds %struct.netdev_hw_addr_list, %struct.netdev_hw_addr_list* %mc, i32 0, i32 1, !dbg !9951
  %72 = load i32, i32* %count, align 8, !dbg !9951
  %cmp = icmp sgt i32 %72, 64, !dbg !9952
  br i1 %cmp, label %if.then61, label %if.else66, !dbg !9953

if.then61:                                        ; preds = %lor.lhs.false, %if.end25
  %73 = load i8*, i8** %bregs, align 8, !dbg !9954
  %add.ptr62 = getelementptr i8, i8* %73, i64 844, !dbg !9954
  call void @writel(i32 65535, i8* %add.ptr62) #12, !dbg !9954
  %74 = load i8*, i8** %bregs, align 8, !dbg !9956
  %add.ptr63 = getelementptr i8, i8* %74, i64 840, !dbg !9956
  call void @writel(i32 65535, i8* %add.ptr63) #12, !dbg !9956
  %75 = load i8*, i8** %bregs, align 8, !dbg !9957
  %add.ptr64 = getelementptr i8, i8* %75, i64 836, !dbg !9957
  call void @writel(i32 65535, i8* %add.ptr64) #12, !dbg !9957
  %76 = load i8*, i8** %bregs, align 8, !dbg !9958
  %add.ptr65 = getelementptr i8, i8* %76, i64 832, !dbg !9958
  call void @writel(i32 65535, i8* %add.ptr65) #12, !dbg !9958
  br label %if.end116, !dbg !9959

if.else66:                                        ; preds = %lor.lhs.false
  %77 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !9960
  %dev67 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %77, i32 0, i32 41, !dbg !9962
  %78 = load %struct.net_device*, %struct.net_device** %dev67, align 8, !dbg !9962
  %flags68 = getelementptr inbounds %struct.net_device, %struct.net_device* %78, i32 0, i32 36, !dbg !9963
  %79 = load i32, i32* %flags68, align 8, !dbg !9963
  %and69 = and i32 %79, 256, !dbg !9964
  %cmp70 = icmp eq i32 %and69, 0, !dbg !9965
  br i1 %cmp70, label %if.then72, label %if.else110, !dbg !9966

if.then72:                                        ; preds = %if.else66
  call void @llvm.dbg.declare(metadata [4 x i16]* %hash_table, metadata !9967, metadata !DIExpression()), !dbg !9970
  call void @llvm.dbg.declare(metadata %struct.netdev_hw_addr** %ha, metadata !9971, metadata !DIExpression()), !dbg !9972
  call void @llvm.dbg.declare(metadata i32* %crc, metadata !9973, metadata !DIExpression()), !dbg !9974
  %arraydecay = getelementptr inbounds [4 x i16], [4 x i16]* %hash_table, i64 0, i64 0, !dbg !9975
  %80 = bitcast i16* %arraydecay to i8*, !dbg !9975
  call void @llvm.memset.p0i8.i64(i8* align 2 %80, i8 0, i64 8, i1 false), !dbg !9975
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !9976, metadata !DIExpression()), !dbg !9979
  %81 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !9979
  %dev73 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %81, i32 0, i32 41, !dbg !9979
  %82 = load %struct.net_device*, %struct.net_device** %dev73, align 8, !dbg !9979
  %mc74 = getelementptr inbounds %struct.net_device, %struct.net_device* %82, i32 0, i32 63, !dbg !9979
  %list = getelementptr inbounds %struct.netdev_hw_addr_list, %struct.netdev_hw_addr_list* %mc74, i32 0, i32 0, !dbg !9979
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %list, i32 0, i32 0, !dbg !9979
  %83 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !9979
  %84 = bitcast %struct.list_head* %83 to i8*, !dbg !9979
  store i8* %84, i8** %__mptr, align 8, !dbg !9979
  br label %do.body, !dbg !9979

do.body:                                          ; preds = %if.then72
  br label %do.end, !dbg !9980

do.end:                                           ; preds = %do.body
  %85 = load i8*, i8** %__mptr, align 8, !dbg !9979
  %add.ptr75 = getelementptr i8, i8* %85, i64 0, !dbg !9979
  %86 = bitcast i8* %add.ptr75 to %struct.netdev_hw_addr*, !dbg !9979
  store %struct.netdev_hw_addr* %86, %struct.netdev_hw_addr** %tmp, align 8, !dbg !9980
  %87 = load %struct.netdev_hw_addr*, %struct.netdev_hw_addr** %tmp, align 8, !dbg !9979
  store %struct.netdev_hw_addr* %87, %struct.netdev_hw_addr** %ha, align 8, !dbg !9982
  br label %for.cond, !dbg !9982

for.cond:                                         ; preds = %do.end95, %do.end
  %88 = load %struct.netdev_hw_addr*, %struct.netdev_hw_addr** %ha, align 8, !dbg !9983
  %list76 = getelementptr inbounds %struct.netdev_hw_addr, %struct.netdev_hw_addr* %88, i32 0, i32 0, !dbg !9983
  %89 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !9983
  %dev77 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %89, i32 0, i32 41, !dbg !9983
  %90 = load %struct.net_device*, %struct.net_device** %dev77, align 8, !dbg !9983
  %mc78 = getelementptr inbounds %struct.net_device, %struct.net_device* %90, i32 0, i32 63, !dbg !9983
  %list79 = getelementptr inbounds %struct.netdev_hw_addr_list, %struct.netdev_hw_addr_list* %mc78, i32 0, i32 0, !dbg !9983
  %cmp80 = icmp eq %struct.list_head* %list76, %list79, !dbg !9983
  %lnot = xor i1 %cmp80, true, !dbg !9983
  br i1 %lnot, label %for.body, label %for.end, !dbg !9982

for.body:                                         ; preds = %for.cond
  %91 = load %struct.netdev_hw_addr*, %struct.netdev_hw_addr** %ha, align 8, !dbg !9985
  %addr = getelementptr inbounds %struct.netdev_hw_addr, %struct.netdev_hw_addr* %91, i32 0, i32 1, !dbg !9985
  %arraydecay82 = getelementptr inbounds [32 x i8], [32 x i8]* %addr, i64 0, i64 0, !dbg !9985
  %call83 = call i32 @crc32_le(i32 -1, i8* %arraydecay82, i64 6) #16, !dbg !9985
  store i32 %call83, i32* %crc, align 4, !dbg !9987
  %92 = load i32, i32* %crc, align 4, !dbg !9988
  %shr = lshr i32 %92, 26, !dbg !9988
  store i32 %shr, i32* %crc, align 4, !dbg !9988
  %93 = load i32, i32* %crc, align 4, !dbg !9989
  %and84 = and i32 %93, 15, !dbg !9990
  %shl85 = shl i32 1, %and84, !dbg !9991
  %94 = load i32, i32* %crc, align 4, !dbg !9992
  %shr86 = lshr i32 %94, 4, !dbg !9993
  %idxprom = zext i32 %shr86 to i64, !dbg !9994
  %arrayidx87 = getelementptr [4 x i16], [4 x i16]* %hash_table, i64 0, i64 %idxprom, !dbg !9994
  %95 = load i16, i16* %arrayidx87, align 2, !dbg !9995
  %conv88 = zext i16 %95 to i32, !dbg !9995
  %or89 = or i32 %conv88, %shl85, !dbg !9995
  %conv90 = trunc i32 %or89 to i16, !dbg !9995
  store i16 %conv90, i16* %arrayidx87, align 2, !dbg !9995
  br label %for.inc, !dbg !9996

for.inc:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata i8** %__mptr91, metadata !9997, metadata !DIExpression()), !dbg !9999
  %96 = load %struct.netdev_hw_addr*, %struct.netdev_hw_addr** %ha, align 8, !dbg !9999
  %list92 = getelementptr inbounds %struct.netdev_hw_addr, %struct.netdev_hw_addr* %96, i32 0, i32 0, !dbg !9999
  %next93 = getelementptr inbounds %struct.list_head, %struct.list_head* %list92, i32 0, i32 0, !dbg !9999
  %97 = load %struct.list_head*, %struct.list_head** %next93, align 8, !dbg !9999
  %98 = bitcast %struct.list_head* %97 to i8*, !dbg !9999
  store i8* %98, i8** %__mptr91, align 8, !dbg !9999
  br label %do.body94, !dbg !9999

do.body94:                                        ; preds = %for.inc
  br label %do.end95, !dbg !10000

do.end95:                                         ; preds = %do.body94
  %99 = load i8*, i8** %__mptr91, align 8, !dbg !9999
  %add.ptr97 = getelementptr i8, i8* %99, i64 0, !dbg !9999
  %100 = bitcast i8* %add.ptr97 to %struct.netdev_hw_addr*, !dbg !9999
  store %struct.netdev_hw_addr* %100, %struct.netdev_hw_addr** %tmp96, align 8, !dbg !10000
  %101 = load %struct.netdev_hw_addr*, %struct.netdev_hw_addr** %tmp96, align 8, !dbg !9999
  store %struct.netdev_hw_addr* %101, %struct.netdev_hw_addr** %ha, align 8, !dbg !9983
  br label %for.cond, !dbg !9983, !llvm.loop !10002

for.end:                                          ; preds = %for.cond
  %arrayidx98 = getelementptr [4 x i16], [4 x i16]* %hash_table, i64 0, i64 0, !dbg !10004
  %102 = load i16, i16* %arrayidx98, align 2, !dbg !10004
  %conv99 = zext i16 %102 to i32, !dbg !10004
  %103 = load i8*, i8** %bregs, align 8, !dbg !10004
  %add.ptr100 = getelementptr i8, i8* %103, i64 844, !dbg !10004
  call void @writel(i32 %conv99, i8* %add.ptr100) #12, !dbg !10004
  %arrayidx101 = getelementptr [4 x i16], [4 x i16]* %hash_table, i64 0, i64 1, !dbg !10005
  %104 = load i16, i16* %arrayidx101, align 2, !dbg !10005
  %conv102 = zext i16 %104 to i32, !dbg !10005
  %105 = load i8*, i8** %bregs, align 8, !dbg !10005
  %add.ptr103 = getelementptr i8, i8* %105, i64 840, !dbg !10005
  call void @writel(i32 %conv102, i8* %add.ptr103) #12, !dbg !10005
  %arrayidx104 = getelementptr [4 x i16], [4 x i16]* %hash_table, i64 0, i64 2, !dbg !10006
  %106 = load i16, i16* %arrayidx104, align 2, !dbg !10006
  %conv105 = zext i16 %106 to i32, !dbg !10006
  %107 = load i8*, i8** %bregs, align 8, !dbg !10006
  %add.ptr106 = getelementptr i8, i8* %107, i64 836, !dbg !10006
  call void @writel(i32 %conv105, i8* %add.ptr106) #12, !dbg !10006
  %arrayidx107 = getelementptr [4 x i16], [4 x i16]* %hash_table, i64 0, i64 3, !dbg !10007
  %108 = load i16, i16* %arrayidx107, align 2, !dbg !10007
  %conv108 = zext i16 %108 to i32, !dbg !10007
  %109 = load i8*, i8** %bregs, align 8, !dbg !10007
  %add.ptr109 = getelementptr i8, i8* %109, i64 832, !dbg !10007
  call void @writel(i32 %conv108, i8* %add.ptr109) #12, !dbg !10007
  br label %if.end115, !dbg !10008

if.else110:                                       ; preds = %if.else66
  %110 = load i8*, i8** %bregs, align 8, !dbg !10009
  %add.ptr111 = getelementptr i8, i8* %110, i64 832, !dbg !10009
  call void @writel(i32 0, i8* %add.ptr111) #12, !dbg !10009
  %111 = load i8*, i8** %bregs, align 8, !dbg !10011
  %add.ptr112 = getelementptr i8, i8* %111, i64 836, !dbg !10011
  call void @writel(i32 0, i8* %add.ptr112) #12, !dbg !10011
  %112 = load i8*, i8** %bregs, align 8, !dbg !10012
  %add.ptr113 = getelementptr i8, i8* %112, i64 840, !dbg !10012
  call void @writel(i32 0, i8* %add.ptr113) #12, !dbg !10012
  %113 = load i8*, i8** %bregs, align 8, !dbg !10013
  %add.ptr114 = getelementptr i8, i8* %113, i64 844, !dbg !10013
  call void @writel(i32 0, i8* %add.ptr114) #12, !dbg !10013
  br label %if.end115

if.end115:                                        ; preds = %if.else110, %for.end
  br label %if.end116

if.end116:                                        ; preds = %if.end115, %if.then61
  %114 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !10014
  %hblock_dvma = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %114, i32 0, i32 15, !dbg !10014
  %115 = load i64, i64* %hblock_dvma, align 8, !dbg !10014
  %conv117 = trunc i64 %115 to i32, !dbg !10014
  %add = add i32 %conv117, 0, !dbg !10014
  %116 = load i8*, i8** %erxregs, align 8, !dbg !10014
  %add.ptr118 = getelementptr i8, i8* %116, i64 4, !dbg !10014
  call void @writel(i32 %add, i8* %add.ptr118) #12, !dbg !10014
  %117 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !10015
  %hblock_dvma119 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %117, i32 0, i32 15, !dbg !10015
  %118 = load i64, i64* %hblock_dvma119, align 8, !dbg !10015
  %conv120 = trunc i64 %118 to i32, !dbg !10015
  %add121 = add i32 %conv120, ptrtoint (%struct.happy_meal_txd* getelementptr (%struct.hmeal_init_block, %struct.hmeal_init_block* null, i32 0, i32 1, i64 0) to i32), !dbg !10015
  %119 = load i8*, i8** %etxregs, align 8, !dbg !10015
  %add.ptr122 = getelementptr i8, i8* %119, i64 8, !dbg !10015
  call void @writel(i32 %add121, i8* %add.ptr122) #12, !dbg !10015
  %120 = load i8*, i8** %erxregs, align 8, !dbg !10016
  %add.ptr123 = getelementptr i8, i8* %120, i64 4, !dbg !10016
  %call124 = call i32 @readl(i8* %add.ptr123) #12, !dbg !10016
  %121 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !10018
  %hblock_dvma125 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %121, i32 0, i32 15, !dbg !10019
  %122 = load i64, i64* %hblock_dvma125, align 8, !dbg !10019
  %conv126 = trunc i64 %122 to i32, !dbg !10020
  %add127 = add i32 %conv126, 0, !dbg !10021
  %cmp128 = icmp ne i32 %call124, %add127, !dbg !10022
  br i1 %cmp128, label %if.then130, label %if.end136, !dbg !10023

if.then130:                                       ; preds = %if.end116
  %123 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !10024
  %hblock_dvma131 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %123, i32 0, i32 15, !dbg !10024
  %124 = load i64, i64* %hblock_dvma131, align 8, !dbg !10024
  %conv132 = trunc i64 %124 to i32, !dbg !10024
  %add133 = add i32 %conv132, 0, !dbg !10024
  %or134 = or i32 %add133, 4, !dbg !10024
  %125 = load i8*, i8** %erxregs, align 8, !dbg !10024
  %add.ptr135 = getelementptr i8, i8* %125, i64 4, !dbg !10024
  call void @writel(i32 %or134, i8* %add.ptr135) #12, !dbg !10024
  br label %if.end136, !dbg !10024

if.end136:                                        ; preds = %if.then130, %if.end116
  %126 = load i8*, i8** %gregs, align 8, !dbg !10025
  %add.ptr137 = getelementptr i8, i8* %126, i64 4, !dbg !10025
  call void @writel(i32 2, i8* %add.ptr137) #12, !dbg !10025
  %127 = load i8*, i8** %gregs, align 8, !dbg !10026
  %add.ptr138 = getelementptr i8, i8* %127, i64 260, !dbg !10026
  call void @writel(i32 268435715, i8* %add.ptr138) #12, !dbg !10026
  %128 = load i8*, i8** %etxregs, align 8, !dbg !10027
  %add.ptr139 = getelementptr i8, i8* %128, i64 44, !dbg !10027
  call void @writel(i32 1, i8* %add.ptr139) #12, !dbg !10027
  %129 = load i8*, i8** %etxregs, align 8, !dbg !10028
  %add.ptr140 = getelementptr i8, i8* %129, i64 4, !dbg !10028
  %call141 = call i32 @readl(i8* %add.ptr140) #12, !dbg !10028
  %or142 = or i32 %call141, 1, !dbg !10028
  %130 = load i8*, i8** %etxregs, align 8, !dbg !10028
  %add.ptr143 = getelementptr i8, i8* %130, i64 4, !dbg !10028
  call void @writel(i32 %or142, i8* %add.ptr143) #12, !dbg !10028
  %131 = load i8*, i8** %erxregs, align 8, !dbg !10029
  %add.ptr144 = getelementptr i8, i8* %131, i64 0, !dbg !10029
  call void @writel(i32 458769, i8* %add.ptr144) #12, !dbg !10029
  %132 = load i8*, i8** %erxregs, align 8, !dbg !10030
  %add.ptr145 = getelementptr i8, i8* %132, i64 0, !dbg !10030
  %call146 = call i32 @readl(i8* %add.ptr145) #12, !dbg !10030
  store i32 %call146, i32* %regtmp, align 4, !dbg !10031
  %133 = load i8*, i8** %erxregs, align 8, !dbg !10032
  %add.ptr147 = getelementptr i8, i8* %133, i64 0, !dbg !10032
  call void @writel(i32 458769, i8* %add.ptr147) #12, !dbg !10032
  %134 = load i8*, i8** %erxregs, align 8, !dbg !10033
  %add.ptr148 = getelementptr i8, i8* %134, i64 0, !dbg !10033
  %call149 = call i32 @readl(i8* %add.ptr148) #12, !dbg !10033
  %cmp150 = icmp ne i32 %call149, 458769, !dbg !10035
  br i1 %cmp150, label %if.then152, label %if.end155, !dbg !10036

if.then152:                                       ; preds = %if.end136
  %call153 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.41, i64 0, i64 0)) #13, !dbg !10037
  %135 = load i32, i32* %regtmp, align 4, !dbg !10039
  %call154 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.42, i64 0, i64 0), i32 458769, i32 %135) #13, !dbg !10040
  br label %if.end155, !dbg !10041

if.end155:                                        ; preds = %if.then152, %if.end136
  store i32 2560, i32* %rxcfg, align 4, !dbg !10042
  %136 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !10043
  %dev156 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %136, i32 0, i32 41, !dbg !10045
  %137 = load %struct.net_device*, %struct.net_device** %dev156, align 8, !dbg !10045
  %flags157 = getelementptr inbounds %struct.net_device, %struct.net_device* %137, i32 0, i32 36, !dbg !10046
  %138 = load i32, i32* %flags157, align 8, !dbg !10046
  %and158 = and i32 %138, 256, !dbg !10047
  %tobool159 = icmp ne i32 %and158, 0, !dbg !10047
  br i1 %tobool159, label %if.then160, label %if.end162, !dbg !10048

if.then160:                                       ; preds = %if.end155
  %139 = load i32, i32* %rxcfg, align 4, !dbg !10049
  %or161 = or i32 %139, 64, !dbg !10049
  store i32 %or161, i32* %rxcfg, align 4, !dbg !10049
  br label %if.end162, !dbg !10050

if.end162:                                        ; preds = %if.then160, %if.end155
  %140 = load i32, i32* %rxcfg, align 4, !dbg !10051
  %141 = load i8*, i8** %bregs, align 8, !dbg !10051
  %add.ptr163 = getelementptr i8, i8* %141, i64 780, !dbg !10051
  call void @writel(i32 %140, i8* %add.ptr163) #12, !dbg !10051
  call void @__const_udelay(i64 42950) #12, !dbg !10052
  store i32 0, i32* %regtmp, align 4, !dbg !10057
  %142 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !10058
  %happy_flags164 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %142, i32 0, i32 16, !dbg !10060
  %143 = load i32, i32* %happy_flags164, align 8, !dbg !10060
  %and165 = and i32 %143, 32, !dbg !10061
  %tobool166 = icmp ne i32 %and165, 0, !dbg !10061
  br i1 %tobool166, label %if.then167, label %if.end169, !dbg !10062

if.then167:                                       ; preds = %if.end162
  %144 = load i32, i32* %regtmp, align 4, !dbg !10063
  %or168 = or i32 %144, 512, !dbg !10063
  store i32 %or168, i32* %regtmp, align 4, !dbg !10063
  br label %if.end169, !dbg !10064

if.end169:                                        ; preds = %if.then167, %if.end162
  %145 = load i32, i32* %regtmp, align 4, !dbg !10065
  %146 = load i8*, i8** %bregs, align 8, !dbg !10065
  %add.ptr170 = getelementptr i8, i8* %146, i64 524, !dbg !10065
  call void @writel(i32 %145, i8* %add.ptr170) #12, !dbg !10065
  %147 = load i8*, i8** %bregs, align 8, !dbg !10066
  %add.ptr171 = getelementptr i8, i8* %147, i64 536, !dbg !10066
  call void @writel(i32 16, i8* %add.ptr171) #12, !dbg !10066
  store i32 1, i32* %regtmp, align 4, !dbg !10067
  %148 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !10068
  %happy_flags172 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %148, i32 0, i32 16, !dbg !10070
  %149 = load i32, i32* %happy_flags172, align 8, !dbg !10070
  %and173 = and i32 %149, 4, !dbg !10071
  %tobool174 = icmp ne i32 %and173, 0, !dbg !10071
  br i1 %tobool174, label %if.then175, label %if.end177, !dbg !10072

if.then175:                                       ; preds = %if.end169
  %150 = load i32, i32* %regtmp, align 4, !dbg !10073
  %or176 = or i32 %150, 528, !dbg !10073
  store i32 %or176, i32* %regtmp, align 4, !dbg !10073
  br label %if.end177, !dbg !10074

if.end177:                                        ; preds = %if.then175, %if.end169
  %151 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !10075
  %tcvr_type178 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %151, i32 0, i32 18, !dbg !10077
  %152 = load i32, i32* %tcvr_type178, align 8, !dbg !10077
  %cmp179 = icmp eq i32 %152, 0, !dbg !10078
  br i1 %cmp179, label %if.then181, label %if.end183, !dbg !10079

if.then181:                                       ; preds = %if.end177
  %153 = load i32, i32* %regtmp, align 4, !dbg !10080
  %or182 = or i32 %153, 8, !dbg !10080
  store i32 %or182, i32* %regtmp, align 4, !dbg !10080
  br label %if.end183, !dbg !10081

if.end183:                                        ; preds = %if.then181, %if.end177
  %154 = load i32, i32* %regtmp, align 4, !dbg !10082
  %155 = load i8*, i8** %bregs, align 8, !dbg !10082
  %add.ptr184 = getelementptr i8, i8* %155, i64 0, !dbg !10082
  call void @writel(i32 %154, i8* %add.ptr184) #12, !dbg !10082
  %156 = load i8*, i8** %bregs, align 8, !dbg !10083
  %add.ptr185 = getelementptr i8, i8* %156, i64 560, !dbg !10083
  call void @writel(i32 1522, i8* %add.ptr185) #12, !dbg !10083
  %157 = load i8*, i8** %bregs, align 8, !dbg !10084
  %add.ptr186 = getelementptr i8, i8* %157, i64 784, !dbg !10084
  call void @writel(i32 1522, i8* %add.ptr186) #12, !dbg !10084
  %158 = load i8*, i8** %bregs, align 8, !dbg !10085
  %add.ptr187 = getelementptr i8, i8* %158, i64 524, !dbg !10085
  %call188 = call i32 @readl(i8* %add.ptr187) #12, !dbg !10085
  %or189 = or i32 %call188, 1, !dbg !10085
  %159 = load i8*, i8** %bregs, align 8, !dbg !10085
  %add.ptr190 = getelementptr i8, i8* %159, i64 524, !dbg !10085
  call void @writel(i32 %or189, i8* %add.ptr190) #12, !dbg !10085
  %160 = load i8*, i8** %bregs, align 8, !dbg !10086
  %add.ptr191 = getelementptr i8, i8* %160, i64 780, !dbg !10086
  %call192 = call i32 @readl(i8* %add.ptr191) #12, !dbg !10086
  %or193 = or i32 %call192, 1, !dbg !10086
  %161 = load i8*, i8** %bregs, align 8, !dbg !10086
  %add.ptr194 = getelementptr i8, i8* %161, i64 780, !dbg !10086
  call void @writel(i32 %or193, i8* %add.ptr194) #12, !dbg !10086
  %162 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !10087
  %163 = load i8*, i8** %tregs, align 8, !dbg !10088
  call void @happy_meal_begin_auto_negotiation(%struct.happy_meal* %162, i8* %163, %struct.ethtool_link_ksettings* null) #12, !dbg !10089
  store i32 0, i32* %retval, align 4, !dbg !10090
  br label %return, !dbg !10090

return:                                           ; preds = %if.end183, %if.then24, %sw.bb
  %164 = load i32, i32* %retval, align 4, !dbg !10091
  ret i32 %164, !dbg !10091
}

; Function Attrs: noredzone
declare dso_local void @add_timer(%struct.timer_list*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @happy_meal_bb_read(%struct.happy_meal* %hp, i8* %tregs, i32 %reg) #1 !dbg !10092 {
entry:
  %hp.addr = alloca %struct.happy_meal*, align 8
  %tregs.addr = alloca i8*, align 8
  %reg.addr = alloca i32, align 4
  %tmp = alloca i32, align 4
  %retval1 = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.happy_meal* %hp, %struct.happy_meal** %hp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.happy_meal** %hp.addr, metadata !10093, metadata !DIExpression()), !dbg !10094
  store i8* %tregs, i8** %tregs.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %tregs.addr, metadata !10095, metadata !DIExpression()), !dbg !10096
  store i32 %reg, i32* %reg.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %reg.addr, metadata !10097, metadata !DIExpression()), !dbg !10098
  call void @llvm.dbg.declare(metadata i32* %tmp, metadata !10099, metadata !DIExpression()), !dbg !10100
  call void @llvm.dbg.declare(metadata i32* %retval1, metadata !10101, metadata !DIExpression()), !dbg !10102
  store i32 0, i32* %retval1, align 4, !dbg !10102
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10103, metadata !DIExpression()), !dbg !10104
  %0 = load i8*, i8** %tregs.addr, align 8, !dbg !10105
  %add.ptr = getelementptr i8, i8* %0, i64 8, !dbg !10105
  call void @writel(i32 1, i8* %add.ptr) #12, !dbg !10105
  store i32 0, i32* %i, align 4, !dbg !10106
  br label %for.cond, !dbg !10108

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, i32* %i, align 4, !dbg !10109
  %cmp = icmp slt i32 %1, 32, !dbg !10111
  br i1 %cmp, label %for.body, label %for.end, !dbg !10112

for.body:                                         ; preds = %for.cond
  %2 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !10113
  %3 = load i8*, i8** %tregs.addr, align 8, !dbg !10114
  call void @BB_PUT_BIT(%struct.happy_meal* %2, i8* %3, i32 1) #12, !dbg !10115
  br label %for.inc, !dbg !10115

for.inc:                                          ; preds = %for.body
  %4 = load i32, i32* %i, align 4, !dbg !10116
  %inc = add i32 %4, 1, !dbg !10116
  store i32 %inc, i32* %i, align 4, !dbg !10116
  br label %for.cond, !dbg !10117, !llvm.loop !10118

for.end:                                          ; preds = %for.cond
  %5 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !10120
  %6 = load i8*, i8** %tregs.addr, align 8, !dbg !10121
  call void @BB_PUT_BIT(%struct.happy_meal* %5, i8* %6, i32 0) #12, !dbg !10122
  %7 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !10123
  %8 = load i8*, i8** %tregs.addr, align 8, !dbg !10124
  call void @BB_PUT_BIT(%struct.happy_meal* %7, i8* %8, i32 1) #12, !dbg !10125
  %9 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !10126
  %10 = load i8*, i8** %tregs.addr, align 8, !dbg !10127
  call void @BB_PUT_BIT(%struct.happy_meal* %9, i8* %10, i32 1) #12, !dbg !10128
  %11 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !10129
  %12 = load i8*, i8** %tregs.addr, align 8, !dbg !10130
  call void @BB_PUT_BIT(%struct.happy_meal* %11, i8* %12, i32 0) #12, !dbg !10131
  %13 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !10132
  %paddr = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %13, i32 0, i32 20, !dbg !10133
  %14 = load i32, i32* %paddr, align 8, !dbg !10133
  %and = and i32 %14, 255, !dbg !10134
  store i32 %and, i32* %tmp, align 4, !dbg !10135
  store i32 4, i32* %i, align 4, !dbg !10136
  br label %for.cond2, !dbg !10138

for.cond2:                                        ; preds = %for.inc6, %for.end
  %15 = load i32, i32* %i, align 4, !dbg !10139
  %cmp3 = icmp sge i32 %15, 0, !dbg !10141
  br i1 %cmp3, label %for.body4, label %for.end7, !dbg !10142

for.body4:                                        ; preds = %for.cond2
  %16 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !10143
  %17 = load i8*, i8** %tregs.addr, align 8, !dbg !10144
  %18 = load i32, i32* %tmp, align 4, !dbg !10145
  %19 = load i32, i32* %i, align 4, !dbg !10146
  %shr = lshr i32 %18, %19, !dbg !10147
  %and5 = and i32 %shr, 1, !dbg !10148
  call void @BB_PUT_BIT(%struct.happy_meal* %16, i8* %17, i32 %and5) #12, !dbg !10149
  br label %for.inc6, !dbg !10149

for.inc6:                                         ; preds = %for.body4
  %20 = load i32, i32* %i, align 4, !dbg !10150
  %dec = add i32 %20, -1, !dbg !10150
  store i32 %dec, i32* %i, align 4, !dbg !10150
  br label %for.cond2, !dbg !10151, !llvm.loop !10152

for.end7:                                         ; preds = %for.cond2
  %21 = load i32, i32* %reg.addr, align 4, !dbg !10154
  %and8 = and i32 %21, 255, !dbg !10155
  store i32 %and8, i32* %tmp, align 4, !dbg !10156
  store i32 4, i32* %i, align 4, !dbg !10157
  br label %for.cond9, !dbg !10159

for.cond9:                                        ; preds = %for.inc14, %for.end7
  %22 = load i32, i32* %i, align 4, !dbg !10160
  %cmp10 = icmp sge i32 %22, 0, !dbg !10162
  br i1 %cmp10, label %for.body11, label %for.end16, !dbg !10163

for.body11:                                       ; preds = %for.cond9
  %23 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !10164
  %24 = load i8*, i8** %tregs.addr, align 8, !dbg !10165
  %25 = load i32, i32* %tmp, align 4, !dbg !10166
  %26 = load i32, i32* %i, align 4, !dbg !10167
  %shr12 = lshr i32 %25, %26, !dbg !10168
  %and13 = and i32 %shr12, 1, !dbg !10169
  call void @BB_PUT_BIT(%struct.happy_meal* %23, i8* %24, i32 %and13) #12, !dbg !10170
  br label %for.inc14, !dbg !10170

for.inc14:                                        ; preds = %for.body11
  %27 = load i32, i32* %i, align 4, !dbg !10171
  %dec15 = add i32 %27, -1, !dbg !10171
  store i32 %dec15, i32* %i, align 4, !dbg !10171
  br label %for.cond9, !dbg !10172, !llvm.loop !10173

for.end16:                                        ; preds = %for.cond9
  %28 = load i8*, i8** %tregs.addr, align 8, !dbg !10175
  %add.ptr17 = getelementptr i8, i8* %28, i64 8, !dbg !10175
  call void @writel(i32 0, i8* %add.ptr17) #12, !dbg !10175
  %29 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !10176
  %30 = load i8*, i8** %tregs.addr, align 8, !dbg !10177
  %31 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !10178
  %tcvr_type = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %31, i32 0, i32 18, !dbg !10179
  %32 = load i32, i32* %tcvr_type, align 8, !dbg !10179
  %cmp18 = icmp eq i32 %32, 1, !dbg !10180
  %conv = zext i1 %cmp18 to i32, !dbg !10180
  %call = call i32 @BB_GET_BIT2(%struct.happy_meal* %29, i8* %30, i32 %conv) #12, !dbg !10181
  store i32 15, i32* %i, align 4, !dbg !10182
  br label %for.cond19, !dbg !10184

for.cond19:                                       ; preds = %for.inc27, %for.end16
  %33 = load i32, i32* %i, align 4, !dbg !10185
  %cmp20 = icmp sge i32 %33, 0, !dbg !10187
  br i1 %cmp20, label %for.body22, label %for.end29, !dbg !10188

for.body22:                                       ; preds = %for.cond19
  %34 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !10189
  %35 = load i8*, i8** %tregs.addr, align 8, !dbg !10190
  %36 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !10191
  %tcvr_type23 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %36, i32 0, i32 18, !dbg !10192
  %37 = load i32, i32* %tcvr_type23, align 8, !dbg !10192
  %cmp24 = icmp eq i32 %37, 1, !dbg !10193
  %conv25 = zext i1 %cmp24 to i32, !dbg !10193
  %call26 = call i32 @BB_GET_BIT2(%struct.happy_meal* %34, i8* %35, i32 %conv25) #12, !dbg !10194
  %38 = load i32, i32* %retval1, align 4, !dbg !10195
  %or = or i32 %38, %call26, !dbg !10195
  store i32 %or, i32* %retval1, align 4, !dbg !10195
  br label %for.inc27, !dbg !10196

for.inc27:                                        ; preds = %for.body22
  %39 = load i32, i32* %i, align 4, !dbg !10197
  %dec28 = add i32 %39, -1, !dbg !10197
  store i32 %dec28, i32* %i, align 4, !dbg !10197
  br label %for.cond19, !dbg !10198, !llvm.loop !10199

for.end29:                                        ; preds = %for.cond19
  %40 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !10201
  %41 = load i8*, i8** %tregs.addr, align 8, !dbg !10202
  %42 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !10203
  %tcvr_type30 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %42, i32 0, i32 18, !dbg !10204
  %43 = load i32, i32* %tcvr_type30, align 8, !dbg !10204
  %cmp31 = icmp eq i32 %43, 1, !dbg !10205
  %conv32 = zext i1 %cmp31 to i32, !dbg !10205
  %call33 = call i32 @BB_GET_BIT2(%struct.happy_meal* %40, i8* %41, i32 %conv32) #12, !dbg !10206
  %44 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !10207
  %45 = load i8*, i8** %tregs.addr, align 8, !dbg !10208
  %46 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !10209
  %tcvr_type34 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %46, i32 0, i32 18, !dbg !10210
  %47 = load i32, i32* %tcvr_type34, align 8, !dbg !10210
  %cmp35 = icmp eq i32 %47, 1, !dbg !10211
  %conv36 = zext i1 %cmp35 to i32, !dbg !10211
  %call37 = call i32 @BB_GET_BIT2(%struct.happy_meal* %44, i8* %45, i32 %conv36) #12, !dbg !10212
  %48 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !10213
  %49 = load i8*, i8** %tregs.addr, align 8, !dbg !10214
  %50 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !10215
  %tcvr_type38 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %50, i32 0, i32 18, !dbg !10216
  %51 = load i32, i32* %tcvr_type38, align 8, !dbg !10216
  %cmp39 = icmp eq i32 %51, 1, !dbg !10217
  %conv40 = zext i1 %cmp39 to i32, !dbg !10217
  %call41 = call i32 @BB_GET_BIT2(%struct.happy_meal* %48, i8* %49, i32 %conv40) #12, !dbg !10218
  %52 = load i32, i32* %retval1, align 4, !dbg !10219
  ret i32 %52, !dbg !10220
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @writel(i32 %val, i8* %addr) #1 !dbg !10221 {
entry:
  %val.addr = alloca i32, align 4
  %addr.addr = alloca i8*, align 8
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !10225, metadata !DIExpression()), !dbg !10226
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !10227, metadata !DIExpression()), !dbg !10226
  %0 = load i32, i32* %val.addr, align 4, !dbg !10226
  %1 = load i8*, i8** %addr.addr, align 8, !dbg !10226
  %2 = bitcast i8* %1 to i32*, !dbg !10226
  call void asm sideeffect "movl $0,$1", "r,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i32 %0, i32* %2) #11, !dbg !10226, !srcloc !10228
  ret void, !dbg !10226
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @readl(i8* %addr) #1 !dbg !10229 {
entry:
  %addr.addr = alloca i8*, align 8
  %ret = alloca i32, align 4
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !10232, metadata !DIExpression()), !dbg !10233
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !10234, metadata !DIExpression()), !dbg !10233
  %0 = load i8*, i8** %addr.addr, align 8, !dbg !10233
  %1 = bitcast i8* %0 to i32*, !dbg !10233
  %2 = call i32 asm sideeffect "movl $1,$0", "=r,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i32* %1) #11, !dbg !10233, !srcloc !10235
  store i32 %2, i32* %ret, align 4, !dbg !10233
  %3 = load i32, i32* %ret, align 4, !dbg !10233
  ret i32 %3, !dbg !10233
}

; Function Attrs: noredzone
declare dso_local void @__const_udelay(i64) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @BB_PUT_BIT(%struct.happy_meal* %hp, i8* %tregs, i32 %bit) #1 !dbg !10236 {
entry:
  %hp.addr = alloca %struct.happy_meal*, align 8
  %tregs.addr = alloca i8*, align 8
  %bit.addr = alloca i32, align 4
  store %struct.happy_meal* %hp, %struct.happy_meal** %hp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.happy_meal** %hp.addr, metadata !10239, metadata !DIExpression()), !dbg !10240
  store i8* %tregs, i8** %tregs.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %tregs.addr, metadata !10241, metadata !DIExpression()), !dbg !10242
  store i32 %bit, i32* %bit.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bit.addr, metadata !10243, metadata !DIExpression()), !dbg !10244
  %0 = load i32, i32* %bit.addr, align 4, !dbg !10245
  %1 = load i8*, i8** %tregs.addr, align 8, !dbg !10245
  %add.ptr = getelementptr i8, i8* %1, i64 4, !dbg !10245
  call void @writel(i32 %0, i8* %add.ptr) #12, !dbg !10245
  %2 = load i8*, i8** %tregs.addr, align 8, !dbg !10246
  %add.ptr1 = getelementptr i8, i8* %2, i64 0, !dbg !10246
  call void @writel(i32 0, i8* %add.ptr1) #12, !dbg !10246
  %3 = load i8*, i8** %tregs.addr, align 8, !dbg !10247
  %add.ptr2 = getelementptr i8, i8* %3, i64 0, !dbg !10247
  call void @writel(i32 1, i8* %add.ptr2) #12, !dbg !10247
  ret void, !dbg !10248
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @BB_GET_BIT2(%struct.happy_meal* %hp, i8* %tregs, i32 %internal) #1 !dbg !10249 {
entry:
  %hp.addr = alloca %struct.happy_meal*, align 8
  %tregs.addr = alloca i8*, align 8
  %internal.addr = alloca i32, align 4
  %retval1 = alloca i32, align 4
  store %struct.happy_meal* %hp, %struct.happy_meal** %hp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.happy_meal** %hp.addr, metadata !10252, metadata !DIExpression()), !dbg !10253
  store i8* %tregs, i8** %tregs.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %tregs.addr, metadata !10254, metadata !DIExpression()), !dbg !10255
  store i32 %internal, i32* %internal.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %internal.addr, metadata !10256, metadata !DIExpression()), !dbg !10257
  call void @llvm.dbg.declare(metadata i32* %retval1, metadata !10258, metadata !DIExpression()), !dbg !10259
  %0 = load i8*, i8** %tregs.addr, align 8, !dbg !10260
  %add.ptr = getelementptr i8, i8* %0, i64 0, !dbg !10260
  call void @writel(i32 0, i8* %add.ptr) #12, !dbg !10260
  call void @__const_udelay(i64 4295) #12, !dbg !10261
  %1 = load i8*, i8** %tregs.addr, align 8, !dbg !10266
  %add.ptr2 = getelementptr i8, i8* %1, i64 16, !dbg !10266
  %call = call i32 @readl(i8* %add.ptr2) #12, !dbg !10266
  store i32 %call, i32* %retval1, align 4, !dbg !10267
  %2 = load i32, i32* %internal.addr, align 4, !dbg !10268
  %tobool = icmp ne i32 %2, 0, !dbg !10268
  br i1 %tobool, label %if.then, label %if.else, !dbg !10270

if.then:                                          ; preds = %entry
  %3 = load i32, i32* %retval1, align 4, !dbg !10271
  %and = and i32 %3, 256, !dbg !10271
  store i32 %and, i32* %retval1, align 4, !dbg !10271
  br label %if.end, !dbg !10272

if.else:                                          ; preds = %entry
  %4 = load i32, i32* %retval1, align 4, !dbg !10273
  %and3 = and i32 %4, 512, !dbg !10273
  store i32 %and3, i32* %retval1, align 4, !dbg !10273
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %5 = load i8*, i8** %tregs.addr, align 8, !dbg !10274
  %add.ptr4 = getelementptr i8, i8* %5, i64 0, !dbg !10274
  call void @writel(i32 1, i8* %add.ptr4) #12, !dbg !10274
  %6 = load i32, i32* %retval1, align 4, !dbg !10275
  ret i32 %6, !dbg !10276
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @happy_meal_bb_write(%struct.happy_meal* %hp, i8* %tregs, i32 %reg, i16 zeroext %value) #1 !dbg !10277 {
entry:
  %hp.addr = alloca %struct.happy_meal*, align 8
  %tregs.addr = alloca i8*, align 8
  %reg.addr = alloca i32, align 4
  %value.addr = alloca i16, align 2
  %tmp = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.happy_meal* %hp, %struct.happy_meal** %hp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.happy_meal** %hp.addr, metadata !10278, metadata !DIExpression()), !dbg !10279
  store i8* %tregs, i8** %tregs.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %tregs.addr, metadata !10280, metadata !DIExpression()), !dbg !10281
  store i32 %reg, i32* %reg.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %reg.addr, metadata !10282, metadata !DIExpression()), !dbg !10283
  store i16 %value, i16* %value.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %value.addr, metadata !10284, metadata !DIExpression()), !dbg !10285
  call void @llvm.dbg.declare(metadata i32* %tmp, metadata !10286, metadata !DIExpression()), !dbg !10287
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10288, metadata !DIExpression()), !dbg !10289
  %0 = load i8*, i8** %tregs.addr, align 8, !dbg !10290
  %add.ptr = getelementptr i8, i8* %0, i64 8, !dbg !10290
  call void @writel(i32 1, i8* %add.ptr) #12, !dbg !10290
  store i32 0, i32* %i, align 4, !dbg !10291
  br label %for.cond, !dbg !10293

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, i32* %i, align 4, !dbg !10294
  %cmp = icmp slt i32 %1, 32, !dbg !10296
  br i1 %cmp, label %for.body, label %for.end, !dbg !10297

for.body:                                         ; preds = %for.cond
  %2 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !10298
  %3 = load i8*, i8** %tregs.addr, align 8, !dbg !10299
  call void @BB_PUT_BIT(%struct.happy_meal* %2, i8* %3, i32 1) #12, !dbg !10300
  br label %for.inc, !dbg !10300

for.inc:                                          ; preds = %for.body
  %4 = load i32, i32* %i, align 4, !dbg !10301
  %inc = add i32 %4, 1, !dbg !10301
  store i32 %inc, i32* %i, align 4, !dbg !10301
  br label %for.cond, !dbg !10302, !llvm.loop !10303

for.end:                                          ; preds = %for.cond
  %5 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !10305
  %6 = load i8*, i8** %tregs.addr, align 8, !dbg !10306
  call void @BB_PUT_BIT(%struct.happy_meal* %5, i8* %6, i32 0) #12, !dbg !10307
  %7 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !10308
  %8 = load i8*, i8** %tregs.addr, align 8, !dbg !10309
  call void @BB_PUT_BIT(%struct.happy_meal* %7, i8* %8, i32 1) #12, !dbg !10310
  %9 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !10311
  %10 = load i8*, i8** %tregs.addr, align 8, !dbg !10312
  call void @BB_PUT_BIT(%struct.happy_meal* %9, i8* %10, i32 0) #12, !dbg !10313
  %11 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !10314
  %12 = load i8*, i8** %tregs.addr, align 8, !dbg !10315
  call void @BB_PUT_BIT(%struct.happy_meal* %11, i8* %12, i32 1) #12, !dbg !10316
  %13 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !10317
  %paddr = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %13, i32 0, i32 20, !dbg !10318
  %14 = load i32, i32* %paddr, align 8, !dbg !10318
  %and = and i32 %14, 255, !dbg !10319
  store i32 %and, i32* %tmp, align 4, !dbg !10320
  store i32 4, i32* %i, align 4, !dbg !10321
  br label %for.cond1, !dbg !10323

for.cond1:                                        ; preds = %for.inc5, %for.end
  %15 = load i32, i32* %i, align 4, !dbg !10324
  %cmp2 = icmp sge i32 %15, 0, !dbg !10326
  br i1 %cmp2, label %for.body3, label %for.end6, !dbg !10327

for.body3:                                        ; preds = %for.cond1
  %16 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !10328
  %17 = load i8*, i8** %tregs.addr, align 8, !dbg !10329
  %18 = load i32, i32* %tmp, align 4, !dbg !10330
  %19 = load i32, i32* %i, align 4, !dbg !10331
  %shr = lshr i32 %18, %19, !dbg !10332
  %and4 = and i32 %shr, 1, !dbg !10333
  call void @BB_PUT_BIT(%struct.happy_meal* %16, i8* %17, i32 %and4) #12, !dbg !10334
  br label %for.inc5, !dbg !10334

for.inc5:                                         ; preds = %for.body3
  %20 = load i32, i32* %i, align 4, !dbg !10335
  %dec = add i32 %20, -1, !dbg !10335
  store i32 %dec, i32* %i, align 4, !dbg !10335
  br label %for.cond1, !dbg !10336, !llvm.loop !10337

for.end6:                                         ; preds = %for.cond1
  %21 = load i32, i32* %reg.addr, align 4, !dbg !10339
  %and7 = and i32 %21, 255, !dbg !10340
  store i32 %and7, i32* %tmp, align 4, !dbg !10341
  store i32 4, i32* %i, align 4, !dbg !10342
  br label %for.cond8, !dbg !10344

for.cond8:                                        ; preds = %for.inc13, %for.end6
  %22 = load i32, i32* %i, align 4, !dbg !10345
  %cmp9 = icmp sge i32 %22, 0, !dbg !10347
  br i1 %cmp9, label %for.body10, label %for.end15, !dbg !10348

for.body10:                                       ; preds = %for.cond8
  %23 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !10349
  %24 = load i8*, i8** %tregs.addr, align 8, !dbg !10350
  %25 = load i32, i32* %tmp, align 4, !dbg !10351
  %26 = load i32, i32* %i, align 4, !dbg !10352
  %shr11 = lshr i32 %25, %26, !dbg !10353
  %and12 = and i32 %shr11, 1, !dbg !10354
  call void @BB_PUT_BIT(%struct.happy_meal* %23, i8* %24, i32 %and12) #12, !dbg !10355
  br label %for.inc13, !dbg !10355

for.inc13:                                        ; preds = %for.body10
  %27 = load i32, i32* %i, align 4, !dbg !10356
  %dec14 = add i32 %27, -1, !dbg !10356
  store i32 %dec14, i32* %i, align 4, !dbg !10356
  br label %for.cond8, !dbg !10357, !llvm.loop !10358

for.end15:                                        ; preds = %for.cond8
  %28 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !10360
  %29 = load i8*, i8** %tregs.addr, align 8, !dbg !10361
  call void @BB_PUT_BIT(%struct.happy_meal* %28, i8* %29, i32 1) #12, !dbg !10362
  %30 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !10363
  %31 = load i8*, i8** %tregs.addr, align 8, !dbg !10364
  call void @BB_PUT_BIT(%struct.happy_meal* %30, i8* %31, i32 0) #12, !dbg !10365
  store i32 15, i32* %i, align 4, !dbg !10366
  br label %for.cond16, !dbg !10368

for.cond16:                                       ; preds = %for.inc21, %for.end15
  %32 = load i32, i32* %i, align 4, !dbg !10369
  %cmp17 = icmp sge i32 %32, 0, !dbg !10371
  br i1 %cmp17, label %for.body18, label %for.end23, !dbg !10372

for.body18:                                       ; preds = %for.cond16
  %33 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !10373
  %34 = load i8*, i8** %tregs.addr, align 8, !dbg !10374
  %35 = load i16, i16* %value.addr, align 2, !dbg !10375
  %conv = zext i16 %35 to i32, !dbg !10375
  %36 = load i32, i32* %i, align 4, !dbg !10376
  %shr19 = ashr i32 %conv, %36, !dbg !10377
  %and20 = and i32 %shr19, 1, !dbg !10378
  call void @BB_PUT_BIT(%struct.happy_meal* %33, i8* %34, i32 %and20) #12, !dbg !10379
  br label %for.inc21, !dbg !10379

for.inc21:                                        ; preds = %for.body18
  %37 = load i32, i32* %i, align 4, !dbg !10380
  %dec22 = add i32 %37, -1, !dbg !10380
  store i32 %dec22, i32* %i, align 4, !dbg !10380
  br label %for.cond16, !dbg !10381, !llvm.loop !10382

for.end23:                                        ; preds = %for.cond16
  %38 = load i8*, i8** %tregs.addr, align 8, !dbg !10384
  %add.ptr24 = getelementptr i8, i8* %38, i64 8, !dbg !10384
  call void @writel(i32 0, i8* %add.ptr24) #12, !dbg !10384
  ret void, !dbg !10385
}

; Function Attrs: noredzone
declare dso_local i32 @del_timer(%struct.timer_list*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @happy_meal_get_counters(%struct.happy_meal* %hp, i8* %bregs) #1 !dbg !10386 {
entry:
  %hp.addr = alloca %struct.happy_meal*, align 8
  %bregs.addr = alloca i8*, align 8
  %stats = alloca %struct.net_device_stats*, align 8
  store %struct.happy_meal* %hp, %struct.happy_meal** %hp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.happy_meal** %hp.addr, metadata !10387, metadata !DIExpression()), !dbg !10388
  store i8* %bregs, i8** %bregs.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %bregs.addr, metadata !10389, metadata !DIExpression()), !dbg !10390
  call void @llvm.dbg.declare(metadata %struct.net_device_stats** %stats, metadata !10391, metadata !DIExpression()), !dbg !10392
  %0 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !10393
  %dev = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %0, i32 0, i32 41, !dbg !10394
  %1 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !10394
  %stats1 = getelementptr inbounds %struct.net_device, %struct.net_device* %1, i32 0, i32 24, !dbg !10395
  store %struct.net_device_stats* %stats1, %struct.net_device_stats** %stats, align 8, !dbg !10392
  %2 = load i8*, i8** %bregs.addr, align 8, !dbg !10396
  %add.ptr = getelementptr i8, i8* %2, i64 816, !dbg !10396
  %call = call i32 @readl(i8* %add.ptr) #12, !dbg !10396
  %conv = zext i32 %call to i64, !dbg !10396
  %3 = load %struct.net_device_stats*, %struct.net_device_stats** %stats, align 8, !dbg !10397
  %rx_crc_errors = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %3, i32 0, i32 12, !dbg !10398
  %4 = load i64, i64* %rx_crc_errors, align 8, !dbg !10399
  %add = add i64 %4, %conv, !dbg !10399
  store i64 %add, i64* %rx_crc_errors, align 8, !dbg !10399
  %5 = load i8*, i8** %bregs.addr, align 8, !dbg !10400
  %add.ptr2 = getelementptr i8, i8* %5, i64 816, !dbg !10400
  call void @writel(i32 0, i8* %add.ptr2) #12, !dbg !10400
  %6 = load i8*, i8** %bregs.addr, align 8, !dbg !10401
  %add.ptr3 = getelementptr i8, i8* %6, i64 812, !dbg !10401
  %call4 = call i32 @readl(i8* %add.ptr3) #12, !dbg !10401
  %conv5 = zext i32 %call4 to i64, !dbg !10401
  %7 = load %struct.net_device_stats*, %struct.net_device_stats** %stats, align 8, !dbg !10402
  %rx_frame_errors = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %7, i32 0, i32 13, !dbg !10403
  %8 = load i64, i64* %rx_frame_errors, align 8, !dbg !10404
  %add6 = add i64 %8, %conv5, !dbg !10404
  store i64 %add6, i64* %rx_frame_errors, align 8, !dbg !10404
  %9 = load i8*, i8** %bregs.addr, align 8, !dbg !10405
  %add.ptr7 = getelementptr i8, i8* %9, i64 812, !dbg !10405
  call void @writel(i32 0, i8* %add.ptr7) #12, !dbg !10405
  %10 = load i8*, i8** %bregs.addr, align 8, !dbg !10406
  %add.ptr8 = getelementptr i8, i8* %10, i64 808, !dbg !10406
  %call9 = call i32 @readl(i8* %add.ptr8) #12, !dbg !10406
  %conv10 = zext i32 %call9 to i64, !dbg !10406
  %11 = load %struct.net_device_stats*, %struct.net_device_stats** %stats, align 8, !dbg !10407
  %rx_length_errors = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %11, i32 0, i32 10, !dbg !10408
  %12 = load i64, i64* %rx_length_errors, align 8, !dbg !10409
  %add11 = add i64 %12, %conv10, !dbg !10409
  store i64 %add11, i64* %rx_length_errors, align 8, !dbg !10409
  %13 = load i8*, i8** %bregs.addr, align 8, !dbg !10410
  %add.ptr12 = getelementptr i8, i8* %13, i64 808, !dbg !10410
  call void @writel(i32 0, i8* %add.ptr12) #12, !dbg !10410
  %14 = load i8*, i8** %bregs.addr, align 8, !dbg !10411
  %add.ptr13 = getelementptr i8, i8* %14, i64 584, !dbg !10411
  %call14 = call i32 @readl(i8* %add.ptr13) #12, !dbg !10411
  %conv15 = zext i32 %call14 to i64, !dbg !10411
  %15 = load %struct.net_device_stats*, %struct.net_device_stats** %stats, align 8, !dbg !10412
  %tx_aborted_errors = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %15, i32 0, i32 16, !dbg !10413
  %16 = load i64, i64* %tx_aborted_errors, align 8, !dbg !10414
  %add16 = add i64 %16, %conv15, !dbg !10414
  store i64 %add16, i64* %tx_aborted_errors, align 8, !dbg !10414
  %17 = load i8*, i8** %bregs.addr, align 8, !dbg !10415
  %add.ptr17 = getelementptr i8, i8* %17, i64 584, !dbg !10415
  %call18 = call i32 @readl(i8* %add.ptr17) #12, !dbg !10415
  %18 = load i8*, i8** %bregs.addr, align 8, !dbg !10416
  %add.ptr19 = getelementptr i8, i8* %18, i64 588, !dbg !10416
  %call20 = call i32 @readl(i8* %add.ptr19) #12, !dbg !10416
  %add21 = add i32 %call18, %call20, !dbg !10417
  %conv22 = zext i32 %add21 to i64, !dbg !10418
  %19 = load %struct.net_device_stats*, %struct.net_device_stats** %stats, align 8, !dbg !10419
  %collisions = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %19, i32 0, i32 9, !dbg !10420
  %20 = load i64, i64* %collisions, align 8, !dbg !10421
  %add23 = add i64 %20, %conv22, !dbg !10421
  store i64 %add23, i64* %collisions, align 8, !dbg !10421
  %21 = load i8*, i8** %bregs.addr, align 8, !dbg !10422
  %add.ptr24 = getelementptr i8, i8* %21, i64 584, !dbg !10422
  call void @writel(i32 0, i8* %add.ptr24) #12, !dbg !10422
  %22 = load i8*, i8** %bregs.addr, align 8, !dbg !10423
  %add.ptr25 = getelementptr i8, i8* %22, i64 588, !dbg !10423
  call void @writel(i32 0, i8* %add.ptr25) #12, !dbg !10423
  ret void, !dbg !10424
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @happy_meal_poll_stop(%struct.happy_meal* %hp, i8* %tregs) #1 !dbg !10425 {
entry:
  %hp.addr = alloca %struct.happy_meal*, align 8
  %tregs.addr = alloca i8*, align 8
  store %struct.happy_meal* %hp, %struct.happy_meal** %hp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.happy_meal** %hp.addr, metadata !10426, metadata !DIExpression()), !dbg !10427
  store i8* %tregs, i8** %tregs.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %tregs.addr, metadata !10428, metadata !DIExpression()), !dbg !10429
  %0 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !10430
  %happy_flags = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %0, i32 0, i32 16, !dbg !10432
  %1 = load i32, i32* %happy_flags, align 8, !dbg !10432
  %and = and i32 %1, 129, !dbg !10433
  %cmp = icmp ne i32 %and, 129, !dbg !10434
  br i1 %cmp, label %if.then, label %if.end, !dbg !10435

if.then:                                          ; preds = %entry
  br label %return, !dbg !10436

if.end:                                           ; preds = %entry
  %2 = load i8*, i8** %tregs.addr, align 8, !dbg !10438
  %add.ptr = getelementptr i8, i8* %2, i64 20, !dbg !10438
  call void @writel(i32 65535, i8* %add.ptr) #12, !dbg !10438
  %3 = load i8*, i8** %tregs.addr, align 8, !dbg !10439
  %add.ptr1 = getelementptr i8, i8* %3, i64 16, !dbg !10439
  %call = call i32 @readl(i8* %add.ptr1) #12, !dbg !10439
  %and2 = and i32 %call, -3, !dbg !10439
  %4 = load i8*, i8** %tregs.addr, align 8, !dbg !10439
  %add.ptr3 = getelementptr i8, i8* %4, i64 16, !dbg !10439
  call void @writel(i32 %and2, i8* %add.ptr3) #12, !dbg !10439
  %5 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !10440
  %happy_flags4 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %5, i32 0, i32 16, !dbg !10441
  %6 = load i32, i32* %happy_flags4, align 8, !dbg !10442
  %and5 = and i32 %6, -2, !dbg !10442
  store i32 %and5, i32* %happy_flags4, align 8, !dbg !10442
  call void @__const_udelay(i64 859000) #12, !dbg !10443
  br label %return, !dbg !10448

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !10448
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @happy_meal_stop(%struct.happy_meal* %hp, i8* %gregs) #1 !dbg !10449 {
entry:
  %hp.addr = alloca %struct.happy_meal*, align 8
  %gregs.addr = alloca i8*, align 8
  %tries = alloca i32, align 4
  store %struct.happy_meal* %hp, %struct.happy_meal** %hp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.happy_meal** %hp.addr, metadata !10450, metadata !DIExpression()), !dbg !10451
  store i8* %gregs, i8** %gregs.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %gregs.addr, metadata !10452, metadata !DIExpression()), !dbg !10453
  call void @llvm.dbg.declare(metadata i32* %tries, metadata !10454, metadata !DIExpression()), !dbg !10455
  store i32 16, i32* %tries, align 4, !dbg !10455
  %0 = load i8*, i8** %gregs.addr, align 8, !dbg !10456
  %add.ptr = getelementptr i8, i8* %0, i64 0, !dbg !10456
  call void @writel(i32 3, i8* %add.ptr) #12, !dbg !10456
  br label %while.cond, !dbg !10457

while.cond:                                       ; preds = %while.body, %entry
  %1 = load i8*, i8** %gregs.addr, align 8, !dbg !10458
  %add.ptr1 = getelementptr i8, i8* %1, i64 0, !dbg !10458
  %call = call i32 @readl(i8* %add.ptr1) #12, !dbg !10458
  %tobool = icmp ne i32 %call, 0, !dbg !10458
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !10459

land.rhs:                                         ; preds = %while.cond
  %2 = load i32, i32* %tries, align 4, !dbg !10460
  %dec = add i32 %2, -1, !dbg !10460
  store i32 %dec, i32* %tries, align 4, !dbg !10460
  %tobool2 = icmp ne i32 %dec, 0, !dbg !10459
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %3 = phi i1 [ false, %while.cond ], [ %tobool2, %land.rhs ], !dbg !10461
  br i1 %3, label %while.body, label %while.end, !dbg !10457

while.body:                                       ; preds = %land.end
  call void @__const_udelay(i64 85900) #12, !dbg !10462
  br label %while.cond, !dbg !10457, !llvm.loop !10467

while.end:                                        ; preds = %land.end
  %4 = load i32, i32* %tries, align 4, !dbg !10469
  %tobool3 = icmp ne i32 %4, 0, !dbg !10469
  br i1 %tobool3, label %if.end, label %if.then, !dbg !10471

if.then:                                          ; preds = %while.end
  %call4 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.43, i64 0, i64 0)) #13, !dbg !10472
  br label %if.end, !dbg !10472

if.end:                                           ; preds = %if.then, %while.end
  ret void, !dbg !10473
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @happy_meal_init_rings(%struct.happy_meal* %hp) #1 !dbg !10474 {
entry:
  %hp.addr = alloca %struct.happy_meal*, align 8
  %hb = alloca %struct.hmeal_init_block*, align 8
  %i = alloca i32, align 4
  %skb = alloca %struct.sk_buff*, align 8
  %mapping = alloca i32, align 4
  %__skb = alloca %struct.sk_buff*, align 8
  %__offset = alloca i32, align 4
  %tmp = alloca %struct.sk_buff*, align 8
  store %struct.happy_meal* %hp, %struct.happy_meal** %hp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.happy_meal** %hp.addr, metadata !10475, metadata !DIExpression()), !dbg !10476
  call void @llvm.dbg.declare(metadata %struct.hmeal_init_block** %hb, metadata !10477, metadata !DIExpression()), !dbg !10478
  %0 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !10479
  %happy_block = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %0, i32 0, i32 1, !dbg !10480
  %1 = load %struct.hmeal_init_block*, %struct.hmeal_init_block** %happy_block, align 8, !dbg !10480
  store %struct.hmeal_init_block* %1, %struct.hmeal_init_block** %hb, align 8, !dbg !10478
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10481, metadata !DIExpression()), !dbg !10482
  %2 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !10483
  %tx_old = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %2, i32 0, i32 10, !dbg !10484
  store i32 0, i32* %tx_old, align 4, !dbg !10485
  %3 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !10486
  %tx_new = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %3, i32 0, i32 8, !dbg !10487
  store i32 0, i32* %tx_new, align 4, !dbg !10488
  %4 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !10489
  %rx_old = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %4, i32 0, i32 9, !dbg !10490
  store i32 0, i32* %rx_old, align 8, !dbg !10491
  %5 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !10492
  %rx_new = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %5, i32 0, i32 7, !dbg !10493
  store i32 0, i32* %rx_new, align 8, !dbg !10494
  %6 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !10495
  call void @happy_meal_clean_rings(%struct.happy_meal* %6) #12, !dbg !10496
  store i32 0, i32* %i, align 4, !dbg !10497
  br label %for.cond, !dbg !10499

for.cond:                                         ; preds = %for.inc, %entry
  %7 = load i32, i32* %i, align 4, !dbg !10500
  %cmp = icmp slt i32 %7, 32, !dbg !10502
  br i1 %cmp, label %for.body, label %for.end, !dbg !10503

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb, metadata !10504, metadata !DIExpression()), !dbg !10506
  call void @llvm.dbg.declare(metadata i32* %mapping, metadata !10507, metadata !DIExpression()), !dbg !10508
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %__skb, metadata !10509, metadata !DIExpression()), !dbg !10511
  %call = call %struct.sk_buff* @alloc_skb(i32 1676, i32 2592) #12, !dbg !10511
  store %struct.sk_buff* %call, %struct.sk_buff** %__skb, align 8, !dbg !10511
  %8 = load %struct.sk_buff*, %struct.sk_buff** %__skb, align 8, !dbg !10512
  %tobool = icmp ne %struct.sk_buff* %8, null, !dbg !10512
  br i1 %tobool, label %if.then, label %if.end4, !dbg !10511

if.then:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata i32* %__offset, metadata !10514, metadata !DIExpression()), !dbg !10516
  %9 = load %struct.sk_buff*, %struct.sk_buff** %__skb, align 8, !dbg !10516
  %data = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %9, i32 0, i32 37, !dbg !10516
  %10 = load i8*, i8** %data, align 8, !dbg !10516
  %11 = ptrtoint i8* %10 to i64, !dbg !10516
  %add = add i64 %11, 63, !dbg !10516
  %and = and i64 %add, -64, !dbg !10516
  %12 = load %struct.sk_buff*, %struct.sk_buff** %__skb, align 8, !dbg !10516
  %data1 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %12, i32 0, i32 37, !dbg !10516
  %13 = load i8*, i8** %data1, align 8, !dbg !10516
  %14 = ptrtoint i8* %13 to i64, !dbg !10516
  %sub = sub i64 %and, %14, !dbg !10516
  %conv = trunc i64 %sub to i32, !dbg !10516
  store i32 %conv, i32* %__offset, align 4, !dbg !10516
  %15 = load i32, i32* %__offset, align 4, !dbg !10517
  %tobool2 = icmp ne i32 %15, 0, !dbg !10517
  br i1 %tobool2, label %if.then3, label %if.end, !dbg !10516

if.then3:                                         ; preds = %if.then
  %16 = load %struct.sk_buff*, %struct.sk_buff** %__skb, align 8, !dbg !10517
  %17 = load i32, i32* %__offset, align 4, !dbg !10517
  call void @skb_reserve(%struct.sk_buff* %16, i32 %17) #12, !dbg !10517
  br label %if.end, !dbg !10517

if.end:                                           ; preds = %if.then3, %if.then
  br label %if.end4, !dbg !10516

if.end4:                                          ; preds = %if.end, %for.body
  %18 = load %struct.sk_buff*, %struct.sk_buff** %__skb, align 8, !dbg !10511
  store %struct.sk_buff* %18, %struct.sk_buff** %tmp, align 8, !dbg !10512
  %19 = load %struct.sk_buff*, %struct.sk_buff** %tmp, align 8, !dbg !10511
  store %struct.sk_buff* %19, %struct.sk_buff** %skb, align 8, !dbg !10519
  %20 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !10520
  %tobool5 = icmp ne %struct.sk_buff* %20, null, !dbg !10520
  br i1 %tobool5, label %if.end10, label %if.then6, !dbg !10522

if.then6:                                         ; preds = %if.end4
  br label %do.body, !dbg !10523

do.body:                                          ; preds = %if.then6
  %21 = load %struct.hmeal_init_block*, %struct.hmeal_init_block** %hb, align 8, !dbg !10525
  %happy_meal_rxd = getelementptr inbounds %struct.hmeal_init_block, %struct.hmeal_init_block* %21, i32 0, i32 0, !dbg !10525
  %22 = load i32, i32* %i, align 4, !dbg !10525
  %idxprom = sext i32 %22 to i64, !dbg !10525
  %arrayidx = getelementptr [256 x %struct.happy_meal_rxd], [256 x %struct.happy_meal_rxd]* %happy_meal_rxd, i64 0, i64 %idxprom, !dbg !10525
  %rx_addr = getelementptr inbounds %struct.happy_meal_rxd, %struct.happy_meal_rxd* %arrayidx, i32 0, i32 1, !dbg !10525
  store i32 0, i32* %rx_addr, align 4, !dbg !10525
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #11, !dbg !10525, !srcloc !10527
  %23 = load %struct.hmeal_init_block*, %struct.hmeal_init_block** %hb, align 8, !dbg !10525
  %happy_meal_rxd7 = getelementptr inbounds %struct.hmeal_init_block, %struct.hmeal_init_block* %23, i32 0, i32 0, !dbg !10525
  %24 = load i32, i32* %i, align 4, !dbg !10525
  %idxprom8 = sext i32 %24 to i64, !dbg !10525
  %arrayidx9 = getelementptr [256 x %struct.happy_meal_rxd], [256 x %struct.happy_meal_rxd]* %happy_meal_rxd7, i64 0, i64 %idxprom8, !dbg !10525
  %rx_flags = getelementptr inbounds %struct.happy_meal_rxd, %struct.happy_meal_rxd* %arrayidx9, i32 0, i32 0, !dbg !10525
  store i32 0, i32* %rx_flags, align 4, !dbg !10525
  br label %do.end, !dbg !10525

do.end:                                           ; preds = %do.body
  br label %for.inc, !dbg !10528

if.end10:                                         ; preds = %if.end4
  %25 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !10529
  %26 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !10530
  %rx_skbs = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %26, i32 0, i32 5, !dbg !10531
  %27 = load i32, i32* %i, align 4, !dbg !10532
  %idxprom11 = sext i32 %27 to i64, !dbg !10530
  %arrayidx12 = getelementptr [32 x %struct.sk_buff*], [32 x %struct.sk_buff*]* %rx_skbs, i64 0, i64 %idxprom11, !dbg !10530
  store %struct.sk_buff* %25, %struct.sk_buff** %arrayidx12, align 8, !dbg !10533
  %28 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !10534
  %call13 = call i8* @skb_put(%struct.sk_buff* %28, i32 1520) #12, !dbg !10535
  %29 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !10536
  %dma_dev = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %29, i32 0, i32 3, !dbg !10536
  %30 = load %struct.device*, %struct.device** %dma_dev, align 8, !dbg !10536
  %31 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !10536
  %data14 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %31, i32 0, i32 37, !dbg !10536
  %32 = load i8*, i8** %data14, align 8, !dbg !10536
  %call15 = call i64 @dma_map_single_attrs(%struct.device* %30, i8* %32, i64 1612, i32 2, i64 0) #12, !dbg !10536
  %conv16 = trunc i64 %call15 to i32, !dbg !10536
  store i32 %conv16, i32* %mapping, align 4, !dbg !10537
  %33 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !10538
  %dma_dev17 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %33, i32 0, i32 3, !dbg !10540
  %34 = load %struct.device*, %struct.device** %dma_dev17, align 8, !dbg !10540
  %35 = load i32, i32* %mapping, align 4, !dbg !10541
  %conv18 = zext i32 %35 to i64, !dbg !10541
  %call19 = call i32 @dma_mapping_error(%struct.device* %34, i64 %conv18) #12, !dbg !10542
  %tobool20 = icmp ne i32 %call19, 0, !dbg !10542
  br i1 %tobool20, label %if.then21, label %if.end32, !dbg !10543

if.then21:                                        ; preds = %if.end10
  %36 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !10544
  call void @dev_kfree_skb_any(%struct.sk_buff* %36) #12, !dbg !10546
  br label %do.body22, !dbg !10547

do.body22:                                        ; preds = %if.then21
  %37 = load %struct.hmeal_init_block*, %struct.hmeal_init_block** %hb, align 8, !dbg !10548
  %happy_meal_rxd23 = getelementptr inbounds %struct.hmeal_init_block, %struct.hmeal_init_block* %37, i32 0, i32 0, !dbg !10548
  %38 = load i32, i32* %i, align 4, !dbg !10548
  %idxprom24 = sext i32 %38 to i64, !dbg !10548
  %arrayidx25 = getelementptr [256 x %struct.happy_meal_rxd], [256 x %struct.happy_meal_rxd]* %happy_meal_rxd23, i64 0, i64 %idxprom24, !dbg !10548
  %rx_addr26 = getelementptr inbounds %struct.happy_meal_rxd, %struct.happy_meal_rxd* %arrayidx25, i32 0, i32 1, !dbg !10548
  store i32 0, i32* %rx_addr26, align 4, !dbg !10548
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #11, !dbg !10548, !srcloc !10550
  %39 = load %struct.hmeal_init_block*, %struct.hmeal_init_block** %hb, align 8, !dbg !10548
  %happy_meal_rxd27 = getelementptr inbounds %struct.hmeal_init_block, %struct.hmeal_init_block* %39, i32 0, i32 0, !dbg !10548
  %40 = load i32, i32* %i, align 4, !dbg !10548
  %idxprom28 = sext i32 %40 to i64, !dbg !10548
  %arrayidx29 = getelementptr [256 x %struct.happy_meal_rxd], [256 x %struct.happy_meal_rxd]* %happy_meal_rxd27, i64 0, i64 %idxprom28, !dbg !10548
  %rx_flags30 = getelementptr inbounds %struct.happy_meal_rxd, %struct.happy_meal_rxd* %arrayidx29, i32 0, i32 0, !dbg !10548
  store i32 0, i32* %rx_flags30, align 4, !dbg !10548
  br label %do.end31, !dbg !10548

do.end31:                                         ; preds = %do.body22
  br label %for.inc, !dbg !10551

if.end32:                                         ; preds = %if.end10
  br label %do.body33, !dbg !10552

do.body33:                                        ; preds = %if.end32
  %41 = load i32, i32* %mapping, align 4, !dbg !10553
  %42 = load %struct.hmeal_init_block*, %struct.hmeal_init_block** %hb, align 8, !dbg !10553
  %happy_meal_rxd34 = getelementptr inbounds %struct.hmeal_init_block, %struct.hmeal_init_block* %42, i32 0, i32 0, !dbg !10553
  %43 = load i32, i32* %i, align 4, !dbg !10553
  %idxprom35 = sext i32 %43 to i64, !dbg !10553
  %arrayidx36 = getelementptr [256 x %struct.happy_meal_rxd], [256 x %struct.happy_meal_rxd]* %happy_meal_rxd34, i64 0, i64 %idxprom35, !dbg !10553
  %rx_addr37 = getelementptr inbounds %struct.happy_meal_rxd, %struct.happy_meal_rxd* %arrayidx36, i32 0, i32 1, !dbg !10553
  store i32 %41, i32* %rx_addr37, align 4, !dbg !10553
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #11, !dbg !10553, !srcloc !10555
  %44 = load %struct.hmeal_init_block*, %struct.hmeal_init_block** %hb, align 8, !dbg !10553
  %happy_meal_rxd38 = getelementptr inbounds %struct.hmeal_init_block, %struct.hmeal_init_block* %44, i32 0, i32 0, !dbg !10553
  %45 = load i32, i32* %i, align 4, !dbg !10553
  %idxprom39 = sext i32 %45 to i64, !dbg !10553
  %arrayidx40 = getelementptr [256 x %struct.happy_meal_rxd], [256 x %struct.happy_meal_rxd]* %happy_meal_rxd38, i64 0, i64 %idxprom39, !dbg !10553
  %rx_flags41 = getelementptr inbounds %struct.happy_meal_rxd, %struct.happy_meal_rxd* %arrayidx40, i32 0, i32 0, !dbg !10553
  store i32 -2041970688, i32* %rx_flags41, align 4, !dbg !10553
  br label %do.end42, !dbg !10553

do.end42:                                         ; preds = %do.body33
  %46 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !10556
  call void @skb_reserve(%struct.sk_buff* %46, i32 2) #12, !dbg !10557
  br label %for.inc, !dbg !10558

for.inc:                                          ; preds = %do.end42, %do.end31, %do.end
  %47 = load i32, i32* %i, align 4, !dbg !10559
  %inc = add i32 %47, 1, !dbg !10559
  store i32 %inc, i32* %i, align 4, !dbg !10559
  br label %for.cond, !dbg !10560, !llvm.loop !10561

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !10563
  br label %for.cond43, !dbg !10565

for.cond43:                                       ; preds = %for.inc54, %for.end
  %48 = load i32, i32* %i, align 4, !dbg !10566
  %cmp44 = icmp slt i32 %48, 32, !dbg !10568
  br i1 %cmp44, label %for.body46, label %for.end56, !dbg !10569

for.body46:                                       ; preds = %for.cond43
  br label %do.body47, !dbg !10570

do.body47:                                        ; preds = %for.body46
  %49 = load %struct.hmeal_init_block*, %struct.hmeal_init_block** %hb, align 8, !dbg !10571
  %happy_meal_txd = getelementptr inbounds %struct.hmeal_init_block, %struct.hmeal_init_block* %49, i32 0, i32 1, !dbg !10571
  %50 = load i32, i32* %i, align 4, !dbg !10571
  %idxprom48 = sext i32 %50 to i64, !dbg !10571
  %arrayidx49 = getelementptr [256 x %struct.happy_meal_txd], [256 x %struct.happy_meal_txd]* %happy_meal_txd, i64 0, i64 %idxprom48, !dbg !10571
  %tx_addr = getelementptr inbounds %struct.happy_meal_txd, %struct.happy_meal_txd* %arrayidx49, i32 0, i32 1, !dbg !10571
  store i32 0, i32* %tx_addr, align 4, !dbg !10571
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #11, !dbg !10571, !srcloc !10573
  %51 = load %struct.hmeal_init_block*, %struct.hmeal_init_block** %hb, align 8, !dbg !10571
  %happy_meal_txd50 = getelementptr inbounds %struct.hmeal_init_block, %struct.hmeal_init_block* %51, i32 0, i32 1, !dbg !10571
  %52 = load i32, i32* %i, align 4, !dbg !10571
  %idxprom51 = sext i32 %52 to i64, !dbg !10571
  %arrayidx52 = getelementptr [256 x %struct.happy_meal_txd], [256 x %struct.happy_meal_txd]* %happy_meal_txd50, i64 0, i64 %idxprom51, !dbg !10571
  %tx_flags = getelementptr inbounds %struct.happy_meal_txd, %struct.happy_meal_txd* %arrayidx52, i32 0, i32 0, !dbg !10571
  store i32 0, i32* %tx_flags, align 4, !dbg !10571
  br label %do.end53, !dbg !10571

do.end53:                                         ; preds = %do.body47
  br label %for.inc54, !dbg !10571

for.inc54:                                        ; preds = %do.end53
  %53 = load i32, i32* %i, align 4, !dbg !10574
  %inc55 = add i32 %53, 1, !dbg !10574
  store i32 %inc55, i32* %i, align 4, !dbg !10574
  br label %for.cond43, !dbg !10575, !llvm.loop !10576

for.end56:                                        ; preds = %for.cond43
  ret void, !dbg !10578
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @happy_meal_transceiver_check(%struct.happy_meal* %hp, i8* %tregs) #1 !dbg !10579 {
entry:
  %hp.addr = alloca %struct.happy_meal*, align 8
  %tregs.addr = alloca i8*, align 8
  %tconfig = alloca i64, align 8
  %reread = alloca i32, align 4
  store %struct.happy_meal* %hp, %struct.happy_meal** %hp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.happy_meal** %hp.addr, metadata !10580, metadata !DIExpression()), !dbg !10581
  store i8* %tregs, i8** %tregs.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %tregs.addr, metadata !10582, metadata !DIExpression()), !dbg !10583
  call void @llvm.dbg.declare(metadata i64* %tconfig, metadata !10584, metadata !DIExpression()), !dbg !10585
  %0 = load i8*, i8** %tregs.addr, align 8, !dbg !10586
  %add.ptr = getelementptr i8, i8* %0, i64 16, !dbg !10586
  %call = call i32 @readl(i8* %add.ptr) #12, !dbg !10586
  %conv = zext i32 %call to i64, !dbg !10586
  store i64 %conv, i64* %tconfig, align 8, !dbg !10585
  %1 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !10587
  %happy_flags = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %1, i32 0, i32 16, !dbg !10589
  %2 = load i32, i32* %happy_flags, align 8, !dbg !10589
  %and = and i32 %2, 1, !dbg !10590
  %tobool = icmp ne i32 %and, 0, !dbg !10590
  br i1 %tobool, label %if.then, label %if.else28, !dbg !10591

if.then:                                          ; preds = %entry
  %3 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !10592
  %tcvr_type = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %3, i32 0, i32 18, !dbg !10595
  %4 = load i32, i32* %tcvr_type, align 8, !dbg !10595
  %cmp = icmp eq i32 %4, 1, !dbg !10596
  br i1 %cmp, label %if.then2, label %if.else, !dbg !10597

if.then2:                                         ; preds = %if.then
  %5 = load i64, i64* %tconfig, align 8, !dbg !10598
  %and3 = and i64 %5, 512, !dbg !10601
  %tobool4 = icmp ne i64 %and3, 0, !dbg !10601
  br i1 %tobool4, label %if.then5, label %if.end, !dbg !10602

if.then5:                                         ; preds = %if.then2
  %6 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !10603
  %7 = load i8*, i8** %tregs.addr, align 8, !dbg !10605
  call void @happy_meal_poll_stop(%struct.happy_meal* %6, i8* %7) #12, !dbg !10606
  %8 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !10607
  %paddr = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %8, i32 0, i32 20, !dbg !10608
  store i32 0, i32* %paddr, align 8, !dbg !10609
  %9 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !10610
  %tcvr_type6 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %9, i32 0, i32 18, !dbg !10611
  store i32 0, i32* %tcvr_type6, align 8, !dbg !10612
  %10 = load i64, i64* %tconfig, align 8, !dbg !10613
  %and7 = and i64 %10, -3, !dbg !10613
  store i64 %and7, i64* %tconfig, align 8, !dbg !10613
  %11 = load i64, i64* %tconfig, align 8, !dbg !10614
  %or = or i64 %11, 1, !dbg !10614
  store i64 %or, i64* %tconfig, align 8, !dbg !10614
  %12 = load i64, i64* %tconfig, align 8, !dbg !10615
  %conv8 = trunc i64 %12 to i32, !dbg !10615
  %13 = load i8*, i8** %tregs.addr, align 8, !dbg !10615
  %add.ptr9 = getelementptr i8, i8* %13, i64 16, !dbg !10615
  call void @writel(i32 %conv8, i8* %add.ptr9) #12, !dbg !10615
  br label %if.end, !dbg !10616

if.end:                                           ; preds = %if.then5, %if.then2
  br label %if.end27, !dbg !10617

if.else:                                          ; preds = %if.then
  %14 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !10618
  %tcvr_type10 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %14, i32 0, i32 18, !dbg !10621
  %15 = load i32, i32* %tcvr_type10, align 8, !dbg !10621
  %cmp11 = icmp eq i32 %15, 0, !dbg !10622
  br i1 %cmp11, label %if.then13, label %if.else25, !dbg !10623

if.then13:                                        ; preds = %if.else
  %16 = load i8*, i8** %tregs.addr, align 8, !dbg !10624
  %add.ptr14 = getelementptr i8, i8* %16, i64 24, !dbg !10624
  %call15 = call i32 @readl(i8* %add.ptr14) #12, !dbg !10624
  %shr = lshr i32 %call15, 16, !dbg !10627
  %tobool16 = icmp ne i32 %shr, 0, !dbg !10627
  br i1 %tobool16, label %if.end24, label %if.then17, !dbg !10628

if.then17:                                        ; preds = %if.then13
  %17 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !10629
  %18 = load i8*, i8** %tregs.addr, align 8, !dbg !10631
  call void @happy_meal_poll_stop(%struct.happy_meal* %17, i8* %18) #12, !dbg !10632
  %19 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !10633
  %paddr18 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %19, i32 0, i32 20, !dbg !10634
  store i32 1, i32* %paddr18, align 8, !dbg !10635
  %20 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !10636
  %tcvr_type19 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %20, i32 0, i32 18, !dbg !10637
  store i32 1, i32* %tcvr_type19, align 8, !dbg !10638
  %21 = load i8*, i8** %tregs.addr, align 8, !dbg !10639
  %add.ptr20 = getelementptr i8, i8* %21, i64 16, !dbg !10639
  %call21 = call i32 @readl(i8* %add.ptr20) #12, !dbg !10639
  %and22 = and i32 %call21, -2, !dbg !10639
  %22 = load i8*, i8** %tregs.addr, align 8, !dbg !10639
  %add.ptr23 = getelementptr i8, i8* %22, i64 16, !dbg !10639
  call void @writel(i32 %and22, i8* %add.ptr23) #12, !dbg !10639
  br label %if.end24, !dbg !10640

if.end24:                                         ; preds = %if.then17, %if.then13
  br label %if.end26, !dbg !10641

if.else25:                                        ; preds = %if.else
  br label %if.end26

if.end26:                                         ; preds = %if.else25, %if.end24
  br label %if.end27

if.end27:                                         ; preds = %if.end26, %if.end
  br label %if.end53, !dbg !10642

if.else28:                                        ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %reread, metadata !10643, metadata !DIExpression()), !dbg !10645
  %23 = load i8*, i8** %tregs.addr, align 8, !dbg !10646
  %add.ptr29 = getelementptr i8, i8* %23, i64 16, !dbg !10646
  %call30 = call i32 @readl(i8* %add.ptr29) #12, !dbg !10646
  store i32 %call30, i32* %reread, align 4, !dbg !10645
  %24 = load i32, i32* %reread, align 4, !dbg !10647
  %and31 = and i32 %24, 512, !dbg !10649
  %tobool32 = icmp ne i32 %and31, 0, !dbg !10649
  br i1 %tobool32, label %if.then33, label %if.else39, !dbg !10650

if.then33:                                        ; preds = %if.else28
  %25 = load i64, i64* %tconfig, align 8, !dbg !10651
  %or34 = or i64 %25, 1, !dbg !10651
  %conv35 = trunc i64 %or34 to i32, !dbg !10651
  %26 = load i8*, i8** %tregs.addr, align 8, !dbg !10651
  %add.ptr36 = getelementptr i8, i8* %26, i64 16, !dbg !10651
  call void @writel(i32 %conv35, i8* %add.ptr36) #12, !dbg !10651
  %27 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !10653
  %paddr37 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %27, i32 0, i32 20, !dbg !10654
  store i32 0, i32* %paddr37, align 8, !dbg !10655
  %28 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !10656
  %tcvr_type38 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %28, i32 0, i32 18, !dbg !10657
  store i32 0, i32* %tcvr_type38, align 8, !dbg !10658
  br label %if.end52, !dbg !10659

if.else39:                                        ; preds = %if.else28
  %29 = load i32, i32* %reread, align 4, !dbg !10660
  %and40 = and i32 %29, 256, !dbg !10663
  %tobool41 = icmp ne i32 %and40, 0, !dbg !10663
  br i1 %tobool41, label %if.then42, label %if.else48, !dbg !10664

if.then42:                                        ; preds = %if.else39
  %30 = load i64, i64* %tconfig, align 8, !dbg !10665
  %and43 = and i64 %30, -2, !dbg !10665
  %conv44 = trunc i64 %and43 to i32, !dbg !10665
  %31 = load i8*, i8** %tregs.addr, align 8, !dbg !10665
  %add.ptr45 = getelementptr i8, i8* %31, i64 16, !dbg !10665
  call void @writel(i32 %conv44, i8* %add.ptr45) #12, !dbg !10665
  %32 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !10667
  %paddr46 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %32, i32 0, i32 20, !dbg !10668
  store i32 1, i32* %paddr46, align 8, !dbg !10669
  %33 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !10670
  %tcvr_type47 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %33, i32 0, i32 18, !dbg !10671
  store i32 1, i32* %tcvr_type47, align 8, !dbg !10672
  br label %if.end51, !dbg !10673

if.else48:                                        ; preds = %if.else39
  %call49 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.46, i64 0, i64 0)) #13, !dbg !10674
  %34 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !10676
  %tcvr_type50 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %34, i32 0, i32 18, !dbg !10677
  store i32 2, i32* %tcvr_type50, align 8, !dbg !10678
  br label %if.end51

if.end51:                                         ; preds = %if.else48, %if.then42
  br label %if.end52

if.end52:                                         ; preds = %if.end51, %if.then33
  br label %if.end53

if.end53:                                         ; preds = %if.end52, %if.end27
  ret void, !dbg !10679
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @happy_meal_tcvr_reset(%struct.happy_meal* %hp, i8* %tregs) #1 !dbg !10680 {
entry:
  %retval = alloca i32, align 4
  %hp.addr = alloca %struct.happy_meal*, align 8
  %tregs.addr = alloca i8*, align 8
  %tconfig = alloca i32, align 4
  %result = alloca i32, align 4
  %tries = alloca i32, align 4
  store %struct.happy_meal* %hp, %struct.happy_meal** %hp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.happy_meal** %hp.addr, metadata !10681, metadata !DIExpression()), !dbg !10682
  store i8* %tregs, i8** %tregs.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %tregs.addr, metadata !10683, metadata !DIExpression()), !dbg !10684
  call void @llvm.dbg.declare(metadata i32* %tconfig, metadata !10685, metadata !DIExpression()), !dbg !10686
  call void @llvm.dbg.declare(metadata i32* %result, metadata !10687, metadata !DIExpression()), !dbg !10688
  call void @llvm.dbg.declare(metadata i32* %tries, metadata !10689, metadata !DIExpression()), !dbg !10690
  store i32 16, i32* %tries, align 4, !dbg !10690
  %0 = load i8*, i8** %tregs.addr, align 8, !dbg !10691
  %add.ptr = getelementptr i8, i8* %0, i64 16, !dbg !10691
  %call = call i32 @readl(i8* %add.ptr) #12, !dbg !10691
  store i32 %call, i32* %tconfig, align 4, !dbg !10692
  %1 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !10693
  %tcvr_type = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %1, i32 0, i32 18, !dbg !10695
  %2 = load i32, i32* %tcvr_type, align 8, !dbg !10695
  %cmp = icmp eq i32 %2, 0, !dbg !10696
  br i1 %cmp, label %if.then, label %if.else, !dbg !10697

if.then:                                          ; preds = %entry
  %3 = load i32, i32* %tconfig, align 4, !dbg !10698
  %and = and i32 %3, -2, !dbg !10698
  %4 = load i8*, i8** %tregs.addr, align 8, !dbg !10698
  %add.ptr1 = getelementptr i8, i8* %4, i64 16, !dbg !10698
  call void @writel(i32 %and, i8* %add.ptr1) #12, !dbg !10698
  %5 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !10700
  %tcvr_type2 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %5, i32 0, i32 18, !dbg !10701
  store i32 1, i32* %tcvr_type2, align 8, !dbg !10702
  %6 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !10703
  %paddr = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %6, i32 0, i32 20, !dbg !10704
  store i32 1, i32* %paddr, align 8, !dbg !10705
  %7 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !10706
  %8 = load i8*, i8** %tregs.addr, align 8, !dbg !10707
  call void @happy_meal_tcvr_write(%struct.happy_meal* %7, i8* %8, i32 0, i16 zeroext 19456) #12, !dbg !10708
  %9 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !10709
  %10 = load i8*, i8** %tregs.addr, align 8, !dbg !10710
  %call3 = call i32 @happy_meal_tcvr_read(%struct.happy_meal* %9, i8* %10, i32 0) #12, !dbg !10711
  store i32 %call3, i32* %result, align 4, !dbg !10712
  %11 = load i32, i32* %result, align 4, !dbg !10713
  %cmp4 = icmp eq i32 %11, -2147483648, !dbg !10715
  br i1 %cmp4, label %if.then5, label %if.end, !dbg !10716

if.then5:                                         ; preds = %if.then
  store i32 -1, i32* %retval, align 4, !dbg !10717
  br label %return, !dbg !10717

if.end:                                           ; preds = %if.then
  %12 = load i32, i32* %tconfig, align 4, !dbg !10719
  %or = or i32 %12, 1, !dbg !10719
  %13 = load i8*, i8** %tregs.addr, align 8, !dbg !10719
  %add.ptr6 = getelementptr i8, i8* %13, i64 16, !dbg !10719
  call void @writel(i32 %or, i8* %add.ptr6) #12, !dbg !10719
  %14 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !10720
  %tcvr_type7 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %14, i32 0, i32 18, !dbg !10721
  store i32 0, i32* %tcvr_type7, align 8, !dbg !10722
  %15 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !10723
  %paddr8 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %15, i32 0, i32 20, !dbg !10724
  store i32 0, i32* %paddr8, align 8, !dbg !10725
  br label %if.end22, !dbg !10726

if.else:                                          ; preds = %entry
  %16 = load i32, i32* %tconfig, align 4, !dbg !10727
  %and9 = and i32 %16, 512, !dbg !10730
  %tobool = icmp ne i32 %and9, 0, !dbg !10730
  br i1 %tobool, label %if.then10, label %if.end21, !dbg !10731

if.then10:                                        ; preds = %if.else
  %17 = load i32, i32* %tconfig, align 4, !dbg !10732
  %or11 = or i32 %17, 1, !dbg !10732
  %18 = load i8*, i8** %tregs.addr, align 8, !dbg !10732
  %add.ptr12 = getelementptr i8, i8* %18, i64 16, !dbg !10732
  call void @writel(i32 %or11, i8* %add.ptr12) #12, !dbg !10732
  %19 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !10734
  %20 = load i8*, i8** %tregs.addr, align 8, !dbg !10735
  call void @happy_meal_tcvr_write(%struct.happy_meal* %19, i8* %20, i32 0, i16 zeroext 19456) #12, !dbg !10736
  %21 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !10737
  %22 = load i8*, i8** %tregs.addr, align 8, !dbg !10738
  %call13 = call i32 @happy_meal_tcvr_read(%struct.happy_meal* %21, i8* %22, i32 0) #12, !dbg !10739
  store i32 %call13, i32* %result, align 4, !dbg !10740
  %23 = load i32, i32* %result, align 4, !dbg !10741
  %cmp14 = icmp eq i32 %23, -2147483648, !dbg !10743
  br i1 %cmp14, label %if.then15, label %if.end16, !dbg !10744

if.then15:                                        ; preds = %if.then10
  store i32 -1, i32* %retval, align 4, !dbg !10745
  br label %return, !dbg !10745

if.end16:                                         ; preds = %if.then10
  %24 = load i32, i32* %tconfig, align 4, !dbg !10747
  %and17 = and i32 %24, -2, !dbg !10747
  %25 = load i8*, i8** %tregs.addr, align 8, !dbg !10747
  %add.ptr18 = getelementptr i8, i8* %25, i64 16, !dbg !10747
  call void @writel(i32 %and17, i8* %add.ptr18) #12, !dbg !10747
  %26 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !10748
  %tcvr_type19 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %26, i32 0, i32 18, !dbg !10749
  store i32 1, i32* %tcvr_type19, align 8, !dbg !10750
  %27 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !10751
  %paddr20 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %27, i32 0, i32 20, !dbg !10752
  store i32 1, i32* %paddr20, align 8, !dbg !10753
  br label %if.end21, !dbg !10754

if.end21:                                         ; preds = %if.end16, %if.else
  br label %if.end22

if.end22:                                         ; preds = %if.end21, %if.end
  %28 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !10755
  %29 = load i8*, i8** %tregs.addr, align 8, !dbg !10756
  call void @happy_meal_tcvr_write(%struct.happy_meal* %28, i8* %29, i32 0, i16 zeroext -32768) #12, !dbg !10757
  br label %while.cond, !dbg !10758

while.cond:                                       ; preds = %if.end31, %if.end22
  %30 = load i32, i32* %tries, align 4, !dbg !10759
  %dec = add i32 %30, -1, !dbg !10759
  store i32 %dec, i32* %tries, align 4, !dbg !10759
  %tobool23 = icmp ne i32 %dec, 0, !dbg !10758
  br i1 %tobool23, label %while.body, label %while.end, !dbg !10758

while.body:                                       ; preds = %while.cond
  %31 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !10760
  %32 = load i8*, i8** %tregs.addr, align 8, !dbg !10762
  %call24 = call i32 @happy_meal_tcvr_read(%struct.happy_meal* %31, i8* %32, i32 0) #12, !dbg !10763
  store i32 %call24, i32* %result, align 4, !dbg !10764
  %33 = load i32, i32* %result, align 4, !dbg !10765
  %cmp25 = icmp eq i32 %33, -2147483648, !dbg !10767
  br i1 %cmp25, label %if.then26, label %if.end27, !dbg !10768

if.then26:                                        ; preds = %while.body
  store i32 -1, i32* %retval, align 4, !dbg !10769
  br label %return, !dbg !10769

if.end27:                                         ; preds = %while.body
  %34 = load i32, i32* %result, align 4, !dbg !10770
  %conv = trunc i32 %34 to i16, !dbg !10770
  %35 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !10771
  %sw_bmcr = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %35, i32 0, i32 22, !dbg !10772
  store i16 %conv, i16* %sw_bmcr, align 2, !dbg !10773
  %36 = load i32, i32* %result, align 4, !dbg !10774
  %and28 = and i32 %36, 32768, !dbg !10776
  %tobool29 = icmp ne i32 %and28, 0, !dbg !10776
  br i1 %tobool29, label %if.end31, label %if.then30, !dbg !10777

if.then30:                                        ; preds = %if.end27
  br label %while.end, !dbg !10778

if.end31:                                         ; preds = %if.end27
  call void @__const_udelay(i64 85900) #12, !dbg !10779
  br label %while.cond, !dbg !10758, !llvm.loop !10784

while.end:                                        ; preds = %if.then30, %while.cond
  %37 = load i32, i32* %tries, align 4, !dbg !10786
  %tobool32 = icmp ne i32 %37, 0, !dbg !10786
  br i1 %tobool32, label %if.end34, label %if.then33, !dbg !10788

if.then33:                                        ; preds = %while.end
  store i32 -1, i32* %retval, align 4, !dbg !10789
  br label %return, !dbg !10789

if.end34:                                         ; preds = %while.end
  %38 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !10791
  %39 = load i8*, i8** %tregs.addr, align 8, !dbg !10792
  %call35 = call i32 @happy_meal_tcvr_read(%struct.happy_meal* %38, i8* %39, i32 1) #12, !dbg !10793
  %conv36 = trunc i32 %call35 to i16, !dbg !10793
  %40 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !10794
  %sw_bmsr = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %40, i32 0, i32 23, !dbg !10795
  store i16 %conv36, i16* %sw_bmsr, align 8, !dbg !10796
  %41 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !10797
  %42 = load i8*, i8** %tregs.addr, align 8, !dbg !10798
  %call37 = call i32 @happy_meal_tcvr_read(%struct.happy_meal* %41, i8* %42, i32 2) #12, !dbg !10799
  %conv38 = trunc i32 %call37 to i16, !dbg !10799
  %43 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !10800
  %sw_physid1 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %43, i32 0, i32 24, !dbg !10801
  store i16 %conv38, i16* %sw_physid1, align 2, !dbg !10802
  %44 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !10803
  %45 = load i8*, i8** %tregs.addr, align 8, !dbg !10804
  %call39 = call i32 @happy_meal_tcvr_read(%struct.happy_meal* %44, i8* %45, i32 3) #12, !dbg !10805
  %conv40 = trunc i32 %call39 to i16, !dbg !10805
  %46 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !10806
  %sw_physid2 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %46, i32 0, i32 25, !dbg !10807
  store i16 %conv40, i16* %sw_physid2, align 4, !dbg !10808
  %47 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !10809
  %48 = load i8*, i8** %tregs.addr, align 8, !dbg !10810
  %call41 = call i32 @happy_meal_tcvr_read(%struct.happy_meal* %47, i8* %48, i32 4) #12, !dbg !10811
  %conv42 = trunc i32 %call41 to i16, !dbg !10811
  %49 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !10812
  %sw_advertise = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %49, i32 0, i32 26, !dbg !10813
  store i16 %conv42, i16* %sw_advertise, align 2, !dbg !10814
  %50 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !10815
  %sw_bmcr43 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %50, i32 0, i32 22, !dbg !10816
  %51 = load i16, i16* %sw_bmcr43, align 2, !dbg !10817
  %conv44 = zext i16 %51 to i32, !dbg !10817
  %and45 = and i32 %conv44, -1025, !dbg !10817
  %conv46 = trunc i32 %and45 to i16, !dbg !10817
  store i16 %conv46, i16* %sw_bmcr43, align 2, !dbg !10817
  %52 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !10818
  %53 = load i8*, i8** %tregs.addr, align 8, !dbg !10819
  %54 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !10820
  %sw_bmcr47 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %54, i32 0, i32 22, !dbg !10821
  %55 = load i16, i16* %sw_bmcr47, align 2, !dbg !10821
  call void @happy_meal_tcvr_write(%struct.happy_meal* %52, i8* %53, i32 0, i16 zeroext %55) #12, !dbg !10822
  store i32 32, i32* %tries, align 4, !dbg !10823
  br label %while.cond48, !dbg !10824

while.cond48:                                     ; preds = %if.end60, %if.end34
  %56 = load i32, i32* %tries, align 4, !dbg !10825
  %dec49 = add i32 %56, -1, !dbg !10825
  store i32 %dec49, i32* %tries, align 4, !dbg !10825
  %tobool50 = icmp ne i32 %dec49, 0, !dbg !10824
  br i1 %tobool50, label %while.body51, label %while.end61, !dbg !10824

while.body51:                                     ; preds = %while.cond48
  %57 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !10826
  %58 = load i8*, i8** %tregs.addr, align 8, !dbg !10828
  %call52 = call i32 @happy_meal_tcvr_read(%struct.happy_meal* %57, i8* %58, i32 0) #12, !dbg !10829
  store i32 %call52, i32* %result, align 4, !dbg !10830
  %59 = load i32, i32* %result, align 4, !dbg !10831
  %cmp53 = icmp eq i32 %59, -2147483648, !dbg !10833
  br i1 %cmp53, label %if.then55, label %if.end56, !dbg !10834

if.then55:                                        ; preds = %while.body51
  store i32 -1, i32* %retval, align 4, !dbg !10835
  br label %return, !dbg !10835

if.end56:                                         ; preds = %while.body51
  %60 = load i32, i32* %result, align 4, !dbg !10836
  %and57 = and i32 %60, 1024, !dbg !10838
  %tobool58 = icmp ne i32 %and57, 0, !dbg !10838
  br i1 %tobool58, label %if.end60, label %if.then59, !dbg !10839

if.then59:                                        ; preds = %if.end56
  br label %while.end61, !dbg !10840

if.end60:                                         ; preds = %if.end56
  call void @__const_udelay(i64 85900) #12, !dbg !10841
  br label %while.cond48, !dbg !10824, !llvm.loop !10846

while.end61:                                      ; preds = %if.then59, %while.cond48
  %61 = load i32, i32* %tries, align 4, !dbg !10848
  %tobool62 = icmp ne i32 %61, 0, !dbg !10848
  br i1 %tobool62, label %if.end64, label %if.then63, !dbg !10850

if.then63:                                        ; preds = %while.end61
  store i32 -1, i32* %retval, align 4, !dbg !10851
  br label %return, !dbg !10851

if.end64:                                         ; preds = %while.end61
  %62 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !10853
  %call65 = call i32 @is_lucent_phy(%struct.happy_meal* %62) #12, !dbg !10855
  %tobool66 = icmp ne i32 %call65, 0, !dbg !10855
  br i1 %tobool66, label %if.end71, label %if.then67, !dbg !10856

if.then67:                                        ; preds = %if.end64
  %63 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !10857
  %64 = load i8*, i8** %tregs.addr, align 8, !dbg !10859
  %call68 = call i32 @happy_meal_tcvr_read(%struct.happy_meal* %63, i8* %64, i32 23) #12, !dbg !10860
  store i32 %call68, i32* %result, align 4, !dbg !10861
  %65 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !10862
  %66 = load i8*, i8** %tregs.addr, align 8, !dbg !10863
  %67 = load i32, i32* %result, align 4, !dbg !10864
  %or69 = or i32 %67, 32, !dbg !10865
  %conv70 = trunc i32 %or69 to i16, !dbg !10866
  call void @happy_meal_tcvr_write(%struct.happy_meal* %65, i8* %66, i32 23, i16 zeroext %conv70) #12, !dbg !10867
  br label %if.end71, !dbg !10868

if.end71:                                         ; preds = %if.then67, %if.end64
  store i32 0, i32* %retval, align 4, !dbg !10869
  br label %return, !dbg !10869

return:                                           ; preds = %if.end71, %if.then63, %if.then55, %if.then33, %if.then26, %if.then15, %if.then5
  %68 = load i32, i32* %retval, align 4, !dbg !10870
  ret i32 %68, !dbg !10870
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @happy_meal_tx_reset(%struct.happy_meal* %hp, i8* %bregs) #1 !dbg !10871 {
entry:
  %hp.addr = alloca %struct.happy_meal*, align 8
  %bregs.addr = alloca i8*, align 8
  %tries = alloca i32, align 4
  store %struct.happy_meal* %hp, %struct.happy_meal** %hp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.happy_meal** %hp.addr, metadata !10872, metadata !DIExpression()), !dbg !10873
  store i8* %bregs, i8** %bregs.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %bregs.addr, metadata !10874, metadata !DIExpression()), !dbg !10875
  call void @llvm.dbg.declare(metadata i32* %tries, metadata !10876, metadata !DIExpression()), !dbg !10877
  store i32 32, i32* %tries, align 4, !dbg !10877
  %0 = load i8*, i8** %bregs.addr, align 8, !dbg !10878
  %add.ptr = getelementptr i8, i8* %0, i64 520, !dbg !10878
  call void @writel(i32 0, i8* %add.ptr) #12, !dbg !10878
  br label %while.cond, !dbg !10879

while.cond:                                       ; preds = %while.body, %entry
  %1 = load i8*, i8** %bregs.addr, align 8, !dbg !10880
  %add.ptr1 = getelementptr i8, i8* %1, i64 520, !dbg !10880
  %call = call i32 @readl(i8* %add.ptr1) #12, !dbg !10880
  %and = and i32 %call, 1, !dbg !10881
  %tobool = icmp ne i32 %and, 0, !dbg !10881
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !10882

land.rhs:                                         ; preds = %while.cond
  %2 = load i32, i32* %tries, align 4, !dbg !10883
  %dec = add i32 %2, -1, !dbg !10883
  store i32 %dec, i32* %tries, align 4, !dbg !10883
  %tobool2 = icmp ne i32 %dec, 0, !dbg !10882
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %3 = phi i1 [ false, %while.cond ], [ %tobool2, %land.rhs ], !dbg !10884
  br i1 %3, label %while.body, label %while.end, !dbg !10879

while.body:                                       ; preds = %land.end
  call void @__const_udelay(i64 85900) #12, !dbg !10885
  br label %while.cond, !dbg !10879, !llvm.loop !10890

while.end:                                        ; preds = %land.end
  %4 = load i32, i32* %tries, align 4, !dbg !10892
  %tobool3 = icmp ne i32 %4, 0, !dbg !10892
  br i1 %tobool3, label %if.end, label %if.then, !dbg !10894

if.then:                                          ; preds = %while.end
  %call4 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.47, i64 0, i64 0)) #13, !dbg !10895
  br label %if.end, !dbg !10895

if.end:                                           ; preds = %if.then, %while.end
  ret void, !dbg !10896
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @happy_meal_rx_reset(%struct.happy_meal* %hp, i8* %bregs) #1 !dbg !10897 {
entry:
  %hp.addr = alloca %struct.happy_meal*, align 8
  %bregs.addr = alloca i8*, align 8
  %tries = alloca i32, align 4
  store %struct.happy_meal* %hp, %struct.happy_meal** %hp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.happy_meal** %hp.addr, metadata !10898, metadata !DIExpression()), !dbg !10899
  store i8* %bregs, i8** %bregs.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %bregs.addr, metadata !10900, metadata !DIExpression()), !dbg !10901
  call void @llvm.dbg.declare(metadata i32* %tries, metadata !10902, metadata !DIExpression()), !dbg !10903
  store i32 32, i32* %tries, align 4, !dbg !10903
  %0 = load i8*, i8** %bregs.addr, align 8, !dbg !10904
  %add.ptr = getelementptr i8, i8* %0, i64 776, !dbg !10904
  call void @writel(i32 0, i8* %add.ptr) #12, !dbg !10904
  br label %while.cond, !dbg !10905

while.cond:                                       ; preds = %while.body, %entry
  %1 = load i8*, i8** %bregs.addr, align 8, !dbg !10906
  %add.ptr1 = getelementptr i8, i8* %1, i64 776, !dbg !10906
  %call = call i32 @readl(i8* %add.ptr1) #12, !dbg !10906
  %and = and i32 %call, 1, !dbg !10907
  %tobool = icmp ne i32 %and, 0, !dbg !10907
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !10908

land.rhs:                                         ; preds = %while.cond
  %2 = load i32, i32* %tries, align 4, !dbg !10909
  %dec = add i32 %2, -1, !dbg !10909
  store i32 %dec, i32* %tries, align 4, !dbg !10909
  %tobool2 = icmp ne i32 %dec, 0, !dbg !10908
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %3 = phi i1 [ false, %while.cond ], [ %tobool2, %land.rhs ], !dbg !10910
  br i1 %3, label %while.body, label %while.end, !dbg !10905

while.body:                                       ; preds = %land.end
  call void @__const_udelay(i64 85900) #12, !dbg !10911
  br label %while.cond, !dbg !10905, !llvm.loop !10916

while.end:                                        ; preds = %land.end
  %4 = load i32, i32* %tries, align 4, !dbg !10918
  %tobool3 = icmp ne i32 %4, 0, !dbg !10918
  br i1 %tobool3, label %if.end, label %if.then, !dbg !10920

if.then:                                          ; preds = %while.end
  %call4 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.48, i64 0, i64 0)) #13, !dbg !10921
  br label %if.end, !dbg !10921

if.end:                                           ; preds = %if.then, %while.end
  ret void, !dbg !10922
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #5

; Function Attrs: noredzone nounwind readonly
declare dso_local i32 @crc32_le(i32, i8*, i64) #9

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @happy_meal_begin_auto_negotiation(%struct.happy_meal* %hp, i8* %tregs, %struct.ethtool_link_ksettings* %ep) #1 !dbg !10923 {
entry:
  %hp.addr = alloca %struct.happy_meal*, align 8
  %tregs.addr = alloca i8*, align 8
  %ep.addr = alloca %struct.ethtool_link_ksettings*, align 8
  %timeout = alloca i32, align 4
  store %struct.happy_meal* %hp, %struct.happy_meal** %hp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.happy_meal** %hp.addr, metadata !10926, metadata !DIExpression()), !dbg !10927
  store i8* %tregs, i8** %tregs.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %tregs.addr, metadata !10928, metadata !DIExpression()), !dbg !10929
  store %struct.ethtool_link_ksettings* %ep, %struct.ethtool_link_ksettings** %ep.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ethtool_link_ksettings** %ep.addr, metadata !10930, metadata !DIExpression()), !dbg !10931
  call void @llvm.dbg.declare(metadata i32* %timeout, metadata !10932, metadata !DIExpression()), !dbg !10933
  %0 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !10934
  %1 = load i8*, i8** %tregs.addr, align 8, !dbg !10935
  %call = call i32 @happy_meal_tcvr_read(%struct.happy_meal* %0, i8* %1, i32 1) #12, !dbg !10936
  %conv = trunc i32 %call to i16, !dbg !10936
  %2 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !10937
  %sw_bmsr = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %2, i32 0, i32 23, !dbg !10938
  store i16 %conv, i16* %sw_bmsr, align 8, !dbg !10939
  %3 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !10940
  %4 = load i8*, i8** %tregs.addr, align 8, !dbg !10941
  %call1 = call i32 @happy_meal_tcvr_read(%struct.happy_meal* %3, i8* %4, i32 0) #12, !dbg !10942
  %conv2 = trunc i32 %call1 to i16, !dbg !10942
  %5 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !10943
  %sw_bmcr = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %5, i32 0, i32 22, !dbg !10944
  store i16 %conv2, i16* %sw_bmcr, align 2, !dbg !10945
  %6 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !10946
  %7 = load i8*, i8** %tregs.addr, align 8, !dbg !10947
  %call3 = call i32 @happy_meal_tcvr_read(%struct.happy_meal* %6, i8* %7, i32 2) #12, !dbg !10948
  %conv4 = trunc i32 %call3 to i16, !dbg !10948
  %8 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !10949
  %sw_physid1 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %8, i32 0, i32 24, !dbg !10950
  store i16 %conv4, i16* %sw_physid1, align 2, !dbg !10951
  %9 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !10952
  %10 = load i8*, i8** %tregs.addr, align 8, !dbg !10953
  %call5 = call i32 @happy_meal_tcvr_read(%struct.happy_meal* %9, i8* %10, i32 3) #12, !dbg !10954
  %conv6 = trunc i32 %call5 to i16, !dbg !10954
  %11 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !10955
  %sw_physid2 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %11, i32 0, i32 25, !dbg !10956
  store i16 %conv6, i16* %sw_physid2, align 4, !dbg !10957
  %12 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !10958
  %13 = load i8*, i8** %tregs.addr, align 8, !dbg !10959
  %call7 = call i32 @happy_meal_tcvr_read(%struct.happy_meal* %12, i8* %13, i32 4) #12, !dbg !10960
  %conv8 = trunc i32 %call7 to i16, !dbg !10960
  %14 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !10961
  %sw_advertise = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %14, i32 0, i32 26, !dbg !10962
  store i16 %conv8, i16* %sw_advertise, align 2, !dbg !10963
  %15 = load %struct.ethtool_link_ksettings*, %struct.ethtool_link_ksettings** %ep.addr, align 8, !dbg !10964
  %tobool = icmp ne %struct.ethtool_link_ksettings* %15, null, !dbg !10964
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !10966

lor.lhs.false:                                    ; preds = %entry
  %16 = load %struct.ethtool_link_ksettings*, %struct.ethtool_link_ksettings** %ep.addr, align 8, !dbg !10967
  %base = getelementptr inbounds %struct.ethtool_link_ksettings, %struct.ethtool_link_ksettings* %16, i32 0, i32 0, !dbg !10968
  %autoneg = getelementptr inbounds %struct.ethtool_link_settings, %struct.ethtool_link_settings* %base, i32 0, i32 5, !dbg !10969
  %17 = load i8, i8* %autoneg, align 1, !dbg !10969
  %conv9 = zext i8 %17 to i32, !dbg !10967
  %cmp = icmp eq i32 %conv9, 1, !dbg !10970
  br i1 %cmp, label %if.then, label %if.else99, !dbg !10971

if.then:                                          ; preds = %lor.lhs.false, %entry
  %18 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !10972
  %sw_bmsr11 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %18, i32 0, i32 23, !dbg !10975
  %19 = load i16, i16* %sw_bmsr11, align 8, !dbg !10975
  %conv12 = zext i16 %19 to i32, !dbg !10972
  %and = and i32 %conv12, 2048, !dbg !10976
  %tobool13 = icmp ne i32 %and, 0, !dbg !10976
  br i1 %tobool13, label %if.then14, label %if.else, !dbg !10977

if.then14:                                        ; preds = %if.then
  %20 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !10978
  %sw_advertise15 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %20, i32 0, i32 26, !dbg !10979
  %21 = load i16, i16* %sw_advertise15, align 2, !dbg !10980
  %conv16 = zext i16 %21 to i32, !dbg !10980
  %or = or i32 %conv16, 32, !dbg !10980
  %conv17 = trunc i32 %or to i16, !dbg !10980
  store i16 %conv17, i16* %sw_advertise15, align 2, !dbg !10980
  br label %if.end, !dbg !10978

if.else:                                          ; preds = %if.then
  %22 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !10981
  %sw_advertise18 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %22, i32 0, i32 26, !dbg !10982
  %23 = load i16, i16* %sw_advertise18, align 2, !dbg !10983
  %conv19 = zext i16 %23 to i32, !dbg !10983
  %and20 = and i32 %conv19, -33, !dbg !10983
  %conv21 = trunc i32 %and20 to i16, !dbg !10983
  store i16 %conv21, i16* %sw_advertise18, align 2, !dbg !10983
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then14
  %24 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !10984
  %sw_bmsr22 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %24, i32 0, i32 23, !dbg !10986
  %25 = load i16, i16* %sw_bmsr22, align 8, !dbg !10986
  %conv23 = zext i16 %25 to i32, !dbg !10984
  %and24 = and i32 %conv23, 4096, !dbg !10987
  %tobool25 = icmp ne i32 %and24, 0, !dbg !10987
  br i1 %tobool25, label %if.then26, label %if.else31, !dbg !10988

if.then26:                                        ; preds = %if.end
  %26 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !10989
  %sw_advertise27 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %26, i32 0, i32 26, !dbg !10990
  %27 = load i16, i16* %sw_advertise27, align 2, !dbg !10991
  %conv28 = zext i16 %27 to i32, !dbg !10991
  %or29 = or i32 %conv28, 64, !dbg !10991
  %conv30 = trunc i32 %or29 to i16, !dbg !10991
  store i16 %conv30, i16* %sw_advertise27, align 2, !dbg !10991
  br label %if.end36, !dbg !10989

if.else31:                                        ; preds = %if.end
  %28 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !10992
  %sw_advertise32 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %28, i32 0, i32 26, !dbg !10993
  %29 = load i16, i16* %sw_advertise32, align 2, !dbg !10994
  %conv33 = zext i16 %29 to i32, !dbg !10994
  %and34 = and i32 %conv33, -65, !dbg !10994
  %conv35 = trunc i32 %and34 to i16, !dbg !10994
  store i16 %conv35, i16* %sw_advertise32, align 2, !dbg !10994
  br label %if.end36

if.end36:                                         ; preds = %if.else31, %if.then26
  %30 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !10995
  %sw_bmsr37 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %30, i32 0, i32 23, !dbg !10997
  %31 = load i16, i16* %sw_bmsr37, align 8, !dbg !10997
  %conv38 = zext i16 %31 to i32, !dbg !10995
  %and39 = and i32 %conv38, 8192, !dbg !10998
  %tobool40 = icmp ne i32 %and39, 0, !dbg !10998
  br i1 %tobool40, label %if.then41, label %if.else46, !dbg !10999

if.then41:                                        ; preds = %if.end36
  %32 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !11000
  %sw_advertise42 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %32, i32 0, i32 26, !dbg !11001
  %33 = load i16, i16* %sw_advertise42, align 2, !dbg !11002
  %conv43 = zext i16 %33 to i32, !dbg !11002
  %or44 = or i32 %conv43, 128, !dbg !11002
  %conv45 = trunc i32 %or44 to i16, !dbg !11002
  store i16 %conv45, i16* %sw_advertise42, align 2, !dbg !11002
  br label %if.end51, !dbg !11000

if.else46:                                        ; preds = %if.end36
  %34 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !11003
  %sw_advertise47 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %34, i32 0, i32 26, !dbg !11004
  %35 = load i16, i16* %sw_advertise47, align 2, !dbg !11005
  %conv48 = zext i16 %35 to i32, !dbg !11005
  %and49 = and i32 %conv48, -129, !dbg !11005
  %conv50 = trunc i32 %and49 to i16, !dbg !11005
  store i16 %conv50, i16* %sw_advertise47, align 2, !dbg !11005
  br label %if.end51

if.end51:                                         ; preds = %if.else46, %if.then41
  %36 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !11006
  %sw_bmsr52 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %36, i32 0, i32 23, !dbg !11008
  %37 = load i16, i16* %sw_bmsr52, align 8, !dbg !11008
  %conv53 = zext i16 %37 to i32, !dbg !11006
  %and54 = and i32 %conv53, 16384, !dbg !11009
  %tobool55 = icmp ne i32 %and54, 0, !dbg !11009
  br i1 %tobool55, label %if.then56, label %if.else61, !dbg !11010

if.then56:                                        ; preds = %if.end51
  %38 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !11011
  %sw_advertise57 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %38, i32 0, i32 26, !dbg !11012
  %39 = load i16, i16* %sw_advertise57, align 2, !dbg !11013
  %conv58 = zext i16 %39 to i32, !dbg !11013
  %or59 = or i32 %conv58, 256, !dbg !11013
  %conv60 = trunc i32 %or59 to i16, !dbg !11013
  store i16 %conv60, i16* %sw_advertise57, align 2, !dbg !11013
  br label %if.end66, !dbg !11011

if.else61:                                        ; preds = %if.end51
  %40 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !11014
  %sw_advertise62 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %40, i32 0, i32 26, !dbg !11015
  %41 = load i16, i16* %sw_advertise62, align 2, !dbg !11016
  %conv63 = zext i16 %41 to i32, !dbg !11016
  %and64 = and i32 %conv63, -257, !dbg !11016
  %conv65 = trunc i32 %and64 to i16, !dbg !11016
  store i16 %conv65, i16* %sw_advertise62, align 2, !dbg !11016
  br label %if.end66

if.end66:                                         ; preds = %if.else61, %if.then56
  %42 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !11017
  %43 = load i8*, i8** %tregs.addr, align 8, !dbg !11018
  %44 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !11019
  %sw_advertise67 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %44, i32 0, i32 26, !dbg !11020
  %45 = load i16, i16* %sw_advertise67, align 2, !dbg !11020
  call void @happy_meal_tcvr_write(%struct.happy_meal* %42, i8* %43, i32 4, i16 zeroext %45) #12, !dbg !11021
  %46 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !11022
  %sw_bmcr68 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %46, i32 0, i32 22, !dbg !11023
  %47 = load i16, i16* %sw_bmcr68, align 2, !dbg !11024
  %conv69 = zext i16 %47 to i32, !dbg !11024
  %or70 = or i32 %conv69, 4096, !dbg !11024
  %conv71 = trunc i32 %or70 to i16, !dbg !11024
  store i16 %conv71, i16* %sw_bmcr68, align 2, !dbg !11024
  %48 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !11025
  %49 = load i8*, i8** %tregs.addr, align 8, !dbg !11026
  %50 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !11027
  %sw_bmcr72 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %50, i32 0, i32 22, !dbg !11028
  %51 = load i16, i16* %sw_bmcr72, align 2, !dbg !11028
  call void @happy_meal_tcvr_write(%struct.happy_meal* %48, i8* %49, i32 0, i16 zeroext %51) #12, !dbg !11029
  %52 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !11030
  %sw_bmcr73 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %52, i32 0, i32 22, !dbg !11031
  %53 = load i16, i16* %sw_bmcr73, align 2, !dbg !11032
  %conv74 = zext i16 %53 to i32, !dbg !11032
  %or75 = or i32 %conv74, 512, !dbg !11032
  %conv76 = trunc i32 %or75 to i16, !dbg !11032
  store i16 %conv76, i16* %sw_bmcr73, align 2, !dbg !11032
  %54 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !11033
  %55 = load i8*, i8** %tregs.addr, align 8, !dbg !11034
  %56 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !11035
  %sw_bmcr77 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %56, i32 0, i32 22, !dbg !11036
  %57 = load i16, i16* %sw_bmcr77, align 2, !dbg !11036
  call void @happy_meal_tcvr_write(%struct.happy_meal* %54, i8* %55, i32 0, i16 zeroext %57) #12, !dbg !11037
  store i32 64, i32* %timeout, align 4, !dbg !11038
  br label %while.cond, !dbg !11039

while.cond:                                       ; preds = %if.end87, %if.end66
  %58 = load i32, i32* %timeout, align 4, !dbg !11040
  %dec = add i32 %58, -1, !dbg !11040
  store i32 %dec, i32* %timeout, align 4, !dbg !11040
  %tobool78 = icmp ne i32 %dec, 0, !dbg !11039
  br i1 %tobool78, label %while.body, label %while.end, !dbg !11039

while.body:                                       ; preds = %while.cond
  %59 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !11041
  %60 = load i8*, i8** %tregs.addr, align 8, !dbg !11043
  %call79 = call i32 @happy_meal_tcvr_read(%struct.happy_meal* %59, i8* %60, i32 0) #12, !dbg !11044
  %conv80 = trunc i32 %call79 to i16, !dbg !11044
  %61 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !11045
  %sw_bmcr81 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %61, i32 0, i32 22, !dbg !11046
  store i16 %conv80, i16* %sw_bmcr81, align 2, !dbg !11047
  %62 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !11048
  %sw_bmcr82 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %62, i32 0, i32 22, !dbg !11050
  %63 = load i16, i16* %sw_bmcr82, align 2, !dbg !11050
  %conv83 = zext i16 %63 to i32, !dbg !11048
  %and84 = and i32 %conv83, 512, !dbg !11051
  %tobool85 = icmp ne i32 %and84, 0, !dbg !11051
  br i1 %tobool85, label %if.end87, label %if.then86, !dbg !11052

if.then86:                                        ; preds = %while.body
  br label %while.end, !dbg !11053

if.end87:                                         ; preds = %while.body
  call void @__const_udelay(i64 42950) #12, !dbg !11054
  br label %while.cond, !dbg !11039, !llvm.loop !11059

while.end:                                        ; preds = %if.then86, %while.cond
  %64 = load i32, i32* %timeout, align 4, !dbg !11061
  %tobool88 = icmp ne i32 %64, 0, !dbg !11061
  br i1 %tobool88, label %if.else97, label %if.then89, !dbg !11063

if.then89:                                        ; preds = %while.end
  %65 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !11064
  %dev = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %65, i32 0, i32 41, !dbg !11066
  %66 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !11066
  %name = getelementptr inbounds %struct.net_device, %struct.net_device* %66, i32 0, i32 0, !dbg !11067
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %name, i64 0, i64 0, !dbg !11064
  %67 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !11068
  %sw_bmcr90 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %67, i32 0, i32 22, !dbg !11069
  %68 = load i16, i16* %sw_bmcr90, align 2, !dbg !11069
  %conv91 = zext i16 %68 to i32, !dbg !11068
  %call92 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.49, i64 0, i64 0), i8* %arraydecay, i32 %conv91) #13, !dbg !11070
  %69 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !11071
  %dev93 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %69, i32 0, i32 41, !dbg !11072
  %70 = load %struct.net_device*, %struct.net_device** %dev93, align 8, !dbg !11072
  %name94 = getelementptr inbounds %struct.net_device, %struct.net_device* %70, i32 0, i32 0, !dbg !11073
  %arraydecay95 = getelementptr inbounds [16 x i8], [16 x i8]* %name94, i64 0, i64 0, !dbg !11071
  %call96 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.50, i64 0, i64 0), i8* %arraydecay95) #13, !dbg !11074
  br label %force_link, !dbg !11075

if.else97:                                        ; preds = %while.end
  %71 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !11076
  %timer_state = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %71, i32 0, i32 39, !dbg !11078
  store i32 0, i32* %timer_state, align 8, !dbg !11079
  br label %if.end98

if.end98:                                         ; preds = %if.else97
  br label %if.end142, !dbg !11080

if.else99:                                        ; preds = %lor.lhs.false
  br label %force_link, !dbg !11081

force_link:                                       ; preds = %if.else99, %if.then89
  call void @llvm.dbg.label(metadata !11082), !dbg !11084
  %72 = load %struct.ethtool_link_ksettings*, %struct.ethtool_link_ksettings** %ep.addr, align 8, !dbg !11085
  %tobool100 = icmp ne %struct.ethtool_link_ksettings* %72, null, !dbg !11085
  br i1 %tobool100, label %lor.lhs.false101, label %if.then107, !dbg !11087

lor.lhs.false101:                                 ; preds = %force_link
  %73 = load %struct.ethtool_link_ksettings*, %struct.ethtool_link_ksettings** %ep.addr, align 8, !dbg !11088
  %base102 = getelementptr inbounds %struct.ethtool_link_ksettings, %struct.ethtool_link_ksettings* %73, i32 0, i32 0, !dbg !11089
  %autoneg103 = getelementptr inbounds %struct.ethtool_link_settings, %struct.ethtool_link_settings* %base102, i32 0, i32 5, !dbg !11090
  %74 = load i8, i8* %autoneg103, align 1, !dbg !11090
  %conv104 = zext i8 %74 to i32, !dbg !11088
  %cmp105 = icmp eq i32 %conv104, 1, !dbg !11091
  br i1 %cmp105, label %if.then107, label %if.else109, !dbg !11092

if.then107:                                       ; preds = %lor.lhs.false101, %force_link
  %75 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !11093
  %sw_bmcr108 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %75, i32 0, i32 22, !dbg !11095
  store i16 8192, i16* %sw_bmcr108, align 2, !dbg !11096
  br label %if.end128, !dbg !11097

if.else109:                                       ; preds = %lor.lhs.false101
  %76 = load %struct.ethtool_link_ksettings*, %struct.ethtool_link_ksettings** %ep.addr, align 8, !dbg !11098
  %base110 = getelementptr inbounds %struct.ethtool_link_ksettings, %struct.ethtool_link_ksettings* %76, i32 0, i32 0, !dbg !11101
  %speed = getelementptr inbounds %struct.ethtool_link_settings, %struct.ethtool_link_settings* %base110, i32 0, i32 1, !dbg !11102
  %77 = load i32, i32* %speed, align 4, !dbg !11102
  %cmp111 = icmp eq i32 %77, 100, !dbg !11103
  br i1 %cmp111, label %if.then113, label %if.else115, !dbg !11104

if.then113:                                       ; preds = %if.else109
  %78 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !11105
  %sw_bmcr114 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %78, i32 0, i32 22, !dbg !11106
  store i16 8192, i16* %sw_bmcr114, align 2, !dbg !11107
  br label %if.end117, !dbg !11105

if.else115:                                       ; preds = %if.else109
  %79 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !11108
  %sw_bmcr116 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %79, i32 0, i32 22, !dbg !11109
  store i16 0, i16* %sw_bmcr116, align 2, !dbg !11110
  br label %if.end117

if.end117:                                        ; preds = %if.else115, %if.then113
  %80 = load %struct.ethtool_link_ksettings*, %struct.ethtool_link_ksettings** %ep.addr, align 8, !dbg !11111
  %base118 = getelementptr inbounds %struct.ethtool_link_ksettings, %struct.ethtool_link_ksettings* %80, i32 0, i32 0, !dbg !11113
  %duplex = getelementptr inbounds %struct.ethtool_link_settings, %struct.ethtool_link_settings* %base118, i32 0, i32 2, !dbg !11114
  %81 = load i8, i8* %duplex, align 8, !dbg !11114
  %conv119 = zext i8 %81 to i32, !dbg !11111
  %cmp120 = icmp eq i32 %conv119, 1, !dbg !11115
  br i1 %cmp120, label %if.then122, label %if.end127, !dbg !11116

if.then122:                                       ; preds = %if.end117
  %82 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !11117
  %sw_bmcr123 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %82, i32 0, i32 22, !dbg !11118
  %83 = load i16, i16* %sw_bmcr123, align 2, !dbg !11119
  %conv124 = zext i16 %83 to i32, !dbg !11119
  %or125 = or i32 %conv124, 256, !dbg !11119
  %conv126 = trunc i32 %or125 to i16, !dbg !11119
  store i16 %conv126, i16* %sw_bmcr123, align 2, !dbg !11119
  br label %if.end127, !dbg !11117

if.end127:                                        ; preds = %if.then122, %if.end117
  br label %if.end128

if.end128:                                        ; preds = %if.end127, %if.then107
  %84 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !11120
  %85 = load i8*, i8** %tregs.addr, align 8, !dbg !11121
  %86 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !11122
  %sw_bmcr129 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %86, i32 0, i32 22, !dbg !11123
  %87 = load i16, i16* %sw_bmcr129, align 2, !dbg !11123
  call void @happy_meal_tcvr_write(%struct.happy_meal* %84, i8* %85, i32 0, i16 zeroext %87) #12, !dbg !11124
  %88 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !11125
  %call130 = call i32 @is_lucent_phy(%struct.happy_meal* %88) #12, !dbg !11127
  %tobool131 = icmp ne i32 %call130, 0, !dbg !11127
  br i1 %tobool131, label %if.end140, label %if.then132, !dbg !11128

if.then132:                                       ; preds = %if.end128
  %89 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !11129
  %90 = load i8*, i8** %tregs.addr, align 8, !dbg !11131
  %call133 = call i32 @happy_meal_tcvr_read(%struct.happy_meal* %89, i8* %90, i32 23) #12, !dbg !11132
  %conv134 = trunc i32 %call133 to i16, !dbg !11132
  %91 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !11133
  %sw_csconfig = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %91, i32 0, i32 29, !dbg !11134
  store i16 %conv134, i16* %sw_csconfig, align 4, !dbg !11135
  %92 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !11136
  %sw_csconfig135 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %92, i32 0, i32 29, !dbg !11137
  %93 = load i16, i16* %sw_csconfig135, align 4, !dbg !11138
  %conv136 = zext i16 %93 to i32, !dbg !11138
  %and137 = and i32 %conv136, -17, !dbg !11138
  %conv138 = trunc i32 %and137 to i16, !dbg !11138
  store i16 %conv138, i16* %sw_csconfig135, align 4, !dbg !11138
  %94 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !11139
  %95 = load i8*, i8** %tregs.addr, align 8, !dbg !11140
  %96 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !11141
  %sw_csconfig139 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %96, i32 0, i32 29, !dbg !11142
  %97 = load i16, i16* %sw_csconfig139, align 4, !dbg !11142
  call void @happy_meal_tcvr_write(%struct.happy_meal* %94, i8* %95, i32 23, i16 zeroext %97) #12, !dbg !11143
  br label %if.end140, !dbg !11144

if.end140:                                        ; preds = %if.then132, %if.end128
  %98 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !11145
  %timer_state141 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %98, i32 0, i32 39, !dbg !11146
  store i32 2, i32* %timer_state141, align 8, !dbg !11147
  br label %if.end142

if.end142:                                        ; preds = %if.end140, %if.end98
  %99 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !11148
  %timer_ticks = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %99, i32 0, i32 40, !dbg !11149
  store i32 0, i32* %timer_ticks, align 4, !dbg !11150
  %100 = load volatile i64, i64* @jiffies, align 8, !dbg !11151
  %add = add i64 %100, 300, !dbg !11152
  %101 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !11153
  %happy_timer = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %101, i32 0, i32 38, !dbg !11154
  %expires = getelementptr inbounds %struct.timer_list, %struct.timer_list* %happy_timer, i32 0, i32 1, !dbg !11155
  store i64 %add, i64* %expires, align 8, !dbg !11156
  %102 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !11157
  %happy_timer143 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %102, i32 0, i32 38, !dbg !11158
  call void @add_timer(%struct.timer_list* %happy_timer143) #12, !dbg !11159
  ret void, !dbg !11160
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @happy_meal_clean_rings(%struct.happy_meal* %hp) #1 !dbg !11161 {
entry:
  %hp.addr = alloca %struct.happy_meal*, align 8
  %i = alloca i32, align 4
  %skb = alloca %struct.sk_buff*, align 8
  %rxd = alloca %struct.happy_meal_rxd*, align 8
  %dma_addr = alloca i32, align 4
  %skb19 = alloca %struct.sk_buff*, align 8
  %txd = alloca %struct.happy_meal_txd*, align 8
  %dma_addr23 = alloca i32, align 4
  %frag = alloca i32, align 4
  store %struct.happy_meal* %hp, %struct.happy_meal** %hp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.happy_meal** %hp.addr, metadata !11162, metadata !DIExpression()), !dbg !11163
  call void @llvm.dbg.declare(metadata i32* %i, metadata !11164, metadata !DIExpression()), !dbg !11165
  store i32 0, i32* %i, align 4, !dbg !11166
  br label %for.cond, !dbg !11168

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !11169
  %cmp = icmp slt i32 %0, 32, !dbg !11171
  br i1 %cmp, label %for.body, label %for.end, !dbg !11172

for.body:                                         ; preds = %for.cond
  %1 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !11173
  %rx_skbs = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %1, i32 0, i32 5, !dbg !11176
  %2 = load i32, i32* %i, align 4, !dbg !11177
  %idxprom = sext i32 %2 to i64, !dbg !11173
  %arrayidx = getelementptr [32 x %struct.sk_buff*], [32 x %struct.sk_buff*]* %rx_skbs, i64 0, i64 %idxprom, !dbg !11173
  %3 = load %struct.sk_buff*, %struct.sk_buff** %arrayidx, align 8, !dbg !11173
  %cmp1 = icmp ne %struct.sk_buff* %3, null, !dbg !11178
  br i1 %cmp1, label %if.then, label %if.end, !dbg !11179

if.then:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb, metadata !11180, metadata !DIExpression()), !dbg !11182
  %4 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !11183
  %rx_skbs2 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %4, i32 0, i32 5, !dbg !11184
  %5 = load i32, i32* %i, align 4, !dbg !11185
  %idxprom3 = sext i32 %5 to i64, !dbg !11183
  %arrayidx4 = getelementptr [32 x %struct.sk_buff*], [32 x %struct.sk_buff*]* %rx_skbs2, i64 0, i64 %idxprom3, !dbg !11183
  %6 = load %struct.sk_buff*, %struct.sk_buff** %arrayidx4, align 8, !dbg !11183
  store %struct.sk_buff* %6, %struct.sk_buff** %skb, align 8, !dbg !11182
  call void @llvm.dbg.declare(metadata %struct.happy_meal_rxd** %rxd, metadata !11186, metadata !DIExpression()), !dbg !11188
  call void @llvm.dbg.declare(metadata i32* %dma_addr, metadata !11189, metadata !DIExpression()), !dbg !11190
  %7 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !11191
  %happy_block = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %7, i32 0, i32 1, !dbg !11192
  %8 = load %struct.hmeal_init_block*, %struct.hmeal_init_block** %happy_block, align 8, !dbg !11192
  %happy_meal_rxd = getelementptr inbounds %struct.hmeal_init_block, %struct.hmeal_init_block* %8, i32 0, i32 0, !dbg !11193
  %9 = load i32, i32* %i, align 4, !dbg !11194
  %idxprom5 = sext i32 %9 to i64, !dbg !11191
  %arrayidx6 = getelementptr [256 x %struct.happy_meal_rxd], [256 x %struct.happy_meal_rxd]* %happy_meal_rxd, i64 0, i64 %idxprom5, !dbg !11191
  store %struct.happy_meal_rxd* %arrayidx6, %struct.happy_meal_rxd** %rxd, align 8, !dbg !11195
  %10 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !11196
  %11 = load %struct.happy_meal_rxd*, %struct.happy_meal_rxd** %rxd, align 8, !dbg !11197
  %rx_addr = getelementptr inbounds %struct.happy_meal_rxd, %struct.happy_meal_rxd* %11, i32 0, i32 1, !dbg !11198
  %call = call i32 @hme_read_desc32(%struct.happy_meal* %10, i32* %rx_addr) #12, !dbg !11199
  store i32 %call, i32* %dma_addr, align 4, !dbg !11200
  %12 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !11201
  %dma_dev = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %12, i32 0, i32 3, !dbg !11201
  %13 = load %struct.device*, %struct.device** %dma_dev, align 8, !dbg !11201
  %14 = load i32, i32* %dma_addr, align 4, !dbg !11201
  %conv = zext i32 %14 to i64, !dbg !11201
  call void @dma_unmap_single_attrs(%struct.device* %13, i64 %conv, i64 1612, i32 2, i64 0) #12, !dbg !11201
  %15 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !11202
  call void @dev_kfree_skb_any(%struct.sk_buff* %15) #12, !dbg !11203
  %16 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !11204
  %rx_skbs7 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %16, i32 0, i32 5, !dbg !11205
  %17 = load i32, i32* %i, align 4, !dbg !11206
  %idxprom8 = sext i32 %17 to i64, !dbg !11204
  %arrayidx9 = getelementptr [32 x %struct.sk_buff*], [32 x %struct.sk_buff*]* %rx_skbs7, i64 0, i64 %idxprom8, !dbg !11204
  store %struct.sk_buff* null, %struct.sk_buff** %arrayidx9, align 8, !dbg !11207
  br label %if.end, !dbg !11208

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !11209

for.inc:                                          ; preds = %if.end
  %18 = load i32, i32* %i, align 4, !dbg !11210
  %inc = add i32 %18, 1, !dbg !11210
  store i32 %inc, i32* %i, align 4, !dbg !11210
  br label %for.cond, !dbg !11211, !llvm.loop !11212

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !11214
  br label %for.cond10, !dbg !11216

for.cond10:                                       ; preds = %for.inc61, %for.end
  %19 = load i32, i32* %i, align 4, !dbg !11217
  %cmp11 = icmp slt i32 %19, 32, !dbg !11219
  br i1 %cmp11, label %for.body13, label %for.end63, !dbg !11220

for.body13:                                       ; preds = %for.cond10
  %20 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !11221
  %tx_skbs = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %20, i32 0, i32 6, !dbg !11224
  %21 = load i32, i32* %i, align 4, !dbg !11225
  %idxprom14 = sext i32 %21 to i64, !dbg !11221
  %arrayidx15 = getelementptr [32 x %struct.sk_buff*], [32 x %struct.sk_buff*]* %tx_skbs, i64 0, i64 %idxprom14, !dbg !11221
  %22 = load %struct.sk_buff*, %struct.sk_buff** %arrayidx15, align 8, !dbg !11221
  %cmp16 = icmp ne %struct.sk_buff* %22, null, !dbg !11226
  br i1 %cmp16, label %if.then18, label %if.end60, !dbg !11227

if.then18:                                        ; preds = %for.body13
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb19, metadata !11228, metadata !DIExpression()), !dbg !11230
  %23 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !11231
  %tx_skbs20 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %23, i32 0, i32 6, !dbg !11232
  %24 = load i32, i32* %i, align 4, !dbg !11233
  %idxprom21 = sext i32 %24 to i64, !dbg !11231
  %arrayidx22 = getelementptr [32 x %struct.sk_buff*], [32 x %struct.sk_buff*]* %tx_skbs20, i64 0, i64 %idxprom21, !dbg !11231
  %25 = load %struct.sk_buff*, %struct.sk_buff** %arrayidx22, align 8, !dbg !11231
  store %struct.sk_buff* %25, %struct.sk_buff** %skb19, align 8, !dbg !11230
  call void @llvm.dbg.declare(metadata %struct.happy_meal_txd** %txd, metadata !11234, metadata !DIExpression()), !dbg !11236
  call void @llvm.dbg.declare(metadata i32* %dma_addr23, metadata !11237, metadata !DIExpression()), !dbg !11238
  call void @llvm.dbg.declare(metadata i32* %frag, metadata !11239, metadata !DIExpression()), !dbg !11240
  %26 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !11241
  %tx_skbs24 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %26, i32 0, i32 6, !dbg !11242
  %27 = load i32, i32* %i, align 4, !dbg !11243
  %idxprom25 = sext i32 %27 to i64, !dbg !11241
  %arrayidx26 = getelementptr [32 x %struct.sk_buff*], [32 x %struct.sk_buff*]* %tx_skbs24, i64 0, i64 %idxprom25, !dbg !11241
  store %struct.sk_buff* null, %struct.sk_buff** %arrayidx26, align 8, !dbg !11244
  store i32 0, i32* %frag, align 4, !dbg !11245
  br label %for.cond27, !dbg !11247

for.cond27:                                       ; preds = %for.inc57, %if.then18
  %28 = load i32, i32* %frag, align 4, !dbg !11248
  %29 = load %struct.sk_buff*, %struct.sk_buff** %skb19, align 8, !dbg !11250
  %call28 = call i8* @skb_end_pointer(%struct.sk_buff* %29) #12, !dbg !11250
  %30 = bitcast i8* %call28 to %struct.skb_shared_info*, !dbg !11251
  %nr_frags = getelementptr inbounds %struct.skb_shared_info, %struct.skb_shared_info* %30, i32 0, i32 2, !dbg !11251
  %31 = load i8, i8* %nr_frags, align 2, !dbg !11251
  %conv29 = zext i8 %31 to i32, !dbg !11250
  %cmp30 = icmp sle i32 %28, %conv29, !dbg !11252
  br i1 %cmp30, label %for.body32, label %for.end59, !dbg !11253

for.body32:                                       ; preds = %for.cond27
  %32 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !11254
  %happy_block33 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %32, i32 0, i32 1, !dbg !11256
  %33 = load %struct.hmeal_init_block*, %struct.hmeal_init_block** %happy_block33, align 8, !dbg !11256
  %happy_meal_txd = getelementptr inbounds %struct.hmeal_init_block, %struct.hmeal_init_block* %33, i32 0, i32 1, !dbg !11257
  %34 = load i32, i32* %i, align 4, !dbg !11258
  %idxprom34 = sext i32 %34 to i64, !dbg !11254
  %arrayidx35 = getelementptr [256 x %struct.happy_meal_txd], [256 x %struct.happy_meal_txd]* %happy_meal_txd, i64 0, i64 %idxprom34, !dbg !11254
  store %struct.happy_meal_txd* %arrayidx35, %struct.happy_meal_txd** %txd, align 8, !dbg !11259
  %35 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !11260
  %36 = load %struct.happy_meal_txd*, %struct.happy_meal_txd** %txd, align 8, !dbg !11261
  %tx_addr = getelementptr inbounds %struct.happy_meal_txd, %struct.happy_meal_txd* %36, i32 0, i32 1, !dbg !11262
  %call36 = call i32 @hme_read_desc32(%struct.happy_meal* %35, i32* %tx_addr) #12, !dbg !11263
  store i32 %call36, i32* %dma_addr23, align 4, !dbg !11264
  %37 = load i32, i32* %frag, align 4, !dbg !11265
  %tobool = icmp ne i32 %37, 0, !dbg !11265
  br i1 %tobool, label %if.else, label %if.then37, !dbg !11267

if.then37:                                        ; preds = %for.body32
  %38 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !11268
  %dma_dev38 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %38, i32 0, i32 3, !dbg !11268
  %39 = load %struct.device*, %struct.device** %dma_dev38, align 8, !dbg !11268
  %40 = load i32, i32* %dma_addr23, align 4, !dbg !11268
  %conv39 = zext i32 %40 to i64, !dbg !11268
  %41 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !11268
  %42 = load %struct.happy_meal_txd*, %struct.happy_meal_txd** %txd, align 8, !dbg !11268
  %tx_flags = getelementptr inbounds %struct.happy_meal_txd, %struct.happy_meal_txd* %42, i32 0, i32 0, !dbg !11268
  %call40 = call i32 @hme_read_desc32(%struct.happy_meal* %41, i32* %tx_flags) #12, !dbg !11268
  %and = and i32 %call40, 16383, !dbg !11268
  %conv41 = zext i32 %and to i64, !dbg !11268
  call void @dma_unmap_single_attrs(%struct.device* %39, i64 %conv39, i64 %conv41, i32 1, i64 0) #12, !dbg !11268
  br label %if.end48, !dbg !11268

if.else:                                          ; preds = %for.body32
  %43 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !11269
  %dma_dev42 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %43, i32 0, i32 3, !dbg !11269
  %44 = load %struct.device*, %struct.device** %dma_dev42, align 8, !dbg !11269
  %45 = load i32, i32* %dma_addr23, align 4, !dbg !11269
  %conv43 = zext i32 %45 to i64, !dbg !11269
  %46 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !11269
  %47 = load %struct.happy_meal_txd*, %struct.happy_meal_txd** %txd, align 8, !dbg !11269
  %tx_flags44 = getelementptr inbounds %struct.happy_meal_txd, %struct.happy_meal_txd* %47, i32 0, i32 0, !dbg !11269
  %call45 = call i32 @hme_read_desc32(%struct.happy_meal* %46, i32* %tx_flags44) #12, !dbg !11269
  %and46 = and i32 %call45, 16383, !dbg !11269
  %conv47 = zext i32 %and46 to i64, !dbg !11269
  call void @dma_unmap_page_attrs(%struct.device* %44, i64 %conv43, i64 %conv47, i32 1, i64 0) #12, !dbg !11269
  br label %if.end48

if.end48:                                         ; preds = %if.else, %if.then37
  %48 = load i32, i32* %frag, align 4, !dbg !11270
  %49 = load %struct.sk_buff*, %struct.sk_buff** %skb19, align 8, !dbg !11272
  %call49 = call i8* @skb_end_pointer(%struct.sk_buff* %49) #12, !dbg !11272
  %50 = bitcast i8* %call49 to %struct.skb_shared_info*, !dbg !11273
  %nr_frags50 = getelementptr inbounds %struct.skb_shared_info, %struct.skb_shared_info* %50, i32 0, i32 2, !dbg !11273
  %51 = load i8, i8* %nr_frags50, align 2, !dbg !11273
  %conv51 = zext i8 %51 to i32, !dbg !11272
  %cmp52 = icmp ne i32 %48, %conv51, !dbg !11274
  br i1 %cmp52, label %if.then54, label %if.end56, !dbg !11275

if.then54:                                        ; preds = %if.end48
  %52 = load i32, i32* %i, align 4, !dbg !11276
  %inc55 = add i32 %52, 1, !dbg !11276
  store i32 %inc55, i32* %i, align 4, !dbg !11276
  br label %if.end56, !dbg !11277

if.end56:                                         ; preds = %if.then54, %if.end48
  br label %for.inc57, !dbg !11278

for.inc57:                                        ; preds = %if.end56
  %53 = load i32, i32* %frag, align 4, !dbg !11279
  %inc58 = add i32 %53, 1, !dbg !11279
  store i32 %inc58, i32* %frag, align 4, !dbg !11279
  br label %for.cond27, !dbg !11280, !llvm.loop !11281

for.end59:                                        ; preds = %for.cond27
  %54 = load %struct.sk_buff*, %struct.sk_buff** %skb19, align 8, !dbg !11283
  call void @dev_kfree_skb_any(%struct.sk_buff* %54) #12, !dbg !11284
  br label %if.end60, !dbg !11285

if.end60:                                         ; preds = %for.end59, %for.body13
  br label %for.inc61, !dbg !11286

for.inc61:                                        ; preds = %if.end60
  %55 = load i32, i32* %i, align 4, !dbg !11287
  %inc62 = add i32 %55, 1, !dbg !11287
  store i32 %inc62, i32* %i, align 4, !dbg !11287
  br label %for.cond10, !dbg !11288, !llvm.loop !11289

for.end63:                                        ; preds = %for.cond10
  ret void, !dbg !11291
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.sk_buff* @alloc_skb(i32 %size, i32 %priority) #1 !dbg !11292 {
entry:
  %size.addr = alloca i32, align 4
  %priority.addr = alloca i32, align 4
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !11295, metadata !DIExpression()), !dbg !11296
  store i32 %priority, i32* %priority.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %priority.addr, metadata !11297, metadata !DIExpression()), !dbg !11298
  %0 = load i32, i32* %size.addr, align 4, !dbg !11299
  %1 = load i32, i32* %priority.addr, align 4, !dbg !11300
  %call = call %struct.sk_buff* @__alloc_skb(i32 %0, i32 %1, i32 0, i32 -1) #12, !dbg !11301
  ret %struct.sk_buff* %call, !dbg !11302
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @skb_reserve(%struct.sk_buff* %skb, i32 %len) #1 !dbg !11303 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  %len.addr = alloca i32, align 4
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !11306, metadata !DIExpression()), !dbg !11307
  store i32 %len, i32* %len.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %len.addr, metadata !11308, metadata !DIExpression()), !dbg !11309
  %0 = load i32, i32* %len.addr, align 4, !dbg !11310
  %1 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !11311
  %data = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %1, i32 0, i32 37, !dbg !11312
  %2 = load i8*, i8** %data, align 8, !dbg !11313
  %idx.ext = sext i32 %0 to i64, !dbg !11313
  %add.ptr = getelementptr i8, i8* %2, i64 %idx.ext, !dbg !11313
  store i8* %add.ptr, i8** %data, align 8, !dbg !11313
  %3 = load i32, i32* %len.addr, align 4, !dbg !11314
  %4 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !11315
  %tail = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %4, i32 0, i32 34, !dbg !11316
  %5 = load i32, i32* %tail, align 8, !dbg !11317
  %add = add i32 %5, %3, !dbg !11317
  store i32 %add, i32* %tail, align 8, !dbg !11317
  ret void, !dbg !11318
}

; Function Attrs: noredzone
declare dso_local i8* @skb_put(%struct.sk_buff*, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @dma_map_single_attrs(%struct.device* %dev, i8* %ptr, i64 %size, i32 %dir, i64 %attrs) #1 !dbg !7821 {
entry:
  %retval = alloca i64, align 8
  %dev.addr = alloca %struct.device*, align 8
  %ptr.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %dir.addr = alloca i32, align 4
  %attrs.addr = alloca i64, align 8
  %__ret_warn_once = alloca i32, align 4
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  %tmp39 = alloca i64, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !11319, metadata !DIExpression()), !dbg !11320
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !11321, metadata !DIExpression()), !dbg !11322
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !11323, metadata !DIExpression()), !dbg !11324
  store i32 %dir, i32* %dir.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dir.addr, metadata !11325, metadata !DIExpression()), !dbg !11326
  store i64 %attrs, i64* %attrs.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %attrs.addr, metadata !11327, metadata !DIExpression()), !dbg !11328
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_once, metadata !11329, metadata !DIExpression()), !dbg !11332
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !11332
  %call = call zeroext i1 @is_vmalloc_addr(i8* %0) #12, !dbg !11332
  %lnot = xor i1 %call, true, !dbg !11332
  %lnot1 = xor i1 %lnot, true, !dbg !11332
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !11332
  store i32 %lnot.ext, i32* %__ret_warn_once, align 4, !dbg !11332
  %1 = load i32, i32* %__ret_warn_once, align 4, !dbg !11333
  %tobool = icmp ne i32 %1, 0, !dbg !11333
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !11333

land.rhs:                                         ; preds = %entry
  %2 = load i8, i8* @dma_map_single_attrs.__warned, align 1, !dbg !11333
  %tobool2 = trunc i8 %2 to i1, !dbg !11333
  %lnot3 = xor i1 %tobool2, true, !dbg !11333
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %3 = phi i1 [ false, %entry ], [ %lnot3, %land.rhs ], !dbg !11335
  %lnot5 = xor i1 %3, true, !dbg !11333
  %lnot7 = xor i1 %lnot5, true, !dbg !11333
  %lnot.ext8 = zext i1 %lnot7 to i32, !dbg !11333
  %conv = sext i32 %lnot.ext8 to i64, !dbg !11333
  %tobool9 = icmp ne i64 %conv, 0, !dbg !11333
  br i1 %tobool9, label %if.then, label %if.end38, !dbg !11332

if.then:                                          ; preds = %land.end
  store i8 1, i8* @dma_map_single_attrs.__warned, align 1, !dbg !11336
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !11338, metadata !DIExpression()), !dbg !11340
  store i32 1, i32* %__ret_warn_on, align 4, !dbg !11340
  %4 = load i32, i32* %__ret_warn_on, align 4, !dbg !11341
  %tobool10 = icmp ne i32 %4, 0, !dbg !11341
  %lnot11 = xor i1 %tobool10, true, !dbg !11341
  %lnot13 = xor i1 %lnot11, true, !dbg !11341
  %lnot.ext14 = zext i1 %lnot13 to i32, !dbg !11341
  %conv15 = sext i32 %lnot.ext14 to i64, !dbg !11341
  %tobool16 = icmp ne i64 %conv15, 0, !dbg !11341
  br i1 %tobool16, label %if.then17, label %if.end, !dbg !11340

if.then17:                                        ; preds = %if.then
  br label %do.body, !dbg !11341

do.body:                                          ; preds = %if.then17
  br label %do.body18, !dbg !11343

do.body18:                                        ; preds = %do.body
  br label %do.end, !dbg !11345

do.end:                                           ; preds = %do.body18
  %5 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11343
  %call19 = call i8* @dev_driver_string(%struct.device* %5) #12, !dbg !11343
  %6 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11343
  %call20 = call i8* @dev_name(%struct.device* %6) #12, !dbg !11343
  call void (i8*, ...) @__warn_printk(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.44, i64 0, i64 0), i8* %call19, i8* %call20) #12, !dbg !11343
  br label %do.body21, !dbg !11343

do.body21:                                        ; preds = %do.end
  br label %do.body22, !dbg !11347

do.body22:                                        ; preds = %do.body21
  br label %do.end23, !dbg !11349

do.end23:                                         ; preds = %do.body22
  br label %do.body24, !dbg !11347

do.body24:                                        ; preds = %do.end23
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.45, i64 0, i64 0), i32 276, i32 2313, i64 12) #11, !dbg !11351, !srcloc !11353
  br label %do.end25, !dbg !11351

do.end25:                                         ; preds = %do.body24
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 237) #11, !dbg !11354, !srcloc !11356
  br label %do.body26, !dbg !11347

do.body26:                                        ; preds = %do.end25
  br label %do.end27, !dbg !11357

do.end27:                                         ; preds = %do.body26
  br label %do.end28, !dbg !11347

do.end28:                                         ; preds = %do.end27
  br label %do.body29, !dbg !11343

do.body29:                                        ; preds = %do.end28
  br label %do.end30, !dbg !11359

do.end30:                                         ; preds = %do.body29
  br label %do.end31, !dbg !11343

do.end31:                                         ; preds = %do.end30
  br label %if.end, !dbg !11343

if.end:                                           ; preds = %do.end31, %if.then
  %7 = load i32, i32* %__ret_warn_on, align 4, !dbg !11340
  %tobool32 = icmp ne i32 %7, 0, !dbg !11340
  %lnot33 = xor i1 %tobool32, true, !dbg !11340
  %lnot35 = xor i1 %lnot33, true, !dbg !11340
  %lnot.ext36 = zext i1 %lnot35 to i32, !dbg !11340
  %conv37 = sext i32 %lnot.ext36 to i64, !dbg !11340
  store i64 %conv37, i64* %tmp, align 8, !dbg !11341
  %8 = load i64, i64* %tmp, align 8, !dbg !11340
  br label %if.end38, !dbg !11336

if.end38:                                         ; preds = %if.end, %land.end
  %9 = load i32, i32* %__ret_warn_once, align 4, !dbg !11332
  %tobool40 = icmp ne i32 %9, 0, !dbg !11332
  %lnot41 = xor i1 %tobool40, true, !dbg !11332
  %lnot43 = xor i1 %lnot41, true, !dbg !11332
  %lnot.ext44 = zext i1 %lnot43 to i32, !dbg !11332
  %conv45 = sext i32 %lnot.ext44 to i64, !dbg !11332
  store i64 %conv45, i64* %tmp39, align 8, !dbg !11333
  %10 = load i64, i64* %tmp39, align 8, !dbg !11332
  %tobool46 = icmp ne i64 %10, 0, !dbg !11361
  br i1 %tobool46, label %if.then47, label %if.end48, !dbg !11362

if.then47:                                        ; preds = %if.end38
  store i64 -1, i64* %retval, align 8, !dbg !11363
  br label %return, !dbg !11363

if.end48:                                         ; preds = %if.end38
  %11 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11364
  %12 = load i8*, i8** %ptr.addr, align 8, !dbg !11365
  %13 = load i64, i64* %size.addr, align 8, !dbg !11366
  call void @debug_dma_map_single(%struct.device* %11, i8* %12, i64 %13) #12, !dbg !11367
  %14 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11368
  %15 = load i64, i64* @vmemmap_base, align 8, !dbg !11369
  %16 = inttoptr i64 %15 to %struct.page*, !dbg !11369
  %17 = load i8*, i8** %ptr.addr, align 8, !dbg !11369
  %18 = ptrtoint i8* %17 to i64, !dbg !11369
  %call49 = call i64 @__phys_addr_nodebug(i64 %18) #12, !dbg !11369
  %shr = lshr i64 %call49, 12, !dbg !11369
  %add.ptr = getelementptr %struct.page, %struct.page* %16, i64 %shr, !dbg !11369
  %19 = load i8*, i8** %ptr.addr, align 8, !dbg !11370
  %20 = ptrtoint i8* %19 to i64, !dbg !11370
  %and = and i64 %20, 4095, !dbg !11370
  %21 = load i64, i64* %size.addr, align 8, !dbg !11371
  %22 = load i32, i32* %dir.addr, align 4, !dbg !11372
  %23 = load i64, i64* %attrs.addr, align 8, !dbg !11373
  %call50 = call i64 @dma_map_page_attrs(%struct.device* %14, %struct.page* %add.ptr, i64 %and, i64 %21, i32 %22, i64 %23) #12, !dbg !11374
  store i64 %call50, i64* %retval, align 8, !dbg !11375
  br label %return, !dbg !11375

return:                                           ; preds = %if.end48, %if.then47
  %24 = load i64, i64* %retval, align 8, !dbg !11376
  ret i64 %24, !dbg !11376
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @dma_mapping_error(%struct.device* %dev, i64 %dma_addr) #1 !dbg !11377 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.device*, align 8
  %dma_addr.addr = alloca i64, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !11380, metadata !DIExpression()), !dbg !11381
  store i64 %dma_addr, i64* %dma_addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dma_addr.addr, metadata !11382, metadata !DIExpression()), !dbg !11383
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11384
  %1 = load i64, i64* %dma_addr.addr, align 8, !dbg !11385
  call void @debug_dma_mapping_error(%struct.device* %0, i64 %1) #12, !dbg !11386
  %2 = load i64, i64* %dma_addr.addr, align 8, !dbg !11387
  %cmp = icmp eq i64 %2, -1, !dbg !11389
  br i1 %cmp, label %if.then, label %if.end, !dbg !11390

if.then:                                          ; preds = %entry
  store i32 -12, i32* %retval, align 4, !dbg !11391
  br label %return, !dbg !11391

if.end:                                           ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !11392
  br label %return, !dbg !11392

return:                                           ; preds = %if.end, %if.then
  %3 = load i32, i32* %retval, align 4, !dbg !11393
  ret i32 %3, !dbg !11393
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dev_kfree_skb_any(%struct.sk_buff* %skb) #1 !dbg !11394 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !11395, metadata !DIExpression()), !dbg !11396
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !11397
  call void @__dev_kfree_skb_any(%struct.sk_buff* %0, i32 1) #12, !dbg !11398
  ret void, !dbg !11399
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @hme_read_desc32(%struct.happy_meal* %hp, i32* %p) #1 !dbg !11400 {
entry:
  %p.addr.i = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %p.addr.i, metadata !11404, metadata !DIExpression()), !dbg !11411
  %hp.addr = alloca %struct.happy_meal*, align 8
  %p.addr = alloca i32*, align 8
  store %struct.happy_meal* %hp, %struct.happy_meal** %hp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.happy_meal** %hp.addr, metadata !11413, metadata !DIExpression()), !dbg !11414
  store i32* %p, i32** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %p.addr, metadata !11415, metadata !DIExpression()), !dbg !11416
  %0 = load i32*, i32** %p.addr, align 8, !dbg !11417
  store i32* %0, i32** %p.addr.i, align 8
  %1 = load i32*, i32** %p.addr.i, align 8, !dbg !11418
  %2 = load i32, i32* %1, align 4, !dbg !11419
  ret i32 %2, !dbg !11420
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dma_unmap_single_attrs(%struct.device* %dev, i64 %addr, i64 %size, i32 %dir, i64 %attrs) #1 !dbg !11421 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %addr.addr = alloca i64, align 8
  %size.addr = alloca i64, align 8
  %dir.addr = alloca i32, align 4
  %attrs.addr = alloca i64, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !11424, metadata !DIExpression()), !dbg !11425
  store i64 %addr, i64* %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %addr.addr, metadata !11426, metadata !DIExpression()), !dbg !11427
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !11428, metadata !DIExpression()), !dbg !11429
  store i32 %dir, i32* %dir.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dir.addr, metadata !11430, metadata !DIExpression()), !dbg !11431
  store i64 %attrs, i64* %attrs.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %attrs.addr, metadata !11432, metadata !DIExpression()), !dbg !11433
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11434
  %1 = load i64, i64* %addr.addr, align 8, !dbg !11435
  %2 = load i64, i64* %size.addr, align 8, !dbg !11436
  %3 = load i32, i32* %dir.addr, align 4, !dbg !11437
  %4 = load i64, i64* %attrs.addr, align 8, !dbg !11438
  call void @dma_unmap_page_attrs(%struct.device* %0, i64 %1, i64 %2, i32 %3, i64 %4) #12, !dbg !11439
  ret void, !dbg !11440
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @skb_end_pointer(%struct.sk_buff* %skb) #1 !dbg !11441 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !11444, metadata !DIExpression()), !dbg !11445
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !11446
  %head = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %0, i32 0, i32 36, !dbg !11447
  %1 = load i8*, i8** %head, align 8, !dbg !11447
  %2 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !11448
  %end = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %2, i32 0, i32 35, !dbg !11449
  %3 = load i32, i32* %end, align 4, !dbg !11449
  %idx.ext = zext i32 %3 to i64, !dbg !11450
  %add.ptr = getelementptr i8, i8* %1, i64 %idx.ext, !dbg !11450
  ret i8* %add.ptr, !dbg !11451
}

; Function Attrs: noredzone
declare dso_local void @dma_unmap_page_attrs(%struct.device*, i64, i64, i32, i64) #2

; Function Attrs: noredzone
declare dso_local %struct.sk_buff* @__alloc_skb(i32, i32, i32, i32) #2

; Function Attrs: noredzone
declare dso_local zeroext i1 @is_vmalloc_addr(i8*) #2

; Function Attrs: noredzone
declare dso_local void @__warn_printk(i8*, ...) #2

; Function Attrs: noredzone
declare dso_local i8* @dev_driver_string(%struct.device*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @dev_name(%struct.device* %dev) #1 !dbg !11452 {
entry:
  %retval = alloca i8*, align 8
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !11455, metadata !DIExpression()), !dbg !11456
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11457
  %init_name = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 3, !dbg !11459
  %1 = load i8*, i8** %init_name, align 8, !dbg !11459
  %tobool = icmp ne i8* %1, null, !dbg !11457
  br i1 %tobool, label %if.then, label %if.end, !dbg !11460

if.then:                                          ; preds = %entry
  %2 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11461
  %init_name1 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 3, !dbg !11462
  %3 = load i8*, i8** %init_name1, align 8, !dbg !11462
  store i8* %3, i8** %retval, align 8, !dbg !11463
  br label %return, !dbg !11463

if.end:                                           ; preds = %entry
  %4 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11464
  %kobj = getelementptr inbounds %struct.device, %struct.device* %4, i32 0, i32 0, !dbg !11465
  %call = call i8* @kobject_name(%struct.kobject* %kobj) #12, !dbg !11466
  store i8* %call, i8** %retval, align 8, !dbg !11467
  br label %return, !dbg !11467

return:                                           ; preds = %if.end, %if.then
  %5 = load i8*, i8** %retval, align 8, !dbg !11468
  ret i8* %5, !dbg !11468
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @debug_dma_map_single(%struct.device* %dev, i8* %addr, i64 %len) #1 !dbg !11469 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %addr.addr = alloca i8*, align 8
  %len.addr = alloca i64, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !11472, metadata !DIExpression()), !dbg !11473
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !11474, metadata !DIExpression()), !dbg !11475
  store i64 %len, i64* %len.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %len.addr, metadata !11476, metadata !DIExpression()), !dbg !11477
  ret void, !dbg !11478
}

; Function Attrs: noredzone
declare dso_local i64 @dma_map_page_attrs(%struct.device*, %struct.page*, i64, i64, i32, i64) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @__phys_addr_nodebug(i64 %x) #1 !dbg !11479 {
entry:
  %x.addr = alloca i64, align 8
  %y = alloca i64, align 8
  store i64 %x, i64* %x.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr, metadata !11483, metadata !DIExpression()), !dbg !11484
  call void @llvm.dbg.declare(metadata i64* %y, metadata !11485, metadata !DIExpression()), !dbg !11486
  %0 = load i64, i64* %x.addr, align 8, !dbg !11487
  %sub = sub i64 %0, -2147483648, !dbg !11488
  store i64 %sub, i64* %y, align 8, !dbg !11486
  %1 = load i64, i64* %y, align 8, !dbg !11489
  %2 = load i64, i64* %x.addr, align 8, !dbg !11490
  %3 = load i64, i64* %y, align 8, !dbg !11491
  %cmp = icmp ugt i64 %2, %3, !dbg !11492
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !11493

cond.true:                                        ; preds = %entry
  %4 = load i64, i64* @phys_base, align 8, !dbg !11494
  br label %cond.end, !dbg !11493

cond.false:                                       ; preds = %entry
  %5 = load i64, i64* @page_offset_base, align 8, !dbg !11495
  %sub1 = sub i64 -2147483648, %5, !dbg !11496
  br label %cond.end, !dbg !11493

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %4, %cond.true ], [ %sub1, %cond.false ], !dbg !11493
  %add = add i64 %1, %cond, !dbg !11497
  store i64 %add, i64* %x.addr, align 8, !dbg !11498
  %6 = load i64, i64* %x.addr, align 8, !dbg !11499
  ret i64 %6, !dbg !11500
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kobject_name(%struct.kobject* %kobj) #1 !dbg !11501 {
entry:
  %kobj.addr = alloca %struct.kobject*, align 8
  store %struct.kobject* %kobj, %struct.kobject** %kobj.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kobject** %kobj.addr, metadata !11506, metadata !DIExpression()), !dbg !11507
  %0 = load %struct.kobject*, %struct.kobject** %kobj.addr, align 8, !dbg !11508
  %name = getelementptr inbounds %struct.kobject, %struct.kobject* %0, i32 0, i32 0, !dbg !11509
  %1 = load i8*, i8** %name, align 8, !dbg !11509
  ret i8* %1, !dbg !11510
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @debug_dma_mapping_error(%struct.device* %dev, i64 %dma_addr) #1 !dbg !11511 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %dma_addr.addr = alloca i64, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !11514, metadata !DIExpression()), !dbg !11515
  store i64 %dma_addr, i64* %dma_addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dma_addr.addr, metadata !11516, metadata !DIExpression()), !dbg !11517
  ret void, !dbg !11518
}

; Function Attrs: noredzone
declare dso_local void @__dev_kfree_skb_any(%struct.sk_buff*, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @happy_meal_open(%struct.net_device* %dev) #1 !dbg !11519 {
entry:
  %lock.addr.i16 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i16, metadata !7875, metadata !DIExpression()), !dbg !11520
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !7882, metadata !DIExpression()), !dbg !11522
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.net_device*, align 8
  %hp = alloca %struct.happy_meal*, align 8
  %res = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !11524, metadata !DIExpression()), !dbg !11525
  call void @llvm.dbg.declare(metadata %struct.happy_meal** %hp, metadata !11526, metadata !DIExpression()), !dbg !11527
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11528
  %call = call i8* @netdev_priv(%struct.net_device* %0) #12, !dbg !11529
  %1 = bitcast i8* %call to %struct.happy_meal*, !dbg !11529
  store %struct.happy_meal* %1, %struct.happy_meal** %hp, align 8, !dbg !11527
  call void @llvm.dbg.declare(metadata i32* %res, metadata !11530, metadata !DIExpression()), !dbg !11531
  %2 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !11532
  %happy_flags = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %2, i32 0, i32 16, !dbg !11534
  %3 = load i32, i32* %happy_flags, align 8, !dbg !11534
  %and = and i32 %3, 6144, !dbg !11535
  %cmp = icmp ne i32 %and, 4096, !dbg !11536
  br i1 %cmp, label %if.then, label %if.end5, !dbg !11537

if.then:                                          ; preds = %entry
  %4 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !11538
  %irq = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %4, i32 0, i32 17, !dbg !11540
  %5 = load i32, i32* %irq, align 4, !dbg !11540
  %6 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11541
  %name = getelementptr inbounds %struct.net_device, %struct.net_device* %6, i32 0, i32 0, !dbg !11542
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %name, i64 0, i64 0, !dbg !11541
  %7 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11543
  %8 = bitcast %struct.net_device* %7 to i8*, !dbg !11543
  %call1 = call i32 @request_irq(i32 %5, i32 (i32, i8*)* @happy_meal_interrupt, i64 128, i8* %arraydecay, i8* %8) #12, !dbg !11544
  store i32 %call1, i32* %res, align 4, !dbg !11545
  %9 = load i32, i32* %res, align 4, !dbg !11546
  %tobool = icmp ne i32 %9, 0, !dbg !11546
  br i1 %tobool, label %if.then2, label %if.end, !dbg !11548

if.then2:                                         ; preds = %if.then
  %10 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !11549
  %irq3 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %10, i32 0, i32 17, !dbg !11551
  %11 = load i32, i32* %irq3, align 4, !dbg !11551
  %call4 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.51, i64 0, i64 0), i32 %11) #13, !dbg !11552
  store i32 -11, i32* %retval, align 4, !dbg !11553
  br label %return, !dbg !11553

if.end:                                           ; preds = %if.then
  br label %if.end5, !dbg !11554

if.end5:                                          ; preds = %if.end, %entry
  %12 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !11555
  %happy_lock = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %12, i32 0, i32 4, !dbg !11556
  store %struct.spinlock* %happy_lock, %struct.spinlock** %lock.addr.i, align 8
  call void @arch_local_irq_disable() #14, !dbg !11557
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #11, !dbg !11558, !srcloc !8217
  %13 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !11559
  %14 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %13, i32 0, i32 0, !dbg !11559
  %rlock.i = bitcast %union.anon.1* %14 to %struct.raw_spinlock*, !dbg !11559
  %15 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !11560
  %call6 = call i32 @happy_meal_init(%struct.happy_meal* %15) #12, !dbg !11561
  store i32 %call6, i32* %res, align 4, !dbg !11562
  %16 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !11563
  %happy_lock7 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %16, i32 0, i32 4, !dbg !11564
  store %struct.spinlock* %happy_lock7, %struct.spinlock** %lock.addr.i16, align 8
  call void @arch_local_irq_enable() #14, !dbg !11565
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #11, !dbg !11566, !srcloc !8229
  %17 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i16, align 8, !dbg !11567
  %18 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %17, i32 0, i32 0, !dbg !11567
  %rlock.i17 = bitcast %union.anon.1* %18 to %struct.raw_spinlock*, !dbg !11567
  %19 = load i32, i32* %res, align 4, !dbg !11568
  %tobool8 = icmp ne i32 %19, 0, !dbg !11568
  br i1 %tobool8, label %land.lhs.true, label %if.end15, !dbg !11570

land.lhs.true:                                    ; preds = %if.end5
  %20 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !11571
  %happy_flags9 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %20, i32 0, i32 16, !dbg !11572
  %21 = load i32, i32* %happy_flags9, align 8, !dbg !11572
  %and10 = and i32 %21, 6144, !dbg !11573
  %cmp11 = icmp ne i32 %and10, 4096, !dbg !11574
  br i1 %cmp11, label %if.then12, label %if.end15, !dbg !11575

if.then12:                                        ; preds = %land.lhs.true
  %22 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !11576
  %irq13 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %22, i32 0, i32 17, !dbg !11577
  %23 = load i32, i32* %irq13, align 4, !dbg !11577
  %24 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11578
  %25 = bitcast %struct.net_device* %24 to i8*, !dbg !11578
  %call14 = call i8* @free_irq(i32 %23, i8* %25) #12, !dbg !11579
  br label %if.end15, !dbg !11579

if.end15:                                         ; preds = %if.then12, %land.lhs.true, %if.end5
  %26 = load i32, i32* %res, align 4, !dbg !11580
  store i32 %26, i32* %retval, align 4, !dbg !11581
  br label %return, !dbg !11581

return:                                           ; preds = %if.end15, %if.then2
  %27 = load i32, i32* %retval, align 4, !dbg !11582
  ret i32 %27, !dbg !11582
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @happy_meal_close(%struct.net_device* %dev) #1 !dbg !11583 {
entry:
  %lock.addr.i4 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i4, metadata !7875, metadata !DIExpression()), !dbg !11584
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !7882, metadata !DIExpression()), !dbg !11586
  %dev.addr = alloca %struct.net_device*, align 8
  %hp = alloca %struct.happy_meal*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !11588, metadata !DIExpression()), !dbg !11589
  call void @llvm.dbg.declare(metadata %struct.happy_meal** %hp, metadata !11590, metadata !DIExpression()), !dbg !11591
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11592
  %call = call i8* @netdev_priv(%struct.net_device* %0) #12, !dbg !11593
  %1 = bitcast i8* %call to %struct.happy_meal*, !dbg !11593
  store %struct.happy_meal* %1, %struct.happy_meal** %hp, align 8, !dbg !11591
  %2 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !11594
  %happy_lock = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %2, i32 0, i32 4, !dbg !11595
  store %struct.spinlock* %happy_lock, %struct.spinlock** %lock.addr.i, align 8
  call void @arch_local_irq_disable() #14, !dbg !11596
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #11, !dbg !11597, !srcloc !8217
  %3 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !11598
  %4 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %3, i32 0, i32 0, !dbg !11598
  %rlock.i = bitcast %union.anon.1* %4 to %struct.raw_spinlock*, !dbg !11598
  %5 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !11599
  %6 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !11600
  %gregs = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %6, i32 0, i32 0, !dbg !11601
  %7 = load i8*, i8** %gregs, align 8, !dbg !11601
  call void @happy_meal_stop(%struct.happy_meal* %5, i8* %7) #12, !dbg !11602
  %8 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !11603
  call void @happy_meal_clean_rings(%struct.happy_meal* %8) #12, !dbg !11604
  %9 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !11605
  %happy_timer = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %9, i32 0, i32 38, !dbg !11606
  %call1 = call i32 @del_timer(%struct.timer_list* %happy_timer) #12, !dbg !11607
  %10 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !11608
  %happy_lock2 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %10, i32 0, i32 4, !dbg !11609
  store %struct.spinlock* %happy_lock2, %struct.spinlock** %lock.addr.i4, align 8
  call void @arch_local_irq_enable() #14, !dbg !11610
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #11, !dbg !11611, !srcloc !8229
  %11 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i4, align 8, !dbg !11612
  %12 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %11, i32 0, i32 0, !dbg !11612
  %rlock.i5 = bitcast %union.anon.1* %12 to %struct.raw_spinlock*, !dbg !11612
  %13 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !11613
  %happy_flags = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %13, i32 0, i32 16, !dbg !11615
  %14 = load i32, i32* %happy_flags, align 8, !dbg !11615
  %and = and i32 %14, 6144, !dbg !11616
  %cmp = icmp ne i32 %and, 4096, !dbg !11617
  br i1 %cmp, label %if.then, label %if.end, !dbg !11618

if.then:                                          ; preds = %entry
  %15 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !11619
  %irq = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %15, i32 0, i32 17, !dbg !11620
  %16 = load i32, i32* %irq, align 4, !dbg !11620
  %17 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11621
  %18 = bitcast %struct.net_device* %17 to i8*, !dbg !11621
  %call3 = call i8* @free_irq(i32 %16, i8* %18) #12, !dbg !11622
  br label %if.end, !dbg !11622

if.end:                                           ; preds = %if.then, %entry
  ret i32 0, !dbg !11623
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @happy_meal_start_xmit(%struct.sk_buff* %skb, %struct.net_device* %dev) #1 !dbg !11624 {
entry:
  %lock.addr.i180 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i180, metadata !7875, metadata !DIExpression()), !dbg !11625
  %lock.addr.i178 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i178, metadata !7875, metadata !DIExpression()), !dbg !11627
  %lock.addr.i176 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i176, metadata !7875, metadata !DIExpression()), !dbg !11629
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !7882, metadata !DIExpression()), !dbg !11633
  %retval = alloca i32, align 4
  %skb.addr = alloca %struct.sk_buff*, align 8
  %dev.addr = alloca %struct.net_device*, align 8
  %hp = alloca %struct.happy_meal*, align 8
  %entry1 = alloca i32, align 4
  %tx_flags = alloca i32, align 4
  %csum_start_off = alloca i32, align 4
  %csum_stuff_off = alloca i32, align 4
  %mapping = alloca i32, align 4
  %len = alloca i32, align 4
  %first_len = alloca i32, align 4
  %first_mapping = alloca i32, align 4
  %frag = alloca i32, align 4
  %first_entry = alloca i32, align 4
  %this_frag = alloca %struct.bio_vec*, align 8
  %len85 = alloca i32, align 4
  %mapping86 = alloca i32, align 4
  %this_txflags = alloca i32, align 4
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !11635, metadata !DIExpression()), !dbg !11636
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !11637, metadata !DIExpression()), !dbg !11638
  call void @llvm.dbg.declare(metadata %struct.happy_meal** %hp, metadata !11639, metadata !DIExpression()), !dbg !11640
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11641
  %call = call i8* @netdev_priv(%struct.net_device* %0) #12, !dbg !11642
  %1 = bitcast i8* %call to %struct.happy_meal*, !dbg !11642
  store %struct.happy_meal* %1, %struct.happy_meal** %hp, align 8, !dbg !11640
  call void @llvm.dbg.declare(metadata i32* %entry1, metadata !11643, metadata !DIExpression()), !dbg !11644
  call void @llvm.dbg.declare(metadata i32* %tx_flags, metadata !11645, metadata !DIExpression()), !dbg !11646
  store i32 -2147483648, i32* %tx_flags, align 4, !dbg !11647
  %2 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !11648
  %ip_summed = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %2, i32 0, i32 14, !dbg !11650
  %bf.load = load i16, i16* %ip_summed, align 8, !dbg !11650
  %bf.lshr = lshr i16 %bf.load, 5, !dbg !11650
  %bf.clear = and i16 %bf.lshr, 3, !dbg !11650
  %bf.cast = trunc i16 %bf.clear to i8, !dbg !11650
  %conv = zext i8 %bf.cast to i32, !dbg !11648
  %cmp = icmp eq i32 %conv, 3, !dbg !11651
  br i1 %cmp, label %if.then, label %if.end, !dbg !11652

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %csum_start_off, metadata !11653, metadata !DIExpression()), !dbg !11655
  %3 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !11656
  %call3 = call i32 @skb_checksum_start_offset(%struct.sk_buff* %3) #12, !dbg !11657
  store i32 %call3, i32* %csum_start_off, align 4, !dbg !11655
  call void @llvm.dbg.declare(metadata i32* %csum_stuff_off, metadata !11658, metadata !DIExpression()), !dbg !11659
  %4 = load i32, i32* %csum_start_off, align 4, !dbg !11660
  %5 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !11661
  %6 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %5, i32 0, i32 17, !dbg !11662
  %7 = bitcast %union.anon.47* %6 to %struct.anon.48*, !dbg !11662
  %csum_offset = getelementptr inbounds %struct.anon.48, %struct.anon.48* %7, i32 0, i32 1, !dbg !11662
  %8 = load i16, i16* %csum_offset, align 2, !dbg !11662
  %conv4 = zext i16 %8 to i32, !dbg !11661
  %add = add i32 %4, %conv4, !dbg !11663
  store i32 %add, i32* %csum_stuff_off, align 4, !dbg !11659
  %9 = load i32, i32* %csum_start_off, align 4, !dbg !11664
  %shl = shl i32 %9, 14, !dbg !11665
  %and = and i32 %shl, 1032192, !dbg !11666
  %or = or i32 -1879048192, %and, !dbg !11667
  %10 = load i32, i32* %csum_stuff_off, align 4, !dbg !11668
  %shl5 = shl i32 %10, 20, !dbg !11669
  %and6 = and i32 %shl5, 267386880, !dbg !11670
  %or7 = or i32 %or, %and6, !dbg !11671
  store i32 %or7, i32* %tx_flags, align 4, !dbg !11672
  br label %if.end, !dbg !11673

if.end:                                           ; preds = %if.then, %entry
  %11 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !11674
  %happy_lock = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %11, i32 0, i32 4, !dbg !11675
  store %struct.spinlock* %happy_lock, %struct.spinlock** %lock.addr.i, align 8
  call void @arch_local_irq_disable() #14, !dbg !11676
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #11, !dbg !11677, !srcloc !8217
  %12 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !11678
  %13 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %12, i32 0, i32 0, !dbg !11678
  %rlock.i = bitcast %union.anon.1* %13 to %struct.raw_spinlock*, !dbg !11678
  %14 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !11679
  %tx_old = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %14, i32 0, i32 10, !dbg !11679
  %15 = load i32, i32* %tx_old, align 4, !dbg !11679
  %16 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !11679
  %tx_new = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %16, i32 0, i32 8, !dbg !11679
  %17 = load i32, i32* %tx_new, align 4, !dbg !11679
  %cmp8 = icmp sle i32 %15, %17, !dbg !11679
  br i1 %cmp8, label %cond.true, label %cond.false, !dbg !11679

cond.true:                                        ; preds = %if.end
  %18 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !11679
  %tx_old10 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %18, i32 0, i32 10, !dbg !11679
  %19 = load i32, i32* %tx_old10, align 4, !dbg !11679
  %add11 = add i32 %19, 31, !dbg !11679
  %20 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !11679
  %tx_new12 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %20, i32 0, i32 8, !dbg !11679
  %21 = load i32, i32* %tx_new12, align 4, !dbg !11679
  %sub = sub i32 %add11, %21, !dbg !11679
  br label %cond.end, !dbg !11679

cond.false:                                       ; preds = %if.end
  %22 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !11679
  %tx_old13 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %22, i32 0, i32 10, !dbg !11679
  %23 = load i32, i32* %tx_old13, align 4, !dbg !11679
  %24 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !11679
  %tx_new14 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %24, i32 0, i32 8, !dbg !11679
  %25 = load i32, i32* %tx_new14, align 4, !dbg !11679
  %sub15 = sub i32 %23, %25, !dbg !11679
  %sub16 = sub i32 %sub15, 1, !dbg !11679
  br label %cond.end, !dbg !11679

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %sub, %cond.true ], [ %sub16, %cond.false ], !dbg !11679
  %26 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !11680
  %call17 = call i8* @skb_end_pointer(%struct.sk_buff* %26) #12, !dbg !11680
  %27 = bitcast i8* %call17 to %struct.skb_shared_info*, !dbg !11681
  %nr_frags = getelementptr inbounds %struct.skb_shared_info, %struct.skb_shared_info* %27, i32 0, i32 2, !dbg !11681
  %28 = load i8, i8* %nr_frags, align 2, !dbg !11681
  %conv18 = zext i8 %28 to i32, !dbg !11680
  %add19 = add i32 %conv18, 1, !dbg !11682
  %cmp20 = icmp sle i32 %cond, %add19, !dbg !11683
  br i1 %cmp20, label %if.then22, label %if.end25, !dbg !11684

if.then22:                                        ; preds = %cond.end
  %29 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11685
  call void @netif_stop_queue(%struct.net_device* %29) #12, !dbg !11686
  %30 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !11687
  %happy_lock23 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %30, i32 0, i32 4, !dbg !11688
  store %struct.spinlock* %happy_lock23, %struct.spinlock** %lock.addr.i176, align 8
  call void @arch_local_irq_enable() #14, !dbg !11689
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #11, !dbg !11690, !srcloc !8229
  %31 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i176, align 8, !dbg !11691
  %32 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %31, i32 0, i32 0, !dbg !11691
  %rlock.i177 = bitcast %union.anon.1* %32 to %struct.raw_spinlock*, !dbg !11691
  %33 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11692
  %name = getelementptr inbounds %struct.net_device, %struct.net_device* %33, i32 0, i32 0, !dbg !11693
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %name, i64 0, i64 0, !dbg !11692
  %call24 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.78, i64 0, i64 0), i8* %arraydecay) #13, !dbg !11694
  store i32 16, i32* %retval, align 4, !dbg !11695
  br label %return, !dbg !11695

if.end25:                                         ; preds = %cond.end
  %34 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !11696
  %tx_new26 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %34, i32 0, i32 8, !dbg !11697
  %35 = load i32, i32* %tx_new26, align 4, !dbg !11697
  store i32 %35, i32* %entry1, align 4, !dbg !11698
  %36 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !11699
  %37 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !11700
  %tx_skbs = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %37, i32 0, i32 6, !dbg !11701
  %38 = load i32, i32* %entry1, align 4, !dbg !11702
  %idxprom = sext i32 %38 to i64, !dbg !11700
  %arrayidx = getelementptr [32 x %struct.sk_buff*], [32 x %struct.sk_buff*]* %tx_skbs, i64 0, i64 %idxprom, !dbg !11700
  store %struct.sk_buff* %36, %struct.sk_buff** %arrayidx, align 8, !dbg !11703
  %39 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !11704
  %call27 = call i8* @skb_end_pointer(%struct.sk_buff* %39) #12, !dbg !11704
  %40 = bitcast i8* %call27 to %struct.skb_shared_info*, !dbg !11706
  %nr_frags28 = getelementptr inbounds %struct.skb_shared_info, %struct.skb_shared_info* %40, i32 0, i32 2, !dbg !11706
  %41 = load i8, i8* %nr_frags28, align 2, !dbg !11706
  %conv29 = zext i8 %41 to i32, !dbg !11704
  %cmp30 = icmp eq i32 %conv29, 0, !dbg !11707
  br i1 %cmp30, label %if.then32, label %if.else, !dbg !11708

if.then32:                                        ; preds = %if.end25
  call void @llvm.dbg.declare(metadata i32* %mapping, metadata !11709, metadata !DIExpression()), !dbg !11711
  call void @llvm.dbg.declare(metadata i32* %len, metadata !11712, metadata !DIExpression()), !dbg !11713
  %42 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !11714
  %len33 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %42, i32 0, i32 5, !dbg !11715
  %43 = load i32, i32* %len33, align 8, !dbg !11715
  store i32 %43, i32* %len, align 4, !dbg !11716
  %44 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !11717
  %dma_dev = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %44, i32 0, i32 3, !dbg !11717
  %45 = load %struct.device*, %struct.device** %dma_dev, align 8, !dbg !11717
  %46 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !11717
  %data = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %46, i32 0, i32 37, !dbg !11717
  %47 = load i8*, i8** %data, align 8, !dbg !11717
  %48 = load i32, i32* %len, align 4, !dbg !11717
  %conv34 = zext i32 %48 to i64, !dbg !11717
  %call35 = call i64 @dma_map_single_attrs(%struct.device* %45, i8* %47, i64 %conv34, i32 1, i64 0) #12, !dbg !11717
  %conv36 = trunc i64 %call35 to i32, !dbg !11717
  store i32 %conv36, i32* %mapping, align 4, !dbg !11718
  %49 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !11719
  %dma_dev37 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %49, i32 0, i32 3, !dbg !11719
  %50 = load %struct.device*, %struct.device** %dma_dev37, align 8, !dbg !11719
  %51 = load i32, i32* %mapping, align 4, !dbg !11719
  %conv38 = zext i32 %51 to i64, !dbg !11719
  %call39 = call i32 @dma_mapping_error(%struct.device* %50, i64 %conv38) #12, !dbg !11719
  %tobool = icmp ne i32 %call39, 0, !dbg !11719
  %lnot = xor i1 %tobool, true, !dbg !11719
  %lnot40 = xor i1 %lnot, true, !dbg !11719
  %lnot.ext = zext i1 %lnot40 to i32, !dbg !11719
  %conv41 = sext i32 %lnot.ext to i64, !dbg !11719
  %tobool42 = icmp ne i64 %conv41, 0, !dbg !11719
  br i1 %tobool42, label %if.then43, label %if.end44, !dbg !11721

if.then43:                                        ; preds = %if.then32
  br label %out_dma_error, !dbg !11722

if.end44:                                         ; preds = %if.then32
  %52 = load i32, i32* %tx_flags, align 4, !dbg !11723
  %or45 = or i32 %52, 1610612736, !dbg !11723
  store i32 %or45, i32* %tx_flags, align 4, !dbg !11723
  br label %do.body, !dbg !11724

do.body:                                          ; preds = %if.end44
  %53 = load i32, i32* %mapping, align 4, !dbg !11725
  %54 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !11725
  %happy_block = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %54, i32 0, i32 1, !dbg !11725
  %55 = load %struct.hmeal_init_block*, %struct.hmeal_init_block** %happy_block, align 8, !dbg !11725
  %happy_meal_txd = getelementptr inbounds %struct.hmeal_init_block, %struct.hmeal_init_block* %55, i32 0, i32 1, !dbg !11725
  %56 = load i32, i32* %entry1, align 4, !dbg !11725
  %idxprom46 = sext i32 %56 to i64, !dbg !11725
  %arrayidx47 = getelementptr [256 x %struct.happy_meal_txd], [256 x %struct.happy_meal_txd]* %happy_meal_txd, i64 0, i64 %idxprom46, !dbg !11725
  %tx_addr = getelementptr inbounds %struct.happy_meal_txd, %struct.happy_meal_txd* %arrayidx47, i32 0, i32 1, !dbg !11725
  store i32 %53, i32* %tx_addr, align 4, !dbg !11725
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #11, !dbg !11725, !srcloc !11727
  %57 = load i32, i32* %tx_flags, align 4, !dbg !11725
  %58 = load i32, i32* %len, align 4, !dbg !11725
  %and48 = and i32 %58, 16383, !dbg !11725
  %or49 = or i32 %57, %and48, !dbg !11725
  %59 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !11725
  %happy_block50 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %59, i32 0, i32 1, !dbg !11725
  %60 = load %struct.hmeal_init_block*, %struct.hmeal_init_block** %happy_block50, align 8, !dbg !11725
  %happy_meal_txd51 = getelementptr inbounds %struct.hmeal_init_block, %struct.hmeal_init_block* %60, i32 0, i32 1, !dbg !11725
  %61 = load i32, i32* %entry1, align 4, !dbg !11725
  %idxprom52 = sext i32 %61 to i64, !dbg !11725
  %arrayidx53 = getelementptr [256 x %struct.happy_meal_txd], [256 x %struct.happy_meal_txd]* %happy_meal_txd51, i64 0, i64 %idxprom52, !dbg !11725
  %tx_flags54 = getelementptr inbounds %struct.happy_meal_txd, %struct.happy_meal_txd* %arrayidx53, i32 0, i32 0, !dbg !11725
  store i32 %or49, i32* %tx_flags54, align 4, !dbg !11725
  br label %do.end, !dbg !11725

do.end:                                           ; preds = %do.body
  %62 = load i32, i32* %entry1, align 4, !dbg !11728
  %add55 = add i32 %62, 1, !dbg !11728
  %and56 = and i32 %add55, 31, !dbg !11728
  store i32 %and56, i32* %entry1, align 4, !dbg !11729
  br label %if.end144, !dbg !11730

if.else:                                          ; preds = %if.end25
  call void @llvm.dbg.declare(metadata i32* %first_len, metadata !11731, metadata !DIExpression()), !dbg !11733
  call void @llvm.dbg.declare(metadata i32* %first_mapping, metadata !11734, metadata !DIExpression()), !dbg !11735
  call void @llvm.dbg.declare(metadata i32* %frag, metadata !11736, metadata !DIExpression()), !dbg !11737
  call void @llvm.dbg.declare(metadata i32* %first_entry, metadata !11738, metadata !DIExpression()), !dbg !11739
  %63 = load i32, i32* %entry1, align 4, !dbg !11740
  store i32 %63, i32* %first_entry, align 4, !dbg !11739
  %64 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !11741
  %call57 = call i32 @skb_headlen(%struct.sk_buff* %64) #12, !dbg !11742
  store i32 %call57, i32* %first_len, align 4, !dbg !11743
  %65 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !11744
  %dma_dev58 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %65, i32 0, i32 3, !dbg !11744
  %66 = load %struct.device*, %struct.device** %dma_dev58, align 8, !dbg !11744
  %67 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !11744
  %data59 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %67, i32 0, i32 37, !dbg !11744
  %68 = load i8*, i8** %data59, align 8, !dbg !11744
  %69 = load i32, i32* %first_len, align 4, !dbg !11744
  %conv60 = zext i32 %69 to i64, !dbg !11744
  %call61 = call i64 @dma_map_single_attrs(%struct.device* %66, i8* %68, i64 %conv60, i32 1, i64 0) #12, !dbg !11744
  %conv62 = trunc i64 %call61 to i32, !dbg !11744
  store i32 %conv62, i32* %first_mapping, align 4, !dbg !11745
  %70 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !11746
  %dma_dev63 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %70, i32 0, i32 3, !dbg !11746
  %71 = load %struct.device*, %struct.device** %dma_dev63, align 8, !dbg !11746
  %72 = load i32, i32* %first_mapping, align 4, !dbg !11746
  %conv64 = zext i32 %72 to i64, !dbg !11746
  %call65 = call i32 @dma_mapping_error(%struct.device* %71, i64 %conv64) #12, !dbg !11746
  %tobool66 = icmp ne i32 %call65, 0, !dbg !11746
  %lnot67 = xor i1 %tobool66, true, !dbg !11746
  %lnot69 = xor i1 %lnot67, true, !dbg !11746
  %lnot.ext70 = zext i1 %lnot69 to i32, !dbg !11746
  %conv71 = sext i32 %lnot.ext70 to i64, !dbg !11746
  %tobool72 = icmp ne i64 %conv71, 0, !dbg !11746
  br i1 %tobool72, label %if.then73, label %if.end74, !dbg !11748

if.then73:                                        ; preds = %if.else
  br label %out_dma_error, !dbg !11749

if.end74:                                         ; preds = %if.else
  %73 = load i32, i32* %entry1, align 4, !dbg !11750
  %add75 = add i32 %73, 1, !dbg !11750
  %and76 = and i32 %add75, 31, !dbg !11750
  store i32 %and76, i32* %entry1, align 4, !dbg !11751
  store i32 0, i32* %frag, align 4, !dbg !11752
  br label %for.cond, !dbg !11754

for.cond:                                         ; preds = %for.inc, %if.end74
  %74 = load i32, i32* %frag, align 4, !dbg !11755
  %75 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !11757
  %call77 = call i8* @skb_end_pointer(%struct.sk_buff* %75) #12, !dbg !11757
  %76 = bitcast i8* %call77 to %struct.skb_shared_info*, !dbg !11758
  %nr_frags78 = getelementptr inbounds %struct.skb_shared_info, %struct.skb_shared_info* %76, i32 0, i32 2, !dbg !11758
  %77 = load i8, i8* %nr_frags78, align 2, !dbg !11758
  %conv79 = zext i8 %77 to i32, !dbg !11757
  %cmp80 = icmp slt i32 %74, %conv79, !dbg !11759
  br i1 %cmp80, label %for.body, label %for.end, !dbg !11760

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.bio_vec** %this_frag, metadata !11761, metadata !DIExpression()), !dbg !11765
  %78 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !11766
  %call82 = call i8* @skb_end_pointer(%struct.sk_buff* %78) #12, !dbg !11766
  %79 = bitcast i8* %call82 to %struct.skb_shared_info*, !dbg !11767
  %frags = getelementptr inbounds %struct.skb_shared_info, %struct.skb_shared_info* %79, i32 0, i32 12, !dbg !11767
  %80 = load i32, i32* %frag, align 4, !dbg !11768
  %idxprom83 = sext i32 %80 to i64, !dbg !11766
  %arrayidx84 = getelementptr [17 x %struct.bio_vec], [17 x %struct.bio_vec]* %frags, i64 0, i64 %idxprom83, !dbg !11766
  store %struct.bio_vec* %arrayidx84, %struct.bio_vec** %this_frag, align 8, !dbg !11765
  call void @llvm.dbg.declare(metadata i32* %len85, metadata !11769, metadata !DIExpression()), !dbg !11770
  call void @llvm.dbg.declare(metadata i32* %mapping86, metadata !11771, metadata !DIExpression()), !dbg !11772
  call void @llvm.dbg.declare(metadata i32* %this_txflags, metadata !11773, metadata !DIExpression()), !dbg !11774
  %81 = load %struct.bio_vec*, %struct.bio_vec** %this_frag, align 8, !dbg !11775
  %call87 = call i32 @skb_frag_size(%struct.bio_vec* %81) #12, !dbg !11776
  store i32 %call87, i32* %len85, align 4, !dbg !11777
  %82 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !11778
  %dma_dev88 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %82, i32 0, i32 3, !dbg !11779
  %83 = load %struct.device*, %struct.device** %dma_dev88, align 8, !dbg !11779
  %84 = load %struct.bio_vec*, %struct.bio_vec** %this_frag, align 8, !dbg !11780
  %85 = load i32, i32* %len85, align 4, !dbg !11781
  %conv89 = zext i32 %85 to i64, !dbg !11781
  %call90 = call i64 @skb_frag_dma_map(%struct.device* %83, %struct.bio_vec* %84, i64 0, i64 %conv89, i32 1) #12, !dbg !11782
  %conv91 = trunc i64 %call90 to i32, !dbg !11782
  store i32 %conv91, i32* %mapping86, align 4, !dbg !11783
  %86 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !11784
  %dma_dev92 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %86, i32 0, i32 3, !dbg !11784
  %87 = load %struct.device*, %struct.device** %dma_dev92, align 8, !dbg !11784
  %88 = load i32, i32* %mapping86, align 4, !dbg !11784
  %conv93 = zext i32 %88 to i64, !dbg !11784
  %call94 = call i32 @dma_mapping_error(%struct.device* %87, i64 %conv93) #12, !dbg !11784
  %tobool95 = icmp ne i32 %call94, 0, !dbg !11784
  %lnot96 = xor i1 %tobool95, true, !dbg !11784
  %lnot98 = xor i1 %lnot96, true, !dbg !11784
  %lnot.ext99 = zext i1 %lnot98 to i32, !dbg !11784
  %conv100 = sext i32 %lnot.ext99 to i64, !dbg !11784
  %tobool101 = icmp ne i64 %conv100, 0, !dbg !11784
  br i1 %tobool101, label %if.then102, label %if.end103, !dbg !11786

if.then102:                                       ; preds = %for.body
  %89 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !11787
  %90 = load i32, i32* %first_mapping, align 4, !dbg !11789
  %91 = load i32, i32* %first_len, align 4, !dbg !11790
  %92 = load i32, i32* %first_entry, align 4, !dbg !11791
  %93 = load i32, i32* %entry1, align 4, !dbg !11792
  call void @unmap_partial_tx_skb(%struct.happy_meal* %89, i32 %90, i32 %91, i32 %92, i32 %93) #12, !dbg !11793
  br label %out_dma_error, !dbg !11794

if.end103:                                        ; preds = %for.body
  %94 = load i32, i32* %tx_flags, align 4, !dbg !11795
  store i32 %94, i32* %this_txflags, align 4, !dbg !11796
  %95 = load i32, i32* %frag, align 4, !dbg !11797
  %96 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !11799
  %call104 = call i8* @skb_end_pointer(%struct.sk_buff* %96) #12, !dbg !11799
  %97 = bitcast i8* %call104 to %struct.skb_shared_info*, !dbg !11800
  %nr_frags105 = getelementptr inbounds %struct.skb_shared_info, %struct.skb_shared_info* %97, i32 0, i32 2, !dbg !11800
  %98 = load i8, i8* %nr_frags105, align 2, !dbg !11800
  %conv106 = zext i8 %98 to i32, !dbg !11799
  %sub107 = sub i32 %conv106, 1, !dbg !11801
  %cmp108 = icmp eq i32 %95, %sub107, !dbg !11802
  br i1 %cmp108, label %if.then110, label %if.end112, !dbg !11803

if.then110:                                       ; preds = %if.end103
  %99 = load i32, i32* %this_txflags, align 4, !dbg !11804
  %or111 = or i32 %99, 536870912, !dbg !11804
  store i32 %or111, i32* %this_txflags, align 4, !dbg !11804
  br label %if.end112, !dbg !11805

if.end112:                                        ; preds = %if.then110, %if.end103
  br label %do.body113, !dbg !11806

do.body113:                                       ; preds = %if.end112
  %100 = load i32, i32* %mapping86, align 4, !dbg !11807
  %101 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !11807
  %happy_block114 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %101, i32 0, i32 1, !dbg !11807
  %102 = load %struct.hmeal_init_block*, %struct.hmeal_init_block** %happy_block114, align 8, !dbg !11807
  %happy_meal_txd115 = getelementptr inbounds %struct.hmeal_init_block, %struct.hmeal_init_block* %102, i32 0, i32 1, !dbg !11807
  %103 = load i32, i32* %entry1, align 4, !dbg !11807
  %idxprom116 = sext i32 %103 to i64, !dbg !11807
  %arrayidx117 = getelementptr [256 x %struct.happy_meal_txd], [256 x %struct.happy_meal_txd]* %happy_meal_txd115, i64 0, i64 %idxprom116, !dbg !11807
  %tx_addr118 = getelementptr inbounds %struct.happy_meal_txd, %struct.happy_meal_txd* %arrayidx117, i32 0, i32 1, !dbg !11807
  store i32 %100, i32* %tx_addr118, align 4, !dbg !11807
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #11, !dbg !11807, !srcloc !11809
  %104 = load i32, i32* %this_txflags, align 4, !dbg !11807
  %105 = load i32, i32* %len85, align 4, !dbg !11807
  %and119 = and i32 %105, 16383, !dbg !11807
  %or120 = or i32 %104, %and119, !dbg !11807
  %106 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !11807
  %happy_block121 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %106, i32 0, i32 1, !dbg !11807
  %107 = load %struct.hmeal_init_block*, %struct.hmeal_init_block** %happy_block121, align 8, !dbg !11807
  %happy_meal_txd122 = getelementptr inbounds %struct.hmeal_init_block, %struct.hmeal_init_block* %107, i32 0, i32 1, !dbg !11807
  %108 = load i32, i32* %entry1, align 4, !dbg !11807
  %idxprom123 = sext i32 %108 to i64, !dbg !11807
  %arrayidx124 = getelementptr [256 x %struct.happy_meal_txd], [256 x %struct.happy_meal_txd]* %happy_meal_txd122, i64 0, i64 %idxprom123, !dbg !11807
  %tx_flags125 = getelementptr inbounds %struct.happy_meal_txd, %struct.happy_meal_txd* %arrayidx124, i32 0, i32 0, !dbg !11807
  store i32 %or120, i32* %tx_flags125, align 4, !dbg !11807
  br label %do.end126, !dbg !11807

do.end126:                                        ; preds = %do.body113
  %109 = load i32, i32* %entry1, align 4, !dbg !11810
  %add127 = add i32 %109, 1, !dbg !11810
  %and128 = and i32 %add127, 31, !dbg !11810
  store i32 %and128, i32* %entry1, align 4, !dbg !11811
  br label %for.inc, !dbg !11812

for.inc:                                          ; preds = %do.end126
  %110 = load i32, i32* %frag, align 4, !dbg !11813
  %inc = add i32 %110, 1, !dbg !11813
  store i32 %inc, i32* %frag, align 4, !dbg !11813
  br label %for.cond, !dbg !11814, !llvm.loop !11815

for.end:                                          ; preds = %for.cond
  br label %do.body129, !dbg !11817

do.body129:                                       ; preds = %for.end
  %111 = load i32, i32* %first_mapping, align 4, !dbg !11818
  %112 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !11818
  %happy_block130 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %112, i32 0, i32 1, !dbg !11818
  %113 = load %struct.hmeal_init_block*, %struct.hmeal_init_block** %happy_block130, align 8, !dbg !11818
  %happy_meal_txd131 = getelementptr inbounds %struct.hmeal_init_block, %struct.hmeal_init_block* %113, i32 0, i32 1, !dbg !11818
  %114 = load i32, i32* %first_entry, align 4, !dbg !11818
  %idxprom132 = sext i32 %114 to i64, !dbg !11818
  %arrayidx133 = getelementptr [256 x %struct.happy_meal_txd], [256 x %struct.happy_meal_txd]* %happy_meal_txd131, i64 0, i64 %idxprom132, !dbg !11818
  %tx_addr134 = getelementptr inbounds %struct.happy_meal_txd, %struct.happy_meal_txd* %arrayidx133, i32 0, i32 1, !dbg !11818
  store i32 %111, i32* %tx_addr134, align 4, !dbg !11818
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #11, !dbg !11818, !srcloc !11820
  %115 = load i32, i32* %tx_flags, align 4, !dbg !11818
  %or135 = or i32 %115, 1073741824, !dbg !11818
  %116 = load i32, i32* %first_len, align 4, !dbg !11818
  %and136 = and i32 %116, 16383, !dbg !11818
  %or137 = or i32 %or135, %and136, !dbg !11818
  %117 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !11818
  %happy_block138 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %117, i32 0, i32 1, !dbg !11818
  %118 = load %struct.hmeal_init_block*, %struct.hmeal_init_block** %happy_block138, align 8, !dbg !11818
  %happy_meal_txd139 = getelementptr inbounds %struct.hmeal_init_block, %struct.hmeal_init_block* %118, i32 0, i32 1, !dbg !11818
  %119 = load i32, i32* %first_entry, align 4, !dbg !11818
  %idxprom140 = sext i32 %119 to i64, !dbg !11818
  %arrayidx141 = getelementptr [256 x %struct.happy_meal_txd], [256 x %struct.happy_meal_txd]* %happy_meal_txd139, i64 0, i64 %idxprom140, !dbg !11818
  %tx_flags142 = getelementptr inbounds %struct.happy_meal_txd, %struct.happy_meal_txd* %arrayidx141, i32 0, i32 0, !dbg !11818
  store i32 %or137, i32* %tx_flags142, align 4, !dbg !11818
  br label %do.end143, !dbg !11818

do.end143:                                        ; preds = %do.body129
  br label %if.end144

if.end144:                                        ; preds = %do.end143, %do.end
  %120 = load i32, i32* %entry1, align 4, !dbg !11821
  %121 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !11822
  %tx_new145 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %121, i32 0, i32 8, !dbg !11823
  store i32 %120, i32* %tx_new145, align 4, !dbg !11824
  %122 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !11825
  %tx_old146 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %122, i32 0, i32 10, !dbg !11825
  %123 = load i32, i32* %tx_old146, align 4, !dbg !11825
  %124 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !11825
  %tx_new147 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %124, i32 0, i32 8, !dbg !11825
  %125 = load i32, i32* %tx_new147, align 4, !dbg !11825
  %cmp148 = icmp sle i32 %123, %125, !dbg !11825
  br i1 %cmp148, label %cond.true150, label %cond.false155, !dbg !11825

cond.true150:                                     ; preds = %if.end144
  %126 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !11825
  %tx_old151 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %126, i32 0, i32 10, !dbg !11825
  %127 = load i32, i32* %tx_old151, align 4, !dbg !11825
  %add152 = add i32 %127, 31, !dbg !11825
  %128 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !11825
  %tx_new153 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %128, i32 0, i32 8, !dbg !11825
  %129 = load i32, i32* %tx_new153, align 4, !dbg !11825
  %sub154 = sub i32 %add152, %129, !dbg !11825
  br label %cond.end160, !dbg !11825

cond.false155:                                    ; preds = %if.end144
  %130 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !11825
  %tx_old156 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %130, i32 0, i32 10, !dbg !11825
  %131 = load i32, i32* %tx_old156, align 4, !dbg !11825
  %132 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !11825
  %tx_new157 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %132, i32 0, i32 8, !dbg !11825
  %133 = load i32, i32* %tx_new157, align 4, !dbg !11825
  %sub158 = sub i32 %131, %133, !dbg !11825
  %sub159 = sub i32 %sub158, 1, !dbg !11825
  br label %cond.end160, !dbg !11825

cond.end160:                                      ; preds = %cond.false155, %cond.true150
  %cond161 = phi i32 [ %sub154, %cond.true150 ], [ %sub159, %cond.false155 ], !dbg !11825
  %conv162 = sext i32 %cond161 to i64, !dbg !11825
  %cmp163 = icmp ule i64 %conv162, 18, !dbg !11827
  br i1 %cmp163, label %if.then165, label %if.end166, !dbg !11828

if.then165:                                       ; preds = %cond.end160
  %134 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11829
  call void @netif_stop_queue(%struct.net_device* %134) #12, !dbg !11830
  br label %if.end166, !dbg !11830

if.end166:                                        ; preds = %if.then165, %cond.end160
  %135 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !11831
  %etxregs = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %135, i32 0, i32 11, !dbg !11831
  %136 = load i8*, i8** %etxregs, align 8, !dbg !11831
  %add.ptr = getelementptr i8, i8* %136, i64 0, !dbg !11831
  call void @writel(i32 1, i8* %add.ptr) #12, !dbg !11831
  %137 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !11832
  %happy_lock167 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %137, i32 0, i32 4, !dbg !11833
  store %struct.spinlock* %happy_lock167, %struct.spinlock** %lock.addr.i178, align 8
  call void @arch_local_irq_enable() #14, !dbg !11834
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #11, !dbg !11835, !srcloc !8229
  %138 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i178, align 8, !dbg !11836
  %139 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %138, i32 0, i32 0, !dbg !11836
  %rlock.i179 = bitcast %union.anon.1* %139 to %struct.raw_spinlock*, !dbg !11836
  br label %do.body168, !dbg !11837

do.body168:                                       ; preds = %if.end166
  br label %do.end169, !dbg !11838

do.end169:                                        ; preds = %do.body168
  store i32 0, i32* %retval, align 4, !dbg !11840
  br label %return, !dbg !11840

out_dma_error:                                    ; preds = %if.then102, %if.then73, %if.then43
  call void @llvm.dbg.label(metadata !11841), !dbg !11842
  %140 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !11843
  %tx_skbs170 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %140, i32 0, i32 6, !dbg !11844
  %141 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !11845
  %tx_new171 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %141, i32 0, i32 8, !dbg !11846
  %142 = load i32, i32* %tx_new171, align 4, !dbg !11846
  %idxprom172 = sext i32 %142 to i64, !dbg !11843
  %arrayidx173 = getelementptr [32 x %struct.sk_buff*], [32 x %struct.sk_buff*]* %tx_skbs170, i64 0, i64 %idxprom172, !dbg !11843
  store %struct.sk_buff* null, %struct.sk_buff** %arrayidx173, align 8, !dbg !11847
  %143 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !11848
  %happy_lock174 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %143, i32 0, i32 4, !dbg !11849
  store %struct.spinlock* %happy_lock174, %struct.spinlock** %lock.addr.i180, align 8
  call void @arch_local_irq_enable() #14, !dbg !11850
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #11, !dbg !11851, !srcloc !8229
  %144 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i180, align 8, !dbg !11852
  %145 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %144, i32 0, i32 0, !dbg !11852
  %rlock.i181 = bitcast %union.anon.1* %145 to %struct.raw_spinlock*, !dbg !11852
  %146 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !11853
  call void @dev_kfree_skb_any(%struct.sk_buff* %146) #12, !dbg !11854
  %147 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11855
  %stats = getelementptr inbounds %struct.net_device, %struct.net_device* %147, i32 0, i32 24, !dbg !11856
  %tx_dropped = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %stats, i32 0, i32 7, !dbg !11857
  %148 = load i64, i64* %tx_dropped, align 8, !dbg !11858
  %inc175 = add i64 %148, 1, !dbg !11858
  store i64 %inc175, i64* %tx_dropped, align 8, !dbg !11858
  store i32 0, i32* %retval, align 4, !dbg !11859
  br label %return, !dbg !11859

return:                                           ; preds = %out_dma_error, %do.end169, %if.then22
  %149 = load i32, i32* %retval, align 4, !dbg !11860
  ret i32 %149, !dbg !11860
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @happy_meal_set_multicast(%struct.net_device* %dev) #1 !dbg !11861 {
entry:
  %lock.addr.i45 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i45, metadata !7875, metadata !DIExpression()), !dbg !11862
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !7882, metadata !DIExpression()), !dbg !11864
  %dev.addr = alloca %struct.net_device*, align 8
  %hp = alloca %struct.happy_meal*, align 8
  %bregs = alloca i8*, align 8
  %ha = alloca %struct.netdev_hw_addr*, align 8
  %crc = alloca i32, align 4
  %hash_table = alloca [4 x i16], align 2
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.netdev_hw_addr*, align 8
  %__mptr24 = alloca i8*, align 8
  %tmp29 = alloca %struct.netdev_hw_addr*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !11866, metadata !DIExpression()), !dbg !11867
  call void @llvm.dbg.declare(metadata %struct.happy_meal** %hp, metadata !11868, metadata !DIExpression()), !dbg !11869
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11870
  %call = call i8* @netdev_priv(%struct.net_device* %0) #12, !dbg !11871
  %1 = bitcast i8* %call to %struct.happy_meal*, !dbg !11871
  store %struct.happy_meal* %1, %struct.happy_meal** %hp, align 8, !dbg !11869
  call void @llvm.dbg.declare(metadata i8** %bregs, metadata !11872, metadata !DIExpression()), !dbg !11873
  %2 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !11874
  %bigmacregs = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %2, i32 0, i32 13, !dbg !11875
  %3 = load i8*, i8** %bigmacregs, align 8, !dbg !11875
  store i8* %3, i8** %bregs, align 8, !dbg !11873
  call void @llvm.dbg.declare(metadata %struct.netdev_hw_addr** %ha, metadata !11876, metadata !DIExpression()), !dbg !11877
  call void @llvm.dbg.declare(metadata i32* %crc, metadata !11878, metadata !DIExpression()), !dbg !11879
  %4 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !11880
  %happy_lock = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %4, i32 0, i32 4, !dbg !11881
  store %struct.spinlock* %happy_lock, %struct.spinlock** %lock.addr.i, align 8
  call void @arch_local_irq_disable() #14, !dbg !11882
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #11, !dbg !11883, !srcloc !8217
  %5 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !11884
  %6 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %5, i32 0, i32 0, !dbg !11884
  %rlock.i = bitcast %union.anon.1* %6 to %struct.raw_spinlock*, !dbg !11884
  %7 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11885
  %flags = getelementptr inbounds %struct.net_device, %struct.net_device* %7, i32 0, i32 36, !dbg !11887
  %8 = load i32, i32* %flags, align 8, !dbg !11887
  %and = and i32 %8, 512, !dbg !11888
  %tobool = icmp ne i32 %and, 0, !dbg !11888
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !11889

lor.lhs.false:                                    ; preds = %entry
  %9 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11890
  %mc = getelementptr inbounds %struct.net_device, %struct.net_device* %9, i32 0, i32 63, !dbg !11890
  %count = getelementptr inbounds %struct.netdev_hw_addr_list, %struct.netdev_hw_addr_list* %mc, i32 0, i32 1, !dbg !11890
  %10 = load i32, i32* %count, align 8, !dbg !11890
  %cmp = icmp sgt i32 %10, 64, !dbg !11891
  br i1 %cmp, label %if.then, label %if.else, !dbg !11892

if.then:                                          ; preds = %lor.lhs.false, %entry
  %11 = load i8*, i8** %bregs, align 8, !dbg !11893
  %add.ptr = getelementptr i8, i8* %11, i64 844, !dbg !11893
  call void @writel(i32 65535, i8* %add.ptr) #12, !dbg !11893
  %12 = load i8*, i8** %bregs, align 8, !dbg !11895
  %add.ptr1 = getelementptr i8, i8* %12, i64 840, !dbg !11895
  call void @writel(i32 65535, i8* %add.ptr1) #12, !dbg !11895
  %13 = load i8*, i8** %bregs, align 8, !dbg !11896
  %add.ptr2 = getelementptr i8, i8* %13, i64 836, !dbg !11896
  call void @writel(i32 65535, i8* %add.ptr2) #12, !dbg !11896
  %14 = load i8*, i8** %bregs, align 8, !dbg !11897
  %add.ptr3 = getelementptr i8, i8* %14, i64 832, !dbg !11897
  call void @writel(i32 65535, i8* %add.ptr3) #12, !dbg !11897
  br label %if.end43, !dbg !11898

if.else:                                          ; preds = %lor.lhs.false
  %15 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11899
  %flags4 = getelementptr inbounds %struct.net_device, %struct.net_device* %15, i32 0, i32 36, !dbg !11901
  %16 = load i32, i32* %flags4, align 8, !dbg !11901
  %and5 = and i32 %16, 256, !dbg !11902
  %tobool6 = icmp ne i32 %and5, 0, !dbg !11902
  br i1 %tobool6, label %if.then7, label %if.else11, !dbg !11903

if.then7:                                         ; preds = %if.else
  %17 = load i8*, i8** %bregs, align 8, !dbg !11904
  %add.ptr8 = getelementptr i8, i8* %17, i64 780, !dbg !11904
  %call9 = call i32 @readl(i8* %add.ptr8) #12, !dbg !11904
  %or = or i32 %call9, 64, !dbg !11904
  %18 = load i8*, i8** %bregs, align 8, !dbg !11904
  %add.ptr10 = getelementptr i8, i8* %18, i64 780, !dbg !11904
  call void @writel(i32 %or, i8* %add.ptr10) #12, !dbg !11904
  br label %if.end, !dbg !11906

if.else11:                                        ; preds = %if.else
  call void @llvm.dbg.declare(metadata [4 x i16]* %hash_table, metadata !11907, metadata !DIExpression()), !dbg !11909
  %arraydecay = getelementptr inbounds [4 x i16], [4 x i16]* %hash_table, i64 0, i64 0, !dbg !11910
  %19 = bitcast i16* %arraydecay to i8*, !dbg !11910
  call void @llvm.memset.p0i8.i64(i8* align 2 %19, i8 0, i64 8, i1 false), !dbg !11910
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !11911, metadata !DIExpression()), !dbg !11914
  %20 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11914
  %mc12 = getelementptr inbounds %struct.net_device, %struct.net_device* %20, i32 0, i32 63, !dbg !11914
  %list = getelementptr inbounds %struct.netdev_hw_addr_list, %struct.netdev_hw_addr_list* %mc12, i32 0, i32 0, !dbg !11914
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %list, i32 0, i32 0, !dbg !11914
  %21 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !11914
  %22 = bitcast %struct.list_head* %21 to i8*, !dbg !11914
  store i8* %22, i8** %__mptr, align 8, !dbg !11914
  br label %do.body, !dbg !11914

do.body:                                          ; preds = %if.else11
  br label %do.end, !dbg !11915

do.end:                                           ; preds = %do.body
  %23 = load i8*, i8** %__mptr, align 8, !dbg !11914
  %add.ptr13 = getelementptr i8, i8* %23, i64 0, !dbg !11914
  %24 = bitcast i8* %add.ptr13 to %struct.netdev_hw_addr*, !dbg !11914
  store %struct.netdev_hw_addr* %24, %struct.netdev_hw_addr** %tmp, align 8, !dbg !11915
  %25 = load %struct.netdev_hw_addr*, %struct.netdev_hw_addr** %tmp, align 8, !dbg !11914
  store %struct.netdev_hw_addr* %25, %struct.netdev_hw_addr** %ha, align 8, !dbg !11917
  br label %for.cond, !dbg !11917

for.cond:                                         ; preds = %do.end28, %do.end
  %26 = load %struct.netdev_hw_addr*, %struct.netdev_hw_addr** %ha, align 8, !dbg !11918
  %list14 = getelementptr inbounds %struct.netdev_hw_addr, %struct.netdev_hw_addr* %26, i32 0, i32 0, !dbg !11918
  %27 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11918
  %mc15 = getelementptr inbounds %struct.net_device, %struct.net_device* %27, i32 0, i32 63, !dbg !11918
  %list16 = getelementptr inbounds %struct.netdev_hw_addr_list, %struct.netdev_hw_addr_list* %mc15, i32 0, i32 0, !dbg !11918
  %cmp17 = icmp eq %struct.list_head* %list14, %list16, !dbg !11918
  %lnot = xor i1 %cmp17, true, !dbg !11918
  br i1 %lnot, label %for.body, label %for.end, !dbg !11917

for.body:                                         ; preds = %for.cond
  %28 = load %struct.netdev_hw_addr*, %struct.netdev_hw_addr** %ha, align 8, !dbg !11920
  %addr = getelementptr inbounds %struct.netdev_hw_addr, %struct.netdev_hw_addr* %28, i32 0, i32 1, !dbg !11920
  %arraydecay18 = getelementptr inbounds [32 x i8], [32 x i8]* %addr, i64 0, i64 0, !dbg !11920
  %call19 = call i32 @crc32_le(i32 -1, i8* %arraydecay18, i64 6) #16, !dbg !11920
  store i32 %call19, i32* %crc, align 4, !dbg !11922
  %29 = load i32, i32* %crc, align 4, !dbg !11923
  %shr = lshr i32 %29, 26, !dbg !11923
  store i32 %shr, i32* %crc, align 4, !dbg !11923
  %30 = load i32, i32* %crc, align 4, !dbg !11924
  %and20 = and i32 %30, 15, !dbg !11925
  %shl = shl i32 1, %and20, !dbg !11926
  %31 = load i32, i32* %crc, align 4, !dbg !11927
  %shr21 = lshr i32 %31, 4, !dbg !11928
  %idxprom = zext i32 %shr21 to i64, !dbg !11929
  %arrayidx = getelementptr [4 x i16], [4 x i16]* %hash_table, i64 0, i64 %idxprom, !dbg !11929
  %32 = load i16, i16* %arrayidx, align 2, !dbg !11930
  %conv = zext i16 %32 to i32, !dbg !11930
  %or22 = or i32 %conv, %shl, !dbg !11930
  %conv23 = trunc i32 %or22 to i16, !dbg !11930
  store i16 %conv23, i16* %arrayidx, align 2, !dbg !11930
  br label %for.inc, !dbg !11931

for.inc:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata i8** %__mptr24, metadata !11932, metadata !DIExpression()), !dbg !11934
  %33 = load %struct.netdev_hw_addr*, %struct.netdev_hw_addr** %ha, align 8, !dbg !11934
  %list25 = getelementptr inbounds %struct.netdev_hw_addr, %struct.netdev_hw_addr* %33, i32 0, i32 0, !dbg !11934
  %next26 = getelementptr inbounds %struct.list_head, %struct.list_head* %list25, i32 0, i32 0, !dbg !11934
  %34 = load %struct.list_head*, %struct.list_head** %next26, align 8, !dbg !11934
  %35 = bitcast %struct.list_head* %34 to i8*, !dbg !11934
  store i8* %35, i8** %__mptr24, align 8, !dbg !11934
  br label %do.body27, !dbg !11934

do.body27:                                        ; preds = %for.inc
  br label %do.end28, !dbg !11935

do.end28:                                         ; preds = %do.body27
  %36 = load i8*, i8** %__mptr24, align 8, !dbg !11934
  %add.ptr30 = getelementptr i8, i8* %36, i64 0, !dbg !11934
  %37 = bitcast i8* %add.ptr30 to %struct.netdev_hw_addr*, !dbg !11934
  store %struct.netdev_hw_addr* %37, %struct.netdev_hw_addr** %tmp29, align 8, !dbg !11935
  %38 = load %struct.netdev_hw_addr*, %struct.netdev_hw_addr** %tmp29, align 8, !dbg !11934
  store %struct.netdev_hw_addr* %38, %struct.netdev_hw_addr** %ha, align 8, !dbg !11918
  br label %for.cond, !dbg !11918, !llvm.loop !11937

for.end:                                          ; preds = %for.cond
  %arrayidx31 = getelementptr [4 x i16], [4 x i16]* %hash_table, i64 0, i64 0, !dbg !11939
  %39 = load i16, i16* %arrayidx31, align 2, !dbg !11939
  %conv32 = zext i16 %39 to i32, !dbg !11939
  %40 = load i8*, i8** %bregs, align 8, !dbg !11939
  %add.ptr33 = getelementptr i8, i8* %40, i64 844, !dbg !11939
  call void @writel(i32 %conv32, i8* %add.ptr33) #12, !dbg !11939
  %arrayidx34 = getelementptr [4 x i16], [4 x i16]* %hash_table, i64 0, i64 1, !dbg !11940
  %41 = load i16, i16* %arrayidx34, align 2, !dbg !11940
  %conv35 = zext i16 %41 to i32, !dbg !11940
  %42 = load i8*, i8** %bregs, align 8, !dbg !11940
  %add.ptr36 = getelementptr i8, i8* %42, i64 840, !dbg !11940
  call void @writel(i32 %conv35, i8* %add.ptr36) #12, !dbg !11940
  %arrayidx37 = getelementptr [4 x i16], [4 x i16]* %hash_table, i64 0, i64 2, !dbg !11941
  %43 = load i16, i16* %arrayidx37, align 2, !dbg !11941
  %conv38 = zext i16 %43 to i32, !dbg !11941
  %44 = load i8*, i8** %bregs, align 8, !dbg !11941
  %add.ptr39 = getelementptr i8, i8* %44, i64 836, !dbg !11941
  call void @writel(i32 %conv38, i8* %add.ptr39) #12, !dbg !11941
  %arrayidx40 = getelementptr [4 x i16], [4 x i16]* %hash_table, i64 0, i64 3, !dbg !11942
  %45 = load i16, i16* %arrayidx40, align 2, !dbg !11942
  %conv41 = zext i16 %45 to i32, !dbg !11942
  %46 = load i8*, i8** %bregs, align 8, !dbg !11942
  %add.ptr42 = getelementptr i8, i8* %46, i64 832, !dbg !11942
  call void @writel(i32 %conv41, i8* %add.ptr42) #12, !dbg !11942
  br label %if.end

if.end:                                           ; preds = %for.end, %if.then7
  br label %if.end43

if.end43:                                         ; preds = %if.end, %if.then
  %47 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !11943
  %happy_lock44 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %47, i32 0, i32 4, !dbg !11944
  store %struct.spinlock* %happy_lock44, %struct.spinlock** %lock.addr.i45, align 8
  call void @arch_local_irq_enable() #14, !dbg !11945
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #11, !dbg !11946, !srcloc !8229
  %48 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i45, align 8, !dbg !11947
  %49 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %48, i32 0, i32 0, !dbg !11947
  %rlock.i46 = bitcast %union.anon.1* %49 to %struct.raw_spinlock*, !dbg !11947
  ret void, !dbg !11948
}

; Function Attrs: noredzone
declare dso_local i32 @eth_mac_addr(%struct.net_device*, i8*) #2

; Function Attrs: noredzone
declare dso_local i32 @eth_validate_addr(%struct.net_device*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @happy_meal_tx_timeout(%struct.net_device* %dev, i32 %txqueue) #1 !dbg !11949 {
entry:
  %lock.addr.i12 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i12, metadata !7875, metadata !DIExpression()), !dbg !11950
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !7882, metadata !DIExpression()), !dbg !11952
  %dev.addr = alloca %struct.net_device*, align 8
  %txqueue.addr = alloca i32, align 4
  %hp = alloca %struct.happy_meal*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !11954, metadata !DIExpression()), !dbg !11955
  store i32 %txqueue, i32* %txqueue.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %txqueue.addr, metadata !11956, metadata !DIExpression()), !dbg !11957
  call void @llvm.dbg.declare(metadata %struct.happy_meal** %hp, metadata !11958, metadata !DIExpression()), !dbg !11959
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11960
  %call = call i8* @netdev_priv(%struct.net_device* %0) #12, !dbg !11961
  %1 = bitcast i8* %call to %struct.happy_meal*, !dbg !11961
  store %struct.happy_meal* %1, %struct.happy_meal** %hp, align 8, !dbg !11959
  %2 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11962
  %name = getelementptr inbounds %struct.net_device, %struct.net_device* %2, i32 0, i32 0, !dbg !11963
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %name, i64 0, i64 0, !dbg !11962
  %call1 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.79, i64 0, i64 0), i8* %arraydecay) #13, !dbg !11964
  br label %do.body, !dbg !11965

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !11966

do.end:                                           ; preds = %do.body
  %3 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11968
  %name2 = getelementptr inbounds %struct.net_device, %struct.net_device* %3, i32 0, i32 0, !dbg !11969
  %arraydecay3 = getelementptr inbounds [16 x i8], [16 x i8]* %name2, i64 0, i64 0, !dbg !11968
  %4 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !11970
  %gregs = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %4, i32 0, i32 0, !dbg !11970
  %5 = load i8*, i8** %gregs, align 8, !dbg !11970
  %add.ptr = getelementptr i8, i8* %5, i64 256, !dbg !11970
  %call4 = call i32 @readl(i8* %add.ptr) #12, !dbg !11970
  %6 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !11971
  %etxregs = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %6, i32 0, i32 11, !dbg !11971
  %7 = load i8*, i8** %etxregs, align 8, !dbg !11971
  %add.ptr5 = getelementptr i8, i8* %7, i64 4, !dbg !11971
  %call6 = call i32 @readl(i8* %add.ptr5) #12, !dbg !11971
  %8 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !11972
  %bigmacregs = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %8, i32 0, i32 13, !dbg !11972
  %9 = load i8*, i8** %bigmacregs, align 8, !dbg !11972
  %add.ptr7 = getelementptr i8, i8* %9, i64 524, !dbg !11972
  %call8 = call i32 @readl(i8* %add.ptr7) #12, !dbg !11972
  %call9 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.80, i64 0, i64 0), i8* %arraydecay3, i32 %call4, i32 %call6, i32 %call8) #13, !dbg !11973
  %10 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !11974
  %happy_lock = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %10, i32 0, i32 4, !dbg !11975
  store %struct.spinlock* %happy_lock, %struct.spinlock** %lock.addr.i, align 8
  call void @arch_local_irq_disable() #14, !dbg !11976
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #11, !dbg !11977, !srcloc !8217
  %11 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !11978
  %12 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %11, i32 0, i32 0, !dbg !11978
  %rlock.i = bitcast %union.anon.1* %12 to %struct.raw_spinlock*, !dbg !11978
  %13 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !11979
  %call10 = call i32 @happy_meal_init(%struct.happy_meal* %13) #12, !dbg !11980
  %14 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !11981
  %happy_lock11 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %14, i32 0, i32 4, !dbg !11982
  store %struct.spinlock* %happy_lock11, %struct.spinlock** %lock.addr.i12, align 8
  call void @arch_local_irq_enable() #14, !dbg !11983
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #11, !dbg !11984, !srcloc !8229
  %15 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i12, align 8, !dbg !11985
  %16 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %15, i32 0, i32 0, !dbg !11985
  %rlock.i13 = bitcast %union.anon.1* %16 to %struct.raw_spinlock*, !dbg !11985
  %17 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11986
  call void @netif_wake_queue(%struct.net_device* %17) #12, !dbg !11987
  ret void, !dbg !11988
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.net_device_stats* @happy_meal_get_stats(%struct.net_device* %dev) #1 !dbg !11989 {
entry:
  %lock.addr.i2 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i2, metadata !7875, metadata !DIExpression()), !dbg !11990
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !7882, metadata !DIExpression()), !dbg !11992
  %dev.addr = alloca %struct.net_device*, align 8
  %hp = alloca %struct.happy_meal*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !11994, metadata !DIExpression()), !dbg !11995
  call void @llvm.dbg.declare(metadata %struct.happy_meal** %hp, metadata !11996, metadata !DIExpression()), !dbg !11997
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11998
  %call = call i8* @netdev_priv(%struct.net_device* %0) #12, !dbg !11999
  %1 = bitcast i8* %call to %struct.happy_meal*, !dbg !11999
  store %struct.happy_meal* %1, %struct.happy_meal** %hp, align 8, !dbg !11997
  %2 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !12000
  %happy_lock = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %2, i32 0, i32 4, !dbg !12001
  store %struct.spinlock* %happy_lock, %struct.spinlock** %lock.addr.i, align 8
  call void @arch_local_irq_disable() #14, !dbg !12002
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #11, !dbg !12003, !srcloc !8217
  %3 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !12004
  %4 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %3, i32 0, i32 0, !dbg !12004
  %rlock.i = bitcast %union.anon.1* %4 to %struct.raw_spinlock*, !dbg !12004
  %5 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !12005
  %6 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !12006
  %bigmacregs = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %6, i32 0, i32 13, !dbg !12007
  %7 = load i8*, i8** %bigmacregs, align 8, !dbg !12007
  call void @happy_meal_get_counters(%struct.happy_meal* %5, i8* %7) #12, !dbg !12008
  %8 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !12009
  %happy_lock1 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %8, i32 0, i32 4, !dbg !12010
  store %struct.spinlock* %happy_lock1, %struct.spinlock** %lock.addr.i2, align 8
  call void @arch_local_irq_enable() #14, !dbg !12011
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #11, !dbg !12012, !srcloc !8229
  %9 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i2, align 8, !dbg !12013
  %10 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %9, i32 0, i32 0, !dbg !12013
  %rlock.i3 = bitcast %union.anon.1* %10 to %struct.raw_spinlock*, !dbg !12013
  %11 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !12014
  %stats = getelementptr inbounds %struct.net_device, %struct.net_device* %11, i32 0, i32 24, !dbg !12015
  ret %struct.net_device_stats* %stats, !dbg !12016
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @request_irq(i32 %irq, i32 (i32, i8*)* %handler, i64 %flags, i8* %name, i8* %dev) #1 !dbg !12017 {
entry:
  %irq.addr = alloca i32, align 4
  %handler.addr = alloca i32 (i32, i8*)*, align 8
  %flags.addr = alloca i64, align 8
  %name.addr = alloca i8*, align 8
  %dev.addr = alloca i8*, align 8
  store i32 %irq, i32* %irq.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %irq.addr, metadata !12025, metadata !DIExpression()), !dbg !12026
  store i32 (i32, i8*)* %handler, i32 (i32, i8*)** %handler.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (i32, i8*)** %handler.addr, metadata !12027, metadata !DIExpression()), !dbg !12028
  store i64 %flags, i64* %flags.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr, metadata !12029, metadata !DIExpression()), !dbg !12030
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !12031, metadata !DIExpression()), !dbg !12032
  store i8* %dev, i8** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dev.addr, metadata !12033, metadata !DIExpression()), !dbg !12034
  %0 = load i32, i32* %irq.addr, align 4, !dbg !12035
  %1 = load i32 (i32, i8*)*, i32 (i32, i8*)** %handler.addr, align 8, !dbg !12036
  %2 = load i64, i64* %flags.addr, align 8, !dbg !12037
  %3 = load i8*, i8** %name.addr, align 8, !dbg !12038
  %4 = load i8*, i8** %dev.addr, align 8, !dbg !12039
  %call = call i32 @request_threaded_irq(i32 %0, i32 (i32, i8*)* %1, i32 (i32, i8*)* null, i64 %2, i8* %3, i8* %4) #12, !dbg !12040
  ret i32 %call, !dbg !12041
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @happy_meal_interrupt(i32 %irq, i8* %dev_id) #1 !dbg !12042 {
entry:
  %lock.addr.i19 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i19, metadata !12043, metadata !DIExpression()), !dbg !12045
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !12047, metadata !DIExpression()), !dbg !12049
  %irq.addr = alloca i32, align 4
  %dev_id.addr = alloca i8*, align 8
  %dev = alloca %struct.net_device*, align 8
  %hp = alloca %struct.happy_meal*, align 8
  %happy_status = alloca i32, align 4
  store i32 %irq, i32* %irq.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %irq.addr, metadata !12051, metadata !DIExpression()), !dbg !12052
  store i8* %dev_id, i8** %dev_id.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dev_id.addr, metadata !12053, metadata !DIExpression()), !dbg !12054
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev, metadata !12055, metadata !DIExpression()), !dbg !12056
  %0 = load i8*, i8** %dev_id.addr, align 8, !dbg !12057
  %1 = bitcast i8* %0 to %struct.net_device*, !dbg !12057
  store %struct.net_device* %1, %struct.net_device** %dev, align 8, !dbg !12056
  call void @llvm.dbg.declare(metadata %struct.happy_meal** %hp, metadata !12058, metadata !DIExpression()), !dbg !12059
  %2 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !12060
  %call = call i8* @netdev_priv(%struct.net_device* %2) #12, !dbg !12061
  %3 = bitcast i8* %call to %struct.happy_meal*, !dbg !12061
  store %struct.happy_meal* %3, %struct.happy_meal** %hp, align 8, !dbg !12059
  call void @llvm.dbg.declare(metadata i32* %happy_status, metadata !12062, metadata !DIExpression()), !dbg !12063
  %4 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !12064
  %gregs = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %4, i32 0, i32 0, !dbg !12064
  %5 = load i8*, i8** %gregs, align 8, !dbg !12064
  %add.ptr = getelementptr i8, i8* %5, i64 256, !dbg !12064
  %call1 = call i32 @readl(i8* %add.ptr) #12, !dbg !12064
  store i32 %call1, i32* %happy_status, align 4, !dbg !12063
  %6 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !12065
  %happy_lock = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %6, i32 0, i32 4, !dbg !12066
  store %struct.spinlock* %happy_lock, %struct.spinlock** %lock.addr.i, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #11, !dbg !12067, !srcloc !12069
  %7 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !12070
  %8 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %7, i32 0, i32 0, !dbg !12070
  %rlock.i = bitcast %union.anon.1* %8 to %struct.raw_spinlock*, !dbg !12070
  %9 = load i32, i32* %happy_status, align 4, !dbg !12072
  %and = and i32 %9, -58786052, !dbg !12074
  %tobool = icmp ne i32 %and, 0, !dbg !12074
  br i1 %tobool, label %if.then, label %if.end5, !dbg !12075

if.then:                                          ; preds = %entry
  %10 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !12076
  %11 = load i32, i32* %happy_status, align 4, !dbg !12079
  %call2 = call i32 @happy_meal_is_not_so_happy(%struct.happy_meal* %10, i32 %11) #12, !dbg !12080
  %tobool3 = icmp ne i32 %call2, 0, !dbg !12080
  br i1 %tobool3, label %if.then4, label %if.end, !dbg !12081

if.then4:                                         ; preds = %if.then
  br label %out, !dbg !12082

if.end:                                           ; preds = %if.then
  br label %if.end5, !dbg !12083

if.end5:                                          ; preds = %if.end, %entry
  %12 = load i32, i32* %happy_status, align 4, !dbg !12084
  %and6 = and i32 %12, 8388608, !dbg !12086
  %tobool7 = icmp ne i32 %and6, 0, !dbg !12086
  br i1 %tobool7, label %if.then8, label %if.end9, !dbg !12087

if.then8:                                         ; preds = %if.end5
  %13 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !12088
  call void @happy_meal_mif_interrupt(%struct.happy_meal* %13) #12, !dbg !12090
  br label %if.end9, !dbg !12091

if.end9:                                          ; preds = %if.then8, %if.end5
  %14 = load i32, i32* %happy_status, align 4, !dbg !12092
  %and10 = and i32 %14, 33554432, !dbg !12094
  %tobool11 = icmp ne i32 %and10, 0, !dbg !12094
  br i1 %tobool11, label %if.then12, label %if.end13, !dbg !12095

if.then12:                                        ; preds = %if.end9
  %15 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !12096
  call void @happy_meal_tx(%struct.happy_meal* %15) #12, !dbg !12098
  br label %if.end13, !dbg !12099

if.end13:                                         ; preds = %if.then12, %if.end9
  %16 = load i32, i32* %happy_status, align 4, !dbg !12100
  %and14 = and i32 %16, 65536, !dbg !12102
  %tobool15 = icmp ne i32 %and14, 0, !dbg !12102
  br i1 %tobool15, label %if.then16, label %if.end17, !dbg !12103

if.then16:                                        ; preds = %if.end13
  %17 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !12104
  %18 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !12106
  call void @happy_meal_rx(%struct.happy_meal* %17, %struct.net_device* %18) #12, !dbg !12107
  br label %if.end17, !dbg !12108

if.end17:                                         ; preds = %if.then16, %if.end13
  br label %out, !dbg !12109

out:                                              ; preds = %if.end17, %if.then4
  call void @llvm.dbg.label(metadata !12110), !dbg !12111
  %19 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !12112
  %happy_lock18 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %19, i32 0, i32 4, !dbg !12113
  store %struct.spinlock* %happy_lock18, %struct.spinlock** %lock.addr.i19, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #11, !dbg !12114, !srcloc !12116
  %20 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i19, align 8, !dbg !12117
  %21 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %20, i32 0, i32 0, !dbg !12117
  %rlock.i20 = bitcast %union.anon.1* %21 to %struct.raw_spinlock*, !dbg !12117
  ret i32 1, !dbg !12119
}

; Function Attrs: noredzone
declare dso_local i8* @free_irq(i32, i8*) #2

; Function Attrs: noredzone
declare dso_local i32 @request_threaded_irq(i32, i32 (i32, i8*)*, i32 (i32, i8*)*, i64, i8*, i8*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @happy_meal_is_not_so_happy(%struct.happy_meal* %hp, i32 %status) #1 !dbg !12120 {
entry:
  %retval = alloca i32, align 4
  %hp.addr = alloca %struct.happy_meal*, align 8
  %status.addr = alloca i32, align 4
  %reset = alloca i32, align 4
  store %struct.happy_meal* %hp, %struct.happy_meal** %hp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.happy_meal** %hp.addr, metadata !12123, metadata !DIExpression()), !dbg !12124
  store i32 %status, i32* %status.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %status.addr, metadata !12125, metadata !DIExpression()), !dbg !12126
  call void @llvm.dbg.declare(metadata i32* %reset, metadata !12127, metadata !DIExpression()), !dbg !12128
  store i32 0, i32* %reset, align 4, !dbg !12128
  %0 = load i32, i32* %status.addr, align 4, !dbg !12129
  %and = and i32 %0, -51116416, !dbg !12131
  %tobool = icmp ne i32 %and, 0, !dbg !12131
  br i1 %tobool, label %if.then, label %if.end, !dbg !12132

if.then:                                          ; preds = %entry
  %1 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !12133
  %dev = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %1, i32 0, i32 41, !dbg !12134
  %2 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !12134
  %name = getelementptr inbounds %struct.net_device, %struct.net_device* %2, i32 0, i32 0, !dbg !12135
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %name, i64 0, i64 0, !dbg !12133
  %3 = load i32, i32* %status.addr, align 4, !dbg !12136
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.52, i64 0, i64 0), i8* %arraydecay, i32 %3) #13, !dbg !12137
  br label %if.end, !dbg !12137

if.end:                                           ; preds = %if.then, %entry
  %4 = load i32, i32* %status.addr, align 4, !dbg !12138
  %and1 = and i32 %4, 32, !dbg !12140
  %tobool2 = icmp ne i32 %and1, 0, !dbg !12140
  br i1 %tobool2, label %if.then3, label %if.end8, !dbg !12141

if.then3:                                         ; preds = %if.end
  %5 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !12142
  %dev4 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %5, i32 0, i32 41, !dbg !12144
  %6 = load %struct.net_device*, %struct.net_device** %dev4, align 8, !dbg !12144
  %name5 = getelementptr inbounds %struct.net_device, %struct.net_device* %6, i32 0, i32 0, !dbg !12145
  %arraydecay6 = getelementptr inbounds [16 x i8], [16 x i8]* %name5, i64 0, i64 0, !dbg !12142
  %call7 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.53, i64 0, i64 0), i8* %arraydecay6) #13, !dbg !12146
  br label %if.end8, !dbg !12147

if.end8:                                          ; preds = %if.then3, %if.end
  %7 = load i32, i32* %status.addr, align 4, !dbg !12148
  %and9 = and i32 %7, 128, !dbg !12150
  %tobool10 = icmp ne i32 %and9, 0, !dbg !12150
  br i1 %tobool10, label %if.then11, label %if.end16, !dbg !12151

if.then11:                                        ; preds = %if.end8
  %8 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !12152
  %dev12 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %8, i32 0, i32 41, !dbg !12154
  %9 = load %struct.net_device*, %struct.net_device** %dev12, align 8, !dbg !12154
  %name13 = getelementptr inbounds %struct.net_device, %struct.net_device* %9, i32 0, i32 0, !dbg !12155
  %arraydecay14 = getelementptr inbounds [16 x i8], [16 x i8]* %name13, i64 0, i64 0, !dbg !12152
  %call15 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.54, i64 0, i64 0), i8* %arraydecay14) #13, !dbg !12156
  store i32 1, i32* %reset, align 4, !dbg !12157
  br label %if.end16, !dbg !12158

if.end16:                                         ; preds = %if.then11, %if.end8
  %10 = load i32, i32* %status.addr, align 4, !dbg !12159
  %and17 = and i32 %10, 512, !dbg !12161
  %tobool18 = icmp ne i32 %and17, 0, !dbg !12161
  br i1 %tobool18, label %if.then19, label %if.end24, !dbg !12162

if.then19:                                        ; preds = %if.end16
  %11 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !12163
  %dev20 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %11, i32 0, i32 41, !dbg !12165
  %12 = load %struct.net_device*, %struct.net_device** %dev20, align 8, !dbg !12165
  %name21 = getelementptr inbounds %struct.net_device, %struct.net_device* %12, i32 0, i32 0, !dbg !12166
  %arraydecay22 = getelementptr inbounds [16 x i8], [16 x i8]* %name21, i64 0, i64 0, !dbg !12163
  %call23 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.55, i64 0, i64 0), i8* %arraydecay22) #13, !dbg !12167
  store i32 1, i32* %reset, align 4, !dbg !12168
  br label %if.end24, !dbg !12169

if.end24:                                         ; preds = %if.then19, %if.end16
  %13 = load i32, i32* %status.addr, align 4, !dbg !12170
  %and25 = and i32 %13, 1024, !dbg !12172
  %tobool26 = icmp ne i32 %and25, 0, !dbg !12172
  br i1 %tobool26, label %if.then27, label %if.end32, !dbg !12173

if.then27:                                        ; preds = %if.end24
  %14 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !12174
  %dev28 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %14, i32 0, i32 41, !dbg !12176
  %15 = load %struct.net_device*, %struct.net_device** %dev28, align 8, !dbg !12176
  %name29 = getelementptr inbounds %struct.net_device, %struct.net_device* %15, i32 0, i32 0, !dbg !12177
  %arraydecay30 = getelementptr inbounds [16 x i8], [16 x i8]* %name29, i64 0, i64 0, !dbg !12174
  %call31 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.56, i64 0, i64 0), i8* %arraydecay30) #13, !dbg !12178
  store i32 1, i32* %reset, align 4, !dbg !12179
  br label %if.end32, !dbg !12180

if.end32:                                         ; preds = %if.then27, %if.end24
  %16 = load i32, i32* %status.addr, align 4, !dbg !12181
  %and33 = and i32 %16, 131072, !dbg !12183
  %tobool34 = icmp ne i32 %and33, 0, !dbg !12183
  br i1 %tobool34, label %if.then35, label %if.end40, !dbg !12184

if.then35:                                        ; preds = %if.end32
  %17 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !12185
  %dev36 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %17, i32 0, i32 41, !dbg !12187
  %18 = load %struct.net_device*, %struct.net_device** %dev36, align 8, !dbg !12187
  %name37 = getelementptr inbounds %struct.net_device, %struct.net_device* %18, i32 0, i32 0, !dbg !12188
  %arraydecay38 = getelementptr inbounds [16 x i8], [16 x i8]* %name37, i64 0, i64 0, !dbg !12185
  %call39 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.57, i64 0, i64 0), i8* %arraydecay38) #13, !dbg !12189
  br label %if.end40, !dbg !12190

if.end40:                                         ; preds = %if.then35, %if.end32
  %19 = load i32, i32* %status.addr, align 4, !dbg !12191
  %and41 = and i32 %19, 3407872, !dbg !12193
  %tobool42 = icmp ne i32 %and41, 0, !dbg !12193
  br i1 %tobool42, label %if.then43, label %if.end64, !dbg !12194

if.then43:                                        ; preds = %if.end40
  %20 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !12195
  %dev44 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %20, i32 0, i32 41, !dbg !12197
  %21 = load %struct.net_device*, %struct.net_device** %dev44, align 8, !dbg !12197
  %name45 = getelementptr inbounds %struct.net_device, %struct.net_device* %21, i32 0, i32 0, !dbg !12198
  %arraydecay46 = getelementptr inbounds [16 x i8], [16 x i8]* %name45, i64 0, i64 0, !dbg !12195
  %call47 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.58, i64 0, i64 0), i8* %arraydecay46) #13, !dbg !12199
  %22 = load i32, i32* %status.addr, align 4, !dbg !12200
  %and48 = and i32 %22, 262144, !dbg !12202
  %tobool49 = icmp ne i32 %and48, 0, !dbg !12202
  br i1 %tobool49, label %if.then50, label %if.end52, !dbg !12203

if.then50:                                        ; preds = %if.then43
  %call51 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.59, i64 0, i64 0)) #13, !dbg !12204
  br label %if.end52, !dbg !12204

if.end52:                                         ; preds = %if.then50, %if.then43
  %23 = load i32, i32* %status.addr, align 4, !dbg !12205
  %and53 = and i32 %23, 1048576, !dbg !12207
  %tobool54 = icmp ne i32 %and53, 0, !dbg !12207
  br i1 %tobool54, label %if.then55, label %if.end57, !dbg !12208

if.then55:                                        ; preds = %if.end52
  %call56 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.60, i64 0, i64 0)) #13, !dbg !12209
  br label %if.end57, !dbg !12209

if.end57:                                         ; preds = %if.then55, %if.end52
  %24 = load i32, i32* %status.addr, align 4, !dbg !12210
  %and58 = and i32 %24, 2097152, !dbg !12212
  %tobool59 = icmp ne i32 %and58, 0, !dbg !12212
  br i1 %tobool59, label %if.then60, label %if.end62, !dbg !12213

if.then60:                                        ; preds = %if.end57
  %call61 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.61, i64 0, i64 0)) #13, !dbg !12214
  br label %if.end62, !dbg !12214

if.end62:                                         ; preds = %if.then60, %if.end57
  %call63 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.62, i64 0, i64 0)) #13, !dbg !12215
  store i32 1, i32* %reset, align 4, !dbg !12216
  br label %if.end64, !dbg !12217

if.end64:                                         ; preds = %if.end62, %if.end40
  %25 = load i32, i32* %status.addr, align 4, !dbg !12218
  %and65 = and i32 %25, 4194304, !dbg !12220
  %tobool66 = icmp ne i32 %and65, 0, !dbg !12220
  br i1 %tobool66, label %if.then67, label %if.end72, !dbg !12221

if.then67:                                        ; preds = %if.end64
  %26 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !12222
  %dev68 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %26, i32 0, i32 41, !dbg !12224
  %27 = load %struct.net_device*, %struct.net_device** %dev68, align 8, !dbg !12224
  %name69 = getelementptr inbounds %struct.net_device, %struct.net_device* %27, i32 0, i32 0, !dbg !12225
  %arraydecay70 = getelementptr inbounds [16 x i8], [16 x i8]* %name69, i64 0, i64 0, !dbg !12222
  %call71 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.63, i64 0, i64 0), i8* %arraydecay70) #13, !dbg !12226
  store i32 1, i32* %reset, align 4, !dbg !12227
  br label %if.end72, !dbg !12228

if.end72:                                         ; preds = %if.then67, %if.end64
  %28 = load i32, i32* %status.addr, align 4, !dbg !12229
  %and73 = and i32 %28, 8388608, !dbg !12231
  %tobool74 = icmp ne i32 %and73, 0, !dbg !12231
  br i1 %tobool74, label %if.then75, label %if.end80, !dbg !12232

if.then75:                                        ; preds = %if.end72
  %29 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !12233
  %dev76 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %29, i32 0, i32 41, !dbg !12235
  %30 = load %struct.net_device*, %struct.net_device** %dev76, align 8, !dbg !12235
  %name77 = getelementptr inbounds %struct.net_device, %struct.net_device* %30, i32 0, i32 0, !dbg !12236
  %arraydecay78 = getelementptr inbounds [16 x i8], [16 x i8]* %name77, i64 0, i64 0, !dbg !12233
  %call79 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.64, i64 0, i64 0), i8* %arraydecay78) #13, !dbg !12237
  br label %if.end80, !dbg !12238

if.end80:                                         ; preds = %if.then75, %if.end72
  %31 = load i32, i32* %status.addr, align 4, !dbg !12239
  %and81 = and i32 %31, 1006632960, !dbg !12241
  %tobool82 = icmp ne i32 %and81, 0, !dbg !12241
  br i1 %tobool82, label %if.then83, label %if.end109, !dbg !12242

if.then83:                                        ; preds = %if.end80
  %32 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !12243
  %dev84 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %32, i32 0, i32 41, !dbg !12245
  %33 = load %struct.net_device*, %struct.net_device** %dev84, align 8, !dbg !12245
  %name85 = getelementptr inbounds %struct.net_device, %struct.net_device* %33, i32 0, i32 0, !dbg !12246
  %arraydecay86 = getelementptr inbounds [16 x i8], [16 x i8]* %name85, i64 0, i64 0, !dbg !12243
  %call87 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.65, i64 0, i64 0), i8* %arraydecay86) #13, !dbg !12247
  %34 = load i32, i32* %status.addr, align 4, !dbg !12248
  %and88 = and i32 %34, 67108864, !dbg !12250
  %tobool89 = icmp ne i32 %and88, 0, !dbg !12250
  br i1 %tobool89, label %if.then90, label %if.end92, !dbg !12251

if.then90:                                        ; preds = %if.then83
  %call91 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.59, i64 0, i64 0)) #13, !dbg !12252
  br label %if.end92, !dbg !12252

if.end92:                                         ; preds = %if.then90, %if.then83
  %35 = load i32, i32* %status.addr, align 4, !dbg !12253
  %and93 = and i32 %35, 134217728, !dbg !12255
  %tobool94 = icmp ne i32 %and93, 0, !dbg !12255
  br i1 %tobool94, label %if.then95, label %if.end97, !dbg !12256

if.then95:                                        ; preds = %if.end92
  %call96 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.66, i64 0, i64 0)) #13, !dbg !12257
  br label %if.end97, !dbg !12257

if.end97:                                         ; preds = %if.then95, %if.end92
  %36 = load i32, i32* %status.addr, align 4, !dbg !12258
  %and98 = and i32 %36, 268435456, !dbg !12260
  %tobool99 = icmp ne i32 %and98, 0, !dbg !12260
  br i1 %tobool99, label %if.then100, label %if.end102, !dbg !12261

if.then100:                                       ; preds = %if.end97
  %call101 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.60, i64 0, i64 0)) #13, !dbg !12262
  br label %if.end102, !dbg !12262

if.end102:                                        ; preds = %if.then100, %if.end97
  %37 = load i32, i32* %status.addr, align 4, !dbg !12263
  %and103 = and i32 %37, 536870912, !dbg !12265
  %tobool104 = icmp ne i32 %and103, 0, !dbg !12265
  br i1 %tobool104, label %if.then105, label %if.end107, !dbg !12266

if.then105:                                       ; preds = %if.end102
  %call106 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.67, i64 0, i64 0)) #13, !dbg !12267
  br label %if.end107, !dbg !12267

if.end107:                                        ; preds = %if.then105, %if.end102
  %call108 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.62, i64 0, i64 0)) #13, !dbg !12268
  store i32 1, i32* %reset, align 4, !dbg !12269
  br label %if.end109, !dbg !12270

if.end109:                                        ; preds = %if.end107, %if.end80
  %38 = load i32, i32* %status.addr, align 4, !dbg !12271
  %and110 = and i32 %38, -1073741824, !dbg !12273
  %tobool111 = icmp ne i32 %and110, 0, !dbg !12273
  br i1 %tobool111, label %if.then112, label %if.end119, !dbg !12274

if.then112:                                       ; preds = %if.end109
  %39 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !12275
  %dev113 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %39, i32 0, i32 41, !dbg !12277
  %40 = load %struct.net_device*, %struct.net_device** %dev113, align 8, !dbg !12277
  %name114 = getelementptr inbounds %struct.net_device, %struct.net_device* %40, i32 0, i32 0, !dbg !12278
  %arraydecay115 = getelementptr inbounds [16 x i8], [16 x i8]* %name114, i64 0, i64 0, !dbg !12275
  %41 = load i32, i32* %status.addr, align 4, !dbg !12279
  %and116 = and i32 %41, -2147483648, !dbg !12280
  %tobool117 = icmp ne i32 %and116, 0, !dbg !12281
  %42 = zext i1 %tobool117 to i64, !dbg !12281
  %cond = select i1 %tobool117, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.69, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.70, i64 0, i64 0), !dbg !12281
  %call118 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.68, i64 0, i64 0), i8* %arraydecay115, i8* %cond) #13, !dbg !12282
  store i32 1, i32* %reset, align 4, !dbg !12283
  br label %if.end119, !dbg !12284

if.end119:                                        ; preds = %if.then112, %if.end109
  %43 = load i32, i32* %reset, align 4, !dbg !12285
  %tobool120 = icmp ne i32 %43, 0, !dbg !12285
  br i1 %tobool120, label %if.then121, label %if.end127, !dbg !12287

if.then121:                                       ; preds = %if.end119
  %44 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !12288
  %dev122 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %44, i32 0, i32 41, !dbg !12290
  %45 = load %struct.net_device*, %struct.net_device** %dev122, align 8, !dbg !12290
  %name123 = getelementptr inbounds %struct.net_device, %struct.net_device* %45, i32 0, i32 0, !dbg !12291
  %arraydecay124 = getelementptr inbounds [16 x i8], [16 x i8]* %name123, i64 0, i64 0, !dbg !12288
  %call125 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.71, i64 0, i64 0), i8* %arraydecay124) #13, !dbg !12292
  %46 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !12293
  %call126 = call i32 @happy_meal_init(%struct.happy_meal* %46) #12, !dbg !12294
  store i32 1, i32* %retval, align 4, !dbg !12295
  br label %return, !dbg !12295

if.end127:                                        ; preds = %if.end119
  store i32 0, i32* %retval, align 4, !dbg !12296
  br label %return, !dbg !12296

return:                                           ; preds = %if.end127, %if.then121
  %47 = load i32, i32* %retval, align 4, !dbg !12297
  ret i32 %47, !dbg !12297
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @happy_meal_mif_interrupt(%struct.happy_meal* %hp) #1 !dbg !12298 {
entry:
  %hp.addr = alloca %struct.happy_meal*, align 8
  %tregs = alloca i8*, align 8
  store %struct.happy_meal* %hp, %struct.happy_meal** %hp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.happy_meal** %hp.addr, metadata !12299, metadata !DIExpression()), !dbg !12300
  call void @llvm.dbg.declare(metadata i8** %tregs, metadata !12301, metadata !DIExpression()), !dbg !12302
  %0 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !12303
  %tcvregs = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %0, i32 0, i32 14, !dbg !12304
  %1 = load i8*, i8** %tcvregs, align 8, !dbg !12304
  store i8* %1, i8** %tregs, align 8, !dbg !12302
  %2 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !12305
  %dev = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %2, i32 0, i32 41, !dbg !12306
  %3 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !12306
  %name = getelementptr inbounds %struct.net_device, %struct.net_device* %3, i32 0, i32 0, !dbg !12307
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %name, i64 0, i64 0, !dbg !12305
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.72, i64 0, i64 0), i8* %arraydecay) #13, !dbg !12308
  %4 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !12309
  %5 = load i8*, i8** %tregs, align 8, !dbg !12310
  %call1 = call i32 @happy_meal_tcvr_read(%struct.happy_meal* %4, i8* %5, i32 0) #12, !dbg !12311
  %conv = trunc i32 %call1 to i16, !dbg !12311
  %6 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !12312
  %sw_bmcr = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %6, i32 0, i32 22, !dbg !12313
  store i16 %conv, i16* %sw_bmcr, align 2, !dbg !12314
  %7 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !12315
  %8 = load i8*, i8** %tregs, align 8, !dbg !12316
  %call2 = call i32 @happy_meal_tcvr_read(%struct.happy_meal* %7, i8* %8, i32 5) #12, !dbg !12317
  %conv3 = trunc i32 %call2 to i16, !dbg !12317
  %9 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !12318
  %sw_lpa = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %9, i32 0, i32 27, !dbg !12319
  store i16 %conv3, i16* %sw_lpa, align 8, !dbg !12320
  %10 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !12321
  %sw_lpa4 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %10, i32 0, i32 27, !dbg !12323
  %11 = load i16, i16* %sw_lpa4, align 8, !dbg !12323
  %conv5 = zext i16 %11 to i32, !dbg !12321
  %and = and i32 %conv5, 256, !dbg !12324
  %tobool = icmp ne i32 %and, 0, !dbg !12324
  br i1 %tobool, label %if.then, label %if.else, !dbg !12325

if.then:                                          ; preds = %entry
  %12 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !12326
  %dev6 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %12, i32 0, i32 41, !dbg !12328
  %13 = load %struct.net_device*, %struct.net_device** %dev6, align 8, !dbg !12328
  %name7 = getelementptr inbounds %struct.net_device, %struct.net_device* %13, i32 0, i32 0, !dbg !12329
  %arraydecay8 = getelementptr inbounds [16 x i8], [16 x i8]* %name7, i64 0, i64 0, !dbg !12326
  %call9 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.73, i64 0, i64 0), i8* %arraydecay8) #13, !dbg !12330
  %14 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !12331
  %sw_bmcr10 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %14, i32 0, i32 22, !dbg !12332
  %15 = load i16, i16* %sw_bmcr10, align 2, !dbg !12333
  %conv11 = zext i16 %15 to i32, !dbg !12333
  %or = or i32 %conv11, 8448, !dbg !12333
  %conv12 = trunc i32 %or to i16, !dbg !12333
  store i16 %conv12, i16* %sw_bmcr10, align 2, !dbg !12333
  br label %if.end46, !dbg !12334

if.else:                                          ; preds = %entry
  %16 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !12335
  %sw_lpa13 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %16, i32 0, i32 27, !dbg !12337
  %17 = load i16, i16* %sw_lpa13, align 8, !dbg !12337
  %conv14 = zext i16 %17 to i32, !dbg !12335
  %and15 = and i32 %conv14, 128, !dbg !12338
  %tobool16 = icmp ne i32 %and15, 0, !dbg !12338
  br i1 %tobool16, label %if.then17, label %if.else26, !dbg !12339

if.then17:                                        ; preds = %if.else
  %18 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !12340
  %dev18 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %18, i32 0, i32 41, !dbg !12342
  %19 = load %struct.net_device*, %struct.net_device** %dev18, align 8, !dbg !12342
  %name19 = getelementptr inbounds %struct.net_device, %struct.net_device* %19, i32 0, i32 0, !dbg !12343
  %arraydecay20 = getelementptr inbounds [16 x i8], [16 x i8]* %name19, i64 0, i64 0, !dbg !12340
  %call21 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.74, i64 0, i64 0), i8* %arraydecay20) #13, !dbg !12344
  %20 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !12345
  %sw_bmcr22 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %20, i32 0, i32 22, !dbg !12346
  %21 = load i16, i16* %sw_bmcr22, align 2, !dbg !12347
  %conv23 = zext i16 %21 to i32, !dbg !12347
  %or24 = or i32 %conv23, 8192, !dbg !12347
  %conv25 = trunc i32 %or24 to i16, !dbg !12347
  store i16 %conv25, i16* %sw_bmcr22, align 2, !dbg !12347
  br label %if.end45, !dbg !12348

if.else26:                                        ; preds = %if.else
  %22 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !12349
  %sw_lpa27 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %22, i32 0, i32 27, !dbg !12351
  %23 = load i16, i16* %sw_lpa27, align 8, !dbg !12351
  %conv28 = zext i16 %23 to i32, !dbg !12349
  %and29 = and i32 %conv28, 64, !dbg !12352
  %tobool30 = icmp ne i32 %and29, 0, !dbg !12352
  br i1 %tobool30, label %if.then31, label %if.else40, !dbg !12353

if.then31:                                        ; preds = %if.else26
  %24 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !12354
  %dev32 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %24, i32 0, i32 41, !dbg !12356
  %25 = load %struct.net_device*, %struct.net_device** %dev32, align 8, !dbg !12356
  %name33 = getelementptr inbounds %struct.net_device, %struct.net_device* %25, i32 0, i32 0, !dbg !12357
  %arraydecay34 = getelementptr inbounds [16 x i8], [16 x i8]* %name33, i64 0, i64 0, !dbg !12354
  %call35 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.75, i64 0, i64 0), i8* %arraydecay34) #13, !dbg !12358
  %26 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !12359
  %sw_bmcr36 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %26, i32 0, i32 22, !dbg !12360
  %27 = load i16, i16* %sw_bmcr36, align 2, !dbg !12361
  %conv37 = zext i16 %27 to i32, !dbg !12361
  %or38 = or i32 %conv37, 256, !dbg !12361
  %conv39 = trunc i32 %or38 to i16, !dbg !12361
  store i16 %conv39, i16* %sw_bmcr36, align 2, !dbg !12361
  br label %if.end, !dbg !12362

if.else40:                                        ; preds = %if.else26
  %28 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !12363
  %dev41 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %28, i32 0, i32 41, !dbg !12365
  %29 = load %struct.net_device*, %struct.net_device** %dev41, align 8, !dbg !12365
  %name42 = getelementptr inbounds %struct.net_device, %struct.net_device* %29, i32 0, i32 0, !dbg !12366
  %arraydecay43 = getelementptr inbounds [16 x i8], [16 x i8]* %name42, i64 0, i64 0, !dbg !12363
  %call44 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.76, i64 0, i64 0), i8* %arraydecay43) #13, !dbg !12367
  br label %if.end

if.end:                                           ; preds = %if.else40, %if.then31
  br label %if.end45

if.end45:                                         ; preds = %if.end, %if.then17
  br label %if.end46

if.end46:                                         ; preds = %if.end45, %if.then
  %30 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !12368
  %31 = load i8*, i8** %tregs, align 8, !dbg !12369
  %32 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !12370
  %sw_bmcr47 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %32, i32 0, i32 22, !dbg !12371
  %33 = load i16, i16* %sw_bmcr47, align 2, !dbg !12371
  call void @happy_meal_tcvr_write(%struct.happy_meal* %30, i8* %31, i32 0, i16 zeroext %33) #12, !dbg !12372
  %34 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !12373
  %35 = load i8*, i8** %tregs, align 8, !dbg !12374
  call void @happy_meal_poll_stop(%struct.happy_meal* %34, i8* %35) #12, !dbg !12375
  ret void, !dbg !12376
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @happy_meal_tx(%struct.happy_meal* %hp) #1 !dbg !12377 {
entry:
  %hp.addr = alloca %struct.happy_meal*, align 8
  %txbase = alloca %struct.happy_meal_txd*, align 8
  %this = alloca %struct.happy_meal_txd*, align 8
  %dev = alloca %struct.net_device*, align 8
  %elem = alloca i32, align 4
  %skb = alloca %struct.sk_buff*, align 8
  %flags = alloca i32, align 4
  %dma_addr = alloca i32, align 4
  %dma_len = alloca i32, align 4
  %frag = alloca i32, align 4
  %last = alloca i32, align 4
  store %struct.happy_meal* %hp, %struct.happy_meal** %hp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.happy_meal** %hp.addr, metadata !12378, metadata !DIExpression()), !dbg !12379
  call void @llvm.dbg.declare(metadata %struct.happy_meal_txd** %txbase, metadata !12380, metadata !DIExpression()), !dbg !12381
  %0 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !12382
  %happy_block = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %0, i32 0, i32 1, !dbg !12383
  %1 = load %struct.hmeal_init_block*, %struct.hmeal_init_block** %happy_block, align 8, !dbg !12383
  %happy_meal_txd = getelementptr inbounds %struct.hmeal_init_block, %struct.hmeal_init_block* %1, i32 0, i32 1, !dbg !12384
  %arrayidx = getelementptr [256 x %struct.happy_meal_txd], [256 x %struct.happy_meal_txd]* %happy_meal_txd, i64 0, i64 0, !dbg !12382
  store %struct.happy_meal_txd* %arrayidx, %struct.happy_meal_txd** %txbase, align 8, !dbg !12381
  call void @llvm.dbg.declare(metadata %struct.happy_meal_txd** %this, metadata !12385, metadata !DIExpression()), !dbg !12386
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev, metadata !12387, metadata !DIExpression()), !dbg !12388
  %2 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !12389
  %dev1 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %2, i32 0, i32 41, !dbg !12390
  %3 = load %struct.net_device*, %struct.net_device** %dev1, align 8, !dbg !12390
  store %struct.net_device* %3, %struct.net_device** %dev, align 8, !dbg !12388
  call void @llvm.dbg.declare(metadata i32* %elem, metadata !12391, metadata !DIExpression()), !dbg !12392
  %4 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !12393
  %tx_old = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %4, i32 0, i32 10, !dbg !12394
  %5 = load i32, i32* %tx_old, align 4, !dbg !12394
  store i32 %5, i32* %elem, align 4, !dbg !12395
  br label %while.cond, !dbg !12396

while.cond:                                       ; preds = %for.end, %entry
  %6 = load i32, i32* %elem, align 4, !dbg !12397
  %7 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !12398
  %tx_new = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %7, i32 0, i32 8, !dbg !12399
  %8 = load i32, i32* %tx_new, align 4, !dbg !12399
  %cmp = icmp ne i32 %6, %8, !dbg !12400
  br i1 %cmp, label %while.body, label %while.end, !dbg !12396

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb, metadata !12401, metadata !DIExpression()), !dbg !12403
  call void @llvm.dbg.declare(metadata i32* %flags, metadata !12404, metadata !DIExpression()), !dbg !12405
  call void @llvm.dbg.declare(metadata i32* %dma_addr, metadata !12406, metadata !DIExpression()), !dbg !12407
  call void @llvm.dbg.declare(metadata i32* %dma_len, metadata !12408, metadata !DIExpression()), !dbg !12409
  call void @llvm.dbg.declare(metadata i32* %frag, metadata !12410, metadata !DIExpression()), !dbg !12411
  %9 = load %struct.happy_meal_txd*, %struct.happy_meal_txd** %txbase, align 8, !dbg !12412
  %10 = load i32, i32* %elem, align 4, !dbg !12413
  %idxprom = sext i32 %10 to i64, !dbg !12412
  %arrayidx2 = getelementptr %struct.happy_meal_txd, %struct.happy_meal_txd* %9, i64 %idxprom, !dbg !12412
  store %struct.happy_meal_txd* %arrayidx2, %struct.happy_meal_txd** %this, align 8, !dbg !12414
  %11 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !12415
  %12 = load %struct.happy_meal_txd*, %struct.happy_meal_txd** %this, align 8, !dbg !12416
  %tx_flags = getelementptr inbounds %struct.happy_meal_txd, %struct.happy_meal_txd* %12, i32 0, i32 0, !dbg !12417
  %call = call i32 @hme_read_desc32(%struct.happy_meal* %11, i32* %tx_flags) #12, !dbg !12418
  store i32 %call, i32* %flags, align 4, !dbg !12419
  %13 = load i32, i32* %flags, align 4, !dbg !12420
  %and = and i32 %13, -2147483648, !dbg !12422
  %tobool = icmp ne i32 %and, 0, !dbg !12422
  br i1 %tobool, label %if.then, label %if.end, !dbg !12423

if.then:                                          ; preds = %while.body
  br label %while.end, !dbg !12424

if.end:                                           ; preds = %while.body
  %14 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !12425
  %tx_skbs = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %14, i32 0, i32 6, !dbg !12426
  %15 = load i32, i32* %elem, align 4, !dbg !12427
  %idxprom3 = sext i32 %15 to i64, !dbg !12425
  %arrayidx4 = getelementptr [32 x %struct.sk_buff*], [32 x %struct.sk_buff*]* %tx_skbs, i64 0, i64 %idxprom3, !dbg !12425
  %16 = load %struct.sk_buff*, %struct.sk_buff** %arrayidx4, align 8, !dbg !12425
  store %struct.sk_buff* %16, %struct.sk_buff** %skb, align 8, !dbg !12428
  %17 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !12429
  %call5 = call i8* @skb_end_pointer(%struct.sk_buff* %17) #12, !dbg !12429
  %18 = bitcast i8* %call5 to %struct.skb_shared_info*, !dbg !12431
  %nr_frags = getelementptr inbounds %struct.skb_shared_info, %struct.skb_shared_info* %18, i32 0, i32 2, !dbg !12431
  %19 = load i8, i8* %nr_frags, align 2, !dbg !12431
  %tobool6 = icmp ne i8 %19, 0, !dbg !12429
  br i1 %tobool6, label %if.then7, label %if.end19, !dbg !12432

if.then7:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata i32* %last, metadata !12433, metadata !DIExpression()), !dbg !12435
  %20 = load i32, i32* %elem, align 4, !dbg !12436
  %21 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !12437
  %call8 = call i8* @skb_end_pointer(%struct.sk_buff* %21) #12, !dbg !12437
  %22 = bitcast i8* %call8 to %struct.skb_shared_info*, !dbg !12438
  %nr_frags9 = getelementptr inbounds %struct.skb_shared_info, %struct.skb_shared_info* %22, i32 0, i32 2, !dbg !12438
  %23 = load i8, i8* %nr_frags9, align 2, !dbg !12438
  %conv = zext i8 %23 to i32, !dbg !12437
  %add = add i32 %20, %conv, !dbg !12439
  store i32 %add, i32* %last, align 4, !dbg !12440
  %24 = load i32, i32* %last, align 4, !dbg !12441
  %and10 = and i32 %24, 31, !dbg !12441
  store i32 %and10, i32* %last, align 4, !dbg !12441
  %25 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !12442
  %26 = load %struct.happy_meal_txd*, %struct.happy_meal_txd** %txbase, align 8, !dbg !12443
  %27 = load i32, i32* %last, align 4, !dbg !12444
  %idxprom11 = sext i32 %27 to i64, !dbg !12443
  %arrayidx12 = getelementptr %struct.happy_meal_txd, %struct.happy_meal_txd* %26, i64 %idxprom11, !dbg !12443
  %tx_flags13 = getelementptr inbounds %struct.happy_meal_txd, %struct.happy_meal_txd* %arrayidx12, i32 0, i32 0, !dbg !12445
  %call14 = call i32 @hme_read_desc32(%struct.happy_meal* %25, i32* %tx_flags13) #12, !dbg !12446
  store i32 %call14, i32* %flags, align 4, !dbg !12447
  %28 = load i32, i32* %flags, align 4, !dbg !12448
  %and15 = and i32 %28, -2147483648, !dbg !12450
  %tobool16 = icmp ne i32 %and15, 0, !dbg !12450
  br i1 %tobool16, label %if.then17, label %if.end18, !dbg !12451

if.then17:                                        ; preds = %if.then7
  br label %while.end, !dbg !12452

if.end18:                                         ; preds = %if.then7
  br label %if.end19, !dbg !12453

if.end19:                                         ; preds = %if.end18, %if.end
  %29 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !12454
  %tx_skbs20 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %29, i32 0, i32 6, !dbg !12455
  %30 = load i32, i32* %elem, align 4, !dbg !12456
  %idxprom21 = sext i32 %30 to i64, !dbg !12454
  %arrayidx22 = getelementptr [32 x %struct.sk_buff*], [32 x %struct.sk_buff*]* %tx_skbs20, i64 0, i64 %idxprom21, !dbg !12454
  store %struct.sk_buff* null, %struct.sk_buff** %arrayidx22, align 8, !dbg !12457
  %31 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !12458
  %len = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %31, i32 0, i32 5, !dbg !12459
  %32 = load i32, i32* %len, align 8, !dbg !12459
  %conv23 = zext i32 %32 to i64, !dbg !12458
  %33 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !12460
  %stats = getelementptr inbounds %struct.net_device, %struct.net_device* %33, i32 0, i32 24, !dbg !12461
  %tx_bytes = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %stats, i32 0, i32 3, !dbg !12462
  %34 = load i64, i64* %tx_bytes, align 8, !dbg !12463
  %add24 = add i64 %34, %conv23, !dbg !12463
  store i64 %add24, i64* %tx_bytes, align 8, !dbg !12463
  store i32 0, i32* %frag, align 4, !dbg !12464
  br label %for.cond, !dbg !12466

for.cond:                                         ; preds = %for.inc, %if.end19
  %35 = load i32, i32* %frag, align 4, !dbg !12467
  %36 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !12469
  %call25 = call i8* @skb_end_pointer(%struct.sk_buff* %36) #12, !dbg !12469
  %37 = bitcast i8* %call25 to %struct.skb_shared_info*, !dbg !12470
  %nr_frags26 = getelementptr inbounds %struct.skb_shared_info, %struct.skb_shared_info* %37, i32 0, i32 2, !dbg !12470
  %38 = load i8, i8* %nr_frags26, align 2, !dbg !12470
  %conv27 = zext i8 %38 to i32, !dbg !12469
  %cmp28 = icmp sle i32 %35, %conv27, !dbg !12471
  br i1 %cmp28, label %for.body, label %for.end, !dbg !12472

for.body:                                         ; preds = %for.cond
  %39 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !12473
  %40 = load %struct.happy_meal_txd*, %struct.happy_meal_txd** %this, align 8, !dbg !12475
  %tx_addr = getelementptr inbounds %struct.happy_meal_txd, %struct.happy_meal_txd* %40, i32 0, i32 1, !dbg !12476
  %call30 = call i32 @hme_read_desc32(%struct.happy_meal* %39, i32* %tx_addr) #12, !dbg !12477
  store i32 %call30, i32* %dma_addr, align 4, !dbg !12478
  %41 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !12479
  %42 = load %struct.happy_meal_txd*, %struct.happy_meal_txd** %this, align 8, !dbg !12480
  %tx_flags31 = getelementptr inbounds %struct.happy_meal_txd, %struct.happy_meal_txd* %42, i32 0, i32 0, !dbg !12481
  %call32 = call i32 @hme_read_desc32(%struct.happy_meal* %41, i32* %tx_flags31) #12, !dbg !12482
  store i32 %call32, i32* %dma_len, align 4, !dbg !12483
  %43 = load i32, i32* %dma_len, align 4, !dbg !12484
  %and33 = and i32 %43, 16383, !dbg !12484
  store i32 %and33, i32* %dma_len, align 4, !dbg !12484
  %44 = load i32, i32* %frag, align 4, !dbg !12485
  %tobool34 = icmp ne i32 %44, 0, !dbg !12485
  br i1 %tobool34, label %if.else, label %if.then35, !dbg !12487

if.then35:                                        ; preds = %for.body
  %45 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !12488
  %dma_dev = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %45, i32 0, i32 3, !dbg !12488
  %46 = load %struct.device*, %struct.device** %dma_dev, align 8, !dbg !12488
  %47 = load i32, i32* %dma_addr, align 4, !dbg !12488
  %conv36 = zext i32 %47 to i64, !dbg !12488
  %48 = load i32, i32* %dma_len, align 4, !dbg !12488
  %conv37 = zext i32 %48 to i64, !dbg !12488
  call void @dma_unmap_single_attrs(%struct.device* %46, i64 %conv36, i64 %conv37, i32 1, i64 0) #12, !dbg !12488
  br label %if.end41, !dbg !12488

if.else:                                          ; preds = %for.body
  %49 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !12489
  %dma_dev38 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %49, i32 0, i32 3, !dbg !12489
  %50 = load %struct.device*, %struct.device** %dma_dev38, align 8, !dbg !12489
  %51 = load i32, i32* %dma_addr, align 4, !dbg !12489
  %conv39 = zext i32 %51 to i64, !dbg !12489
  %52 = load i32, i32* %dma_len, align 4, !dbg !12489
  %conv40 = zext i32 %52 to i64, !dbg !12489
  call void @dma_unmap_page_attrs(%struct.device* %50, i64 %conv39, i64 %conv40, i32 1, i64 0) #12, !dbg !12489
  br label %if.end41

if.end41:                                         ; preds = %if.else, %if.then35
  %53 = load i32, i32* %elem, align 4, !dbg !12490
  %add42 = add i32 %53, 1, !dbg !12490
  %and43 = and i32 %add42, 31, !dbg !12490
  store i32 %and43, i32* %elem, align 4, !dbg !12491
  %54 = load %struct.happy_meal_txd*, %struct.happy_meal_txd** %txbase, align 8, !dbg !12492
  %55 = load i32, i32* %elem, align 4, !dbg !12493
  %idxprom44 = sext i32 %55 to i64, !dbg !12492
  %arrayidx45 = getelementptr %struct.happy_meal_txd, %struct.happy_meal_txd* %54, i64 %idxprom44, !dbg !12492
  store %struct.happy_meal_txd* %arrayidx45, %struct.happy_meal_txd** %this, align 8, !dbg !12494
  br label %for.inc, !dbg !12495

for.inc:                                          ; preds = %if.end41
  %56 = load i32, i32* %frag, align 4, !dbg !12496
  %inc = add i32 %56, 1, !dbg !12496
  store i32 %inc, i32* %frag, align 4, !dbg !12496
  br label %for.cond, !dbg !12497, !llvm.loop !12498

for.end:                                          ; preds = %for.cond
  %57 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !12500
  call void @dev_consume_skb_irq(%struct.sk_buff* %57) #12, !dbg !12501
  %58 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !12502
  %stats46 = getelementptr inbounds %struct.net_device, %struct.net_device* %58, i32 0, i32 24, !dbg !12503
  %tx_packets = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %stats46, i32 0, i32 1, !dbg !12504
  %59 = load i64, i64* %tx_packets, align 8, !dbg !12505
  %inc47 = add i64 %59, 1, !dbg !12505
  store i64 %inc47, i64* %tx_packets, align 8, !dbg !12505
  br label %while.cond, !dbg !12396, !llvm.loop !12506

while.end:                                        ; preds = %if.then17, %if.then, %while.cond
  %60 = load i32, i32* %elem, align 4, !dbg !12508
  %61 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !12509
  %tx_old48 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %61, i32 0, i32 10, !dbg !12510
  store i32 %60, i32* %tx_old48, align 4, !dbg !12511
  %62 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !12512
  %call49 = call zeroext i1 @netif_queue_stopped(%struct.net_device* %62) #12, !dbg !12514
  br i1 %call49, label %land.lhs.true, label %if.end66, !dbg !12515

land.lhs.true:                                    ; preds = %while.end
  %63 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !12516
  %tx_old51 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %63, i32 0, i32 10, !dbg !12516
  %64 = load i32, i32* %tx_old51, align 4, !dbg !12516
  %65 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !12516
  %tx_new52 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %65, i32 0, i32 8, !dbg !12516
  %66 = load i32, i32* %tx_new52, align 4, !dbg !12516
  %cmp53 = icmp sle i32 %64, %66, !dbg !12516
  br i1 %cmp53, label %cond.true, label %cond.false, !dbg !12516

cond.true:                                        ; preds = %land.lhs.true
  %67 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !12516
  %tx_old55 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %67, i32 0, i32 10, !dbg !12516
  %68 = load i32, i32* %tx_old55, align 4, !dbg !12516
  %add56 = add i32 %68, 31, !dbg !12516
  %69 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !12516
  %tx_new57 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %69, i32 0, i32 8, !dbg !12516
  %70 = load i32, i32* %tx_new57, align 4, !dbg !12516
  %sub = sub i32 %add56, %70, !dbg !12516
  br label %cond.end, !dbg !12516

cond.false:                                       ; preds = %land.lhs.true
  %71 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !12516
  %tx_old58 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %71, i32 0, i32 10, !dbg !12516
  %72 = load i32, i32* %tx_old58, align 4, !dbg !12516
  %73 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !12516
  %tx_new59 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %73, i32 0, i32 8, !dbg !12516
  %74 = load i32, i32* %tx_new59, align 4, !dbg !12516
  %sub60 = sub i32 %72, %74, !dbg !12516
  %sub61 = sub i32 %sub60, 1, !dbg !12516
  br label %cond.end, !dbg !12516

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %sub, %cond.true ], [ %sub61, %cond.false ], !dbg !12516
  %conv62 = sext i32 %cond to i64, !dbg !12516
  %cmp63 = icmp ugt i64 %conv62, 18, !dbg !12517
  br i1 %cmp63, label %if.then65, label %if.end66, !dbg !12518

if.then65:                                        ; preds = %cond.end
  %75 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !12519
  call void @netif_wake_queue(%struct.net_device* %75) #12, !dbg !12520
  br label %if.end66, !dbg !12520

if.end66:                                         ; preds = %if.then65, %cond.end, %while.end
  ret void, !dbg !12521
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @happy_meal_rx(%struct.happy_meal* %hp, %struct.net_device* %dev) #1 !dbg !12522 {
entry:
  %hp.addr = alloca %struct.happy_meal*, align 8
  %dev.addr = alloca %struct.net_device*, align 8
  %rxbase = alloca %struct.happy_meal_rxd*, align 8
  %this = alloca %struct.happy_meal_rxd*, align 8
  %elem = alloca i32, align 4
  %drops = alloca i32, align 4
  %flags = alloca i32, align 4
  %skb = alloca %struct.sk_buff*, align 8
  %len = alloca i32, align 4
  %csum = alloca i16, align 2
  %dma_addr = alloca i32, align 4
  %new_skb = alloca %struct.sk_buff*, align 8
  %mapping = alloca i32, align 4
  %__skb = alloca %struct.sk_buff*, align 8
  %__offset = alloca i32, align 4
  %tmp = alloca %struct.sk_buff*, align 8
  %copy_skb = alloca %struct.sk_buff*, align 8
  store %struct.happy_meal* %hp, %struct.happy_meal** %hp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.happy_meal** %hp.addr, metadata !12525, metadata !DIExpression()), !dbg !12526
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !12527, metadata !DIExpression()), !dbg !12528
  call void @llvm.dbg.declare(metadata %struct.happy_meal_rxd** %rxbase, metadata !12529, metadata !DIExpression()), !dbg !12530
  %0 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !12531
  %happy_block = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %0, i32 0, i32 1, !dbg !12532
  %1 = load %struct.hmeal_init_block*, %struct.hmeal_init_block** %happy_block, align 8, !dbg !12532
  %happy_meal_rxd = getelementptr inbounds %struct.hmeal_init_block, %struct.hmeal_init_block* %1, i32 0, i32 0, !dbg !12533
  %arrayidx = getelementptr [256 x %struct.happy_meal_rxd], [256 x %struct.happy_meal_rxd]* %happy_meal_rxd, i64 0, i64 0, !dbg !12531
  store %struct.happy_meal_rxd* %arrayidx, %struct.happy_meal_rxd** %rxbase, align 8, !dbg !12530
  call void @llvm.dbg.declare(metadata %struct.happy_meal_rxd** %this, metadata !12534, metadata !DIExpression()), !dbg !12535
  call void @llvm.dbg.declare(metadata i32* %elem, metadata !12536, metadata !DIExpression()), !dbg !12537
  %2 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !12538
  %rx_new = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %2, i32 0, i32 7, !dbg !12539
  %3 = load i32, i32* %rx_new, align 8, !dbg !12539
  store i32 %3, i32* %elem, align 4, !dbg !12537
  call void @llvm.dbg.declare(metadata i32* %drops, metadata !12540, metadata !DIExpression()), !dbg !12541
  store i32 0, i32* %drops, align 4, !dbg !12541
  call void @llvm.dbg.declare(metadata i32* %flags, metadata !12542, metadata !DIExpression()), !dbg !12543
  %4 = load %struct.happy_meal_rxd*, %struct.happy_meal_rxd** %rxbase, align 8, !dbg !12544
  %5 = load i32, i32* %elem, align 4, !dbg !12545
  %idxprom = sext i32 %5 to i64, !dbg !12544
  %arrayidx1 = getelementptr %struct.happy_meal_rxd, %struct.happy_meal_rxd* %4, i64 %idxprom, !dbg !12544
  store %struct.happy_meal_rxd* %arrayidx1, %struct.happy_meal_rxd** %this, align 8, !dbg !12546
  br label %while.cond, !dbg !12547

while.cond:                                       ; preds = %next, %entry
  %6 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !12548
  %7 = load %struct.happy_meal_rxd*, %struct.happy_meal_rxd** %this, align 8, !dbg !12549
  %rx_flags = getelementptr inbounds %struct.happy_meal_rxd, %struct.happy_meal_rxd* %7, i32 0, i32 0, !dbg !12550
  %call = call i32 @hme_read_desc32(%struct.happy_meal* %6, i32* %rx_flags) #12, !dbg !12551
  store i32 %call, i32* %flags, align 4, !dbg !12552
  %and = and i32 %call, -2147483648, !dbg !12553
  %tobool = icmp ne i32 %and, 0, !dbg !12554
  %lnot = xor i1 %tobool, true, !dbg !12554
  br i1 %lnot, label %while.body, label %while.end, !dbg !12547

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb, metadata !12555, metadata !DIExpression()), !dbg !12557
  call void @llvm.dbg.declare(metadata i32* %len, metadata !12558, metadata !DIExpression()), !dbg !12559
  %8 = load i32, i32* %flags, align 4, !dbg !12560
  %shr = lshr i32 %8, 16, !dbg !12561
  store i32 %shr, i32* %len, align 4, !dbg !12559
  call void @llvm.dbg.declare(metadata i16* %csum, metadata !12562, metadata !DIExpression()), !dbg !12563
  %9 = load i32, i32* %flags, align 4, !dbg !12564
  %and2 = and i32 %9, 65535, !dbg !12565
  %conv = trunc i32 %and2 to i16, !dbg !12564
  store i16 %conv, i16* %csum, align 2, !dbg !12563
  call void @llvm.dbg.declare(metadata i32* %dma_addr, metadata !12566, metadata !DIExpression()), !dbg !12567
  %10 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !12568
  %11 = load %struct.happy_meal_rxd*, %struct.happy_meal_rxd** %this, align 8, !dbg !12569
  %rx_addr = getelementptr inbounds %struct.happy_meal_rxd, %struct.happy_meal_rxd* %11, i32 0, i32 1, !dbg !12570
  %call3 = call i32 @hme_read_desc32(%struct.happy_meal* %10, i32* %rx_addr) #12, !dbg !12571
  store i32 %call3, i32* %dma_addr, align 4, !dbg !12567
  %12 = load i32, i32* %len, align 4, !dbg !12572
  %cmp = icmp slt i32 %12, 60, !dbg !12574
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !12575

lor.lhs.false:                                    ; preds = %while.body
  %13 = load i32, i32* %flags, align 4, !dbg !12576
  %and5 = and i32 %13, 1073741824, !dbg !12577
  %tobool6 = icmp ne i32 %and5, 0, !dbg !12577
  br i1 %tobool6, label %if.then, label %if.end24, !dbg !12578

if.then:                                          ; preds = %lor.lhs.false, %while.body
  %14 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !12579
  %stats = getelementptr inbounds %struct.net_device, %struct.net_device* %14, i32 0, i32 24, !dbg !12581
  %rx_errors = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %stats, i32 0, i32 4, !dbg !12582
  %15 = load i64, i64* %rx_errors, align 8, !dbg !12583
  %inc = add i64 %15, 1, !dbg !12583
  store i64 %inc, i64* %rx_errors, align 8, !dbg !12583
  %16 = load i32, i32* %len, align 4, !dbg !12584
  %cmp7 = icmp slt i32 %16, 60, !dbg !12586
  br i1 %cmp7, label %if.then9, label %if.end, !dbg !12587

if.then9:                                         ; preds = %if.then
  %17 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !12588
  %stats10 = getelementptr inbounds %struct.net_device, %struct.net_device* %17, i32 0, i32 24, !dbg !12589
  %rx_length_errors = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %stats10, i32 0, i32 10, !dbg !12590
  %18 = load i64, i64* %rx_length_errors, align 8, !dbg !12591
  %inc11 = add i64 %18, 1, !dbg !12591
  store i64 %inc11, i64* %rx_length_errors, align 8, !dbg !12591
  br label %if.end, !dbg !12588

if.end:                                           ; preds = %if.then9, %if.then
  %19 = load i32, i32* %len, align 4, !dbg !12592
  %and12 = and i32 %19, 16384, !dbg !12594
  %tobool13 = icmp ne i32 %and12, 0, !dbg !12594
  br i1 %tobool13, label %if.then14, label %if.end19, !dbg !12595

if.then14:                                        ; preds = %if.end
  %20 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !12596
  %stats15 = getelementptr inbounds %struct.net_device, %struct.net_device* %20, i32 0, i32 24, !dbg !12598
  %rx_over_errors = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %stats15, i32 0, i32 11, !dbg !12599
  %21 = load i64, i64* %rx_over_errors, align 8, !dbg !12600
  %inc16 = add i64 %21, 1, !dbg !12600
  store i64 %inc16, i64* %rx_over_errors, align 8, !dbg !12600
  %22 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !12601
  %stats17 = getelementptr inbounds %struct.net_device, %struct.net_device* %22, i32 0, i32 24, !dbg !12602
  %rx_fifo_errors = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %stats17, i32 0, i32 14, !dbg !12603
  %23 = load i64, i64* %rx_fifo_errors, align 8, !dbg !12604
  %inc18 = add i64 %23, 1, !dbg !12604
  store i64 %inc18, i64* %rx_fifo_errors, align 8, !dbg !12604
  br label %if.end19, !dbg !12605

if.end19:                                         ; preds = %if.then14, %if.end
  br label %drop_it, !dbg !12606

drop_it:                                          ; preds = %if.then73, %if.then57, %if.then42, %if.end19
  call void @llvm.dbg.label(metadata !12607), !dbg !12608
  %24 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !12609
  %stats20 = getelementptr inbounds %struct.net_device, %struct.net_device* %24, i32 0, i32 24, !dbg !12610
  %rx_dropped = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %stats20, i32 0, i32 6, !dbg !12611
  %25 = load i64, i64* %rx_dropped, align 8, !dbg !12612
  %inc21 = add i64 %25, 1, !dbg !12612
  store i64 %inc21, i64* %rx_dropped, align 8, !dbg !12612
  br label %do.body, !dbg !12613

do.body:                                          ; preds = %drop_it
  %26 = load i32, i32* %dma_addr, align 4, !dbg !12614
  %27 = load %struct.happy_meal_rxd*, %struct.happy_meal_rxd** %this, align 8, !dbg !12614
  %rx_addr22 = getelementptr inbounds %struct.happy_meal_rxd, %struct.happy_meal_rxd* %27, i32 0, i32 1, !dbg !12614
  store i32 %26, i32* %rx_addr22, align 4, !dbg !12614
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #11, !dbg !12614, !srcloc !12616
  %28 = load %struct.happy_meal_rxd*, %struct.happy_meal_rxd** %this, align 8, !dbg !12614
  %rx_flags23 = getelementptr inbounds %struct.happy_meal_rxd, %struct.happy_meal_rxd* %28, i32 0, i32 0, !dbg !12614
  store i32 -2041970688, i32* %rx_flags23, align 4, !dbg !12614
  br label %do.end, !dbg !12614

do.end:                                           ; preds = %do.body
  br label %next, !dbg !12617

if.end24:                                         ; preds = %lor.lhs.false
  %29 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !12618
  %rx_skbs = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %29, i32 0, i32 5, !dbg !12619
  %30 = load i32, i32* %elem, align 4, !dbg !12620
  %idxprom25 = sext i32 %30 to i64, !dbg !12618
  %arrayidx26 = getelementptr [32 x %struct.sk_buff*], [32 x %struct.sk_buff*]* %rx_skbs, i64 0, i64 %idxprom25, !dbg !12618
  %31 = load %struct.sk_buff*, %struct.sk_buff** %arrayidx26, align 8, !dbg !12618
  store %struct.sk_buff* %31, %struct.sk_buff** %skb, align 8, !dbg !12621
  %32 = load i32, i32* %len, align 4, !dbg !12622
  %cmp27 = icmp sgt i32 %32, 256, !dbg !12624
  br i1 %cmp27, label %if.then29, label %if.else, !dbg !12625

if.then29:                                        ; preds = %if.end24
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %new_skb, metadata !12626, metadata !DIExpression()), !dbg !12628
  call void @llvm.dbg.declare(metadata i32* %mapping, metadata !12629, metadata !DIExpression()), !dbg !12630
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %__skb, metadata !12631, metadata !DIExpression()), !dbg !12633
  %call30 = call %struct.sk_buff* @alloc_skb(i32 1676, i32 2592) #12, !dbg !12633
  store %struct.sk_buff* %call30, %struct.sk_buff** %__skb, align 8, !dbg !12633
  %33 = load %struct.sk_buff*, %struct.sk_buff** %__skb, align 8, !dbg !12634
  %tobool31 = icmp ne %struct.sk_buff* %33, null, !dbg !12634
  br i1 %tobool31, label %if.then32, label %if.end39, !dbg !12633

if.then32:                                        ; preds = %if.then29
  call void @llvm.dbg.declare(metadata i32* %__offset, metadata !12636, metadata !DIExpression()), !dbg !12638
  %34 = load %struct.sk_buff*, %struct.sk_buff** %__skb, align 8, !dbg !12638
  %data = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %34, i32 0, i32 37, !dbg !12638
  %35 = load i8*, i8** %data, align 8, !dbg !12638
  %36 = ptrtoint i8* %35 to i64, !dbg !12638
  %add = add i64 %36, 63, !dbg !12638
  %and33 = and i64 %add, -64, !dbg !12638
  %37 = load %struct.sk_buff*, %struct.sk_buff** %__skb, align 8, !dbg !12638
  %data34 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %37, i32 0, i32 37, !dbg !12638
  %38 = load i8*, i8** %data34, align 8, !dbg !12638
  %39 = ptrtoint i8* %38 to i64, !dbg !12638
  %sub = sub i64 %and33, %39, !dbg !12638
  %conv35 = trunc i64 %sub to i32, !dbg !12638
  store i32 %conv35, i32* %__offset, align 4, !dbg !12638
  %40 = load i32, i32* %__offset, align 4, !dbg !12639
  %tobool36 = icmp ne i32 %40, 0, !dbg !12639
  br i1 %tobool36, label %if.then37, label %if.end38, !dbg !12638

if.then37:                                        ; preds = %if.then32
  %41 = load %struct.sk_buff*, %struct.sk_buff** %__skb, align 8, !dbg !12639
  %42 = load i32, i32* %__offset, align 4, !dbg !12639
  call void @skb_reserve(%struct.sk_buff* %41, i32 %42) #12, !dbg !12639
  br label %if.end38, !dbg !12639

if.end38:                                         ; preds = %if.then37, %if.then32
  br label %if.end39, !dbg !12638

if.end39:                                         ; preds = %if.end38, %if.then29
  %43 = load %struct.sk_buff*, %struct.sk_buff** %__skb, align 8, !dbg !12633
  store %struct.sk_buff* %43, %struct.sk_buff** %tmp, align 8, !dbg !12634
  %44 = load %struct.sk_buff*, %struct.sk_buff** %tmp, align 8, !dbg !12633
  store %struct.sk_buff* %44, %struct.sk_buff** %new_skb, align 8, !dbg !12641
  %45 = load %struct.sk_buff*, %struct.sk_buff** %new_skb, align 8, !dbg !12642
  %cmp40 = icmp eq %struct.sk_buff* %45, null, !dbg !12644
  br i1 %cmp40, label %if.then42, label %if.end44, !dbg !12645

if.then42:                                        ; preds = %if.end39
  %46 = load i32, i32* %drops, align 4, !dbg !12646
  %inc43 = add i32 %46, 1, !dbg !12646
  store i32 %inc43, i32* %drops, align 4, !dbg !12646
  br label %drop_it, !dbg !12648

if.end44:                                         ; preds = %if.end39
  %47 = load %struct.sk_buff*, %struct.sk_buff** %new_skb, align 8, !dbg !12649
  %call45 = call i8* @skb_put(%struct.sk_buff* %47, i32 1520) #12, !dbg !12650
  %48 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !12651
  %dma_dev = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %48, i32 0, i32 3, !dbg !12651
  %49 = load %struct.device*, %struct.device** %dma_dev, align 8, !dbg !12651
  %50 = load %struct.sk_buff*, %struct.sk_buff** %new_skb, align 8, !dbg !12651
  %data46 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %50, i32 0, i32 37, !dbg !12651
  %51 = load i8*, i8** %data46, align 8, !dbg !12651
  %call47 = call i64 @dma_map_single_attrs(%struct.device* %49, i8* %51, i64 1612, i32 2, i64 0) #12, !dbg !12651
  %conv48 = trunc i64 %call47 to i32, !dbg !12651
  store i32 %conv48, i32* %mapping, align 4, !dbg !12652
  %52 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !12653
  %dma_dev49 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %52, i32 0, i32 3, !dbg !12653
  %53 = load %struct.device*, %struct.device** %dma_dev49, align 8, !dbg !12653
  %54 = load i32, i32* %mapping, align 4, !dbg !12653
  %conv50 = zext i32 %54 to i64, !dbg !12653
  %call51 = call i32 @dma_mapping_error(%struct.device* %53, i64 %conv50) #12, !dbg !12653
  %tobool52 = icmp ne i32 %call51, 0, !dbg !12653
  %lnot53 = xor i1 %tobool52, true, !dbg !12653
  %lnot54 = xor i1 %lnot53, true, !dbg !12653
  %lnot.ext = zext i1 %lnot54 to i32, !dbg !12653
  %conv55 = sext i32 %lnot.ext to i64, !dbg !12653
  %tobool56 = icmp ne i64 %conv55, 0, !dbg !12653
  br i1 %tobool56, label %if.then57, label %if.end59, !dbg !12655

if.then57:                                        ; preds = %if.end44
  %55 = load %struct.sk_buff*, %struct.sk_buff** %new_skb, align 8, !dbg !12656
  call void @dev_kfree_skb_any(%struct.sk_buff* %55) #12, !dbg !12658
  %56 = load i32, i32* %drops, align 4, !dbg !12659
  %inc58 = add i32 %56, 1, !dbg !12659
  store i32 %inc58, i32* %drops, align 4, !dbg !12659
  br label %drop_it, !dbg !12660

if.end59:                                         ; preds = %if.end44
  %57 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !12661
  %dma_dev60 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %57, i32 0, i32 3, !dbg !12661
  %58 = load %struct.device*, %struct.device** %dma_dev60, align 8, !dbg !12661
  %59 = load i32, i32* %dma_addr, align 4, !dbg !12661
  %conv61 = zext i32 %59 to i64, !dbg !12661
  call void @dma_unmap_single_attrs(%struct.device* %58, i64 %conv61, i64 1612, i32 2, i64 0) #12, !dbg !12661
  %60 = load %struct.sk_buff*, %struct.sk_buff** %new_skb, align 8, !dbg !12662
  %61 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !12663
  %rx_skbs62 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %61, i32 0, i32 5, !dbg !12664
  %62 = load i32, i32* %elem, align 4, !dbg !12665
  %idxprom63 = sext i32 %62 to i64, !dbg !12663
  %arrayidx64 = getelementptr [32 x %struct.sk_buff*], [32 x %struct.sk_buff*]* %rx_skbs62, i64 0, i64 %idxprom63, !dbg !12663
  store %struct.sk_buff* %60, %struct.sk_buff** %arrayidx64, align 8, !dbg !12666
  br label %do.body65, !dbg !12667

do.body65:                                        ; preds = %if.end59
  %63 = load i32, i32* %mapping, align 4, !dbg !12668
  %64 = load %struct.happy_meal_rxd*, %struct.happy_meal_rxd** %this, align 8, !dbg !12668
  %rx_addr66 = getelementptr inbounds %struct.happy_meal_rxd, %struct.happy_meal_rxd* %64, i32 0, i32 1, !dbg !12668
  store i32 %63, i32* %rx_addr66, align 4, !dbg !12668
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #11, !dbg !12668, !srcloc !12670
  %65 = load %struct.happy_meal_rxd*, %struct.happy_meal_rxd** %this, align 8, !dbg !12668
  %rx_flags67 = getelementptr inbounds %struct.happy_meal_rxd, %struct.happy_meal_rxd* %65, i32 0, i32 0, !dbg !12668
  store i32 -2041970688, i32* %rx_flags67, align 4, !dbg !12668
  br label %do.end68, !dbg !12668

do.end68:                                         ; preds = %do.body65
  %66 = load %struct.sk_buff*, %struct.sk_buff** %new_skb, align 8, !dbg !12671
  call void @skb_reserve(%struct.sk_buff* %66, i32 2) #12, !dbg !12672
  %67 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !12673
  %68 = load i32, i32* %len, align 4, !dbg !12674
  call void @skb_trim(%struct.sk_buff* %67, i32 %68) #12, !dbg !12675
  br label %if.end88, !dbg !12676

if.else:                                          ; preds = %if.end24
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %copy_skb, metadata !12677, metadata !DIExpression()), !dbg !12679
  %69 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !12680
  %70 = load i32, i32* %len, align 4, !dbg !12681
  %add69 = add i32 %70, 2, !dbg !12682
  %call70 = call %struct.sk_buff* @netdev_alloc_skb(%struct.net_device* %69, i32 %add69) #12, !dbg !12683
  store %struct.sk_buff* %call70, %struct.sk_buff** %copy_skb, align 8, !dbg !12679
  %71 = load %struct.sk_buff*, %struct.sk_buff** %copy_skb, align 8, !dbg !12684
  %cmp71 = icmp eq %struct.sk_buff* %71, null, !dbg !12686
  br i1 %cmp71, label %if.then73, label %if.end75, !dbg !12687

if.then73:                                        ; preds = %if.else
  %72 = load i32, i32* %drops, align 4, !dbg !12688
  %inc74 = add i32 %72, 1, !dbg !12688
  store i32 %inc74, i32* %drops, align 4, !dbg !12688
  br label %drop_it, !dbg !12690

if.end75:                                         ; preds = %if.else
  %73 = load %struct.sk_buff*, %struct.sk_buff** %copy_skb, align 8, !dbg !12691
  call void @skb_reserve(%struct.sk_buff* %73, i32 2) #12, !dbg !12692
  %74 = load %struct.sk_buff*, %struct.sk_buff** %copy_skb, align 8, !dbg !12693
  %75 = load i32, i32* %len, align 4, !dbg !12694
  %call76 = call i8* @skb_put(%struct.sk_buff* %74, i32 %75) #12, !dbg !12695
  %76 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !12696
  %dma_dev77 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %76, i32 0, i32 3, !dbg !12697
  %77 = load %struct.device*, %struct.device** %dma_dev77, align 8, !dbg !12697
  %78 = load i32, i32* %dma_addr, align 4, !dbg !12698
  %conv78 = zext i32 %78 to i64, !dbg !12698
  %79 = load i32, i32* %len, align 4, !dbg !12699
  %conv79 = sext i32 %79 to i64, !dbg !12699
  call void @dma_sync_single_for_cpu(%struct.device* %77, i64 %conv78, i64 %conv79, i32 2) #12, !dbg !12700
  %80 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !12701
  %81 = load %struct.sk_buff*, %struct.sk_buff** %copy_skb, align 8, !dbg !12702
  %data80 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %81, i32 0, i32 37, !dbg !12703
  %82 = load i8*, i8** %data80, align 8, !dbg !12703
  %83 = load i32, i32* %len, align 4, !dbg !12704
  call void @skb_copy_from_linear_data(%struct.sk_buff* %80, i8* %82, i32 %83) #12, !dbg !12705
  %84 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !12706
  %dma_dev81 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %84, i32 0, i32 3, !dbg !12707
  %85 = load %struct.device*, %struct.device** %dma_dev81, align 8, !dbg !12707
  %86 = load i32, i32* %dma_addr, align 4, !dbg !12708
  %conv82 = zext i32 %86 to i64, !dbg !12708
  %87 = load i32, i32* %len, align 4, !dbg !12709
  %conv83 = sext i32 %87 to i64, !dbg !12709
  call void @dma_sync_single_for_device(%struct.device* %85, i64 %conv82, i64 %conv83, i32 2) #12, !dbg !12710
  br label %do.body84, !dbg !12711

do.body84:                                        ; preds = %if.end75
  %88 = load i32, i32* %dma_addr, align 4, !dbg !12712
  %89 = load %struct.happy_meal_rxd*, %struct.happy_meal_rxd** %this, align 8, !dbg !12712
  %rx_addr85 = getelementptr inbounds %struct.happy_meal_rxd, %struct.happy_meal_rxd* %89, i32 0, i32 1, !dbg !12712
  store i32 %88, i32* %rx_addr85, align 4, !dbg !12712
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #11, !dbg !12712, !srcloc !12714
  %90 = load %struct.happy_meal_rxd*, %struct.happy_meal_rxd** %this, align 8, !dbg !12712
  %rx_flags86 = getelementptr inbounds %struct.happy_meal_rxd, %struct.happy_meal_rxd* %90, i32 0, i32 0, !dbg !12712
  store i32 -2041970688, i32* %rx_flags86, align 4, !dbg !12712
  br label %do.end87, !dbg !12712

do.end87:                                         ; preds = %do.body84
  %91 = load %struct.sk_buff*, %struct.sk_buff** %copy_skb, align 8, !dbg !12715
  store %struct.sk_buff* %91, %struct.sk_buff** %skb, align 8, !dbg !12716
  br label %if.end88

if.end88:                                         ; preds = %do.end87, %do.end68
  %92 = load i16, i16* %csum, align 2, !dbg !12717
  %93 = call i1 @llvm.is.constant.i16(i16 %92), !dbg !12717
  br i1 %93, label %cond.true, label %cond.false, !dbg !12717

cond.true:                                        ; preds = %if.end88
  %94 = load i16, i16* %csum, align 2, !dbg !12717
  %conv89 = zext i16 %94 to i32, !dbg !12717
  %and90 = and i32 %conv89, 255, !dbg !12717
  %shl = shl i32 %and90, 8, !dbg !12717
  %95 = load i16, i16* %csum, align 2, !dbg !12717
  %conv91 = zext i16 %95 to i32, !dbg !12717
  %and92 = and i32 %conv91, 65280, !dbg !12717
  %shr93 = ashr i32 %and92, 8, !dbg !12717
  %or = or i32 %shl, %shr93, !dbg !12717
  %conv94 = trunc i32 %or to i16, !dbg !12717
  %conv95 = zext i16 %conv94 to i32, !dbg !12717
  br label %cond.end, !dbg !12717

cond.false:                                       ; preds = %if.end88
  %96 = load i16, i16* %csum, align 2, !dbg !12717
  %call96 = call zeroext i16 @__fswab16(i16 zeroext %96) #15, !dbg !12717
  %conv97 = zext i16 %call96 to i32, !dbg !12717
  br label %cond.end, !dbg !12717

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv95, %cond.true ], [ %conv97, %cond.false ], !dbg !12717
  %conv98 = trunc i32 %cond to i16, !dbg !12717
  %conv99 = zext i16 %conv98 to i32, !dbg !12718
  %neg = xor i32 %conv99, -1, !dbg !12719
  %conv100 = trunc i32 %neg to i16, !dbg !12719
  %call101 = call i32 @csum_unfold(i16 zeroext %conv100) #12, !dbg !12720
  %97 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !12721
  %98 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %97, i32 0, i32 17, !dbg !12722
  %csum102 = bitcast %union.anon.47* %98 to i32*, !dbg !12722
  store i32 %call101, i32* %csum102, align 4, !dbg !12723
  %99 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !12724
  %ip_summed = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %99, i32 0, i32 14, !dbg !12725
  %bf.load = load i16, i16* %ip_summed, align 8, !dbg !12726
  %bf.clear = and i16 %bf.load, -97, !dbg !12726
  %bf.set = or i16 %bf.clear, 64, !dbg !12726
  store i16 %bf.set, i16* %ip_summed, align 8, !dbg !12726
  %100 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !12727
  %101 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !12728
  %call103 = call zeroext i16 @eth_type_trans(%struct.sk_buff* %100, %struct.net_device* %101) #12, !dbg !12729
  %102 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !12730
  %protocol = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %102, i32 0, i32 29, !dbg !12731
  store i16 %call103, i16* %protocol, align 8, !dbg !12732
  %103 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !12733
  %call104 = call i32 @netif_rx(%struct.sk_buff* %103) #12, !dbg !12734
  %104 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !12735
  %stats105 = getelementptr inbounds %struct.net_device, %struct.net_device* %104, i32 0, i32 24, !dbg !12736
  %rx_packets = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %stats105, i32 0, i32 0, !dbg !12737
  %105 = load i64, i64* %rx_packets, align 8, !dbg !12738
  %inc106 = add i64 %105, 1, !dbg !12738
  store i64 %inc106, i64* %rx_packets, align 8, !dbg !12738
  %106 = load i32, i32* %len, align 4, !dbg !12739
  %conv107 = sext i32 %106 to i64, !dbg !12739
  %107 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !12740
  %stats108 = getelementptr inbounds %struct.net_device, %struct.net_device* %107, i32 0, i32 24, !dbg !12741
  %rx_bytes = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %stats108, i32 0, i32 2, !dbg !12742
  %108 = load i64, i64* %rx_bytes, align 8, !dbg !12743
  %add109 = add i64 %108, %conv107, !dbg !12743
  store i64 %add109, i64* %rx_bytes, align 8, !dbg !12743
  br label %next, !dbg !12740

next:                                             ; preds = %cond.end, %do.end
  call void @llvm.dbg.label(metadata !12744), !dbg !12745
  %109 = load i32, i32* %elem, align 4, !dbg !12746
  %add110 = add i32 %109, 1, !dbg !12746
  %and111 = and i32 %add110, 31, !dbg !12746
  store i32 %and111, i32* %elem, align 4, !dbg !12747
  %110 = load %struct.happy_meal_rxd*, %struct.happy_meal_rxd** %rxbase, align 8, !dbg !12748
  %111 = load i32, i32* %elem, align 4, !dbg !12749
  %idxprom112 = sext i32 %111 to i64, !dbg !12748
  %arrayidx113 = getelementptr %struct.happy_meal_rxd, %struct.happy_meal_rxd* %110, i64 %idxprom112, !dbg !12748
  store %struct.happy_meal_rxd* %arrayidx113, %struct.happy_meal_rxd** %this, align 8, !dbg !12750
  br label %while.cond, !dbg !12547, !llvm.loop !12751

while.end:                                        ; preds = %while.cond
  %112 = load i32, i32* %elem, align 4, !dbg !12753
  %113 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !12754
  %rx_new114 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %113, i32 0, i32 7, !dbg !12755
  store i32 %112, i32* %rx_new114, align 8, !dbg !12756
  %114 = load i32, i32* %drops, align 4, !dbg !12757
  %tobool115 = icmp ne i32 %114, 0, !dbg !12757
  br i1 %tobool115, label %if.then116, label %if.end119, !dbg !12759

if.then116:                                       ; preds = %while.end
  %115 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !12760
  %dev117 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %115, i32 0, i32 41, !dbg !12761
  %116 = load %struct.net_device*, %struct.net_device** %dev117, align 8, !dbg !12761
  %name = getelementptr inbounds %struct.net_device, %struct.net_device* %116, i32 0, i32 0, !dbg !12762
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %name, i64 0, i64 0, !dbg !12760
  %call118 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.77, i64 0, i64 0), i8* %arraydecay) #13, !dbg !12763
  br label %if.end119, !dbg !12763

if.end119:                                        ; preds = %if.then116, %while.end
  ret void, !dbg !12764
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dev_consume_skb_irq(%struct.sk_buff* %skb) #1 !dbg !12765 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !12766, metadata !DIExpression()), !dbg !12767
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !12768
  call void @__dev_kfree_skb_irq(%struct.sk_buff* %0, i32 0) #12, !dbg !12769
  ret void, !dbg !12770
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @netif_queue_stopped(%struct.net_device* %dev) #1 !dbg !12771 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !12774, metadata !DIExpression()), !dbg !12775
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !12776
  %call = call %struct.netdev_queue* @netdev_get_tx_queue(%struct.net_device* %0, i32 0) #12, !dbg !12777
  %call1 = call zeroext i1 @netif_tx_queue_stopped(%struct.netdev_queue* %call) #12, !dbg !12778
  ret i1 %call1, !dbg !12779
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @netif_wake_queue(%struct.net_device* %dev) #1 !dbg !12780 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !12781, metadata !DIExpression()), !dbg !12782
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !12783
  %call = call %struct.netdev_queue* @netdev_get_tx_queue(%struct.net_device* %0, i32 0) #12, !dbg !12784
  call void @netif_tx_wake_queue(%struct.netdev_queue* %call) #12, !dbg !12785
  ret void, !dbg !12786
}

; Function Attrs: noredzone
declare dso_local void @__dev_kfree_skb_irq(%struct.sk_buff*, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @netif_tx_queue_stopped(%struct.netdev_queue* %dev_queue) #1 !dbg !12787 {
entry:
  %dev_queue.addr = alloca %struct.netdev_queue*, align 8
  store %struct.netdev_queue* %dev_queue, %struct.netdev_queue** %dev_queue.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.netdev_queue** %dev_queue.addr, metadata !12792, metadata !DIExpression()), !dbg !12793
  %0 = load %struct.netdev_queue*, %struct.netdev_queue** %dev_queue.addr, align 8, !dbg !12794
  %state = getelementptr inbounds %struct.netdev_queue, %struct.netdev_queue* %0, i32 0, i32 10, !dbg !12795
  %call = call zeroext i1 @test_bit(i64 0, i64* %state) #12, !dbg !12796
  ret i1 %call, !dbg !12797
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.netdev_queue* @netdev_get_tx_queue(%struct.net_device* %dev, i32 %index) #1 !dbg !12798 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %index.addr = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !12801, metadata !DIExpression()), !dbg !12802
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !12803, metadata !DIExpression()), !dbg !12804
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !12805
  %_tx = getelementptr inbounds %struct.net_device, %struct.net_device* %0, i32 0, i32 86, !dbg !12806
  %1 = load %struct.netdev_queue*, %struct.netdev_queue** %_tx, align 8, !dbg !12806
  %2 = load i32, i32* %index.addr, align 4, !dbg !12807
  %idxprom = zext i32 %2 to i64, !dbg !12805
  %arrayidx = getelementptr %struct.netdev_queue, %struct.netdev_queue* %1, i64 %idxprom, !dbg !12805
  ret %struct.netdev_queue* %arrayidx, !dbg !12808
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @test_bit(i64 %nr, i64* %addr) #1 !dbg !12809 {
entry:
  %nr.addr.i3 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i3, metadata !12816, metadata !DIExpression()), !dbg !12818
  %addr.addr.i4 = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i4, metadata !12820, metadata !DIExpression()), !dbg !12821
  %oldbit.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %oldbit.i, metadata !12822, metadata !DIExpression()), !dbg !12823
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !12824, metadata !DIExpression()), !dbg !12826
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !12828, metadata !DIExpression()), !dbg !12829
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !12830, metadata !DIExpression()), !dbg !12835
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !12837, metadata !DIExpression()), !dbg !12838
  %nr.addr = alloca i64, align 8
  %addr.addr = alloca i64*, align 8
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !12839, metadata !DIExpression()), !dbg !12840
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !12841, metadata !DIExpression()), !dbg !12842
  %0 = load i64*, i64** %addr.addr, align 8, !dbg !12843
  %1 = load i64, i64* %nr.addr, align 8, !dbg !12844
  %div = sdiv i64 %1, 64, !dbg !12844
  %add.ptr = getelementptr i64, i64* %0, i64 %div, !dbg !12845
  %2 = bitcast i64* %add.ptr to i8*, !dbg !12843
  store i8* %2, i8** %v.addr.i, align 8
  store i64 8, i64* %size.addr.i, align 8
  %3 = load i8*, i8** %v.addr.i, align 8, !dbg !12846
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !12847
  %conv.i = trunc i64 %4 to i32, !dbg !12847
  %call.i = call zeroext i1 @kasan_check_read(i8* %3, i32 %conv.i) #14, !dbg !12848
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !12849
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !12849
  call void @kcsan_check_access(i8* %5, i64 %6, i32 4) #14, !dbg !12849
  %7 = load i64, i64* %nr.addr, align 8, !dbg !12850
  %8 = call i1 @llvm.is.constant.i64(i64 %7), !dbg !12850
  br i1 %8, label %cond.true, label %cond.false, !dbg !12850

cond.true:                                        ; preds = %entry
  %9 = load i64, i64* %nr.addr, align 8, !dbg !12850
  %10 = load i64*, i64** %addr.addr, align 8, !dbg !12850
  store i64 %9, i64* %nr.addr.i, align 8
  store i64* %10, i64** %addr.addr.i, align 8
  %11 = load i64, i64* %nr.addr.i, align 8, !dbg !12851
  %and.i = and i64 %11, 63, !dbg !12852
  %shl.i = shl i64 1, %and.i, !dbg !12853
  %12 = load i64*, i64** %addr.addr.i, align 8, !dbg !12854
  %13 = load i64, i64* %nr.addr.i, align 8, !dbg !12855
  %shr.i = ashr i64 %13, 6, !dbg !12856
  %arrayidx.i = getelementptr i64, i64* %12, i64 %shr.i, !dbg !12854
  %14 = load volatile i64, i64* %arrayidx.i, align 8, !dbg !12854
  %and1.i = and i64 %shl.i, %14, !dbg !12857
  %cmp.i = icmp ne i64 %and1.i, 0, !dbg !12858
  %conv = zext i1 %cmp.i to i32, !dbg !12850
  br label %cond.end, !dbg !12850

cond.false:                                       ; preds = %entry
  %15 = load i64, i64* %nr.addr, align 8, !dbg !12850
  %16 = load i64*, i64** %addr.addr, align 8, !dbg !12850
  store i64 %15, i64* %nr.addr.i3, align 8
  store i64* %16, i64** %addr.addr.i4, align 8
  %17 = load i64*, i64** %addr.addr.i4, align 8, !dbg !12859
  %18 = load i64, i64* %nr.addr.i3, align 8, !dbg !12860
  %19 = call i8 asm sideeffect " btq  $2,$1\0A\09/* output condition code c*/\0A", "={@ccc},*m,Ir,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %17, i64 %18) #11, !dbg !12861, !srcloc !12862
  store i8 %19, i8* %oldbit.i, align 1, !dbg !12861
  %20 = load i8, i8* %oldbit.i, align 1, !dbg !12863
  %tobool.i = trunc i8 %20 to i1, !dbg !12863
  %conv2 = zext i1 %tobool.i to i32, !dbg !12850
  br label %cond.end, !dbg !12850

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv, %cond.true ], [ %conv2, %cond.false ], !dbg !12850
  %tobool = icmp ne i32 %cond, 0, !dbg !12850
  ret i1 %tobool, !dbg !12864
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @kasan_check_read(i8* %p, i32 %size) #1 !dbg !12865 {
entry:
  %p.addr = alloca i8*, align 8
  %size.addr = alloca i32, align 4
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !12869, metadata !DIExpression()), !dbg !12870
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !12871, metadata !DIExpression()), !dbg !12872
  ret i1 true, !dbg !12873
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @kcsan_check_access(i8* %ptr, i64 %size, i32 %type) #1 !dbg !12874 {
entry:
  %ptr.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %type.addr = alloca i32, align 4
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !12878, metadata !DIExpression()), !dbg !12879
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !12880, metadata !DIExpression()), !dbg !12881
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !12882, metadata !DIExpression()), !dbg !12883
  ret void, !dbg !12884
}

; Function Attrs: noredzone
declare dso_local void @netif_tx_wake_queue(%struct.netdev_queue*) #2

; Function Attrs: noredzone
declare dso_local void @skb_trim(%struct.sk_buff*, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.sk_buff* @netdev_alloc_skb(%struct.net_device* %dev, i32 %length) #1 !dbg !12885 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %length.addr = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !12888, metadata !DIExpression()), !dbg !12889
  store i32 %length, i32* %length.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %length.addr, metadata !12890, metadata !DIExpression()), !dbg !12891
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !12892
  %1 = load i32, i32* %length.addr, align 4, !dbg !12893
  %call = call %struct.sk_buff* @__netdev_alloc_skb(%struct.net_device* %0, i32 %1, i32 2592) #12, !dbg !12894
  ret %struct.sk_buff* %call, !dbg !12895
}

; Function Attrs: noredzone
declare dso_local void @dma_sync_single_for_cpu(%struct.device*, i64, i64, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @skb_copy_from_linear_data(%struct.sk_buff* %skb, i8* %to, i32 %len) #1 !dbg !12896 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  %to.addr = alloca i8*, align 8
  %len.addr = alloca i32, align 4
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !12899, metadata !DIExpression()), !dbg !12900
  store i8* %to, i8** %to.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr, metadata !12901, metadata !DIExpression()), !dbg !12902
  store i32 %len, i32* %len.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %len.addr, metadata !12903, metadata !DIExpression()), !dbg !12904
  %0 = load i8*, i8** %to.addr, align 8, !dbg !12905
  %1 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !12906
  %data = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %1, i32 0, i32 37, !dbg !12907
  %2 = load i8*, i8** %data, align 8, !dbg !12907
  %3 = load i32, i32* %len.addr, align 4, !dbg !12908
  %conv = zext i32 %3 to i64, !dbg !12908
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %0, i8* align 1 %2, i64 %conv, i1 false), !dbg !12909
  ret void, !dbg !12910
}

; Function Attrs: noredzone
declare dso_local void @dma_sync_single_for_device(%struct.device*, i64, i64, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @csum_unfold(i16 zeroext %n) #1 !dbg !12911 {
entry:
  %n.addr = alloca i16, align 2
  store i16 %n, i16* %n.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %n.addr, metadata !12915, metadata !DIExpression()), !dbg !12916
  %0 = load i16, i16* %n.addr, align 2, !dbg !12917
  %conv = zext i16 %0 to i32, !dbg !12918
  ret i32 %conv, !dbg !12919
}

; Function Attrs: nounwind readnone willreturn
declare i1 @llvm.is.constant.i16(i16) #6

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal zeroext i16 @__fswab16(i16 zeroext %val) #8 !dbg !12920 {
entry:
  %val.addr = alloca i16, align 2
  store i16 %val, i16* %val.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %val.addr, metadata !12924, metadata !DIExpression()), !dbg !12925
  %0 = load i16, i16* %val.addr, align 2, !dbg !12926
  %conv = zext i16 %0 to i32, !dbg !12926
  %and = and i32 %conv, 255, !dbg !12926
  %shl = shl i32 %and, 8, !dbg !12926
  %1 = load i16, i16* %val.addr, align 2, !dbg !12926
  %conv1 = zext i16 %1 to i32, !dbg !12926
  %and2 = and i32 %conv1, 65280, !dbg !12926
  %shr = ashr i32 %and2, 8, !dbg !12926
  %or = or i32 %shl, %shr, !dbg !12926
  %conv3 = trunc i32 %or to i16, !dbg !12926
  ret i16 %conv3, !dbg !12927
}

; Function Attrs: noredzone
declare dso_local zeroext i16 @eth_type_trans(%struct.sk_buff*, %struct.net_device*) #2

; Function Attrs: noredzone
declare dso_local i32 @netif_rx(%struct.sk_buff*) #2

; Function Attrs: noredzone
declare dso_local %struct.sk_buff* @__netdev_alloc_skb(%struct.net_device*, i32, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @skb_checksum_start_offset(%struct.sk_buff* %skb) #1 !dbg !12928 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !12931, metadata !DIExpression()), !dbg !12932
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !12933
  %1 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %0, i32 0, i32 17, !dbg !12934
  %2 = bitcast %union.anon.47* %1 to %struct.anon.48*, !dbg !12934
  %csum_start = getelementptr inbounds %struct.anon.48, %struct.anon.48* %2, i32 0, i32 0, !dbg !12934
  %3 = load i16, i16* %csum_start, align 4, !dbg !12934
  %conv = zext i16 %3 to i32, !dbg !12933
  %4 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !12935
  %call = call i32 @skb_headroom(%struct.sk_buff* %4) #12, !dbg !12936
  %sub = sub i32 %conv, %call, !dbg !12937
  ret i32 %sub, !dbg !12938
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @netif_stop_queue(%struct.net_device* %dev) #1 !dbg !12939 {
entry:
  %dev_queue.addr.i = alloca %struct.netdev_queue*, align 8
  call void @llvm.dbg.declare(metadata %struct.netdev_queue** %dev_queue.addr.i, metadata !12940, metadata !DIExpression()), !dbg !12944
  %dev.addr = alloca %struct.net_device*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !12946, metadata !DIExpression()), !dbg !12947
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !12948
  %call = call %struct.netdev_queue* @netdev_get_tx_queue(%struct.net_device* %0, i32 0) #12, !dbg !12949
  store %struct.netdev_queue* %call, %struct.netdev_queue** %dev_queue.addr.i, align 8
  %1 = load %struct.netdev_queue*, %struct.netdev_queue** %dev_queue.addr.i, align 8, !dbg !12950
  %state.i = getelementptr inbounds %struct.netdev_queue, %struct.netdev_queue* %1, i32 0, i32 10, !dbg !12951
  call void @set_bit(i64 0, i64* %state.i) #14, !dbg !12952
  ret void, !dbg !12953
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @skb_headlen(%struct.sk_buff* %skb) #1 !dbg !12954 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !12957, metadata !DIExpression()), !dbg !12958
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !12959
  %len = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %0, i32 0, i32 5, !dbg !12960
  %1 = load i32, i32* %len, align 8, !dbg !12960
  %2 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !12961
  %data_len = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %2, i32 0, i32 6, !dbg !12962
  %3 = load i32, i32* %data_len, align 4, !dbg !12962
  %sub = sub i32 %1, %3, !dbg !12963
  ret i32 %sub, !dbg !12964
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @skb_frag_size(%struct.bio_vec* %frag) #1 !dbg !12965 {
entry:
  %frag.addr = alloca %struct.bio_vec*, align 8
  store %struct.bio_vec* %frag, %struct.bio_vec** %frag.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bio_vec** %frag.addr, metadata !12968, metadata !DIExpression()), !dbg !12969
  %0 = load %struct.bio_vec*, %struct.bio_vec** %frag.addr, align 8, !dbg !12970
  %bv_len = getelementptr inbounds %struct.bio_vec, %struct.bio_vec* %0, i32 0, i32 1, !dbg !12971
  %1 = load i32, i32* %bv_len, align 8, !dbg !12971
  ret i32 %1, !dbg !12972
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @skb_frag_dma_map(%struct.device* %dev, %struct.bio_vec* %frag, i64 %offset, i64 %size, i32 %dir) #1 !dbg !12973 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %frag.addr = alloca %struct.bio_vec*, align 8
  %offset.addr = alloca i64, align 8
  %size.addr = alloca i64, align 8
  %dir.addr = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !12976, metadata !DIExpression()), !dbg !12977
  store %struct.bio_vec* %frag, %struct.bio_vec** %frag.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bio_vec** %frag.addr, metadata !12978, metadata !DIExpression()), !dbg !12979
  store i64 %offset, i64* %offset.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %offset.addr, metadata !12980, metadata !DIExpression()), !dbg !12981
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !12982, metadata !DIExpression()), !dbg !12983
  store i32 %dir, i32* %dir.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dir.addr, metadata !12984, metadata !DIExpression()), !dbg !12985
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12986
  %1 = load %struct.bio_vec*, %struct.bio_vec** %frag.addr, align 8, !dbg !12986
  %call = call %struct.page* @skb_frag_page(%struct.bio_vec* %1) #12, !dbg !12986
  %2 = load %struct.bio_vec*, %struct.bio_vec** %frag.addr, align 8, !dbg !12986
  %call1 = call i32 @skb_frag_off(%struct.bio_vec* %2) #12, !dbg !12986
  %conv = zext i32 %call1 to i64, !dbg !12986
  %3 = load i64, i64* %offset.addr, align 8, !dbg !12986
  %add = add i64 %conv, %3, !dbg !12986
  %4 = load i64, i64* %size.addr, align 8, !dbg !12986
  %5 = load i32, i32* %dir.addr, align 4, !dbg !12986
  %call2 = call i64 @dma_map_page_attrs(%struct.device* %0, %struct.page* %call, i64 %add, i64 %4, i32 %5, i64 0) #12, !dbg !12986
  ret i64 %call2, !dbg !12987
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @unmap_partial_tx_skb(%struct.happy_meal* %hp, i32 %first_mapping, i32 %first_len, i32 %first_entry, i32 %entry1) #1 !dbg !12988 {
entry:
  %hp.addr = alloca %struct.happy_meal*, align 8
  %first_mapping.addr = alloca i32, align 4
  %first_len.addr = alloca i32, align 4
  %first_entry.addr = alloca i32, align 4
  %entry.addr = alloca i32, align 4
  %txbase = alloca %struct.happy_meal_txd*, align 8
  %this = alloca %struct.happy_meal_txd*, align 8
  %addr = alloca i32, align 4
  %len = alloca i32, align 4
  store %struct.happy_meal* %hp, %struct.happy_meal** %hp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.happy_meal** %hp.addr, metadata !12991, metadata !DIExpression()), !dbg !12992
  store i32 %first_mapping, i32* %first_mapping.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %first_mapping.addr, metadata !12993, metadata !DIExpression()), !dbg !12994
  store i32 %first_len, i32* %first_len.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %first_len.addr, metadata !12995, metadata !DIExpression()), !dbg !12996
  store i32 %first_entry, i32* %first_entry.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %first_entry.addr, metadata !12997, metadata !DIExpression()), !dbg !12998
  store i32 %entry1, i32* %entry.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %entry.addr, metadata !12999, metadata !DIExpression()), !dbg !13000
  call void @llvm.dbg.declare(metadata %struct.happy_meal_txd** %txbase, metadata !13001, metadata !DIExpression()), !dbg !13002
  %0 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !13003
  %happy_block = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %0, i32 0, i32 1, !dbg !13004
  %1 = load %struct.hmeal_init_block*, %struct.hmeal_init_block** %happy_block, align 8, !dbg !13004
  %happy_meal_txd = getelementptr inbounds %struct.hmeal_init_block, %struct.hmeal_init_block* %1, i32 0, i32 1, !dbg !13005
  %arrayidx = getelementptr [256 x %struct.happy_meal_txd], [256 x %struct.happy_meal_txd]* %happy_meal_txd, i64 0, i64 0, !dbg !13003
  store %struct.happy_meal_txd* %arrayidx, %struct.happy_meal_txd** %txbase, align 8, !dbg !13002
  %2 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !13006
  %dma_dev = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %2, i32 0, i32 3, !dbg !13006
  %3 = load %struct.device*, %struct.device** %dma_dev, align 8, !dbg !13006
  %4 = load i32, i32* %first_mapping.addr, align 4, !dbg !13006
  %conv = zext i32 %4 to i64, !dbg !13006
  %5 = load i32, i32* %first_len.addr, align 4, !dbg !13006
  %conv2 = zext i32 %5 to i64, !dbg !13006
  call void @dma_unmap_single_attrs(%struct.device* %3, i64 %conv, i64 %conv2, i32 1, i64 0) #12, !dbg !13006
  %6 = load i32, i32* %first_entry.addr, align 4, !dbg !13007
  %add = add i32 %6, 1, !dbg !13007
  %and = and i32 %add, 31, !dbg !13007
  store i32 %and, i32* %first_entry.addr, align 4, !dbg !13008
  br label %while.cond, !dbg !13009

while.cond:                                       ; preds = %while.body, %entry
  %7 = load i32, i32* %first_entry.addr, align 4, !dbg !13010
  %8 = load i32, i32* %entry.addr, align 4, !dbg !13011
  %cmp = icmp ne i32 %7, %8, !dbg !13012
  br i1 %cmp, label %while.body, label %while.end, !dbg !13009

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata %struct.happy_meal_txd** %this, metadata !13013, metadata !DIExpression()), !dbg !13015
  %9 = load %struct.happy_meal_txd*, %struct.happy_meal_txd** %txbase, align 8, !dbg !13016
  %10 = load i32, i32* %first_entry.addr, align 4, !dbg !13017
  %idxprom = zext i32 %10 to i64, !dbg !13016
  %arrayidx4 = getelementptr %struct.happy_meal_txd, %struct.happy_meal_txd* %9, i64 %idxprom, !dbg !13016
  store %struct.happy_meal_txd* %arrayidx4, %struct.happy_meal_txd** %this, align 8, !dbg !13015
  call void @llvm.dbg.declare(metadata i32* %addr, metadata !13018, metadata !DIExpression()), !dbg !13019
  call void @llvm.dbg.declare(metadata i32* %len, metadata !13020, metadata !DIExpression()), !dbg !13021
  %11 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !13022
  %12 = load %struct.happy_meal_txd*, %struct.happy_meal_txd** %this, align 8, !dbg !13023
  %tx_addr = getelementptr inbounds %struct.happy_meal_txd, %struct.happy_meal_txd* %12, i32 0, i32 1, !dbg !13024
  %call = call i32 @hme_read_desc32(%struct.happy_meal* %11, i32* %tx_addr) #12, !dbg !13025
  store i32 %call, i32* %addr, align 4, !dbg !13026
  %13 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !13027
  %14 = load %struct.happy_meal_txd*, %struct.happy_meal_txd** %this, align 8, !dbg !13028
  %tx_flags = getelementptr inbounds %struct.happy_meal_txd, %struct.happy_meal_txd* %14, i32 0, i32 0, !dbg !13029
  %call5 = call i32 @hme_read_desc32(%struct.happy_meal* %13, i32* %tx_flags) #12, !dbg !13030
  store i32 %call5, i32* %len, align 4, !dbg !13031
  %15 = load i32, i32* %len, align 4, !dbg !13032
  %and6 = and i32 %15, 16383, !dbg !13032
  store i32 %and6, i32* %len, align 4, !dbg !13032
  %16 = load %struct.happy_meal*, %struct.happy_meal** %hp.addr, align 8, !dbg !13033
  %dma_dev7 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %16, i32 0, i32 3, !dbg !13033
  %17 = load %struct.device*, %struct.device** %dma_dev7, align 8, !dbg !13033
  %18 = load i32, i32* %addr, align 4, !dbg !13033
  %conv8 = zext i32 %18 to i64, !dbg !13033
  %19 = load i32, i32* %len, align 4, !dbg !13033
  %conv9 = zext i32 %19 to i64, !dbg !13033
  call void @dma_unmap_page_attrs(%struct.device* %17, i64 %conv8, i64 %conv9, i32 1, i64 0) #12, !dbg !13033
  br label %while.cond, !dbg !13009, !llvm.loop !13034

while.end:                                        ; preds = %while.cond
  ret void, !dbg !13036
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @skb_headroom(%struct.sk_buff* %skb) #1 !dbg !13037 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !13038, metadata !DIExpression()), !dbg !13039
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !13040
  %data = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %0, i32 0, i32 37, !dbg !13041
  %1 = load i8*, i8** %data, align 8, !dbg !13041
  %2 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !13042
  %head = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %2, i32 0, i32 36, !dbg !13043
  %3 = load i8*, i8** %head, align 8, !dbg !13043
  %sub.ptr.lhs.cast = ptrtoint i8* %1 to i64, !dbg !13044
  %sub.ptr.rhs.cast = ptrtoint i8* %3 to i64, !dbg !13044
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !13044
  %conv = trunc i64 %sub.ptr.sub to i32, !dbg !13040
  ret i32 %conv, !dbg !13045
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @set_bit(i64 %nr, i64* %addr) #1 !dbg !13046 {
entry:
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !13051, metadata !DIExpression()), !dbg !13053
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !13055, metadata !DIExpression()), !dbg !13056
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !13057, metadata !DIExpression()), !dbg !13059
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !13061, metadata !DIExpression()), !dbg !13062
  %nr.addr = alloca i64, align 8
  %addr.addr = alloca i64*, align 8
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !13063, metadata !DIExpression()), !dbg !13064
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !13065, metadata !DIExpression()), !dbg !13066
  %0 = load i64*, i64** %addr.addr, align 8, !dbg !13067
  %1 = load i64, i64* %nr.addr, align 8, !dbg !13068
  %div = sdiv i64 %1, 64, !dbg !13068
  %add.ptr = getelementptr i64, i64* %0, i64 %div, !dbg !13069
  %2 = bitcast i64* %add.ptr to i8*, !dbg !13067
  store i8* %2, i8** %v.addr.i, align 8
  store i64 8, i64* %size.addr.i, align 8
  %3 = load i8*, i8** %v.addr.i, align 8, !dbg !13070
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !13071
  %conv.i = trunc i64 %4 to i32, !dbg !13071
  %call.i = call zeroext i1 @kasan_check_write(i8* %3, i32 %conv.i) #14, !dbg !13072
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !13073
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !13073
  call void @kcsan_check_access(i8* %5, i64 %6, i32 5) #14, !dbg !13073
  %7 = load i64, i64* %nr.addr, align 8, !dbg !13074
  %8 = load i64*, i64** %addr.addr, align 8, !dbg !13075
  store i64 %7, i64* %nr.addr.i, align 8
  store i64* %8, i64** %addr.addr.i, align 8
  %9 = load i64, i64* %nr.addr.i, align 8, !dbg !13076
  %10 = call i1 @llvm.is.constant.i64(i64 %9) #11, !dbg !13078
  br i1 %10, label %if.then.i, label %if.else.i, !dbg !13079

if.then.i:                                        ; preds = %entry
  %11 = load i64*, i64** %addr.addr.i, align 8, !dbg !13080
  %12 = bitcast i64* %11 to i8*, !dbg !13080
  %13 = load i64, i64* %nr.addr.i, align 8, !dbg !13080
  %shr.i = ashr i64 %13, 3, !dbg !13080
  %add.ptr.i = getelementptr i8, i8* %12, i64 %shr.i, !dbg !13080
  %14 = load i64, i64* %nr.addr.i, align 8, !dbg !13082
  %and.i = and i64 %14, 7, !dbg !13082
  %sh_prom.i = trunc i64 %and.i to i32, !dbg !13082
  %shl.i = shl i32 1, %sh_prom.i, !dbg !13082
  call void asm sideeffect "orb ${1:b},$0", "=*m,iq,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i8* %add.ptr.i, i32 %shl.i, i8* %add.ptr.i) #11, !dbg !13083, !srcloc !13084
  br label %arch_set_bit.exit, !dbg !13085

if.else.i:                                        ; preds = %entry
  %15 = load i64*, i64** %addr.addr.i, align 8, !dbg !13086
  %16 = load i64, i64* %nr.addr.i, align 8, !dbg !13088
  call void asm sideeffect " btsq  $1,$0", "*m,Ir,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %15, i64 %16) #11, !dbg !13089, !srcloc !13090
  br label %arch_set_bit.exit

arch_set_bit.exit:                                ; preds = %if.then.i, %if.else.i
  ret void, !dbg !13091
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @kasan_check_write(i8* %p, i32 %size) #1 !dbg !13092 {
entry:
  %p.addr = alloca i8*, align 8
  %size.addr = alloca i32, align 4
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !13093, metadata !DIExpression()), !dbg !13094
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !13095, metadata !DIExpression()), !dbg !13096
  ret i1 true, !dbg !13097
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.page* @skb_frag_page(%struct.bio_vec* %frag) #1 !dbg !13098 {
entry:
  %frag.addr = alloca %struct.bio_vec*, align 8
  store %struct.bio_vec* %frag, %struct.bio_vec** %frag.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bio_vec** %frag.addr, metadata !13101, metadata !DIExpression()), !dbg !13102
  %0 = load %struct.bio_vec*, %struct.bio_vec** %frag.addr, align 8, !dbg !13103
  %bv_page = getelementptr inbounds %struct.bio_vec, %struct.bio_vec* %0, i32 0, i32 0, !dbg !13104
  %1 = load %struct.page*, %struct.page** %bv_page, align 8, !dbg !13104
  ret %struct.page* %1, !dbg !13105
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @skb_frag_off(%struct.bio_vec* %frag) #1 !dbg !13106 {
entry:
  %frag.addr = alloca %struct.bio_vec*, align 8
  store %struct.bio_vec* %frag, %struct.bio_vec** %frag.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bio_vec** %frag.addr, metadata !13107, metadata !DIExpression()), !dbg !13108
  %0 = load %struct.bio_vec*, %struct.bio_vec** %frag.addr, align 8, !dbg !13109
  %bv_offset = getelementptr inbounds %struct.bio_vec, %struct.bio_vec* %0, i32 0, i32 2, !dbg !13110
  %1 = load i32, i32* %bv_offset, align 4, !dbg !13110
  ret i32 %1, !dbg !13111
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @hme_get_drvinfo(%struct.net_device* %dev, %struct.ethtool_drvinfo* %info) #1 !dbg !13112 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %info.addr = alloca %struct.ethtool_drvinfo*, align 8
  %hp = alloca %struct.happy_meal*, align 8
  %pdev = alloca %struct.pci_dev*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !13113, metadata !DIExpression()), !dbg !13114
  store %struct.ethtool_drvinfo* %info, %struct.ethtool_drvinfo** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ethtool_drvinfo** %info.addr, metadata !13115, metadata !DIExpression()), !dbg !13116
  call void @llvm.dbg.declare(metadata %struct.happy_meal** %hp, metadata !13117, metadata !DIExpression()), !dbg !13118
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !13119
  %call = call i8* @netdev_priv(%struct.net_device* %0) #12, !dbg !13120
  %1 = bitcast i8* %call to %struct.happy_meal*, !dbg !13120
  store %struct.happy_meal* %1, %struct.happy_meal** %hp, align 8, !dbg !13118
  %2 = load %struct.ethtool_drvinfo*, %struct.ethtool_drvinfo** %info.addr, align 8, !dbg !13121
  %driver = getelementptr inbounds %struct.ethtool_drvinfo, %struct.ethtool_drvinfo* %2, i32 0, i32 1, !dbg !13122
  %arraydecay = getelementptr inbounds [32 x i8], [32 x i8]* %driver, i64 0, i64 0, !dbg !13121
  %call1 = call i64 @strlcpy(i8* %arraydecay, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0), i64 32) #12, !dbg !13123
  %3 = load %struct.ethtool_drvinfo*, %struct.ethtool_drvinfo** %info.addr, align 8, !dbg !13124
  %version = getelementptr inbounds %struct.ethtool_drvinfo, %struct.ethtool_drvinfo* %3, i32 0, i32 2, !dbg !13125
  %arraydecay2 = getelementptr inbounds [32 x i8], [32 x i8]* %version, i64 0, i64 0, !dbg !13124
  %call3 = call i64 @strlcpy(i8* %arraydecay2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.81, i64 0, i64 0), i64 32) #12, !dbg !13126
  %4 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !13127
  %happy_flags = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %4, i32 0, i32 16, !dbg !13129
  %5 = load i32, i32* %happy_flags, align 8, !dbg !13129
  %and = and i32 %5, 2048, !dbg !13130
  %tobool = icmp ne i32 %and, 0, !dbg !13130
  br i1 %tobool, label %if.then, label %if.end, !dbg !13131

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev, metadata !13132, metadata !DIExpression()), !dbg !13134
  %6 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !13135
  %happy_dev = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %6, i32 0, i32 2, !dbg !13136
  %7 = load i8*, i8** %happy_dev, align 8, !dbg !13136
  %8 = bitcast i8* %7 to %struct.pci_dev*, !dbg !13135
  store %struct.pci_dev* %8, %struct.pci_dev** %pdev, align 8, !dbg !13134
  %9 = load %struct.ethtool_drvinfo*, %struct.ethtool_drvinfo** %info.addr, align 8, !dbg !13137
  %bus_info = getelementptr inbounds %struct.ethtool_drvinfo, %struct.ethtool_drvinfo* %9, i32 0, i32 4, !dbg !13138
  %arraydecay4 = getelementptr inbounds [32 x i8], [32 x i8]* %bus_info, i64 0, i64 0, !dbg !13137
  %10 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !13139
  %call5 = call i8* @pci_name(%struct.pci_dev* %10) #12, !dbg !13140
  %call6 = call i64 @strlcpy(i8* %arraydecay4, i8* %call5, i64 32) #12, !dbg !13141
  br label %if.end, !dbg !13142

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !13143
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @hme_get_link(%struct.net_device* %dev) #1 !dbg !13144 {
entry:
  %lock.addr.i4 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i4, metadata !7875, metadata !DIExpression()), !dbg !13145
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !7882, metadata !DIExpression()), !dbg !13147
  %dev.addr = alloca %struct.net_device*, align 8
  %hp = alloca %struct.happy_meal*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !13149, metadata !DIExpression()), !dbg !13150
  call void @llvm.dbg.declare(metadata %struct.happy_meal** %hp, metadata !13151, metadata !DIExpression()), !dbg !13152
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !13153
  %call = call i8* @netdev_priv(%struct.net_device* %0) #12, !dbg !13154
  %1 = bitcast i8* %call to %struct.happy_meal*, !dbg !13154
  store %struct.happy_meal* %1, %struct.happy_meal** %hp, align 8, !dbg !13152
  %2 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !13155
  %happy_lock = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %2, i32 0, i32 4, !dbg !13156
  store %struct.spinlock* %happy_lock, %struct.spinlock** %lock.addr.i, align 8
  call void @arch_local_irq_disable() #14, !dbg !13157
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #11, !dbg !13158, !srcloc !8217
  %3 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !13159
  %4 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %3, i32 0, i32 0, !dbg !13159
  %rlock.i = bitcast %union.anon.1* %4 to %struct.raw_spinlock*, !dbg !13159
  %5 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !13160
  %6 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !13161
  %tcvregs = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %6, i32 0, i32 14, !dbg !13162
  %7 = load i8*, i8** %tcvregs, align 8, !dbg !13162
  %call1 = call i32 @happy_meal_tcvr_read(%struct.happy_meal* %5, i8* %7, i32 0) #12, !dbg !13163
  %conv = trunc i32 %call1 to i16, !dbg !13163
  %8 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !13164
  %sw_bmcr = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %8, i32 0, i32 22, !dbg !13165
  store i16 %conv, i16* %sw_bmcr, align 2, !dbg !13166
  %9 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !13167
  %happy_lock2 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %9, i32 0, i32 4, !dbg !13168
  store %struct.spinlock* %happy_lock2, %struct.spinlock** %lock.addr.i4, align 8
  call void @arch_local_irq_enable() #14, !dbg !13169
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #11, !dbg !13170, !srcloc !8229
  %10 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i4, align 8, !dbg !13171
  %11 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %10, i32 0, i32 0, !dbg !13171
  %rlock.i5 = bitcast %union.anon.1* %11 to %struct.raw_spinlock*, !dbg !13171
  %12 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !13172
  %sw_bmsr = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %12, i32 0, i32 23, !dbg !13173
  %13 = load i16, i16* %sw_bmsr, align 8, !dbg !13173
  %conv3 = zext i16 %13 to i32, !dbg !13172
  %and = and i32 %conv3, 4, !dbg !13174
  ret i32 %and, !dbg !13175
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @hme_get_link_ksettings(%struct.net_device* %dev, %struct.ethtool_link_ksettings* %cmd) #1 !dbg !13176 {
entry:
  %lock.addr.i51 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i51, metadata !7875, metadata !DIExpression()), !dbg !13177
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !7882, metadata !DIExpression()), !dbg !13179
  %dev.addr = alloca %struct.net_device*, align 8
  %cmd.addr = alloca %struct.ethtool_link_ksettings*, align 8
  %hp = alloca %struct.happy_meal*, align 8
  %speed = alloca i32, align 4
  %supported = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !13181, metadata !DIExpression()), !dbg !13182
  store %struct.ethtool_link_ksettings* %cmd, %struct.ethtool_link_ksettings** %cmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ethtool_link_ksettings** %cmd.addr, metadata !13183, metadata !DIExpression()), !dbg !13184
  call void @llvm.dbg.declare(metadata %struct.happy_meal** %hp, metadata !13185, metadata !DIExpression()), !dbg !13186
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !13187
  %call = call i8* @netdev_priv(%struct.net_device* %0) #12, !dbg !13188
  %1 = bitcast i8* %call to %struct.happy_meal*, !dbg !13188
  store %struct.happy_meal* %1, %struct.happy_meal** %hp, align 8, !dbg !13186
  call void @llvm.dbg.declare(metadata i32* %speed, metadata !13189, metadata !DIExpression()), !dbg !13190
  call void @llvm.dbg.declare(metadata i32* %supported, metadata !13191, metadata !DIExpression()), !dbg !13192
  store i32 719, i32* %supported, align 4, !dbg !13193
  %2 = load %struct.ethtool_link_ksettings*, %struct.ethtool_link_ksettings** %cmd.addr, align 8, !dbg !13194
  %base = getelementptr inbounds %struct.ethtool_link_ksettings, %struct.ethtool_link_ksettings* %2, i32 0, i32 0, !dbg !13195
  %port = getelementptr inbounds %struct.ethtool_link_settings, %struct.ethtool_link_settings* %base, i32 0, i32 3, !dbg !13196
  store i8 0, i8* %port, align 1, !dbg !13197
  %3 = load %struct.ethtool_link_ksettings*, %struct.ethtool_link_ksettings** %cmd.addr, align 8, !dbg !13198
  %base1 = getelementptr inbounds %struct.ethtool_link_ksettings, %struct.ethtool_link_ksettings* %3, i32 0, i32 0, !dbg !13199
  %phy_address = getelementptr inbounds %struct.ethtool_link_settings, %struct.ethtool_link_settings* %base1, i32 0, i32 4, !dbg !13200
  store i8 0, i8* %phy_address, align 2, !dbg !13201
  %4 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !13202
  %happy_lock = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %4, i32 0, i32 4, !dbg !13203
  store %struct.spinlock* %happy_lock, %struct.spinlock** %lock.addr.i, align 8
  call void @arch_local_irq_disable() #14, !dbg !13204
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #11, !dbg !13205, !srcloc !8217
  %5 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !13206
  %6 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %5, i32 0, i32 0, !dbg !13206
  %rlock.i = bitcast %union.anon.1* %6 to %struct.raw_spinlock*, !dbg !13206
  %7 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !13207
  %8 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !13208
  %tcvregs = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %8, i32 0, i32 14, !dbg !13209
  %9 = load i8*, i8** %tcvregs, align 8, !dbg !13209
  %call2 = call i32 @happy_meal_tcvr_read(%struct.happy_meal* %7, i8* %9, i32 0) #12, !dbg !13210
  %conv = trunc i32 %call2 to i16, !dbg !13210
  %10 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !13211
  %sw_bmcr = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %10, i32 0, i32 22, !dbg !13212
  store i16 %conv, i16* %sw_bmcr, align 2, !dbg !13213
  %11 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !13214
  %12 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !13215
  %tcvregs3 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %12, i32 0, i32 14, !dbg !13216
  %13 = load i8*, i8** %tcvregs3, align 8, !dbg !13216
  %call4 = call i32 @happy_meal_tcvr_read(%struct.happy_meal* %11, i8* %13, i32 5) #12, !dbg !13217
  %conv5 = trunc i32 %call4 to i16, !dbg !13217
  %14 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !13218
  %sw_lpa = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %14, i32 0, i32 27, !dbg !13219
  store i16 %conv5, i16* %sw_lpa, align 8, !dbg !13220
  %15 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !13221
  %happy_lock6 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %15, i32 0, i32 4, !dbg !13222
  store %struct.spinlock* %happy_lock6, %struct.spinlock** %lock.addr.i51, align 8
  call void @arch_local_irq_enable() #14, !dbg !13223
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #11, !dbg !13224, !srcloc !8229
  %16 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i51, align 8, !dbg !13225
  %17 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %16, i32 0, i32 0, !dbg !13225
  %rlock.i52 = bitcast %union.anon.1* %17 to %struct.raw_spinlock*, !dbg !13225
  %18 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !13226
  %sw_bmcr7 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %18, i32 0, i32 22, !dbg !13228
  %19 = load i16, i16* %sw_bmcr7, align 2, !dbg !13228
  %conv8 = zext i16 %19 to i32, !dbg !13226
  %and = and i32 %conv8, 4096, !dbg !13229
  %tobool = icmp ne i32 %and, 0, !dbg !13229
  br i1 %tobool, label %if.then, label %if.else31, !dbg !13230

if.then:                                          ; preds = %entry
  %20 = load %struct.ethtool_link_ksettings*, %struct.ethtool_link_ksettings** %cmd.addr, align 8, !dbg !13231
  %base9 = getelementptr inbounds %struct.ethtool_link_ksettings, %struct.ethtool_link_ksettings* %20, i32 0, i32 0, !dbg !13233
  %autoneg = getelementptr inbounds %struct.ethtool_link_settings, %struct.ethtool_link_settings* %base9, i32 0, i32 5, !dbg !13234
  store i8 1, i8* %autoneg, align 1, !dbg !13235
  %21 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !13236
  %sw_lpa10 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %21, i32 0, i32 27, !dbg !13237
  %22 = load i16, i16* %sw_lpa10, align 8, !dbg !13237
  %conv11 = zext i16 %22 to i32, !dbg !13236
  %and12 = and i32 %conv11, 384, !dbg !13238
  %tobool13 = icmp ne i32 %and12, 0, !dbg !13239
  %23 = zext i1 %tobool13 to i64, !dbg !13239
  %cond = select i1 %tobool13, i32 100, i32 10, !dbg !13239
  store i32 %cond, i32* %speed, align 4, !dbg !13240
  %24 = load i32, i32* %speed, align 4, !dbg !13241
  %cmp = icmp eq i32 %24, 100, !dbg !13243
  br i1 %cmp, label %if.then15, label %if.else, !dbg !13244

if.then15:                                        ; preds = %if.then
  %25 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !13245
  %sw_lpa16 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %25, i32 0, i32 27, !dbg !13246
  %26 = load i16, i16* %sw_lpa16, align 8, !dbg !13246
  %conv17 = zext i16 %26 to i32, !dbg !13245
  %and18 = and i32 %conv17, 256, !dbg !13247
  %tobool19 = icmp ne i32 %and18, 0, !dbg !13248
  %27 = zext i1 %tobool19 to i64, !dbg !13248
  %cond20 = select i1 %tobool19, i32 1, i32 0, !dbg !13248
  %conv21 = trunc i32 %cond20 to i8, !dbg !13248
  %28 = load %struct.ethtool_link_ksettings*, %struct.ethtool_link_ksettings** %cmd.addr, align 8, !dbg !13249
  %base22 = getelementptr inbounds %struct.ethtool_link_ksettings, %struct.ethtool_link_ksettings* %28, i32 0, i32 0, !dbg !13250
  %duplex = getelementptr inbounds %struct.ethtool_link_settings, %struct.ethtool_link_settings* %base22, i32 0, i32 2, !dbg !13251
  store i8 %conv21, i8* %duplex, align 8, !dbg !13252
  br label %if.end, !dbg !13249

if.else:                                          ; preds = %if.then
  %29 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !13253
  %sw_lpa23 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %29, i32 0, i32 27, !dbg !13254
  %30 = load i16, i16* %sw_lpa23, align 8, !dbg !13254
  %conv24 = zext i16 %30 to i32, !dbg !13253
  %and25 = and i32 %conv24, 64, !dbg !13255
  %tobool26 = icmp ne i32 %and25, 0, !dbg !13256
  %31 = zext i1 %tobool26 to i64, !dbg !13256
  %cond27 = select i1 %tobool26, i32 1, i32 0, !dbg !13256
  %conv28 = trunc i32 %cond27 to i8, !dbg !13256
  %32 = load %struct.ethtool_link_ksettings*, %struct.ethtool_link_ksettings** %cmd.addr, align 8, !dbg !13257
  %base29 = getelementptr inbounds %struct.ethtool_link_ksettings, %struct.ethtool_link_ksettings* %32, i32 0, i32 0, !dbg !13258
  %duplex30 = getelementptr inbounds %struct.ethtool_link_settings, %struct.ethtool_link_settings* %base29, i32 0, i32 2, !dbg !13259
  store i8 %conv28, i8* %duplex30, align 8, !dbg !13260
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then15
  br label %if.end47, !dbg !13261

if.else31:                                        ; preds = %entry
  %33 = load %struct.ethtool_link_ksettings*, %struct.ethtool_link_ksettings** %cmd.addr, align 8, !dbg !13262
  %base32 = getelementptr inbounds %struct.ethtool_link_ksettings, %struct.ethtool_link_ksettings* %33, i32 0, i32 0, !dbg !13264
  %autoneg33 = getelementptr inbounds %struct.ethtool_link_settings, %struct.ethtool_link_settings* %base32, i32 0, i32 5, !dbg !13265
  store i8 0, i8* %autoneg33, align 1, !dbg !13266
  %34 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !13267
  %sw_bmcr34 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %34, i32 0, i32 22, !dbg !13268
  %35 = load i16, i16* %sw_bmcr34, align 2, !dbg !13268
  %conv35 = zext i16 %35 to i32, !dbg !13267
  %and36 = and i32 %conv35, 8192, !dbg !13269
  %tobool37 = icmp ne i32 %and36, 0, !dbg !13270
  %36 = zext i1 %tobool37 to i64, !dbg !13270
  %cond38 = select i1 %tobool37, i32 100, i32 10, !dbg !13270
  store i32 %cond38, i32* %speed, align 4, !dbg !13271
  %37 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !13272
  %sw_bmcr39 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %37, i32 0, i32 22, !dbg !13273
  %38 = load i16, i16* %sw_bmcr39, align 2, !dbg !13273
  %conv40 = zext i16 %38 to i32, !dbg !13272
  %and41 = and i32 %conv40, 256, !dbg !13274
  %tobool42 = icmp ne i32 %and41, 0, !dbg !13275
  %39 = zext i1 %tobool42 to i64, !dbg !13275
  %cond43 = select i1 %tobool42, i32 1, i32 0, !dbg !13275
  %conv44 = trunc i32 %cond43 to i8, !dbg !13275
  %40 = load %struct.ethtool_link_ksettings*, %struct.ethtool_link_ksettings** %cmd.addr, align 8, !dbg !13276
  %base45 = getelementptr inbounds %struct.ethtool_link_ksettings, %struct.ethtool_link_ksettings* %40, i32 0, i32 0, !dbg !13277
  %duplex46 = getelementptr inbounds %struct.ethtool_link_settings, %struct.ethtool_link_settings* %base45, i32 0, i32 2, !dbg !13278
  store i8 %conv44, i8* %duplex46, align 8, !dbg !13279
  br label %if.end47

if.end47:                                         ; preds = %if.else31, %if.end
  %41 = load i32, i32* %speed, align 4, !dbg !13280
  %42 = load %struct.ethtool_link_ksettings*, %struct.ethtool_link_ksettings** %cmd.addr, align 8, !dbg !13281
  %base48 = getelementptr inbounds %struct.ethtool_link_ksettings, %struct.ethtool_link_ksettings* %42, i32 0, i32 0, !dbg !13282
  %speed49 = getelementptr inbounds %struct.ethtool_link_settings, %struct.ethtool_link_settings* %base48, i32 0, i32 1, !dbg !13283
  store i32 %41, i32* %speed49, align 4, !dbg !13284
  %43 = load %struct.ethtool_link_ksettings*, %struct.ethtool_link_ksettings** %cmd.addr, align 8, !dbg !13285
  %link_modes = getelementptr inbounds %struct.ethtool_link_ksettings, %struct.ethtool_link_ksettings* %43, i32 0, i32 1, !dbg !13286
  %supported50 = getelementptr inbounds %struct.anon.126, %struct.anon.126* %link_modes, i32 0, i32 0, !dbg !13287
  %arraydecay = getelementptr inbounds [2 x i64], [2 x i64]* %supported50, i64 0, i64 0, !dbg !13285
  %44 = load i32, i32* %supported, align 4, !dbg !13288
  call void @ethtool_convert_legacy_u32_to_link_mode(i64* %arraydecay, i32 %44) #12, !dbg !13289
  ret i32 0, !dbg !13290
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @hme_set_link_ksettings(%struct.net_device* %dev, %struct.ethtool_link_ksettings* %cmd) #1 !dbg !13291 {
entry:
  %lock.addr.i35 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i35, metadata !7875, metadata !DIExpression()), !dbg !13292
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !7882, metadata !DIExpression()), !dbg !13294
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.net_device*, align 8
  %cmd.addr = alloca %struct.ethtool_link_ksettings*, align 8
  %hp = alloca %struct.happy_meal*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !13296, metadata !DIExpression()), !dbg !13297
  store %struct.ethtool_link_ksettings* %cmd, %struct.ethtool_link_ksettings** %cmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ethtool_link_ksettings** %cmd.addr, metadata !13298, metadata !DIExpression()), !dbg !13299
  call void @llvm.dbg.declare(metadata %struct.happy_meal** %hp, metadata !13300, metadata !DIExpression()), !dbg !13301
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !13302
  %call = call i8* @netdev_priv(%struct.net_device* %0) #12, !dbg !13303
  %1 = bitcast i8* %call to %struct.happy_meal*, !dbg !13303
  store %struct.happy_meal* %1, %struct.happy_meal** %hp, align 8, !dbg !13301
  %2 = load %struct.ethtool_link_ksettings*, %struct.ethtool_link_ksettings** %cmd.addr, align 8, !dbg !13304
  %base = getelementptr inbounds %struct.ethtool_link_ksettings, %struct.ethtool_link_ksettings* %2, i32 0, i32 0, !dbg !13306
  %autoneg = getelementptr inbounds %struct.ethtool_link_settings, %struct.ethtool_link_settings* %base, i32 0, i32 5, !dbg !13307
  %3 = load i8, i8* %autoneg, align 1, !dbg !13307
  %conv = zext i8 %3 to i32, !dbg !13304
  %cmp = icmp ne i32 %conv, 1, !dbg !13308
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !13309

land.lhs.true:                                    ; preds = %entry
  %4 = load %struct.ethtool_link_ksettings*, %struct.ethtool_link_ksettings** %cmd.addr, align 8, !dbg !13310
  %base2 = getelementptr inbounds %struct.ethtool_link_ksettings, %struct.ethtool_link_ksettings* %4, i32 0, i32 0, !dbg !13311
  %autoneg3 = getelementptr inbounds %struct.ethtool_link_settings, %struct.ethtool_link_settings* %base2, i32 0, i32 5, !dbg !13312
  %5 = load i8, i8* %autoneg3, align 1, !dbg !13312
  %conv4 = zext i8 %5 to i32, !dbg !13310
  %cmp5 = icmp ne i32 %conv4, 0, !dbg !13313
  br i1 %cmp5, label %if.then, label %if.end, !dbg !13314

if.then:                                          ; preds = %land.lhs.true
  store i32 -22, i32* %retval, align 4, !dbg !13315
  br label %return, !dbg !13315

if.end:                                           ; preds = %land.lhs.true, %entry
  %6 = load %struct.ethtool_link_ksettings*, %struct.ethtool_link_ksettings** %cmd.addr, align 8, !dbg !13316
  %base7 = getelementptr inbounds %struct.ethtool_link_ksettings, %struct.ethtool_link_ksettings* %6, i32 0, i32 0, !dbg !13318
  %autoneg8 = getelementptr inbounds %struct.ethtool_link_settings, %struct.ethtool_link_settings* %base7, i32 0, i32 5, !dbg !13319
  %7 = load i8, i8* %autoneg8, align 1, !dbg !13319
  %conv9 = zext i8 %7 to i32, !dbg !13316
  %cmp10 = icmp eq i32 %conv9, 0, !dbg !13320
  br i1 %cmp10, label %land.lhs.true12, label %if.end32, !dbg !13321

land.lhs.true12:                                  ; preds = %if.end
  %8 = load %struct.ethtool_link_ksettings*, %struct.ethtool_link_ksettings** %cmd.addr, align 8, !dbg !13322
  %base13 = getelementptr inbounds %struct.ethtool_link_ksettings, %struct.ethtool_link_ksettings* %8, i32 0, i32 0, !dbg !13323
  %speed = getelementptr inbounds %struct.ethtool_link_settings, %struct.ethtool_link_settings* %base13, i32 0, i32 1, !dbg !13324
  %9 = load i32, i32* %speed, align 4, !dbg !13324
  %cmp14 = icmp ne i32 %9, 100, !dbg !13325
  br i1 %cmp14, label %land.lhs.true16, label %lor.lhs.false, !dbg !13326

land.lhs.true16:                                  ; preds = %land.lhs.true12
  %10 = load %struct.ethtool_link_ksettings*, %struct.ethtool_link_ksettings** %cmd.addr, align 8, !dbg !13327
  %base17 = getelementptr inbounds %struct.ethtool_link_ksettings, %struct.ethtool_link_ksettings* %10, i32 0, i32 0, !dbg !13328
  %speed18 = getelementptr inbounds %struct.ethtool_link_settings, %struct.ethtool_link_settings* %base17, i32 0, i32 1, !dbg !13329
  %11 = load i32, i32* %speed18, align 4, !dbg !13329
  %cmp19 = icmp ne i32 %11, 10, !dbg !13330
  br i1 %cmp19, label %if.then31, label %lor.lhs.false, !dbg !13331

lor.lhs.false:                                    ; preds = %land.lhs.true16, %land.lhs.true12
  %12 = load %struct.ethtool_link_ksettings*, %struct.ethtool_link_ksettings** %cmd.addr, align 8, !dbg !13332
  %base21 = getelementptr inbounds %struct.ethtool_link_ksettings, %struct.ethtool_link_ksettings* %12, i32 0, i32 0, !dbg !13333
  %duplex = getelementptr inbounds %struct.ethtool_link_settings, %struct.ethtool_link_settings* %base21, i32 0, i32 2, !dbg !13334
  %13 = load i8, i8* %duplex, align 8, !dbg !13334
  %conv22 = zext i8 %13 to i32, !dbg !13332
  %cmp23 = icmp ne i32 %conv22, 0, !dbg !13335
  br i1 %cmp23, label %land.lhs.true25, label %if.end32, !dbg !13336

land.lhs.true25:                                  ; preds = %lor.lhs.false
  %14 = load %struct.ethtool_link_ksettings*, %struct.ethtool_link_ksettings** %cmd.addr, align 8, !dbg !13337
  %base26 = getelementptr inbounds %struct.ethtool_link_ksettings, %struct.ethtool_link_ksettings* %14, i32 0, i32 0, !dbg !13338
  %duplex27 = getelementptr inbounds %struct.ethtool_link_settings, %struct.ethtool_link_settings* %base26, i32 0, i32 2, !dbg !13339
  %15 = load i8, i8* %duplex27, align 8, !dbg !13339
  %conv28 = zext i8 %15 to i32, !dbg !13337
  %cmp29 = icmp ne i32 %conv28, 1, !dbg !13340
  br i1 %cmp29, label %if.then31, label %if.end32, !dbg !13341

if.then31:                                        ; preds = %land.lhs.true25, %land.lhs.true16
  store i32 -22, i32* %retval, align 4, !dbg !13342
  br label %return, !dbg !13342

if.end32:                                         ; preds = %land.lhs.true25, %lor.lhs.false, %if.end
  %16 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !13343
  %happy_lock = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %16, i32 0, i32 4, !dbg !13344
  store %struct.spinlock* %happy_lock, %struct.spinlock** %lock.addr.i, align 8
  call void @arch_local_irq_disable() #14, !dbg !13345
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #11, !dbg !13346, !srcloc !8217
  %17 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !13347
  %18 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %17, i32 0, i32 0, !dbg !13347
  %rlock.i = bitcast %union.anon.1* %18 to %struct.raw_spinlock*, !dbg !13347
  %19 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !13348
  %happy_timer = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %19, i32 0, i32 38, !dbg !13349
  %call33 = call i32 @del_timer(%struct.timer_list* %happy_timer) #12, !dbg !13350
  %20 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !13351
  %21 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !13352
  %tcvregs = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %21, i32 0, i32 14, !dbg !13353
  %22 = load i8*, i8** %tcvregs, align 8, !dbg !13353
  %23 = load %struct.ethtool_link_ksettings*, %struct.ethtool_link_ksettings** %cmd.addr, align 8, !dbg !13354
  call void @happy_meal_begin_auto_negotiation(%struct.happy_meal* %20, i8* %22, %struct.ethtool_link_ksettings* %23) #12, !dbg !13355
  %24 = load %struct.happy_meal*, %struct.happy_meal** %hp, align 8, !dbg !13356
  %happy_lock34 = getelementptr inbounds %struct.happy_meal, %struct.happy_meal* %24, i32 0, i32 4, !dbg !13357
  store %struct.spinlock* %happy_lock34, %struct.spinlock** %lock.addr.i35, align 8
  call void @arch_local_irq_enable() #14, !dbg !13358
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #11, !dbg !13359, !srcloc !8229
  %25 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i35, align 8, !dbg !13360
  %26 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %25, i32 0, i32 0, !dbg !13360
  %rlock.i36 = bitcast %union.anon.1* %26 to %struct.raw_spinlock*, !dbg !13360
  store i32 0, i32* %retval, align 4, !dbg !13361
  br label %return, !dbg !13361

return:                                           ; preds = %if.end32, %if.then31, %if.then
  %27 = load i32, i32* %retval, align 4, !dbg !13362
  ret i32 %27, !dbg !13362
}

; Function Attrs: noredzone
declare dso_local i64 @strlcpy(i8*, i8*, i64) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @pci_name(%struct.pci_dev* %pdev) #1 !dbg !13363 {
entry:
  %pdev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !13368, metadata !DIExpression()), !dbg !13369
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !13370
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 41, !dbg !13371
  %call = call i8* @dev_name(%struct.device* %dev) #12, !dbg !13372
  ret i8* %call, !dbg !13373
}

; Function Attrs: noredzone
declare dso_local void @ethtool_convert_legacy_u32_to_link_mode(i64*, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @arch_local_irq_disable() #1 !dbg !13374 {
entry:
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !13376, metadata !DIExpression()), !dbg !13378
  %0 = load i64, i64* %__edi, align 8, !dbg !13378
  store i64 %0, i64* %__edi, align 8, !dbg !13378
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !13379, metadata !DIExpression()), !dbg !13378
  %1 = load i64, i64* %__esi, align 8, !dbg !13378
  store i64 %1, i64* %__esi, align 8, !dbg !13378
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !13380, metadata !DIExpression()), !dbg !13378
  %2 = load i64, i64* %__edx, align 8, !dbg !13378
  store i64 %2, i64* %__edx, align 8, !dbg !13378
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !13381, metadata !DIExpression()), !dbg !13378
  %3 = load i64, i64* %__ecx, align 8, !dbg !13378
  store i64 %3, i64* %__ecx, align 8, !dbg !13378
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !13382, metadata !DIExpression()), !dbg !13378
  %4 = load i64, i64* %__eax, align 8, !dbg !13378
  store i64 %4, i64* %__eax, align 8, !dbg !13378
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 2, i32 0), align 8, !dbg !13378
  %6 = call i64 @llvm.read_register.i64(metadata !7832), !dbg !13378
  %7 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 38, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 2, i32 0), i32 1, i64 %6) #11, !dbg !13378, !srcloc !13383
  %asmresult = extractvalue { i64, i64 } %7, 0, !dbg !13378
  %asmresult1 = extractvalue { i64, i64 } %7, 1, !dbg !13378
  store i64 %asmresult, i64* %__eax, align 8, !dbg !13378
  call void @llvm.write_register.i64(metadata !7832, i64 %asmresult1), !dbg !13378
  ret void, !dbg !13384
}

; Function Attrs: nounwind readonly
declare i64 @llvm.read_register.i64(metadata) #10

; Function Attrs: nounwind
declare void @llvm.write_register.i64(metadata, i64) #11

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @arch_local_irq_enable() #1 !dbg !13385 {
entry:
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !13386, metadata !DIExpression()), !dbg !13388
  %0 = load i64, i64* %__edi, align 8, !dbg !13388
  store i64 %0, i64* %__edi, align 8, !dbg !13388
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !13389, metadata !DIExpression()), !dbg !13388
  %1 = load i64, i64* %__esi, align 8, !dbg !13388
  store i64 %1, i64* %__esi, align 8, !dbg !13388
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !13390, metadata !DIExpression()), !dbg !13388
  %2 = load i64, i64* %__edx, align 8, !dbg !13388
  store i64 %2, i64* %__edx, align 8, !dbg !13388
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !13391, metadata !DIExpression()), !dbg !13388
  %3 = load i64, i64* %__ecx, align 8, !dbg !13388
  store i64 %3, i64* %__ecx, align 8, !dbg !13388
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !13392, metadata !DIExpression()), !dbg !13388
  %4 = load i64, i64* %__eax, align 8, !dbg !13388
  store i64 %4, i64* %__eax, align 8, !dbg !13388
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 3, i32 0), align 8, !dbg !13388
  %6 = call i64 @llvm.read_register.i64(metadata !7832), !dbg !13388
  %7 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 39, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 3, i32 0), i32 1, i64 %6) #11, !dbg !13388, !srcloc !13393
  %asmresult = extractvalue { i64, i64 } %7, 0, !dbg !13388
  %asmresult1 = extractvalue { i64, i64 } %7, 1, !dbg !13388
  store i64 %asmresult, i64* %__eax, align 8, !dbg !13388
  call void @llvm.write_register.i64(metadata !7832, i64 %asmresult1), !dbg !13388
  ret void, !dbg !13394
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dev_set_drvdata(%struct.device* %dev, i8* %data) #1 !dbg !13395 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %data.addr = alloca i8*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !13398, metadata !DIExpression()), !dbg !13399
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !13400, metadata !DIExpression()), !dbg !13401
  %0 = load i8*, i8** %data.addr, align 8, !dbg !13402
  %1 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !13403
  %driver_data = getelementptr inbounds %struct.device, %struct.device* %1, i32 0, i32 8, !dbg !13404
  store i8* %0, i8** %driver_data, align 8, !dbg !13405
  ret void, !dbg !13406
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @pci_get_drvdata(%struct.pci_dev* %pdev) #1 !dbg !13407 {
entry:
  %pdev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !13410, metadata !DIExpression()), !dbg !13411
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !13412
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 41, !dbg !13413
  %call = call i8* @dev_get_drvdata(%struct.device* %dev) #12, !dbg !13414
  ret i8* %call, !dbg !13415
}

; Function Attrs: noredzone
declare dso_local void @unregister_netdev(%struct.net_device*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dma_free_coherent(%struct.device* %dev, i64 %size, i8* %cpu_addr, i64 %dma_handle) #1 !dbg !13416 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %size.addr = alloca i64, align 8
  %cpu_addr.addr = alloca i8*, align 8
  %dma_handle.addr = alloca i64, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !13419, metadata !DIExpression()), !dbg !13420
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !13421, metadata !DIExpression()), !dbg !13422
  store i8* %cpu_addr, i8** %cpu_addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %cpu_addr.addr, metadata !13423, metadata !DIExpression()), !dbg !13424
  store i64 %dma_handle, i64* %dma_handle.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dma_handle.addr, metadata !13425, metadata !DIExpression()), !dbg !13426
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !13427
  %1 = load i64, i64* %size.addr, align 8, !dbg !13428
  %2 = load i8*, i8** %cpu_addr.addr, align 8, !dbg !13429
  %3 = load i64, i64* %dma_handle.addr, align 8, !dbg !13430
  call void @dma_free_attrs(%struct.device* %0, i64 %1, i8* %2, i64 %3, i64 0) #12, !dbg !13431
  ret void, !dbg !13432
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @dev_get_drvdata(%struct.device* %dev) #1 !dbg !13433 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !13436, metadata !DIExpression()), !dbg !13437
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !13438
  %driver_data = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 8, !dbg !13439
  %1 = load i8*, i8** %driver_data, align 8, !dbg !13439
  ret i8* %1, !dbg !13440
}

; Function Attrs: noredzone
declare dso_local void @dma_free_attrs(%struct.device*, i64, i8*, i64, i64) #2

; Function Attrs: cold noinline noredzone nounwind optnone sspstrong
define internal i32 @happy_meal_pci_init() #0 section ".init.text" !dbg !13441 {
entry:
  %call = call i32 @__pci_register_driver(%struct.pci_driver* @hme_pci_driver, %struct.module* null, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0)) #12, !dbg !13442
  ret i32 %call, !dbg !13443
}

; Function Attrs: noredzone
declare dso_local i32 @__pci_register_driver(%struct.pci_driver*, %struct.module*, i8*) #2

attributes #0 = { cold noinline noredzone nounwind optnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { noinline noredzone nounwind optnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readnone speculatable willreturn }
attributes #4 = { cold noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind willreturn }
attributes #6 = { nounwind readnone willreturn }
attributes #7 = { nounwind willreturn }
attributes #8 = { noinline noredzone nounwind optnone readnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noredzone nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind readonly }
attributes #11 = { nounwind }
attributes #12 = { noredzone }
attributes #13 = { cold noredzone }
attributes #14 = { noredzone nounwind }
attributes #15 = { noredzone nounwind readnone }
attributes #16 = { noredzone nounwind readonly }

!llvm.dbg.cu = !{!2}
!llvm.named.register.rsp = !{!7832}
!llvm.module.flags = !{!7833, !7834, !7835, !7836}
!llvm.ident = !{!7837}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_version319", scope: !2, file: !3, line: 71, type: !7831, isLocal: true, isDefinition: true, align: 8)
!2 = distinct !DICompileUnit(language: DW_LANG_C89, file: !3, producer: "clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !7279, globals: !7668, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "drivers/net/ethernet/sun/sunhme.c", directory: "/home/lizy2001/genbc/linux")
!4 = !{!5, !13, !19, !24, !30, !37, !57, !64, !95, !129, !170, !177, !208, !221, !229, !235, !242, !246, !250, !257, !263, !6491, !6627, !6707, !6783, !6791, !6198, !4289, !4384, !5051, !5070, !7053, !7059, !7065, !7129, !7136, !7157, !7164, !7169, !7173, !7179, !7184}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "migrate_mode", file: !6, line: 15, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "./include/linux/migrate_mode.h", directory: "/home/lizy2001/genbc/linux")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10, !11, !12}
!9 = !DIEnumerator(name: "MIGRATE_ASYNC", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "MIGRATE_SYNC_LIGHT", value: 1, isUnsigned: true)
!11 = !DIEnumerator(name: "MIGRATE_SYNC", value: 2, isUnsigned: true)
!12 = !DIEnumerator(name: "MIGRATE_SYNC_NO_COPY", value: 3, isUnsigned: true)
!13 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "page_entry_size", file: !14, line: 546, baseType: !7, size: 32, elements: !15)
!14 = !DIFile(filename: "./include/linux/mm.h", directory: "/home/lizy2001/genbc/linux")
!15 = !{!16, !17, !18}
!16 = !DIEnumerator(name: "PE_SIZE_PTE", value: 0, isUnsigned: true)
!17 = !DIEnumerator(name: "PE_SIZE_PMD", value: 1, isUnsigned: true)
!18 = !DIEnumerator(name: "PE_SIZE_PUD", value: 2, isUnsigned: true)
!19 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "hrtimer_restart", file: !20, line: 65, baseType: !7, size: 32, elements: !21)
!20 = !DIFile(filename: "./include/linux/hrtimer.h", directory: "/home/lizy2001/genbc/linux")
!21 = !{!22, !23}
!22 = !DIEnumerator(name: "HRTIMER_NORESTART", value: 0, isUnsigned: true)
!23 = !DIEnumerator(name: "HRTIMER_RESTART", value: 1, isUnsigned: true)
!24 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "timespec_type", file: !25, line: 16, baseType: !7, size: 32, elements: !26)
!25 = !DIFile(filename: "./include/linux/restart_block.h", directory: "/home/lizy2001/genbc/linux")
!26 = !{!27, !28, !29}
!27 = !DIEnumerator(name: "TT_NONE", value: 0, isUnsigned: true)
!28 = !DIEnumerator(name: "TT_NATIVE", value: 1, isUnsigned: true)
!29 = !DIEnumerator(name: "TT_COMPAT", value: 2, isUnsigned: true)
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "netdev_tx", file: !31, line: 115, baseType: !32, size: 32, elements: !33)
!31 = !DIFile(filename: "./include/linux/netdevice.h", directory: "/home/lizy2001/genbc/linux")
!32 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!33 = !{!34, !35, !36}
!34 = !DIEnumerator(name: "__NETDEV_TX_MIN", value: -2147483648)
!35 = !DIEnumerator(name: "NETDEV_TX_OK", value: 0)
!36 = !DIEnumerator(name: "NETDEV_TX_BUSY", value: 16)
!37 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "tc_setup_type", file: !31, line: 836, baseType: !7, size: 32, elements: !38)
!38 = !{!39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56}
!39 = !DIEnumerator(name: "TC_SETUP_QDISC_MQPRIO", value: 0, isUnsigned: true)
!40 = !DIEnumerator(name: "TC_SETUP_CLSU32", value: 1, isUnsigned: true)
!41 = !DIEnumerator(name: "TC_SETUP_CLSFLOWER", value: 2, isUnsigned: true)
!42 = !DIEnumerator(name: "TC_SETUP_CLSMATCHALL", value: 3, isUnsigned: true)
!43 = !DIEnumerator(name: "TC_SETUP_CLSBPF", value: 4, isUnsigned: true)
!44 = !DIEnumerator(name: "TC_SETUP_BLOCK", value: 5, isUnsigned: true)
!45 = !DIEnumerator(name: "TC_SETUP_QDISC_CBS", value: 6, isUnsigned: true)
!46 = !DIEnumerator(name: "TC_SETUP_QDISC_RED", value: 7, isUnsigned: true)
!47 = !DIEnumerator(name: "TC_SETUP_QDISC_PRIO", value: 8, isUnsigned: true)
!48 = !DIEnumerator(name: "TC_SETUP_QDISC_MQ", value: 9, isUnsigned: true)
!49 = !DIEnumerator(name: "TC_SETUP_QDISC_ETF", value: 10, isUnsigned: true)
!50 = !DIEnumerator(name: "TC_SETUP_ROOT_QDISC", value: 11, isUnsigned: true)
!51 = !DIEnumerator(name: "TC_SETUP_QDISC_GRED", value: 12, isUnsigned: true)
!52 = !DIEnumerator(name: "TC_SETUP_QDISC_TAPRIO", value: 13, isUnsigned: true)
!53 = !DIEnumerator(name: "TC_SETUP_FT", value: 14, isUnsigned: true)
!54 = !DIEnumerator(name: "TC_SETUP_QDISC_ETS", value: 15, isUnsigned: true)
!55 = !DIEnumerator(name: "TC_SETUP_QDISC_TBF", value: 16, isUnsigned: true)
!56 = !DIEnumerator(name: "TC_SETUP_QDISC_FIFO", value: 17, isUnsigned: true)
!57 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "bpf_netdev_command", file: !31, line: 860, baseType: !7, size: 32, elements: !58)
!58 = !{!59, !60, !61, !62, !63}
!59 = !DIEnumerator(name: "XDP_SETUP_PROG", value: 0, isUnsigned: true)
!60 = !DIEnumerator(name: "XDP_SETUP_PROG_HW", value: 1, isUnsigned: true)
!61 = !DIEnumerator(name: "BPF_OFFLOAD_MAP_ALLOC", value: 2, isUnsigned: true)
!62 = !DIEnumerator(name: "BPF_OFFLOAD_MAP_FREE", value: 3, isUnsigned: true)
!63 = !DIEnumerator(name: "XDP_SETUP_XSK_POOL", value: 4, isUnsigned: true)
!64 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "bpf_reg_type", file: !65, line: 369, baseType: !7, size: 32, elements: !66)
!65 = !DIFile(filename: "./include/linux/bpf.h", directory: "/home/lizy2001/genbc/linux")
!66 = !{!67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94}
!67 = !DIEnumerator(name: "NOT_INIT", value: 0, isUnsigned: true)
!68 = !DIEnumerator(name: "SCALAR_VALUE", value: 1, isUnsigned: true)
!69 = !DIEnumerator(name: "PTR_TO_CTX", value: 2, isUnsigned: true)
!70 = !DIEnumerator(name: "CONST_PTR_TO_MAP", value: 3, isUnsigned: true)
!71 = !DIEnumerator(name: "PTR_TO_MAP_VALUE", value: 4, isUnsigned: true)
!72 = !DIEnumerator(name: "PTR_TO_MAP_VALUE_OR_NULL", value: 5, isUnsigned: true)
!73 = !DIEnumerator(name: "PTR_TO_STACK", value: 6, isUnsigned: true)
!74 = !DIEnumerator(name: "PTR_TO_PACKET_META", value: 7, isUnsigned: true)
!75 = !DIEnumerator(name: "PTR_TO_PACKET", value: 8, isUnsigned: true)
!76 = !DIEnumerator(name: "PTR_TO_PACKET_END", value: 9, isUnsigned: true)
!77 = !DIEnumerator(name: "PTR_TO_FLOW_KEYS", value: 10, isUnsigned: true)
!78 = !DIEnumerator(name: "PTR_TO_SOCKET", value: 11, isUnsigned: true)
!79 = !DIEnumerator(name: "PTR_TO_SOCKET_OR_NULL", value: 12, isUnsigned: true)
!80 = !DIEnumerator(name: "PTR_TO_SOCK_COMMON", value: 13, isUnsigned: true)
!81 = !DIEnumerator(name: "PTR_TO_SOCK_COMMON_OR_NULL", value: 14, isUnsigned: true)
!82 = !DIEnumerator(name: "PTR_TO_TCP_SOCK", value: 15, isUnsigned: true)
!83 = !DIEnumerator(name: "PTR_TO_TCP_SOCK_OR_NULL", value: 16, isUnsigned: true)
!84 = !DIEnumerator(name: "PTR_TO_TP_BUFFER", value: 17, isUnsigned: true)
!85 = !DIEnumerator(name: "PTR_TO_XDP_SOCK", value: 18, isUnsigned: true)
!86 = !DIEnumerator(name: "PTR_TO_BTF_ID", value: 19, isUnsigned: true)
!87 = !DIEnumerator(name: "PTR_TO_BTF_ID_OR_NULL", value: 20, isUnsigned: true)
!88 = !DIEnumerator(name: "PTR_TO_MEM", value: 21, isUnsigned: true)
!89 = !DIEnumerator(name: "PTR_TO_MEM_OR_NULL", value: 22, isUnsigned: true)
!90 = !DIEnumerator(name: "PTR_TO_RDONLY_BUF", value: 23, isUnsigned: true)
!91 = !DIEnumerator(name: "PTR_TO_RDONLY_BUF_OR_NULL", value: 24, isUnsigned: true)
!92 = !DIEnumerator(name: "PTR_TO_RDWR_BUF", value: 25, isUnsigned: true)
!93 = !DIEnumerator(name: "PTR_TO_RDWR_BUF_OR_NULL", value: 26, isUnsigned: true)
!94 = !DIEnumerator(name: "PTR_TO_PERCPU_BTF_ID", value: 27, isUnsigned: true)
!95 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "bpf_prog_type", file: !96, line: 170, baseType: !7, size: 32, elements: !97)
!96 = !DIFile(filename: "./include/uapi/linux/bpf.h", directory: "/home/lizy2001/genbc/linux")
!97 = !{!98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128}
!98 = !DIEnumerator(name: "BPF_PROG_TYPE_UNSPEC", value: 0, isUnsigned: true)
!99 = !DIEnumerator(name: "BPF_PROG_TYPE_SOCKET_FILTER", value: 1, isUnsigned: true)
!100 = !DIEnumerator(name: "BPF_PROG_TYPE_KPROBE", value: 2, isUnsigned: true)
!101 = !DIEnumerator(name: "BPF_PROG_TYPE_SCHED_CLS", value: 3, isUnsigned: true)
!102 = !DIEnumerator(name: "BPF_PROG_TYPE_SCHED_ACT", value: 4, isUnsigned: true)
!103 = !DIEnumerator(name: "BPF_PROG_TYPE_TRACEPOINT", value: 5, isUnsigned: true)
!104 = !DIEnumerator(name: "BPF_PROG_TYPE_XDP", value: 6, isUnsigned: true)
!105 = !DIEnumerator(name: "BPF_PROG_TYPE_PERF_EVENT", value: 7, isUnsigned: true)
!106 = !DIEnumerator(name: "BPF_PROG_TYPE_CGROUP_SKB", value: 8, isUnsigned: true)
!107 = !DIEnumerator(name: "BPF_PROG_TYPE_CGROUP_SOCK", value: 9, isUnsigned: true)
!108 = !DIEnumerator(name: "BPF_PROG_TYPE_LWT_IN", value: 10, isUnsigned: true)
!109 = !DIEnumerator(name: "BPF_PROG_TYPE_LWT_OUT", value: 11, isUnsigned: true)
!110 = !DIEnumerator(name: "BPF_PROG_TYPE_LWT_XMIT", value: 12, isUnsigned: true)
!111 = !DIEnumerator(name: "BPF_PROG_TYPE_SOCK_OPS", value: 13, isUnsigned: true)
!112 = !DIEnumerator(name: "BPF_PROG_TYPE_SK_SKB", value: 14, isUnsigned: true)
!113 = !DIEnumerator(name: "BPF_PROG_TYPE_CGROUP_DEVICE", value: 15, isUnsigned: true)
!114 = !DIEnumerator(name: "BPF_PROG_TYPE_SK_MSG", value: 16, isUnsigned: true)
!115 = !DIEnumerator(name: "BPF_PROG_TYPE_RAW_TRACEPOINT", value: 17, isUnsigned: true)
!116 = !DIEnumerator(name: "BPF_PROG_TYPE_CGROUP_SOCK_ADDR", value: 18, isUnsigned: true)
!117 = !DIEnumerator(name: "BPF_PROG_TYPE_LWT_SEG6LOCAL", value: 19, isUnsigned: true)
!118 = !DIEnumerator(name: "BPF_PROG_TYPE_LIRC_MODE2", value: 20, isUnsigned: true)
!119 = !DIEnumerator(name: "BPF_PROG_TYPE_SK_REUSEPORT", value: 21, isUnsigned: true)
!120 = !DIEnumerator(name: "BPF_PROG_TYPE_FLOW_DISSECTOR", value: 22, isUnsigned: true)
!121 = !DIEnumerator(name: "BPF_PROG_TYPE_CGROUP_SYSCTL", value: 23, isUnsigned: true)
!122 = !DIEnumerator(name: "BPF_PROG_TYPE_RAW_TRACEPOINT_WRITABLE", value: 24, isUnsigned: true)
!123 = !DIEnumerator(name: "BPF_PROG_TYPE_CGROUP_SOCKOPT", value: 25, isUnsigned: true)
!124 = !DIEnumerator(name: "BPF_PROG_TYPE_TRACING", value: 26, isUnsigned: true)
!125 = !DIEnumerator(name: "BPF_PROG_TYPE_STRUCT_OPS", value: 27, isUnsigned: true)
!126 = !DIEnumerator(name: "BPF_PROG_TYPE_EXT", value: 28, isUnsigned: true)
!127 = !DIEnumerator(name: "BPF_PROG_TYPE_LSM", value: 29, isUnsigned: true)
!128 = !DIEnumerator(name: "BPF_PROG_TYPE_SK_LOOKUP", value: 30, isUnsigned: true)
!129 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "bpf_attach_type", file: !96, line: 204, baseType: !7, size: 32, elements: !130)
!130 = !{!131, !132, !133, !134, !135, !136, !137, !138, !139, !140, !141, !142, !143, !144, !145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169}
!131 = !DIEnumerator(name: "BPF_CGROUP_INET_INGRESS", value: 0, isUnsigned: true)
!132 = !DIEnumerator(name: "BPF_CGROUP_INET_EGRESS", value: 1, isUnsigned: true)
!133 = !DIEnumerator(name: "BPF_CGROUP_INET_SOCK_CREATE", value: 2, isUnsigned: true)
!134 = !DIEnumerator(name: "BPF_CGROUP_SOCK_OPS", value: 3, isUnsigned: true)
!135 = !DIEnumerator(name: "BPF_SK_SKB_STREAM_PARSER", value: 4, isUnsigned: true)
!136 = !DIEnumerator(name: "BPF_SK_SKB_STREAM_VERDICT", value: 5, isUnsigned: true)
!137 = !DIEnumerator(name: "BPF_CGROUP_DEVICE", value: 6, isUnsigned: true)
!138 = !DIEnumerator(name: "BPF_SK_MSG_VERDICT", value: 7, isUnsigned: true)
!139 = !DIEnumerator(name: "BPF_CGROUP_INET4_BIND", value: 8, isUnsigned: true)
!140 = !DIEnumerator(name: "BPF_CGROUP_INET6_BIND", value: 9, isUnsigned: true)
!141 = !DIEnumerator(name: "BPF_CGROUP_INET4_CONNECT", value: 10, isUnsigned: true)
!142 = !DIEnumerator(name: "BPF_CGROUP_INET6_CONNECT", value: 11, isUnsigned: true)
!143 = !DIEnumerator(name: "BPF_CGROUP_INET4_POST_BIND", value: 12, isUnsigned: true)
!144 = !DIEnumerator(name: "BPF_CGROUP_INET6_POST_BIND", value: 13, isUnsigned: true)
!145 = !DIEnumerator(name: "BPF_CGROUP_UDP4_SENDMSG", value: 14, isUnsigned: true)
!146 = !DIEnumerator(name: "BPF_CGROUP_UDP6_SENDMSG", value: 15, isUnsigned: true)
!147 = !DIEnumerator(name: "BPF_LIRC_MODE2", value: 16, isUnsigned: true)
!148 = !DIEnumerator(name: "BPF_FLOW_DISSECTOR", value: 17, isUnsigned: true)
!149 = !DIEnumerator(name: "BPF_CGROUP_SYSCTL", value: 18, isUnsigned: true)
!150 = !DIEnumerator(name: "BPF_CGROUP_UDP4_RECVMSG", value: 19, isUnsigned: true)
!151 = !DIEnumerator(name: "BPF_CGROUP_UDP6_RECVMSG", value: 20, isUnsigned: true)
!152 = !DIEnumerator(name: "BPF_CGROUP_GETSOCKOPT", value: 21, isUnsigned: true)
!153 = !DIEnumerator(name: "BPF_CGROUP_SETSOCKOPT", value: 22, isUnsigned: true)
!154 = !DIEnumerator(name: "BPF_TRACE_RAW_TP", value: 23, isUnsigned: true)
!155 = !DIEnumerator(name: "BPF_TRACE_FENTRY", value: 24, isUnsigned: true)
!156 = !DIEnumerator(name: "BPF_TRACE_FEXIT", value: 25, isUnsigned: true)
!157 = !DIEnumerator(name: "BPF_MODIFY_RETURN", value: 26, isUnsigned: true)
!158 = !DIEnumerator(name: "BPF_LSM_MAC", value: 27, isUnsigned: true)
!159 = !DIEnumerator(name: "BPF_TRACE_ITER", value: 28, isUnsigned: true)
!160 = !DIEnumerator(name: "BPF_CGROUP_INET4_GETPEERNAME", value: 29, isUnsigned: true)
!161 = !DIEnumerator(name: "BPF_CGROUP_INET6_GETPEERNAME", value: 30, isUnsigned: true)
!162 = !DIEnumerator(name: "BPF_CGROUP_INET4_GETSOCKNAME", value: 31, isUnsigned: true)
!163 = !DIEnumerator(name: "BPF_CGROUP_INET6_GETSOCKNAME", value: 32, isUnsigned: true)
!164 = !DIEnumerator(name: "BPF_XDP_DEVMAP", value: 33, isUnsigned: true)
!165 = !DIEnumerator(name: "BPF_CGROUP_INET_SOCK_RELEASE", value: 34, isUnsigned: true)
!166 = !DIEnumerator(name: "BPF_XDP_CPUMAP", value: 35, isUnsigned: true)
!167 = !DIEnumerator(name: "BPF_SK_LOOKUP", value: 36, isUnsigned: true)
!168 = !DIEnumerator(name: "BPF_XDP", value: 37, isUnsigned: true)
!169 = !DIEnumerator(name: "__MAX_BPF_ATTACH_TYPE", value: 38, isUnsigned: true)
!170 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "bpf_tramp_prog_type", file: !65, line: 578, baseType: !7, size: 32, elements: !171)
!171 = !{!172, !173, !174, !175, !176}
!172 = !DIEnumerator(name: "BPF_TRAMP_FENTRY", value: 0, isUnsigned: true)
!173 = !DIEnumerator(name: "BPF_TRAMP_FEXIT", value: 1, isUnsigned: true)
!174 = !DIEnumerator(name: "BPF_TRAMP_MODIFY_RETURN", value: 2, isUnsigned: true)
!175 = !DIEnumerator(name: "BPF_TRAMP_MAX", value: 3, isUnsigned: true)
!176 = !DIEnumerator(name: "BPF_TRAMP_REPLACE", value: 4, isUnsigned: true)
!177 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "bpf_map_type", file: !96, line: 130, baseType: !7, size: 32, elements: !178)
!178 = !{!179, !180, !181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207}
!179 = !DIEnumerator(name: "BPF_MAP_TYPE_UNSPEC", value: 0, isUnsigned: true)
!180 = !DIEnumerator(name: "BPF_MAP_TYPE_HASH", value: 1, isUnsigned: true)
!181 = !DIEnumerator(name: "BPF_MAP_TYPE_ARRAY", value: 2, isUnsigned: true)
!182 = !DIEnumerator(name: "BPF_MAP_TYPE_PROG_ARRAY", value: 3, isUnsigned: true)
!183 = !DIEnumerator(name: "BPF_MAP_TYPE_PERF_EVENT_ARRAY", value: 4, isUnsigned: true)
!184 = !DIEnumerator(name: "BPF_MAP_TYPE_PERCPU_HASH", value: 5, isUnsigned: true)
!185 = !DIEnumerator(name: "BPF_MAP_TYPE_PERCPU_ARRAY", value: 6, isUnsigned: true)
!186 = !DIEnumerator(name: "BPF_MAP_TYPE_STACK_TRACE", value: 7, isUnsigned: true)
!187 = !DIEnumerator(name: "BPF_MAP_TYPE_CGROUP_ARRAY", value: 8, isUnsigned: true)
!188 = !DIEnumerator(name: "BPF_MAP_TYPE_LRU_HASH", value: 9, isUnsigned: true)
!189 = !DIEnumerator(name: "BPF_MAP_TYPE_LRU_PERCPU_HASH", value: 10, isUnsigned: true)
!190 = !DIEnumerator(name: "BPF_MAP_TYPE_LPM_TRIE", value: 11, isUnsigned: true)
!191 = !DIEnumerator(name: "BPF_MAP_TYPE_ARRAY_OF_MAPS", value: 12, isUnsigned: true)
!192 = !DIEnumerator(name: "BPF_MAP_TYPE_HASH_OF_MAPS", value: 13, isUnsigned: true)
!193 = !DIEnumerator(name: "BPF_MAP_TYPE_DEVMAP", value: 14, isUnsigned: true)
!194 = !DIEnumerator(name: "BPF_MAP_TYPE_SOCKMAP", value: 15, isUnsigned: true)
!195 = !DIEnumerator(name: "BPF_MAP_TYPE_CPUMAP", value: 16, isUnsigned: true)
!196 = !DIEnumerator(name: "BPF_MAP_TYPE_XSKMAP", value: 17, isUnsigned: true)
!197 = !DIEnumerator(name: "BPF_MAP_TYPE_SOCKHASH", value: 18, isUnsigned: true)
!198 = !DIEnumerator(name: "BPF_MAP_TYPE_CGROUP_STORAGE", value: 19, isUnsigned: true)
!199 = !DIEnumerator(name: "BPF_MAP_TYPE_REUSEPORT_SOCKARRAY", value: 20, isUnsigned: true)
!200 = !DIEnumerator(name: "BPF_MAP_TYPE_PERCPU_CGROUP_STORAGE", value: 21, isUnsigned: true)
!201 = !DIEnumerator(name: "BPF_MAP_TYPE_QUEUE", value: 22, isUnsigned: true)
!202 = !DIEnumerator(name: "BPF_MAP_TYPE_STACK", value: 23, isUnsigned: true)
!203 = !DIEnumerator(name: "BPF_MAP_TYPE_SK_STORAGE", value: 24, isUnsigned: true)
!204 = !DIEnumerator(name: "BPF_MAP_TYPE_DEVMAP_HASH", value: 25, isUnsigned: true)
!205 = !DIEnumerator(name: "BPF_MAP_TYPE_STRUCT_OPS", value: 26, isUnsigned: true)
!206 = !DIEnumerator(name: "BPF_MAP_TYPE_RINGBUF", value: 27, isUnsigned: true)
!207 = !DIEnumerator(name: "BPF_MAP_TYPE_INODE_STORAGE", value: 28, isUnsigned: true)
!208 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ethtool_link_ext_state", file: !209, line: 585, baseType: !7, size: 32, elements: !210)
!209 = !DIFile(filename: "./include/uapi/linux/ethtool.h", directory: "/home/lizy2001/genbc/linux")
!210 = !{!211, !212, !213, !214, !215, !216, !217, !218, !219, !220}
!211 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_AUTONEG", value: 0, isUnsigned: true)
!212 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_LINK_TRAINING_FAILURE", value: 1, isUnsigned: true)
!213 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_LINK_LOGICAL_MISMATCH", value: 2, isUnsigned: true)
!214 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_BAD_SIGNAL_INTEGRITY", value: 3, isUnsigned: true)
!215 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_NO_CABLE", value: 4, isUnsigned: true)
!216 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_CABLE_ISSUE", value: 5, isUnsigned: true)
!217 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_EEPROM_ISSUE", value: 6, isUnsigned: true)
!218 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_CALIBRATION_FAILURE", value: 7, isUnsigned: true)
!219 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_POWER_BUDGET_EXCEEDED", value: 8, isUnsigned: true)
!220 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_OVERHEAT", value: 9, isUnsigned: true)
!221 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ethtool_link_ext_substate_autoneg", file: !209, line: 602, baseType: !7, size: 32, elements: !222)
!222 = !{!223, !224, !225, !226, !227, !228}
!223 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_AN_NO_PARTNER_DETECTED", value: 1, isUnsigned: true)
!224 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_AN_ACK_NOT_RECEIVED", value: 2, isUnsigned: true)
!225 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_AN_NEXT_PAGE_EXCHANGE_FAILED", value: 3, isUnsigned: true)
!226 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_AN_NO_PARTNER_DETECTED_FORCE_MODE", value: 4, isUnsigned: true)
!227 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_AN_FEC_MISMATCH_DURING_OVERRIDE", value: 5, isUnsigned: true)
!228 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_AN_NO_HCD", value: 6, isUnsigned: true)
!229 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ethtool_link_ext_substate_link_training", file: !209, line: 615, baseType: !7, size: 32, elements: !230)
!230 = !{!231, !232, !233, !234}
!231 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LT_KR_FRAME_LOCK_NOT_ACQUIRED", value: 1, isUnsigned: true)
!232 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LT_KR_LINK_INHIBIT_TIMEOUT", value: 2, isUnsigned: true)
!233 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LT_KR_LINK_PARTNER_DID_NOT_SET_RECEIVER_READY", value: 3, isUnsigned: true)
!234 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LT_REMOTE_FAULT", value: 4, isUnsigned: true)
!235 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ethtool_link_ext_substate_link_logical_mismatch", file: !209, line: 626, baseType: !7, size: 32, elements: !236)
!236 = !{!237, !238, !239, !240, !241}
!237 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LLM_PCS_DID_NOT_ACQUIRE_BLOCK_LOCK", value: 1, isUnsigned: true)
!238 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LLM_PCS_DID_NOT_ACQUIRE_AM_LOCK", value: 2, isUnsigned: true)
!239 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LLM_PCS_DID_NOT_GET_ALIGN_STATUS", value: 3, isUnsigned: true)
!240 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LLM_FC_FEC_IS_NOT_LOCKED", value: 4, isUnsigned: true)
!241 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LLM_RS_FEC_IS_NOT_LOCKED", value: 5, isUnsigned: true)
!242 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ethtool_link_ext_substate_bad_signal_integrity", file: !209, line: 638, baseType: !7, size: 32, elements: !243)
!243 = !{!244, !245}
!244 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_BSI_LARGE_NUMBER_OF_PHYSICAL_ERRORS", value: 1, isUnsigned: true)
!245 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_BSI_UNSUPPORTED_RATE", value: 2, isUnsigned: true)
!246 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ethtool_link_ext_substate_cable_issue", file: !209, line: 647, baseType: !7, size: 32, elements: !247)
!247 = !{!248, !249}
!248 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_CI_UNSUPPORTED_CABLE", value: 1, isUnsigned: true)
!249 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_CI_CABLE_TEST_FAILURE", value: 2, isUnsigned: true)
!250 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ethtool_phys_id_state", file: !251, line: 54, baseType: !7, size: 32, elements: !252)
!251 = !DIFile(filename: "./include/linux/ethtool.h", directory: "/home/lizy2001/genbc/linux")
!252 = !{!253, !254, !255, !256}
!253 = !DIEnumerator(name: "ETHTOOL_ID_INACTIVE", value: 0, isUnsigned: true)
!254 = !DIEnumerator(name: "ETHTOOL_ID_ACTIVE", value: 1, isUnsigned: true)
!255 = !DIEnumerator(name: "ETHTOOL_ID_ON", value: 2, isUnsigned: true)
!256 = !DIEnumerator(name: "ETHTOOL_ID_OFF", value: 3, isUnsigned: true)
!257 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rx_handler_result", file: !31, line: 423, baseType: !7, size: 32, elements: !258)
!258 = !{!259, !260, !261, !262}
!259 = !DIEnumerator(name: "RX_HANDLER_CONSUMED", value: 0, isUnsigned: true)
!260 = !DIEnumerator(name: "RX_HANDLER_ANOTHER", value: 1, isUnsigned: true)
!261 = !DIEnumerator(name: "RX_HANDLER_EXACT", value: 2, isUnsigned: true)
!262 = !DIEnumerator(name: "RX_HANDLER_PASS", value: 3, isUnsigned: true)
!263 = !DICompositeType(tag: DW_TAG_enumeration_type, scope: !264, file: !31, line: 2085, baseType: !7, size: 32, elements: !7046)
!264 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "net_device", file: !31, line: 1858, size: 15808, elements: !265)
!265 = !{!266, !271, !294, !311, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !328, !336, !337, !338, !339, !340, !341, !342, !343, !344, !370, !380, !381, !382, !387, !388, !392, !395, !5519, !6035, !6039, !6079, !6080, !6081, !6082, !6083, !6084, !6085, !6086, !6087, !6088, !6089, !6090, !6091, !6092, !6093, !6094, !6095, !6096, !6097, !6098, !6099, !6100, !6101, !6102, !6103, !6104, !6105, !6110, !6111, !6112, !6392, !6393, !6394, !6395, !6398, !6401, !6404, !6407, !6410, !6411, !6424, !6425, !6426, !6427, !6428, !6429, !6436, !6437, !6471, !6472, !6473, !6474, !6475, !6476, !6477, !6478, !6479, !6482, !6483, !6484, !6485, !6486, !6487, !6488, !6489, !6490, !6495, !6496, !6497, !6502, !6539, !7001, !7003, !7004, !7008, !7009, !7010, !7011, !7017, !7019, !7022, !7025, !7027, !7028, !7029, !7030, !7031, !7035, !7038}
!266 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !264, file: !31, line: 1859, baseType: !267, size: 128)
!267 = !DICompositeType(tag: DW_TAG_array_type, baseType: !268, size: 128, elements: !269)
!268 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!269 = !{!270}
!270 = !DISubrange(count: 16)
!271 = !DIDerivedType(tag: DW_TAG_member, name: "name_node", scope: !264, file: !31, line: 1860, baseType: !272, size: 64, offset: 128)
!272 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !273, size: 64)
!273 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netdev_name_node", file: !31, line: 938, size: 384, elements: !274)
!274 = !{!275, !283, !289, !291}
!275 = !DIDerivedType(tag: DW_TAG_member, name: "hlist", scope: !273, file: !31, line: 939, baseType: !276, size: 128)
!276 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_node", file: !277, line: 186, size: 128, elements: !278)
!277 = !DIFile(filename: "./include/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!278 = !{!279, !281}
!279 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !276, file: !277, line: 187, baseType: !280, size: 64)
!280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !276, size: 64)
!281 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !276, file: !277, line: 187, baseType: !282, size: 64, offset: 64)
!282 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !280, size: 64)
!283 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !273, file: !31, line: 940, baseType: !284, size: 128, offset: 128)
!284 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_head", file: !277, line: 178, size: 128, elements: !285)
!285 = !{!286, !288}
!286 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !284, file: !277, line: 179, baseType: !287, size: 64)
!287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !284, size: 64)
!288 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !284, file: !277, line: 179, baseType: !287, size: 64, offset: 64)
!289 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !273, file: !31, line: 941, baseType: !290, size: 64, offset: 256)
!290 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !264, size: 64)
!291 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !273, file: !31, line: 942, baseType: !292, size: 64, offset: 320)
!292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !293, size: 64)
!293 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !268)
!294 = !DIDerivedType(tag: DW_TAG_member, name: "ifalias", scope: !264, file: !31, line: 1861, baseType: !295, size: 64, offset: 192)
!295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !296, size: 64)
!296 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_ifalias", file: !31, line: 930, size: 128, elements: !297)
!297 = !{!298, !307}
!298 = !DIDerivedType(tag: DW_TAG_member, name: "rcuhead", scope: !296, file: !31, line: 931, baseType: !299, size: 128, align: 64)
!299 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "callback_head", file: !277, line: 216, size: 128, align: 64, elements: !300)
!300 = !{!301, !303}
!301 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !299, file: !277, line: 217, baseType: !302, size: 64)
!302 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !299, size: 64)
!303 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !299, file: !277, line: 218, baseType: !304, size: 64, offset: 64)
!304 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !305, size: 64)
!305 = !DISubroutineType(types: !306)
!306 = !{null, !302}
!307 = !DIDerivedType(tag: DW_TAG_member, name: "ifalias", scope: !296, file: !31, line: 932, baseType: !308, offset: 128)
!308 = !DICompositeType(tag: DW_TAG_array_type, baseType: !268, elements: !309)
!309 = !{!310}
!310 = !DISubrange(count: -1)
!311 = !DIDerivedType(tag: DW_TAG_member, name: "mem_end", scope: !264, file: !31, line: 1866, baseType: !312, size: 64, offset: 256)
!312 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!313 = !DIDerivedType(tag: DW_TAG_member, name: "mem_start", scope: !264, file: !31, line: 1867, baseType: !312, size: 64, offset: 320)
!314 = !DIDerivedType(tag: DW_TAG_member, name: "base_addr", scope: !264, file: !31, line: 1868, baseType: !312, size: 64, offset: 384)
!315 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !264, file: !31, line: 1869, baseType: !32, size: 32, offset: 448)
!316 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !264, file: !31, line: 1877, baseType: !312, size: 64, offset: 512)
!317 = !DIDerivedType(tag: DW_TAG_member, name: "dev_list", scope: !264, file: !31, line: 1879, baseType: !284, size: 128, offset: 576)
!318 = !DIDerivedType(tag: DW_TAG_member, name: "napi_list", scope: !264, file: !31, line: 1880, baseType: !284, size: 128, offset: 704)
!319 = !DIDerivedType(tag: DW_TAG_member, name: "unreg_list", scope: !264, file: !31, line: 1881, baseType: !284, size: 128, offset: 832)
!320 = !DIDerivedType(tag: DW_TAG_member, name: "close_list", scope: !264, file: !31, line: 1882, baseType: !284, size: 128, offset: 960)
!321 = !DIDerivedType(tag: DW_TAG_member, name: "ptype_all", scope: !264, file: !31, line: 1883, baseType: !284, size: 128, offset: 1088)
!322 = !DIDerivedType(tag: DW_TAG_member, name: "ptype_specific", scope: !264, file: !31, line: 1884, baseType: !284, size: 128, offset: 1216)
!323 = !DIDerivedType(tag: DW_TAG_member, name: "adj_list", scope: !264, file: !31, line: 1889, baseType: !324, size: 256, offset: 1344)
!324 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !264, file: !31, line: 1886, size: 256, elements: !325)
!325 = !{!326, !327}
!326 = !DIDerivedType(tag: DW_TAG_member, name: "upper", scope: !324, file: !31, line: 1887, baseType: !284, size: 128)
!327 = !DIDerivedType(tag: DW_TAG_member, name: "lower", scope: !324, file: !31, line: 1888, baseType: !284, size: 128, offset: 128)
!328 = !DIDerivedType(tag: DW_TAG_member, name: "features", scope: !264, file: !31, line: 1891, baseType: !329, size: 64, offset: 1600)
!329 = !DIDerivedType(tag: DW_TAG_typedef, name: "netdev_features_t", file: !330, line: 12, baseType: !331)
!330 = !DIFile(filename: "./include/linux/netdev_features.h", directory: "/home/lizy2001/genbc/linux")
!331 = !DIDerivedType(tag: DW_TAG_typedef, name: "u64", file: !332, line: 23, baseType: !333)
!332 = !DIFile(filename: "./include/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!333 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u64", file: !334, line: 31, baseType: !335)
!334 = !DIFile(filename: "./include/uapi/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!335 = !DIBasicType(name: "long long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!336 = !DIDerivedType(tag: DW_TAG_member, name: "hw_features", scope: !264, file: !31, line: 1892, baseType: !329, size: 64, offset: 1664)
!337 = !DIDerivedType(tag: DW_TAG_member, name: "wanted_features", scope: !264, file: !31, line: 1893, baseType: !329, size: 64, offset: 1728)
!338 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_features", scope: !264, file: !31, line: 1894, baseType: !329, size: 64, offset: 1792)
!339 = !DIDerivedType(tag: DW_TAG_member, name: "hw_enc_features", scope: !264, file: !31, line: 1895, baseType: !329, size: 64, offset: 1856)
!340 = !DIDerivedType(tag: DW_TAG_member, name: "mpls_features", scope: !264, file: !31, line: 1896, baseType: !329, size: 64, offset: 1920)
!341 = !DIDerivedType(tag: DW_TAG_member, name: "gso_partial_features", scope: !264, file: !31, line: 1897, baseType: !329, size: 64, offset: 1984)
!342 = !DIDerivedType(tag: DW_TAG_member, name: "ifindex", scope: !264, file: !31, line: 1899, baseType: !32, size: 32, offset: 2048)
!343 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !264, file: !31, line: 1900, baseType: !32, size: 32, offset: 2080)
!344 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !264, file: !31, line: 1902, baseType: !345, size: 1472, offset: 2112)
!345 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "net_device_stats", file: !31, line: 169, size: 1472, elements: !346)
!346 = !{!347, !348, !349, !350, !351, !352, !353, !354, !355, !356, !357, !358, !359, !360, !361, !362, !363, !364, !365, !366, !367, !368, !369}
!347 = !DIDerivedType(tag: DW_TAG_member, name: "rx_packets", scope: !345, file: !31, line: 170, baseType: !312, size: 64)
!348 = !DIDerivedType(tag: DW_TAG_member, name: "tx_packets", scope: !345, file: !31, line: 171, baseType: !312, size: 64, offset: 64)
!349 = !DIDerivedType(tag: DW_TAG_member, name: "rx_bytes", scope: !345, file: !31, line: 172, baseType: !312, size: 64, offset: 128)
!350 = !DIDerivedType(tag: DW_TAG_member, name: "tx_bytes", scope: !345, file: !31, line: 173, baseType: !312, size: 64, offset: 192)
!351 = !DIDerivedType(tag: DW_TAG_member, name: "rx_errors", scope: !345, file: !31, line: 174, baseType: !312, size: 64, offset: 256)
!352 = !DIDerivedType(tag: DW_TAG_member, name: "tx_errors", scope: !345, file: !31, line: 175, baseType: !312, size: 64, offset: 320)
!353 = !DIDerivedType(tag: DW_TAG_member, name: "rx_dropped", scope: !345, file: !31, line: 176, baseType: !312, size: 64, offset: 384)
!354 = !DIDerivedType(tag: DW_TAG_member, name: "tx_dropped", scope: !345, file: !31, line: 177, baseType: !312, size: 64, offset: 448)
!355 = !DIDerivedType(tag: DW_TAG_member, name: "multicast", scope: !345, file: !31, line: 178, baseType: !312, size: 64, offset: 512)
!356 = !DIDerivedType(tag: DW_TAG_member, name: "collisions", scope: !345, file: !31, line: 179, baseType: !312, size: 64, offset: 576)
!357 = !DIDerivedType(tag: DW_TAG_member, name: "rx_length_errors", scope: !345, file: !31, line: 180, baseType: !312, size: 64, offset: 640)
!358 = !DIDerivedType(tag: DW_TAG_member, name: "rx_over_errors", scope: !345, file: !31, line: 181, baseType: !312, size: 64, offset: 704)
!359 = !DIDerivedType(tag: DW_TAG_member, name: "rx_crc_errors", scope: !345, file: !31, line: 182, baseType: !312, size: 64, offset: 768)
!360 = !DIDerivedType(tag: DW_TAG_member, name: "rx_frame_errors", scope: !345, file: !31, line: 183, baseType: !312, size: 64, offset: 832)
!361 = !DIDerivedType(tag: DW_TAG_member, name: "rx_fifo_errors", scope: !345, file: !31, line: 184, baseType: !312, size: 64, offset: 896)
!362 = !DIDerivedType(tag: DW_TAG_member, name: "rx_missed_errors", scope: !345, file: !31, line: 185, baseType: !312, size: 64, offset: 960)
!363 = !DIDerivedType(tag: DW_TAG_member, name: "tx_aborted_errors", scope: !345, file: !31, line: 186, baseType: !312, size: 64, offset: 1024)
!364 = !DIDerivedType(tag: DW_TAG_member, name: "tx_carrier_errors", scope: !345, file: !31, line: 187, baseType: !312, size: 64, offset: 1088)
!365 = !DIDerivedType(tag: DW_TAG_member, name: "tx_fifo_errors", scope: !345, file: !31, line: 188, baseType: !312, size: 64, offset: 1152)
!366 = !DIDerivedType(tag: DW_TAG_member, name: "tx_heartbeat_errors", scope: !345, file: !31, line: 189, baseType: !312, size: 64, offset: 1216)
!367 = !DIDerivedType(tag: DW_TAG_member, name: "tx_window_errors", scope: !345, file: !31, line: 190, baseType: !312, size: 64, offset: 1280)
!368 = !DIDerivedType(tag: DW_TAG_member, name: "rx_compressed", scope: !345, file: !31, line: 191, baseType: !312, size: 64, offset: 1344)
!369 = !DIDerivedType(tag: DW_TAG_member, name: "tx_compressed", scope: !345, file: !31, line: 192, baseType: !312, size: 64, offset: 1408)
!370 = !DIDerivedType(tag: DW_TAG_member, name: "rx_dropped", scope: !264, file: !31, line: 1904, baseType: !371, size: 64, offset: 3584)
!371 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_long_t", file: !372, line: 13, baseType: !373)
!372 = !DIFile(filename: "./include/asm-generic/atomic-long.h", directory: "/home/lizy2001/genbc/linux")
!373 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic64_t", file: !277, line: 175, baseType: !374)
!374 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !277, line: 173, size: 64, elements: !375)
!375 = !{!376}
!376 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !374, file: !277, line: 174, baseType: !377, size: 64)
!377 = !DIDerivedType(tag: DW_TAG_typedef, name: "s64", file: !332, line: 22, baseType: !378)
!378 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s64", file: !334, line: 30, baseType: !379)
!379 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!380 = !DIDerivedType(tag: DW_TAG_member, name: "tx_dropped", scope: !264, file: !31, line: 1905, baseType: !371, size: 64, offset: 3648)
!381 = !DIDerivedType(tag: DW_TAG_member, name: "rx_nohandler", scope: !264, file: !31, line: 1906, baseType: !371, size: 64, offset: 3712)
!382 = !DIDerivedType(tag: DW_TAG_member, name: "carrier_up_count", scope: !264, file: !31, line: 1909, baseType: !383, size: 32, offset: 3776)
!383 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_t", file: !277, line: 168, baseType: !384)
!384 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !277, line: 166, size: 32, elements: !385)
!385 = !{!386}
!386 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !384, file: !277, line: 167, baseType: !32, size: 32)
!387 = !DIDerivedType(tag: DW_TAG_member, name: "carrier_down_count", scope: !264, file: !31, line: 1910, baseType: !383, size: 32, offset: 3808)
!388 = !DIDerivedType(tag: DW_TAG_member, name: "wireless_handlers", scope: !264, file: !31, line: 1913, baseType: !389, size: 64, offset: 3840)
!389 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !390, size: 64)
!390 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !391)
!391 = !DICompositeType(tag: DW_TAG_structure_type, name: "iw_handler_def", file: !31, line: 1913, flags: DIFlagFwdDecl)
!392 = !DIDerivedType(tag: DW_TAG_member, name: "wireless_data", scope: !264, file: !31, line: 1914, baseType: !393, size: 64, offset: 3904)
!393 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !394, size: 64)
!394 = !DICompositeType(tag: DW_TAG_structure_type, name: "iw_public_data", file: !31, line: 1914, flags: DIFlagFwdDecl)
!395 = !DIDerivedType(tag: DW_TAG_member, name: "netdev_ops", scope: !264, file: !31, line: 1916, baseType: !396, size: 64, offset: 3968)
!396 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !397, size: 64)
!397 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !398)
!398 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "net_device_ops", file: !31, line: 1283, size: 4416, elements: !399)
!399 = !{!400, !404, !408, !409, !410, !573, !577, !582, !586, !587, !592, !593, !716, !721, !725, !731, !735, !767, !775, !779, !784, !788, !789, !795, !799, !803, !807, !808, !830, !834, !849, !860, !864, !873, !877, !878, !882, !903, !907, !911, !915, !919, !926, !930, !948, !952, !1002, !1006, !1011, !1015, !1019, !1023, !1033, !1034, !1043, !1049, !1050, !1054, !1058, !1062, !1066, !1067, !1071, !1072, !5479, !5499, !5503, !5509, !5515}
!400 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_init", scope: !398, file: !31, line: 1284, baseType: !401, size: 64)
!401 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !402, size: 64)
!402 = !DISubroutineType(types: !403)
!403 = !{!32, !290}
!404 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_uninit", scope: !398, file: !31, line: 1285, baseType: !405, size: 64, offset: 64)
!405 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !406, size: 64)
!406 = !DISubroutineType(types: !407)
!407 = !{null, !290}
!408 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_open", scope: !398, file: !31, line: 1286, baseType: !401, size: 64, offset: 128)
!409 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_stop", scope: !398, file: !31, line: 1287, baseType: !401, size: 64, offset: 192)
!410 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_start_xmit", scope: !398, file: !31, line: 1288, baseType: !411, size: 64, offset: 256)
!411 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !412, size: 64)
!412 = !DISubroutineType(types: !413)
!413 = !{!414, !415, !290}
!414 = !DIDerivedType(tag: DW_TAG_typedef, name: "netdev_tx_t", file: !31, line: 120, baseType: !30)
!415 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !416, size: 64)
!416 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sk_buff", file: !417, line: 713, size: 1600, elements: !418)
!417 = !DIFile(filename: "./include/linux/skbuff.h", directory: "/home/lizy2001/genbc/linux")
!418 = !{!419, !441, !449, !456, !460, !472, !473, !474, !477, !478, !479, !485, !486, !487, !488, !489, !490, !491, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519, !520, !531, !532, !533, !534, !536, !537, !542, !547, !552, !553, !554, !555, !556, !557, !558, !559, !560, !562, !563, !565, !566, !567}
!419 = !DIDerivedType(tag: DW_TAG_member, scope: !416, file: !417, line: 714, baseType: !420, size: 192)
!420 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !416, file: !417, line: 714, size: 192, elements: !421)
!421 = !{!422, !432, !440}
!422 = !DIDerivedType(tag: DW_TAG_member, scope: !420, file: !417, line: 715, baseType: !423, size: 192)
!423 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !420, file: !417, line: 715, size: 192, elements: !424)
!424 = !{!425, !426, !427}
!425 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !423, file: !417, line: 717, baseType: !415, size: 64)
!426 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !423, file: !417, line: 718, baseType: !415, size: 64, offset: 64)
!427 = !DIDerivedType(tag: DW_TAG_member, scope: !423, file: !417, line: 720, baseType: !428, size: 64, offset: 128)
!428 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !423, file: !417, line: 720, size: 64, elements: !429)
!429 = !{!430, !431}
!430 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !428, file: !417, line: 721, baseType: !290, size: 64)
!431 = !DIDerivedType(tag: DW_TAG_member, name: "dev_scratch", scope: !428, file: !417, line: 726, baseType: !312, size: 64)
!432 = !DIDerivedType(tag: DW_TAG_member, name: "rbnode", scope: !420, file: !417, line: 729, baseType: !433, size: 192, align: 64)
!433 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_node", file: !434, line: 24, size: 192, align: 64, elements: !435)
!434 = !DIFile(filename: "./include/linux/rbtree.h", directory: "/home/lizy2001/genbc/linux")
!435 = !{!436, !437, !439}
!436 = !DIDerivedType(tag: DW_TAG_member, name: "__rb_parent_color", scope: !433, file: !434, line: 25, baseType: !312, size: 64)
!437 = !DIDerivedType(tag: DW_TAG_member, name: "rb_right", scope: !433, file: !434, line: 26, baseType: !438, size: 64, offset: 64)
!438 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !433, size: 64)
!439 = !DIDerivedType(tag: DW_TAG_member, name: "rb_left", scope: !433, file: !434, line: 27, baseType: !438, size: 64, offset: 128)
!440 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !420, file: !417, line: 730, baseType: !284, size: 128)
!441 = !DIDerivedType(tag: DW_TAG_member, scope: !416, file: !417, line: 733, baseType: !442, size: 64, offset: 192)
!442 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !416, file: !417, line: 733, size: 64, elements: !443)
!443 = !{!444, !448}
!444 = !DIDerivedType(tag: DW_TAG_member, name: "sk", scope: !442, file: !417, line: 734, baseType: !445, size: 64)
!445 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !446, size: 64)
!446 = !DICompositeType(tag: DW_TAG_structure_type, name: "sock", file: !447, line: 19, flags: DIFlagFwdDecl)
!447 = !DIFile(filename: "./include/linux/kobject_ns.h", directory: "/home/lizy2001/genbc/linux")
!448 = !DIDerivedType(tag: DW_TAG_member, name: "ip_defrag_offset", scope: !442, file: !417, line: 735, baseType: !32, size: 32)
!449 = !DIDerivedType(tag: DW_TAG_member, scope: !416, file: !417, line: 738, baseType: !450, size: 64, offset: 256)
!450 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !416, file: !417, line: 738, size: 64, elements: !451)
!451 = !{!452, !455}
!452 = !DIDerivedType(tag: DW_TAG_member, name: "tstamp", scope: !450, file: !417, line: 739, baseType: !453, size: 64)
!453 = !DIDerivedType(tag: DW_TAG_typedef, name: "ktime_t", file: !454, line: 29, baseType: !377)
!454 = !DIFile(filename: "./include/linux/ktime.h", directory: "/home/lizy2001/genbc/linux")
!455 = !DIDerivedType(tag: DW_TAG_member, name: "skb_mstamp_ns", scope: !450, file: !417, line: 740, baseType: !331, size: 64)
!456 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !416, file: !417, line: 748, baseType: !457, size: 384, align: 64, offset: 320)
!457 = !DICompositeType(tag: DW_TAG_array_type, baseType: !268, size: 384, elements: !458)
!458 = !{!459}
!459 = !DISubrange(count: 48)
!460 = !DIDerivedType(tag: DW_TAG_member, scope: !416, file: !417, line: 750, baseType: !461, size: 128, offset: 704)
!461 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !416, file: !417, line: 750, size: 128, elements: !462)
!462 = !{!463, !471}
!463 = !DIDerivedType(tag: DW_TAG_member, scope: !461, file: !417, line: 751, baseType: !464, size: 128)
!464 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !461, file: !417, line: 751, size: 128, elements: !465)
!465 = !{!466, !467}
!466 = !DIDerivedType(tag: DW_TAG_member, name: "_skb_refdst", scope: !464, file: !417, line: 752, baseType: !312, size: 64)
!467 = !DIDerivedType(tag: DW_TAG_member, name: "destructor", scope: !464, file: !417, line: 753, baseType: !468, size: 64, offset: 64)
!468 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !469, size: 64)
!469 = !DISubroutineType(types: !470)
!470 = !{null, !415}
!471 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_tsorted_anchor", scope: !461, file: !417, line: 755, baseType: !284, size: 128)
!472 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !416, file: !417, line: 761, baseType: !7, size: 32, offset: 832)
!473 = !DIDerivedType(tag: DW_TAG_member, name: "data_len", scope: !416, file: !417, line: 762, baseType: !7, size: 32, offset: 864)
!474 = !DIDerivedType(tag: DW_TAG_member, name: "mac_len", scope: !416, file: !417, line: 763, baseType: !475, size: 16, offset: 896)
!475 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u16", file: !334, line: 24, baseType: !476)
!476 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!477 = !DIDerivedType(tag: DW_TAG_member, name: "hdr_len", scope: !416, file: !417, line: 764, baseType: !475, size: 16, offset: 912)
!478 = !DIDerivedType(tag: DW_TAG_member, name: "queue_mapping", scope: !416, file: !417, line: 769, baseType: !475, size: 16, offset: 928)
!479 = !DIDerivedType(tag: DW_TAG_member, name: "__cloned_offset", scope: !416, file: !417, line: 780, baseType: !480, offset: 944)
!480 = !DICompositeType(tag: DW_TAG_array_type, baseType: !481, elements: !483)
!481 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u8", file: !334, line: 21, baseType: !482)
!482 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!483 = !{!484}
!484 = !DISubrange(count: 0)
!485 = !DIDerivedType(tag: DW_TAG_member, name: "cloned", scope: !416, file: !417, line: 782, baseType: !481, size: 1, offset: 944, flags: DIFlagBitField, extraData: i64 944)
!486 = !DIDerivedType(tag: DW_TAG_member, name: "nohdr", scope: !416, file: !417, line: 783, baseType: !481, size: 1, offset: 945, flags: DIFlagBitField, extraData: i64 944)
!487 = !DIDerivedType(tag: DW_TAG_member, name: "fclone", scope: !416, file: !417, line: 784, baseType: !481, size: 2, offset: 946, flags: DIFlagBitField, extraData: i64 944)
!488 = !DIDerivedType(tag: DW_TAG_member, name: "peeked", scope: !416, file: !417, line: 785, baseType: !481, size: 1, offset: 948, flags: DIFlagBitField, extraData: i64 944)
!489 = !DIDerivedType(tag: DW_TAG_member, name: "head_frag", scope: !416, file: !417, line: 786, baseType: !481, size: 1, offset: 949, flags: DIFlagBitField, extraData: i64 944)
!490 = !DIDerivedType(tag: DW_TAG_member, name: "pfmemalloc", scope: !416, file: !417, line: 787, baseType: !481, size: 1, offset: 950, flags: DIFlagBitField, extraData: i64 944)
!491 = !DIDerivedType(tag: DW_TAG_member, name: "headers_start", scope: !416, file: !417, line: 795, baseType: !492, offset: 960)
!492 = !DICompositeType(tag: DW_TAG_array_type, baseType: !493, elements: !483)
!493 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u32", file: !334, line: 27, baseType: !7)
!494 = !DIDerivedType(tag: DW_TAG_member, name: "__pkt_type_offset", scope: !416, file: !417, line: 807, baseType: !480, offset: 960)
!495 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_type", scope: !416, file: !417, line: 809, baseType: !481, size: 3, offset: 960, flags: DIFlagBitField, extraData: i64 960)
!496 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_df", scope: !416, file: !417, line: 810, baseType: !481, size: 1, offset: 963, flags: DIFlagBitField, extraData: i64 960)
!497 = !DIDerivedType(tag: DW_TAG_member, name: "nf_trace", scope: !416, file: !417, line: 811, baseType: !481, size: 1, offset: 964, flags: DIFlagBitField, extraData: i64 960)
!498 = !DIDerivedType(tag: DW_TAG_member, name: "ip_summed", scope: !416, file: !417, line: 812, baseType: !481, size: 2, offset: 965, flags: DIFlagBitField, extraData: i64 960)
!499 = !DIDerivedType(tag: DW_TAG_member, name: "ooo_okay", scope: !416, file: !417, line: 813, baseType: !481, size: 1, offset: 967, flags: DIFlagBitField, extraData: i64 960)
!500 = !DIDerivedType(tag: DW_TAG_member, name: "l4_hash", scope: !416, file: !417, line: 815, baseType: !481, size: 1, offset: 968, flags: DIFlagBitField, extraData: i64 960)
!501 = !DIDerivedType(tag: DW_TAG_member, name: "sw_hash", scope: !416, file: !417, line: 816, baseType: !481, size: 1, offset: 969, flags: DIFlagBitField, extraData: i64 960)
!502 = !DIDerivedType(tag: DW_TAG_member, name: "wifi_acked_valid", scope: !416, file: !417, line: 817, baseType: !481, size: 1, offset: 970, flags: DIFlagBitField, extraData: i64 960)
!503 = !DIDerivedType(tag: DW_TAG_member, name: "wifi_acked", scope: !416, file: !417, line: 818, baseType: !481, size: 1, offset: 971, flags: DIFlagBitField, extraData: i64 960)
!504 = !DIDerivedType(tag: DW_TAG_member, name: "no_fcs", scope: !416, file: !417, line: 819, baseType: !481, size: 1, offset: 972, flags: DIFlagBitField, extraData: i64 960)
!505 = !DIDerivedType(tag: DW_TAG_member, name: "encapsulation", scope: !416, file: !417, line: 821, baseType: !481, size: 1, offset: 973, flags: DIFlagBitField, extraData: i64 960)
!506 = !DIDerivedType(tag: DW_TAG_member, name: "encap_hdr_csum", scope: !416, file: !417, line: 822, baseType: !481, size: 1, offset: 974, flags: DIFlagBitField, extraData: i64 960)
!507 = !DIDerivedType(tag: DW_TAG_member, name: "csum_valid", scope: !416, file: !417, line: 823, baseType: !481, size: 1, offset: 975, flags: DIFlagBitField, extraData: i64 960)
!508 = !DIDerivedType(tag: DW_TAG_member, name: "__pkt_vlan_present_offset", scope: !416, file: !417, line: 832, baseType: !480, offset: 976)
!509 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_present", scope: !416, file: !417, line: 834, baseType: !481, size: 1, offset: 976, flags: DIFlagBitField, extraData: i64 976)
!510 = !DIDerivedType(tag: DW_TAG_member, name: "csum_complete_sw", scope: !416, file: !417, line: 835, baseType: !481, size: 1, offset: 977, flags: DIFlagBitField, extraData: i64 976)
!511 = !DIDerivedType(tag: DW_TAG_member, name: "csum_level", scope: !416, file: !417, line: 836, baseType: !481, size: 2, offset: 978, flags: DIFlagBitField, extraData: i64 976)
!512 = !DIDerivedType(tag: DW_TAG_member, name: "csum_not_inet", scope: !416, file: !417, line: 837, baseType: !481, size: 1, offset: 980, flags: DIFlagBitField, extraData: i64 976)
!513 = !DIDerivedType(tag: DW_TAG_member, name: "dst_pending_confirm", scope: !416, file: !417, line: 838, baseType: !481, size: 1, offset: 981, flags: DIFlagBitField, extraData: i64 976)
!514 = !DIDerivedType(tag: DW_TAG_member, name: "ndisc_nodetype", scope: !416, file: !417, line: 840, baseType: !481, size: 2, offset: 982, flags: DIFlagBitField, extraData: i64 976)
!515 = !DIDerivedType(tag: DW_TAG_member, name: "ipvs_property", scope: !416, file: !417, line: 843, baseType: !481, size: 1, offset: 984, flags: DIFlagBitField, extraData: i64 976)
!516 = !DIDerivedType(tag: DW_TAG_member, name: "inner_protocol_type", scope: !416, file: !417, line: 844, baseType: !481, size: 1, offset: 985, flags: DIFlagBitField, extraData: i64 976)
!517 = !DIDerivedType(tag: DW_TAG_member, name: "remcsum_offload", scope: !416, file: !417, line: 845, baseType: !481, size: 1, offset: 986, flags: DIFlagBitField, extraData: i64 976)
!518 = !DIDerivedType(tag: DW_TAG_member, name: "offload_fwd_mark", scope: !416, file: !417, line: 847, baseType: !481, size: 1, offset: 987, flags: DIFlagBitField, extraData: i64 976)
!519 = !DIDerivedType(tag: DW_TAG_member, name: "offload_l3_fwd_mark", scope: !416, file: !417, line: 848, baseType: !481, size: 1, offset: 988, flags: DIFlagBitField, extraData: i64 976)
!520 = !DIDerivedType(tag: DW_TAG_member, scope: !416, file: !417, line: 866, baseType: !521, size: 32, offset: 992)
!521 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !416, file: !417, line: 866, size: 32, elements: !522)
!522 = !{!523, !526}
!523 = !DIDerivedType(tag: DW_TAG_member, name: "csum", scope: !521, file: !417, line: 867, baseType: !524, size: 32)
!524 = !DIDerivedType(tag: DW_TAG_typedef, name: "__wsum", file: !525, line: 37, baseType: !493)
!525 = !DIFile(filename: "./include/uapi/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!526 = !DIDerivedType(tag: DW_TAG_member, scope: !521, file: !417, line: 868, baseType: !527, size: 32)
!527 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !521, file: !417, line: 868, size: 32, elements: !528)
!528 = !{!529, !530}
!529 = !DIDerivedType(tag: DW_TAG_member, name: "csum_start", scope: !527, file: !417, line: 869, baseType: !475, size: 16)
!530 = !DIDerivedType(tag: DW_TAG_member, name: "csum_offset", scope: !527, file: !417, line: 870, baseType: !475, size: 16, offset: 16)
!531 = !DIDerivedType(tag: DW_TAG_member, name: "priority", scope: !416, file: !417, line: 873, baseType: !493, size: 32, offset: 1024)
!532 = !DIDerivedType(tag: DW_TAG_member, name: "skb_iif", scope: !416, file: !417, line: 874, baseType: !32, size: 32, offset: 1056)
!533 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !416, file: !417, line: 875, baseType: !493, size: 32, offset: 1088)
!534 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_proto", scope: !416, file: !417, line: 876, baseType: !535, size: 16, offset: 1120)
!535 = !DIDerivedType(tag: DW_TAG_typedef, name: "__be16", file: !525, line: 30, baseType: !475)
!536 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_tci", scope: !416, file: !417, line: 877, baseType: !475, size: 16, offset: 1136)
!537 = !DIDerivedType(tag: DW_TAG_member, scope: !416, file: !417, line: 879, baseType: !538, size: 32, offset: 1152)
!538 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !416, file: !417, line: 879, size: 32, elements: !539)
!539 = !{!540, !541}
!540 = !DIDerivedType(tag: DW_TAG_member, name: "napi_id", scope: !538, file: !417, line: 880, baseType: !7, size: 32)
!541 = !DIDerivedType(tag: DW_TAG_member, name: "sender_cpu", scope: !538, file: !417, line: 881, baseType: !7, size: 32)
!542 = !DIDerivedType(tag: DW_TAG_member, scope: !416, file: !417, line: 888, baseType: !543, size: 32, offset: 1184)
!543 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !416, file: !417, line: 888, size: 32, elements: !544)
!544 = !{!545, !546}
!545 = !DIDerivedType(tag: DW_TAG_member, name: "mark", scope: !543, file: !417, line: 889, baseType: !493, size: 32)
!546 = !DIDerivedType(tag: DW_TAG_member, name: "reserved_tailroom", scope: !543, file: !417, line: 890, baseType: !493, size: 32)
!547 = !DIDerivedType(tag: DW_TAG_member, scope: !416, file: !417, line: 893, baseType: !548, size: 16, offset: 1216)
!548 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !416, file: !417, line: 893, size: 16, elements: !549)
!549 = !{!550, !551}
!550 = !DIDerivedType(tag: DW_TAG_member, name: "inner_protocol", scope: !548, file: !417, line: 894, baseType: !535, size: 16)
!551 = !DIDerivedType(tag: DW_TAG_member, name: "inner_ipproto", scope: !548, file: !417, line: 895, baseType: !481, size: 8)
!552 = !DIDerivedType(tag: DW_TAG_member, name: "inner_transport_header", scope: !416, file: !417, line: 898, baseType: !475, size: 16, offset: 1232)
!553 = !DIDerivedType(tag: DW_TAG_member, name: "inner_network_header", scope: !416, file: !417, line: 899, baseType: !475, size: 16, offset: 1248)
!554 = !DIDerivedType(tag: DW_TAG_member, name: "inner_mac_header", scope: !416, file: !417, line: 900, baseType: !475, size: 16, offset: 1264)
!555 = !DIDerivedType(tag: DW_TAG_member, name: "protocol", scope: !416, file: !417, line: 902, baseType: !535, size: 16, offset: 1280)
!556 = !DIDerivedType(tag: DW_TAG_member, name: "transport_header", scope: !416, file: !417, line: 903, baseType: !475, size: 16, offset: 1296)
!557 = !DIDerivedType(tag: DW_TAG_member, name: "network_header", scope: !416, file: !417, line: 904, baseType: !475, size: 16, offset: 1312)
!558 = !DIDerivedType(tag: DW_TAG_member, name: "mac_header", scope: !416, file: !417, line: 905, baseType: !475, size: 16, offset: 1328)
!559 = !DIDerivedType(tag: DW_TAG_member, name: "headers_end", scope: !416, file: !417, line: 908, baseType: !492, offset: 1344)
!560 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !416, file: !417, line: 912, baseType: !561, size: 32, offset: 1344)
!561 = !DIDerivedType(tag: DW_TAG_typedef, name: "sk_buff_data_t", file: !417, line: 606, baseType: !7)
!562 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !416, file: !417, line: 913, baseType: !561, size: 32, offset: 1376)
!563 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !416, file: !417, line: 914, baseType: !564, size: 64, offset: 1408)
!564 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !482, size: 64)
!565 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !416, file: !417, line: 915, baseType: !564, size: 64, offset: 1472)
!566 = !DIDerivedType(tag: DW_TAG_member, name: "truesize", scope: !416, file: !417, line: 916, baseType: !7, size: 32, offset: 1536)
!567 = !DIDerivedType(tag: DW_TAG_member, name: "users", scope: !416, file: !417, line: 917, baseType: !568, size: 32, offset: 1568)
!568 = !DIDerivedType(tag: DW_TAG_typedef, name: "refcount_t", file: !569, line: 113, baseType: !570)
!569 = !DIFile(filename: "./include/linux/refcount.h", directory: "/home/lizy2001/genbc/linux")
!570 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "refcount_struct", file: !569, line: 111, size: 32, elements: !571)
!571 = !{!572}
!572 = !DIDerivedType(tag: DW_TAG_member, name: "refs", scope: !570, file: !569, line: 112, baseType: !383, size: 32)
!573 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_features_check", scope: !398, file: !31, line: 1290, baseType: !574, size: 64, offset: 320)
!574 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !575, size: 64)
!575 = !DISubroutineType(types: !576)
!576 = !{!329, !415, !290, !329}
!577 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_select_queue", scope: !398, file: !31, line: 1293, baseType: !578, size: 64, offset: 384)
!578 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !579, size: 64)
!579 = !DISubroutineType(types: !580)
!580 = !{!581, !290, !415, !290}
!581 = !DIDerivedType(tag: DW_TAG_typedef, name: "u16", file: !332, line: 19, baseType: !475)
!582 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_change_rx_flags", scope: !398, file: !31, line: 1296, baseType: !583, size: 64, offset: 448)
!583 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !584, size: 64)
!584 = !DISubroutineType(types: !585)
!585 = !{null, !290, !32}
!586 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_rx_mode", scope: !398, file: !31, line: 1298, baseType: !405, size: 64, offset: 512)
!587 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_mac_address", scope: !398, file: !31, line: 1299, baseType: !588, size: 64, offset: 576)
!588 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !589, size: 64)
!589 = !DISubroutineType(types: !590)
!590 = !{!32, !290, !591}
!591 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!592 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_validate_addr", scope: !398, file: !31, line: 1301, baseType: !401, size: 64, offset: 640)
!593 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_do_ioctl", scope: !398, file: !31, line: 1302, baseType: !594, size: 64, offset: 704)
!594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !595, size: 64)
!595 = !DISubroutineType(types: !596)
!596 = !{!32, !290, !597, !32}
!597 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !598, size: 64)
!598 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ifreq", file: !599, line: 234, size: 320, elements: !600)
!599 = !DIFile(filename: "./include/uapi/linux/if.h", directory: "/home/lizy2001/genbc/linux")
!600 = !{!601, !605}
!601 = !DIDerivedType(tag: DW_TAG_member, name: "ifr_ifrn", scope: !598, file: !599, line: 239, baseType: !602, size: 128)
!602 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !598, file: !599, line: 236, size: 128, elements: !603)
!603 = !{!604}
!604 = !DIDerivedType(tag: DW_TAG_member, name: "ifrn_name", scope: !602, file: !599, line: 238, baseType: !267, size: 128)
!605 = !DIDerivedType(tag: DW_TAG_member, name: "ifr_ifru", scope: !598, file: !599, line: 255, baseType: !606, size: 192, offset: 128)
!606 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !598, file: !599, line: 241, size: 192, elements: !607)
!607 = !{!608, !620, !621, !622, !623, !624, !626, !627, !628, !637, !638, !639, !640}
!608 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_addr", scope: !606, file: !599, line: 242, baseType: !609, size: 128)
!609 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sockaddr", file: !610, line: 32, size: 128, elements: !611)
!610 = !DIFile(filename: "./include/linux/socket.h", directory: "/home/lizy2001/genbc/linux")
!611 = !{!612, !616}
!612 = !DIDerivedType(tag: DW_TAG_member, name: "sa_family", scope: !609, file: !610, line: 33, baseType: !613, size: 16)
!613 = !DIDerivedType(tag: DW_TAG_typedef, name: "sa_family_t", file: !610, line: 26, baseType: !614)
!614 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_sa_family_t", file: !615, line: 10, baseType: !476)
!615 = !DIFile(filename: "./include/uapi/linux/socket.h", directory: "/home/lizy2001/genbc/linux")
!616 = !DIDerivedType(tag: DW_TAG_member, name: "sa_data", scope: !609, file: !610, line: 34, baseType: !617, size: 112, offset: 16)
!617 = !DICompositeType(tag: DW_TAG_array_type, baseType: !268, size: 112, elements: !618)
!618 = !{!619}
!619 = !DISubrange(count: 14)
!620 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_dstaddr", scope: !606, file: !599, line: 243, baseType: !609, size: 128)
!621 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_broadaddr", scope: !606, file: !599, line: 244, baseType: !609, size: 128)
!622 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_netmask", scope: !606, file: !599, line: 245, baseType: !609, size: 128)
!623 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_hwaddr", scope: !606, file: !599, line: 246, baseType: !609, size: 128)
!624 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_flags", scope: !606, file: !599, line: 247, baseType: !625, size: 16)
!625 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!626 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_ivalue", scope: !606, file: !599, line: 248, baseType: !32, size: 32)
!627 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_mtu", scope: !606, file: !599, line: 249, baseType: !32, size: 32)
!628 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_map", scope: !606, file: !599, line: 250, baseType: !629, size: 192)
!629 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ifmap", file: !599, line: 196, size: 192, elements: !630)
!630 = !{!631, !632, !633, !634, !635, !636}
!631 = !DIDerivedType(tag: DW_TAG_member, name: "mem_start", scope: !629, file: !599, line: 197, baseType: !312, size: 64)
!632 = !DIDerivedType(tag: DW_TAG_member, name: "mem_end", scope: !629, file: !599, line: 198, baseType: !312, size: 64, offset: 64)
!633 = !DIDerivedType(tag: DW_TAG_member, name: "base_addr", scope: !629, file: !599, line: 199, baseType: !476, size: 16, offset: 128)
!634 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !629, file: !599, line: 200, baseType: !482, size: 8, offset: 144)
!635 = !DIDerivedType(tag: DW_TAG_member, name: "dma", scope: !629, file: !599, line: 201, baseType: !482, size: 8, offset: 152)
!636 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !629, file: !599, line: 202, baseType: !482, size: 8, offset: 160)
!637 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_slave", scope: !606, file: !599, line: 251, baseType: !267, size: 128)
!638 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_newname", scope: !606, file: !599, line: 252, baseType: !267, size: 128)
!639 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_data", scope: !606, file: !599, line: 253, baseType: !591, size: 64)
!640 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_settings", scope: !606, file: !599, line: 254, baseType: !641, size: 128)
!641 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "if_settings", file: !599, line: 207, size: 128, elements: !642)
!642 = !{!643, !644, !645}
!643 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !641, file: !599, line: 208, baseType: !7, size: 32)
!644 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !641, file: !599, line: 209, baseType: !7, size: 32, offset: 32)
!645 = !DIDerivedType(tag: DW_TAG_member, name: "ifs_ifsu", scope: !641, file: !599, line: 222, baseType: !646, size: 64, offset: 64)
!646 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !641, file: !599, line: 210, size: 64, elements: !647)
!647 = !{!648, !656, !663, !675, !681, !688, !699, !707}
!648 = !DIDerivedType(tag: DW_TAG_member, name: "raw_hdlc", scope: !646, file: !599, line: 212, baseType: !649, size: 64)
!649 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !650, size: 64)
!650 = !DIDerivedType(tag: DW_TAG_typedef, name: "raw_hdlc_proto", file: !651, line: 56, baseType: !652)
!651 = !DIFile(filename: "./include/uapi/linux/hdlc/ioctl.h", directory: "/home/lizy2001/genbc/linux")
!652 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !651, line: 53, size: 32, elements: !653)
!653 = !{!654, !655}
!654 = !DIDerivedType(tag: DW_TAG_member, name: "encoding", scope: !652, file: !651, line: 54, baseType: !476, size: 16)
!655 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !652, file: !651, line: 55, baseType: !476, size: 16, offset: 16)
!656 = !DIDerivedType(tag: DW_TAG_member, name: "cisco", scope: !646, file: !599, line: 213, baseType: !657, size: 64)
!657 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !658, size: 64)
!658 = !DIDerivedType(tag: DW_TAG_typedef, name: "cisco_proto", file: !651, line: 80, baseType: !659)
!659 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !651, line: 77, size: 64, elements: !660)
!660 = !{!661, !662}
!661 = !DIDerivedType(tag: DW_TAG_member, name: "interval", scope: !659, file: !651, line: 78, baseType: !7, size: 32)
!662 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !659, file: !651, line: 79, baseType: !7, size: 32, offset: 32)
!663 = !DIDerivedType(tag: DW_TAG_member, name: "fr", scope: !646, file: !599, line: 214, baseType: !664, size: 64)
!664 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !665, size: 64)
!665 = !DIDerivedType(tag: DW_TAG_typedef, name: "fr_proto", file: !651, line: 66, baseType: !666)
!666 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !651, line: 58, size: 192, elements: !667)
!667 = !{!668, !669, !670, !671, !672, !673, !674}
!668 = !DIDerivedType(tag: DW_TAG_member, name: "t391", scope: !666, file: !651, line: 59, baseType: !7, size: 32)
!669 = !DIDerivedType(tag: DW_TAG_member, name: "t392", scope: !666, file: !651, line: 60, baseType: !7, size: 32, offset: 32)
!670 = !DIDerivedType(tag: DW_TAG_member, name: "n391", scope: !666, file: !651, line: 61, baseType: !7, size: 32, offset: 64)
!671 = !DIDerivedType(tag: DW_TAG_member, name: "n392", scope: !666, file: !651, line: 62, baseType: !7, size: 32, offset: 96)
!672 = !DIDerivedType(tag: DW_TAG_member, name: "n393", scope: !666, file: !651, line: 63, baseType: !7, size: 32, offset: 128)
!673 = !DIDerivedType(tag: DW_TAG_member, name: "lmi", scope: !666, file: !651, line: 64, baseType: !476, size: 16, offset: 160)
!674 = !DIDerivedType(tag: DW_TAG_member, name: "dce", scope: !666, file: !651, line: 65, baseType: !476, size: 16, offset: 176)
!675 = !DIDerivedType(tag: DW_TAG_member, name: "fr_pvc", scope: !646, file: !599, line: 215, baseType: !676, size: 64)
!676 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !677, size: 64)
!677 = !DIDerivedType(tag: DW_TAG_typedef, name: "fr_proto_pvc", file: !651, line: 70, baseType: !678)
!678 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !651, line: 68, size: 32, elements: !679)
!679 = !{!680}
!680 = !DIDerivedType(tag: DW_TAG_member, name: "dlci", scope: !678, file: !651, line: 69, baseType: !7, size: 32)
!681 = !DIDerivedType(tag: DW_TAG_member, name: "fr_pvc_info", scope: !646, file: !599, line: 216, baseType: !682, size: 64)
!682 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !683, size: 64)
!683 = !DIDerivedType(tag: DW_TAG_typedef, name: "fr_proto_pvc_info", file: !651, line: 75, baseType: !684)
!684 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !651, line: 72, size: 160, elements: !685)
!685 = !{!686, !687}
!686 = !DIDerivedType(tag: DW_TAG_member, name: "dlci", scope: !684, file: !651, line: 73, baseType: !7, size: 32)
!687 = !DIDerivedType(tag: DW_TAG_member, name: "master", scope: !684, file: !651, line: 74, baseType: !267, size: 128, offset: 32)
!688 = !DIDerivedType(tag: DW_TAG_member, name: "x25", scope: !646, file: !599, line: 217, baseType: !689, size: 64)
!689 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !690, size: 64)
!690 = !DIDerivedType(tag: DW_TAG_typedef, name: "x25_hdlc_proto", file: !651, line: 89, baseType: !691)
!691 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !651, line: 82, size: 192, elements: !692)
!692 = !{!693, !694, !695, !696, !697, !698}
!693 = !DIDerivedType(tag: DW_TAG_member, name: "dce", scope: !691, file: !651, line: 83, baseType: !476, size: 16)
!694 = !DIDerivedType(tag: DW_TAG_member, name: "modulo", scope: !691, file: !651, line: 84, baseType: !7, size: 32, offset: 32)
!695 = !DIDerivedType(tag: DW_TAG_member, name: "window", scope: !691, file: !651, line: 85, baseType: !7, size: 32, offset: 64)
!696 = !DIDerivedType(tag: DW_TAG_member, name: "t1", scope: !691, file: !651, line: 86, baseType: !7, size: 32, offset: 96)
!697 = !DIDerivedType(tag: DW_TAG_member, name: "t2", scope: !691, file: !651, line: 87, baseType: !7, size: 32, offset: 128)
!698 = !DIDerivedType(tag: DW_TAG_member, name: "n2", scope: !691, file: !651, line: 88, baseType: !7, size: 32, offset: 160)
!699 = !DIDerivedType(tag: DW_TAG_member, name: "sync", scope: !646, file: !599, line: 220, baseType: !700, size: 64)
!700 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !701, size: 64)
!701 = !DIDerivedType(tag: DW_TAG_typedef, name: "sync_serial_settings", file: !651, line: 44, baseType: !702)
!702 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !651, line: 40, size: 96, elements: !703)
!703 = !{!704, !705, !706}
!704 = !DIDerivedType(tag: DW_TAG_member, name: "clock_rate", scope: !702, file: !651, line: 41, baseType: !7, size: 32)
!705 = !DIDerivedType(tag: DW_TAG_member, name: "clock_type", scope: !702, file: !651, line: 42, baseType: !7, size: 32, offset: 32)
!706 = !DIDerivedType(tag: DW_TAG_member, name: "loopback", scope: !702, file: !651, line: 43, baseType: !476, size: 16, offset: 64)
!707 = !DIDerivedType(tag: DW_TAG_member, name: "te1", scope: !646, file: !599, line: 221, baseType: !708, size: 64)
!708 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !709, size: 64)
!709 = !DIDerivedType(tag: DW_TAG_typedef, name: "te1_settings", file: !651, line: 51, baseType: !710)
!710 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !651, line: 46, size: 128, elements: !711)
!711 = !{!712, !713, !714, !715}
!712 = !DIDerivedType(tag: DW_TAG_member, name: "clock_rate", scope: !710, file: !651, line: 47, baseType: !7, size: 32)
!713 = !DIDerivedType(tag: DW_TAG_member, name: "clock_type", scope: !710, file: !651, line: 48, baseType: !7, size: 32, offset: 32)
!714 = !DIDerivedType(tag: DW_TAG_member, name: "loopback", scope: !710, file: !651, line: 49, baseType: !476, size: 16, offset: 64)
!715 = !DIDerivedType(tag: DW_TAG_member, name: "slot_map", scope: !710, file: !651, line: 50, baseType: !7, size: 32, offset: 96)
!716 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_config", scope: !398, file: !31, line: 1304, baseType: !717, size: 64, offset: 768)
!717 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !718, size: 64)
!718 = !DISubroutineType(types: !719)
!719 = !{!32, !290, !720}
!720 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !629, size: 64)
!721 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_change_mtu", scope: !398, file: !31, line: 1306, baseType: !722, size: 64, offset: 832)
!722 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !723, size: 64)
!723 = !DISubroutineType(types: !724)
!724 = !{!32, !290, !32}
!725 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_neigh_setup", scope: !398, file: !31, line: 1308, baseType: !726, size: 64, offset: 896)
!726 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !727, size: 64)
!727 = !DISubroutineType(types: !728)
!728 = !{!32, !290, !729}
!729 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !730, size: 64)
!730 = !DICompositeType(tag: DW_TAG_structure_type, name: "neigh_parms", file: !31, line: 206, flags: DIFlagFwdDecl)
!731 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_tx_timeout", scope: !398, file: !31, line: 1310, baseType: !732, size: 64, offset: 960)
!732 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !733, size: 64)
!733 = !DISubroutineType(types: !734)
!734 = !{null, !290, !7}
!735 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_stats64", scope: !398, file: !31, line: 1313, baseType: !736, size: 64, offset: 1024)
!736 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !737, size: 64)
!737 = !DISubroutineType(types: !738)
!738 = !{null, !290, !739}
!739 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !740, size: 64)
!740 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtnl_link_stats64", file: !741, line: 214, size: 1536, elements: !742)
!741 = !DIFile(filename: "./include/uapi/linux/if_link.h", directory: "/home/lizy2001/genbc/linux")
!742 = !{!743, !744, !745, !746, !747, !748, !749, !750, !751, !752, !753, !754, !755, !756, !757, !758, !759, !760, !761, !762, !763, !764, !765, !766}
!743 = !DIDerivedType(tag: DW_TAG_member, name: "rx_packets", scope: !740, file: !741, line: 215, baseType: !333, size: 64)
!744 = !DIDerivedType(tag: DW_TAG_member, name: "tx_packets", scope: !740, file: !741, line: 216, baseType: !333, size: 64, offset: 64)
!745 = !DIDerivedType(tag: DW_TAG_member, name: "rx_bytes", scope: !740, file: !741, line: 217, baseType: !333, size: 64, offset: 128)
!746 = !DIDerivedType(tag: DW_TAG_member, name: "tx_bytes", scope: !740, file: !741, line: 218, baseType: !333, size: 64, offset: 192)
!747 = !DIDerivedType(tag: DW_TAG_member, name: "rx_errors", scope: !740, file: !741, line: 219, baseType: !333, size: 64, offset: 256)
!748 = !DIDerivedType(tag: DW_TAG_member, name: "tx_errors", scope: !740, file: !741, line: 220, baseType: !333, size: 64, offset: 320)
!749 = !DIDerivedType(tag: DW_TAG_member, name: "rx_dropped", scope: !740, file: !741, line: 221, baseType: !333, size: 64, offset: 384)
!750 = !DIDerivedType(tag: DW_TAG_member, name: "tx_dropped", scope: !740, file: !741, line: 222, baseType: !333, size: 64, offset: 448)
!751 = !DIDerivedType(tag: DW_TAG_member, name: "multicast", scope: !740, file: !741, line: 223, baseType: !333, size: 64, offset: 512)
!752 = !DIDerivedType(tag: DW_TAG_member, name: "collisions", scope: !740, file: !741, line: 224, baseType: !333, size: 64, offset: 576)
!753 = !DIDerivedType(tag: DW_TAG_member, name: "rx_length_errors", scope: !740, file: !741, line: 227, baseType: !333, size: 64, offset: 640)
!754 = !DIDerivedType(tag: DW_TAG_member, name: "rx_over_errors", scope: !740, file: !741, line: 228, baseType: !333, size: 64, offset: 704)
!755 = !DIDerivedType(tag: DW_TAG_member, name: "rx_crc_errors", scope: !740, file: !741, line: 229, baseType: !333, size: 64, offset: 768)
!756 = !DIDerivedType(tag: DW_TAG_member, name: "rx_frame_errors", scope: !740, file: !741, line: 230, baseType: !333, size: 64, offset: 832)
!757 = !DIDerivedType(tag: DW_TAG_member, name: "rx_fifo_errors", scope: !740, file: !741, line: 231, baseType: !333, size: 64, offset: 896)
!758 = !DIDerivedType(tag: DW_TAG_member, name: "rx_missed_errors", scope: !740, file: !741, line: 232, baseType: !333, size: 64, offset: 960)
!759 = !DIDerivedType(tag: DW_TAG_member, name: "tx_aborted_errors", scope: !740, file: !741, line: 235, baseType: !333, size: 64, offset: 1024)
!760 = !DIDerivedType(tag: DW_TAG_member, name: "tx_carrier_errors", scope: !740, file: !741, line: 236, baseType: !333, size: 64, offset: 1088)
!761 = !DIDerivedType(tag: DW_TAG_member, name: "tx_fifo_errors", scope: !740, file: !741, line: 237, baseType: !333, size: 64, offset: 1152)
!762 = !DIDerivedType(tag: DW_TAG_member, name: "tx_heartbeat_errors", scope: !740, file: !741, line: 238, baseType: !333, size: 64, offset: 1216)
!763 = !DIDerivedType(tag: DW_TAG_member, name: "tx_window_errors", scope: !740, file: !741, line: 239, baseType: !333, size: 64, offset: 1280)
!764 = !DIDerivedType(tag: DW_TAG_member, name: "rx_compressed", scope: !740, file: !741, line: 242, baseType: !333, size: 64, offset: 1344)
!765 = !DIDerivedType(tag: DW_TAG_member, name: "tx_compressed", scope: !740, file: !741, line: 243, baseType: !333, size: 64, offset: 1408)
!766 = !DIDerivedType(tag: DW_TAG_member, name: "rx_nohandler", scope: !740, file: !741, line: 244, baseType: !333, size: 64, offset: 1472)
!767 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_has_offload_stats", scope: !398, file: !31, line: 1315, baseType: !768, size: 64, offset: 1088)
!768 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !769, size: 64)
!769 = !DISubroutineType(types: !770)
!770 = !{!771, !773, !32}
!771 = !DIDerivedType(tag: DW_TAG_typedef, name: "bool", file: !277, line: 30, baseType: !772)
!772 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!773 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !774, size: 64)
!774 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !264)
!775 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_offload_stats", scope: !398, file: !31, line: 1316, baseType: !776, size: 64, offset: 1152)
!776 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !777, size: 64)
!777 = !DISubroutineType(types: !778)
!778 = !{!32, !32, !773, !591}
!779 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_stats", scope: !398, file: !31, line: 1319, baseType: !780, size: 64, offset: 1216)
!780 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !781, size: 64)
!781 = !DISubroutineType(types: !782)
!782 = !{!783, !290}
!783 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !345, size: 64)
!784 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_vlan_rx_add_vid", scope: !398, file: !31, line: 1321, baseType: !785, size: 64, offset: 1280)
!785 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !786, size: 64)
!786 = !DISubroutineType(types: !787)
!787 = !{!32, !290, !535, !581}
!788 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_vlan_rx_kill_vid", scope: !398, file: !31, line: 1323, baseType: !785, size: 64, offset: 1344)
!789 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_mac", scope: !398, file: !31, line: 1331, baseType: !790, size: 64, offset: 1408)
!790 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !791, size: 64)
!791 = !DISubroutineType(types: !792)
!792 = !{!32, !290, !32, !793}
!793 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !794, size: 64)
!794 = !DIDerivedType(tag: DW_TAG_typedef, name: "u8", file: !332, line: 17, baseType: !481)
!795 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_vlan", scope: !398, file: !31, line: 1333, baseType: !796, size: 64, offset: 1472)
!796 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !797, size: 64)
!797 = !DISubroutineType(types: !798)
!798 = !{!32, !290, !32, !581, !794, !535}
!799 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_rate", scope: !398, file: !31, line: 1336, baseType: !800, size: 64, offset: 1536)
!800 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !801, size: 64)
!801 = !DISubroutineType(types: !802)
!802 = !{!32, !290, !32, !32, !32}
!803 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_spoofchk", scope: !398, file: !31, line: 1339, baseType: !804, size: 64, offset: 1600)
!804 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !805, size: 64)
!805 = !DISubroutineType(types: !806)
!806 = !{!32, !290, !32, !771}
!807 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_trust", scope: !398, file: !31, line: 1341, baseType: !804, size: 64, offset: 1664)
!808 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_vf_config", scope: !398, file: !31, line: 1343, baseType: !809, size: 64, offset: 1728)
!809 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !810, size: 64)
!810 = !DISubroutineType(types: !811)
!811 = !{!32, !290, !32, !812}
!812 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !813, size: 64)
!813 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ifla_vf_info", file: !814, line: 20, size: 576, elements: !815)
!814 = !DIFile(filename: "./include/linux/if_link.h", directory: "/home/lizy2001/genbc/linux")
!815 = !{!816, !817, !821, !822, !823, !824, !825, !826, !827, !828, !829}
!816 = !DIDerivedType(tag: DW_TAG_member, name: "vf", scope: !813, file: !814, line: 21, baseType: !493, size: 32)
!817 = !DIDerivedType(tag: DW_TAG_member, name: "mac", scope: !813, file: !814, line: 22, baseType: !818, size: 256, offset: 32)
!818 = !DICompositeType(tag: DW_TAG_array_type, baseType: !481, size: 256, elements: !819)
!819 = !{!820}
!820 = !DISubrange(count: 32)
!821 = !DIDerivedType(tag: DW_TAG_member, name: "vlan", scope: !813, file: !814, line: 23, baseType: !493, size: 32, offset: 288)
!822 = !DIDerivedType(tag: DW_TAG_member, name: "qos", scope: !813, file: !814, line: 24, baseType: !493, size: 32, offset: 320)
!823 = !DIDerivedType(tag: DW_TAG_member, name: "spoofchk", scope: !813, file: !814, line: 25, baseType: !493, size: 32, offset: 352)
!824 = !DIDerivedType(tag: DW_TAG_member, name: "linkstate", scope: !813, file: !814, line: 26, baseType: !493, size: 32, offset: 384)
!825 = !DIDerivedType(tag: DW_TAG_member, name: "min_tx_rate", scope: !813, file: !814, line: 27, baseType: !493, size: 32, offset: 416)
!826 = !DIDerivedType(tag: DW_TAG_member, name: "max_tx_rate", scope: !813, file: !814, line: 28, baseType: !493, size: 32, offset: 448)
!827 = !DIDerivedType(tag: DW_TAG_member, name: "rss_query_en", scope: !813, file: !814, line: 29, baseType: !493, size: 32, offset: 480)
!828 = !DIDerivedType(tag: DW_TAG_member, name: "trusted", scope: !813, file: !814, line: 30, baseType: !493, size: 32, offset: 512)
!829 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_proto", scope: !813, file: !814, line: 31, baseType: !535, size: 16, offset: 544)
!830 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_link_state", scope: !398, file: !31, line: 1346, baseType: !831, size: 64, offset: 1792)
!831 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !832, size: 64)
!832 = !DISubroutineType(types: !833)
!833 = !{!32, !290, !32, !32}
!834 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_vf_stats", scope: !398, file: !31, line: 1348, baseType: !835, size: 64, offset: 1856)
!835 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !836, size: 64)
!836 = !DISubroutineType(types: !837)
!837 = !{!32, !290, !32, !838}
!838 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !839, size: 64)
!839 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ifla_vf_stats", file: !814, line: 9, size: 512, elements: !840)
!840 = !{!841, !842, !843, !844, !845, !846, !847, !848}
!841 = !DIDerivedType(tag: DW_TAG_member, name: "rx_packets", scope: !839, file: !814, line: 10, baseType: !333, size: 64)
!842 = !DIDerivedType(tag: DW_TAG_member, name: "tx_packets", scope: !839, file: !814, line: 11, baseType: !333, size: 64, offset: 64)
!843 = !DIDerivedType(tag: DW_TAG_member, name: "rx_bytes", scope: !839, file: !814, line: 12, baseType: !333, size: 64, offset: 128)
!844 = !DIDerivedType(tag: DW_TAG_member, name: "tx_bytes", scope: !839, file: !814, line: 13, baseType: !333, size: 64, offset: 192)
!845 = !DIDerivedType(tag: DW_TAG_member, name: "broadcast", scope: !839, file: !814, line: 14, baseType: !333, size: 64, offset: 256)
!846 = !DIDerivedType(tag: DW_TAG_member, name: "multicast", scope: !839, file: !814, line: 15, baseType: !333, size: 64, offset: 320)
!847 = !DIDerivedType(tag: DW_TAG_member, name: "rx_dropped", scope: !839, file: !814, line: 16, baseType: !333, size: 64, offset: 384)
!848 = !DIDerivedType(tag: DW_TAG_member, name: "tx_dropped", scope: !839, file: !814, line: 17, baseType: !333, size: 64, offset: 448)
!849 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_port", scope: !398, file: !31, line: 1352, baseType: !850, size: 64, offset: 1920)
!850 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !851, size: 64)
!851 = !DISubroutineType(types: !852)
!852 = !{!32, !290, !32, !853}
!853 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !854, size: 64)
!854 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !855, size: 64)
!855 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nlattr", file: !856, line: 213, size: 32, elements: !857)
!856 = !DIFile(filename: "./include/uapi/linux/netlink.h", directory: "/home/lizy2001/genbc/linux")
!857 = !{!858, !859}
!858 = !DIDerivedType(tag: DW_TAG_member, name: "nla_len", scope: !855, file: !856, line: 214, baseType: !475, size: 16)
!859 = !DIDerivedType(tag: DW_TAG_member, name: "nla_type", scope: !855, file: !856, line: 215, baseType: !475, size: 16, offset: 16)
!860 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_vf_port", scope: !398, file: !31, line: 1355, baseType: !861, size: 64, offset: 1984)
!861 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !862, size: 64)
!862 = !DISubroutineType(types: !863)
!863 = !{!32, !290, !32, !415}
!864 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_vf_guid", scope: !398, file: !31, line: 1357, baseType: !865, size: 64, offset: 2048)
!865 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !866, size: 64)
!866 = !DISubroutineType(types: !867)
!867 = !{!32, !290, !32, !868, !868}
!868 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !869, size: 64)
!869 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ifla_vf_guid", file: !741, line: 956, size: 128, elements: !870)
!870 = !{!871, !872}
!871 = !DIDerivedType(tag: DW_TAG_member, name: "vf", scope: !869, file: !741, line: 957, baseType: !493, size: 32)
!872 = !DIDerivedType(tag: DW_TAG_member, name: "guid", scope: !869, file: !741, line: 958, baseType: !333, size: 64, offset: 64)
!873 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_guid", scope: !398, file: !31, line: 1361, baseType: !874, size: 64, offset: 2112)
!874 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !875, size: 64)
!875 = !DISubroutineType(types: !876)
!876 = !{!32, !290, !32, !331, !32}
!877 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_rss_query_en", scope: !398, file: !31, line: 1364, baseType: !804, size: 64, offset: 2176)
!878 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_setup_tc", scope: !398, file: !31, line: 1367, baseType: !879, size: 64, offset: 2240)
!879 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !880, size: 64)
!880 = !DISubroutineType(types: !881)
!881 = !{!32, !290, !37, !591}
!882 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_add_slave", scope: !398, file: !31, line: 1400, baseType: !883, size: 64, offset: 2304)
!883 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !884, size: 64)
!884 = !DISubroutineType(types: !885)
!885 = !{!32, !290, !290, !886}
!886 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !887, size: 64)
!887 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netlink_ext_ack", file: !888, line: 75, size: 384, elements: !889)
!888 = !DIFile(filename: "./include/linux/netlink.h", directory: "/home/lizy2001/genbc/linux")
!889 = !{!890, !891, !894, !898, !902}
!890 = !DIDerivedType(tag: DW_TAG_member, name: "_msg", scope: !887, file: !888, line: 76, baseType: !292, size: 64)
!891 = !DIDerivedType(tag: DW_TAG_member, name: "bad_attr", scope: !887, file: !888, line: 77, baseType: !892, size: 64, offset: 64)
!892 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !893, size: 64)
!893 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !855)
!894 = !DIDerivedType(tag: DW_TAG_member, name: "policy", scope: !887, file: !888, line: 78, baseType: !895, size: 64, offset: 128)
!895 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !896, size: 64)
!896 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !897)
!897 = !DICompositeType(tag: DW_TAG_structure_type, name: "nla_policy", file: !888, line: 78, flags: DIFlagFwdDecl)
!898 = !DIDerivedType(tag: DW_TAG_member, name: "cookie", scope: !887, file: !888, line: 79, baseType: !899, size: 160, offset: 192)
!899 = !DICompositeType(tag: DW_TAG_array_type, baseType: !794, size: 160, elements: !900)
!900 = !{!901}
!901 = !DISubrange(count: 20)
!902 = !DIDerivedType(tag: DW_TAG_member, name: "cookie_len", scope: !887, file: !888, line: 80, baseType: !794, size: 8, offset: 352)
!903 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_del_slave", scope: !398, file: !31, line: 1403, baseType: !904, size: 64, offset: 2368)
!904 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !905, size: 64)
!905 = !DISubroutineType(types: !906)
!906 = !{!32, !290, !290}
!907 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_xmit_slave", scope: !398, file: !31, line: 1405, baseType: !908, size: 64, offset: 2432)
!908 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !909, size: 64)
!909 = !DISubroutineType(types: !910)
!910 = !{!290, !290, !415, !771}
!911 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_fix_features", scope: !398, file: !31, line: 1408, baseType: !912, size: 64, offset: 2496)
!912 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !913, size: 64)
!913 = !DISubroutineType(types: !914)
!914 = !{!329, !290, !329}
!915 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_features", scope: !398, file: !31, line: 1410, baseType: !916, size: 64, offset: 2560)
!916 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !917, size: 64)
!917 = !DISubroutineType(types: !918)
!918 = !{!32, !290, !329}
!919 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_neigh_construct", scope: !398, file: !31, line: 1412, baseType: !920, size: 64, offset: 2624)
!920 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !921, size: 64)
!921 = !DISubroutineType(types: !922)
!922 = !{!32, !290, !923}
!923 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !924, size: 64)
!924 = !DICompositeType(tag: DW_TAG_structure_type, name: "neighbour", file: !925, line: 35, flags: DIFlagFwdDecl)
!925 = !DIFile(filename: "./include/net/dst_ops.h", directory: "/home/lizy2001/genbc/linux")
!926 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_neigh_destroy", scope: !398, file: !31, line: 1414, baseType: !927, size: 64, offset: 2688)
!927 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !928, size: 64)
!928 = !DISubroutineType(types: !929)
!929 = !{null, !290, !923}
!930 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_fdb_add", scope: !398, file: !31, line: 1417, baseType: !931, size: 64, offset: 2752)
!931 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !932, size: 64)
!932 = !DISubroutineType(types: !933)
!933 = !{!32, !934, !853, !290, !946, !581, !581, !886}
!934 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !935, size: 64)
!935 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ndmsg", file: !936, line: 8, size: 96, elements: !937)
!936 = !DIFile(filename: "./include/uapi/linux/neighbour.h", directory: "/home/lizy2001/genbc/linux")
!937 = !{!938, !939, !940, !941, !943, !944, !945}
!938 = !DIDerivedType(tag: DW_TAG_member, name: "ndm_family", scope: !935, file: !936, line: 9, baseType: !481, size: 8)
!939 = !DIDerivedType(tag: DW_TAG_member, name: "ndm_pad1", scope: !935, file: !936, line: 10, baseType: !481, size: 8, offset: 8)
!940 = !DIDerivedType(tag: DW_TAG_member, name: "ndm_pad2", scope: !935, file: !936, line: 11, baseType: !475, size: 16, offset: 16)
!941 = !DIDerivedType(tag: DW_TAG_member, name: "ndm_ifindex", scope: !935, file: !936, line: 12, baseType: !942, size: 32, offset: 32)
!942 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s32", file: !334, line: 26, baseType: !32)
!943 = !DIDerivedType(tag: DW_TAG_member, name: "ndm_state", scope: !935, file: !936, line: 13, baseType: !475, size: 16, offset: 64)
!944 = !DIDerivedType(tag: DW_TAG_member, name: "ndm_flags", scope: !935, file: !936, line: 14, baseType: !481, size: 8, offset: 80)
!945 = !DIDerivedType(tag: DW_TAG_member, name: "ndm_type", scope: !935, file: !936, line: 15, baseType: !481, size: 8, offset: 88)
!946 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !947, size: 64)
!947 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !482)
!948 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_fdb_del", scope: !398, file: !31, line: 1424, baseType: !949, size: 64, offset: 2816)
!949 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !950, size: 64)
!950 = !DISubroutineType(types: !951)
!951 = !{!32, !934, !853, !290, !946, !581}
!952 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_fdb_dump", scope: !398, file: !31, line: 1429, baseType: !953, size: 64, offset: 2880)
!953 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !954, size: 64)
!954 = !DISubroutineType(types: !955)
!955 = !{!32, !415, !956, !290, !290, !1001}
!956 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !957, size: 64)
!957 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netlink_callback", file: !888, line: 203, size: 1024, elements: !958)
!958 = !{!959, !960, !970, !974, !978, !979, !983, !984, !985, !986, !988, !989, !990, !991}
!959 = !DIDerivedType(tag: DW_TAG_member, name: "skb", scope: !957, file: !888, line: 204, baseType: !415, size: 64)
!960 = !DIDerivedType(tag: DW_TAG_member, name: "nlh", scope: !957, file: !888, line: 205, baseType: !961, size: 64, offset: 64)
!961 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !962, size: 64)
!962 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !963)
!963 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nlmsghdr", file: !856, line: 44, size: 128, elements: !964)
!964 = !{!965, !966, !967, !968, !969}
!965 = !DIDerivedType(tag: DW_TAG_member, name: "nlmsg_len", scope: !963, file: !856, line: 45, baseType: !493, size: 32)
!966 = !DIDerivedType(tag: DW_TAG_member, name: "nlmsg_type", scope: !963, file: !856, line: 46, baseType: !475, size: 16, offset: 32)
!967 = !DIDerivedType(tag: DW_TAG_member, name: "nlmsg_flags", scope: !963, file: !856, line: 47, baseType: !475, size: 16, offset: 48)
!968 = !DIDerivedType(tag: DW_TAG_member, name: "nlmsg_seq", scope: !963, file: !856, line: 48, baseType: !493, size: 32, offset: 64)
!969 = !DIDerivedType(tag: DW_TAG_member, name: "nlmsg_pid", scope: !963, file: !856, line: 49, baseType: !493, size: 32, offset: 96)
!970 = !DIDerivedType(tag: DW_TAG_member, name: "dump", scope: !957, file: !888, line: 206, baseType: !971, size: 64, offset: 128)
!971 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !972, size: 64)
!972 = !DISubroutineType(types: !973)
!973 = !{!32, !415, !956}
!974 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !957, file: !888, line: 208, baseType: !975, size: 64, offset: 192)
!975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !976, size: 64)
!976 = !DISubroutineType(types: !977)
!977 = !{!32, !956}
!978 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !957, file: !888, line: 209, baseType: !591, size: 64, offset: 256)
!979 = !DIDerivedType(tag: DW_TAG_member, name: "module", scope: !957, file: !888, line: 211, baseType: !980, size: 64, offset: 320)
!980 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !981, size: 64)
!981 = !DICompositeType(tag: DW_TAG_structure_type, name: "module", file: !982, line: 76, flags: DIFlagFwdDecl)
!982 = !DIFile(filename: "./arch/x86/include/asm/alternative.h", directory: "/home/lizy2001/genbc/linux")
!983 = !DIDerivedType(tag: DW_TAG_member, name: "extack", scope: !957, file: !888, line: 212, baseType: !886, size: 64, offset: 384)
!984 = !DIDerivedType(tag: DW_TAG_member, name: "family", scope: !957, file: !888, line: 213, baseType: !581, size: 16, offset: 448)
!985 = !DIDerivedType(tag: DW_TAG_member, name: "answer_flags", scope: !957, file: !888, line: 214, baseType: !581, size: 16, offset: 464)
!986 = !DIDerivedType(tag: DW_TAG_member, name: "min_dump_alloc", scope: !957, file: !888, line: 215, baseType: !987, size: 32, offset: 480)
!987 = !DIDerivedType(tag: DW_TAG_typedef, name: "u32", file: !332, line: 21, baseType: !493)
!988 = !DIDerivedType(tag: DW_TAG_member, name: "prev_seq", scope: !957, file: !888, line: 216, baseType: !7, size: 32, offset: 512)
!989 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !957, file: !888, line: 216, baseType: !7, size: 32, offset: 544)
!990 = !DIDerivedType(tag: DW_TAG_member, name: "strict_check", scope: !957, file: !888, line: 217, baseType: !771, size: 8, offset: 576)
!991 = !DIDerivedType(tag: DW_TAG_member, scope: !957, file: !888, line: 218, baseType: !992, size: 384, offset: 640)
!992 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !957, file: !888, line: 218, size: 384, elements: !993)
!993 = !{!994, !996}
!994 = !DIDerivedType(tag: DW_TAG_member, name: "ctx", scope: !992, file: !888, line: 219, baseType: !995, size: 384)
!995 = !DICompositeType(tag: DW_TAG_array_type, baseType: !794, size: 384, elements: !458)
!996 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !992, file: !888, line: 224, baseType: !997, size: 384)
!997 = !DICompositeType(tag: DW_TAG_array_type, baseType: !998, size: 384, elements: !999)
!998 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!999 = !{!1000}
!1000 = !DISubrange(count: 6)
!1001 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !32, size: 64)
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_fdb_get", scope: !398, file: !31, line: 1434, baseType: !1003, size: 64, offset: 2944)
!1003 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1004, size: 64)
!1004 = !DISubroutineType(types: !1005)
!1005 = !{!32, !415, !853, !290, !946, !581, !987, !987, !886}
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_bridge_setlink", scope: !398, file: !31, line: 1440, baseType: !1007, size: 64, offset: 3008)
!1007 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1008, size: 64)
!1008 = !DISubroutineType(types: !1009)
!1009 = !{!32, !290, !1010, !581, !886}
!1010 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !963, size: 64)
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_bridge_getlink", scope: !398, file: !31, line: 1444, baseType: !1012, size: 64, offset: 3072)
!1012 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1013, size: 64)
!1013 = !DISubroutineType(types: !1014)
!1014 = !{!32, !415, !987, !987, !290, !987, !32}
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_bridge_dellink", scope: !398, file: !31, line: 1449, baseType: !1016, size: 64, offset: 3136)
!1016 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1017, size: 64)
!1017 = !DISubroutineType(types: !1018)
!1018 = !{!32, !290, !1010, !581}
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_change_carrier", scope: !398, file: !31, line: 1452, baseType: !1020, size: 64, offset: 3200)
!1020 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1021, size: 64)
!1021 = !DISubroutineType(types: !1022)
!1022 = !{!32, !290, !771}
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_phys_port_id", scope: !398, file: !31, line: 1454, baseType: !1024, size: 64, offset: 3264)
!1024 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1025, size: 64)
!1025 = !DISubroutineType(types: !1026)
!1026 = !{!32, !290, !1027}
!1027 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1028, size: 64)
!1028 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netdev_phys_item_id", file: !31, line: 820, size: 264, elements: !1029)
!1029 = !{!1030, !1032}
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1028, file: !31, line: 821, baseType: !1031, size: 256)
!1031 = !DICompositeType(tag: DW_TAG_array_type, baseType: !482, size: 256, elements: !819)
!1032 = !DIDerivedType(tag: DW_TAG_member, name: "id_len", scope: !1028, file: !31, line: 822, baseType: !482, size: 8, offset: 256)
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_port_parent_id", scope: !398, file: !31, line: 1456, baseType: !1024, size: 64, offset: 3328)
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_phys_port_name", scope: !398, file: !31, line: 1458, baseType: !1035, size: 64, offset: 3392)
!1035 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1036, size: 64)
!1036 = !DISubroutineType(types: !1037)
!1037 = !{!32, !290, !1038, !1039}
!1038 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !268, size: 64)
!1039 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !277, line: 55, baseType: !1040)
!1040 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_size_t", file: !1041, line: 72, baseType: !1042)
!1041 = !DIFile(filename: "./include/uapi/asm-generic/posix_types.h", directory: "/home/lizy2001/genbc/linux")
!1042 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ulong_t", file: !1041, line: 16, baseType: !312)
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_udp_tunnel_add", scope: !398, file: !31, line: 1460, baseType: !1044, size: 64, offset: 3456)
!1044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1045, size: 64)
!1045 = !DISubroutineType(types: !1046)
!1046 = !{null, !290, !1047}
!1047 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1048, size: 64)
!1048 = !DICompositeType(tag: DW_TAG_structure_type, name: "udp_tunnel_info", file: !31, line: 67, flags: DIFlagFwdDecl)
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_udp_tunnel_del", scope: !398, file: !31, line: 1462, baseType: !1044, size: 64, offset: 3520)
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_dfwd_add_station", scope: !398, file: !31, line: 1464, baseType: !1051, size: 64, offset: 3584)
!1051 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1052, size: 64)
!1052 = !DISubroutineType(types: !1053)
!1053 = !{!591, !290, !290}
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_dfwd_del_station", scope: !398, file: !31, line: 1466, baseType: !1055, size: 64, offset: 3648)
!1055 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1056, size: 64)
!1056 = !DISubroutineType(types: !1057)
!1057 = !{null, !290, !591}
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_tx_maxrate", scope: !398, file: !31, line: 1469, baseType: !1059, size: 64, offset: 3712)
!1059 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1060, size: 64)
!1060 = !DISubroutineType(types: !1061)
!1061 = !{!32, !290, !32, !987}
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_iflink", scope: !398, file: !31, line: 1472, baseType: !1063, size: 64, offset: 3776)
!1063 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1064, size: 64)
!1064 = !DISubroutineType(types: !1065)
!1065 = !{!32, !773}
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_change_proto_down", scope: !398, file: !31, line: 1473, baseType: !1020, size: 64, offset: 3840)
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_fill_metadata_dst", scope: !398, file: !31, line: 1475, baseType: !1068, size: 64, offset: 3904)
!1068 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1069, size: 64)
!1069 = !DISubroutineType(types: !1070)
!1070 = !{!32, !290, !415}
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_rx_headroom", scope: !398, file: !31, line: 1477, baseType: !583, size: 64, offset: 3968)
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_bpf", scope: !398, file: !31, line: 1479, baseType: !1073, size: 64, offset: 4032)
!1073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1074, size: 64)
!1074 = !DISubroutineType(types: !1075)
!1075 = !{!32, !290, !1076}
!1076 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1077, size: 64)
!1077 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netdev_bpf", file: !31, line: 894, size: 256, elements: !1078)
!1078 = !{!1079, !1080}
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "command", scope: !1077, file: !31, line: 895, baseType: !57, size: 32)
!1080 = !DIDerivedType(tag: DW_TAG_member, scope: !1077, file: !31, line: 896, baseType: !1081, size: 192, offset: 64)
!1081 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1077, file: !31, line: 896, size: 192, elements: !1082)
!1082 = !{!1083, !1092, !5472}
!1083 = !DIDerivedType(tag: DW_TAG_member, scope: !1081, file: !31, line: 898, baseType: !1084, size: 192)
!1084 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1081, file: !31, line: 898, size: 192, elements: !1085)
!1085 = !{!1086, !1087, !1091}
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1084, file: !31, line: 899, baseType: !987, size: 32)
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "prog", scope: !1084, file: !31, line: 900, baseType: !1088, size: 64, offset: 64)
!1088 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1089, size: 64)
!1089 = !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_prog", file: !1090, line: 11, flags: DIFlagFwdDecl)
!1090 = !DIFile(filename: "./include/net/flow_dissector.h", directory: "/home/lizy2001/genbc/linux")
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "extack", scope: !1084, file: !31, line: 901, baseType: !886, size: 64, offset: 128)
!1092 = !DIDerivedType(tag: DW_TAG_member, scope: !1081, file: !31, line: 904, baseType: !1093, size: 64)
!1093 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1081, file: !31, line: 904, size: 64, elements: !1094)
!1094 = !{!1095}
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "offmap", scope: !1093, file: !31, line: 905, baseType: !1096, size: 64)
!1096 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1097, size: 64)
!1097 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_offloaded_map", file: !65, line: 222, size: 2560, elements: !1098)
!1098 = !{!1099, !5451, !5452, !5470, !5471}
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "map", scope: !1097, file: !65, line: 223, baseType: !1100, size: 2048)
!1100 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_map", file: !65, line: 141, size: 2048, elements: !1101)
!1101 = !{!1102, !5425, !5426, !5427, !5428, !5429, !5430, !5431, !5432, !5433, !5434, !5435, !5436, !5437, !5442, !5443, !5444, !5445, !5446, !5447, !5448, !5449, !5450}
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !1100, file: !65, line: 145, baseType: !1103, size: 64, align: 512)
!1103 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1104, size: 64)
!1104 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1105)
!1105 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_map_ops", file: !65, line: 54, size: 2368, elements: !1106)
!1106 = !{!1107, !1306, !1311, !5097, !5101, !5105, !5106, !5110, !5116, !5117, !5118, !5119, !5120, !5124, !5128, !5132, !5133, !5134, !5138, !5139, !5151, !5155, !5159, !5171, !5360, !5364, !5368, !5373, !5377, !5381, !5385, !5391, !5395, !5402, !5406, !5408, !5409}
!1107 = !DIDerivedType(tag: DW_TAG_member, name: "map_alloc_check", scope: !1105, file: !65, line: 56, baseType: !1108, size: 64)
!1108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1109, size: 64)
!1109 = !DISubroutineType(types: !1110)
!1110 = !{!32, !1111}
!1111 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1112, size: 64)
!1112 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "bpf_attr", file: !96, line: 483, size: 960, align: 64, elements: !1113)
!1113 = !{!1114, !1130, !1141, !1152, !1176, !1182, !1190, !1207, !1220, !1226, !1235, !1240, !1248, !1260, !1280, !1287, !1291, !1295, !1300}
!1114 = !DIDerivedType(tag: DW_TAG_member, scope: !1112, file: !96, line: 484, baseType: !1115, size: 512)
!1115 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1112, file: !96, line: 484, size: 512, elements: !1116)
!1116 = !{!1117, !1118, !1119, !1120, !1121, !1122, !1123, !1124, !1125, !1126, !1127, !1128, !1129}
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "map_type", scope: !1115, file: !96, line: 485, baseType: !493, size: 32)
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "key_size", scope: !1115, file: !96, line: 486, baseType: !493, size: 32, offset: 32)
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "value_size", scope: !1115, file: !96, line: 487, baseType: !493, size: 32, offset: 64)
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "max_entries", scope: !1115, file: !96, line: 488, baseType: !493, size: 32, offset: 96)
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "map_flags", scope: !1115, file: !96, line: 489, baseType: !493, size: 32, offset: 128)
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "inner_map_fd", scope: !1115, file: !96, line: 492, baseType: !493, size: 32, offset: 160)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "numa_node", scope: !1115, file: !96, line: 493, baseType: !493, size: 32, offset: 192)
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "map_name", scope: !1115, file: !96, line: 496, baseType: !267, size: 128, offset: 224)
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "map_ifindex", scope: !1115, file: !96, line: 497, baseType: !493, size: 32, offset: 352)
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "btf_fd", scope: !1115, file: !96, line: 498, baseType: !493, size: 32, offset: 384)
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "btf_key_type_id", scope: !1115, file: !96, line: 499, baseType: !493, size: 32, offset: 416)
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "btf_value_type_id", scope: !1115, file: !96, line: 500, baseType: !493, size: 32, offset: 448)
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "btf_vmlinux_value_type_id", scope: !1115, file: !96, line: 501, baseType: !493, size: 32, offset: 480)
!1130 = !DIDerivedType(tag: DW_TAG_member, scope: !1112, file: !96, line: 507, baseType: !1131, size: 256)
!1131 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1112, file: !96, line: 507, size: 256, elements: !1132)
!1132 = !{!1133, !1134, !1135, !1140}
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "map_fd", scope: !1131, file: !96, line: 508, baseType: !493, size: 32)
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !1131, file: !96, line: 509, baseType: !333, size: 64, align: 64, offset: 64)
!1135 = !DIDerivedType(tag: DW_TAG_member, scope: !1131, file: !96, line: 510, baseType: !1136, size: 64, offset: 128)
!1136 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1131, file: !96, line: 510, size: 64, elements: !1137)
!1137 = !{!1138, !1139}
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1136, file: !96, line: 511, baseType: !333, size: 64, align: 64)
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "next_key", scope: !1136, file: !96, line: 512, baseType: !333, size: 64, align: 64)
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1131, file: !96, line: 514, baseType: !333, size: 64, offset: 192)
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "batch", scope: !1112, file: !96, line: 532, baseType: !1142, size: 448)
!1142 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1112, file: !96, line: 517, size: 448, elements: !1143)
!1143 = !{!1144, !1145, !1146, !1147, !1148, !1149, !1150, !1151}
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "in_batch", scope: !1142, file: !96, line: 518, baseType: !333, size: 64, align: 64)
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "out_batch", scope: !1142, file: !96, line: 521, baseType: !333, size: 64, align: 64, offset: 64)
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "keys", scope: !1142, file: !96, line: 522, baseType: !333, size: 64, align: 64, offset: 128)
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "values", scope: !1142, file: !96, line: 523, baseType: !333, size: 64, align: 64, offset: 192)
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1142, file: !96, line: 524, baseType: !493, size: 32, offset: 256)
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "map_fd", scope: !1142, file: !96, line: 529, baseType: !493, size: 32, offset: 288)
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "elem_flags", scope: !1142, file: !96, line: 530, baseType: !333, size: 64, offset: 320)
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1142, file: !96, line: 531, baseType: !333, size: 64, offset: 384)
!1152 = !DIDerivedType(tag: DW_TAG_member, scope: !1112, file: !96, line: 534, baseType: !1153, size: 960)
!1153 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1112, file: !96, line: 534, size: 960, elements: !1154)
!1154 = !{!1155, !1156, !1157, !1158, !1159, !1160, !1161, !1162, !1163, !1164, !1165, !1166, !1167, !1168, !1169, !1170, !1171, !1172, !1173, !1174, !1175}
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "prog_type", scope: !1153, file: !96, line: 535, baseType: !493, size: 32)
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "insn_cnt", scope: !1153, file: !96, line: 536, baseType: !493, size: 32, offset: 32)
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "insns", scope: !1153, file: !96, line: 537, baseType: !333, size: 64, align: 64, offset: 64)
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "license", scope: !1153, file: !96, line: 538, baseType: !333, size: 64, align: 64, offset: 128)
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "log_level", scope: !1153, file: !96, line: 539, baseType: !493, size: 32, offset: 192)
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "log_size", scope: !1153, file: !96, line: 540, baseType: !493, size: 32, offset: 224)
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "log_buf", scope: !1153, file: !96, line: 541, baseType: !333, size: 64, align: 64, offset: 256)
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "kern_version", scope: !1153, file: !96, line: 542, baseType: !493, size: 32, offset: 320)
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "prog_flags", scope: !1153, file: !96, line: 543, baseType: !493, size: 32, offset: 352)
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "prog_name", scope: !1153, file: !96, line: 544, baseType: !267, size: 128, offset: 384)
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "prog_ifindex", scope: !1153, file: !96, line: 545, baseType: !493, size: 32, offset: 512)
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "expected_attach_type", scope: !1153, file: !96, line: 550, baseType: !493, size: 32, offset: 544)
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "prog_btf_fd", scope: !1153, file: !96, line: 551, baseType: !493, size: 32, offset: 576)
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "func_info_rec_size", scope: !1153, file: !96, line: 552, baseType: !493, size: 32, offset: 608)
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "func_info", scope: !1153, file: !96, line: 553, baseType: !333, size: 64, align: 64, offset: 640)
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "func_info_cnt", scope: !1153, file: !96, line: 554, baseType: !493, size: 32, offset: 704)
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "line_info_rec_size", scope: !1153, file: !96, line: 555, baseType: !493, size: 32, offset: 736)
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "line_info", scope: !1153, file: !96, line: 556, baseType: !333, size: 64, align: 64, offset: 768)
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "line_info_cnt", scope: !1153, file: !96, line: 557, baseType: !493, size: 32, offset: 832)
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "attach_btf_id", scope: !1153, file: !96, line: 558, baseType: !493, size: 32, offset: 864)
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "attach_prog_fd", scope: !1153, file: !96, line: 559, baseType: !493, size: 32, offset: 896)
!1176 = !DIDerivedType(tag: DW_TAG_member, scope: !1112, file: !96, line: 562, baseType: !1177, size: 128)
!1177 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1112, file: !96, line: 562, size: 128, elements: !1178)
!1178 = !{!1179, !1180, !1181}
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "pathname", scope: !1177, file: !96, line: 563, baseType: !333, size: 64, align: 64)
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "bpf_fd", scope: !1177, file: !96, line: 564, baseType: !493, size: 32, offset: 64)
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "file_flags", scope: !1177, file: !96, line: 565, baseType: !493, size: 32, offset: 96)
!1182 = !DIDerivedType(tag: DW_TAG_member, scope: !1112, file: !96, line: 568, baseType: !1183, size: 160)
!1183 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1112, file: !96, line: 568, size: 160, elements: !1184)
!1184 = !{!1185, !1186, !1187, !1188, !1189}
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "target_fd", scope: !1183, file: !96, line: 569, baseType: !493, size: 32)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "attach_bpf_fd", scope: !1183, file: !96, line: 570, baseType: !493, size: 32, offset: 32)
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "attach_type", scope: !1183, file: !96, line: 571, baseType: !493, size: 32, offset: 64)
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "attach_flags", scope: !1183, file: !96, line: 572, baseType: !493, size: 32, offset: 96)
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "replace_bpf_fd", scope: !1183, file: !96, line: 573, baseType: !493, size: 32, offset: 128)
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "test", scope: !1112, file: !96, line: 600, baseType: !1191, size: 576)
!1191 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1112, file: !96, line: 579, size: 576, elements: !1192)
!1192 = !{!1193, !1194, !1195, !1196, !1197, !1198, !1199, !1200, !1201, !1202, !1203, !1204, !1205, !1206}
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "prog_fd", scope: !1191, file: !96, line: 580, baseType: !493, size: 32)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "retval", scope: !1191, file: !96, line: 581, baseType: !493, size: 32, offset: 32)
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "data_size_in", scope: !1191, file: !96, line: 582, baseType: !493, size: 32, offset: 64)
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "data_size_out", scope: !1191, file: !96, line: 583, baseType: !493, size: 32, offset: 96)
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "data_in", scope: !1191, file: !96, line: 587, baseType: !333, size: 64, align: 64, offset: 128)
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "data_out", scope: !1191, file: !96, line: 588, baseType: !333, size: 64, align: 64, offset: 192)
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "repeat", scope: !1191, file: !96, line: 589, baseType: !493, size: 32, offset: 256)
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !1191, file: !96, line: 590, baseType: !493, size: 32, offset: 288)
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_size_in", scope: !1191, file: !96, line: 591, baseType: !493, size: 32, offset: 320)
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_size_out", scope: !1191, file: !96, line: 592, baseType: !493, size: 32, offset: 352)
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_in", scope: !1191, file: !96, line: 596, baseType: !333, size: 64, align: 64, offset: 384)
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_out", scope: !1191, file: !96, line: 597, baseType: !333, size: 64, align: 64, offset: 448)
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1191, file: !96, line: 598, baseType: !493, size: 32, offset: 512)
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "cpu", scope: !1191, file: !96, line: 599, baseType: !493, size: 32, offset: 544)
!1207 = !DIDerivedType(tag: DW_TAG_member, scope: !1112, file: !96, line: 602, baseType: !1208, size: 96)
!1208 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1112, file: !96, line: 602, size: 96, elements: !1209)
!1209 = !{!1210, !1218, !1219}
!1210 = !DIDerivedType(tag: DW_TAG_member, scope: !1208, file: !96, line: 603, baseType: !1211, size: 32)
!1211 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1208, file: !96, line: 603, size: 32, elements: !1212)
!1212 = !{!1213, !1214, !1215, !1216, !1217}
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "start_id", scope: !1211, file: !96, line: 604, baseType: !493, size: 32)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "prog_id", scope: !1211, file: !96, line: 605, baseType: !493, size: 32)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "map_id", scope: !1211, file: !96, line: 606, baseType: !493, size: 32)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "btf_id", scope: !1211, file: !96, line: 607, baseType: !493, size: 32)
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "link_id", scope: !1211, file: !96, line: 608, baseType: !493, size: 32)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "next_id", scope: !1208, file: !96, line: 610, baseType: !493, size: 32, offset: 32)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "open_flags", scope: !1208, file: !96, line: 611, baseType: !493, size: 32, offset: 64)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !1112, file: !96, line: 618, baseType: !1221, size: 128)
!1221 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1112, file: !96, line: 614, size: 128, elements: !1222)
!1222 = !{!1223, !1224, !1225}
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "bpf_fd", scope: !1221, file: !96, line: 615, baseType: !493, size: 32)
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "info_len", scope: !1221, file: !96, line: 616, baseType: !493, size: 32, offset: 32)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !1221, file: !96, line: 617, baseType: !333, size: 64, align: 64, offset: 64)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "query", scope: !1112, file: !96, line: 627, baseType: !1227, size: 256)
!1227 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1112, file: !96, line: 620, size: 256, elements: !1228)
!1228 = !{!1229, !1230, !1231, !1232, !1233, !1234}
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "target_fd", scope: !1227, file: !96, line: 621, baseType: !493, size: 32)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "attach_type", scope: !1227, file: !96, line: 622, baseType: !493, size: 32, offset: 32)
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "query_flags", scope: !1227, file: !96, line: 623, baseType: !493, size: 32, offset: 64)
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "attach_flags", scope: !1227, file: !96, line: 624, baseType: !493, size: 32, offset: 96)
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "prog_ids", scope: !1227, file: !96, line: 625, baseType: !333, size: 64, align: 64, offset: 128)
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "prog_cnt", scope: !1227, file: !96, line: 626, baseType: !493, size: 32, offset: 192)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "raw_tracepoint", scope: !1112, file: !96, line: 632, baseType: !1236, size: 128)
!1236 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1112, file: !96, line: 629, size: 128, elements: !1237)
!1237 = !{!1238, !1239}
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1236, file: !96, line: 630, baseType: !333, size: 64)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "prog_fd", scope: !1236, file: !96, line: 631, baseType: !493, size: 32, offset: 64)
!1240 = !DIDerivedType(tag: DW_TAG_member, scope: !1112, file: !96, line: 634, baseType: !1241, size: 256)
!1241 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1112, file: !96, line: 634, size: 256, elements: !1242)
!1242 = !{!1243, !1244, !1245, !1246, !1247}
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "btf", scope: !1241, file: !96, line: 635, baseType: !333, size: 64, align: 64)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "btf_log_buf", scope: !1241, file: !96, line: 636, baseType: !333, size: 64, align: 64, offset: 64)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "btf_size", scope: !1241, file: !96, line: 637, baseType: !493, size: 32, offset: 128)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "btf_log_size", scope: !1241, file: !96, line: 638, baseType: !493, size: 32, offset: 160)
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "btf_log_level", scope: !1241, file: !96, line: 639, baseType: !493, size: 32, offset: 192)
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "task_fd_query", scope: !1112, file: !96, line: 656, baseType: !1249, size: 384)
!1249 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1112, file: !96, line: 642, size: 384, elements: !1250)
!1250 = !{!1251, !1252, !1253, !1254, !1255, !1256, !1257, !1258, !1259}
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !1249, file: !96, line: 643, baseType: !493, size: 32)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "fd", scope: !1249, file: !96, line: 644, baseType: !493, size: 32, offset: 32)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1249, file: !96, line: 645, baseType: !493, size: 32, offset: 64)
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "buf_len", scope: !1249, file: !96, line: 646, baseType: !493, size: 32, offset: 96)
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1249, file: !96, line: 647, baseType: !333, size: 64, align: 64, offset: 128)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "prog_id", scope: !1249, file: !96, line: 652, baseType: !493, size: 32, offset: 192)
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "fd_type", scope: !1249, file: !96, line: 653, baseType: !493, size: 32, offset: 224)
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "probe_offset", scope: !1249, file: !96, line: 654, baseType: !333, size: 64, offset: 256)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "probe_addr", scope: !1249, file: !96, line: 655, baseType: !333, size: 64, offset: 320)
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "link_create", scope: !1112, file: !96, line: 673, baseType: !1261, size: 256)
!1261 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1112, file: !96, line: 658, size: 256, elements: !1262)
!1262 = !{!1263, !1264, !1269, !1270, !1271}
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "prog_fd", scope: !1261, file: !96, line: 659, baseType: !493, size: 32)
!1264 = !DIDerivedType(tag: DW_TAG_member, scope: !1261, file: !96, line: 660, baseType: !1265, size: 32, offset: 32)
!1265 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1261, file: !96, line: 660, size: 32, elements: !1266)
!1266 = !{!1267, !1268}
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "target_fd", scope: !1265, file: !96, line: 661, baseType: !493, size: 32)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "target_ifindex", scope: !1265, file: !96, line: 662, baseType: !493, size: 32)
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "attach_type", scope: !1261, file: !96, line: 664, baseType: !493, size: 32, offset: 64)
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1261, file: !96, line: 665, baseType: !493, size: 32, offset: 96)
!1271 = !DIDerivedType(tag: DW_TAG_member, scope: !1261, file: !96, line: 666, baseType: !1272, size: 128, offset: 128)
!1272 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1261, file: !96, line: 666, size: 128, elements: !1273)
!1273 = !{!1274, !1275}
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "target_btf_id", scope: !1272, file: !96, line: 667, baseType: !493, size: 32)
!1275 = !DIDerivedType(tag: DW_TAG_member, scope: !1272, file: !96, line: 668, baseType: !1276, size: 128)
!1276 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1272, file: !96, line: 668, size: 128, elements: !1277)
!1277 = !{!1278, !1279}
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "iter_info", scope: !1276, file: !96, line: 669, baseType: !333, size: 64, align: 64)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "iter_info_len", scope: !1276, file: !96, line: 670, baseType: !493, size: 32, offset: 64)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "link_update", scope: !1112, file: !96, line: 683, baseType: !1281, size: 128)
!1281 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1112, file: !96, line: 675, size: 128, elements: !1282)
!1282 = !{!1283, !1284, !1285, !1286}
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "link_fd", scope: !1281, file: !96, line: 676, baseType: !493, size: 32)
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "new_prog_fd", scope: !1281, file: !96, line: 678, baseType: !493, size: 32, offset: 32)
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1281, file: !96, line: 679, baseType: !493, size: 32, offset: 64)
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "old_prog_fd", scope: !1281, file: !96, line: 682, baseType: !493, size: 32, offset: 96)
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "link_detach", scope: !1112, file: !96, line: 687, baseType: !1288, size: 32)
!1288 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1112, file: !96, line: 685, size: 32, elements: !1289)
!1289 = !{!1290}
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "link_fd", scope: !1288, file: !96, line: 686, baseType: !493, size: 32)
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "enable_stats", scope: !1112, file: !96, line: 691, baseType: !1292, size: 32)
!1292 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1112, file: !96, line: 689, size: 32, elements: !1293)
!1293 = !{!1294}
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1292, file: !96, line: 690, baseType: !493, size: 32)
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "iter_create", scope: !1112, file: !96, line: 696, baseType: !1296, size: 64)
!1296 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1112, file: !96, line: 693, size: 64, elements: !1297)
!1297 = !{!1298, !1299}
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "link_fd", scope: !1296, file: !96, line: 694, baseType: !493, size: 32)
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1296, file: !96, line: 695, baseType: !493, size: 32, offset: 32)
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "prog_bind_map", scope: !1112, file: !96, line: 702, baseType: !1301, size: 96)
!1301 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1112, file: !96, line: 698, size: 96, elements: !1302)
!1302 = !{!1303, !1304, !1305}
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "prog_fd", scope: !1301, file: !96, line: 699, baseType: !493, size: 32)
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "map_fd", scope: !1301, file: !96, line: 700, baseType: !493, size: 32, offset: 32)
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1301, file: !96, line: 701, baseType: !493, size: 32, offset: 64)
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "map_alloc", scope: !1105, file: !65, line: 57, baseType: !1307, size: 64, offset: 64)
!1307 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1308, size: 64)
!1308 = !DISubroutineType(types: !1309)
!1309 = !{!1310, !1111}
!1310 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1100, size: 64)
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "map_release", scope: !1105, file: !65, line: 58, baseType: !1312, size: 64, offset: 128)
!1312 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1313, size: 64)
!1313 = !DISubroutineType(types: !1314)
!1314 = !{null, !1310, !1315}
!1315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1316, size: 64)
!1316 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file", file: !1317, line: 916, size: 1856, align: 32, elements: !1318)
!1317 = !DIFile(filename: "./include/linux/fs.h", directory: "/home/lizy2001/genbc/linux")
!1318 = !{!1319, !1329, !5047, !5048, !5049, !5050, !5059, !5060, !5061, !5062, !5063, !5064, !5080, !5081, !5090, !5091, !5092, !5093, !5094, !5095, !5096}
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "f_u", scope: !1316, file: !1317, line: 920, baseType: !1320, size: 128)
!1320 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1316, file: !1317, line: 917, size: 128, elements: !1321)
!1321 = !{!1322, !1328}
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "fu_llist", scope: !1320, file: !1317, line: 918, baseType: !1323, size: 64)
!1323 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "llist_node", file: !1324, line: 58, size: 64, elements: !1325)
!1324 = !DIFile(filename: "./include/linux/llist.h", directory: "/home/lizy2001/genbc/linux")
!1325 = !{!1326}
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1323, file: !1324, line: 59, baseType: !1327, size: 64)
!1327 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1323, size: 64)
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "fu_rcuhead", scope: !1320, file: !1317, line: 919, baseType: !299, size: 128, align: 64)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "f_path", scope: !1316, file: !1317, line: 921, baseType: !1330, size: 128, offset: 128)
!1330 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "path", file: !1331, line: 8, size: 128, elements: !1332)
!1331 = !DIFile(filename: "./include/linux/path.h", directory: "/home/lizy2001/genbc/linux")
!1332 = !{!1333, !1337}
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "mnt", scope: !1330, file: !1331, line: 9, baseType: !1334, size: 64)
!1334 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1335, size: 64)
!1335 = !DICompositeType(tag: DW_TAG_structure_type, name: "vfsmount", file: !1336, line: 18, flags: DIFlagFwdDecl)
!1336 = !DIFile(filename: "./include/linux/dcache.h", directory: "/home/lizy2001/genbc/linux")
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "dentry", scope: !1330, file: !1331, line: 10, baseType: !1338, size: 64, offset: 64)
!1338 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1339, size: 64)
!1339 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry", file: !1336, line: 89, size: 1536, elements: !1340)
!1340 = !{!1341, !1342, !1352, !1360, !1361, !1374, !5016, !5017, !5029, !5030, !5031, !5032, !5033, !5039, !5040, !5041}
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "d_flags", scope: !1339, file: !1336, line: 91, baseType: !7, size: 32)
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "d_seq", scope: !1339, file: !1336, line: 92, baseType: !1343, size: 32, offset: 32)
!1343 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_spinlock_t", file: !1344, line: 277, baseType: !1345)
!1344 = !DIFile(filename: "./include/linux/seqlock.h", directory: "/home/lizy2001/genbc/linux")
!1345 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_spinlock", file: !1344, line: 277, size: 32, elements: !1346)
!1346 = !{!1347}
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !1345, file: !1344, line: 277, baseType: !1348, size: 32)
!1348 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_t", file: !1344, line: 70, baseType: !1349)
!1349 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount", file: !1344, line: 65, size: 32, elements: !1350)
!1350 = !{!1351}
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "sequence", scope: !1349, file: !1344, line: 66, baseType: !7, size: 32)
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !1339, file: !1336, line: 93, baseType: !1353, size: 128, offset: 64)
!1353 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_node", file: !1354, line: 38, size: 128, elements: !1355)
!1354 = !DIFile(filename: "./include/linux/list_bl.h", directory: "/home/lizy2001/genbc/linux")
!1355 = !{!1356, !1358}
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1353, file: !1354, line: 39, baseType: !1357, size: 64)
!1357 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1353, size: 64)
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !1353, file: !1354, line: 39, baseType: !1359, size: 64, offset: 64)
!1359 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1357, size: 64)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "d_parent", scope: !1339, file: !1336, line: 94, baseType: !1338, size: 64, offset: 192)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "d_name", scope: !1339, file: !1336, line: 95, baseType: !1362, size: 128, offset: 256)
!1362 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qstr", file: !1336, line: 47, size: 128, elements: !1363)
!1363 = !{!1364, !1373}
!1364 = !DIDerivedType(tag: DW_TAG_member, scope: !1362, file: !1336, line: 48, baseType: !1365, size: 64)
!1365 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1362, file: !1336, line: 48, size: 64, elements: !1366)
!1366 = !{!1367, !1372}
!1367 = !DIDerivedType(tag: DW_TAG_member, scope: !1365, file: !1336, line: 49, baseType: !1368, size: 64)
!1368 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1365, file: !1336, line: 49, size: 64, elements: !1369)
!1369 = !{!1370, !1371}
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !1368, file: !1336, line: 50, baseType: !987, size: 32)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1368, file: !1336, line: 50, baseType: !987, size: 32, offset: 32)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "hash_len", scope: !1365, file: !1336, line: 52, baseType: !331, size: 64)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1362, file: !1336, line: 54, baseType: !946, size: 64, offset: 64)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "d_inode", scope: !1339, file: !1336, line: 96, baseType: !1375, size: 64, offset: 384)
!1375 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1376, size: 64)
!1376 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode", file: !1317, line: 610, size: 4224, elements: !1377)
!1377 = !{!1378, !1380, !1381, !1389, !1396, !1397, !1544, !4745, !4746, !4747, !4753, !4754, !4755, !4756, !4757, !4758, !4759, !4760, !4761, !4762, !4763, !4764, !4765, !4766, !4767, !4768, !4769, !4770, !4771, !4772, !4777, !4778, !4779, !4780, !4781, !4782, !4783, !4992, !5000, !5001, !5002, !5012, !5013, !5014, !5015}
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "i_mode", scope: !1376, file: !1317, line: 611, baseType: !1379, size: 16)
!1379 = !DIDerivedType(tag: DW_TAG_typedef, name: "umode_t", file: !277, line: 19, baseType: !476)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "i_opflags", scope: !1376, file: !1317, line: 612, baseType: !476, size: 16, offset: 16)
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "i_uid", scope: !1376, file: !1317, line: 613, baseType: !1382, size: 32, offset: 32)
!1382 = !DIDerivedType(tag: DW_TAG_typedef, name: "kuid_t", file: !1383, line: 23, baseType: !1384)
!1383 = !DIFile(filename: "./include/linux/uidgid.h", directory: "/home/lizy2001/genbc/linux")
!1384 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1383, line: 21, size: 32, elements: !1385)
!1385 = !{!1386}
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1384, file: !1383, line: 22, baseType: !1387, size: 32)
!1387 = !DIDerivedType(tag: DW_TAG_typedef, name: "uid_t", file: !277, line: 32, baseType: !1388)
!1388 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_uid32_t", file: !1041, line: 49, baseType: !7)
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "i_gid", scope: !1376, file: !1317, line: 614, baseType: !1390, size: 32, offset: 64)
!1390 = !DIDerivedType(tag: DW_TAG_typedef, name: "kgid_t", file: !1383, line: 28, baseType: !1391)
!1391 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1383, line: 26, size: 32, elements: !1392)
!1392 = !{!1393}
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1391, file: !1383, line: 27, baseType: !1394, size: 32)
!1394 = !DIDerivedType(tag: DW_TAG_typedef, name: "gid_t", file: !277, line: 33, baseType: !1395)
!1395 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_gid32_t", file: !1041, line: 50, baseType: !7)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !1376, file: !1317, line: 615, baseType: !7, size: 32, offset: 96)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "i_op", scope: !1376, file: !1317, line: 622, baseType: !1398, size: 64, offset: 128)
!1398 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1399, size: 64)
!1399 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1400)
!1400 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode_operations", file: !1317, line: 1864, size: 1536, align: 512, elements: !1401)
!1401 = !{!1402, !1406, !1419, !1423, !1429, !1433, !1437, !1441, !1445, !1449, !1453, !1454, !1460, !1464, !1488, !1517, !1524, !1530, !1535, !1539, !1540}
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "lookup", scope: !1400, file: !1317, line: 1865, baseType: !1403, size: 64)
!1403 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1404, size: 64)
!1404 = !DISubroutineType(types: !1405)
!1405 = !{!1338, !1375, !1338, !7}
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "get_link", scope: !1400, file: !1317, line: 1866, baseType: !1407, size: 64, offset: 64)
!1407 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1408, size: 64)
!1408 = !DISubroutineType(types: !1409)
!1409 = !{!292, !1338, !1375, !1410}
!1410 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1411, size: 64)
!1411 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "delayed_call", file: !1412, line: 10, size: 128, elements: !1413)
!1412 = !DIFile(filename: "./include/linux/delayed_call.h", directory: "/home/lizy2001/genbc/linux")
!1413 = !{!1414, !1418}
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !1411, file: !1412, line: 11, baseType: !1415, size: 64)
!1415 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1416, size: 64)
!1416 = !DISubroutineType(types: !1417)
!1417 = !{null, !591}
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !1411, file: !1412, line: 12, baseType: !591, size: 64, offset: 64)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "permission", scope: !1400, file: !1317, line: 1867, baseType: !1420, size: 64, offset: 128)
!1420 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1421, size: 64)
!1421 = !DISubroutineType(types: !1422)
!1422 = !{!32, !1375, !32}
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "get_acl", scope: !1400, file: !1317, line: 1868, baseType: !1424, size: 64, offset: 192)
!1424 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1425, size: 64)
!1425 = !DISubroutineType(types: !1426)
!1426 = !{!1427, !1375, !32}
!1427 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1428, size: 64)
!1428 = !DICompositeType(tag: DW_TAG_structure_type, name: "posix_acl", file: !1317, line: 581, flags: DIFlagFwdDecl)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "readlink", scope: !1400, file: !1317, line: 1870, baseType: !1430, size: 64, offset: 256)
!1430 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1431, size: 64)
!1431 = !DISubroutineType(types: !1432)
!1432 = !{!32, !1338, !1038, !32}
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "create", scope: !1400, file: !1317, line: 1872, baseType: !1434, size: 64, offset: 320)
!1434 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1435, size: 64)
!1435 = !DISubroutineType(types: !1436)
!1436 = !{!32, !1375, !1338, !1379, !771}
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !1400, file: !1317, line: 1873, baseType: !1438, size: 64, offset: 384)
!1438 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1439, size: 64)
!1439 = !DISubroutineType(types: !1440)
!1440 = !{!32, !1338, !1375, !1338}
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "unlink", scope: !1400, file: !1317, line: 1874, baseType: !1442, size: 64, offset: 448)
!1442 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1443, size: 64)
!1443 = !DISubroutineType(types: !1444)
!1444 = !{!32, !1375, !1338}
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !1400, file: !1317, line: 1875, baseType: !1446, size: 64, offset: 512)
!1446 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1447, size: 64)
!1447 = !DISubroutineType(types: !1448)
!1448 = !{!32, !1375, !1338, !292}
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !1400, file: !1317, line: 1876, baseType: !1450, size: 64, offset: 576)
!1450 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1451, size: 64)
!1451 = !DISubroutineType(types: !1452)
!1452 = !{!32, !1375, !1338, !1379}
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !1400, file: !1317, line: 1877, baseType: !1442, size: 64, offset: 640)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "mknod", scope: !1400, file: !1317, line: 1878, baseType: !1455, size: 64, offset: 704)
!1455 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1456, size: 64)
!1456 = !DISubroutineType(types: !1457)
!1457 = !{!32, !1375, !1338, !1379, !1458}
!1458 = !DIDerivedType(tag: DW_TAG_typedef, name: "dev_t", file: !277, line: 16, baseType: !1459)
!1459 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_dev_t", file: !277, line: 13, baseType: !987)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !1400, file: !1317, line: 1879, baseType: !1461, size: 64, offset: 768)
!1461 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1462, size: 64)
!1462 = !DISubroutineType(types: !1463)
!1463 = !{!32, !1375, !1338, !1375, !1338, !7}
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "setattr", scope: !1400, file: !1317, line: 1881, baseType: !1465, size: 64, offset: 832)
!1465 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1466, size: 64)
!1466 = !DISubroutineType(types: !1467)
!1467 = !{!32, !1338, !1468}
!1468 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1469, size: 64)
!1469 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iattr", file: !1317, line: 219, size: 640, elements: !1470)
!1470 = !{!1471, !1472, !1473, !1474, !1475, !1478, !1485, !1486, !1487}
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "ia_valid", scope: !1469, file: !1317, line: 220, baseType: !7, size: 32)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mode", scope: !1469, file: !1317, line: 221, baseType: !1379, size: 16, offset: 32)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "ia_uid", scope: !1469, file: !1317, line: 222, baseType: !1382, size: 32, offset: 64)
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "ia_gid", scope: !1469, file: !1317, line: 223, baseType: !1390, size: 32, offset: 96)
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "ia_size", scope: !1469, file: !1317, line: 224, baseType: !1476, size: 64, offset: 128)
!1476 = !DIDerivedType(tag: DW_TAG_typedef, name: "loff_t", file: !277, line: 46, baseType: !1477)
!1477 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_loff_t", file: !1041, line: 88, baseType: !379)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "ia_atime", scope: !1469, file: !1317, line: 225, baseType: !1479, size: 128, offset: 192)
!1479 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec64", file: !1480, line: 13, size: 128, elements: !1481)
!1480 = !DIFile(filename: "./include/linux/time64.h", directory: "/home/lizy2001/genbc/linux")
!1481 = !{!1482, !1484}
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1479, file: !1480, line: 14, baseType: !1483, size: 64)
!1483 = !DIDerivedType(tag: DW_TAG_typedef, name: "time64_t", file: !1480, line: 8, baseType: !378)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1479, file: !1480, line: 15, baseType: !998, size: 64, offset: 64)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mtime", scope: !1469, file: !1317, line: 226, baseType: !1479, size: 128, offset: 320)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "ia_ctime", scope: !1469, file: !1317, line: 227, baseType: !1479, size: 128, offset: 448)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "ia_file", scope: !1469, file: !1317, line: 234, baseType: !1315, size: 64, offset: 576)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "getattr", scope: !1400, file: !1317, line: 1882, baseType: !1489, size: 64, offset: 896)
!1489 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1490, size: 64)
!1490 = !DISubroutineType(types: !1491)
!1491 = !{!32, !1492, !1494, !987, !7}
!1492 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1493, size: 64)
!1493 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1330)
!1494 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1495, size: 64)
!1495 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kstat", file: !1496, line: 22, size: 1152, elements: !1497)
!1496 = !DIFile(filename: "./include/linux/stat.h", directory: "/home/lizy2001/genbc/linux")
!1497 = !{!1498, !1499, !1500, !1501, !1503, !1504, !1505, !1506, !1507, !1508, !1509, !1510, !1511, !1512, !1513, !1514, !1515, !1516}
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "result_mask", scope: !1495, file: !1496, line: 23, baseType: !987, size: 32)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1495, file: !1496, line: 24, baseType: !1379, size: 16, offset: 32)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "nlink", scope: !1495, file: !1496, line: 25, baseType: !7, size: 32, offset: 64)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "blksize", scope: !1495, file: !1496, line: 26, baseType: !1502, size: 32, offset: 96)
!1502 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !277, line: 104, baseType: !987)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !1495, file: !1496, line: 27, baseType: !331, size: 64, offset: 128)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "attributes_mask", scope: !1495, file: !1496, line: 28, baseType: !331, size: 64, offset: 192)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !1495, file: !1496, line: 37, baseType: !331, size: 64, offset: 256)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1495, file: !1496, line: 38, baseType: !1458, size: 32, offset: 320)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "rdev", scope: !1495, file: !1496, line: 39, baseType: !1458, size: 32, offset: 352)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1495, file: !1496, line: 40, baseType: !1382, size: 32, offset: 384)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1495, file: !1496, line: 41, baseType: !1390, size: 32, offset: 416)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1495, file: !1496, line: 42, baseType: !1476, size: 64, offset: 448)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "atime", scope: !1495, file: !1496, line: 43, baseType: !1479, size: 128, offset: 512)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "mtime", scope: !1495, file: !1496, line: 44, baseType: !1479, size: 128, offset: 640)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !1495, file: !1496, line: 45, baseType: !1479, size: 128, offset: 768)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "btime", scope: !1495, file: !1496, line: 46, baseType: !1479, size: 128, offset: 896)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !1495, file: !1496, line: 47, baseType: !331, size: 64, offset: 1024)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "mnt_id", scope: !1495, file: !1496, line: 48, baseType: !331, size: 64, offset: 1088)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "listxattr", scope: !1400, file: !1317, line: 1883, baseType: !1518, size: 64, offset: 960)
!1518 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1519, size: 64)
!1519 = !DISubroutineType(types: !1520)
!1520 = !{!1521, !1338, !1038, !1039}
!1521 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !277, line: 60, baseType: !1522)
!1522 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ssize_t", file: !1041, line: 73, baseType: !1523)
!1523 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_long_t", file: !1041, line: 15, baseType: !998)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "fiemap", scope: !1400, file: !1317, line: 1884, baseType: !1525, size: 64, offset: 1024)
!1525 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1526, size: 64)
!1526 = !DISubroutineType(types: !1527)
!1527 = !{!32, !1375, !1528, !331, !331}
!1528 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1529, size: 64)
!1529 = !DICompositeType(tag: DW_TAG_structure_type, name: "fiemap_extent_info", file: !1317, line: 50, flags: DIFlagFwdDecl)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "update_time", scope: !1400, file: !1317, line: 1886, baseType: !1531, size: 64, offset: 1088)
!1531 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1532, size: 64)
!1532 = !DISubroutineType(types: !1533)
!1533 = !{!32, !1375, !1534, !32}
!1534 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1479, size: 64)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_open", scope: !1400, file: !1317, line: 1887, baseType: !1536, size: 64, offset: 1152)
!1536 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1537, size: 64)
!1537 = !DISubroutineType(types: !1538)
!1538 = !{!32, !1375, !1338, !1315, !7, !1379}
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "tmpfile", scope: !1400, file: !1317, line: 1890, baseType: !1450, size: 64, offset: 1216)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "set_acl", scope: !1400, file: !1317, line: 1891, baseType: !1541, size: 64, offset: 1280)
!1541 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1542, size: 64)
!1542 = !DISubroutineType(types: !1543)
!1543 = !{!32, !1375, !1427, !32}
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb", scope: !1376, file: !1317, line: 623, baseType: !1545, size: 64, offset: 192)
!1545 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1546, size: 64)
!1546 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_block", file: !1317, line: 1416, size: 9472, elements: !1547)
!1547 = !{!1548, !1549, !1550, !1551, !1552, !1553, !1597, !4347, !4435, !4518, !4522, !4523, !4524, !4525, !4526, !4527, !4528, !4529, !4534, !4538, !4539, !4542, !4543, !4546, !4547, !4548, !4589, !4616, !4617, !4618, !4619, !4620, !4621, !4624, !4626, !4632, !4633, !4635, !4636, !4637, !4696, !4697, !4712, !4713, !4714, !4715, !4716, !4719, !4720, !4721, !4736, !4737, !4738, !4739, !4740, !4741, !4742, !4743, !4744}
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "s_list", scope: !1546, file: !1317, line: 1417, baseType: !284, size: 128)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "s_dev", scope: !1546, file: !1317, line: 1418, baseType: !1458, size: 32, offset: 128)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize_bits", scope: !1546, file: !1317, line: 1419, baseType: !482, size: 8, offset: 160)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize", scope: !1546, file: !1317, line: 1420, baseType: !312, size: 64, offset: 192)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "s_maxbytes", scope: !1546, file: !1317, line: 1421, baseType: !1476, size: 64, offset: 256)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "s_type", scope: !1546, file: !1317, line: 1422, baseType: !1554, size: 64, offset: 320)
!1554 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1555, size: 64)
!1555 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_system_type", file: !1317, line: 2228, size: 576, elements: !1556)
!1556 = !{!1557, !1558, !1559, !1566, !1570, !1574, !1578, !1579, !1580, !1584, !1588, !1589, !1590, !1594, !1595, !1596}
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1555, file: !1317, line: 2229, baseType: !292, size: 64)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "fs_flags", scope: !1555, file: !1317, line: 2230, baseType: !32, size: 32, offset: 64)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "init_fs_context", scope: !1555, file: !1317, line: 2238, baseType: !1560, size: 64, offset: 128)
!1560 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1561, size: 64)
!1561 = !DISubroutineType(types: !1562)
!1562 = !{!32, !1563}
!1563 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1564, size: 64)
!1564 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_context", file: !1565, line: 28, flags: DIFlagFwdDecl)
!1565 = !DIFile(filename: "./include/linux/kernfs.h", directory: "/home/lizy2001/genbc/linux")
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "parameters", scope: !1555, file: !1317, line: 2239, baseType: !1567, size: 64, offset: 192)
!1567 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1568, size: 64)
!1568 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1569)
!1569 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_parameter_spec", file: !1317, line: 70, flags: DIFlagFwdDecl)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "mount", scope: !1555, file: !1317, line: 2240, baseType: !1571, size: 64, offset: 256)
!1571 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1572, size: 64)
!1572 = !DISubroutineType(types: !1573)
!1573 = !{!1338, !1554, !32, !292, !591}
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "kill_sb", scope: !1555, file: !1317, line: 2242, baseType: !1575, size: 64, offset: 320)
!1575 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1576, size: 64)
!1576 = !DISubroutineType(types: !1577)
!1577 = !{null, !1545}
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1555, file: !1317, line: 2243, baseType: !980, size: 64, offset: 384)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1555, file: !1317, line: 2244, baseType: !1554, size: 64, offset: 448)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "fs_supers", scope: !1555, file: !1317, line: 2245, baseType: !1581, size: 64, offset: 512)
!1581 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_head", file: !277, line: 182, size: 64, elements: !1582)
!1582 = !{!1583}
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !1581, file: !277, line: 183, baseType: !280, size: 64)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "s_lock_key", scope: !1555, file: !1317, line: 2247, baseType: !1585, offset: 576)
!1585 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_class_key", file: !1586, line: 187, elements: !1587)
!1586 = !DIFile(filename: "./include/linux/lockdep_types.h", directory: "/home/lizy2001/genbc/linux")
!1587 = !{}
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount_key", scope: !1555, file: !1317, line: 2248, baseType: !1585, offset: 576)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_key", scope: !1555, file: !1317, line: 2249, baseType: !1585, offset: 576)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers_key", scope: !1555, file: !1317, line: 2250, baseType: !1591, offset: 576)
!1591 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1585, elements: !1592)
!1592 = !{!1593}
!1593 = !DISubrange(count: 3)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock_key", scope: !1555, file: !1317, line: 2252, baseType: !1585, offset: 576)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_key", scope: !1555, file: !1317, line: 2253, baseType: !1585, offset: 576)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_dir_key", scope: !1555, file: !1317, line: 2254, baseType: !1585, offset: 576)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "s_op", scope: !1546, file: !1317, line: 1423, baseType: !1598, size: 64, offset: 384)
!1598 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1599, size: 64)
!1599 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1600)
!1600 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_operations", file: !1317, line: 1935, size: 1472, elements: !1601)
!1601 = !{!1602, !1606, !1610, !1611, !1615, !1621, !1625, !1626, !1627, !1631, !1635, !1636, !1637, !1638, !1644, !1648, !1649, !1712, !1713, !1714, !1715, !4331, !4346}
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_inode", scope: !1600, file: !1317, line: 1936, baseType: !1603, size: 64)
!1603 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1604, size: 64)
!1604 = !DISubroutineType(types: !1605)
!1605 = !{!1375, !1545}
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_inode", scope: !1600, file: !1317, line: 1937, baseType: !1607, size: 64, offset: 64)
!1607 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1608, size: 64)
!1608 = !DISubroutineType(types: !1609)
!1609 = !{null, !1375}
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !1600, file: !1317, line: 1938, baseType: !1607, size: 64, offset: 128)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_inode", scope: !1600, file: !1317, line: 1940, baseType: !1612, size: 64, offset: 192)
!1612 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1613, size: 64)
!1613 = !DISubroutineType(types: !1614)
!1614 = !{null, !1375, !32}
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "write_inode", scope: !1600, file: !1317, line: 1941, baseType: !1616, size: 64, offset: 256)
!1616 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1617, size: 64)
!1617 = !DISubroutineType(types: !1618)
!1618 = !{!32, !1375, !1619}
!1619 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1620, size: 64)
!1620 = !DICompositeType(tag: DW_TAG_structure_type, name: "writeback_control", file: !1317, line: 289, flags: DIFlagFwdDecl)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "drop_inode", scope: !1600, file: !1317, line: 1942, baseType: !1622, size: 64, offset: 320)
!1622 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1623, size: 64)
!1623 = !DISubroutineType(types: !1624)
!1624 = !{!32, !1375}
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "evict_inode", scope: !1600, file: !1317, line: 1943, baseType: !1607, size: 64, offset: 384)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "put_super", scope: !1600, file: !1317, line: 1944, baseType: !1575, size: 64, offset: 448)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "sync_fs", scope: !1600, file: !1317, line: 1945, baseType: !1628, size: 64, offset: 512)
!1628 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1629, size: 64)
!1629 = !DISubroutineType(types: !1630)
!1630 = !{!32, !1545, !32}
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_super", scope: !1600, file: !1317, line: 1946, baseType: !1632, size: 64, offset: 576)
!1632 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1633, size: 64)
!1633 = !DISubroutineType(types: !1634)
!1634 = !{!32, !1545}
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_fs", scope: !1600, file: !1317, line: 1947, baseType: !1632, size: 64, offset: 640)
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_super", scope: !1600, file: !1317, line: 1948, baseType: !1632, size: 64, offset: 704)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "unfreeze_fs", scope: !1600, file: !1317, line: 1949, baseType: !1632, size: 64, offset: 768)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "statfs", scope: !1600, file: !1317, line: 1950, baseType: !1639, size: 64, offset: 832)
!1639 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1640, size: 64)
!1640 = !DISubroutineType(types: !1641)
!1641 = !{!32, !1338, !1642}
!1642 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1643, size: 64)
!1643 = !DICompositeType(tag: DW_TAG_structure_type, name: "kstatfs", file: !1317, line: 57, flags: DIFlagFwdDecl)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "remount_fs", scope: !1600, file: !1317, line: 1951, baseType: !1645, size: 64, offset: 896)
!1645 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1646, size: 64)
!1646 = !DISubroutineType(types: !1647)
!1647 = !{!32, !1545, !1001, !1038}
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "umount_begin", scope: !1600, file: !1317, line: 1952, baseType: !1575, size: 64, offset: 960)
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !1600, file: !1317, line: 1954, baseType: !1650, size: 64, offset: 1024)
!1650 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1651, size: 64)
!1651 = !DISubroutineType(types: !1652)
!1652 = !{!32, !1653, !1338}
!1653 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1654, size: 64)
!1654 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seq_file", file: !1655, line: 16, size: 896, elements: !1656)
!1655 = !DIFile(filename: "./include/linux/seq_file.h", directory: "/home/lizy2001/genbc/linux")
!1656 = !{!1657, !1658, !1659, !1660, !1661, !1662, !1663, !1664, !1685, !1707, !1708, !1711}
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1654, file: !1655, line: 17, baseType: !1038, size: 64)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1654, file: !1655, line: 18, baseType: !1039, size: 64, offset: 64)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "from", scope: !1654, file: !1655, line: 19, baseType: !1039, size: 64, offset: 128)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1654, file: !1655, line: 20, baseType: !1039, size: 64, offset: 192)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "pad_until", scope: !1654, file: !1655, line: 21, baseType: !1039, size: 64, offset: 256)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1654, file: !1655, line: 22, baseType: !1476, size: 64, offset: 320)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "read_pos", scope: !1654, file: !1655, line: 23, baseType: !1476, size: 64, offset: 384)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1654, file: !1655, line: 24, baseType: !1665, size: 192, offset: 448)
!1665 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mutex", file: !1666, line: 53, size: 192, elements: !1667)
!1666 = !DIFile(filename: "./include/linux/mutex.h", directory: "/home/lizy2001/genbc/linux")
!1667 = !{!1668, !1669, !1684}
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1665, file: !1666, line: 54, baseType: !371, size: 64)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !1665, file: !1666, line: 55, baseType: !1670, offset: 64)
!1670 = !DIDerivedType(tag: DW_TAG_typedef, name: "spinlock_t", file: !1671, line: 83, baseType: !1672)
!1671 = !DIFile(filename: "./include/linux/spinlock_types.h", directory: "/home/lizy2001/genbc/linux")
!1672 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "spinlock", file: !1671, line: 71, elements: !1673)
!1673 = !{!1674}
!1674 = !DIDerivedType(tag: DW_TAG_member, scope: !1672, file: !1671, line: 72, baseType: !1675)
!1675 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1672, file: !1671, line: 72, elements: !1676)
!1676 = !{!1677}
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "rlock", scope: !1675, file: !1671, line: 73, baseType: !1678)
!1678 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "raw_spinlock", file: !1671, line: 20, elements: !1679)
!1679 = !{!1680}
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !1678, file: !1671, line: 21, baseType: !1681)
!1681 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_spinlock_t", file: !1682, line: 25, baseType: !1683)
!1682 = !DIFile(filename: "./include/linux/spinlock_types_up.h", directory: "/home/lizy2001/genbc/linux")
!1683 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1682, line: 25, elements: !1587)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !1665, file: !1666, line: 59, baseType: !284, size: 128, offset: 64)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !1654, file: !1655, line: 25, baseType: !1686, size: 64, offset: 640)
!1686 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1687, size: 64)
!1687 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1688)
!1688 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seq_operations", file: !1655, line: 31, size: 256, elements: !1689)
!1689 = !{!1690, !1695, !1699, !1703}
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !1688, file: !1655, line: 32, baseType: !1691, size: 64)
!1691 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1692, size: 64)
!1692 = !DISubroutineType(types: !1693)
!1693 = !{!591, !1653, !1694}
!1694 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1476, size: 64)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "stop", scope: !1688, file: !1655, line: 33, baseType: !1696, size: 64, offset: 64)
!1696 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1697, size: 64)
!1697 = !DISubroutineType(types: !1698)
!1698 = !{null, !1653, !591}
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1688, file: !1655, line: 34, baseType: !1700, size: 64, offset: 128)
!1700 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1701, size: 64)
!1701 = !DISubroutineType(types: !1702)
!1702 = !{!591, !1653, !591, !1694}
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !1688, file: !1655, line: 35, baseType: !1704, size: 64, offset: 192)
!1704 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1705, size: 64)
!1705 = !DISubroutineType(types: !1706)
!1706 = !{!32, !1653, !591}
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "poll_event", scope: !1654, file: !1655, line: 26, baseType: !32, size: 32, offset: 704)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !1654, file: !1655, line: 27, baseType: !1709, size: 64, offset: 768)
!1709 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1710, size: 64)
!1710 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1316)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !1654, file: !1655, line: 28, baseType: !591, size: 64, offset: 832)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "show_devname", scope: !1600, file: !1317, line: 1955, baseType: !1650, size: 64, offset: 1088)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !1600, file: !1317, line: 1956, baseType: !1650, size: 64, offset: 1152)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "show_stats", scope: !1600, file: !1317, line: 1957, baseType: !1650, size: 64, offset: 1216)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "bdev_try_to_free_page", scope: !1600, file: !1317, line: 1963, baseType: !1716, size: 64, offset: 1280)
!1716 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1717, size: 64)
!1717 = !DISubroutineType(types: !1718)
!1718 = !{!32, !1545, !1719, !1742}
!1719 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1720, size: 64)
!1720 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page", file: !1721, line: 68, size: 512, align: 128, elements: !1722)
!1721 = !DIFile(filename: "./include/linux/mm_types.h", directory: "/home/lizy2001/genbc/linux")
!1722 = !{!1723, !1724, !4323, !4330}
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1720, file: !1721, line: 69, baseType: !312, size: 64)
!1724 = !DIDerivedType(tag: DW_TAG_member, scope: !1720, file: !1721, line: 77, baseType: !1725, size: 320, offset: 64)
!1725 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1720, file: !1721, line: 77, size: 320, elements: !1726)
!1726 = !{!1727, !2032, !2037, !2065, !2073, !2079, !4247, !4322}
!1727 = !DIDerivedType(tag: DW_TAG_member, scope: !1725, file: !1721, line: 78, baseType: !1728, size: 320)
!1728 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1725, file: !1721, line: 78, size: 320, elements: !1729)
!1729 = !{!1730, !1731, !2030, !2031}
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !1728, file: !1721, line: 84, baseType: !284, size: 128)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "mapping", scope: !1728, file: !1721, line: 86, baseType: !1732, size: 64, offset: 128)
!1732 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1733, size: 64)
!1733 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space", file: !1317, line: 451, size: 1216, align: 64, elements: !1734)
!1734 = !{!1735, !1736, !1744, !1745, !1746, !1754, !1763, !1764, !1765, !1766, !2023, !2024, !2027, !2028, !2029}
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "host", scope: !1733, file: !1317, line: 452, baseType: !1375, size: 64)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "i_pages", scope: !1733, file: !1317, line: 453, baseType: !1737, size: 128, offset: 64)
!1737 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xarray", file: !1738, line: 292, size: 128, elements: !1739)
!1738 = !DIFile(filename: "./include/linux/xarray.h", directory: "/home/lizy2001/genbc/linux")
!1739 = !{!1740, !1741, !1743}
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "xa_lock", scope: !1737, file: !1738, line: 293, baseType: !1670)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "xa_flags", scope: !1737, file: !1738, line: 295, baseType: !1742, size: 32)
!1742 = !DIDerivedType(tag: DW_TAG_typedef, name: "gfp_t", file: !277, line: 148, baseType: !7)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "xa_head", scope: !1737, file: !1738, line: 296, baseType: !591, size: 64, offset: 64)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !1733, file: !1317, line: 454, baseType: !1742, size: 32, offset: 192)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_writable", scope: !1733, file: !1317, line: 455, baseType: !383, size: 32, offset: 224)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap", scope: !1733, file: !1317, line: 460, baseType: !1747, size: 128, offset: 256)
!1747 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root_cached", file: !434, line: 125, size: 128, elements: !1748)
!1748 = !{!1749, !1753}
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !1747, file: !434, line: 126, baseType: !1750, size: 64)
!1750 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root", file: !434, line: 31, size: 64, elements: !1751)
!1751 = !{!1752}
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !1750, file: !434, line: 32, baseType: !438, size: 64)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "rb_leftmost", scope: !1747, file: !434, line: 127, baseType: !438, size: 64, offset: 64)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_rwsem", scope: !1733, file: !1317, line: 461, baseType: !1755, size: 256, offset: 384)
!1755 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rw_semaphore", file: !1756, line: 35, size: 256, elements: !1757)
!1756 = !DIFile(filename: "./include/linux/rwsem.h", directory: "/home/lizy2001/genbc/linux")
!1757 = !{!1758, !1759, !1760, !1762}
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1755, file: !1756, line: 36, baseType: !371, size: 64)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1755, file: !1756, line: 42, baseType: !371, size: 64, offset: 64)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !1755, file: !1756, line: 46, baseType: !1761, offset: 128)
!1761 = !DIDerivedType(tag: DW_TAG_typedef, name: "raw_spinlock_t", file: !1671, line: 29, baseType: !1678)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !1755, file: !1756, line: 47, baseType: !284, size: 128, offset: 128)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "nrpages", scope: !1733, file: !1317, line: 462, baseType: !312, size: 64, offset: 640)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "nrexceptional", scope: !1733, file: !1317, line: 463, baseType: !312, size: 64, offset: 704)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "writeback_index", scope: !1733, file: !1317, line: 464, baseType: !312, size: 64, offset: 768)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "a_ops", scope: !1733, file: !1317, line: 465, baseType: !1767, size: 64, offset: 832)
!1767 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1768, size: 64)
!1768 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1769)
!1769 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space_operations", file: !1317, line: 367, size: 1408, elements: !1770)
!1770 = !{!1771, !1775, !1779, !1783, !1787, !1791, !1797, !1803, !1807, !1812, !1816, !1820, !1824, !1987, !1991, !1997, !1998, !1999, !2003, !2008, !2012, !2019}
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "writepage", scope: !1769, file: !1317, line: 368, baseType: !1772, size: 64)
!1772 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1773, size: 64)
!1773 = !DISubroutineType(types: !1774)
!1774 = !{!32, !1719, !1619}
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "readpage", scope: !1769, file: !1317, line: 369, baseType: !1776, size: 64, offset: 64)
!1776 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1777, size: 64)
!1777 = !DISubroutineType(types: !1778)
!1778 = !{!32, !1315, !1719}
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "writepages", scope: !1769, file: !1317, line: 372, baseType: !1780, size: 64, offset: 128)
!1780 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1781, size: 64)
!1781 = !DISubroutineType(types: !1782)
!1782 = !{!32, !1732, !1619}
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "set_page_dirty", scope: !1769, file: !1317, line: 375, baseType: !1784, size: 64, offset: 192)
!1784 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1785, size: 64)
!1785 = !DISubroutineType(types: !1786)
!1786 = !{!32, !1719}
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "readpages", scope: !1769, file: !1317, line: 381, baseType: !1788, size: 64, offset: 256)
!1788 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1789, size: 64)
!1789 = !DISubroutineType(types: !1790)
!1790 = !{!32, !1315, !1732, !287, !7}
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "readahead", scope: !1769, file: !1317, line: 383, baseType: !1792, size: 64, offset: 320)
!1792 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1793, size: 64)
!1793 = !DISubroutineType(types: !1794)
!1794 = !{null, !1795}
!1795 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1796, size: 64)
!1796 = !DICompositeType(tag: DW_TAG_structure_type, name: "readahead_control", file: !1317, line: 290, flags: DIFlagFwdDecl)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "write_begin", scope: !1769, file: !1317, line: 385, baseType: !1798, size: 64, offset: 384)
!1798 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1799, size: 64)
!1799 = !DISubroutineType(types: !1800)
!1800 = !{!32, !1315, !1732, !1476, !7, !7, !1801, !1802}
!1801 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1719, size: 64)
!1802 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !591, size: 64)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "write_end", scope: !1769, file: !1317, line: 388, baseType: !1804, size: 64, offset: 448)
!1804 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1805, size: 64)
!1805 = !DISubroutineType(types: !1806)
!1806 = !{!32, !1315, !1732, !1476, !7, !7, !1719, !591}
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "bmap", scope: !1769, file: !1317, line: 393, baseType: !1808, size: 64, offset: 512)
!1808 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1809, size: 64)
!1809 = !DISubroutineType(types: !1810)
!1810 = !{!1811, !1732, !1811}
!1811 = !DIDerivedType(tag: DW_TAG_typedef, name: "sector_t", file: !277, line: 125, baseType: !331)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "invalidatepage", scope: !1769, file: !1317, line: 394, baseType: !1813, size: 64, offset: 576)
!1813 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1814, size: 64)
!1814 = !DISubroutineType(types: !1815)
!1815 = !{null, !1719, !7, !7}
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "releasepage", scope: !1769, file: !1317, line: 395, baseType: !1817, size: 64, offset: 640)
!1817 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1818, size: 64)
!1818 = !DISubroutineType(types: !1819)
!1819 = !{!32, !1719, !1742}
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "freepage", scope: !1769, file: !1317, line: 396, baseType: !1821, size: 64, offset: 704)
!1821 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1822, size: 64)
!1822 = !DISubroutineType(types: !1823)
!1823 = !{null, !1719}
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "direct_IO", scope: !1769, file: !1317, line: 397, baseType: !1825, size: 64, offset: 768)
!1825 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1826, size: 64)
!1826 = !DISubroutineType(types: !1827)
!1827 = !{!1521, !1828, !1848}
!1828 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1829, size: 64)
!1829 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kiocb", file: !1317, line: 320, size: 384, elements: !1830)
!1830 = !{!1831, !1832, !1833, !1837, !1838, !1839, !1840, !1841}
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "ki_filp", scope: !1829, file: !1317, line: 321, baseType: !1315, size: 64)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "ki_pos", scope: !1829, file: !1317, line: 326, baseType: !1476, size: 64, offset: 64)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "ki_complete", scope: !1829, file: !1317, line: 327, baseType: !1834, size: 64, offset: 128)
!1834 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1835, size: 64)
!1835 = !DISubroutineType(types: !1836)
!1836 = !{null, !1828, !998, !998}
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !1829, file: !1317, line: 328, baseType: !591, size: 64, offset: 192)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "ki_flags", scope: !1829, file: !1317, line: 329, baseType: !32, size: 32, offset: 256)
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "ki_hint", scope: !1829, file: !1317, line: 330, baseType: !581, size: 16, offset: 288)
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "ki_ioprio", scope: !1829, file: !1317, line: 331, baseType: !581, size: 16, offset: 304)
!1841 = !DIDerivedType(tag: DW_TAG_member, scope: !1829, file: !1317, line: 332, baseType: !1842, size: 64, offset: 320)
!1842 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1829, file: !1317, line: 332, size: 64, elements: !1843)
!1843 = !{!1844, !1845}
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "ki_cookie", scope: !1842, file: !1317, line: 333, baseType: !7, size: 32)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "ki_waitq", scope: !1842, file: !1317, line: 334, baseType: !1846, size: 64)
!1846 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1847, size: 64)
!1847 = !DICompositeType(tag: DW_TAG_structure_type, name: "wait_page_queue", file: !1317, line: 334, flags: DIFlagFwdDecl)
!1848 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1849, size: 64)
!1849 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iov_iter", file: !1850, line: 29, size: 320, elements: !1851)
!1850 = !DIFile(filename: "./include/linux/uio.h", directory: "/home/lizy2001/genbc/linux")
!1851 = !{!1852, !1853, !1854, !1855, !1978}
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1849, file: !1850, line: 35, baseType: !7, size: 32)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "iov_offset", scope: !1849, file: !1850, line: 36, baseType: !1039, size: 64, offset: 64)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1849, file: !1850, line: 37, baseType: !1039, size: 64, offset: 128)
!1855 = !DIDerivedType(tag: DW_TAG_member, scope: !1849, file: !1850, line: 38, baseType: !1856, size: 64, offset: 192)
!1856 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1849, file: !1850, line: 38, size: 64, elements: !1857)
!1857 = !{!1858, !1866, !1873, !1882}
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "iov", scope: !1856, file: !1850, line: 39, baseType: !1859, size: 64)
!1859 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1860, size: 64)
!1860 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1861)
!1861 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iovec", file: !1862, line: 17, size: 128, elements: !1863)
!1862 = !DIFile(filename: "./include/uapi/linux/uio.h", directory: "/home/lizy2001/genbc/linux")
!1863 = !{!1864, !1865}
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "iov_base", scope: !1861, file: !1862, line: 19, baseType: !591, size: 64)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "iov_len", scope: !1861, file: !1862, line: 20, baseType: !1040, size: 64, offset: 64)
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "kvec", scope: !1856, file: !1850, line: 40, baseType: !1867, size: 64)
!1867 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1868, size: 64)
!1868 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1869)
!1869 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kvec", file: !1850, line: 15, size: 128, elements: !1870)
!1870 = !{!1871, !1872}
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "iov_base", scope: !1869, file: !1850, line: 16, baseType: !591, size: 64)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "iov_len", scope: !1869, file: !1850, line: 17, baseType: !1039, size: 64, offset: 64)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "bvec", scope: !1856, file: !1850, line: 41, baseType: !1874, size: 64)
!1874 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1875, size: 64)
!1875 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1876)
!1876 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bio_vec", file: !1877, line: 31, size: 128, elements: !1878)
!1877 = !DIFile(filename: "./include/linux/bvec.h", directory: "/home/lizy2001/genbc/linux")
!1878 = !{!1879, !1880, !1881}
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "bv_page", scope: !1876, file: !1877, line: 32, baseType: !1719, size: 64)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "bv_len", scope: !1876, file: !1877, line: 33, baseType: !7, size: 32, offset: 64)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "bv_offset", scope: !1876, file: !1877, line: 34, baseType: !7, size: 32, offset: 96)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "pipe", scope: !1856, file: !1850, line: 42, baseType: !1883, size: 64)
!1883 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1884, size: 64)
!1884 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pipe_inode_info", file: !1885, line: 57, size: 1088, elements: !1886)
!1885 = !DIFile(filename: "./include/linux/pipe_fs_i.h", directory: "/home/lizy2001/genbc/linux")
!1886 = !{!1887, !1888, !1895, !1896, !1897, !1898, !1899, !1900, !1901, !1902, !1903, !1904, !1905, !1906, !1907, !1924, !1925, !1952}
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !1884, file: !1885, line: 58, baseType: !1665, size: 192)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "rd_wait", scope: !1884, file: !1885, line: 59, baseType: !1889, size: 128, offset: 192)
!1889 = !DIDerivedType(tag: DW_TAG_typedef, name: "wait_queue_head_t", file: !1890, line: 40, baseType: !1891)
!1890 = !DIFile(filename: "./include/linux/wait.h", directory: "/home/lizy2001/genbc/linux")
!1891 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wait_queue_head", file: !1890, line: 36, size: 128, elements: !1892)
!1892 = !{!1893, !1894}
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1891, file: !1890, line: 37, baseType: !1670)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1891, file: !1890, line: 38, baseType: !284, size: 128)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "wr_wait", scope: !1884, file: !1885, line: 59, baseType: !1889, size: 128, offset: 320)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1884, file: !1885, line: 60, baseType: !7, size: 32, offset: 448)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1884, file: !1885, line: 61, baseType: !7, size: 32, offset: 480)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "max_usage", scope: !1884, file: !1885, line: 62, baseType: !7, size: 32, offset: 512)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "ring_size", scope: !1884, file: !1885, line: 63, baseType: !7, size: 32, offset: 544)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "nr_accounted", scope: !1884, file: !1885, line: 67, baseType: !7, size: 32, offset: 576)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "readers", scope: !1884, file: !1885, line: 68, baseType: !7, size: 32, offset: 608)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "writers", scope: !1884, file: !1885, line: 69, baseType: !7, size: 32, offset: 640)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !1884, file: !1885, line: 70, baseType: !7, size: 32, offset: 672)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "r_counter", scope: !1884, file: !1885, line: 71, baseType: !7, size: 32, offset: 704)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "w_counter", scope: !1884, file: !1885, line: 72, baseType: !7, size: 32, offset: 736)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "tmp_page", scope: !1884, file: !1885, line: 73, baseType: !1719, size: 64, offset: 768)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "fasync_readers", scope: !1884, file: !1885, line: 74, baseType: !1908, size: 64, offset: 832)
!1908 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1909, size: 64)
!1909 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fasync_struct", file: !1317, line: 1314, size: 320, elements: !1910)
!1910 = !{!1911, !1919, !1920, !1921, !1922, !1923}
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "fa_lock", scope: !1909, file: !1317, line: 1315, baseType: !1912)
!1912 = !DIDerivedType(tag: DW_TAG_typedef, name: "rwlock_t", file: !1913, line: 20, baseType: !1914)
!1913 = !DIFile(filename: "./include/linux/rwlock_types.h", directory: "/home/lizy2001/genbc/linux")
!1914 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1913, line: 11, elements: !1915)
!1915 = !{!1916}
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !1914, file: !1913, line: 12, baseType: !1917)
!1917 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_rwlock_t", file: !1682, line: 33, baseType: !1918)
!1918 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1682, line: 31, elements: !1587)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !1909, file: !1317, line: 1316, baseType: !32, size: 32)
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "fa_fd", scope: !1909, file: !1317, line: 1317, baseType: !32, size: 32, offset: 32)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "fa_next", scope: !1909, file: !1317, line: 1318, baseType: !1908, size: 64, offset: 64)
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "fa_file", scope: !1909, file: !1317, line: 1319, baseType: !1315, size: 64, offset: 128)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "fa_rcu", scope: !1909, file: !1317, line: 1320, baseType: !299, size: 128, align: 64, offset: 192)
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "fasync_writers", scope: !1884, file: !1885, line: 75, baseType: !1908, size: 64, offset: 896)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "bufs", scope: !1884, file: !1885, line: 76, baseType: !1926, size: 64, offset: 960)
!1926 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1927, size: 64)
!1927 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pipe_buffer", file: !1885, line: 26, size: 320, elements: !1928)
!1928 = !{!1929, !1930, !1931, !1932, !1950, !1951}
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !1927, file: !1885, line: 27, baseType: !1719, size: 64)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1927, file: !1885, line: 28, baseType: !7, size: 32, offset: 64)
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1927, file: !1885, line: 28, baseType: !7, size: 32, offset: 96)
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !1927, file: !1885, line: 29, baseType: !1933, size: 64, offset: 128)
!1933 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1934, size: 64)
!1934 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1935)
!1935 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pipe_buf_operations", file: !1885, line: 93, size: 256, elements: !1936)
!1936 = !{!1937, !1941, !1945, !1949}
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "confirm", scope: !1935, file: !1885, line: 101, baseType: !1938, size: 64)
!1938 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1939, size: 64)
!1939 = !DISubroutineType(types: !1940)
!1940 = !{!32, !1883, !1926}
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !1935, file: !1885, line: 107, baseType: !1942, size: 64, offset: 64)
!1942 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1943, size: 64)
!1943 = !DISubroutineType(types: !1944)
!1944 = !{null, !1883, !1926}
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "try_steal", scope: !1935, file: !1885, line: 117, baseType: !1946, size: 64, offset: 128)
!1946 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1947, size: 64)
!1947 = !DISubroutineType(types: !1948)
!1948 = !{!771, !1883, !1926}
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !1935, file: !1885, line: 122, baseType: !1946, size: 64, offset: 192)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1927, file: !1885, line: 30, baseType: !7, size: 32, offset: 192)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !1927, file: !1885, line: 31, baseType: !312, size: 64, offset: 256)
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !1884, file: !1885, line: 77, baseType: !1953, size: 64, offset: 1024)
!1953 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1954, size: 64)
!1954 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "user_struct", file: !1955, line: 13, size: 896, elements: !1956)
!1955 = !DIFile(filename: "./include/linux/sched/user.h", directory: "/home/lizy2001/genbc/linux")
!1956 = !{!1957, !1958, !1959, !1960, !1961, !1962, !1963, !1964, !1965, !1966, !1967}
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !1954, file: !1955, line: 14, baseType: !568, size: 32)
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "processes", scope: !1954, file: !1955, line: 15, baseType: !383, size: 32, offset: 32)
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "sigpending", scope: !1954, file: !1955, line: 16, baseType: !383, size: 32, offset: 64)
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "epoll_watches", scope: !1954, file: !1955, line: 21, baseType: !371, size: 64, offset: 128)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "locked_shm", scope: !1954, file: !1955, line: 27, baseType: !312, size: 64, offset: 192)
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "unix_inflight", scope: !1954, file: !1955, line: 28, baseType: !312, size: 64, offset: 256)
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "pipe_bufs", scope: !1954, file: !1955, line: 29, baseType: !371, size: 64, offset: 320)
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "uidhash_node", scope: !1954, file: !1955, line: 32, baseType: !276, size: 128, offset: 384)
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1954, file: !1955, line: 33, baseType: !1382, size: 32, offset: 512)
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !1954, file: !1955, line: 37, baseType: !371, size: 64, offset: 576)
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "ratelimit", scope: !1954, file: !1955, line: 44, baseType: !1968, size: 256, offset: 640)
!1968 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ratelimit_state", file: !1969, line: 15, size: 256, elements: !1970)
!1969 = !DIFile(filename: "./include/linux/ratelimit_types.h", directory: "/home/lizy2001/genbc/linux")
!1970 = !{!1971, !1972, !1973, !1974, !1975, !1976, !1977}
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1968, file: !1969, line: 16, baseType: !1761)
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "interval", scope: !1968, file: !1969, line: 18, baseType: !32, size: 32)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "burst", scope: !1968, file: !1969, line: 19, baseType: !32, size: 32, offset: 32)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "printed", scope: !1968, file: !1969, line: 20, baseType: !32, size: 32, offset: 64)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "missed", scope: !1968, file: !1969, line: 21, baseType: !32, size: 32, offset: 96)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "begin", scope: !1968, file: !1969, line: 22, baseType: !312, size: 64, offset: 128)
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1968, file: !1969, line: 23, baseType: !312, size: 64, offset: 192)
!1978 = !DIDerivedType(tag: DW_TAG_member, scope: !1849, file: !1850, line: 44, baseType: !1979, size: 64, offset: 256)
!1979 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1849, file: !1850, line: 44, size: 64, elements: !1980)
!1980 = !{!1981, !1982}
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "nr_segs", scope: !1979, file: !1850, line: 45, baseType: !312, size: 64)
!1982 = !DIDerivedType(tag: DW_TAG_member, scope: !1979, file: !1850, line: 46, baseType: !1983, size: 64)
!1983 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1979, file: !1850, line: 46, size: 64, elements: !1984)
!1984 = !{!1985, !1986}
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1983, file: !1850, line: 47, baseType: !7, size: 32)
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "start_head", scope: !1983, file: !1850, line: 48, baseType: !7, size: 32, offset: 32)
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "migratepage", scope: !1769, file: !1317, line: 402, baseType: !1988, size: 64, offset: 832)
!1988 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1989, size: 64)
!1989 = !DISubroutineType(types: !1990)
!1990 = !{!32, !1732, !1719, !1719, !5}
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "isolate_page", scope: !1769, file: !1317, line: 404, baseType: !1992, size: 64, offset: 896)
!1992 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1993, size: 64)
!1993 = !DISubroutineType(types: !1994)
!1994 = !{!771, !1719, !1995}
!1995 = !DIDerivedType(tag: DW_TAG_typedef, name: "isolate_mode_t", file: !1996, line: 305, baseType: !7)
!1996 = !DIFile(filename: "./include/linux/mmzone.h", directory: "/home/lizy2001/genbc/linux")
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "putback_page", scope: !1769, file: !1317, line: 405, baseType: !1821, size: 64, offset: 960)
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "launder_page", scope: !1769, file: !1317, line: 406, baseType: !1784, size: 64, offset: 1024)
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "is_partially_uptodate", scope: !1769, file: !1317, line: 407, baseType: !2000, size: 64, offset: 1088)
!2000 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2001, size: 64)
!2001 = !DISubroutineType(types: !2002)
!2002 = !{!32, !1719, !312, !312}
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "is_dirty_writeback", scope: !1769, file: !1317, line: 409, baseType: !2004, size: 64, offset: 1152)
!2004 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2005, size: 64)
!2005 = !DISubroutineType(types: !2006)
!2006 = !{null, !1719, !2007, !2007}
!2007 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !771, size: 64)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "error_remove_page", scope: !1769, file: !1317, line: 410, baseType: !2009, size: 64, offset: 1216)
!2009 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2010, size: 64)
!2010 = !DISubroutineType(types: !2011)
!2011 = !{!32, !1732, !1719}
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "swap_activate", scope: !1769, file: !1317, line: 413, baseType: !2013, size: 64, offset: 1280)
!2013 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2014, size: 64)
!2014 = !DISubroutineType(types: !2015)
!2015 = !{!32, !2016, !1315, !2018}
!2016 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2017, size: 64)
!2017 = !DICompositeType(tag: DW_TAG_structure_type, name: "swap_info_struct", file: !1317, line: 61, flags: DIFlagFwdDecl)
!2018 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1811, size: 64)
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "swap_deactivate", scope: !1769, file: !1317, line: 415, baseType: !2020, size: 64, offset: 1344)
!2020 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2021, size: 64)
!2021 = !DISubroutineType(types: !2022)
!2022 = !{null, !1315}
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1733, file: !1317, line: 466, baseType: !312, size: 64, offset: 896)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "wb_err", scope: !1733, file: !1317, line: 467, baseType: !2025, size: 32, offset: 960)
!2025 = !DIDerivedType(tag: DW_TAG_typedef, name: "errseq_t", file: !2026, line: 8, baseType: !987)
!2026 = !DIFile(filename: "./include/linux/errseq.h", directory: "/home/lizy2001/genbc/linux")
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "private_lock", scope: !1733, file: !1317, line: 468, baseType: !1670, offset: 992)
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "private_list", scope: !1733, file: !1317, line: 469, baseType: !284, size: 128, offset: 1024)
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !1733, file: !1317, line: 470, baseType: !591, size: 64, offset: 1152)
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1728, file: !1721, line: 87, baseType: !312, size: 64, offset: 192)
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !1728, file: !1721, line: 94, baseType: !312, size: 64, offset: 256)
!2032 = !DIDerivedType(tag: DW_TAG_member, scope: !1725, file: !1721, line: 96, baseType: !2033, size: 64)
!2033 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1725, file: !1721, line: 96, size: 64, elements: !2034)
!2034 = !{!2035}
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "dma_addr", scope: !2033, file: !1721, line: 101, baseType: !2036, size: 64)
!2036 = !DIDerivedType(tag: DW_TAG_typedef, name: "dma_addr_t", file: !277, line: 143, baseType: !331)
!2037 = !DIDerivedType(tag: DW_TAG_member, scope: !1725, file: !1721, line: 103, baseType: !2038, size: 320)
!2038 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1725, file: !1721, line: 103, size: 320, elements: !2039)
!2039 = !{!2040, !2050, !2053, !2054}
!2040 = !DIDerivedType(tag: DW_TAG_member, scope: !2038, file: !1721, line: 104, baseType: !2041, size: 128)
!2041 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2038, file: !1721, line: 104, size: 128, elements: !2042)
!2042 = !{!2043, !2044}
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "slab_list", scope: !2041, file: !1721, line: 105, baseType: !284, size: 128)
!2044 = !DIDerivedType(tag: DW_TAG_member, scope: !2041, file: !1721, line: 106, baseType: !2045, size: 128)
!2045 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2041, file: !1721, line: 106, size: 128, elements: !2046)
!2046 = !{!2047, !2048, !2049}
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2045, file: !1721, line: 107, baseType: !1719, size: 64)
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !2045, file: !1721, line: 109, baseType: !32, size: 32, offset: 64)
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "pobjects", scope: !2045, file: !1721, line: 110, baseType: !32, size: 32, offset: 96)
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "slab_cache", scope: !2038, file: !1721, line: 117, baseType: !2051, size: 64, offset: 128)
!2051 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2052, size: 64)
!2052 = !DICompositeType(tag: DW_TAG_structure_type, name: "kmem_cache", file: !1721, line: 117, flags: DIFlagFwdDecl)
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "freelist", scope: !2038, file: !1721, line: 119, baseType: !591, size: 64, offset: 192)
!2054 = !DIDerivedType(tag: DW_TAG_member, scope: !2038, file: !1721, line: 120, baseType: !2055, size: 64, offset: 256)
!2055 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2038, file: !1721, line: 120, size: 64, elements: !2056)
!2056 = !{!2057, !2058, !2059}
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "s_mem", scope: !2055, file: !1721, line: 121, baseType: !591, size: 64)
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "counters", scope: !2055, file: !1721, line: 122, baseType: !312, size: 64)
!2059 = !DIDerivedType(tag: DW_TAG_member, scope: !2055, file: !1721, line: 123, baseType: !2060, size: 32)
!2060 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2055, file: !1721, line: 123, size: 32, elements: !2061)
!2061 = !{!2062, !2063, !2064}
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "inuse", scope: !2060, file: !1721, line: 124, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !2060, file: !1721, line: 125, baseType: !7, size: 15, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !2060, file: !1721, line: 126, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!2065 = !DIDerivedType(tag: DW_TAG_member, scope: !1725, file: !1721, line: 130, baseType: !2066, size: 192)
!2066 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1725, file: !1721, line: 130, size: 192, elements: !2067)
!2067 = !{!2068, !2069, !2070, !2071, !2072}
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "compound_head", scope: !2066, file: !1721, line: 131, baseType: !312, size: 64)
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "compound_dtor", scope: !2066, file: !1721, line: 134, baseType: !482, size: 8, offset: 64)
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "compound_order", scope: !2066, file: !1721, line: 135, baseType: !482, size: 8, offset: 72)
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "compound_mapcount", scope: !2066, file: !1721, line: 136, baseType: !383, size: 32, offset: 96)
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "compound_nr", scope: !2066, file: !1721, line: 137, baseType: !7, size: 32, offset: 128)
!2073 = !DIDerivedType(tag: DW_TAG_member, scope: !1725, file: !1721, line: 139, baseType: !2074, size: 256)
!2074 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1725, file: !1721, line: 139, size: 256, elements: !2075)
!2075 = !{!2076, !2077, !2078}
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "_compound_pad_1", scope: !2074, file: !1721, line: 140, baseType: !312, size: 64)
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "hpage_pinned_refcount", scope: !2074, file: !1721, line: 141, baseType: !383, size: 32, offset: 64)
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_list", scope: !2074, file: !1721, line: 143, baseType: !284, size: 128, offset: 128)
!2079 = !DIDerivedType(tag: DW_TAG_member, scope: !1725, file: !1721, line: 145, baseType: !2080, size: 256)
!2080 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1725, file: !1721, line: 145, size: 256, elements: !2081)
!2081 = !{!2082, !2083, !2086, !2087, !4246}
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_1", scope: !2080, file: !1721, line: 146, baseType: !312, size: 64)
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "pmd_huge_pte", scope: !2080, file: !1721, line: 147, baseType: !2084, size: 64, offset: 64)
!2084 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgtable_t", file: !2085, line: 509, baseType: !1719)
!2085 = !DIFile(filename: "./arch/x86/include/asm/pgtable_types.h", directory: "/home/lizy2001/genbc/linux")
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_2", scope: !2080, file: !1721, line: 148, baseType: !312, size: 64, offset: 128)
!2087 = !DIDerivedType(tag: DW_TAG_member, scope: !2080, file: !1721, line: 149, baseType: !2088, size: 64, offset: 192)
!2088 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2080, file: !1721, line: 149, size: 64, elements: !2089)
!2089 = !{!2090, !4245}
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "pt_mm", scope: !2088, file: !1721, line: 150, baseType: !2091, size: 64)
!2091 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2092, size: 64)
!2092 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_struct", file: !1721, line: 388, size: 7296, elements: !2093)
!2093 = !{!2094, !4243}
!2094 = !DIDerivedType(tag: DW_TAG_member, scope: !2092, file: !1721, line: 389, baseType: !2095, size: 7296)
!2095 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2092, file: !1721, line: 389, size: 7296, elements: !2096)
!2096 = !{!2097, !2215, !2216, !2217, !2221, !2222, !2223, !2224, !2225, !2232, !2233, !2234, !2235, !2236, !2237, !2238, !2239, !2240, !2241, !2242, !2243, !2244, !2245, !2246, !2247, !2248, !2249, !2250, !2251, !2252, !2253, !2254, !2255, !2256, !2257, !2258, !2259, !2260, !2261, !2262, !2266, !2274, !2277, !2316, !2317, !4227, !4228, !4231, !4232, !4233, !4236, !4237, !4238, !4241, !4242}
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !2095, file: !1721, line: 390, baseType: !2098, size: 64)
!2098 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2099, size: 64)
!2099 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_area_struct", file: !1721, line: 305, size: 1472, elements: !2100)
!2100 = !{!2101, !2102, !2103, !2104, !2105, !2106, !2107, !2108, !2115, !2116, !2121, !2122, !2125, !2209, !2210, !2211, !2212, !2213}
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "vm_start", scope: !2099, file: !1721, line: 308, baseType: !312, size: 64)
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "vm_end", scope: !2099, file: !1721, line: 309, baseType: !312, size: 64, offset: 64)
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "vm_next", scope: !2099, file: !1721, line: 313, baseType: !2098, size: 64, offset: 128)
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "vm_prev", scope: !2099, file: !1721, line: 313, baseType: !2098, size: 64, offset: 192)
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "vm_rb", scope: !2099, file: !1721, line: 315, baseType: !433, size: 192, align: 64, offset: 256)
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_gap", scope: !2099, file: !1721, line: 323, baseType: !312, size: 64, offset: 448)
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "vm_mm", scope: !2099, file: !1721, line: 327, baseType: !2091, size: 64, offset: 512)
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "vm_page_prot", scope: !2099, file: !1721, line: 333, baseType: !2109, size: 64, offset: 576)
!2109 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprot_t", file: !2085, line: 284, baseType: !2110)
!2110 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pgprot", file: !2085, line: 284, size: 64, elements: !2111)
!2111 = !{!2112}
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "pgprot", scope: !2110, file: !2085, line: 284, baseType: !2113, size: 64)
!2113 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprotval_t", file: !2114, line: 19, baseType: !312)
!2114 = !DIFile(filename: "./arch/x86/include/asm/pgtable_64_types.h", directory: "/home/lizy2001/genbc/linux")
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "vm_flags", scope: !2099, file: !1721, line: 334, baseType: !312, size: 64, offset: 640)
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "shared", scope: !2099, file: !1721, line: 343, baseType: !2117, size: 256, offset: 704)
!2117 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2099, file: !1721, line: 340, size: 256, elements: !2118)
!2118 = !{!2119, !2120}
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !2117, file: !1721, line: 341, baseType: !433, size: 192, align: 64)
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_last", scope: !2117, file: !1721, line: 342, baseType: !312, size: 64, offset: 192)
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma_chain", scope: !2099, file: !1721, line: 351, baseType: !284, size: 128, offset: 960)
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma", scope: !2099, file: !1721, line: 353, baseType: !2123, size: 64, offset: 1088)
!2123 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2124, size: 64)
!2124 = !DICompositeType(tag: DW_TAG_structure_type, name: "anon_vma", file: !1721, line: 353, flags: DIFlagFwdDecl)
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !2099, file: !1721, line: 356, baseType: !2126, size: 64, offset: 1152)
!2126 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2127, size: 64)
!2127 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2128)
!2128 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_operations_struct", file: !14, line: 557, size: 832, elements: !2129)
!2129 = !{!2130, !2134, !2135, !2139, !2143, !2183, !2187, !2191, !2195, !2196, !2197, !2201, !2205}
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !2128, file: !14, line: 558, baseType: !2131, size: 64)
!2131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2132, size: 64)
!2132 = !DISubroutineType(types: !2133)
!2133 = !{null, !2098}
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !2128, file: !14, line: 559, baseType: !2131, size: 64, offset: 64)
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "split", scope: !2128, file: !14, line: 560, baseType: !2136, size: 64, offset: 128)
!2136 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2137, size: 64)
!2137 = !DISubroutineType(types: !2138)
!2138 = !{!32, !2098, !312}
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "mremap", scope: !2128, file: !14, line: 561, baseType: !2140, size: 64, offset: 192)
!2140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2141, size: 64)
!2141 = !DISubroutineType(types: !2142)
!2142 = !{!32, !2098}
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "fault", scope: !2128, file: !14, line: 562, baseType: !2144, size: 64, offset: 256)
!2144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2145, size: 64)
!2145 = !DISubroutineType(types: !2146)
!2146 = !{!2147, !2148}
!2147 = !DIDerivedType(tag: DW_TAG_typedef, name: "vm_fault_t", file: !1721, line: 682, baseType: !7)
!2148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2149, size: 64)
!2149 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_fault", file: !14, line: 508, size: 768, elements: !2150)
!2150 = !{!2151, !2152, !2153, !2154, !2155, !2156, !2163, !2170, !2176, !2177, !2178, !2180, !2182}
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "vma", scope: !2149, file: !14, line: 509, baseType: !2098, size: 64)
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2149, file: !14, line: 510, baseType: !7, size: 32, offset: 64)
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !2149, file: !14, line: 511, baseType: !1742, size: 32, offset: 96)
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "pgoff", scope: !2149, file: !14, line: 512, baseType: !312, size: 64, offset: 128)
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !2149, file: !14, line: 513, baseType: !312, size: 64, offset: 192)
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "pmd", scope: !2149, file: !14, line: 514, baseType: !2157, size: 64, offset: 256)
!2157 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2158, size: 64)
!2158 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmd_t", file: !2085, line: 385, baseType: !2159)
!2159 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2085, line: 385, size: 64, elements: !2160)
!2160 = !{!2161}
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "pmd", scope: !2159, file: !2085, line: 385, baseType: !2162, size: 64)
!2162 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmdval_t", file: !2114, line: 15, baseType: !312)
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "pud", scope: !2149, file: !14, line: 516, baseType: !2164, size: 64, offset: 320)
!2164 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2165, size: 64)
!2165 = !DIDerivedType(tag: DW_TAG_typedef, name: "pud_t", file: !2085, line: 359, baseType: !2166)
!2166 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2085, line: 359, size: 64, elements: !2167)
!2167 = !{!2168}
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "pud", scope: !2166, file: !2085, line: 359, baseType: !2169, size: 64)
!2169 = !DIDerivedType(tag: DW_TAG_typedef, name: "pudval_t", file: !2114, line: 16, baseType: !312)
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "orig_pte", scope: !2149, file: !14, line: 519, baseType: !2171, size: 64, offset: 384)
!2171 = !DIDerivedType(tag: DW_TAG_typedef, name: "pte_t", file: !2114, line: 21, baseType: !2172)
!2172 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2114, line: 21, size: 64, elements: !2173)
!2173 = !{!2174}
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "pte", scope: !2172, file: !2114, line: 21, baseType: !2175, size: 64)
!2175 = !DIDerivedType(tag: DW_TAG_typedef, name: "pteval_t", file: !2114, line: 14, baseType: !312)
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "cow_page", scope: !2149, file: !14, line: 521, baseType: !1719, size: 64, offset: 448)
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !2149, file: !14, line: 522, baseType: !1719, size: 64, offset: 512)
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "pte", scope: !2149, file: !14, line: 528, baseType: !2179, size: 64, offset: 576)
!2179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2171, size: 64)
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !2149, file: !14, line: 532, baseType: !2181, size: 64, offset: 640)
!2181 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1670, size: 64)
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_pte", scope: !2149, file: !14, line: 536, baseType: !2084, size: 64, offset: 704)
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "huge_fault", scope: !2128, file: !14, line: 563, baseType: !2184, size: 64, offset: 320)
!2184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2185, size: 64)
!2185 = !DISubroutineType(types: !2186)
!2186 = !{!2147, !2148, !13}
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "map_pages", scope: !2128, file: !14, line: 565, baseType: !2188, size: 64, offset: 384)
!2188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2189, size: 64)
!2189 = !DISubroutineType(types: !2190)
!2190 = !{null, !2148, !312, !312}
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "pagesize", scope: !2128, file: !14, line: 567, baseType: !2192, size: 64, offset: 448)
!2192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2193, size: 64)
!2193 = !DISubroutineType(types: !2194)
!2194 = !{!312, !2098}
!2195 = !DIDerivedType(tag: DW_TAG_member, name: "page_mkwrite", scope: !2128, file: !14, line: 571, baseType: !2144, size: 64, offset: 512)
!2196 = !DIDerivedType(tag: DW_TAG_member, name: "pfn_mkwrite", scope: !2128, file: !14, line: 574, baseType: !2144, size: 64, offset: 576)
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "access", scope: !2128, file: !14, line: 579, baseType: !2198, size: 64, offset: 640)
!2198 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2199, size: 64)
!2199 = !DISubroutineType(types: !2200)
!2200 = !{!32, !2098, !312, !591, !32, !32}
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2128, file: !14, line: 585, baseType: !2202, size: 64, offset: 704)
!2202 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2203, size: 64)
!2203 = !DISubroutineType(types: !2204)
!2204 = !{!292, !2098}
!2205 = !DIDerivedType(tag: DW_TAG_member, name: "find_special_page", scope: !2128, file: !14, line: 615, baseType: !2206, size: 64, offset: 768)
!2206 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2207, size: 64)
!2207 = !DISubroutineType(types: !2208)
!2208 = !{!1719, !2098, !312}
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "vm_pgoff", scope: !2099, file: !1721, line: 359, baseType: !312, size: 64, offset: 1216)
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "vm_file", scope: !2099, file: !1721, line: 361, baseType: !1315, size: 64, offset: 1280)
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "vm_private_data", scope: !2099, file: !1721, line: 362, baseType: !591, size: 64, offset: 1344)
!2212 = !DIDerivedType(tag: DW_TAG_member, name: "swap_readahead_info", scope: !2099, file: !1721, line: 365, baseType: !371, size: 64, offset: 1408)
!2213 = !DIDerivedType(tag: DW_TAG_member, name: "vm_userfaultfd_ctx", scope: !2099, file: !1721, line: 373, baseType: !2214, offset: 1472)
!2214 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_userfaultfd_ctx", file: !1721, line: 296, elements: !1587)
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "mm_rb", scope: !2095, file: !1721, line: 391, baseType: !1750, size: 64, offset: 64)
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache_seqnum", scope: !2095, file: !1721, line: 392, baseType: !331, size: 64, offset: 128)
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !2095, file: !1721, line: 394, baseType: !2218, size: 64, offset: 192)
!2218 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2219, size: 64)
!2219 = !DISubroutineType(types: !2220)
!2220 = !{!312, !1315, !312, !312, !312, !312}
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_base", scope: !2095, file: !1721, line: 398, baseType: !312, size: 64, offset: 256)
!2222 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_legacy_base", scope: !2095, file: !1721, line: 399, baseType: !312, size: 64, offset: 320)
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "task_size", scope: !2095, file: !1721, line: 405, baseType: !312, size: 64, offset: 384)
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "highest_vm_end", scope: !2095, file: !1721, line: 406, baseType: !312, size: 64, offset: 448)
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !2095, file: !1721, line: 407, baseType: !2226, size: 64, offset: 512)
!2226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2227, size: 64)
!2227 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgd_t", file: !2085, line: 286, baseType: !2228)
!2228 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2085, line: 286, size: 64, elements: !2229)
!2229 = !{!2230}
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !2228, file: !2085, line: 286, baseType: !2231, size: 64)
!2231 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgdval_t", file: !2114, line: 18, baseType: !312)
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "membarrier_state", scope: !2095, file: !1721, line: 416, baseType: !383, size: 32, offset: 576)
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "mm_users", scope: !2095, file: !1721, line: 428, baseType: !383, size: 32, offset: 608)
!2234 = !DIDerivedType(tag: DW_TAG_member, name: "mm_count", scope: !2095, file: !1721, line: 437, baseType: !383, size: 32, offset: 640)
!2235 = !DIDerivedType(tag: DW_TAG_member, name: "has_pinned", scope: !2095, file: !1721, line: 447, baseType: !383, size: 32, offset: 672)
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "pgtables_bytes", scope: !2095, file: !1721, line: 450, baseType: !371, size: 64, offset: 704)
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "map_count", scope: !2095, file: !1721, line: 452, baseType: !32, size: 32, offset: 768)
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "page_table_lock", scope: !2095, file: !1721, line: 454, baseType: !1670, offset: 800)
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_lock", scope: !2095, file: !1721, line: 457, baseType: !1755, size: 256, offset: 832)
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "mmlist", scope: !2095, file: !1721, line: 459, baseType: !284, size: 128, offset: 1088)
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_rss", scope: !2095, file: !1721, line: 466, baseType: !312, size: 64, offset: 1216)
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_vm", scope: !2095, file: !1721, line: 467, baseType: !312, size: 64, offset: 1280)
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "total_vm", scope: !2095, file: !1721, line: 469, baseType: !312, size: 64, offset: 1344)
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !2095, file: !1721, line: 470, baseType: !312, size: 64, offset: 1408)
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "pinned_vm", scope: !2095, file: !1721, line: 471, baseType: !373, size: 64, offset: 1472)
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "data_vm", scope: !2095, file: !1721, line: 472, baseType: !312, size: 64, offset: 1536)
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "exec_vm", scope: !2095, file: !1721, line: 473, baseType: !312, size: 64, offset: 1600)
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm", scope: !2095, file: !1721, line: 474, baseType: !312, size: 64, offset: 1664)
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "def_flags", scope: !2095, file: !1721, line: 475, baseType: !312, size: 64, offset: 1728)
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "arg_lock", scope: !2095, file: !1721, line: 477, baseType: !1670, offset: 1792)
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "start_code", scope: !2095, file: !1721, line: 478, baseType: !312, size: 64, offset: 1792)
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "end_code", scope: !2095, file: !1721, line: 478, baseType: !312, size: 64, offset: 1856)
!2253 = !DIDerivedType(tag: DW_TAG_member, name: "start_data", scope: !2095, file: !1721, line: 478, baseType: !312, size: 64, offset: 1920)
!2254 = !DIDerivedType(tag: DW_TAG_member, name: "end_data", scope: !2095, file: !1721, line: 478, baseType: !312, size: 64, offset: 1984)
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "start_brk", scope: !2095, file: !1721, line: 479, baseType: !312, size: 64, offset: 2048)
!2256 = !DIDerivedType(tag: DW_TAG_member, name: "brk", scope: !2095, file: !1721, line: 479, baseType: !312, size: 64, offset: 2112)
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "start_stack", scope: !2095, file: !1721, line: 479, baseType: !312, size: 64, offset: 2176)
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "arg_start", scope: !2095, file: !1721, line: 480, baseType: !312, size: 64, offset: 2240)
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "arg_end", scope: !2095, file: !1721, line: 480, baseType: !312, size: 64, offset: 2304)
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "env_start", scope: !2095, file: !1721, line: 480, baseType: !312, size: 64, offset: 2368)
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "env_end", scope: !2095, file: !1721, line: 480, baseType: !312, size: 64, offset: 2432)
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "saved_auxv", scope: !2095, file: !1721, line: 482, baseType: !2263, size: 2816, offset: 2496)
!2263 = !DICompositeType(tag: DW_TAG_array_type, baseType: !312, size: 2816, elements: !2264)
!2264 = !{!2265}
!2265 = !DISubrange(count: 44)
!2266 = !DIDerivedType(tag: DW_TAG_member, name: "rss_stat", scope: !2095, file: !1721, line: 488, baseType: !2267, size: 256, offset: 5312)
!2267 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_rss_stat", file: !2268, line: 60, size: 256, elements: !2269)
!2268 = !DIFile(filename: "./include/linux/mm_types_task.h", directory: "/home/lizy2001/genbc/linux")
!2269 = !{!2270}
!2270 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2267, file: !2268, line: 61, baseType: !2271, size: 256)
!2271 = !DICompositeType(tag: DW_TAG_array_type, baseType: !371, size: 256, elements: !2272)
!2272 = !{!2273}
!2273 = !DISubrange(count: 4)
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "binfmt", scope: !2095, file: !1721, line: 490, baseType: !2275, size: 64, offset: 5568)
!2275 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2276, size: 64)
!2276 = !DICompositeType(tag: DW_TAG_structure_type, name: "linux_binfmt", file: !1721, line: 490, flags: DIFlagFwdDecl)
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !2095, file: !1721, line: 493, baseType: !2278, size: 896, offset: 5632)
!2278 = !DIDerivedType(tag: DW_TAG_typedef, name: "mm_context_t", file: !2279, line: 53, baseType: !2280)
!2279 = !DIFile(filename: "./arch/x86/include/asm/mmu.h", directory: "/home/lizy2001/genbc/linux")
!2280 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2279, line: 13, size: 896, elements: !2281)
!2281 = !{!2282, !2283, !2284, !2285, !2288, !2289, !2290, !2291, !2311, !2312, !2313}
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_id", scope: !2280, file: !2279, line: 18, baseType: !331, size: 64)
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_gen", scope: !2280, file: !2279, line: 28, baseType: !373, size: 64, offset: 64)
!2284 = !DIDerivedType(tag: DW_TAG_member, name: "ldt_usr_sem", scope: !2280, file: !2279, line: 31, baseType: !1755, size: 256, offset: 128)
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "ldt", scope: !2280, file: !2279, line: 32, baseType: !2286, size: 64, offset: 384)
!2286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2287, size: 64)
!2287 = !DICompositeType(tag: DW_TAG_structure_type, name: "ldt_struct", file: !2279, line: 32, flags: DIFlagFwdDecl)
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "ia32_compat", scope: !2280, file: !2279, line: 37, baseType: !476, size: 16, offset: 448)
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2280, file: !2279, line: 40, baseType: !1665, size: 192, offset: 512)
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "vdso", scope: !2280, file: !2279, line: 41, baseType: !591, size: 64, offset: 704)
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "vdso_image", scope: !2280, file: !2279, line: 42, baseType: !2292, size: 64, offset: 768)
!2292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2293, size: 64)
!2293 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2294)
!2294 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vdso_image", file: !2295, line: 13, size: 896, elements: !2296)
!2295 = !DIFile(filename: "./arch/x86/include/asm/vdso.h", directory: "/home/lizy2001/genbc/linux")
!2296 = !{!2297, !2298, !2299, !2300, !2301, !2302, !2303, !2304, !2305, !2306, !2307, !2308, !2309, !2310}
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2294, file: !2295, line: 14, baseType: !591, size: 64)
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2294, file: !2295, line: 15, baseType: !312, size: 64, offset: 64)
!2299 = !DIDerivedType(tag: DW_TAG_member, name: "alt", scope: !2294, file: !2295, line: 17, baseType: !312, size: 64, offset: 128)
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "alt_len", scope: !2294, file: !2295, line: 17, baseType: !312, size: 64, offset: 192)
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_start", scope: !2294, file: !2295, line: 19, baseType: !998, size: 64, offset: 256)
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_page", scope: !2294, file: !2295, line: 21, baseType: !998, size: 64, offset: 320)
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "sym_pvclock_page", scope: !2294, file: !2295, line: 22, baseType: !998, size: 64, offset: 384)
!2304 = !DIDerivedType(tag: DW_TAG_member, name: "sym_hvclock_page", scope: !2294, file: !2295, line: 23, baseType: !998, size: 64, offset: 448)
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "sym_timens_page", scope: !2294, file: !2295, line: 24, baseType: !998, size: 64, offset: 512)
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "sym_VDSO32_NOTE_MASK", scope: !2294, file: !2295, line: 25, baseType: !998, size: 64, offset: 576)
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_sigreturn", scope: !2294, file: !2295, line: 26, baseType: !998, size: 64, offset: 640)
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_rt_sigreturn", scope: !2294, file: !2295, line: 27, baseType: !998, size: 64, offset: 704)
!2309 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_vsyscall", scope: !2294, file: !2295, line: 28, baseType: !998, size: 64, offset: 768)
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "sym_int80_landing_pad", scope: !2294, file: !2295, line: 29, baseType: !998, size: 64, offset: 832)
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "perf_rdpmc_allowed", scope: !2280, file: !2279, line: 44, baseType: !383, size: 32, offset: 832)
!2312 = !DIDerivedType(tag: DW_TAG_member, name: "pkey_allocation_map", scope: !2280, file: !2279, line: 50, baseType: !581, size: 16, offset: 864)
!2313 = !DIDerivedType(tag: DW_TAG_member, name: "execute_only_pkey", scope: !2280, file: !2279, line: 51, baseType: !2314, size: 16, offset: 880)
!2314 = !DIDerivedType(tag: DW_TAG_typedef, name: "s16", file: !332, line: 18, baseType: !2315)
!2315 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s16", file: !334, line: 23, baseType: !625)
!2316 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2095, file: !1721, line: 495, baseType: !312, size: 64, offset: 6528)
!2317 = !DIDerivedType(tag: DW_TAG_member, name: "core_state", scope: !2095, file: !1721, line: 497, baseType: !2318, size: 64, offset: 6592)
!2318 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2319, size: 64)
!2319 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_state", file: !1721, line: 381, size: 384, elements: !2320)
!2320 = !{!2321, !2322, !4226}
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !2319, file: !1721, line: 382, baseType: !383, size: 32)
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "dumper", scope: !2319, file: !1721, line: 383, baseType: !2323, size: 128, offset: 64)
!2323 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_thread", file: !1721, line: 376, size: 128, elements: !2324)
!2324 = !{!2325, !4224}
!2325 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !2323, file: !1721, line: 377, baseType: !2326, size: 64)
!2326 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2327, size: 64)
!2327 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_struct", file: !2328, line: 640, size: 48640, elements: !2329)
!2328 = !DIFile(filename: "./include/linux/sched.h", directory: "/home/lizy2001/genbc/linux")
!2329 = !{!2330, !2336, !2338, !2339, !2340, !2341, !2342, !2343, !2344, !2345, !2346, !2347, !2351, !2369, !2380, !2461, !2462, !2463, !2474, !2475, !2477, !2478, !2479, !2480, !2486, !2487, !2488, !2489, !2490, !2491, !2492, !2493, !2494, !2495, !2496, !2497, !2498, !2499, !2500, !2501, !2558, !2561, !2562, !2563, !2564, !2565, !2566, !2567, !2568, !2569, !2570, !2591, !2593, !2594, !2595, !2607, !2608, !2609, !2610, !2611, !2612, !2618, !2619, !2620, !2621, !2622, !2623, !2624, !2636, !2641, !2949, !2950, !2951, !2952, !2953, !2956, !2959, !2962, !2965, !3687, !3783, !3814, !3815, !3816, !3817, !3818, !3819, !3820, !3821, !3822, !3831, !3832, !3833, !3834, !3835, !3840, !3841, !3842, !3845, !3846, !3849, !3852, !3855, !3858, !3890, !3893, !3894, !3973, !3974, !3977, !3978, !3981, !3982, !3983, !3987, !3988, !3989, !4002, !4003, !4004, !4014, !4019, !4020, !4026, !4027, !4028, !4029, !4030, !4031, !4032, !4033, !4047, !4048, !4049, !4050, !4051, !4052, !4053, !4054, !4055}
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "thread_info", scope: !2327, file: !2328, line: 646, baseType: !2331, size: 128)
!2331 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_info", file: !2332, line: 56, size: 128, elements: !2333)
!2332 = !DIFile(filename: "./arch/x86/include/asm/thread_info.h", directory: "/home/lizy2001/genbc/linux")
!2333 = !{!2334, !2335}
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2331, file: !2332, line: 57, baseType: !312, size: 64)
!2335 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !2331, file: !2332, line: 58, baseType: !987, size: 32, offset: 64)
!2336 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2327, file: !2328, line: 649, baseType: !2337, size: 64, offset: 128)
!2337 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !998)
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !2327, file: !2328, line: 657, baseType: !591, size: 64, offset: 192)
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !2327, file: !2328, line: 658, baseType: !568, size: 32, offset: 256)
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2327, file: !2328, line: 660, baseType: !7, size: 32, offset: 288)
!2341 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace", scope: !2327, file: !2328, line: 661, baseType: !7, size: 32, offset: 320)
!2342 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !2327, file: !2328, line: 684, baseType: !32, size: 32, offset: 352)
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2327, file: !2328, line: 686, baseType: !32, size: 32, offset: 384)
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "static_prio", scope: !2327, file: !2328, line: 687, baseType: !32, size: 32, offset: 416)
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "normal_prio", scope: !2327, file: !2328, line: 688, baseType: !32, size: 32, offset: 448)
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "rt_priority", scope: !2327, file: !2328, line: 689, baseType: !7, size: 32, offset: 480)
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "sched_class", scope: !2327, file: !2328, line: 691, baseType: !2348, size: 64, offset: 512)
!2348 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2349, size: 64)
!2349 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2350)
!2350 = !DICompositeType(tag: DW_TAG_structure_type, name: "sched_class", file: !2328, line: 691, flags: DIFlagFwdDecl)
!2351 = !DIDerivedType(tag: DW_TAG_member, name: "se", scope: !2327, file: !2328, line: 692, baseType: !2352, size: 832, offset: 576)
!2352 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_entity", file: !2328, line: 451, size: 832, elements: !2353)
!2353 = !{!2354, !2359, !2360, !2361, !2362, !2363, !2364, !2365, !2366, !2367}
!2354 = !DIDerivedType(tag: DW_TAG_member, name: "load", scope: !2352, file: !2328, line: 453, baseType: !2355, size: 128)
!2355 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "load_weight", file: !2328, line: 325, size: 128, elements: !2356)
!2356 = !{!2357, !2358}
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !2355, file: !2328, line: 326, baseType: !312, size: 64)
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "inv_weight", scope: !2355, file: !2328, line: 327, baseType: !987, size: 32, offset: 64)
!2359 = !DIDerivedType(tag: DW_TAG_member, name: "run_node", scope: !2352, file: !2328, line: 454, baseType: !433, size: 192, align: 64, offset: 128)
!2360 = !DIDerivedType(tag: DW_TAG_member, name: "group_node", scope: !2352, file: !2328, line: 455, baseType: !284, size: 128, offset: 320)
!2361 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !2352, file: !2328, line: 456, baseType: !7, size: 32, offset: 448)
!2362 = !DIDerivedType(tag: DW_TAG_member, name: "exec_start", scope: !2352, file: !2328, line: 458, baseType: !331, size: 64, offset: 512)
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !2352, file: !2328, line: 459, baseType: !331, size: 64, offset: 576)
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "vruntime", scope: !2352, file: !2328, line: 460, baseType: !331, size: 64, offset: 640)
!2365 = !DIDerivedType(tag: DW_TAG_member, name: "prev_sum_exec_runtime", scope: !2352, file: !2328, line: 461, baseType: !331, size: 64, offset: 704)
!2366 = !DIDerivedType(tag: DW_TAG_member, name: "nr_migrations", scope: !2352, file: !2328, line: 463, baseType: !331, size: 64, offset: 768)
!2367 = !DIDerivedType(tag: DW_TAG_member, name: "statistics", scope: !2352, file: !2328, line: 465, baseType: !2368, offset: 832)
!2368 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_statistics", file: !2328, line: 415, elements: !1587)
!2369 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !2327, file: !2328, line: 693, baseType: !2370, size: 384, offset: 1408)
!2370 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_rt_entity", file: !2328, line: 489, size: 384, elements: !2371)
!2371 = !{!2372, !2373, !2374, !2375, !2376, !2377, !2378}
!2372 = !DIDerivedType(tag: DW_TAG_member, name: "run_list", scope: !2370, file: !2328, line: 490, baseType: !284, size: 128)
!2373 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2370, file: !2328, line: 491, baseType: !312, size: 64, offset: 128)
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "watchdog_stamp", scope: !2370, file: !2328, line: 492, baseType: !312, size: 64, offset: 192)
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "time_slice", scope: !2370, file: !2328, line: 493, baseType: !7, size: 32, offset: 256)
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !2370, file: !2328, line: 494, baseType: !476, size: 16, offset: 288)
!2377 = !DIDerivedType(tag: DW_TAG_member, name: "on_list", scope: !2370, file: !2328, line: 495, baseType: !476, size: 16, offset: 304)
!2378 = !DIDerivedType(tag: DW_TAG_member, name: "back", scope: !2370, file: !2328, line: 497, baseType: !2379, size: 64, offset: 320)
!2379 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2370, size: 64)
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "dl", scope: !2327, file: !2328, line: 697, baseType: !2381, size: 1792, offset: 1792)
!2381 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_dl_entity", file: !2328, line: 507, size: 1792, elements: !2382)
!2382 = !{!2383, !2384, !2385, !2386, !2387, !2388, !2389, !2390, !2391, !2392, !2393, !2394, !2395, !2396, !2458, !2459}
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !2381, file: !2328, line: 508, baseType: !433, size: 192, align: 64)
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "dl_runtime", scope: !2381, file: !2328, line: 515, baseType: !331, size: 64, offset: 192)
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "dl_deadline", scope: !2381, file: !2328, line: 516, baseType: !331, size: 64, offset: 256)
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "dl_period", scope: !2381, file: !2328, line: 517, baseType: !331, size: 64, offset: 320)
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "dl_bw", scope: !2381, file: !2328, line: 518, baseType: !331, size: 64, offset: 384)
!2388 = !DIDerivedType(tag: DW_TAG_member, name: "dl_density", scope: !2381, file: !2328, line: 519, baseType: !331, size: 64, offset: 448)
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "runtime", scope: !2381, file: !2328, line: 526, baseType: !377, size: 64, offset: 512)
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "deadline", scope: !2381, file: !2328, line: 527, baseType: !331, size: 64, offset: 576)
!2391 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2381, file: !2328, line: 528, baseType: !7, size: 32, offset: 640)
!2392 = !DIDerivedType(tag: DW_TAG_member, name: "dl_throttled", scope: !2381, file: !2328, line: 554, baseType: !7, size: 1, offset: 672, flags: DIFlagBitField, extraData: i64 672)
!2393 = !DIDerivedType(tag: DW_TAG_member, name: "dl_yielded", scope: !2381, file: !2328, line: 555, baseType: !7, size: 1, offset: 673, flags: DIFlagBitField, extraData: i64 672)
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "dl_non_contending", scope: !2381, file: !2328, line: 556, baseType: !7, size: 1, offset: 674, flags: DIFlagBitField, extraData: i64 672)
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "dl_overrun", scope: !2381, file: !2328, line: 557, baseType: !7, size: 1, offset: 675, flags: DIFlagBitField, extraData: i64 672)
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "dl_timer", scope: !2381, file: !2328, line: 563, baseType: !2397, size: 512, offset: 704)
!2397 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer", file: !20, line: 118, size: 512, elements: !2398)
!2398 = !{!2399, !2405, !2406, !2411, !2454, !2455, !2456, !2457}
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2397, file: !20, line: 119, baseType: !2400, size: 256)
!2400 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_node", file: !2401, line: 9, size: 256, elements: !2402)
!2401 = !DIFile(filename: "./include/linux/timerqueue.h", directory: "/home/lizy2001/genbc/linux")
!2402 = !{!2403, !2404}
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2400, file: !2401, line: 10, baseType: !433, size: 192, align: 64)
!2404 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !2400, file: !2401, line: 11, baseType: !453, size: 64, offset: 192)
!2405 = !DIDerivedType(tag: DW_TAG_member, name: "_softexpires", scope: !2397, file: !20, line: 120, baseType: !453, size: 64, offset: 256)
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !2397, file: !20, line: 121, baseType: !2407, size: 64, offset: 320)
!2407 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2408, size: 64)
!2408 = !DISubroutineType(types: !2409)
!2409 = !{!19, !2410}
!2410 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2397, size: 64)
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2397, file: !20, line: 122, baseType: !2412, size: 64, offset: 384)
!2412 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2413, size: 64)
!2413 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_clock_base", file: !20, line: 159, size: 512, align: 512, elements: !2414)
!2414 = !{!2415, !2435, !2436, !2439, !2444, !2445, !2449, !2453}
!2415 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_base", scope: !2413, file: !20, line: 160, baseType: !2416, size: 64)
!2416 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2417, size: 64)
!2417 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_cpu_base", file: !20, line: 214, size: 4608, align: 512, elements: !2418)
!2418 = !{!2419, !2420, !2421, !2422, !2423, !2424, !2425, !2426, !2427, !2428, !2429, !2430, !2431}
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2417, file: !20, line: 215, baseType: !1761)
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "cpu", scope: !2417, file: !20, line: 216, baseType: !7, size: 32)
!2421 = !DIDerivedType(tag: DW_TAG_member, name: "active_bases", scope: !2417, file: !20, line: 217, baseType: !7, size: 32, offset: 32)
!2422 = !DIDerivedType(tag: DW_TAG_member, name: "clock_was_set_seq", scope: !2417, file: !20, line: 218, baseType: !7, size: 32, offset: 64)
!2423 = !DIDerivedType(tag: DW_TAG_member, name: "hres_active", scope: !2417, file: !20, line: 219, baseType: !7, size: 1, offset: 96, flags: DIFlagBitField, extraData: i64 96)
!2424 = !DIDerivedType(tag: DW_TAG_member, name: "in_hrtirq", scope: !2417, file: !20, line: 220, baseType: !7, size: 1, offset: 97, flags: DIFlagBitField, extraData: i64 96)
!2425 = !DIDerivedType(tag: DW_TAG_member, name: "hang_detected", scope: !2417, file: !20, line: 221, baseType: !7, size: 1, offset: 98, flags: DIFlagBitField, extraData: i64 96)
!2426 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_activated", scope: !2417, file: !20, line: 222, baseType: !7, size: 1, offset: 99, flags: DIFlagBitField, extraData: i64 96)
!2427 = !DIDerivedType(tag: DW_TAG_member, name: "expires_next", scope: !2417, file: !20, line: 233, baseType: !453, size: 64, offset: 128)
!2428 = !DIDerivedType(tag: DW_TAG_member, name: "next_timer", scope: !2417, file: !20, line: 234, baseType: !2410, size: 64, offset: 192)
!2429 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_expires_next", scope: !2417, file: !20, line: 235, baseType: !453, size: 64, offset: 256)
!2430 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_next_timer", scope: !2417, file: !20, line: 236, baseType: !2410, size: 64, offset: 320)
!2431 = !DIDerivedType(tag: DW_TAG_member, name: "clock_base", scope: !2417, file: !20, line: 237, baseType: !2432, size: 4096, offset: 512)
!2432 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2413, size: 4096, elements: !2433)
!2433 = !{!2434}
!2434 = !DISubrange(count: 8)
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !2413, file: !20, line: 161, baseType: !7, size: 32, offset: 64)
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !2413, file: !20, line: 162, baseType: !2437, size: 32, offset: 96)
!2437 = !DIDerivedType(tag: DW_TAG_typedef, name: "clockid_t", file: !277, line: 27, baseType: !2438)
!2438 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clockid_t", file: !1041, line: 96, baseType: !32)
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !2413, file: !20, line: 163, baseType: !2440, size: 32, offset: 128)
!2440 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_raw_spinlock_t", file: !1344, line: 276, baseType: !2441)
!2441 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_raw_spinlock", file: !1344, line: 276, size: 32, elements: !2442)
!2442 = !{!2443}
!2443 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !2441, file: !1344, line: 276, baseType: !1348, size: 32)
!2444 = !DIDerivedType(tag: DW_TAG_member, name: "running", scope: !2413, file: !20, line: 164, baseType: !2410, size: 64, offset: 192)
!2445 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !2413, file: !20, line: 165, baseType: !2446, size: 128, offset: 256)
!2446 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_head", file: !2401, line: 14, size: 128, elements: !2447)
!2447 = !{!2448}
!2448 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !2446, file: !2401, line: 15, baseType: !1747, size: 128)
!2449 = !DIDerivedType(tag: DW_TAG_member, name: "get_time", scope: !2413, file: !20, line: 166, baseType: !2450, size: 64, offset: 384)
!2450 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2451, size: 64)
!2451 = !DISubroutineType(types: !2452)
!2452 = !{!453}
!2453 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !2413, file: !20, line: 167, baseType: !453, size: 64, offset: 448)
!2454 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2397, file: !20, line: 123, baseType: !794, size: 8, offset: 448)
!2455 = !DIDerivedType(tag: DW_TAG_member, name: "is_rel", scope: !2397, file: !20, line: 124, baseType: !794, size: 8, offset: 456)
!2456 = !DIDerivedType(tag: DW_TAG_member, name: "is_soft", scope: !2397, file: !20, line: 125, baseType: !794, size: 8, offset: 464)
!2457 = !DIDerivedType(tag: DW_TAG_member, name: "is_hard", scope: !2397, file: !20, line: 126, baseType: !794, size: 8, offset: 472)
!2458 = !DIDerivedType(tag: DW_TAG_member, name: "inactive_timer", scope: !2381, file: !2328, line: 572, baseType: !2397, size: 512, offset: 1216)
!2459 = !DIDerivedType(tag: DW_TAG_member, name: "pi_se", scope: !2381, file: !2328, line: 580, baseType: !2460, size: 64, offset: 1728)
!2460 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2381, size: 64)
!2461 = !DIDerivedType(tag: DW_TAG_member, name: "policy", scope: !2327, file: !2328, line: 721, baseType: !7, size: 32, offset: 3584)
!2462 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cpus_allowed", scope: !2327, file: !2328, line: 722, baseType: !32, size: 32, offset: 3616)
!2463 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_ptr", scope: !2327, file: !2328, line: 723, baseType: !2464, size: 64, offset: 3648)
!2464 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2465, size: 64)
!2465 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2466)
!2466 = !DIDerivedType(tag: DW_TAG_typedef, name: "cpumask_t", file: !2467, line: 17, baseType: !2468)
!2467 = !DIFile(filename: "./include/linux/cpumask.h", directory: "/home/lizy2001/genbc/linux")
!2468 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpumask", file: !2467, line: 17, size: 64, elements: !2469)
!2469 = !{!2470}
!2470 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !2468, file: !2467, line: 17, baseType: !2471, size: 64)
!2471 = !DICompositeType(tag: DW_TAG_array_type, baseType: !312, size: 64, elements: !2472)
!2472 = !{!2473}
!2473 = !DISubrange(count: 1)
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_mask", scope: !2327, file: !2328, line: 724, baseType: !2466, size: 64, offset: 3712)
!2475 = !DIDerivedType(tag: DW_TAG_member, name: "sched_info", scope: !2327, file: !2328, line: 749, baseType: !2476, offset: 3776)
!2476 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_info", file: !2328, line: 290, elements: !1587)
!2477 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !2327, file: !2328, line: 751, baseType: !284, size: 128, offset: 3776)
!2478 = !DIDerivedType(tag: DW_TAG_member, name: "mm", scope: !2327, file: !2328, line: 757, baseType: !2091, size: 64, offset: 3904)
!2479 = !DIDerivedType(tag: DW_TAG_member, name: "active_mm", scope: !2327, file: !2328, line: 758, baseType: !2091, size: 64, offset: 3968)
!2480 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache", scope: !2327, file: !2328, line: 761, baseType: !2481, size: 320, offset: 4032)
!2481 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vmacache", file: !2268, line: 34, size: 320, elements: !2482)
!2482 = !{!2483, !2484}
!2483 = !DIDerivedType(tag: DW_TAG_member, name: "seqnum", scope: !2481, file: !2268, line: 35, baseType: !331, size: 64)
!2484 = !DIDerivedType(tag: DW_TAG_member, name: "vmas", scope: !2481, file: !2268, line: 36, baseType: !2485, size: 256, offset: 64)
!2485 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2098, size: 256, elements: !2272)
!2486 = !DIDerivedType(tag: DW_TAG_member, name: "exit_state", scope: !2327, file: !2328, line: 766, baseType: !32, size: 32, offset: 4352)
!2487 = !DIDerivedType(tag: DW_TAG_member, name: "exit_code", scope: !2327, file: !2328, line: 767, baseType: !32, size: 32, offset: 4384)
!2488 = !DIDerivedType(tag: DW_TAG_member, name: "exit_signal", scope: !2327, file: !2328, line: 768, baseType: !32, size: 32, offset: 4416)
!2489 = !DIDerivedType(tag: DW_TAG_member, name: "pdeath_signal", scope: !2327, file: !2328, line: 770, baseType: !32, size: 32, offset: 4448)
!2490 = !DIDerivedType(tag: DW_TAG_member, name: "jobctl", scope: !2327, file: !2328, line: 772, baseType: !312, size: 64, offset: 4480)
!2491 = !DIDerivedType(tag: DW_TAG_member, name: "personality", scope: !2327, file: !2328, line: 775, baseType: !7, size: 32, offset: 4544)
!2492 = !DIDerivedType(tag: DW_TAG_member, name: "sched_reset_on_fork", scope: !2327, file: !2328, line: 778, baseType: !7, size: 1, offset: 4576, flags: DIFlagBitField, extraData: i64 4576)
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "sched_contributes_to_load", scope: !2327, file: !2328, line: 779, baseType: !7, size: 1, offset: 4577, flags: DIFlagBitField, extraData: i64 4576)
!2494 = !DIDerivedType(tag: DW_TAG_member, name: "sched_migrated", scope: !2327, file: !2328, line: 780, baseType: !7, size: 1, offset: 4578, flags: DIFlagBitField, extraData: i64 4576)
!2495 = !DIDerivedType(tag: DW_TAG_member, name: "sched_remote_wakeup", scope: !2327, file: !2328, line: 803, baseType: !7, size: 1, offset: 4608, flags: DIFlagBitField, extraData: i64 4608)
!2496 = !DIDerivedType(tag: DW_TAG_member, name: "in_execve", scope: !2327, file: !2328, line: 806, baseType: !7, size: 1, offset: 4609, flags: DIFlagBitField, extraData: i64 4608)
!2497 = !DIDerivedType(tag: DW_TAG_member, name: "in_iowait", scope: !2327, file: !2328, line: 807, baseType: !7, size: 1, offset: 4610, flags: DIFlagBitField, extraData: i64 4608)
!2498 = !DIDerivedType(tag: DW_TAG_member, name: "restore_sigmask", scope: !2327, file: !2328, line: 809, baseType: !7, size: 1, offset: 4611, flags: DIFlagBitField, extraData: i64 4608)
!2499 = !DIDerivedType(tag: DW_TAG_member, name: "brk_randomized", scope: !2327, file: !2328, line: 815, baseType: !7, size: 1, offset: 4612, flags: DIFlagBitField, extraData: i64 4608)
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_flags", scope: !2327, file: !2328, line: 831, baseType: !312, size: 64, offset: 4672)
!2501 = !DIDerivedType(tag: DW_TAG_member, name: "restart_block", scope: !2327, file: !2328, line: 833, baseType: !2502, size: 384, offset: 4736)
!2502 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "restart_block", file: !25, line: 25, size: 384, elements: !2503)
!2503 = !{!2504, !2509}
!2504 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2502, file: !25, line: 26, baseType: !2505, size: 64)
!2505 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2506, size: 64)
!2506 = !DISubroutineType(types: !2507)
!2507 = !{!998, !2508}
!2508 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2502, size: 64)
!2509 = !DIDerivedType(tag: DW_TAG_member, scope: !2502, file: !25, line: 27, baseType: !2510, size: 320, offset: 64)
!2510 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2502, file: !25, line: 27, size: 320, elements: !2511)
!2511 = !{!2512, !2522, !2548}
!2512 = !DIDerivedType(tag: DW_TAG_member, name: "futex", scope: !2510, file: !25, line: 36, baseType: !2513, size: 320)
!2513 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2510, file: !25, line: 29, size: 320, elements: !2514)
!2514 = !{!2515, !2517, !2518, !2519, !2520, !2521}
!2515 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr", scope: !2513, file: !25, line: 30, baseType: !2516, size: 64)
!2516 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !987, size: 64)
!2517 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !2513, file: !25, line: 31, baseType: !987, size: 32, offset: 64)
!2518 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2513, file: !25, line: 32, baseType: !987, size: 32, offset: 96)
!2519 = !DIDerivedType(tag: DW_TAG_member, name: "bitset", scope: !2513, file: !25, line: 33, baseType: !987, size: 32, offset: 128)
!2520 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !2513, file: !25, line: 34, baseType: !331, size: 64, offset: 192)
!2521 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr2", scope: !2513, file: !25, line: 35, baseType: !2516, size: 64, offset: 256)
!2522 = !DIDerivedType(tag: DW_TAG_member, name: "nanosleep", scope: !2510, file: !25, line: 46, baseType: !2523, size: 192)
!2523 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2510, file: !25, line: 38, size: 192, elements: !2524)
!2524 = !{!2525, !2526, !2527, !2547}
!2525 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !2523, file: !25, line: 39, baseType: !2437, size: 32)
!2526 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2523, file: !25, line: 40, baseType: !24, size: 32, offset: 32)
!2527 = !DIDerivedType(tag: DW_TAG_member, scope: !2523, file: !25, line: 41, baseType: !2528, size: 64, offset: 64)
!2528 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2523, file: !25, line: 41, size: 64, elements: !2529)
!2529 = !{!2530, !2538}
!2530 = !DIDerivedType(tag: DW_TAG_member, name: "rmtp", scope: !2528, file: !25, line: 42, baseType: !2531, size: 64)
!2531 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2532, size: 64)
!2532 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__kernel_timespec", file: !2533, line: 7, size: 128, elements: !2534)
!2533 = !DIFile(filename: "./include/uapi/linux/time_types.h", directory: "/home/lizy2001/genbc/linux")
!2534 = !{!2535, !2537}
!2535 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2532, file: !2533, line: 8, baseType: !2536, size: 64)
!2536 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_time64_t", file: !1041, line: 93, baseType: !379)
!2537 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !2532, file: !2533, line: 9, baseType: !379, size: 64, offset: 64)
!2538 = !DIDerivedType(tag: DW_TAG_member, name: "compat_rmtp", scope: !2528, file: !25, line: 43, baseType: !2539, size: 64)
!2539 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2540, size: 64)
!2540 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "old_timespec32", file: !2541, line: 7, size: 64, elements: !2542)
!2541 = !DIFile(filename: "./include/vdso/time32.h", directory: "/home/lizy2001/genbc/linux")
!2542 = !{!2543, !2546}
!2543 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2540, file: !2541, line: 8, baseType: !2544, size: 32)
!2544 = !DIDerivedType(tag: DW_TAG_typedef, name: "old_time32_t", file: !2541, line: 5, baseType: !2545)
!2545 = !DIDerivedType(tag: DW_TAG_typedef, name: "s32", file: !332, line: 20, baseType: !942)
!2546 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !2540, file: !2541, line: 9, baseType: !2545, size: 32, offset: 32)
!2547 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !2523, file: !25, line: 45, baseType: !331, size: 64, offset: 128)
!2548 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !2510, file: !25, line: 54, baseType: !2549, size: 256)
!2549 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2510, file: !25, line: 48, size: 256, elements: !2550)
!2550 = !{!2551, !2554, !2555, !2556, !2557}
!2551 = !DIDerivedType(tag: DW_TAG_member, name: "ufds", scope: !2549, file: !25, line: 49, baseType: !2552, size: 64)
!2552 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2553, size: 64)
!2553 = !DICompositeType(tag: DW_TAG_structure_type, name: "pollfd", file: !25, line: 14, flags: DIFlagFwdDecl)
!2554 = !DIDerivedType(tag: DW_TAG_member, name: "nfds", scope: !2549, file: !25, line: 50, baseType: !32, size: 32, offset: 64)
!2555 = !DIDerivedType(tag: DW_TAG_member, name: "has_timeout", scope: !2549, file: !25, line: 51, baseType: !32, size: 32, offset: 96)
!2556 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2549, file: !25, line: 52, baseType: !312, size: 64, offset: 128)
!2557 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !2549, file: !25, line: 53, baseType: !312, size: 64, offset: 192)
!2558 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !2327, file: !2328, line: 835, baseType: !2559, size: 32, offset: 5120)
!2559 = !DIDerivedType(tag: DW_TAG_typedef, name: "pid_t", file: !277, line: 22, baseType: !2560)
!2560 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_pid_t", file: !1041, line: 28, baseType: !32)
!2561 = !DIDerivedType(tag: DW_TAG_member, name: "tgid", scope: !2327, file: !2328, line: 836, baseType: !2559, size: 32, offset: 5152)
!2562 = !DIDerivedType(tag: DW_TAG_member, name: "stack_canary", scope: !2327, file: !2328, line: 840, baseType: !312, size: 64, offset: 5184)
!2563 = !DIDerivedType(tag: DW_TAG_member, name: "real_parent", scope: !2327, file: !2328, line: 849, baseType: !2326, size: 64, offset: 5248)
!2564 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !2327, file: !2328, line: 852, baseType: !2326, size: 64, offset: 5312)
!2565 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2327, file: !2328, line: 857, baseType: !284, size: 128, offset: 5376)
!2566 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !2327, file: !2328, line: 858, baseType: !284, size: 128, offset: 5504)
!2567 = !DIDerivedType(tag: DW_TAG_member, name: "group_leader", scope: !2327, file: !2328, line: 859, baseType: !2326, size: 64, offset: 5632)
!2568 = !DIDerivedType(tag: DW_TAG_member, name: "ptraced", scope: !2327, file: !2328, line: 867, baseType: !284, size: 128, offset: 5696)
!2569 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_entry", scope: !2327, file: !2328, line: 868, baseType: !284, size: 128, offset: 5824)
!2570 = !DIDerivedType(tag: DW_TAG_member, name: "thread_pid", scope: !2327, file: !2328, line: 871, baseType: !2571, size: 64, offset: 5952)
!2571 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2572, size: 64)
!2572 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pid", file: !2573, line: 59, size: 768, elements: !2574)
!2573 = !DIFile(filename: "./include/linux/pid.h", directory: "/home/lizy2001/genbc/linux")
!2574 = !{!2575, !2576, !2577, !2578, !2580, !2581, !2582, !2583}
!2575 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2572, file: !2573, line: 61, baseType: !568, size: 32)
!2576 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !2572, file: !2573, line: 62, baseType: !7, size: 32, offset: 32)
!2577 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2572, file: !2573, line: 63, baseType: !1670, offset: 64)
!2578 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !2572, file: !2573, line: 65, baseType: !2579, size: 256, offset: 64)
!2579 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1581, size: 256, elements: !2272)
!2580 = !DIDerivedType(tag: DW_TAG_member, name: "inodes", scope: !2572, file: !2573, line: 66, baseType: !1581, size: 64, offset: 320)
!2581 = !DIDerivedType(tag: DW_TAG_member, name: "wait_pidfd", scope: !2572, file: !2573, line: 68, baseType: !1889, size: 128, offset: 384)
!2582 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2572, file: !2573, line: 69, baseType: !299, size: 128, align: 64, offset: 512)
!2583 = !DIDerivedType(tag: DW_TAG_member, name: "numbers", scope: !2572, file: !2573, line: 70, baseType: !2584, size: 128, offset: 640)
!2584 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2585, size: 128, elements: !2472)
!2585 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "upid", file: !2573, line: 54, size: 128, elements: !2586)
!2586 = !{!2587, !2588}
!2587 = !DIDerivedType(tag: DW_TAG_member, name: "nr", scope: !2585, file: !2573, line: 55, baseType: !32, size: 32)
!2588 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !2585, file: !2573, line: 56, baseType: !2589, size: 64, offset: 64)
!2589 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2590, size: 64)
!2590 = !DICompositeType(tag: DW_TAG_structure_type, name: "pid_namespace", file: !2573, line: 56, flags: DIFlagFwdDecl)
!2591 = !DIDerivedType(tag: DW_TAG_member, name: "pid_links", scope: !2327, file: !2328, line: 872, baseType: !2592, size: 512, offset: 6016)
!2592 = !DICompositeType(tag: DW_TAG_array_type, baseType: !276, size: 512, elements: !2272)
!2593 = !DIDerivedType(tag: DW_TAG_member, name: "thread_group", scope: !2327, file: !2328, line: 873, baseType: !284, size: 128, offset: 6528)
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "thread_node", scope: !2327, file: !2328, line: 874, baseType: !284, size: 128, offset: 6656)
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "vfork_done", scope: !2327, file: !2328, line: 876, baseType: !2596, size: 64, offset: 6784)
!2596 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2597, size: 64)
!2597 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "completion", file: !2598, line: 26, size: 192, elements: !2599)
!2598 = !DIFile(filename: "./include/linux/completion.h", directory: "/home/lizy2001/genbc/linux")
!2599 = !{!2600, !2601}
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !2597, file: !2598, line: 27, baseType: !7, size: 32)
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !2597, file: !2598, line: 28, baseType: !2602, size: 128, offset: 64)
!2602 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swait_queue_head", file: !2603, line: 43, size: 128, elements: !2604)
!2603 = !DIFile(filename: "./include/linux/swait.h", directory: "/home/lizy2001/genbc/linux")
!2604 = !{!2605, !2606}
!2605 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2602, file: !2603, line: 44, baseType: !1761)
!2606 = !DIDerivedType(tag: DW_TAG_member, name: "task_list", scope: !2602, file: !2603, line: 45, baseType: !284, size: 128)
!2607 = !DIDerivedType(tag: DW_TAG_member, name: "set_child_tid", scope: !2327, file: !2328, line: 879, baseType: !1001, size: 64, offset: 6848)
!2608 = !DIDerivedType(tag: DW_TAG_member, name: "clear_child_tid", scope: !2327, file: !2328, line: 882, baseType: !1001, size: 64, offset: 6912)
!2609 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !2327, file: !2328, line: 884, baseType: !331, size: 64, offset: 6976)
!2610 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !2327, file: !2328, line: 885, baseType: !331, size: 64, offset: 7040)
!2611 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !2327, file: !2328, line: 890, baseType: !331, size: 64, offset: 7104)
!2612 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !2327, file: !2328, line: 891, baseType: !2613, size: 128, offset: 7168)
!2613 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "prev_cputime", file: !2328, line: 242, size: 128, elements: !2614)
!2614 = !{!2615, !2616, !2617}
!2615 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !2613, file: !2328, line: 244, baseType: !331, size: 64)
!2616 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !2613, file: !2328, line: 245, baseType: !331, size: 64, offset: 64)
!2617 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2613, file: !2328, line: 246, baseType: !1761, offset: 128)
!2618 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !2327, file: !2328, line: 900, baseType: !312, size: 64, offset: 7296)
!2619 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !2327, file: !2328, line: 901, baseType: !312, size: 64, offset: 7360)
!2620 = !DIDerivedType(tag: DW_TAG_member, name: "start_time", scope: !2327, file: !2328, line: 904, baseType: !331, size: 64, offset: 7424)
!2621 = !DIDerivedType(tag: DW_TAG_member, name: "start_boottime", scope: !2327, file: !2328, line: 907, baseType: !331, size: 64, offset: 7488)
!2622 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !2327, file: !2328, line: 910, baseType: !312, size: 64, offset: 7552)
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !2327, file: !2328, line: 911, baseType: !312, size: 64, offset: 7616)
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !2327, file: !2328, line: 914, baseType: !2625, size: 640, offset: 7680)
!2625 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers", file: !2626, line: 123, size: 640, elements: !2627)
!2626 = !DIFile(filename: "./include/linux/posix-timers.h", directory: "/home/lizy2001/genbc/linux")
!2627 = !{!2628, !2634, !2635}
!2628 = !DIDerivedType(tag: DW_TAG_member, name: "bases", scope: !2625, file: !2626, line: 124, baseType: !2629, size: 576)
!2629 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2630, size: 576, elements: !1592)
!2630 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimer_base", file: !2626, line: 108, size: 192, elements: !2631)
!2631 = !{!2632, !2633}
!2632 = !DIDerivedType(tag: DW_TAG_member, name: "nextevt", scope: !2630, file: !2626, line: 109, baseType: !331, size: 64)
!2633 = !DIDerivedType(tag: DW_TAG_member, name: "tqhead", scope: !2630, file: !2626, line: 110, baseType: !2446, size: 128, offset: 64)
!2634 = !DIDerivedType(tag: DW_TAG_member, name: "timers_active", scope: !2625, file: !2626, line: 125, baseType: !7, size: 32, offset: 576)
!2635 = !DIDerivedType(tag: DW_TAG_member, name: "expiry_active", scope: !2625, file: !2626, line: 126, baseType: !7, size: 32, offset: 608)
!2636 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers_work", scope: !2327, file: !2328, line: 917, baseType: !2637, size: 192, offset: 8320)
!2637 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers_work", file: !2626, line: 134, size: 192, elements: !2638)
!2638 = !{!2639, !2640}
!2639 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !2637, file: !2626, line: 135, baseType: !299, size: 128, align: 64)
!2640 = !DIDerivedType(tag: DW_TAG_member, name: "scheduled", scope: !2637, file: !2626, line: 136, baseType: !7, size: 32, offset: 128)
!2641 = !DIDerivedType(tag: DW_TAG_member, name: "ptracer_cred", scope: !2327, file: !2328, line: 923, baseType: !2642, size: 64, offset: 8512)
!2642 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2643, size: 64)
!2643 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2644)
!2644 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cred", file: !2645, line: 111, size: 1280, elements: !2646)
!2645 = !DIFile(filename: "./include/linux/cred.h", directory: "/home/lizy2001/genbc/linux")
!2646 = !{!2647, !2648, !2649, !2650, !2651, !2652, !2653, !2654, !2655, !2656, !2657, !2666, !2667, !2668, !2669, !2670, !2671, !2776, !2777, !2778, !2779, !2780, !2936, !2944}
!2647 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !2644, file: !2645, line: 112, baseType: !383, size: 32)
!2648 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2644, file: !2645, line: 120, baseType: !1382, size: 32, offset: 32)
!2649 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !2644, file: !2645, line: 121, baseType: !1390, size: 32, offset: 64)
!2650 = !DIDerivedType(tag: DW_TAG_member, name: "suid", scope: !2644, file: !2645, line: 122, baseType: !1382, size: 32, offset: 96)
!2651 = !DIDerivedType(tag: DW_TAG_member, name: "sgid", scope: !2644, file: !2645, line: 123, baseType: !1390, size: 32, offset: 128)
!2652 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !2644, file: !2645, line: 124, baseType: !1382, size: 32, offset: 160)
!2653 = !DIDerivedType(tag: DW_TAG_member, name: "egid", scope: !2644, file: !2645, line: 125, baseType: !1390, size: 32, offset: 192)
!2654 = !DIDerivedType(tag: DW_TAG_member, name: "fsuid", scope: !2644, file: !2645, line: 126, baseType: !1382, size: 32, offset: 224)
!2655 = !DIDerivedType(tag: DW_TAG_member, name: "fsgid", scope: !2644, file: !2645, line: 127, baseType: !1390, size: 32, offset: 256)
!2656 = !DIDerivedType(tag: DW_TAG_member, name: "securebits", scope: !2644, file: !2645, line: 128, baseType: !7, size: 32, offset: 288)
!2657 = !DIDerivedType(tag: DW_TAG_member, name: "cap_inheritable", scope: !2644, file: !2645, line: 129, baseType: !2658, size: 64, offset: 320)
!2658 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_cap_t", file: !2659, line: 26, baseType: !2660)
!2659 = !DIFile(filename: "./include/linux/capability.h", directory: "/home/lizy2001/genbc/linux")
!2660 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_cap_struct", file: !2659, line: 24, size: 64, elements: !2661)
!2661 = !{!2662}
!2662 = !DIDerivedType(tag: DW_TAG_member, name: "cap", scope: !2660, file: !2659, line: 25, baseType: !2663, size: 64)
!2663 = !DICompositeType(tag: DW_TAG_array_type, baseType: !493, size: 64, elements: !2664)
!2664 = !{!2665}
!2665 = !DISubrange(count: 2)
!2666 = !DIDerivedType(tag: DW_TAG_member, name: "cap_permitted", scope: !2644, file: !2645, line: 130, baseType: !2658, size: 64, offset: 384)
!2667 = !DIDerivedType(tag: DW_TAG_member, name: "cap_effective", scope: !2644, file: !2645, line: 131, baseType: !2658, size: 64, offset: 448)
!2668 = !DIDerivedType(tag: DW_TAG_member, name: "cap_bset", scope: !2644, file: !2645, line: 132, baseType: !2658, size: 64, offset: 512)
!2669 = !DIDerivedType(tag: DW_TAG_member, name: "cap_ambient", scope: !2644, file: !2645, line: 133, baseType: !2658, size: 64, offset: 576)
!2670 = !DIDerivedType(tag: DW_TAG_member, name: "jit_keyring", scope: !2644, file: !2645, line: 135, baseType: !482, size: 8, offset: 640)
!2671 = !DIDerivedType(tag: DW_TAG_member, name: "session_keyring", scope: !2644, file: !2645, line: 137, baseType: !2672, size: 64, offset: 704)
!2672 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2673, size: 64)
!2673 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key", file: !2674, line: 189, size: 1664, elements: !2675)
!2674 = !DIFile(filename: "./include/linux/key.h", directory: "/home/lizy2001/genbc/linux")
!2675 = !{!2676, !2677, !2680, !2685, !2686, !2689, !2690, !2695, !2696, !2697, !2698, !2700, !2701, !2702, !2703, !2704, !2740, !2761}
!2676 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !2673, file: !2674, line: 190, baseType: !568, size: 32)
!2677 = !DIDerivedType(tag: DW_TAG_member, name: "serial", scope: !2673, file: !2674, line: 191, baseType: !2678, size: 32, offset: 32)
!2678 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_serial_t", file: !2674, line: 28, baseType: !2679)
!2679 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !277, line: 98, baseType: !2545)
!2680 = !DIDerivedType(tag: DW_TAG_member, scope: !2673, file: !2674, line: 192, baseType: !2681, size: 192, offset: 64)
!2681 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2673, file: !2674, line: 192, size: 192, elements: !2682)
!2682 = !{!2683, !2684}
!2683 = !DIDerivedType(tag: DW_TAG_member, name: "graveyard_link", scope: !2681, file: !2674, line: 193, baseType: !284, size: 128)
!2684 = !DIDerivedType(tag: DW_TAG_member, name: "serial_node", scope: !2681, file: !2674, line: 194, baseType: !433, size: 192, align: 64)
!2685 = !DIDerivedType(tag: DW_TAG_member, name: "sem", scope: !2673, file: !2674, line: 199, baseType: !1755, size: 256, offset: 256)
!2686 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !2673, file: !2674, line: 200, baseType: !2687, size: 64, offset: 512)
!2687 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2688, size: 64)
!2688 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_user", file: !2674, line: 200, flags: DIFlagFwdDecl)
!2689 = !DIDerivedType(tag: DW_TAG_member, name: "security", scope: !2673, file: !2674, line: 201, baseType: !591, size: 64, offset: 576)
!2690 = !DIDerivedType(tag: DW_TAG_member, scope: !2673, file: !2674, line: 202, baseType: !2691, size: 64, offset: 640)
!2691 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2673, file: !2674, line: 202, size: 64, elements: !2692)
!2692 = !{!2693, !2694}
!2693 = !DIDerivedType(tag: DW_TAG_member, name: "expiry", scope: !2691, file: !2674, line: 203, baseType: !1483, size: 64)
!2694 = !DIDerivedType(tag: DW_TAG_member, name: "revoked_at", scope: !2691, file: !2674, line: 204, baseType: !1483, size: 64)
!2695 = !DIDerivedType(tag: DW_TAG_member, name: "last_used_at", scope: !2673, file: !2674, line: 206, baseType: !1483, size: 64, offset: 704)
!2696 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2673, file: !2674, line: 207, baseType: !1382, size: 32, offset: 768)
!2697 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !2673, file: !2674, line: 208, baseType: !1390, size: 32, offset: 800)
!2698 = !DIDerivedType(tag: DW_TAG_member, name: "perm", scope: !2673, file: !2674, line: 209, baseType: !2699, size: 32, offset: 832)
!2699 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_perm_t", file: !2674, line: 31, baseType: !1502)
!2700 = !DIDerivedType(tag: DW_TAG_member, name: "quotalen", scope: !2673, file: !2674, line: 210, baseType: !476, size: 16, offset: 864)
!2701 = !DIDerivedType(tag: DW_TAG_member, name: "datalen", scope: !2673, file: !2674, line: 211, baseType: !476, size: 16, offset: 880)
!2702 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2673, file: !2674, line: 215, baseType: !625, size: 16, offset: 896)
!2703 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2673, file: !2674, line: 222, baseType: !312, size: 64, offset: 960)
!2704 = !DIDerivedType(tag: DW_TAG_member, scope: !2673, file: !2674, line: 239, baseType: !2705, size: 320, offset: 1024)
!2705 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2673, file: !2674, line: 239, size: 320, elements: !2706)
!2706 = !{!2707, !2732}
!2707 = !DIDerivedType(tag: DW_TAG_member, name: "index_key", scope: !2705, file: !2674, line: 240, baseType: !2708, size: 320)
!2708 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "keyring_index_key", file: !2674, line: 108, size: 320, elements: !2709)
!2709 = !{!2710, !2711, !2721, !2724, !2731}
!2710 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !2708, file: !2674, line: 110, baseType: !312, size: 64)
!2711 = !DIDerivedType(tag: DW_TAG_member, scope: !2708, file: !2674, line: 111, baseType: !2712, size: 64, offset: 64)
!2712 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2708, file: !2674, line: 111, size: 64, elements: !2713)
!2713 = !{!2714, !2720}
!2714 = !DIDerivedType(tag: DW_TAG_member, scope: !2712, file: !2674, line: 112, baseType: !2715, size: 64)
!2715 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2712, file: !2674, line: 112, size: 64, elements: !2716)
!2716 = !{!2717, !2718}
!2717 = !DIDerivedType(tag: DW_TAG_member, name: "desc_len", scope: !2715, file: !2674, line: 114, baseType: !581, size: 16)
!2718 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !2715, file: !2674, line: 115, baseType: !2719, size: 48, offset: 16)
!2719 = !DICompositeType(tag: DW_TAG_array_type, baseType: !268, size: 48, elements: !999)
!2720 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !2712, file: !2674, line: 121, baseType: !312, size: 64)
!2721 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2708, file: !2674, line: 123, baseType: !2722, size: 64, offset: 128)
!2722 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2723, size: 64)
!2723 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_type", file: !2674, line: 96, flags: DIFlagFwdDecl)
!2724 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !2708, file: !2674, line: 124, baseType: !2725, size: 64, offset: 192)
!2725 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2726, size: 64)
!2726 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_tag", file: !2674, line: 102, size: 192, elements: !2727)
!2727 = !{!2728, !2729, !2730}
!2728 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2726, file: !2674, line: 103, baseType: !299, size: 128, align: 64)
!2729 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !2726, file: !2674, line: 104, baseType: !568, size: 32, offset: 128)
!2730 = !DIDerivedType(tag: DW_TAG_member, name: "removed", scope: !2726, file: !2674, line: 105, baseType: !771, size: 8, offset: 160)
!2731 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !2708, file: !2674, line: 125, baseType: !292, size: 64, offset: 256)
!2732 = !DIDerivedType(tag: DW_TAG_member, scope: !2705, file: !2674, line: 241, baseType: !2733, size: 320)
!2733 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2705, file: !2674, line: 241, size: 320, elements: !2734)
!2734 = !{!2735, !2736, !2737, !2738, !2739}
!2735 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !2733, file: !2674, line: 242, baseType: !312, size: 64)
!2736 = !DIDerivedType(tag: DW_TAG_member, name: "len_desc", scope: !2733, file: !2674, line: 243, baseType: !312, size: 64, offset: 64)
!2737 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2733, file: !2674, line: 244, baseType: !2722, size: 64, offset: 128)
!2738 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !2733, file: !2674, line: 245, baseType: !2725, size: 64, offset: 192)
!2739 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !2733, file: !2674, line: 246, baseType: !1038, size: 64, offset: 256)
!2740 = !DIDerivedType(tag: DW_TAG_member, scope: !2673, file: !2674, line: 254, baseType: !2741, size: 256, offset: 1344)
!2741 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2673, file: !2674, line: 254, size: 256, elements: !2742)
!2742 = !{!2743, !2749}
!2743 = !DIDerivedType(tag: DW_TAG_member, name: "payload", scope: !2741, file: !2674, line: 255, baseType: !2744, size: 256)
!2744 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "key_payload", file: !2674, line: 128, size: 256, elements: !2745)
!2745 = !{!2746, !2747}
!2746 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_data0", scope: !2744, file: !2674, line: 129, baseType: !591, size: 64)
!2747 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2744, file: !2674, line: 130, baseType: !2748, size: 256)
!2748 = !DICompositeType(tag: DW_TAG_array_type, baseType: !591, size: 256, elements: !2272)
!2749 = !DIDerivedType(tag: DW_TAG_member, scope: !2741, file: !2674, line: 256, baseType: !2750, size: 256)
!2750 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2741, file: !2674, line: 256, size: 256, elements: !2751)
!2751 = !{!2752, !2753}
!2752 = !DIDerivedType(tag: DW_TAG_member, name: "name_link", scope: !2750, file: !2674, line: 258, baseType: !284, size: 128)
!2753 = !DIDerivedType(tag: DW_TAG_member, name: "keys", scope: !2750, file: !2674, line: 259, baseType: !2754, size: 128, offset: 128)
!2754 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array", file: !2755, line: 22, size: 128, elements: !2756)
!2755 = !DIFile(filename: "./include/linux/assoc_array.h", directory: "/home/lizy2001/genbc/linux")
!2756 = !{!2757, !2760}
!2757 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !2754, file: !2755, line: 23, baseType: !2758, size: 64)
!2758 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2759, size: 64)
!2759 = !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array_ptr", file: !2755, line: 23, flags: DIFlagFwdDecl)
!2760 = !DIDerivedType(tag: DW_TAG_member, name: "nr_leaves_on_tree", scope: !2754, file: !2755, line: 24, baseType: !312, size: 64, offset: 64)
!2761 = !DIDerivedType(tag: DW_TAG_member, name: "restrict_link", scope: !2673, file: !2674, line: 274, baseType: !2762, size: 64, offset: 1600)
!2762 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2763, size: 64)
!2763 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_restriction", file: !2674, line: 170, size: 192, elements: !2764)
!2764 = !{!2765, !2774, !2775}
!2765 = !DIDerivedType(tag: DW_TAG_member, name: "check", scope: !2763, file: !2674, line: 171, baseType: !2766, size: 64)
!2766 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_restrict_link_func_t", file: !2674, line: 165, baseType: !2767)
!2767 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2768, size: 64)
!2768 = !DISubroutineType(types: !2769)
!2769 = !{!32, !2672, !2770, !2772, !2672}
!2770 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2771, size: 64)
!2771 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2723)
!2772 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2773, size: 64)
!2773 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2744)
!2774 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !2763, file: !2674, line: 172, baseType: !2672, size: 64, offset: 64)
!2775 = !DIDerivedType(tag: DW_TAG_member, name: "keytype", scope: !2763, file: !2674, line: 173, baseType: !2722, size: 64, offset: 128)
!2776 = !DIDerivedType(tag: DW_TAG_member, name: "process_keyring", scope: !2644, file: !2645, line: 138, baseType: !2672, size: 64, offset: 768)
!2777 = !DIDerivedType(tag: DW_TAG_member, name: "thread_keyring", scope: !2644, file: !2645, line: 139, baseType: !2672, size: 64, offset: 832)
!2778 = !DIDerivedType(tag: DW_TAG_member, name: "request_key_auth", scope: !2644, file: !2645, line: 140, baseType: !2672, size: 64, offset: 896)
!2779 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !2644, file: !2645, line: 145, baseType: !1953, size: 64, offset: 960)
!2780 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !2644, file: !2645, line: 146, baseType: !2781, size: 64, offset: 1024)
!2781 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2782, size: 64)
!2782 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "user_namespace", file: !2783, line: 56, size: 4160, elements: !2784)
!2783 = !DIFile(filename: "./include/linux/user_namespace.h", directory: "/home/lizy2001/genbc/linux")
!2784 = !{!2785, !2807, !2808, !2809, !2810, !2811, !2812, !2813, !2814, !2824, !2825, !2826, !2827, !2828, !2840, !2921, !2922, !2934}
!2785 = !DIDerivedType(tag: DW_TAG_member, name: "uid_map", scope: !2782, file: !2783, line: 57, baseType: !2786, size: 576)
!2786 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uid_gid_map", file: !2783, line: 23, size: 576, elements: !2787)
!2787 = !{!2788, !2789}
!2788 = !DIDerivedType(tag: DW_TAG_member, name: "nr_extents", scope: !2786, file: !2783, line: 24, baseType: !987, size: 32)
!2789 = !DIDerivedType(tag: DW_TAG_member, scope: !2786, file: !2783, line: 25, baseType: !2790, size: 512, offset: 64)
!2790 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2786, file: !2783, line: 25, size: 512, elements: !2791)
!2791 = !{!2792, !2801}
!2792 = !DIDerivedType(tag: DW_TAG_member, name: "extent", scope: !2790, file: !2783, line: 26, baseType: !2793, size: 480)
!2793 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2794, size: 480, elements: !2799)
!2794 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uid_gid_extent", file: !2783, line: 17, size: 96, elements: !2795)
!2795 = !{!2796, !2797, !2798}
!2796 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !2794, file: !2783, line: 18, baseType: !987, size: 32)
!2797 = !DIDerivedType(tag: DW_TAG_member, name: "lower_first", scope: !2794, file: !2783, line: 19, baseType: !987, size: 32, offset: 32)
!2798 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2794, file: !2783, line: 20, baseType: !987, size: 32, offset: 64)
!2799 = !{!2800}
!2800 = !DISubrange(count: 5)
!2801 = !DIDerivedType(tag: DW_TAG_member, scope: !2790, file: !2783, line: 27, baseType: !2802, size: 128)
!2802 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2790, file: !2783, line: 27, size: 128, elements: !2803)
!2803 = !{!2804, !2806}
!2804 = !DIDerivedType(tag: DW_TAG_member, name: "forward", scope: !2802, file: !2783, line: 28, baseType: !2805, size: 64)
!2805 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2794, size: 64)
!2806 = !DIDerivedType(tag: DW_TAG_member, name: "reverse", scope: !2802, file: !2783, line: 29, baseType: !2805, size: 64, offset: 64)
!2807 = !DIDerivedType(tag: DW_TAG_member, name: "gid_map", scope: !2782, file: !2783, line: 58, baseType: !2786, size: 576, offset: 576)
!2808 = !DIDerivedType(tag: DW_TAG_member, name: "projid_map", scope: !2782, file: !2783, line: 59, baseType: !2786, size: 576, offset: 1152)
!2809 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2782, file: !2783, line: 60, baseType: !383, size: 32, offset: 1728)
!2810 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !2782, file: !2783, line: 61, baseType: !2781, size: 64, offset: 1792)
!2811 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !2782, file: !2783, line: 62, baseType: !32, size: 32, offset: 1856)
!2812 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !2782, file: !2783, line: 63, baseType: !1382, size: 32, offset: 1888)
!2813 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !2782, file: !2783, line: 64, baseType: !1390, size: 32, offset: 1920)
!2814 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !2782, file: !2783, line: 65, baseType: !2815, size: 192, offset: 1984)
!2815 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ns_common", file: !2816, line: 7, size: 192, elements: !2817)
!2816 = !DIFile(filename: "./include/linux/ns_common.h", directory: "/home/lizy2001/genbc/linux")
!2817 = !{!2818, !2819, !2823}
!2818 = !DIDerivedType(tag: DW_TAG_member, name: "stashed", scope: !2815, file: !2816, line: 8, baseType: !371, size: 64)
!2819 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !2815, file: !2816, line: 9, baseType: !2820, size: 64, offset: 64)
!2820 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2821, size: 64)
!2821 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2822)
!2822 = !DICompositeType(tag: DW_TAG_structure_type, name: "proc_ns_operations", file: !2816, line: 5, flags: DIFlagFwdDecl)
!2823 = !DIDerivedType(tag: DW_TAG_member, name: "inum", scope: !2815, file: !2816, line: 10, baseType: !7, size: 32, offset: 128)
!2824 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2782, file: !2783, line: 66, baseType: !312, size: 64, offset: 2176)
!2825 = !DIDerivedType(tag: DW_TAG_member, name: "keyring_name_list", scope: !2782, file: !2783, line: 74, baseType: !284, size: 128, offset: 2240)
!2826 = !DIDerivedType(tag: DW_TAG_member, name: "user_keyring_register", scope: !2782, file: !2783, line: 75, baseType: !2672, size: 64, offset: 2368)
!2827 = !DIDerivedType(tag: DW_TAG_member, name: "keyring_sem", scope: !2782, file: !2783, line: 76, baseType: !1755, size: 256, offset: 2432)
!2828 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !2782, file: !2783, line: 83, baseType: !2829, size: 256, offset: 2688)
!2829 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "work_struct", file: !2830, line: 102, size: 256, elements: !2831)
!2830 = !DIFile(filename: "./include/linux/workqueue.h", directory: "/home/lizy2001/genbc/linux")
!2831 = !{!2832, !2833, !2834}
!2832 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2829, file: !2830, line: 103, baseType: !371, size: 64)
!2833 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !2829, file: !2830, line: 104, baseType: !284, size: 128, offset: 64)
!2834 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !2829, file: !2830, line: 105, baseType: !2835, size: 64, offset: 192)
!2835 = !DIDerivedType(tag: DW_TAG_typedef, name: "work_func_t", file: !2830, line: 21, baseType: !2836)
!2836 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2837, size: 64)
!2837 = !DISubroutineType(types: !2838)
!2838 = !{null, !2839}
!2839 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2829, size: 64)
!2840 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !2782, file: !2783, line: 85, baseType: !2841, size: 768, offset: 2944)
!2841 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_table_set", file: !2842, line: 156, size: 768, elements: !2843)
!2842 = !DIFile(filename: "./include/linux/sysctl.h", directory: "/home/lizy2001/genbc/linux")
!2843 = !{!2844, !2849}
!2844 = !DIDerivedType(tag: DW_TAG_member, name: "is_seen", scope: !2841, file: !2842, line: 157, baseType: !2845, size: 64)
!2845 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2846, size: 64)
!2846 = !DISubroutineType(types: !2847)
!2847 = !{!32, !2848}
!2848 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2841, size: 64)
!2849 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !2841, file: !2842, line: 158, baseType: !2850, size: 704, offset: 64)
!2850 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_dir", file: !2842, line: 150, size: 704, elements: !2851)
!2851 = !{!2852, !2920}
!2852 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !2850, file: !2842, line: 152, baseType: !2853, size: 640)
!2853 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_table_header", file: !2842, line: 131, size: 640, elements: !2854)
!2854 = !{!2855, !2888, !2889, !2890, !2910, !2911, !2913, !2919}
!2855 = !DIDerivedType(tag: DW_TAG_member, scope: !2853, file: !2842, line: 132, baseType: !2856, size: 192)
!2856 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2853, file: !2842, line: 132, size: 192, elements: !2857)
!2857 = !{!2858, !2887}
!2858 = !DIDerivedType(tag: DW_TAG_member, scope: !2856, file: !2842, line: 133, baseType: !2859, size: 192)
!2859 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2856, file: !2842, line: 133, size: 192, elements: !2860)
!2860 = !{!2861, !2884, !2885, !2886}
!2861 = !DIDerivedType(tag: DW_TAG_member, name: "ctl_table", scope: !2859, file: !2842, line: 134, baseType: !2862, size: 64)
!2862 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2863, size: 64)
!2863 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_table", file: !2842, line: 112, size: 512, elements: !2864)
!2864 = !{!2865, !2866, !2867, !2868, !2869, !2870, !2876, !2882, !2883}
!2865 = !DIDerivedType(tag: DW_TAG_member, name: "procname", scope: !2863, file: !2842, line: 113, baseType: !292, size: 64)
!2866 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2863, file: !2842, line: 114, baseType: !591, size: 64, offset: 64)
!2867 = !DIDerivedType(tag: DW_TAG_member, name: "maxlen", scope: !2863, file: !2842, line: 115, baseType: !32, size: 32, offset: 128)
!2868 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2863, file: !2842, line: 116, baseType: !1379, size: 16, offset: 160)
!2869 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !2863, file: !2842, line: 117, baseType: !2862, size: 64, offset: 192)
!2870 = !DIDerivedType(tag: DW_TAG_member, name: "proc_handler", scope: !2863, file: !2842, line: 118, baseType: !2871, size: 64, offset: 256)
!2871 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2872, size: 64)
!2872 = !DIDerivedType(tag: DW_TAG_typedef, name: "proc_handler", file: !2842, line: 47, baseType: !2873)
!2873 = !DISubroutineType(types: !2874)
!2874 = !{!32, !2862, !32, !591, !2875, !1694}
!2875 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1039, size: 64)
!2876 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !2863, file: !2842, line: 119, baseType: !2877, size: 64, offset: 320)
!2877 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2878, size: 64)
!2878 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_table_poll", file: !2842, line: 94, size: 192, elements: !2879)
!2879 = !{!2880, !2881}
!2880 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !2878, file: !2842, line: 95, baseType: !383, size: 32)
!2881 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !2878, file: !2842, line: 96, baseType: !1889, size: 128, offset: 64)
!2882 = !DIDerivedType(tag: DW_TAG_member, name: "extra1", scope: !2863, file: !2842, line: 120, baseType: !591, size: 64, offset: 384)
!2883 = !DIDerivedType(tag: DW_TAG_member, name: "extra2", scope: !2863, file: !2842, line: 121, baseType: !591, size: 64, offset: 448)
!2884 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !2859, file: !2842, line: 135, baseType: !32, size: 32, offset: 64)
!2885 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2859, file: !2842, line: 136, baseType: !32, size: 32, offset: 96)
!2886 = !DIDerivedType(tag: DW_TAG_member, name: "nreg", scope: !2859, file: !2842, line: 137, baseType: !32, size: 32, offset: 128)
!2887 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2856, file: !2842, line: 139, baseType: !299, size: 128, align: 64)
!2888 = !DIDerivedType(tag: DW_TAG_member, name: "unregistering", scope: !2853, file: !2842, line: 141, baseType: !2596, size: 64, offset: 192)
!2889 = !DIDerivedType(tag: DW_TAG_member, name: "ctl_table_arg", scope: !2853, file: !2842, line: 142, baseType: !2862, size: 64, offset: 256)
!2890 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !2853, file: !2842, line: 143, baseType: !2891, size: 64, offset: 320)
!2891 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2892, size: 64)
!2892 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_table_root", file: !2842, line: 161, size: 960, elements: !2893)
!2893 = !{!2894, !2895, !2899, !2906}
!2894 = !DIDerivedType(tag: DW_TAG_member, name: "default_set", scope: !2892, file: !2842, line: 162, baseType: !2841, size: 768)
!2895 = !DIDerivedType(tag: DW_TAG_member, name: "lookup", scope: !2892, file: !2842, line: 163, baseType: !2896, size: 64, offset: 768)
!2896 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2897, size: 64)
!2897 = !DISubroutineType(types: !2898)
!2898 = !{!2848, !2891}
!2899 = !DIDerivedType(tag: DW_TAG_member, name: "set_ownership", scope: !2892, file: !2842, line: 164, baseType: !2900, size: 64, offset: 832)
!2900 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2901, size: 64)
!2901 = !DISubroutineType(types: !2902)
!2902 = !{null, !2903, !2862, !2904, !2905}
!2903 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2853, size: 64)
!2904 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1382, size: 64)
!2905 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1390, size: 64)
!2906 = !DIDerivedType(tag: DW_TAG_member, name: "permissions", scope: !2892, file: !2842, line: 167, baseType: !2907, size: 64, offset: 896)
!2907 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2908, size: 64)
!2908 = !DISubroutineType(types: !2909)
!2909 = !{!32, !2903, !2862}
!2910 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !2853, file: !2842, line: 144, baseType: !2848, size: 64, offset: 384)
!2911 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !2853, file: !2842, line: 145, baseType: !2912, size: 64, offset: 448)
!2912 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2850, size: 64)
!2913 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2853, file: !2842, line: 146, baseType: !2914, size: 64, offset: 512)
!2914 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2915, size: 64)
!2915 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_node", file: !2842, line: 124, size: 256, elements: !2916)
!2916 = !{!2917, !2918}
!2917 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2915, file: !2842, line: 125, baseType: !433, size: 192, align: 64)
!2918 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !2915, file: !2842, line: 126, baseType: !2903, size: 64, offset: 192)
!2919 = !DIDerivedType(tag: DW_TAG_member, name: "inodes", scope: !2853, file: !2842, line: 147, baseType: !1581, size: 64, offset: 576)
!2920 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !2850, file: !2842, line: 153, baseType: !1750, size: 64, offset: 640)
!2921 = !DIDerivedType(tag: DW_TAG_member, name: "sysctls", scope: !2782, file: !2783, line: 86, baseType: !2903, size: 64, offset: 3712)
!2922 = !DIDerivedType(tag: DW_TAG_member, name: "ucounts", scope: !2782, file: !2783, line: 88, baseType: !2923, size: 64, offset: 3776)
!2923 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2924, size: 64)
!2924 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ucounts", file: !2783, line: 92, size: 576, elements: !2925)
!2925 = !{!2926, !2927, !2928, !2929, !2930}
!2926 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2924, file: !2783, line: 93, baseType: !276, size: 128)
!2927 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !2924, file: !2783, line: 94, baseType: !2781, size: 64, offset: 128)
!2928 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2924, file: !2783, line: 95, baseType: !1382, size: 32, offset: 192)
!2929 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2924, file: !2783, line: 96, baseType: !32, size: 32, offset: 224)
!2930 = !DIDerivedType(tag: DW_TAG_member, name: "ucount", scope: !2924, file: !2783, line: 97, baseType: !2931, size: 320, offset: 256)
!2931 = !DICompositeType(tag: DW_TAG_array_type, baseType: !383, size: 320, elements: !2932)
!2932 = !{!2933}
!2933 = !DISubrange(count: 10)
!2934 = !DIDerivedType(tag: DW_TAG_member, name: "ucount_max", scope: !2782, file: !2783, line: 89, baseType: !2935, size: 320, offset: 3840)
!2935 = !DICompositeType(tag: DW_TAG_array_type, baseType: !32, size: 320, elements: !2932)
!2936 = !DIDerivedType(tag: DW_TAG_member, name: "group_info", scope: !2644, file: !2645, line: 147, baseType: !2937, size: 64, offset: 1088)
!2937 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2938, size: 64)
!2938 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "group_info", file: !2645, line: 25, size: 64, elements: !2939)
!2939 = !{!2940, !2941, !2942}
!2940 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !2938, file: !2645, line: 26, baseType: !383, size: 32)
!2941 = !DIDerivedType(tag: DW_TAG_member, name: "ngroups", scope: !2938, file: !2645, line: 27, baseType: !32, size: 32, offset: 32)
!2942 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !2938, file: !2645, line: 28, baseType: !2943, offset: 64)
!2943 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1390, elements: !483)
!2944 = !DIDerivedType(tag: DW_TAG_member, scope: !2644, file: !2645, line: 149, baseType: !2945, size: 128, offset: 1152)
!2945 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2644, file: !2645, line: 149, size: 128, elements: !2946)
!2946 = !{!2947, !2948}
!2947 = !DIDerivedType(tag: DW_TAG_member, name: "non_rcu", scope: !2945, file: !2645, line: 150, baseType: !32, size: 32)
!2948 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2945, file: !2645, line: 151, baseType: !299, size: 128, align: 64)
!2949 = !DIDerivedType(tag: DW_TAG_member, name: "real_cred", scope: !2327, file: !2328, line: 926, baseType: !2642, size: 64, offset: 8576)
!2950 = !DIDerivedType(tag: DW_TAG_member, name: "cred", scope: !2327, file: !2328, line: 929, baseType: !2642, size: 64, offset: 8640)
!2951 = !DIDerivedType(tag: DW_TAG_member, name: "cached_requested_key", scope: !2327, file: !2328, line: 933, baseType: !2672, size: 64, offset: 8704)
!2952 = !DIDerivedType(tag: DW_TAG_member, name: "comm", scope: !2327, file: !2328, line: 943, baseType: !267, size: 128, offset: 8768)
!2953 = !DIDerivedType(tag: DW_TAG_member, name: "nameidata", scope: !2327, file: !2328, line: 945, baseType: !2954, size: 64, offset: 8896)
!2954 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2955, size: 64)
!2955 = !DICompositeType(tag: DW_TAG_structure_type, name: "nameidata", file: !2328, line: 49, flags: DIFlagFwdDecl)
!2956 = !DIDerivedType(tag: DW_TAG_member, name: "fs", scope: !2327, file: !2328, line: 956, baseType: !2957, size: 64, offset: 8960)
!2957 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2958, size: 64)
!2958 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_struct", file: !2328, line: 45, flags: DIFlagFwdDecl)
!2959 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !2327, file: !2328, line: 959, baseType: !2960, size: 64, offset: 9024)
!2960 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2961, size: 64)
!2961 = !DICompositeType(tag: DW_TAG_structure_type, name: "files_struct", file: !2328, line: 959, flags: DIFlagFwdDecl)
!2962 = !DIDerivedType(tag: DW_TAG_member, name: "io_uring", scope: !2327, file: !2328, line: 962, baseType: !2963, size: 64, offset: 9088)
!2963 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2964, size: 64)
!2964 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_uring_task", file: !2328, line: 66, flags: DIFlagFwdDecl)
!2965 = !DIDerivedType(tag: DW_TAG_member, name: "nsproxy", scope: !2327, file: !2328, line: 966, baseType: !2966, size: 64, offset: 9152)
!2966 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2967, size: 64)
!2967 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nsproxy", file: !2968, line: 31, size: 576, elements: !2969)
!2968 = !DIFile(filename: "./include/linux/nsproxy.h", directory: "/home/lizy2001/genbc/linux")
!2969 = !{!2970, !2971, !2974, !2977, !2980, !2981, !3670, !3673, !3674}
!2970 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2967, file: !2968, line: 32, baseType: !383, size: 32)
!2971 = !DIDerivedType(tag: DW_TAG_member, name: "uts_ns", scope: !2967, file: !2968, line: 33, baseType: !2972, size: 64, offset: 64)
!2972 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2973, size: 64)
!2973 = !DICompositeType(tag: DW_TAG_structure_type, name: "uts_namespace", file: !2968, line: 9, flags: DIFlagFwdDecl)
!2974 = !DIDerivedType(tag: DW_TAG_member, name: "ipc_ns", scope: !2967, file: !2968, line: 34, baseType: !2975, size: 64, offset: 128)
!2975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2976, size: 64)
!2976 = !DICompositeType(tag: DW_TAG_structure_type, name: "ipc_namespace", file: !2968, line: 10, flags: DIFlagFwdDecl)
!2977 = !DIDerivedType(tag: DW_TAG_member, name: "mnt_ns", scope: !2967, file: !2968, line: 35, baseType: !2978, size: 64, offset: 192)
!2978 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2979, size: 64)
!2979 = !DICompositeType(tag: DW_TAG_structure_type, name: "mnt_namespace", file: !2968, line: 8, flags: DIFlagFwdDecl)
!2980 = !DIDerivedType(tag: DW_TAG_member, name: "pid_ns_for_children", scope: !2967, file: !2968, line: 36, baseType: !2589, size: 64, offset: 256)
!2981 = !DIDerivedType(tag: DW_TAG_member, name: "net_ns", scope: !2967, file: !2968, line: 37, baseType: !2982, size: 64, offset: 320)
!2982 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2983, size: 64)
!2983 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "net", file: !2984, line: 56, size: 16896, elements: !2985)
!2984 = !DIFile(filename: "./include/net/net_namespace.h", directory: "/home/lizy2001/genbc/linux")
!2985 = !{!2986, !2987, !2988, !2989, !2990, !2991, !2992, !2993, !2994, !2995, !2996, !2997, !2998, !2999, !3000, !3007, !3008, !3009, !3013, !3014, !3015, !3016, !3017, !3020, !3022, !3023, !3038, !3039, !3040, !3041, !3051, !3121, !3127, !3133, !3146, !3455, !3609, !3616, !3619, !3642, !3643, !3669}
!2986 = !DIDerivedType(tag: DW_TAG_member, name: "passive", scope: !2983, file: !2984, line: 60, baseType: !568, size: 32)
!2987 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2983, file: !2984, line: 63, baseType: !568, size: 32, offset: 32)
!2988 = !DIDerivedType(tag: DW_TAG_member, name: "rules_mod_lock", scope: !2983, file: !2984, line: 66, baseType: !1670, offset: 64)
!2989 = !DIDerivedType(tag: DW_TAG_member, name: "dev_unreg_count", scope: !2983, file: !2984, line: 68, baseType: !7, size: 32, offset: 64)
!2990 = !DIDerivedType(tag: DW_TAG_member, name: "dev_base_seq", scope: !2983, file: !2984, line: 70, baseType: !7, size: 32, offset: 96)
!2991 = !DIDerivedType(tag: DW_TAG_member, name: "ifindex", scope: !2983, file: !2984, line: 71, baseType: !32, size: 32, offset: 128)
!2992 = !DIDerivedType(tag: DW_TAG_member, name: "nsid_lock", scope: !2983, file: !2984, line: 73, baseType: !1670, offset: 160)
!2993 = !DIDerivedType(tag: DW_TAG_member, name: "fnhe_genid", scope: !2983, file: !2984, line: 74, baseType: !383, size: 32, offset: 160)
!2994 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2983, file: !2984, line: 76, baseType: !284, size: 128, offset: 192)
!2995 = !DIDerivedType(tag: DW_TAG_member, name: "exit_list", scope: !2983, file: !2984, line: 77, baseType: !284, size: 128, offset: 320)
!2996 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup_list", scope: !2983, file: !2984, line: 83, baseType: !1323, size: 64, offset: 448)
!2997 = !DIDerivedType(tag: DW_TAG_member, name: "key_domain", scope: !2983, file: !2984, line: 86, baseType: !2725, size: 64, offset: 512)
!2998 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !2983, file: !2984, line: 88, baseType: !2781, size: 64, offset: 576)
!2999 = !DIDerivedType(tag: DW_TAG_member, name: "ucounts", scope: !2983, file: !2984, line: 89, baseType: !2923, size: 64, offset: 640)
!3000 = !DIDerivedType(tag: DW_TAG_member, name: "netns_ids", scope: !2983, file: !2984, line: 90, baseType: !3001, size: 192, offset: 704)
!3001 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "idr", file: !3002, line: 19, size: 192, elements: !3003)
!3002 = !DIFile(filename: "./include/linux/idr.h", directory: "/home/lizy2001/genbc/linux")
!3003 = !{!3004, !3005, !3006}
!3004 = !DIDerivedType(tag: DW_TAG_member, name: "idr_rt", scope: !3001, file: !3002, line: 20, baseType: !1737, size: 128)
!3005 = !DIDerivedType(tag: DW_TAG_member, name: "idr_base", scope: !3001, file: !3002, line: 21, baseType: !7, size: 32, offset: 128)
!3006 = !DIDerivedType(tag: DW_TAG_member, name: "idr_next", scope: !3001, file: !3002, line: 22, baseType: !7, size: 32, offset: 160)
!3007 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !2983, file: !2984, line: 92, baseType: !2815, size: 192, offset: 896)
!3008 = !DIDerivedType(tag: DW_TAG_member, name: "dev_base_head", scope: !2983, file: !2984, line: 94, baseType: !284, size: 128, offset: 1088)
!3009 = !DIDerivedType(tag: DW_TAG_member, name: "proc_net", scope: !2983, file: !2984, line: 95, baseType: !3010, size: 64, offset: 1216)
!3010 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3011, size: 64)
!3011 = !DICompositeType(tag: DW_TAG_structure_type, name: "proc_dir_entry", file: !3012, line: 123, flags: DIFlagFwdDecl)
!3012 = !DIFile(filename: "./include/linux/interrupt.h", directory: "/home/lizy2001/genbc/linux")
!3013 = !DIDerivedType(tag: DW_TAG_member, name: "proc_net_stat", scope: !2983, file: !2984, line: 96, baseType: !3010, size: 64, offset: 1280)
!3014 = !DIDerivedType(tag: DW_TAG_member, name: "sysctls", scope: !2983, file: !2984, line: 99, baseType: !2841, size: 768, offset: 1344)
!3015 = !DIDerivedType(tag: DW_TAG_member, name: "rtnl", scope: !2983, file: !2984, line: 102, baseType: !445, size: 64, offset: 2112)
!3016 = !DIDerivedType(tag: DW_TAG_member, name: "genl_sock", scope: !2983, file: !2984, line: 103, baseType: !445, size: 64, offset: 2176)
!3017 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_sock", scope: !2983, file: !2984, line: 105, baseType: !3018, size: 64, offset: 2240)
!3018 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3019, size: 64)
!3019 = !DICompositeType(tag: DW_TAG_structure_type, name: "uevent_sock", file: !2984, line: 48, flags: DIFlagFwdDecl)
!3020 = !DIDerivedType(tag: DW_TAG_member, name: "dev_name_head", scope: !2983, file: !2984, line: 107, baseType: !3021, size: 64, offset: 2304)
!3021 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1581, size: 64)
!3022 = !DIDerivedType(tag: DW_TAG_member, name: "dev_index_head", scope: !2983, file: !2984, line: 108, baseType: !3021, size: 64, offset: 2368)
!3023 = !DIDerivedType(tag: DW_TAG_member, name: "netdev_chain", scope: !2983, file: !2984, line: 109, baseType: !3024, size: 64, offset: 2432)
!3024 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "raw_notifier_head", file: !3025, line: 70, size: 64, elements: !3026)
!3025 = !DIFile(filename: "./include/linux/notifier.h", directory: "/home/lizy2001/genbc/linux")
!3026 = !{!3027}
!3027 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3024, file: !3025, line: 71, baseType: !3028, size: 64)
!3028 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3029, size: 64)
!3029 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "notifier_block", file: !3025, line: 54, size: 192, elements: !3030)
!3030 = !{!3031, !3036, !3037}
!3031 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_call", scope: !3029, file: !3025, line: 55, baseType: !3032, size: 64)
!3032 = !DIDerivedType(tag: DW_TAG_typedef, name: "notifier_fn_t", file: !3025, line: 51, baseType: !3033)
!3033 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3034, size: 64)
!3034 = !DISubroutineType(types: !3035)
!3035 = !{!32, !3028, !312, !591}
!3036 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3029, file: !3025, line: 56, baseType: !3028, size: 64, offset: 64)
!3037 = !DIDerivedType(tag: DW_TAG_member, name: "priority", scope: !3029, file: !3025, line: 57, baseType: !32, size: 32, offset: 128)
!3038 = !DIDerivedType(tag: DW_TAG_member, name: "hash_mix", scope: !2983, file: !2984, line: 114, baseType: !987, size: 32, offset: 2496)
!3039 = !DIDerivedType(tag: DW_TAG_member, name: "loopback_dev", scope: !2983, file: !2984, line: 116, baseType: !290, size: 64, offset: 2560)
!3040 = !DIDerivedType(tag: DW_TAG_member, name: "rules_ops", scope: !2983, file: !2984, line: 119, baseType: !284, size: 128, offset: 2624)
!3041 = !DIDerivedType(tag: DW_TAG_member, name: "core", scope: !2983, file: !2984, line: 121, baseType: !3042, size: 256, offset: 2752)
!3042 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_core", file: !3043, line: 8, size: 256, elements: !3044)
!3043 = !DIFile(filename: "./include/net/netns/core.h", directory: "/home/lizy2001/genbc/linux")
!3044 = !{!3045, !3046, !3047, !3048}
!3045 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_hdr", scope: !3042, file: !3043, line: 10, baseType: !2903, size: 64)
!3046 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_somaxconn", scope: !3042, file: !3043, line: 12, baseType: !32, size: 32, offset: 64)
!3047 = !DIDerivedType(tag: DW_TAG_member, name: "sock_inuse", scope: !3042, file: !3043, line: 15, baseType: !1001, size: 64, offset: 128)
!3048 = !DIDerivedType(tag: DW_TAG_member, name: "prot_inuse", scope: !3042, file: !3043, line: 16, baseType: !3049, size: 64, offset: 192)
!3049 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3050, size: 64)
!3050 = !DICompositeType(tag: DW_TAG_structure_type, name: "prot_inuse", file: !3043, line: 6, flags: DIFlagFwdDecl)
!3051 = !DIDerivedType(tag: DW_TAG_member, name: "mib", scope: !2983, file: !2984, line: 122, baseType: !3052, size: 832, offset: 3008)
!3052 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_mib", file: !3053, line: 7, size: 832, elements: !3054)
!3053 = !DIFile(filename: "./include/net/netns/mib.h", directory: "/home/lizy2001/genbc/linux")
!3054 = !{!3055, !3062, !3073, !3081, !3089, !3090, !3098, !3106, !3107, !3108, !3109, !3110, !3116}
!3055 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_statistics", scope: !3052, file: !3053, line: 8, baseType: !3056, size: 64)
!3056 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3057, size: 64)
!3057 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tcp_mib", file: !3058, line: 92, size: 1024, elements: !3059)
!3058 = !DIFile(filename: "./include/net/snmp.h", directory: "/home/lizy2001/genbc/linux")
!3059 = !{!3060}
!3060 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !3057, file: !3058, line: 93, baseType: !3061, size: 1024)
!3061 = !DICompositeType(tag: DW_TAG_array_type, baseType: !312, size: 1024, elements: !269)
!3062 = !DIDerivedType(tag: DW_TAG_member, name: "ip_statistics", scope: !3052, file: !3053, line: 9, baseType: !3063, size: 64, offset: 64)
!3063 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3064, size: 64)
!3064 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ipstats_mib", file: !3058, line: 51, size: 2368, elements: !3065)
!3065 = !{!3066, !3070}
!3066 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !3064, file: !3058, line: 53, baseType: !3067, size: 2368)
!3067 = !DICompositeType(tag: DW_TAG_array_type, baseType: !331, size: 2368, elements: !3068)
!3068 = !{!3069}
!3069 = !DISubrange(count: 37)
!3070 = !DIDerivedType(tag: DW_TAG_member, name: "syncp", scope: !3064, file: !3058, line: 54, baseType: !3071, offset: 2368)
!3071 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "u64_stats_sync", file: !3072, line: 68, elements: !1587)
!3072 = !DIFile(filename: "./include/linux/u64_stats_sync.h", directory: "/home/lizy2001/genbc/linux")
!3073 = !DIDerivedType(tag: DW_TAG_member, name: "net_statistics", scope: !3052, file: !3053, line: 10, baseType: !3074, size: 64, offset: 128)
!3074 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3075, size: 64)
!3075 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "linux_mib", file: !3058, line: 104, size: 7936, elements: !3076)
!3076 = !{!3077}
!3077 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !3075, file: !3058, line: 105, baseType: !3078, size: 7936)
!3078 = !DICompositeType(tag: DW_TAG_array_type, baseType: !312, size: 7936, elements: !3079)
!3079 = !{!3080}
!3080 = !DISubrange(count: 124)
!3081 = !DIDerivedType(tag: DW_TAG_member, name: "udp_statistics", scope: !3052, file: !3053, line: 11, baseType: !3082, size: 64, offset: 192)
!3082 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3083, size: 64)
!3083 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "udp_mib", file: !3058, line: 98, size: 576, elements: !3084)
!3084 = !{!3085}
!3085 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !3083, file: !3058, line: 99, baseType: !3086, size: 576)
!3086 = !DICompositeType(tag: DW_TAG_array_type, baseType: !312, size: 576, elements: !3087)
!3087 = !{!3088}
!3088 = !DISubrange(count: 9)
!3089 = !DIDerivedType(tag: DW_TAG_member, name: "udplite_statistics", scope: !3052, file: !3053, line: 12, baseType: !3082, size: 64, offset: 256)
!3090 = !DIDerivedType(tag: DW_TAG_member, name: "icmp_statistics", scope: !3052, file: !3053, line: 13, baseType: !3091, size: 64, offset: 320)
!3091 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3092, size: 64)
!3092 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "icmp_mib", file: !3058, line: 59, size: 1792, elements: !3093)
!3093 = !{!3094}
!3094 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !3092, file: !3058, line: 60, baseType: !3095, size: 1792)
!3095 = !DICompositeType(tag: DW_TAG_array_type, baseType: !312, size: 1792, elements: !3096)
!3096 = !{!3097}
!3097 = !DISubrange(count: 28)
!3098 = !DIDerivedType(tag: DW_TAG_member, name: "icmpmsg_statistics", scope: !3052, file: !3053, line: 14, baseType: !3099, size: 64, offset: 384)
!3099 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3100, size: 64)
!3100 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "icmpmsg_mib", file: !3058, line: 64, size: 32768, elements: !3101)
!3101 = !{!3102}
!3102 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !3100, file: !3058, line: 65, baseType: !3103, size: 32768)
!3103 = !DICompositeType(tag: DW_TAG_array_type, baseType: !371, size: 32768, elements: !3104)
!3104 = !{!3105}
!3105 = !DISubrange(count: 512)
!3106 = !DIDerivedType(tag: DW_TAG_member, name: "proc_net_devsnmp6", scope: !3052, file: !3053, line: 17, baseType: !3010, size: 64, offset: 448)
!3107 = !DIDerivedType(tag: DW_TAG_member, name: "udp_stats_in6", scope: !3052, file: !3053, line: 18, baseType: !3082, size: 64, offset: 512)
!3108 = !DIDerivedType(tag: DW_TAG_member, name: "udplite_stats_in6", scope: !3052, file: !3053, line: 19, baseType: !3082, size: 64, offset: 576)
!3109 = !DIDerivedType(tag: DW_TAG_member, name: "ipv6_statistics", scope: !3052, file: !3053, line: 20, baseType: !3063, size: 64, offset: 640)
!3110 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6_statistics", scope: !3052, file: !3053, line: 21, baseType: !3111, size: 64, offset: 704)
!3111 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3112, size: 64)
!3112 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "icmpv6_mib", file: !3058, line: 71, size: 384, elements: !3113)
!3113 = !{!3114}
!3114 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !3112, file: !3058, line: 72, baseType: !3115, size: 384)
!3115 = !DICompositeType(tag: DW_TAG_array_type, baseType: !312, size: 384, elements: !999)
!3116 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6msg_statistics", scope: !3052, file: !3053, line: 22, baseType: !3117, size: 64, offset: 768)
!3117 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3118, size: 64)
!3118 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "icmpv6msg_mib", file: !3058, line: 81, size: 32768, elements: !3119)
!3119 = !{!3120}
!3120 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !3118, file: !3058, line: 82, baseType: !3103, size: 32768)
!3121 = !DIDerivedType(tag: DW_TAG_member, name: "packet", scope: !2983, file: !2984, line: 123, baseType: !3122, size: 256, offset: 3840)
!3122 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_packet", file: !3123, line: 11, size: 256, elements: !3124)
!3123 = !DIFile(filename: "./include/net/netns/packet.h", directory: "/home/lizy2001/genbc/linux")
!3124 = !{!3125, !3126}
!3125 = !DIDerivedType(tag: DW_TAG_member, name: "sklist_lock", scope: !3122, file: !3123, line: 12, baseType: !1665, size: 192)
!3126 = !DIDerivedType(tag: DW_TAG_member, name: "sklist", scope: !3122, file: !3123, line: 13, baseType: !1581, size: 64, offset: 192)
!3127 = !DIDerivedType(tag: DW_TAG_member, name: "unx", scope: !2983, file: !2984, line: 124, baseType: !3128, size: 128, offset: 4096)
!3128 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_unix", file: !3129, line: 9, size: 128, elements: !3130)
!3129 = !DIFile(filename: "./include/net/netns/unix.h", directory: "/home/lizy2001/genbc/linux")
!3130 = !{!3131, !3132}
!3131 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_max_dgram_qlen", scope: !3128, file: !3129, line: 10, baseType: !32, size: 32)
!3132 = !DIDerivedType(tag: DW_TAG_member, name: "ctl", scope: !3128, file: !3129, line: 11, baseType: !2903, size: 64, offset: 64)
!3133 = !DIDerivedType(tag: DW_TAG_member, name: "nexthop", scope: !2983, file: !2984, line: 125, baseType: !3134, size: 512, offset: 4224)
!3134 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_nexthop", file: !3135, line: 11, size: 512, elements: !3136)
!3135 = !DIFile(filename: "./include/net/netns/nexthop.h", directory: "/home/lizy2001/genbc/linux")
!3136 = !{!3137, !3138, !3139, !3140, !3141}
!3137 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !3134, file: !3135, line: 12, baseType: !1750, size: 64)
!3138 = !DIDerivedType(tag: DW_TAG_member, name: "devhash", scope: !3134, file: !3135, line: 13, baseType: !3021, size: 64, offset: 64)
!3139 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !3134, file: !3135, line: 15, baseType: !7, size: 32, offset: 128)
!3140 = !DIDerivedType(tag: DW_TAG_member, name: "last_id_allocated", scope: !3134, file: !3135, line: 16, baseType: !987, size: 32, offset: 160)
!3141 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_chain", scope: !3134, file: !3135, line: 17, baseType: !3142, size: 320, offset: 192)
!3142 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blocking_notifier_head", file: !3025, line: 65, size: 320, elements: !3143)
!3143 = !{!3144, !3145}
!3144 = !DIDerivedType(tag: DW_TAG_member, name: "rwsem", scope: !3142, file: !3025, line: 66, baseType: !1755, size: 256)
!3145 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3142, file: !3025, line: 67, baseType: !3028, size: 64, offset: 256)
!3146 = !DIDerivedType(tag: DW_TAG_member, name: "ipv4", scope: !2983, file: !2984, line: 126, baseType: !3147, size: 5440, offset: 4736)
!3147 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_ipv4", file: !3148, line: 43, size: 5440, elements: !3149)
!3148 = !DIFile(filename: "./include/net/netns/ipv4.h", directory: "/home/lizy2001/genbc/linux")
!3149 = !{!3150, !3151, !3152, !3153, !3154, !3155, !3158, !3159, !3162, !3163, !3164, !3165, !3166, !3167, !3169, !3170, !3173, !3174, !3315, !3316, !3317, !3318, !3319, !3320, !3321, !3333, !3334, !3335, !3336, !3337, !3338, !3339, !3340, !3341, !3342, !3343, !3344, !3345, !3346, !3347, !3348, !3349, !3350, !3351, !3352, !3353, !3354, !3355, !3356, !3357, !3358, !3359, !3360, !3361, !3362, !3363, !3364, !3365, !3366, !3367, !3368, !3369, !3370, !3371, !3372, !3373, !3374, !3375, !3376, !3377, !3378, !3379, !3380, !3381, !3382, !3383, !3384, !3385, !3386, !3387, !3388, !3389, !3390, !3391, !3392, !3393, !3394, !3395, !3396, !3397, !3399, !3400, !3401, !3402, !3403, !3411, !3412, !3413, !3417, !3420, !3421, !3422, !3423, !3424, !3425, !3426, !3427, !3428, !3429, !3430, !3431, !3437, !3438, !3440, !3441, !3444, !3445, !3446, !3447, !3448}
!3150 = !DIDerivedType(tag: DW_TAG_member, name: "forw_hdr", scope: !3147, file: !3148, line: 45, baseType: !2903, size: 64)
!3151 = !DIDerivedType(tag: DW_TAG_member, name: "frags_hdr", scope: !3147, file: !3148, line: 46, baseType: !2903, size: 64, offset: 64)
!3152 = !DIDerivedType(tag: DW_TAG_member, name: "ipv4_hdr", scope: !3147, file: !3148, line: 47, baseType: !2903, size: 64, offset: 128)
!3153 = !DIDerivedType(tag: DW_TAG_member, name: "route_hdr", scope: !3147, file: !3148, line: 48, baseType: !2903, size: 64, offset: 192)
!3154 = !DIDerivedType(tag: DW_TAG_member, name: "xfrm4_hdr", scope: !3147, file: !3148, line: 49, baseType: !2903, size: 64, offset: 256)
!3155 = !DIDerivedType(tag: DW_TAG_member, name: "devconf_all", scope: !3147, file: !3148, line: 51, baseType: !3156, size: 64, offset: 320)
!3156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3157, size: 64)
!3157 = !DICompositeType(tag: DW_TAG_structure_type, name: "ipv4_devconf", file: !3148, line: 16, flags: DIFlagFwdDecl)
!3158 = !DIDerivedType(tag: DW_TAG_member, name: "devconf_dflt", scope: !3147, file: !3148, line: 52, baseType: !3156, size: 64, offset: 384)
!3159 = !DIDerivedType(tag: DW_TAG_member, name: "ra_chain", scope: !3147, file: !3148, line: 53, baseType: !3160, size: 64, offset: 448)
!3160 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3161, size: 64)
!3161 = !DICompositeType(tag: DW_TAG_structure_type, name: "ip_ra_chain", file: !3148, line: 53, flags: DIFlagFwdDecl)
!3162 = !DIDerivedType(tag: DW_TAG_member, name: "ra_mutex", scope: !3147, file: !3148, line: 54, baseType: !1665, size: 192, offset: 512)
!3163 = !DIDerivedType(tag: DW_TAG_member, name: "fib_has_custom_local_routes", scope: !3147, file: !3148, line: 62, baseType: !771, size: 8, offset: 704)
!3164 = !DIDerivedType(tag: DW_TAG_member, name: "fib_table_hash", scope: !3147, file: !3148, line: 66, baseType: !3021, size: 64, offset: 768)
!3165 = !DIDerivedType(tag: DW_TAG_member, name: "fib_offload_disabled", scope: !3147, file: !3148, line: 67, baseType: !771, size: 8, offset: 832)
!3166 = !DIDerivedType(tag: DW_TAG_member, name: "fibnl", scope: !3147, file: !3148, line: 68, baseType: !445, size: 64, offset: 896)
!3167 = !DIDerivedType(tag: DW_TAG_member, name: "icmp_sk", scope: !3147, file: !3148, line: 70, baseType: !3168, size: 64, offset: 960)
!3168 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !445, size: 64)
!3169 = !DIDerivedType(tag: DW_TAG_member, name: "mc_autojoin_sk", scope: !3147, file: !3148, line: 71, baseType: !445, size: 64, offset: 1024)
!3170 = !DIDerivedType(tag: DW_TAG_member, name: "peers", scope: !3147, file: !3148, line: 73, baseType: !3171, size: 64, offset: 1088)
!3171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3172, size: 64)
!3172 = !DICompositeType(tag: DW_TAG_structure_type, name: "inet_peer_base", file: !3148, line: 73, flags: DIFlagFwdDecl)
!3173 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_sk", scope: !3147, file: !3148, line: 74, baseType: !3168, size: 64, offset: 1152)
!3174 = !DIDerivedType(tag: DW_TAG_member, name: "fqdir", scope: !3147, file: !3148, line: 75, baseType: !3175, size: 64, offset: 1216)
!3175 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3176, size: 64)
!3176 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fqdir", file: !3177, line: 9, size: 1728, elements: !3178)
!3177 = !DIFile(filename: "./include/net/inet_frag.h", directory: "/home/lizy2001/genbc/linux")
!3178 = !{!3179, !3180, !3181, !3182, !3183, !3310, !3311, !3312, !3313, !3314}
!3179 = !DIDerivedType(tag: DW_TAG_member, name: "high_thresh", scope: !3176, file: !3177, line: 11, baseType: !998, size: 64)
!3180 = !DIDerivedType(tag: DW_TAG_member, name: "low_thresh", scope: !3176, file: !3177, line: 12, baseType: !998, size: 64, offset: 64)
!3181 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !3176, file: !3177, line: 13, baseType: !32, size: 32, offset: 128)
!3182 = !DIDerivedType(tag: DW_TAG_member, name: "max_dist", scope: !3176, file: !3177, line: 14, baseType: !32, size: 32, offset: 160)
!3183 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !3176, file: !3177, line: 15, baseType: !3184, size: 64, offset: 192)
!3184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3185, size: 64)
!3185 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inet_frags", file: !3177, line: 98, size: 960, elements: !3186)
!3186 = !{!3187, !3188, !3260, !3264, !3265, !3266, !3267, !3308, !3309}
!3187 = !DIDerivedType(tag: DW_TAG_member, name: "qsize", scope: !3185, file: !3177, line: 99, baseType: !7, size: 32)
!3188 = !DIDerivedType(tag: DW_TAG_member, name: "constructor", scope: !3185, file: !3177, line: 101, baseType: !3189, size: 64, offset: 64)
!3189 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3190, size: 64)
!3190 = !DISubroutineType(types: !3191)
!3191 = !{null, !3192, !3258}
!3192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3193, size: 64)
!3193 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inet_frag_queue", file: !3177, line: 77, size: 1408, elements: !3194)
!3194 = !{!3195, !3201, !3234, !3246, !3247, !3248, !3249, !3250, !3251, !3252, !3253, !3254, !3255, !3256, !3257}
!3195 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3193, file: !3177, line: 78, baseType: !3196, size: 64)
!3196 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rhash_head", file: !3197, line: 17, size: 64, elements: !3198)
!3197 = !DIFile(filename: "./include/linux/rhashtable-types.h", directory: "/home/lizy2001/genbc/linux")
!3198 = !{!3199}
!3199 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3196, file: !3197, line: 18, baseType: !3200, size: 64)
!3200 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3196, size: 64)
!3201 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !3193, file: !3177, line: 82, baseType: !3202, size: 352, offset: 64)
!3202 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3193, file: !3177, line: 79, size: 352, elements: !3203)
!3203 = !{!3204, !3214}
!3204 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !3202, file: !3177, line: 80, baseType: !3205, size: 160)
!3205 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "frag_v4_compare_key", file: !3177, line: 41, size: 160, elements: !3206)
!3206 = !{!3207, !3209, !3210, !3211, !3212, !3213}
!3207 = !DIDerivedType(tag: DW_TAG_member, name: "saddr", scope: !3205, file: !3177, line: 42, baseType: !3208, size: 32)
!3208 = !DIDerivedType(tag: DW_TAG_typedef, name: "__be32", file: !525, line: 32, baseType: !493)
!3209 = !DIDerivedType(tag: DW_TAG_member, name: "daddr", scope: !3205, file: !3177, line: 43, baseType: !3208, size: 32, offset: 32)
!3210 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !3205, file: !3177, line: 44, baseType: !987, size: 32, offset: 64)
!3211 = !DIDerivedType(tag: DW_TAG_member, name: "vif", scope: !3205, file: !3177, line: 45, baseType: !987, size: 32, offset: 96)
!3212 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3205, file: !3177, line: 46, baseType: !535, size: 16, offset: 128)
!3213 = !DIDerivedType(tag: DW_TAG_member, name: "protocol", scope: !3205, file: !3177, line: 47, baseType: !581, size: 16, offset: 144)
!3214 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !3202, file: !3177, line: 81, baseType: !3215, size: 352)
!3215 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "frag_v6_compare_key", file: !3177, line: 50, size: 352, elements: !3216)
!3216 = !{!3217, !3230, !3231, !3232, !3233}
!3217 = !DIDerivedType(tag: DW_TAG_member, name: "saddr", scope: !3215, file: !3177, line: 51, baseType: !3218, size: 128)
!3218 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "in6_addr", file: !3219, line: 33, size: 128, elements: !3220)
!3219 = !DIFile(filename: "./include/uapi/linux/in6.h", directory: "/home/lizy2001/genbc/linux")
!3220 = !{!3221}
!3221 = !DIDerivedType(tag: DW_TAG_member, name: "in6_u", scope: !3218, file: !3219, line: 40, baseType: !3222, size: 128)
!3222 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3218, file: !3219, line: 34, size: 128, elements: !3223)
!3223 = !{!3224, !3226, !3228}
!3224 = !DIDerivedType(tag: DW_TAG_member, name: "u6_addr8", scope: !3222, file: !3219, line: 35, baseType: !3225, size: 128)
!3225 = !DICompositeType(tag: DW_TAG_array_type, baseType: !481, size: 128, elements: !269)
!3226 = !DIDerivedType(tag: DW_TAG_member, name: "u6_addr16", scope: !3222, file: !3219, line: 37, baseType: !3227, size: 128)
!3227 = !DICompositeType(tag: DW_TAG_array_type, baseType: !535, size: 128, elements: !2433)
!3228 = !DIDerivedType(tag: DW_TAG_member, name: "u6_addr32", scope: !3222, file: !3219, line: 38, baseType: !3229, size: 128)
!3229 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3208, size: 128, elements: !2272)
!3230 = !DIDerivedType(tag: DW_TAG_member, name: "daddr", scope: !3215, file: !3177, line: 52, baseType: !3218, size: 128, offset: 128)
!3231 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !3215, file: !3177, line: 53, baseType: !987, size: 32, offset: 256)
!3232 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3215, file: !3177, line: 54, baseType: !3208, size: 32, offset: 288)
!3233 = !DIDerivedType(tag: DW_TAG_member, name: "iif", scope: !3215, file: !3177, line: 55, baseType: !987, size: 32, offset: 320)
!3234 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !3193, file: !3177, line: 83, baseType: !3235, size: 320, offset: 448)
!3235 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timer_list", file: !3236, line: 11, size: 320, elements: !3237)
!3236 = !DIFile(filename: "./include/linux/timer.h", directory: "/home/lizy2001/genbc/linux")
!3237 = !{!3238, !3239, !3240, !3245}
!3238 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !3235, file: !3236, line: 16, baseType: !276, size: 128)
!3239 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !3235, file: !3236, line: 17, baseType: !312, size: 64, offset: 128)
!3240 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !3235, file: !3236, line: 18, baseType: !3241, size: 64, offset: 192)
!3241 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3242, size: 64)
!3242 = !DISubroutineType(types: !3243)
!3243 = !{null, !3244}
!3244 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3235, size: 64)
!3245 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3235, file: !3236, line: 19, baseType: !987, size: 32, offset: 256)
!3246 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3193, file: !3177, line: 84, baseType: !1670, offset: 768)
!3247 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !3193, file: !3177, line: 85, baseType: !568, size: 32, offset: 768)
!3248 = !DIDerivedType(tag: DW_TAG_member, name: "rb_fragments", scope: !3193, file: !3177, line: 86, baseType: !1750, size: 64, offset: 832)
!3249 = !DIDerivedType(tag: DW_TAG_member, name: "fragments_tail", scope: !3193, file: !3177, line: 87, baseType: !415, size: 64, offset: 896)
!3250 = !DIDerivedType(tag: DW_TAG_member, name: "last_run_head", scope: !3193, file: !3177, line: 88, baseType: !415, size: 64, offset: 960)
!3251 = !DIDerivedType(tag: DW_TAG_member, name: "stamp", scope: !3193, file: !3177, line: 89, baseType: !453, size: 64, offset: 1024)
!3252 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !3193, file: !3177, line: 90, baseType: !32, size: 32, offset: 1088)
!3253 = !DIDerivedType(tag: DW_TAG_member, name: "meat", scope: !3193, file: !3177, line: 91, baseType: !32, size: 32, offset: 1120)
!3254 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3193, file: !3177, line: 92, baseType: !481, size: 8, offset: 1152)
!3255 = !DIDerivedType(tag: DW_TAG_member, name: "max_size", scope: !3193, file: !3177, line: 93, baseType: !581, size: 16, offset: 1168)
!3256 = !DIDerivedType(tag: DW_TAG_member, name: "fqdir", scope: !3193, file: !3177, line: 94, baseType: !3175, size: 64, offset: 1216)
!3257 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !3193, file: !3177, line: 95, baseType: !299, size: 128, align: 64, offset: 1280)
!3258 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3259, size: 64)
!3259 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!3260 = !DIDerivedType(tag: DW_TAG_member, name: "destructor", scope: !3185, file: !3177, line: 103, baseType: !3261, size: 64, offset: 128)
!3261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3262, size: 64)
!3262 = !DISubroutineType(types: !3263)
!3263 = !{null, !3192}
!3264 = !DIDerivedType(tag: DW_TAG_member, name: "frag_expire", scope: !3185, file: !3177, line: 104, baseType: !3241, size: 64, offset: 192)
!3265 = !DIDerivedType(tag: DW_TAG_member, name: "frags_cachep", scope: !3185, file: !3177, line: 105, baseType: !2051, size: 64, offset: 256)
!3266 = !DIDerivedType(tag: DW_TAG_member, name: "frags_cache_name", scope: !3185, file: !3177, line: 106, baseType: !292, size: 64, offset: 320)
!3267 = !DIDerivedType(tag: DW_TAG_member, name: "rhash_params", scope: !3185, file: !3177, line: 107, baseType: !3268, size: 320, offset: 384)
!3268 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rhashtable_params", file: !3197, line: 56, size: 320, elements: !3269)
!3269 = !{!3270, !3271, !3272, !3273, !3274, !3275, !3276, !3277, !3282, !3284}
!3270 = !DIDerivedType(tag: DW_TAG_member, name: "nelem_hint", scope: !3268, file: !3197, line: 57, baseType: !581, size: 16)
!3271 = !DIDerivedType(tag: DW_TAG_member, name: "key_len", scope: !3268, file: !3197, line: 58, baseType: !581, size: 16, offset: 16)
!3272 = !DIDerivedType(tag: DW_TAG_member, name: "key_offset", scope: !3268, file: !3197, line: 59, baseType: !581, size: 16, offset: 32)
!3273 = !DIDerivedType(tag: DW_TAG_member, name: "head_offset", scope: !3268, file: !3197, line: 60, baseType: !581, size: 16, offset: 48)
!3274 = !DIDerivedType(tag: DW_TAG_member, name: "max_size", scope: !3268, file: !3197, line: 61, baseType: !7, size: 32, offset: 64)
!3275 = !DIDerivedType(tag: DW_TAG_member, name: "min_size", scope: !3268, file: !3197, line: 62, baseType: !581, size: 16, offset: 96)
!3276 = !DIDerivedType(tag: DW_TAG_member, name: "automatic_shrinking", scope: !3268, file: !3197, line: 63, baseType: !771, size: 8, offset: 112)
!3277 = !DIDerivedType(tag: DW_TAG_member, name: "hashfn", scope: !3268, file: !3197, line: 64, baseType: !3278, size: 64, offset: 128)
!3278 = !DIDerivedType(tag: DW_TAG_typedef, name: "rht_hashfn_t", file: !3197, line: 38, baseType: !3279)
!3279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3280, size: 64)
!3280 = !DISubroutineType(types: !3281)
!3281 = !{!987, !3258, !987, !987}
!3282 = !DIDerivedType(tag: DW_TAG_member, name: "obj_hashfn", scope: !3268, file: !3197, line: 65, baseType: !3283, size: 64, offset: 192)
!3283 = !DIDerivedType(tag: DW_TAG_typedef, name: "rht_obj_hashfn_t", file: !3197, line: 39, baseType: !3279)
!3284 = !DIDerivedType(tag: DW_TAG_member, name: "obj_cmpfn", scope: !3268, file: !3197, line: 66, baseType: !3285, size: 64, offset: 256)
!3285 = !DIDerivedType(tag: DW_TAG_typedef, name: "rht_obj_cmpfn_t", file: !3197, line: 40, baseType: !3286)
!3286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3287, size: 64)
!3287 = !DISubroutineType(types: !3288)
!3288 = !{!32, !3289, !3258}
!3289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3290, size: 64)
!3290 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rhashtable_compare_arg", file: !3197, line: 33, size: 128, elements: !3291)
!3291 = !{!3292, !3307}
!3292 = !DIDerivedType(tag: DW_TAG_member, name: "ht", scope: !3290, file: !3197, line: 34, baseType: !3293, size: 64)
!3293 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3294, size: 64)
!3294 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rhashtable", file: !3197, line: 81, size: 1024, elements: !3295)
!3295 = !{!3296, !3299, !3300, !3301, !3302, !3303, !3304, !3305, !3306}
!3296 = !DIDerivedType(tag: DW_TAG_member, name: "tbl", scope: !3294, file: !3197, line: 82, baseType: !3297, size: 64)
!3297 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3298, size: 64)
!3298 = !DICompositeType(tag: DW_TAG_structure_type, name: "bucket_table", file: !3197, line: 26, flags: DIFlagFwdDecl)
!3299 = !DIDerivedType(tag: DW_TAG_member, name: "key_len", scope: !3294, file: !3197, line: 83, baseType: !7, size: 32, offset: 64)
!3300 = !DIDerivedType(tag: DW_TAG_member, name: "max_elems", scope: !3294, file: !3197, line: 84, baseType: !7, size: 32, offset: 96)
!3301 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3294, file: !3197, line: 85, baseType: !3268, size: 320, offset: 128)
!3302 = !DIDerivedType(tag: DW_TAG_member, name: "rhlist", scope: !3294, file: !3197, line: 86, baseType: !771, size: 8, offset: 448)
!3303 = !DIDerivedType(tag: DW_TAG_member, name: "run_work", scope: !3294, file: !3197, line: 87, baseType: !2829, size: 256, offset: 512)
!3304 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !3294, file: !3197, line: 88, baseType: !1665, size: 192, offset: 768)
!3305 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3294, file: !3197, line: 89, baseType: !1670, offset: 960)
!3306 = !DIDerivedType(tag: DW_TAG_member, name: "nelems", scope: !3294, file: !3197, line: 90, baseType: !383, size: 32, offset: 960)
!3307 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !3290, file: !3197, line: 35, baseType: !3258, size: 64, offset: 64)
!3308 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !3185, file: !3177, line: 108, baseType: !568, size: 32, offset: 704)
!3309 = !DIDerivedType(tag: DW_TAG_member, name: "completion", scope: !3185, file: !3177, line: 109, baseType: !2597, size: 192, offset: 768)
!3310 = !DIDerivedType(tag: DW_TAG_member, name: "net", scope: !3176, file: !3177, line: 16, baseType: !2982, size: 64, offset: 256)
!3311 = !DIDerivedType(tag: DW_TAG_member, name: "dead", scope: !3176, file: !3177, line: 17, baseType: !771, size: 8, offset: 320)
!3312 = !DIDerivedType(tag: DW_TAG_member, name: "rhashtable", scope: !3176, file: !3177, line: 19, baseType: !3294, size: 1024, offset: 384)
!3313 = !DIDerivedType(tag: DW_TAG_member, name: "mem", scope: !3176, file: !3177, line: 22, baseType: !371, size: 64, offset: 1408)
!3314 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_work", scope: !3176, file: !3177, line: 23, baseType: !2829, size: 256, offset: 1472)
!3315 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_icmp_echo_ignore_all", scope: !3147, file: !3148, line: 87, baseType: !32, size: 32, offset: 1280)
!3316 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_icmp_echo_ignore_broadcasts", scope: !3147, file: !3148, line: 88, baseType: !32, size: 32, offset: 1312)
!3317 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_icmp_ignore_bogus_error_responses", scope: !3147, file: !3148, line: 89, baseType: !32, size: 32, offset: 1344)
!3318 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_icmp_ratelimit", scope: !3147, file: !3148, line: 90, baseType: !32, size: 32, offset: 1376)
!3319 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_icmp_ratemask", scope: !3147, file: !3148, line: 91, baseType: !32, size: 32, offset: 1408)
!3320 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_icmp_errors_use_inbound_ifaddr", scope: !3147, file: !3148, line: 92, baseType: !32, size: 32, offset: 1440)
!3321 = !DIDerivedType(tag: DW_TAG_member, name: "ip_local_ports", scope: !3147, file: !3148, line: 94, baseType: !3322, size: 128, offset: 1472)
!3322 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "local_ports", file: !3148, line: 21, size: 128, elements: !3323)
!3323 = !{!3324, !3330, !3332}
!3324 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3322, file: !3148, line: 22, baseType: !3325, size: 32)
!3325 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqlock_t", file: !1344, line: 805, baseType: !3326)
!3326 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1344, line: 798, size: 32, elements: !3327)
!3327 = !{!3328, !3329}
!3328 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !3326, file: !1344, line: 803, baseType: !1343, size: 32)
!3329 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3326, file: !1344, line: 804, baseType: !1670, offset: 32)
!3330 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !3322, file: !3148, line: 23, baseType: !3331, size: 64, offset: 32)
!3331 = !DICompositeType(tag: DW_TAG_array_type, baseType: !32, size: 64, elements: !2664)
!3332 = !DIDerivedType(tag: DW_TAG_member, name: "warned", scope: !3322, file: !3148, line: 24, baseType: !771, size: 8, offset: 96)
!3333 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_ecn", scope: !3147, file: !3148, line: 96, baseType: !32, size: 32, offset: 1600)
!3334 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_ecn_fallback", scope: !3147, file: !3148, line: 97, baseType: !32, size: 32, offset: 1632)
!3335 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_default_ttl", scope: !3147, file: !3148, line: 99, baseType: !32, size: 32, offset: 1664)
!3336 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_no_pmtu_disc", scope: !3147, file: !3148, line: 100, baseType: !32, size: 32, offset: 1696)
!3337 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_fwd_use_pmtu", scope: !3147, file: !3148, line: 101, baseType: !32, size: 32, offset: 1728)
!3338 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_fwd_update_priority", scope: !3147, file: !3148, line: 102, baseType: !32, size: 32, offset: 1760)
!3339 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_nonlocal_bind", scope: !3147, file: !3148, line: 103, baseType: !32, size: 32, offset: 1792)
!3340 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_autobind_reuse", scope: !3147, file: !3148, line: 104, baseType: !32, size: 32, offset: 1824)
!3341 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_dynaddr", scope: !3147, file: !3148, line: 106, baseType: !32, size: 32, offset: 1856)
!3342 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_early_demux", scope: !3147, file: !3148, line: 107, baseType: !32, size: 32, offset: 1888)
!3343 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_early_demux", scope: !3147, file: !3148, line: 111, baseType: !32, size: 32, offset: 1920)
!3344 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_udp_early_demux", scope: !3147, file: !3148, line: 112, baseType: !32, size: 32, offset: 1952)
!3345 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_nexthop_compat_mode", scope: !3147, file: !3148, line: 114, baseType: !32, size: 32, offset: 1984)
!3346 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_fwmark_reflect", scope: !3147, file: !3148, line: 116, baseType: !32, size: 32, offset: 2016)
!3347 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_fwmark_accept", scope: !3147, file: !3148, line: 117, baseType: !32, size: 32, offset: 2048)
!3348 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_mtu_probing", scope: !3147, file: !3148, line: 121, baseType: !32, size: 32, offset: 2080)
!3349 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_mtu_probe_floor", scope: !3147, file: !3148, line: 122, baseType: !32, size: 32, offset: 2112)
!3350 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_base_mss", scope: !3147, file: !3148, line: 123, baseType: !32, size: 32, offset: 2144)
!3351 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_min_snd_mss", scope: !3147, file: !3148, line: 124, baseType: !32, size: 32, offset: 2176)
!3352 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_probe_threshold", scope: !3147, file: !3148, line: 125, baseType: !32, size: 32, offset: 2208)
!3353 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_probe_interval", scope: !3147, file: !3148, line: 126, baseType: !987, size: 32, offset: 2240)
!3354 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_keepalive_time", scope: !3147, file: !3148, line: 128, baseType: !32, size: 32, offset: 2272)
!3355 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_keepalive_probes", scope: !3147, file: !3148, line: 129, baseType: !32, size: 32, offset: 2304)
!3356 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_keepalive_intvl", scope: !3147, file: !3148, line: 130, baseType: !32, size: 32, offset: 2336)
!3357 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_syn_retries", scope: !3147, file: !3148, line: 132, baseType: !32, size: 32, offset: 2368)
!3358 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_synack_retries", scope: !3147, file: !3148, line: 133, baseType: !32, size: 32, offset: 2400)
!3359 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_syncookies", scope: !3147, file: !3148, line: 134, baseType: !32, size: 32, offset: 2432)
!3360 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_reordering", scope: !3147, file: !3148, line: 135, baseType: !32, size: 32, offset: 2464)
!3361 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_retries1", scope: !3147, file: !3148, line: 136, baseType: !32, size: 32, offset: 2496)
!3362 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_retries2", scope: !3147, file: !3148, line: 137, baseType: !32, size: 32, offset: 2528)
!3363 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_orphan_retries", scope: !3147, file: !3148, line: 138, baseType: !32, size: 32, offset: 2560)
!3364 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_fin_timeout", scope: !3147, file: !3148, line: 139, baseType: !32, size: 32, offset: 2592)
!3365 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_notsent_lowat", scope: !3147, file: !3148, line: 140, baseType: !7, size: 32, offset: 2624)
!3366 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_tw_reuse", scope: !3147, file: !3148, line: 141, baseType: !32, size: 32, offset: 2656)
!3367 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_sack", scope: !3147, file: !3148, line: 142, baseType: !32, size: 32, offset: 2688)
!3368 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_window_scaling", scope: !3147, file: !3148, line: 143, baseType: !32, size: 32, offset: 2720)
!3369 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_timestamps", scope: !3147, file: !3148, line: 144, baseType: !32, size: 32, offset: 2752)
!3370 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_early_retrans", scope: !3147, file: !3148, line: 145, baseType: !32, size: 32, offset: 2784)
!3371 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_recovery", scope: !3147, file: !3148, line: 146, baseType: !32, size: 32, offset: 2816)
!3372 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_thin_linear_timeouts", scope: !3147, file: !3148, line: 147, baseType: !32, size: 32, offset: 2848)
!3373 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_slow_start_after_idle", scope: !3147, file: !3148, line: 148, baseType: !32, size: 32, offset: 2880)
!3374 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_retrans_collapse", scope: !3147, file: !3148, line: 149, baseType: !32, size: 32, offset: 2912)
!3375 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_stdurg", scope: !3147, file: !3148, line: 150, baseType: !32, size: 32, offset: 2944)
!3376 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_rfc1337", scope: !3147, file: !3148, line: 151, baseType: !32, size: 32, offset: 2976)
!3377 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_abort_on_overflow", scope: !3147, file: !3148, line: 152, baseType: !32, size: 32, offset: 3008)
!3378 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_fack", scope: !3147, file: !3148, line: 153, baseType: !32, size: 32, offset: 3040)
!3379 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_max_reordering", scope: !3147, file: !3148, line: 154, baseType: !32, size: 32, offset: 3072)
!3380 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_dsack", scope: !3147, file: !3148, line: 155, baseType: !32, size: 32, offset: 3104)
!3381 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_app_win", scope: !3147, file: !3148, line: 156, baseType: !32, size: 32, offset: 3136)
!3382 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_adv_win_scale", scope: !3147, file: !3148, line: 157, baseType: !32, size: 32, offset: 3168)
!3383 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_frto", scope: !3147, file: !3148, line: 158, baseType: !32, size: 32, offset: 3200)
!3384 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_nometrics_save", scope: !3147, file: !3148, line: 159, baseType: !32, size: 32, offset: 3232)
!3385 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_no_ssthresh_metrics_save", scope: !3147, file: !3148, line: 160, baseType: !32, size: 32, offset: 3264)
!3386 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_moderate_rcvbuf", scope: !3147, file: !3148, line: 161, baseType: !32, size: 32, offset: 3296)
!3387 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_tso_win_divisor", scope: !3147, file: !3148, line: 162, baseType: !32, size: 32, offset: 3328)
!3388 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_workaround_signed_windows", scope: !3147, file: !3148, line: 163, baseType: !32, size: 32, offset: 3360)
!3389 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_limit_output_bytes", scope: !3147, file: !3148, line: 164, baseType: !32, size: 32, offset: 3392)
!3390 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_challenge_ack_limit", scope: !3147, file: !3148, line: 165, baseType: !32, size: 32, offset: 3424)
!3391 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_min_tso_segs", scope: !3147, file: !3148, line: 166, baseType: !32, size: 32, offset: 3456)
!3392 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_min_rtt_wlen", scope: !3147, file: !3148, line: 167, baseType: !32, size: 32, offset: 3488)
!3393 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_autocorking", scope: !3147, file: !3148, line: 168, baseType: !32, size: 32, offset: 3520)
!3394 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_invalid_ratelimit", scope: !3147, file: !3148, line: 169, baseType: !32, size: 32, offset: 3552)
!3395 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_pacing_ss_ratio", scope: !3147, file: !3148, line: 170, baseType: !32, size: 32, offset: 3584)
!3396 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_pacing_ca_ratio", scope: !3147, file: !3148, line: 171, baseType: !32, size: 32, offset: 3616)
!3397 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_wmem", scope: !3147, file: !3148, line: 172, baseType: !3398, size: 96, offset: 3648)
!3398 = !DICompositeType(tag: DW_TAG_array_type, baseType: !32, size: 96, elements: !1592)
!3399 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_rmem", scope: !3147, file: !3148, line: 173, baseType: !3398, size: 96, offset: 3744)
!3400 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_comp_sack_nr", scope: !3147, file: !3148, line: 174, baseType: !32, size: 32, offset: 3840)
!3401 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_comp_sack_delay_ns", scope: !3147, file: !3148, line: 175, baseType: !312, size: 64, offset: 3904)
!3402 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_comp_sack_slack_ns", scope: !3147, file: !3148, line: 176, baseType: !312, size: 64, offset: 3968)
!3403 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_death_row", scope: !3147, file: !3148, line: 177, baseType: !3404, size: 192, offset: 4032)
!3404 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inet_timewait_death_row", file: !3148, line: 34, size: 192, elements: !3405)
!3405 = !{!3406, !3407, !3410}
!3406 = !DIDerivedType(tag: DW_TAG_member, name: "tw_count", scope: !3404, file: !3148, line: 35, baseType: !383, size: 32)
!3407 = !DIDerivedType(tag: DW_TAG_member, name: "hashinfo", scope: !3404, file: !3148, line: 37, baseType: !3408, size: 64, offset: 64)
!3408 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3409, size: 64)
!3409 = !DICompositeType(tag: DW_TAG_structure_type, name: "inet_hashinfo", file: !3148, line: 32, flags: DIFlagFwdDecl)
!3410 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_max_tw_buckets", scope: !3404, file: !3148, line: 38, baseType: !32, size: 32, offset: 128)
!3411 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_max_syn_backlog", scope: !3147, file: !3148, line: 178, baseType: !32, size: 32, offset: 4224)
!3412 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_fastopen", scope: !3147, file: !3148, line: 179, baseType: !32, size: 32, offset: 4256)
!3413 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_congestion_control", scope: !3147, file: !3148, line: 180, baseType: !3414, size: 64, offset: 4288)
!3414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3415, size: 64)
!3415 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3416)
!3416 = !DICompositeType(tag: DW_TAG_structure_type, name: "tcp_congestion_ops", file: !3148, line: 180, flags: DIFlagFwdDecl)
!3417 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_fastopen_ctx", scope: !3147, file: !3148, line: 181, baseType: !3418, size: 64, offset: 4352)
!3418 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3419, size: 64)
!3419 = !DICompositeType(tag: DW_TAG_structure_type, name: "tcp_fastopen_context", file: !3148, line: 41, flags: DIFlagFwdDecl)
!3420 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_fastopen_ctx_lock", scope: !3147, file: !3148, line: 182, baseType: !1670, offset: 4416)
!3421 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_fastopen_blackhole_timeout", scope: !3147, file: !3148, line: 183, baseType: !7, size: 32, offset: 4416)
!3422 = !DIDerivedType(tag: DW_TAG_member, name: "tfo_active_disable_times", scope: !3147, file: !3148, line: 184, baseType: !383, size: 32, offset: 4448)
!3423 = !DIDerivedType(tag: DW_TAG_member, name: "tfo_active_disable_stamp", scope: !3147, file: !3148, line: 185, baseType: !312, size: 64, offset: 4480)
!3424 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_reflect_tos", scope: !3147, file: !3148, line: 186, baseType: !32, size: 32, offset: 4544)
!3425 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_udp_wmem_min", scope: !3147, file: !3148, line: 188, baseType: !32, size: 32, offset: 4576)
!3426 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_udp_rmem_min", scope: !3147, file: !3148, line: 189, baseType: !32, size: 32, offset: 4608)
!3427 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_igmp_max_memberships", scope: !3147, file: !3148, line: 195, baseType: !32, size: 32, offset: 4640)
!3428 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_igmp_max_msf", scope: !3147, file: !3148, line: 196, baseType: !32, size: 32, offset: 4672)
!3429 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_igmp_llm_reports", scope: !3147, file: !3148, line: 197, baseType: !32, size: 32, offset: 4704)
!3430 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_igmp_qrv", scope: !3147, file: !3148, line: 198, baseType: !32, size: 32, offset: 4736)
!3431 = !DIDerivedType(tag: DW_TAG_member, name: "ping_group_range", scope: !3147, file: !3148, line: 200, baseType: !3432, size: 96, offset: 4768)
!3432 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ping_group_range", file: !3148, line: 27, size: 96, elements: !3433)
!3433 = !{!3434, !3435}
!3434 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3432, file: !3148, line: 28, baseType: !3325, size: 32)
!3435 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !3432, file: !3148, line: 29, baseType: !3436, size: 64, offset: 32)
!3436 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1390, size: 64, elements: !2664)
!3437 = !DIDerivedType(tag: DW_TAG_member, name: "dev_addr_genid", scope: !3147, file: !3148, line: 202, baseType: !383, size: 32, offset: 4864)
!3438 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_local_reserved_ports", scope: !3147, file: !3148, line: 205, baseType: !3439, size: 64, offset: 4928)
!3439 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !312, size: 64)
!3440 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_prot_sock", scope: !3147, file: !3148, line: 206, baseType: !32, size: 32, offset: 4992)
!3441 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_ops", scope: !3147, file: !3148, line: 222, baseType: !3442, size: 64, offset: 5056)
!3442 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3443, size: 64)
!3443 = !DICompositeType(tag: DW_TAG_structure_type, name: "fib_notifier_ops", file: !3148, line: 222, flags: DIFlagFwdDecl)
!3444 = !DIDerivedType(tag: DW_TAG_member, name: "fib_seq", scope: !3147, file: !3148, line: 223, baseType: !7, size: 32, offset: 5120)
!3445 = !DIDerivedType(tag: DW_TAG_member, name: "ipmr_notifier_ops", scope: !3147, file: !3148, line: 225, baseType: !3442, size: 64, offset: 5184)
!3446 = !DIDerivedType(tag: DW_TAG_member, name: "ipmr_seq", scope: !3147, file: !3148, line: 226, baseType: !7, size: 32, offset: 5248)
!3447 = !DIDerivedType(tag: DW_TAG_member, name: "rt_genid", scope: !3147, file: !3148, line: 228, baseType: !383, size: 32, offset: 5280)
!3448 = !DIDerivedType(tag: DW_TAG_member, name: "ip_id_key", scope: !3147, file: !3148, line: 229, baseType: !3449, size: 128, offset: 5312)
!3449 = !DIDerivedType(tag: DW_TAG_typedef, name: "siphash_key_t", file: !3450, line: 22, baseType: !3451)
!3450 = !DIFile(filename: "./include/linux/siphash.h", directory: "/home/lizy2001/genbc/linux")
!3451 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3450, line: 20, size: 128, elements: !3452)
!3452 = !{!3453}
!3453 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !3451, file: !3450, line: 21, baseType: !3454, size: 128)
!3454 = !DICompositeType(tag: DW_TAG_array_type, baseType: !331, size: 128, elements: !2664)
!3455 = !DIDerivedType(tag: DW_TAG_member, name: "ipv6", scope: !2983, file: !2984, line: 128, baseType: !3456, size: 4608, offset: 10176)
!3456 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_ipv6", file: !3457, line: 56, size: 4608, elements: !3458)
!3457 = !DIFile(filename: "./include/net/netns/ipv6.h", directory: "/home/lizy2001/genbc/linux")
!3458 = !{!3459, !3499, !3502, !3503, !3504, !3505, !3508, !3511, !3514, !3515, !3516, !3519, !3520, !3586, !3587, !3588, !3589, !3590, !3591, !3592, !3593, !3594, !3595, !3596, !3597, !3600, !3601, !3602, !3603}
!3459 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl", scope: !3456, file: !3457, line: 57, baseType: !3460, size: 1600)
!3460 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_sysctl_ipv6", file: !3457, line: 15, size: 1600, elements: !3461)
!3461 = !{!3462, !3463, !3464, !3465, !3466, !3467, !3468, !3469, !3470, !3471, !3472, !3473, !3474, !3475, !3476, !3477, !3478, !3479, !3480, !3481, !3482, !3483, !3485, !3486, !3487, !3488, !3489, !3490, !3491, !3492, !3493, !3494, !3495, !3496, !3497, !3498}
!3462 = !DIDerivedType(tag: DW_TAG_member, name: "hdr", scope: !3460, file: !3457, line: 17, baseType: !2903, size: 64)
!3463 = !DIDerivedType(tag: DW_TAG_member, name: "route_hdr", scope: !3460, file: !3457, line: 18, baseType: !2903, size: 64, offset: 64)
!3464 = !DIDerivedType(tag: DW_TAG_member, name: "icmp_hdr", scope: !3460, file: !3457, line: 19, baseType: !2903, size: 64, offset: 128)
!3465 = !DIDerivedType(tag: DW_TAG_member, name: "frags_hdr", scope: !3460, file: !3457, line: 20, baseType: !2903, size: 64, offset: 192)
!3466 = !DIDerivedType(tag: DW_TAG_member, name: "xfrm6_hdr", scope: !3460, file: !3457, line: 21, baseType: !2903, size: 64, offset: 256)
!3467 = !DIDerivedType(tag: DW_TAG_member, name: "bindv6only", scope: !3460, file: !3457, line: 23, baseType: !32, size: 32, offset: 320)
!3468 = !DIDerivedType(tag: DW_TAG_member, name: "flush_delay", scope: !3460, file: !3457, line: 24, baseType: !32, size: 32, offset: 352)
!3469 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_max_size", scope: !3460, file: !3457, line: 25, baseType: !32, size: 32, offset: 384)
!3470 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_gc_min_interval", scope: !3460, file: !3457, line: 26, baseType: !32, size: 32, offset: 416)
!3471 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_gc_timeout", scope: !3460, file: !3457, line: 27, baseType: !32, size: 32, offset: 448)
!3472 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_gc_interval", scope: !3460, file: !3457, line: 28, baseType: !32, size: 32, offset: 480)
!3473 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_gc_elasticity", scope: !3460, file: !3457, line: 29, baseType: !32, size: 32, offset: 512)
!3474 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_mtu_expires", scope: !3460, file: !3457, line: 30, baseType: !32, size: 32, offset: 544)
!3475 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_min_advmss", scope: !3460, file: !3457, line: 31, baseType: !32, size: 32, offset: 576)
!3476 = !DIDerivedType(tag: DW_TAG_member, name: "multipath_hash_policy", scope: !3460, file: !3457, line: 32, baseType: !32, size: 32, offset: 608)
!3477 = !DIDerivedType(tag: DW_TAG_member, name: "flowlabel_consistency", scope: !3460, file: !3457, line: 33, baseType: !32, size: 32, offset: 640)
!3478 = !DIDerivedType(tag: DW_TAG_member, name: "auto_flowlabels", scope: !3460, file: !3457, line: 34, baseType: !32, size: 32, offset: 672)
!3479 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6_time", scope: !3460, file: !3457, line: 35, baseType: !32, size: 32, offset: 704)
!3480 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6_echo_ignore_all", scope: !3460, file: !3457, line: 36, baseType: !32, size: 32, offset: 736)
!3481 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6_echo_ignore_multicast", scope: !3460, file: !3457, line: 37, baseType: !32, size: 32, offset: 768)
!3482 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6_echo_ignore_anycast", scope: !3460, file: !3457, line: 38, baseType: !32, size: 32, offset: 800)
!3483 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6_ratemask", scope: !3460, file: !3457, line: 39, baseType: !3484, size: 256, offset: 832)
!3484 = !DICompositeType(tag: DW_TAG_array_type, baseType: !312, size: 256, elements: !2272)
!3485 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6_ratemask_ptr", scope: !3460, file: !3457, line: 40, baseType: !3439, size: 64, offset: 1088)
!3486 = !DIDerivedType(tag: DW_TAG_member, name: "anycast_src_echo_reply", scope: !3460, file: !3457, line: 41, baseType: !32, size: 32, offset: 1152)
!3487 = !DIDerivedType(tag: DW_TAG_member, name: "ip_nonlocal_bind", scope: !3460, file: !3457, line: 42, baseType: !32, size: 32, offset: 1184)
!3488 = !DIDerivedType(tag: DW_TAG_member, name: "fwmark_reflect", scope: !3460, file: !3457, line: 43, baseType: !32, size: 32, offset: 1216)
!3489 = !DIDerivedType(tag: DW_TAG_member, name: "idgen_retries", scope: !3460, file: !3457, line: 44, baseType: !32, size: 32, offset: 1248)
!3490 = !DIDerivedType(tag: DW_TAG_member, name: "idgen_delay", scope: !3460, file: !3457, line: 45, baseType: !32, size: 32, offset: 1280)
!3491 = !DIDerivedType(tag: DW_TAG_member, name: "flowlabel_state_ranges", scope: !3460, file: !3457, line: 46, baseType: !32, size: 32, offset: 1312)
!3492 = !DIDerivedType(tag: DW_TAG_member, name: "flowlabel_reflect", scope: !3460, file: !3457, line: 47, baseType: !32, size: 32, offset: 1344)
!3493 = !DIDerivedType(tag: DW_TAG_member, name: "max_dst_opts_cnt", scope: !3460, file: !3457, line: 48, baseType: !32, size: 32, offset: 1376)
!3494 = !DIDerivedType(tag: DW_TAG_member, name: "max_hbh_opts_cnt", scope: !3460, file: !3457, line: 49, baseType: !32, size: 32, offset: 1408)
!3495 = !DIDerivedType(tag: DW_TAG_member, name: "max_dst_opts_len", scope: !3460, file: !3457, line: 50, baseType: !32, size: 32, offset: 1440)
!3496 = !DIDerivedType(tag: DW_TAG_member, name: "max_hbh_opts_len", scope: !3460, file: !3457, line: 51, baseType: !32, size: 32, offset: 1472)
!3497 = !DIDerivedType(tag: DW_TAG_member, name: "seg6_flowlabel", scope: !3460, file: !3457, line: 52, baseType: !32, size: 32, offset: 1504)
!3498 = !DIDerivedType(tag: DW_TAG_member, name: "skip_notify_on_dev_down", scope: !3460, file: !3457, line: 53, baseType: !771, size: 8, offset: 1536)
!3499 = !DIDerivedType(tag: DW_TAG_member, name: "devconf_all", scope: !3456, file: !3457, line: 58, baseType: !3500, size: 64, offset: 1600)
!3500 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3501, size: 64)
!3501 = !DICompositeType(tag: DW_TAG_structure_type, name: "ipv6_devconf", file: !3457, line: 58, flags: DIFlagFwdDecl)
!3502 = !DIDerivedType(tag: DW_TAG_member, name: "devconf_dflt", scope: !3456, file: !3457, line: 59, baseType: !3500, size: 64, offset: 1664)
!3503 = !DIDerivedType(tag: DW_TAG_member, name: "peers", scope: !3456, file: !3457, line: 60, baseType: !3171, size: 64, offset: 1728)
!3504 = !DIDerivedType(tag: DW_TAG_member, name: "fqdir", scope: !3456, file: !3457, line: 61, baseType: !3175, size: 64, offset: 1792)
!3505 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_null_entry", scope: !3456, file: !3457, line: 71, baseType: !3506, size: 64, offset: 1856)
!3506 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3507, size: 64)
!3507 = !DICompositeType(tag: DW_TAG_structure_type, name: "fib6_info", file: !3457, line: 71, flags: DIFlagFwdDecl)
!3508 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_null_entry", scope: !3456, file: !3457, line: 72, baseType: !3509, size: 64, offset: 1920)
!3509 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3510, size: 64)
!3510 = !DICompositeType(tag: DW_TAG_structure_type, name: "rt6_info", file: !3457, line: 72, flags: DIFlagFwdDecl)
!3511 = !DIDerivedType(tag: DW_TAG_member, name: "rt6_stats", scope: !3456, file: !3457, line: 73, baseType: !3512, size: 64, offset: 1984)
!3512 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3513, size: 64)
!3513 = !DICompositeType(tag: DW_TAG_structure_type, name: "rt6_statistics", file: !3457, line: 73, flags: DIFlagFwdDecl)
!3514 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_fib_timer", scope: !3456, file: !3457, line: 74, baseType: !3235, size: 320, offset: 2048)
!3515 = !DIDerivedType(tag: DW_TAG_member, name: "fib_table_hash", scope: !3456, file: !3457, line: 75, baseType: !3021, size: 64, offset: 2368)
!3516 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_main_tbl", scope: !3456, file: !3457, line: 76, baseType: !3517, size: 64, offset: 2432)
!3517 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3518, size: 64)
!3518 = !DICompositeType(tag: DW_TAG_structure_type, name: "fib6_table", file: !3457, line: 76, flags: DIFlagFwdDecl)
!3519 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_walkers", scope: !3456, file: !3457, line: 77, baseType: !284, size: 128, offset: 2496)
!3520 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_dst_ops", scope: !3456, file: !3457, line: 78, baseType: !3521, size: 1088, offset: 2624)
!3521 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dst_ops", file: !925, line: 15, size: 1088, elements: !3522)
!3522 = !{!3523, !3524, !3525, !3530, !3536, !3542, !3543, !3547, !3551, !3555, !3559, !3560, !3564, !3568, !3572, !3576, !3580, !3581}
!3523 = !DIDerivedType(tag: DW_TAG_member, name: "family", scope: !3521, file: !925, line: 16, baseType: !476, size: 16)
!3524 = !DIDerivedType(tag: DW_TAG_member, name: "gc_thresh", scope: !3521, file: !925, line: 17, baseType: !7, size: 32, offset: 32)
!3525 = !DIDerivedType(tag: DW_TAG_member, name: "gc", scope: !3521, file: !925, line: 19, baseType: !3526, size: 64, offset: 64)
!3526 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3527, size: 64)
!3527 = !DISubroutineType(types: !3528)
!3528 = !{!32, !3529}
!3529 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3521, size: 64)
!3530 = !DIDerivedType(tag: DW_TAG_member, name: "check", scope: !3521, file: !925, line: 20, baseType: !3531, size: 64, offset: 128)
!3531 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3532, size: 64)
!3532 = !DISubroutineType(types: !3533)
!3533 = !{!3534, !3534, !493}
!3534 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3535, size: 64)
!3535 = !DICompositeType(tag: DW_TAG_structure_type, name: "dst_entry", file: !417, line: 956, flags: DIFlagFwdDecl)
!3536 = !DIDerivedType(tag: DW_TAG_member, name: "default_advmss", scope: !3521, file: !925, line: 21, baseType: !3537, size: 64, offset: 192)
!3537 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3538, size: 64)
!3538 = !DISubroutineType(types: !3539)
!3539 = !{!7, !3540}
!3540 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3541, size: 64)
!3541 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3535)
!3542 = !DIDerivedType(tag: DW_TAG_member, name: "mtu", scope: !3521, file: !925, line: 22, baseType: !3537, size: 64, offset: 256)
!3543 = !DIDerivedType(tag: DW_TAG_member, name: "cow_metrics", scope: !3521, file: !925, line: 23, baseType: !3544, size: 64, offset: 320)
!3544 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3545, size: 64)
!3545 = !DISubroutineType(types: !3546)
!3546 = !{!2516, !3534, !312}
!3547 = !DIDerivedType(tag: DW_TAG_member, name: "destroy", scope: !3521, file: !925, line: 24, baseType: !3548, size: 64, offset: 384)
!3548 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3549, size: 64)
!3549 = !DISubroutineType(types: !3550)
!3550 = !{null, !3534}
!3551 = !DIDerivedType(tag: DW_TAG_member, name: "ifdown", scope: !3521, file: !925, line: 25, baseType: !3552, size: 64, offset: 448)
!3552 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3553, size: 64)
!3553 = !DISubroutineType(types: !3554)
!3554 = !{null, !3534, !290, !32}
!3555 = !DIDerivedType(tag: DW_TAG_member, name: "negative_advice", scope: !3521, file: !925, line: 27, baseType: !3556, size: 64, offset: 512)
!3556 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3557, size: 64)
!3557 = !DISubroutineType(types: !3558)
!3558 = !{!3534, !3534}
!3559 = !DIDerivedType(tag: DW_TAG_member, name: "link_failure", scope: !3521, file: !925, line: 28, baseType: !468, size: 64, offset: 576)
!3560 = !DIDerivedType(tag: DW_TAG_member, name: "update_pmtu", scope: !3521, file: !925, line: 29, baseType: !3561, size: 64, offset: 640)
!3561 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3562, size: 64)
!3562 = !DISubroutineType(types: !3563)
!3563 = !{null, !3534, !445, !415, !987, !771}
!3564 = !DIDerivedType(tag: DW_TAG_member, name: "redirect", scope: !3521, file: !925, line: 32, baseType: !3565, size: 64, offset: 704)
!3565 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3566, size: 64)
!3566 = !DISubroutineType(types: !3567)
!3567 = !{null, !3534, !445, !415}
!3568 = !DIDerivedType(tag: DW_TAG_member, name: "local_out", scope: !3521, file: !925, line: 34, baseType: !3569, size: 64, offset: 768)
!3569 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3570, size: 64)
!3570 = !DISubroutineType(types: !3571)
!3571 = !{!32, !2982, !445, !415}
!3572 = !DIDerivedType(tag: DW_TAG_member, name: "neigh_lookup", scope: !3521, file: !925, line: 35, baseType: !3573, size: 64, offset: 832)
!3573 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3574, size: 64)
!3574 = !DISubroutineType(types: !3575)
!3575 = !{!923, !3540, !415, !3258}
!3576 = !DIDerivedType(tag: DW_TAG_member, name: "confirm_neigh", scope: !3521, file: !925, line: 38, baseType: !3577, size: 64, offset: 896)
!3577 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3578, size: 64)
!3578 = !DISubroutineType(types: !3579)
!3579 = !{null, !3540, !3258}
!3580 = !DIDerivedType(tag: DW_TAG_member, name: "kmem_cachep", scope: !3521, file: !925, line: 41, baseType: !2051, size: 64, offset: 960)
!3581 = !DIDerivedType(tag: DW_TAG_member, name: "pcpuc_entries", scope: !3521, file: !925, line: 43, baseType: !3582, size: 64, offset: 1024)
!3582 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_counter", file: !3583, line: 97, size: 64, elements: !3584)
!3583 = !DIFile(filename: "./include/linux/percpu_counter.h", directory: "/home/lizy2001/genbc/linux")
!3584 = !{!3585}
!3585 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3582, file: !3583, line: 98, baseType: !377, size: 64)
!3586 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_walker_lock", scope: !3456, file: !3457, line: 79, baseType: !1912, offset: 3712)
!3587 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_gc_lock", scope: !3456, file: !3457, line: 80, baseType: !1670, offset: 3712)
!3588 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_gc_expire", scope: !3456, file: !3457, line: 81, baseType: !7, size: 32, offset: 3712)
!3589 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_last_gc", scope: !3456, file: !3457, line: 82, baseType: !312, size: 64, offset: 3776)
!3590 = !DIDerivedType(tag: DW_TAG_member, name: "icmp_sk", scope: !3456, file: !3457, line: 94, baseType: !3168, size: 64, offset: 3840)
!3591 = !DIDerivedType(tag: DW_TAG_member, name: "ndisc_sk", scope: !3456, file: !3457, line: 95, baseType: !445, size: 64, offset: 3904)
!3592 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_sk", scope: !3456, file: !3457, line: 96, baseType: !445, size: 64, offset: 3968)
!3593 = !DIDerivedType(tag: DW_TAG_member, name: "igmp_sk", scope: !3456, file: !3457, line: 97, baseType: !445, size: 64, offset: 4032)
!3594 = !DIDerivedType(tag: DW_TAG_member, name: "mc_autojoin_sk", scope: !3456, file: !3457, line: 98, baseType: !445, size: 64, offset: 4096)
!3595 = !DIDerivedType(tag: DW_TAG_member, name: "dev_addr_genid", scope: !3456, file: !3457, line: 107, baseType: !383, size: 32, offset: 4160)
!3596 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_sernum", scope: !3456, file: !3457, line: 108, baseType: !383, size: 32, offset: 4192)
!3597 = !DIDerivedType(tag: DW_TAG_member, name: "seg6_data", scope: !3456, file: !3457, line: 109, baseType: !3598, size: 64, offset: 4224)
!3598 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3599, size: 64)
!3599 = !DICompositeType(tag: DW_TAG_structure_type, name: "seg6_pernet_data", file: !3457, line: 109, flags: DIFlagFwdDecl)
!3600 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_ops", scope: !3456, file: !3457, line: 110, baseType: !3442, size: 64, offset: 4288)
!3601 = !DIDerivedType(tag: DW_TAG_member, name: "ip6mr_notifier_ops", scope: !3456, file: !3457, line: 111, baseType: !3442, size: 64, offset: 4352)
!3602 = !DIDerivedType(tag: DW_TAG_member, name: "ipmr_seq", scope: !3456, file: !3457, line: 112, baseType: !7, size: 32, offset: 4416)
!3603 = !DIDerivedType(tag: DW_TAG_member, name: "ip6addrlbl_table", scope: !3456, file: !3457, line: 117, baseType: !3604, size: 128, offset: 4480)
!3604 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3456, file: !3457, line: 113, size: 128, elements: !3605)
!3605 = !{!3606, !3607, !3608}
!3606 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3604, file: !3457, line: 114, baseType: !1581, size: 64)
!3607 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3604, file: !3457, line: 115, baseType: !1670, offset: 64)
!3608 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !3604, file: !3457, line: 116, baseType: !987, size: 32, offset: 64)
!3609 = !DIDerivedType(tag: DW_TAG_member, name: "wext_nlevents", scope: !2983, file: !2984, line: 162, baseType: !3610, size: 192, offset: 14784)
!3610 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sk_buff_head", file: !417, line: 291, size: 192, elements: !3611)
!3611 = !{!3612, !3613, !3614, !3615}
!3612 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3610, file: !417, line: 293, baseType: !415, size: 64)
!3613 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3610, file: !417, line: 294, baseType: !415, size: 64, offset: 64)
!3614 = !DIDerivedType(tag: DW_TAG_member, name: "qlen", scope: !3610, file: !417, line: 296, baseType: !493, size: 32, offset: 128)
!3615 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3610, file: !417, line: 297, baseType: !1670, offset: 160)
!3616 = !DIDerivedType(tag: DW_TAG_member, name: "gen", scope: !2983, file: !2984, line: 164, baseType: !3617, size: 64, offset: 14976)
!3617 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3618, size: 64)
!3618 = !DICompositeType(tag: DW_TAG_structure_type, name: "net_generic", file: !2984, line: 47, flags: DIFlagFwdDecl)
!3619 = !DIDerivedType(tag: DW_TAG_member, name: "bpf", scope: !2983, file: !2984, line: 167, baseType: !3620, size: 512, offset: 15040)
!3620 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_bpf", file: !3621, line: 14, size: 512, elements: !3622)
!3621 = !DIFile(filename: "./include/net/netns/bpf.h", directory: "/home/lizy2001/genbc/linux")
!3622 = !{!3623, !3638, !3640}
!3623 = !DIDerivedType(tag: DW_TAG_member, name: "run_array", scope: !3620, file: !3621, line: 16, baseType: !3624, size: 128)
!3624 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3625, size: 128, elements: !2664)
!3625 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3626, size: 64)
!3626 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_prog_array", file: !65, line: 1037, size: 128, elements: !3627)
!3627 = !{!3628, !3629}
!3628 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !3626, file: !65, line: 1038, baseType: !299, size: 128, align: 64)
!3629 = !DIDerivedType(tag: DW_TAG_member, name: "items", scope: !3626, file: !65, line: 1039, baseType: !3630, offset: 128)
!3630 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3631, elements: !309)
!3631 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_prog_array_item", file: !65, line: 1032, size: 192, elements: !3632)
!3632 = !{!3633, !3634}
!3633 = !DIDerivedType(tag: DW_TAG_member, name: "prog", scope: !3631, file: !65, line: 1033, baseType: !1088, size: 64)
!3634 = !DIDerivedType(tag: DW_TAG_member, name: "cgroup_storage", scope: !3631, file: !65, line: 1034, baseType: !3635, size: 128, offset: 64)
!3635 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3636, size: 128, elements: !2664)
!3636 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3637, size: 64)
!3637 = !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_cgroup_storage", file: !65, line: 1034, flags: DIFlagFwdDecl)
!3638 = !DIDerivedType(tag: DW_TAG_member, name: "progs", scope: !3620, file: !3621, line: 17, baseType: !3639, size: 128, offset: 128)
!3639 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1088, size: 128, elements: !2664)
!3640 = !DIDerivedType(tag: DW_TAG_member, name: "links", scope: !3620, file: !3621, line: 18, baseType: !3641, size: 256, offset: 256)
!3641 = !DICompositeType(tag: DW_TAG_array_type, baseType: !284, size: 256, elements: !2664)
!3642 = !DIDerivedType(tag: DW_TAG_member, name: "net_cookie", scope: !2983, file: !2984, line: 174, baseType: !373, size: 64, offset: 15552)
!3643 = !DIDerivedType(tag: DW_TAG_member, name: "can", scope: !2983, file: !2984, line: 183, baseType: !3644, size: 1216, offset: 15616)
!3644 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_can", file: !3645, line: 15, size: 1216, elements: !3646)
!3645 = !DIFile(filename: "./include/net/netns/can.h", directory: "/home/lizy2001/genbc/linux")
!3646 = !{!3647, !3648, !3649, !3650, !3651, !3652, !3653, !3654, !3655, !3656, !3657, !3660, !3661, !3662, !3665, !3668}
!3647 = !DIDerivedType(tag: DW_TAG_member, name: "proc_dir", scope: !3644, file: !3645, line: 17, baseType: !3010, size: 64)
!3648 = !DIDerivedType(tag: DW_TAG_member, name: "pde_stats", scope: !3644, file: !3645, line: 18, baseType: !3010, size: 64, offset: 64)
!3649 = !DIDerivedType(tag: DW_TAG_member, name: "pde_reset_stats", scope: !3644, file: !3645, line: 19, baseType: !3010, size: 64, offset: 128)
!3650 = !DIDerivedType(tag: DW_TAG_member, name: "pde_rcvlist_all", scope: !3644, file: !3645, line: 20, baseType: !3010, size: 64, offset: 192)
!3651 = !DIDerivedType(tag: DW_TAG_member, name: "pde_rcvlist_fil", scope: !3644, file: !3645, line: 21, baseType: !3010, size: 64, offset: 256)
!3652 = !DIDerivedType(tag: DW_TAG_member, name: "pde_rcvlist_inv", scope: !3644, file: !3645, line: 22, baseType: !3010, size: 64, offset: 320)
!3653 = !DIDerivedType(tag: DW_TAG_member, name: "pde_rcvlist_sff", scope: !3644, file: !3645, line: 23, baseType: !3010, size: 64, offset: 384)
!3654 = !DIDerivedType(tag: DW_TAG_member, name: "pde_rcvlist_eff", scope: !3644, file: !3645, line: 24, baseType: !3010, size: 64, offset: 448)
!3655 = !DIDerivedType(tag: DW_TAG_member, name: "pde_rcvlist_err", scope: !3644, file: !3645, line: 25, baseType: !3010, size: 64, offset: 512)
!3656 = !DIDerivedType(tag: DW_TAG_member, name: "bcmproc_dir", scope: !3644, file: !3645, line: 26, baseType: !3010, size: 64, offset: 576)
!3657 = !DIDerivedType(tag: DW_TAG_member, name: "rx_alldev_list", scope: !3644, file: !3645, line: 30, baseType: !3658, size: 64, offset: 640)
!3658 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3659, size: 64)
!3659 = !DICompositeType(tag: DW_TAG_structure_type, name: "can_dev_rcv_lists", file: !3645, line: 11, flags: DIFlagFwdDecl)
!3660 = !DIDerivedType(tag: DW_TAG_member, name: "rcvlists_lock", scope: !3644, file: !3645, line: 31, baseType: !1670, offset: 704)
!3661 = !DIDerivedType(tag: DW_TAG_member, name: "stattimer", scope: !3644, file: !3645, line: 32, baseType: !3235, size: 320, offset: 704)
!3662 = !DIDerivedType(tag: DW_TAG_member, name: "pkg_stats", scope: !3644, file: !3645, line: 33, baseType: !3663, size: 64, offset: 1024)
!3663 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3664, size: 64)
!3664 = !DICompositeType(tag: DW_TAG_structure_type, name: "can_pkg_stats", file: !3645, line: 12, flags: DIFlagFwdDecl)
!3665 = !DIDerivedType(tag: DW_TAG_member, name: "rcv_lists_stats", scope: !3644, file: !3645, line: 34, baseType: !3666, size: 64, offset: 1088)
!3666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3667, size: 64)
!3667 = !DICompositeType(tag: DW_TAG_structure_type, name: "can_rcv_lists_stats", file: !3645, line: 13, flags: DIFlagFwdDecl)
!3668 = !DIDerivedType(tag: DW_TAG_member, name: "cgw_list", scope: !3644, file: !3645, line: 37, baseType: !1581, size: 64, offset: 1152)
!3669 = !DIDerivedType(tag: DW_TAG_member, name: "diag_nlsk", scope: !2983, file: !2984, line: 191, baseType: !445, size: 64, offset: 16832)
!3670 = !DIDerivedType(tag: DW_TAG_member, name: "time_ns", scope: !2967, file: !2968, line: 38, baseType: !3671, size: 64, offset: 384)
!3671 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3672, size: 64)
!3672 = !DICompositeType(tag: DW_TAG_structure_type, name: "time_namespace", file: !2968, line: 38, flags: DIFlagFwdDecl)
!3673 = !DIDerivedType(tag: DW_TAG_member, name: "time_ns_for_children", scope: !2967, file: !2968, line: 39, baseType: !3671, size: 64, offset: 448)
!3674 = !DIDerivedType(tag: DW_TAG_member, name: "cgroup_ns", scope: !2967, file: !2968, line: 40, baseType: !3675, size: 64, offset: 512)
!3675 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3676, size: 64)
!3676 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cgroup_namespace", file: !3677, line: 856, size: 448, elements: !3678)
!3677 = !DIFile(filename: "./include/linux/cgroup.h", directory: "/home/lizy2001/genbc/linux")
!3678 = !{!3679, !3680, !3681, !3682, !3683}
!3679 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3676, file: !3677, line: 857, baseType: !568, size: 32)
!3680 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !3676, file: !3677, line: 858, baseType: !2815, size: 192, offset: 64)
!3681 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !3676, file: !3677, line: 859, baseType: !2781, size: 64, offset: 256)
!3682 = !DIDerivedType(tag: DW_TAG_member, name: "ucounts", scope: !3676, file: !3677, line: 860, baseType: !2923, size: 64, offset: 320)
!3683 = !DIDerivedType(tag: DW_TAG_member, name: "root_cset", scope: !3676, file: !3677, line: 861, baseType: !3684, size: 64, offset: 384)
!3684 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3685, size: 64)
!3685 = !DICompositeType(tag: DW_TAG_structure_type, name: "css_set", file: !3686, line: 16, flags: DIFlagFwdDecl)
!3686 = !DIFile(filename: "./include/linux/sched/task.h", directory: "/home/lizy2001/genbc/linux")
!3687 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !2327, file: !2328, line: 969, baseType: !3688, size: 64, offset: 9216)
!3688 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3689, size: 64)
!3689 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "signal_struct", file: !3690, line: 82, size: 7296, elements: !3691)
!3690 = !DIFile(filename: "./include/linux/sched/signal.h", directory: "/home/lizy2001/genbc/linux")
!3691 = !{!3692, !3693, !3694, !3695, !3696, !3697, !3698, !3709, !3710, !3711, !3712, !3713, !3714, !3715, !3716, !3717, !3718, !3719, !3720, !3721, !3727, !3736, !3737, !3739, !3740, !3741, !3744, !3745, !3746, !3747, !3748, !3749, !3750, !3751, !3752, !3753, !3754, !3755, !3756, !3757, !3758, !3759, !3760, !3761, !3762, !3763, !3764, !3765, !3766, !3769, !3770, !3777, !3778, !3779, !3780, !3781, !3782}
!3692 = !DIDerivedType(tag: DW_TAG_member, name: "sigcnt", scope: !3689, file: !3690, line: 83, baseType: !568, size: 32)
!3693 = !DIDerivedType(tag: DW_TAG_member, name: "live", scope: !3689, file: !3690, line: 84, baseType: !383, size: 32, offset: 32)
!3694 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !3689, file: !3690, line: 85, baseType: !32, size: 32, offset: 64)
!3695 = !DIDerivedType(tag: DW_TAG_member, name: "thread_head", scope: !3689, file: !3690, line: 86, baseType: !284, size: 128, offset: 128)
!3696 = !DIDerivedType(tag: DW_TAG_member, name: "wait_chldexit", scope: !3689, file: !3690, line: 88, baseType: !1889, size: 128, offset: 256)
!3697 = !DIDerivedType(tag: DW_TAG_member, name: "curr_target", scope: !3689, file: !3690, line: 91, baseType: !2326, size: 64, offset: 384)
!3698 = !DIDerivedType(tag: DW_TAG_member, name: "shared_pending", scope: !3689, file: !3690, line: 94, baseType: !3699, size: 192, offset: 448)
!3699 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigpending", file: !3700, line: 30, size: 192, elements: !3701)
!3700 = !DIFile(filename: "./include/linux/signal_types.h", directory: "/home/lizy2001/genbc/linux")
!3701 = !{!3702, !3703}
!3702 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3699, file: !3700, line: 31, baseType: !284, size: 128)
!3703 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !3699, file: !3700, line: 32, baseType: !3704, size: 64, offset: 128)
!3704 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigset_t", file: !3705, line: 25, baseType: !3706)
!3705 = !DIFile(filename: "./arch/x86/include/asm/signal.h", directory: "/home/lizy2001/genbc/linux")
!3706 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3705, line: 23, size: 64, elements: !3707)
!3707 = !{!3708}
!3708 = !DIDerivedType(tag: DW_TAG_member, name: "sig", scope: !3706, file: !3705, line: 24, baseType: !2471, size: 64)
!3709 = !DIDerivedType(tag: DW_TAG_member, name: "multiprocess", scope: !3689, file: !3690, line: 97, baseType: !1581, size: 64, offset: 640)
!3710 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_code", scope: !3689, file: !3690, line: 100, baseType: !32, size: 32, offset: 704)
!3711 = !DIDerivedType(tag: DW_TAG_member, name: "notify_count", scope: !3689, file: !3690, line: 106, baseType: !32, size: 32, offset: 736)
!3712 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_task", scope: !3689, file: !3690, line: 107, baseType: !2326, size: 64, offset: 768)
!3713 = !DIDerivedType(tag: DW_TAG_member, name: "group_stop_count", scope: !3689, file: !3690, line: 110, baseType: !32, size: 32, offset: 832)
!3714 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3689, file: !3690, line: 111, baseType: !7, size: 32, offset: 864)
!3715 = !DIDerivedType(tag: DW_TAG_member, name: "is_child_subreaper", scope: !3689, file: !3690, line: 122, baseType: !7, size: 1, offset: 896, flags: DIFlagBitField, extraData: i64 896)
!3716 = !DIDerivedType(tag: DW_TAG_member, name: "has_child_subreaper", scope: !3689, file: !3690, line: 123, baseType: !7, size: 1, offset: 897, flags: DIFlagBitField, extraData: i64 896)
!3717 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timer_id", scope: !3689, file: !3690, line: 128, baseType: !32, size: 32, offset: 928)
!3718 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timers", scope: !3689, file: !3690, line: 129, baseType: !284, size: 128, offset: 960)
!3719 = !DIDerivedType(tag: DW_TAG_member, name: "real_timer", scope: !3689, file: !3690, line: 132, baseType: !2397, size: 512, offset: 1088)
!3720 = !DIDerivedType(tag: DW_TAG_member, name: "it_real_incr", scope: !3689, file: !3690, line: 133, baseType: !453, size: 64, offset: 1600)
!3721 = !DIDerivedType(tag: DW_TAG_member, name: "it", scope: !3689, file: !3690, line: 140, baseType: !3722, size: 256, offset: 1664)
!3722 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3723, size: 256, elements: !2664)
!3723 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpu_itimer", file: !3690, line: 38, size: 128, elements: !3724)
!3724 = !{!3725, !3726}
!3725 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !3723, file: !3690, line: 39, baseType: !331, size: 64)
!3726 = !DIDerivedType(tag: DW_TAG_member, name: "incr", scope: !3723, file: !3690, line: 40, baseType: !331, size: 64, offset: 64)
!3727 = !DIDerivedType(tag: DW_TAG_member, name: "cputimer", scope: !3689, file: !3690, line: 146, baseType: !3728, size: 192, offset: 1920)
!3728 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_group_cputimer", file: !3690, line: 66, size: 192, elements: !3729)
!3729 = !{!3730}
!3730 = !DIDerivedType(tag: DW_TAG_member, name: "cputime_atomic", scope: !3728, file: !3690, line: 67, baseType: !3731, size: 192)
!3731 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_cputime_atomic", file: !3690, line: 47, size: 192, elements: !3732)
!3732 = !{!3733, !3734, !3735}
!3733 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !3731, file: !3690, line: 48, baseType: !373, size: 64)
!3734 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !3731, file: !3690, line: 49, baseType: !373, size: 64, offset: 64)
!3735 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !3731, file: !3690, line: 50, baseType: !373, size: 64, offset: 128)
!3736 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !3689, file: !3690, line: 150, baseType: !2625, size: 640, offset: 2112)
!3737 = !DIDerivedType(tag: DW_TAG_member, name: "pids", scope: !3689, file: !3690, line: 153, baseType: !3738, size: 256, offset: 2752)
!3738 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2571, size: 256, elements: !2272)
!3739 = !DIDerivedType(tag: DW_TAG_member, name: "tty_old_pgrp", scope: !3689, file: !3690, line: 159, baseType: !2571, size: 64, offset: 3008)
!3740 = !DIDerivedType(tag: DW_TAG_member, name: "leader", scope: !3689, file: !3690, line: 162, baseType: !32, size: 32, offset: 3072)
!3741 = !DIDerivedType(tag: DW_TAG_member, name: "tty", scope: !3689, file: !3690, line: 164, baseType: !3742, size: 64, offset: 3136)
!3742 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3743, size: 64)
!3743 = !DICompositeType(tag: DW_TAG_structure_type, name: "tty_struct", file: !3690, line: 164, flags: DIFlagFwdDecl)
!3744 = !DIDerivedType(tag: DW_TAG_member, name: "stats_lock", scope: !3689, file: !3690, line: 175, baseType: !3325, size: 32, offset: 3200)
!3745 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !3689, file: !3690, line: 176, baseType: !331, size: 64, offset: 3264)
!3746 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !3689, file: !3690, line: 176, baseType: !331, size: 64, offset: 3328)
!3747 = !DIDerivedType(tag: DW_TAG_member, name: "cutime", scope: !3689, file: !3690, line: 176, baseType: !331, size: 64, offset: 3392)
!3748 = !DIDerivedType(tag: DW_TAG_member, name: "cstime", scope: !3689, file: !3690, line: 176, baseType: !331, size: 64, offset: 3456)
!3749 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !3689, file: !3690, line: 177, baseType: !331, size: 64, offset: 3520)
!3750 = !DIDerivedType(tag: DW_TAG_member, name: "cgtime", scope: !3689, file: !3690, line: 178, baseType: !331, size: 64, offset: 3584)
!3751 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !3689, file: !3690, line: 179, baseType: !2613, size: 128, offset: 3648)
!3752 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !3689, file: !3690, line: 180, baseType: !312, size: 64, offset: 3776)
!3753 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !3689, file: !3690, line: 180, baseType: !312, size: 64, offset: 3840)
!3754 = !DIDerivedType(tag: DW_TAG_member, name: "cnvcsw", scope: !3689, file: !3690, line: 180, baseType: !312, size: 64, offset: 3904)
!3755 = !DIDerivedType(tag: DW_TAG_member, name: "cnivcsw", scope: !3689, file: !3690, line: 180, baseType: !312, size: 64, offset: 3968)
!3756 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !3689, file: !3690, line: 181, baseType: !312, size: 64, offset: 4032)
!3757 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !3689, file: !3690, line: 181, baseType: !312, size: 64, offset: 4096)
!3758 = !DIDerivedType(tag: DW_TAG_member, name: "cmin_flt", scope: !3689, file: !3690, line: 181, baseType: !312, size: 64, offset: 4160)
!3759 = !DIDerivedType(tag: DW_TAG_member, name: "cmaj_flt", scope: !3689, file: !3690, line: 181, baseType: !312, size: 64, offset: 4224)
!3760 = !DIDerivedType(tag: DW_TAG_member, name: "inblock", scope: !3689, file: !3690, line: 182, baseType: !312, size: 64, offset: 4288)
!3761 = !DIDerivedType(tag: DW_TAG_member, name: "oublock", scope: !3689, file: !3690, line: 182, baseType: !312, size: 64, offset: 4352)
!3762 = !DIDerivedType(tag: DW_TAG_member, name: "cinblock", scope: !3689, file: !3690, line: 182, baseType: !312, size: 64, offset: 4416)
!3763 = !DIDerivedType(tag: DW_TAG_member, name: "coublock", scope: !3689, file: !3690, line: 182, baseType: !312, size: 64, offset: 4480)
!3764 = !DIDerivedType(tag: DW_TAG_member, name: "maxrss", scope: !3689, file: !3690, line: 183, baseType: !312, size: 64, offset: 4544)
!3765 = !DIDerivedType(tag: DW_TAG_member, name: "cmaxrss", scope: !3689, file: !3690, line: 183, baseType: !312, size: 64, offset: 4608)
!3766 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !3689, file: !3690, line: 184, baseType: !3767, offset: 4672)
!3767 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_io_accounting", file: !3768, line: 12, elements: !1587)
!3768 = !DIFile(filename: "./include/linux/task_io_accounting.h", directory: "/home/lizy2001/genbc/linux")
!3769 = !DIDerivedType(tag: DW_TAG_member, name: "sum_sched_runtime", scope: !3689, file: !3690, line: 192, baseType: !335, size: 64, offset: 4672)
!3770 = !DIDerivedType(tag: DW_TAG_member, name: "rlim", scope: !3689, file: !3690, line: 203, baseType: !3771, size: 2048, offset: 4736)
!3771 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3772, size: 2048, elements: !269)
!3772 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rlimit", file: !3773, line: 43, size: 128, elements: !3774)
!3773 = !DIFile(filename: "./include/uapi/linux/resource.h", directory: "/home/lizy2001/genbc/linux")
!3774 = !{!3775, !3776}
!3775 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_cur", scope: !3772, file: !3773, line: 44, baseType: !1042, size: 64)
!3776 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_max", scope: !3772, file: !3773, line: 45, baseType: !1042, size: 64, offset: 64)
!3777 = !DIDerivedType(tag: DW_TAG_member, name: "oom_flag_origin", scope: !3689, file: !3690, line: 220, baseType: !771, size: 8, offset: 6784)
!3778 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj", scope: !3689, file: !3690, line: 221, baseType: !625, size: 16, offset: 6800)
!3779 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj_min", scope: !3689, file: !3690, line: 222, baseType: !625, size: 16, offset: 6816)
!3780 = !DIDerivedType(tag: DW_TAG_member, name: "oom_mm", scope: !3689, file: !3690, line: 224, baseType: !2091, size: 64, offset: 6848)
!3781 = !DIDerivedType(tag: DW_TAG_member, name: "cred_guard_mutex", scope: !3689, file: !3690, line: 227, baseType: !1665, size: 192, offset: 6912)
!3782 = !DIDerivedType(tag: DW_TAG_member, name: "exec_update_mutex", scope: !3689, file: !3690, line: 233, baseType: !1665, size: 192, offset: 7104)
!3783 = !DIDerivedType(tag: DW_TAG_member, name: "sighand", scope: !2327, file: !2328, line: 970, baseType: !3784, size: 64, offset: 9280)
!3784 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3785, size: 64)
!3785 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sighand_struct", file: !3690, line: 20, size: 16576, elements: !3786)
!3786 = !{!3787, !3788, !3789, !3790}
!3787 = !DIDerivedType(tag: DW_TAG_member, name: "siglock", scope: !3785, file: !3690, line: 21, baseType: !1670)
!3788 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3785, file: !3690, line: 22, baseType: !568, size: 32)
!3789 = !DIDerivedType(tag: DW_TAG_member, name: "signalfd_wqh", scope: !3785, file: !3690, line: 23, baseType: !1889, size: 128, offset: 64)
!3790 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !3785, file: !3690, line: 24, baseType: !3791, size: 16384, offset: 192)
!3791 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3792, size: 16384, elements: !3812)
!3792 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_sigaction", file: !3700, line: 49, size: 256, elements: !3793)
!3793 = !{!3794}
!3794 = !DIDerivedType(tag: DW_TAG_member, name: "sa", scope: !3792, file: !3700, line: 50, baseType: !3795, size: 256)
!3795 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigaction", file: !3700, line: 35, size: 256, elements: !3796)
!3796 = !{!3797, !3804, !3805, !3811}
!3797 = !DIDerivedType(tag: DW_TAG_member, name: "sa_handler", scope: !3795, file: !3700, line: 37, baseType: !3798, size: 64)
!3798 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sighandler_t", file: !3799, line: 19, baseType: !3800)
!3799 = !DIFile(filename: "./include/uapi/asm-generic/signal-defs.h", directory: "/home/lizy2001/genbc/linux")
!3800 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3801, size: 64)
!3801 = !DIDerivedType(tag: DW_TAG_typedef, name: "__signalfn_t", file: !3799, line: 18, baseType: !3802)
!3802 = !DISubroutineType(types: !3803)
!3803 = !{null, !32}
!3804 = !DIDerivedType(tag: DW_TAG_member, name: "sa_flags", scope: !3795, file: !3700, line: 38, baseType: !312, size: 64, offset: 64)
!3805 = !DIDerivedType(tag: DW_TAG_member, name: "sa_restorer", scope: !3795, file: !3700, line: 44, baseType: !3806, size: 64, offset: 128)
!3806 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sigrestore_t", file: !3799, line: 22, baseType: !3807)
!3807 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3808, size: 64)
!3808 = !DIDerivedType(tag: DW_TAG_typedef, name: "__restorefn_t", file: !3799, line: 21, baseType: !3809)
!3809 = !DISubroutineType(types: !3810)
!3810 = !{null}
!3811 = !DIDerivedType(tag: DW_TAG_member, name: "sa_mask", scope: !3795, file: !3700, line: 46, baseType: !3704, size: 64, offset: 192)
!3812 = !{!3813}
!3813 = !DISubrange(count: 64)
!3814 = !DIDerivedType(tag: DW_TAG_member, name: "blocked", scope: !2327, file: !2328, line: 971, baseType: !3704, size: 64, offset: 9344)
!3815 = !DIDerivedType(tag: DW_TAG_member, name: "real_blocked", scope: !2327, file: !2328, line: 972, baseType: !3704, size: 64, offset: 9408)
!3816 = !DIDerivedType(tag: DW_TAG_member, name: "saved_sigmask", scope: !2327, file: !2328, line: 974, baseType: !3704, size: 64, offset: 9472)
!3817 = !DIDerivedType(tag: DW_TAG_member, name: "pending", scope: !2327, file: !2328, line: 975, baseType: !3699, size: 192, offset: 9536)
!3818 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_sp", scope: !2327, file: !2328, line: 976, baseType: !312, size: 64, offset: 9728)
!3819 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_size", scope: !2327, file: !2328, line: 977, baseType: !1039, size: 64, offset: 9792)
!3820 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_flags", scope: !2327, file: !2328, line: 978, baseType: !7, size: 32, offset: 9856)
!3821 = !DIDerivedType(tag: DW_TAG_member, name: "task_works", scope: !2327, file: !2328, line: 980, baseType: !302, size: 64, offset: 9920)
!3822 = !DIDerivedType(tag: DW_TAG_member, name: "seccomp", scope: !2327, file: !2328, line: 989, baseType: !3823, size: 128, offset: 9984)
!3823 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp", file: !3824, line: 35, size: 128, elements: !3825)
!3824 = !DIFile(filename: "./include/linux/seccomp.h", directory: "/home/lizy2001/genbc/linux")
!3825 = !{!3826, !3827, !3828}
!3826 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !3823, file: !3824, line: 36, baseType: !32, size: 32)
!3827 = !DIDerivedType(tag: DW_TAG_member, name: "filter_count", scope: !3823, file: !3824, line: 37, baseType: !383, size: 32, offset: 32)
!3828 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !3823, file: !3824, line: 38, baseType: !3829, size: 64, offset: 64)
!3829 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3830, size: 64)
!3830 = !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp_filter", file: !3824, line: 23, flags: DIFlagFwdDecl)
!3831 = !DIDerivedType(tag: DW_TAG_member, name: "parent_exec_id", scope: !2327, file: !2328, line: 992, baseType: !331, size: 64, offset: 10112)
!3832 = !DIDerivedType(tag: DW_TAG_member, name: "self_exec_id", scope: !2327, file: !2328, line: 993, baseType: !331, size: 64, offset: 10176)
!3833 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_lock", scope: !2327, file: !2328, line: 996, baseType: !1670, offset: 10240)
!3834 = !DIDerivedType(tag: DW_TAG_member, name: "pi_lock", scope: !2327, file: !2328, line: 999, baseType: !1761, offset: 10240)
!3835 = !DIDerivedType(tag: DW_TAG_member, name: "wake_q", scope: !2327, file: !2328, line: 1001, baseType: !3836, size: 64, offset: 10240)
!3836 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wake_q_node", file: !2328, line: 636, size: 64, elements: !3837)
!3837 = !{!3838}
!3838 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3836, file: !2328, line: 637, baseType: !3839, size: 64)
!3839 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3836, size: 64)
!3840 = !DIDerivedType(tag: DW_TAG_member, name: "pi_waiters", scope: !2327, file: !2328, line: 1005, baseType: !1747, size: 128, offset: 10304)
!3841 = !DIDerivedType(tag: DW_TAG_member, name: "pi_top_task", scope: !2327, file: !2328, line: 1007, baseType: !2326, size: 64, offset: 10432)
!3842 = !DIDerivedType(tag: DW_TAG_member, name: "pi_blocked_on", scope: !2327, file: !2328, line: 1009, baseType: !3843, size: 64, offset: 10496)
!3843 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3844, size: 64)
!3844 = !DICompositeType(tag: DW_TAG_structure_type, name: "rt_mutex_waiter", file: !2328, line: 1009, flags: DIFlagFwdDecl)
!3845 = !DIDerivedType(tag: DW_TAG_member, name: "journal_info", scope: !2327, file: !2328, line: 1043, baseType: !591, size: 64, offset: 10560)
!3846 = !DIDerivedType(tag: DW_TAG_member, name: "bio_list", scope: !2327, file: !2328, line: 1046, baseType: !3847, size: 64, offset: 10624)
!3847 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3848, size: 64)
!3848 = !DICompositeType(tag: DW_TAG_structure_type, name: "bio_list", file: !2328, line: 41, flags: DIFlagFwdDecl)
!3849 = !DIDerivedType(tag: DW_TAG_member, name: "plug", scope: !2327, file: !2328, line: 1050, baseType: !3850, size: 64, offset: 10688)
!3850 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3851, size: 64)
!3851 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_plug", file: !2328, line: 42, flags: DIFlagFwdDecl)
!3852 = !DIDerivedType(tag: DW_TAG_member, name: "reclaim_state", scope: !2327, file: !2328, line: 1054, baseType: !3853, size: 64, offset: 10752)
!3853 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3854, size: 64)
!3854 = !DICompositeType(tag: DW_TAG_structure_type, name: "reclaim_state", file: !2328, line: 55, flags: DIFlagFwdDecl)
!3855 = !DIDerivedType(tag: DW_TAG_member, name: "backing_dev_info", scope: !2327, file: !2328, line: 1056, baseType: !3856, size: 64, offset: 10816)
!3856 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3857, size: 64)
!3857 = !DICompositeType(tag: DW_TAG_structure_type, name: "backing_dev_info", file: !2328, line: 40, flags: DIFlagFwdDecl)
!3858 = !DIDerivedType(tag: DW_TAG_member, name: "io_context", scope: !2327, file: !2328, line: 1058, baseType: !3859, size: 64, offset: 10880)
!3859 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3860, size: 64)
!3860 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_context", file: !3861, line: 99, size: 704, elements: !3862)
!3861 = !DIFile(filename: "./include/linux/iocontext.h", directory: "/home/lizy2001/genbc/linux")
!3862 = !{!3863, !3864, !3865, !3866, !3867, !3868, !3869, !3888, !3889}
!3863 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !3860, file: !3861, line: 100, baseType: !371, size: 64)
!3864 = !DIDerivedType(tag: DW_TAG_member, name: "active_ref", scope: !3860, file: !3861, line: 101, baseType: !383, size: 32, offset: 64)
!3865 = !DIDerivedType(tag: DW_TAG_member, name: "nr_tasks", scope: !3860, file: !3861, line: 102, baseType: !383, size: 32, offset: 96)
!3866 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3860, file: !3861, line: 105, baseType: !1670, offset: 128)
!3867 = !DIDerivedType(tag: DW_TAG_member, name: "ioprio", scope: !3860, file: !3861, line: 107, baseType: !476, size: 16, offset: 128)
!3868 = !DIDerivedType(tag: DW_TAG_member, name: "icq_tree", scope: !3860, file: !3861, line: 109, baseType: !1737, size: 128, offset: 192)
!3869 = !DIDerivedType(tag: DW_TAG_member, name: "icq_hint", scope: !3860, file: !3861, line: 110, baseType: !3870, size: 64, offset: 320)
!3870 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3871, size: 64)
!3871 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_cq", file: !3861, line: 73, size: 448, elements: !3872)
!3872 = !{!3873, !3876, !3877, !3882, !3887}
!3873 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !3871, file: !3861, line: 74, baseType: !3874, size: 64)
!3874 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3875, size: 64)
!3875 = !DICompositeType(tag: DW_TAG_structure_type, name: "request_queue", file: !3861, line: 74, flags: DIFlagFwdDecl)
!3876 = !DIDerivedType(tag: DW_TAG_member, name: "ioc", scope: !3871, file: !3861, line: 75, baseType: !3859, size: 64, offset: 64)
!3877 = !DIDerivedType(tag: DW_TAG_member, scope: !3871, file: !3861, line: 83, baseType: !3878, size: 128, offset: 128)
!3878 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3871, file: !3861, line: 83, size: 128, elements: !3879)
!3879 = !{!3880, !3881}
!3880 = !DIDerivedType(tag: DW_TAG_member, name: "q_node", scope: !3878, file: !3861, line: 84, baseType: !284, size: 128)
!3881 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_icq_cache", scope: !3878, file: !3861, line: 85, baseType: !2051, size: 64)
!3882 = !DIDerivedType(tag: DW_TAG_member, scope: !3871, file: !3861, line: 87, baseType: !3883, size: 128, offset: 256)
!3883 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3871, file: !3861, line: 87, size: 128, elements: !3884)
!3884 = !{!3885, !3886}
!3885 = !DIDerivedType(tag: DW_TAG_member, name: "ioc_node", scope: !3883, file: !3861, line: 88, baseType: !276, size: 128)
!3886 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_head", scope: !3883, file: !3861, line: 89, baseType: !299, size: 128, align: 64)
!3887 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3871, file: !3861, line: 92, baseType: !7, size: 32, offset: 384)
!3888 = !DIDerivedType(tag: DW_TAG_member, name: "icq_list", scope: !3860, file: !3861, line: 111, baseType: !1581, size: 64, offset: 384)
!3889 = !DIDerivedType(tag: DW_TAG_member, name: "release_work", scope: !3860, file: !3861, line: 113, baseType: !2829, size: 256, offset: 448)
!3890 = !DIDerivedType(tag: DW_TAG_member, name: "capture_control", scope: !2327, file: !2328, line: 1061, baseType: !3891, size: 64, offset: 10944)
!3891 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3892, size: 64)
!3892 = !DICompositeType(tag: DW_TAG_structure_type, name: "capture_control", file: !2328, line: 43, flags: DIFlagFwdDecl)
!3893 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_message", scope: !2327, file: !2328, line: 1064, baseType: !312, size: 64, offset: 11008)
!3894 = !DIDerivedType(tag: DW_TAG_member, name: "last_siginfo", scope: !2327, file: !2328, line: 1065, baseType: !3895, size: 64, offset: 11072)
!3895 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3896, size: 64)
!3896 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_siginfo_t", file: !3700, line: 14, baseType: !3897)
!3897 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_siginfo", file: !3700, line: 12, size: 384, elements: !3898)
!3898 = !{!3899}
!3899 = !DIDerivedType(tag: DW_TAG_member, scope: !3897, file: !3700, line: 13, baseType: !3900, size: 384)
!3900 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3897, file: !3700, line: 13, size: 384, elements: !3901)
!3901 = !{!3902, !3903, !3904, !3905}
!3902 = !DIDerivedType(tag: DW_TAG_member, name: "si_signo", scope: !3900, file: !3700, line: 13, baseType: !32, size: 32)
!3903 = !DIDerivedType(tag: DW_TAG_member, name: "si_errno", scope: !3900, file: !3700, line: 13, baseType: !32, size: 32, offset: 32)
!3904 = !DIDerivedType(tag: DW_TAG_member, name: "si_code", scope: !3900, file: !3700, line: 13, baseType: !32, size: 32, offset: 64)
!3905 = !DIDerivedType(tag: DW_TAG_member, name: "_sifields", scope: !3900, file: !3700, line: 13, baseType: !3906, size: 256, offset: 128)
!3906 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "__sifields", file: !3907, line: 32, size: 256, elements: !3908)
!3907 = !DIFile(filename: "./include/uapi/asm-generic/siginfo.h", directory: "/home/lizy2001/genbc/linux")
!3908 = !{!3909, !3914, !3927, !3933, !3942, !3962, !3967}
!3909 = !DIDerivedType(tag: DW_TAG_member, name: "_kill", scope: !3906, file: !3907, line: 37, baseType: !3910, size: 64)
!3910 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3906, file: !3907, line: 34, size: 64, elements: !3911)
!3911 = !{!3912, !3913}
!3912 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !3910, file: !3907, line: 35, baseType: !2560, size: 32)
!3913 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !3910, file: !3907, line: 36, baseType: !1388, size: 32, offset: 32)
!3914 = !DIDerivedType(tag: DW_TAG_member, name: "_timer", scope: !3906, file: !3907, line: 45, baseType: !3915, size: 192)
!3915 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3906, file: !3907, line: 40, size: 192, elements: !3916)
!3916 = !{!3917, !3919, !3920, !3926}
!3917 = !DIDerivedType(tag: DW_TAG_member, name: "_tid", scope: !3915, file: !3907, line: 41, baseType: !3918, size: 32)
!3918 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_timer_t", file: !1041, line: 95, baseType: !32)
!3919 = !DIDerivedType(tag: DW_TAG_member, name: "_overrun", scope: !3915, file: !3907, line: 42, baseType: !32, size: 32, offset: 32)
!3920 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !3915, file: !3907, line: 43, baseType: !3921, size: 64, offset: 64)
!3921 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigval_t", file: !3907, line: 11, baseType: !3922)
!3922 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "sigval", file: !3907, line: 8, size: 64, elements: !3923)
!3923 = !{!3924, !3925}
!3924 = !DIDerivedType(tag: DW_TAG_member, name: "sival_int", scope: !3922, file: !3907, line: 9, baseType: !32, size: 32)
!3925 = !DIDerivedType(tag: DW_TAG_member, name: "sival_ptr", scope: !3922, file: !3907, line: 10, baseType: !591, size: 64)
!3926 = !DIDerivedType(tag: DW_TAG_member, name: "_sys_private", scope: !3915, file: !3907, line: 44, baseType: !32, size: 32, offset: 128)
!3927 = !DIDerivedType(tag: DW_TAG_member, name: "_rt", scope: !3906, file: !3907, line: 52, baseType: !3928, size: 128)
!3928 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3906, file: !3907, line: 48, size: 128, elements: !3929)
!3929 = !{!3930, !3931, !3932}
!3930 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !3928, file: !3907, line: 49, baseType: !2560, size: 32)
!3931 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !3928, file: !3907, line: 50, baseType: !1388, size: 32, offset: 32)
!3932 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !3928, file: !3907, line: 51, baseType: !3921, size: 64, offset: 64)
!3933 = !DIDerivedType(tag: DW_TAG_member, name: "_sigchld", scope: !3906, file: !3907, line: 61, baseType: !3934, size: 256)
!3934 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3906, file: !3907, line: 55, size: 256, elements: !3935)
!3935 = !{!3936, !3937, !3938, !3939, !3941}
!3936 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !3934, file: !3907, line: 56, baseType: !2560, size: 32)
!3937 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !3934, file: !3907, line: 57, baseType: !1388, size: 32, offset: 32)
!3938 = !DIDerivedType(tag: DW_TAG_member, name: "_status", scope: !3934, file: !3907, line: 58, baseType: !32, size: 32, offset: 64)
!3939 = !DIDerivedType(tag: DW_TAG_member, name: "_utime", scope: !3934, file: !3907, line: 59, baseType: !3940, size: 64, offset: 128)
!3940 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clock_t", file: !1041, line: 94, baseType: !1523)
!3941 = !DIDerivedType(tag: DW_TAG_member, name: "_stime", scope: !3934, file: !3907, line: 60, baseType: !3940, size: 64, offset: 192)
!3942 = !DIDerivedType(tag: DW_TAG_member, name: "_sigfault", scope: !3906, file: !3907, line: 95, baseType: !3943, size: 256)
!3943 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3906, file: !3907, line: 64, size: 256, elements: !3944)
!3944 = !{!3945, !3946}
!3945 = !DIDerivedType(tag: DW_TAG_member, name: "_addr", scope: !3943, file: !3907, line: 65, baseType: !591, size: 64)
!3946 = !DIDerivedType(tag: DW_TAG_member, scope: !3943, file: !3907, line: 77, baseType: !3947, size: 192, offset: 64)
!3947 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3943, file: !3907, line: 77, size: 192, elements: !3948)
!3948 = !{!3949, !3950, !3957}
!3949 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_lsb", scope: !3947, file: !3907, line: 82, baseType: !625, size: 16)
!3950 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_bnd", scope: !3947, file: !3907, line: 88, baseType: !3951, size: 192)
!3951 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3947, file: !3907, line: 84, size: 192, elements: !3952)
!3952 = !{!3953, !3955, !3956}
!3953 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_bnd", scope: !3951, file: !3907, line: 85, baseType: !3954, size: 64)
!3954 = !DICompositeType(tag: DW_TAG_array_type, baseType: !268, size: 64, elements: !2433)
!3955 = !DIDerivedType(tag: DW_TAG_member, name: "_lower", scope: !3951, file: !3907, line: 86, baseType: !591, size: 64, offset: 64)
!3956 = !DIDerivedType(tag: DW_TAG_member, name: "_upper", scope: !3951, file: !3907, line: 87, baseType: !591, size: 64, offset: 128)
!3957 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_pkey", scope: !3947, file: !3907, line: 93, baseType: !3958, size: 96)
!3958 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3947, file: !3907, line: 90, size: 96, elements: !3959)
!3959 = !{!3960, !3961}
!3960 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_pkey", scope: !3958, file: !3907, line: 91, baseType: !3954, size: 64)
!3961 = !DIDerivedType(tag: DW_TAG_member, name: "_pkey", scope: !3958, file: !3907, line: 92, baseType: !493, size: 32, offset: 64)
!3962 = !DIDerivedType(tag: DW_TAG_member, name: "_sigpoll", scope: !3906, file: !3907, line: 101, baseType: !3963, size: 128)
!3963 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3906, file: !3907, line: 98, size: 128, elements: !3964)
!3964 = !{!3965, !3966}
!3965 = !DIDerivedType(tag: DW_TAG_member, name: "_band", scope: !3963, file: !3907, line: 99, baseType: !998, size: 64)
!3966 = !DIDerivedType(tag: DW_TAG_member, name: "_fd", scope: !3963, file: !3907, line: 100, baseType: !32, size: 32, offset: 64)
!3967 = !DIDerivedType(tag: DW_TAG_member, name: "_sigsys", scope: !3906, file: !3907, line: 108, baseType: !3968, size: 128)
!3968 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3906, file: !3907, line: 104, size: 128, elements: !3969)
!3969 = !{!3970, !3971, !3972}
!3970 = !DIDerivedType(tag: DW_TAG_member, name: "_call_addr", scope: !3968, file: !3907, line: 105, baseType: !591, size: 64)
!3971 = !DIDerivedType(tag: DW_TAG_member, name: "_syscall", scope: !3968, file: !3907, line: 106, baseType: !32, size: 32, offset: 64)
!3972 = !DIDerivedType(tag: DW_TAG_member, name: "_arch", scope: !3968, file: !3907, line: 107, baseType: !7, size: 32, offset: 96)
!3973 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !2327, file: !2328, line: 1067, baseType: !3767, offset: 11136)
!3974 = !DIDerivedType(tag: DW_TAG_member, name: "robust_list", scope: !2327, file: !2328, line: 1099, baseType: !3975, size: 64, offset: 11136)
!3975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3976, size: 64)
!3976 = !DICompositeType(tag: DW_TAG_structure_type, name: "robust_list_head", file: !2328, line: 56, flags: DIFlagFwdDecl)
!3977 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_list", scope: !2327, file: !2328, line: 1103, baseType: !284, size: 128, offset: 11200)
!3978 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_cache", scope: !2327, file: !2328, line: 1104, baseType: !3979, size: 64, offset: 11328)
!3979 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3980, size: 64)
!3980 = !DICompositeType(tag: DW_TAG_structure_type, name: "futex_pi_state", file: !2328, line: 46, flags: DIFlagFwdDecl)
!3981 = !DIDerivedType(tag: DW_TAG_member, name: "futex_exit_mutex", scope: !2327, file: !2328, line: 1105, baseType: !1665, size: 192, offset: 11392)
!3982 = !DIDerivedType(tag: DW_TAG_member, name: "futex_state", scope: !2327, file: !2328, line: 1106, baseType: !7, size: 32, offset: 11584)
!3983 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_ctxp", scope: !2327, file: !2328, line: 1109, baseType: !3984, size: 128, offset: 11648)
!3984 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3985, size: 128, elements: !2664)
!3985 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3986, size: 64)
!3986 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event_context", file: !2328, line: 51, flags: DIFlagFwdDecl)
!3987 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_mutex", scope: !2327, file: !2328, line: 1110, baseType: !1665, size: 192, offset: 11776)
!3988 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_list", scope: !2327, file: !2328, line: 1111, baseType: !284, size: 128, offset: 11968)
!3989 = !DIDerivedType(tag: DW_TAG_member, name: "rseq", scope: !2327, file: !2328, line: 1173, baseType: !3990, size: 64, offset: 12096)
!3990 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3991, size: 64)
!3991 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rseq", file: !3992, line: 62, size: 256, align: 256, elements: !3993)
!3992 = !DIFile(filename: "./include/uapi/linux/rseq.h", directory: "/home/lizy2001/genbc/linux")
!3993 = !{!3994, !3995, !3996, !4001}
!3994 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id_start", scope: !3991, file: !3992, line: 75, baseType: !493, size: 32)
!3995 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id", scope: !3991, file: !3992, line: 90, baseType: !493, size: 32, offset: 32)
!3996 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_cs", scope: !3991, file: !3992, line: 124, baseType: !3997, size: 64, offset: 64)
!3997 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3991, file: !3992, line: 109, size: 64, elements: !3998)
!3998 = !{!3999, !4000}
!3999 = !DIDerivedType(tag: DW_TAG_member, name: "ptr64", scope: !3997, file: !3992, line: 110, baseType: !333, size: 64)
!4000 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !3997, file: !3992, line: 112, baseType: !333, size: 64)
!4001 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3991, file: !3992, line: 144, baseType: !493, size: 32, offset: 128)
!4002 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_sig", scope: !2327, file: !2328, line: 1174, baseType: !987, size: 32, offset: 12160)
!4003 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_event_mask", scope: !2327, file: !2328, line: 1179, baseType: !312, size: 64, offset: 12224)
!4004 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_ubc", scope: !2327, file: !2328, line: 1182, baseType: !4005, size: 128, offset: 12288)
!4005 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tlbflush_unmap_batch", file: !2268, line: 76, size: 128, elements: !4006)
!4006 = !{!4007, !4012, !4013}
!4007 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !4005, file: !2268, line: 85, baseType: !4008, size: 64)
!4008 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arch_tlbflush_unmap_batch", file: !4009, line: 7, size: 64, elements: !4010)
!4009 = !DIFile(filename: "./arch/x86/include/asm/tlbbatch.h", directory: "/home/lizy2001/genbc/linux")
!4010 = !{!4011}
!4011 = !DIDerivedType(tag: DW_TAG_member, name: "cpumask", scope: !4008, file: !4009, line: 12, baseType: !2468, size: 64)
!4012 = !DIDerivedType(tag: DW_TAG_member, name: "flush_required", scope: !4005, file: !2268, line: 88, baseType: !771, size: 8, offset: 64)
!4013 = !DIDerivedType(tag: DW_TAG_member, name: "writable", scope: !4005, file: !2268, line: 95, baseType: !771, size: 8, offset: 72)
!4014 = !DIDerivedType(tag: DW_TAG_member, scope: !2327, file: !2328, line: 1184, baseType: !4015, size: 128, offset: 12416)
!4015 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2327, file: !2328, line: 1184, size: 128, elements: !4016)
!4016 = !{!4017, !4018}
!4017 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_users", scope: !4015, file: !2328, line: 1185, baseType: !568, size: 32)
!4018 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !4015, file: !2328, line: 1186, baseType: !299, size: 128, align: 64)
!4019 = !DIDerivedType(tag: DW_TAG_member, name: "splice_pipe", scope: !2327, file: !2328, line: 1190, baseType: !1883, size: 64, offset: 12544)
!4020 = !DIDerivedType(tag: DW_TAG_member, name: "task_frag", scope: !2327, file: !2328, line: 1192, baseType: !4021, size: 128, offset: 12608)
!4021 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page_frag", file: !2268, line: 64, size: 128, elements: !4022)
!4022 = !{!4023, !4024, !4025}
!4023 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !4021, file: !2268, line: 65, baseType: !1719, size: 64)
!4024 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !4021, file: !2268, line: 67, baseType: !493, size: 32, offset: 64)
!4025 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4021, file: !2268, line: 68, baseType: !493, size: 32, offset: 96)
!4026 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied", scope: !2327, file: !2328, line: 1206, baseType: !32, size: 32, offset: 12736)
!4027 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied_pause", scope: !2327, file: !2328, line: 1207, baseType: !32, size: 32, offset: 12768)
!4028 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_paused_when", scope: !2327, file: !2328, line: 1209, baseType: !312, size: 64, offset: 12800)
!4029 = !DIDerivedType(tag: DW_TAG_member, name: "timer_slack_ns", scope: !2327, file: !2328, line: 1219, baseType: !331, size: 64, offset: 12864)
!4030 = !DIDerivedType(tag: DW_TAG_member, name: "default_timer_slack_ns", scope: !2327, file: !2328, line: 1220, baseType: !331, size: 64, offset: 12928)
!4031 = !DIDerivedType(tag: DW_TAG_member, name: "pagefault_disabled", scope: !2327, file: !2328, line: 1317, baseType: !32, size: 32, offset: 12992)
!4032 = !DIDerivedType(tag: DW_TAG_member, name: "oom_reaper_list", scope: !2327, file: !2328, line: 1319, baseType: !2326, size: 64, offset: 13056)
!4033 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm_area", scope: !2327, file: !2328, line: 1322, baseType: !4034, size: 64, offset: 13120)
!4034 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4035, size: 64)
!4035 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_struct", file: !4036, line: 56, size: 512, elements: !4037)
!4036 = !DIFile(filename: "./include/linux/vmalloc.h", directory: "/home/lizy2001/genbc/linux")
!4037 = !{!4038, !4039, !4040, !4041, !4042, !4043, !4044, !4046}
!4038 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4035, file: !4036, line: 57, baseType: !4034, size: 64)
!4039 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !4035, file: !4036, line: 58, baseType: !591, size: 64, offset: 64)
!4040 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4035, file: !4036, line: 59, baseType: !312, size: 64, offset: 128)
!4041 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4035, file: !4036, line: 60, baseType: !312, size: 64, offset: 192)
!4042 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !4035, file: !4036, line: 61, baseType: !1801, size: 64, offset: 256)
!4043 = !DIDerivedType(tag: DW_TAG_member, name: "nr_pages", scope: !4035, file: !4036, line: 62, baseType: !7, size: 32, offset: 320)
!4044 = !DIDerivedType(tag: DW_TAG_member, name: "phys_addr", scope: !4035, file: !4036, line: 63, baseType: !4045, size: 64, offset: 384)
!4045 = !DIDerivedType(tag: DW_TAG_typedef, name: "phys_addr_t", file: !277, line: 153, baseType: !331)
!4046 = !DIDerivedType(tag: DW_TAG_member, name: "caller", scope: !4035, file: !4036, line: 64, baseType: !3258, size: 64, offset: 448)
!4047 = !DIDerivedType(tag: DW_TAG_member, name: "stack_refcount", scope: !2327, file: !2328, line: 1326, baseType: !568, size: 32, offset: 13184)
!4048 = !DIDerivedType(tag: DW_TAG_member, name: "mce_vaddr", scope: !2327, file: !2328, line: 1342, baseType: !591, size: 64, offset: 13248)
!4049 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kflags", scope: !2327, file: !2328, line: 1343, baseType: !333, size: 64, offset: 13312)
!4050 = !DIDerivedType(tag: DW_TAG_member, name: "mce_addr", scope: !2327, file: !2328, line: 1344, baseType: !331, size: 64, offset: 13376)
!4051 = !DIDerivedType(tag: DW_TAG_member, name: "mce_ripv", scope: !2327, file: !2328, line: 1345, baseType: !333, size: 1, offset: 13440, flags: DIFlagBitField, extraData: i64 13440)
!4052 = !DIDerivedType(tag: DW_TAG_member, name: "mce_whole_page", scope: !2327, file: !2328, line: 1346, baseType: !333, size: 1, offset: 13441, flags: DIFlagBitField, extraData: i64 13440)
!4053 = !DIDerivedType(tag: DW_TAG_member, name: "__mce_reserved", scope: !2327, file: !2328, line: 1347, baseType: !333, size: 62, offset: 13442, flags: DIFlagBitField, extraData: i64 13440)
!4054 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kill_me", scope: !2327, file: !2328, line: 1348, baseType: !299, size: 128, align: 64, offset: 13504)
!4055 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !2327, file: !2328, line: 1358, baseType: !4056, size: 34816, offset: 13824)
!4056 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_struct", file: !4057, line: 485, size: 34816, elements: !4058)
!4057 = !DIFile(filename: "./arch/x86/include/asm/processor.h", directory: "/home/lizy2001/genbc/linux")
!4058 = !{!4059, !4077, !4078, !4079, !4080, !4081, !4082, !4083, !4084, !4088, !4089, !4090, !4091, !4092, !4093, !4096, !4097, !4098}
!4059 = !DIDerivedType(tag: DW_TAG_member, name: "tls_array", scope: !4056, file: !4057, line: 487, baseType: !4060, size: 192)
!4060 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4061, size: 192, elements: !1592)
!4061 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "desc_struct", file: !4062, line: 16, size: 64, elements: !4063)
!4062 = !DIFile(filename: "./arch/x86/include/asm/desc_defs.h", directory: "/home/lizy2001/genbc/linux")
!4063 = !{!4064, !4065, !4066, !4067, !4068, !4069, !4070, !4071, !4072, !4073, !4074, !4075, !4076}
!4064 = !DIDerivedType(tag: DW_TAG_member, name: "limit0", scope: !4061, file: !4062, line: 17, baseType: !581, size: 16)
!4065 = !DIDerivedType(tag: DW_TAG_member, name: "base0", scope: !4061, file: !4062, line: 18, baseType: !581, size: 16, offset: 16)
!4066 = !DIDerivedType(tag: DW_TAG_member, name: "base1", scope: !4061, file: !4062, line: 19, baseType: !581, size: 8, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!4067 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4061, file: !4062, line: 19, baseType: !581, size: 4, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!4068 = !DIDerivedType(tag: DW_TAG_member, name: "s", scope: !4061, file: !4062, line: 19, baseType: !581, size: 1, offset: 44, flags: DIFlagBitField, extraData: i64 32)
!4069 = !DIDerivedType(tag: DW_TAG_member, name: "dpl", scope: !4061, file: !4062, line: 19, baseType: !581, size: 2, offset: 45, flags: DIFlagBitField, extraData: i64 32)
!4070 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !4061, file: !4062, line: 19, baseType: !581, size: 1, offset: 47, flags: DIFlagBitField, extraData: i64 32)
!4071 = !DIDerivedType(tag: DW_TAG_member, name: "limit1", scope: !4061, file: !4062, line: 20, baseType: !581, size: 4, offset: 48, flags: DIFlagBitField, extraData: i64 32)
!4072 = !DIDerivedType(tag: DW_TAG_member, name: "avl", scope: !4061, file: !4062, line: 20, baseType: !581, size: 1, offset: 52, flags: DIFlagBitField, extraData: i64 32)
!4073 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !4061, file: !4062, line: 20, baseType: !581, size: 1, offset: 53, flags: DIFlagBitField, extraData: i64 32)
!4074 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !4061, file: !4062, line: 20, baseType: !581, size: 1, offset: 54, flags: DIFlagBitField, extraData: i64 32)
!4075 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !4061, file: !4062, line: 20, baseType: !581, size: 1, offset: 55, flags: DIFlagBitField, extraData: i64 32)
!4076 = !DIDerivedType(tag: DW_TAG_member, name: "base2", scope: !4061, file: !4062, line: 20, baseType: !581, size: 8, offset: 56, flags: DIFlagBitField, extraData: i64 32)
!4077 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !4056, file: !4057, line: 491, baseType: !312, size: 64, offset: 192)
!4078 = !DIDerivedType(tag: DW_TAG_member, name: "es", scope: !4056, file: !4057, line: 495, baseType: !476, size: 16, offset: 256)
!4079 = !DIDerivedType(tag: DW_TAG_member, name: "ds", scope: !4056, file: !4057, line: 496, baseType: !476, size: 16, offset: 272)
!4080 = !DIDerivedType(tag: DW_TAG_member, name: "fsindex", scope: !4056, file: !4057, line: 497, baseType: !476, size: 16, offset: 288)
!4081 = !DIDerivedType(tag: DW_TAG_member, name: "gsindex", scope: !4056, file: !4057, line: 498, baseType: !476, size: 16, offset: 304)
!4082 = !DIDerivedType(tag: DW_TAG_member, name: "fsbase", scope: !4056, file: !4057, line: 502, baseType: !312, size: 64, offset: 320)
!4083 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !4056, file: !4057, line: 503, baseType: !312, size: 64, offset: 384)
!4084 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_bps", scope: !4056, file: !4057, line: 514, baseType: !4085, size: 256, offset: 448)
!4085 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4086, size: 256, elements: !2272)
!4086 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4087, size: 64)
!4087 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event", file: !4057, line: 483, flags: DIFlagFwdDecl)
!4088 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_dr6", scope: !4056, file: !4057, line: 516, baseType: !312, size: 64, offset: 704)
!4089 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_dr7", scope: !4056, file: !4057, line: 518, baseType: !312, size: 64, offset: 768)
!4090 = !DIDerivedType(tag: DW_TAG_member, name: "cr2", scope: !4056, file: !4057, line: 520, baseType: !312, size: 64, offset: 832)
!4091 = !DIDerivedType(tag: DW_TAG_member, name: "trap_nr", scope: !4056, file: !4057, line: 521, baseType: !312, size: 64, offset: 896)
!4092 = !DIDerivedType(tag: DW_TAG_member, name: "error_code", scope: !4056, file: !4057, line: 522, baseType: !312, size: 64, offset: 960)
!4093 = !DIDerivedType(tag: DW_TAG_member, name: "io_bitmap", scope: !4056, file: !4057, line: 528, baseType: !4094, size: 64, offset: 1024)
!4094 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4095, size: 64)
!4095 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_bitmap", file: !4057, line: 10, flags: DIFlagFwdDecl)
!4096 = !DIDerivedType(tag: DW_TAG_member, name: "iopl_emul", scope: !4056, file: !4057, line: 535, baseType: !312, size: 64, offset: 1088)
!4097 = !DIDerivedType(tag: DW_TAG_member, name: "sig_on_uaccess_err", scope: !4056, file: !4057, line: 537, baseType: !7, size: 1, offset: 1152, flags: DIFlagBitField, extraData: i64 1152)
!4098 = !DIDerivedType(tag: DW_TAG_member, name: "fpu", scope: !4056, file: !4057, line: 540, baseType: !4099, size: 33280, offset: 1536)
!4099 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fpu", file: !4100, line: 317, size: 33280, elements: !4101)
!4100 = !DIFile(filename: "./arch/x86/include/asm/fpu/types.h", directory: "/home/lizy2001/genbc/linux")
!4101 = !{!4102, !4103, !4104}
!4102 = !DIDerivedType(tag: DW_TAG_member, name: "last_cpu", scope: !4099, file: !4100, line: 330, baseType: !7, size: 32)
!4103 = !DIDerivedType(tag: DW_TAG_member, name: "avx512_timestamp", scope: !4099, file: !4100, line: 337, baseType: !312, size: 64, offset: 64)
!4104 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !4099, file: !4100, line: 348, baseType: !4105, size: 32768, offset: 512)
!4105 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "fpregs_state", file: !4100, line: 304, size: 32768, elements: !4106)
!4106 = !{!4107, !4120, !4157, !4207, !4220}
!4107 = !DIDerivedType(tag: DW_TAG_member, name: "fsave", scope: !4105, file: !4100, line: 305, baseType: !4108, size: 896)
!4108 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fregs_state", file: !4100, line: 12, size: 896, elements: !4109)
!4109 = !{!4110, !4111, !4112, !4113, !4114, !4115, !4116, !4117, !4119}
!4110 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !4108, file: !4100, line: 13, baseType: !987, size: 32)
!4111 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !4108, file: !4100, line: 14, baseType: !987, size: 32, offset: 32)
!4112 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !4108, file: !4100, line: 15, baseType: !987, size: 32, offset: 64)
!4113 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !4108, file: !4100, line: 16, baseType: !987, size: 32, offset: 96)
!4114 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !4108, file: !4100, line: 17, baseType: !987, size: 32, offset: 128)
!4115 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !4108, file: !4100, line: 18, baseType: !987, size: 32, offset: 160)
!4116 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !4108, file: !4100, line: 19, baseType: !987, size: 32, offset: 192)
!4117 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !4108, file: !4100, line: 22, baseType: !4118, size: 640, offset: 224)
!4118 = !DICompositeType(tag: DW_TAG_array_type, baseType: !987, size: 640, elements: !900)
!4119 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !4108, file: !4100, line: 25, baseType: !987, size: 32, offset: 864)
!4120 = !DIDerivedType(tag: DW_TAG_member, name: "fxsave", scope: !4105, file: !4100, line: 306, baseType: !4121, size: 4096, align: 128)
!4121 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fxregs_state", file: !4100, line: 34, size: 4096, align: 128, elements: !4122)
!4122 = !{!4123, !4124, !4125, !4126, !4127, !4142, !4143, !4144, !4146, !4148, !4152}
!4123 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !4121, file: !4100, line: 35, baseType: !581, size: 16)
!4124 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !4121, file: !4100, line: 36, baseType: !581, size: 16, offset: 16)
!4125 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !4121, file: !4100, line: 37, baseType: !581, size: 16, offset: 32)
!4126 = !DIDerivedType(tag: DW_TAG_member, name: "fop", scope: !4121, file: !4100, line: 38, baseType: !581, size: 16, offset: 48)
!4127 = !DIDerivedType(tag: DW_TAG_member, scope: !4121, file: !4100, line: 39, baseType: !4128, size: 128, offset: 64)
!4128 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4121, file: !4100, line: 39, size: 128, elements: !4129)
!4129 = !{!4130, !4135}
!4130 = !DIDerivedType(tag: DW_TAG_member, scope: !4128, file: !4100, line: 40, baseType: !4131, size: 128)
!4131 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4128, file: !4100, line: 40, size: 128, elements: !4132)
!4132 = !{!4133, !4134}
!4133 = !DIDerivedType(tag: DW_TAG_member, name: "rip", scope: !4131, file: !4100, line: 41, baseType: !331, size: 64)
!4134 = !DIDerivedType(tag: DW_TAG_member, name: "rdp", scope: !4131, file: !4100, line: 42, baseType: !331, size: 64, offset: 64)
!4135 = !DIDerivedType(tag: DW_TAG_member, scope: !4128, file: !4100, line: 44, baseType: !4136, size: 128)
!4136 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4128, file: !4100, line: 44, size: 128, elements: !4137)
!4137 = !{!4138, !4139, !4140, !4141}
!4138 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !4136, file: !4100, line: 45, baseType: !987, size: 32)
!4139 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !4136, file: !4100, line: 46, baseType: !987, size: 32, offset: 32)
!4140 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !4136, file: !4100, line: 47, baseType: !987, size: 32, offset: 64)
!4141 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !4136, file: !4100, line: 48, baseType: !987, size: 32, offset: 96)
!4142 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr", scope: !4121, file: !4100, line: 51, baseType: !987, size: 32, offset: 192)
!4143 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr_mask", scope: !4121, file: !4100, line: 52, baseType: !987, size: 32, offset: 224)
!4144 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !4121, file: !4100, line: 55, baseType: !4145, size: 1024, offset: 256)
!4145 = !DICompositeType(tag: DW_TAG_array_type, baseType: !987, size: 1024, elements: !819)
!4146 = !DIDerivedType(tag: DW_TAG_member, name: "xmm_space", scope: !4121, file: !4100, line: 58, baseType: !4147, size: 2048, offset: 1280)
!4147 = !DICompositeType(tag: DW_TAG_array_type, baseType: !987, size: 2048, elements: !3812)
!4148 = !DIDerivedType(tag: DW_TAG_member, name: "padding", scope: !4121, file: !4100, line: 60, baseType: !4149, size: 384, offset: 3328)
!4149 = !DICompositeType(tag: DW_TAG_array_type, baseType: !987, size: 384, elements: !4150)
!4150 = !{!4151}
!4151 = !DISubrange(count: 12)
!4152 = !DIDerivedType(tag: DW_TAG_member, scope: !4121, file: !4100, line: 62, baseType: !4153, size: 384, offset: 3712)
!4153 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4121, file: !4100, line: 62, size: 384, elements: !4154)
!4154 = !{!4155, !4156}
!4155 = !DIDerivedType(tag: DW_TAG_member, name: "padding1", scope: !4153, file: !4100, line: 63, baseType: !4149, size: 384)
!4156 = !DIDerivedType(tag: DW_TAG_member, name: "sw_reserved", scope: !4153, file: !4100, line: 64, baseType: !4149, size: 384)
!4157 = !DIDerivedType(tag: DW_TAG_member, name: "soft", scope: !4105, file: !4100, line: 307, baseType: !4158, size: 1088)
!4158 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swregs_state", file: !4100, line: 79, size: 1088, elements: !4159)
!4159 = !{!4160, !4161, !4162, !4163, !4164, !4165, !4166, !4167, !4168, !4169, !4170, !4171, !4172, !4173, !4174, !4206}
!4160 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !4158, file: !4100, line: 80, baseType: !987, size: 32)
!4161 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !4158, file: !4100, line: 81, baseType: !987, size: 32, offset: 32)
!4162 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !4158, file: !4100, line: 82, baseType: !987, size: 32, offset: 64)
!4163 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !4158, file: !4100, line: 83, baseType: !987, size: 32, offset: 96)
!4164 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !4158, file: !4100, line: 84, baseType: !987, size: 32, offset: 128)
!4165 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !4158, file: !4100, line: 85, baseType: !987, size: 32, offset: 160)
!4166 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !4158, file: !4100, line: 86, baseType: !987, size: 32, offset: 192)
!4167 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !4158, file: !4100, line: 88, baseType: !4118, size: 640, offset: 224)
!4168 = !DIDerivedType(tag: DW_TAG_member, name: "ftop", scope: !4158, file: !4100, line: 89, baseType: !794, size: 8, offset: 864)
!4169 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !4158, file: !4100, line: 90, baseType: !794, size: 8, offset: 872)
!4170 = !DIDerivedType(tag: DW_TAG_member, name: "lookahead", scope: !4158, file: !4100, line: 91, baseType: !794, size: 8, offset: 880)
!4171 = !DIDerivedType(tag: DW_TAG_member, name: "no_update", scope: !4158, file: !4100, line: 92, baseType: !794, size: 8, offset: 888)
!4172 = !DIDerivedType(tag: DW_TAG_member, name: "rm", scope: !4158, file: !4100, line: 93, baseType: !794, size: 8, offset: 896)
!4173 = !DIDerivedType(tag: DW_TAG_member, name: "alimit", scope: !4158, file: !4100, line: 94, baseType: !794, size: 8, offset: 904)
!4174 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !4158, file: !4100, line: 95, baseType: !4175, size: 64, offset: 960)
!4175 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4176, size: 64)
!4176 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "math_emu_info", file: !4177, line: 11, size: 128, elements: !4178)
!4177 = !DIFile(filename: "./arch/x86/include/asm/math_emu.h", directory: "/home/lizy2001/genbc/linux")
!4178 = !{!4179, !4180}
!4179 = !DIDerivedType(tag: DW_TAG_member, name: "___orig_eip", scope: !4176, file: !4177, line: 12, baseType: !998, size: 64)
!4180 = !DIDerivedType(tag: DW_TAG_member, name: "regs", scope: !4176, file: !4177, line: 13, baseType: !4181, size: 64, offset: 64)
!4181 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4182, size: 64)
!4182 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pt_regs", file: !4183, line: 56, size: 1344, elements: !4184)
!4183 = !DIFile(filename: "./arch/x86/include/asm/ptrace.h", directory: "/home/lizy2001/genbc/linux")
!4184 = !{!4185, !4186, !4187, !4188, !4189, !4190, !4191, !4192, !4193, !4194, !4195, !4196, !4197, !4198, !4199, !4200, !4201, !4202, !4203, !4204, !4205}
!4185 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !4182, file: !4183, line: 61, baseType: !312, size: 64)
!4186 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !4182, file: !4183, line: 62, baseType: !312, size: 64, offset: 64)
!4187 = !DIDerivedType(tag: DW_TAG_member, name: "r13", scope: !4182, file: !4183, line: 63, baseType: !312, size: 64, offset: 128)
!4188 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !4182, file: !4183, line: 64, baseType: !312, size: 64, offset: 192)
!4189 = !DIDerivedType(tag: DW_TAG_member, name: "bp", scope: !4182, file: !4183, line: 65, baseType: !312, size: 64, offset: 256)
!4190 = !DIDerivedType(tag: DW_TAG_member, name: "bx", scope: !4182, file: !4183, line: 66, baseType: !312, size: 64, offset: 320)
!4191 = !DIDerivedType(tag: DW_TAG_member, name: "r11", scope: !4182, file: !4183, line: 68, baseType: !312, size: 64, offset: 384)
!4192 = !DIDerivedType(tag: DW_TAG_member, name: "r10", scope: !4182, file: !4183, line: 69, baseType: !312, size: 64, offset: 448)
!4193 = !DIDerivedType(tag: DW_TAG_member, name: "r9", scope: !4182, file: !4183, line: 70, baseType: !312, size: 64, offset: 512)
!4194 = !DIDerivedType(tag: DW_TAG_member, name: "r8", scope: !4182, file: !4183, line: 71, baseType: !312, size: 64, offset: 576)
!4195 = !DIDerivedType(tag: DW_TAG_member, name: "ax", scope: !4182, file: !4183, line: 72, baseType: !312, size: 64, offset: 640)
!4196 = !DIDerivedType(tag: DW_TAG_member, name: "cx", scope: !4182, file: !4183, line: 73, baseType: !312, size: 64, offset: 704)
!4197 = !DIDerivedType(tag: DW_TAG_member, name: "dx", scope: !4182, file: !4183, line: 74, baseType: !312, size: 64, offset: 768)
!4198 = !DIDerivedType(tag: DW_TAG_member, name: "si", scope: !4182, file: !4183, line: 75, baseType: !312, size: 64, offset: 832)
!4199 = !DIDerivedType(tag: DW_TAG_member, name: "di", scope: !4182, file: !4183, line: 76, baseType: !312, size: 64, offset: 896)
!4200 = !DIDerivedType(tag: DW_TAG_member, name: "orig_ax", scope: !4182, file: !4183, line: 81, baseType: !312, size: 64, offset: 960)
!4201 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !4182, file: !4183, line: 83, baseType: !312, size: 64, offset: 1024)
!4202 = !DIDerivedType(tag: DW_TAG_member, name: "cs", scope: !4182, file: !4183, line: 84, baseType: !312, size: 64, offset: 1088)
!4203 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4182, file: !4183, line: 85, baseType: !312, size: 64, offset: 1152)
!4204 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !4182, file: !4183, line: 86, baseType: !312, size: 64, offset: 1216)
!4205 = !DIDerivedType(tag: DW_TAG_member, name: "ss", scope: !4182, file: !4183, line: 87, baseType: !312, size: 64, offset: 1280)
!4206 = !DIDerivedType(tag: DW_TAG_member, name: "entry_eip", scope: !4158, file: !4100, line: 96, baseType: !987, size: 32, offset: 1024)
!4207 = !DIDerivedType(tag: DW_TAG_member, name: "xsave", scope: !4105, file: !4100, line: 308, baseType: !4208, size: 4608, align: 512)
!4208 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xregs_state", file: !4100, line: 289, size: 4608, align: 512, elements: !4209)
!4209 = !{!4210, !4211, !4218}
!4210 = !DIDerivedType(tag: DW_TAG_member, name: "i387", scope: !4208, file: !4100, line: 290, baseType: !4121, size: 4096, align: 128)
!4211 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !4208, file: !4100, line: 291, baseType: !4212, size: 512, offset: 4096)
!4212 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xstate_header", file: !4100, line: 268, size: 512, elements: !4213)
!4213 = !{!4214, !4215, !4216}
!4214 = !DIDerivedType(tag: DW_TAG_member, name: "xfeatures", scope: !4212, file: !4100, line: 269, baseType: !331, size: 64)
!4215 = !DIDerivedType(tag: DW_TAG_member, name: "xcomp_bv", scope: !4212, file: !4100, line: 270, baseType: !331, size: 64, offset: 64)
!4216 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !4212, file: !4100, line: 271, baseType: !4217, size: 384, offset: 128)
!4217 = !DICompositeType(tag: DW_TAG_array_type, baseType: !331, size: 384, elements: !999)
!4218 = !DIDerivedType(tag: DW_TAG_member, name: "extended_state_area", scope: !4208, file: !4100, line: 292, baseType: !4219, offset: 4608)
!4219 = !DICompositeType(tag: DW_TAG_array_type, baseType: !794, elements: !483)
!4220 = !DIDerivedType(tag: DW_TAG_member, name: "__padding", scope: !4105, file: !4100, line: 309, baseType: !4221, size: 32768)
!4221 = !DICompositeType(tag: DW_TAG_array_type, baseType: !794, size: 32768, elements: !4222)
!4222 = !{!4223}
!4223 = !DISubrange(count: 4096)
!4224 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2323, file: !1721, line: 378, baseType: !4225, size: 64, offset: 64)
!4225 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2323, size: 64)
!4226 = !DIDerivedType(tag: DW_TAG_member, name: "startup", scope: !2319, file: !1721, line: 384, baseType: !2597, size: 192, offset: 192)
!4227 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_lock", scope: !2095, file: !1721, line: 500, baseType: !1670, offset: 6656)
!4228 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_table", scope: !2095, file: !1721, line: 501, baseType: !4229, size: 64, offset: 6656)
!4229 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4230, size: 64)
!4230 = !DICompositeType(tag: DW_TAG_structure_type, name: "kioctx_table", file: !1721, line: 387, flags: DIFlagFwdDecl)
!4231 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !2095, file: !1721, line: 516, baseType: !2781, size: 64, offset: 6720)
!4232 = !DIDerivedType(tag: DW_TAG_member, name: "exe_file", scope: !2095, file: !1721, line: 519, baseType: !1315, size: 64, offset: 6784)
!4233 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_subscriptions", scope: !2095, file: !1721, line: 521, baseType: !4234, size: 64, offset: 6848)
!4234 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4235, size: 64)
!4235 = !DICompositeType(tag: DW_TAG_structure_type, name: "mmu_notifier_subscriptions", file: !1721, line: 521, flags: DIFlagFwdDecl)
!4236 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_pending", scope: !2095, file: !1721, line: 545, baseType: !383, size: 32, offset: 6912)
!4237 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_batched", scope: !2095, file: !1721, line: 548, baseType: !771, size: 8, offset: 6944)
!4238 = !DIDerivedType(tag: DW_TAG_member, name: "uprobes_state", scope: !2095, file: !1721, line: 550, baseType: !4239, offset: 6952)
!4239 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uprobes_state", file: !4240, line: 142, elements: !1587)
!4240 = !DIFile(filename: "./include/linux/uprobes.h", directory: "/home/lizy2001/genbc/linux")
!4241 = !DIDerivedType(tag: DW_TAG_member, name: "async_put_work", scope: !2095, file: !1721, line: 554, baseType: !2829, size: 256, offset: 6976)
!4242 = !DIDerivedType(tag: DW_TAG_member, name: "pasid", scope: !2095, file: !1721, line: 557, baseType: !987, size: 32, offset: 7232)
!4243 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_bitmap", scope: !2092, file: !1721, line: 565, baseType: !4244, offset: 7296)
!4244 = !DICompositeType(tag: DW_TAG_array_type, baseType: !312, elements: !309)
!4245 = !DIDerivedType(tag: DW_TAG_member, name: "pt_frag_refcount", scope: !2088, file: !1721, line: 151, baseType: !383, size: 32)
!4246 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !2080, file: !1721, line: 156, baseType: !1670, offset: 256)
!4247 = !DIDerivedType(tag: DW_TAG_member, scope: !1725, file: !1721, line: 159, baseType: !4248, size: 128)
!4248 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1725, file: !1721, line: 159, size: 128, elements: !4249)
!4249 = !{!4250, !4321}
!4250 = !DIDerivedType(tag: DW_TAG_member, name: "pgmap", scope: !4248, file: !1721, line: 161, baseType: !4251, size: 64)
!4251 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4252, size: 64)
!4252 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pagemap", file: !4253, line: 110, size: 1152, elements: !4254)
!4253 = !DIFile(filename: "./include/linux/memremap.h", directory: "/home/lizy2001/genbc/linux")
!4254 = !{!4255, !4265, !4286, !4287, !4288, !4295, !4296, !4308, !4309, !4310}
!4255 = !DIDerivedType(tag: DW_TAG_member, name: "altmap", scope: !4252, file: !4253, line: 111, baseType: !4256, size: 384)
!4256 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vmem_altmap", file: !4253, line: 19, size: 384, elements: !4257)
!4257 = !{!4258, !4260, !4261, !4262, !4263, !4264}
!4258 = !DIDerivedType(tag: DW_TAG_member, name: "base_pfn", scope: !4256, file: !4253, line: 20, baseType: !4259, size: 64)
!4259 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !312)
!4260 = !DIDerivedType(tag: DW_TAG_member, name: "end_pfn", scope: !4256, file: !4253, line: 21, baseType: !4259, size: 64, offset: 64)
!4261 = !DIDerivedType(tag: DW_TAG_member, name: "reserve", scope: !4256, file: !4253, line: 22, baseType: !4259, size: 64, offset: 128)
!4262 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !4256, file: !4253, line: 23, baseType: !312, size: 64, offset: 192)
!4263 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !4256, file: !4253, line: 24, baseType: !312, size: 64, offset: 256)
!4264 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !4256, file: !4253, line: 25, baseType: !312, size: 64, offset: 320)
!4265 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !4252, file: !4253, line: 112, baseType: !4266, size: 64, offset: 384)
!4266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4267, size: 64)
!4267 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_ref", file: !4268, line: 105, size: 128, elements: !4269)
!4268 = !DIFile(filename: "./include/linux/percpu-refcount.h", directory: "/home/lizy2001/genbc/linux")
!4269 = !{!4270, !4271}
!4270 = !DIDerivedType(tag: DW_TAG_member, name: "percpu_count_ptr", scope: !4267, file: !4268, line: 110, baseType: !312, size: 64)
!4271 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !4267, file: !4268, line: 118, baseType: !4272, size: 64, offset: 64)
!4272 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4273, size: 64)
!4273 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_ref_data", file: !4268, line: 95, size: 448, elements: !4274)
!4274 = !{!4275, !4276, !4281, !4282, !4283, !4284, !4285}
!4275 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !4273, file: !4268, line: 96, baseType: !371, size: 64)
!4276 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !4273, file: !4268, line: 97, baseType: !4277, size: 64, offset: 64)
!4277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4278, size: 64)
!4278 = !DIDerivedType(tag: DW_TAG_typedef, name: "percpu_ref_func_t", file: !4268, line: 60, baseType: !4279)
!4279 = !DISubroutineType(types: !4280)
!4280 = !{null, !4266}
!4281 = !DIDerivedType(tag: DW_TAG_member, name: "confirm_switch", scope: !4273, file: !4268, line: 98, baseType: !4277, size: 64, offset: 128)
!4282 = !DIDerivedType(tag: DW_TAG_member, name: "force_atomic", scope: !4273, file: !4268, line: 99, baseType: !771, size: 1, offset: 192, flags: DIFlagBitField, extraData: i64 192)
!4283 = !DIDerivedType(tag: DW_TAG_member, name: "allow_reinit", scope: !4273, file: !4268, line: 100, baseType: !771, size: 1, offset: 193, flags: DIFlagBitField, extraData: i64 192)
!4284 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !4273, file: !4268, line: 101, baseType: !299, size: 128, align: 64, offset: 256)
!4285 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !4273, file: !4268, line: 102, baseType: !4266, size: 64, offset: 384)
!4286 = !DIDerivedType(tag: DW_TAG_member, name: "internal_ref", scope: !4252, file: !4253, line: 113, baseType: !4267, size: 128, offset: 448)
!4287 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !4252, file: !4253, line: 114, baseType: !2597, size: 192, offset: 576)
!4288 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4252, file: !4253, line: 115, baseType: !4289, size: 32, offset: 768)
!4289 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "memory_type", file: !4253, line: 59, baseType: !7, size: 32, elements: !4290)
!4290 = !{!4291, !4292, !4293, !4294}
!4291 = !DIEnumerator(name: "MEMORY_DEVICE_PRIVATE", value: 1, isUnsigned: true)
!4292 = !DIEnumerator(name: "MEMORY_DEVICE_FS_DAX", value: 2, isUnsigned: true)
!4293 = !DIEnumerator(name: "MEMORY_DEVICE_GENERIC", value: 3, isUnsigned: true)
!4294 = !DIEnumerator(name: "MEMORY_DEVICE_PCI_P2PDMA", value: 4, isUnsigned: true)
!4295 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4252, file: !4253, line: 116, baseType: !7, size: 32, offset: 800)
!4296 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4252, file: !4253, line: 117, baseType: !4297, size: 64, offset: 832)
!4297 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4298, size: 64)
!4298 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4299)
!4299 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pagemap_ops", file: !4253, line: 67, size: 256, elements: !4300)
!4300 = !{!4301, !4302, !4306, !4307}
!4301 = !DIDerivedType(tag: DW_TAG_member, name: "page_free", scope: !4299, file: !4253, line: 73, baseType: !1821, size: 64)
!4302 = !DIDerivedType(tag: DW_TAG_member, name: "kill", scope: !4299, file: !4253, line: 78, baseType: !4303, size: 64, offset: 64)
!4303 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4304, size: 64)
!4304 = !DISubroutineType(types: !4305)
!4305 = !{null, !4251}
!4306 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !4299, file: !4253, line: 83, baseType: !4303, size: 64, offset: 128)
!4307 = !DIDerivedType(tag: DW_TAG_member, name: "migrate_to_ram", scope: !4299, file: !4253, line: 89, baseType: !2144, size: 64, offset: 192)
!4308 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4252, file: !4253, line: 118, baseType: !591, size: 64, offset: 896)
!4309 = !DIDerivedType(tag: DW_TAG_member, name: "nr_range", scope: !4252, file: !4253, line: 119, baseType: !32, size: 32, offset: 960)
!4310 = !DIDerivedType(tag: DW_TAG_member, scope: !4252, file: !4253, line: 120, baseType: !4311, size: 128, offset: 1024)
!4311 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4252, file: !4253, line: 120, size: 128, elements: !4312)
!4312 = !{!4313, !4319}
!4313 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !4311, file: !4253, line: 121, baseType: !4314, size: 128)
!4314 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "range", file: !4315, line: 6, size: 128, elements: !4316)
!4315 = !DIFile(filename: "./include/linux/range.h", directory: "/home/lizy2001/genbc/linux")
!4316 = !{!4317, !4318}
!4317 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !4314, file: !4315, line: 7, baseType: !331, size: 64)
!4318 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !4314, file: !4315, line: 8, baseType: !331, size: 64, offset: 64)
!4319 = !DIDerivedType(tag: DW_TAG_member, name: "ranges", scope: !4311, file: !4253, line: 122, baseType: !4320)
!4320 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4314, elements: !483)
!4321 = !DIDerivedType(tag: DW_TAG_member, name: "zone_device_data", scope: !4248, file: !1721, line: 162, baseType: !591, size: 64, offset: 64)
!4322 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !1725, file: !1721, line: 176, baseType: !299, size: 128, align: 64)
!4323 = !DIDerivedType(tag: DW_TAG_member, scope: !1720, file: !1721, line: 179, baseType: !4324, size: 32, offset: 384)
!4324 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1720, file: !1721, line: 179, size: 32, elements: !4325)
!4325 = !{!4326, !4327, !4328, !4329}
!4326 = !DIDerivedType(tag: DW_TAG_member, name: "_mapcount", scope: !4324, file: !1721, line: 184, baseType: !383, size: 32)
!4327 = !DIDerivedType(tag: DW_TAG_member, name: "page_type", scope: !4324, file: !1721, line: 192, baseType: !7, size: 32)
!4328 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !4324, file: !1721, line: 194, baseType: !7, size: 32)
!4329 = !DIDerivedType(tag: DW_TAG_member, name: "units", scope: !4324, file: !1721, line: 195, baseType: !32, size: 32)
!4330 = !DIDerivedType(tag: DW_TAG_member, name: "_refcount", scope: !1720, file: !1721, line: 199, baseType: !383, size: 32, offset: 416)
!4331 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cached_objects", scope: !1600, file: !1317, line: 1964, baseType: !4332, size: 64, offset: 1344)
!4332 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4333, size: 64)
!4333 = !DISubroutineType(types: !4334)
!4334 = !{!998, !1545, !4335}
!4335 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4336, size: 64)
!4336 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrink_control", file: !4337, line: 12, size: 256, elements: !4338)
!4337 = !DIFile(filename: "./include/linux/shrinker.h", directory: "/home/lizy2001/genbc/linux")
!4338 = !{!4339, !4340, !4341, !4342, !4343}
!4339 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !4336, file: !4337, line: 13, baseType: !1742, size: 32)
!4340 = !DIDerivedType(tag: DW_TAG_member, name: "nid", scope: !4336, file: !4337, line: 16, baseType: !32, size: 32, offset: 32)
!4341 = !DIDerivedType(tag: DW_TAG_member, name: "nr_to_scan", scope: !4336, file: !4337, line: 23, baseType: !312, size: 64, offset: 64)
!4342 = !DIDerivedType(tag: DW_TAG_member, name: "nr_scanned", scope: !4336, file: !4337, line: 30, baseType: !312, size: 64, offset: 128)
!4343 = !DIDerivedType(tag: DW_TAG_member, name: "memcg", scope: !4336, file: !4337, line: 33, baseType: !4344, size: 64, offset: 192)
!4344 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4345, size: 64)
!4345 = !DICompositeType(tag: DW_TAG_structure_type, name: "mem_cgroup", file: !1721, line: 27, flags: DIFlagFwdDecl)
!4346 = !DIDerivedType(tag: DW_TAG_member, name: "free_cached_objects", scope: !1600, file: !1317, line: 1966, baseType: !4332, size: 64, offset: 1408)
!4347 = !DIDerivedType(tag: DW_TAG_member, name: "dq_op", scope: !1546, file: !1317, line: 1424, baseType: !4348, size: 64, offset: 448)
!4348 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4349, size: 64)
!4349 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4350)
!4350 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot_operations", file: !4351, line: 322, size: 704, elements: !4352)
!4351 = !DIFile(filename: "./include/linux/quota.h", directory: "/home/lizy2001/genbc/linux")
!4352 = !{!4353, !4404, !4408, !4412, !4413, !4414, !4415, !4416, !4421, !4426, !4430}
!4353 = !DIDerivedType(tag: DW_TAG_member, name: "write_dquot", scope: !4350, file: !4351, line: 323, baseType: !4354, size: 64)
!4354 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4355, size: 64)
!4355 = !DISubroutineType(types: !4356)
!4356 = !{!32, !4357}
!4357 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4358, size: 64)
!4358 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot", file: !4351, line: 294, size: 1600, elements: !4359)
!4359 = !{!4360, !4361, !4362, !4363, !4364, !4365, !4366, !4367, !4368, !4389, !4390, !4391}
!4360 = !DIDerivedType(tag: DW_TAG_member, name: "dq_hash", scope: !4358, file: !4351, line: 295, baseType: !276, size: 128)
!4361 = !DIDerivedType(tag: DW_TAG_member, name: "dq_inuse", scope: !4358, file: !4351, line: 296, baseType: !284, size: 128, offset: 128)
!4362 = !DIDerivedType(tag: DW_TAG_member, name: "dq_free", scope: !4358, file: !4351, line: 297, baseType: !284, size: 128, offset: 256)
!4363 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dirty", scope: !4358, file: !4351, line: 298, baseType: !284, size: 128, offset: 384)
!4364 = !DIDerivedType(tag: DW_TAG_member, name: "dq_lock", scope: !4358, file: !4351, line: 299, baseType: !1665, size: 192, offset: 512)
!4365 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb_lock", scope: !4358, file: !4351, line: 300, baseType: !1670, offset: 704)
!4366 = !DIDerivedType(tag: DW_TAG_member, name: "dq_count", scope: !4358, file: !4351, line: 301, baseType: !383, size: 32, offset: 704)
!4367 = !DIDerivedType(tag: DW_TAG_member, name: "dq_sb", scope: !4358, file: !4351, line: 302, baseType: !1545, size: 64, offset: 768)
!4368 = !DIDerivedType(tag: DW_TAG_member, name: "dq_id", scope: !4358, file: !4351, line: 303, baseType: !4369, size: 64, offset: 832)
!4369 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kqid", file: !4351, line: 68, size: 64, elements: !4370)
!4370 = !{!4371, !4383}
!4371 = !DIDerivedType(tag: DW_TAG_member, scope: !4369, file: !4351, line: 69, baseType: !4372, size: 32)
!4372 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4369, file: !4351, line: 69, size: 32, elements: !4373)
!4373 = !{!4374, !4375, !4376}
!4374 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !4372, file: !4351, line: 70, baseType: !1382, size: 32)
!4375 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !4372, file: !4351, line: 71, baseType: !1390, size: 32)
!4376 = !DIDerivedType(tag: DW_TAG_member, name: "projid", scope: !4372, file: !4351, line: 72, baseType: !4377, size: 32)
!4377 = !DIDerivedType(tag: DW_TAG_typedef, name: "kprojid_t", file: !4378, line: 24, baseType: !4379)
!4378 = !DIFile(filename: "./include/linux/projid.h", directory: "/home/lizy2001/genbc/linux")
!4379 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !4378, line: 22, size: 32, elements: !4380)
!4380 = !{!4381}
!4381 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !4379, file: !4378, line: 23, baseType: !4382, size: 32)
!4382 = !DIDerivedType(tag: DW_TAG_typedef, name: "projid_t", file: !4378, line: 20, baseType: !1388)
!4383 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4369, file: !4351, line: 74, baseType: !4384, size: 32, offset: 32)
!4384 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "quota_type", file: !4351, line: 54, baseType: !7, size: 32, elements: !4385)
!4385 = !{!4386, !4387, !4388}
!4386 = !DIEnumerator(name: "USRQUOTA", value: 0, isUnsigned: true)
!4387 = !DIEnumerator(name: "GRPQUOTA", value: 1, isUnsigned: true)
!4388 = !DIEnumerator(name: "PRJQUOTA", value: 2, isUnsigned: true)
!4389 = !DIDerivedType(tag: DW_TAG_member, name: "dq_off", scope: !4358, file: !4351, line: 304, baseType: !1476, size: 64, offset: 896)
!4390 = !DIDerivedType(tag: DW_TAG_member, name: "dq_flags", scope: !4358, file: !4351, line: 305, baseType: !312, size: 64, offset: 960)
!4391 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb", scope: !4358, file: !4351, line: 306, baseType: !4392, size: 576, offset: 1024)
!4392 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqblk", file: !4351, line: 205, size: 576, elements: !4393)
!4393 = !{!4394, !4396, !4397, !4398, !4399, !4400, !4401, !4402, !4403}
!4394 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bhardlimit", scope: !4392, file: !4351, line: 206, baseType: !4395, size: 64)
!4395 = !DIDerivedType(tag: DW_TAG_typedef, name: "qsize_t", file: !4351, line: 66, baseType: !379)
!4396 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bsoftlimit", scope: !4392, file: !4351, line: 207, baseType: !4395, size: 64, offset: 64)
!4397 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curspace", scope: !4392, file: !4351, line: 208, baseType: !4395, size: 64, offset: 128)
!4398 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_rsvspace", scope: !4392, file: !4351, line: 209, baseType: !4395, size: 64, offset: 192)
!4399 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_ihardlimit", scope: !4392, file: !4351, line: 210, baseType: !4395, size: 64, offset: 256)
!4400 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_isoftlimit", scope: !4392, file: !4351, line: 211, baseType: !4395, size: 64, offset: 320)
!4401 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curinodes", scope: !4392, file: !4351, line: 212, baseType: !4395, size: 64, offset: 384)
!4402 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_btime", scope: !4392, file: !4351, line: 213, baseType: !1483, size: 64, offset: 448)
!4403 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_itime", scope: !4392, file: !4351, line: 214, baseType: !1483, size: 64, offset: 512)
!4404 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_dquot", scope: !4350, file: !4351, line: 324, baseType: !4405, size: 64, offset: 64)
!4405 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4406, size: 64)
!4406 = !DISubroutineType(types: !4407)
!4407 = !{!4357, !1545, !32}
!4408 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_dquot", scope: !4350, file: !4351, line: 325, baseType: !4409, size: 64, offset: 128)
!4409 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4410, size: 64)
!4410 = !DISubroutineType(types: !4411)
!4411 = !{null, !4357}
!4412 = !DIDerivedType(tag: DW_TAG_member, name: "acquire_dquot", scope: !4350, file: !4351, line: 326, baseType: !4354, size: 64, offset: 192)
!4413 = !DIDerivedType(tag: DW_TAG_member, name: "release_dquot", scope: !4350, file: !4351, line: 327, baseType: !4354, size: 64, offset: 256)
!4414 = !DIDerivedType(tag: DW_TAG_member, name: "mark_dirty", scope: !4350, file: !4351, line: 328, baseType: !4354, size: 64, offset: 320)
!4415 = !DIDerivedType(tag: DW_TAG_member, name: "write_info", scope: !4350, file: !4351, line: 329, baseType: !1628, size: 64, offset: 384)
!4416 = !DIDerivedType(tag: DW_TAG_member, name: "get_reserved_space", scope: !4350, file: !4351, line: 332, baseType: !4417, size: 64, offset: 448)
!4417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4418, size: 64)
!4418 = !DISubroutineType(types: !4419)
!4419 = !{!4420, !1375}
!4420 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4395, size: 64)
!4421 = !DIDerivedType(tag: DW_TAG_member, name: "get_projid", scope: !4350, file: !4351, line: 333, baseType: !4422, size: 64, offset: 512)
!4422 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4423, size: 64)
!4423 = !DISubroutineType(types: !4424)
!4424 = !{!32, !1375, !4425}
!4425 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4377, size: 64)
!4426 = !DIDerivedType(tag: DW_TAG_member, name: "get_inode_usage", scope: !4350, file: !4351, line: 335, baseType: !4427, size: 64, offset: 576)
!4427 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4428, size: 64)
!4428 = !DISubroutineType(types: !4429)
!4429 = !{!32, !1375, !4420}
!4430 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !4350, file: !4351, line: 337, baseType: !4431, size: 64, offset: 640)
!4431 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4432, size: 64)
!4432 = !DISubroutineType(types: !4433)
!4433 = !{!32, !1545, !4434}
!4434 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4369, size: 64)
!4435 = !DIDerivedType(tag: DW_TAG_member, name: "s_qcop", scope: !1546, file: !1317, line: 1425, baseType: !4436, size: 64, offset: 512)
!4436 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4437, size: 64)
!4437 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4438)
!4438 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quotactl_ops", file: !4351, line: 428, size: 704, elements: !4439)
!4439 = !{!4440, !4444, !4445, !4449, !4450, !4451, !4466, !4489, !4493, !4494, !4517}
!4440 = !DIDerivedType(tag: DW_TAG_member, name: "quota_on", scope: !4438, file: !4351, line: 429, baseType: !4441, size: 64)
!4441 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4442, size: 64)
!4442 = !DISubroutineType(types: !4443)
!4443 = !{!32, !1545, !32, !32, !1492}
!4444 = !DIDerivedType(tag: DW_TAG_member, name: "quota_off", scope: !4438, file: !4351, line: 430, baseType: !1628, size: 64, offset: 64)
!4445 = !DIDerivedType(tag: DW_TAG_member, name: "quota_enable", scope: !4438, file: !4351, line: 431, baseType: !4446, size: 64, offset: 128)
!4446 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4447, size: 64)
!4447 = !DISubroutineType(types: !4448)
!4448 = !{!32, !1545, !7}
!4449 = !DIDerivedType(tag: DW_TAG_member, name: "quota_disable", scope: !4438, file: !4351, line: 432, baseType: !4446, size: 64, offset: 192)
!4450 = !DIDerivedType(tag: DW_TAG_member, name: "quota_sync", scope: !4438, file: !4351, line: 433, baseType: !1628, size: 64, offset: 256)
!4451 = !DIDerivedType(tag: DW_TAG_member, name: "set_info", scope: !4438, file: !4351, line: 434, baseType: !4452, size: 64, offset: 320)
!4452 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4453, size: 64)
!4453 = !DISubroutineType(types: !4454)
!4454 = !{!32, !1545, !32, !4455}
!4455 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4456, size: 64)
!4456 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_info", file: !4351, line: 415, size: 256, elements: !4457)
!4457 = !{!4458, !4459, !4460, !4461, !4462, !4463, !4464, !4465}
!4458 = !DIDerivedType(tag: DW_TAG_member, name: "i_fieldmask", scope: !4456, file: !4351, line: 416, baseType: !32, size: 32)
!4459 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !4456, file: !4351, line: 417, baseType: !7, size: 32, offset: 32)
!4460 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_timelimit", scope: !4456, file: !4351, line: 418, baseType: !7, size: 32, offset: 64)
!4461 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_timelimit", scope: !4456, file: !4351, line: 420, baseType: !7, size: 32, offset: 96)
!4462 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_timelimit", scope: !4456, file: !4351, line: 421, baseType: !7, size: 32, offset: 128)
!4463 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_warnlimit", scope: !4456, file: !4351, line: 422, baseType: !7, size: 32, offset: 160)
!4464 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_warnlimit", scope: !4456, file: !4351, line: 423, baseType: !7, size: 32, offset: 192)
!4465 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_warnlimit", scope: !4456, file: !4351, line: 424, baseType: !7, size: 32, offset: 224)
!4466 = !DIDerivedType(tag: DW_TAG_member, name: "get_dqblk", scope: !4438, file: !4351, line: 435, baseType: !4467, size: 64, offset: 384)
!4467 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4468, size: 64)
!4468 = !DISubroutineType(types: !4469)
!4469 = !{!32, !1545, !4369, !4470}
!4470 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4471, size: 64)
!4471 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_dqblk", file: !4351, line: 343, size: 960, elements: !4472)
!4472 = !{!4473, !4474, !4475, !4476, !4477, !4478, !4479, !4480, !4481, !4482, !4483, !4484, !4485, !4486, !4487, !4488}
!4473 = !DIDerivedType(tag: DW_TAG_member, name: "d_fieldmask", scope: !4471, file: !4351, line: 344, baseType: !32, size: 32)
!4474 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_hardlimit", scope: !4471, file: !4351, line: 345, baseType: !331, size: 64, offset: 64)
!4475 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_softlimit", scope: !4471, file: !4351, line: 346, baseType: !331, size: 64, offset: 128)
!4476 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_hardlimit", scope: !4471, file: !4351, line: 347, baseType: !331, size: 64, offset: 192)
!4477 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_softlimit", scope: !4471, file: !4351, line: 348, baseType: !331, size: 64, offset: 256)
!4478 = !DIDerivedType(tag: DW_TAG_member, name: "d_space", scope: !4471, file: !4351, line: 349, baseType: !331, size: 64, offset: 320)
!4479 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_count", scope: !4471, file: !4351, line: 350, baseType: !331, size: 64, offset: 384)
!4480 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_timer", scope: !4471, file: !4351, line: 351, baseType: !377, size: 64, offset: 448)
!4481 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_timer", scope: !4471, file: !4351, line: 353, baseType: !377, size: 64, offset: 512)
!4482 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_warns", scope: !4471, file: !4351, line: 354, baseType: !32, size: 32, offset: 576)
!4483 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_warns", scope: !4471, file: !4351, line: 355, baseType: !32, size: 32, offset: 608)
!4484 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_hardlimit", scope: !4471, file: !4351, line: 356, baseType: !331, size: 64, offset: 640)
!4485 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_softlimit", scope: !4471, file: !4351, line: 357, baseType: !331, size: 64, offset: 704)
!4486 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_space", scope: !4471, file: !4351, line: 358, baseType: !331, size: 64, offset: 768)
!4487 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_timer", scope: !4471, file: !4351, line: 359, baseType: !377, size: 64, offset: 832)
!4488 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_warns", scope: !4471, file: !4351, line: 360, baseType: !32, size: 32, offset: 896)
!4489 = !DIDerivedType(tag: DW_TAG_member, name: "get_nextdqblk", scope: !4438, file: !4351, line: 436, baseType: !4490, size: 64, offset: 448)
!4490 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4491, size: 64)
!4491 = !DISubroutineType(types: !4492)
!4492 = !{!32, !1545, !4434, !4470}
!4493 = !DIDerivedType(tag: DW_TAG_member, name: "set_dqblk", scope: !4438, file: !4351, line: 438, baseType: !4467, size: 64, offset: 512)
!4494 = !DIDerivedType(tag: DW_TAG_member, name: "get_state", scope: !4438, file: !4351, line: 439, baseType: !4495, size: 64, offset: 576)
!4495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4496, size: 64)
!4496 = !DISubroutineType(types: !4497)
!4497 = !{!32, !1545, !4498}
!4498 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4499, size: 64)
!4499 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_state", file: !4351, line: 409, size: 1408, elements: !4500)
!4500 = !{!4501, !4502}
!4501 = !DIDerivedType(tag: DW_TAG_member, name: "s_incoredqs", scope: !4499, file: !4351, line: 410, baseType: !7, size: 32)
!4502 = !DIDerivedType(tag: DW_TAG_member, name: "s_state", scope: !4499, file: !4351, line: 411, baseType: !4503, size: 1344, offset: 64)
!4503 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4504, size: 1344, elements: !1592)
!4504 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_type_state", file: !4351, line: 395, size: 448, elements: !4505)
!4505 = !{!4506, !4507, !4508, !4509, !4510, !4511, !4512, !4513, !4514, !4516}
!4506 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4504, file: !4351, line: 396, baseType: !7, size: 32)
!4507 = !DIDerivedType(tag: DW_TAG_member, name: "spc_timelimit", scope: !4504, file: !4351, line: 397, baseType: !7, size: 32, offset: 32)
!4508 = !DIDerivedType(tag: DW_TAG_member, name: "ino_timelimit", scope: !4504, file: !4351, line: 399, baseType: !7, size: 32, offset: 64)
!4509 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_timelimit", scope: !4504, file: !4351, line: 400, baseType: !7, size: 32, offset: 96)
!4510 = !DIDerivedType(tag: DW_TAG_member, name: "spc_warnlimit", scope: !4504, file: !4351, line: 401, baseType: !7, size: 32, offset: 128)
!4511 = !DIDerivedType(tag: DW_TAG_member, name: "ino_warnlimit", scope: !4504, file: !4351, line: 402, baseType: !7, size: 32, offset: 160)
!4512 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_warnlimit", scope: !4504, file: !4351, line: 403, baseType: !7, size: 32, offset: 192)
!4513 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !4504, file: !4351, line: 404, baseType: !335, size: 64, offset: 256)
!4514 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !4504, file: !4351, line: 405, baseType: !4515, size: 64, offset: 320)
!4515 = !DIDerivedType(tag: DW_TAG_typedef, name: "blkcnt_t", file: !277, line: 126, baseType: !331)
!4516 = !DIDerivedType(tag: DW_TAG_member, name: "nextents", scope: !4504, file: !4351, line: 406, baseType: !4515, size: 64, offset: 384)
!4517 = !DIDerivedType(tag: DW_TAG_member, name: "rm_xquota", scope: !4438, file: !4351, line: 440, baseType: !4446, size: 64, offset: 640)
!4518 = !DIDerivedType(tag: DW_TAG_member, name: "s_export_op", scope: !1546, file: !1317, line: 1426, baseType: !4519, size: 64, offset: 576)
!4519 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4520, size: 64)
!4520 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4521)
!4521 = !DICompositeType(tag: DW_TAG_structure_type, name: "export_operations", file: !1317, line: 49, flags: DIFlagFwdDecl)
!4522 = !DIDerivedType(tag: DW_TAG_member, name: "s_flags", scope: !1546, file: !1317, line: 1427, baseType: !312, size: 64, offset: 640)
!4523 = !DIDerivedType(tag: DW_TAG_member, name: "s_iflags", scope: !1546, file: !1317, line: 1428, baseType: !312, size: 64, offset: 704)
!4524 = !DIDerivedType(tag: DW_TAG_member, name: "s_magic", scope: !1546, file: !1317, line: 1429, baseType: !312, size: 64, offset: 768)
!4525 = !DIDerivedType(tag: DW_TAG_member, name: "s_root", scope: !1546, file: !1317, line: 1430, baseType: !1338, size: 64, offset: 832)
!4526 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount", scope: !1546, file: !1317, line: 1431, baseType: !1755, size: 256, offset: 896)
!4527 = !DIDerivedType(tag: DW_TAG_member, name: "s_count", scope: !1546, file: !1317, line: 1432, baseType: !32, size: 32, offset: 1152)
!4528 = !DIDerivedType(tag: DW_TAG_member, name: "s_active", scope: !1546, file: !1317, line: 1433, baseType: !383, size: 32, offset: 1184)
!4529 = !DIDerivedType(tag: DW_TAG_member, name: "s_xattr", scope: !1546, file: !1317, line: 1437, baseType: !4530, size: 64, offset: 1216)
!4530 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4531, size: 64)
!4531 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4532, size: 64)
!4532 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4533)
!4533 = !DICompositeType(tag: DW_TAG_structure_type, name: "xattr_handler", file: !1317, line: 1437, flags: DIFlagFwdDecl)
!4534 = !DIDerivedType(tag: DW_TAG_member, name: "s_roots", scope: !1546, file: !1317, line: 1449, baseType: !4535, size: 64, offset: 1280)
!4535 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_head", file: !1354, line: 34, size: 64, elements: !4536)
!4536 = !{!4537}
!4537 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !4535, file: !1354, line: 35, baseType: !1357, size: 64)
!4538 = !DIDerivedType(tag: DW_TAG_member, name: "s_mounts", scope: !1546, file: !1317, line: 1450, baseType: !284, size: 128, offset: 1344)
!4539 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdev", scope: !1546, file: !1317, line: 1451, baseType: !4540, size: 64, offset: 1472)
!4540 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4541, size: 64)
!4541 = !DICompositeType(tag: DW_TAG_structure_type, name: "block_device", file: !1317, line: 699, flags: DIFlagFwdDecl)
!4542 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdi", scope: !1546, file: !1317, line: 1452, baseType: !3856, size: 64, offset: 1536)
!4543 = !DIDerivedType(tag: DW_TAG_member, name: "s_mtd", scope: !1546, file: !1317, line: 1453, baseType: !4544, size: 64, offset: 1600)
!4544 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4545, size: 64)
!4545 = !DICompositeType(tag: DW_TAG_structure_type, name: "mtd_info", file: !1317, line: 1453, flags: DIFlagFwdDecl)
!4546 = !DIDerivedType(tag: DW_TAG_member, name: "s_instances", scope: !1546, file: !1317, line: 1454, baseType: !276, size: 128, offset: 1664)
!4547 = !DIDerivedType(tag: DW_TAG_member, name: "s_quota_types", scope: !1546, file: !1317, line: 1455, baseType: !7, size: 32, offset: 1792)
!4548 = !DIDerivedType(tag: DW_TAG_member, name: "s_dquot", scope: !1546, file: !1317, line: 1456, baseType: !4549, size: 2432, offset: 1856)
!4549 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_info", file: !4351, line: 518, size: 2432, elements: !4550)
!4550 = !{!4551, !4552, !4553, !4555, !4587}
!4551 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4549, file: !4351, line: 519, baseType: !7, size: 32)
!4552 = !DIDerivedType(tag: DW_TAG_member, name: "dqio_sem", scope: !4549, file: !4351, line: 520, baseType: !1755, size: 256, offset: 64)
!4553 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !4549, file: !4351, line: 521, baseType: !4554, size: 192, offset: 320)
!4554 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1375, size: 192, elements: !1592)
!4555 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !4549, file: !4351, line: 522, baseType: !4556, size: 1728, offset: 512)
!4556 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4557, size: 1728, elements: !1592)
!4557 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqinfo", file: !4351, line: 222, size: 576, elements: !4558)
!4558 = !{!4559, !4579, !4580, !4581, !4582, !4583, !4584, !4585, !4586}
!4559 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_format", scope: !4557, file: !4351, line: 223, baseType: !4560, size: 64)
!4560 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4561, size: 64)
!4561 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_type", file: !4351, line: 443, size: 256, elements: !4562)
!4562 = !{!4563, !4564, !4577, !4578}
!4563 = !DIDerivedType(tag: DW_TAG_member, name: "qf_fmt_id", scope: !4561, file: !4351, line: 444, baseType: !32, size: 32)
!4564 = !DIDerivedType(tag: DW_TAG_member, name: "qf_ops", scope: !4561, file: !4351, line: 445, baseType: !4565, size: 64, offset: 64)
!4565 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4566, size: 64)
!4566 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4567)
!4567 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_ops", file: !4351, line: 310, size: 512, elements: !4568)
!4568 = !{!4569, !4570, !4571, !4572, !4573, !4574, !4575, !4576}
!4569 = !DIDerivedType(tag: DW_TAG_member, name: "check_quota_file", scope: !4567, file: !4351, line: 311, baseType: !1628, size: 64)
!4570 = !DIDerivedType(tag: DW_TAG_member, name: "read_file_info", scope: !4567, file: !4351, line: 312, baseType: !1628, size: 64, offset: 64)
!4571 = !DIDerivedType(tag: DW_TAG_member, name: "write_file_info", scope: !4567, file: !4351, line: 313, baseType: !1628, size: 64, offset: 128)
!4572 = !DIDerivedType(tag: DW_TAG_member, name: "free_file_info", scope: !4567, file: !4351, line: 314, baseType: !1628, size: 64, offset: 192)
!4573 = !DIDerivedType(tag: DW_TAG_member, name: "read_dqblk", scope: !4567, file: !4351, line: 315, baseType: !4354, size: 64, offset: 256)
!4574 = !DIDerivedType(tag: DW_TAG_member, name: "commit_dqblk", scope: !4567, file: !4351, line: 316, baseType: !4354, size: 64, offset: 320)
!4575 = !DIDerivedType(tag: DW_TAG_member, name: "release_dqblk", scope: !4567, file: !4351, line: 317, baseType: !4354, size: 64, offset: 384)
!4576 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !4567, file: !4351, line: 318, baseType: !4431, size: 64, offset: 448)
!4577 = !DIDerivedType(tag: DW_TAG_member, name: "qf_owner", scope: !4561, file: !4351, line: 446, baseType: !980, size: 64, offset: 128)
!4578 = !DIDerivedType(tag: DW_TAG_member, name: "qf_next", scope: !4561, file: !4351, line: 447, baseType: !4560, size: 64, offset: 192)
!4579 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_fmt_id", scope: !4557, file: !4351, line: 224, baseType: !32, size: 32, offset: 64)
!4580 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_dirty_list", scope: !4557, file: !4351, line: 226, baseType: !284, size: 128, offset: 128)
!4581 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_flags", scope: !4557, file: !4351, line: 227, baseType: !312, size: 64, offset: 256)
!4582 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_bgrace", scope: !4557, file: !4351, line: 228, baseType: !7, size: 32, offset: 320)
!4583 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_igrace", scope: !4557, file: !4351, line: 229, baseType: !7, size: 32, offset: 352)
!4584 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_spc_limit", scope: !4557, file: !4351, line: 230, baseType: !4395, size: 64, offset: 384)
!4585 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_ino_limit", scope: !4557, file: !4351, line: 231, baseType: !4395, size: 64, offset: 448)
!4586 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_priv", scope: !4557, file: !4351, line: 232, baseType: !591, size: 64, offset: 512)
!4587 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4549, file: !4351, line: 523, baseType: !4588, size: 192, offset: 2240)
!4588 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4565, size: 192, elements: !1592)
!4589 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers", scope: !1546, file: !1317, line: 1458, baseType: !4590, size: 2112, offset: 4288)
!4590 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sb_writers", file: !1317, line: 1410, size: 2112, elements: !4591)
!4591 = !{!4592, !4593, !4594}
!4592 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !4590, file: !1317, line: 1411, baseType: !32, size: 32)
!4593 = !DIDerivedType(tag: DW_TAG_member, name: "wait_unfrozen", scope: !4590, file: !1317, line: 1412, baseType: !1889, size: 128, offset: 64)
!4594 = !DIDerivedType(tag: DW_TAG_member, name: "rw_sem", scope: !4590, file: !1317, line: 1413, baseType: !4595, size: 1920, offset: 192)
!4595 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4596, size: 1920, elements: !1592)
!4596 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_rw_semaphore", file: !4597, line: 12, size: 640, elements: !4598)
!4597 = !DIFile(filename: "./include/linux/percpu-rwsem.h", directory: "/home/lizy2001/genbc/linux")
!4598 = !{!4599, !4607, !4609, !4614, !4615}
!4599 = !DIDerivedType(tag: DW_TAG_member, name: "rss", scope: !4596, file: !4597, line: 13, baseType: !4600, size: 320)
!4600 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcu_sync", file: !4601, line: 17, size: 320, elements: !4602)
!4601 = !DIFile(filename: "./include/linux/rcu_sync.h", directory: "/home/lizy2001/genbc/linux")
!4602 = !{!4603, !4604, !4605, !4606}
!4603 = !DIDerivedType(tag: DW_TAG_member, name: "gp_state", scope: !4600, file: !4601, line: 18, baseType: !32, size: 32)
!4604 = !DIDerivedType(tag: DW_TAG_member, name: "gp_count", scope: !4600, file: !4601, line: 19, baseType: !32, size: 32, offset: 32)
!4605 = !DIDerivedType(tag: DW_TAG_member, name: "gp_wait", scope: !4600, file: !4601, line: 20, baseType: !1889, size: 128, offset: 64)
!4606 = !DIDerivedType(tag: DW_TAG_member, name: "cb_head", scope: !4600, file: !4601, line: 22, baseType: !299, size: 128, align: 64, offset: 192)
!4607 = !DIDerivedType(tag: DW_TAG_member, name: "read_count", scope: !4596, file: !4597, line: 14, baseType: !4608, size: 64, offset: 320)
!4608 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!4609 = !DIDerivedType(tag: DW_TAG_member, name: "writer", scope: !4596, file: !4597, line: 15, baseType: !4610, size: 64, offset: 384)
!4610 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcuwait", file: !4611, line: 16, size: 64, elements: !4612)
!4611 = !DIFile(filename: "./include/linux/rcuwait.h", directory: "/home/lizy2001/genbc/linux")
!4612 = !{!4613}
!4613 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !4610, file: !4611, line: 17, baseType: !2326, size: 64)
!4614 = !DIDerivedType(tag: DW_TAG_member, name: "waiters", scope: !4596, file: !4597, line: 16, baseType: !1889, size: 128, offset: 448)
!4615 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !4596, file: !4597, line: 17, baseType: !383, size: 32, offset: 576)
!4616 = !DIDerivedType(tag: DW_TAG_member, name: "s_fs_info", scope: !1546, file: !1317, line: 1465, baseType: !591, size: 64, offset: 6400)
!4617 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_gran", scope: !1546, file: !1317, line: 1468, baseType: !987, size: 32, offset: 6464)
!4618 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_min", scope: !1546, file: !1317, line: 1470, baseType: !1483, size: 64, offset: 6528)
!4619 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_max", scope: !1546, file: !1317, line: 1471, baseType: !1483, size: 64, offset: 6592)
!4620 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_mask", scope: !1546, file: !1317, line: 1473, baseType: !493, size: 32, offset: 6656)
!4621 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_marks", scope: !1546, file: !1317, line: 1474, baseType: !4622, size: 64, offset: 6720)
!4622 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4623, size: 64)
!4623 = !DICompositeType(tag: DW_TAG_structure_type, name: "fsnotify_mark_connector", file: !1317, line: 603, flags: DIFlagFwdDecl)
!4624 = !DIDerivedType(tag: DW_TAG_member, name: "s_id", scope: !1546, file: !1317, line: 1477, baseType: !4625, size: 256, offset: 6784)
!4625 = !DICompositeType(tag: DW_TAG_array_type, baseType: !268, size: 256, elements: !819)
!4626 = !DIDerivedType(tag: DW_TAG_member, name: "s_uuid", scope: !1546, file: !1317, line: 1478, baseType: !4627, size: 128, offset: 7040)
!4627 = !DIDerivedType(tag: DW_TAG_typedef, name: "uuid_t", file: !4628, line: 18, baseType: !4629)
!4628 = !DIFile(filename: "./include/linux/uuid.h", directory: "/home/lizy2001/genbc/linux")
!4629 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !4628, line: 16, size: 128, elements: !4630)
!4630 = !{!4631}
!4631 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !4629, file: !4628, line: 17, baseType: !3225, size: 128)
!4632 = !DIDerivedType(tag: DW_TAG_member, name: "s_max_links", scope: !1546, file: !1317, line: 1480, baseType: !7, size: 32, offset: 7168)
!4633 = !DIDerivedType(tag: DW_TAG_member, name: "s_mode", scope: !1546, file: !1317, line: 1481, baseType: !4634, size: 32, offset: 7200)
!4634 = !DIDerivedType(tag: DW_TAG_typedef, name: "fmode_t", file: !277, line: 150, baseType: !7)
!4635 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_mutex", scope: !1546, file: !1317, line: 1487, baseType: !1665, size: 192, offset: 7232)
!4636 = !DIDerivedType(tag: DW_TAG_member, name: "s_subtype", scope: !1546, file: !1317, line: 1493, baseType: !292, size: 64, offset: 7424)
!4637 = !DIDerivedType(tag: DW_TAG_member, name: "s_d_op", scope: !1546, file: !1317, line: 1495, baseType: !4638, size: 64, offset: 7488)
!4638 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4639, size: 64)
!4639 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4640)
!4640 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry_operations", file: !1336, line: 135, size: 1024, align: 512, elements: !4641)
!4641 = !{!4642, !4646, !4647, !4654, !4660, !4664, !4668, !4672, !4673, !4677, !4681, !4686, !4690}
!4642 = !DIDerivedType(tag: DW_TAG_member, name: "d_revalidate", scope: !4640, file: !1336, line: 136, baseType: !4643, size: 64)
!4643 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4644, size: 64)
!4644 = !DISubroutineType(types: !4645)
!4645 = !{!32, !1338, !7}
!4646 = !DIDerivedType(tag: DW_TAG_member, name: "d_weak_revalidate", scope: !4640, file: !1336, line: 137, baseType: !4643, size: 64, offset: 64)
!4647 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !4640, file: !1336, line: 138, baseType: !4648, size: 64, offset: 128)
!4648 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4649, size: 64)
!4649 = !DISubroutineType(types: !4650)
!4650 = !{!32, !4651, !4653}
!4651 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4652, size: 64)
!4652 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1339)
!4653 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1362, size: 64)
!4654 = !DIDerivedType(tag: DW_TAG_member, name: "d_compare", scope: !4640, file: !1336, line: 139, baseType: !4655, size: 64, offset: 192)
!4655 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4656, size: 64)
!4656 = !DISubroutineType(types: !4657)
!4657 = !{!32, !4651, !7, !292, !4658}
!4658 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4659, size: 64)
!4659 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1362)
!4660 = !DIDerivedType(tag: DW_TAG_member, name: "d_delete", scope: !4640, file: !1336, line: 141, baseType: !4661, size: 64, offset: 256)
!4661 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4662, size: 64)
!4662 = !DISubroutineType(types: !4663)
!4663 = !{!32, !4651}
!4664 = !DIDerivedType(tag: DW_TAG_member, name: "d_init", scope: !4640, file: !1336, line: 142, baseType: !4665, size: 64, offset: 320)
!4665 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4666, size: 64)
!4666 = !DISubroutineType(types: !4667)
!4667 = !{!32, !1338}
!4668 = !DIDerivedType(tag: DW_TAG_member, name: "d_release", scope: !4640, file: !1336, line: 143, baseType: !4669, size: 64, offset: 384)
!4669 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4670, size: 64)
!4670 = !DISubroutineType(types: !4671)
!4671 = !{null, !1338}
!4672 = !DIDerivedType(tag: DW_TAG_member, name: "d_prune", scope: !4640, file: !1336, line: 144, baseType: !4669, size: 64, offset: 448)
!4673 = !DIDerivedType(tag: DW_TAG_member, name: "d_iput", scope: !4640, file: !1336, line: 145, baseType: !4674, size: 64, offset: 512)
!4674 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4675, size: 64)
!4675 = !DISubroutineType(types: !4676)
!4676 = !{null, !1338, !1375}
!4677 = !DIDerivedType(tag: DW_TAG_member, name: "d_dname", scope: !4640, file: !1336, line: 146, baseType: !4678, size: 64, offset: 576)
!4678 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4679, size: 64)
!4679 = !DISubroutineType(types: !4680)
!4680 = !{!1038, !1338, !1038, !32}
!4681 = !DIDerivedType(tag: DW_TAG_member, name: "d_automount", scope: !4640, file: !1336, line: 147, baseType: !4682, size: 64, offset: 640)
!4682 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4683, size: 64)
!4683 = !DISubroutineType(types: !4684)
!4684 = !{!1334, !4685}
!4685 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1330, size: 64)
!4686 = !DIDerivedType(tag: DW_TAG_member, name: "d_manage", scope: !4640, file: !1336, line: 148, baseType: !4687, size: 64, offset: 704)
!4687 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4688, size: 64)
!4688 = !DISubroutineType(types: !4689)
!4689 = !{!32, !1492, !771}
!4690 = !DIDerivedType(tag: DW_TAG_member, name: "d_real", scope: !4640, file: !1336, line: 149, baseType: !4691, size: 64, offset: 768)
!4691 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4692, size: 64)
!4692 = !DISubroutineType(types: !4693)
!4693 = !{!1338, !1338, !4694}
!4694 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4695, size: 64)
!4695 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1376)
!4696 = !DIDerivedType(tag: DW_TAG_member, name: "cleancache_poolid", scope: !1546, file: !1317, line: 1500, baseType: !32, size: 32, offset: 7552)
!4697 = !DIDerivedType(tag: DW_TAG_member, name: "s_shrink", scope: !1546, file: !1317, line: 1502, baseType: !4698, size: 448, offset: 7616)
!4698 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrinker", file: !4337, line: 60, size: 448, elements: !4699)
!4699 = !{!4700, !4705, !4706, !4707, !4708, !4709, !4710}
!4700 = !DIDerivedType(tag: DW_TAG_member, name: "count_objects", scope: !4698, file: !4337, line: 61, baseType: !4701, size: 64)
!4701 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4702, size: 64)
!4702 = !DISubroutineType(types: !4703)
!4703 = !{!312, !4704, !4335}
!4704 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4698, size: 64)
!4705 = !DIDerivedType(tag: DW_TAG_member, name: "scan_objects", scope: !4698, file: !4337, line: 63, baseType: !4701, size: 64, offset: 64)
!4706 = !DIDerivedType(tag: DW_TAG_member, name: "batch", scope: !4698, file: !4337, line: 66, baseType: !998, size: 64, offset: 128)
!4707 = !DIDerivedType(tag: DW_TAG_member, name: "seeks", scope: !4698, file: !4337, line: 67, baseType: !32, size: 32, offset: 192)
!4708 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4698, file: !4337, line: 68, baseType: !7, size: 32, offset: 224)
!4709 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !4698, file: !4337, line: 71, baseType: !284, size: 128, offset: 256)
!4710 = !DIDerivedType(tag: DW_TAG_member, name: "nr_deferred", scope: !4698, file: !4337, line: 77, baseType: !4711, size: 64, offset: 384)
!4711 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !371, size: 64)
!4712 = !DIDerivedType(tag: DW_TAG_member, name: "s_remove_count", scope: !1546, file: !1317, line: 1505, baseType: !371, size: 64, offset: 8064)
!4713 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_inode_refs", scope: !1546, file: !1317, line: 1508, baseType: !371, size: 64, offset: 8128)
!4714 = !DIDerivedType(tag: DW_TAG_member, name: "s_readonly_remount", scope: !1546, file: !1317, line: 1511, baseType: !32, size: 32, offset: 8192)
!4715 = !DIDerivedType(tag: DW_TAG_member, name: "s_wb_err", scope: !1546, file: !1317, line: 1514, baseType: !2025, size: 32, offset: 8224)
!4716 = !DIDerivedType(tag: DW_TAG_member, name: "s_dio_done_wq", scope: !1546, file: !1317, line: 1517, baseType: !4717, size: 64, offset: 8256)
!4717 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4718, size: 64)
!4718 = !DICompositeType(tag: DW_TAG_structure_type, name: "workqueue_struct", file: !2830, line: 18, flags: DIFlagFwdDecl)
!4719 = !DIDerivedType(tag: DW_TAG_member, name: "s_pins", scope: !1546, file: !1317, line: 1518, baseType: !1581, size: 64, offset: 8320)
!4720 = !DIDerivedType(tag: DW_TAG_member, name: "s_user_ns", scope: !1546, file: !1317, line: 1525, baseType: !2781, size: 64, offset: 8384)
!4721 = !DIDerivedType(tag: DW_TAG_member, name: "s_dentry_lru", scope: !1546, file: !1317, line: 1532, baseType: !4722, size: 64, offset: 8448)
!4722 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru", file: !4723, line: 52, size: 64, elements: !4724)
!4723 = !DIFile(filename: "./include/linux/list_lru.h", directory: "/home/lizy2001/genbc/linux")
!4724 = !{!4725}
!4725 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !4722, file: !4723, line: 53, baseType: !4726, size: 64)
!4726 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4727, size: 64)
!4727 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_node", file: !4723, line: 40, size: 256, elements: !4728)
!4728 = !{!4729, !4730, !4735}
!4729 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4727, file: !4723, line: 42, baseType: !1670)
!4730 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !4727, file: !4723, line: 44, baseType: !4731, size: 192)
!4731 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_one", file: !4723, line: 28, size: 192, elements: !4732)
!4732 = !{!4733, !4734}
!4733 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !4731, file: !4723, line: 29, baseType: !284, size: 128)
!4734 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !4731, file: !4723, line: 31, baseType: !998, size: 64, offset: 128)
!4735 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !4727, file: !4723, line: 49, baseType: !998, size: 64, offset: 192)
!4736 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_lru", scope: !1546, file: !1317, line: 1533, baseType: !4722, size: 64, offset: 8512)
!4737 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1546, file: !1317, line: 1534, baseType: !299, size: 128, align: 64, offset: 8576)
!4738 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_work", scope: !1546, file: !1317, line: 1535, baseType: !2829, size: 256, offset: 8704)
!4739 = !DIDerivedType(tag: DW_TAG_member, name: "s_sync_lock", scope: !1546, file: !1317, line: 1537, baseType: !1665, size: 192, offset: 8960)
!4740 = !DIDerivedType(tag: DW_TAG_member, name: "s_stack_depth", scope: !1546, file: !1317, line: 1542, baseType: !32, size: 32, offset: 9152)
!4741 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_list_lock", scope: !1546, file: !1317, line: 1545, baseType: !1670, offset: 9184)
!4742 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes", scope: !1546, file: !1317, line: 1546, baseType: !284, size: 128, offset: 9216)
!4743 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_wblist_lock", scope: !1546, file: !1317, line: 1548, baseType: !1670, offset: 9344)
!4744 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes_wb", scope: !1546, file: !1317, line: 1549, baseType: !284, size: 128, offset: 9344)
!4745 = !DIDerivedType(tag: DW_TAG_member, name: "i_mapping", scope: !1376, file: !1317, line: 624, baseType: !1732, size: 64, offset: 256)
!4746 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino", scope: !1376, file: !1317, line: 631, baseType: !312, size: 64, offset: 320)
!4747 = !DIDerivedType(tag: DW_TAG_member, scope: !1376, file: !1317, line: 639, baseType: !4748, size: 32, offset: 384)
!4748 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1376, file: !1317, line: 639, size: 32, elements: !4749)
!4749 = !{!4750, !4752}
!4750 = !DIDerivedType(tag: DW_TAG_member, name: "i_nlink", scope: !4748, file: !1317, line: 640, baseType: !4751, size: 32)
!4751 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7)
!4752 = !DIDerivedType(tag: DW_TAG_member, name: "__i_nlink", scope: !4748, file: !1317, line: 641, baseType: !7, size: 32)
!4753 = !DIDerivedType(tag: DW_TAG_member, name: "i_rdev", scope: !1376, file: !1317, line: 643, baseType: !1458, size: 32, offset: 416)
!4754 = !DIDerivedType(tag: DW_TAG_member, name: "i_size", scope: !1376, file: !1317, line: 644, baseType: !1476, size: 64, offset: 448)
!4755 = !DIDerivedType(tag: DW_TAG_member, name: "i_atime", scope: !1376, file: !1317, line: 645, baseType: !1479, size: 128, offset: 512)
!4756 = !DIDerivedType(tag: DW_TAG_member, name: "i_mtime", scope: !1376, file: !1317, line: 646, baseType: !1479, size: 128, offset: 640)
!4757 = !DIDerivedType(tag: DW_TAG_member, name: "i_ctime", scope: !1376, file: !1317, line: 647, baseType: !1479, size: 128, offset: 768)
!4758 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock", scope: !1376, file: !1317, line: 648, baseType: !1670, offset: 896)
!4759 = !DIDerivedType(tag: DW_TAG_member, name: "i_bytes", scope: !1376, file: !1317, line: 649, baseType: !476, size: 16, offset: 896)
!4760 = !DIDerivedType(tag: DW_TAG_member, name: "i_blkbits", scope: !1376, file: !1317, line: 650, baseType: !794, size: 8, offset: 912)
!4761 = !DIDerivedType(tag: DW_TAG_member, name: "i_write_hint", scope: !1376, file: !1317, line: 651, baseType: !794, size: 8, offset: 920)
!4762 = !DIDerivedType(tag: DW_TAG_member, name: "i_blocks", scope: !1376, file: !1317, line: 652, baseType: !4515, size: 64, offset: 960)
!4763 = !DIDerivedType(tag: DW_TAG_member, name: "i_state", scope: !1376, file: !1317, line: 659, baseType: !312, size: 64, offset: 1024)
!4764 = !DIDerivedType(tag: DW_TAG_member, name: "i_rwsem", scope: !1376, file: !1317, line: 660, baseType: !1755, size: 256, offset: 1088)
!4765 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_when", scope: !1376, file: !1317, line: 662, baseType: !312, size: 64, offset: 1344)
!4766 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_time_when", scope: !1376, file: !1317, line: 663, baseType: !312, size: 64, offset: 1408)
!4767 = !DIDerivedType(tag: DW_TAG_member, name: "i_hash", scope: !1376, file: !1317, line: 665, baseType: !276, size: 128, offset: 1472)
!4768 = !DIDerivedType(tag: DW_TAG_member, name: "i_io_list", scope: !1376, file: !1317, line: 666, baseType: !284, size: 128, offset: 1600)
!4769 = !DIDerivedType(tag: DW_TAG_member, name: "i_lru", scope: !1376, file: !1317, line: 675, baseType: !284, size: 128, offset: 1728)
!4770 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb_list", scope: !1376, file: !1317, line: 676, baseType: !284, size: 128, offset: 1856)
!4771 = !DIDerivedType(tag: DW_TAG_member, name: "i_wb_list", scope: !1376, file: !1317, line: 677, baseType: !284, size: 128, offset: 1984)
!4772 = !DIDerivedType(tag: DW_TAG_member, scope: !1376, file: !1317, line: 678, baseType: !4773, size: 128, offset: 2112)
!4773 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1376, file: !1317, line: 678, size: 128, elements: !4774)
!4774 = !{!4775, !4776}
!4775 = !DIDerivedType(tag: DW_TAG_member, name: "i_dentry", scope: !4773, file: !1317, line: 679, baseType: !1581, size: 64)
!4776 = !DIDerivedType(tag: DW_TAG_member, name: "i_rcu", scope: !4773, file: !1317, line: 680, baseType: !299, size: 128, align: 64)
!4777 = !DIDerivedType(tag: DW_TAG_member, name: "i_version", scope: !1376, file: !1317, line: 682, baseType: !373, size: 64, offset: 2240)
!4778 = !DIDerivedType(tag: DW_TAG_member, name: "i_sequence", scope: !1376, file: !1317, line: 683, baseType: !373, size: 64, offset: 2304)
!4779 = !DIDerivedType(tag: DW_TAG_member, name: "i_count", scope: !1376, file: !1317, line: 684, baseType: !383, size: 32, offset: 2368)
!4780 = !DIDerivedType(tag: DW_TAG_member, name: "i_dio_count", scope: !1376, file: !1317, line: 685, baseType: !383, size: 32, offset: 2400)
!4781 = !DIDerivedType(tag: DW_TAG_member, name: "i_writecount", scope: !1376, file: !1317, line: 686, baseType: !383, size: 32, offset: 2432)
!4782 = !DIDerivedType(tag: DW_TAG_member, name: "i_readcount", scope: !1376, file: !1317, line: 688, baseType: !383, size: 32, offset: 2464)
!4783 = !DIDerivedType(tag: DW_TAG_member, scope: !1376, file: !1317, line: 690, baseType: !4784, size: 64, offset: 2496)
!4784 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1376, file: !1317, line: 690, size: 64, elements: !4785)
!4785 = !{!4786, !4991}
!4786 = !DIDerivedType(tag: DW_TAG_member, name: "i_fop", scope: !4784, file: !1317, line: 691, baseType: !4787, size: 64)
!4787 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4788, size: 64)
!4788 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4789)
!4789 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_operations", file: !1317, line: 1822, size: 2048, elements: !4790)
!4790 = !{!4791, !4792, !4796, !4800, !4804, !4805, !4806, !4810, !4823, !4824, !4831, !4835, !4836, !4840, !4841, !4845, !4850, !4851, !4855, !4859, !4951, !4955, !4956, !4960, !4961, !4965, !4969, !4974, !4978, !4982, !4986, !4990}
!4791 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4789, file: !1317, line: 1823, baseType: !980, size: 64)
!4792 = !DIDerivedType(tag: DW_TAG_member, name: "llseek", scope: !4789, file: !1317, line: 1824, baseType: !4793, size: 64, offset: 64)
!4793 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4794, size: 64)
!4794 = !DISubroutineType(types: !4795)
!4795 = !{!1476, !1315, !1476, !32}
!4796 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !4789, file: !1317, line: 1825, baseType: !4797, size: 64, offset: 128)
!4797 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4798, size: 64)
!4798 = !DISubroutineType(types: !4799)
!4799 = !{!1521, !1315, !1038, !1039, !1694}
!4800 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !4789, file: !1317, line: 1826, baseType: !4801, size: 64, offset: 192)
!4801 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4802, size: 64)
!4802 = !DISubroutineType(types: !4803)
!4803 = !{!1521, !1315, !292, !1039, !1694}
!4804 = !DIDerivedType(tag: DW_TAG_member, name: "read_iter", scope: !4789, file: !1317, line: 1827, baseType: !1825, size: 64, offset: 256)
!4805 = !DIDerivedType(tag: DW_TAG_member, name: "write_iter", scope: !4789, file: !1317, line: 1828, baseType: !1825, size: 64, offset: 320)
!4806 = !DIDerivedType(tag: DW_TAG_member, name: "iopoll", scope: !4789, file: !1317, line: 1829, baseType: !4807, size: 64, offset: 384)
!4807 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4808, size: 64)
!4808 = !DISubroutineType(types: !4809)
!4809 = !{!32, !1828, !771}
!4810 = !DIDerivedType(tag: DW_TAG_member, name: "iterate", scope: !4789, file: !1317, line: 1830, baseType: !4811, size: 64, offset: 448)
!4811 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4812, size: 64)
!4812 = !DISubroutineType(types: !4813)
!4813 = !{!32, !1315, !4814}
!4814 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4815, size: 64)
!4815 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dir_context", file: !1317, line: 1776, size: 128, elements: !4816)
!4816 = !{!4817, !4822}
!4817 = !DIDerivedType(tag: DW_TAG_member, name: "actor", scope: !4815, file: !1317, line: 1777, baseType: !4818, size: 64)
!4818 = !DIDerivedType(tag: DW_TAG_typedef, name: "filldir_t", file: !1317, line: 1773, baseType: !4819)
!4819 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4820, size: 64)
!4820 = !DISubroutineType(types: !4821)
!4821 = !{!32, !4814, !292, !32, !1476, !331, !7}
!4822 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !4815, file: !1317, line: 1778, baseType: !1476, size: 64, offset: 64)
!4823 = !DIDerivedType(tag: DW_TAG_member, name: "iterate_shared", scope: !4789, file: !1317, line: 1831, baseType: !4811, size: 64, offset: 512)
!4824 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !4789, file: !1317, line: 1832, baseType: !4825, size: 64, offset: 576)
!4825 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4826, size: 64)
!4826 = !DISubroutineType(types: !4827)
!4827 = !{!4828, !1315, !4829}
!4828 = !DIDerivedType(tag: DW_TAG_typedef, name: "__poll_t", file: !525, line: 52, baseType: !7)
!4829 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4830, size: 64)
!4830 = !DICompositeType(tag: DW_TAG_structure_type, name: "poll_table_struct", file: !1565, line: 27, flags: DIFlagFwdDecl)
!4831 = !DIDerivedType(tag: DW_TAG_member, name: "unlocked_ioctl", scope: !4789, file: !1317, line: 1833, baseType: !4832, size: 64, offset: 640)
!4832 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4833, size: 64)
!4833 = !DISubroutineType(types: !4834)
!4834 = !{!998, !1315, !7, !312}
!4835 = !DIDerivedType(tag: DW_TAG_member, name: "compat_ioctl", scope: !4789, file: !1317, line: 1834, baseType: !4832, size: 64, offset: 704)
!4836 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !4789, file: !1317, line: 1835, baseType: !4837, size: 64, offset: 768)
!4837 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4838, size: 64)
!4838 = !DISubroutineType(types: !4839)
!4839 = !{!32, !1315, !2098}
!4840 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_supported_flags", scope: !4789, file: !1317, line: 1836, baseType: !312, size: 64, offset: 832)
!4841 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !4789, file: !1317, line: 1837, baseType: !4842, size: 64, offset: 896)
!4842 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4843, size: 64)
!4843 = !DISubroutineType(types: !4844)
!4844 = !{!32, !1375, !1315}
!4845 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !4789, file: !1317, line: 1838, baseType: !4846, size: 64, offset: 960)
!4846 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4847, size: 64)
!4847 = !DISubroutineType(types: !4848)
!4848 = !{!32, !1315, !4849}
!4849 = !DIDerivedType(tag: DW_TAG_typedef, name: "fl_owner_t", file: !1317, line: 1007, baseType: !591)
!4850 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !4789, file: !1317, line: 1839, baseType: !4842, size: 64, offset: 1024)
!4851 = !DIDerivedType(tag: DW_TAG_member, name: "fsync", scope: !4789, file: !1317, line: 1840, baseType: !4852, size: 64, offset: 1088)
!4852 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4853, size: 64)
!4853 = !DISubroutineType(types: !4854)
!4854 = !{!32, !1315, !1476, !1476, !32}
!4855 = !DIDerivedType(tag: DW_TAG_member, name: "fasync", scope: !4789, file: !1317, line: 1841, baseType: !4856, size: 64, offset: 1152)
!4856 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4857, size: 64)
!4857 = !DISubroutineType(types: !4858)
!4858 = !{!32, !32, !1315, !32}
!4859 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4789, file: !1317, line: 1842, baseType: !4860, size: 64, offset: 1216)
!4860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4861, size: 64)
!4861 = !DISubroutineType(types: !4862)
!4862 = !{!32, !1315, !32, !4863}
!4863 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4864, size: 64)
!4864 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock", file: !1317, line: 1062, size: 1664, elements: !4865)
!4865 = !{!4866, !4867, !4868, !4869, !4870, !4871, !4872, !4873, !4874, !4875, !4876, !4877, !4878, !4879, !4880, !4881, !4882, !4883, !4896, !4927}
!4866 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocker", scope: !4864, file: !1317, line: 1063, baseType: !4863, size: 64)
!4867 = !DIDerivedType(tag: DW_TAG_member, name: "fl_list", scope: !4864, file: !1317, line: 1064, baseType: !284, size: 128, offset: 64)
!4868 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link", scope: !4864, file: !1317, line: 1065, baseType: !276, size: 128, offset: 192)
!4869 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_requests", scope: !4864, file: !1317, line: 1066, baseType: !284, size: 128, offset: 320)
!4870 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_member", scope: !4864, file: !1317, line: 1069, baseType: !284, size: 128, offset: 448)
!4871 = !DIDerivedType(tag: DW_TAG_member, name: "fl_owner", scope: !4864, file: !1317, line: 1072, baseType: !4849, size: 64, offset: 576)
!4872 = !DIDerivedType(tag: DW_TAG_member, name: "fl_flags", scope: !4864, file: !1317, line: 1073, baseType: !7, size: 32, offset: 640)
!4873 = !DIDerivedType(tag: DW_TAG_member, name: "fl_type", scope: !4864, file: !1317, line: 1074, baseType: !482, size: 8, offset: 672)
!4874 = !DIDerivedType(tag: DW_TAG_member, name: "fl_pid", scope: !4864, file: !1317, line: 1075, baseType: !7, size: 32, offset: 704)
!4875 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link_cpu", scope: !4864, file: !1317, line: 1076, baseType: !32, size: 32, offset: 736)
!4876 = !DIDerivedType(tag: DW_TAG_member, name: "fl_wait", scope: !4864, file: !1317, line: 1077, baseType: !1889, size: 128, offset: 768)
!4877 = !DIDerivedType(tag: DW_TAG_member, name: "fl_file", scope: !4864, file: !1317, line: 1078, baseType: !1315, size: 64, offset: 896)
!4878 = !DIDerivedType(tag: DW_TAG_member, name: "fl_start", scope: !4864, file: !1317, line: 1079, baseType: !1476, size: 64, offset: 960)
!4879 = !DIDerivedType(tag: DW_TAG_member, name: "fl_end", scope: !4864, file: !1317, line: 1080, baseType: !1476, size: 64, offset: 1024)
!4880 = !DIDerivedType(tag: DW_TAG_member, name: "fl_fasync", scope: !4864, file: !1317, line: 1082, baseType: !1908, size: 64, offset: 1088)
!4881 = !DIDerivedType(tag: DW_TAG_member, name: "fl_break_time", scope: !4864, file: !1317, line: 1084, baseType: !312, size: 64, offset: 1152)
!4882 = !DIDerivedType(tag: DW_TAG_member, name: "fl_downgrade_time", scope: !4864, file: !1317, line: 1085, baseType: !312, size: 64, offset: 1216)
!4883 = !DIDerivedType(tag: DW_TAG_member, name: "fl_ops", scope: !4864, file: !1317, line: 1087, baseType: !4884, size: 64, offset: 1280)
!4884 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4885, size: 64)
!4885 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4886)
!4886 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_operations", file: !1317, line: 1011, size: 128, elements: !4887)
!4887 = !{!4888, !4892}
!4888 = !DIDerivedType(tag: DW_TAG_member, name: "fl_copy_lock", scope: !4886, file: !1317, line: 1012, baseType: !4889, size: 64)
!4889 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4890, size: 64)
!4890 = !DISubroutineType(types: !4891)
!4891 = !{null, !4863, !4863}
!4892 = !DIDerivedType(tag: DW_TAG_member, name: "fl_release_private", scope: !4886, file: !1317, line: 1013, baseType: !4893, size: 64, offset: 64)
!4893 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4894, size: 64)
!4894 = !DISubroutineType(types: !4895)
!4895 = !{null, !4863}
!4896 = !DIDerivedType(tag: DW_TAG_member, name: "fl_lmops", scope: !4864, file: !1317, line: 1088, baseType: !4897, size: 64, offset: 1344)
!4897 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4898, size: 64)
!4898 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4899)
!4899 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_manager_operations", file: !1317, line: 1016, size: 512, elements: !4900)
!4900 = !{!4901, !4905, !4909, !4910, !4914, !4918, !4922, !4926}
!4901 = !DIDerivedType(tag: DW_TAG_member, name: "lm_get_owner", scope: !4899, file: !1317, line: 1017, baseType: !4902, size: 64)
!4902 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4903, size: 64)
!4903 = !DISubroutineType(types: !4904)
!4904 = !{!4849, !4849}
!4905 = !DIDerivedType(tag: DW_TAG_member, name: "lm_put_owner", scope: !4899, file: !1317, line: 1018, baseType: !4906, size: 64, offset: 64)
!4906 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4907, size: 64)
!4907 = !DISubroutineType(types: !4908)
!4908 = !{null, !4849}
!4909 = !DIDerivedType(tag: DW_TAG_member, name: "lm_notify", scope: !4899, file: !1317, line: 1019, baseType: !4893, size: 64, offset: 128)
!4910 = !DIDerivedType(tag: DW_TAG_member, name: "lm_grant", scope: !4899, file: !1317, line: 1020, baseType: !4911, size: 64, offset: 192)
!4911 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4912, size: 64)
!4912 = !DISubroutineType(types: !4913)
!4913 = !{!32, !4863, !32}
!4914 = !DIDerivedType(tag: DW_TAG_member, name: "lm_break", scope: !4899, file: !1317, line: 1021, baseType: !4915, size: 64, offset: 256)
!4915 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4916, size: 64)
!4916 = !DISubroutineType(types: !4917)
!4917 = !{!771, !4863}
!4918 = !DIDerivedType(tag: DW_TAG_member, name: "lm_change", scope: !4899, file: !1317, line: 1022, baseType: !4919, size: 64, offset: 320)
!4919 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4920, size: 64)
!4920 = !DISubroutineType(types: !4921)
!4921 = !{!32, !4863, !32, !287}
!4922 = !DIDerivedType(tag: DW_TAG_member, name: "lm_setup", scope: !4899, file: !1317, line: 1023, baseType: !4923, size: 64, offset: 384)
!4923 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4924, size: 64)
!4924 = !DISubroutineType(types: !4925)
!4925 = !{null, !4863, !1802}
!4926 = !DIDerivedType(tag: DW_TAG_member, name: "lm_breaker_owns_lease", scope: !4899, file: !1317, line: 1024, baseType: !4915, size: 64, offset: 448)
!4927 = !DIDerivedType(tag: DW_TAG_member, name: "fl_u", scope: !4864, file: !1317, line: 1097, baseType: !4928, size: 256, offset: 1408)
!4928 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4864, file: !1317, line: 1089, size: 256, elements: !4929)
!4929 = !{!4930, !4939, !4945}
!4930 = !DIDerivedType(tag: DW_TAG_member, name: "nfs_fl", scope: !4928, file: !1317, line: 1090, baseType: !4931, size: 256)
!4931 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs_lock_info", file: !4932, line: 10, size: 256, elements: !4933)
!4932 = !DIFile(filename: "./include/linux/nfs_fs_i.h", directory: "/home/lizy2001/genbc/linux")
!4933 = !{!4934, !4935, !4938}
!4934 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !4931, file: !4932, line: 11, baseType: !987, size: 32)
!4935 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4931, file: !4932, line: 12, baseType: !4936, size: 64, offset: 64)
!4936 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4937, size: 64)
!4937 = !DICompositeType(tag: DW_TAG_structure_type, name: "nlm_lockowner", file: !4932, line: 5, flags: DIFlagFwdDecl)
!4938 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !4931, file: !4932, line: 13, baseType: !284, size: 128, offset: 128)
!4939 = !DIDerivedType(tag: DW_TAG_member, name: "nfs4_fl", scope: !4928, file: !1317, line: 1091, baseType: !4940, size: 64)
!4940 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_info", file: !4932, line: 17, size: 64, elements: !4941)
!4941 = !{!4942}
!4942 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4940, file: !4932, line: 18, baseType: !4943, size: 64)
!4943 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4944, size: 64)
!4944 = !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_state", file: !4932, line: 16, flags: DIFlagFwdDecl)
!4945 = !DIDerivedType(tag: DW_TAG_member, name: "afs", scope: !4928, file: !1317, line: 1096, baseType: !4946, size: 192)
!4946 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4928, file: !1317, line: 1092, size: 192, elements: !4947)
!4947 = !{!4948, !4949, !4950}
!4948 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !4946, file: !1317, line: 1093, baseType: !284, size: 128)
!4949 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !4946, file: !1317, line: 1094, baseType: !32, size: 32, offset: 128)
!4950 = !DIDerivedType(tag: DW_TAG_member, name: "debug_id", scope: !4946, file: !1317, line: 1095, baseType: !7, size: 32, offset: 160)
!4951 = !DIDerivedType(tag: DW_TAG_member, name: "sendpage", scope: !4789, file: !1317, line: 1843, baseType: !4952, size: 64, offset: 1280)
!4952 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4953, size: 64)
!4953 = !DISubroutineType(types: !4954)
!4954 = !{!1521, !1315, !1719, !32, !1039, !1694, !32}
!4955 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !4789, file: !1317, line: 1844, baseType: !2218, size: 64, offset: 1344)
!4956 = !DIDerivedType(tag: DW_TAG_member, name: "check_flags", scope: !4789, file: !1317, line: 1845, baseType: !4957, size: 64, offset: 1408)
!4957 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4958, size: 64)
!4958 = !DISubroutineType(types: !4959)
!4959 = !{!32, !32}
!4960 = !DIDerivedType(tag: DW_TAG_member, name: "flock", scope: !4789, file: !1317, line: 1846, baseType: !4860, size: 64, offset: 1472)
!4961 = !DIDerivedType(tag: DW_TAG_member, name: "splice_write", scope: !4789, file: !1317, line: 1847, baseType: !4962, size: 64, offset: 1536)
!4962 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4963, size: 64)
!4963 = !DISubroutineType(types: !4964)
!4964 = !{!1521, !1883, !1315, !1694, !1039, !7}
!4965 = !DIDerivedType(tag: DW_TAG_member, name: "splice_read", scope: !4789, file: !1317, line: 1848, baseType: !4966, size: 64, offset: 1600)
!4966 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4967, size: 64)
!4967 = !DISubroutineType(types: !4968)
!4968 = !{!1521, !1315, !1694, !1883, !1039, !7}
!4969 = !DIDerivedType(tag: DW_TAG_member, name: "setlease", scope: !4789, file: !1317, line: 1849, baseType: !4970, size: 64, offset: 1664)
!4970 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4971, size: 64)
!4971 = !DISubroutineType(types: !4972)
!4972 = !{!32, !1315, !998, !4973, !1802}
!4973 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4863, size: 64)
!4974 = !DIDerivedType(tag: DW_TAG_member, name: "fallocate", scope: !4789, file: !1317, line: 1850, baseType: !4975, size: 64, offset: 1728)
!4975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4976, size: 64)
!4976 = !DISubroutineType(types: !4977)
!4977 = !{!998, !1315, !32, !1476, !1476}
!4978 = !DIDerivedType(tag: DW_TAG_member, name: "show_fdinfo", scope: !4789, file: !1317, line: 1852, baseType: !4979, size: 64, offset: 1792)
!4979 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4980, size: 64)
!4980 = !DISubroutineType(types: !4981)
!4981 = !{null, !1653, !1315}
!4982 = !DIDerivedType(tag: DW_TAG_member, name: "copy_file_range", scope: !4789, file: !1317, line: 1856, baseType: !4983, size: 64, offset: 1856)
!4983 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4984, size: 64)
!4984 = !DISubroutineType(types: !4985)
!4985 = !{!1521, !1315, !1476, !1315, !1476, !1039, !7}
!4986 = !DIDerivedType(tag: DW_TAG_member, name: "remap_file_range", scope: !4789, file: !1317, line: 1858, baseType: !4987, size: 64, offset: 1920)
!4987 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4988, size: 64)
!4988 = !DISubroutineType(types: !4989)
!4989 = !{!1476, !1315, !1476, !1315, !1476, !1476, !7}
!4990 = !DIDerivedType(tag: DW_TAG_member, name: "fadvise", scope: !4789, file: !1317, line: 1861, baseType: !4852, size: 64, offset: 1984)
!4991 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !4784, file: !1317, line: 692, baseType: !1607, size: 64)
!4992 = !DIDerivedType(tag: DW_TAG_member, name: "i_flctx", scope: !1376, file: !1317, line: 694, baseType: !4993, size: 64, offset: 2560)
!4993 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4994, size: 64)
!4994 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_context", file: !1317, line: 1100, size: 384, elements: !4995)
!4995 = !{!4996, !4997, !4998, !4999}
!4996 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lock", scope: !4994, file: !1317, line: 1101, baseType: !1670)
!4997 = !DIDerivedType(tag: DW_TAG_member, name: "flc_flock", scope: !4994, file: !1317, line: 1102, baseType: !284, size: 128)
!4998 = !DIDerivedType(tag: DW_TAG_member, name: "flc_posix", scope: !4994, file: !1317, line: 1103, baseType: !284, size: 128, offset: 128)
!4999 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lease", scope: !4994, file: !1317, line: 1104, baseType: !284, size: 128, offset: 256)
!5000 = !DIDerivedType(tag: DW_TAG_member, name: "i_data", scope: !1376, file: !1317, line: 695, baseType: !1733, size: 1216, align: 64, offset: 2624)
!5001 = !DIDerivedType(tag: DW_TAG_member, name: "i_devices", scope: !1376, file: !1317, line: 696, baseType: !284, size: 128, offset: 3840)
!5002 = !DIDerivedType(tag: DW_TAG_member, scope: !1376, file: !1317, line: 697, baseType: !5003, size: 64, offset: 3968)
!5003 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1376, file: !1317, line: 697, size: 64, elements: !5004)
!5004 = !{!5005, !5006, !5007, !5010, !5011}
!5005 = !DIDerivedType(tag: DW_TAG_member, name: "i_pipe", scope: !5003, file: !1317, line: 698, baseType: !1883, size: 64)
!5006 = !DIDerivedType(tag: DW_TAG_member, name: "i_bdev", scope: !5003, file: !1317, line: 699, baseType: !4540, size: 64)
!5007 = !DIDerivedType(tag: DW_TAG_member, name: "i_cdev", scope: !5003, file: !1317, line: 700, baseType: !5008, size: 64)
!5008 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5009, size: 64)
!5009 = !DICompositeType(tag: DW_TAG_structure_type, name: "cdev", file: !1317, line: 700, flags: DIFlagFwdDecl)
!5010 = !DIDerivedType(tag: DW_TAG_member, name: "i_link", scope: !5003, file: !1317, line: 701, baseType: !1038, size: 64)
!5011 = !DIDerivedType(tag: DW_TAG_member, name: "i_dir_seq", scope: !5003, file: !1317, line: 702, baseType: !7, size: 32)
!5012 = !DIDerivedType(tag: DW_TAG_member, name: "i_generation", scope: !1376, file: !1317, line: 705, baseType: !493, size: 32, offset: 4032)
!5013 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_mask", scope: !1376, file: !1317, line: 708, baseType: !493, size: 32, offset: 4064)
!5014 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_marks", scope: !1376, file: !1317, line: 709, baseType: !4622, size: 64, offset: 4096)
!5015 = !DIDerivedType(tag: DW_TAG_member, name: "i_private", scope: !1376, file: !1317, line: 720, baseType: !591, size: 64, offset: 4160)
!5016 = !DIDerivedType(tag: DW_TAG_member, name: "d_iname", scope: !1339, file: !1336, line: 98, baseType: !1031, size: 256, offset: 448)
!5017 = !DIDerivedType(tag: DW_TAG_member, name: "d_lockref", scope: !1339, file: !1336, line: 101, baseType: !5018, size: 32, offset: 704)
!5018 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lockref", file: !5019, line: 25, size: 32, elements: !5020)
!5019 = !DIFile(filename: "./include/linux/lockref.h", directory: "/home/lizy2001/genbc/linux")
!5020 = !{!5021}
!5021 = !DIDerivedType(tag: DW_TAG_member, scope: !5018, file: !5019, line: 26, baseType: !5022, size: 32)
!5022 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5018, file: !5019, line: 26, size: 32, elements: !5023)
!5023 = !{!5024}
!5024 = !DIDerivedType(tag: DW_TAG_member, scope: !5022, file: !5019, line: 30, baseType: !5025, size: 32)
!5025 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5022, file: !5019, line: 30, size: 32, elements: !5026)
!5026 = !{!5027, !5028}
!5027 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !5025, file: !5019, line: 31, baseType: !1670)
!5028 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !5025, file: !5019, line: 32, baseType: !32, size: 32)
!5029 = !DIDerivedType(tag: DW_TAG_member, name: "d_op", scope: !1339, file: !1336, line: 102, baseType: !4638, size: 64, offset: 768)
!5030 = !DIDerivedType(tag: DW_TAG_member, name: "d_sb", scope: !1339, file: !1336, line: 103, baseType: !1545, size: 64, offset: 832)
!5031 = !DIDerivedType(tag: DW_TAG_member, name: "d_time", scope: !1339, file: !1336, line: 104, baseType: !312, size: 64, offset: 896)
!5032 = !DIDerivedType(tag: DW_TAG_member, name: "d_fsdata", scope: !1339, file: !1336, line: 105, baseType: !591, size: 64, offset: 960)
!5033 = !DIDerivedType(tag: DW_TAG_member, scope: !1339, file: !1336, line: 107, baseType: !5034, size: 128, offset: 1024)
!5034 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1339, file: !1336, line: 107, size: 128, elements: !5035)
!5035 = !{!5036, !5037}
!5036 = !DIDerivedType(tag: DW_TAG_member, name: "d_lru", scope: !5034, file: !1336, line: 108, baseType: !284, size: 128)
!5037 = !DIDerivedType(tag: DW_TAG_member, name: "d_wait", scope: !5034, file: !1336, line: 109, baseType: !5038, size: 64)
!5038 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1889, size: 64)
!5039 = !DIDerivedType(tag: DW_TAG_member, name: "d_child", scope: !1339, file: !1336, line: 111, baseType: !284, size: 128, offset: 1152)
!5040 = !DIDerivedType(tag: DW_TAG_member, name: "d_subdirs", scope: !1339, file: !1336, line: 112, baseType: !284, size: 128, offset: 1280)
!5041 = !DIDerivedType(tag: DW_TAG_member, name: "d_u", scope: !1339, file: !1336, line: 120, baseType: !5042, size: 128, offset: 1408)
!5042 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1339, file: !1336, line: 116, size: 128, elements: !5043)
!5043 = !{!5044, !5045, !5046}
!5044 = !DIDerivedType(tag: DW_TAG_member, name: "d_alias", scope: !5042, file: !1336, line: 117, baseType: !276, size: 128)
!5045 = !DIDerivedType(tag: DW_TAG_member, name: "d_in_lookup_hash", scope: !5042, file: !1336, line: 118, baseType: !1353, size: 128)
!5046 = !DIDerivedType(tag: DW_TAG_member, name: "d_rcu", scope: !5042, file: !1336, line: 119, baseType: !299, size: 128, align: 64)
!5047 = !DIDerivedType(tag: DW_TAG_member, name: "f_inode", scope: !1316, file: !1317, line: 922, baseType: !1375, size: 64, offset: 256)
!5048 = !DIDerivedType(tag: DW_TAG_member, name: "f_op", scope: !1316, file: !1317, line: 923, baseType: !4787, size: 64, offset: 320)
!5049 = !DIDerivedType(tag: DW_TAG_member, name: "f_lock", scope: !1316, file: !1317, line: 929, baseType: !1670, offset: 384)
!5050 = !DIDerivedType(tag: DW_TAG_member, name: "f_write_hint", scope: !1316, file: !1317, line: 930, baseType: !5051, size: 32, offset: 384)
!5051 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rw_hint", file: !1317, line: 296, baseType: !7, size: 32, elements: !5052)
!5052 = !{!5053, !5054, !5055, !5056, !5057, !5058}
!5053 = !DIEnumerator(name: "WRITE_LIFE_NOT_SET", value: 0, isUnsigned: true)
!5054 = !DIEnumerator(name: "WRITE_LIFE_NONE", value: 1, isUnsigned: true)
!5055 = !DIEnumerator(name: "WRITE_LIFE_SHORT", value: 2, isUnsigned: true)
!5056 = !DIEnumerator(name: "WRITE_LIFE_MEDIUM", value: 3, isUnsigned: true)
!5057 = !DIEnumerator(name: "WRITE_LIFE_LONG", value: 4, isUnsigned: true)
!5058 = !DIEnumerator(name: "WRITE_LIFE_EXTREME", value: 5, isUnsigned: true)
!5059 = !DIDerivedType(tag: DW_TAG_member, name: "f_count", scope: !1316, file: !1317, line: 931, baseType: !371, size: 64, offset: 448)
!5060 = !DIDerivedType(tag: DW_TAG_member, name: "f_flags", scope: !1316, file: !1317, line: 932, baseType: !7, size: 32, offset: 512)
!5061 = !DIDerivedType(tag: DW_TAG_member, name: "f_mode", scope: !1316, file: !1317, line: 933, baseType: !4634, size: 32, offset: 544)
!5062 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos_lock", scope: !1316, file: !1317, line: 934, baseType: !1665, size: 192, offset: 576)
!5063 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos", scope: !1316, file: !1317, line: 935, baseType: !1476, size: 64, offset: 768)
!5064 = !DIDerivedType(tag: DW_TAG_member, name: "f_owner", scope: !1316, file: !1317, line: 936, baseType: !5065, size: 192, offset: 832)
!5065 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fown_struct", file: !1317, line: 885, size: 192, elements: !5066)
!5066 = !{!5067, !5068, !5069, !5077, !5078, !5079}
!5067 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !5065, file: !1317, line: 886, baseType: !1912)
!5068 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !5065, file: !1317, line: 887, baseType: !2571, size: 64)
!5069 = !DIDerivedType(tag: DW_TAG_member, name: "pid_type", scope: !5065, file: !1317, line: 888, baseType: !5070, size: 32, offset: 64)
!5070 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "pid_type", file: !2573, line: 9, baseType: !7, size: 32, elements: !5071)
!5071 = !{!5072, !5073, !5074, !5075, !5076}
!5072 = !DIEnumerator(name: "PIDTYPE_PID", value: 0, isUnsigned: true)
!5073 = !DIEnumerator(name: "PIDTYPE_TGID", value: 1, isUnsigned: true)
!5074 = !DIEnumerator(name: "PIDTYPE_PGID", value: 2, isUnsigned: true)
!5075 = !DIEnumerator(name: "PIDTYPE_SID", value: 3, isUnsigned: true)
!5076 = !DIEnumerator(name: "PIDTYPE_MAX", value: 4, isUnsigned: true)
!5077 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !5065, file: !1317, line: 889, baseType: !1382, size: 32, offset: 96)
!5078 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !5065, file: !1317, line: 889, baseType: !1382, size: 32, offset: 128)
!5079 = !DIDerivedType(tag: DW_TAG_member, name: "signum", scope: !5065, file: !1317, line: 890, baseType: !32, size: 32, offset: 160)
!5080 = !DIDerivedType(tag: DW_TAG_member, name: "f_cred", scope: !1316, file: !1317, line: 937, baseType: !2642, size: 64, offset: 1024)
!5081 = !DIDerivedType(tag: DW_TAG_member, name: "f_ra", scope: !1316, file: !1317, line: 938, baseType: !5082, size: 256, offset: 1088)
!5082 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_ra_state", file: !1317, line: 896, size: 256, elements: !5083)
!5083 = !{!5084, !5085, !5086, !5087, !5088, !5089}
!5084 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !5082, file: !1317, line: 897, baseType: !312, size: 64)
!5085 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !5082, file: !1317, line: 898, baseType: !7, size: 32, offset: 64)
!5086 = !DIDerivedType(tag: DW_TAG_member, name: "async_size", scope: !5082, file: !1317, line: 899, baseType: !7, size: 32, offset: 96)
!5087 = !DIDerivedType(tag: DW_TAG_member, name: "ra_pages", scope: !5082, file: !1317, line: 902, baseType: !7, size: 32, offset: 128)
!5088 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_miss", scope: !5082, file: !1317, line: 903, baseType: !7, size: 32, offset: 160)
!5089 = !DIDerivedType(tag: DW_TAG_member, name: "prev_pos", scope: !5082, file: !1317, line: 904, baseType: !1476, size: 64, offset: 192)
!5090 = !DIDerivedType(tag: DW_TAG_member, name: "f_version", scope: !1316, file: !1317, line: 940, baseType: !331, size: 64, offset: 1344)
!5091 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !1316, file: !1317, line: 945, baseType: !591, size: 64, offset: 1408)
!5092 = !DIDerivedType(tag: DW_TAG_member, name: "f_ep_links", scope: !1316, file: !1317, line: 949, baseType: !284, size: 128, offset: 1472)
!5093 = !DIDerivedType(tag: DW_TAG_member, name: "f_tfile_llink", scope: !1316, file: !1317, line: 950, baseType: !284, size: 128, offset: 1600)
!5094 = !DIDerivedType(tag: DW_TAG_member, name: "f_mapping", scope: !1316, file: !1317, line: 952, baseType: !1732, size: 64, offset: 1728)
!5095 = !DIDerivedType(tag: DW_TAG_member, name: "f_wb_err", scope: !1316, file: !1317, line: 953, baseType: !2025, size: 32, offset: 1792)
!5096 = !DIDerivedType(tag: DW_TAG_member, name: "f_sb_err", scope: !1316, file: !1317, line: 954, baseType: !2025, size: 32, offset: 1824)
!5097 = !DIDerivedType(tag: DW_TAG_member, name: "map_free", scope: !1105, file: !65, line: 59, baseType: !5098, size: 64, offset: 192)
!5098 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5099, size: 64)
!5099 = !DISubroutineType(types: !5100)
!5100 = !{null, !1310}
!5101 = !DIDerivedType(tag: DW_TAG_member, name: "map_get_next_key", scope: !1105, file: !65, line: 60, baseType: !5102, size: 64, offset: 256)
!5102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5103, size: 64)
!5103 = !DISubroutineType(types: !5104)
!5104 = !{!32, !1310, !591, !591}
!5105 = !DIDerivedType(tag: DW_TAG_member, name: "map_release_uref", scope: !1105, file: !65, line: 61, baseType: !5098, size: 64, offset: 320)
!5106 = !DIDerivedType(tag: DW_TAG_member, name: "map_lookup_elem_sys_only", scope: !1105, file: !65, line: 62, baseType: !5107, size: 64, offset: 384)
!5107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5108, size: 64)
!5108 = !DISubroutineType(types: !5109)
!5109 = !{!591, !1310, !591}
!5110 = !DIDerivedType(tag: DW_TAG_member, name: "map_lookup_batch", scope: !1105, file: !65, line: 63, baseType: !5111, size: 64, offset: 448)
!5111 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5112, size: 64)
!5112 = !DISubroutineType(types: !5113)
!5113 = !{!32, !1310, !5114, !1111}
!5114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5115, size: 64)
!5115 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1112)
!5116 = !DIDerivedType(tag: DW_TAG_member, name: "map_lookup_and_delete_batch", scope: !1105, file: !65, line: 65, baseType: !5111, size: 64, offset: 512)
!5117 = !DIDerivedType(tag: DW_TAG_member, name: "map_update_batch", scope: !1105, file: !65, line: 68, baseType: !5111, size: 64, offset: 576)
!5118 = !DIDerivedType(tag: DW_TAG_member, name: "map_delete_batch", scope: !1105, file: !65, line: 70, baseType: !5111, size: 64, offset: 640)
!5119 = !DIDerivedType(tag: DW_TAG_member, name: "map_lookup_elem", scope: !1105, file: !65, line: 74, baseType: !5107, size: 64, offset: 704)
!5120 = !DIDerivedType(tag: DW_TAG_member, name: "map_update_elem", scope: !1105, file: !65, line: 75, baseType: !5121, size: 64, offset: 768)
!5121 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5122, size: 64)
!5122 = !DISubroutineType(types: !5123)
!5123 = !{!32, !1310, !591, !591, !331}
!5124 = !DIDerivedType(tag: DW_TAG_member, name: "map_delete_elem", scope: !1105, file: !65, line: 76, baseType: !5125, size: 64, offset: 832)
!5125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5126, size: 64)
!5126 = !DISubroutineType(types: !5127)
!5127 = !{!32, !1310, !591}
!5128 = !DIDerivedType(tag: DW_TAG_member, name: "map_push_elem", scope: !1105, file: !65, line: 77, baseType: !5129, size: 64, offset: 896)
!5129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5130, size: 64)
!5130 = !DISubroutineType(types: !5131)
!5131 = !{!32, !1310, !591, !331}
!5132 = !DIDerivedType(tag: DW_TAG_member, name: "map_pop_elem", scope: !1105, file: !65, line: 78, baseType: !5125, size: 64, offset: 960)
!5133 = !DIDerivedType(tag: DW_TAG_member, name: "map_peek_elem", scope: !1105, file: !65, line: 79, baseType: !5125, size: 64, offset: 1024)
!5134 = !DIDerivedType(tag: DW_TAG_member, name: "map_fd_get_ptr", scope: !1105, file: !65, line: 82, baseType: !5135, size: 64, offset: 1088)
!5135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5136, size: 64)
!5136 = !DISubroutineType(types: !5137)
!5137 = !{!591, !1310, !1315, !32}
!5138 = !DIDerivedType(tag: DW_TAG_member, name: "map_fd_put_ptr", scope: !1105, file: !65, line: 84, baseType: !1415, size: 64, offset: 1152)
!5139 = !DIDerivedType(tag: DW_TAG_member, name: "map_gen_lookup", scope: !1105, file: !65, line: 85, baseType: !5140, size: 64, offset: 1216)
!5140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5141, size: 64)
!5141 = !DISubroutineType(types: !5142)
!5142 = !{!32, !1310, !5143}
!5143 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5144, size: 64)
!5144 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_insn", file: !96, line: 65, size: 64, elements: !5145)
!5145 = !{!5146, !5147, !5148, !5149, !5150}
!5146 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !5144, file: !96, line: 66, baseType: !481, size: 8)
!5147 = !DIDerivedType(tag: DW_TAG_member, name: "dst_reg", scope: !5144, file: !96, line: 67, baseType: !481, size: 4, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!5148 = !DIDerivedType(tag: DW_TAG_member, name: "src_reg", scope: !5144, file: !96, line: 68, baseType: !481, size: 4, offset: 12, flags: DIFlagBitField, extraData: i64 8)
!5149 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !5144, file: !96, line: 69, baseType: !2315, size: 16, offset: 16)
!5150 = !DIDerivedType(tag: DW_TAG_member, name: "imm", scope: !5144, file: !96, line: 70, baseType: !942, size: 32, offset: 32)
!5151 = !DIDerivedType(tag: DW_TAG_member, name: "map_fd_sys_lookup_elem", scope: !1105, file: !65, line: 86, baseType: !5152, size: 64, offset: 1280)
!5152 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5153, size: 64)
!5153 = !DISubroutineType(types: !5154)
!5154 = !{!987, !591}
!5155 = !DIDerivedType(tag: DW_TAG_member, name: "map_seq_show_elem", scope: !1105, file: !65, line: 87, baseType: !5156, size: 64, offset: 1344)
!5156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5157, size: 64)
!5157 = !DISubroutineType(types: !5158)
!5158 = !{null, !1310, !591, !1653}
!5159 = !DIDerivedType(tag: DW_TAG_member, name: "map_check_btf", scope: !1105, file: !65, line: 89, baseType: !5160, size: 64, offset: 1408)
!5160 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5161, size: 64)
!5161 = !DISubroutineType(types: !5162)
!5162 = !{!32, !5163, !5165, !5168, !5168}
!5163 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5164, size: 64)
!5164 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1100)
!5165 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5166, size: 64)
!5166 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5167)
!5167 = !DICompositeType(tag: DW_TAG_structure_type, name: "btf", file: !65, line: 32, flags: DIFlagFwdDecl)
!5168 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5169, size: 64)
!5169 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5170)
!5170 = !DICompositeType(tag: DW_TAG_structure_type, name: "btf_type", file: !65, line: 33, flags: DIFlagFwdDecl)
!5171 = !DIDerivedType(tag: DW_TAG_member, name: "map_poke_track", scope: !1105, file: !65, line: 95, baseType: !5172, size: 64, offset: 1472)
!5172 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5173, size: 64)
!5173 = !DISubroutineType(types: !5174)
!5174 = !{!32, !1310, !5175}
!5175 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5176, size: 64)
!5176 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_prog_aux", file: !65, line: 757, size: 4928, elements: !5177)
!5177 = !{!5178, !5179, !5180, !5181, !5182, !5183, !5184, !5185, !5186, !5187, !5188, !5189, !5190, !5191, !5199, !5200, !5201, !5244, !5245, !5246, !5247, !5248, !5249, !5250, !5251, !5252, !5253, !5254, !5255, !5256, !5258, !5259, !5278, !5279, !5280, !5289, !5291, !5292, !5293, !5294, !5295, !5297, !5298, !5313, !5315, !5321, !5327, !5335, !5336, !5337, !5338, !5339, !5340, !5348, !5355}
!5178 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !5176, file: !65, line: 758, baseType: !373, size: 64)
!5179 = !DIDerivedType(tag: DW_TAG_member, name: "used_map_cnt", scope: !5176, file: !65, line: 759, baseType: !987, size: 32, offset: 64)
!5180 = !DIDerivedType(tag: DW_TAG_member, name: "max_ctx_offset", scope: !5176, file: !65, line: 760, baseType: !987, size: 32, offset: 96)
!5181 = !DIDerivedType(tag: DW_TAG_member, name: "max_pkt_offset", scope: !5176, file: !65, line: 761, baseType: !987, size: 32, offset: 128)
!5182 = !DIDerivedType(tag: DW_TAG_member, name: "max_tp_access", scope: !5176, file: !65, line: 762, baseType: !987, size: 32, offset: 160)
!5183 = !DIDerivedType(tag: DW_TAG_member, name: "stack_depth", scope: !5176, file: !65, line: 763, baseType: !987, size: 32, offset: 192)
!5184 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !5176, file: !65, line: 764, baseType: !987, size: 32, offset: 224)
!5185 = !DIDerivedType(tag: DW_TAG_member, name: "func_cnt", scope: !5176, file: !65, line: 765, baseType: !987, size: 32, offset: 256)
!5186 = !DIDerivedType(tag: DW_TAG_member, name: "func_idx", scope: !5176, file: !65, line: 766, baseType: !987, size: 32, offset: 288)
!5187 = !DIDerivedType(tag: DW_TAG_member, name: "attach_btf_id", scope: !5176, file: !65, line: 767, baseType: !987, size: 32, offset: 320)
!5188 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_arg_info_size", scope: !5176, file: !65, line: 768, baseType: !987, size: 32, offset: 352)
!5189 = !DIDerivedType(tag: DW_TAG_member, name: "max_rdonly_access", scope: !5176, file: !65, line: 769, baseType: !987, size: 32, offset: 384)
!5190 = !DIDerivedType(tag: DW_TAG_member, name: "max_rdwr_access", scope: !5176, file: !65, line: 770, baseType: !987, size: 32, offset: 416)
!5191 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_arg_info", scope: !5176, file: !65, line: 771, baseType: !5192, size: 64, offset: 448)
!5192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5193, size: 64)
!5193 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5194)
!5194 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_ctx_arg_aux", file: !65, line: 751, size: 96, elements: !5195)
!5195 = !{!5196, !5197, !5198}
!5196 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !5194, file: !65, line: 752, baseType: !987, size: 32)
!5197 = !DIDerivedType(tag: DW_TAG_member, name: "reg_type", scope: !5194, file: !65, line: 753, baseType: !64, size: 32, offset: 32)
!5198 = !DIDerivedType(tag: DW_TAG_member, name: "btf_id", scope: !5194, file: !65, line: 754, baseType: !987, size: 32, offset: 64)
!5199 = !DIDerivedType(tag: DW_TAG_member, name: "dst_mutex", scope: !5176, file: !65, line: 772, baseType: !1665, size: 192, offset: 512)
!5200 = !DIDerivedType(tag: DW_TAG_member, name: "dst_prog", scope: !5176, file: !65, line: 773, baseType: !1088, size: 64, offset: 704)
!5201 = !DIDerivedType(tag: DW_TAG_member, name: "dst_trampoline", scope: !5176, file: !65, line: 774, baseType: !5202, size: 64, offset: 768)
!5202 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5203, size: 64)
!5203 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_trampoline", file: !65, line: 586, size: 2944, elements: !5204)
!5204 = !{!5205, !5206, !5207, !5208, !5209, !5221, !5222, !5224, !5225, !5226, !5227}
!5205 = !DIDerivedType(tag: DW_TAG_member, name: "hlist", scope: !5203, file: !65, line: 588, baseType: !276, size: 128)
!5206 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !5203, file: !65, line: 590, baseType: !1665, size: 192, offset: 128)
!5207 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !5203, file: !65, line: 591, baseType: !568, size: 32, offset: 320)
!5208 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !5203, file: !65, line: 592, baseType: !331, size: 64, offset: 384)
!5209 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !5203, file: !65, line: 597, baseType: !5210, size: 256, offset: 448)
!5210 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5203, file: !65, line: 593, size: 256, elements: !5211)
!5211 = !{!5212, !5219, !5220}
!5212 = !DIDerivedType(tag: DW_TAG_member, name: "model", scope: !5210, file: !65, line: 594, baseType: !5213, size: 112)
!5213 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "btf_func_model", file: !65, line: 509, size: 112, elements: !5214)
!5214 = !{!5215, !5216, !5217}
!5215 = !DIDerivedType(tag: DW_TAG_member, name: "ret_size", scope: !5213, file: !65, line: 510, baseType: !794, size: 8)
!5216 = !DIDerivedType(tag: DW_TAG_member, name: "nr_args", scope: !5213, file: !65, line: 511, baseType: !794, size: 8, offset: 8)
!5217 = !DIDerivedType(tag: DW_TAG_member, name: "arg_size", scope: !5213, file: !65, line: 512, baseType: !5218, size: 96, offset: 16)
!5218 = !DICompositeType(tag: DW_TAG_array_type, baseType: !794, size: 96, elements: !4150)
!5219 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !5210, file: !65, line: 595, baseType: !591, size: 64, offset: 128)
!5220 = !DIDerivedType(tag: DW_TAG_member, name: "ftrace_managed", scope: !5210, file: !65, line: 596, baseType: !771, size: 8, offset: 192)
!5221 = !DIDerivedType(tag: DW_TAG_member, name: "extension_prog", scope: !5203, file: !65, line: 602, baseType: !1088, size: 64, offset: 704)
!5222 = !DIDerivedType(tag: DW_TAG_member, name: "progs_hlist", scope: !5203, file: !65, line: 604, baseType: !5223, size: 192, offset: 768)
!5223 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1581, size: 192, elements: !1592)
!5224 = !DIDerivedType(tag: DW_TAG_member, name: "progs_cnt", scope: !5203, file: !65, line: 606, baseType: !3398, size: 96, offset: 960)
!5225 = !DIDerivedType(tag: DW_TAG_member, name: "image", scope: !5203, file: !65, line: 608, baseType: !591, size: 64, offset: 1088)
!5226 = !DIDerivedType(tag: DW_TAG_member, name: "selector", scope: !5203, file: !65, line: 609, baseType: !331, size: 64, offset: 1152)
!5227 = !DIDerivedType(tag: DW_TAG_member, name: "ksym", scope: !5203, file: !65, line: 610, baseType: !5228, size: 1728, offset: 1216)
!5228 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_ksym", file: !65, line: 569, size: 1728, elements: !5229)
!5229 = !{!5230, !5231, !5232, !5236, !5237, !5243}
!5230 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !5228, file: !65, line: 570, baseType: !312, size: 64)
!5231 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !5228, file: !65, line: 571, baseType: !312, size: 64, offset: 64)
!5232 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5228, file: !65, line: 572, baseType: !5233, size: 1024, offset: 128)
!5233 = !DICompositeType(tag: DW_TAG_array_type, baseType: !268, size: 1024, elements: !5234)
!5234 = !{!5235}
!5235 = !DISubrange(count: 128)
!5236 = !DIDerivedType(tag: DW_TAG_member, name: "lnode", scope: !5228, file: !65, line: 573, baseType: !284, size: 128, offset: 1152)
!5237 = !DIDerivedType(tag: DW_TAG_member, name: "tnode", scope: !5228, file: !65, line: 574, baseType: !5238, size: 384, offset: 1280)
!5238 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "latch_tree_node", file: !5239, line: 40, size: 384, elements: !5240)
!5239 = !DIFile(filename: "./include/linux/rbtree_latch.h", directory: "/home/lizy2001/genbc/linux")
!5240 = !{!5241}
!5241 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !5238, file: !5239, line: 41, baseType: !5242, size: 384)
!5242 = !DICompositeType(tag: DW_TAG_array_type, baseType: !433, size: 384, elements: !2664)
!5243 = !DIDerivedType(tag: DW_TAG_member, name: "prog", scope: !5228, file: !65, line: 575, baseType: !771, size: 8, offset: 1664)
!5244 = !DIDerivedType(tag: DW_TAG_member, name: "saved_dst_prog_type", scope: !5176, file: !65, line: 775, baseType: !95, size: 32, offset: 832)
!5245 = !DIDerivedType(tag: DW_TAG_member, name: "saved_dst_attach_type", scope: !5176, file: !65, line: 776, baseType: !129, size: 32, offset: 864)
!5246 = !DIDerivedType(tag: DW_TAG_member, name: "verifier_zext", scope: !5176, file: !65, line: 777, baseType: !771, size: 8, offset: 896)
!5247 = !DIDerivedType(tag: DW_TAG_member, name: "offload_requested", scope: !5176, file: !65, line: 778, baseType: !771, size: 8, offset: 904)
!5248 = !DIDerivedType(tag: DW_TAG_member, name: "attach_btf_trace", scope: !5176, file: !65, line: 779, baseType: !771, size: 8, offset: 912)
!5249 = !DIDerivedType(tag: DW_TAG_member, name: "func_proto_unreliable", scope: !5176, file: !65, line: 780, baseType: !771, size: 8, offset: 920)
!5250 = !DIDerivedType(tag: DW_TAG_member, name: "sleepable", scope: !5176, file: !65, line: 781, baseType: !771, size: 8, offset: 928)
!5251 = !DIDerivedType(tag: DW_TAG_member, name: "tail_call_reachable", scope: !5176, file: !65, line: 782, baseType: !771, size: 8, offset: 936)
!5252 = !DIDerivedType(tag: DW_TAG_member, name: "trampoline_prog_type", scope: !5176, file: !65, line: 783, baseType: !170, size: 32, offset: 960)
!5253 = !DIDerivedType(tag: DW_TAG_member, name: "tramp_hlist", scope: !5176, file: !65, line: 784, baseType: !276, size: 128, offset: 1024)
!5254 = !DIDerivedType(tag: DW_TAG_member, name: "attach_func_proto", scope: !5176, file: !65, line: 786, baseType: !5168, size: 64, offset: 1152)
!5255 = !DIDerivedType(tag: DW_TAG_member, name: "attach_func_name", scope: !5176, file: !65, line: 788, baseType: !292, size: 64, offset: 1216)
!5256 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !5176, file: !65, line: 789, baseType: !5257, size: 64, offset: 1280)
!5257 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1088, size: 64)
!5258 = !DIDerivedType(tag: DW_TAG_member, name: "jit_data", scope: !5176, file: !65, line: 790, baseType: !591, size: 64, offset: 1344)
!5259 = !DIDerivedType(tag: DW_TAG_member, name: "poke_tab", scope: !5176, file: !65, line: 791, baseType: !5260, size: 64, offset: 1408)
!5260 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5261, size: 64)
!5261 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_jit_poke_descriptor", file: !65, line: 734, size: 384, elements: !5262)
!5262 = !{!5263, !5264, !5265, !5266, !5274, !5275, !5276, !5277}
!5263 = !DIDerivedType(tag: DW_TAG_member, name: "tailcall_target", scope: !5261, file: !65, line: 735, baseType: !591, size: 64)
!5264 = !DIDerivedType(tag: DW_TAG_member, name: "tailcall_bypass", scope: !5261, file: !65, line: 736, baseType: !591, size: 64, offset: 64)
!5265 = !DIDerivedType(tag: DW_TAG_member, name: "bypass_addr", scope: !5261, file: !65, line: 737, baseType: !591, size: 64, offset: 128)
!5266 = !DIDerivedType(tag: DW_TAG_member, scope: !5261, file: !65, line: 738, baseType: !5267, size: 128, offset: 192)
!5267 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5261, file: !65, line: 738, size: 128, elements: !5268)
!5268 = !{!5269}
!5269 = !DIDerivedType(tag: DW_TAG_member, name: "tail_call", scope: !5267, file: !65, line: 742, baseType: !5270, size: 128)
!5270 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5267, file: !65, line: 739, size: 128, elements: !5271)
!5271 = !{!5272, !5273}
!5272 = !DIDerivedType(tag: DW_TAG_member, name: "map", scope: !5270, file: !65, line: 740, baseType: !1310, size: 64)
!5273 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !5270, file: !65, line: 741, baseType: !987, size: 32, offset: 64)
!5274 = !DIDerivedType(tag: DW_TAG_member, name: "tailcall_target_stable", scope: !5261, file: !65, line: 744, baseType: !771, size: 8, offset: 320)
!5275 = !DIDerivedType(tag: DW_TAG_member, name: "adj_off", scope: !5261, file: !65, line: 745, baseType: !794, size: 8, offset: 328)
!5276 = !DIDerivedType(tag: DW_TAG_member, name: "reason", scope: !5261, file: !65, line: 746, baseType: !581, size: 16, offset: 336)
!5277 = !DIDerivedType(tag: DW_TAG_member, name: "insn_idx", scope: !5261, file: !65, line: 747, baseType: !987, size: 32, offset: 352)
!5278 = !DIDerivedType(tag: DW_TAG_member, name: "size_poke_tab", scope: !5176, file: !65, line: 792, baseType: !987, size: 32, offset: 1472)
!5279 = !DIDerivedType(tag: DW_TAG_member, name: "ksym", scope: !5176, file: !65, line: 793, baseType: !5228, size: 1728, offset: 1536)
!5280 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !5176, file: !65, line: 794, baseType: !5281, size: 64, offset: 3264)
!5281 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5282, size: 64)
!5282 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5283)
!5283 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_prog_ops", file: !65, line: 432, size: 64, elements: !5284)
!5284 = !{!5285}
!5285 = !DIDerivedType(tag: DW_TAG_member, name: "test_run", scope: !5283, file: !65, line: 433, baseType: !5286, size: 64)
!5286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5287, size: 64)
!5287 = !DISubroutineType(types: !5288)
!5288 = !{!32, !1088, !5114, !1111}
!5289 = !DIDerivedType(tag: DW_TAG_member, name: "used_maps", scope: !5176, file: !65, line: 795, baseType: !5290, size: 64, offset: 3328)
!5290 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1310, size: 64)
!5291 = !DIDerivedType(tag: DW_TAG_member, name: "used_maps_mutex", scope: !5176, file: !65, line: 796, baseType: !1665, size: 192, offset: 3392)
!5292 = !DIDerivedType(tag: DW_TAG_member, name: "prog", scope: !5176, file: !65, line: 797, baseType: !1088, size: 64, offset: 3584)
!5293 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !5176, file: !65, line: 798, baseType: !1953, size: 64, offset: 3648)
!5294 = !DIDerivedType(tag: DW_TAG_member, name: "load_time", scope: !5176, file: !65, line: 799, baseType: !331, size: 64, offset: 3712)
!5295 = !DIDerivedType(tag: DW_TAG_member, name: "cgroup_storage", scope: !5176, file: !65, line: 800, baseType: !5296, size: 128, offset: 3776)
!5296 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1310, size: 128, elements: !2664)
!5297 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5176, file: !65, line: 801, baseType: !267, size: 128, offset: 3904)
!5298 = !DIDerivedType(tag: DW_TAG_member, name: "offload", scope: !5176, file: !65, line: 805, baseType: !5299, size: 64, offset: 4032)
!5299 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5300, size: 64)
!5300 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_prog_offload", file: !65, line: 478, size: 576, elements: !5301)
!5301 = !{!5302, !5303, !5304, !5307, !5308, !5309, !5310, !5311, !5312}
!5302 = !DIDerivedType(tag: DW_TAG_member, name: "prog", scope: !5300, file: !65, line: 479, baseType: !1088, size: 64)
!5303 = !DIDerivedType(tag: DW_TAG_member, name: "netdev", scope: !5300, file: !65, line: 480, baseType: !290, size: 64, offset: 64)
!5304 = !DIDerivedType(tag: DW_TAG_member, name: "offdev", scope: !5300, file: !65, line: 481, baseType: !5305, size: 64, offset: 128)
!5305 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5306, size: 64)
!5306 = !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_offload_dev", file: !65, line: 209, flags: DIFlagFwdDecl)
!5307 = !DIDerivedType(tag: DW_TAG_member, name: "dev_priv", scope: !5300, file: !65, line: 482, baseType: !591, size: 64, offset: 192)
!5308 = !DIDerivedType(tag: DW_TAG_member, name: "offloads", scope: !5300, file: !65, line: 483, baseType: !284, size: 128, offset: 256)
!5309 = !DIDerivedType(tag: DW_TAG_member, name: "dev_state", scope: !5300, file: !65, line: 484, baseType: !771, size: 8, offset: 384)
!5310 = !DIDerivedType(tag: DW_TAG_member, name: "opt_failed", scope: !5300, file: !65, line: 485, baseType: !771, size: 8, offset: 392)
!5311 = !DIDerivedType(tag: DW_TAG_member, name: "jited_image", scope: !5300, file: !65, line: 486, baseType: !591, size: 64, offset: 448)
!5312 = !DIDerivedType(tag: DW_TAG_member, name: "jited_len", scope: !5300, file: !65, line: 487, baseType: !987, size: 32, offset: 512)
!5313 = !DIDerivedType(tag: DW_TAG_member, name: "btf", scope: !5176, file: !65, line: 806, baseType: !5314, size: 64, offset: 4096)
!5314 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5167, size: 64)
!5315 = !DIDerivedType(tag: DW_TAG_member, name: "func_info", scope: !5176, file: !65, line: 807, baseType: !5316, size: 64, offset: 4160)
!5316 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5317, size: 64)
!5317 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_func_info", file: !96, line: 4963, size: 64, elements: !5318)
!5318 = !{!5319, !5320}
!5319 = !DIDerivedType(tag: DW_TAG_member, name: "insn_off", scope: !5317, file: !96, line: 4964, baseType: !493, size: 32)
!5320 = !DIDerivedType(tag: DW_TAG_member, name: "type_id", scope: !5317, file: !96, line: 4965, baseType: !493, size: 32, offset: 32)
!5321 = !DIDerivedType(tag: DW_TAG_member, name: "func_info_aux", scope: !5176, file: !65, line: 808, baseType: !5322, size: 64, offset: 4224)
!5322 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5323, size: 64)
!5323 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_func_info_aux", file: !65, line: 724, size: 32, elements: !5324)
!5324 = !{!5325, !5326}
!5325 = !DIDerivedType(tag: DW_TAG_member, name: "linkage", scope: !5323, file: !65, line: 725, baseType: !581, size: 16)
!5326 = !DIDerivedType(tag: DW_TAG_member, name: "unreliable", scope: !5323, file: !65, line: 726, baseType: !771, size: 8, offset: 16)
!5327 = !DIDerivedType(tag: DW_TAG_member, name: "linfo", scope: !5176, file: !65, line: 815, baseType: !5328, size: 64, offset: 4288)
!5328 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5329, size: 64)
!5329 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_line_info", file: !96, line: 4971, size: 128, elements: !5330)
!5330 = !{!5331, !5332, !5333, !5334}
!5331 = !DIDerivedType(tag: DW_TAG_member, name: "insn_off", scope: !5329, file: !96, line: 4972, baseType: !493, size: 32)
!5332 = !DIDerivedType(tag: DW_TAG_member, name: "file_name_off", scope: !5329, file: !96, line: 4973, baseType: !493, size: 32, offset: 32)
!5333 = !DIDerivedType(tag: DW_TAG_member, name: "line_off", scope: !5329, file: !96, line: 4974, baseType: !493, size: 32, offset: 64)
!5334 = !DIDerivedType(tag: DW_TAG_member, name: "line_col", scope: !5329, file: !96, line: 4975, baseType: !493, size: 32, offset: 96)
!5335 = !DIDerivedType(tag: DW_TAG_member, name: "jited_linfo", scope: !5176, file: !65, line: 823, baseType: !1802, size: 64, offset: 4352)
!5336 = !DIDerivedType(tag: DW_TAG_member, name: "func_info_cnt", scope: !5176, file: !65, line: 824, baseType: !987, size: 32, offset: 4416)
!5337 = !DIDerivedType(tag: DW_TAG_member, name: "nr_linfo", scope: !5176, file: !65, line: 825, baseType: !987, size: 32, offset: 4448)
!5338 = !DIDerivedType(tag: DW_TAG_member, name: "linfo_idx", scope: !5176, file: !65, line: 830, baseType: !987, size: 32, offset: 4480)
!5339 = !DIDerivedType(tag: DW_TAG_member, name: "num_exentries", scope: !5176, file: !65, line: 831, baseType: !987, size: 32, offset: 4512)
!5340 = !DIDerivedType(tag: DW_TAG_member, name: "extable", scope: !5176, file: !65, line: 832, baseType: !5341, size: 64, offset: 4544)
!5341 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5342, size: 64)
!5342 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "exception_table_entry", file: !5343, line: 17, size: 96, elements: !5344)
!5343 = !DIFile(filename: "./arch/x86/include/asm/extable.h", directory: "/home/lizy2001/genbc/linux")
!5344 = !{!5345, !5346, !5347}
!5345 = !DIDerivedType(tag: DW_TAG_member, name: "insn", scope: !5342, file: !5343, line: 18, baseType: !32, size: 32)
!5346 = !DIDerivedType(tag: DW_TAG_member, name: "fixup", scope: !5342, file: !5343, line: 18, baseType: !32, size: 32, offset: 32)
!5347 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !5342, file: !5343, line: 18, baseType: !32, size: 32, offset: 64)
!5348 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !5176, file: !65, line: 833, baseType: !5349, size: 64, offset: 4608)
!5349 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5350, size: 64)
!5350 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_prog_stats", file: !65, line: 503, size: 128, align: 128, elements: !5351)
!5351 = !{!5352, !5353, !5354}
!5352 = !DIDerivedType(tag: DW_TAG_member, name: "cnt", scope: !5350, file: !65, line: 504, baseType: !331, size: 64)
!5353 = !DIDerivedType(tag: DW_TAG_member, name: "nsecs", scope: !5350, file: !65, line: 505, baseType: !331, size: 64, offset: 64)
!5354 = !DIDerivedType(tag: DW_TAG_member, name: "syncp", scope: !5350, file: !65, line: 506, baseType: !3071, offset: 128)
!5355 = !DIDerivedType(tag: DW_TAG_member, scope: !5176, file: !65, line: 834, baseType: !5356, size: 256, offset: 4672)
!5356 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5176, file: !65, line: 834, size: 256, elements: !5357)
!5357 = !{!5358, !5359}
!5358 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !5356, file: !65, line: 835, baseType: !2829, size: 256)
!5359 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !5356, file: !65, line: 836, baseType: !299, size: 128, align: 64)
!5360 = !DIDerivedType(tag: DW_TAG_member, name: "map_poke_untrack", scope: !1105, file: !65, line: 96, baseType: !5361, size: 64, offset: 1536)
!5361 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5362, size: 64)
!5362 = !DISubroutineType(types: !5363)
!5363 = !{null, !1310, !5175}
!5364 = !DIDerivedType(tag: DW_TAG_member, name: "map_poke_run", scope: !1105, file: !65, line: 97, baseType: !5365, size: 64, offset: 1600)
!5365 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5366, size: 64)
!5366 = !DISubroutineType(types: !5367)
!5367 = !{null, !1310, !987, !1088, !1088}
!5368 = !DIDerivedType(tag: DW_TAG_member, name: "map_direct_value_addr", scope: !1105, file: !65, line: 101, baseType: !5369, size: 64, offset: 1664)
!5369 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5370, size: 64)
!5370 = !DISubroutineType(types: !5371)
!5371 = !{!32, !5163, !5372, !987}
!5372 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !331, size: 64)
!5373 = !DIDerivedType(tag: DW_TAG_member, name: "map_direct_value_meta", scope: !1105, file: !65, line: 103, baseType: !5374, size: 64, offset: 1728)
!5374 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5375, size: 64)
!5375 = !DISubroutineType(types: !5376)
!5376 = !{!32, !5163, !331, !2516}
!5377 = !DIDerivedType(tag: DW_TAG_member, name: "map_mmap", scope: !1105, file: !65, line: 105, baseType: !5378, size: 64, offset: 1792)
!5378 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5379, size: 64)
!5379 = !DISubroutineType(types: !5380)
!5380 = !{!32, !1310, !2098}
!5381 = !DIDerivedType(tag: DW_TAG_member, name: "map_poll", scope: !1105, file: !65, line: 106, baseType: !5382, size: 64, offset: 1856)
!5382 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5383, size: 64)
!5383 = !DISubroutineType(types: !5384)
!5384 = !{!4828, !1310, !1315, !4829}
!5385 = !DIDerivedType(tag: DW_TAG_member, name: "map_local_storage_charge", scope: !1105, file: !65, line: 110, baseType: !5386, size: 64, offset: 1920)
!5386 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5387, size: 64)
!5387 = !DISubroutineType(types: !5388)
!5388 = !{!32, !5389, !591, !987}
!5389 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5390, size: 64)
!5390 = !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_local_storage_map", file: !65, line: 38, flags: DIFlagFwdDecl)
!5391 = !DIDerivedType(tag: DW_TAG_member, name: "map_local_storage_uncharge", scope: !1105, file: !65, line: 112, baseType: !5392, size: 64, offset: 1984)
!5392 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5393, size: 64)
!5393 = !DISubroutineType(types: !5394)
!5394 = !{null, !5389, !591, !987}
!5395 = !DIDerivedType(tag: DW_TAG_member, name: "map_owner_storage_ptr", scope: !1105, file: !65, line: 114, baseType: !5396, size: 64, offset: 2048)
!5396 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5397, size: 64)
!5397 = !DISubroutineType(types: !5398)
!5398 = !{!5399, !591}
!5399 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5400, size: 64)
!5400 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5401, size: 64)
!5401 = !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_local_storage", file: !65, line: 37, flags: DIFlagFwdDecl)
!5402 = !DIDerivedType(tag: DW_TAG_member, name: "map_meta_equal", scope: !1105, file: !65, line: 125, baseType: !5403, size: 64, offset: 2112)
!5403 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5404, size: 64)
!5404 = !DISubroutineType(types: !5405)
!5405 = !{!771, !5163, !5163}
!5406 = !DIDerivedType(tag: DW_TAG_member, name: "map_btf_name", scope: !1105, file: !65, line: 129, baseType: !5407, size: 64, offset: 2176)
!5407 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !292)
!5408 = !DIDerivedType(tag: DW_TAG_member, name: "map_btf_id", scope: !1105, file: !65, line: 130, baseType: !1001, size: 64, offset: 2240)
!5409 = !DIDerivedType(tag: DW_TAG_member, name: "iter_seq_info", scope: !1105, file: !65, line: 133, baseType: !5410, size: 64, offset: 2304)
!5410 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5411, size: 64)
!5411 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5412)
!5412 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_iter_seq_info", file: !65, line: 46, size: 256, elements: !5413)
!5413 = !{!5414, !5415, !5422, !5424}
!5414 = !DIDerivedType(tag: DW_TAG_member, name: "seq_ops", scope: !5412, file: !65, line: 47, baseType: !1686, size: 64)
!5415 = !DIDerivedType(tag: DW_TAG_member, name: "init_seq_private", scope: !5412, file: !65, line: 48, baseType: !5416, size: 64, offset: 64)
!5416 = !DIDerivedType(tag: DW_TAG_typedef, name: "bpf_iter_init_seq_priv_t", file: !65, line: 43, baseType: !5417)
!5417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5418, size: 64)
!5418 = !DISubroutineType(types: !5419)
!5419 = !{!32, !591, !5420}
!5420 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5421, size: 64)
!5421 = !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_iter_aux_info", file: !65, line: 36, flags: DIFlagFwdDecl)
!5422 = !DIDerivedType(tag: DW_TAG_member, name: "fini_seq_private", scope: !5412, file: !65, line: 49, baseType: !5423, size: 64, offset: 128)
!5423 = !DIDerivedType(tag: DW_TAG_typedef, name: "bpf_iter_fini_seq_priv_t", file: !65, line: 45, baseType: !1415)
!5424 = !DIDerivedType(tag: DW_TAG_member, name: "seq_priv_size", scope: !5412, file: !65, line: 50, baseType: !987, size: 32, offset: 192)
!5425 = !DIDerivedType(tag: DW_TAG_member, name: "inner_map_meta", scope: !1100, file: !65, line: 146, baseType: !1310, size: 64, offset: 64)
!5426 = !DIDerivedType(tag: DW_TAG_member, name: "map_type", scope: !1100, file: !65, line: 150, baseType: !177, size: 32, offset: 128)
!5427 = !DIDerivedType(tag: DW_TAG_member, name: "key_size", scope: !1100, file: !65, line: 151, baseType: !987, size: 32, offset: 160)
!5428 = !DIDerivedType(tag: DW_TAG_member, name: "value_size", scope: !1100, file: !65, line: 152, baseType: !987, size: 32, offset: 192)
!5429 = !DIDerivedType(tag: DW_TAG_member, name: "max_entries", scope: !1100, file: !65, line: 153, baseType: !987, size: 32, offset: 224)
!5430 = !DIDerivedType(tag: DW_TAG_member, name: "map_flags", scope: !1100, file: !65, line: 154, baseType: !987, size: 32, offset: 256)
!5431 = !DIDerivedType(tag: DW_TAG_member, name: "spin_lock_off", scope: !1100, file: !65, line: 155, baseType: !32, size: 32, offset: 288)
!5432 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1100, file: !65, line: 156, baseType: !987, size: 32, offset: 320)
!5433 = !DIDerivedType(tag: DW_TAG_member, name: "numa_node", scope: !1100, file: !65, line: 157, baseType: !32, size: 32, offset: 352)
!5434 = !DIDerivedType(tag: DW_TAG_member, name: "btf_key_type_id", scope: !1100, file: !65, line: 158, baseType: !987, size: 32, offset: 384)
!5435 = !DIDerivedType(tag: DW_TAG_member, name: "btf_value_type_id", scope: !1100, file: !65, line: 159, baseType: !987, size: 32, offset: 416)
!5436 = !DIDerivedType(tag: DW_TAG_member, name: "btf", scope: !1100, file: !65, line: 160, baseType: !5314, size: 64, offset: 448)
!5437 = !DIDerivedType(tag: DW_TAG_member, name: "memory", scope: !1100, file: !65, line: 161, baseType: !5438, size: 128, offset: 512)
!5438 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_map_memory", file: !65, line: 136, size: 128, elements: !5439)
!5439 = !{!5440, !5441}
!5440 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !5438, file: !65, line: 137, baseType: !987, size: 32)
!5441 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !5438, file: !65, line: 138, baseType: !1953, size: 64, offset: 64)
!5442 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1100, file: !65, line: 162, baseType: !267, size: 128, offset: 640)
!5443 = !DIDerivedType(tag: DW_TAG_member, name: "btf_vmlinux_value_type_id", scope: !1100, file: !65, line: 163, baseType: !987, size: 32, offset: 768)
!5444 = !DIDerivedType(tag: DW_TAG_member, name: "bypass_spec_v1", scope: !1100, file: !65, line: 164, baseType: !771, size: 8, offset: 800)
!5445 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !1100, file: !65, line: 165, baseType: !771, size: 8, offset: 808)
!5446 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !1100, file: !65, line: 171, baseType: !373, size: 64, align: 512, offset: 1024)
!5447 = !DIDerivedType(tag: DW_TAG_member, name: "usercnt", scope: !1100, file: !65, line: 172, baseType: !373, size: 64, offset: 1088)
!5448 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !1100, file: !65, line: 173, baseType: !2829, size: 256, offset: 1152)
!5449 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_mutex", scope: !1100, file: !65, line: 174, baseType: !1665, size: 192, offset: 1408)
!5450 = !DIDerivedType(tag: DW_TAG_member, name: "writecnt", scope: !1100, file: !65, line: 175, baseType: !331, size: 64, offset: 1600)
!5451 = !DIDerivedType(tag: DW_TAG_member, name: "netdev", scope: !1097, file: !65, line: 224, baseType: !290, size: 64, offset: 2048)
!5452 = !DIDerivedType(tag: DW_TAG_member, name: "dev_ops", scope: !1097, file: !65, line: 225, baseType: !5453, size: 64, offset: 2112)
!5453 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5454, size: 64)
!5454 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5455)
!5455 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_map_dev_ops", file: !65, line: 212, size: 256, elements: !5456)
!5456 = !{!5457, !5461, !5462, !5466}
!5457 = !DIDerivedType(tag: DW_TAG_member, name: "map_get_next_key", scope: !5455, file: !65, line: 213, baseType: !5458, size: 64)
!5458 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5459, size: 64)
!5459 = !DISubroutineType(types: !5460)
!5460 = !{!32, !1096, !591, !591}
!5461 = !DIDerivedType(tag: DW_TAG_member, name: "map_lookup_elem", scope: !5455, file: !65, line: 215, baseType: !5458, size: 64, offset: 64)
!5462 = !DIDerivedType(tag: DW_TAG_member, name: "map_update_elem", scope: !5455, file: !65, line: 217, baseType: !5463, size: 64, offset: 128)
!5463 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5464, size: 64)
!5464 = !DISubroutineType(types: !5465)
!5465 = !{!32, !1096, !591, !591, !331}
!5466 = !DIDerivedType(tag: DW_TAG_member, name: "map_delete_elem", scope: !5455, file: !65, line: 219, baseType: !5467, size: 64, offset: 192)
!5467 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5468, size: 64)
!5468 = !DISubroutineType(types: !5469)
!5469 = !{!32, !1096, !591}
!5470 = !DIDerivedType(tag: DW_TAG_member, name: "dev_priv", scope: !1097, file: !65, line: 226, baseType: !591, size: 64, offset: 2176)
!5471 = !DIDerivedType(tag: DW_TAG_member, name: "offloads", scope: !1097, file: !65, line: 227, baseType: !284, size: 128, offset: 2240)
!5472 = !DIDerivedType(tag: DW_TAG_member, name: "xsk", scope: !1081, file: !31, line: 911, baseType: !5473, size: 128)
!5473 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1081, file: !31, line: 908, size: 128, elements: !5474)
!5474 = !{!5475, !5478}
!5475 = !DIDerivedType(tag: DW_TAG_member, name: "pool", scope: !5473, file: !31, line: 909, baseType: !5476, size: 64)
!5476 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5477, size: 64)
!5477 = !DICompositeType(tag: DW_TAG_structure_type, name: "xsk_buff_pool", file: !31, line: 909, flags: DIFlagFwdDecl)
!5478 = !DIDerivedType(tag: DW_TAG_member, name: "queue_id", scope: !5473, file: !31, line: 910, baseType: !581, size: 16, offset: 64)
!5479 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_xdp_xmit", scope: !398, file: !31, line: 1481, baseType: !5480, size: 64, offset: 4096)
!5480 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5481, size: 64)
!5481 = !DISubroutineType(types: !5482)
!5482 = !{!32, !290, !32, !5483, !987}
!5483 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5484, size: 64)
!5484 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5485, size: 64)
!5485 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xdp_frame", file: !5486, line: 94, size: 256, elements: !5487)
!5486 = !DIFile(filename: "./include/net/xdp.h", directory: "/home/lizy2001/genbc/linux")
!5487 = !{!5488, !5489, !5490, !5491, !5492, !5493, !5498}
!5488 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !5485, file: !5486, line: 95, baseType: !591, size: 64)
!5489 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !5485, file: !5486, line: 96, baseType: !581, size: 16, offset: 64)
!5490 = !DIDerivedType(tag: DW_TAG_member, name: "headroom", scope: !5485, file: !5486, line: 97, baseType: !581, size: 16, offset: 80)
!5491 = !DIDerivedType(tag: DW_TAG_member, name: "metasize", scope: !5485, file: !5486, line: 98, baseType: !987, size: 8, offset: 96, flags: DIFlagBitField, extraData: i64 96)
!5492 = !DIDerivedType(tag: DW_TAG_member, name: "frame_sz", scope: !5485, file: !5486, line: 99, baseType: !987, size: 24, offset: 104, flags: DIFlagBitField, extraData: i64 96)
!5493 = !DIDerivedType(tag: DW_TAG_member, name: "mem", scope: !5485, file: !5486, line: 103, baseType: !5494, size: 64, offset: 128)
!5494 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xdp_mem_info", file: !5486, line: 50, size: 64, elements: !5495)
!5495 = !{!5496, !5497}
!5496 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !5494, file: !5486, line: 51, baseType: !987, size: 32)
!5497 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !5494, file: !5486, line: 52, baseType: !987, size: 32, offset: 32)
!5498 = !DIDerivedType(tag: DW_TAG_member, name: "dev_rx", scope: !5485, file: !5486, line: 104, baseType: !290, size: 64, offset: 192)
!5499 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_xsk_wakeup", scope: !398, file: !31, line: 1484, baseType: !5500, size: 64, offset: 4160)
!5500 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5501, size: 64)
!5501 = !DISubroutineType(types: !5502)
!5502 = !{!32, !290, !987, !987}
!5503 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_devlink_port", scope: !398, file: !31, line: 1486, baseType: !5504, size: 64, offset: 4224)
!5504 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5505, size: 64)
!5505 = !DISubroutineType(types: !5506)
!5506 = !{!5507, !290}
!5507 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5508, size: 64)
!5508 = !DICompositeType(tag: DW_TAG_structure_type, name: "devlink_port", file: !31, line: 1486, flags: DIFlagFwdDecl)
!5509 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_tunnel_ctl", scope: !398, file: !31, line: 1487, baseType: !5510, size: 64, offset: 4288)
!5510 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5511, size: 64)
!5511 = !DISubroutineType(types: !5512)
!5512 = !{!32, !290, !5513, !32}
!5513 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5514, size: 64)
!5514 = !DICompositeType(tag: DW_TAG_structure_type, name: "ip_tunnel_parm", file: !31, line: 56, flags: DIFlagFwdDecl)
!5515 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_peer_dev", scope: !398, file: !31, line: 1489, baseType: !5516, size: 64, offset: 4352)
!5516 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5517, size: 64)
!5517 = !DISubroutineType(types: !5518)
!5518 = !{!290, !290}
!5519 = !DIDerivedType(tag: DW_TAG_member, name: "ethtool_ops", scope: !264, file: !31, line: 1917, baseType: !5520, size: 64, offset: 4032)
!5520 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5521, size: 64)
!5521 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5522)
!5522 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_ops", file: !251, line: 421, size: 3904, elements: !5523)
!5523 = !{!5524, !5525, !5545, !5546, !5557, !5569, !5573, !5577, !5581, !5582, !5583, !5600, !5601, !5613, !5614, !5644, !5645, !5661, !5665, !5674, !5685, !5689, !5702, !5706, !5710, !5720, !5721, !5722, !5723, !5727, !5728, !5830, !5834, !5844, !5848, !5849, !5850, !5854, !5862, !5866, !5870, !5886, !5890, !5902, !5906, !5907, !5922, !5934, !5935, !5951, !5952, !5966, !5970, !5974, !5975, !6014, !6020, !6031, !6032, !6033, !6034}
!5524 = !DIDerivedType(tag: DW_TAG_member, name: "supported_coalesce_params", scope: !5522, file: !251, line: 422, baseType: !987, size: 32)
!5525 = !DIDerivedType(tag: DW_TAG_member, name: "get_drvinfo", scope: !5522, file: !251, line: 423, baseType: !5526, size: 64, offset: 64)
!5526 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5527, size: 64)
!5527 = !DISubroutineType(types: !5528)
!5528 = !{null, !290, !5529}
!5529 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5530, size: 64)
!5530 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_drvinfo", file: !209, line: 177, size: 1568, elements: !5531)
!5531 = !{!5532, !5533, !5534, !5535, !5536, !5537, !5538, !5540, !5541, !5542, !5543, !5544}
!5532 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !5530, file: !209, line: 178, baseType: !493, size: 32)
!5533 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !5530, file: !209, line: 179, baseType: !4625, size: 256, offset: 32)
!5534 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !5530, file: !209, line: 180, baseType: !4625, size: 256, offset: 288)
!5535 = !DIDerivedType(tag: DW_TAG_member, name: "fw_version", scope: !5530, file: !209, line: 181, baseType: !4625, size: 256, offset: 544)
!5536 = !DIDerivedType(tag: DW_TAG_member, name: "bus_info", scope: !5530, file: !209, line: 182, baseType: !4625, size: 256, offset: 800)
!5537 = !DIDerivedType(tag: DW_TAG_member, name: "erom_version", scope: !5530, file: !209, line: 183, baseType: !4625, size: 256, offset: 1056)
!5538 = !DIDerivedType(tag: DW_TAG_member, name: "reserved2", scope: !5530, file: !209, line: 184, baseType: !5539, size: 96, offset: 1312)
!5539 = !DICompositeType(tag: DW_TAG_array_type, baseType: !268, size: 96, elements: !4150)
!5540 = !DIDerivedType(tag: DW_TAG_member, name: "n_priv_flags", scope: !5530, file: !209, line: 185, baseType: !493, size: 32, offset: 1408)
!5541 = !DIDerivedType(tag: DW_TAG_member, name: "n_stats", scope: !5530, file: !209, line: 186, baseType: !493, size: 32, offset: 1440)
!5542 = !DIDerivedType(tag: DW_TAG_member, name: "testinfo_len", scope: !5530, file: !209, line: 187, baseType: !493, size: 32, offset: 1472)
!5543 = !DIDerivedType(tag: DW_TAG_member, name: "eedump_len", scope: !5530, file: !209, line: 188, baseType: !493, size: 32, offset: 1504)
!5544 = !DIDerivedType(tag: DW_TAG_member, name: "regdump_len", scope: !5530, file: !209, line: 189, baseType: !493, size: 32, offset: 1536)
!5545 = !DIDerivedType(tag: DW_TAG_member, name: "get_regs_len", scope: !5522, file: !251, line: 424, baseType: !401, size: 64, offset: 128)
!5546 = !DIDerivedType(tag: DW_TAG_member, name: "get_regs", scope: !5522, file: !251, line: 425, baseType: !5547, size: 64, offset: 192)
!5547 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5548, size: 64)
!5548 = !DISubroutineType(types: !5549)
!5549 = !{null, !290, !5550, !591}
!5550 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5551, size: 64)
!5551 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_regs", file: !209, line: 310, size: 96, elements: !5552)
!5552 = !{!5553, !5554, !5555, !5556}
!5553 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !5551, file: !209, line: 311, baseType: !493, size: 32)
!5554 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !5551, file: !209, line: 312, baseType: !493, size: 32, offset: 32)
!5555 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !5551, file: !209, line: 313, baseType: !493, size: 32, offset: 64)
!5556 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !5551, file: !209, line: 314, baseType: !480, offset: 96)
!5557 = !DIDerivedType(tag: DW_TAG_member, name: "get_wol", scope: !5522, file: !251, line: 426, baseType: !5558, size: 64, offset: 256)
!5558 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5559, size: 64)
!5559 = !DISubroutineType(types: !5560)
!5560 = !{null, !290, !5561}
!5561 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5562, size: 64)
!5562 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_wolinfo", file: !209, line: 203, size: 160, elements: !5563)
!5563 = !{!5564, !5565, !5566, !5567}
!5564 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !5562, file: !209, line: 204, baseType: !493, size: 32)
!5565 = !DIDerivedType(tag: DW_TAG_member, name: "supported", scope: !5562, file: !209, line: 205, baseType: !493, size: 32, offset: 32)
!5566 = !DIDerivedType(tag: DW_TAG_member, name: "wolopts", scope: !5562, file: !209, line: 206, baseType: !493, size: 32, offset: 64)
!5567 = !DIDerivedType(tag: DW_TAG_member, name: "sopass", scope: !5562, file: !209, line: 207, baseType: !5568, size: 48, offset: 96)
!5568 = !DICompositeType(tag: DW_TAG_array_type, baseType: !481, size: 48, elements: !999)
!5569 = !DIDerivedType(tag: DW_TAG_member, name: "set_wol", scope: !5522, file: !251, line: 427, baseType: !5570, size: 64, offset: 320)
!5570 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5571, size: 64)
!5571 = !DISubroutineType(types: !5572)
!5572 = !{!32, !290, !5561}
!5573 = !DIDerivedType(tag: DW_TAG_member, name: "get_msglevel", scope: !5522, file: !251, line: 428, baseType: !5574, size: 64, offset: 384)
!5574 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5575, size: 64)
!5575 = !DISubroutineType(types: !5576)
!5576 = !{!987, !290}
!5577 = !DIDerivedType(tag: DW_TAG_member, name: "set_msglevel", scope: !5522, file: !251, line: 429, baseType: !5578, size: 64, offset: 448)
!5578 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5579, size: 64)
!5579 = !DISubroutineType(types: !5580)
!5580 = !{null, !290, !987}
!5581 = !DIDerivedType(tag: DW_TAG_member, name: "nway_reset", scope: !5522, file: !251, line: 430, baseType: !401, size: 64, offset: 512)
!5582 = !DIDerivedType(tag: DW_TAG_member, name: "get_link", scope: !5522, file: !251, line: 431, baseType: !5574, size: 64, offset: 576)
!5583 = !DIDerivedType(tag: DW_TAG_member, name: "get_link_ext_state", scope: !5522, file: !251, line: 432, baseType: !5584, size: 64, offset: 640)
!5584 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5585, size: 64)
!5585 = !DISubroutineType(types: !5586)
!5586 = !{!32, !290, !5587}
!5587 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5588, size: 64)
!5588 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_link_ext_state_info", file: !251, line: 93, size: 64, elements: !5589)
!5589 = !{!5590, !5591}
!5590 = !DIDerivedType(tag: DW_TAG_member, name: "link_ext_state", scope: !5588, file: !251, line: 94, baseType: !208, size: 32)
!5591 = !DIDerivedType(tag: DW_TAG_member, scope: !5588, file: !251, line: 95, baseType: !5592, size: 32, offset: 32)
!5592 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5588, file: !251, line: 95, size: 32, elements: !5593)
!5593 = !{!5594, !5595, !5596, !5597, !5598, !5599}
!5594 = !DIDerivedType(tag: DW_TAG_member, name: "autoneg", scope: !5592, file: !251, line: 96, baseType: !221, size: 32)
!5595 = !DIDerivedType(tag: DW_TAG_member, name: "link_training", scope: !5592, file: !251, line: 97, baseType: !229, size: 32)
!5596 = !DIDerivedType(tag: DW_TAG_member, name: "link_logical_mismatch", scope: !5592, file: !251, line: 98, baseType: !235, size: 32)
!5597 = !DIDerivedType(tag: DW_TAG_member, name: "bad_signal_integrity", scope: !5592, file: !251, line: 99, baseType: !242, size: 32)
!5598 = !DIDerivedType(tag: DW_TAG_member, name: "cable_issue", scope: !5592, file: !251, line: 100, baseType: !246, size: 32)
!5599 = !DIDerivedType(tag: DW_TAG_member, name: "__link_ext_substate", scope: !5592, file: !251, line: 101, baseType: !794, size: 8)
!5600 = !DIDerivedType(tag: DW_TAG_member, name: "get_eeprom_len", scope: !5522, file: !251, line: 434, baseType: !401, size: 64, offset: 704)
!5601 = !DIDerivedType(tag: DW_TAG_member, name: "get_eeprom", scope: !5522, file: !251, line: 435, baseType: !5602, size: 64, offset: 768)
!5602 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5603, size: 64)
!5603 = !DISubroutineType(types: !5604)
!5604 = !{!32, !290, !5605, !793}
!5605 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5606, size: 64)
!5606 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_eeprom", file: !209, line: 335, size: 128, elements: !5607)
!5607 = !{!5608, !5609, !5610, !5611, !5612}
!5608 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !5606, file: !209, line: 336, baseType: !493, size: 32)
!5609 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !5606, file: !209, line: 337, baseType: !493, size: 32, offset: 32)
!5610 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !5606, file: !209, line: 338, baseType: !493, size: 32, offset: 64)
!5611 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !5606, file: !209, line: 339, baseType: !493, size: 32, offset: 96)
!5612 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !5606, file: !209, line: 340, baseType: !480, offset: 128)
!5613 = !DIDerivedType(tag: DW_TAG_member, name: "set_eeprom", scope: !5522, file: !251, line: 437, baseType: !5602, size: 64, offset: 832)
!5614 = !DIDerivedType(tag: DW_TAG_member, name: "get_coalesce", scope: !5522, file: !251, line: 439, baseType: !5615, size: 64, offset: 896)
!5615 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5616, size: 64)
!5616 = !DISubroutineType(types: !5617)
!5617 = !{!32, !290, !5618}
!5618 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5619, size: 64)
!5619 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_coalesce", file: !209, line: 462, size: 736, elements: !5620)
!5620 = !{!5621, !5622, !5623, !5624, !5625, !5626, !5627, !5628, !5629, !5630, !5631, !5632, !5633, !5634, !5635, !5636, !5637, !5638, !5639, !5640, !5641, !5642, !5643}
!5621 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !5619, file: !209, line: 463, baseType: !493, size: 32)
!5622 = !DIDerivedType(tag: DW_TAG_member, name: "rx_coalesce_usecs", scope: !5619, file: !209, line: 464, baseType: !493, size: 32, offset: 32)
!5623 = !DIDerivedType(tag: DW_TAG_member, name: "rx_max_coalesced_frames", scope: !5619, file: !209, line: 465, baseType: !493, size: 32, offset: 64)
!5624 = !DIDerivedType(tag: DW_TAG_member, name: "rx_coalesce_usecs_irq", scope: !5619, file: !209, line: 466, baseType: !493, size: 32, offset: 96)
!5625 = !DIDerivedType(tag: DW_TAG_member, name: "rx_max_coalesced_frames_irq", scope: !5619, file: !209, line: 467, baseType: !493, size: 32, offset: 128)
!5626 = !DIDerivedType(tag: DW_TAG_member, name: "tx_coalesce_usecs", scope: !5619, file: !209, line: 468, baseType: !493, size: 32, offset: 160)
!5627 = !DIDerivedType(tag: DW_TAG_member, name: "tx_max_coalesced_frames", scope: !5619, file: !209, line: 469, baseType: !493, size: 32, offset: 192)
!5628 = !DIDerivedType(tag: DW_TAG_member, name: "tx_coalesce_usecs_irq", scope: !5619, file: !209, line: 470, baseType: !493, size: 32, offset: 224)
!5629 = !DIDerivedType(tag: DW_TAG_member, name: "tx_max_coalesced_frames_irq", scope: !5619, file: !209, line: 471, baseType: !493, size: 32, offset: 256)
!5630 = !DIDerivedType(tag: DW_TAG_member, name: "stats_block_coalesce_usecs", scope: !5619, file: !209, line: 472, baseType: !493, size: 32, offset: 288)
!5631 = !DIDerivedType(tag: DW_TAG_member, name: "use_adaptive_rx_coalesce", scope: !5619, file: !209, line: 473, baseType: !493, size: 32, offset: 320)
!5632 = !DIDerivedType(tag: DW_TAG_member, name: "use_adaptive_tx_coalesce", scope: !5619, file: !209, line: 474, baseType: !493, size: 32, offset: 352)
!5633 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_rate_low", scope: !5619, file: !209, line: 475, baseType: !493, size: 32, offset: 384)
!5634 = !DIDerivedType(tag: DW_TAG_member, name: "rx_coalesce_usecs_low", scope: !5619, file: !209, line: 476, baseType: !493, size: 32, offset: 416)
!5635 = !DIDerivedType(tag: DW_TAG_member, name: "rx_max_coalesced_frames_low", scope: !5619, file: !209, line: 477, baseType: !493, size: 32, offset: 448)
!5636 = !DIDerivedType(tag: DW_TAG_member, name: "tx_coalesce_usecs_low", scope: !5619, file: !209, line: 478, baseType: !493, size: 32, offset: 480)
!5637 = !DIDerivedType(tag: DW_TAG_member, name: "tx_max_coalesced_frames_low", scope: !5619, file: !209, line: 479, baseType: !493, size: 32, offset: 512)
!5638 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_rate_high", scope: !5619, file: !209, line: 480, baseType: !493, size: 32, offset: 544)
!5639 = !DIDerivedType(tag: DW_TAG_member, name: "rx_coalesce_usecs_high", scope: !5619, file: !209, line: 481, baseType: !493, size: 32, offset: 576)
!5640 = !DIDerivedType(tag: DW_TAG_member, name: "rx_max_coalesced_frames_high", scope: !5619, file: !209, line: 482, baseType: !493, size: 32, offset: 608)
!5641 = !DIDerivedType(tag: DW_TAG_member, name: "tx_coalesce_usecs_high", scope: !5619, file: !209, line: 483, baseType: !493, size: 32, offset: 640)
!5642 = !DIDerivedType(tag: DW_TAG_member, name: "tx_max_coalesced_frames_high", scope: !5619, file: !209, line: 484, baseType: !493, size: 32, offset: 672)
!5643 = !DIDerivedType(tag: DW_TAG_member, name: "rate_sample_interval", scope: !5619, file: !209, line: 485, baseType: !493, size: 32, offset: 704)
!5644 = !DIDerivedType(tag: DW_TAG_member, name: "set_coalesce", scope: !5522, file: !251, line: 440, baseType: !5615, size: 64, offset: 960)
!5645 = !DIDerivedType(tag: DW_TAG_member, name: "get_ringparam", scope: !5522, file: !251, line: 441, baseType: !5646, size: 64, offset: 1024)
!5646 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5647, size: 64)
!5647 = !DISubroutineType(types: !5648)
!5648 = !{null, !290, !5649}
!5649 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5650, size: 64)
!5650 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_ringparam", file: !209, line: 513, size: 288, elements: !5651)
!5651 = !{!5652, !5653, !5654, !5655, !5656, !5657, !5658, !5659, !5660}
!5652 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !5650, file: !209, line: 514, baseType: !493, size: 32)
!5653 = !DIDerivedType(tag: DW_TAG_member, name: "rx_max_pending", scope: !5650, file: !209, line: 515, baseType: !493, size: 32, offset: 32)
!5654 = !DIDerivedType(tag: DW_TAG_member, name: "rx_mini_max_pending", scope: !5650, file: !209, line: 516, baseType: !493, size: 32, offset: 64)
!5655 = !DIDerivedType(tag: DW_TAG_member, name: "rx_jumbo_max_pending", scope: !5650, file: !209, line: 517, baseType: !493, size: 32, offset: 96)
!5656 = !DIDerivedType(tag: DW_TAG_member, name: "tx_max_pending", scope: !5650, file: !209, line: 518, baseType: !493, size: 32, offset: 128)
!5657 = !DIDerivedType(tag: DW_TAG_member, name: "rx_pending", scope: !5650, file: !209, line: 519, baseType: !493, size: 32, offset: 160)
!5658 = !DIDerivedType(tag: DW_TAG_member, name: "rx_mini_pending", scope: !5650, file: !209, line: 520, baseType: !493, size: 32, offset: 192)
!5659 = !DIDerivedType(tag: DW_TAG_member, name: "rx_jumbo_pending", scope: !5650, file: !209, line: 521, baseType: !493, size: 32, offset: 224)
!5660 = !DIDerivedType(tag: DW_TAG_member, name: "tx_pending", scope: !5650, file: !209, line: 522, baseType: !493, size: 32, offset: 256)
!5661 = !DIDerivedType(tag: DW_TAG_member, name: "set_ringparam", scope: !5522, file: !251, line: 443, baseType: !5662, size: 64, offset: 1088)
!5662 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5663, size: 64)
!5663 = !DISubroutineType(types: !5664)
!5664 = !{!32, !290, !5649}
!5665 = !DIDerivedType(tag: DW_TAG_member, name: "get_pause_stats", scope: !5522, file: !251, line: 445, baseType: !5666, size: 64, offset: 1152)
!5666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5667, size: 64)
!5667 = !DISubroutineType(types: !5668)
!5668 = !{null, !290, !5669}
!5669 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5670, size: 64)
!5670 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_pause_stats", file: !251, line: 260, size: 128, elements: !5671)
!5671 = !{!5672, !5673}
!5672 = !DIDerivedType(tag: DW_TAG_member, name: "tx_pause_frames", scope: !5670, file: !251, line: 261, baseType: !331, size: 64)
!5673 = !DIDerivedType(tag: DW_TAG_member, name: "rx_pause_frames", scope: !5670, file: !251, line: 262, baseType: !331, size: 64, offset: 64)
!5674 = !DIDerivedType(tag: DW_TAG_member, name: "get_pauseparam", scope: !5522, file: !251, line: 447, baseType: !5675, size: 64, offset: 1216)
!5675 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5676, size: 64)
!5676 = !DISubroutineType(types: !5677)
!5677 = !{null, !290, !5678}
!5678 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5679, size: 64)
!5679 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_pauseparam", file: !209, line: 575, size: 128, elements: !5680)
!5680 = !{!5681, !5682, !5683, !5684}
!5681 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !5679, file: !209, line: 576, baseType: !493, size: 32)
!5682 = !DIDerivedType(tag: DW_TAG_member, name: "autoneg", scope: !5679, file: !209, line: 577, baseType: !493, size: 32, offset: 32)
!5683 = !DIDerivedType(tag: DW_TAG_member, name: "rx_pause", scope: !5679, file: !209, line: 578, baseType: !493, size: 32, offset: 64)
!5684 = !DIDerivedType(tag: DW_TAG_member, name: "tx_pause", scope: !5679, file: !209, line: 579, baseType: !493, size: 32, offset: 96)
!5685 = !DIDerivedType(tag: DW_TAG_member, name: "set_pauseparam", scope: !5522, file: !251, line: 449, baseType: !5686, size: 64, offset: 1280)
!5686 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5687, size: 64)
!5687 = !DISubroutineType(types: !5688)
!5688 = !{!32, !290, !5678}
!5689 = !DIDerivedType(tag: DW_TAG_member, name: "self_test", scope: !5522, file: !251, line: 451, baseType: !5690, size: 64, offset: 1344)
!5690 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5691, size: 64)
!5691 = !DISubroutineType(types: !5692)
!5692 = !{null, !290, !5693, !5372}
!5693 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5694, size: 64)
!5694 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_test", file: !209, line: 770, size: 128, elements: !5695)
!5695 = !{!5696, !5697, !5698, !5699, !5700}
!5696 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !5694, file: !209, line: 771, baseType: !493, size: 32)
!5697 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5694, file: !209, line: 772, baseType: !493, size: 32, offset: 32)
!5698 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !5694, file: !209, line: 773, baseType: !493, size: 32, offset: 64)
!5699 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !5694, file: !209, line: 774, baseType: !493, size: 32, offset: 96)
!5700 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !5694, file: !209, line: 775, baseType: !5701, offset: 128)
!5701 = !DICompositeType(tag: DW_TAG_array_type, baseType: !333, elements: !483)
!5702 = !DIDerivedType(tag: DW_TAG_member, name: "get_strings", scope: !5522, file: !251, line: 452, baseType: !5703, size: 64, offset: 1408)
!5703 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5704, size: 64)
!5704 = !DISubroutineType(types: !5705)
!5705 = !{null, !290, !987, !793}
!5706 = !DIDerivedType(tag: DW_TAG_member, name: "set_phys_id", scope: !5522, file: !251, line: 453, baseType: !5707, size: 64, offset: 1472)
!5707 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5708, size: 64)
!5708 = !DISubroutineType(types: !5709)
!5709 = !{!32, !290, !250}
!5710 = !DIDerivedType(tag: DW_TAG_member, name: "get_ethtool_stats", scope: !5522, file: !251, line: 454, baseType: !5711, size: 64, offset: 1536)
!5711 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5712, size: 64)
!5712 = !DISubroutineType(types: !5713)
!5713 = !{null, !290, !5714, !5372}
!5714 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5715, size: 64)
!5715 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_stats", file: !209, line: 789, size: 64, elements: !5716)
!5716 = !{!5717, !5718, !5719}
!5717 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !5715, file: !209, line: 790, baseType: !493, size: 32)
!5718 = !DIDerivedType(tag: DW_TAG_member, name: "n_stats", scope: !5715, file: !209, line: 791, baseType: !493, size: 32, offset: 32)
!5719 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !5715, file: !209, line: 792, baseType: !5701, offset: 64)
!5720 = !DIDerivedType(tag: DW_TAG_member, name: "begin", scope: !5522, file: !251, line: 456, baseType: !401, size: 64, offset: 1600)
!5721 = !DIDerivedType(tag: DW_TAG_member, name: "complete", scope: !5522, file: !251, line: 457, baseType: !405, size: 64, offset: 1664)
!5722 = !DIDerivedType(tag: DW_TAG_member, name: "get_priv_flags", scope: !5522, file: !251, line: 458, baseType: !5574, size: 64, offset: 1728)
!5723 = !DIDerivedType(tag: DW_TAG_member, name: "set_priv_flags", scope: !5522, file: !251, line: 459, baseType: !5724, size: 64, offset: 1792)
!5724 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5725, size: 64)
!5725 = !DISubroutineType(types: !5726)
!5726 = !{!32, !290, !987}
!5727 = !DIDerivedType(tag: DW_TAG_member, name: "get_sset_count", scope: !5522, file: !251, line: 460, baseType: !722, size: 64, offset: 1856)
!5728 = !DIDerivedType(tag: DW_TAG_member, name: "get_rxnfc", scope: !5522, file: !251, line: 461, baseType: !5729, size: 64, offset: 1920)
!5729 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5730, size: 64)
!5730 = !DISubroutineType(types: !5731)
!5731 = !{!32, !290, !5732, !2516}
!5732 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5733, size: 64)
!5733 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_rxnfc", file: !209, line: 1088, size: 1536, elements: !5734)
!5734 = !{!5735, !5736, !5737, !5738, !5824, !5829}
!5735 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !5733, file: !209, line: 1089, baseType: !493, size: 32)
!5736 = !DIDerivedType(tag: DW_TAG_member, name: "flow_type", scope: !5733, file: !209, line: 1090, baseType: !493, size: 32, offset: 32)
!5737 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !5733, file: !209, line: 1091, baseType: !333, size: 64, offset: 64)
!5738 = !DIDerivedType(tag: DW_TAG_member, name: "fs", scope: !5733, file: !209, line: 1092, baseType: !5739, size: 1344, offset: 128)
!5739 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_rx_flow_spec", file: !209, line: 992, size: 1344, elements: !5740)
!5740 = !{!5741, !5742, !5810, !5820, !5821, !5822, !5823}
!5741 = !DIDerivedType(tag: DW_TAG_member, name: "flow_type", scope: !5739, file: !209, line: 993, baseType: !493, size: 32)
!5742 = !DIDerivedType(tag: DW_TAG_member, name: "h_u", scope: !5739, file: !209, line: 994, baseType: !5743, size: 416, offset: 32)
!5743 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "ethtool_flow_union", file: !209, line: 939, size: 416, elements: !5744)
!5744 = !{!5745, !5753, !5754, !5755, !5762, !5763, !5772, !5780, !5781, !5782, !5789, !5790, !5798, !5806}
!5745 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_ip4_spec", scope: !5743, file: !209, line: 940, baseType: !5746, size: 128)
!5746 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_tcpip4_spec", file: !209, line: 845, size: 128, elements: !5747)
!5747 = !{!5748, !5749, !5750, !5751, !5752}
!5748 = !DIDerivedType(tag: DW_TAG_member, name: "ip4src", scope: !5746, file: !209, line: 846, baseType: !3208, size: 32)
!5749 = !DIDerivedType(tag: DW_TAG_member, name: "ip4dst", scope: !5746, file: !209, line: 847, baseType: !3208, size: 32, offset: 32)
!5750 = !DIDerivedType(tag: DW_TAG_member, name: "psrc", scope: !5746, file: !209, line: 848, baseType: !535, size: 16, offset: 64)
!5751 = !DIDerivedType(tag: DW_TAG_member, name: "pdst", scope: !5746, file: !209, line: 849, baseType: !535, size: 16, offset: 80)
!5752 = !DIDerivedType(tag: DW_TAG_member, name: "tos", scope: !5746, file: !209, line: 850, baseType: !481, size: 8, offset: 96)
!5753 = !DIDerivedType(tag: DW_TAG_member, name: "udp_ip4_spec", scope: !5743, file: !209, line: 941, baseType: !5746, size: 128)
!5754 = !DIDerivedType(tag: DW_TAG_member, name: "sctp_ip4_spec", scope: !5743, file: !209, line: 942, baseType: !5746, size: 128)
!5755 = !DIDerivedType(tag: DW_TAG_member, name: "ah_ip4_spec", scope: !5743, file: !209, line: 943, baseType: !5756, size: 128)
!5756 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_ah_espip4_spec", file: !209, line: 862, size: 128, elements: !5757)
!5757 = !{!5758, !5759, !5760, !5761}
!5758 = !DIDerivedType(tag: DW_TAG_member, name: "ip4src", scope: !5756, file: !209, line: 863, baseType: !3208, size: 32)
!5759 = !DIDerivedType(tag: DW_TAG_member, name: "ip4dst", scope: !5756, file: !209, line: 864, baseType: !3208, size: 32, offset: 32)
!5760 = !DIDerivedType(tag: DW_TAG_member, name: "spi", scope: !5756, file: !209, line: 865, baseType: !3208, size: 32, offset: 64)
!5761 = !DIDerivedType(tag: DW_TAG_member, name: "tos", scope: !5756, file: !209, line: 866, baseType: !481, size: 8, offset: 96)
!5762 = !DIDerivedType(tag: DW_TAG_member, name: "esp_ip4_spec", scope: !5743, file: !209, line: 944, baseType: !5756, size: 128)
!5763 = !DIDerivedType(tag: DW_TAG_member, name: "usr_ip4_spec", scope: !5743, file: !209, line: 945, baseType: !5764, size: 128)
!5764 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_usrip4_spec", file: !209, line: 880, size: 128, elements: !5765)
!5765 = !{!5766, !5767, !5768, !5769, !5770, !5771}
!5766 = !DIDerivedType(tag: DW_TAG_member, name: "ip4src", scope: !5764, file: !209, line: 881, baseType: !3208, size: 32)
!5767 = !DIDerivedType(tag: DW_TAG_member, name: "ip4dst", scope: !5764, file: !209, line: 882, baseType: !3208, size: 32, offset: 32)
!5768 = !DIDerivedType(tag: DW_TAG_member, name: "l4_4_bytes", scope: !5764, file: !209, line: 883, baseType: !3208, size: 32, offset: 64)
!5769 = !DIDerivedType(tag: DW_TAG_member, name: "tos", scope: !5764, file: !209, line: 884, baseType: !481, size: 8, offset: 96)
!5770 = !DIDerivedType(tag: DW_TAG_member, name: "ip_ver", scope: !5764, file: !209, line: 885, baseType: !481, size: 8, offset: 104)
!5771 = !DIDerivedType(tag: DW_TAG_member, name: "proto", scope: !5764, file: !209, line: 886, baseType: !481, size: 8, offset: 112)
!5772 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_ip6_spec", scope: !5743, file: !209, line: 946, baseType: !5773, size: 320)
!5773 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_tcpip6_spec", file: !209, line: 899, size: 320, elements: !5774)
!5774 = !{!5775, !5776, !5777, !5778, !5779}
!5775 = !DIDerivedType(tag: DW_TAG_member, name: "ip6src", scope: !5773, file: !209, line: 900, baseType: !3229, size: 128)
!5776 = !DIDerivedType(tag: DW_TAG_member, name: "ip6dst", scope: !5773, file: !209, line: 901, baseType: !3229, size: 128, offset: 128)
!5777 = !DIDerivedType(tag: DW_TAG_member, name: "psrc", scope: !5773, file: !209, line: 902, baseType: !535, size: 16, offset: 256)
!5778 = !DIDerivedType(tag: DW_TAG_member, name: "pdst", scope: !5773, file: !209, line: 903, baseType: !535, size: 16, offset: 272)
!5779 = !DIDerivedType(tag: DW_TAG_member, name: "tclass", scope: !5773, file: !209, line: 904, baseType: !481, size: 8, offset: 288)
!5780 = !DIDerivedType(tag: DW_TAG_member, name: "udp_ip6_spec", scope: !5743, file: !209, line: 947, baseType: !5773, size: 320)
!5781 = !DIDerivedType(tag: DW_TAG_member, name: "sctp_ip6_spec", scope: !5743, file: !209, line: 948, baseType: !5773, size: 320)
!5782 = !DIDerivedType(tag: DW_TAG_member, name: "ah_ip6_spec", scope: !5743, file: !209, line: 949, baseType: !5783, size: 320)
!5783 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_ah_espip6_spec", file: !209, line: 916, size: 320, elements: !5784)
!5784 = !{!5785, !5786, !5787, !5788}
!5785 = !DIDerivedType(tag: DW_TAG_member, name: "ip6src", scope: !5783, file: !209, line: 917, baseType: !3229, size: 128)
!5786 = !DIDerivedType(tag: DW_TAG_member, name: "ip6dst", scope: !5783, file: !209, line: 918, baseType: !3229, size: 128, offset: 128)
!5787 = !DIDerivedType(tag: DW_TAG_member, name: "spi", scope: !5783, file: !209, line: 919, baseType: !3208, size: 32, offset: 256)
!5788 = !DIDerivedType(tag: DW_TAG_member, name: "tclass", scope: !5783, file: !209, line: 920, baseType: !481, size: 8, offset: 288)
!5789 = !DIDerivedType(tag: DW_TAG_member, name: "esp_ip6_spec", scope: !5743, file: !209, line: 950, baseType: !5783, size: 320)
!5790 = !DIDerivedType(tag: DW_TAG_member, name: "usr_ip6_spec", scope: !5743, file: !209, line: 951, baseType: !5791, size: 320)
!5791 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_usrip6_spec", file: !209, line: 931, size: 320, elements: !5792)
!5792 = !{!5793, !5794, !5795, !5796, !5797}
!5793 = !DIDerivedType(tag: DW_TAG_member, name: "ip6src", scope: !5791, file: !209, line: 932, baseType: !3229, size: 128)
!5794 = !DIDerivedType(tag: DW_TAG_member, name: "ip6dst", scope: !5791, file: !209, line: 933, baseType: !3229, size: 128, offset: 128)
!5795 = !DIDerivedType(tag: DW_TAG_member, name: "l4_4_bytes", scope: !5791, file: !209, line: 934, baseType: !3208, size: 32, offset: 256)
!5796 = !DIDerivedType(tag: DW_TAG_member, name: "tclass", scope: !5791, file: !209, line: 935, baseType: !481, size: 8, offset: 288)
!5797 = !DIDerivedType(tag: DW_TAG_member, name: "l4_proto", scope: !5791, file: !209, line: 936, baseType: !481, size: 8, offset: 296)
!5798 = !DIDerivedType(tag: DW_TAG_member, name: "ether_spec", scope: !5743, file: !209, line: 952, baseType: !5799, size: 112)
!5799 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethhdr", file: !5800, line: 164, size: 112, elements: !5801)
!5800 = !DIFile(filename: "./include/uapi/linux/if_ether.h", directory: "/home/lizy2001/genbc/linux")
!5801 = !{!5802, !5804, !5805}
!5802 = !DIDerivedType(tag: DW_TAG_member, name: "h_dest", scope: !5799, file: !5800, line: 165, baseType: !5803, size: 48)
!5803 = !DICompositeType(tag: DW_TAG_array_type, baseType: !482, size: 48, elements: !999)
!5804 = !DIDerivedType(tag: DW_TAG_member, name: "h_source", scope: !5799, file: !5800, line: 166, baseType: !5803, size: 48, offset: 48)
!5805 = !DIDerivedType(tag: DW_TAG_member, name: "h_proto", scope: !5799, file: !5800, line: 167, baseType: !535, size: 16, offset: 96)
!5806 = !DIDerivedType(tag: DW_TAG_member, name: "hdata", scope: !5743, file: !209, line: 953, baseType: !5807, size: 416)
!5807 = !DICompositeType(tag: DW_TAG_array_type, baseType: !481, size: 416, elements: !5808)
!5808 = !{!5809}
!5809 = !DISubrange(count: 52)
!5810 = !DIDerivedType(tag: DW_TAG_member, name: "h_ext", scope: !5739, file: !209, line: 995, baseType: !5811, size: 160, offset: 448)
!5811 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_flow_ext", file: !209, line: 967, size: 160, elements: !5812)
!5812 = !{!5813, !5815, !5816, !5817, !5818}
!5813 = !DIDerivedType(tag: DW_TAG_member, name: "padding", scope: !5811, file: !209, line: 968, baseType: !5814, size: 16)
!5814 = !DICompositeType(tag: DW_TAG_array_type, baseType: !481, size: 16, elements: !2664)
!5815 = !DIDerivedType(tag: DW_TAG_member, name: "h_dest", scope: !5811, file: !209, line: 969, baseType: !5803, size: 48, offset: 16)
!5816 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_etype", scope: !5811, file: !209, line: 970, baseType: !535, size: 16, offset: 64)
!5817 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_tci", scope: !5811, file: !209, line: 971, baseType: !535, size: 16, offset: 80)
!5818 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !5811, file: !209, line: 972, baseType: !5819, size: 64, offset: 96)
!5819 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3208, size: 64, elements: !2664)
!5820 = !DIDerivedType(tag: DW_TAG_member, name: "m_u", scope: !5739, file: !209, line: 996, baseType: !5743, size: 416, offset: 608)
!5821 = !DIDerivedType(tag: DW_TAG_member, name: "m_ext", scope: !5739, file: !209, line: 997, baseType: !5811, size: 160, offset: 1024)
!5822 = !DIDerivedType(tag: DW_TAG_member, name: "ring_cookie", scope: !5739, file: !209, line: 998, baseType: !333, size: 64, offset: 1216)
!5823 = !DIDerivedType(tag: DW_TAG_member, name: "location", scope: !5739, file: !209, line: 999, baseType: !493, size: 32, offset: 1280)
!5824 = !DIDerivedType(tag: DW_TAG_member, scope: !5733, file: !209, line: 1093, baseType: !5825, size: 32, offset: 1472)
!5825 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5733, file: !209, line: 1093, size: 32, elements: !5826)
!5826 = !{!5827, !5828}
!5827 = !DIDerivedType(tag: DW_TAG_member, name: "rule_cnt", scope: !5825, file: !209, line: 1094, baseType: !493, size: 32)
!5828 = !DIDerivedType(tag: DW_TAG_member, name: "rss_context", scope: !5825, file: !209, line: 1095, baseType: !493, size: 32)
!5829 = !DIDerivedType(tag: DW_TAG_member, name: "rule_locs", scope: !5733, file: !209, line: 1097, baseType: !492, offset: 1504)
!5830 = !DIDerivedType(tag: DW_TAG_member, name: "set_rxnfc", scope: !5522, file: !251, line: 463, baseType: !5831, size: 64, offset: 1984)
!5831 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5832, size: 64)
!5832 = !DISubroutineType(types: !5833)
!5833 = !{!32, !290, !5732}
!5834 = !DIDerivedType(tag: DW_TAG_member, name: "flash_device", scope: !5522, file: !251, line: 464, baseType: !5835, size: 64, offset: 2048)
!5835 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5836, size: 64)
!5836 = !DISubroutineType(types: !5837)
!5837 = !{!32, !290, !5838}
!5838 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5839, size: 64)
!5839 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_flash", file: !209, line: 1217, size: 1088, elements: !5840)
!5840 = !{!5841, !5842, !5843}
!5841 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !5839, file: !209, line: 1218, baseType: !493, size: 32)
!5842 = !DIDerivedType(tag: DW_TAG_member, name: "region", scope: !5839, file: !209, line: 1219, baseType: !493, size: 32, offset: 32)
!5843 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !5839, file: !209, line: 1220, baseType: !5233, size: 1024, offset: 64)
!5844 = !DIDerivedType(tag: DW_TAG_member, name: "reset", scope: !5522, file: !251, line: 465, baseType: !5845, size: 64, offset: 2112)
!5845 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5846, size: 64)
!5846 = !DISubroutineType(types: !5847)
!5847 = !{!32, !290, !2516}
!5848 = !DIDerivedType(tag: DW_TAG_member, name: "get_rxfh_key_size", scope: !5522, file: !251, line: 466, baseType: !5574, size: 64, offset: 2176)
!5849 = !DIDerivedType(tag: DW_TAG_member, name: "get_rxfh_indir_size", scope: !5522, file: !251, line: 467, baseType: !5574, size: 64, offset: 2240)
!5850 = !DIDerivedType(tag: DW_TAG_member, name: "get_rxfh", scope: !5522, file: !251, line: 468, baseType: !5851, size: 64, offset: 2304)
!5851 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5852, size: 64)
!5852 = !DISubroutineType(types: !5853)
!5853 = !{!32, !290, !2516, !793, !793}
!5854 = !DIDerivedType(tag: DW_TAG_member, name: "set_rxfh", scope: !5522, file: !251, line: 470, baseType: !5855, size: 64, offset: 2368)
!5855 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5856, size: 64)
!5856 = !DISubroutineType(types: !5857)
!5857 = !{!32, !290, !5858, !5860, !5861}
!5858 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5859, size: 64)
!5859 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !987)
!5860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5861, size: 64)
!5861 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !794)
!5862 = !DIDerivedType(tag: DW_TAG_member, name: "get_rxfh_context", scope: !5522, file: !251, line: 472, baseType: !5863, size: 64, offset: 2432)
!5863 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5864, size: 64)
!5864 = !DISubroutineType(types: !5865)
!5865 = !{!32, !290, !2516, !793, !793, !987}
!5866 = !DIDerivedType(tag: DW_TAG_member, name: "set_rxfh_context", scope: !5522, file: !251, line: 474, baseType: !5867, size: 64, offset: 2496)
!5867 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5868, size: 64)
!5868 = !DISubroutineType(types: !5869)
!5869 = !{!32, !290, !5858, !5860, !5861, !2516, !771}
!5870 = !DIDerivedType(tag: DW_TAG_member, name: "get_channels", scope: !5522, file: !251, line: 477, baseType: !5871, size: 64, offset: 2560)
!5871 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5872, size: 64)
!5872 = !DISubroutineType(types: !5873)
!5873 = !{null, !290, !5874}
!5874 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5875, size: 64)
!5875 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_channels", file: !209, line: 541, size: 288, elements: !5876)
!5876 = !{!5877, !5878, !5879, !5880, !5881, !5882, !5883, !5884, !5885}
!5877 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !5875, file: !209, line: 542, baseType: !493, size: 32)
!5878 = !DIDerivedType(tag: DW_TAG_member, name: "max_rx", scope: !5875, file: !209, line: 543, baseType: !493, size: 32, offset: 32)
!5879 = !DIDerivedType(tag: DW_TAG_member, name: "max_tx", scope: !5875, file: !209, line: 544, baseType: !493, size: 32, offset: 64)
!5880 = !DIDerivedType(tag: DW_TAG_member, name: "max_other", scope: !5875, file: !209, line: 545, baseType: !493, size: 32, offset: 96)
!5881 = !DIDerivedType(tag: DW_TAG_member, name: "max_combined", scope: !5875, file: !209, line: 546, baseType: !493, size: 32, offset: 128)
!5882 = !DIDerivedType(tag: DW_TAG_member, name: "rx_count", scope: !5875, file: !209, line: 547, baseType: !493, size: 32, offset: 160)
!5883 = !DIDerivedType(tag: DW_TAG_member, name: "tx_count", scope: !5875, file: !209, line: 548, baseType: !493, size: 32, offset: 192)
!5884 = !DIDerivedType(tag: DW_TAG_member, name: "other_count", scope: !5875, file: !209, line: 549, baseType: !493, size: 32, offset: 224)
!5885 = !DIDerivedType(tag: DW_TAG_member, name: "combined_count", scope: !5875, file: !209, line: 550, baseType: !493, size: 32, offset: 256)
!5886 = !DIDerivedType(tag: DW_TAG_member, name: "set_channels", scope: !5522, file: !251, line: 478, baseType: !5887, size: 64, offset: 2624)
!5887 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5888, size: 64)
!5888 = !DISubroutineType(types: !5889)
!5889 = !{!32, !290, !5874}
!5890 = !DIDerivedType(tag: DW_TAG_member, name: "get_dump_flag", scope: !5522, file: !251, line: 479, baseType: !5891, size: 64, offset: 2688)
!5891 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5892, size: 64)
!5892 = !DISubroutineType(types: !5893)
!5893 = !{!32, !290, !5894}
!5894 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5895, size: 64)
!5895 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_dump", file: !209, line: 1237, size: 128, elements: !5896)
!5896 = !{!5897, !5898, !5899, !5900, !5901}
!5897 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !5895, file: !209, line: 1238, baseType: !493, size: 32)
!5898 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !5895, file: !209, line: 1239, baseType: !493, size: 32, offset: 32)
!5899 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !5895, file: !209, line: 1240, baseType: !493, size: 32, offset: 64)
!5900 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !5895, file: !209, line: 1241, baseType: !493, size: 32, offset: 96)
!5901 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !5895, file: !209, line: 1242, baseType: !480, offset: 128)
!5902 = !DIDerivedType(tag: DW_TAG_member, name: "get_dump_data", scope: !5522, file: !251, line: 480, baseType: !5903, size: 64, offset: 2752)
!5903 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5904, size: 64)
!5904 = !DISubroutineType(types: !5905)
!5905 = !{!32, !290, !5894, !591}
!5906 = !DIDerivedType(tag: DW_TAG_member, name: "set_dump", scope: !5522, file: !251, line: 482, baseType: !5891, size: 64, offset: 2816)
!5907 = !DIDerivedType(tag: DW_TAG_member, name: "get_ts_info", scope: !5522, file: !251, line: 483, baseType: !5908, size: 64, offset: 2880)
!5908 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5909, size: 64)
!5909 = !DISubroutineType(types: !5910)
!5910 = !{!32, !290, !5911}
!5911 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5912, size: 64)
!5912 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_ts_info", file: !209, line: 1317, size: 352, elements: !5913)
!5913 = !{!5914, !5915, !5916, !5917, !5918, !5920, !5921}
!5914 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !5912, file: !209, line: 1318, baseType: !493, size: 32)
!5915 = !DIDerivedType(tag: DW_TAG_member, name: "so_timestamping", scope: !5912, file: !209, line: 1319, baseType: !493, size: 32, offset: 32)
!5916 = !DIDerivedType(tag: DW_TAG_member, name: "phc_index", scope: !5912, file: !209, line: 1320, baseType: !942, size: 32, offset: 64)
!5917 = !DIDerivedType(tag: DW_TAG_member, name: "tx_types", scope: !5912, file: !209, line: 1321, baseType: !493, size: 32, offset: 96)
!5918 = !DIDerivedType(tag: DW_TAG_member, name: "tx_reserved", scope: !5912, file: !209, line: 1322, baseType: !5919, size: 96, offset: 128)
!5919 = !DICompositeType(tag: DW_TAG_array_type, baseType: !493, size: 96, elements: !1592)
!5920 = !DIDerivedType(tag: DW_TAG_member, name: "rx_filters", scope: !5912, file: !209, line: 1323, baseType: !493, size: 32, offset: 224)
!5921 = !DIDerivedType(tag: DW_TAG_member, name: "rx_reserved", scope: !5912, file: !209, line: 1324, baseType: !5919, size: 96, offset: 256)
!5922 = !DIDerivedType(tag: DW_TAG_member, name: "get_module_info", scope: !5522, file: !251, line: 484, baseType: !5923, size: 64, offset: 2944)
!5923 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5924, size: 64)
!5924 = !DISubroutineType(types: !5925)
!5925 = !{!32, !290, !5926}
!5926 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5927, size: 64)
!5927 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_modinfo", file: !209, line: 382, size: 352, elements: !5928)
!5928 = !{!5929, !5930, !5931, !5932}
!5929 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !5927, file: !209, line: 383, baseType: !493, size: 32)
!5930 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !5927, file: !209, line: 384, baseType: !493, size: 32, offset: 32)
!5931 = !DIDerivedType(tag: DW_TAG_member, name: "eeprom_len", scope: !5927, file: !209, line: 385, baseType: !493, size: 32, offset: 64)
!5932 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !5927, file: !209, line: 386, baseType: !5933, size: 256, offset: 96)
!5933 = !DICompositeType(tag: DW_TAG_array_type, baseType: !493, size: 256, elements: !2433)
!5934 = !DIDerivedType(tag: DW_TAG_member, name: "get_module_eeprom", scope: !5522, file: !251, line: 486, baseType: !5602, size: 64, offset: 3008)
!5935 = !DIDerivedType(tag: DW_TAG_member, name: "get_eee", scope: !5522, file: !251, line: 488, baseType: !5936, size: 64, offset: 3072)
!5936 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5937, size: 64)
!5937 = !DISubroutineType(types: !5938)
!5938 = !{!32, !290, !5939}
!5939 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5940, size: 64)
!5940 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_eee", file: !209, line: 360, size: 320, elements: !5941)
!5941 = !{!5942, !5943, !5944, !5945, !5946, !5947, !5948, !5949, !5950}
!5942 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !5940, file: !209, line: 361, baseType: !493, size: 32)
!5943 = !DIDerivedType(tag: DW_TAG_member, name: "supported", scope: !5940, file: !209, line: 362, baseType: !493, size: 32, offset: 32)
!5944 = !DIDerivedType(tag: DW_TAG_member, name: "advertised", scope: !5940, file: !209, line: 363, baseType: !493, size: 32, offset: 64)
!5945 = !DIDerivedType(tag: DW_TAG_member, name: "lp_advertised", scope: !5940, file: !209, line: 364, baseType: !493, size: 32, offset: 96)
!5946 = !DIDerivedType(tag: DW_TAG_member, name: "eee_active", scope: !5940, file: !209, line: 365, baseType: !493, size: 32, offset: 128)
!5947 = !DIDerivedType(tag: DW_TAG_member, name: "eee_enabled", scope: !5940, file: !209, line: 366, baseType: !493, size: 32, offset: 160)
!5948 = !DIDerivedType(tag: DW_TAG_member, name: "tx_lpi_enabled", scope: !5940, file: !209, line: 367, baseType: !493, size: 32, offset: 192)
!5949 = !DIDerivedType(tag: DW_TAG_member, name: "tx_lpi_timer", scope: !5940, file: !209, line: 368, baseType: !493, size: 32, offset: 224)
!5950 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !5940, file: !209, line: 369, baseType: !2663, size: 64, offset: 256)
!5951 = !DIDerivedType(tag: DW_TAG_member, name: "set_eee", scope: !5522, file: !251, line: 489, baseType: !5936, size: 64, offset: 3136)
!5952 = !DIDerivedType(tag: DW_TAG_member, name: "get_tunable", scope: !5522, file: !251, line: 490, baseType: !5953, size: 64, offset: 3200)
!5953 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5954, size: 64)
!5954 = !DISubroutineType(types: !5955)
!5955 = !{!32, !290, !5956, !591}
!5956 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5957, size: 64)
!5957 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5958)
!5958 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_tunable", file: !209, line: 244, size: 128, elements: !5959)
!5959 = !{!5960, !5961, !5962, !5963, !5964}
!5960 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !5958, file: !209, line: 245, baseType: !493, size: 32)
!5961 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !5958, file: !209, line: 246, baseType: !493, size: 32, offset: 32)
!5962 = !DIDerivedType(tag: DW_TAG_member, name: "type_id", scope: !5958, file: !209, line: 247, baseType: !493, size: 32, offset: 64)
!5963 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !5958, file: !209, line: 248, baseType: !493, size: 32, offset: 96)
!5964 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !5958, file: !209, line: 249, baseType: !5965, offset: 128)
!5965 = !DICompositeType(tag: DW_TAG_array_type, baseType: !591, elements: !483)
!5966 = !DIDerivedType(tag: DW_TAG_member, name: "set_tunable", scope: !5522, file: !251, line: 492, baseType: !5967, size: 64, offset: 3264)
!5967 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5968, size: 64)
!5968 = !DISubroutineType(types: !5969)
!5969 = !{!32, !290, !5956, !3258}
!5970 = !DIDerivedType(tag: DW_TAG_member, name: "get_per_queue_coalesce", scope: !5522, file: !251, line: 494, baseType: !5971, size: 64, offset: 3328)
!5971 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5972, size: 64)
!5972 = !DISubroutineType(types: !5973)
!5973 = !{!32, !290, !987, !5618}
!5974 = !DIDerivedType(tag: DW_TAG_member, name: "set_per_queue_coalesce", scope: !5522, file: !251, line: 496, baseType: !5971, size: 64, offset: 3392)
!5975 = !DIDerivedType(tag: DW_TAG_member, name: "get_link_ksettings", scope: !5522, file: !251, line: 498, baseType: !5976, size: 64, offset: 3456)
!5976 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5977, size: 64)
!5977 = !DISubroutineType(types: !5978)
!5978 = !{!32, !290, !5979}
!5979 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5980, size: 64)
!5980 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_link_ksettings", file: !251, line: 124, size: 768, elements: !5981)
!5981 = !{!5982, !6007}
!5982 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !5980, file: !251, line: 125, baseType: !5983, size: 384)
!5983 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_link_settings", file: !209, line: 1996, size: 384, elements: !5984)
!5984 = !{!5985, !5986, !5987, !5988, !5989, !5990, !5991, !5992, !5993, !5994, !5997, !5998, !5999, !6000, !6002, !6006}
!5985 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !5983, file: !209, line: 1997, baseType: !493, size: 32)
!5986 = !DIDerivedType(tag: DW_TAG_member, name: "speed", scope: !5983, file: !209, line: 1998, baseType: !493, size: 32, offset: 32)
!5987 = !DIDerivedType(tag: DW_TAG_member, name: "duplex", scope: !5983, file: !209, line: 1999, baseType: !481, size: 8, offset: 64)
!5988 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !5983, file: !209, line: 2000, baseType: !481, size: 8, offset: 72)
!5989 = !DIDerivedType(tag: DW_TAG_member, name: "phy_address", scope: !5983, file: !209, line: 2001, baseType: !481, size: 8, offset: 80)
!5990 = !DIDerivedType(tag: DW_TAG_member, name: "autoneg", scope: !5983, file: !209, line: 2002, baseType: !481, size: 8, offset: 88)
!5991 = !DIDerivedType(tag: DW_TAG_member, name: "mdio_support", scope: !5983, file: !209, line: 2003, baseType: !481, size: 8, offset: 96)
!5992 = !DIDerivedType(tag: DW_TAG_member, name: "eth_tp_mdix", scope: !5983, file: !209, line: 2004, baseType: !481, size: 8, offset: 104)
!5993 = !DIDerivedType(tag: DW_TAG_member, name: "eth_tp_mdix_ctrl", scope: !5983, file: !209, line: 2005, baseType: !481, size: 8, offset: 112)
!5994 = !DIDerivedType(tag: DW_TAG_member, name: "link_mode_masks_nwords", scope: !5983, file: !209, line: 2006, baseType: !5995, size: 8, offset: 120)
!5995 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s8", file: !334, line: 20, baseType: !5996)
!5996 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!5997 = !DIDerivedType(tag: DW_TAG_member, name: "transceiver", scope: !5983, file: !209, line: 2007, baseType: !481, size: 8, offset: 128)
!5998 = !DIDerivedType(tag: DW_TAG_member, name: "master_slave_cfg", scope: !5983, file: !209, line: 2008, baseType: !481, size: 8, offset: 136)
!5999 = !DIDerivedType(tag: DW_TAG_member, name: "master_slave_state", scope: !5983, file: !209, line: 2009, baseType: !481, size: 8, offset: 144)
!6000 = !DIDerivedType(tag: DW_TAG_member, name: "reserved1", scope: !5983, file: !209, line: 2010, baseType: !6001, size: 8, offset: 152)
!6001 = !DICompositeType(tag: DW_TAG_array_type, baseType: !481, size: 8, elements: !2472)
!6002 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !5983, file: !209, line: 2011, baseType: !6003, size: 224, offset: 160)
!6003 = !DICompositeType(tag: DW_TAG_array_type, baseType: !493, size: 224, elements: !6004)
!6004 = !{!6005}
!6005 = !DISubrange(count: 7)
!6006 = !DIDerivedType(tag: DW_TAG_member, name: "link_mode_masks", scope: !5983, file: !209, line: 2012, baseType: !492, offset: 384)
!6007 = !DIDerivedType(tag: DW_TAG_member, name: "link_modes", scope: !5980, file: !251, line: 130, baseType: !6008, size: 384, offset: 384)
!6008 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5980, file: !251, line: 126, size: 384, elements: !6009)
!6009 = !{!6010, !6012, !6013}
!6010 = !DIDerivedType(tag: DW_TAG_member, name: "supported", scope: !6008, file: !251, line: 127, baseType: !6011, size: 128)
!6011 = !DICompositeType(tag: DW_TAG_array_type, baseType: !312, size: 128, elements: !2664)
!6012 = !DIDerivedType(tag: DW_TAG_member, name: "advertising", scope: !6008, file: !251, line: 128, baseType: !6011, size: 128, offset: 128)
!6013 = !DIDerivedType(tag: DW_TAG_member, name: "lp_advertising", scope: !6008, file: !251, line: 129, baseType: !6011, size: 128, offset: 256)
!6014 = !DIDerivedType(tag: DW_TAG_member, name: "set_link_ksettings", scope: !5522, file: !251, line: 500, baseType: !6015, size: 64, offset: 3520)
!6015 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6016, size: 64)
!6016 = !DISubroutineType(types: !6017)
!6017 = !{!32, !290, !6018}
!6018 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6019, size: 64)
!6019 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5980)
!6020 = !DIDerivedType(tag: DW_TAG_member, name: "get_fecparam", scope: !5522, file: !251, line: 502, baseType: !6021, size: 64, offset: 3584)
!6021 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6022, size: 64)
!6022 = !DISubroutineType(types: !6023)
!6023 = !{!32, !290, !6024}
!6024 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6025, size: 64)
!6025 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_fecparam", file: !209, line: 1389, size: 128, elements: !6026)
!6026 = !{!6027, !6028, !6029, !6030}
!6027 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !6025, file: !209, line: 1390, baseType: !493, size: 32)
!6028 = !DIDerivedType(tag: DW_TAG_member, name: "active_fec", scope: !6025, file: !209, line: 1392, baseType: !493, size: 32, offset: 32)
!6029 = !DIDerivedType(tag: DW_TAG_member, name: "fec", scope: !6025, file: !209, line: 1393, baseType: !493, size: 32, offset: 64)
!6030 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !6025, file: !209, line: 1394, baseType: !493, size: 32, offset: 96)
!6031 = !DIDerivedType(tag: DW_TAG_member, name: "set_fecparam", scope: !5522, file: !251, line: 504, baseType: !6021, size: 64, offset: 3648)
!6032 = !DIDerivedType(tag: DW_TAG_member, name: "get_ethtool_phy_stats", scope: !5522, file: !251, line: 506, baseType: !5711, size: 64, offset: 3712)
!6033 = !DIDerivedType(tag: DW_TAG_member, name: "get_phy_tunable", scope: !5522, file: !251, line: 508, baseType: !5953, size: 64, offset: 3776)
!6034 = !DIDerivedType(tag: DW_TAG_member, name: "set_phy_tunable", scope: !5522, file: !251, line: 510, baseType: !5967, size: 64, offset: 3840)
!6035 = !DIDerivedType(tag: DW_TAG_member, name: "ndisc_ops", scope: !264, file: !31, line: 1922, baseType: !6036, size: 64, offset: 4096)
!6036 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6037, size: 64)
!6037 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6038)
!6038 = !DICompositeType(tag: DW_TAG_structure_type, name: "ndisc_ops", file: !31, line: 1922, flags: DIFlagFwdDecl)
!6039 = !DIDerivedType(tag: DW_TAG_member, name: "header_ops", scope: !264, file: !31, line: 1933, baseType: !6040, size: 64, offset: 4160)
!6040 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6041, size: 64)
!6041 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6042)
!6042 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "header_ops", file: !31, line: 270, size: 384, elements: !6043)
!6043 = !{!6044, !6048, !6054, !6067, !6071, !6075}
!6044 = !DIDerivedType(tag: DW_TAG_member, name: "create", scope: !6042, file: !31, line: 271, baseType: !6045, size: 64)
!6045 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6046, size: 64)
!6046 = !DISubroutineType(types: !6047)
!6047 = !{!32, !415, !290, !476, !3258, !3258, !7}
!6048 = !DIDerivedType(tag: DW_TAG_member, name: "parse", scope: !6042, file: !31, line: 274, baseType: !6049, size: 64, offset: 64)
!6049 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6050, size: 64)
!6050 = !DISubroutineType(types: !6051)
!6051 = !{!32, !6052, !564}
!6052 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6053, size: 64)
!6053 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !416)
!6054 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !6042, file: !31, line: 275, baseType: !6055, size: 64, offset: 128)
!6055 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6056, size: 64)
!6056 = !DISubroutineType(types: !6057)
!6057 = !{!32, !6058, !6060, !535}
!6058 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6059, size: 64)
!6059 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !924)
!6060 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6061, size: 64)
!6061 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hh_cache", file: !31, line: 244, size: 832, elements: !6062)
!6062 = !{!6063, !6064, !6065}
!6063 = !DIDerivedType(tag: DW_TAG_member, name: "hh_len", scope: !6061, file: !31, line: 245, baseType: !7, size: 32)
!6064 = !DIDerivedType(tag: DW_TAG_member, name: "hh_lock", scope: !6061, file: !31, line: 246, baseType: !3325, size: 32, offset: 32)
!6065 = !DIDerivedType(tag: DW_TAG_member, name: "hh_data", scope: !6061, file: !31, line: 254, baseType: !6066, size: 768, offset: 64)
!6066 = !DICompositeType(tag: DW_TAG_array_type, baseType: !312, size: 768, elements: !4150)
!6067 = !DIDerivedType(tag: DW_TAG_member, name: "cache_update", scope: !6042, file: !31, line: 276, baseType: !6068, size: 64, offset: 192)
!6068 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6069, size: 64)
!6069 = !DISubroutineType(types: !6070)
!6070 = !{null, !6060, !773, !946}
!6071 = !DIDerivedType(tag: DW_TAG_member, name: "validate", scope: !6042, file: !31, line: 279, baseType: !6072, size: 64, offset: 256)
!6072 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6073, size: 64)
!6073 = !DISubroutineType(types: !6074)
!6074 = !{!771, !292, !7}
!6075 = !DIDerivedType(tag: DW_TAG_member, name: "parse_protocol", scope: !6042, file: !31, line: 280, baseType: !6076, size: 64, offset: 320)
!6076 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6077, size: 64)
!6077 = !DISubroutineType(types: !6078)
!6078 = !{!535, !6052}
!6079 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !264, file: !31, line: 1935, baseType: !7, size: 32, offset: 4224)
!6080 = !DIDerivedType(tag: DW_TAG_member, name: "priv_flags", scope: !264, file: !31, line: 1936, baseType: !7, size: 32, offset: 4256)
!6081 = !DIDerivedType(tag: DW_TAG_member, name: "gflags", scope: !264, file: !31, line: 1938, baseType: !476, size: 16, offset: 4288)
!6082 = !DIDerivedType(tag: DW_TAG_member, name: "padded", scope: !264, file: !31, line: 1939, baseType: !476, size: 16, offset: 4304)
!6083 = !DIDerivedType(tag: DW_TAG_member, name: "operstate", scope: !264, file: !31, line: 1941, baseType: !482, size: 8, offset: 4320)
!6084 = !DIDerivedType(tag: DW_TAG_member, name: "link_mode", scope: !264, file: !31, line: 1942, baseType: !482, size: 8, offset: 4328)
!6085 = !DIDerivedType(tag: DW_TAG_member, name: "if_port", scope: !264, file: !31, line: 1944, baseType: !482, size: 8, offset: 4336)
!6086 = !DIDerivedType(tag: DW_TAG_member, name: "dma", scope: !264, file: !31, line: 1945, baseType: !482, size: 8, offset: 4344)
!6087 = !DIDerivedType(tag: DW_TAG_member, name: "mtu", scope: !264, file: !31, line: 1952, baseType: !7, size: 32, offset: 4352)
!6088 = !DIDerivedType(tag: DW_TAG_member, name: "min_mtu", scope: !264, file: !31, line: 1953, baseType: !7, size: 32, offset: 4384)
!6089 = !DIDerivedType(tag: DW_TAG_member, name: "max_mtu", scope: !264, file: !31, line: 1954, baseType: !7, size: 32, offset: 4416)
!6090 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !264, file: !31, line: 1955, baseType: !476, size: 16, offset: 4448)
!6091 = !DIDerivedType(tag: DW_TAG_member, name: "hard_header_len", scope: !264, file: !31, line: 1956, baseType: !476, size: 16, offset: 4464)
!6092 = !DIDerivedType(tag: DW_TAG_member, name: "min_header_len", scope: !264, file: !31, line: 1957, baseType: !482, size: 8, offset: 4480)
!6093 = !DIDerivedType(tag: DW_TAG_member, name: "name_assign_type", scope: !264, file: !31, line: 1958, baseType: !482, size: 8, offset: 4488)
!6094 = !DIDerivedType(tag: DW_TAG_member, name: "needed_headroom", scope: !264, file: !31, line: 1960, baseType: !476, size: 16, offset: 4496)
!6095 = !DIDerivedType(tag: DW_TAG_member, name: "needed_tailroom", scope: !264, file: !31, line: 1961, baseType: !476, size: 16, offset: 4512)
!6096 = !DIDerivedType(tag: DW_TAG_member, name: "perm_addr", scope: !264, file: !31, line: 1964, baseType: !1031, size: 256, offset: 4528)
!6097 = !DIDerivedType(tag: DW_TAG_member, name: "addr_assign_type", scope: !264, file: !31, line: 1965, baseType: !482, size: 8, offset: 4784)
!6098 = !DIDerivedType(tag: DW_TAG_member, name: "addr_len", scope: !264, file: !31, line: 1966, baseType: !482, size: 8, offset: 4792)
!6099 = !DIDerivedType(tag: DW_TAG_member, name: "upper_level", scope: !264, file: !31, line: 1967, baseType: !482, size: 8, offset: 4800)
!6100 = !DIDerivedType(tag: DW_TAG_member, name: "lower_level", scope: !264, file: !31, line: 1968, baseType: !482, size: 8, offset: 4808)
!6101 = !DIDerivedType(tag: DW_TAG_member, name: "neigh_priv_len", scope: !264, file: !31, line: 1970, baseType: !476, size: 16, offset: 4816)
!6102 = !DIDerivedType(tag: DW_TAG_member, name: "dev_id", scope: !264, file: !31, line: 1971, baseType: !476, size: 16, offset: 4832)
!6103 = !DIDerivedType(tag: DW_TAG_member, name: "dev_port", scope: !264, file: !31, line: 1972, baseType: !476, size: 16, offset: 4848)
!6104 = !DIDerivedType(tag: DW_TAG_member, name: "addr_list_lock", scope: !264, file: !31, line: 1973, baseType: !1670, offset: 4864)
!6105 = !DIDerivedType(tag: DW_TAG_member, name: "uc", scope: !264, file: !31, line: 1975, baseType: !6106, size: 192, offset: 4864)
!6106 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netdev_hw_addr_list", file: !31, line: 224, size: 192, elements: !6107)
!6107 = !{!6108, !6109}
!6108 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !6106, file: !31, line: 225, baseType: !284, size: 128)
!6109 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !6106, file: !31, line: 226, baseType: !32, size: 32, offset: 128)
!6110 = !DIDerivedType(tag: DW_TAG_member, name: "mc", scope: !264, file: !31, line: 1976, baseType: !6106, size: 192, offset: 5056)
!6111 = !DIDerivedType(tag: DW_TAG_member, name: "dev_addrs", scope: !264, file: !31, line: 1977, baseType: !6106, size: 192, offset: 5248)
!6112 = !DIDerivedType(tag: DW_TAG_member, name: "queues_kset", scope: !264, file: !31, line: 1980, baseType: !6113, size: 64, offset: 5440)
!6113 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6114, size: 64)
!6114 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset", file: !6115, line: 192, size: 704, elements: !6116)
!6115 = !DIFile(filename: "./include/linux/kobject.h", directory: "/home/lizy2001/genbc/linux")
!6116 = !{!6117, !6118, !6119, !6359}
!6117 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !6114, file: !6115, line: 193, baseType: !284, size: 128)
!6118 = !DIDerivedType(tag: DW_TAG_member, name: "list_lock", scope: !6114, file: !6115, line: 194, baseType: !1670, offset: 128)
!6119 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !6114, file: !6115, line: 195, baseType: !6120, size: 512, offset: 128)
!6120 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobject", file: !6115, line: 64, size: 512, elements: !6121)
!6121 = !{!6122, !6123, !6124, !6126, !6127, !6228, !6349, !6354, !6355, !6356, !6357, !6358}
!6122 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !6120, file: !6115, line: 65, baseType: !292, size: 64)
!6123 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !6120, file: !6115, line: 66, baseType: !284, size: 128, offset: 64)
!6124 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !6120, file: !6115, line: 67, baseType: !6125, size: 64, offset: 192)
!6125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6120, size: 64)
!6126 = !DIDerivedType(tag: DW_TAG_member, name: "kset", scope: !6120, file: !6115, line: 68, baseType: !6113, size: 64, offset: 256)
!6127 = !DIDerivedType(tag: DW_TAG_member, name: "ktype", scope: !6120, file: !6115, line: 69, baseType: !6128, size: 64, offset: 320)
!6128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6129, size: 64)
!6129 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_type", file: !6115, line: 138, size: 448, elements: !6130)
!6130 = !{!6131, !6135, !6154, !6156, !6189, !6220, !6224}
!6131 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !6129, file: !6115, line: 139, baseType: !6132, size: 64)
!6132 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6133, size: 64)
!6133 = !DISubroutineType(types: !6134)
!6134 = !{null, !6125}
!6135 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_ops", scope: !6129, file: !6115, line: 140, baseType: !6136, size: 64, offset: 64)
!6136 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6137, size: 64)
!6137 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6138)
!6138 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sysfs_ops", file: !6139, line: 230, size: 128, elements: !6140)
!6139 = !DIFile(filename: "./include/linux/sysfs.h", directory: "/home/lizy2001/genbc/linux")
!6140 = !{!6141, !6150}
!6141 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !6138, file: !6139, line: 231, baseType: !6142, size: 64)
!6142 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6143, size: 64)
!6143 = !DISubroutineType(types: !6144)
!6144 = !{!1521, !6125, !6145, !1038}
!6145 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6146, size: 64)
!6146 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute", file: !6139, line: 30, size: 128, elements: !6147)
!6147 = !{!6148, !6149}
!6148 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !6146, file: !6139, line: 31, baseType: !292, size: 64)
!6149 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !6146, file: !6139, line: 32, baseType: !1379, size: 16, offset: 64)
!6150 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !6138, file: !6139, line: 232, baseType: !6151, size: 64, offset: 64)
!6151 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6152, size: 64)
!6152 = !DISubroutineType(types: !6153)
!6153 = !{!1521, !6125, !6145, !292, !1039}
!6154 = !DIDerivedType(tag: DW_TAG_member, name: "default_attrs", scope: !6129, file: !6115, line: 141, baseType: !6155, size: 64, offset: 128)
!6155 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6145, size: 64)
!6156 = !DIDerivedType(tag: DW_TAG_member, name: "default_groups", scope: !6129, file: !6115, line: 142, baseType: !6157, size: 64, offset: 192)
!6157 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6158, size: 64)
!6158 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6159, size: 64)
!6159 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6160)
!6160 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute_group", file: !6139, line: 84, size: 320, elements: !6161)
!6161 = !{!6162, !6163, !6167, !6186, !6187}
!6162 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !6160, file: !6139, line: 85, baseType: !292, size: 64)
!6163 = !DIDerivedType(tag: DW_TAG_member, name: "is_visible", scope: !6160, file: !6139, line: 86, baseType: !6164, size: 64, offset: 64)
!6164 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6165, size: 64)
!6165 = !DISubroutineType(types: !6166)
!6166 = !{!1379, !6125, !6145, !32}
!6167 = !DIDerivedType(tag: DW_TAG_member, name: "is_bin_visible", scope: !6160, file: !6139, line: 88, baseType: !6168, size: 64, offset: 128)
!6168 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6169, size: 64)
!6169 = !DISubroutineType(types: !6170)
!6170 = !{!1379, !6125, !6171, !32}
!6171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6172, size: 64)
!6172 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bin_attribute", file: !6139, line: 168, size: 448, elements: !6173)
!6173 = !{!6174, !6175, !6176, !6177, !6181, !6182}
!6174 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !6172, file: !6139, line: 169, baseType: !6146, size: 128)
!6175 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !6172, file: !6139, line: 170, baseType: !1039, size: 64, offset: 128)
!6176 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !6172, file: !6139, line: 171, baseType: !591, size: 64, offset: 192)
!6177 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !6172, file: !6139, line: 172, baseType: !6178, size: 64, offset: 256)
!6178 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6179, size: 64)
!6179 = !DISubroutineType(types: !6180)
!6180 = !{!1521, !1315, !6125, !6171, !1038, !1476, !1039}
!6181 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !6172, file: !6139, line: 174, baseType: !6178, size: 64, offset: 320)
!6182 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !6172, file: !6139, line: 176, baseType: !6183, size: 64, offset: 384)
!6183 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6184, size: 64)
!6184 = !DISubroutineType(types: !6185)
!6185 = !{!32, !1315, !6125, !6171, !2098}
!6186 = !DIDerivedType(tag: DW_TAG_member, name: "attrs", scope: !6160, file: !6139, line: 90, baseType: !6155, size: 64, offset: 192)
!6187 = !DIDerivedType(tag: DW_TAG_member, name: "bin_attrs", scope: !6160, file: !6139, line: 91, baseType: !6188, size: 64, offset: 256)
!6188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6171, size: 64)
!6189 = !DIDerivedType(tag: DW_TAG_member, name: "child_ns_type", scope: !6129, file: !6115, line: 143, baseType: !6190, size: 64, offset: 256)
!6190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6191, size: 64)
!6191 = !DISubroutineType(types: !6192)
!6192 = !{!6193, !6125}
!6193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6194, size: 64)
!6194 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6195)
!6195 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_ns_type_operations", file: !447, line: 39, size: 384, elements: !6196)
!6196 = !{!6197, !6203, !6207, !6211, !6215, !6219}
!6197 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !6195, file: !447, line: 40, baseType: !6198, size: 32)
!6198 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kobj_ns_type", file: !447, line: 26, baseType: !7, size: 32, elements: !6199)
!6199 = !{!6200, !6201, !6202}
!6200 = !DIEnumerator(name: "KOBJ_NS_TYPE_NONE", value: 0, isUnsigned: true)
!6201 = !DIEnumerator(name: "KOBJ_NS_TYPE_NET", value: 1, isUnsigned: true)
!6202 = !DIEnumerator(name: "KOBJ_NS_TYPES", value: 2, isUnsigned: true)
!6203 = !DIDerivedType(tag: DW_TAG_member, name: "current_may_mount", scope: !6195, file: !447, line: 41, baseType: !6204, size: 64, offset: 64)
!6204 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6205, size: 64)
!6205 = !DISubroutineType(types: !6206)
!6206 = !{!771}
!6207 = !DIDerivedType(tag: DW_TAG_member, name: "grab_current_ns", scope: !6195, file: !447, line: 42, baseType: !6208, size: 64, offset: 128)
!6208 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6209, size: 64)
!6209 = !DISubroutineType(types: !6210)
!6210 = !{!591}
!6211 = !DIDerivedType(tag: DW_TAG_member, name: "netlink_ns", scope: !6195, file: !447, line: 43, baseType: !6212, size: 64, offset: 192)
!6212 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6213, size: 64)
!6213 = !DISubroutineType(types: !6214)
!6214 = !{!3258, !445}
!6215 = !DIDerivedType(tag: DW_TAG_member, name: "initial_ns", scope: !6195, file: !447, line: 44, baseType: !6216, size: 64, offset: 256)
!6216 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6217, size: 64)
!6217 = !DISubroutineType(types: !6218)
!6218 = !{!3258}
!6219 = !DIDerivedType(tag: DW_TAG_member, name: "drop_ns", scope: !6195, file: !447, line: 45, baseType: !1415, size: 64, offset: 320)
!6220 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !6129, file: !6115, line: 144, baseType: !6221, size: 64, offset: 320)
!6221 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6222, size: 64)
!6222 = !DISubroutineType(types: !6223)
!6223 = !{!3258, !6125}
!6224 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !6129, file: !6115, line: 145, baseType: !6225, size: 64, offset: 384)
!6225 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6226, size: 64)
!6226 = !DISubroutineType(types: !6227)
!6227 = !{null, !6125, !2904, !2905}
!6228 = !DIDerivedType(tag: DW_TAG_member, name: "sd", scope: !6120, file: !6115, line: 70, baseType: !6229, size: 64, offset: 384)
!6229 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6230, size: 64)
!6230 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_node", file: !1565, line: 123, size: 1024, elements: !6231)
!6231 = !{!6232, !6233, !6234, !6235, !6236, !6237, !6238, !6239, !6342, !6343, !6344, !6345, !6346}
!6232 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !6230, file: !1565, line: 124, baseType: !383, size: 32)
!6233 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !6230, file: !1565, line: 125, baseType: !383, size: 32, offset: 32)
!6234 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !6230, file: !1565, line: 135, baseType: !6229, size: 64, offset: 64)
!6235 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !6230, file: !1565, line: 136, baseType: !292, size: 64, offset: 128)
!6236 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !6230, file: !1565, line: 138, baseType: !433, size: 192, align: 64, offset: 192)
!6237 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !6230, file: !1565, line: 140, baseType: !3258, size: 64, offset: 384)
!6238 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !6230, file: !1565, line: 141, baseType: !7, size: 32, offset: 448)
!6239 = !DIDerivedType(tag: DW_TAG_member, scope: !6230, file: !1565, line: 142, baseType: !6240, size: 256, offset: 512)
!6240 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6230, file: !1565, line: 142, size: 256, elements: !6241)
!6241 = !{!6242, !6282, !6286}
!6242 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !6240, file: !1565, line: 143, baseType: !6243, size: 192)
!6243 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_dir", file: !1565, line: 91, size: 192, elements: !6244)
!6244 = !{!6245, !6246, !6247}
!6245 = !DIDerivedType(tag: DW_TAG_member, name: "subdirs", scope: !6243, file: !1565, line: 92, baseType: !312, size: 64)
!6246 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !6243, file: !1565, line: 94, baseType: !1750, size: 64, offset: 64)
!6247 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !6243, file: !1565, line: 100, baseType: !6248, size: 64, offset: 128)
!6248 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6249, size: 64)
!6249 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_root", file: !1565, line: 180, size: 704, elements: !6250)
!6250 = !{!6251, !6252, !6253, !6254, !6255, !6256, !6280, !6281}
!6251 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !6249, file: !1565, line: 182, baseType: !6229, size: 64)
!6252 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !6249, file: !1565, line: 183, baseType: !7, size: 32, offset: 64)
!6253 = !DIDerivedType(tag: DW_TAG_member, name: "ino_idr", scope: !6249, file: !1565, line: 186, baseType: !3001, size: 192, offset: 128)
!6254 = !DIDerivedType(tag: DW_TAG_member, name: "last_id_lowbits", scope: !6249, file: !1565, line: 187, baseType: !987, size: 32, offset: 320)
!6255 = !DIDerivedType(tag: DW_TAG_member, name: "id_highbits", scope: !6249, file: !1565, line: 188, baseType: !987, size: 32, offset: 352)
!6256 = !DIDerivedType(tag: DW_TAG_member, name: "syscall_ops", scope: !6249, file: !1565, line: 189, baseType: !6257, size: 64, offset: 384)
!6257 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6258, size: 64)
!6258 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_syscall_ops", file: !1565, line: 168, size: 320, elements: !6259)
!6259 = !{!6260, !6264, !6268, !6272, !6276}
!6260 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !6258, file: !1565, line: 169, baseType: !6261, size: 64)
!6261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6262, size: 64)
!6262 = !DISubroutineType(types: !6263)
!6263 = !{!32, !1653, !6248}
!6264 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !6258, file: !1565, line: 171, baseType: !6265, size: 64, offset: 64)
!6265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6266, size: 64)
!6266 = !DISubroutineType(types: !6267)
!6267 = !{!32, !6229, !292, !1379}
!6268 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !6258, file: !1565, line: 173, baseType: !6269, size: 64, offset: 128)
!6269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6270, size: 64)
!6270 = !DISubroutineType(types: !6271)
!6271 = !{!32, !6229}
!6272 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !6258, file: !1565, line: 174, baseType: !6273, size: 64, offset: 192)
!6273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6274, size: 64)
!6274 = !DISubroutineType(types: !6275)
!6275 = !{!32, !6229, !6229, !292}
!6276 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !6258, file: !1565, line: 176, baseType: !6277, size: 64, offset: 256)
!6277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6278, size: 64)
!6278 = !DISubroutineType(types: !6279)
!6279 = !{!32, !1653, !6229, !6248}
!6280 = !DIDerivedType(tag: DW_TAG_member, name: "supers", scope: !6249, file: !1565, line: 192, baseType: !284, size: 128, offset: 448)
!6281 = !DIDerivedType(tag: DW_TAG_member, name: "deactivate_waitq", scope: !6249, file: !1565, line: 194, baseType: !1889, size: 128, offset: 576)
!6282 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !6240, file: !1565, line: 144, baseType: !6283, size: 64)
!6283 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_symlink", file: !1565, line: 103, size: 64, elements: !6284)
!6284 = !{!6285}
!6285 = !DIDerivedType(tag: DW_TAG_member, name: "target_kn", scope: !6283, file: !1565, line: 104, baseType: !6229, size: 64)
!6286 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !6240, file: !1565, line: 145, baseType: !6287, size: 256)
!6287 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_attr", file: !1565, line: 107, size: 256, elements: !6288)
!6288 = !{!6289, !6337, !6340, !6341}
!6289 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !6287, file: !1565, line: 108, baseType: !6290, size: 64)
!6290 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6291, size: 64)
!6291 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6292)
!6292 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_ops", file: !1565, line: 217, size: 768, elements: !6293)
!6293 = !{!6294, !6314, !6318, !6319, !6320, !6321, !6322, !6326, !6327, !6328, !6329, !6333}
!6294 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !6292, file: !1565, line: 222, baseType: !6295, size: 64)
!6295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6296, size: 64)
!6296 = !DISubroutineType(types: !6297)
!6297 = !{!32, !6298}
!6298 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6299, size: 64)
!6299 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_file", file: !1565, line: 197, size: 1088, elements: !6300)
!6300 = !{!6301, !6302, !6303, !6304, !6305, !6306, !6307, !6308, !6309, !6310, !6311, !6312, !6313}
!6301 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !6299, file: !1565, line: 199, baseType: !6229, size: 64)
!6302 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !6299, file: !1565, line: 200, baseType: !1315, size: 64, offset: 64)
!6303 = !DIDerivedType(tag: DW_TAG_member, name: "seq_file", scope: !6299, file: !1565, line: 201, baseType: !1653, size: 64, offset: 128)
!6304 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !6299, file: !1565, line: 202, baseType: !591, size: 64, offset: 192)
!6305 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !6299, file: !1565, line: 205, baseType: !1665, size: 192, offset: 256)
!6306 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_mutex", scope: !6299, file: !1565, line: 206, baseType: !1665, size: 192, offset: 448)
!6307 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !6299, file: !1565, line: 207, baseType: !32, size: 32, offset: 640)
!6308 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !6299, file: !1565, line: 208, baseType: !284, size: 128, offset: 704)
!6309 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_buf", scope: !6299, file: !1565, line: 209, baseType: !1038, size: 64, offset: 832)
!6310 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !6299, file: !1565, line: 211, baseType: !1039, size: 64, offset: 896)
!6311 = !DIDerivedType(tag: DW_TAG_member, name: "mmapped", scope: !6299, file: !1565, line: 212, baseType: !771, size: 1, offset: 960, flags: DIFlagBitField, extraData: i64 960)
!6312 = !DIDerivedType(tag: DW_TAG_member, name: "released", scope: !6299, file: !1565, line: 213, baseType: !771, size: 1, offset: 961, flags: DIFlagBitField, extraData: i64 960)
!6313 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !6299, file: !1565, line: 214, baseType: !2126, size: 64, offset: 1024)
!6314 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !6292, file: !1565, line: 223, baseType: !6315, size: 64, offset: 64)
!6315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6316, size: 64)
!6316 = !DISubroutineType(types: !6317)
!6317 = !{null, !6298}
!6318 = !DIDerivedType(tag: DW_TAG_member, name: "seq_show", scope: !6292, file: !1565, line: 236, baseType: !1704, size: 64, offset: 128)
!6319 = !DIDerivedType(tag: DW_TAG_member, name: "seq_start", scope: !6292, file: !1565, line: 238, baseType: !1691, size: 64, offset: 192)
!6320 = !DIDerivedType(tag: DW_TAG_member, name: "seq_next", scope: !6292, file: !1565, line: 239, baseType: !1700, size: 64, offset: 256)
!6321 = !DIDerivedType(tag: DW_TAG_member, name: "seq_stop", scope: !6292, file: !1565, line: 240, baseType: !1696, size: 64, offset: 320)
!6322 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !6292, file: !1565, line: 242, baseType: !6323, size: 64, offset: 384)
!6323 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6324, size: 64)
!6324 = !DISubroutineType(types: !6325)
!6325 = !{!1521, !6298, !1038, !1039, !1476}
!6326 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !6292, file: !1565, line: 252, baseType: !1039, size: 64, offset: 448)
!6327 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc", scope: !6292, file: !1565, line: 259, baseType: !771, size: 8, offset: 512)
!6328 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !6292, file: !1565, line: 260, baseType: !6323, size: 64, offset: 576)
!6329 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !6292, file: !1565, line: 263, baseType: !6330, size: 64, offset: 640)
!6330 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6331, size: 64)
!6331 = !DISubroutineType(types: !6332)
!6332 = !{!4828, !6298, !4829}
!6333 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !6292, file: !1565, line: 266, baseType: !6334, size: 64, offset: 704)
!6334 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6335, size: 64)
!6335 = !DISubroutineType(types: !6336)
!6336 = !{!32, !6298, !2098}
!6337 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !6287, file: !1565, line: 109, baseType: !6338, size: 64, offset: 64)
!6338 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6339, size: 64)
!6339 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_node", file: !1565, line: 31, flags: DIFlagFwdDecl)
!6340 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !6287, file: !1565, line: 110, baseType: !1476, size: 64, offset: 128)
!6341 = !DIDerivedType(tag: DW_TAG_member, name: "notify_next", scope: !6287, file: !1565, line: 111, baseType: !6229, size: 64, offset: 192)
!6342 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !6230, file: !1565, line: 148, baseType: !591, size: 64, offset: 768)
!6343 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !6230, file: !1565, line: 154, baseType: !331, size: 64, offset: 832)
!6344 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !6230, file: !1565, line: 156, baseType: !476, size: 16, offset: 896)
!6345 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !6230, file: !1565, line: 157, baseType: !1379, size: 16, offset: 912)
!6346 = !DIDerivedType(tag: DW_TAG_member, name: "iattr", scope: !6230, file: !1565, line: 158, baseType: !6347, size: 64, offset: 960)
!6347 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6348, size: 64)
!6348 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_iattrs", file: !1565, line: 32, flags: DIFlagFwdDecl)
!6349 = !DIDerivedType(tag: DW_TAG_member, name: "kref", scope: !6120, file: !6115, line: 71, baseType: !6350, size: 32, offset: 448)
!6350 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kref", file: !6351, line: 19, size: 32, elements: !6352)
!6351 = !DIFile(filename: "./include/linux/kref.h", directory: "/home/lizy2001/genbc/linux")
!6352 = !{!6353}
!6353 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !6350, file: !6351, line: 20, baseType: !568, size: 32)
!6354 = !DIDerivedType(tag: DW_TAG_member, name: "state_initialized", scope: !6120, file: !6115, line: 75, baseType: !7, size: 1, offset: 480, flags: DIFlagBitField, extraData: i64 480)
!6355 = !DIDerivedType(tag: DW_TAG_member, name: "state_in_sysfs", scope: !6120, file: !6115, line: 76, baseType: !7, size: 1, offset: 481, flags: DIFlagBitField, extraData: i64 480)
!6356 = !DIDerivedType(tag: DW_TAG_member, name: "state_add_uevent_sent", scope: !6120, file: !6115, line: 77, baseType: !7, size: 1, offset: 482, flags: DIFlagBitField, extraData: i64 480)
!6357 = !DIDerivedType(tag: DW_TAG_member, name: "state_remove_uevent_sent", scope: !6120, file: !6115, line: 78, baseType: !7, size: 1, offset: 483, flags: DIFlagBitField, extraData: i64 480)
!6358 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_suppress", scope: !6120, file: !6115, line: 79, baseType: !7, size: 1, offset: 484, flags: DIFlagBitField, extraData: i64 480)
!6359 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_ops", scope: !6114, file: !6115, line: 196, baseType: !6360, size: 64, offset: 640)
!6360 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6361, size: 64)
!6361 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6362)
!6362 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset_uevent_ops", file: !6115, line: 156, size: 192, elements: !6363)
!6363 = !{!6364, !6369, !6374}
!6364 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !6362, file: !6115, line: 157, baseType: !6365, size: 64)
!6365 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6366)
!6366 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6367, size: 64)
!6367 = !DISubroutineType(types: !6368)
!6368 = !{!32, !6113, !6125}
!6369 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !6362, file: !6115, line: 158, baseType: !6370, size: 64, offset: 64)
!6370 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6371)
!6371 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6372, size: 64)
!6372 = !DISubroutineType(types: !6373)
!6373 = !{!292, !6113, !6125}
!6374 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !6362, file: !6115, line: 159, baseType: !6375, size: 64, offset: 128)
!6375 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6376)
!6376 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6377, size: 64)
!6377 = !DISubroutineType(types: !6378)
!6378 = !{!32, !6113, !6125, !6379}
!6379 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6380, size: 64)
!6380 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_uevent_env", file: !6115, line: 148, size: 20736, elements: !6381)
!6381 = !{!6382, !6384, !6386, !6387, !6391}
!6382 = !DIDerivedType(tag: DW_TAG_member, name: "argv", scope: !6380, file: !6115, line: 149, baseType: !6383, size: 192)
!6383 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1038, size: 192, elements: !1592)
!6384 = !DIDerivedType(tag: DW_TAG_member, name: "envp", scope: !6380, file: !6115, line: 150, baseType: !6385, size: 4096, offset: 192)
!6385 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1038, size: 4096, elements: !3812)
!6386 = !DIDerivedType(tag: DW_TAG_member, name: "envp_idx", scope: !6380, file: !6115, line: 151, baseType: !32, size: 32, offset: 4288)
!6387 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !6380, file: !6115, line: 152, baseType: !6388, size: 16384, offset: 4320)
!6388 = !DICompositeType(tag: DW_TAG_array_type, baseType: !268, size: 16384, elements: !6389)
!6389 = !{!6390}
!6390 = !DISubrange(count: 2048)
!6391 = !DIDerivedType(tag: DW_TAG_member, name: "buflen", scope: !6380, file: !6115, line: 153, baseType: !32, size: 32, offset: 20704)
!6392 = !DIDerivedType(tag: DW_TAG_member, name: "promiscuity", scope: !264, file: !31, line: 1985, baseType: !7, size: 32, offset: 5504)
!6393 = !DIDerivedType(tag: DW_TAG_member, name: "allmulti", scope: !264, file: !31, line: 1986, baseType: !7, size: 32, offset: 5536)
!6394 = !DIDerivedType(tag: DW_TAG_member, name: "uc_promisc", scope: !264, file: !31, line: 1987, baseType: !771, size: 8, offset: 5568)
!6395 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_info", scope: !264, file: !31, line: 1996, baseType: !6396, size: 64, offset: 5632)
!6396 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6397, size: 64)
!6397 = !DICompositeType(tag: DW_TAG_structure_type, name: "vlan_info", file: !31, line: 1996, flags: DIFlagFwdDecl)
!6398 = !DIDerivedType(tag: DW_TAG_member, name: "ip_ptr", scope: !264, file: !31, line: 2007, baseType: !6399, size: 64, offset: 5696)
!6399 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6400, size: 64)
!6400 = !DICompositeType(tag: DW_TAG_structure_type, name: "in_device", file: !31, line: 2007, flags: DIFlagFwdDecl)
!6401 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_ptr", scope: !264, file: !31, line: 2011, baseType: !6402, size: 64, offset: 5760)
!6402 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6403, size: 64)
!6403 = !DICompositeType(tag: DW_TAG_structure_type, name: "inet6_dev", file: !31, line: 2011, flags: DIFlagFwdDecl)
!6404 = !DIDerivedType(tag: DW_TAG_member, name: "ieee80211_ptr", scope: !264, file: !31, line: 2015, baseType: !6405, size: 64, offset: 5824)
!6405 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6406, size: 64)
!6406 = !DICompositeType(tag: DW_TAG_structure_type, name: "wireless_dev", file: !31, line: 62, flags: DIFlagFwdDecl)
!6407 = !DIDerivedType(tag: DW_TAG_member, name: "ieee802154_ptr", scope: !264, file: !31, line: 2016, baseType: !6408, size: 64, offset: 5888)
!6408 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6409, size: 64)
!6409 = !DICompositeType(tag: DW_TAG_structure_type, name: "wpan_dev", file: !31, line: 64, flags: DIFlagFwdDecl)
!6410 = !DIDerivedType(tag: DW_TAG_member, name: "dev_addr", scope: !264, file: !31, line: 2025, baseType: !564, size: 64, offset: 5952)
!6411 = !DIDerivedType(tag: DW_TAG_member, name: "_rx", scope: !264, file: !31, line: 2027, baseType: !6412, size: 64, offset: 6016)
!6412 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6413, size: 64)
!6413 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netdev_rx_queue", file: !31, line: 736, size: 1536, elements: !6414)
!6414 = !{!6415, !6416, !6417}
!6415 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !6413, file: !31, line: 741, baseType: !6120, size: 512)
!6416 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !6413, file: !31, line: 742, baseType: !290, size: 64, offset: 512)
!6417 = !DIDerivedType(tag: DW_TAG_member, name: "xdp_rxq", scope: !6413, file: !31, line: 743, baseType: !6418, size: 512, align: 512, offset: 1024)
!6418 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xdp_rxq_info", file: !5486, line: 57, size: 512, align: 512, elements: !6419)
!6419 = !{!6420, !6421, !6422, !6423}
!6420 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !6418, file: !5486, line: 58, baseType: !290, size: 64)
!6421 = !DIDerivedType(tag: DW_TAG_member, name: "queue_index", scope: !6418, file: !5486, line: 59, baseType: !987, size: 32, offset: 64)
!6422 = !DIDerivedType(tag: DW_TAG_member, name: "reg_state", scope: !6418, file: !5486, line: 60, baseType: !987, size: 32, offset: 96)
!6423 = !DIDerivedType(tag: DW_TAG_member, name: "mem", scope: !6418, file: !5486, line: 61, baseType: !5494, size: 64, offset: 128)
!6424 = !DIDerivedType(tag: DW_TAG_member, name: "num_rx_queues", scope: !264, file: !31, line: 2028, baseType: !7, size: 32, offset: 6080)
!6425 = !DIDerivedType(tag: DW_TAG_member, name: "real_num_rx_queues", scope: !264, file: !31, line: 2029, baseType: !7, size: 32, offset: 6112)
!6426 = !DIDerivedType(tag: DW_TAG_member, name: "xdp_prog", scope: !264, file: !31, line: 2031, baseType: !1088, size: 64, offset: 6144)
!6427 = !DIDerivedType(tag: DW_TAG_member, name: "gro_flush_timeout", scope: !264, file: !31, line: 2032, baseType: !312, size: 64, offset: 6208)
!6428 = !DIDerivedType(tag: DW_TAG_member, name: "napi_defer_hard_irqs", scope: !264, file: !31, line: 2033, baseType: !32, size: 32, offset: 6272)
!6429 = !DIDerivedType(tag: DW_TAG_member, name: "rx_handler", scope: !264, file: !31, line: 2034, baseType: !6430, size: 64, offset: 6336)
!6430 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6431, size: 64)
!6431 = !DIDerivedType(tag: DW_TAG_typedef, name: "rx_handler_func_t", file: !31, line: 430, baseType: !6432)
!6432 = !DISubroutineType(types: !6433)
!6433 = !{!6434, !6435}
!6434 = !DIDerivedType(tag: DW_TAG_typedef, name: "rx_handler_result_t", file: !31, line: 429, baseType: !257)
!6435 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !415, size: 64)
!6436 = !DIDerivedType(tag: DW_TAG_member, name: "rx_handler_data", scope: !264, file: !31, line: 2035, baseType: !591, size: 64, offset: 6400)
!6437 = !DIDerivedType(tag: DW_TAG_member, name: "ingress_queue", scope: !264, file: !31, line: 2040, baseType: !6438, size: 64, offset: 6464)
!6438 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6439, size: 64)
!6439 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netdev_queue", file: !31, line: 584, size: 1600, elements: !6440)
!6440 = !{!6441, !6442, !6445, !6446, !6447, !6448, !6449, !6450, !6451, !6452, !6453, !6454}
!6441 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !6439, file: !31, line: 588, baseType: !290, size: 64)
!6442 = !DIDerivedType(tag: DW_TAG_member, name: "qdisc", scope: !6439, file: !31, line: 589, baseType: !6443, size: 64, offset: 64)
!6443 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6444, size: 64)
!6444 = !DICompositeType(tag: DW_TAG_structure_type, name: "Qdisc", file: !31, line: 589, flags: DIFlagFwdDecl)
!6445 = !DIDerivedType(tag: DW_TAG_member, name: "qdisc_sleeping", scope: !6439, file: !31, line: 590, baseType: !6443, size: 64, offset: 128)
!6446 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !6439, file: !31, line: 592, baseType: !6120, size: 512, offset: 192)
!6447 = !DIDerivedType(tag: DW_TAG_member, name: "tx_maxrate", scope: !6439, file: !31, line: 597, baseType: !312, size: 64, offset: 704)
!6448 = !DIDerivedType(tag: DW_TAG_member, name: "trans_timeout", scope: !6439, file: !31, line: 602, baseType: !312, size: 64, offset: 768)
!6449 = !DIDerivedType(tag: DW_TAG_member, name: "sb_dev", scope: !6439, file: !31, line: 605, baseType: !290, size: 64, offset: 832)
!6450 = !DIDerivedType(tag: DW_TAG_member, name: "_xmit_lock", scope: !6439, file: !31, line: 612, baseType: !1670, offset: 896)
!6451 = !DIDerivedType(tag: DW_TAG_member, name: "xmit_lock_owner", scope: !6439, file: !31, line: 613, baseType: !32, size: 32, offset: 896)
!6452 = !DIDerivedType(tag: DW_TAG_member, name: "trans_start", scope: !6439, file: !31, line: 617, baseType: !312, size: 64, offset: 960)
!6453 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !6439, file: !31, line: 619, baseType: !312, size: 64, offset: 1024)
!6454 = !DIDerivedType(tag: DW_TAG_member, name: "dql", scope: !6439, file: !31, line: 622, baseType: !6455, size: 512, offset: 1088)
!6455 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dql", file: !6456, line: 43, size: 512, elements: !6457)
!6456 = !DIFile(filename: "./include/linux/dynamic_queue_limits.h", directory: "/home/lizy2001/genbc/linux")
!6457 = !{!6458, !6459, !6460, !6461, !6462, !6463, !6464, !6465, !6466, !6467, !6468, !6469, !6470}
!6458 = !DIDerivedType(tag: DW_TAG_member, name: "num_queued", scope: !6455, file: !6456, line: 45, baseType: !7, size: 32)
!6459 = !DIDerivedType(tag: DW_TAG_member, name: "adj_limit", scope: !6455, file: !6456, line: 46, baseType: !7, size: 32, offset: 32)
!6460 = !DIDerivedType(tag: DW_TAG_member, name: "last_obj_cnt", scope: !6455, file: !6456, line: 47, baseType: !7, size: 32, offset: 64)
!6461 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !6455, file: !6456, line: 51, baseType: !7, size: 32, offset: 96)
!6462 = !DIDerivedType(tag: DW_TAG_member, name: "num_completed", scope: !6455, file: !6456, line: 52, baseType: !7, size: 32, offset: 128)
!6463 = !DIDerivedType(tag: DW_TAG_member, name: "prev_ovlimit", scope: !6455, file: !6456, line: 54, baseType: !7, size: 32, offset: 160)
!6464 = !DIDerivedType(tag: DW_TAG_member, name: "prev_num_queued", scope: !6455, file: !6456, line: 55, baseType: !7, size: 32, offset: 192)
!6465 = !DIDerivedType(tag: DW_TAG_member, name: "prev_last_obj_cnt", scope: !6455, file: !6456, line: 56, baseType: !7, size: 32, offset: 224)
!6466 = !DIDerivedType(tag: DW_TAG_member, name: "lowest_slack", scope: !6455, file: !6456, line: 58, baseType: !7, size: 32, offset: 256)
!6467 = !DIDerivedType(tag: DW_TAG_member, name: "slack_start_time", scope: !6455, file: !6456, line: 59, baseType: !312, size: 64, offset: 320)
!6468 = !DIDerivedType(tag: DW_TAG_member, name: "max_limit", scope: !6455, file: !6456, line: 62, baseType: !7, size: 32, offset: 384)
!6469 = !DIDerivedType(tag: DW_TAG_member, name: "min_limit", scope: !6455, file: !6456, line: 63, baseType: !7, size: 32, offset: 416)
!6470 = !DIDerivedType(tag: DW_TAG_member, name: "slack_hold_time", scope: !6455, file: !6456, line: 64, baseType: !7, size: 32, offset: 448)
!6471 = !DIDerivedType(tag: DW_TAG_member, name: "broadcast", scope: !264, file: !31, line: 2045, baseType: !1031, size: 256, offset: 6528)
!6472 = !DIDerivedType(tag: DW_TAG_member, name: "index_hlist", scope: !264, file: !31, line: 2049, baseType: !276, size: 128, offset: 6784)
!6473 = !DIDerivedType(tag: DW_TAG_member, name: "_tx", scope: !264, file: !31, line: 2054, baseType: !6438, size: 64, offset: 6912)
!6474 = !DIDerivedType(tag: DW_TAG_member, name: "num_tx_queues", scope: !264, file: !31, line: 2055, baseType: !7, size: 32, offset: 6976)
!6475 = !DIDerivedType(tag: DW_TAG_member, name: "real_num_tx_queues", scope: !264, file: !31, line: 2056, baseType: !7, size: 32, offset: 7008)
!6476 = !DIDerivedType(tag: DW_TAG_member, name: "qdisc", scope: !264, file: !31, line: 2057, baseType: !6443, size: 64, offset: 7040)
!6477 = !DIDerivedType(tag: DW_TAG_member, name: "tx_queue_len", scope: !264, file: !31, line: 2058, baseType: !7, size: 32, offset: 7104)
!6478 = !DIDerivedType(tag: DW_TAG_member, name: "tx_global_lock", scope: !264, file: !31, line: 2059, baseType: !1670, offset: 7136)
!6479 = !DIDerivedType(tag: DW_TAG_member, name: "xdp_bulkq", scope: !264, file: !31, line: 2061, baseType: !6480, size: 64, offset: 7168)
!6480 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6481, size: 64)
!6481 = !DICompositeType(tag: DW_TAG_structure_type, name: "xdp_dev_bulk_queue", file: !31, line: 879, flags: DIFlagFwdDecl)
!6482 = !DIDerivedType(tag: DW_TAG_member, name: "watchdog_timer", scope: !264, file: !31, line: 2075, baseType: !3235, size: 320, offset: 7232)
!6483 = !DIDerivedType(tag: DW_TAG_member, name: "watchdog_timeo", scope: !264, file: !31, line: 2076, baseType: !32, size: 32, offset: 7552)
!6484 = !DIDerivedType(tag: DW_TAG_member, name: "proto_down_reason", scope: !264, file: !31, line: 2078, baseType: !987, size: 32, offset: 7584)
!6485 = !DIDerivedType(tag: DW_TAG_member, name: "todo_list", scope: !264, file: !31, line: 2080, baseType: !284, size: 128, offset: 7616)
!6486 = !DIDerivedType(tag: DW_TAG_member, name: "pcpu_refcnt", scope: !264, file: !31, line: 2081, baseType: !1001, size: 64, offset: 7744)
!6487 = !DIDerivedType(tag: DW_TAG_member, name: "link_watch_list", scope: !264, file: !31, line: 2083, baseType: !284, size: 128, offset: 7808)
!6488 = !DIDerivedType(tag: DW_TAG_member, name: "reg_state", scope: !264, file: !31, line: 2091, baseType: !263, size: 8, offset: 7936, flags: DIFlagBitField, extraData: i64 7936)
!6489 = !DIDerivedType(tag: DW_TAG_member, name: "dismantle", scope: !264, file: !31, line: 2093, baseType: !771, size: 8, offset: 7944)
!6490 = !DIDerivedType(tag: DW_TAG_member, name: "rtnl_link_state", scope: !264, file: !31, line: 2098, baseType: !6491, size: 16, offset: 7952, flags: DIFlagBitField, extraData: i64 7952)
!6491 = !DICompositeType(tag: DW_TAG_enumeration_type, scope: !264, file: !31, line: 2095, baseType: !7, size: 32, elements: !6492)
!6492 = !{!6493, !6494}
!6493 = !DIEnumerator(name: "RTNL_LINK_INITIALIZED", value: 0, isUnsigned: true)
!6494 = !DIEnumerator(name: "RTNL_LINK_INITIALIZING", value: 1, isUnsigned: true)
!6495 = !DIDerivedType(tag: DW_TAG_member, name: "needs_free_netdev", scope: !264, file: !31, line: 2100, baseType: !771, size: 8, offset: 7968)
!6496 = !DIDerivedType(tag: DW_TAG_member, name: "priv_destructor", scope: !264, file: !31, line: 2101, baseType: !405, size: 64, offset: 8000)
!6497 = !DIDerivedType(tag: DW_TAG_member, name: "nd_net", scope: !264, file: !31, line: 2107, baseType: !6498, size: 64, offset: 8064)
!6498 = !DIDerivedType(tag: DW_TAG_typedef, name: "possible_net_t", file: !2984, line: 318, baseType: !6499)
!6499 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2984, line: 314, size: 64, elements: !6500)
!6500 = !{!6501}
!6501 = !DIDerivedType(tag: DW_TAG_member, name: "net", scope: !6499, file: !2984, line: 316, baseType: !2982, size: 64)
!6502 = !DIDerivedType(tag: DW_TAG_member, scope: !264, file: !31, line: 2110, baseType: !6503, size: 64, offset: 8128)
!6503 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !264, file: !31, line: 2110, size: 64, elements: !6504)
!6504 = !{!6505, !6506, !6527, !6536}
!6505 = !DIDerivedType(tag: DW_TAG_member, name: "ml_priv", scope: !6503, file: !31, line: 2111, baseType: !591, size: 64)
!6506 = !DIDerivedType(tag: DW_TAG_member, name: "lstats", scope: !6503, file: !31, line: 2112, baseType: !6507, size: 64)
!6507 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6508, size: 64)
!6508 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pcpu_lstats", file: !31, line: 2542, size: 128, align: 128, elements: !6509)
!6509 = !{!6510, !6525, !6526}
!6510 = !DIDerivedType(tag: DW_TAG_member, name: "packets", scope: !6508, file: !31, line: 2543, baseType: !6511, size: 64)
!6511 = !DIDerivedType(tag: DW_TAG_typedef, name: "u64_stats_t", file: !3072, line: 79, baseType: !6512)
!6512 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3072, line: 77, size: 64, elements: !6513)
!6513 = !{!6514}
!6514 = !DIDerivedType(tag: DW_TAG_member, name: "v", scope: !6512, file: !3072, line: 78, baseType: !6515, size: 64)
!6515 = !DIDerivedType(tag: DW_TAG_typedef, name: "local64_t", file: !6516, line: 26, baseType: !6517)
!6516 = !DIFile(filename: "./include/asm-generic/local64.h", directory: "/home/lizy2001/genbc/linux")
!6517 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !6516, line: 24, size: 64, elements: !6518)
!6518 = !{!6519}
!6519 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !6517, file: !6516, line: 25, baseType: !6520, size: 64)
!6520 = !DIDerivedType(tag: DW_TAG_typedef, name: "local_t", file: !6521, line: 12, baseType: !6522)
!6521 = !DIFile(filename: "./arch/x86/include/asm/local.h", directory: "/home/lizy2001/genbc/linux")
!6522 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !6521, line: 10, size: 64, elements: !6523)
!6523 = !{!6524}
!6524 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !6522, file: !6521, line: 11, baseType: !371, size: 64)
!6525 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !6508, file: !31, line: 2544, baseType: !6511, size: 64, offset: 64)
!6526 = !DIDerivedType(tag: DW_TAG_member, name: "syncp", scope: !6508, file: !31, line: 2545, baseType: !3071, offset: 128)
!6527 = !DIDerivedType(tag: DW_TAG_member, name: "tstats", scope: !6503, file: !31, line: 2113, baseType: !6528, size: 64)
!6528 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6529, size: 64)
!6529 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pcpu_sw_netstats", file: !31, line: 2534, size: 256, align: 256, elements: !6530)
!6530 = !{!6531, !6532, !6533, !6534, !6535}
!6531 = !DIDerivedType(tag: DW_TAG_member, name: "rx_packets", scope: !6529, file: !31, line: 2535, baseType: !331, size: 64)
!6532 = !DIDerivedType(tag: DW_TAG_member, name: "rx_bytes", scope: !6529, file: !31, line: 2536, baseType: !331, size: 64, offset: 64)
!6533 = !DIDerivedType(tag: DW_TAG_member, name: "tx_packets", scope: !6529, file: !31, line: 2537, baseType: !331, size: 64, offset: 128)
!6534 = !DIDerivedType(tag: DW_TAG_member, name: "tx_bytes", scope: !6529, file: !31, line: 2538, baseType: !331, size: 64, offset: 192)
!6535 = !DIDerivedType(tag: DW_TAG_member, name: "syncp", scope: !6529, file: !31, line: 2539, baseType: !3071, offset: 256)
!6536 = !DIDerivedType(tag: DW_TAG_member, name: "dstats", scope: !6503, file: !31, line: 2114, baseType: !6537, size: 64)
!6537 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6538, size: 64)
!6538 = !DICompositeType(tag: DW_TAG_structure_type, name: "pcpu_dstats", file: !31, line: 2114, flags: DIFlagFwdDecl)
!6539 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !264, file: !31, line: 2124, baseType: !6540, size: 5568, offset: 8192)
!6540 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !6541, line: 461, size: 5568, elements: !6542)
!6541 = !DIFile(filename: "./include/linux/device.h", directory: "/home/lizy2001/genbc/linux")
!6542 = !{!6543, !6544, !6546, !6549, !6550, !6602, !6694, !6695, !6696, !6697, !6698, !6713, !6820, !6833, !6837, !6838, !6842, !6843, !6844, !6845, !6849, !6855, !6856, !6859, !6863, !6953, !6954, !6955, !6956, !6957, !6989, !6990, !6991, !6994, !6997, !6998, !6999, !7000}
!6543 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !6540, file: !6541, line: 462, baseType: !6120, size: 512)
!6544 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !6540, file: !6541, line: 463, baseType: !6545, size: 64, offset: 512)
!6545 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6540, size: 64)
!6546 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !6540, file: !6541, line: 465, baseType: !6547, size: 64, offset: 576)
!6547 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6548, size: 64)
!6548 = !DICompositeType(tag: DW_TAG_structure_type, name: "device_private", file: !6541, line: 36, flags: DIFlagFwdDecl)
!6549 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !6540, file: !6541, line: 467, baseType: !292, size: 64, offset: 640)
!6550 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !6540, file: !6541, line: 468, baseType: !6551, size: 64, offset: 704)
!6551 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6552, size: 64)
!6552 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6553)
!6553 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_type", file: !6541, line: 87, size: 384, elements: !6554)
!6554 = !{!6555, !6556, !6557, !6561, !6566, !6570}
!6555 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !6553, file: !6541, line: 88, baseType: !292, size: 64)
!6556 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !6553, file: !6541, line: 89, baseType: !6157, size: 64, offset: 64)
!6557 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !6553, file: !6541, line: 90, baseType: !6558, size: 64, offset: 128)
!6558 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6559, size: 64)
!6559 = !DISubroutineType(types: !6560)
!6560 = !{!32, !6545, !6379}
!6561 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !6553, file: !6541, line: 91, baseType: !6562, size: 64, offset: 192)
!6562 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6563, size: 64)
!6563 = !DISubroutineType(types: !6564)
!6564 = !{!1038, !6545, !6565, !2904, !2905}
!6565 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1379, size: 64)
!6566 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !6553, file: !6541, line: 93, baseType: !6567, size: 64, offset: 256)
!6567 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6568, size: 64)
!6568 = !DISubroutineType(types: !6569)
!6569 = !{null, !6545}
!6570 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !6553, file: !6541, line: 95, baseType: !6571, size: 64, offset: 320)
!6571 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6572, size: 64)
!6572 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6573)
!6573 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_ops", file: !6574, line: 278, size: 1472, elements: !6575)
!6574 = !DIFile(filename: "./include/linux/pm.h", directory: "/home/lizy2001/genbc/linux")
!6575 = !{!6576, !6580, !6581, !6582, !6583, !6584, !6585, !6586, !6587, !6588, !6589, !6590, !6591, !6592, !6593, !6594, !6595, !6596, !6597, !6598, !6599, !6600, !6601}
!6576 = !DIDerivedType(tag: DW_TAG_member, name: "prepare", scope: !6573, file: !6574, line: 279, baseType: !6577, size: 64)
!6577 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6578, size: 64)
!6578 = !DISubroutineType(types: !6579)
!6579 = !{!32, !6545}
!6580 = !DIDerivedType(tag: DW_TAG_member, name: "complete", scope: !6573, file: !6574, line: 280, baseType: !6567, size: 64, offset: 64)
!6581 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !6573, file: !6574, line: 281, baseType: !6577, size: 64, offset: 128)
!6582 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !6573, file: !6574, line: 282, baseType: !6577, size: 64, offset: 192)
!6583 = !DIDerivedType(tag: DW_TAG_member, name: "freeze", scope: !6573, file: !6574, line: 283, baseType: !6577, size: 64, offset: 256)
!6584 = !DIDerivedType(tag: DW_TAG_member, name: "thaw", scope: !6573, file: !6574, line: 284, baseType: !6577, size: 64, offset: 320)
!6585 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff", scope: !6573, file: !6574, line: 285, baseType: !6577, size: 64, offset: 384)
!6586 = !DIDerivedType(tag: DW_TAG_member, name: "restore", scope: !6573, file: !6574, line: 286, baseType: !6577, size: 64, offset: 448)
!6587 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_late", scope: !6573, file: !6574, line: 287, baseType: !6577, size: 64, offset: 512)
!6588 = !DIDerivedType(tag: DW_TAG_member, name: "resume_early", scope: !6573, file: !6574, line: 288, baseType: !6577, size: 64, offset: 576)
!6589 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_late", scope: !6573, file: !6574, line: 289, baseType: !6577, size: 64, offset: 640)
!6590 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_early", scope: !6573, file: !6574, line: 290, baseType: !6577, size: 64, offset: 704)
!6591 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_late", scope: !6573, file: !6574, line: 291, baseType: !6577, size: 64, offset: 768)
!6592 = !DIDerivedType(tag: DW_TAG_member, name: "restore_early", scope: !6573, file: !6574, line: 292, baseType: !6577, size: 64, offset: 832)
!6593 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_noirq", scope: !6573, file: !6574, line: 293, baseType: !6577, size: 64, offset: 896)
!6594 = !DIDerivedType(tag: DW_TAG_member, name: "resume_noirq", scope: !6573, file: !6574, line: 294, baseType: !6577, size: 64, offset: 960)
!6595 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_noirq", scope: !6573, file: !6574, line: 295, baseType: !6577, size: 64, offset: 1024)
!6596 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_noirq", scope: !6573, file: !6574, line: 296, baseType: !6577, size: 64, offset: 1088)
!6597 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_noirq", scope: !6573, file: !6574, line: 297, baseType: !6577, size: 64, offset: 1152)
!6598 = !DIDerivedType(tag: DW_TAG_member, name: "restore_noirq", scope: !6573, file: !6574, line: 298, baseType: !6577, size: 64, offset: 1216)
!6599 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_suspend", scope: !6573, file: !6574, line: 299, baseType: !6577, size: 64, offset: 1280)
!6600 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_resume", scope: !6573, file: !6574, line: 300, baseType: !6577, size: 64, offset: 1344)
!6601 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_idle", scope: !6573, file: !6574, line: 301, baseType: !6577, size: 64, offset: 1408)
!6602 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !6540, file: !6541, line: 470, baseType: !6603, size: 64, offset: 768)
!6603 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6604, size: 64)
!6604 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bus_type", file: !6605, line: 82, size: 1408, elements: !6606)
!6605 = !DIFile(filename: "./include/linux/device/bus.h", directory: "/home/lizy2001/genbc/linux")
!6606 = !{!6607, !6608, !6609, !6610, !6611, !6612, !6613, !6673, !6674, !6675, !6676, !6677, !6678, !6679, !6680, !6681, !6682, !6683, !6684, !6685, !6689, !6692, !6693}
!6607 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !6604, file: !6605, line: 83, baseType: !292, size: 64)
!6608 = !DIDerivedType(tag: DW_TAG_member, name: "dev_name", scope: !6604, file: !6605, line: 84, baseType: !292, size: 64, offset: 64)
!6609 = !DIDerivedType(tag: DW_TAG_member, name: "dev_root", scope: !6604, file: !6605, line: 85, baseType: !6545, size: 64, offset: 128)
!6610 = !DIDerivedType(tag: DW_TAG_member, name: "bus_groups", scope: !6604, file: !6605, line: 86, baseType: !6157, size: 64, offset: 192)
!6611 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !6604, file: !6605, line: 87, baseType: !6157, size: 64, offset: 256)
!6612 = !DIDerivedType(tag: DW_TAG_member, name: "drv_groups", scope: !6604, file: !6605, line: 88, baseType: !6157, size: 64, offset: 320)
!6613 = !DIDerivedType(tag: DW_TAG_member, name: "match", scope: !6604, file: !6605, line: 90, baseType: !6614, size: 64, offset: 384)
!6614 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6615, size: 64)
!6615 = !DISubroutineType(types: !6616)
!6616 = !{!32, !6545, !6617}
!6617 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6618, size: 64)
!6618 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_driver", file: !6619, line: 95, size: 1152, elements: !6620)
!6619 = !DIFile(filename: "./include/linux/device/driver.h", directory: "/home/lizy2001/genbc/linux")
!6620 = !{!6621, !6622, !6623, !6624, !6625, !6626, !6632, !6642, !6653, !6654, !6655, !6656, !6657, !6665, !6666, !6667, !6668, !6669, !6670}
!6621 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !6618, file: !6619, line: 96, baseType: !292, size: 64)
!6622 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !6618, file: !6619, line: 97, baseType: !6603, size: 64, offset: 64)
!6623 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !6618, file: !6619, line: 99, baseType: !980, size: 64, offset: 128)
!6624 = !DIDerivedType(tag: DW_TAG_member, name: "mod_name", scope: !6618, file: !6619, line: 100, baseType: !292, size: 64, offset: 192)
!6625 = !DIDerivedType(tag: DW_TAG_member, name: "suppress_bind_attrs", scope: !6618, file: !6619, line: 102, baseType: !771, size: 8, offset: 256)
!6626 = !DIDerivedType(tag: DW_TAG_member, name: "probe_type", scope: !6618, file: !6619, line: 103, baseType: !6627, size: 32, offset: 288)
!6627 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "probe_type", file: !6619, line: 44, baseType: !7, size: 32, elements: !6628)
!6628 = !{!6629, !6630, !6631}
!6629 = !DIEnumerator(name: "PROBE_DEFAULT_STRATEGY", value: 0, isUnsigned: true)
!6630 = !DIEnumerator(name: "PROBE_PREFER_ASYNCHRONOUS", value: 1, isUnsigned: true)
!6631 = !DIEnumerator(name: "PROBE_FORCE_SYNCHRONOUS", value: 2, isUnsigned: true)
!6632 = !DIDerivedType(tag: DW_TAG_member, name: "of_match_table", scope: !6618, file: !6619, line: 105, baseType: !6633, size: 64, offset: 320)
!6633 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6634, size: 64)
!6634 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6635)
!6635 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "of_device_id", file: !6636, line: 262, size: 1600, elements: !6637)
!6636 = !DIFile(filename: "./include/linux/mod_devicetable.h", directory: "/home/lizy2001/genbc/linux")
!6637 = !{!6638, !6639, !6640, !6641}
!6638 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !6635, file: !6636, line: 263, baseType: !4625, size: 256)
!6639 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !6635, file: !6636, line: 264, baseType: !4625, size: 256, offset: 256)
!6640 = !DIDerivedType(tag: DW_TAG_member, name: "compatible", scope: !6635, file: !6636, line: 265, baseType: !5233, size: 1024, offset: 512)
!6641 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !6635, file: !6636, line: 266, baseType: !3258, size: 64, offset: 1536)
!6642 = !DIDerivedType(tag: DW_TAG_member, name: "acpi_match_table", scope: !6618, file: !6619, line: 106, baseType: !6643, size: 64, offset: 384)
!6643 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6644, size: 64)
!6644 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6645)
!6645 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_id", file: !6636, line: 210, size: 256, elements: !6646)
!6646 = !{!6647, !6649, !6651, !6652}
!6647 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !6645, file: !6636, line: 211, baseType: !6648, size: 72)
!6648 = !DICompositeType(tag: DW_TAG_array_type, baseType: !481, size: 72, elements: !3087)
!6649 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !6645, file: !6636, line: 212, baseType: !6650, size: 64, offset: 128)
!6650 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_ulong_t", file: !6636, line: 14, baseType: !312)
!6651 = !DIDerivedType(tag: DW_TAG_member, name: "cls", scope: !6645, file: !6636, line: 213, baseType: !493, size: 32, offset: 192)
!6652 = !DIDerivedType(tag: DW_TAG_member, name: "cls_msk", scope: !6645, file: !6636, line: 214, baseType: !493, size: 32, offset: 224)
!6653 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !6618, file: !6619, line: 108, baseType: !6577, size: 64, offset: 448)
!6654 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !6618, file: !6619, line: 109, baseType: !6567, size: 64, offset: 512)
!6655 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !6618, file: !6619, line: 110, baseType: !6577, size: 64, offset: 576)
!6656 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !6618, file: !6619, line: 111, baseType: !6567, size: 64, offset: 640)
!6657 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !6618, file: !6619, line: 112, baseType: !6658, size: 64, offset: 704)
!6658 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6659, size: 64)
!6659 = !DISubroutineType(types: !6660)
!6660 = !{!32, !6545, !6661}
!6661 = !DIDerivedType(tag: DW_TAG_typedef, name: "pm_message_t", file: !6574, line: 52, baseType: !6662)
!6662 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_message", file: !6574, line: 50, size: 32, elements: !6663)
!6663 = !{!6664}
!6664 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !6662, file: !6574, line: 51, baseType: !32, size: 32)
!6665 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !6618, file: !6619, line: 113, baseType: !6577, size: 64, offset: 768)
!6666 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !6618, file: !6619, line: 114, baseType: !6157, size: 64, offset: 832)
!6667 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !6618, file: !6619, line: 115, baseType: !6157, size: 64, offset: 896)
!6668 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !6618, file: !6619, line: 117, baseType: !6571, size: 64, offset: 960)
!6669 = !DIDerivedType(tag: DW_TAG_member, name: "coredump", scope: !6618, file: !6619, line: 118, baseType: !6567, size: 64, offset: 1024)
!6670 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !6618, file: !6619, line: 120, baseType: !6671, size: 64, offset: 1088)
!6671 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6672, size: 64)
!6672 = !DICompositeType(tag: DW_TAG_structure_type, name: "driver_private", file: !6619, line: 120, flags: DIFlagFwdDecl)
!6673 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !6604, file: !6605, line: 91, baseType: !6558, size: 64, offset: 448)
!6674 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !6604, file: !6605, line: 92, baseType: !6577, size: 64, offset: 512)
!6675 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !6604, file: !6605, line: 93, baseType: !6567, size: 64, offset: 576)
!6676 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !6604, file: !6605, line: 94, baseType: !6577, size: 64, offset: 640)
!6677 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !6604, file: !6605, line: 95, baseType: !6567, size: 64, offset: 704)
!6678 = !DIDerivedType(tag: DW_TAG_member, name: "online", scope: !6604, file: !6605, line: 97, baseType: !6577, size: 64, offset: 768)
!6679 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !6604, file: !6605, line: 98, baseType: !6577, size: 64, offset: 832)
!6680 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !6604, file: !6605, line: 100, baseType: !6658, size: 64, offset: 896)
!6681 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !6604, file: !6605, line: 101, baseType: !6577, size: 64, offset: 960)
!6682 = !DIDerivedType(tag: DW_TAG_member, name: "num_vf", scope: !6604, file: !6605, line: 103, baseType: !6577, size: 64, offset: 1024)
!6683 = !DIDerivedType(tag: DW_TAG_member, name: "dma_configure", scope: !6604, file: !6605, line: 105, baseType: !6577, size: 64, offset: 1088)
!6684 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !6604, file: !6605, line: 107, baseType: !6571, size: 64, offset: 1152)
!6685 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_ops", scope: !6604, file: !6605, line: 109, baseType: !6686, size: 64, offset: 1216)
!6686 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6687, size: 64)
!6687 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6688)
!6688 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_ops", file: !6605, line: 109, flags: DIFlagFwdDecl)
!6689 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !6604, file: !6605, line: 111, baseType: !6690, size: 64, offset: 1280)
!6690 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6691, size: 64)
!6691 = !DICompositeType(tag: DW_TAG_structure_type, name: "subsys_private", file: !6605, line: 111, flags: DIFlagFwdDecl)
!6692 = !DIDerivedType(tag: DW_TAG_member, name: "lock_key", scope: !6604, file: !6605, line: 112, baseType: !1585, offset: 1344)
!6693 = !DIDerivedType(tag: DW_TAG_member, name: "need_parent_lock", scope: !6604, file: !6605, line: 114, baseType: !771, size: 8, offset: 1344)
!6694 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !6540, file: !6541, line: 471, baseType: !6617, size: 64, offset: 832)
!6695 = !DIDerivedType(tag: DW_TAG_member, name: "platform_data", scope: !6540, file: !6541, line: 473, baseType: !591, size: 64, offset: 896)
!6696 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !6540, file: !6541, line: 475, baseType: !591, size: 64, offset: 960)
!6697 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !6540, file: !6541, line: 480, baseType: !1665, size: 192, offset: 1024)
!6698 = !DIDerivedType(tag: DW_TAG_member, name: "links", scope: !6540, file: !6541, line: 484, baseType: !6699, size: 576, offset: 1216)
!6699 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_links_info", file: !6541, line: 361, size: 576, elements: !6700)
!6700 = !{!6701, !6702, !6703, !6704, !6705, !6706}
!6701 = !DIDerivedType(tag: DW_TAG_member, name: "suppliers", scope: !6699, file: !6541, line: 362, baseType: !284, size: 128)
!6702 = !DIDerivedType(tag: DW_TAG_member, name: "consumers", scope: !6699, file: !6541, line: 363, baseType: !284, size: 128, offset: 128)
!6703 = !DIDerivedType(tag: DW_TAG_member, name: "needs_suppliers", scope: !6699, file: !6541, line: 364, baseType: !284, size: 128, offset: 256)
!6704 = !DIDerivedType(tag: DW_TAG_member, name: "defer_hook", scope: !6699, file: !6541, line: 365, baseType: !284, size: 128, offset: 384)
!6705 = !DIDerivedType(tag: DW_TAG_member, name: "need_for_probe", scope: !6699, file: !6541, line: 366, baseType: !771, size: 8, offset: 512)
!6706 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !6699, file: !6541, line: 367, baseType: !6707, size: 32, offset: 544)
!6707 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dl_dev_state", file: !6541, line: 343, baseType: !7, size: 32, elements: !6708)
!6708 = !{!6709, !6710, !6711, !6712}
!6709 = !DIEnumerator(name: "DL_DEV_NO_DRIVER", value: 0, isUnsigned: true)
!6710 = !DIEnumerator(name: "DL_DEV_PROBING", value: 1, isUnsigned: true)
!6711 = !DIEnumerator(name: "DL_DEV_DRIVER_BOUND", value: 2, isUnsigned: true)
!6712 = !DIEnumerator(name: "DL_DEV_UNBINDING", value: 3, isUnsigned: true)
!6713 = !DIDerivedType(tag: DW_TAG_member, name: "power", scope: !6540, file: !6541, line: 485, baseType: !6714, size: 2304, offset: 1792)
!6714 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_info", file: !6574, line: 565, size: 2304, elements: !6715)
!6715 = !{!6716, !6717, !6718, !6719, !6720, !6721, !6722, !6723, !6724, !6725, !6726, !6727, !6728, !6729, !6730, !6731, !6758, !6759, !6760, !6761, !6762, !6763, !6764, !6765, !6766, !6767, !6768, !6769, !6770, !6771, !6772, !6773, !6774, !6775, !6776, !6777, !6778, !6779, !6780, !6781, !6782, !6790, !6797, !6798, !6799, !6800, !6801, !6802, !6803, !6813, !6817}
!6716 = !DIDerivedType(tag: DW_TAG_member, name: "power_state", scope: !6714, file: !6574, line: 566, baseType: !6661, size: 32)
!6717 = !DIDerivedType(tag: DW_TAG_member, name: "can_wakeup", scope: !6714, file: !6574, line: 567, baseType: !7, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!6718 = !DIDerivedType(tag: DW_TAG_member, name: "async_suspend", scope: !6714, file: !6574, line: 568, baseType: !7, size: 1, offset: 33, flags: DIFlagBitField, extraData: i64 32)
!6719 = !DIDerivedType(tag: DW_TAG_member, name: "in_dpm_list", scope: !6714, file: !6574, line: 569, baseType: !771, size: 1, offset: 34, flags: DIFlagBitField, extraData: i64 32)
!6720 = !DIDerivedType(tag: DW_TAG_member, name: "is_prepared", scope: !6714, file: !6574, line: 570, baseType: !771, size: 1, offset: 35, flags: DIFlagBitField, extraData: i64 32)
!6721 = !DIDerivedType(tag: DW_TAG_member, name: "is_suspended", scope: !6714, file: !6574, line: 571, baseType: !771, size: 1, offset: 36, flags: DIFlagBitField, extraData: i64 32)
!6722 = !DIDerivedType(tag: DW_TAG_member, name: "is_noirq_suspended", scope: !6714, file: !6574, line: 572, baseType: !771, size: 1, offset: 37, flags: DIFlagBitField, extraData: i64 32)
!6723 = !DIDerivedType(tag: DW_TAG_member, name: "is_late_suspended", scope: !6714, file: !6574, line: 573, baseType: !771, size: 1, offset: 38, flags: DIFlagBitField, extraData: i64 32)
!6724 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm", scope: !6714, file: !6574, line: 574, baseType: !771, size: 1, offset: 39, flags: DIFlagBitField, extraData: i64 32)
!6725 = !DIDerivedType(tag: DW_TAG_member, name: "early_init", scope: !6714, file: !6574, line: 575, baseType: !771, size: 1, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!6726 = !DIDerivedType(tag: DW_TAG_member, name: "direct_complete", scope: !6714, file: !6574, line: 576, baseType: !771, size: 1, offset: 41, flags: DIFlagBitField, extraData: i64 32)
!6727 = !DIDerivedType(tag: DW_TAG_member, name: "driver_flags", scope: !6714, file: !6574, line: 577, baseType: !987, size: 32, offset: 64)
!6728 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !6714, file: !6574, line: 578, baseType: !1670, offset: 96)
!6729 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !6714, file: !6574, line: 580, baseType: !284, size: 128, offset: 128)
!6730 = !DIDerivedType(tag: DW_TAG_member, name: "completion", scope: !6714, file: !6574, line: 581, baseType: !2597, size: 192, offset: 256)
!6731 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup", scope: !6714, file: !6574, line: 582, baseType: !6732, size: 64, offset: 448)
!6732 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6733, size: 64)
!6733 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wakeup_source", file: !6734, line: 43, size: 1472, elements: !6735)
!6734 = !DIFile(filename: "./include/linux/pm_wakeup.h", directory: "/home/lizy2001/genbc/linux")
!6735 = !{!6736, !6737, !6738, !6739, !6740, !6743, !6744, !6745, !6746, !6747, !6748, !6749, !6750, !6751, !6752, !6753, !6754, !6755, !6756, !6757}
!6736 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !6733, file: !6734, line: 44, baseType: !292, size: 64)
!6737 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !6733, file: !6734, line: 45, baseType: !32, size: 32, offset: 64)
!6738 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !6733, file: !6734, line: 46, baseType: !284, size: 128, offset: 128)
!6739 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !6733, file: !6734, line: 47, baseType: !1670, offset: 256)
!6740 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !6733, file: !6734, line: 48, baseType: !6741, size: 64, offset: 256)
!6741 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6742, size: 64)
!6742 = !DICompositeType(tag: DW_TAG_structure_type, name: "wake_irq", file: !6574, line: 533, flags: DIFlagFwdDecl)
!6743 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !6733, file: !6734, line: 49, baseType: !3235, size: 320, offset: 320)
!6744 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !6733, file: !6734, line: 50, baseType: !312, size: 64, offset: 640)
!6745 = !DIDerivedType(tag: DW_TAG_member, name: "total_time", scope: !6733, file: !6734, line: 51, baseType: !453, size: 64, offset: 704)
!6746 = !DIDerivedType(tag: DW_TAG_member, name: "max_time", scope: !6733, file: !6734, line: 52, baseType: !453, size: 64, offset: 768)
!6747 = !DIDerivedType(tag: DW_TAG_member, name: "last_time", scope: !6733, file: !6734, line: 53, baseType: !453, size: 64, offset: 832)
!6748 = !DIDerivedType(tag: DW_TAG_member, name: "start_prevent_time", scope: !6733, file: !6734, line: 54, baseType: !453, size: 64, offset: 896)
!6749 = !DIDerivedType(tag: DW_TAG_member, name: "prevent_sleep_time", scope: !6733, file: !6734, line: 55, baseType: !453, size: 64, offset: 960)
!6750 = !DIDerivedType(tag: DW_TAG_member, name: "event_count", scope: !6733, file: !6734, line: 56, baseType: !312, size: 64, offset: 1024)
!6751 = !DIDerivedType(tag: DW_TAG_member, name: "active_count", scope: !6733, file: !6734, line: 57, baseType: !312, size: 64, offset: 1088)
!6752 = !DIDerivedType(tag: DW_TAG_member, name: "relax_count", scope: !6733, file: !6734, line: 58, baseType: !312, size: 64, offset: 1152)
!6753 = !DIDerivedType(tag: DW_TAG_member, name: "expire_count", scope: !6733, file: !6734, line: 59, baseType: !312, size: 64, offset: 1216)
!6754 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_count", scope: !6733, file: !6734, line: 60, baseType: !312, size: 64, offset: 1280)
!6755 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !6733, file: !6734, line: 61, baseType: !6545, size: 64, offset: 1344)
!6756 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !6733, file: !6734, line: 62, baseType: !771, size: 1, offset: 1408, flags: DIFlagBitField, extraData: i64 1408)
!6757 = !DIDerivedType(tag: DW_TAG_member, name: "autosleep_enabled", scope: !6733, file: !6734, line: 63, baseType: !771, size: 1, offset: 1409, flags: DIFlagBitField, extraData: i64 1408)
!6758 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_path", scope: !6714, file: !6574, line: 583, baseType: !771, size: 1, offset: 512, flags: DIFlagBitField, extraData: i64 512)
!6759 = !DIDerivedType(tag: DW_TAG_member, name: "syscore", scope: !6714, file: !6574, line: 584, baseType: !771, size: 1, offset: 513, flags: DIFlagBitField, extraData: i64 512)
!6760 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm_callbacks", scope: !6714, file: !6574, line: 585, baseType: !771, size: 1, offset: 514, flags: DIFlagBitField, extraData: i64 512)
!6761 = !DIDerivedType(tag: DW_TAG_member, name: "must_resume", scope: !6714, file: !6574, line: 586, baseType: !7, size: 1, offset: 515, flags: DIFlagBitField, extraData: i64 512)
!6762 = !DIDerivedType(tag: DW_TAG_member, name: "may_skip_resume", scope: !6714, file: !6574, line: 587, baseType: !7, size: 1, offset: 516, flags: DIFlagBitField, extraData: i64 512)
!6763 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_timer", scope: !6714, file: !6574, line: 592, baseType: !2397, size: 512, offset: 576)
!6764 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !6714, file: !6574, line: 593, baseType: !331, size: 64, offset: 1088)
!6765 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !6714, file: !6574, line: 594, baseType: !2829, size: 256, offset: 1152)
!6766 = !DIDerivedType(tag: DW_TAG_member, name: "wait_queue", scope: !6714, file: !6574, line: 595, baseType: !1889, size: 128, offset: 1408)
!6767 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !6714, file: !6574, line: 596, baseType: !6741, size: 64, offset: 1536)
!6768 = !DIDerivedType(tag: DW_TAG_member, name: "usage_count", scope: !6714, file: !6574, line: 597, baseType: !383, size: 32, offset: 1600)
!6769 = !DIDerivedType(tag: DW_TAG_member, name: "child_count", scope: !6714, file: !6574, line: 598, baseType: !383, size: 32, offset: 1632)
!6770 = !DIDerivedType(tag: DW_TAG_member, name: "disable_depth", scope: !6714, file: !6574, line: 599, baseType: !7, size: 3, offset: 1664, flags: DIFlagBitField, extraData: i64 1664)
!6771 = !DIDerivedType(tag: DW_TAG_member, name: "idle_notification", scope: !6714, file: !6574, line: 600, baseType: !7, size: 1, offset: 1667, flags: DIFlagBitField, extraData: i64 1664)
!6772 = !DIDerivedType(tag: DW_TAG_member, name: "request_pending", scope: !6714, file: !6574, line: 601, baseType: !7, size: 1, offset: 1668, flags: DIFlagBitField, extraData: i64 1664)
!6773 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_resume", scope: !6714, file: !6574, line: 602, baseType: !7, size: 1, offset: 1669, flags: DIFlagBitField, extraData: i64 1664)
!6774 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_auto", scope: !6714, file: !6574, line: 603, baseType: !7, size: 1, offset: 1670, flags: DIFlagBitField, extraData: i64 1664)
!6775 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_children", scope: !6714, file: !6574, line: 604, baseType: !771, size: 1, offset: 1671, flags: DIFlagBitField, extraData: i64 1664)
!6776 = !DIDerivedType(tag: DW_TAG_member, name: "no_callbacks", scope: !6714, file: !6574, line: 605, baseType: !7, size: 1, offset: 1672, flags: DIFlagBitField, extraData: i64 1664)
!6777 = !DIDerivedType(tag: DW_TAG_member, name: "irq_safe", scope: !6714, file: !6574, line: 606, baseType: !7, size: 1, offset: 1673, flags: DIFlagBitField, extraData: i64 1664)
!6778 = !DIDerivedType(tag: DW_TAG_member, name: "use_autosuspend", scope: !6714, file: !6574, line: 607, baseType: !7, size: 1, offset: 1674, flags: DIFlagBitField, extraData: i64 1664)
!6779 = !DIDerivedType(tag: DW_TAG_member, name: "timer_autosuspends", scope: !6714, file: !6574, line: 608, baseType: !7, size: 1, offset: 1675, flags: DIFlagBitField, extraData: i64 1664)
!6780 = !DIDerivedType(tag: DW_TAG_member, name: "memalloc_noio", scope: !6714, file: !6574, line: 609, baseType: !7, size: 1, offset: 1676, flags: DIFlagBitField, extraData: i64 1664)
!6781 = !DIDerivedType(tag: DW_TAG_member, name: "links_count", scope: !6714, file: !6574, line: 610, baseType: !7, size: 32, offset: 1696)
!6782 = !DIDerivedType(tag: DW_TAG_member, name: "request", scope: !6714, file: !6574, line: 611, baseType: !6783, size: 32, offset: 1728)
!6783 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_request", file: !6574, line: 524, baseType: !7, size: 32, elements: !6784)
!6784 = !{!6785, !6786, !6787, !6788, !6789}
!6785 = !DIEnumerator(name: "RPM_REQ_NONE", value: 0, isUnsigned: true)
!6786 = !DIEnumerator(name: "RPM_REQ_IDLE", value: 1, isUnsigned: true)
!6787 = !DIEnumerator(name: "RPM_REQ_SUSPEND", value: 2, isUnsigned: true)
!6788 = !DIEnumerator(name: "RPM_REQ_AUTOSUSPEND", value: 3, isUnsigned: true)
!6789 = !DIEnumerator(name: "RPM_REQ_RESUME", value: 4, isUnsigned: true)
!6790 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_status", scope: !6714, file: !6574, line: 612, baseType: !6791, size: 32, offset: 1760)
!6791 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_status", file: !6574, line: 502, baseType: !7, size: 32, elements: !6792)
!6792 = !{!6793, !6794, !6795, !6796}
!6793 = !DIEnumerator(name: "RPM_ACTIVE", value: 0, isUnsigned: true)
!6794 = !DIEnumerator(name: "RPM_RESUMING", value: 1, isUnsigned: true)
!6795 = !DIEnumerator(name: "RPM_SUSPENDED", value: 2, isUnsigned: true)
!6796 = !DIEnumerator(name: "RPM_SUSPENDING", value: 3, isUnsigned: true)
!6797 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_error", scope: !6714, file: !6574, line: 613, baseType: !32, size: 32, offset: 1792)
!6798 = !DIDerivedType(tag: DW_TAG_member, name: "autosuspend_delay", scope: !6714, file: !6574, line: 614, baseType: !32, size: 32, offset: 1824)
!6799 = !DIDerivedType(tag: DW_TAG_member, name: "last_busy", scope: !6714, file: !6574, line: 615, baseType: !331, size: 64, offset: 1856)
!6800 = !DIDerivedType(tag: DW_TAG_member, name: "active_time", scope: !6714, file: !6574, line: 616, baseType: !331, size: 64, offset: 1920)
!6801 = !DIDerivedType(tag: DW_TAG_member, name: "suspended_time", scope: !6714, file: !6574, line: 617, baseType: !331, size: 64, offset: 1984)
!6802 = !DIDerivedType(tag: DW_TAG_member, name: "accounting_timestamp", scope: !6714, file: !6574, line: 618, baseType: !331, size: 64, offset: 2048)
!6803 = !DIDerivedType(tag: DW_TAG_member, name: "subsys_data", scope: !6714, file: !6574, line: 620, baseType: !6804, size: 64, offset: 2112)
!6804 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6805, size: 64)
!6805 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_subsys_data", file: !6574, line: 536, size: 256, elements: !6806)
!6806 = !{!6807, !6808, !6809, !6810}
!6807 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !6805, file: !6574, line: 537, baseType: !1670)
!6808 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !6805, file: !6574, line: 538, baseType: !7, size: 32)
!6809 = !DIDerivedType(tag: DW_TAG_member, name: "clock_list", scope: !6805, file: !6574, line: 540, baseType: !284, size: 128, offset: 64)
!6810 = !DIDerivedType(tag: DW_TAG_member, name: "domain_data", scope: !6805, file: !6574, line: 543, baseType: !6811, size: 64, offset: 192)
!6811 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6812, size: 64)
!6812 = !DICompositeType(tag: DW_TAG_structure_type, name: "pm_domain_data", file: !6574, line: 534, flags: DIFlagFwdDecl)
!6813 = !DIDerivedType(tag: DW_TAG_member, name: "set_latency_tolerance", scope: !6714, file: !6574, line: 621, baseType: !6814, size: 64, offset: 2176)
!6814 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6815, size: 64)
!6815 = !DISubroutineType(types: !6816)
!6816 = !{null, !6545, !2545}
!6817 = !DIDerivedType(tag: DW_TAG_member, name: "qos", scope: !6714, file: !6574, line: 622, baseType: !6818, size: 64, offset: 2240)
!6818 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6819, size: 64)
!6819 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_qos", file: !6574, line: 622, flags: DIFlagFwdDecl)
!6820 = !DIDerivedType(tag: DW_TAG_member, name: "pm_domain", scope: !6540, file: !6541, line: 486, baseType: !6821, size: 64, offset: 4096)
!6821 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6822, size: 64)
!6822 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_domain", file: !6574, line: 642, size: 1792, elements: !6823)
!6823 = !{!6824, !6825, !6826, !6830, !6831, !6832}
!6824 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !6822, file: !6574, line: 643, baseType: !6573, size: 1472)
!6825 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !6822, file: !6574, line: 644, baseType: !6577, size: 64, offset: 1472)
!6826 = !DIDerivedType(tag: DW_TAG_member, name: "detach", scope: !6822, file: !6574, line: 645, baseType: !6827, size: 64, offset: 1536)
!6827 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6828, size: 64)
!6828 = !DISubroutineType(types: !6829)
!6829 = !{null, !6545, !771}
!6830 = !DIDerivedType(tag: DW_TAG_member, name: "activate", scope: !6822, file: !6574, line: 646, baseType: !6577, size: 64, offset: 1600)
!6831 = !DIDerivedType(tag: DW_TAG_member, name: "sync", scope: !6822, file: !6574, line: 647, baseType: !6567, size: 64, offset: 1664)
!6832 = !DIDerivedType(tag: DW_TAG_member, name: "dismiss", scope: !6822, file: !6574, line: 648, baseType: !6567, size: 64, offset: 1728)
!6833 = !DIDerivedType(tag: DW_TAG_member, name: "msi_domain", scope: !6540, file: !6541, line: 493, baseType: !6834, size: 64, offset: 4160)
!6834 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6835, size: 64)
!6835 = !DICompositeType(tag: DW_TAG_structure_type, name: "irq_domain", file: !6836, line: 13, flags: DIFlagFwdDecl)
!6836 = !DIFile(filename: "./arch/x86/include/asm/x86_init.h", directory: "/home/lizy2001/genbc/linux")
!6837 = !DIDerivedType(tag: DW_TAG_member, name: "msi_list", scope: !6540, file: !6541, line: 499, baseType: !284, size: 128, offset: 4224)
!6838 = !DIDerivedType(tag: DW_TAG_member, name: "dma_ops", scope: !6540, file: !6541, line: 502, baseType: !6839, size: 64, offset: 4352)
!6839 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6840, size: 64)
!6840 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6841)
!6841 = !DICompositeType(tag: DW_TAG_structure_type, name: "dma_map_ops", file: !6541, line: 502, flags: DIFlagFwdDecl)
!6842 = !DIDerivedType(tag: DW_TAG_member, name: "dma_mask", scope: !6540, file: !6541, line: 504, baseType: !5372, size: 64, offset: 4416)
!6843 = !DIDerivedType(tag: DW_TAG_member, name: "coherent_dma_mask", scope: !6540, file: !6541, line: 505, baseType: !331, size: 64, offset: 4480)
!6844 = !DIDerivedType(tag: DW_TAG_member, name: "bus_dma_limit", scope: !6540, file: !6541, line: 510, baseType: !331, size: 64, offset: 4544)
!6845 = !DIDerivedType(tag: DW_TAG_member, name: "dma_range_map", scope: !6540, file: !6541, line: 511, baseType: !6846, size: 64, offset: 4608)
!6846 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6847, size: 64)
!6847 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6848)
!6848 = !DICompositeType(tag: DW_TAG_structure_type, name: "bus_dma_region", file: !6541, line: 511, flags: DIFlagFwdDecl)
!6849 = !DIDerivedType(tag: DW_TAG_member, name: "dma_parms", scope: !6540, file: !6541, line: 513, baseType: !6850, size: 64, offset: 4672)
!6850 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6851, size: 64)
!6851 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_dma_parameters", file: !6541, line: 288, size: 128, elements: !6852)
!6852 = !{!6853, !6854}
!6853 = !DIDerivedType(tag: DW_TAG_member, name: "max_segment_size", scope: !6851, file: !6541, line: 293, baseType: !7, size: 32)
!6854 = !DIDerivedType(tag: DW_TAG_member, name: "segment_boundary_mask", scope: !6851, file: !6541, line: 294, baseType: !312, size: 64, offset: 64)
!6855 = !DIDerivedType(tag: DW_TAG_member, name: "dma_pools", scope: !6540, file: !6541, line: 515, baseType: !284, size: 128, offset: 4736)
!6856 = !DIDerivedType(tag: DW_TAG_member, name: "archdata", scope: !6540, file: !6541, line: 526, baseType: !6857, offset: 4864)
!6857 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_archdata", file: !6858, line: 5, elements: !1587)
!6858 = !DIFile(filename: "./arch/x86/include/asm/device.h", directory: "/home/lizy2001/genbc/linux")
!6859 = !DIDerivedType(tag: DW_TAG_member, name: "of_node", scope: !6540, file: !6541, line: 528, baseType: !6860, size: 64, offset: 4864)
!6860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6861, size: 64)
!6861 = !DICompositeType(tag: DW_TAG_structure_type, name: "device_node", file: !6862, line: 14, flags: DIFlagFwdDecl)
!6862 = !DIFile(filename: "./include/linux/arch_topology.h", directory: "/home/lizy2001/genbc/linux")
!6863 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !6540, file: !6541, line: 529, baseType: !6864, size: 64, offset: 4928)
!6864 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6865, size: 64)
!6865 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_handle", file: !6866, line: 17, size: 192, elements: !6867)
!6866 = !DIFile(filename: "./include/linux/fwnode.h", directory: "/home/lizy2001/genbc/linux")
!6867 = !{!6868, !6869, !6952}
!6868 = !DIDerivedType(tag: DW_TAG_member, name: "secondary", scope: !6865, file: !6866, line: 18, baseType: !6864, size: 64)
!6869 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !6865, file: !6866, line: 19, baseType: !6870, size: 64, offset: 64)
!6870 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6871, size: 64)
!6871 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6872)
!6872 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_operations", file: !6866, line: 110, size: 1152, elements: !6873)
!6873 = !{!6874, !6878, !6882, !6888, !6894, !6898, !6902, !6907, !6911, !6912, !6916, !6920, !6924, !6935, !6936, !6937, !6938, !6948}
!6874 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !6872, file: !6866, line: 111, baseType: !6875, size: 64)
!6875 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6876, size: 64)
!6876 = !DISubroutineType(types: !6877)
!6877 = !{!6864, !6864}
!6878 = !DIDerivedType(tag: DW_TAG_member, name: "put", scope: !6872, file: !6866, line: 112, baseType: !6879, size: 64, offset: 64)
!6879 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6880, size: 64)
!6880 = !DISubroutineType(types: !6881)
!6881 = !{null, !6864}
!6882 = !DIDerivedType(tag: DW_TAG_member, name: "device_is_available", scope: !6872, file: !6866, line: 113, baseType: !6883, size: 64, offset: 128)
!6883 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6884, size: 64)
!6884 = !DISubroutineType(types: !6885)
!6885 = !{!771, !6886}
!6886 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6887, size: 64)
!6887 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6865)
!6888 = !DIDerivedType(tag: DW_TAG_member, name: "device_get_match_data", scope: !6872, file: !6866, line: 114, baseType: !6889, size: 64, offset: 192)
!6889 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6890, size: 64)
!6890 = !DISubroutineType(types: !6891)
!6891 = !{!3258, !6886, !6892}
!6892 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6893, size: 64)
!6893 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6540)
!6894 = !DIDerivedType(tag: DW_TAG_member, name: "property_present", scope: !6872, file: !6866, line: 116, baseType: !6895, size: 64, offset: 256)
!6895 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6896, size: 64)
!6896 = !DISubroutineType(types: !6897)
!6897 = !{!771, !6886, !292}
!6898 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_int_array", scope: !6872, file: !6866, line: 118, baseType: !6899, size: 64, offset: 320)
!6899 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6900, size: 64)
!6900 = !DISubroutineType(types: !6901)
!6901 = !{!32, !6886, !292, !7, !591, !1039}
!6902 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_string_array", scope: !6872, file: !6866, line: 123, baseType: !6903, size: 64, offset: 384)
!6903 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6904, size: 64)
!6904 = !DISubroutineType(types: !6905)
!6905 = !{!32, !6886, !292, !6906, !1039}
!6906 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !292, size: 64)
!6907 = !DIDerivedType(tag: DW_TAG_member, name: "get_name", scope: !6872, file: !6866, line: 126, baseType: !6908, size: 64, offset: 448)
!6908 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6909, size: 64)
!6909 = !DISubroutineType(types: !6910)
!6910 = !{!292, !6886}
!6911 = !DIDerivedType(tag: DW_TAG_member, name: "get_name_prefix", scope: !6872, file: !6866, line: 127, baseType: !6908, size: 64, offset: 512)
!6912 = !DIDerivedType(tag: DW_TAG_member, name: "get_parent", scope: !6872, file: !6866, line: 128, baseType: !6913, size: 64, offset: 576)
!6913 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6914, size: 64)
!6914 = !DISubroutineType(types: !6915)
!6915 = !{!6864, !6886}
!6916 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_child_node", scope: !6872, file: !6866, line: 130, baseType: !6917, size: 64, offset: 640)
!6917 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6918, size: 64)
!6918 = !DISubroutineType(types: !6919)
!6919 = !{!6864, !6886, !6864}
!6920 = !DIDerivedType(tag: DW_TAG_member, name: "get_named_child_node", scope: !6872, file: !6866, line: 133, baseType: !6921, size: 64, offset: 704)
!6921 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6922, size: 64)
!6922 = !DISubroutineType(types: !6923)
!6923 = !{!6864, !6886, !292}
!6924 = !DIDerivedType(tag: DW_TAG_member, name: "get_reference_args", scope: !6872, file: !6866, line: 135, baseType: !6925, size: 64, offset: 768)
!6925 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6926, size: 64)
!6926 = !DISubroutineType(types: !6927)
!6927 = !{!32, !6886, !292, !292, !7, !7, !6928}
!6928 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6929, size: 64)
!6929 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_reference_args", file: !6866, line: 43, size: 640, elements: !6930)
!6930 = !{!6931, !6932, !6933}
!6931 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !6929, file: !6866, line: 44, baseType: !6864, size: 64)
!6932 = !DIDerivedType(tag: DW_TAG_member, name: "nargs", scope: !6929, file: !6866, line: 45, baseType: !7, size: 32, offset: 64)
!6933 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !6929, file: !6866, line: 46, baseType: !6934, size: 512, offset: 128)
!6934 = !DICompositeType(tag: DW_TAG_array_type, baseType: !331, size: 512, elements: !2433)
!6935 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_next_endpoint", scope: !6872, file: !6866, line: 140, baseType: !6917, size: 64, offset: 832)
!6936 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_remote_endpoint", scope: !6872, file: !6866, line: 143, baseType: !6913, size: 64, offset: 896)
!6937 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_port_parent", scope: !6872, file: !6866, line: 145, baseType: !6875, size: 64, offset: 960)
!6938 = !DIDerivedType(tag: DW_TAG_member, name: "graph_parse_endpoint", scope: !6872, file: !6866, line: 146, baseType: !6939, size: 64, offset: 1024)
!6939 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6940, size: 64)
!6940 = !DISubroutineType(types: !6941)
!6941 = !{!32, !6886, !6942}
!6942 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6943, size: 64)
!6943 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_endpoint", file: !6866, line: 29, size: 128, elements: !6944)
!6944 = !{!6945, !6946, !6947}
!6945 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !6943, file: !6866, line: 30, baseType: !7, size: 32)
!6946 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !6943, file: !6866, line: 31, baseType: !7, size: 32, offset: 32)
!6947 = !DIDerivedType(tag: DW_TAG_member, name: "local_fwnode", scope: !6943, file: !6866, line: 32, baseType: !6886, size: 64, offset: 64)
!6948 = !DIDerivedType(tag: DW_TAG_member, name: "add_links", scope: !6872, file: !6866, line: 148, baseType: !6949, size: 64, offset: 1088)
!6949 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6950, size: 64)
!6950 = !DISubroutineType(types: !6951)
!6951 = !{!32, !6886, !6545}
!6952 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !6865, file: !6866, line: 20, baseType: !6545, size: 64, offset: 128)
!6953 = !DIDerivedType(tag: DW_TAG_member, name: "devt", scope: !6540, file: !6541, line: 534, baseType: !1458, size: 32, offset: 4992)
!6954 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !6540, file: !6541, line: 535, baseType: !987, size: 32, offset: 5024)
!6955 = !DIDerivedType(tag: DW_TAG_member, name: "devres_lock", scope: !6540, file: !6541, line: 537, baseType: !1670, offset: 5056)
!6956 = !DIDerivedType(tag: DW_TAG_member, name: "devres_head", scope: !6540, file: !6541, line: 538, baseType: !284, size: 128, offset: 5056)
!6957 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !6540, file: !6541, line: 540, baseType: !6958, size: 64, offset: 5184)
!6958 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6959, size: 64)
!6959 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "class", file: !6960, line: 54, size: 960, elements: !6961)
!6960 = !DIFile(filename: "./include/linux/device/class.h", directory: "/home/lizy2001/genbc/linux")
!6961 = !{!6962, !6963, !6964, !6965, !6966, !6967, !6968, !6972, !6976, !6977, !6978, !6979, !6983, !6987, !6988}
!6962 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !6959, file: !6960, line: 55, baseType: !292, size: 64)
!6963 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !6959, file: !6960, line: 56, baseType: !980, size: 64, offset: 64)
!6964 = !DIDerivedType(tag: DW_TAG_member, name: "class_groups", scope: !6959, file: !6960, line: 58, baseType: !6157, size: 64, offset: 128)
!6965 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !6959, file: !6960, line: 59, baseType: !6157, size: 64, offset: 192)
!6966 = !DIDerivedType(tag: DW_TAG_member, name: "dev_kobj", scope: !6959, file: !6960, line: 60, baseType: !6125, size: 64, offset: 256)
!6967 = !DIDerivedType(tag: DW_TAG_member, name: "dev_uevent", scope: !6959, file: !6960, line: 62, baseType: !6558, size: 64, offset: 320)
!6968 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !6959, file: !6960, line: 63, baseType: !6969, size: 64, offset: 384)
!6969 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6970, size: 64)
!6970 = !DISubroutineType(types: !6971)
!6971 = !{!1038, !6545, !6565}
!6972 = !DIDerivedType(tag: DW_TAG_member, name: "class_release", scope: !6959, file: !6960, line: 65, baseType: !6973, size: 64, offset: 448)
!6973 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6974, size: 64)
!6974 = !DISubroutineType(types: !6975)
!6975 = !{null, !6958}
!6976 = !DIDerivedType(tag: DW_TAG_member, name: "dev_release", scope: !6959, file: !6960, line: 66, baseType: !6567, size: 64, offset: 512)
!6977 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown_pre", scope: !6959, file: !6960, line: 68, baseType: !6577, size: 64, offset: 576)
!6978 = !DIDerivedType(tag: DW_TAG_member, name: "ns_type", scope: !6959, file: !6960, line: 70, baseType: !6193, size: 64, offset: 640)
!6979 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !6959, file: !6960, line: 71, baseType: !6980, size: 64, offset: 704)
!6980 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6981, size: 64)
!6981 = !DISubroutineType(types: !6982)
!6982 = !{!3258, !6545}
!6983 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !6959, file: !6960, line: 73, baseType: !6984, size: 64, offset: 768)
!6984 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6985, size: 64)
!6985 = !DISubroutineType(types: !6986)
!6986 = !{null, !6545, !2904, !2905}
!6987 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !6959, file: !6960, line: 75, baseType: !6571, size: 64, offset: 832)
!6988 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !6959, file: !6960, line: 77, baseType: !6690, size: 64, offset: 896)
!6989 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !6540, file: !6541, line: 541, baseType: !6157, size: 64, offset: 5248)
!6990 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !6540, file: !6541, line: 543, baseType: !6567, size: 64, offset: 5312)
!6991 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_group", scope: !6540, file: !6541, line: 544, baseType: !6992, size: 64, offset: 5376)
!6992 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6993, size: 64)
!6993 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_group", file: !6541, line: 45, flags: DIFlagFwdDecl)
!6994 = !DIDerivedType(tag: DW_TAG_member, name: "iommu", scope: !6540, file: !6541, line: 545, baseType: !6995, size: 64, offset: 5440)
!6995 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6996, size: 64)
!6996 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_iommu", file: !6541, line: 47, flags: DIFlagFwdDecl)
!6997 = !DIDerivedType(tag: DW_TAG_member, name: "offline_disabled", scope: !6540, file: !6541, line: 547, baseType: !771, size: 1, offset: 5504, flags: DIFlagBitField, extraData: i64 5504)
!6998 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !6540, file: !6541, line: 548, baseType: !771, size: 1, offset: 5505, flags: DIFlagBitField, extraData: i64 5504)
!6999 = !DIDerivedType(tag: DW_TAG_member, name: "of_node_reused", scope: !6540, file: !6541, line: 549, baseType: !771, size: 1, offset: 5506, flags: DIFlagBitField, extraData: i64 5504)
!7000 = !DIDerivedType(tag: DW_TAG_member, name: "state_synced", scope: !6540, file: !6541, line: 550, baseType: !771, size: 1, offset: 5507, flags: DIFlagBitField, extraData: i64 5504)
!7001 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_groups", scope: !264, file: !31, line: 2125, baseType: !7002, size: 256, offset: 13760)
!7002 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6158, size: 256, elements: !2272)
!7003 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_rx_queue_group", scope: !264, file: !31, line: 2126, baseType: !6158, size: 64, offset: 14016)
!7004 = !DIDerivedType(tag: DW_TAG_member, name: "rtnl_link_ops", scope: !264, file: !31, line: 2128, baseType: !7005, size: 64, offset: 14080)
!7005 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7006, size: 64)
!7006 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7007)
!7007 = !DICompositeType(tag: DW_TAG_structure_type, name: "rtnl_link_ops", file: !31, line: 2128, flags: DIFlagFwdDecl)
!7008 = !DIDerivedType(tag: DW_TAG_member, name: "gso_max_size", scope: !264, file: !31, line: 2132, baseType: !7, size: 32, offset: 14144)
!7009 = !DIDerivedType(tag: DW_TAG_member, name: "gso_max_segs", scope: !264, file: !31, line: 2134, baseType: !581, size: 16, offset: 14176)
!7010 = !DIDerivedType(tag: DW_TAG_member, name: "num_tc", scope: !264, file: !31, line: 2139, baseType: !2314, size: 16, offset: 14192)
!7011 = !DIDerivedType(tag: DW_TAG_member, name: "tc_to_txq", scope: !264, file: !31, line: 2140, baseType: !7012, size: 512, offset: 14208)
!7012 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7013, size: 512, elements: !269)
!7013 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netdev_tc_txq", file: !31, line: 793, size: 32, elements: !7014)
!7014 = !{!7015, !7016}
!7015 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !7013, file: !31, line: 794, baseType: !581, size: 16)
!7016 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !7013, file: !31, line: 795, baseType: !581, size: 16, offset: 16)
!7017 = !DIDerivedType(tag: DW_TAG_member, name: "prio_tc_map", scope: !264, file: !31, line: 2141, baseType: !7018, size: 128, offset: 14720)
!7018 = !DICompositeType(tag: DW_TAG_array_type, baseType: !794, size: 128, elements: !269)
!7019 = !DIDerivedType(tag: DW_TAG_member, name: "phydev", scope: !264, file: !31, line: 2149, baseType: !7020, size: 64, offset: 14848)
!7020 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7021, size: 64)
!7021 = !DICompositeType(tag: DW_TAG_structure_type, name: "phy_device", file: !251, line: 536, flags: DIFlagFwdDecl)
!7022 = !DIDerivedType(tag: DW_TAG_member, name: "sfp_bus", scope: !264, file: !31, line: 2150, baseType: !7023, size: 64, offset: 14912)
!7023 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7024, size: 64)
!7024 = !DICompositeType(tag: DW_TAG_structure_type, name: "sfp_bus", file: !31, line: 60, flags: DIFlagFwdDecl)
!7025 = !DIDerivedType(tag: DW_TAG_member, name: "qdisc_tx_busylock", scope: !264, file: !31, line: 2151, baseType: !7026, size: 64, offset: 14976)
!7026 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1585, size: 64)
!7027 = !DIDerivedType(tag: DW_TAG_member, name: "qdisc_running_key", scope: !264, file: !31, line: 2152, baseType: !7026, size: 64, offset: 15040)
!7028 = !DIDerivedType(tag: DW_TAG_member, name: "proto_down", scope: !264, file: !31, line: 2153, baseType: !771, size: 8, offset: 15104)
!7029 = !DIDerivedType(tag: DW_TAG_member, name: "wol_enabled", scope: !264, file: !31, line: 2154, baseType: !7, size: 1, offset: 15112, flags: DIFlagBitField, extraData: i64 15112)
!7030 = !DIDerivedType(tag: DW_TAG_member, name: "net_notifier_list", scope: !264, file: !31, line: 2156, baseType: !284, size: 128, offset: 15168)
!7031 = !DIDerivedType(tag: DW_TAG_member, name: "udp_tunnel_nic_info", scope: !264, file: !31, line: 2162, baseType: !7032, size: 64, offset: 15296)
!7032 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7033, size: 64)
!7033 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7034)
!7034 = !DICompositeType(tag: DW_TAG_structure_type, name: "udp_tunnel_nic_info", file: !31, line: 68, flags: DIFlagFwdDecl)
!7035 = !DIDerivedType(tag: DW_TAG_member, name: "udp_tunnel_nic", scope: !264, file: !31, line: 2163, baseType: !7036, size: 64, offset: 15360)
!7036 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7037, size: 64)
!7037 = !DICompositeType(tag: DW_TAG_structure_type, name: "udp_tunnel_nic", file: !31, line: 69, flags: DIFlagFwdDecl)
!7038 = !DIDerivedType(tag: DW_TAG_member, name: "xdp_state", scope: !264, file: !31, line: 2166, baseType: !7039, size: 384, offset: 15424)
!7039 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7040, size: 384, elements: !1592)
!7040 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_xdp_entity", file: !31, line: 889, size: 128, elements: !7041)
!7041 = !{!7042, !7043}
!7042 = !DIDerivedType(tag: DW_TAG_member, name: "prog", scope: !7040, file: !31, line: 890, baseType: !1088, size: 64)
!7043 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !7040, file: !31, line: 891, baseType: !7044, size: 64, offset: 64)
!7044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7045, size: 64)
!7045 = !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_xdp_link", file: !31, line: 880, flags: DIFlagFwdDecl)
!7046 = !{!7047, !7048, !7049, !7050, !7051, !7052}
!7047 = !DIEnumerator(name: "NETREG_UNINITIALIZED", value: 0, isUnsigned: true)
!7048 = !DIEnumerator(name: "NETREG_REGISTERED", value: 1, isUnsigned: true)
!7049 = !DIEnumerator(name: "NETREG_UNREGISTERING", value: 2, isUnsigned: true)
!7050 = !DIEnumerator(name: "NETREG_UNREGISTERED", value: 3, isUnsigned: true)
!7051 = !DIEnumerator(name: "NETREG_RELEASED", value: 4, isUnsigned: true)
!7052 = !DIEnumerator(name: "NETREG_DUMMY", value: 5, isUnsigned: true)
!7053 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "happy_transceiver", file: !7054, line: 384, baseType: !7, size: 32, elements: !7055)
!7054 = !DIFile(filename: "drivers/net/ethernet/sun/sunhme.h", directory: "/home/lizy2001/genbc/linux")
!7055 = !{!7056, !7057, !7058}
!7056 = !DIEnumerator(name: "external", value: 0, isUnsigned: true)
!7057 = !DIEnumerator(name: "internal", value: 1, isUnsigned: true)
!7058 = !DIEnumerator(name: "none", value: 2, isUnsigned: true)
!7059 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "happy_timer_state", file: !7054, line: 391, baseType: !7, size: 32, elements: !7060)
!7060 = !{!7061, !7062, !7063, !7064}
!7061 = !DIEnumerator(name: "arbwait", value: 0, isUnsigned: true)
!7062 = !DIEnumerator(name: "lupwait", value: 1, isUnsigned: true)
!7063 = !DIEnumerator(name: "ltrywait", value: 2, isUnsigned: true)
!7064 = !DIEnumerator(name: "asleep", value: 3, isUnsigned: true)
!7065 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !330, line: 14, baseType: !7, size: 32, elements: !7066)
!7066 = !{!7067, !7068, !7069, !7070, !7071, !7072, !7073, !7074, !7075, !7076, !7077, !7078, !7079, !7080, !7081, !7082, !7083, !7084, !7085, !7086, !7087, !7088, !7089, !7090, !7091, !7092, !7093, !7094, !7095, !7096, !7097, !7098, !7099, !7100, !7101, !7102, !7103, !7104, !7105, !7106, !7107, !7108, !7109, !7110, !7111, !7112, !7113, !7114, !7115, !7116, !7117, !7118, !7119, !7120, !7121, !7122, !7123, !7124, !7125, !7126, !7127, !7128}
!7067 = !DIEnumerator(name: "NETIF_F_SG_BIT", value: 0, isUnsigned: true)
!7068 = !DIEnumerator(name: "NETIF_F_IP_CSUM_BIT", value: 1, isUnsigned: true)
!7069 = !DIEnumerator(name: "__UNUSED_NETIF_F_1", value: 2, isUnsigned: true)
!7070 = !DIEnumerator(name: "NETIF_F_HW_CSUM_BIT", value: 3, isUnsigned: true)
!7071 = !DIEnumerator(name: "NETIF_F_IPV6_CSUM_BIT", value: 4, isUnsigned: true)
!7072 = !DIEnumerator(name: "NETIF_F_HIGHDMA_BIT", value: 5, isUnsigned: true)
!7073 = !DIEnumerator(name: "NETIF_F_FRAGLIST_BIT", value: 6, isUnsigned: true)
!7074 = !DIEnumerator(name: "NETIF_F_HW_VLAN_CTAG_TX_BIT", value: 7, isUnsigned: true)
!7075 = !DIEnumerator(name: "NETIF_F_HW_VLAN_CTAG_RX_BIT", value: 8, isUnsigned: true)
!7076 = !DIEnumerator(name: "NETIF_F_HW_VLAN_CTAG_FILTER_BIT", value: 9, isUnsigned: true)
!7077 = !DIEnumerator(name: "NETIF_F_VLAN_CHALLENGED_BIT", value: 10, isUnsigned: true)
!7078 = !DIEnumerator(name: "NETIF_F_GSO_BIT", value: 11, isUnsigned: true)
!7079 = !DIEnumerator(name: "NETIF_F_LLTX_BIT", value: 12, isUnsigned: true)
!7080 = !DIEnumerator(name: "NETIF_F_NETNS_LOCAL_BIT", value: 13, isUnsigned: true)
!7081 = !DIEnumerator(name: "NETIF_F_GRO_BIT", value: 14, isUnsigned: true)
!7082 = !DIEnumerator(name: "NETIF_F_LRO_BIT", value: 15, isUnsigned: true)
!7083 = !DIEnumerator(name: "NETIF_F_GSO_SHIFT", value: 16, isUnsigned: true)
!7084 = !DIEnumerator(name: "NETIF_F_TSO_BIT", value: 16, isUnsigned: true)
!7085 = !DIEnumerator(name: "NETIF_F_GSO_ROBUST_BIT", value: 17, isUnsigned: true)
!7086 = !DIEnumerator(name: "NETIF_F_TSO_ECN_BIT", value: 18, isUnsigned: true)
!7087 = !DIEnumerator(name: "NETIF_F_TSO_MANGLEID_BIT", value: 19, isUnsigned: true)
!7088 = !DIEnumerator(name: "NETIF_F_TSO6_BIT", value: 20, isUnsigned: true)
!7089 = !DIEnumerator(name: "NETIF_F_FSO_BIT", value: 21, isUnsigned: true)
!7090 = !DIEnumerator(name: "NETIF_F_GSO_GRE_BIT", value: 22, isUnsigned: true)
!7091 = !DIEnumerator(name: "NETIF_F_GSO_GRE_CSUM_BIT", value: 23, isUnsigned: true)
!7092 = !DIEnumerator(name: "NETIF_F_GSO_IPXIP4_BIT", value: 24, isUnsigned: true)
!7093 = !DIEnumerator(name: "NETIF_F_GSO_IPXIP6_BIT", value: 25, isUnsigned: true)
!7094 = !DIEnumerator(name: "NETIF_F_GSO_UDP_TUNNEL_BIT", value: 26, isUnsigned: true)
!7095 = !DIEnumerator(name: "NETIF_F_GSO_UDP_TUNNEL_CSUM_BIT", value: 27, isUnsigned: true)
!7096 = !DIEnumerator(name: "NETIF_F_GSO_PARTIAL_BIT", value: 28, isUnsigned: true)
!7097 = !DIEnumerator(name: "NETIF_F_GSO_TUNNEL_REMCSUM_BIT", value: 29, isUnsigned: true)
!7098 = !DIEnumerator(name: "NETIF_F_GSO_SCTP_BIT", value: 30, isUnsigned: true)
!7099 = !DIEnumerator(name: "NETIF_F_GSO_ESP_BIT", value: 31, isUnsigned: true)
!7100 = !DIEnumerator(name: "NETIF_F_GSO_UDP_BIT", value: 32, isUnsigned: true)
!7101 = !DIEnumerator(name: "NETIF_F_GSO_UDP_L4_BIT", value: 33, isUnsigned: true)
!7102 = !DIEnumerator(name: "NETIF_F_GSO_FRAGLIST_BIT", value: 34, isUnsigned: true)
!7103 = !DIEnumerator(name: "NETIF_F_GSO_LAST", value: 34, isUnsigned: true)
!7104 = !DIEnumerator(name: "NETIF_F_FCOE_CRC_BIT", value: 35, isUnsigned: true)
!7105 = !DIEnumerator(name: "NETIF_F_SCTP_CRC_BIT", value: 36, isUnsigned: true)
!7106 = !DIEnumerator(name: "NETIF_F_FCOE_MTU_BIT", value: 37, isUnsigned: true)
!7107 = !DIEnumerator(name: "NETIF_F_NTUPLE_BIT", value: 38, isUnsigned: true)
!7108 = !DIEnumerator(name: "NETIF_F_RXHASH_BIT", value: 39, isUnsigned: true)
!7109 = !DIEnumerator(name: "NETIF_F_RXCSUM_BIT", value: 40, isUnsigned: true)
!7110 = !DIEnumerator(name: "NETIF_F_NOCACHE_COPY_BIT", value: 41, isUnsigned: true)
!7111 = !DIEnumerator(name: "NETIF_F_LOOPBACK_BIT", value: 42, isUnsigned: true)
!7112 = !DIEnumerator(name: "NETIF_F_RXFCS_BIT", value: 43, isUnsigned: true)
!7113 = !DIEnumerator(name: "NETIF_F_RXALL_BIT", value: 44, isUnsigned: true)
!7114 = !DIEnumerator(name: "NETIF_F_HW_VLAN_STAG_TX_BIT", value: 45, isUnsigned: true)
!7115 = !DIEnumerator(name: "NETIF_F_HW_VLAN_STAG_RX_BIT", value: 46, isUnsigned: true)
!7116 = !DIEnumerator(name: "NETIF_F_HW_VLAN_STAG_FILTER_BIT", value: 47, isUnsigned: true)
!7117 = !DIEnumerator(name: "NETIF_F_HW_L2FW_DOFFLOAD_BIT", value: 48, isUnsigned: true)
!7118 = !DIEnumerator(name: "NETIF_F_HW_TC_BIT", value: 49, isUnsigned: true)
!7119 = !DIEnumerator(name: "NETIF_F_HW_ESP_BIT", value: 50, isUnsigned: true)
!7120 = !DIEnumerator(name: "NETIF_F_HW_ESP_TX_CSUM_BIT", value: 51, isUnsigned: true)
!7121 = !DIEnumerator(name: "NETIF_F_RX_UDP_TUNNEL_PORT_BIT", value: 52, isUnsigned: true)
!7122 = !DIEnumerator(name: "NETIF_F_HW_TLS_TX_BIT", value: 53, isUnsigned: true)
!7123 = !DIEnumerator(name: "NETIF_F_HW_TLS_RX_BIT", value: 54, isUnsigned: true)
!7124 = !DIEnumerator(name: "NETIF_F_GRO_HW_BIT", value: 55, isUnsigned: true)
!7125 = !DIEnumerator(name: "NETIF_F_HW_TLS_RECORD_BIT", value: 56, isUnsigned: true)
!7126 = !DIEnumerator(name: "NETIF_F_GRO_FRAGLIST_BIT", value: 57, isUnsigned: true)
!7127 = !DIEnumerator(name: "NETIF_F_HW_MACSEC_BIT", value: 58, isUnsigned: true)
!7128 = !DIEnumerator(name: "NETDEV_FEATURE_COUNT", value: 59, isUnsigned: true)
!7129 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kmalloc_cache_type", file: !7130, line: 305, baseType: !7, size: 32, elements: !7131)
!7130 = !DIFile(filename: "./include/linux/slab.h", directory: "/home/lizy2001/genbc/linux")
!7131 = !{!7132, !7133, !7134, !7135}
!7132 = !DIEnumerator(name: "KMALLOC_NORMAL", value: 0, isUnsigned: true)
!7133 = !DIEnumerator(name: "KMALLOC_RECLAIM", value: 1, isUnsigned: true)
!7134 = !DIEnumerator(name: "KMALLOC_DMA", value: 2, isUnsigned: true)
!7135 = !DIEnumerator(name: "NR_KMALLOC_TYPES", value: 3, isUnsigned: true)
!7136 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "net_device_flags", file: !599, line: 82, baseType: !7, size: 32, elements: !7137)
!7137 = !{!7138, !7139, !7140, !7141, !7142, !7143, !7144, !7145, !7146, !7147, !7148, !7149, !7150, !7151, !7152, !7153, !7154, !7155, !7156}
!7138 = !DIEnumerator(name: "IFF_UP", value: 1, isUnsigned: true)
!7139 = !DIEnumerator(name: "IFF_BROADCAST", value: 2, isUnsigned: true)
!7140 = !DIEnumerator(name: "IFF_DEBUG", value: 4, isUnsigned: true)
!7141 = !DIEnumerator(name: "IFF_LOOPBACK", value: 8, isUnsigned: true)
!7142 = !DIEnumerator(name: "IFF_POINTOPOINT", value: 16, isUnsigned: true)
!7143 = !DIEnumerator(name: "IFF_NOTRAILERS", value: 32, isUnsigned: true)
!7144 = !DIEnumerator(name: "IFF_RUNNING", value: 64, isUnsigned: true)
!7145 = !DIEnumerator(name: "IFF_NOARP", value: 128, isUnsigned: true)
!7146 = !DIEnumerator(name: "IFF_PROMISC", value: 256, isUnsigned: true)
!7147 = !DIEnumerator(name: "IFF_ALLMULTI", value: 512, isUnsigned: true)
!7148 = !DIEnumerator(name: "IFF_MASTER", value: 1024, isUnsigned: true)
!7149 = !DIEnumerator(name: "IFF_SLAVE", value: 2048, isUnsigned: true)
!7150 = !DIEnumerator(name: "IFF_MULTICAST", value: 4096, isUnsigned: true)
!7151 = !DIEnumerator(name: "IFF_PORTSEL", value: 8192, isUnsigned: true)
!7152 = !DIEnumerator(name: "IFF_AUTOMEDIA", value: 16384, isUnsigned: true)
!7153 = !DIEnumerator(name: "IFF_DYNAMIC", value: 32768, isUnsigned: true)
!7154 = !DIEnumerator(name: "IFF_LOWER_UP", value: 65536, isUnsigned: true)
!7155 = !DIEnumerator(name: "IFF_DORMANT", value: 131072, isUnsigned: true)
!7156 = !DIEnumerator(name: "IFF_ECHO", value: 262144, isUnsigned: true)
!7157 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dma_data_direction", file: !7158, line: 5, baseType: !7, size: 32, elements: !7159)
!7158 = !DIFile(filename: "./include/linux/dma-direction.h", directory: "/home/lizy2001/genbc/linux")
!7159 = !{!7160, !7161, !7162, !7163}
!7160 = !DIEnumerator(name: "DMA_BIDIRECTIONAL", value: 0, isUnsigned: true)
!7161 = !DIEnumerator(name: "DMA_TO_DEVICE", value: 1, isUnsigned: true)
!7162 = !DIEnumerator(name: "DMA_FROM_DEVICE", value: 2, isUnsigned: true)
!7163 = !DIEnumerator(name: "DMA_NONE", value: 3, isUnsigned: true)
!7164 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !7165, line: 10, baseType: !7, size: 32, elements: !7166)
!7165 = !DIFile(filename: "./include/linux/stddef.h", directory: "/home/lizy2001/genbc/linux")
!7166 = !{!7167, !7168}
!7167 = !DIEnumerator(name: "false", value: 0, isUnsigned: true)
!7168 = !DIEnumerator(name: "true", value: 1, isUnsigned: true)
!7169 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "skb_free_reason", file: !31, line: 3780, baseType: !7, size: 32, elements: !7170)
!7170 = !{!7171, !7172}
!7171 = !DIEnumerator(name: "SKB_REASON_CONSUMED", value: 0, isUnsigned: true)
!7172 = !DIEnumerator(name: "SKB_REASON_DROPPED", value: 1, isUnsigned: true)
!7173 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "irqreturn", file: !7174, line: 11, baseType: !7, size: 32, elements: !7175)
!7174 = !DIFile(filename: "./include/linux/irqreturn.h", directory: "/home/lizy2001/genbc/linux")
!7175 = !{!7176, !7177, !7178}
!7176 = !DIEnumerator(name: "IRQ_NONE", value: 0, isUnsigned: true)
!7177 = !DIEnumerator(name: "IRQ_HANDLED", value: 1, isUnsigned: true)
!7178 = !DIEnumerator(name: "IRQ_WAKE_THREAD", value: 2, isUnsigned: true)
!7179 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "netdev_queue_state_t", file: !31, line: 558, baseType: !7, size: 32, elements: !7180)
!7180 = !{!7181, !7182, !7183}
!7181 = !DIEnumerator(name: "__QUEUE_STATE_DRV_XOFF", value: 0, isUnsigned: true)
!7182 = !DIEnumerator(name: "__QUEUE_STATE_STACK_XOFF", value: 1, isUnsigned: true)
!7183 = !DIEnumerator(name: "__QUEUE_STATE_FROZEN", value: 2, isUnsigned: true)
!7184 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ethtool_link_mode_bit_indices", file: !209, line: 1521, baseType: !7, size: 32, elements: !7185)
!7185 = !{!7186, !7187, !7188, !7189, !7190, !7191, !7192, !7193, !7194, !7195, !7196, !7197, !7198, !7199, !7200, !7201, !7202, !7203, !7204, !7205, !7206, !7207, !7208, !7209, !7210, !7211, !7212, !7213, !7214, !7215, !7216, !7217, !7218, !7219, !7220, !7221, !7222, !7223, !7224, !7225, !7226, !7227, !7228, !7229, !7230, !7231, !7232, !7233, !7234, !7235, !7236, !7237, !7238, !7239, !7240, !7241, !7242, !7243, !7244, !7245, !7246, !7247, !7248, !7249, !7250, !7251, !7252, !7253, !7254, !7255, !7256, !7257, !7258, !7259, !7260, !7261, !7262, !7263, !7264, !7265, !7266, !7267, !7268, !7269, !7270, !7271, !7272, !7273, !7274, !7275, !7276, !7277, !7278}
!7186 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_10baseT_Half_BIT", value: 0, isUnsigned: true)
!7187 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_10baseT_Full_BIT", value: 1, isUnsigned: true)
!7188 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100baseT_Half_BIT", value: 2, isUnsigned: true)
!7189 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100baseT_Full_BIT", value: 3, isUnsigned: true)
!7190 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_1000baseT_Half_BIT", value: 4, isUnsigned: true)
!7191 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_1000baseT_Full_BIT", value: 5, isUnsigned: true)
!7192 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_Autoneg_BIT", value: 6, isUnsigned: true)
!7193 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_TP_BIT", value: 7, isUnsigned: true)
!7194 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_AUI_BIT", value: 8, isUnsigned: true)
!7195 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_MII_BIT", value: 9, isUnsigned: true)
!7196 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_FIBRE_BIT", value: 10, isUnsigned: true)
!7197 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_BNC_BIT", value: 11, isUnsigned: true)
!7198 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_10000baseT_Full_BIT", value: 12, isUnsigned: true)
!7199 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_Pause_BIT", value: 13, isUnsigned: true)
!7200 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_Asym_Pause_BIT", value: 14, isUnsigned: true)
!7201 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_2500baseX_Full_BIT", value: 15, isUnsigned: true)
!7202 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_Backplane_BIT", value: 16, isUnsigned: true)
!7203 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_1000baseKX_Full_BIT", value: 17, isUnsigned: true)
!7204 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_10000baseKX4_Full_BIT", value: 18, isUnsigned: true)
!7205 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_10000baseKR_Full_BIT", value: 19, isUnsigned: true)
!7206 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_10000baseR_FEC_BIT", value: 20, isUnsigned: true)
!7207 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_20000baseMLD2_Full_BIT", value: 21, isUnsigned: true)
!7208 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_20000baseKR2_Full_BIT", value: 22, isUnsigned: true)
!7209 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_40000baseKR4_Full_BIT", value: 23, isUnsigned: true)
!7210 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_40000baseCR4_Full_BIT", value: 24, isUnsigned: true)
!7211 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_40000baseSR4_Full_BIT", value: 25, isUnsigned: true)
!7212 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_40000baseLR4_Full_BIT", value: 26, isUnsigned: true)
!7213 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_56000baseKR4_Full_BIT", value: 27, isUnsigned: true)
!7214 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_56000baseCR4_Full_BIT", value: 28, isUnsigned: true)
!7215 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_56000baseSR4_Full_BIT", value: 29, isUnsigned: true)
!7216 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_56000baseLR4_Full_BIT", value: 30, isUnsigned: true)
!7217 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_25000baseCR_Full_BIT", value: 31, isUnsigned: true)
!7218 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_25000baseKR_Full_BIT", value: 32, isUnsigned: true)
!7219 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_25000baseSR_Full_BIT", value: 33, isUnsigned: true)
!7220 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_50000baseCR2_Full_BIT", value: 34, isUnsigned: true)
!7221 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_50000baseKR2_Full_BIT", value: 35, isUnsigned: true)
!7222 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100000baseKR4_Full_BIT", value: 36, isUnsigned: true)
!7223 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100000baseSR4_Full_BIT", value: 37, isUnsigned: true)
!7224 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100000baseCR4_Full_BIT", value: 38, isUnsigned: true)
!7225 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100000baseLR4_ER4_Full_BIT", value: 39, isUnsigned: true)
!7226 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_50000baseSR2_Full_BIT", value: 40, isUnsigned: true)
!7227 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_1000baseX_Full_BIT", value: 41, isUnsigned: true)
!7228 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_10000baseCR_Full_BIT", value: 42, isUnsigned: true)
!7229 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_10000baseSR_Full_BIT", value: 43, isUnsigned: true)
!7230 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_10000baseLR_Full_BIT", value: 44, isUnsigned: true)
!7231 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_10000baseLRM_Full_BIT", value: 45, isUnsigned: true)
!7232 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_10000baseER_Full_BIT", value: 46, isUnsigned: true)
!7233 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_2500baseT_Full_BIT", value: 47, isUnsigned: true)
!7234 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_5000baseT_Full_BIT", value: 48, isUnsigned: true)
!7235 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_FEC_NONE_BIT", value: 49, isUnsigned: true)
!7236 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_FEC_RS_BIT", value: 50, isUnsigned: true)
!7237 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_FEC_BASER_BIT", value: 51, isUnsigned: true)
!7238 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_50000baseKR_Full_BIT", value: 52, isUnsigned: true)
!7239 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_50000baseSR_Full_BIT", value: 53, isUnsigned: true)
!7240 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_50000baseCR_Full_BIT", value: 54, isUnsigned: true)
!7241 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_50000baseLR_ER_FR_Full_BIT", value: 55, isUnsigned: true)
!7242 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_50000baseDR_Full_BIT", value: 56, isUnsigned: true)
!7243 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100000baseKR2_Full_BIT", value: 57, isUnsigned: true)
!7244 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100000baseSR2_Full_BIT", value: 58, isUnsigned: true)
!7245 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100000baseCR2_Full_BIT", value: 59, isUnsigned: true)
!7246 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100000baseLR2_ER2_FR2_Full_BIT", value: 60, isUnsigned: true)
!7247 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100000baseDR2_Full_BIT", value: 61, isUnsigned: true)
!7248 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_200000baseKR4_Full_BIT", value: 62, isUnsigned: true)
!7249 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_200000baseSR4_Full_BIT", value: 63, isUnsigned: true)
!7250 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_200000baseLR4_ER4_FR4_Full_BIT", value: 64, isUnsigned: true)
!7251 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_200000baseDR4_Full_BIT", value: 65, isUnsigned: true)
!7252 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_200000baseCR4_Full_BIT", value: 66, isUnsigned: true)
!7253 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100baseT1_Full_BIT", value: 67, isUnsigned: true)
!7254 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_1000baseT1_Full_BIT", value: 68, isUnsigned: true)
!7255 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_400000baseKR8_Full_BIT", value: 69, isUnsigned: true)
!7256 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_400000baseSR8_Full_BIT", value: 70, isUnsigned: true)
!7257 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_400000baseLR8_ER8_FR8_Full_BIT", value: 71, isUnsigned: true)
!7258 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_400000baseDR8_Full_BIT", value: 72, isUnsigned: true)
!7259 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_400000baseCR8_Full_BIT", value: 73, isUnsigned: true)
!7260 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_FEC_LLRS_BIT", value: 74, isUnsigned: true)
!7261 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100000baseKR_Full_BIT", value: 75, isUnsigned: true)
!7262 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100000baseSR_Full_BIT", value: 76, isUnsigned: true)
!7263 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100000baseLR_ER_FR_Full_BIT", value: 77, isUnsigned: true)
!7264 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100000baseCR_Full_BIT", value: 78, isUnsigned: true)
!7265 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100000baseDR_Full_BIT", value: 79, isUnsigned: true)
!7266 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_200000baseKR2_Full_BIT", value: 80, isUnsigned: true)
!7267 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_200000baseSR2_Full_BIT", value: 81, isUnsigned: true)
!7268 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_200000baseLR2_ER2_FR2_Full_BIT", value: 82, isUnsigned: true)
!7269 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_200000baseDR2_Full_BIT", value: 83, isUnsigned: true)
!7270 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_200000baseCR2_Full_BIT", value: 84, isUnsigned: true)
!7271 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_400000baseKR4_Full_BIT", value: 85, isUnsigned: true)
!7272 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_400000baseSR4_Full_BIT", value: 86, isUnsigned: true)
!7273 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_400000baseLR4_ER4_FR4_Full_BIT", value: 87, isUnsigned: true)
!7274 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_400000baseDR4_Full_BIT", value: 88, isUnsigned: true)
!7275 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_400000baseCR4_Full_BIT", value: 89, isUnsigned: true)
!7276 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100baseFX_Half_BIT", value: 90, isUnsigned: true)
!7277 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100baseFX_Full_BIT", value: 91, isUnsigned: true)
!7278 = !DIEnumerator(name: "__ETHTOOL_LINK_MODE_MASK_NBITS", value: 92, isUnsigned: true)
!7279 = !{!591, !1742, !329, !7280, !1038, !312, !7552, !7554, !7628, !7630, !493, !7559, !32, !7567, !7641, !7642, !7663, !2036, !1719, !3439, !7664, !535, !475, !524, !7665, !7667, !980}
!7280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7281, size: 64)
!7281 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_dev", file: !7282, line: 309, size: 19264, elements: !7283)
!7282 = !DIFile(filename: "./include/linux/pci.h", directory: "/home/lizy2001/genbc/linux")
!7283 = !{!7284, !7285, !7354, !7355, !7356, !7357, !7368, !7369, !7370, !7371, !7372, !7373, !7374, !7375, !7376, !7377, !7378, !7379, !7380, !7381, !7382, !7383, !7384, !7449, !7450, !7451, !7453, !7454, !7455, !7456, !7457, !7458, !7459, !7460, !7461, !7462, !7463, !7464, !7465, !7466, !7467, !7468, !7469, !7470, !7471, !7472, !7475, !7476, !7477, !7478, !7479, !7480, !7481, !7482, !7486, !7487, !7488, !7489, !7490, !7491, !7492, !7493, !7494, !7495, !7496, !7497, !7498, !7499, !7500, !7501, !7502, !7503, !7504, !7505, !7506, !7507, !7508, !7509, !7510, !7511, !7512, !7513, !7514, !7515, !7516, !7517, !7518, !7519, !7520, !7521, !7522, !7523, !7525, !7526, !7528, !7529, !7530, !7531, !7533, !7534, !7535, !7538, !7545, !7546, !7547, !7548, !7549, !7550, !7551}
!7284 = !DIDerivedType(tag: DW_TAG_member, name: "bus_list", scope: !7281, file: !7282, line: 310, baseType: !284, size: 128)
!7285 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !7281, file: !7282, line: 311, baseType: !7286, size: 64, offset: 128)
!7286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7287, size: 64)
!7287 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_bus", file: !7282, line: 605, size: 8064, elements: !7288)
!7288 = !{!7289, !7290, !7291, !7292, !7293, !7294, !7295, !7310, !7311, !7312, !7336, !7339, !7340, !7341, !7342, !7343, !7344, !7345, !7346, !7347, !7349, !7350, !7351, !7352, !7353}
!7289 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !7287, file: !7282, line: 606, baseType: !284, size: 128)
!7290 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !7287, file: !7282, line: 607, baseType: !7286, size: 64, offset: 128)
!7291 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !7287, file: !7282, line: 608, baseType: !284, size: 128, offset: 192)
!7292 = !DIDerivedType(tag: DW_TAG_member, name: "devices", scope: !7287, file: !7282, line: 609, baseType: !284, size: 128, offset: 320)
!7293 = !DIDerivedType(tag: DW_TAG_member, name: "self", scope: !7287, file: !7282, line: 610, baseType: !7280, size: 64, offset: 448)
!7294 = !DIDerivedType(tag: DW_TAG_member, name: "slots", scope: !7287, file: !7282, line: 611, baseType: !284, size: 128, offset: 512)
!7295 = !DIDerivedType(tag: DW_TAG_member, name: "resource", scope: !7287, file: !7282, line: 613, baseType: !7296, size: 256, offset: 640)
!7296 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7297, size: 256, elements: !2272)
!7297 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7298, size: 64)
!7298 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "resource", file: !7299, line: 20, size: 512, elements: !7300)
!7299 = !DIFile(filename: "./include/linux/ioport.h", directory: "/home/lizy2001/genbc/linux")
!7300 = !{!7301, !7303, !7304, !7305, !7306, !7307, !7308, !7309}
!7301 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !7298, file: !7299, line: 21, baseType: !7302, size: 64)
!7302 = !DIDerivedType(tag: DW_TAG_typedef, name: "resource_size_t", file: !277, line: 158, baseType: !4045)
!7303 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !7298, file: !7299, line: 22, baseType: !7302, size: 64, offset: 64)
!7304 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !7298, file: !7299, line: 23, baseType: !292, size: 64, offset: 128)
!7305 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !7298, file: !7299, line: 24, baseType: !312, size: 64, offset: 192)
!7306 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !7298, file: !7299, line: 25, baseType: !312, size: 64, offset: 256)
!7307 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !7298, file: !7299, line: 26, baseType: !7297, size: 64, offset: 320)
!7308 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !7298, file: !7299, line: 26, baseType: !7297, size: 64, offset: 384)
!7309 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !7298, file: !7299, line: 26, baseType: !7297, size: 64, offset: 448)
!7310 = !DIDerivedType(tag: DW_TAG_member, name: "resources", scope: !7287, file: !7282, line: 614, baseType: !284, size: 128, offset: 896)
!7311 = !DIDerivedType(tag: DW_TAG_member, name: "busn_res", scope: !7287, file: !7282, line: 615, baseType: !7298, size: 512, offset: 1024)
!7312 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !7287, file: !7282, line: 617, baseType: !7313, size: 64, offset: 1536)
!7313 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7314, size: 64)
!7314 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_ops", file: !7282, line: 731, size: 320, elements: !7315)
!7315 = !{!7316, !7320, !7324, !7328, !7332}
!7316 = !DIDerivedType(tag: DW_TAG_member, name: "add_bus", scope: !7314, file: !7282, line: 732, baseType: !7317, size: 64)
!7317 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7318, size: 64)
!7318 = !DISubroutineType(types: !7319)
!7319 = !{!32, !7286}
!7320 = !DIDerivedType(tag: DW_TAG_member, name: "remove_bus", scope: !7314, file: !7282, line: 733, baseType: !7321, size: 64, offset: 64)
!7321 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7322, size: 64)
!7322 = !DISubroutineType(types: !7323)
!7323 = !{null, !7286}
!7324 = !DIDerivedType(tag: DW_TAG_member, name: "map_bus", scope: !7314, file: !7282, line: 734, baseType: !7325, size: 64, offset: 128)
!7325 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7326, size: 64)
!7326 = !DISubroutineType(types: !7327)
!7327 = !{!591, !7286, !7, !32}
!7328 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !7314, file: !7282, line: 735, baseType: !7329, size: 64, offset: 192)
!7329 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7330, size: 64)
!7330 = !DISubroutineType(types: !7331)
!7331 = !{!32, !7286, !7, !32, !32, !2516}
!7332 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !7314, file: !7282, line: 736, baseType: !7333, size: 64, offset: 256)
!7333 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7334, size: 64)
!7334 = !DISubroutineType(types: !7335)
!7335 = !{!32, !7286, !7, !32, !32, !987}
!7336 = !DIDerivedType(tag: DW_TAG_member, name: "msi", scope: !7287, file: !7282, line: 618, baseType: !7337, size: 64, offset: 1600)
!7337 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7338, size: 64)
!7338 = !DICompositeType(tag: DW_TAG_structure_type, name: "msi_controller", file: !7282, line: 537, flags: DIFlagFwdDecl)
!7339 = !DIDerivedType(tag: DW_TAG_member, name: "sysdata", scope: !7287, file: !7282, line: 619, baseType: !591, size: 64, offset: 1664)
!7340 = !DIDerivedType(tag: DW_TAG_member, name: "procdir", scope: !7287, file: !7282, line: 620, baseType: !3010, size: 64, offset: 1728)
!7341 = !DIDerivedType(tag: DW_TAG_member, name: "number", scope: !7287, file: !7282, line: 622, baseType: !482, size: 8, offset: 1792)
!7342 = !DIDerivedType(tag: DW_TAG_member, name: "primary", scope: !7287, file: !7282, line: 623, baseType: !482, size: 8, offset: 1800)
!7343 = !DIDerivedType(tag: DW_TAG_member, name: "max_bus_speed", scope: !7287, file: !7282, line: 624, baseType: !482, size: 8, offset: 1808)
!7344 = !DIDerivedType(tag: DW_TAG_member, name: "cur_bus_speed", scope: !7287, file: !7282, line: 625, baseType: !482, size: 8, offset: 1816)
!7345 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !7287, file: !7282, line: 630, baseType: !457, size: 384, offset: 1824)
!7346 = !DIDerivedType(tag: DW_TAG_member, name: "bridge_ctl", scope: !7287, file: !7282, line: 632, baseType: !476, size: 16, offset: 2208)
!7347 = !DIDerivedType(tag: DW_TAG_member, name: "bus_flags", scope: !7287, file: !7282, line: 633, baseType: !7348, size: 16, offset: 2224)
!7348 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_bus_flags_t", file: !7282, line: 237, baseType: !476)
!7349 = !DIDerivedType(tag: DW_TAG_member, name: "bridge", scope: !7287, file: !7282, line: 634, baseType: !6545, size: 64, offset: 2240)
!7350 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !7287, file: !7282, line: 635, baseType: !6540, size: 5568, offset: 2304)
!7351 = !DIDerivedType(tag: DW_TAG_member, name: "legacy_io", scope: !7287, file: !7282, line: 636, baseType: !6171, size: 64, offset: 7872)
!7352 = !DIDerivedType(tag: DW_TAG_member, name: "legacy_mem", scope: !7287, file: !7282, line: 637, baseType: !6171, size: 64, offset: 7936)
!7353 = !DIDerivedType(tag: DW_TAG_member, name: "is_added", scope: !7287, file: !7282, line: 638, baseType: !7, size: 1, offset: 8000, flags: DIFlagBitField, extraData: i64 8000)
!7354 = !DIDerivedType(tag: DW_TAG_member, name: "subordinate", scope: !7281, file: !7282, line: 312, baseType: !7286, size: 64, offset: 192)
!7355 = !DIDerivedType(tag: DW_TAG_member, name: "sysdata", scope: !7281, file: !7282, line: 314, baseType: !591, size: 64, offset: 256)
!7356 = !DIDerivedType(tag: DW_TAG_member, name: "procent", scope: !7281, file: !7282, line: 315, baseType: !3010, size: 64, offset: 320)
!7357 = !DIDerivedType(tag: DW_TAG_member, name: "slot", scope: !7281, file: !7282, line: 316, baseType: !7358, size: 64, offset: 384)
!7358 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7359, size: 64)
!7359 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_slot", file: !7282, line: 69, size: 832, elements: !7360)
!7360 = !{!7361, !7362, !7363, !7366, !7367}
!7361 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !7359, file: !7282, line: 70, baseType: !7286, size: 64)
!7362 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !7359, file: !7282, line: 71, baseType: !284, size: 128, offset: 64)
!7363 = !DIDerivedType(tag: DW_TAG_member, name: "hotplug", scope: !7359, file: !7282, line: 72, baseType: !7364, size: 64, offset: 192)
!7364 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7365, size: 64)
!7365 = !DICompositeType(tag: DW_TAG_structure_type, name: "hotplug_slot", file: !7282, line: 72, flags: DIFlagFwdDecl)
!7366 = !DIDerivedType(tag: DW_TAG_member, name: "number", scope: !7359, file: !7282, line: 73, baseType: !482, size: 8, offset: 256)
!7367 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !7359, file: !7282, line: 74, baseType: !6120, size: 512, offset: 320)
!7368 = !DIDerivedType(tag: DW_TAG_member, name: "devfn", scope: !7281, file: !7282, line: 318, baseType: !7, size: 32, offset: 448)
!7369 = !DIDerivedType(tag: DW_TAG_member, name: "vendor", scope: !7281, file: !7282, line: 319, baseType: !476, size: 16, offset: 480)
!7370 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !7281, file: !7282, line: 320, baseType: !476, size: 16, offset: 496)
!7371 = !DIDerivedType(tag: DW_TAG_member, name: "subsystem_vendor", scope: !7281, file: !7282, line: 321, baseType: !476, size: 16, offset: 512)
!7372 = !DIDerivedType(tag: DW_TAG_member, name: "subsystem_device", scope: !7281, file: !7282, line: 322, baseType: !476, size: 16, offset: 528)
!7373 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !7281, file: !7282, line: 323, baseType: !7, size: 32, offset: 544)
!7374 = !DIDerivedType(tag: DW_TAG_member, name: "revision", scope: !7281, file: !7282, line: 324, baseType: !794, size: 8, offset: 576)
!7375 = !DIDerivedType(tag: DW_TAG_member, name: "hdr_type", scope: !7281, file: !7282, line: 325, baseType: !794, size: 8, offset: 584)
!7376 = !DIDerivedType(tag: DW_TAG_member, name: "pcie_cap", scope: !7281, file: !7282, line: 330, baseType: !794, size: 8, offset: 592)
!7377 = !DIDerivedType(tag: DW_TAG_member, name: "msi_cap", scope: !7281, file: !7282, line: 331, baseType: !794, size: 8, offset: 600)
!7378 = !DIDerivedType(tag: DW_TAG_member, name: "msix_cap", scope: !7281, file: !7282, line: 332, baseType: !794, size: 8, offset: 608)
!7379 = !DIDerivedType(tag: DW_TAG_member, name: "pcie_mpss", scope: !7281, file: !7282, line: 333, baseType: !794, size: 3, offset: 616, flags: DIFlagBitField, extraData: i64 616)
!7380 = !DIDerivedType(tag: DW_TAG_member, name: "rom_base_reg", scope: !7281, file: !7282, line: 334, baseType: !794, size: 8, offset: 624)
!7381 = !DIDerivedType(tag: DW_TAG_member, name: "pin", scope: !7281, file: !7282, line: 335, baseType: !794, size: 8, offset: 632)
!7382 = !DIDerivedType(tag: DW_TAG_member, name: "pcie_flags_reg", scope: !7281, file: !7282, line: 336, baseType: !581, size: 16, offset: 640)
!7383 = !DIDerivedType(tag: DW_TAG_member, name: "dma_alias_mask", scope: !7281, file: !7282, line: 337, baseType: !3439, size: 64, offset: 704)
!7384 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !7281, file: !7282, line: 339, baseType: !7385, size: 64, offset: 768)
!7385 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7386, size: 64)
!7386 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_driver", file: !7282, line: 858, size: 2048, elements: !7387)
!7387 = !{!7388, !7389, !7390, !7402, !7406, !7410, !7414, !7418, !7419, !7423, !7442, !7443, !7444}
!7388 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !7386, file: !7282, line: 859, baseType: !284, size: 128)
!7389 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !7386, file: !7282, line: 860, baseType: !292, size: 64, offset: 128)
!7390 = !DIDerivedType(tag: DW_TAG_member, name: "id_table", scope: !7386, file: !7282, line: 861, baseType: !7391, size: 64, offset: 192)
!7391 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7392, size: 64)
!7392 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7393)
!7393 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_device_id", file: !6636, line: 38, size: 256, elements: !7394)
!7394 = !{!7395, !7396, !7397, !7398, !7399, !7400, !7401}
!7395 = !DIDerivedType(tag: DW_TAG_member, name: "vendor", scope: !7393, file: !6636, line: 39, baseType: !493, size: 32)
!7396 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !7393, file: !6636, line: 39, baseType: !493, size: 32, offset: 32)
!7397 = !DIDerivedType(tag: DW_TAG_member, name: "subvendor", scope: !7393, file: !6636, line: 40, baseType: !493, size: 32, offset: 64)
!7398 = !DIDerivedType(tag: DW_TAG_member, name: "subdevice", scope: !7393, file: !6636, line: 40, baseType: !493, size: 32, offset: 96)
!7399 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !7393, file: !6636, line: 41, baseType: !493, size: 32, offset: 128)
!7400 = !DIDerivedType(tag: DW_TAG_member, name: "class_mask", scope: !7393, file: !6636, line: 41, baseType: !493, size: 32, offset: 160)
!7401 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !7393, file: !6636, line: 42, baseType: !6650, size: 64, offset: 192)
!7402 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !7386, file: !7282, line: 862, baseType: !7403, size: 64, offset: 256)
!7403 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7404, size: 64)
!7404 = !DISubroutineType(types: !7405)
!7405 = !{!32, !7280, !7391}
!7406 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !7386, file: !7282, line: 863, baseType: !7407, size: 64, offset: 320)
!7407 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7408, size: 64)
!7408 = !DISubroutineType(types: !7409)
!7409 = !{null, !7280}
!7410 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !7386, file: !7282, line: 864, baseType: !7411, size: 64, offset: 384)
!7411 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7412, size: 64)
!7412 = !DISubroutineType(types: !7413)
!7413 = !{!32, !7280, !6661}
!7414 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !7386, file: !7282, line: 865, baseType: !7415, size: 64, offset: 448)
!7415 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7416, size: 64)
!7416 = !DISubroutineType(types: !7417)
!7417 = !{!32, !7280}
!7418 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !7386, file: !7282, line: 866, baseType: !7407, size: 64, offset: 512)
!7419 = !DIDerivedType(tag: DW_TAG_member, name: "sriov_configure", scope: !7386, file: !7282, line: 867, baseType: !7420, size: 64, offset: 576)
!7420 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7421, size: 64)
!7421 = !DISubroutineType(types: !7422)
!7422 = !{!32, !7280, !32}
!7423 = !DIDerivedType(tag: DW_TAG_member, name: "err_handler", scope: !7386, file: !7282, line: 868, baseType: !7424, size: 64, offset: 640)
!7424 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7425, size: 64)
!7425 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7426)
!7426 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_error_handlers", file: !7282, line: 795, size: 384, elements: !7427)
!7427 = !{!7428, !7434, !7438, !7439, !7440, !7441}
!7428 = !DIDerivedType(tag: DW_TAG_member, name: "error_detected", scope: !7426, file: !7282, line: 797, baseType: !7429, size: 64)
!7429 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7430, size: 64)
!7430 = !DISubroutineType(types: !7431)
!7431 = !{!7432, !7280, !7433}
!7432 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_ers_result_t", file: !7282, line: 772, baseType: !7)
!7433 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_channel_state_t", file: !7282, line: 180, baseType: !7)
!7434 = !DIDerivedType(tag: DW_TAG_member, name: "mmio_enabled", scope: !7426, file: !7282, line: 801, baseType: !7435, size: 64, offset: 64)
!7435 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7436, size: 64)
!7436 = !DISubroutineType(types: !7437)
!7437 = !{!7432, !7280}
!7438 = !DIDerivedType(tag: DW_TAG_member, name: "slot_reset", scope: !7426, file: !7282, line: 804, baseType: !7435, size: 64, offset: 128)
!7439 = !DIDerivedType(tag: DW_TAG_member, name: "reset_prepare", scope: !7426, file: !7282, line: 807, baseType: !7407, size: 64, offset: 192)
!7440 = !DIDerivedType(tag: DW_TAG_member, name: "reset_done", scope: !7426, file: !7282, line: 808, baseType: !7407, size: 64, offset: 256)
!7441 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !7426, file: !7282, line: 811, baseType: !7407, size: 64, offset: 320)
!7442 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !7386, file: !7282, line: 869, baseType: !6157, size: 64, offset: 704)
!7443 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !7386, file: !7282, line: 870, baseType: !6618, size: 1152, offset: 768)
!7444 = !DIDerivedType(tag: DW_TAG_member, name: "dynids", scope: !7386, file: !7282, line: 871, baseType: !7445, size: 128, offset: 1920)
!7445 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_dynids", file: !7282, line: 759, size: 128, elements: !7446)
!7446 = !{!7447, !7448}
!7447 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !7445, file: !7282, line: 760, baseType: !1670)
!7448 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !7445, file: !7282, line: 761, baseType: !284, size: 128)
!7449 = !DIDerivedType(tag: DW_TAG_member, name: "dma_mask", scope: !7281, file: !7282, line: 340, baseType: !331, size: 64, offset: 832)
!7450 = !DIDerivedType(tag: DW_TAG_member, name: "dma_parms", scope: !7281, file: !7282, line: 346, baseType: !6851, size: 128, offset: 896)
!7451 = !DIDerivedType(tag: DW_TAG_member, name: "current_state", scope: !7281, file: !7282, line: 348, baseType: !7452, size: 32, offset: 1024)
!7452 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_power_t", file: !7282, line: 155, baseType: !32)
!7453 = !DIDerivedType(tag: DW_TAG_member, name: "imm_ready", scope: !7281, file: !7282, line: 351, baseType: !7, size: 1, offset: 1056, flags: DIFlagBitField, extraData: i64 1056)
!7454 = !DIDerivedType(tag: DW_TAG_member, name: "pm_cap", scope: !7281, file: !7282, line: 352, baseType: !794, size: 8, offset: 1064)
!7455 = !DIDerivedType(tag: DW_TAG_member, name: "pme_support", scope: !7281, file: !7282, line: 353, baseType: !7, size: 5, offset: 1072, flags: DIFlagBitField, extraData: i64 1072)
!7456 = !DIDerivedType(tag: DW_TAG_member, name: "pme_poll", scope: !7281, file: !7282, line: 355, baseType: !7, size: 1, offset: 1077, flags: DIFlagBitField, extraData: i64 1072)
!7457 = !DIDerivedType(tag: DW_TAG_member, name: "d1_support", scope: !7281, file: !7282, line: 356, baseType: !7, size: 1, offset: 1078, flags: DIFlagBitField, extraData: i64 1072)
!7458 = !DIDerivedType(tag: DW_TAG_member, name: "d2_support", scope: !7281, file: !7282, line: 357, baseType: !7, size: 1, offset: 1079, flags: DIFlagBitField, extraData: i64 1072)
!7459 = !DIDerivedType(tag: DW_TAG_member, name: "no_d1d2", scope: !7281, file: !7282, line: 358, baseType: !7, size: 1, offset: 1080, flags: DIFlagBitField, extraData: i64 1072)
!7460 = !DIDerivedType(tag: DW_TAG_member, name: "no_d3cold", scope: !7281, file: !7282, line: 359, baseType: !7, size: 1, offset: 1081, flags: DIFlagBitField, extraData: i64 1072)
!7461 = !DIDerivedType(tag: DW_TAG_member, name: "bridge_d3", scope: !7281, file: !7282, line: 360, baseType: !7, size: 1, offset: 1082, flags: DIFlagBitField, extraData: i64 1072)
!7462 = !DIDerivedType(tag: DW_TAG_member, name: "d3cold_allowed", scope: !7281, file: !7282, line: 361, baseType: !7, size: 1, offset: 1083, flags: DIFlagBitField, extraData: i64 1072)
!7463 = !DIDerivedType(tag: DW_TAG_member, name: "mmio_always_on", scope: !7281, file: !7282, line: 362, baseType: !7, size: 1, offset: 1084, flags: DIFlagBitField, extraData: i64 1072)
!7464 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_prepared", scope: !7281, file: !7282, line: 364, baseType: !7, size: 1, offset: 1085, flags: DIFlagBitField, extraData: i64 1072)
!7465 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_d3cold", scope: !7281, file: !7282, line: 365, baseType: !7, size: 1, offset: 1086, flags: DIFlagBitField, extraData: i64 1072)
!7466 = !DIDerivedType(tag: DW_TAG_member, name: "skip_bus_pm", scope: !7281, file: !7282, line: 369, baseType: !7, size: 1, offset: 1087, flags: DIFlagBitField, extraData: i64 1072)
!7467 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_hotplug", scope: !7281, file: !7282, line: 370, baseType: !7, size: 1, offset: 1088, flags: DIFlagBitField, extraData: i64 1072)
!7468 = !DIDerivedType(tag: DW_TAG_member, name: "hotplug_user_indicators", scope: !7281, file: !7282, line: 371, baseType: !7, size: 1, offset: 1089, flags: DIFlagBitField, extraData: i64 1072)
!7469 = !DIDerivedType(tag: DW_TAG_member, name: "clear_retrain_link", scope: !7281, file: !7282, line: 374, baseType: !7, size: 1, offset: 1090, flags: DIFlagBitField, extraData: i64 1072)
!7470 = !DIDerivedType(tag: DW_TAG_member, name: "d3hot_delay", scope: !7281, file: !7282, line: 376, baseType: !7, size: 32, offset: 1120)
!7471 = !DIDerivedType(tag: DW_TAG_member, name: "d3cold_delay", scope: !7281, file: !7282, line: 377, baseType: !7, size: 32, offset: 1152)
!7472 = !DIDerivedType(tag: DW_TAG_member, name: "link_state", scope: !7281, file: !7282, line: 380, baseType: !7473, size: 64, offset: 1216)
!7473 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7474, size: 64)
!7474 = !DICompositeType(tag: DW_TAG_structure_type, name: "pcie_link_state", file: !7282, line: 303, flags: DIFlagFwdDecl)
!7475 = !DIDerivedType(tag: DW_TAG_member, name: "ltr_path", scope: !7281, file: !7282, line: 381, baseType: !7, size: 1, offset: 1280, flags: DIFlagBitField, extraData: i64 1280)
!7476 = !DIDerivedType(tag: DW_TAG_member, name: "l1ss", scope: !7281, file: !7282, line: 383, baseType: !32, size: 32, offset: 1312)
!7477 = !DIDerivedType(tag: DW_TAG_member, name: "eetlp_prefix_path", scope: !7281, file: !7282, line: 385, baseType: !7, size: 1, offset: 1344, flags: DIFlagBitField, extraData: i64 1344)
!7478 = !DIDerivedType(tag: DW_TAG_member, name: "error_state", scope: !7281, file: !7282, line: 387, baseType: !7433, size: 32, offset: 1376)
!7479 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !7281, file: !7282, line: 388, baseType: !6540, size: 5568, offset: 1408)
!7480 = !DIDerivedType(tag: DW_TAG_member, name: "cfg_size", scope: !7281, file: !7282, line: 390, baseType: !32, size: 32, offset: 6976)
!7481 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !7281, file: !7282, line: 396, baseType: !7, size: 32, offset: 7008)
!7482 = !DIDerivedType(tag: DW_TAG_member, name: "resource", scope: !7281, file: !7282, line: 397, baseType: !7483, size: 8704, offset: 7040)
!7483 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7298, size: 8704, elements: !7484)
!7484 = !{!7485}
!7485 = !DISubrange(count: 17)
!7486 = !DIDerivedType(tag: DW_TAG_member, name: "match_driver", scope: !7281, file: !7282, line: 399, baseType: !771, size: 8, offset: 15744)
!7487 = !DIDerivedType(tag: DW_TAG_member, name: "transparent", scope: !7281, file: !7282, line: 401, baseType: !7, size: 1, offset: 15752, flags: DIFlagBitField, extraData: i64 15752)
!7488 = !DIDerivedType(tag: DW_TAG_member, name: "io_window", scope: !7281, file: !7282, line: 402, baseType: !7, size: 1, offset: 15753, flags: DIFlagBitField, extraData: i64 15752)
!7489 = !DIDerivedType(tag: DW_TAG_member, name: "pref_window", scope: !7281, file: !7282, line: 403, baseType: !7, size: 1, offset: 15754, flags: DIFlagBitField, extraData: i64 15752)
!7490 = !DIDerivedType(tag: DW_TAG_member, name: "pref_64_window", scope: !7281, file: !7282, line: 404, baseType: !7, size: 1, offset: 15755, flags: DIFlagBitField, extraData: i64 15752)
!7491 = !DIDerivedType(tag: DW_TAG_member, name: "multifunction", scope: !7281, file: !7282, line: 405, baseType: !7, size: 1, offset: 15756, flags: DIFlagBitField, extraData: i64 15752)
!7492 = !DIDerivedType(tag: DW_TAG_member, name: "is_busmaster", scope: !7281, file: !7282, line: 407, baseType: !7, size: 1, offset: 15757, flags: DIFlagBitField, extraData: i64 15752)
!7493 = !DIDerivedType(tag: DW_TAG_member, name: "no_msi", scope: !7281, file: !7282, line: 408, baseType: !7, size: 1, offset: 15758, flags: DIFlagBitField, extraData: i64 15752)
!7494 = !DIDerivedType(tag: DW_TAG_member, name: "no_64bit_msi", scope: !7281, file: !7282, line: 409, baseType: !7, size: 1, offset: 15759, flags: DIFlagBitField, extraData: i64 15752)
!7495 = !DIDerivedType(tag: DW_TAG_member, name: "block_cfg_access", scope: !7281, file: !7282, line: 410, baseType: !7, size: 1, offset: 15760, flags: DIFlagBitField, extraData: i64 15752)
!7496 = !DIDerivedType(tag: DW_TAG_member, name: "broken_parity_status", scope: !7281, file: !7282, line: 411, baseType: !7, size: 1, offset: 15761, flags: DIFlagBitField, extraData: i64 15752)
!7497 = !DIDerivedType(tag: DW_TAG_member, name: "irq_reroute_variant", scope: !7281, file: !7282, line: 412, baseType: !7, size: 2, offset: 15762, flags: DIFlagBitField, extraData: i64 15752)
!7498 = !DIDerivedType(tag: DW_TAG_member, name: "msi_enabled", scope: !7281, file: !7282, line: 413, baseType: !7, size: 1, offset: 15764, flags: DIFlagBitField, extraData: i64 15752)
!7499 = !DIDerivedType(tag: DW_TAG_member, name: "msix_enabled", scope: !7281, file: !7282, line: 414, baseType: !7, size: 1, offset: 15765, flags: DIFlagBitField, extraData: i64 15752)
!7500 = !DIDerivedType(tag: DW_TAG_member, name: "ari_enabled", scope: !7281, file: !7282, line: 415, baseType: !7, size: 1, offset: 15766, flags: DIFlagBitField, extraData: i64 15752)
!7501 = !DIDerivedType(tag: DW_TAG_member, name: "ats_enabled", scope: !7281, file: !7282, line: 416, baseType: !7, size: 1, offset: 15767, flags: DIFlagBitField, extraData: i64 15752)
!7502 = !DIDerivedType(tag: DW_TAG_member, name: "pasid_enabled", scope: !7281, file: !7282, line: 417, baseType: !7, size: 1, offset: 15768, flags: DIFlagBitField, extraData: i64 15752)
!7503 = !DIDerivedType(tag: DW_TAG_member, name: "pri_enabled", scope: !7281, file: !7282, line: 418, baseType: !7, size: 1, offset: 15769, flags: DIFlagBitField, extraData: i64 15752)
!7504 = !DIDerivedType(tag: DW_TAG_member, name: "is_managed", scope: !7281, file: !7282, line: 419, baseType: !7, size: 1, offset: 15770, flags: DIFlagBitField, extraData: i64 15752)
!7505 = !DIDerivedType(tag: DW_TAG_member, name: "needs_freset", scope: !7281, file: !7282, line: 420, baseType: !7, size: 1, offset: 15771, flags: DIFlagBitField, extraData: i64 15752)
!7506 = !DIDerivedType(tag: DW_TAG_member, name: "state_saved", scope: !7281, file: !7282, line: 421, baseType: !7, size: 1, offset: 15772, flags: DIFlagBitField, extraData: i64 15752)
!7507 = !DIDerivedType(tag: DW_TAG_member, name: "is_physfn", scope: !7281, file: !7282, line: 422, baseType: !7, size: 1, offset: 15773, flags: DIFlagBitField, extraData: i64 15752)
!7508 = !DIDerivedType(tag: DW_TAG_member, name: "is_virtfn", scope: !7281, file: !7282, line: 423, baseType: !7, size: 1, offset: 15774, flags: DIFlagBitField, extraData: i64 15752)
!7509 = !DIDerivedType(tag: DW_TAG_member, name: "reset_fn", scope: !7281, file: !7282, line: 424, baseType: !7, size: 1, offset: 15775, flags: DIFlagBitField, extraData: i64 15752)
!7510 = !DIDerivedType(tag: DW_TAG_member, name: "is_hotplug_bridge", scope: !7281, file: !7282, line: 425, baseType: !7, size: 1, offset: 15776, flags: DIFlagBitField, extraData: i64 15752)
!7511 = !DIDerivedType(tag: DW_TAG_member, name: "shpc_managed", scope: !7281, file: !7282, line: 426, baseType: !7, size: 1, offset: 15777, flags: DIFlagBitField, extraData: i64 15752)
!7512 = !DIDerivedType(tag: DW_TAG_member, name: "is_thunderbolt", scope: !7281, file: !7282, line: 427, baseType: !7, size: 1, offset: 15778, flags: DIFlagBitField, extraData: i64 15752)
!7513 = !DIDerivedType(tag: DW_TAG_member, name: "untrusted", scope: !7281, file: !7282, line: 435, baseType: !7, size: 1, offset: 15779, flags: DIFlagBitField, extraData: i64 15752)
!7514 = !DIDerivedType(tag: DW_TAG_member, name: "external_facing", scope: !7281, file: !7282, line: 441, baseType: !7, size: 1, offset: 15780, flags: DIFlagBitField, extraData: i64 15752)
!7515 = !DIDerivedType(tag: DW_TAG_member, name: "broken_intx_masking", scope: !7281, file: !7282, line: 442, baseType: !7, size: 1, offset: 15781, flags: DIFlagBitField, extraData: i64 15752)
!7516 = !DIDerivedType(tag: DW_TAG_member, name: "io_window_1k", scope: !7281, file: !7282, line: 443, baseType: !7, size: 1, offset: 15782, flags: DIFlagBitField, extraData: i64 15752)
!7517 = !DIDerivedType(tag: DW_TAG_member, name: "irq_managed", scope: !7281, file: !7282, line: 444, baseType: !7, size: 1, offset: 15783, flags: DIFlagBitField, extraData: i64 15752)
!7518 = !DIDerivedType(tag: DW_TAG_member, name: "non_compliant_bars", scope: !7281, file: !7282, line: 445, baseType: !7, size: 1, offset: 15784, flags: DIFlagBitField, extraData: i64 15752)
!7519 = !DIDerivedType(tag: DW_TAG_member, name: "is_probed", scope: !7281, file: !7282, line: 446, baseType: !7, size: 1, offset: 15785, flags: DIFlagBitField, extraData: i64 15752)
!7520 = !DIDerivedType(tag: DW_TAG_member, name: "link_active_reporting", scope: !7281, file: !7282, line: 447, baseType: !7, size: 1, offset: 15786, flags: DIFlagBitField, extraData: i64 15752)
!7521 = !DIDerivedType(tag: DW_TAG_member, name: "no_vf_scan", scope: !7281, file: !7282, line: 448, baseType: !7, size: 1, offset: 15787, flags: DIFlagBitField, extraData: i64 15752)
!7522 = !DIDerivedType(tag: DW_TAG_member, name: "no_command_memory", scope: !7281, file: !7282, line: 449, baseType: !7, size: 1, offset: 15788, flags: DIFlagBitField, extraData: i64 15752)
!7523 = !DIDerivedType(tag: DW_TAG_member, name: "dev_flags", scope: !7281, file: !7282, line: 450, baseType: !7524, size: 16, offset: 15792)
!7524 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_dev_flags_t", file: !7282, line: 206, baseType: !476)
!7525 = !DIDerivedType(tag: DW_TAG_member, name: "enable_cnt", scope: !7281, file: !7282, line: 451, baseType: !383, size: 32, offset: 15808)
!7526 = !DIDerivedType(tag: DW_TAG_member, name: "saved_config_space", scope: !7281, file: !7282, line: 453, baseType: !7527, size: 512, offset: 15840)
!7527 = !DICompositeType(tag: DW_TAG_array_type, baseType: !987, size: 512, elements: !269)
!7528 = !DIDerivedType(tag: DW_TAG_member, name: "saved_cap_space", scope: !7281, file: !7282, line: 454, baseType: !1581, size: 64, offset: 16384)
!7529 = !DIDerivedType(tag: DW_TAG_member, name: "rom_attr", scope: !7281, file: !7282, line: 455, baseType: !6171, size: 64, offset: 16448)
!7530 = !DIDerivedType(tag: DW_TAG_member, name: "rom_attr_enabled", scope: !7281, file: !7282, line: 456, baseType: !32, size: 32, offset: 16512)
!7531 = !DIDerivedType(tag: DW_TAG_member, name: "res_attr", scope: !7281, file: !7282, line: 457, baseType: !7532, size: 1088, offset: 16576)
!7532 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6171, size: 1088, elements: !7484)
!7533 = !DIDerivedType(tag: DW_TAG_member, name: "res_attr_wc", scope: !7281, file: !7282, line: 458, baseType: !7532, size: 1088, offset: 17664)
!7534 = !DIDerivedType(tag: DW_TAG_member, name: "msi_irq_groups", scope: !7281, file: !7282, line: 469, baseType: !6157, size: 64, offset: 18752)
!7535 = !DIDerivedType(tag: DW_TAG_member, name: "vpd", scope: !7281, file: !7282, line: 471, baseType: !7536, size: 64, offset: 18816)
!7536 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7537, size: 64)
!7537 = !DICompositeType(tag: DW_TAG_structure_type, name: "pci_vpd", file: !7282, line: 304, flags: DIFlagFwdDecl)
!7538 = !DIDerivedType(tag: DW_TAG_member, scope: !7281, file: !7282, line: 478, baseType: !7539, size: 64, offset: 18880)
!7539 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7281, file: !7282, line: 478, size: 64, elements: !7540)
!7540 = !{!7541, !7544}
!7541 = !DIDerivedType(tag: DW_TAG_member, name: "sriov", scope: !7539, file: !7282, line: 479, baseType: !7542, size: 64)
!7542 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7543, size: 64)
!7543 = !DICompositeType(tag: DW_TAG_structure_type, name: "pci_sriov", file: !7282, line: 305, flags: DIFlagFwdDecl)
!7544 = !DIDerivedType(tag: DW_TAG_member, name: "physfn", scope: !7539, file: !7282, line: 480, baseType: !7280, size: 64)
!7545 = !DIDerivedType(tag: DW_TAG_member, name: "ats_cap", scope: !7281, file: !7282, line: 482, baseType: !581, size: 16, offset: 18944)
!7546 = !DIDerivedType(tag: DW_TAG_member, name: "ats_stu", scope: !7281, file: !7282, line: 483, baseType: !794, size: 8, offset: 18960)
!7547 = !DIDerivedType(tag: DW_TAG_member, name: "acs_cap", scope: !7281, file: !7282, line: 497, baseType: !581, size: 16, offset: 18976)
!7548 = !DIDerivedType(tag: DW_TAG_member, name: "rom", scope: !7281, file: !7282, line: 498, baseType: !4045, size: 64, offset: 19008)
!7549 = !DIDerivedType(tag: DW_TAG_member, name: "romlen", scope: !7281, file: !7282, line: 499, baseType: !1039, size: 64, offset: 19072)
!7550 = !DIDerivedType(tag: DW_TAG_member, name: "driver_override", scope: !7281, file: !7282, line: 500, baseType: !1038, size: 64, offset: 19136)
!7551 = !DIDerivedType(tag: DW_TAG_member, name: "priv_flags", scope: !7281, file: !7282, line: 502, baseType: !312, size: 64, offset: 19200)
!7552 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7553, size: 64)
!7553 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !482)
!7554 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7555, size: 64)
!7555 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "happy_meal", file: !7054, line: 401, size: 5952, elements: !7556)
!7556 = !{!7557, !7558, !7577, !7578, !7579, !7580, !7582, !7583, !7584, !7585, !7586, !7587, !7588, !7589, !7590, !7591, !7592, !7593, !7594, !7595, !7596, !7597, !7598, !7599, !7600, !7601, !7602, !7603, !7604, !7605, !7606, !7607, !7608, !7609, !7610, !7611, !7612, !7613, !7614, !7615, !7616, !7617, !7618, !7627}
!7557 = !DIDerivedType(tag: DW_TAG_member, name: "gregs", scope: !7555, file: !7054, line: 402, baseType: !591, size: 64)
!7558 = !DIDerivedType(tag: DW_TAG_member, name: "happy_block", scope: !7555, file: !7054, line: 403, baseType: !7559, size: 64, offset: 64)
!7559 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7560, size: 64)
!7560 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hmeal_init_block", file: !7054, line: 375, size: 32768, elements: !7561)
!7561 = !{!7562, !7571}
!7562 = !DIDerivedType(tag: DW_TAG_member, name: "happy_meal_rxd", scope: !7560, file: !7054, line: 376, baseType: !7563, size: 16384)
!7563 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7564, size: 16384, elements: !7569)
!7564 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "happy_meal_rxd", file: !7054, line: 308, size: 64, elements: !7565)
!7565 = !{!7566, !7568}
!7566 = !DIDerivedType(tag: DW_TAG_member, name: "rx_flags", scope: !7564, file: !7054, line: 309, baseType: !7567, size: 32)
!7567 = !DIDerivedType(tag: DW_TAG_typedef, name: "hme32", file: !7054, line: 306, baseType: !987)
!7568 = !DIDerivedType(tag: DW_TAG_member, name: "rx_addr", scope: !7564, file: !7054, line: 310, baseType: !7567, size: 32, offset: 32)
!7569 = !{!7570}
!7570 = !DISubrange(count: 256)
!7571 = !DIDerivedType(tag: DW_TAG_member, name: "happy_meal_txd", scope: !7560, file: !7054, line: 377, baseType: !7572, size: 16384, offset: 16384)
!7572 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7573, size: 16384, elements: !7569)
!7573 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "happy_meal_txd", file: !7054, line: 318, size: 64, elements: !7574)
!7574 = !{!7575, !7576}
!7575 = !DIDerivedType(tag: DW_TAG_member, name: "tx_flags", scope: !7573, file: !7054, line: 319, baseType: !7567, size: 32)
!7576 = !DIDerivedType(tag: DW_TAG_member, name: "tx_addr", scope: !7573, file: !7054, line: 320, baseType: !7567, size: 32, offset: 32)
!7577 = !DIDerivedType(tag: DW_TAG_member, name: "happy_dev", scope: !7555, file: !7054, line: 412, baseType: !591, size: 64, offset: 128)
!7578 = !DIDerivedType(tag: DW_TAG_member, name: "dma_dev", scope: !7555, file: !7054, line: 413, baseType: !6545, size: 64, offset: 192)
!7579 = !DIDerivedType(tag: DW_TAG_member, name: "happy_lock", scope: !7555, file: !7054, line: 415, baseType: !1670, offset: 256)
!7580 = !DIDerivedType(tag: DW_TAG_member, name: "rx_skbs", scope: !7555, file: !7054, line: 417, baseType: !7581, size: 2048, offset: 256)
!7581 = !DICompositeType(tag: DW_TAG_array_type, baseType: !415, size: 2048, elements: !819)
!7582 = !DIDerivedType(tag: DW_TAG_member, name: "tx_skbs", scope: !7555, file: !7054, line: 418, baseType: !7581, size: 2048, offset: 2304)
!7583 = !DIDerivedType(tag: DW_TAG_member, name: "rx_new", scope: !7555, file: !7054, line: 420, baseType: !32, size: 32, offset: 4352)
!7584 = !DIDerivedType(tag: DW_TAG_member, name: "tx_new", scope: !7555, file: !7054, line: 420, baseType: !32, size: 32, offset: 4384)
!7585 = !DIDerivedType(tag: DW_TAG_member, name: "rx_old", scope: !7555, file: !7054, line: 420, baseType: !32, size: 32, offset: 4416)
!7586 = !DIDerivedType(tag: DW_TAG_member, name: "tx_old", scope: !7555, file: !7054, line: 420, baseType: !32, size: 32, offset: 4448)
!7587 = !DIDerivedType(tag: DW_TAG_member, name: "etxregs", scope: !7555, file: !7054, line: 427, baseType: !591, size: 64, offset: 4480)
!7588 = !DIDerivedType(tag: DW_TAG_member, name: "erxregs", scope: !7555, file: !7054, line: 428, baseType: !591, size: 64, offset: 4544)
!7589 = !DIDerivedType(tag: DW_TAG_member, name: "bigmacregs", scope: !7555, file: !7054, line: 429, baseType: !591, size: 64, offset: 4608)
!7590 = !DIDerivedType(tag: DW_TAG_member, name: "tcvregs", scope: !7555, file: !7054, line: 430, baseType: !591, size: 64, offset: 4672)
!7591 = !DIDerivedType(tag: DW_TAG_member, name: "hblock_dvma", scope: !7555, file: !7054, line: 432, baseType: !2036, size: 64, offset: 4736)
!7592 = !DIDerivedType(tag: DW_TAG_member, name: "happy_flags", scope: !7555, file: !7054, line: 433, baseType: !7, size: 32, offset: 4800)
!7593 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !7555, file: !7054, line: 434, baseType: !32, size: 32, offset: 4832)
!7594 = !DIDerivedType(tag: DW_TAG_member, name: "tcvr_type", scope: !7555, file: !7054, line: 435, baseType: !7053, size: 32, offset: 4864)
!7595 = !DIDerivedType(tag: DW_TAG_member, name: "happy_bursts", scope: !7555, file: !7054, line: 436, baseType: !7, size: 32, offset: 4896)
!7596 = !DIDerivedType(tag: DW_TAG_member, name: "paddr", scope: !7555, file: !7054, line: 437, baseType: !7, size: 32, offset: 4928)
!7597 = !DIDerivedType(tag: DW_TAG_member, name: "hm_revision", scope: !7555, file: !7054, line: 438, baseType: !476, size: 16, offset: 4960)
!7598 = !DIDerivedType(tag: DW_TAG_member, name: "sw_bmcr", scope: !7555, file: !7054, line: 439, baseType: !476, size: 16, offset: 4976)
!7599 = !DIDerivedType(tag: DW_TAG_member, name: "sw_bmsr", scope: !7555, file: !7054, line: 440, baseType: !476, size: 16, offset: 4992)
!7600 = !DIDerivedType(tag: DW_TAG_member, name: "sw_physid1", scope: !7555, file: !7054, line: 441, baseType: !476, size: 16, offset: 5008)
!7601 = !DIDerivedType(tag: DW_TAG_member, name: "sw_physid2", scope: !7555, file: !7054, line: 442, baseType: !476, size: 16, offset: 5024)
!7602 = !DIDerivedType(tag: DW_TAG_member, name: "sw_advertise", scope: !7555, file: !7054, line: 443, baseType: !476, size: 16, offset: 5040)
!7603 = !DIDerivedType(tag: DW_TAG_member, name: "sw_lpa", scope: !7555, file: !7054, line: 444, baseType: !476, size: 16, offset: 5056)
!7604 = !DIDerivedType(tag: DW_TAG_member, name: "sw_expansion", scope: !7555, file: !7054, line: 445, baseType: !476, size: 16, offset: 5072)
!7605 = !DIDerivedType(tag: DW_TAG_member, name: "sw_csconfig", scope: !7555, file: !7054, line: 446, baseType: !476, size: 16, offset: 5088)
!7606 = !DIDerivedType(tag: DW_TAG_member, name: "auto_speed", scope: !7555, file: !7054, line: 447, baseType: !7, size: 32, offset: 5120)
!7607 = !DIDerivedType(tag: DW_TAG_member, name: "forced_speed", scope: !7555, file: !7054, line: 448, baseType: !7, size: 32, offset: 5152)
!7608 = !DIDerivedType(tag: DW_TAG_member, name: "poll_data", scope: !7555, file: !7054, line: 449, baseType: !7, size: 32, offset: 5184)
!7609 = !DIDerivedType(tag: DW_TAG_member, name: "poll_flag", scope: !7555, file: !7054, line: 450, baseType: !7, size: 32, offset: 5216)
!7610 = !DIDerivedType(tag: DW_TAG_member, name: "linkcheck", scope: !7555, file: !7054, line: 451, baseType: !7, size: 32, offset: 5248)
!7611 = !DIDerivedType(tag: DW_TAG_member, name: "lnkup", scope: !7555, file: !7054, line: 452, baseType: !7, size: 32, offset: 5280)
!7612 = !DIDerivedType(tag: DW_TAG_member, name: "lnkdown", scope: !7555, file: !7054, line: 453, baseType: !7, size: 32, offset: 5312)
!7613 = !DIDerivedType(tag: DW_TAG_member, name: "lnkcnt", scope: !7555, file: !7054, line: 454, baseType: !7, size: 32, offset: 5344)
!7614 = !DIDerivedType(tag: DW_TAG_member, name: "happy_timer", scope: !7555, file: !7054, line: 455, baseType: !3235, size: 320, offset: 5376)
!7615 = !DIDerivedType(tag: DW_TAG_member, name: "timer_state", scope: !7555, file: !7054, line: 456, baseType: !7059, size: 32, offset: 5696)
!7616 = !DIDerivedType(tag: DW_TAG_member, name: "timer_ticks", scope: !7555, file: !7054, line: 457, baseType: !7, size: 32, offset: 5728)
!7617 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !7555, file: !7054, line: 459, baseType: !290, size: 64, offset: 5760)
!7618 = !DIDerivedType(tag: DW_TAG_member, name: "qfe_parent", scope: !7555, file: !7054, line: 460, baseType: !7619, size: 64, offset: 5824)
!7619 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7620, size: 64)
!7620 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quattro", file: !7054, line: 483, size: 448, elements: !7621)
!7621 = !{!7622, !7624, !7625, !7626}
!7622 = !DIDerivedType(tag: DW_TAG_member, name: "happy_meals", scope: !7620, file: !7054, line: 484, baseType: !7623, size: 256)
!7623 = !DICompositeType(tag: DW_TAG_array_type, baseType: !290, size: 256, elements: !2272)
!7624 = !DIDerivedType(tag: DW_TAG_member, name: "quattro_dev", scope: !7620, file: !7054, line: 487, baseType: !591, size: 64, offset: 256)
!7625 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !7620, file: !7054, line: 489, baseType: !7619, size: 64, offset: 320)
!7626 = !DIDerivedType(tag: DW_TAG_member, name: "nranges", scope: !7620, file: !7054, line: 495, baseType: !32, size: 32, offset: 384)
!7627 = !DIDerivedType(tag: DW_TAG_member, name: "qfe_ent", scope: !7555, file: !7054, line: 461, baseType: !32, size: 32, offset: 5888)
!7628 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7629, size: 64)
!7629 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !7)
!7630 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7631, size: 64)
!7631 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netdev_hw_addr", file: !31, line: 209, size: 640, elements: !7632)
!7632 = !{!7633, !7634, !7635, !7636, !7637, !7638, !7639, !7640}
!7633 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !7631, file: !31, line: 210, baseType: !284, size: 128)
!7634 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !7631, file: !31, line: 211, baseType: !1031, size: 256, offset: 128)
!7635 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !7631, file: !31, line: 212, baseType: !482, size: 8, offset: 384)
!7636 = !DIDerivedType(tag: DW_TAG_member, name: "global_use", scope: !7631, file: !31, line: 217, baseType: !771, size: 8, offset: 392)
!7637 = !DIDerivedType(tag: DW_TAG_member, name: "sync_cnt", scope: !7631, file: !31, line: 218, baseType: !32, size: 32, offset: 416)
!7638 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !7631, file: !31, line: 219, baseType: !32, size: 32, offset: 448)
!7639 = !DIDerivedType(tag: DW_TAG_member, name: "synced", scope: !7631, file: !31, line: 220, baseType: !32, size: 32, offset: 480)
!7640 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !7631, file: !31, line: 221, baseType: !299, size: 128, align: 64, offset: 512)
!7641 = !DIDerivedType(tag: DW_TAG_typedef, name: "__le32", file: !525, line: 31, baseType: !493)
!7642 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7643, size: 64)
!7643 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "skb_shared_info", file: !417, line: 512, size: 2560, elements: !7644)
!7644 = !{!7645, !7646, !7647, !7648, !7649, !7650, !7651, !7652, !7656, !7657, !7658, !7659, !7660}
!7645 = !DIDerivedType(tag: DW_TAG_member, name: "__unused", scope: !7643, file: !417, line: 513, baseType: !481, size: 8)
!7646 = !DIDerivedType(tag: DW_TAG_member, name: "meta_len", scope: !7643, file: !417, line: 514, baseType: !481, size: 8, offset: 8)
!7647 = !DIDerivedType(tag: DW_TAG_member, name: "nr_frags", scope: !7643, file: !417, line: 515, baseType: !481, size: 8, offset: 16)
!7648 = !DIDerivedType(tag: DW_TAG_member, name: "tx_flags", scope: !7643, file: !417, line: 516, baseType: !481, size: 8, offset: 24)
!7649 = !DIDerivedType(tag: DW_TAG_member, name: "gso_size", scope: !7643, file: !417, line: 517, baseType: !476, size: 16, offset: 32)
!7650 = !DIDerivedType(tag: DW_TAG_member, name: "gso_segs", scope: !7643, file: !417, line: 519, baseType: !476, size: 16, offset: 48)
!7651 = !DIDerivedType(tag: DW_TAG_member, name: "frag_list", scope: !7643, file: !417, line: 520, baseType: !415, size: 64, offset: 64)
!7652 = !DIDerivedType(tag: DW_TAG_member, name: "hwtstamps", scope: !7643, file: !417, line: 521, baseType: !7653, size: 64, offset: 128)
!7653 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "skb_shared_hwtstamps", file: !417, line: 418, size: 64, elements: !7654)
!7654 = !{!7655}
!7655 = !DIDerivedType(tag: DW_TAG_member, name: "hwtstamp", scope: !7653, file: !417, line: 419, baseType: !453, size: 64)
!7656 = !DIDerivedType(tag: DW_TAG_member, name: "gso_type", scope: !7643, file: !417, line: 522, baseType: !7, size: 32, offset: 192)
!7657 = !DIDerivedType(tag: DW_TAG_member, name: "tskey", scope: !7643, file: !417, line: 523, baseType: !987, size: 32, offset: 224)
!7658 = !DIDerivedType(tag: DW_TAG_member, name: "dataref", scope: !7643, file: !417, line: 528, baseType: !383, size: 32, offset: 256)
!7659 = !DIDerivedType(tag: DW_TAG_member, name: "destructor_arg", scope: !7643, file: !417, line: 532, baseType: !591, size: 64, offset: 320)
!7660 = !DIDerivedType(tag: DW_TAG_member, name: "frags", scope: !7643, file: !417, line: 535, baseType: !7661, size: 2176, offset: 384)
!7661 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7662, size: 2176, elements: !7484)
!7662 = !DIDerivedType(tag: DW_TAG_typedef, name: "skb_frag_t", file: !417, line: 321, baseType: !1876)
!7663 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7641, size: 64)
!7664 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sum16", file: !525, line: 36, baseType: !475)
!7665 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7666, size: 64)
!7666 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !268)
!7667 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2337, size: 64)
!7668 = !{!0, !7669, !7714, !7717, !7722, !7725, !7730, !7780, !7783, !7788, !7790, !7795, !7797, !7802, !7804, !7807, !7809, !7812, !7814, !7819, !7825, !7827, !7829}
!7669 = !DIGlobalVariableExpression(var: !7670, expr: !DIExpression())
!7670 = distinct !DIGlobalVariable(name: "__modver_attr", scope: !2, file: !3, line: 71, type: !7671, isLocal: true, isDefinition: true)
!7671 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7672)
!7672 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7673, size: 64)
!7673 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7674)
!7674 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "module_version_attribute", file: !7675, line: 65, size: 576, align: 64, elements: !7676)
!7675 = !DIFile(filename: "./include/linux/module.h", directory: "/home/lizy2001/genbc/linux")
!7676 = !{!7677, !7712, !7713}
!7677 = !DIDerivedType(tag: DW_TAG_member, name: "mattr", scope: !7674, file: !7675, line: 66, baseType: !7678, size: 448)
!7678 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "module_attribute", file: !7675, line: 54, size: 448, elements: !7679)
!7679 = !{!7680, !7681, !7696, !7700, !7704, !7708}
!7680 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !7678, file: !7675, line: 55, baseType: !6146, size: 128)
!7681 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !7678, file: !7675, line: 56, baseType: !7682, size: 64, offset: 128)
!7682 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7683, size: 64)
!7683 = !DISubroutineType(types: !7684)
!7684 = !{!1521, !7685, !7686, !1038}
!7685 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7678, size: 64)
!7686 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7687, size: 64)
!7687 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "module_kobject", file: !7675, line: 46, size: 768, elements: !7688)
!7688 = !{!7689, !7690, !7691, !7692, !7695}
!7689 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !7687, file: !7675, line: 47, baseType: !6120, size: 512)
!7690 = !DIDerivedType(tag: DW_TAG_member, name: "mod", scope: !7687, file: !7675, line: 48, baseType: !980, size: 64, offset: 512)
!7691 = !DIDerivedType(tag: DW_TAG_member, name: "drivers_dir", scope: !7687, file: !7675, line: 49, baseType: !6125, size: 64, offset: 576)
!7692 = !DIDerivedType(tag: DW_TAG_member, name: "mp", scope: !7687, file: !7675, line: 50, baseType: !7693, size: 64, offset: 640)
!7693 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7694, size: 64)
!7694 = !DICompositeType(tag: DW_TAG_structure_type, name: "module_param_attrs", file: !7675, line: 50, flags: DIFlagFwdDecl)
!7695 = !DIDerivedType(tag: DW_TAG_member, name: "kobj_completion", scope: !7687, file: !7675, line: 51, baseType: !2596, size: 64, offset: 704)
!7696 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !7678, file: !7675, line: 58, baseType: !7697, size: 64, offset: 192)
!7697 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7698, size: 64)
!7698 = !DISubroutineType(types: !7699)
!7699 = !{!1521, !7685, !7686, !292, !1039}
!7700 = !DIDerivedType(tag: DW_TAG_member, name: "setup", scope: !7678, file: !7675, line: 60, baseType: !7701, size: 64, offset: 256)
!7701 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7702, size: 64)
!7702 = !DISubroutineType(types: !7703)
!7703 = !{null, !980, !292}
!7704 = !DIDerivedType(tag: DW_TAG_member, name: "test", scope: !7678, file: !7675, line: 61, baseType: !7705, size: 64, offset: 320)
!7705 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7706, size: 64)
!7706 = !DISubroutineType(types: !7707)
!7707 = !{!32, !980}
!7708 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !7678, file: !7675, line: 62, baseType: !7709, size: 64, offset: 384)
!7709 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7710, size: 64)
!7710 = !DISubroutineType(types: !7711)
!7711 = !{null, !980}
!7712 = !DIDerivedType(tag: DW_TAG_member, name: "module_name", scope: !7674, file: !7675, line: 67, baseType: !292, size: 64, offset: 448)
!7713 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !7674, file: !7675, line: 68, baseType: !292, size: 64, offset: 512)
!7714 = !DIGlobalVariableExpression(var: !7715, expr: !DIExpression())
!7715 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_author320", scope: !2, file: !3, line: 72, type: !7716, isLocal: true, isDefinition: true, align: 8)
!7716 = !DICompositeType(tag: DW_TAG_array_type, baseType: !293, size: 416, elements: !5808)
!7717 = !DIGlobalVariableExpression(var: !7718, expr: !DIExpression())
!7718 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_description321", scope: !2, file: !3, line: 73, type: !7719, isLocal: true, isDefinition: true, align: 8)
!7719 = !DICompositeType(tag: DW_TAG_array_type, baseType: !293, size: 592, elements: !7720)
!7720 = !{!7721}
!7721 = !DISubrange(count: 74)
!7722 = !DIGlobalVariableExpression(var: !7723, expr: !DIExpression())
!7723 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_file322", scope: !2, file: !3, line: 74, type: !7724, isLocal: true, isDefinition: true, align: 8)
!7724 = !DICompositeType(tag: DW_TAG_array_type, baseType: !293, size: 352, elements: !2264)
!7725 = !DIGlobalVariableExpression(var: !7726, expr: !DIExpression())
!7726 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_license323", scope: !2, file: !3, line: 74, type: !7727, isLocal: true, isDefinition: true, align: 8)
!7727 = !DICompositeType(tag: DW_TAG_array_type, baseType: !293, size: 152, elements: !7728)
!7728 = !{!7729}
!7729 = !DISubrange(count: 19)
!7730 = !DIGlobalVariableExpression(var: !7731, expr: !DIExpression())
!7731 = distinct !DIGlobalVariable(name: "__param_macaddr", scope: !2, file: !3, line: 79, type: !7732, isLocal: true, isDefinition: true, align: 64)
!7732 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7733)
!7733 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_param", file: !7734, line: 69, size: 320, elements: !7735)
!7734 = !DIFile(filename: "./include/linux/moduleparam.h", directory: "/home/lizy2001/genbc/linux")
!7735 = !{!7736, !7737, !7738, !7754, !7756, !7758, !7759}
!7736 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !7733, file: !7734, line: 70, baseType: !292, size: 64)
!7737 = !DIDerivedType(tag: DW_TAG_member, name: "mod", scope: !7733, file: !7734, line: 71, baseType: !980, size: 64, offset: 64)
!7738 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !7733, file: !7734, line: 72, baseType: !7739, size: 64, offset: 128)
!7739 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7740, size: 64)
!7740 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7741)
!7741 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_param_ops", file: !7734, line: 47, size: 256, elements: !7742)
!7742 = !{!7743, !7744, !7749, !7753}
!7743 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !7741, file: !7734, line: 49, baseType: !7, size: 32)
!7744 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !7741, file: !7734, line: 51, baseType: !7745, size: 64, offset: 64)
!7745 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7746, size: 64)
!7746 = !DISubroutineType(types: !7747)
!7747 = !{!32, !292, !7748}
!7748 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7732, size: 64)
!7749 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !7741, file: !7734, line: 53, baseType: !7750, size: 64, offset: 128)
!7750 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7751, size: 64)
!7751 = !DISubroutineType(types: !7752)
!7752 = !{!32, !1038, !7748}
!7753 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !7741, file: !7734, line: 55, baseType: !1415, size: 64, offset: 192)
!7754 = !DIDerivedType(tag: DW_TAG_member, name: "perm", scope: !7733, file: !7734, line: 73, baseType: !7755, size: 16, offset: 192)
!7755 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !581)
!7756 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !7733, file: !7734, line: 74, baseType: !7757, size: 8, offset: 208)
!7757 = !DIDerivedType(tag: DW_TAG_typedef, name: "s8", file: !332, line: 16, baseType: !5995)
!7758 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !7733, file: !7734, line: 75, baseType: !794, size: 8, offset: 216)
!7759 = !DIDerivedType(tag: DW_TAG_member, scope: !7733, file: !7734, line: 76, baseType: !7760, size: 64, offset: 256)
!7760 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7733, file: !7734, line: 76, size: 64, elements: !7761)
!7761 = !{!7762, !7763, !7770}
!7762 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !7760, file: !7734, line: 77, baseType: !591, size: 64)
!7763 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !7760, file: !7734, line: 78, baseType: !7764, size: 64)
!7764 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7765, size: 64)
!7765 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7766)
!7766 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kparam_string", file: !7734, line: 86, size: 128, elements: !7767)
!7767 = !{!7768, !7769}
!7768 = !DIDerivedType(tag: DW_TAG_member, name: "maxlen", scope: !7766, file: !7734, line: 87, baseType: !7, size: 32)
!7769 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !7766, file: !7734, line: 88, baseType: !1038, size: 64, offset: 64)
!7770 = !DIDerivedType(tag: DW_TAG_member, name: "arr", scope: !7760, file: !7734, line: 79, baseType: !7771, size: 64)
!7771 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7772, size: 64)
!7772 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7773)
!7773 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kparam_array", file: !7734, line: 92, size: 256, elements: !7774)
!7774 = !{!7775, !7776, !7777, !7778, !7779}
!7775 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !7773, file: !7734, line: 94, baseType: !7, size: 32)
!7776 = !DIDerivedType(tag: DW_TAG_member, name: "elemsize", scope: !7773, file: !7734, line: 95, baseType: !7, size: 32, offset: 32)
!7777 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !7773, file: !7734, line: 96, baseType: !4608, size: 64, offset: 64)
!7778 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !7773, file: !7734, line: 97, baseType: !7739, size: 64, offset: 128)
!7779 = !DIDerivedType(tag: DW_TAG_member, name: "elem", scope: !7773, file: !7734, line: 98, baseType: !591, size: 64, offset: 192)
!7780 = !DIGlobalVariableExpression(var: !7781, expr: !DIExpression())
!7781 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_macaddrtype324", scope: !2, file: !3, line: 79, type: !7782, isLocal: true, isDefinition: true, align: 8)
!7782 = !DICompositeType(tag: DW_TAG_array_type, baseType: !293, size: 296, elements: !3068)
!7783 = !DIGlobalVariableExpression(var: !7784, expr: !DIExpression())
!7784 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_macaddr325", scope: !2, file: !3, line: 80, type: !7785, isLocal: true, isDefinition: true, align: 8)
!7785 = !DICompositeType(tag: DW_TAG_array_type, baseType: !293, size: 400, elements: !7786)
!7786 = !{!7787}
!7787 = !DISubrange(count: 50)
!7788 = !DIGlobalVariableExpression(var: !7789, expr: !DIExpression())
!7789 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_happy_meal_probe333", scope: !2, file: !3, line: 3393, type: !591, isLocal: true, isDefinition: true)
!7790 = !DIGlobalVariableExpression(var: !7791, expr: !DIExpression())
!7791 = distinct !DIGlobalVariable(name: "__exitcall_happy_meal_exit", scope: !2, file: !3, line: 3394, type: !7792, isLocal: true, isDefinition: true)
!7792 = !DIDerivedType(tag: DW_TAG_typedef, name: "exitcall_t", file: !7793, line: 117, baseType: !7794)
!7793 = !DIFile(filename: "./include/linux/init.h", directory: "/home/lizy2001/genbc/linux")
!7794 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3809, size: 64)
!7795 = !DIGlobalVariableExpression(var: !7796, expr: !DIExpression())
!7796 = distinct !DIGlobalVariable(name: "___modver_attr", scope: !2, file: !3, line: 71, type: !7674, isLocal: true, isDefinition: true)
!7797 = !DIGlobalVariableExpression(var: !7798, expr: !DIExpression())
!7798 = distinct !DIGlobalVariable(name: "__param_str_macaddr", scope: !2, file: !3, line: 79, type: !7799, isLocal: true, isDefinition: true)
!7799 = !DICompositeType(tag: DW_TAG_array_type, baseType: !293, size: 120, elements: !7800)
!7800 = !{!7801}
!7801 = !DISubrange(count: 15)
!7802 = !DIGlobalVariableExpression(var: !7803, expr: !DIExpression())
!7803 = distinct !DIGlobalVariable(name: "__param_arr_macaddr", scope: !2, file: !3, line: 79, type: !7772, isLocal: true, isDefinition: true)
!7804 = !DIGlobalVariableExpression(var: !7805, expr: !DIExpression())
!7805 = distinct !DIGlobalVariable(name: "macaddr", scope: !2, file: !3, line: 76, type: !7806, isLocal: true, isDefinition: true)
!7806 = !DICompositeType(tag: DW_TAG_array_type, baseType: !32, size: 192, elements: !999)
!7807 = !DIGlobalVariableExpression(var: !7808, expr: !DIExpression())
!7808 = distinct !DIGlobalVariable(name: "hme_pci_driver", scope: !2, file: !3, line: 3237, type: !7386, isLocal: true, isDefinition: true)
!7809 = !DIGlobalVariableExpression(var: !7810, expr: !DIExpression())
!7810 = distinct !DIGlobalVariable(name: "happymeal_pci_ids", scope: !2, file: !3, line: 3230, type: !7811, isLocal: true, isDefinition: true)
!7811 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7392, size: 512, elements: !2664)
!7812 = !DIGlobalVariableExpression(var: !7813, expr: !DIExpression())
!7813 = distinct !DIGlobalVariable(name: "hme_version_printed", scope: !2, file: !3, line: 2550, type: !32, isLocal: true, isDefinition: true)
!7814 = !DIGlobalVariableExpression(var: !7815, expr: !DIExpression())
!7815 = distinct !DIGlobalVariable(name: "version", scope: !2, file: !3, line: 68, type: !7816, isLocal: true, isDefinition: true)
!7816 = !DICompositeType(tag: DW_TAG_array_type, baseType: !268, size: 560, elements: !7817)
!7817 = !{!7818}
!7818 = !DISubrange(count: 70)
!7819 = !DIGlobalVariableExpression(var: !7820, expr: !DIExpression())
!7820 = distinct !DIGlobalVariable(name: "__warned", scope: !7821, file: !7822, line: 275, type: !771, isLocal: true, isDefinition: true)
!7821 = distinct !DISubprogram(name: "dma_map_single_attrs", scope: !7822, file: !7822, line: 271, type: !7823, scopeLine: 273, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!7822 = !DIFile(filename: "./include/linux/dma-mapping.h", directory: "/home/lizy2001/genbc/linux")
!7823 = !DISubroutineType(types: !7824)
!7824 = !{!2036, !6545, !591, !1039, !7157, !312}
!7825 = !DIGlobalVariableExpression(var: !7826, expr: !DIExpression())
!7826 = distinct !DIGlobalVariable(name: "hme_netdev_ops", scope: !2, file: !3, line: 2669, type: !397, isLocal: true, isDefinition: true)
!7827 = !DIGlobalVariableExpression(var: !7828, expr: !DIExpression())
!7828 = distinct !DIGlobalVariable(name: "hme_ethtool_ops", scope: !2, file: !3, line: 2543, type: !5521, isLocal: true, isDefinition: true)
!7829 = !DIGlobalVariableExpression(var: !7830, expr: !DIExpression())
!7830 = distinct !DIGlobalVariable(name: "qfe_pci_list", scope: !2, file: !3, line: 87, type: !7619, isLocal: true, isDefinition: true)
!7831 = !DICompositeType(tag: DW_TAG_array_type, baseType: !293, size: 160, elements: !900)
!7832 = !{!"rsp"}
!7833 = !{i32 7, !"Dwarf Version", i32 4}
!7834 = !{i32 2, !"Debug Info Version", i32 3}
!7835 = !{i32 1, !"wchar_size", i32 2}
!7836 = !{i32 1, !"Code Model", i32 2}
!7837 = !{!"clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)"}
!7838 = distinct !DISubprogram(name: "happy_meal_exit", scope: !3, file: !3, line: 3383, type: !3809, scopeLine: 3384, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!7839 = !DILocation(line: 3389, column: 2, scope: !7838)
!7840 = !DILocation(line: 3391, column: 1, scope: !7838)
!7841 = distinct !DISubprogram(name: "happy_meal_pci_exit", scope: !3, file: !3, line: 3249, type: !3809, scopeLine: 3250, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!7842 = !DILocation(line: 3251, column: 2, scope: !7841)
!7843 = !DILocation(line: 3253, column: 2, scope: !7841)
!7844 = !DILocation(line: 3253, column: 9, scope: !7841)
!7845 = !DILocalVariable(name: "qfe", scope: !7846, file: !3, line: 3254, type: !7619)
!7846 = distinct !DILexicalBlock(scope: !7841, file: !3, line: 3253, column: 23)
!7847 = !DILocation(line: 3254, column: 19, scope: !7846)
!7848 = !DILocation(line: 3254, column: 25, scope: !7846)
!7849 = !DILocalVariable(name: "next", scope: !7846, file: !3, line: 3255, type: !7619)
!7850 = !DILocation(line: 3255, column: 19, scope: !7846)
!7851 = !DILocation(line: 3255, column: 26, scope: !7846)
!7852 = !DILocation(line: 3255, column: 31, scope: !7846)
!7853 = !DILocation(line: 3257, column: 9, scope: !7846)
!7854 = !DILocation(line: 3257, column: 3, scope: !7846)
!7855 = !DILocation(line: 3259, column: 18, scope: !7846)
!7856 = !DILocation(line: 3259, column: 16, scope: !7846)
!7857 = distinct !{!7857, !7843, !7858}
!7858 = !DILocation(line: 3260, column: 2, scope: !7841)
!7859 = !DILocation(line: 3261, column: 1, scope: !7841)
!7860 = distinct !DISubprogram(name: "happy_meal_probe", scope: !3, file: !3, line: 3362, type: !7861, scopeLine: 3363, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!7861 = !DISubroutineType(types: !7862)
!7862 = !{!32}
!7863 = !DILocalVariable(name: "err", scope: !7860, file: !3, line: 3364, type: !32)
!7864 = !DILocation(line: 3364, column: 6, scope: !7860)
!7865 = !DILocation(line: 3370, column: 7, scope: !7866)
!7866 = distinct !DILexicalBlock(scope: !7860, file: !3, line: 3370, column: 6)
!7867 = !DILocation(line: 3370, column: 6, scope: !7860)
!7868 = !DILocation(line: 3371, column: 9, scope: !7869)
!7869 = distinct !DILexicalBlock(scope: !7866, file: !3, line: 3370, column: 12)
!7870 = !DILocation(line: 3371, column: 7, scope: !7869)
!7871 = !DILocation(line: 3376, column: 2, scope: !7869)
!7872 = !DILocation(line: 3379, column: 9, scope: !7860)
!7873 = !DILocation(line: 3379, column: 2, scope: !7860)
!7874 = distinct !DISubprogram(name: "happy_meal_pci_probe", scope: !3, file: !3, line: 2983, type: !7404, scopeLine: 2985, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!7875 = !DILocalVariable(name: "lock", arg: 1, scope: !7876, file: !7877, line: 402, type: !2181)
!7876 = distinct !DISubprogram(name: "spin_unlock_irq", scope: !7877, file: !7877, line: 402, type: !7878, scopeLine: 403, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!7877 = !DIFile(filename: "./include/linux/spinlock.h", directory: "/home/lizy2001/genbc/linux")
!7878 = !DISubroutineType(types: !7879)
!7879 = !{null, !2181}
!7880 = !DILocation(line: 402, column: 57, scope: !7876, inlinedAt: !7881)
!7881 = distinct !DILocation(line: 3160, column: 2, scope: !7874)
!7882 = !DILocalVariable(name: "lock", arg: 1, scope: !7883, file: !7877, line: 377, type: !2181)
!7883 = distinct !DISubprogram(name: "spin_lock_irq", scope: !7877, file: !7877, line: 377, type: !7878, scopeLine: 378, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!7884 = !DILocation(line: 377, column: 55, scope: !7883, inlinedAt: !7885)
!7885 = distinct !DILocation(line: 3158, column: 2, scope: !7874)
!7886 = !DILocalVariable(name: "lock", arg: 1, scope: !7887, file: !7877, line: 327, type: !2181)
!7887 = distinct !DISubprogram(name: "spinlock_check", scope: !7877, file: !7877, line: 327, type: !7888, scopeLine: 328, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!7888 = !DISubroutineType(types: !7889)
!7889 = !{!7890, !2181}
!7890 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1761, size: 64)
!7891 = !DILocation(line: 327, column: 67, scope: !7887, inlinedAt: !7892)
!7892 = distinct !DILocation(line: 3040, column: 2, scope: !7893)
!7893 = distinct !DILexicalBlock(scope: !7874, file: !3, line: 3040, column: 2)
!7894 = !DILocalVariable(name: "pdev", arg: 1, scope: !7874, file: !3, line: 2983, type: !7280)
!7895 = !DILocation(line: 2983, column: 49, scope: !7874)
!7896 = !DILocalVariable(name: "ent", arg: 2, scope: !7874, file: !3, line: 2984, type: !7391)
!7897 = !DILocation(line: 2984, column: 33, scope: !7874)
!7898 = !DILocalVariable(name: "qp", scope: !7874, file: !3, line: 2986, type: !7619)
!7899 = !DILocation(line: 2986, column: 18, scope: !7874)
!7900 = !DILocalVariable(name: "hp", scope: !7874, file: !3, line: 2990, type: !7554)
!7901 = !DILocation(line: 2990, column: 21, scope: !7874)
!7902 = !DILocalVariable(name: "dev", scope: !7874, file: !3, line: 2991, type: !290)
!7903 = !DILocation(line: 2991, column: 21, scope: !7874)
!7904 = !DILocalVariable(name: "hpreg_base", scope: !7874, file: !3, line: 2992, type: !591)
!7905 = !DILocation(line: 2992, column: 16, scope: !7874)
!7906 = !DILocalVariable(name: "hpreg_res", scope: !7874, file: !3, line: 2993, type: !312)
!7907 = !DILocation(line: 2993, column: 16, scope: !7874)
!7908 = !DILocalVariable(name: "i", scope: !7874, file: !3, line: 2994, type: !32)
!7909 = !DILocation(line: 2994, column: 6, scope: !7874)
!7910 = !DILocalVariable(name: "qfe_slot", scope: !7874, file: !3, line: 2994, type: !32)
!7911 = !DILocation(line: 2994, column: 9, scope: !7874)
!7912 = !DILocalVariable(name: "prom_name", scope: !7874, file: !3, line: 2995, type: !7913)
!7913 = !DICompositeType(tag: DW_TAG_array_type, baseType: !268, size: 512, elements: !3812)
!7914 = !DILocation(line: 2995, column: 7, scope: !7874)
!7915 = !DILocalVariable(name: "err", scope: !7874, file: !3, line: 2996, type: !32)
!7916 = !DILocation(line: 2996, column: 6, scope: !7874)
!7917 = !DILocation(line: 3003, column: 19, scope: !7918)
!7918 = distinct !DILexicalBlock(scope: !7874, file: !3, line: 3003, column: 6)
!7919 = !DILocation(line: 3003, column: 6, scope: !7918)
!7920 = !DILocation(line: 3003, column: 6, scope: !7874)
!7921 = !DILocation(line: 3004, column: 10, scope: !7918)
!7922 = !DILocation(line: 3004, column: 3, scope: !7918)
!7923 = !DILocation(line: 3006, column: 10, scope: !7918)
!7924 = !DILocation(line: 3006, column: 3, scope: !7918)
!7925 = !DILocation(line: 3009, column: 6, scope: !7874)
!7926 = !DILocation(line: 3011, column: 24, scope: !7927)
!7927 = distinct !DILexicalBlock(scope: !7874, file: !3, line: 3011, column: 6)
!7928 = !DILocation(line: 3011, column: 6, scope: !7927)
!7929 = !DILocation(line: 3011, column: 6, scope: !7874)
!7930 = !DILocation(line: 3012, column: 3, scope: !7927)
!7931 = !DILocation(line: 3013, column: 17, scope: !7874)
!7932 = !DILocation(line: 3013, column: 2, scope: !7874)
!7933 = !DILocation(line: 3015, column: 14, scope: !7934)
!7934 = distinct !DILexicalBlock(scope: !7874, file: !3, line: 3015, column: 6)
!7935 = !DILocation(line: 3015, column: 7, scope: !7934)
!7936 = !DILocation(line: 3015, column: 37, scope: !7934)
!7937 = !DILocation(line: 3015, column: 48, scope: !7934)
!7938 = !DILocation(line: 3015, column: 41, scope: !7934)
!7939 = !DILocation(line: 3015, column: 6, scope: !7874)
!7940 = !DILocation(line: 3016, column: 25, scope: !7941)
!7941 = distinct !DILexicalBlock(scope: !7934, file: !3, line: 3015, column: 67)
!7942 = !DILocation(line: 3016, column: 8, scope: !7941)
!7943 = !DILocation(line: 3016, column: 6, scope: !7941)
!7944 = !DILocation(line: 3017, column: 7, scope: !7945)
!7945 = distinct !DILexicalBlock(scope: !7941, file: !3, line: 3017, column: 7)
!7946 = !DILocation(line: 3017, column: 10, scope: !7945)
!7947 = !DILocation(line: 3017, column: 7, scope: !7941)
!7948 = !DILocation(line: 3018, column: 4, scope: !7945)
!7949 = !DILocation(line: 3019, column: 17, scope: !7950)
!7950 = distinct !DILexicalBlock(scope: !7941, file: !3, line: 3019, column: 3)
!7951 = !DILocation(line: 3019, column: 8, scope: !7950)
!7952 = !DILocation(line: 3019, column: 22, scope: !7953)
!7953 = distinct !DILexicalBlock(scope: !7950, file: !3, line: 3019, column: 3)
!7954 = !DILocation(line: 3019, column: 31, scope: !7953)
!7955 = !DILocation(line: 3019, column: 3, scope: !7950)
!7956 = !DILocation(line: 3020, column: 8, scope: !7957)
!7957 = distinct !DILexicalBlock(scope: !7953, file: !3, line: 3020, column: 8)
!7958 = !DILocation(line: 3020, column: 12, scope: !7957)
!7959 = !DILocation(line: 3020, column: 24, scope: !7957)
!7960 = !DILocation(line: 3020, column: 34, scope: !7957)
!7961 = !DILocation(line: 3020, column: 8, scope: !7953)
!7962 = !DILocation(line: 3021, column: 5, scope: !7957)
!7963 = !DILocation(line: 3020, column: 37, scope: !7957)
!7964 = !DILocation(line: 3019, column: 44, scope: !7953)
!7965 = !DILocation(line: 3019, column: 3, scope: !7953)
!7966 = distinct !{!7966, !7955, !7967}
!7967 = !DILocation(line: 3021, column: 5, scope: !7950)
!7968 = !DILocation(line: 3022, column: 7, scope: !7969)
!7969 = distinct !DILexicalBlock(scope: !7941, file: !3, line: 3022, column: 7)
!7970 = !DILocation(line: 3022, column: 16, scope: !7969)
!7971 = !DILocation(line: 3022, column: 7, scope: !7941)
!7972 = !DILocation(line: 3023, column: 4, scope: !7969)
!7973 = !DILocation(line: 3024, column: 2, scope: !7941)
!7974 = !DILocation(line: 3026, column: 8, scope: !7874)
!7975 = !DILocation(line: 3026, column: 6, scope: !7874)
!7976 = !DILocation(line: 3027, column: 6, scope: !7874)
!7977 = !DILocation(line: 3028, column: 7, scope: !7978)
!7978 = distinct !DILexicalBlock(scope: !7874, file: !3, line: 3028, column: 6)
!7979 = !DILocation(line: 3028, column: 6, scope: !7874)
!7980 = !DILocation(line: 3029, column: 3, scope: !7978)
!7981 = !DILocation(line: 3030, column: 2, scope: !7874)
!7982 = !DILocation(line: 3032, column: 25, scope: !7983)
!7983 = distinct !DILexicalBlock(scope: !7874, file: !3, line: 3032, column: 6)
!7984 = !DILocation(line: 3032, column: 28, scope: !7983)
!7985 = !DILocation(line: 3032, column: 6, scope: !7874)
!7986 = !DILocation(line: 3033, column: 3, scope: !7983)
!7987 = !DILocation(line: 3035, column: 19, scope: !7874)
!7988 = !DILocation(line: 3035, column: 7, scope: !7874)
!7989 = !DILocation(line: 3035, column: 5, scope: !7874)
!7990 = !DILocation(line: 3037, column: 18, scope: !7874)
!7991 = !DILocation(line: 3037, column: 2, scope: !7874)
!7992 = !DILocation(line: 3037, column: 6, scope: !7874)
!7993 = !DILocation(line: 3037, column: 16, scope: !7874)
!7994 = !DILocation(line: 3038, column: 17, scope: !7874)
!7995 = !DILocation(line: 3038, column: 23, scope: !7874)
!7996 = !DILocation(line: 3038, column: 2, scope: !7874)
!7997 = !DILocation(line: 3038, column: 6, scope: !7874)
!7998 = !DILocation(line: 3038, column: 14, scope: !7874)
!7999 = !DILocation(line: 3040, column: 2, scope: !7874)
!8000 = !DILocation(line: 3040, column: 2, scope: !7893)
!8001 = !DILocation(line: 329, column: 10, scope: !7887, inlinedAt: !7892)
!8002 = !DILocation(line: 329, column: 16, scope: !7887, inlinedAt: !7892)
!8003 = !DILocation(line: 3042, column: 6, scope: !8004)
!8004 = distinct !DILexicalBlock(scope: !7874, file: !3, line: 3042, column: 6)
!8005 = !DILocation(line: 3042, column: 9, scope: !8004)
!8006 = !DILocation(line: 3042, column: 6, scope: !7874)
!8007 = !DILocation(line: 3043, column: 20, scope: !8008)
!8008 = distinct !DILexicalBlock(scope: !8004, file: !3, line: 3042, column: 18)
!8009 = !DILocation(line: 3043, column: 3, scope: !8008)
!8010 = !DILocation(line: 3043, column: 7, scope: !8008)
!8011 = !DILocation(line: 3043, column: 18, scope: !8008)
!8012 = !DILocation(line: 3044, column: 17, scope: !8008)
!8013 = !DILocation(line: 3044, column: 3, scope: !8008)
!8014 = !DILocation(line: 3044, column: 7, scope: !8008)
!8015 = !DILocation(line: 3044, column: 15, scope: !8008)
!8016 = !DILocation(line: 3045, column: 31, scope: !8008)
!8017 = !DILocation(line: 3045, column: 3, scope: !8008)
!8018 = !DILocation(line: 3045, column: 7, scope: !8008)
!8019 = !DILocation(line: 3045, column: 19, scope: !8008)
!8020 = !DILocation(line: 3045, column: 29, scope: !8008)
!8021 = !DILocation(line: 3046, column: 2, scope: !8008)
!8022 = !DILocation(line: 3048, column: 14, scope: !7874)
!8023 = !DILocation(line: 3048, column: 12, scope: !7874)
!8024 = !DILocation(line: 3049, column: 6, scope: !7874)
!8025 = !DILocation(line: 3050, column: 7, scope: !8026)
!8026 = distinct !DILexicalBlock(scope: !7874, file: !3, line: 3050, column: 6)
!8027 = !DILocation(line: 3050, column: 35, scope: !8026)
!8028 = !DILocation(line: 3050, column: 52, scope: !8026)
!8029 = !DILocation(line: 3050, column: 6, scope: !7874)
!8030 = !DILocation(line: 3051, column: 3, scope: !8031)
!8031 = distinct !DILexicalBlock(scope: !8026, file: !3, line: 3050, column: 58)
!8032 = !DILocation(line: 3052, column: 3, scope: !8031)
!8033 = !DILocation(line: 3054, column: 26, scope: !8034)
!8034 = distinct !DILexicalBlock(scope: !7874, file: !3, line: 3054, column: 6)
!8035 = !DILocation(line: 3054, column: 6, scope: !8034)
!8036 = !DILocation(line: 3054, column: 6, scope: !7874)
!8037 = !DILocation(line: 3055, column: 3, scope: !8038)
!8038 = distinct !DILexicalBlock(scope: !8034, file: !3, line: 3054, column: 43)
!8039 = !DILocation(line: 3057, column: 3, scope: !8038)
!8040 = !DILocation(line: 3060, column: 28, scope: !8041)
!8041 = distinct !DILexicalBlock(scope: !7874, file: !3, line: 3060, column: 6)
!8042 = !DILocation(line: 3060, column: 20, scope: !8041)
!8043 = !DILocation(line: 3060, column: 18, scope: !8041)
!8044 = !DILocation(line: 3060, column: 48, scope: !8041)
!8045 = !DILocation(line: 3060, column: 6, scope: !7874)
!8046 = !DILocation(line: 3061, column: 3, scope: !8047)
!8047 = distinct !DILexicalBlock(scope: !8041, file: !3, line: 3060, column: 57)
!8048 = !DILocation(line: 3062, column: 3, scope: !8047)
!8049 = !DILocation(line: 3065, column: 9, scope: !8050)
!8050 = distinct !DILexicalBlock(scope: !7874, file: !3, line: 3065, column: 2)
!8051 = !DILocation(line: 3065, column: 7, scope: !8050)
!8052 = !DILocation(line: 3065, column: 14, scope: !8053)
!8053 = distinct !DILexicalBlock(scope: !8050, file: !3, line: 3065, column: 2)
!8054 = !DILocation(line: 3065, column: 16, scope: !8053)
!8055 = !DILocation(line: 3065, column: 2, scope: !8050)
!8056 = !DILocation(line: 3066, column: 15, scope: !8057)
!8057 = distinct !DILexicalBlock(scope: !8058, file: !3, line: 3066, column: 7)
!8058 = distinct !DILexicalBlock(scope: !8053, file: !3, line: 3065, column: 26)
!8059 = !DILocation(line: 3066, column: 7, scope: !8057)
!8060 = !DILocation(line: 3066, column: 18, scope: !8057)
!8061 = !DILocation(line: 3066, column: 7, scope: !8058)
!8062 = !DILocation(line: 3067, column: 4, scope: !8057)
!8063 = !DILocation(line: 3068, column: 2, scope: !8058)
!8064 = !DILocation(line: 3065, column: 22, scope: !8053)
!8065 = !DILocation(line: 3065, column: 2, scope: !8053)
!8066 = distinct !{!8066, !8055, !8067}
!8067 = !DILocation(line: 3068, column: 2, scope: !8050)
!8068 = !DILocation(line: 3069, column: 6, scope: !8069)
!8069 = distinct !DILexicalBlock(scope: !7874, file: !3, line: 3069, column: 6)
!8070 = !DILocation(line: 3069, column: 8, scope: !8069)
!8071 = !DILocation(line: 3069, column: 6, scope: !7874)
!8072 = !DILocation(line: 3070, column: 10, scope: !8073)
!8073 = distinct !DILexicalBlock(scope: !8074, file: !3, line: 3070, column: 3)
!8074 = distinct !DILexicalBlock(scope: !8069, file: !3, line: 3069, column: 13)
!8075 = !DILocation(line: 3070, column: 8, scope: !8073)
!8076 = !DILocation(line: 3070, column: 15, scope: !8077)
!8077 = distinct !DILexicalBlock(scope: !8073, file: !3, line: 3070, column: 3)
!8078 = !DILocation(line: 3070, column: 17, scope: !8077)
!8079 = !DILocation(line: 3070, column: 3, scope: !8073)
!8080 = !DILocation(line: 3071, column: 31, scope: !8077)
!8081 = !DILocation(line: 3071, column: 23, scope: !8077)
!8082 = !DILocation(line: 3071, column: 4, scope: !8077)
!8083 = !DILocation(line: 3071, column: 9, scope: !8077)
!8084 = !DILocation(line: 3071, column: 18, scope: !8077)
!8085 = !DILocation(line: 3071, column: 21, scope: !8077)
!8086 = !DILocation(line: 3070, column: 23, scope: !8077)
!8087 = !DILocation(line: 3070, column: 3, scope: !8077)
!8088 = distinct !{!8088, !8079, !8089}
!8089 = !DILocation(line: 3071, column: 32, scope: !8073)
!8090 = !DILocation(line: 3072, column: 13, scope: !8074)
!8091 = !DILocation(line: 3073, column: 2, scope: !8074)
!8092 = !DILocation(line: 3087, column: 24, scope: !8093)
!8093 = distinct !DILexicalBlock(scope: !8069, file: !3, line: 3073, column: 9)
!8094 = !DILocation(line: 3087, column: 31, scope: !8093)
!8095 = !DILocation(line: 3087, column: 36, scope: !8093)
!8096 = !DILocation(line: 3087, column: 3, scope: !8093)
!8097 = !DILocation(line: 3092, column: 20, scope: !7874)
!8098 = !DILocation(line: 3092, column: 31, scope: !7874)
!8099 = !DILocation(line: 3092, column: 2, scope: !7874)
!8100 = !DILocation(line: 3092, column: 6, scope: !7874)
!8101 = !DILocation(line: 3092, column: 17, scope: !7874)
!8102 = !DILocation(line: 3093, column: 20, scope: !7874)
!8103 = !DILocation(line: 3093, column: 31, scope: !7874)
!8104 = !DILocation(line: 3093, column: 2, scope: !7874)
!8105 = !DILocation(line: 3093, column: 6, scope: !7874)
!8106 = !DILocation(line: 3093, column: 17, scope: !7874)
!8107 = !DILocation(line: 3094, column: 20, scope: !7874)
!8108 = !DILocation(line: 3094, column: 31, scope: !7874)
!8109 = !DILocation(line: 3094, column: 2, scope: !7874)
!8110 = !DILocation(line: 3094, column: 6, scope: !7874)
!8111 = !DILocation(line: 3094, column: 17, scope: !7874)
!8112 = !DILocation(line: 3095, column: 20, scope: !7874)
!8113 = !DILocation(line: 3095, column: 31, scope: !7874)
!8114 = !DILocation(line: 3095, column: 2, scope: !7874)
!8115 = !DILocation(line: 3095, column: 6, scope: !7874)
!8116 = !DILocation(line: 3095, column: 17, scope: !7874)
!8117 = !DILocation(line: 3096, column: 20, scope: !7874)
!8118 = !DILocation(line: 3096, column: 31, scope: !7874)
!8119 = !DILocation(line: 3096, column: 2, scope: !7874)
!8120 = !DILocation(line: 3096, column: 6, scope: !7874)
!8121 = !DILocation(line: 3096, column: 17, scope: !7874)
!8122 = !DILocation(line: 3104, column: 2, scope: !7874)
!8123 = !DILocation(line: 3104, column: 6, scope: !7874)
!8124 = !DILocation(line: 3104, column: 18, scope: !7874)
!8125 = !DILocation(line: 3108, column: 6, scope: !8126)
!8126 = distinct !DILexicalBlock(scope: !7874, file: !3, line: 3108, column: 6)
!8127 = !DILocation(line: 3108, column: 10, scope: !8126)
!8128 = !DILocation(line: 3108, column: 22, scope: !8126)
!8129 = !DILocation(line: 3108, column: 30, scope: !8126)
!8130 = !DILocation(line: 3108, column: 33, scope: !8126)
!8131 = !DILocation(line: 3108, column: 37, scope: !8126)
!8132 = !DILocation(line: 3108, column: 49, scope: !8126)
!8133 = !DILocation(line: 3108, column: 6, scope: !7874)
!8134 = !DILocation(line: 3109, column: 3, scope: !8126)
!8135 = !DILocation(line: 3109, column: 7, scope: !8126)
!8136 = !DILocation(line: 3109, column: 19, scope: !8126)
!8137 = !DILocation(line: 3110, column: 11, scope: !8138)
!8138 = distinct !DILexicalBlock(scope: !8126, file: !3, line: 3110, column: 11)
!8139 = !DILocation(line: 3110, column: 15, scope: !8138)
!8140 = !DILocation(line: 3110, column: 27, scope: !8138)
!8141 = !DILocation(line: 3110, column: 35, scope: !8138)
!8142 = !DILocation(line: 3110, column: 38, scope: !8138)
!8143 = !DILocation(line: 3110, column: 42, scope: !8138)
!8144 = !DILocation(line: 3110, column: 54, scope: !8138)
!8145 = !DILocation(line: 3110, column: 11, scope: !8126)
!8146 = !DILocation(line: 3111, column: 3, scope: !8138)
!8147 = !DILocation(line: 3111, column: 7, scope: !8138)
!8148 = !DILocation(line: 3111, column: 19, scope: !8138)
!8149 = !DILocation(line: 3113, column: 6, scope: !8150)
!8150 = distinct !DILexicalBlock(scope: !7874, file: !3, line: 3113, column: 6)
!8151 = !DILocation(line: 3113, column: 9, scope: !8150)
!8152 = !DILocation(line: 3113, column: 6, scope: !7874)
!8153 = !DILocation(line: 3114, column: 3, scope: !8150)
!8154 = !DILocation(line: 3114, column: 7, scope: !8150)
!8155 = !DILocation(line: 3114, column: 19, scope: !8150)
!8156 = !DILocation(line: 3117, column: 2, scope: !7874)
!8157 = !DILocation(line: 3117, column: 6, scope: !7874)
!8158 = !DILocation(line: 3117, column: 18, scope: !7874)
!8159 = !DILocation(line: 3124, column: 40, scope: !7874)
!8160 = !DILocation(line: 3124, column: 46, scope: !7874)
!8161 = !DILocation(line: 3125, column: 12, scope: !7874)
!8162 = !DILocation(line: 3125, column: 16, scope: !7874)
!8163 = !DILocation(line: 3124, column: 20, scope: !7874)
!8164 = !DILocation(line: 3124, column: 2, scope: !7874)
!8165 = !DILocation(line: 3124, column: 6, scope: !7874)
!8166 = !DILocation(line: 3124, column: 18, scope: !7874)
!8167 = !DILocation(line: 3126, column: 6, scope: !7874)
!8168 = !DILocation(line: 3127, column: 7, scope: !8169)
!8169 = distinct !DILexicalBlock(scope: !7874, file: !3, line: 3127, column: 6)
!8170 = !DILocation(line: 3127, column: 11, scope: !8169)
!8171 = !DILocation(line: 3127, column: 6, scope: !7874)
!8172 = !DILocation(line: 3128, column: 3, scope: !8169)
!8173 = !DILocation(line: 3130, column: 2, scope: !7874)
!8174 = !DILocation(line: 3130, column: 6, scope: !7874)
!8175 = !DILocation(line: 3130, column: 16, scope: !7874)
!8176 = !DILocation(line: 3131, column: 2, scope: !7874)
!8177 = !DILocation(line: 3131, column: 6, scope: !7874)
!8178 = !DILocation(line: 3131, column: 18, scope: !7874)
!8179 = !DILocation(line: 3132, column: 2, scope: !7874)
!8180 = !DILocation(line: 3132, column: 6, scope: !7874)
!8181 = !DILocation(line: 3132, column: 18, scope: !7874)
!8182 = !DILocation(line: 3134, column: 2, scope: !7874)
!8183 = !DILocation(line: 3136, column: 12, scope: !7874)
!8184 = !DILocation(line: 3136, column: 18, scope: !7874)
!8185 = !DILocation(line: 3136, column: 2, scope: !7874)
!8186 = !DILocation(line: 3136, column: 6, scope: !7874)
!8187 = !DILocation(line: 3136, column: 10, scope: !7874)
!8188 = !DILocation(line: 3137, column: 12, scope: !7874)
!8189 = !DILocation(line: 3137, column: 2, scope: !7874)
!8190 = !DILocation(line: 3137, column: 6, scope: !7874)
!8191 = !DILocation(line: 3137, column: 10, scope: !7874)
!8192 = !DILocation(line: 3138, column: 2, scope: !7874)
!8193 = !DILocation(line: 3138, column: 7, scope: !7874)
!8194 = !DILocation(line: 3138, column: 18, scope: !7874)
!8195 = !DILocation(line: 3139, column: 2, scope: !7874)
!8196 = !DILocation(line: 3139, column: 7, scope: !7874)
!8197 = !DILocation(line: 3139, column: 22, scope: !7874)
!8198 = !DILocation(line: 3140, column: 2, scope: !7874)
!8199 = !DILocation(line: 3140, column: 7, scope: !7874)
!8200 = !DILocation(line: 3140, column: 19, scope: !7874)
!8201 = !DILocation(line: 3143, column: 2, scope: !7874)
!8202 = !DILocation(line: 3143, column: 7, scope: !7874)
!8203 = !DILocation(line: 3143, column: 19, scope: !7874)
!8204 = !DILocation(line: 3144, column: 19, scope: !7874)
!8205 = !DILocation(line: 3144, column: 24, scope: !7874)
!8206 = !DILocation(line: 3144, column: 36, scope: !7874)
!8207 = !DILocation(line: 3144, column: 2, scope: !7874)
!8208 = !DILocation(line: 3144, column: 7, scope: !7874)
!8209 = !DILocation(line: 3144, column: 16, scope: !7874)
!8210 = !DILocation(line: 3158, column: 17, scope: !7874)
!8211 = !DILocation(line: 3158, column: 21, scope: !7874)
!8212 = !DILocation(line: 379, column: 2, scope: !8213, inlinedAt: !7885)
!8213 = distinct !DILexicalBlock(scope: !8214, file: !7877, line: 379, column: 2)
!8214 = distinct !DILexicalBlock(scope: !7883, file: !7877, line: 379, column: 2)
!8215 = !DILocation(line: 379, column: 2, scope: !8216, inlinedAt: !7885)
!8216 = distinct !DILexicalBlock(scope: !8214, file: !7877, line: 379, column: 2)
!8217 = !{i32 -2145385974}
!8218 = !DILocation(line: 379, column: 2, scope: !8219, inlinedAt: !7885)
!8219 = distinct !DILexicalBlock(scope: !8216, file: !7877, line: 379, column: 2)
!8220 = !DILocation(line: 3159, column: 39, scope: !7874)
!8221 = !DILocation(line: 3159, column: 2, scope: !7874)
!8222 = !DILocation(line: 3160, column: 19, scope: !7874)
!8223 = !DILocation(line: 3160, column: 23, scope: !7874)
!8224 = !DILocation(line: 404, column: 2, scope: !8225, inlinedAt: !7881)
!8225 = distinct !DILexicalBlock(scope: !8226, file: !7877, line: 404, column: 2)
!8226 = distinct !DILexicalBlock(scope: !7876, file: !7877, line: 404, column: 2)
!8227 = !DILocation(line: 404, column: 2, scope: !8228, inlinedAt: !7881)
!8228 = distinct !DILexicalBlock(scope: !8226, file: !7877, line: 404, column: 2)
!8229 = !{i32 -2145384226}
!8230 = !DILocation(line: 404, column: 2, scope: !8231, inlinedAt: !7881)
!8231 = distinct !DILexicalBlock(scope: !8228, file: !7877, line: 404, column: 2)
!8232 = !DILocation(line: 3162, column: 24, scope: !7874)
!8233 = !DILocation(line: 3162, column: 28, scope: !7874)
!8234 = !DILocation(line: 3162, column: 8, scope: !7874)
!8235 = !DILocation(line: 3162, column: 6, scope: !7874)
!8236 = !DILocation(line: 3163, column: 6, scope: !8237)
!8237 = distinct !DILexicalBlock(scope: !7874, file: !3, line: 3163, column: 6)
!8238 = !DILocation(line: 3163, column: 6, scope: !7874)
!8239 = !DILocation(line: 3164, column: 3, scope: !8240)
!8240 = distinct !DILexicalBlock(scope: !8237, file: !3, line: 3163, column: 11)
!8241 = !DILocation(line: 3166, column: 3, scope: !8240)
!8242 = !DILocation(line: 3169, column: 18, scope: !7874)
!8243 = !DILocation(line: 3169, column: 24, scope: !7874)
!8244 = !DILocation(line: 3169, column: 2, scope: !7874)
!8245 = !DILocation(line: 3171, column: 7, scope: !8246)
!8246 = distinct !DILexicalBlock(scope: !7874, file: !3, line: 3171, column: 6)
!8247 = !DILocation(line: 3171, column: 6, scope: !7874)
!8248 = !DILocalVariable(name: "qpdev", scope: !8249, file: !3, line: 3172, type: !7280)
!8249 = distinct !DILexicalBlock(scope: !8246, file: !3, line: 3171, column: 17)
!8250 = !DILocation(line: 3172, column: 19, scope: !8249)
!8251 = !DILocation(line: 3172, column: 27, scope: !8249)
!8252 = !DILocation(line: 3172, column: 31, scope: !8249)
!8253 = !DILocation(line: 3174, column: 3, scope: !8249)
!8254 = !DILocation(line: 3174, column: 16, scope: !8249)
!8255 = !DILocation(line: 3175, column: 16, scope: !8256)
!8256 = distinct !DILexicalBlock(scope: !8249, file: !3, line: 3175, column: 7)
!8257 = !DILocation(line: 3175, column: 21, scope: !8256)
!8258 = !DILocation(line: 3175, column: 8, scope: !8256)
!8259 = !DILocation(line: 3175, column: 7, scope: !8249)
!8260 = !DILocalVariable(name: "i", scope: !8261, file: !3, line: 3176, type: !32)
!8261 = distinct !DILexicalBlock(scope: !8256, file: !3, line: 3175, column: 38)
!8262 = !DILocation(line: 3176, column: 8, scope: !8261)
!8263 = !DILocation(line: 3176, column: 27, scope: !8261)
!8264 = !DILocation(line: 3176, column: 32, scope: !8261)
!8265 = !DILocation(line: 3176, column: 37, scope: !8261)
!8266 = !DILocation(line: 3176, column: 12, scope: !8261)
!8267 = !DILocation(line: 3177, column: 12, scope: !8261)
!8268 = !DILocation(line: 3177, column: 30, scope: !8261)
!8269 = !DILocation(line: 3177, column: 32, scope: !8261)
!8270 = !DILocation(line: 3177, column: 4, scope: !8261)
!8271 = !DILocation(line: 3178, column: 3, scope: !8261)
!8272 = !DILocation(line: 3179, column: 77, scope: !8249)
!8273 = !DILocation(line: 3179, column: 82, scope: !8249)
!8274 = !DILocation(line: 3179, column: 88, scope: !8249)
!8275 = !DILocation(line: 3179, column: 3, scope: !8249)
!8276 = !DILocation(line: 3180, column: 7, scope: !8277)
!8277 = distinct !DILexicalBlock(scope: !8249, file: !3, line: 3180, column: 7)
!8278 = !DILocation(line: 3180, column: 14, scope: !8277)
!8279 = !DILocation(line: 3180, column: 21, scope: !8277)
!8280 = !DILocation(line: 3180, column: 42, scope: !8277)
!8281 = !DILocation(line: 3181, column: 7, scope: !8277)
!8282 = !DILocation(line: 3181, column: 14, scope: !8277)
!8283 = !DILocation(line: 3181, column: 21, scope: !8277)
!8284 = !DILocation(line: 3180, column: 7, scope: !8249)
!8285 = !DILocation(line: 3182, column: 4, scope: !8277)
!8286 = !DILocation(line: 3185, column: 5, scope: !8277)
!8287 = !DILocation(line: 3185, column: 12, scope: !8277)
!8288 = !DILocation(line: 3185, column: 20, scope: !8277)
!8289 = !DILocation(line: 3185, column: 27, scope: !8277)
!8290 = !DILocation(line: 3184, column: 4, scope: !8277)
!8291 = !DILocation(line: 3186, column: 2, scope: !8249)
!8292 = !DILocation(line: 3188, column: 6, scope: !8293)
!8293 = distinct !DILexicalBlock(scope: !7874, file: !3, line: 3188, column: 6)
!8294 = !DILocation(line: 3188, column: 15, scope: !8293)
!8295 = !DILocation(line: 3188, column: 6, scope: !7874)
!8296 = !DILocation(line: 3190, column: 10, scope: !8293)
!8297 = !DILocation(line: 3190, column: 15, scope: !8293)
!8298 = !DILocation(line: 3190, column: 21, scope: !8293)
!8299 = !DILocation(line: 3189, column: 3, scope: !8293)
!8300 = !DILocation(line: 3193, column: 10, scope: !8293)
!8301 = !DILocation(line: 3193, column: 15, scope: !8293)
!8302 = !DILocation(line: 3192, column: 3, scope: !8293)
!8303 = !DILocation(line: 3195, column: 18, scope: !7874)
!8304 = !DILocation(line: 3195, column: 23, scope: !7874)
!8305 = !DILocation(line: 3195, column: 2, scope: !7874)
!8306 = !DILocation(line: 3197, column: 2, scope: !7874)
!8307 = !DILabel(scope: !7874, name: "err_out_iounmap", file: !3, line: 3199)
!8308 = !DILocation(line: 3199, column: 1, scope: !7874)
!8309 = !DILocation(line: 3200, column: 10, scope: !7874)
!8310 = !DILocation(line: 3200, column: 14, scope: !7874)
!8311 = !DILocation(line: 3200, column: 2, scope: !7874)
!8312 = !DILabel(scope: !7874, name: "err_out_free_res", file: !3, line: 3202)
!8313 = !DILocation(line: 3202, column: 1, scope: !7874)
!8314 = !DILocation(line: 3203, column: 22, scope: !7874)
!8315 = !DILocation(line: 3203, column: 2, scope: !7874)
!8316 = !DILabel(scope: !7874, name: "err_out_clear_quattro", file: !3, line: 3205)
!8317 = !DILocation(line: 3205, column: 1, scope: !7874)
!8318 = !DILocation(line: 3206, column: 6, scope: !8319)
!8319 = distinct !DILexicalBlock(scope: !7874, file: !3, line: 3206, column: 6)
!8320 = !DILocation(line: 3206, column: 9, scope: !8319)
!8321 = !DILocation(line: 3206, column: 6, scope: !7874)
!8322 = !DILocation(line: 3207, column: 3, scope: !8319)
!8323 = !DILocation(line: 3207, column: 7, scope: !8319)
!8324 = !DILocation(line: 3207, column: 19, scope: !8319)
!8325 = !DILocation(line: 3207, column: 29, scope: !8319)
!8326 = !DILocation(line: 3209, column: 14, scope: !7874)
!8327 = !DILocation(line: 3209, column: 2, scope: !7874)
!8328 = !DILabel(scope: !7874, name: "err_out", file: !3, line: 3211)
!8329 = !DILocation(line: 3211, column: 1, scope: !7874)
!8330 = !DILocation(line: 3212, column: 9, scope: !7874)
!8331 = !DILocation(line: 3212, column: 2, scope: !7874)
!8332 = !DILocation(line: 3213, column: 1, scope: !7874)
!8333 = distinct !DISubprogram(name: "happy_meal_pci_remove", scope: !3, file: !3, line: 3215, type: !7408, scopeLine: 3216, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!8334 = !DILocalVariable(name: "pdev", arg: 1, scope: !8333, file: !3, line: 3215, type: !7280)
!8335 = !DILocation(line: 3215, column: 51, scope: !8333)
!8336 = !DILocalVariable(name: "hp", scope: !8333, file: !3, line: 3217, type: !7554)
!8337 = !DILocation(line: 3217, column: 21, scope: !8333)
!8338 = !DILocation(line: 3217, column: 42, scope: !8333)
!8339 = !DILocation(line: 3217, column: 26, scope: !8333)
!8340 = !DILocalVariable(name: "net_dev", scope: !8333, file: !3, line: 3218, type: !290)
!8341 = !DILocation(line: 3218, column: 21, scope: !8333)
!8342 = !DILocation(line: 3218, column: 31, scope: !8333)
!8343 = !DILocation(line: 3218, column: 35, scope: !8333)
!8344 = !DILocation(line: 3220, column: 20, scope: !8333)
!8345 = !DILocation(line: 3220, column: 2, scope: !8333)
!8346 = !DILocation(line: 3222, column: 20, scope: !8333)
!8347 = !DILocation(line: 3222, column: 24, scope: !8333)
!8348 = !DILocation(line: 3223, column: 6, scope: !8333)
!8349 = !DILocation(line: 3223, column: 10, scope: !8333)
!8350 = !DILocation(line: 3223, column: 23, scope: !8333)
!8351 = !DILocation(line: 3223, column: 27, scope: !8333)
!8352 = !DILocation(line: 3222, column: 2, scope: !8333)
!8353 = !DILocation(line: 3224, column: 10, scope: !8333)
!8354 = !DILocation(line: 3224, column: 14, scope: !8333)
!8355 = !DILocation(line: 3224, column: 2, scope: !8333)
!8356 = !DILocation(line: 3225, column: 22, scope: !8333)
!8357 = !DILocation(line: 3225, column: 26, scope: !8333)
!8358 = !DILocation(line: 3225, column: 2, scope: !8333)
!8359 = !DILocation(line: 3227, column: 14, scope: !8333)
!8360 = !DILocation(line: 3227, column: 2, scope: !8333)
!8361 = !DILocation(line: 3228, column: 1, scope: !8333)
!8362 = distinct !DISubprogram(name: "is_quattro_p", scope: !3, file: !3, line: 2900, type: !7416, scopeLine: 2901, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!8363 = !DILocalVariable(name: "pdev", arg: 1, scope: !8362, file: !3, line: 2900, type: !7280)
!8364 = !DILocation(line: 2900, column: 41, scope: !8362)
!8365 = !DILocalVariable(name: "busdev", scope: !8362, file: !3, line: 2902, type: !7280)
!8366 = !DILocation(line: 2902, column: 18, scope: !8362)
!8367 = !DILocation(line: 2902, column: 27, scope: !8362)
!8368 = !DILocation(line: 2902, column: 33, scope: !8362)
!8369 = !DILocation(line: 2902, column: 38, scope: !8362)
!8370 = !DILocalVariable(name: "this_pdev", scope: !8362, file: !3, line: 2903, type: !7280)
!8371 = !DILocation(line: 2903, column: 18, scope: !8362)
!8372 = !DILocalVariable(name: "n_hmes", scope: !8362, file: !3, line: 2904, type: !32)
!8373 = !DILocation(line: 2904, column: 6, scope: !8362)
!8374 = !DILocation(line: 2906, column: 6, scope: !8375)
!8375 = distinct !DILexicalBlock(scope: !8362, file: !3, line: 2906, column: 6)
!8376 = !DILocation(line: 2906, column: 13, scope: !8375)
!8377 = !DILocation(line: 2906, column: 21, scope: !8375)
!8378 = !DILocation(line: 2907, column: 6, scope: !8375)
!8379 = !DILocation(line: 2907, column: 14, scope: !8375)
!8380 = !DILocation(line: 2907, column: 21, scope: !8375)
!8381 = !DILocation(line: 2907, column: 42, scope: !8375)
!8382 = !DILocation(line: 2908, column: 6, scope: !8375)
!8383 = !DILocation(line: 2908, column: 14, scope: !8375)
!8384 = !DILocation(line: 2908, column: 21, scope: !8375)
!8385 = !DILocation(line: 2906, column: 6, scope: !8362)
!8386 = !DILocation(line: 2909, column: 3, scope: !8375)
!8387 = !DILocation(line: 2911, column: 9, scope: !8362)
!8388 = !DILocalVariable(name: "__mptr", scope: !8389, file: !3, line: 2912, type: !591)
!8389 = distinct !DILexicalBlock(scope: !8390, file: !3, line: 2912, column: 2)
!8390 = distinct !DILexicalBlock(scope: !8362, file: !3, line: 2912, column: 2)
!8391 = !DILocation(line: 2912, column: 2, scope: !8389)
!8392 = !DILocation(line: 2912, column: 2, scope: !8393)
!8393 = distinct !DILexicalBlock(scope: !8389, file: !3, line: 2912, column: 2)
!8394 = !DILocation(line: 2912, column: 2, scope: !8390)
!8395 = !DILocation(line: 2912, column: 2, scope: !8396)
!8396 = distinct !DILexicalBlock(scope: !8390, file: !3, line: 2912, column: 2)
!8397 = !DILocation(line: 2913, column: 7, scope: !8398)
!8398 = distinct !DILexicalBlock(scope: !8399, file: !3, line: 2913, column: 7)
!8399 = distinct !DILexicalBlock(scope: !8396, file: !3, line: 2912, column: 64)
!8400 = !DILocation(line: 2913, column: 18, scope: !8398)
!8401 = !DILocation(line: 2913, column: 25, scope: !8398)
!8402 = !DILocation(line: 2913, column: 46, scope: !8398)
!8403 = !DILocation(line: 2914, column: 7, scope: !8398)
!8404 = !DILocation(line: 2914, column: 18, scope: !8398)
!8405 = !DILocation(line: 2914, column: 25, scope: !8398)
!8406 = !DILocation(line: 2913, column: 7, scope: !8399)
!8407 = !DILocation(line: 2915, column: 10, scope: !8398)
!8408 = !DILocation(line: 2915, column: 4, scope: !8398)
!8409 = !DILocation(line: 2916, column: 2, scope: !8399)
!8410 = !DILocalVariable(name: "__mptr", scope: !8411, file: !3, line: 2912, type: !591)
!8411 = distinct !DILexicalBlock(scope: !8396, file: !3, line: 2912, column: 2)
!8412 = !DILocation(line: 2912, column: 2, scope: !8411)
!8413 = !DILocation(line: 2912, column: 2, scope: !8414)
!8414 = distinct !DILexicalBlock(scope: !8411, file: !3, line: 2912, column: 2)
!8415 = distinct !{!8415, !8394, !8416}
!8416 = !DILocation(line: 2916, column: 2, scope: !8390)
!8417 = !DILocation(line: 2918, column: 6, scope: !8418)
!8418 = distinct !DILexicalBlock(scope: !8362, file: !3, line: 2918, column: 6)
!8419 = !DILocation(line: 2918, column: 13, scope: !8418)
!8420 = !DILocation(line: 2918, column: 6, scope: !8362)
!8421 = !DILocation(line: 2919, column: 3, scope: !8418)
!8422 = !DILocation(line: 2921, column: 2, scope: !8362)
!8423 = !DILocation(line: 2922, column: 1, scope: !8362)
!8424 = distinct !DISubprogram(name: "quattro_pci_find", scope: !3, file: !3, line: 2639, type: !8425, scopeLine: 2640, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!8425 = !DISubroutineType(types: !8426)
!8426 = !{!7619, !7280}
!8427 = !DILocalVariable(name: "s", arg: 1, scope: !8428, file: !7130, line: 445, type: !2051)
!8428 = distinct !DISubprogram(name: "kmem_cache_alloc_trace", scope: !7130, file: !7130, line: 445, type: !8429, scopeLine: 447, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!8429 = !DISubroutineType(types: !8430)
!8430 = !{!591, !2051, !1742, !1039}
!8431 = !DILocation(line: 445, column: 72, scope: !8428, inlinedAt: !8432)
!8432 = distinct !DILocation(line: 552, column: 10, scope: !8433, inlinedAt: !8438)
!8433 = distinct !DILexicalBlock(scope: !8434, file: !7130, line: 540, column: 34)
!8434 = distinct !DILexicalBlock(scope: !8435, file: !7130, line: 540, column: 6)
!8435 = distinct !DISubprogram(name: "kmalloc", scope: !7130, file: !7130, line: 538, type: !8436, scopeLine: 539, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!8436 = !DISubroutineType(types: !8437)
!8437 = !{!591, !1039, !1742}
!8438 = distinct !DILocation(line: 2651, column: 7, scope: !8424)
!8439 = !DILocalVariable(name: "flags", arg: 2, scope: !8428, file: !7130, line: 446, type: !1742)
!8440 = !DILocation(line: 446, column: 9, scope: !8428, inlinedAt: !8432)
!8441 = !DILocalVariable(name: "size", arg: 3, scope: !8428, file: !7130, line: 446, type: !1039)
!8442 = !DILocation(line: 446, column: 23, scope: !8428, inlinedAt: !8432)
!8443 = !DILocalVariable(name: "ret", scope: !8428, file: !7130, line: 448, type: !591)
!8444 = !DILocation(line: 448, column: 8, scope: !8428, inlinedAt: !8432)
!8445 = !DILocalVariable(name: "flags", arg: 1, scope: !8446, file: !7130, line: 318, type: !1742)
!8446 = distinct !DISubprogram(name: "kmalloc_type", scope: !7130, file: !7130, line: 318, type: !8447, scopeLine: 319, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!8447 = !DISubroutineType(types: !8448)
!8448 = !{!7129, !1742}
!8449 = !DILocation(line: 318, column: 67, scope: !8446, inlinedAt: !8450)
!8450 = distinct !DILocation(line: 553, column: 20, scope: !8433, inlinedAt: !8438)
!8451 = !DILocalVariable(name: "size", arg: 1, scope: !8452, file: !7130, line: 346, type: !1039)
!8452 = distinct !DISubprogram(name: "kmalloc_index", scope: !7130, file: !7130, line: 346, type: !8453, scopeLine: 347, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!8453 = !DISubroutineType(types: !8454)
!8454 = !{!7, !1039}
!8455 = !DILocation(line: 346, column: 58, scope: !8452, inlinedAt: !8456)
!8456 = distinct !DILocation(line: 547, column: 11, scope: !8433, inlinedAt: !8438)
!8457 = !DILocalVariable(name: "size", arg: 1, scope: !8458, file: !7130, line: 472, type: !1039)
!8458 = distinct !DISubprogram(name: "kmalloc_order_trace", scope: !7130, file: !7130, line: 472, type: !8459, scopeLine: 473, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!8459 = !DISubroutineType(types: !8460)
!8460 = !{!591, !1039, !1742, !7}
!8461 = !DILocation(line: 472, column: 28, scope: !8458, inlinedAt: !8462)
!8462 = distinct !DILocation(line: 481, column: 9, scope: !8463, inlinedAt: !8464)
!8463 = distinct !DISubprogram(name: "kmalloc_large", scope: !7130, file: !7130, line: 478, type: !8436, scopeLine: 479, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!8464 = distinct !DILocation(line: 545, column: 11, scope: !8465, inlinedAt: !8438)
!8465 = distinct !DILexicalBlock(scope: !8433, file: !7130, line: 544, column: 7)
!8466 = !DILocalVariable(name: "flags", arg: 2, scope: !8458, file: !7130, line: 472, type: !1742)
!8467 = !DILocation(line: 472, column: 40, scope: !8458, inlinedAt: !8462)
!8468 = !DILocalVariable(name: "order", arg: 3, scope: !8458, file: !7130, line: 472, type: !7)
!8469 = !DILocation(line: 472, column: 60, scope: !8458, inlinedAt: !8462)
!8470 = !DILocalVariable(name: "size", arg: 1, scope: !8463, file: !7130, line: 478, type: !1039)
!8471 = !DILocation(line: 478, column: 51, scope: !8463, inlinedAt: !8464)
!8472 = !DILocalVariable(name: "flags", arg: 2, scope: !8463, file: !7130, line: 478, type: !1742)
!8473 = !DILocation(line: 478, column: 63, scope: !8463, inlinedAt: !8464)
!8474 = !DILocalVariable(name: "order", scope: !8463, file: !7130, line: 480, type: !7)
!8475 = !DILocation(line: 480, column: 15, scope: !8463, inlinedAt: !8464)
!8476 = !DILocalVariable(name: "size", arg: 1, scope: !8435, file: !7130, line: 538, type: !1039)
!8477 = !DILocation(line: 538, column: 45, scope: !8435, inlinedAt: !8438)
!8478 = !DILocalVariable(name: "flags", arg: 2, scope: !8435, file: !7130, line: 538, type: !1742)
!8479 = !DILocation(line: 538, column: 57, scope: !8435, inlinedAt: !8438)
!8480 = !DILocalVariable(name: "index", scope: !8433, file: !7130, line: 542, type: !7)
!8481 = !DILocation(line: 542, column: 16, scope: !8433, inlinedAt: !8438)
!8482 = !DILocalVariable(name: "pdev", arg: 1, scope: !8424, file: !3, line: 2639, type: !7280)
!8483 = !DILocation(line: 2639, column: 57, scope: !8424)
!8484 = !DILocalVariable(name: "bdev", scope: !8424, file: !3, line: 2641, type: !7280)
!8485 = !DILocation(line: 2641, column: 18, scope: !8424)
!8486 = !DILocation(line: 2641, column: 25, scope: !8424)
!8487 = !DILocation(line: 2641, column: 31, scope: !8424)
!8488 = !DILocation(line: 2641, column: 36, scope: !8424)
!8489 = !DILocalVariable(name: "qp", scope: !8424, file: !3, line: 2642, type: !7619)
!8490 = !DILocation(line: 2642, column: 18, scope: !8424)
!8491 = !DILocation(line: 2644, column: 7, scope: !8492)
!8492 = distinct !DILexicalBlock(scope: !8424, file: !3, line: 2644, column: 6)
!8493 = !DILocation(line: 2644, column: 6, scope: !8424)
!8494 = !DILocation(line: 2644, column: 13, scope: !8492)
!8495 = !DILocation(line: 2645, column: 12, scope: !8496)
!8496 = distinct !DILexicalBlock(scope: !8424, file: !3, line: 2645, column: 2)
!8497 = !DILocation(line: 2645, column: 10, scope: !8496)
!8498 = !DILocation(line: 2645, column: 7, scope: !8496)
!8499 = !DILocation(line: 2645, column: 26, scope: !8500)
!8500 = distinct !DILexicalBlock(scope: !8496, file: !3, line: 2645, column: 2)
!8501 = !DILocation(line: 2645, column: 29, scope: !8500)
!8502 = !DILocation(line: 2645, column: 2, scope: !8496)
!8503 = !DILocalVariable(name: "qpdev", scope: !8504, file: !3, line: 2646, type: !7280)
!8504 = distinct !DILexicalBlock(scope: !8500, file: !3, line: 2645, column: 53)
!8505 = !DILocation(line: 2646, column: 19, scope: !8504)
!8506 = !DILocation(line: 2646, column: 27, scope: !8504)
!8507 = !DILocation(line: 2646, column: 31, scope: !8504)
!8508 = !DILocation(line: 2648, column: 7, scope: !8509)
!8509 = distinct !DILexicalBlock(scope: !8504, file: !3, line: 2648, column: 7)
!8510 = !DILocation(line: 2648, column: 16, scope: !8509)
!8511 = !DILocation(line: 2648, column: 13, scope: !8509)
!8512 = !DILocation(line: 2648, column: 7, scope: !8504)
!8513 = !DILocation(line: 2649, column: 11, scope: !8509)
!8514 = !DILocation(line: 2649, column: 4, scope: !8509)
!8515 = !DILocation(line: 2650, column: 2, scope: !8504)
!8516 = !DILocation(line: 2645, column: 43, scope: !8500)
!8517 = !DILocation(line: 2645, column: 47, scope: !8500)
!8518 = !DILocation(line: 2645, column: 41, scope: !8500)
!8519 = !DILocation(line: 2645, column: 2, scope: !8500)
!8520 = distinct !{!8520, !8502, !8521}
!8521 = !DILocation(line: 2650, column: 2, scope: !8496)
!8522 = !DILocation(line: 540, column: 27, scope: !8434, inlinedAt: !8438)
!8523 = !DILocation(line: 540, column: 6, scope: !8434, inlinedAt: !8438)
!8524 = !DILocation(line: 540, column: 6, scope: !8435, inlinedAt: !8438)
!8525 = !DILocation(line: 544, column: 7, scope: !8465, inlinedAt: !8438)
!8526 = !DILocation(line: 544, column: 12, scope: !8465, inlinedAt: !8438)
!8527 = !DILocation(line: 544, column: 7, scope: !8433, inlinedAt: !8438)
!8528 = !DILocation(line: 545, column: 25, scope: !8465, inlinedAt: !8438)
!8529 = !DILocation(line: 545, column: 31, scope: !8465, inlinedAt: !8438)
!8530 = !DILocation(line: 480, column: 33, scope: !8463, inlinedAt: !8464)
!8531 = !DILocation(line: 480, column: 23, scope: !8463, inlinedAt: !8464)
!8532 = !DILocation(line: 481, column: 29, scope: !8463, inlinedAt: !8464)
!8533 = !DILocation(line: 481, column: 35, scope: !8463, inlinedAt: !8464)
!8534 = !DILocation(line: 481, column: 42, scope: !8463, inlinedAt: !8464)
!8535 = !DILocation(line: 474, column: 23, scope: !8458, inlinedAt: !8462)
!8536 = !DILocation(line: 474, column: 29, scope: !8458, inlinedAt: !8462)
!8537 = !DILocation(line: 474, column: 36, scope: !8458, inlinedAt: !8462)
!8538 = !DILocation(line: 474, column: 9, scope: !8458, inlinedAt: !8462)
!8539 = !DILocation(line: 545, column: 4, scope: !8465, inlinedAt: !8438)
!8540 = !DILocation(line: 547, column: 25, scope: !8433, inlinedAt: !8438)
!8541 = !DILocation(line: 348, column: 7, scope: !8542, inlinedAt: !8456)
!8542 = distinct !DILexicalBlock(scope: !8452, file: !7130, line: 348, column: 6)
!8543 = !DILocation(line: 348, column: 6, scope: !8452, inlinedAt: !8456)
!8544 = !DILocation(line: 349, column: 3, scope: !8542, inlinedAt: !8456)
!8545 = !DILocation(line: 351, column: 6, scope: !8546, inlinedAt: !8456)
!8546 = distinct !DILexicalBlock(scope: !8452, file: !7130, line: 351, column: 6)
!8547 = !DILocation(line: 351, column: 11, scope: !8546, inlinedAt: !8456)
!8548 = !DILocation(line: 351, column: 6, scope: !8452, inlinedAt: !8456)
!8549 = !DILocation(line: 352, column: 3, scope: !8546, inlinedAt: !8456)
!8550 = !DILocation(line: 354, column: 32, scope: !8551, inlinedAt: !8456)
!8551 = distinct !DILexicalBlock(scope: !8452, file: !7130, line: 354, column: 6)
!8552 = !DILocation(line: 354, column: 37, scope: !8551, inlinedAt: !8456)
!8553 = !DILocation(line: 354, column: 42, scope: !8551, inlinedAt: !8456)
!8554 = !DILocation(line: 354, column: 45, scope: !8551, inlinedAt: !8456)
!8555 = !DILocation(line: 354, column: 50, scope: !8551, inlinedAt: !8456)
!8556 = !DILocation(line: 354, column: 6, scope: !8452, inlinedAt: !8456)
!8557 = !DILocation(line: 355, column: 3, scope: !8551, inlinedAt: !8456)
!8558 = !DILocation(line: 356, column: 32, scope: !8559, inlinedAt: !8456)
!8559 = distinct !DILexicalBlock(scope: !8452, file: !7130, line: 356, column: 6)
!8560 = !DILocation(line: 356, column: 37, scope: !8559, inlinedAt: !8456)
!8561 = !DILocation(line: 356, column: 43, scope: !8559, inlinedAt: !8456)
!8562 = !DILocation(line: 356, column: 46, scope: !8559, inlinedAt: !8456)
!8563 = !DILocation(line: 356, column: 51, scope: !8559, inlinedAt: !8456)
!8564 = !DILocation(line: 356, column: 6, scope: !8452, inlinedAt: !8456)
!8565 = !DILocation(line: 357, column: 3, scope: !8559, inlinedAt: !8456)
!8566 = !DILocation(line: 358, column: 6, scope: !8567, inlinedAt: !8456)
!8567 = distinct !DILexicalBlock(scope: !8452, file: !7130, line: 358, column: 6)
!8568 = !DILocation(line: 358, column: 11, scope: !8567, inlinedAt: !8456)
!8569 = !DILocation(line: 358, column: 6, scope: !8452, inlinedAt: !8456)
!8570 = !DILocation(line: 358, column: 26, scope: !8567, inlinedAt: !8456)
!8571 = !DILocation(line: 359, column: 6, scope: !8572, inlinedAt: !8456)
!8572 = distinct !DILexicalBlock(scope: !8452, file: !7130, line: 359, column: 6)
!8573 = !DILocation(line: 359, column: 11, scope: !8572, inlinedAt: !8456)
!8574 = !DILocation(line: 359, column: 6, scope: !8452, inlinedAt: !8456)
!8575 = !DILocation(line: 359, column: 26, scope: !8572, inlinedAt: !8456)
!8576 = !DILocation(line: 360, column: 6, scope: !8577, inlinedAt: !8456)
!8577 = distinct !DILexicalBlock(scope: !8452, file: !7130, line: 360, column: 6)
!8578 = !DILocation(line: 360, column: 11, scope: !8577, inlinedAt: !8456)
!8579 = !DILocation(line: 360, column: 6, scope: !8452, inlinedAt: !8456)
!8580 = !DILocation(line: 360, column: 26, scope: !8577, inlinedAt: !8456)
!8581 = !DILocation(line: 361, column: 6, scope: !8582, inlinedAt: !8456)
!8582 = distinct !DILexicalBlock(scope: !8452, file: !7130, line: 361, column: 6)
!8583 = !DILocation(line: 361, column: 11, scope: !8582, inlinedAt: !8456)
!8584 = !DILocation(line: 361, column: 6, scope: !8452, inlinedAt: !8456)
!8585 = !DILocation(line: 361, column: 26, scope: !8582, inlinedAt: !8456)
!8586 = !DILocation(line: 362, column: 6, scope: !8587, inlinedAt: !8456)
!8587 = distinct !DILexicalBlock(scope: !8452, file: !7130, line: 362, column: 6)
!8588 = !DILocation(line: 362, column: 11, scope: !8587, inlinedAt: !8456)
!8589 = !DILocation(line: 362, column: 6, scope: !8452, inlinedAt: !8456)
!8590 = !DILocation(line: 362, column: 26, scope: !8587, inlinedAt: !8456)
!8591 = !DILocation(line: 363, column: 6, scope: !8592, inlinedAt: !8456)
!8592 = distinct !DILexicalBlock(scope: !8452, file: !7130, line: 363, column: 6)
!8593 = !DILocation(line: 363, column: 11, scope: !8592, inlinedAt: !8456)
!8594 = !DILocation(line: 363, column: 6, scope: !8452, inlinedAt: !8456)
!8595 = !DILocation(line: 363, column: 26, scope: !8592, inlinedAt: !8456)
!8596 = !DILocation(line: 364, column: 6, scope: !8597, inlinedAt: !8456)
!8597 = distinct !DILexicalBlock(scope: !8452, file: !7130, line: 364, column: 6)
!8598 = !DILocation(line: 364, column: 11, scope: !8597, inlinedAt: !8456)
!8599 = !DILocation(line: 364, column: 6, scope: !8452, inlinedAt: !8456)
!8600 = !DILocation(line: 364, column: 26, scope: !8597, inlinedAt: !8456)
!8601 = !DILocation(line: 365, column: 6, scope: !8602, inlinedAt: !8456)
!8602 = distinct !DILexicalBlock(scope: !8452, file: !7130, line: 365, column: 6)
!8603 = !DILocation(line: 365, column: 11, scope: !8602, inlinedAt: !8456)
!8604 = !DILocation(line: 365, column: 6, scope: !8452, inlinedAt: !8456)
!8605 = !DILocation(line: 365, column: 26, scope: !8602, inlinedAt: !8456)
!8606 = !DILocation(line: 366, column: 6, scope: !8607, inlinedAt: !8456)
!8607 = distinct !DILexicalBlock(scope: !8452, file: !7130, line: 366, column: 6)
!8608 = !DILocation(line: 366, column: 11, scope: !8607, inlinedAt: !8456)
!8609 = !DILocation(line: 366, column: 6, scope: !8452, inlinedAt: !8456)
!8610 = !DILocation(line: 366, column: 26, scope: !8607, inlinedAt: !8456)
!8611 = !DILocation(line: 367, column: 6, scope: !8612, inlinedAt: !8456)
!8612 = distinct !DILexicalBlock(scope: !8452, file: !7130, line: 367, column: 6)
!8613 = !DILocation(line: 367, column: 11, scope: !8612, inlinedAt: !8456)
!8614 = !DILocation(line: 367, column: 6, scope: !8452, inlinedAt: !8456)
!8615 = !DILocation(line: 367, column: 26, scope: !8612, inlinedAt: !8456)
!8616 = !DILocation(line: 368, column: 6, scope: !8617, inlinedAt: !8456)
!8617 = distinct !DILexicalBlock(scope: !8452, file: !7130, line: 368, column: 6)
!8618 = !DILocation(line: 368, column: 11, scope: !8617, inlinedAt: !8456)
!8619 = !DILocation(line: 368, column: 6, scope: !8452, inlinedAt: !8456)
!8620 = !DILocation(line: 368, column: 26, scope: !8617, inlinedAt: !8456)
!8621 = !DILocation(line: 369, column: 6, scope: !8622, inlinedAt: !8456)
!8622 = distinct !DILexicalBlock(scope: !8452, file: !7130, line: 369, column: 6)
!8623 = !DILocation(line: 369, column: 11, scope: !8622, inlinedAt: !8456)
!8624 = !DILocation(line: 369, column: 6, scope: !8452, inlinedAt: !8456)
!8625 = !DILocation(line: 369, column: 26, scope: !8622, inlinedAt: !8456)
!8626 = !DILocation(line: 370, column: 6, scope: !8627, inlinedAt: !8456)
!8627 = distinct !DILexicalBlock(scope: !8452, file: !7130, line: 370, column: 6)
!8628 = !DILocation(line: 370, column: 11, scope: !8627, inlinedAt: !8456)
!8629 = !DILocation(line: 370, column: 6, scope: !8452, inlinedAt: !8456)
!8630 = !DILocation(line: 370, column: 26, scope: !8627, inlinedAt: !8456)
!8631 = !DILocation(line: 371, column: 6, scope: !8632, inlinedAt: !8456)
!8632 = distinct !DILexicalBlock(scope: !8452, file: !7130, line: 371, column: 6)
!8633 = !DILocation(line: 371, column: 11, scope: !8632, inlinedAt: !8456)
!8634 = !DILocation(line: 371, column: 6, scope: !8452, inlinedAt: !8456)
!8635 = !DILocation(line: 371, column: 26, scope: !8632, inlinedAt: !8456)
!8636 = !DILocation(line: 372, column: 6, scope: !8637, inlinedAt: !8456)
!8637 = distinct !DILexicalBlock(scope: !8452, file: !7130, line: 372, column: 6)
!8638 = !DILocation(line: 372, column: 11, scope: !8637, inlinedAt: !8456)
!8639 = !DILocation(line: 372, column: 6, scope: !8452, inlinedAt: !8456)
!8640 = !DILocation(line: 372, column: 26, scope: !8637, inlinedAt: !8456)
!8641 = !DILocation(line: 373, column: 6, scope: !8642, inlinedAt: !8456)
!8642 = distinct !DILexicalBlock(scope: !8452, file: !7130, line: 373, column: 6)
!8643 = !DILocation(line: 373, column: 11, scope: !8642, inlinedAt: !8456)
!8644 = !DILocation(line: 373, column: 6, scope: !8452, inlinedAt: !8456)
!8645 = !DILocation(line: 373, column: 26, scope: !8642, inlinedAt: !8456)
!8646 = !DILocation(line: 374, column: 6, scope: !8647, inlinedAt: !8456)
!8647 = distinct !DILexicalBlock(scope: !8452, file: !7130, line: 374, column: 6)
!8648 = !DILocation(line: 374, column: 11, scope: !8647, inlinedAt: !8456)
!8649 = !DILocation(line: 374, column: 6, scope: !8452, inlinedAt: !8456)
!8650 = !DILocation(line: 374, column: 26, scope: !8647, inlinedAt: !8456)
!8651 = !DILocation(line: 375, column: 6, scope: !8652, inlinedAt: !8456)
!8652 = distinct !DILexicalBlock(scope: !8452, file: !7130, line: 375, column: 6)
!8653 = !DILocation(line: 375, column: 11, scope: !8652, inlinedAt: !8456)
!8654 = !DILocation(line: 375, column: 6, scope: !8452, inlinedAt: !8456)
!8655 = !DILocation(line: 375, column: 27, scope: !8652, inlinedAt: !8456)
!8656 = !DILocation(line: 376, column: 6, scope: !8657, inlinedAt: !8456)
!8657 = distinct !DILexicalBlock(scope: !8452, file: !7130, line: 376, column: 6)
!8658 = !DILocation(line: 376, column: 11, scope: !8657, inlinedAt: !8456)
!8659 = !DILocation(line: 376, column: 6, scope: !8452, inlinedAt: !8456)
!8660 = !DILocation(line: 376, column: 32, scope: !8657, inlinedAt: !8456)
!8661 = !DILocation(line: 377, column: 6, scope: !8662, inlinedAt: !8456)
!8662 = distinct !DILexicalBlock(scope: !8452, file: !7130, line: 377, column: 6)
!8663 = !DILocation(line: 377, column: 11, scope: !8662, inlinedAt: !8456)
!8664 = !DILocation(line: 377, column: 6, scope: !8452, inlinedAt: !8456)
!8665 = !DILocation(line: 377, column: 32, scope: !8662, inlinedAt: !8456)
!8666 = !DILocation(line: 378, column: 6, scope: !8667, inlinedAt: !8456)
!8667 = distinct !DILexicalBlock(scope: !8452, file: !7130, line: 378, column: 6)
!8668 = !DILocation(line: 378, column: 11, scope: !8667, inlinedAt: !8456)
!8669 = !DILocation(line: 378, column: 6, scope: !8452, inlinedAt: !8456)
!8670 = !DILocation(line: 378, column: 32, scope: !8667, inlinedAt: !8456)
!8671 = !DILocation(line: 379, column: 6, scope: !8672, inlinedAt: !8456)
!8672 = distinct !DILexicalBlock(scope: !8452, file: !7130, line: 379, column: 6)
!8673 = !DILocation(line: 379, column: 11, scope: !8672, inlinedAt: !8456)
!8674 = !DILocation(line: 379, column: 6, scope: !8452, inlinedAt: !8456)
!8675 = !DILocation(line: 379, column: 33, scope: !8672, inlinedAt: !8456)
!8676 = !DILocation(line: 380, column: 6, scope: !8677, inlinedAt: !8456)
!8677 = distinct !DILexicalBlock(scope: !8452, file: !7130, line: 380, column: 6)
!8678 = !DILocation(line: 380, column: 11, scope: !8677, inlinedAt: !8456)
!8679 = !DILocation(line: 380, column: 6, scope: !8452, inlinedAt: !8456)
!8680 = !DILocation(line: 380, column: 33, scope: !8677, inlinedAt: !8456)
!8681 = !DILocation(line: 381, column: 6, scope: !8682, inlinedAt: !8456)
!8682 = distinct !DILexicalBlock(scope: !8452, file: !7130, line: 381, column: 6)
!8683 = !DILocation(line: 381, column: 11, scope: !8682, inlinedAt: !8456)
!8684 = !DILocation(line: 381, column: 6, scope: !8452, inlinedAt: !8456)
!8685 = !DILocation(line: 381, column: 33, scope: !8682, inlinedAt: !8456)
!8686 = !DILocation(line: 382, column: 2, scope: !8687, inlinedAt: !8456)
!8687 = distinct !DILexicalBlock(scope: !8688, file: !7130, line: 382, column: 2)
!8688 = distinct !DILexicalBlock(scope: !8452, file: !7130, line: 382, column: 2)
!8689 = !{i32 -2143939108, i32 -2143939079, i32 -2143939033, i32 -2143938975, i32 -2143938921, i32 -2143938867, i32 -2143938812, i32 -2143938781}
!8690 = !DILocation(line: 382, column: 2, scope: !8691, inlinedAt: !8456)
!8691 = distinct !DILexicalBlock(scope: !8692, file: !7130, line: 382, column: 2)
!8692 = distinct !DILexicalBlock(scope: !8688, file: !7130, line: 382, column: 2)
!8693 = !{i32 -2143938338, i32 -2143938331, i32 -2143938277, i32 -2143938246, i32 -2143938216}
!8694 = !DILocation(line: 382, column: 2, scope: !8692, inlinedAt: !8456)
!8695 = !DILocation(line: 386, column: 1, scope: !8452, inlinedAt: !8456)
!8696 = !DILocation(line: 547, column: 9, scope: !8433, inlinedAt: !8438)
!8697 = !DILocation(line: 549, column: 8, scope: !8698, inlinedAt: !8438)
!8698 = distinct !DILexicalBlock(scope: !8433, file: !7130, line: 549, column: 7)
!8699 = !DILocation(line: 549, column: 7, scope: !8433, inlinedAt: !8438)
!8700 = !DILocation(line: 550, column: 4, scope: !8698, inlinedAt: !8438)
!8701 = !DILocation(line: 553, column: 33, scope: !8433, inlinedAt: !8438)
!8702 = !DILocation(line: 325, column: 6, scope: !8703, inlinedAt: !8450)
!8703 = distinct !DILexicalBlock(scope: !8446, file: !7130, line: 325, column: 6)
!8704 = !DILocation(line: 325, column: 6, scope: !8446, inlinedAt: !8450)
!8705 = !DILocation(line: 326, column: 3, scope: !8703, inlinedAt: !8450)
!8706 = !DILocation(line: 332, column: 9, scope: !8446, inlinedAt: !8450)
!8707 = !DILocation(line: 332, column: 15, scope: !8446, inlinedAt: !8450)
!8708 = !DILocation(line: 332, column: 2, scope: !8446, inlinedAt: !8450)
!8709 = !DILocation(line: 336, column: 1, scope: !8446, inlinedAt: !8450)
!8710 = !DILocation(line: 553, column: 5, scope: !8433, inlinedAt: !8438)
!8711 = !DILocation(line: 553, column: 41, scope: !8433, inlinedAt: !8438)
!8712 = !DILocation(line: 554, column: 5, scope: !8433, inlinedAt: !8438)
!8713 = !DILocation(line: 554, column: 12, scope: !8433, inlinedAt: !8438)
!8714 = !DILocation(line: 448, column: 31, scope: !8428, inlinedAt: !8432)
!8715 = !DILocation(line: 448, column: 34, scope: !8428, inlinedAt: !8432)
!8716 = !DILocation(line: 448, column: 14, scope: !8428, inlinedAt: !8432)
!8717 = !DILocation(line: 450, column: 22, scope: !8428, inlinedAt: !8432)
!8718 = !DILocation(line: 450, column: 25, scope: !8428, inlinedAt: !8432)
!8719 = !DILocation(line: 450, column: 30, scope: !8428, inlinedAt: !8432)
!8720 = !DILocation(line: 450, column: 36, scope: !8428, inlinedAt: !8432)
!8721 = !DILocation(line: 450, column: 8, scope: !8428, inlinedAt: !8432)
!8722 = !DILocation(line: 450, column: 6, scope: !8428, inlinedAt: !8432)
!8723 = !DILocation(line: 451, column: 9, scope: !8428, inlinedAt: !8432)
!8724 = !DILocation(line: 552, column: 3, scope: !8433, inlinedAt: !8438)
!8725 = !DILocation(line: 557, column: 19, scope: !8435, inlinedAt: !8438)
!8726 = !DILocation(line: 557, column: 25, scope: !8435, inlinedAt: !8438)
!8727 = !DILocation(line: 557, column: 9, scope: !8435, inlinedAt: !8438)
!8728 = !DILocation(line: 557, column: 2, scope: !8435, inlinedAt: !8438)
!8729 = !DILocation(line: 558, column: 1, scope: !8435, inlinedAt: !8438)
!8730 = !DILocation(line: 2651, column: 7, scope: !8424)
!8731 = !DILocation(line: 2651, column: 5, scope: !8424)
!8732 = !DILocation(line: 2652, column: 6, scope: !8733)
!8733 = distinct !DILexicalBlock(scope: !8424, file: !3, line: 2652, column: 6)
!8734 = !DILocation(line: 2652, column: 9, scope: !8733)
!8735 = !DILocation(line: 2652, column: 6, scope: !8424)
!8736 = !DILocalVariable(name: "i", scope: !8737, file: !3, line: 2653, type: !32)
!8737 = distinct !DILexicalBlock(scope: !8733, file: !3, line: 2652, column: 18)
!8738 = !DILocation(line: 2653, column: 7, scope: !8737)
!8739 = !DILocation(line: 2655, column: 10, scope: !8740)
!8740 = distinct !DILexicalBlock(scope: !8737, file: !3, line: 2655, column: 3)
!8741 = !DILocation(line: 2655, column: 8, scope: !8740)
!8742 = !DILocation(line: 2655, column: 15, scope: !8743)
!8743 = distinct !DILexicalBlock(scope: !8740, file: !3, line: 2655, column: 3)
!8744 = !DILocation(line: 2655, column: 17, scope: !8743)
!8745 = !DILocation(line: 2655, column: 3, scope: !8740)
!8746 = !DILocation(line: 2656, column: 4, scope: !8743)
!8747 = !DILocation(line: 2656, column: 8, scope: !8743)
!8748 = !DILocation(line: 2656, column: 20, scope: !8743)
!8749 = !DILocation(line: 2656, column: 23, scope: !8743)
!8750 = !DILocation(line: 2655, column: 23, scope: !8743)
!8751 = !DILocation(line: 2655, column: 3, scope: !8743)
!8752 = distinct !{!8752, !8745, !8753}
!8753 = !DILocation(line: 2656, column: 25, scope: !8740)
!8754 = !DILocation(line: 2658, column: 21, scope: !8737)
!8755 = !DILocation(line: 2658, column: 3, scope: !8737)
!8756 = !DILocation(line: 2658, column: 7, scope: !8737)
!8757 = !DILocation(line: 2658, column: 19, scope: !8737)
!8758 = !DILocation(line: 2659, column: 14, scope: !8737)
!8759 = !DILocation(line: 2659, column: 3, scope: !8737)
!8760 = !DILocation(line: 2659, column: 7, scope: !8737)
!8761 = !DILocation(line: 2659, column: 12, scope: !8737)
!8762 = !DILocation(line: 2660, column: 18, scope: !8737)
!8763 = !DILocation(line: 2660, column: 16, scope: !8737)
!8764 = !DILocation(line: 2663, column: 3, scope: !8737)
!8765 = !DILocation(line: 2663, column: 7, scope: !8737)
!8766 = !DILocation(line: 2663, column: 15, scope: !8737)
!8767 = !DILocation(line: 2664, column: 2, scope: !8737)
!8768 = !DILocation(line: 2665, column: 9, scope: !8424)
!8769 = !DILocation(line: 2665, column: 2, scope: !8424)
!8770 = !DILocation(line: 2666, column: 1, scope: !8424)
!8771 = distinct !DISubprogram(name: "netdev_priv", scope: !31, file: !31, line: 2322, type: !8772, scopeLine: 2323, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!8772 = !DISubroutineType(types: !8773)
!8773 = !{!591, !773}
!8774 = !DILocalVariable(name: "dev", arg: 1, scope: !8771, file: !31, line: 2322, type: !773)
!8775 = !DILocation(line: 2322, column: 58, scope: !8771)
!8776 = !DILocation(line: 2324, column: 17, scope: !8771)
!8777 = !DILocation(line: 2324, column: 9, scope: !8771)
!8778 = !DILocation(line: 2324, column: 21, scope: !8771)
!8779 = !DILocation(line: 2324, column: 2, scope: !8771)
!8780 = distinct !DISubprogram(name: "get_hme_mac_nonsparc", scope: !3, file: !3, line: 2955, type: !8781, scopeLine: 2956, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!8781 = !DISubroutineType(types: !8782)
!8782 = !{null, !7280, !564}
!8783 = !DILocalVariable(name: "pdev", arg: 1, scope: !8780, file: !3, line: 2955, type: !7280)
!8784 = !DILocation(line: 2955, column: 50, scope: !8780)
!8785 = !DILocalVariable(name: "dev_addr", arg: 2, scope: !8780, file: !3, line: 2955, type: !564)
!8786 = !DILocation(line: 2955, column: 71, scope: !8780)
!8787 = !DILocalVariable(name: "size", scope: !8780, file: !3, line: 2957, type: !1039)
!8788 = !DILocation(line: 2957, column: 9, scope: !8780)
!8789 = !DILocalVariable(name: "p", scope: !8780, file: !3, line: 2958, type: !591)
!8790 = !DILocation(line: 2958, column: 16, scope: !8780)
!8791 = !DILocation(line: 2958, column: 32, scope: !8780)
!8792 = !DILocation(line: 2958, column: 20, scope: !8780)
!8793 = !DILocation(line: 2960, column: 6, scope: !8794)
!8794 = distinct !DILexicalBlock(scope: !8780, file: !3, line: 2960, column: 6)
!8795 = !DILocation(line: 2960, column: 6, scope: !8780)
!8796 = !DILocalVariable(name: "index", scope: !8797, file: !3, line: 2961, type: !32)
!8797 = distinct !DILexicalBlock(scope: !8794, file: !3, line: 2960, column: 9)
!8798 = !DILocation(line: 2961, column: 7, scope: !8797)
!8799 = !DILocalVariable(name: "found", scope: !8797, file: !3, line: 2962, type: !32)
!8800 = !DILocation(line: 2962, column: 7, scope: !8797)
!8801 = !DILocation(line: 2964, column: 20, scope: !8802)
!8802 = distinct !DILexicalBlock(scope: !8797, file: !3, line: 2964, column: 7)
!8803 = !DILocation(line: 2964, column: 7, scope: !8802)
!8804 = !DILocation(line: 2964, column: 7, scope: !8797)
!8805 = !DILocation(line: 2965, column: 12, scope: !8802)
!8806 = !DILocation(line: 2965, column: 10, scope: !8802)
!8807 = !DILocation(line: 2965, column: 4, scope: !8802)
!8808 = !DILocation(line: 2967, column: 17, scope: !8797)
!8809 = !DILocation(line: 2967, column: 11, scope: !8797)
!8810 = !DILocation(line: 2967, column: 20, scope: !8797)
!8811 = !DILocation(line: 2967, column: 28, scope: !8797)
!8812 = !DILocation(line: 2968, column: 10, scope: !8797)
!8813 = !DILocation(line: 2968, column: 12, scope: !8797)
!8814 = !DILocation(line: 2968, column: 4, scope: !8797)
!8815 = !DILocation(line: 2968, column: 17, scope: !8797)
!8816 = !DILocation(line: 2968, column: 25, scope: !8797)
!8817 = !DILocation(line: 2969, column: 25, scope: !8797)
!8818 = !DILocation(line: 2969, column: 41, scope: !8797)
!8819 = !DILocation(line: 2969, column: 48, scope: !8797)
!8820 = !DILocation(line: 2969, column: 4, scope: !8797)
!8821 = !DILocation(line: 0, scope: !8797)
!8822 = !DILocation(line: 2967, column: 9, scope: !8797)
!8823 = !DILocation(line: 2970, column: 17, scope: !8797)
!8824 = !DILocation(line: 2970, column: 23, scope: !8797)
!8825 = !DILocation(line: 2970, column: 3, scope: !8797)
!8826 = !DILocation(line: 2971, column: 7, scope: !8827)
!8827 = distinct !DILexicalBlock(scope: !8797, file: !3, line: 2971, column: 7)
!8828 = !DILocation(line: 2971, column: 7, scope: !8797)
!8829 = !DILocation(line: 2972, column: 4, scope: !8827)
!8830 = !DILocation(line: 2973, column: 2, scope: !8797)
!8831 = !DILocation(line: 2976, column: 2, scope: !8780)
!8832 = !DILocation(line: 2976, column: 14, scope: !8780)
!8833 = !DILocation(line: 2977, column: 2, scope: !8780)
!8834 = !DILocation(line: 2977, column: 14, scope: !8780)
!8835 = !DILocation(line: 2978, column: 2, scope: !8780)
!8836 = !DILocation(line: 2978, column: 14, scope: !8780)
!8837 = !DILocation(line: 2979, column: 20, scope: !8780)
!8838 = !DILocation(line: 2979, column: 2, scope: !8780)
!8839 = !DILocation(line: 2980, column: 1, scope: !8780)
!8840 = distinct !DISubprogram(name: "dma_alloc_coherent", scope: !7822, file: !7822, line: 392, type: !8841, scopeLine: 394, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!8841 = !DISubroutineType(types: !8842)
!8842 = !{!591, !6545, !1039, !8843, !1742}
!8843 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2036, size: 64)
!8844 = !DILocalVariable(name: "dev", arg: 1, scope: !8840, file: !7822, line: 392, type: !6545)
!8845 = !DILocation(line: 392, column: 55, scope: !8840)
!8846 = !DILocalVariable(name: "size", arg: 2, scope: !8840, file: !7822, line: 392, type: !1039)
!8847 = !DILocation(line: 392, column: 67, scope: !8840)
!8848 = !DILocalVariable(name: "dma_handle", arg: 3, scope: !8840, file: !7822, line: 393, type: !8843)
!8849 = !DILocation(line: 393, column: 15, scope: !8840)
!8850 = !DILocalVariable(name: "gfp", arg: 4, scope: !8840, file: !7822, line: 393, type: !1742)
!8851 = !DILocation(line: 393, column: 33, scope: !8840)
!8852 = !DILocation(line: 396, column: 25, scope: !8840)
!8853 = !DILocation(line: 396, column: 30, scope: !8840)
!8854 = !DILocation(line: 396, column: 36, scope: !8840)
!8855 = !DILocation(line: 396, column: 48, scope: !8840)
!8856 = !DILocation(line: 397, column: 5, scope: !8840)
!8857 = !DILocation(line: 397, column: 9, scope: !8840)
!8858 = !DILocation(line: 397, column: 4, scope: !8840)
!8859 = !DILocation(line: 396, column: 9, scope: !8840)
!8860 = !DILocation(line: 396, column: 2, scope: !8840)
!8861 = distinct !DISubprogram(name: "happy_meal_timer", scope: !3, file: !3, line: 688, type: !3242, scopeLine: 689, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!8862 = !DILocation(line: 402, column: 57, scope: !7876, inlinedAt: !8863)
!8863 = distinct !DILocation(line: 865, column: 2, scope: !8861)
!8864 = !DILocation(line: 377, column: 55, scope: !7883, inlinedAt: !8865)
!8865 = distinct !DILocation(line: 694, column: 2, scope: !8861)
!8866 = !DILocalVariable(name: "t", arg: 1, scope: !8861, file: !3, line: 688, type: !3244)
!8867 = !DILocation(line: 688, column: 49, scope: !8861)
!8868 = !DILocalVariable(name: "hp", scope: !8861, file: !3, line: 690, type: !7554)
!8869 = !DILocation(line: 690, column: 21, scope: !8861)
!8870 = !DILocalVariable(name: "__mptr", scope: !8871, file: !3, line: 690, type: !591)
!8871 = distinct !DILexicalBlock(scope: !8861, file: !3, line: 690, column: 26)
!8872 = !DILocation(line: 690, column: 26, scope: !8871)
!8873 = !DILocation(line: 690, column: 26, scope: !8874)
!8874 = distinct !DILexicalBlock(scope: !8871, file: !3, line: 690, column: 26)
!8875 = !DILocalVariable(name: "tregs", scope: !8861, file: !3, line: 691, type: !591)
!8876 = !DILocation(line: 691, column: 16, scope: !8861)
!8877 = !DILocation(line: 691, column: 24, scope: !8861)
!8878 = !DILocation(line: 691, column: 28, scope: !8861)
!8879 = !DILocalVariable(name: "restart_timer", scope: !8861, file: !3, line: 692, type: !32)
!8880 = !DILocation(line: 692, column: 6, scope: !8861)
!8881 = !DILocation(line: 694, column: 17, scope: !8861)
!8882 = !DILocation(line: 694, column: 21, scope: !8861)
!8883 = !DILocation(line: 379, column: 2, scope: !8213, inlinedAt: !8865)
!8884 = !DILocation(line: 379, column: 2, scope: !8216, inlinedAt: !8865)
!8885 = !DILocation(line: 379, column: 2, scope: !8219, inlinedAt: !8865)
!8886 = !DILocation(line: 696, column: 2, scope: !8861)
!8887 = !DILocation(line: 696, column: 6, scope: !8861)
!8888 = !DILocation(line: 696, column: 17, scope: !8861)
!8889 = !DILocation(line: 697, column: 9, scope: !8861)
!8890 = !DILocation(line: 697, column: 13, scope: !8861)
!8891 = !DILocation(line: 697, column: 2, scope: !8861)
!8892 = !DILocation(line: 702, column: 7, scope: !8893)
!8893 = distinct !DILexicalBlock(scope: !8894, file: !3, line: 702, column: 7)
!8894 = distinct !DILexicalBlock(scope: !8861, file: !3, line: 697, column: 26)
!8895 = !DILocation(line: 702, column: 11, scope: !8893)
!8896 = !DILocation(line: 702, column: 23, scope: !8893)
!8897 = !DILocation(line: 702, column: 7, scope: !8894)
!8898 = !DILocation(line: 702, column: 30, scope: !8893)
!8899 = !DILabel(scope: !8900, name: "do_force_mode", file: !3, line: 704)
!8900 = distinct !DILexicalBlock(scope: !8893, file: !3, line: 702, column: 30)
!8901 = !DILocation(line: 704, column: 2, scope: !8900)
!8902 = !DILocation(line: 705, column: 39, scope: !8900)
!8903 = !DILocation(line: 705, column: 43, scope: !8900)
!8904 = !DILocation(line: 705, column: 18, scope: !8900)
!8905 = !DILocation(line: 705, column: 4, scope: !8900)
!8906 = !DILocation(line: 705, column: 8, scope: !8900)
!8907 = !DILocation(line: 705, column: 16, scope: !8900)
!8908 = !DILocation(line: 707, column: 11, scope: !8900)
!8909 = !DILocation(line: 707, column: 15, scope: !8900)
!8910 = !DILocation(line: 707, column: 20, scope: !8900)
!8911 = !DILocation(line: 706, column: 4, scope: !8900)
!8912 = !DILocation(line: 708, column: 4, scope: !8900)
!8913 = !DILocation(line: 708, column: 8, scope: !8900)
!8914 = !DILocation(line: 708, column: 16, scope: !8900)
!8915 = !DILocation(line: 709, column: 26, scope: !8900)
!8916 = !DILocation(line: 709, column: 30, scope: !8900)
!8917 = !DILocation(line: 709, column: 47, scope: !8900)
!8918 = !DILocation(line: 709, column: 51, scope: !8900)
!8919 = !DILocation(line: 709, column: 4, scope: !8900)
!8920 = !DILocation(line: 711, column: 23, scope: !8921)
!8921 = distinct !DILexicalBlock(scope: !8900, file: !3, line: 711, column: 8)
!8922 = !DILocation(line: 711, column: 9, scope: !8921)
!8923 = !DILocation(line: 711, column: 8, scope: !8900)
!8924 = !DILocation(line: 716, column: 44, scope: !8925)
!8925 = distinct !DILexicalBlock(scope: !8921, file: !3, line: 711, column: 28)
!8926 = !DILocation(line: 716, column: 48, scope: !8925)
!8927 = !DILocation(line: 716, column: 23, scope: !8925)
!8928 = !DILocation(line: 716, column: 5, scope: !8925)
!8929 = !DILocation(line: 716, column: 9, scope: !8925)
!8930 = !DILocation(line: 716, column: 21, scope: !8925)
!8931 = !DILocation(line: 717, column: 5, scope: !8925)
!8932 = !DILocation(line: 717, column: 9, scope: !8925)
!8933 = !DILocation(line: 717, column: 21, scope: !8925)
!8934 = !DILocation(line: 718, column: 27, scope: !8925)
!8935 = !DILocation(line: 718, column: 31, scope: !8925)
!8936 = !DILocation(line: 718, column: 56, scope: !8925)
!8937 = !DILocation(line: 718, column: 60, scope: !8925)
!8938 = !DILocation(line: 718, column: 5, scope: !8925)
!8939 = !DILocation(line: 719, column: 4, scope: !8925)
!8940 = !DILocation(line: 720, column: 4, scope: !8900)
!8941 = !DILocation(line: 720, column: 8, scope: !8900)
!8942 = !DILocation(line: 720, column: 20, scope: !8900)
!8943 = !DILocation(line: 721, column: 4, scope: !8900)
!8944 = !DILocation(line: 721, column: 8, scope: !8900)
!8945 = !DILocation(line: 721, column: 20, scope: !8900)
!8946 = !DILocation(line: 722, column: 18, scope: !8900)
!8947 = !DILocation(line: 723, column: 3, scope: !8900)
!8948 = !DILocation(line: 725, column: 39, scope: !8949)
!8949 = distinct !DILexicalBlock(scope: !8893, file: !3, line: 723, column: 10)
!8950 = !DILocation(line: 725, column: 43, scope: !8949)
!8951 = !DILocation(line: 725, column: 18, scope: !8949)
!8952 = !DILocation(line: 725, column: 4, scope: !8949)
!8953 = !DILocation(line: 725, column: 8, scope: !8949)
!8954 = !DILocation(line: 725, column: 16, scope: !8949)
!8955 = !DILocation(line: 726, column: 8, scope: !8956)
!8956 = distinct !DILexicalBlock(scope: !8949, file: !3, line: 726, column: 8)
!8957 = !DILocation(line: 726, column: 12, scope: !8956)
!8958 = !DILocation(line: 726, column: 20, scope: !8956)
!8959 = !DILocation(line: 726, column: 8, scope: !8949)
!8960 = !DILocalVariable(name: "ret", scope: !8961, file: !3, line: 727, type: !32)
!8961 = distinct !DILexicalBlock(scope: !8956, file: !3, line: 726, column: 41)
!8962 = !DILocation(line: 727, column: 9, scope: !8961)
!8963 = !DILocation(line: 730, column: 32, scope: !8961)
!8964 = !DILocation(line: 730, column: 36, scope: !8961)
!8965 = !DILocation(line: 730, column: 11, scope: !8961)
!8966 = !DILocation(line: 730, column: 9, scope: !8961)
!8967 = !DILocation(line: 731, column: 9, scope: !8968)
!8968 = distinct !DILexicalBlock(scope: !8961, file: !3, line: 731, column: 9)
!8969 = !DILocation(line: 731, column: 9, scope: !8961)
!8970 = !DILocation(line: 738, column: 6, scope: !8971)
!8971 = distinct !DILexicalBlock(scope: !8968, file: !3, line: 731, column: 14)
!8972 = !DILocation(line: 742, column: 5, scope: !8961)
!8973 = !DILocation(line: 742, column: 9, scope: !8961)
!8974 = !DILocation(line: 742, column: 21, scope: !8961)
!8975 = !DILocation(line: 743, column: 19, scope: !8961)
!8976 = !DILocation(line: 744, column: 4, scope: !8961)
!8977 = !DILocation(line: 745, column: 19, scope: !8978)
!8978 = distinct !DILexicalBlock(scope: !8956, file: !3, line: 744, column: 11)
!8979 = !DILocation(line: 748, column: 3, scope: !8894)
!8980 = !DILocation(line: 756, column: 38, scope: !8894)
!8981 = !DILocation(line: 756, column: 42, scope: !8894)
!8982 = !DILocation(line: 756, column: 17, scope: !8894)
!8983 = !DILocation(line: 756, column: 3, scope: !8894)
!8984 = !DILocation(line: 756, column: 7, scope: !8894)
!8985 = !DILocation(line: 756, column: 15, scope: !8894)
!8986 = !DILocation(line: 757, column: 7, scope: !8987)
!8987 = distinct !DILexicalBlock(scope: !8894, file: !3, line: 757, column: 7)
!8988 = !DILocation(line: 757, column: 11, scope: !8987)
!8989 = !DILocation(line: 757, column: 19, scope: !8987)
!8990 = !DILocation(line: 757, column: 7, scope: !8894)
!8991 = !DILocation(line: 761, column: 22, scope: !8992)
!8992 = distinct !DILexicalBlock(scope: !8987, file: !3, line: 757, column: 35)
!8993 = !DILocation(line: 761, column: 26, scope: !8992)
!8994 = !DILocation(line: 761, column: 4, scope: !8992)
!8995 = !DILocation(line: 762, column: 4, scope: !8992)
!8996 = !DILocation(line: 762, column: 8, scope: !8992)
!8997 = !DILocation(line: 762, column: 20, scope: !8992)
!8998 = !DILocation(line: 763, column: 18, scope: !8992)
!8999 = !DILocation(line: 764, column: 3, scope: !8992)
!9000 = !DILocation(line: 765, column: 8, scope: !9001)
!9001 = distinct !DILexicalBlock(scope: !9002, file: !3, line: 765, column: 8)
!9002 = distinct !DILexicalBlock(scope: !8987, file: !3, line: 764, column: 10)
!9003 = !DILocation(line: 765, column: 12, scope: !9001)
!9004 = !DILocation(line: 765, column: 24, scope: !9001)
!9005 = !DILocation(line: 765, column: 8, scope: !9002)
!9006 = !DILocation(line: 767, column: 36, scope: !9007)
!9007 = distinct !DILexicalBlock(scope: !9001, file: !3, line: 765, column: 31)
!9008 = !DILocation(line: 767, column: 40, scope: !9007)
!9009 = !DILocation(line: 767, column: 45, scope: !9007)
!9010 = !DILocation(line: 766, column: 5, scope: !9007)
!9011 = !DILocation(line: 768, column: 5, scope: !9007)
!9012 = !DILocation(line: 768, column: 9, scope: !9007)
!9013 = !DILocation(line: 768, column: 21, scope: !9007)
!9014 = !DILocation(line: 769, column: 19, scope: !9007)
!9015 = !DILocation(line: 770, column: 4, scope: !9007)
!9016 = !DILocation(line: 771, column: 19, scope: !9017)
!9017 = distinct !DILexicalBlock(scope: !9001, file: !3, line: 770, column: 11)
!9018 = !DILocation(line: 774, column: 3, scope: !8894)
!9019 = !DILocation(line: 782, column: 38, scope: !8894)
!9020 = !DILocation(line: 782, column: 42, scope: !8894)
!9021 = !DILocation(line: 782, column: 17, scope: !8894)
!9022 = !DILocation(line: 782, column: 3, scope: !8894)
!9023 = !DILocation(line: 782, column: 7, scope: !8894)
!9024 = !DILocation(line: 782, column: 15, scope: !8894)
!9025 = !DILocation(line: 783, column: 42, scope: !8894)
!9026 = !DILocation(line: 783, column: 46, scope: !8894)
!9027 = !DILocation(line: 783, column: 21, scope: !8894)
!9028 = !DILocation(line: 783, column: 3, scope: !8894)
!9029 = !DILocation(line: 783, column: 7, scope: !8894)
!9030 = !DILocation(line: 783, column: 19, scope: !8894)
!9031 = !DILocation(line: 784, column: 7, scope: !9032)
!9032 = distinct !DILexicalBlock(scope: !8894, file: !3, line: 784, column: 7)
!9033 = !DILocation(line: 784, column: 11, scope: !9032)
!9034 = !DILocation(line: 784, column: 23, scope: !9032)
!9035 = !DILocation(line: 784, column: 7, scope: !8894)
!9036 = !DILocation(line: 785, column: 23, scope: !9037)
!9037 = distinct !DILexicalBlock(scope: !9038, file: !3, line: 785, column: 8)
!9038 = distinct !DILexicalBlock(scope: !9032, file: !3, line: 784, column: 29)
!9039 = !DILocation(line: 785, column: 9, scope: !9037)
!9040 = !DILocation(line: 785, column: 8, scope: !9038)
!9041 = !DILocation(line: 789, column: 5, scope: !9042)
!9042 = distinct !DILexicalBlock(scope: !9037, file: !3, line: 785, column: 28)
!9043 = !DILocation(line: 789, column: 9, scope: !9042)
!9044 = !DILocation(line: 789, column: 21, scope: !9042)
!9045 = !DILocation(line: 790, column: 27, scope: !9042)
!9046 = !DILocation(line: 790, column: 31, scope: !9042)
!9047 = !DILocation(line: 791, column: 31, scope: !9042)
!9048 = !DILocation(line: 791, column: 35, scope: !9042)
!9049 = !DILocation(line: 790, column: 5, scope: !9042)
!9050 = !DILocation(line: 792, column: 4, scope: !9042)
!9051 = !DILocation(line: 793, column: 18, scope: !9038)
!9052 = !DILocation(line: 794, column: 4, scope: !9038)
!9053 = !DILocation(line: 796, column: 7, scope: !9054)
!9054 = distinct !DILexicalBlock(scope: !8894, file: !3, line: 796, column: 7)
!9055 = !DILocation(line: 796, column: 11, scope: !9054)
!9056 = !DILocation(line: 796, column: 23, scope: !9054)
!9057 = !DILocation(line: 796, column: 7, scope: !8894)
!9058 = !DILocation(line: 797, column: 23, scope: !9059)
!9059 = distinct !DILexicalBlock(scope: !9060, file: !3, line: 797, column: 8)
!9060 = distinct !DILexicalBlock(scope: !9054, file: !3, line: 796, column: 29)
!9061 = !DILocation(line: 797, column: 9, scope: !9059)
!9062 = !DILocation(line: 797, column: 8, scope: !9060)
!9063 = !DILocation(line: 798, column: 5, scope: !9064)
!9064 = distinct !DILexicalBlock(scope: !9059, file: !3, line: 797, column: 28)
!9065 = !DILocation(line: 798, column: 9, scope: !9064)
!9066 = !DILocation(line: 798, column: 21, scope: !9064)
!9067 = !DILocation(line: 799, column: 27, scope: !9064)
!9068 = !DILocation(line: 799, column: 31, scope: !9064)
!9069 = !DILocation(line: 800, column: 31, scope: !9064)
!9070 = !DILocation(line: 800, column: 35, scope: !9064)
!9071 = !DILocation(line: 799, column: 5, scope: !9064)
!9072 = !DILocation(line: 801, column: 4, scope: !9064)
!9073 = !DILocation(line: 802, column: 18, scope: !9060)
!9074 = !DILocation(line: 803, column: 4, scope: !9060)
!9075 = !DILocation(line: 805, column: 7, scope: !9076)
!9076 = distinct !DILexicalBlock(scope: !8894, file: !3, line: 805, column: 7)
!9077 = !DILocation(line: 805, column: 11, scope: !9076)
!9078 = !DILocation(line: 805, column: 19, scope: !9076)
!9079 = !DILocation(line: 805, column: 7, scope: !8894)
!9080 = !DILocation(line: 807, column: 29, scope: !9081)
!9081 = distinct !DILexicalBlock(scope: !9076, file: !3, line: 805, column: 35)
!9082 = !DILocation(line: 807, column: 33, scope: !9081)
!9083 = !DILocation(line: 807, column: 4, scope: !9081)
!9084 = !DILocation(line: 808, column: 25, scope: !9081)
!9085 = !DILocation(line: 808, column: 29, scope: !9081)
!9086 = !DILocation(line: 808, column: 4, scope: !9081)
!9087 = !DILocation(line: 809, column: 4, scope: !9081)
!9088 = !DILocation(line: 809, column: 8, scope: !9081)
!9089 = !DILocation(line: 809, column: 20, scope: !9081)
!9090 = !DILocation(line: 810, column: 18, scope: !9081)
!9091 = !DILocation(line: 811, column: 3, scope: !9081)
!9092 = !DILocation(line: 812, column: 8, scope: !9093)
!9093 = distinct !DILexicalBlock(scope: !9094, file: !3, line: 812, column: 8)
!9094 = distinct !DILexicalBlock(scope: !9076, file: !3, line: 811, column: 10)
!9095 = !DILocation(line: 812, column: 12, scope: !9093)
!9096 = !DILocation(line: 812, column: 24, scope: !9093)
!9097 = !DILocation(line: 812, column: 8, scope: !9094)
!9098 = !DILocalVariable(name: "ret", scope: !9099, file: !3, line: 813, type: !32)
!9099 = distinct !DILexicalBlock(scope: !9093, file: !3, line: 812, column: 30)
!9100 = !DILocation(line: 813, column: 9, scope: !9099)
!9101 = !DILocation(line: 815, column: 32, scope: !9099)
!9102 = !DILocation(line: 815, column: 36, scope: !9099)
!9103 = !DILocation(line: 815, column: 11, scope: !9099)
!9104 = !DILocation(line: 815, column: 9, scope: !9099)
!9105 = !DILocation(line: 816, column: 9, scope: !9106)
!9106 = distinct !DILexicalBlock(scope: !9099, file: !3, line: 816, column: 9)
!9107 = !DILocation(line: 816, column: 13, scope: !9106)
!9108 = !DILocation(line: 816, column: 9, scope: !9099)
!9109 = !DILocation(line: 823, column: 13, scope: !9110)
!9110 = distinct !DILexicalBlock(scope: !9106, file: !3, line: 816, column: 20)
!9111 = !DILocation(line: 823, column: 17, scope: !9110)
!9112 = !DILocation(line: 823, column: 22, scope: !9110)
!9113 = !DILocation(line: 822, column: 6, scope: !9110)
!9114 = !DILocation(line: 825, column: 28, scope: !9110)
!9115 = !DILocation(line: 825, column: 12, scope: !9110)
!9116 = !DILocation(line: 825, column: 10, scope: !9110)
!9117 = !DILocation(line: 826, column: 10, scope: !9118)
!9118 = distinct !DILexicalBlock(scope: !9110, file: !3, line: 826, column: 10)
!9119 = !DILocation(line: 826, column: 10, scope: !9110)
!9120 = !DILocation(line: 829, column: 31, scope: !9121)
!9121 = distinct !DILexicalBlock(scope: !9118, file: !3, line: 826, column: 15)
!9122 = !DILocation(line: 829, column: 35, scope: !9121)
!9123 = !DILocation(line: 829, column: 40, scope: !9121)
!9124 = !DILocation(line: 828, column: 7, scope: !9121)
!9125 = !DILocation(line: 830, column: 6, scope: !9121)
!9126 = !DILocation(line: 831, column: 6, scope: !9110)
!9127 = !DILocation(line: 833, column: 24, scope: !9128)
!9128 = distinct !DILexicalBlock(scope: !9099, file: !3, line: 833, column: 9)
!9129 = !DILocation(line: 833, column: 10, scope: !9128)
!9130 = !DILocation(line: 833, column: 9, scope: !9099)
!9131 = !DILocation(line: 834, column: 45, scope: !9132)
!9132 = distinct !DILexicalBlock(scope: !9128, file: !3, line: 833, column: 29)
!9133 = !DILocation(line: 834, column: 49, scope: !9132)
!9134 = !DILocation(line: 834, column: 24, scope: !9132)
!9135 = !DILocation(line: 834, column: 6, scope: !9132)
!9136 = !DILocation(line: 834, column: 10, scope: !9132)
!9137 = !DILocation(line: 834, column: 22, scope: !9132)
!9138 = !DILocation(line: 836, column: 6, scope: !9132)
!9139 = !DILocation(line: 836, column: 10, scope: !9132)
!9140 = !DILocation(line: 836, column: 22, scope: !9132)
!9141 = !DILocation(line: 837, column: 28, scope: !9132)
!9142 = !DILocation(line: 837, column: 32, scope: !9132)
!9143 = !DILocation(line: 838, column: 32, scope: !9132)
!9144 = !DILocation(line: 838, column: 36, scope: !9132)
!9145 = !DILocation(line: 837, column: 6, scope: !9132)
!9146 = !DILocation(line: 839, column: 5, scope: !9132)
!9147 = !DILocation(line: 840, column: 5, scope: !9099)
!9148 = !DILocation(line: 840, column: 9, scope: !9099)
!9149 = !DILocation(line: 840, column: 21, scope: !9099)
!9150 = !DILocation(line: 841, column: 19, scope: !9099)
!9151 = !DILocation(line: 842, column: 4, scope: !9099)
!9152 = !DILocation(line: 843, column: 19, scope: !9153)
!9153 = distinct !DILexicalBlock(scope: !9093, file: !3, line: 842, column: 11)
!9154 = !DILocation(line: 846, column: 3, scope: !8894)
!9155 = !DILocation(line: 852, column: 10, scope: !8894)
!9156 = !DILocation(line: 852, column: 14, scope: !8894)
!9157 = !DILocation(line: 852, column: 19, scope: !8894)
!9158 = !DILocation(line: 851, column: 3, scope: !8894)
!9159 = !DILocation(line: 853, column: 17, scope: !8894)
!9160 = !DILocation(line: 854, column: 3, scope: !8894)
!9161 = !DILocation(line: 854, column: 7, scope: !8894)
!9162 = !DILocation(line: 854, column: 19, scope: !8894)
!9163 = !DILocation(line: 855, column: 3, scope: !8894)
!9164 = !DILocation(line: 855, column: 7, scope: !8894)
!9165 = !DILocation(line: 855, column: 19, scope: !8894)
!9166 = !DILocation(line: 856, column: 3, scope: !8894)
!9167 = !DILocation(line: 859, column: 6, scope: !9168)
!9168 = distinct !DILexicalBlock(scope: !8861, file: !3, line: 859, column: 6)
!9169 = !DILocation(line: 859, column: 6, scope: !8861)
!9170 = !DILocation(line: 860, column: 29, scope: !9171)
!9171 = distinct !DILexicalBlock(scope: !9168, file: !3, line: 859, column: 21)
!9172 = !DILocation(line: 860, column: 37, scope: !9171)
!9173 = !DILocation(line: 860, column: 3, scope: !9171)
!9174 = !DILocation(line: 860, column: 7, scope: !9171)
!9175 = !DILocation(line: 860, column: 19, scope: !9171)
!9176 = !DILocation(line: 860, column: 27, scope: !9171)
!9177 = !DILocation(line: 861, column: 14, scope: !9171)
!9178 = !DILocation(line: 861, column: 18, scope: !9171)
!9179 = !DILocation(line: 861, column: 3, scope: !9171)
!9180 = !DILocation(line: 862, column: 2, scope: !9171)
!9181 = !DILabel(scope: !8861, name: "out", file: !3, line: 864)
!9182 = !DILocation(line: 864, column: 1, scope: !8861)
!9183 = !DILocation(line: 865, column: 19, scope: !8861)
!9184 = !DILocation(line: 865, column: 23, scope: !8861)
!9185 = !DILocation(line: 404, column: 2, scope: !8225, inlinedAt: !8863)
!9186 = !DILocation(line: 404, column: 2, scope: !8228, inlinedAt: !8863)
!9187 = !DILocation(line: 404, column: 2, scope: !8231, inlinedAt: !8863)
!9188 = !DILocation(line: 866, column: 1, scope: !8861)
!9189 = distinct !DISubprogram(name: "happy_meal_set_initial_advertisement", scope: !3, file: !3, line: 1710, type: !9190, scopeLine: 1711, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!9190 = !DISubroutineType(types: !9191)
!9191 = !{null, !7554}
!9192 = !DILocalVariable(name: "hp", arg: 1, scope: !9189, file: !3, line: 1710, type: !7554)
!9193 = !DILocation(line: 1710, column: 69, scope: !9189)
!9194 = !DILocalVariable(name: "tregs", scope: !9189, file: !3, line: 1712, type: !591)
!9195 = !DILocation(line: 1712, column: 16, scope: !9189)
!9196 = !DILocation(line: 1712, column: 24, scope: !9189)
!9197 = !DILocation(line: 1712, column: 28, scope: !9189)
!9198 = !DILocalVariable(name: "bregs", scope: !9189, file: !3, line: 1713, type: !591)
!9199 = !DILocation(line: 1713, column: 16, scope: !9189)
!9200 = !DILocation(line: 1713, column: 24, scope: !9189)
!9201 = !DILocation(line: 1713, column: 28, scope: !9189)
!9202 = !DILocalVariable(name: "gregs", scope: !9189, file: !3, line: 1714, type: !591)
!9203 = !DILocation(line: 1714, column: 16, scope: !9189)
!9204 = !DILocation(line: 1714, column: 24, scope: !9189)
!9205 = !DILocation(line: 1714, column: 28, scope: !9189)
!9206 = !DILocation(line: 1716, column: 18, scope: !9189)
!9207 = !DILocation(line: 1716, column: 22, scope: !9189)
!9208 = !DILocation(line: 1716, column: 2, scope: !9189)
!9209 = !DILocation(line: 1717, column: 2, scope: !9189)
!9210 = !DILocation(line: 1718, column: 6, scope: !9211)
!9211 = distinct !DILexicalBlock(scope: !9189, file: !3, line: 1718, column: 6)
!9212 = !DILocation(line: 1718, column: 10, scope: !9211)
!9213 = !DILocation(line: 1718, column: 22, scope: !9211)
!9214 = !DILocation(line: 1718, column: 6, scope: !9189)
!9215 = !DILocation(line: 1719, column: 3, scope: !9211)
!9216 = !DILocation(line: 1722, column: 3, scope: !9211)
!9217 = !DILocation(line: 1724, column: 31, scope: !9189)
!9218 = !DILocation(line: 1724, column: 35, scope: !9189)
!9219 = !DILocation(line: 1724, column: 2, scope: !9189)
!9220 = !DILocation(line: 1725, column: 9, scope: !9189)
!9221 = !DILocation(line: 1725, column: 13, scope: !9189)
!9222 = !DILocation(line: 1725, column: 2, scope: !9189)
!9223 = !DILocation(line: 1727, column: 3, scope: !9224)
!9224 = distinct !DILexicalBlock(scope: !9189, file: !3, line: 1725, column: 24)
!9225 = !DILocation(line: 1729, column: 3, scope: !9224)
!9226 = !DILocation(line: 1730, column: 3, scope: !9224)
!9227 = !DILocation(line: 1732, column: 3, scope: !9224)
!9228 = !DILocation(line: 1733, column: 3, scope: !9224)
!9229 = !DILocation(line: 1735, column: 28, scope: !9230)
!9230 = distinct !DILexicalBlock(scope: !9189, file: !3, line: 1735, column: 6)
!9231 = !DILocation(line: 1735, column: 32, scope: !9230)
!9232 = !DILocation(line: 1735, column: 6, scope: !9230)
!9233 = !DILocation(line: 1735, column: 6, scope: !9189)
!9234 = !DILocation(line: 1736, column: 3, scope: !9230)
!9235 = !DILocation(line: 1739, column: 42, scope: !9189)
!9236 = !DILocation(line: 1739, column: 46, scope: !9189)
!9237 = !DILocation(line: 1739, column: 21, scope: !9189)
!9238 = !DILocation(line: 1739, column: 2, scope: !9189)
!9239 = !DILocation(line: 1739, column: 6, scope: !9189)
!9240 = !DILocation(line: 1739, column: 19, scope: !9189)
!9241 = !DILocation(line: 1740, column: 42, scope: !9189)
!9242 = !DILocation(line: 1740, column: 46, scope: !9189)
!9243 = !DILocation(line: 1740, column: 21, scope: !9189)
!9244 = !DILocation(line: 1740, column: 2, scope: !9189)
!9245 = !DILocation(line: 1740, column: 6, scope: !9189)
!9246 = !DILocation(line: 1740, column: 19, scope: !9189)
!9247 = !DILocation(line: 1743, column: 6, scope: !9248)
!9248 = distinct !DILexicalBlock(scope: !9189, file: !3, line: 1743, column: 6)
!9249 = !DILocation(line: 1743, column: 10, scope: !9248)
!9250 = !DILocation(line: 1743, column: 18, scope: !9248)
!9251 = !DILocation(line: 1743, column: 6, scope: !9189)
!9252 = !DILocation(line: 1744, column: 3, scope: !9248)
!9253 = !DILocation(line: 1744, column: 7, scope: !9248)
!9254 = !DILocation(line: 1744, column: 20, scope: !9248)
!9255 = !DILocation(line: 1746, column: 3, scope: !9248)
!9256 = !DILocation(line: 1746, column: 7, scope: !9248)
!9257 = !DILocation(line: 1746, column: 20, scope: !9248)
!9258 = !DILocation(line: 1748, column: 6, scope: !9259)
!9259 = distinct !DILexicalBlock(scope: !9189, file: !3, line: 1748, column: 6)
!9260 = !DILocation(line: 1748, column: 10, scope: !9259)
!9261 = !DILocation(line: 1748, column: 18, scope: !9259)
!9262 = !DILocation(line: 1748, column: 6, scope: !9189)
!9263 = !DILocation(line: 1749, column: 3, scope: !9259)
!9264 = !DILocation(line: 1749, column: 7, scope: !9259)
!9265 = !DILocation(line: 1749, column: 20, scope: !9259)
!9266 = !DILocation(line: 1751, column: 3, scope: !9259)
!9267 = !DILocation(line: 1751, column: 7, scope: !9259)
!9268 = !DILocation(line: 1751, column: 20, scope: !9259)
!9269 = !DILocation(line: 1752, column: 6, scope: !9270)
!9270 = distinct !DILexicalBlock(scope: !9189, file: !3, line: 1752, column: 6)
!9271 = !DILocation(line: 1752, column: 10, scope: !9270)
!9272 = !DILocation(line: 1752, column: 18, scope: !9270)
!9273 = !DILocation(line: 1752, column: 6, scope: !9189)
!9274 = !DILocation(line: 1753, column: 3, scope: !9270)
!9275 = !DILocation(line: 1753, column: 7, scope: !9270)
!9276 = !DILocation(line: 1753, column: 20, scope: !9270)
!9277 = !DILocation(line: 1755, column: 3, scope: !9270)
!9278 = !DILocation(line: 1755, column: 7, scope: !9270)
!9279 = !DILocation(line: 1755, column: 20, scope: !9270)
!9280 = !DILocation(line: 1756, column: 6, scope: !9281)
!9281 = distinct !DILexicalBlock(scope: !9189, file: !3, line: 1756, column: 6)
!9282 = !DILocation(line: 1756, column: 10, scope: !9281)
!9283 = !DILocation(line: 1756, column: 18, scope: !9281)
!9284 = !DILocation(line: 1756, column: 6, scope: !9189)
!9285 = !DILocation(line: 1757, column: 3, scope: !9281)
!9286 = !DILocation(line: 1757, column: 7, scope: !9281)
!9287 = !DILocation(line: 1757, column: 20, scope: !9281)
!9288 = !DILocation(line: 1759, column: 3, scope: !9281)
!9289 = !DILocation(line: 1759, column: 7, scope: !9281)
!9290 = !DILocation(line: 1759, column: 20, scope: !9281)
!9291 = !DILocation(line: 1762, column: 24, scope: !9189)
!9292 = !DILocation(line: 1762, column: 28, scope: !9189)
!9293 = !DILocation(line: 1762, column: 50, scope: !9189)
!9294 = !DILocation(line: 1762, column: 54, scope: !9189)
!9295 = !DILocation(line: 1762, column: 2, scope: !9189)
!9296 = !DILocation(line: 1763, column: 1, scope: !9189)
!9297 = distinct !DISubprogram(name: "pci_set_drvdata", scope: !7282, file: !7282, line: 1870, type: !9298, scopeLine: 1871, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!9298 = !DISubroutineType(types: !9299)
!9299 = !{null, !7280, !591}
!9300 = !DILocalVariable(name: "pdev", arg: 1, scope: !9297, file: !7282, line: 1870, type: !7280)
!9301 = !DILocation(line: 1870, column: 52, scope: !9297)
!9302 = !DILocalVariable(name: "data", arg: 2, scope: !9297, file: !7282, line: 1870, type: !591)
!9303 = !DILocation(line: 1870, column: 64, scope: !9297)
!9304 = !DILocation(line: 1872, column: 19, scope: !9297)
!9305 = !DILocation(line: 1872, column: 25, scope: !9297)
!9306 = !DILocation(line: 1872, column: 30, scope: !9297)
!9307 = !DILocation(line: 1872, column: 2, scope: !9297)
!9308 = !DILocation(line: 1873, column: 1, scope: !9297)
!9309 = distinct !DISubprogram(name: "get_order", scope: !9310, file: !9310, line: 29, type: !9311, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!9310 = !DIFile(filename: "./include/asm-generic/getorder.h", directory: "/home/lizy2001/genbc/linux")
!9311 = !DISubroutineType(types: !9312)
!9312 = !{!32, !312}
!9313 = !DILocalVariable(name: "x", arg: 1, scope: !9314, file: !9315, line: 366, type: !333)
!9314 = distinct !DISubprogram(name: "fls64", scope: !9315, file: !9315, line: 366, type: !9316, scopeLine: 367, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!9315 = !DIFile(filename: "./arch/x86/include/asm/bitops.h", directory: "/home/lizy2001/genbc/linux")
!9316 = !DISubroutineType(types: !9317)
!9317 = !{!32, !333}
!9318 = !DILocation(line: 366, column: 40, scope: !9314, inlinedAt: !9319)
!9319 = distinct !DILocation(line: 46, column: 9, scope: !9309)
!9320 = !DILocalVariable(name: "bitpos", scope: !9314, file: !9315, line: 368, type: !32)
!9321 = !DILocation(line: 368, column: 6, scope: !9314, inlinedAt: !9319)
!9322 = !DILocalVariable(name: "size", arg: 1, scope: !9309, file: !9310, line: 29, type: !312)
!9323 = !DILocation(line: 29, column: 63, scope: !9309)
!9324 = !DILocation(line: 31, column: 27, scope: !9325)
!9325 = distinct !DILexicalBlock(scope: !9309, file: !9310, line: 31, column: 6)
!9326 = !DILocation(line: 31, column: 6, scope: !9325)
!9327 = !DILocation(line: 31, column: 6, scope: !9309)
!9328 = !DILocation(line: 32, column: 8, scope: !9329)
!9329 = distinct !DILexicalBlock(scope: !9330, file: !9310, line: 32, column: 7)
!9330 = distinct !DILexicalBlock(scope: !9325, file: !9310, line: 31, column: 34)
!9331 = !DILocation(line: 32, column: 7, scope: !9330)
!9332 = !DILocation(line: 33, column: 4, scope: !9329)
!9333 = !DILocation(line: 35, column: 7, scope: !9334)
!9334 = distinct !DILexicalBlock(scope: !9330, file: !9310, line: 35, column: 7)
!9335 = !DILocation(line: 35, column: 12, scope: !9334)
!9336 = !DILocation(line: 35, column: 7, scope: !9330)
!9337 = !DILocation(line: 36, column: 4, scope: !9334)
!9338 = !DILocation(line: 38, column: 10, scope: !9330)
!9339 = !DILocation(line: 38, column: 28, scope: !9330)
!9340 = !DILocation(line: 38, column: 41, scope: !9330)
!9341 = !DILocation(line: 38, column: 3, scope: !9330)
!9342 = !DILocation(line: 41, column: 6, scope: !9309)
!9343 = !DILocation(line: 42, column: 7, scope: !9309)
!9344 = !DILocation(line: 46, column: 15, scope: !9309)
!9345 = !DILocation(line: 374, column: 2, scope: !9314, inlinedAt: !9319)
!9346 = !DILocation(line: 376, column: 14, scope: !9314, inlinedAt: !9319)
!9347 = !{i32 391208}
!9348 = !DILocation(line: 377, column: 9, scope: !9314, inlinedAt: !9319)
!9349 = !DILocation(line: 377, column: 16, scope: !9314, inlinedAt: !9319)
!9350 = !DILocation(line: 46, column: 2, scope: !9309)
!9351 = !DILocation(line: 48, column: 1, scope: !9309)
!9352 = distinct !DISubprogram(name: "__ilog2_u64", scope: !9353, file: !9353, line: 30, type: !9354, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!9353 = !DIFile(filename: "./include/linux/log2.h", directory: "/home/lizy2001/genbc/linux")
!9354 = !DISubroutineType(types: !9355)
!9355 = !{!32, !331}
!9356 = !DILocation(line: 366, column: 40, scope: !9314, inlinedAt: !9357)
!9357 = distinct !DILocation(line: 32, column: 9, scope: !9352)
!9358 = !DILocation(line: 368, column: 6, scope: !9314, inlinedAt: !9357)
!9359 = !DILocalVariable(name: "n", arg: 1, scope: !9352, file: !9353, line: 30, type: !331)
!9360 = !DILocation(line: 30, column: 21, scope: !9352)
!9361 = !DILocation(line: 32, column: 15, scope: !9352)
!9362 = !DILocation(line: 374, column: 2, scope: !9314, inlinedAt: !9357)
!9363 = !DILocation(line: 376, column: 14, scope: !9314, inlinedAt: !9357)
!9364 = !DILocation(line: 377, column: 9, scope: !9314, inlinedAt: !9357)
!9365 = !DILocation(line: 377, column: 16, scope: !9314, inlinedAt: !9357)
!9366 = !DILocation(line: 32, column: 18, scope: !9352)
!9367 = !DILocation(line: 32, column: 2, scope: !9352)
!9368 = distinct !DISubprogram(name: "kasan_kmalloc", scope: !9369, file: !9369, line: 137, type: !9370, scopeLine: 139, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!9369 = !DIFile(filename: "./include/linux/kasan.h", directory: "/home/lizy2001/genbc/linux")
!9370 = !DISubroutineType(types: !9371)
!9371 = !{!591, !2051, !3258, !1039, !1742}
!9372 = !DILocalVariable(name: "s", arg: 1, scope: !9368, file: !9369, line: 137, type: !2051)
!9373 = !DILocation(line: 137, column: 54, scope: !9368)
!9374 = !DILocalVariable(name: "object", arg: 2, scope: !9368, file: !9369, line: 137, type: !3258)
!9375 = !DILocation(line: 137, column: 69, scope: !9368)
!9376 = !DILocalVariable(name: "size", arg: 3, scope: !9368, file: !9369, line: 138, type: !1039)
!9377 = !DILocation(line: 138, column: 12, scope: !9368)
!9378 = !DILocalVariable(name: "flags", arg: 4, scope: !9368, file: !9369, line: 138, type: !1742)
!9379 = !DILocation(line: 138, column: 24, scope: !9368)
!9380 = !DILocation(line: 140, column: 17, scope: !9368)
!9381 = !DILocation(line: 140, column: 2, scope: !9368)
!9382 = distinct !DISubprogram(name: "readb", scope: !9383, file: !9383, line: 57, type: !9384, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!9383 = !DIFile(filename: "./arch/x86/include/asm/io.h", directory: "/home/lizy2001/genbc/linux")
!9384 = !DISubroutineType(types: !9385)
!9385 = !{!482, !9386}
!9386 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9387, size: 64)
!9387 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9388)
!9388 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: null)
!9389 = !DILocalVariable(name: "addr", arg: 1, scope: !9382, file: !9383, line: 57, type: !9386)
!9390 = !DILocation(line: 57, column: 1, scope: !9382)
!9391 = !DILocalVariable(name: "ret", scope: !9382, file: !9383, line: 57, type: !482)
!9392 = !{i32 -2141559960}
!9393 = distinct !DISubprogram(name: "find_eth_addr_in_vpd", scope: !3, file: !3, line: 2925, type: !9394, scopeLine: 2926, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!9394 = !DISubroutineType(types: !9395)
!9395 = !{!32, !591, !32, !32, !564}
!9396 = !DILocalVariable(name: "rom_base", arg: 1, scope: !9393, file: !3, line: 2925, type: !591)
!9397 = !DILocation(line: 2925, column: 47, scope: !9393)
!9398 = !DILocalVariable(name: "len", arg: 2, scope: !9393, file: !3, line: 2925, type: !32)
!9399 = !DILocation(line: 2925, column: 61, scope: !9393)
!9400 = !DILocalVariable(name: "index", arg: 3, scope: !9393, file: !3, line: 2925, type: !32)
!9401 = !DILocation(line: 2925, column: 70, scope: !9393)
!9402 = !DILocalVariable(name: "dev_addr", arg: 4, scope: !9393, file: !3, line: 2925, type: !564)
!9403 = !DILocation(line: 2925, column: 92, scope: !9393)
!9404 = !DILocalVariable(name: "this_offset", scope: !9393, file: !3, line: 2927, type: !32)
!9405 = !DILocation(line: 2927, column: 6, scope: !9393)
!9406 = !DILocation(line: 2929, column: 19, scope: !9407)
!9407 = distinct !DILexicalBlock(scope: !9393, file: !3, line: 2929, column: 2)
!9408 = !DILocation(line: 2929, column: 7, scope: !9407)
!9409 = !DILocation(line: 2929, column: 27, scope: !9410)
!9410 = distinct !DILexicalBlock(scope: !9407, file: !3, line: 2929, column: 2)
!9411 = !DILocation(line: 2929, column: 41, scope: !9410)
!9412 = !DILocation(line: 2929, column: 39, scope: !9410)
!9413 = !DILocation(line: 2929, column: 2, scope: !9407)
!9414 = !DILocalVariable(name: "p", scope: !9415, file: !3, line: 2930, type: !591)
!9415 = distinct !DILexicalBlock(scope: !9410, file: !3, line: 2929, column: 61)
!9416 = !DILocation(line: 2930, column: 17, scope: !9415)
!9417 = !DILocation(line: 2930, column: 21, scope: !9415)
!9418 = !DILocation(line: 2930, column: 32, scope: !9415)
!9419 = !DILocation(line: 2930, column: 30, scope: !9415)
!9420 = !DILocation(line: 2932, column: 13, scope: !9421)
!9421 = distinct !DILexicalBlock(scope: !9415, file: !3, line: 2932, column: 7)
!9422 = !DILocation(line: 2932, column: 15, scope: !9421)
!9423 = !DILocation(line: 2932, column: 7, scope: !9421)
!9424 = !DILocation(line: 2932, column: 20, scope: !9421)
!9425 = !DILocation(line: 2932, column: 28, scope: !9421)
!9426 = !DILocation(line: 2933, column: 13, scope: !9421)
!9427 = !DILocation(line: 2933, column: 15, scope: !9421)
!9428 = !DILocation(line: 2933, column: 7, scope: !9421)
!9429 = !DILocation(line: 2933, column: 20, scope: !9421)
!9430 = !DILocation(line: 2933, column: 28, scope: !9421)
!9431 = !DILocation(line: 2934, column: 13, scope: !9421)
!9432 = !DILocation(line: 2934, column: 15, scope: !9421)
!9433 = !DILocation(line: 2934, column: 7, scope: !9421)
!9434 = !DILocation(line: 2934, column: 20, scope: !9421)
!9435 = !DILocation(line: 2934, column: 28, scope: !9421)
!9436 = !DILocation(line: 2935, column: 13, scope: !9421)
!9437 = !DILocation(line: 2935, column: 15, scope: !9421)
!9438 = !DILocation(line: 2935, column: 7, scope: !9421)
!9439 = !DILocation(line: 2935, column: 20, scope: !9421)
!9440 = !DILocation(line: 2935, column: 28, scope: !9421)
!9441 = !DILocation(line: 2936, column: 13, scope: !9421)
!9442 = !DILocation(line: 2936, column: 15, scope: !9421)
!9443 = !DILocation(line: 2936, column: 7, scope: !9421)
!9444 = !DILocation(line: 2936, column: 20, scope: !9421)
!9445 = !DILocation(line: 2936, column: 28, scope: !9421)
!9446 = !DILocation(line: 2937, column: 13, scope: !9421)
!9447 = !DILocation(line: 2937, column: 15, scope: !9421)
!9448 = !DILocation(line: 2937, column: 7, scope: !9421)
!9449 = !DILocation(line: 2937, column: 20, scope: !9421)
!9450 = !DILocation(line: 2932, column: 7, scope: !9415)
!9451 = !DILocation(line: 2938, column: 4, scope: !9421)
!9452 = !DILocation(line: 2940, column: 15, scope: !9415)
!9453 = !DILocation(line: 2941, column: 5, scope: !9415)
!9454 = !DILocation(line: 2943, column: 7, scope: !9455)
!9455 = distinct !DILexicalBlock(scope: !9415, file: !3, line: 2943, column: 7)
!9456 = !DILocation(line: 2943, column: 13, scope: !9455)
!9457 = !DILocation(line: 2943, column: 7, scope: !9415)
!9458 = !DILocalVariable(name: "i", scope: !9459, file: !3, line: 2944, type: !32)
!9459 = distinct !DILexicalBlock(scope: !9455, file: !3, line: 2943, column: 19)
!9460 = !DILocation(line: 2944, column: 8, scope: !9459)
!9461 = !DILocation(line: 2946, column: 11, scope: !9462)
!9462 = distinct !DILexicalBlock(scope: !9459, file: !3, line: 2946, column: 4)
!9463 = !DILocation(line: 2946, column: 9, scope: !9462)
!9464 = !DILocation(line: 2946, column: 16, scope: !9465)
!9465 = distinct !DILexicalBlock(scope: !9462, file: !3, line: 2946, column: 4)
!9466 = !DILocation(line: 2946, column: 18, scope: !9465)
!9467 = !DILocation(line: 2946, column: 4, scope: !9462)
!9468 = !DILocation(line: 2947, column: 25, scope: !9465)
!9469 = !DILocation(line: 2947, column: 29, scope: !9465)
!9470 = !DILocation(line: 2947, column: 27, scope: !9465)
!9471 = !DILocation(line: 2947, column: 19, scope: !9465)
!9472 = !DILocation(line: 2947, column: 5, scope: !9465)
!9473 = !DILocation(line: 2947, column: 14, scope: !9465)
!9474 = !DILocation(line: 2947, column: 17, scope: !9465)
!9475 = !DILocation(line: 2946, column: 24, scope: !9465)
!9476 = !DILocation(line: 2946, column: 4, scope: !9465)
!9477 = distinct !{!9477, !9467, !9478}
!9478 = !DILocation(line: 2947, column: 30, scope: !9462)
!9479 = !DILocation(line: 2948, column: 4, scope: !9459)
!9480 = !DILocation(line: 2950, column: 8, scope: !9415)
!9481 = !DILocation(line: 2951, column: 2, scope: !9415)
!9482 = !DILocation(line: 2929, column: 57, scope: !9410)
!9483 = !DILocation(line: 2929, column: 2, scope: !9410)
!9484 = distinct !{!9484, !9413, !9485}
!9485 = !DILocation(line: 2951, column: 2, scope: !9407)
!9486 = !DILocation(line: 2952, column: 2, scope: !9393)
!9487 = !DILocation(line: 2953, column: 1, scope: !9393)
!9488 = distinct !DISubprogram(name: "happy_meal_tcvr_read", scope: !3, file: !3, line: 454, type: !9489, scopeLine: 456, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!9489 = !DISubroutineType(types: !9490)
!9490 = !{!32, !7554, !591, !32}
!9491 = !DILocalVariable(name: "hp", arg: 1, scope: !9488, file: !3, line: 454, type: !7554)
!9492 = !DILocation(line: 454, column: 52, scope: !9488)
!9493 = !DILocalVariable(name: "tregs", arg: 2, scope: !9488, file: !3, line: 455, type: !591)
!9494 = !DILocation(line: 455, column: 19, scope: !9488)
!9495 = !DILocalVariable(name: "reg", arg: 3, scope: !9488, file: !3, line: 455, type: !32)
!9496 = !DILocation(line: 455, column: 30, scope: !9488)
!9497 = !DILocalVariable(name: "tries", scope: !9488, file: !3, line: 457, type: !32)
!9498 = !DILocation(line: 457, column: 6, scope: !9488)
!9499 = !DILocalVariable(name: "retval", scope: !9488, file: !3, line: 458, type: !32)
!9500 = !DILocation(line: 458, column: 6, scope: !9488)
!9501 = !DILocation(line: 461, column: 6, scope: !9502)
!9502 = distinct !DILexicalBlock(scope: !9488, file: !3, line: 461, column: 6)
!9503 = !DILocation(line: 461, column: 10, scope: !9502)
!9504 = !DILocation(line: 461, column: 20, scope: !9502)
!9505 = !DILocation(line: 461, column: 6, scope: !9488)
!9506 = !DILocation(line: 463, column: 3, scope: !9507)
!9507 = distinct !DILexicalBlock(scope: !9502, file: !3, line: 461, column: 29)
!9508 = !DILocation(line: 466, column: 8, scope: !9509)
!9509 = distinct !DILexicalBlock(scope: !9488, file: !3, line: 466, column: 6)
!9510 = !DILocation(line: 466, column: 12, scope: !9509)
!9511 = !DILocation(line: 466, column: 24, scope: !9509)
!9512 = !DILocation(line: 466, column: 6, scope: !9488)
!9513 = !DILocation(line: 468, column: 29, scope: !9514)
!9514 = distinct !DILexicalBlock(scope: !9509, file: !3, line: 466, column: 42)
!9515 = !DILocation(line: 468, column: 33, scope: !9514)
!9516 = !DILocation(line: 468, column: 40, scope: !9514)
!9517 = !DILocation(line: 468, column: 10, scope: !9514)
!9518 = !DILocation(line: 468, column: 3, scope: !9514)
!9519 = !DILocation(line: 471, column: 2, scope: !9488)
!9520 = !DILocation(line: 473, column: 2, scope: !9488)
!9521 = !DILocation(line: 473, column: 11, scope: !9488)
!9522 = !DILocation(line: 473, column: 46, scope: !9488)
!9523 = !DILocation(line: 473, column: 57, scope: !9488)
!9524 = !DILocation(line: 473, column: 60, scope: !9488)
!9525 = !DILocation(line: 0, scope: !9488)
!9526 = !DILocation(line: 474, column: 3, scope: !9527)
!9527 = distinct !DILexicalBlock(scope: !9528, file: !3, line: 474, column: 3)
!9528 = distinct !DILexicalBlock(scope: !9529, file: !3, line: 474, column: 3)
!9529 = distinct !DILexicalBlock(scope: !9530, file: !3, line: 474, column: 3)
!9530 = distinct !DILexicalBlock(scope: !9488, file: !3, line: 474, column: 3)
!9531 = distinct !{!9531, !9520, !9532}
!9532 = !DILocation(line: 474, column: 3, scope: !9488)
!9533 = !DILocation(line: 475, column: 7, scope: !9534)
!9534 = distinct !DILexicalBlock(scope: !9488, file: !3, line: 475, column: 6)
!9535 = !DILocation(line: 475, column: 6, scope: !9488)
!9536 = !DILocation(line: 476, column: 3, scope: !9537)
!9537 = distinct !DILexicalBlock(scope: !9534, file: !3, line: 475, column: 14)
!9538 = !DILocation(line: 477, column: 3, scope: !9537)
!9539 = !DILocation(line: 479, column: 11, scope: !9488)
!9540 = !DILocation(line: 479, column: 46, scope: !9488)
!9541 = !DILocation(line: 479, column: 9, scope: !9488)
!9542 = !DILocation(line: 481, column: 9, scope: !9488)
!9543 = !DILocation(line: 481, column: 2, scope: !9488)
!9544 = !DILocation(line: 482, column: 1, scope: !9488)
!9545 = distinct !DISubprogram(name: "happy_meal_tcvr_write", scope: !3, file: !3, line: 486, type: !9546, scopeLine: 489, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!9546 = !DISubroutineType(types: !9547)
!9547 = !{null, !7554, !591, !32, !476}
!9548 = !DILocalVariable(name: "hp", arg: 1, scope: !9545, file: !3, line: 486, type: !7554)
!9549 = !DILocation(line: 486, column: 54, scope: !9545)
!9550 = !DILocalVariable(name: "tregs", arg: 2, scope: !9545, file: !3, line: 487, type: !591)
!9551 = !DILocation(line: 487, column: 21, scope: !9545)
!9552 = !DILocalVariable(name: "reg", arg: 3, scope: !9545, file: !3, line: 487, type: !32)
!9553 = !DILocation(line: 487, column: 32, scope: !9545)
!9554 = !DILocalVariable(name: "value", arg: 4, scope: !9545, file: !3, line: 488, type: !476)
!9555 = !DILocation(line: 488, column: 22, scope: !9545)
!9556 = !DILocalVariable(name: "tries", scope: !9545, file: !3, line: 490, type: !32)
!9557 = !DILocation(line: 490, column: 6, scope: !9545)
!9558 = !DILocation(line: 495, column: 8, scope: !9559)
!9559 = distinct !DILexicalBlock(scope: !9545, file: !3, line: 495, column: 6)
!9560 = !DILocation(line: 495, column: 12, scope: !9559)
!9561 = !DILocation(line: 495, column: 24, scope: !9559)
!9562 = !DILocation(line: 495, column: 6, scope: !9545)
!9563 = !DILocation(line: 496, column: 23, scope: !9564)
!9564 = distinct !DILexicalBlock(scope: !9559, file: !3, line: 495, column: 42)
!9565 = !DILocation(line: 496, column: 27, scope: !9564)
!9566 = !DILocation(line: 496, column: 34, scope: !9564)
!9567 = !DILocation(line: 496, column: 39, scope: !9564)
!9568 = !DILocation(line: 496, column: 3, scope: !9564)
!9569 = !DILocation(line: 497, column: 3, scope: !9564)
!9570 = !DILocation(line: 501, column: 2, scope: !9545)
!9571 = !DILocation(line: 504, column: 2, scope: !9545)
!9572 = !DILocation(line: 504, column: 11, scope: !9545)
!9573 = !DILocation(line: 504, column: 46, scope: !9545)
!9574 = !DILocation(line: 504, column: 57, scope: !9545)
!9575 = !DILocation(line: 504, column: 60, scope: !9545)
!9576 = !DILocation(line: 0, scope: !9545)
!9577 = !DILocation(line: 505, column: 3, scope: !9578)
!9578 = distinct !DILexicalBlock(scope: !9579, file: !3, line: 505, column: 3)
!9579 = distinct !DILexicalBlock(scope: !9580, file: !3, line: 505, column: 3)
!9580 = distinct !DILexicalBlock(scope: !9581, file: !3, line: 505, column: 3)
!9581 = distinct !DILexicalBlock(scope: !9545, file: !3, line: 505, column: 3)
!9582 = distinct !{!9582, !9571, !9583}
!9583 = !DILocation(line: 505, column: 3, scope: !9545)
!9584 = !DILocation(line: 508, column: 7, scope: !9585)
!9585 = distinct !DILexicalBlock(scope: !9545, file: !3, line: 508, column: 6)
!9586 = !DILocation(line: 508, column: 6, scope: !9545)
!9587 = !DILocation(line: 509, column: 3, scope: !9585)
!9588 = !DILocation(line: 512, column: 1, scope: !9545)
!9589 = distinct !DISubprogram(name: "is_lucent_phy", scope: !3, file: !3, line: 673, type: !9590, scopeLine: 674, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!9590 = !DISubroutineType(types: !9591)
!9591 = !{!32, !7554}
!9592 = !DILocalVariable(name: "hp", arg: 1, scope: !9589, file: !3, line: 673, type: !7554)
!9593 = !DILocation(line: 673, column: 45, scope: !9589)
!9594 = !DILocalVariable(name: "tregs", scope: !9589, file: !3, line: 675, type: !591)
!9595 = !DILocation(line: 675, column: 16, scope: !9589)
!9596 = !DILocation(line: 675, column: 24, scope: !9589)
!9597 = !DILocation(line: 675, column: 28, scope: !9589)
!9598 = !DILocalVariable(name: "mr2", scope: !9589, file: !3, line: 676, type: !476)
!9599 = !DILocation(line: 676, column: 17, scope: !9589)
!9600 = !DILocalVariable(name: "mr3", scope: !9589, file: !3, line: 676, type: !476)
!9601 = !DILocation(line: 676, column: 22, scope: !9589)
!9602 = !DILocalVariable(name: "ret", scope: !9589, file: !3, line: 677, type: !32)
!9603 = !DILocation(line: 677, column: 6, scope: !9589)
!9604 = !DILocation(line: 679, column: 29, scope: !9589)
!9605 = !DILocation(line: 679, column: 33, scope: !9589)
!9606 = !DILocation(line: 679, column: 8, scope: !9589)
!9607 = !DILocation(line: 679, column: 6, scope: !9589)
!9608 = !DILocation(line: 680, column: 29, scope: !9589)
!9609 = !DILocation(line: 680, column: 33, scope: !9589)
!9610 = !DILocation(line: 680, column: 8, scope: !9589)
!9611 = !DILocation(line: 680, column: 6, scope: !9589)
!9612 = !DILocation(line: 681, column: 7, scope: !9613)
!9613 = distinct !DILexicalBlock(scope: !9589, file: !3, line: 681, column: 6)
!9614 = !DILocation(line: 681, column: 11, scope: !9613)
!9615 = !DILocation(line: 681, column: 21, scope: !9613)
!9616 = !DILocation(line: 681, column: 31, scope: !9613)
!9617 = !DILocation(line: 682, column: 8, scope: !9613)
!9618 = !DILocation(line: 682, column: 12, scope: !9613)
!9619 = !DILocation(line: 682, column: 22, scope: !9613)
!9620 = !DILocation(line: 682, column: 29, scope: !9613)
!9621 = !DILocation(line: 681, column: 6, scope: !9589)
!9622 = !DILocation(line: 683, column: 7, scope: !9613)
!9623 = !DILocation(line: 683, column: 3, scope: !9613)
!9624 = !DILocation(line: 685, column: 9, scope: !9589)
!9625 = !DILocation(line: 685, column: 2, scope: !9589)
!9626 = distinct !DISubprogram(name: "set_happy_link_modes", scope: !3, file: !3, line: 611, type: !9627, scopeLine: 612, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!9627 = !DISubroutineType(types: !9628)
!9628 = !{!32, !7554, !591}
!9629 = !DILocalVariable(name: "hp", arg: 1, scope: !9626, file: !3, line: 611, type: !7554)
!9630 = !DILocation(line: 611, column: 52, scope: !9626)
!9631 = !DILocalVariable(name: "tregs", arg: 2, scope: !9626, file: !3, line: 611, type: !591)
!9632 = !DILocation(line: 611, column: 70, scope: !9626)
!9633 = !DILocalVariable(name: "full", scope: !9626, file: !3, line: 613, type: !32)
!9634 = !DILocation(line: 613, column: 6, scope: !9626)
!9635 = !DILocation(line: 618, column: 6, scope: !9636)
!9636 = distinct !DILexicalBlock(scope: !9626, file: !3, line: 618, column: 6)
!9637 = !DILocation(line: 618, column: 10, scope: !9636)
!9638 = !DILocation(line: 618, column: 22, scope: !9636)
!9639 = !DILocation(line: 618, column: 6, scope: !9626)
!9640 = !DILocation(line: 619, column: 37, scope: !9641)
!9641 = distinct !DILexicalBlock(scope: !9636, file: !3, line: 618, column: 34)
!9642 = !DILocation(line: 619, column: 41, scope: !9641)
!9643 = !DILocation(line: 619, column: 16, scope: !9641)
!9644 = !DILocation(line: 619, column: 3, scope: !9641)
!9645 = !DILocation(line: 619, column: 7, scope: !9641)
!9646 = !DILocation(line: 619, column: 14, scope: !9641)
!9647 = !DILocation(line: 620, column: 9, scope: !9648)
!9648 = distinct !DILexicalBlock(scope: !9641, file: !3, line: 620, column: 7)
!9649 = !DILocation(line: 620, column: 13, scope: !9648)
!9650 = !DILocation(line: 620, column: 20, scope: !9648)
!9651 = !DILocation(line: 620, column: 7, scope: !9641)
!9652 = !DILocation(line: 621, column: 4, scope: !9648)
!9653 = !DILocation(line: 622, column: 7, scope: !9654)
!9654 = distinct !DILexicalBlock(scope: !9641, file: !3, line: 622, column: 7)
!9655 = !DILocation(line: 622, column: 11, scope: !9654)
!9656 = !DILocation(line: 622, column: 18, scope: !9654)
!9657 = !DILocation(line: 622, column: 7, scope: !9641)
!9658 = !DILocation(line: 623, column: 9, scope: !9654)
!9659 = !DILocation(line: 623, column: 4, scope: !9654)
!9660 = !DILocation(line: 624, column: 12, scope: !9661)
!9661 = distinct !DILexicalBlock(scope: !9654, file: !3, line: 624, column: 12)
!9662 = !DILocation(line: 624, column: 16, scope: !9661)
!9663 = !DILocation(line: 624, column: 23, scope: !9661)
!9664 = !DILocation(line: 624, column: 12, scope: !9654)
!9665 = !DILocation(line: 625, column: 9, scope: !9661)
!9666 = !DILocation(line: 625, column: 4, scope: !9661)
!9667 = !DILocation(line: 626, column: 12, scope: !9668)
!9668 = distinct !DILexicalBlock(scope: !9661, file: !3, line: 626, column: 12)
!9669 = !DILocation(line: 626, column: 16, scope: !9668)
!9670 = !DILocation(line: 626, column: 23, scope: !9668)
!9671 = !DILocation(line: 626, column: 12, scope: !9661)
!9672 = !DILocation(line: 627, column: 9, scope: !9668)
!9673 = !DILocation(line: 627, column: 4, scope: !9668)
!9674 = !DILocation(line: 629, column: 9, scope: !9668)
!9675 = !DILocation(line: 630, column: 2, scope: !9641)
!9676 = !DILocation(line: 632, column: 38, scope: !9677)
!9677 = distinct !DILexicalBlock(scope: !9636, file: !3, line: 630, column: 9)
!9678 = !DILocation(line: 632, column: 42, scope: !9677)
!9679 = !DILocation(line: 632, column: 17, scope: !9677)
!9680 = !DILocation(line: 632, column: 3, scope: !9677)
!9681 = !DILocation(line: 632, column: 7, scope: !9677)
!9682 = !DILocation(line: 632, column: 15, scope: !9677)
!9683 = !DILocation(line: 633, column: 7, scope: !9684)
!9684 = distinct !DILexicalBlock(scope: !9677, file: !3, line: 633, column: 7)
!9685 = !DILocation(line: 633, column: 11, scope: !9684)
!9686 = !DILocation(line: 633, column: 19, scope: !9684)
!9687 = !DILocation(line: 633, column: 7, scope: !9677)
!9688 = !DILocation(line: 634, column: 9, scope: !9684)
!9689 = !DILocation(line: 634, column: 4, scope: !9684)
!9690 = !DILocation(line: 636, column: 9, scope: !9684)
!9691 = !DILocation(line: 647, column: 2, scope: !9626)
!9692 = !DILocation(line: 650, column: 2, scope: !9626)
!9693 = !DILocation(line: 650, column: 9, scope: !9626)
!9694 = !DILocation(line: 650, column: 53, scope: !9626)
!9695 = !DILocation(line: 651, column: 3, scope: !9626)
!9696 = !{i32 -2139646999}
!9697 = distinct !{!9697, !9692, !9695}
!9698 = !DILocation(line: 652, column: 6, scope: !9699)
!9699 = distinct !DILexicalBlock(scope: !9626, file: !3, line: 652, column: 6)
!9700 = !DILocation(line: 652, column: 6, scope: !9626)
!9701 = !DILocation(line: 653, column: 3, scope: !9702)
!9702 = distinct !DILexicalBlock(scope: !9699, file: !3, line: 652, column: 12)
!9703 = !DILocation(line: 653, column: 7, scope: !9702)
!9704 = !DILocation(line: 653, column: 19, scope: !9702)
!9705 = !DILocation(line: 654, column: 3, scope: !9702)
!9706 = !DILocation(line: 657, column: 2, scope: !9702)
!9707 = !DILocation(line: 658, column: 3, scope: !9708)
!9708 = distinct !DILexicalBlock(scope: !9699, file: !3, line: 657, column: 9)
!9709 = !DILocation(line: 658, column: 7, scope: !9708)
!9710 = !DILocation(line: 658, column: 19, scope: !9708)
!9711 = !DILocation(line: 659, column: 3, scope: !9708)
!9712 = !DILocation(line: 663, column: 2, scope: !9626)
!9713 = !DILocation(line: 666, column: 2, scope: !9626)
!9714 = !DILabel(scope: !9626, name: "no_response", file: !3, line: 667)
!9715 = !DILocation(line: 667, column: 1, scope: !9626)
!9716 = !DILocation(line: 668, column: 2, scope: !9626)
!9717 = !DILocation(line: 669, column: 1, scope: !9626)
!9718 = distinct !DISubprogram(name: "display_link_mode", scope: !3, file: !3, line: 570, type: !9719, scopeLine: 571, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!9719 = !DISubroutineType(types: !9720)
!9720 = !{null, !7554, !591}
!9721 = !DILocalVariable(name: "hp", arg: 1, scope: !9718, file: !3, line: 570, type: !7554)
!9722 = !DILocation(line: 570, column: 50, scope: !9718)
!9723 = !DILocalVariable(name: "tregs", arg: 2, scope: !9718, file: !3, line: 570, type: !591)
!9724 = !DILocation(line: 570, column: 68, scope: !9718)
!9725 = !DILocation(line: 572, column: 44, scope: !9718)
!9726 = !DILocation(line: 572, column: 48, scope: !9718)
!9727 = !DILocation(line: 572, column: 53, scope: !9718)
!9728 = !DILocation(line: 572, column: 2, scope: !9718)
!9729 = !DILocation(line: 573, column: 6, scope: !9730)
!9730 = distinct !DILexicalBlock(scope: !9718, file: !3, line: 573, column: 6)
!9731 = !DILocation(line: 573, column: 10, scope: !9730)
!9732 = !DILocation(line: 573, column: 20, scope: !9730)
!9733 = !DILocation(line: 573, column: 6, scope: !9718)
!9734 = !DILocation(line: 574, column: 3, scope: !9730)
!9735 = !DILocation(line: 576, column: 3, scope: !9730)
!9736 = !DILocation(line: 577, column: 2, scope: !9718)
!9737 = !DILocation(line: 578, column: 36, scope: !9718)
!9738 = !DILocation(line: 578, column: 40, scope: !9718)
!9739 = !DILocation(line: 578, column: 15, scope: !9718)
!9740 = !DILocation(line: 578, column: 2, scope: !9718)
!9741 = !DILocation(line: 578, column: 6, scope: !9718)
!9742 = !DILocation(line: 578, column: 13, scope: !9718)
!9743 = !DILocation(line: 579, column: 6, scope: !9744)
!9744 = distinct !DILexicalBlock(scope: !9718, file: !3, line: 579, column: 6)
!9745 = !DILocation(line: 579, column: 10, scope: !9744)
!9746 = !DILocation(line: 579, column: 17, scope: !9744)
!9747 = !DILocation(line: 579, column: 6, scope: !9718)
!9748 = !DILocation(line: 580, column: 7, scope: !9749)
!9749 = distinct !DILexicalBlock(scope: !9750, file: !3, line: 580, column: 7)
!9750 = distinct !DILexicalBlock(scope: !9744, file: !3, line: 579, column: 48)
!9751 = !DILocation(line: 580, column: 11, scope: !9749)
!9752 = !DILocation(line: 580, column: 18, scope: !9749)
!9753 = !DILocation(line: 580, column: 7, scope: !9750)
!9754 = !DILocation(line: 581, column: 4, scope: !9749)
!9755 = !DILocation(line: 583, column: 4, scope: !9749)
!9756 = !DILocation(line: 584, column: 2, scope: !9750)
!9757 = !DILocation(line: 585, column: 7, scope: !9758)
!9758 = distinct !DILexicalBlock(scope: !9759, file: !3, line: 585, column: 7)
!9759 = distinct !DILexicalBlock(scope: !9744, file: !3, line: 584, column: 9)
!9760 = !DILocation(line: 585, column: 11, scope: !9758)
!9761 = !DILocation(line: 585, column: 18, scope: !9758)
!9762 = !DILocation(line: 585, column: 7, scope: !9759)
!9763 = !DILocation(line: 586, column: 4, scope: !9758)
!9764 = !DILocation(line: 588, column: 4, scope: !9758)
!9765 = !DILocation(line: 590, column: 1, scope: !9718)
!9766 = distinct !DISubprogram(name: "display_forced_link_mode", scope: !3, file: !3, line: 592, type: !9719, scopeLine: 593, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!9767 = !DILocalVariable(name: "hp", arg: 1, scope: !9766, file: !3, line: 592, type: !7554)
!9768 = !DILocation(line: 592, column: 57, scope: !9766)
!9769 = !DILocalVariable(name: "tregs", arg: 2, scope: !9766, file: !3, line: 592, type: !591)
!9770 = !DILocation(line: 592, column: 75, scope: !9766)
!9771 = !DILocation(line: 594, column: 57, scope: !9766)
!9772 = !DILocation(line: 594, column: 61, scope: !9766)
!9773 = !DILocation(line: 594, column: 66, scope: !9766)
!9774 = !DILocation(line: 594, column: 2, scope: !9766)
!9775 = !DILocation(line: 595, column: 6, scope: !9776)
!9776 = distinct !DILexicalBlock(scope: !9766, file: !3, line: 595, column: 6)
!9777 = !DILocation(line: 595, column: 10, scope: !9776)
!9778 = !DILocation(line: 595, column: 20, scope: !9776)
!9779 = !DILocation(line: 595, column: 6, scope: !9766)
!9780 = !DILocation(line: 596, column: 3, scope: !9776)
!9781 = !DILocation(line: 598, column: 3, scope: !9776)
!9782 = !DILocation(line: 599, column: 2, scope: !9766)
!9783 = !DILocation(line: 600, column: 37, scope: !9766)
!9784 = !DILocation(line: 600, column: 41, scope: !9766)
!9785 = !DILocation(line: 600, column: 16, scope: !9766)
!9786 = !DILocation(line: 600, column: 2, scope: !9766)
!9787 = !DILocation(line: 600, column: 6, scope: !9766)
!9788 = !DILocation(line: 600, column: 14, scope: !9766)
!9789 = !DILocation(line: 601, column: 6, scope: !9790)
!9790 = distinct !DILexicalBlock(scope: !9766, file: !3, line: 601, column: 6)
!9791 = !DILocation(line: 601, column: 10, scope: !9790)
!9792 = !DILocation(line: 601, column: 18, scope: !9790)
!9793 = !DILocation(line: 601, column: 6, scope: !9766)
!9794 = !DILocation(line: 602, column: 3, scope: !9790)
!9795 = !DILocation(line: 604, column: 3, scope: !9790)
!9796 = !DILocation(line: 605, column: 6, scope: !9797)
!9797 = distinct !DILexicalBlock(scope: !9766, file: !3, line: 605, column: 6)
!9798 = !DILocation(line: 605, column: 10, scope: !9797)
!9799 = !DILocation(line: 605, column: 18, scope: !9797)
!9800 = !DILocation(line: 605, column: 6, scope: !9766)
!9801 = !DILocation(line: 606, column: 3, scope: !9797)
!9802 = !DILocation(line: 608, column: 3, scope: !9797)
!9803 = !DILocation(line: 609, column: 1, scope: !9766)
!9804 = distinct !DISubprogram(name: "try_next_permutation", scope: !3, file: !3, line: 546, type: !9627, scopeLine: 547, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!9805 = !DILocalVariable(name: "hp", arg: 1, scope: !9804, file: !3, line: 546, type: !7554)
!9806 = !DILocation(line: 546, column: 52, scope: !9804)
!9807 = !DILocalVariable(name: "tregs", arg: 2, scope: !9804, file: !3, line: 546, type: !591)
!9808 = !DILocation(line: 546, column: 70, scope: !9804)
!9809 = !DILocation(line: 548, column: 37, scope: !9804)
!9810 = !DILocation(line: 548, column: 41, scope: !9804)
!9811 = !DILocation(line: 548, column: 16, scope: !9804)
!9812 = !DILocation(line: 548, column: 2, scope: !9804)
!9813 = !DILocation(line: 548, column: 6, scope: !9804)
!9814 = !DILocation(line: 548, column: 14, scope: !9804)
!9815 = !DILocation(line: 553, column: 6, scope: !9816)
!9816 = distinct !DILexicalBlock(scope: !9804, file: !3, line: 553, column: 6)
!9817 = !DILocation(line: 553, column: 10, scope: !9816)
!9818 = !DILocation(line: 553, column: 18, scope: !9816)
!9819 = !DILocation(line: 553, column: 6, scope: !9804)
!9820 = !DILocation(line: 554, column: 3, scope: !9821)
!9821 = distinct !DILexicalBlock(scope: !9816, file: !3, line: 553, column: 35)
!9822 = !DILocation(line: 554, column: 7, scope: !9821)
!9823 = !DILocation(line: 554, column: 15, scope: !9821)
!9824 = !DILocation(line: 555, column: 25, scope: !9821)
!9825 = !DILocation(line: 555, column: 29, scope: !9821)
!9826 = !DILocation(line: 555, column: 46, scope: !9821)
!9827 = !DILocation(line: 555, column: 50, scope: !9821)
!9828 = !DILocation(line: 555, column: 3, scope: !9821)
!9829 = !DILocation(line: 556, column: 3, scope: !9821)
!9830 = !DILocation(line: 560, column: 6, scope: !9831)
!9831 = distinct !DILexicalBlock(scope: !9804, file: !3, line: 560, column: 6)
!9832 = !DILocation(line: 560, column: 10, scope: !9831)
!9833 = !DILocation(line: 560, column: 18, scope: !9831)
!9834 = !DILocation(line: 560, column: 6, scope: !9804)
!9835 = !DILocation(line: 561, column: 3, scope: !9836)
!9836 = distinct !DILexicalBlock(scope: !9831, file: !3, line: 560, column: 35)
!9837 = !DILocation(line: 561, column: 7, scope: !9836)
!9838 = !DILocation(line: 561, column: 15, scope: !9836)
!9839 = !DILocation(line: 562, column: 25, scope: !9836)
!9840 = !DILocation(line: 562, column: 29, scope: !9836)
!9841 = !DILocation(line: 562, column: 46, scope: !9836)
!9842 = !DILocation(line: 562, column: 50, scope: !9836)
!9843 = !DILocation(line: 562, column: 3, scope: !9836)
!9844 = !DILocation(line: 563, column: 3, scope: !9836)
!9845 = !DILocation(line: 567, column: 2, scope: !9804)
!9846 = !DILocation(line: 568, column: 1, scope: !9804)
!9847 = distinct !DISubprogram(name: "happy_meal_init", scope: !3, file: !3, line: 1420, type: !9590, scopeLine: 1421, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!9848 = !DILocalVariable(name: "hp", arg: 1, scope: !9847, file: !3, line: 1420, type: !7554)
!9849 = !DILocation(line: 1420, column: 47, scope: !9847)
!9850 = !DILocalVariable(name: "gregs", scope: !9847, file: !3, line: 1422, type: !591)
!9851 = !DILocation(line: 1422, column: 16, scope: !9847)
!9852 = !DILocation(line: 1422, column: 31, scope: !9847)
!9853 = !DILocation(line: 1422, column: 35, scope: !9847)
!9854 = !DILocalVariable(name: "etxregs", scope: !9847, file: !3, line: 1423, type: !591)
!9855 = !DILocation(line: 1423, column: 16, scope: !9847)
!9856 = !DILocation(line: 1423, column: 31, scope: !9847)
!9857 = !DILocation(line: 1423, column: 35, scope: !9847)
!9858 = !DILocalVariable(name: "erxregs", scope: !9847, file: !3, line: 1424, type: !591)
!9859 = !DILocation(line: 1424, column: 16, scope: !9847)
!9860 = !DILocation(line: 1424, column: 31, scope: !9847)
!9861 = !DILocation(line: 1424, column: 35, scope: !9847)
!9862 = !DILocalVariable(name: "bregs", scope: !9847, file: !3, line: 1425, type: !591)
!9863 = !DILocation(line: 1425, column: 16, scope: !9847)
!9864 = !DILocation(line: 1425, column: 31, scope: !9847)
!9865 = !DILocation(line: 1425, column: 35, scope: !9847)
!9866 = !DILocalVariable(name: "tregs", scope: !9847, file: !3, line: 1426, type: !591)
!9867 = !DILocation(line: 1426, column: 16, scope: !9847)
!9868 = !DILocation(line: 1426, column: 31, scope: !9847)
!9869 = !DILocation(line: 1426, column: 35, scope: !9847)
!9870 = !DILocalVariable(name: "regtmp", scope: !9847, file: !3, line: 1427, type: !987)
!9871 = !DILocation(line: 1427, column: 6, scope: !9847)
!9872 = !DILocalVariable(name: "rxcfg", scope: !9847, file: !3, line: 1427, type: !987)
!9873 = !DILocation(line: 1427, column: 14, scope: !9847)
!9874 = !DILocalVariable(name: "e", scope: !9847, file: !3, line: 1428, type: !564)
!9875 = !DILocation(line: 1428, column: 17, scope: !9847)
!9876 = !DILocation(line: 1428, column: 22, scope: !9847)
!9877 = !DILocation(line: 1428, column: 26, scope: !9847)
!9878 = !DILocation(line: 1428, column: 31, scope: !9847)
!9879 = !DILocation(line: 1431, column: 13, scope: !9847)
!9880 = !DILocation(line: 1431, column: 17, scope: !9847)
!9881 = !DILocation(line: 1431, column: 2, scope: !9847)
!9882 = !DILocation(line: 1435, column: 8, scope: !9883)
!9883 = distinct !DILexicalBlock(scope: !9847, file: !3, line: 1435, column: 6)
!9884 = !DILocation(line: 1435, column: 12, scope: !9883)
!9885 = !DILocation(line: 1435, column: 24, scope: !9883)
!9886 = !DILocation(line: 1435, column: 6, scope: !9847)
!9887 = !DILocation(line: 1437, column: 3, scope: !9888)
!9888 = distinct !DILexicalBlock(scope: !9883, file: !3, line: 1435, column: 39)
!9889 = !DILocation(line: 1437, column: 7, scope: !9888)
!9890 = !DILocation(line: 1437, column: 19, scope: !9888)
!9891 = !DILocation(line: 1438, column: 27, scope: !9888)
!9892 = !DILocation(line: 1438, column: 31, scope: !9888)
!9893 = !DILocation(line: 1438, column: 3, scope: !9888)
!9894 = !DILocation(line: 1439, column: 2, scope: !9888)
!9895 = !DILocation(line: 1443, column: 23, scope: !9847)
!9896 = !DILocation(line: 1443, column: 27, scope: !9847)
!9897 = !DILocation(line: 1443, column: 2, scope: !9847)
!9898 = !DILocation(line: 1447, column: 18, scope: !9847)
!9899 = !DILocation(line: 1447, column: 22, scope: !9847)
!9900 = !DILocation(line: 1447, column: 2, scope: !9847)
!9901 = !DILocation(line: 1451, column: 24, scope: !9847)
!9902 = !DILocation(line: 1451, column: 2, scope: !9847)
!9903 = !DILocation(line: 1456, column: 2, scope: !9847)
!9904 = !DILocation(line: 1459, column: 6, scope: !9905)
!9905 = distinct !DILexicalBlock(scope: !9847, file: !3, line: 1459, column: 6)
!9906 = !DILocation(line: 1459, column: 10, scope: !9905)
!9907 = !DILocation(line: 1459, column: 22, scope: !9905)
!9908 = !DILocation(line: 1459, column: 6, scope: !9847)
!9909 = !DILocation(line: 1462, column: 3, scope: !9910)
!9910 = distinct !DILexicalBlock(scope: !9905, file: !3, line: 1459, column: 39)
!9911 = !DILocation(line: 1464, column: 2, scope: !9910)
!9912 = !DILocation(line: 1467, column: 3, scope: !9913)
!9913 = distinct !DILexicalBlock(scope: !9905, file: !3, line: 1464, column: 9)
!9914 = !DILocation(line: 1473, column: 31, scope: !9847)
!9915 = !DILocation(line: 1473, column: 35, scope: !9847)
!9916 = !DILocation(line: 1473, column: 2, scope: !9847)
!9917 = !DILocation(line: 1477, column: 9, scope: !9847)
!9918 = !DILocation(line: 1477, column: 13, scope: !9847)
!9919 = !DILocation(line: 1477, column: 2, scope: !9847)
!9920 = !DILocation(line: 1481, column: 3, scope: !9921)
!9921 = distinct !DILexicalBlock(scope: !9847, file: !3, line: 1477, column: 24)
!9922 = !DILocation(line: 1486, column: 3, scope: !9921)
!9923 = !DILocation(line: 1487, column: 3, scope: !9921)
!9924 = !DILocation(line: 1492, column: 3, scope: !9921)
!9925 = !DILocation(line: 1493, column: 3, scope: !9921)
!9926 = !DILocation(line: 1496, column: 28, scope: !9927)
!9927 = distinct !DILexicalBlock(scope: !9847, file: !3, line: 1496, column: 6)
!9928 = !DILocation(line: 1496, column: 32, scope: !9927)
!9929 = !DILocation(line: 1496, column: 6, scope: !9927)
!9930 = !DILocation(line: 1496, column: 6, scope: !9847)
!9931 = !DILocation(line: 1497, column: 3, scope: !9927)
!9932 = !DILocation(line: 1501, column: 22, scope: !9847)
!9933 = !DILocation(line: 1501, column: 26, scope: !9847)
!9934 = !DILocation(line: 1501, column: 2, scope: !9847)
!9935 = !DILocation(line: 1502, column: 22, scope: !9847)
!9936 = !DILocation(line: 1502, column: 26, scope: !9847)
!9937 = !DILocation(line: 1502, column: 2, scope: !9847)
!9938 = !DILocation(line: 1506, column: 2, scope: !9847)
!9939 = !DILocation(line: 1507, column: 2, scope: !9847)
!9940 = !DILocation(line: 1508, column: 2, scope: !9847)
!9941 = !DILocation(line: 1514, column: 2, scope: !9847)
!9942 = !DILocation(line: 1516, column: 2, scope: !9847)
!9943 = !DILocation(line: 1517, column: 2, scope: !9847)
!9944 = !DILocation(line: 1518, column: 2, scope: !9847)
!9945 = !DILocation(line: 1521, column: 7, scope: !9946)
!9946 = distinct !DILexicalBlock(scope: !9847, file: !3, line: 1521, column: 6)
!9947 = !DILocation(line: 1521, column: 11, scope: !9946)
!9948 = !DILocation(line: 1521, column: 16, scope: !9946)
!9949 = !DILocation(line: 1521, column: 22, scope: !9946)
!9950 = !DILocation(line: 1521, column: 38, scope: !9946)
!9951 = !DILocation(line: 1522, column: 7, scope: !9946)
!9952 = !DILocation(line: 1522, column: 32, scope: !9946)
!9953 = !DILocation(line: 1521, column: 6, scope: !9847)
!9954 = !DILocation(line: 1523, column: 3, scope: !9955)
!9955 = distinct !DILexicalBlock(scope: !9946, file: !3, line: 1522, column: 39)
!9956 = !DILocation(line: 1524, column: 3, scope: !9955)
!9957 = !DILocation(line: 1525, column: 3, scope: !9955)
!9958 = !DILocation(line: 1526, column: 3, scope: !9955)
!9959 = !DILocation(line: 1527, column: 2, scope: !9955)
!9960 = !DILocation(line: 1527, column: 14, scope: !9961)
!9961 = distinct !DILexicalBlock(scope: !9946, file: !3, line: 1527, column: 13)
!9962 = !DILocation(line: 1527, column: 18, scope: !9961)
!9963 = !DILocation(line: 1527, column: 23, scope: !9961)
!9964 = !DILocation(line: 1527, column: 29, scope: !9961)
!9965 = !DILocation(line: 1527, column: 44, scope: !9961)
!9966 = !DILocation(line: 1527, column: 13, scope: !9946)
!9967 = !DILocalVariable(name: "hash_table", scope: !9968, file: !3, line: 1528, type: !9969)
!9968 = distinct !DILexicalBlock(scope: !9961, file: !3, line: 1527, column: 50)
!9969 = !DICompositeType(tag: DW_TAG_array_type, baseType: !581, size: 64, elements: !2272)
!9970 = !DILocation(line: 1528, column: 7, scope: !9968)
!9971 = !DILocalVariable(name: "ha", scope: !9968, file: !3, line: 1529, type: !7630)
!9972 = !DILocation(line: 1529, column: 26, scope: !9968)
!9973 = !DILocalVariable(name: "crc", scope: !9968, file: !3, line: 1530, type: !987)
!9974 = !DILocation(line: 1530, column: 7, scope: !9968)
!9975 = !DILocation(line: 1532, column: 3, scope: !9968)
!9976 = !DILocalVariable(name: "__mptr", scope: !9977, file: !3, line: 1533, type: !591)
!9977 = distinct !DILexicalBlock(scope: !9978, file: !3, line: 1533, column: 3)
!9978 = distinct !DILexicalBlock(scope: !9968, file: !3, line: 1533, column: 3)
!9979 = !DILocation(line: 1533, column: 3, scope: !9977)
!9980 = !DILocation(line: 1533, column: 3, scope: !9981)
!9981 = distinct !DILexicalBlock(scope: !9977, file: !3, line: 1533, column: 3)
!9982 = !DILocation(line: 1533, column: 3, scope: !9978)
!9983 = !DILocation(line: 1533, column: 3, scope: !9984)
!9984 = distinct !DILexicalBlock(scope: !9978, file: !3, line: 1533, column: 3)
!9985 = !DILocation(line: 1534, column: 10, scope: !9986)
!9986 = distinct !DILexicalBlock(scope: !9984, file: !3, line: 1533, column: 40)
!9987 = !DILocation(line: 1534, column: 8, scope: !9986)
!9988 = !DILocation(line: 1535, column: 8, scope: !9986)
!9989 = !DILocation(line: 1536, column: 34, scope: !9986)
!9990 = !DILocation(line: 1536, column: 38, scope: !9986)
!9991 = !DILocation(line: 1536, column: 30, scope: !9986)
!9992 = !DILocation(line: 1536, column: 15, scope: !9986)
!9993 = !DILocation(line: 1536, column: 19, scope: !9986)
!9994 = !DILocation(line: 1536, column: 4, scope: !9986)
!9995 = !DILocation(line: 1536, column: 25, scope: !9986)
!9996 = !DILocation(line: 1537, column: 3, scope: !9986)
!9997 = !DILocalVariable(name: "__mptr", scope: !9998, file: !3, line: 1533, type: !591)
!9998 = distinct !DILexicalBlock(scope: !9984, file: !3, line: 1533, column: 3)
!9999 = !DILocation(line: 1533, column: 3, scope: !9998)
!10000 = !DILocation(line: 1533, column: 3, scope: !10001)
!10001 = distinct !DILexicalBlock(scope: !9998, file: !3, line: 1533, column: 3)
!10002 = distinct !{!10002, !9982, !10003}
!10003 = !DILocation(line: 1537, column: 3, scope: !9978)
!10004 = !DILocation(line: 1538, column: 3, scope: !9968)
!10005 = !DILocation(line: 1539, column: 3, scope: !9968)
!10006 = !DILocation(line: 1540, column: 3, scope: !9968)
!10007 = !DILocation(line: 1541, column: 3, scope: !9968)
!10008 = !DILocation(line: 1542, column: 2, scope: !9968)
!10009 = !DILocation(line: 1543, column: 3, scope: !10010)
!10010 = distinct !DILexicalBlock(scope: !9961, file: !3, line: 1542, column: 9)
!10011 = !DILocation(line: 1544, column: 3, scope: !10010)
!10012 = !DILocation(line: 1545, column: 3, scope: !10010)
!10013 = !DILocation(line: 1546, column: 3, scope: !10010)
!10014 = !DILocation(line: 1553, column: 2, scope: !9847)
!10015 = !DILocation(line: 1555, column: 2, scope: !9847)
!10016 = !DILocation(line: 1563, column: 6, scope: !10017)
!10017 = distinct !DILexicalBlock(scope: !9847, file: !3, line: 1563, column: 6)
!10018 = !DILocation(line: 1564, column: 14, scope: !10017)
!10019 = !DILocation(line: 1564, column: 18, scope: !10017)
!10020 = !DILocation(line: 1564, column: 7, scope: !10017)
!10021 = !DILocation(line: 1564, column: 30, scope: !10017)
!10022 = !DILocation(line: 1563, column: 41, scope: !10017)
!10023 = !DILocation(line: 1563, column: 6, scope: !9847)
!10024 = !DILocation(line: 1565, column: 3, scope: !10017)
!10025 = !DILocation(line: 1575, column: 2, scope: !9847)
!10026 = !DILocation(line: 1616, column: 2, scope: !9847)
!10027 = !DILocation(line: 1623, column: 2, scope: !9847)
!10028 = !DILocation(line: 1628, column: 2, scope: !9847)
!10029 = !DILocation(line: 1638, column: 2, scope: !9847)
!10030 = !DILocation(line: 1639, column: 11, scope: !9847)
!10031 = !DILocation(line: 1639, column: 9, scope: !9847)
!10032 = !DILocation(line: 1640, column: 2, scope: !9847)
!10033 = !DILocation(line: 1641, column: 6, scope: !10034)
!10034 = distinct !DILexicalBlock(scope: !9847, file: !3, line: 1641, column: 6)
!10035 = !DILocation(line: 1641, column: 40, scope: !10034)
!10036 = !DILocation(line: 1641, column: 6, scope: !9847)
!10037 = !DILocation(line: 1642, column: 3, scope: !10038)
!10038 = distinct !DILexicalBlock(scope: !10034, file: !3, line: 1641, column: 71)
!10039 = !DILocation(line: 1644, column: 38, scope: !10038)
!10040 = !DILocation(line: 1643, column: 3, scope: !10038)
!10041 = !DILocation(line: 1646, column: 2, scope: !10038)
!10042 = !DILocation(line: 1651, column: 8, scope: !9847)
!10043 = !DILocation(line: 1652, column: 6, scope: !10044)
!10044 = distinct !DILexicalBlock(scope: !9847, file: !3, line: 1652, column: 6)
!10045 = !DILocation(line: 1652, column: 10, scope: !10044)
!10046 = !DILocation(line: 1652, column: 15, scope: !10044)
!10047 = !DILocation(line: 1652, column: 21, scope: !10044)
!10048 = !DILocation(line: 1652, column: 6, scope: !9847)
!10049 = !DILocation(line: 1653, column: 9, scope: !10044)
!10050 = !DILocation(line: 1653, column: 3, scope: !10044)
!10051 = !DILocation(line: 1654, column: 2, scope: !9847)
!10052 = !DILocation(line: 1657, column: 2, scope: !10053)
!10053 = distinct !DILexicalBlock(scope: !10054, file: !3, line: 1657, column: 2)
!10054 = distinct !DILexicalBlock(scope: !10055, file: !3, line: 1657, column: 2)
!10055 = distinct !DILexicalBlock(scope: !10056, file: !3, line: 1657, column: 2)
!10056 = distinct !DILexicalBlock(scope: !9847, file: !3, line: 1657, column: 2)
!10057 = !DILocation(line: 1661, column: 9, scope: !9847)
!10058 = !DILocation(line: 1662, column: 6, scope: !10059)
!10059 = distinct !DILexicalBlock(scope: !9847, file: !3, line: 1662, column: 6)
!10060 = !DILocation(line: 1662, column: 10, scope: !10059)
!10061 = !DILocation(line: 1662, column: 22, scope: !10059)
!10062 = !DILocation(line: 1662, column: 6, scope: !9847)
!10063 = !DILocation(line: 1663, column: 10, scope: !10059)
!10064 = !DILocation(line: 1663, column: 3, scope: !10059)
!10065 = !DILocation(line: 1668, column: 2, scope: !9847)
!10066 = !DILocation(line: 1671, column: 2, scope: !9847)
!10067 = !DILocation(line: 1674, column: 9, scope: !9847)
!10068 = !DILocation(line: 1677, column: 6, scope: !10069)
!10069 = distinct !DILexicalBlock(scope: !9847, file: !3, line: 1677, column: 6)
!10070 = !DILocation(line: 1677, column: 10, scope: !10069)
!10071 = !DILocation(line: 1677, column: 22, scope: !10069)
!10072 = !DILocation(line: 1677, column: 6, scope: !9847)
!10073 = !DILocation(line: 1678, column: 10, scope: !10069)
!10074 = !DILocation(line: 1678, column: 3, scope: !10069)
!10075 = !DILocation(line: 1681, column: 6, scope: !10076)
!10076 = distinct !DILexicalBlock(scope: !9847, file: !3, line: 1681, column: 6)
!10077 = !DILocation(line: 1681, column: 10, scope: !10076)
!10078 = !DILocation(line: 1681, column: 20, scope: !10076)
!10079 = !DILocation(line: 1681, column: 6, scope: !9847)
!10080 = !DILocation(line: 1682, column: 10, scope: !10076)
!10081 = !DILocation(line: 1682, column: 3, scope: !10076)
!10082 = !DILocation(line: 1686, column: 2, scope: !9847)
!10083 = !DILocation(line: 1694, column: 2, scope: !9847)
!10084 = !DILocation(line: 1695, column: 2, scope: !9847)
!10085 = !DILocation(line: 1697, column: 2, scope: !9847)
!10086 = !DILocation(line: 1699, column: 2, scope: !9847)
!10087 = !DILocation(line: 1703, column: 36, scope: !9847)
!10088 = !DILocation(line: 1703, column: 40, scope: !9847)
!10089 = !DILocation(line: 1703, column: 2, scope: !9847)
!10090 = !DILocation(line: 1706, column: 2, scope: !9847)
!10091 = !DILocation(line: 1707, column: 1, scope: !9847)
!10092 = distinct !DISubprogram(name: "happy_meal_bb_read", scope: !3, file: !3, line: 363, type: !9489, scopeLine: 365, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!10093 = !DILocalVariable(name: "hp", arg: 1, scope: !10092, file: !3, line: 363, type: !7554)
!10094 = !DILocation(line: 363, column: 50, scope: !10092)
!10095 = !DILocalVariable(name: "tregs", arg: 2, scope: !10092, file: !3, line: 364, type: !591)
!10096 = !DILocation(line: 364, column: 24, scope: !10092)
!10097 = !DILocalVariable(name: "reg", arg: 3, scope: !10092, file: !3, line: 364, type: !32)
!10098 = !DILocation(line: 364, column: 35, scope: !10092)
!10099 = !DILocalVariable(name: "tmp", scope: !10092, file: !3, line: 366, type: !987)
!10100 = !DILocation(line: 366, column: 6, scope: !10092)
!10101 = !DILocalVariable(name: "retval", scope: !10092, file: !3, line: 367, type: !32)
!10102 = !DILocation(line: 367, column: 6, scope: !10092)
!10103 = !DILocalVariable(name: "i", scope: !10092, file: !3, line: 368, type: !32)
!10104 = !DILocation(line: 368, column: 6, scope: !10092)
!10105 = !DILocation(line: 373, column: 2, scope: !10092)
!10106 = !DILocation(line: 376, column: 9, scope: !10107)
!10107 = distinct !DILexicalBlock(scope: !10092, file: !3, line: 376, column: 2)
!10108 = !DILocation(line: 376, column: 7, scope: !10107)
!10109 = !DILocation(line: 376, column: 14, scope: !10110)
!10110 = distinct !DILexicalBlock(scope: !10107, file: !3, line: 376, column: 2)
!10111 = !DILocation(line: 376, column: 16, scope: !10110)
!10112 = !DILocation(line: 376, column: 2, scope: !10107)
!10113 = !DILocation(line: 377, column: 14, scope: !10110)
!10114 = !DILocation(line: 377, column: 18, scope: !10110)
!10115 = !DILocation(line: 377, column: 3, scope: !10110)
!10116 = !DILocation(line: 376, column: 23, scope: !10110)
!10117 = !DILocation(line: 376, column: 2, scope: !10110)
!10118 = distinct !{!10118, !10112, !10119}
!10119 = !DILocation(line: 377, column: 26, scope: !10107)
!10120 = !DILocation(line: 380, column: 13, scope: !10092)
!10121 = !DILocation(line: 380, column: 17, scope: !10092)
!10122 = !DILocation(line: 380, column: 2, scope: !10092)
!10123 = !DILocation(line: 381, column: 13, scope: !10092)
!10124 = !DILocation(line: 381, column: 17, scope: !10092)
!10125 = !DILocation(line: 381, column: 2, scope: !10092)
!10126 = !DILocation(line: 382, column: 13, scope: !10092)
!10127 = !DILocation(line: 382, column: 17, scope: !10092)
!10128 = !DILocation(line: 382, column: 2, scope: !10092)
!10129 = !DILocation(line: 383, column: 13, scope: !10092)
!10130 = !DILocation(line: 383, column: 17, scope: !10092)
!10131 = !DILocation(line: 383, column: 2, scope: !10092)
!10132 = !DILocation(line: 386, column: 8, scope: !10092)
!10133 = !DILocation(line: 386, column: 12, scope: !10092)
!10134 = !DILocation(line: 386, column: 18, scope: !10092)
!10135 = !DILocation(line: 386, column: 6, scope: !10092)
!10136 = !DILocation(line: 387, column: 9, scope: !10137)
!10137 = distinct !DILexicalBlock(scope: !10092, file: !3, line: 387, column: 2)
!10138 = !DILocation(line: 387, column: 7, scope: !10137)
!10139 = !DILocation(line: 387, column: 14, scope: !10140)
!10140 = distinct !DILexicalBlock(scope: !10137, file: !3, line: 387, column: 2)
!10141 = !DILocation(line: 387, column: 16, scope: !10140)
!10142 = !DILocation(line: 387, column: 2, scope: !10137)
!10143 = !DILocation(line: 388, column: 14, scope: !10140)
!10144 = !DILocation(line: 388, column: 18, scope: !10140)
!10145 = !DILocation(line: 388, column: 27, scope: !10140)
!10146 = !DILocation(line: 388, column: 34, scope: !10140)
!10147 = !DILocation(line: 388, column: 31, scope: !10140)
!10148 = !DILocation(line: 388, column: 37, scope: !10140)
!10149 = !DILocation(line: 388, column: 3, scope: !10140)
!10150 = !DILocation(line: 387, column: 23, scope: !10140)
!10151 = !DILocation(line: 387, column: 2, scope: !10140)
!10152 = distinct !{!10152, !10142, !10153}
!10153 = !DILocation(line: 388, column: 41, scope: !10137)
!10154 = !DILocation(line: 391, column: 9, scope: !10092)
!10155 = !DILocation(line: 391, column: 13, scope: !10092)
!10156 = !DILocation(line: 391, column: 6, scope: !10092)
!10157 = !DILocation(line: 392, column: 9, scope: !10158)
!10158 = distinct !DILexicalBlock(scope: !10092, file: !3, line: 392, column: 2)
!10159 = !DILocation(line: 392, column: 7, scope: !10158)
!10160 = !DILocation(line: 392, column: 14, scope: !10161)
!10161 = distinct !DILexicalBlock(scope: !10158, file: !3, line: 392, column: 2)
!10162 = !DILocation(line: 392, column: 16, scope: !10161)
!10163 = !DILocation(line: 392, column: 2, scope: !10158)
!10164 = !DILocation(line: 393, column: 14, scope: !10161)
!10165 = !DILocation(line: 393, column: 18, scope: !10161)
!10166 = !DILocation(line: 393, column: 27, scope: !10161)
!10167 = !DILocation(line: 393, column: 34, scope: !10161)
!10168 = !DILocation(line: 393, column: 31, scope: !10161)
!10169 = !DILocation(line: 393, column: 37, scope: !10161)
!10170 = !DILocation(line: 393, column: 3, scope: !10161)
!10171 = !DILocation(line: 392, column: 23, scope: !10161)
!10172 = !DILocation(line: 392, column: 2, scope: !10161)
!10173 = distinct !{!10173, !10163, !10174}
!10174 = !DILocation(line: 393, column: 41, scope: !10158)
!10175 = !DILocation(line: 396, column: 2, scope: !10092)
!10176 = !DILocation(line: 399, column: 21, scope: !10092)
!10177 = !DILocation(line: 399, column: 25, scope: !10092)
!10178 = !DILocation(line: 399, column: 33, scope: !10092)
!10179 = !DILocation(line: 399, column: 37, scope: !10092)
!10180 = !DILocation(line: 399, column: 47, scope: !10092)
!10181 = !DILocation(line: 399, column: 9, scope: !10092)
!10182 = !DILocation(line: 400, column: 9, scope: !10183)
!10183 = distinct !DILexicalBlock(scope: !10092, file: !3, line: 400, column: 2)
!10184 = !DILocation(line: 400, column: 7, scope: !10183)
!10185 = !DILocation(line: 400, column: 15, scope: !10186)
!10186 = distinct !DILexicalBlock(scope: !10183, file: !3, line: 400, column: 2)
!10187 = !DILocation(line: 400, column: 17, scope: !10186)
!10188 = !DILocation(line: 400, column: 2, scope: !10183)
!10189 = !DILocation(line: 401, column: 25, scope: !10186)
!10190 = !DILocation(line: 401, column: 29, scope: !10186)
!10191 = !DILocation(line: 401, column: 37, scope: !10186)
!10192 = !DILocation(line: 401, column: 41, scope: !10186)
!10193 = !DILocation(line: 401, column: 51, scope: !10186)
!10194 = !DILocation(line: 401, column: 13, scope: !10186)
!10195 = !DILocation(line: 401, column: 10, scope: !10186)
!10196 = !DILocation(line: 401, column: 3, scope: !10186)
!10197 = !DILocation(line: 400, column: 24, scope: !10186)
!10198 = !DILocation(line: 400, column: 2, scope: !10186)
!10199 = distinct !{!10199, !10188, !10200}
!10200 = !DILocation(line: 401, column: 63, scope: !10183)
!10201 = !DILocation(line: 402, column: 21, scope: !10092)
!10202 = !DILocation(line: 402, column: 25, scope: !10092)
!10203 = !DILocation(line: 402, column: 33, scope: !10092)
!10204 = !DILocation(line: 402, column: 37, scope: !10092)
!10205 = !DILocation(line: 402, column: 47, scope: !10092)
!10206 = !DILocation(line: 402, column: 9, scope: !10092)
!10207 = !DILocation(line: 403, column: 21, scope: !10092)
!10208 = !DILocation(line: 403, column: 25, scope: !10092)
!10209 = !DILocation(line: 403, column: 33, scope: !10092)
!10210 = !DILocation(line: 403, column: 37, scope: !10092)
!10211 = !DILocation(line: 403, column: 47, scope: !10092)
!10212 = !DILocation(line: 403, column: 9, scope: !10092)
!10213 = !DILocation(line: 404, column: 21, scope: !10092)
!10214 = !DILocation(line: 404, column: 25, scope: !10092)
!10215 = !DILocation(line: 404, column: 33, scope: !10092)
!10216 = !DILocation(line: 404, column: 37, scope: !10092)
!10217 = !DILocation(line: 404, column: 47, scope: !10092)
!10218 = !DILocation(line: 404, column: 9, scope: !10092)
!10219 = !DILocation(line: 406, column: 9, scope: !10092)
!10220 = !DILocation(line: 406, column: 2, scope: !10092)
!10221 = distinct !DISubprogram(name: "writel", scope: !9383, file: !9383, line: 67, type: !10222, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!10222 = !DISubroutineType(types: !10223)
!10223 = !{null, !7, !10224}
!10224 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9388, size: 64)
!10225 = !DILocalVariable(name: "val", arg: 1, scope: !10221, file: !9383, line: 67, type: !7)
!10226 = !DILocation(line: 67, column: 1, scope: !10221)
!10227 = !DILocalVariable(name: "addr", arg: 2, scope: !10221, file: !9383, line: 67, type: !10224)
!10228 = !{i32 -2141556736}
!10229 = distinct !DISubprogram(name: "readl", scope: !9383, file: !9383, line: 59, type: !10230, scopeLine: 59, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!10230 = !DISubroutineType(types: !10231)
!10231 = !{!7, !9386}
!10232 = !DILocalVariable(name: "addr", arg: 1, scope: !10229, file: !9383, line: 59, type: !9386)
!10233 = !DILocation(line: 59, column: 1, scope: !10229)
!10234 = !DILocalVariable(name: "ret", scope: !10229, file: !9383, line: 59, type: !7)
!10235 = !{i32 -2141559129}
!10236 = distinct !DISubprogram(name: "BB_PUT_BIT", scope: !3, file: !3, line: 321, type: !10237, scopeLine: 322, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!10237 = !DISubroutineType(types: !10238)
!10238 = !{null, !7554, !591, !32}
!10239 = !DILocalVariable(name: "hp", arg: 1, scope: !10236, file: !3, line: 321, type: !7554)
!10240 = !DILocation(line: 321, column: 43, scope: !10236)
!10241 = !DILocalVariable(name: "tregs", arg: 2, scope: !10236, file: !3, line: 321, type: !591)
!10242 = !DILocation(line: 321, column: 61, scope: !10236)
!10243 = !DILocalVariable(name: "bit", arg: 3, scope: !10236, file: !3, line: 321, type: !32)
!10244 = !DILocation(line: 321, column: 72, scope: !10236)
!10245 = !DILocation(line: 323, column: 2, scope: !10236)
!10246 = !DILocation(line: 324, column: 2, scope: !10236)
!10247 = !DILocation(line: 325, column: 2, scope: !10236)
!10248 = !DILocation(line: 326, column: 1, scope: !10236)
!10249 = distinct !DISubprogram(name: "BB_GET_BIT2", scope: !3, file: !3, line: 345, type: !10250, scopeLine: 346, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!10250 = !DISubroutineType(types: !10251)
!10251 = !{!987, !7554, !591, !32}
!10252 = !DILocalVariable(name: "hp", arg: 1, scope: !10249, file: !3, line: 345, type: !7554)
!10253 = !DILocation(line: 345, column: 43, scope: !10249)
!10254 = !DILocalVariable(name: "tregs", arg: 2, scope: !10249, file: !3, line: 345, type: !591)
!10255 = !DILocation(line: 345, column: 61, scope: !10249)
!10256 = !DILocalVariable(name: "internal", arg: 3, scope: !10249, file: !3, line: 345, type: !32)
!10257 = !DILocation(line: 345, column: 72, scope: !10249)
!10258 = !DILocalVariable(name: "retval", scope: !10249, file: !3, line: 347, type: !987)
!10259 = !DILocation(line: 347, column: 6, scope: !10249)
!10260 = !DILocation(line: 349, column: 2, scope: !10249)
!10261 = !DILocation(line: 350, column: 2, scope: !10262)
!10262 = distinct !DILexicalBlock(scope: !10263, file: !3, line: 350, column: 2)
!10263 = distinct !DILexicalBlock(scope: !10264, file: !3, line: 350, column: 2)
!10264 = distinct !DILexicalBlock(scope: !10265, file: !3, line: 350, column: 2)
!10265 = distinct !DILexicalBlock(scope: !10249, file: !3, line: 350, column: 2)
!10266 = !DILocation(line: 351, column: 11, scope: !10249)
!10267 = !DILocation(line: 351, column: 9, scope: !10249)
!10268 = !DILocation(line: 352, column: 6, scope: !10269)
!10269 = distinct !DILexicalBlock(scope: !10249, file: !3, line: 352, column: 6)
!10270 = !DILocation(line: 352, column: 6, scope: !10249)
!10271 = !DILocation(line: 353, column: 10, scope: !10269)
!10272 = !DILocation(line: 353, column: 3, scope: !10269)
!10273 = !DILocation(line: 355, column: 10, scope: !10269)
!10274 = !DILocation(line: 356, column: 2, scope: !10249)
!10275 = !DILocation(line: 358, column: 9, scope: !10249)
!10276 = !DILocation(line: 358, column: 2, scope: !10249)
!10277 = distinct !DISubprogram(name: "happy_meal_bb_write", scope: !3, file: !3, line: 409, type: !9546, scopeLine: 412, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!10278 = !DILocalVariable(name: "hp", arg: 1, scope: !10277, file: !3, line: 409, type: !7554)
!10279 = !DILocation(line: 409, column: 52, scope: !10277)
!10280 = !DILocalVariable(name: "tregs", arg: 2, scope: !10277, file: !3, line: 410, type: !591)
!10281 = !DILocation(line: 410, column: 19, scope: !10277)
!10282 = !DILocalVariable(name: "reg", arg: 3, scope: !10277, file: !3, line: 410, type: !32)
!10283 = !DILocation(line: 410, column: 30, scope: !10277)
!10284 = !DILocalVariable(name: "value", arg: 4, scope: !10277, file: !3, line: 411, type: !476)
!10285 = !DILocation(line: 411, column: 20, scope: !10277)
!10286 = !DILocalVariable(name: "tmp", scope: !10277, file: !3, line: 413, type: !987)
!10287 = !DILocation(line: 413, column: 6, scope: !10277)
!10288 = !DILocalVariable(name: "i", scope: !10277, file: !3, line: 414, type: !32)
!10289 = !DILocation(line: 414, column: 6, scope: !10277)
!10290 = !DILocation(line: 419, column: 2, scope: !10277)
!10291 = !DILocation(line: 422, column: 9, scope: !10292)
!10292 = distinct !DILexicalBlock(scope: !10277, file: !3, line: 422, column: 2)
!10293 = !DILocation(line: 422, column: 7, scope: !10292)
!10294 = !DILocation(line: 422, column: 14, scope: !10295)
!10295 = distinct !DILexicalBlock(scope: !10292, file: !3, line: 422, column: 2)
!10296 = !DILocation(line: 422, column: 16, scope: !10295)
!10297 = !DILocation(line: 422, column: 2, scope: !10292)
!10298 = !DILocation(line: 423, column: 14, scope: !10295)
!10299 = !DILocation(line: 423, column: 18, scope: !10295)
!10300 = !DILocation(line: 423, column: 3, scope: !10295)
!10301 = !DILocation(line: 422, column: 23, scope: !10295)
!10302 = !DILocation(line: 422, column: 2, scope: !10295)
!10303 = distinct !{!10303, !10297, !10304}
!10304 = !DILocation(line: 423, column: 26, scope: !10292)
!10305 = !DILocation(line: 426, column: 13, scope: !10277)
!10306 = !DILocation(line: 426, column: 17, scope: !10277)
!10307 = !DILocation(line: 426, column: 2, scope: !10277)
!10308 = !DILocation(line: 427, column: 13, scope: !10277)
!10309 = !DILocation(line: 427, column: 17, scope: !10277)
!10310 = !DILocation(line: 427, column: 2, scope: !10277)
!10311 = !DILocation(line: 428, column: 13, scope: !10277)
!10312 = !DILocation(line: 428, column: 17, scope: !10277)
!10313 = !DILocation(line: 428, column: 2, scope: !10277)
!10314 = !DILocation(line: 429, column: 13, scope: !10277)
!10315 = !DILocation(line: 429, column: 17, scope: !10277)
!10316 = !DILocation(line: 429, column: 2, scope: !10277)
!10317 = !DILocation(line: 432, column: 9, scope: !10277)
!10318 = !DILocation(line: 432, column: 13, scope: !10277)
!10319 = !DILocation(line: 432, column: 19, scope: !10277)
!10320 = !DILocation(line: 432, column: 6, scope: !10277)
!10321 = !DILocation(line: 433, column: 9, scope: !10322)
!10322 = distinct !DILexicalBlock(scope: !10277, file: !3, line: 433, column: 2)
!10323 = !DILocation(line: 433, column: 7, scope: !10322)
!10324 = !DILocation(line: 433, column: 14, scope: !10325)
!10325 = distinct !DILexicalBlock(scope: !10322, file: !3, line: 433, column: 2)
!10326 = !DILocation(line: 433, column: 16, scope: !10325)
!10327 = !DILocation(line: 433, column: 2, scope: !10322)
!10328 = !DILocation(line: 434, column: 14, scope: !10325)
!10329 = !DILocation(line: 434, column: 18, scope: !10325)
!10330 = !DILocation(line: 434, column: 27, scope: !10325)
!10331 = !DILocation(line: 434, column: 34, scope: !10325)
!10332 = !DILocation(line: 434, column: 31, scope: !10325)
!10333 = !DILocation(line: 434, column: 37, scope: !10325)
!10334 = !DILocation(line: 434, column: 3, scope: !10325)
!10335 = !DILocation(line: 433, column: 23, scope: !10325)
!10336 = !DILocation(line: 433, column: 2, scope: !10325)
!10337 = distinct !{!10337, !10327, !10338}
!10338 = !DILocation(line: 434, column: 41, scope: !10322)
!10339 = !DILocation(line: 437, column: 9, scope: !10277)
!10340 = !DILocation(line: 437, column: 13, scope: !10277)
!10341 = !DILocation(line: 437, column: 6, scope: !10277)
!10342 = !DILocation(line: 438, column: 9, scope: !10343)
!10343 = distinct !DILexicalBlock(scope: !10277, file: !3, line: 438, column: 2)
!10344 = !DILocation(line: 438, column: 7, scope: !10343)
!10345 = !DILocation(line: 438, column: 14, scope: !10346)
!10346 = distinct !DILexicalBlock(scope: !10343, file: !3, line: 438, column: 2)
!10347 = !DILocation(line: 438, column: 16, scope: !10346)
!10348 = !DILocation(line: 438, column: 2, scope: !10343)
!10349 = !DILocation(line: 439, column: 14, scope: !10346)
!10350 = !DILocation(line: 439, column: 18, scope: !10346)
!10351 = !DILocation(line: 439, column: 27, scope: !10346)
!10352 = !DILocation(line: 439, column: 34, scope: !10346)
!10353 = !DILocation(line: 439, column: 31, scope: !10346)
!10354 = !DILocation(line: 439, column: 37, scope: !10346)
!10355 = !DILocation(line: 439, column: 3, scope: !10346)
!10356 = !DILocation(line: 438, column: 23, scope: !10346)
!10357 = !DILocation(line: 438, column: 2, scope: !10346)
!10358 = distinct !{!10358, !10348, !10359}
!10359 = !DILocation(line: 439, column: 41, scope: !10343)
!10360 = !DILocation(line: 442, column: 13, scope: !10277)
!10361 = !DILocation(line: 442, column: 17, scope: !10277)
!10362 = !DILocation(line: 442, column: 2, scope: !10277)
!10363 = !DILocation(line: 443, column: 13, scope: !10277)
!10364 = !DILocation(line: 443, column: 17, scope: !10277)
!10365 = !DILocation(line: 443, column: 2, scope: !10277)
!10366 = !DILocation(line: 445, column: 9, scope: !10367)
!10367 = distinct !DILexicalBlock(scope: !10277, file: !3, line: 445, column: 2)
!10368 = !DILocation(line: 445, column: 7, scope: !10367)
!10369 = !DILocation(line: 445, column: 15, scope: !10370)
!10370 = distinct !DILexicalBlock(scope: !10367, file: !3, line: 445, column: 2)
!10371 = !DILocation(line: 445, column: 17, scope: !10370)
!10372 = !DILocation(line: 445, column: 2, scope: !10367)
!10373 = !DILocation(line: 446, column: 14, scope: !10370)
!10374 = !DILocation(line: 446, column: 18, scope: !10370)
!10375 = !DILocation(line: 446, column: 27, scope: !10370)
!10376 = !DILocation(line: 446, column: 36, scope: !10370)
!10377 = !DILocation(line: 446, column: 33, scope: !10370)
!10378 = !DILocation(line: 446, column: 39, scope: !10370)
!10379 = !DILocation(line: 446, column: 3, scope: !10370)
!10380 = !DILocation(line: 445, column: 24, scope: !10370)
!10381 = !DILocation(line: 445, column: 2, scope: !10370)
!10382 = distinct !{!10382, !10372, !10383}
!10383 = !DILocation(line: 446, column: 43, scope: !10367)
!10384 = !DILocation(line: 449, column: 2, scope: !10277)
!10385 = !DILocation(line: 450, column: 1, scope: !10277)
!10386 = distinct !DISubprogram(name: "happy_meal_get_counters", scope: !3, file: !3, line: 934, type: !9719, scopeLine: 935, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!10387 = !DILocalVariable(name: "hp", arg: 1, scope: !10386, file: !3, line: 934, type: !7554)
!10388 = !DILocation(line: 934, column: 56, scope: !10386)
!10389 = !DILocalVariable(name: "bregs", arg: 2, scope: !10386, file: !3, line: 934, type: !591)
!10390 = !DILocation(line: 934, column: 74, scope: !10386)
!10391 = !DILocalVariable(name: "stats", scope: !10386, file: !3, line: 936, type: !783)
!10392 = !DILocation(line: 936, column: 27, scope: !10386)
!10393 = !DILocation(line: 936, column: 36, scope: !10386)
!10394 = !DILocation(line: 936, column: 40, scope: !10386)
!10395 = !DILocation(line: 936, column: 45, scope: !10386)
!10396 = !DILocation(line: 938, column: 26, scope: !10386)
!10397 = !DILocation(line: 938, column: 2, scope: !10386)
!10398 = !DILocation(line: 938, column: 9, scope: !10386)
!10399 = !DILocation(line: 938, column: 23, scope: !10386)
!10400 = !DILocation(line: 939, column: 2, scope: !10386)
!10401 = !DILocation(line: 941, column: 28, scope: !10386)
!10402 = !DILocation(line: 941, column: 2, scope: !10386)
!10403 = !DILocation(line: 941, column: 9, scope: !10386)
!10404 = !DILocation(line: 941, column: 25, scope: !10386)
!10405 = !DILocation(line: 942, column: 2, scope: !10386)
!10406 = !DILocation(line: 944, column: 29, scope: !10386)
!10407 = !DILocation(line: 944, column: 2, scope: !10386)
!10408 = !DILocation(line: 944, column: 9, scope: !10386)
!10409 = !DILocation(line: 944, column: 26, scope: !10386)
!10410 = !DILocation(line: 945, column: 2, scope: !10386)
!10411 = !DILocation(line: 947, column: 30, scope: !10386)
!10412 = !DILocation(line: 947, column: 2, scope: !10386)
!10413 = !DILocation(line: 947, column: 9, scope: !10386)
!10414 = !DILocation(line: 947, column: 27, scope: !10386)
!10415 = !DILocation(line: 950, column: 4, scope: !10386)
!10416 = !DILocation(line: 951, column: 4, scope: !10386)
!10417 = !DILocation(line: 950, column: 39, scope: !10386)
!10418 = !DILocation(line: 950, column: 3, scope: !10386)
!10419 = !DILocation(line: 949, column: 2, scope: !10386)
!10420 = !DILocation(line: 949, column: 9, scope: !10386)
!10421 = !DILocation(line: 949, column: 20, scope: !10386)
!10422 = !DILocation(line: 952, column: 2, scope: !10386)
!10423 = !DILocation(line: 953, column: 2, scope: !10386)
!10424 = !DILocation(line: 954, column: 1, scope: !10386)
!10425 = distinct !DISubprogram(name: "happy_meal_poll_stop", scope: !3, file: !3, line: 957, type: !9719, scopeLine: 958, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!10426 = !DILocalVariable(name: "hp", arg: 1, scope: !10425, file: !3, line: 957, type: !7554)
!10427 = !DILocation(line: 957, column: 53, scope: !10425)
!10428 = !DILocalVariable(name: "tregs", arg: 2, scope: !10425, file: !3, line: 957, type: !591)
!10429 = !DILocation(line: 957, column: 71, scope: !10425)
!10430 = !DILocation(line: 962, column: 7, scope: !10431)
!10431 = distinct !DILexicalBlock(scope: !10425, file: !3, line: 962, column: 6)
!10432 = !DILocation(line: 962, column: 11, scope: !10431)
!10433 = !DILocation(line: 962, column: 23, scope: !10431)
!10434 = !DILocation(line: 962, column: 58, scope: !10431)
!10435 = !DILocation(line: 962, column: 6, scope: !10425)
!10436 = !DILocation(line: 965, column: 3, scope: !10437)
!10437 = distinct !DILexicalBlock(scope: !10431, file: !3, line: 963, column: 38)
!10438 = !DILocation(line: 970, column: 2, scope: !10425)
!10439 = !DILocation(line: 974, column: 2, scope: !10425)
!10440 = !DILocation(line: 978, column: 2, scope: !10425)
!10441 = !DILocation(line: 978, column: 6, scope: !10425)
!10442 = !DILocation(line: 978, column: 18, scope: !10425)
!10443 = !DILocation(line: 981, column: 2, scope: !10444)
!10444 = distinct !DILexicalBlock(scope: !10445, file: !3, line: 981, column: 2)
!10445 = distinct !DILexicalBlock(scope: !10446, file: !3, line: 981, column: 2)
!10446 = distinct !DILexicalBlock(scope: !10447, file: !3, line: 981, column: 2)
!10447 = distinct !DILexicalBlock(scope: !10425, file: !3, line: 981, column: 2)
!10448 = !DILocation(line: 983, column: 1, scope: !10425)
!10449 = distinct !DISubprogram(name: "happy_meal_stop", scope: !3, file: !3, line: 914, type: !9719, scopeLine: 915, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!10450 = !DILocalVariable(name: "hp", arg: 1, scope: !10449, file: !3, line: 914, type: !7554)
!10451 = !DILocation(line: 914, column: 48, scope: !10449)
!10452 = !DILocalVariable(name: "gregs", arg: 2, scope: !10449, file: !3, line: 914, type: !591)
!10453 = !DILocation(line: 914, column: 66, scope: !10449)
!10454 = !DILocalVariable(name: "tries", scope: !10449, file: !3, line: 916, type: !32)
!10455 = !DILocation(line: 916, column: 6, scope: !10449)
!10456 = !DILocation(line: 921, column: 2, scope: !10449)
!10457 = !DILocation(line: 922, column: 2, scope: !10449)
!10458 = !DILocation(line: 922, column: 9, scope: !10449)
!10459 = !DILocation(line: 922, column: 46, scope: !10449)
!10460 = !DILocation(line: 922, column: 49, scope: !10449)
!10461 = !DILocation(line: 0, scope: !10449)
!10462 = !DILocation(line: 923, column: 3, scope: !10463)
!10463 = distinct !DILexicalBlock(scope: !10464, file: !3, line: 923, column: 3)
!10464 = distinct !DILexicalBlock(scope: !10465, file: !3, line: 923, column: 3)
!10465 = distinct !DILexicalBlock(scope: !10466, file: !3, line: 923, column: 3)
!10466 = distinct !DILexicalBlock(scope: !10449, file: !3, line: 923, column: 3)
!10467 = distinct !{!10467, !10457, !10468}
!10468 = !DILocation(line: 923, column: 3, scope: !10449)
!10469 = !DILocation(line: 926, column: 7, scope: !10470)
!10470 = distinct !DILexicalBlock(scope: !10449, file: !3, line: 926, column: 6)
!10471 = !DILocation(line: 926, column: 6, scope: !10449)
!10472 = !DILocation(line: 927, column: 3, scope: !10470)
!10473 = !DILocation(line: 931, column: 1, scope: !10449)
!10474 = distinct !DISubprogram(name: "happy_meal_init_rings", scope: !3, file: !3, line: 1249, type: !9190, scopeLine: 1250, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!10475 = !DILocalVariable(name: "hp", arg: 1, scope: !10474, file: !3, line: 1249, type: !7554)
!10476 = !DILocation(line: 1249, column: 54, scope: !10474)
!10477 = !DILocalVariable(name: "hb", scope: !10474, file: !3, line: 1251, type: !7559)
!10478 = !DILocation(line: 1251, column: 27, scope: !10474)
!10479 = !DILocation(line: 1251, column: 32, scope: !10474)
!10480 = !DILocation(line: 1251, column: 36, scope: !10474)
!10481 = !DILocalVariable(name: "i", scope: !10474, file: !3, line: 1252, type: !32)
!10482 = !DILocation(line: 1252, column: 6, scope: !10474)
!10483 = !DILocation(line: 1255, column: 41, scope: !10474)
!10484 = !DILocation(line: 1255, column: 45, scope: !10474)
!10485 = !DILocation(line: 1255, column: 52, scope: !10474)
!10486 = !DILocation(line: 1255, column: 28, scope: !10474)
!10487 = !DILocation(line: 1255, column: 32, scope: !10474)
!10488 = !DILocation(line: 1255, column: 39, scope: !10474)
!10489 = !DILocation(line: 1255, column: 15, scope: !10474)
!10490 = !DILocation(line: 1255, column: 19, scope: !10474)
!10491 = !DILocation(line: 1255, column: 26, scope: !10474)
!10492 = !DILocation(line: 1255, column: 2, scope: !10474)
!10493 = !DILocation(line: 1255, column: 6, scope: !10474)
!10494 = !DILocation(line: 1255, column: 13, scope: !10474)
!10495 = !DILocation(line: 1259, column: 25, scope: !10474)
!10496 = !DILocation(line: 1259, column: 2, scope: !10474)
!10497 = !DILocation(line: 1263, column: 9, scope: !10498)
!10498 = distinct !DILexicalBlock(scope: !10474, file: !3, line: 1263, column: 2)
!10499 = !DILocation(line: 1263, column: 7, scope: !10498)
!10500 = !DILocation(line: 1263, column: 14, scope: !10501)
!10501 = distinct !DILexicalBlock(scope: !10498, file: !3, line: 1263, column: 2)
!10502 = !DILocation(line: 1263, column: 16, scope: !10501)
!10503 = !DILocation(line: 1263, column: 2, scope: !10498)
!10504 = !DILocalVariable(name: "skb", scope: !10505, file: !3, line: 1264, type: !415)
!10505 = distinct !DILexicalBlock(scope: !10501, file: !3, line: 1263, column: 37)
!10506 = !DILocation(line: 1264, column: 19, scope: !10505)
!10507 = !DILocalVariable(name: "mapping", scope: !10505, file: !3, line: 1265, type: !987)
!10508 = !DILocation(line: 1265, column: 7, scope: !10505)
!10509 = !DILocalVariable(name: "__skb", scope: !10510, file: !3, line: 1267, type: !415)
!10510 = distinct !DILexicalBlock(scope: !10505, file: !3, line: 1267, column: 9)
!10511 = !DILocation(line: 1267, column: 9, scope: !10510)
!10512 = !DILocation(line: 1267, column: 9, scope: !10513)
!10513 = distinct !DILexicalBlock(scope: !10510, file: !3, line: 1267, column: 9)
!10514 = !DILocalVariable(name: "__offset", scope: !10515, file: !3, line: 1267, type: !32)
!10515 = distinct !DILexicalBlock(scope: !10513, file: !3, line: 1267, column: 9)
!10516 = !DILocation(line: 1267, column: 9, scope: !10515)
!10517 = !DILocation(line: 1267, column: 9, scope: !10518)
!10518 = distinct !DILexicalBlock(scope: !10515, file: !3, line: 1267, column: 9)
!10519 = !DILocation(line: 1267, column: 7, scope: !10505)
!10520 = !DILocation(line: 1268, column: 8, scope: !10521)
!10521 = distinct !DILexicalBlock(scope: !10505, file: !3, line: 1268, column: 7)
!10522 = !DILocation(line: 1268, column: 7, scope: !10505)
!10523 = !DILocation(line: 1269, column: 4, scope: !10524)
!10524 = distinct !DILexicalBlock(scope: !10521, file: !3, line: 1268, column: 13)
!10525 = !DILocation(line: 1269, column: 4, scope: !10526)
!10526 = distinct !DILexicalBlock(scope: !10524, file: !3, line: 1269, column: 4)
!10527 = !{i32 -2139639414}
!10528 = !DILocation(line: 1270, column: 4, scope: !10524)
!10529 = !DILocation(line: 1272, column: 20, scope: !10505)
!10530 = !DILocation(line: 1272, column: 3, scope: !10505)
!10531 = !DILocation(line: 1272, column: 7, scope: !10505)
!10532 = !DILocation(line: 1272, column: 15, scope: !10505)
!10533 = !DILocation(line: 1272, column: 18, scope: !10505)
!10534 = !DILocation(line: 1275, column: 11, scope: !10505)
!10535 = !DILocation(line: 1275, column: 3, scope: !10505)
!10536 = !DILocation(line: 1276, column: 13, scope: !10505)
!10537 = !DILocation(line: 1276, column: 11, scope: !10505)
!10538 = !DILocation(line: 1278, column: 25, scope: !10539)
!10539 = distinct !DILexicalBlock(scope: !10505, file: !3, line: 1278, column: 7)
!10540 = !DILocation(line: 1278, column: 29, scope: !10539)
!10541 = !DILocation(line: 1278, column: 38, scope: !10539)
!10542 = !DILocation(line: 1278, column: 7, scope: !10539)
!10543 = !DILocation(line: 1278, column: 7, scope: !10505)
!10544 = !DILocation(line: 1279, column: 22, scope: !10545)
!10545 = distinct !DILexicalBlock(scope: !10539, file: !3, line: 1278, column: 48)
!10546 = !DILocation(line: 1279, column: 4, scope: !10545)
!10547 = !DILocation(line: 1280, column: 4, scope: !10545)
!10548 = !DILocation(line: 1280, column: 4, scope: !10549)
!10549 = distinct !DILexicalBlock(scope: !10545, file: !3, line: 1280, column: 4)
!10550 = !{i32 -2139638954}
!10551 = !DILocation(line: 1281, column: 4, scope: !10545)
!10552 = !DILocation(line: 1283, column: 3, scope: !10505)
!10553 = !DILocation(line: 1283, column: 3, scope: !10554)
!10554 = distinct !DILexicalBlock(scope: !10505, file: !3, line: 1283, column: 3)
!10555 = !{i32 -2139638520}
!10556 = !DILocation(line: 1286, column: 15, scope: !10505)
!10557 = !DILocation(line: 1286, column: 3, scope: !10505)
!10558 = !DILocation(line: 1287, column: 2, scope: !10505)
!10559 = !DILocation(line: 1263, column: 33, scope: !10501)
!10560 = !DILocation(line: 1263, column: 2, scope: !10501)
!10561 = distinct !{!10561, !10503, !10562}
!10562 = !DILocation(line: 1287, column: 2, scope: !10498)
!10563 = !DILocation(line: 1290, column: 9, scope: !10564)
!10564 = distinct !DILexicalBlock(scope: !10474, file: !3, line: 1290, column: 2)
!10565 = !DILocation(line: 1290, column: 7, scope: !10564)
!10566 = !DILocation(line: 1290, column: 14, scope: !10567)
!10567 = distinct !DILexicalBlock(scope: !10564, file: !3, line: 1290, column: 2)
!10568 = !DILocation(line: 1290, column: 16, scope: !10567)
!10569 = !DILocation(line: 1290, column: 2, scope: !10564)
!10570 = !DILocation(line: 1291, column: 3, scope: !10567)
!10571 = !DILocation(line: 1291, column: 3, scope: !10572)
!10572 = distinct !DILexicalBlock(scope: !10567, file: !3, line: 1291, column: 3)
!10573 = !{i32 -2139638132}
!10574 = !DILocation(line: 1290, column: 33, scope: !10567)
!10575 = !DILocation(line: 1290, column: 2, scope: !10567)
!10576 = distinct !{!10576, !10569, !10577}
!10577 = !DILocation(line: 1291, column: 3, scope: !10564)
!10578 = !DILocation(line: 1294, column: 1, scope: !10474)
!10579 = distinct !DISubprogram(name: "happy_meal_transceiver_check", scope: !3, file: !3, line: 1090, type: !9719, scopeLine: 1091, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!10580 = !DILocalVariable(name: "hp", arg: 1, scope: !10579, file: !3, line: 1090, type: !7554)
!10581 = !DILocation(line: 1090, column: 61, scope: !10579)
!10582 = !DILocalVariable(name: "tregs", arg: 2, scope: !10579, file: !3, line: 1090, type: !591)
!10583 = !DILocation(line: 1090, column: 79, scope: !10579)
!10584 = !DILocalVariable(name: "tconfig", scope: !10579, file: !3, line: 1092, type: !312)
!10585 = !DILocation(line: 1092, column: 16, scope: !10579)
!10586 = !DILocation(line: 1092, column: 26, scope: !10579)
!10587 = !DILocation(line: 1095, column: 6, scope: !10588)
!10588 = distinct !DILexicalBlock(scope: !10579, file: !3, line: 1095, column: 6)
!10589 = !DILocation(line: 1095, column: 10, scope: !10588)
!10590 = !DILocation(line: 1095, column: 22, scope: !10588)
!10591 = !DILocation(line: 1095, column: 6, scope: !10579)
!10592 = !DILocation(line: 1098, column: 7, scope: !10593)
!10593 = distinct !DILexicalBlock(scope: !10594, file: !3, line: 1098, column: 7)
!10594 = distinct !DILexicalBlock(scope: !10588, file: !3, line: 1095, column: 36)
!10595 = !DILocation(line: 1098, column: 11, scope: !10593)
!10596 = !DILocation(line: 1098, column: 21, scope: !10593)
!10597 = !DILocation(line: 1098, column: 7, scope: !10594)
!10598 = !DILocation(line: 1099, column: 8, scope: !10599)
!10599 = distinct !DILexicalBlock(scope: !10600, file: !3, line: 1099, column: 8)
!10600 = distinct !DILexicalBlock(scope: !10593, file: !3, line: 1098, column: 34)
!10601 = !DILocation(line: 1099, column: 16, scope: !10599)
!10602 = !DILocation(line: 1099, column: 8, scope: !10600)
!10603 = !DILocation(line: 1101, column: 26, scope: !10604)
!10604 = distinct !DILexicalBlock(scope: !10599, file: !3, line: 1099, column: 33)
!10605 = !DILocation(line: 1101, column: 30, scope: !10604)
!10606 = !DILocation(line: 1101, column: 5, scope: !10604)
!10607 = !DILocation(line: 1102, column: 5, scope: !10604)
!10608 = !DILocation(line: 1102, column: 9, scope: !10604)
!10609 = !DILocation(line: 1102, column: 15, scope: !10604)
!10610 = !DILocation(line: 1103, column: 5, scope: !10604)
!10611 = !DILocation(line: 1103, column: 9, scope: !10604)
!10612 = !DILocation(line: 1103, column: 19, scope: !10604)
!10613 = !DILocation(line: 1105, column: 13, scope: !10604)
!10614 = !DILocation(line: 1106, column: 13, scope: !10604)
!10615 = !DILocation(line: 1107, column: 5, scope: !10604)
!10616 = !DILocation(line: 1108, column: 4, scope: !10604)
!10617 = !DILocation(line: 1109, column: 3, scope: !10600)
!10618 = !DILocation(line: 1110, column: 8, scope: !10619)
!10619 = distinct !DILexicalBlock(scope: !10620, file: !3, line: 1110, column: 8)
!10620 = distinct !DILexicalBlock(scope: !10593, file: !3, line: 1109, column: 10)
!10621 = !DILocation(line: 1110, column: 12, scope: !10619)
!10622 = !DILocation(line: 1110, column: 22, scope: !10619)
!10623 = !DILocation(line: 1110, column: 8, scope: !10620)
!10624 = !DILocation(line: 1112, column: 11, scope: !10625)
!10625 = distinct !DILexicalBlock(scope: !10626, file: !3, line: 1112, column: 9)
!10626 = distinct !DILexicalBlock(scope: !10619, file: !3, line: 1110, column: 35)
!10627 = !DILocation(line: 1112, column: 47, scope: !10625)
!10628 = !DILocation(line: 1112, column: 9, scope: !10626)
!10629 = !DILocation(line: 1114, column: 27, scope: !10630)
!10630 = distinct !DILexicalBlock(scope: !10625, file: !3, line: 1112, column: 55)
!10631 = !DILocation(line: 1114, column: 31, scope: !10630)
!10632 = !DILocation(line: 1114, column: 6, scope: !10630)
!10633 = !DILocation(line: 1115, column: 6, scope: !10630)
!10634 = !DILocation(line: 1115, column: 10, scope: !10630)
!10635 = !DILocation(line: 1115, column: 16, scope: !10630)
!10636 = !DILocation(line: 1116, column: 6, scope: !10630)
!10637 = !DILocation(line: 1116, column: 10, scope: !10630)
!10638 = !DILocation(line: 1116, column: 20, scope: !10630)
!10639 = !DILocation(line: 1118, column: 6, scope: !10630)
!10640 = !DILocation(line: 1121, column: 5, scope: !10630)
!10641 = !DILocation(line: 1123, column: 4, scope: !10626)
!10642 = !DILocation(line: 1127, column: 2, scope: !10594)
!10643 = !DILocalVariable(name: "reread", scope: !10644, file: !3, line: 1128, type: !987)
!10644 = distinct !DILexicalBlock(scope: !10588, file: !3, line: 1127, column: 9)
!10645 = !DILocation(line: 1128, column: 7, scope: !10644)
!10646 = !DILocation(line: 1128, column: 16, scope: !10644)
!10647 = !DILocation(line: 1132, column: 7, scope: !10648)
!10648 = distinct !DILexicalBlock(scope: !10644, file: !3, line: 1132, column: 7)
!10649 = !DILocation(line: 1132, column: 14, scope: !10648)
!10650 = !DILocation(line: 1132, column: 7, scope: !10644)
!10651 = !DILocation(line: 1133, column: 4, scope: !10652)
!10652 = distinct !DILexicalBlock(scope: !10648, file: !3, line: 1132, column: 31)
!10653 = !DILocation(line: 1134, column: 4, scope: !10652)
!10654 = !DILocation(line: 1134, column: 8, scope: !10652)
!10655 = !DILocation(line: 1134, column: 14, scope: !10652)
!10656 = !DILocation(line: 1135, column: 4, scope: !10652)
!10657 = !DILocation(line: 1135, column: 8, scope: !10652)
!10658 = !DILocation(line: 1135, column: 18, scope: !10652)
!10659 = !DILocation(line: 1137, column: 3, scope: !10652)
!10660 = !DILocation(line: 1138, column: 8, scope: !10661)
!10661 = distinct !DILexicalBlock(scope: !10662, file: !3, line: 1138, column: 8)
!10662 = distinct !DILexicalBlock(scope: !10648, file: !3, line: 1137, column: 10)
!10663 = !DILocation(line: 1138, column: 15, scope: !10661)
!10664 = !DILocation(line: 1138, column: 8, scope: !10662)
!10665 = !DILocation(line: 1139, column: 5, scope: !10666)
!10666 = distinct !DILexicalBlock(scope: !10661, file: !3, line: 1138, column: 32)
!10667 = !DILocation(line: 1141, column: 5, scope: !10666)
!10668 = !DILocation(line: 1141, column: 9, scope: !10666)
!10669 = !DILocation(line: 1141, column: 15, scope: !10666)
!10670 = !DILocation(line: 1142, column: 5, scope: !10666)
!10671 = !DILocation(line: 1142, column: 9, scope: !10666)
!10672 = !DILocation(line: 1142, column: 19, scope: !10666)
!10673 = !DILocation(line: 1144, column: 4, scope: !10666)
!10674 = !DILocation(line: 1145, column: 5, scope: !10675)
!10675 = distinct !DILexicalBlock(scope: !10661, file: !3, line: 1144, column: 11)
!10676 = !DILocation(line: 1146, column: 5, scope: !10675)
!10677 = !DILocation(line: 1146, column: 9, scope: !10675)
!10678 = !DILocation(line: 1146, column: 19, scope: !10675)
!10679 = !DILocation(line: 1151, column: 1, scope: !10579)
!10680 = distinct !DISubprogram(name: "happy_meal_tcvr_reset", scope: !3, file: !3, line: 992, type: !9627, scopeLine: 993, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!10681 = !DILocalVariable(name: "hp", arg: 1, scope: !10680, file: !3, line: 992, type: !7554)
!10682 = !DILocation(line: 992, column: 53, scope: !10680)
!10683 = !DILocalVariable(name: "tregs", arg: 2, scope: !10680, file: !3, line: 992, type: !591)
!10684 = !DILocation(line: 992, column: 71, scope: !10680)
!10685 = !DILocalVariable(name: "tconfig", scope: !10680, file: !3, line: 994, type: !987)
!10686 = !DILocation(line: 994, column: 6, scope: !10680)
!10687 = !DILocalVariable(name: "result", scope: !10680, file: !3, line: 995, type: !32)
!10688 = !DILocation(line: 995, column: 6, scope: !10680)
!10689 = !DILocalVariable(name: "tries", scope: !10680, file: !3, line: 995, type: !32)
!10690 = !DILocation(line: 995, column: 14, scope: !10680)
!10691 = !DILocation(line: 997, column: 12, scope: !10680)
!10692 = !DILocation(line: 997, column: 10, scope: !10680)
!10693 = !DILocation(line: 999, column: 6, scope: !10694)
!10694 = distinct !DILexicalBlock(scope: !10680, file: !3, line: 999, column: 6)
!10695 = !DILocation(line: 999, column: 10, scope: !10694)
!10696 = !DILocation(line: 999, column: 20, scope: !10694)
!10697 = !DILocation(line: 999, column: 6, scope: !10680)
!10698 = !DILocation(line: 1001, column: 3, scope: !10699)
!10699 = distinct !DILexicalBlock(scope: !10694, file: !3, line: 999, column: 33)
!10700 = !DILocation(line: 1002, column: 3, scope: !10699)
!10701 = !DILocation(line: 1002, column: 7, scope: !10699)
!10702 = !DILocation(line: 1002, column: 17, scope: !10699)
!10703 = !DILocation(line: 1003, column: 3, scope: !10699)
!10704 = !DILocation(line: 1003, column: 7, scope: !10699)
!10705 = !DILocation(line: 1003, column: 13, scope: !10699)
!10706 = !DILocation(line: 1005, column: 25, scope: !10699)
!10707 = !DILocation(line: 1005, column: 29, scope: !10699)
!10708 = !DILocation(line: 1005, column: 3, scope: !10699)
!10709 = !DILocation(line: 1007, column: 33, scope: !10699)
!10710 = !DILocation(line: 1007, column: 37, scope: !10699)
!10711 = !DILocation(line: 1007, column: 12, scope: !10699)
!10712 = !DILocation(line: 1007, column: 10, scope: !10699)
!10713 = !DILocation(line: 1008, column: 7, scope: !10714)
!10714 = distinct !DILexicalBlock(scope: !10699, file: !3, line: 1008, column: 7)
!10715 = !DILocation(line: 1008, column: 14, scope: !10714)
!10716 = !DILocation(line: 1008, column: 7, scope: !10699)
!10717 = !DILocation(line: 1010, column: 4, scope: !10718)
!10718 = distinct !DILexicalBlock(scope: !10714, file: !3, line: 1008, column: 31)
!10719 = !DILocation(line: 1013, column: 3, scope: !10699)
!10720 = !DILocation(line: 1014, column: 3, scope: !10699)
!10721 = !DILocation(line: 1014, column: 7, scope: !10699)
!10722 = !DILocation(line: 1014, column: 17, scope: !10699)
!10723 = !DILocation(line: 1015, column: 3, scope: !10699)
!10724 = !DILocation(line: 1015, column: 7, scope: !10699)
!10725 = !DILocation(line: 1015, column: 13, scope: !10699)
!10726 = !DILocation(line: 1016, column: 2, scope: !10699)
!10727 = !DILocation(line: 1017, column: 7, scope: !10728)
!10728 = distinct !DILexicalBlock(scope: !10729, file: !3, line: 1017, column: 7)
!10729 = distinct !DILexicalBlock(scope: !10694, file: !3, line: 1016, column: 9)
!10730 = !DILocation(line: 1017, column: 15, scope: !10728)
!10731 = !DILocation(line: 1017, column: 7, scope: !10729)
!10732 = !DILocation(line: 1019, column: 4, scope: !10733)
!10733 = distinct !DILexicalBlock(scope: !10728, file: !3, line: 1017, column: 32)
!10734 = !DILocation(line: 1021, column: 26, scope: !10733)
!10735 = !DILocation(line: 1021, column: 30, scope: !10733)
!10736 = !DILocation(line: 1021, column: 4, scope: !10733)
!10737 = !DILocation(line: 1023, column: 34, scope: !10733)
!10738 = !DILocation(line: 1023, column: 38, scope: !10733)
!10739 = !DILocation(line: 1023, column: 13, scope: !10733)
!10740 = !DILocation(line: 1023, column: 11, scope: !10733)
!10741 = !DILocation(line: 1024, column: 8, scope: !10742)
!10742 = distinct !DILexicalBlock(scope: !10733, file: !3, line: 1024, column: 8)
!10743 = !DILocation(line: 1024, column: 15, scope: !10742)
!10744 = !DILocation(line: 1024, column: 8, scope: !10733)
!10745 = !DILocation(line: 1026, column: 5, scope: !10746)
!10746 = distinct !DILexicalBlock(scope: !10742, file: !3, line: 1024, column: 32)
!10747 = !DILocation(line: 1029, column: 4, scope: !10733)
!10748 = !DILocation(line: 1030, column: 4, scope: !10733)
!10749 = !DILocation(line: 1030, column: 8, scope: !10733)
!10750 = !DILocation(line: 1030, column: 18, scope: !10733)
!10751 = !DILocation(line: 1031, column: 4, scope: !10733)
!10752 = !DILocation(line: 1031, column: 8, scope: !10733)
!10753 = !DILocation(line: 1031, column: 14, scope: !10733)
!10754 = !DILocation(line: 1032, column: 3, scope: !10733)
!10755 = !DILocation(line: 1036, column: 24, scope: !10680)
!10756 = !DILocation(line: 1036, column: 28, scope: !10680)
!10757 = !DILocation(line: 1036, column: 2, scope: !10680)
!10758 = !DILocation(line: 1038, column: 2, scope: !10680)
!10759 = !DILocation(line: 1038, column: 9, scope: !10680)
!10760 = !DILocation(line: 1039, column: 33, scope: !10761)
!10761 = distinct !DILexicalBlock(scope: !10680, file: !3, line: 1038, column: 18)
!10762 = !DILocation(line: 1039, column: 37, scope: !10761)
!10763 = !DILocation(line: 1039, column: 12, scope: !10761)
!10764 = !DILocation(line: 1039, column: 10, scope: !10761)
!10765 = !DILocation(line: 1040, column: 7, scope: !10766)
!10766 = distinct !DILexicalBlock(scope: !10761, file: !3, line: 1040, column: 7)
!10767 = !DILocation(line: 1040, column: 14, scope: !10766)
!10768 = !DILocation(line: 1040, column: 7, scope: !10761)
!10769 = !DILocation(line: 1041, column: 4, scope: !10766)
!10770 = !DILocation(line: 1042, column: 17, scope: !10761)
!10771 = !DILocation(line: 1042, column: 3, scope: !10761)
!10772 = !DILocation(line: 1042, column: 7, scope: !10761)
!10773 = !DILocation(line: 1042, column: 15, scope: !10761)
!10774 = !DILocation(line: 1043, column: 9, scope: !10775)
!10775 = distinct !DILexicalBlock(scope: !10761, file: !3, line: 1043, column: 7)
!10776 = !DILocation(line: 1043, column: 16, scope: !10775)
!10777 = !DILocation(line: 1043, column: 7, scope: !10761)
!10778 = !DILocation(line: 1044, column: 4, scope: !10775)
!10779 = !DILocation(line: 1045, column: 3, scope: !10780)
!10780 = distinct !DILexicalBlock(scope: !10781, file: !3, line: 1045, column: 3)
!10781 = distinct !DILexicalBlock(scope: !10782, file: !3, line: 1045, column: 3)
!10782 = distinct !DILexicalBlock(scope: !10783, file: !3, line: 1045, column: 3)
!10783 = distinct !DILexicalBlock(scope: !10761, file: !3, line: 1045, column: 3)
!10784 = distinct !{!10784, !10758, !10785}
!10785 = !DILocation(line: 1046, column: 2, scope: !10680)
!10786 = !DILocation(line: 1047, column: 7, scope: !10787)
!10787 = distinct !DILexicalBlock(scope: !10680, file: !3, line: 1047, column: 6)
!10788 = !DILocation(line: 1047, column: 6, scope: !10680)
!10789 = !DILocation(line: 1049, column: 3, scope: !10790)
!10790 = distinct !DILexicalBlock(scope: !10787, file: !3, line: 1047, column: 14)
!10791 = !DILocation(line: 1054, column: 42, scope: !10680)
!10792 = !DILocation(line: 1054, column: 46, scope: !10680)
!10793 = !DILocation(line: 1054, column: 21, scope: !10680)
!10794 = !DILocation(line: 1054, column: 2, scope: !10680)
!10795 = !DILocation(line: 1054, column: 6, scope: !10680)
!10796 = !DILocation(line: 1054, column: 19, scope: !10680)
!10797 = !DILocation(line: 1055, column: 42, scope: !10680)
!10798 = !DILocation(line: 1055, column: 46, scope: !10680)
!10799 = !DILocation(line: 1055, column: 21, scope: !10680)
!10800 = !DILocation(line: 1055, column: 2, scope: !10680)
!10801 = !DILocation(line: 1055, column: 6, scope: !10680)
!10802 = !DILocation(line: 1055, column: 19, scope: !10680)
!10803 = !DILocation(line: 1056, column: 42, scope: !10680)
!10804 = !DILocation(line: 1056, column: 46, scope: !10680)
!10805 = !DILocation(line: 1056, column: 21, scope: !10680)
!10806 = !DILocation(line: 1056, column: 2, scope: !10680)
!10807 = !DILocation(line: 1056, column: 6, scope: !10680)
!10808 = !DILocation(line: 1056, column: 19, scope: !10680)
!10809 = !DILocation(line: 1057, column: 42, scope: !10680)
!10810 = !DILocation(line: 1057, column: 46, scope: !10680)
!10811 = !DILocation(line: 1057, column: 21, scope: !10680)
!10812 = !DILocation(line: 1057, column: 2, scope: !10680)
!10813 = !DILocation(line: 1057, column: 6, scope: !10680)
!10814 = !DILocation(line: 1057, column: 19, scope: !10680)
!10815 = !DILocation(line: 1060, column: 2, scope: !10680)
!10816 = !DILocation(line: 1060, column: 6, scope: !10680)
!10817 = !DILocation(line: 1060, column: 14, scope: !10680)
!10818 = !DILocation(line: 1061, column: 24, scope: !10680)
!10819 = !DILocation(line: 1061, column: 28, scope: !10680)
!10820 = !DILocation(line: 1061, column: 45, scope: !10680)
!10821 = !DILocation(line: 1061, column: 49, scope: !10680)
!10822 = !DILocation(line: 1061, column: 2, scope: !10680)
!10823 = !DILocation(line: 1063, column: 8, scope: !10680)
!10824 = !DILocation(line: 1064, column: 2, scope: !10680)
!10825 = !DILocation(line: 1064, column: 9, scope: !10680)
!10826 = !DILocation(line: 1065, column: 33, scope: !10827)
!10827 = distinct !DILexicalBlock(scope: !10680, file: !3, line: 1064, column: 18)
!10828 = !DILocation(line: 1065, column: 37, scope: !10827)
!10829 = !DILocation(line: 1065, column: 12, scope: !10827)
!10830 = !DILocation(line: 1065, column: 10, scope: !10827)
!10831 = !DILocation(line: 1066, column: 7, scope: !10832)
!10832 = distinct !DILexicalBlock(scope: !10827, file: !3, line: 1066, column: 7)
!10833 = !DILocation(line: 1066, column: 14, scope: !10832)
!10834 = !DILocation(line: 1066, column: 7, scope: !10827)
!10835 = !DILocation(line: 1067, column: 4, scope: !10832)
!10836 = !DILocation(line: 1068, column: 9, scope: !10837)
!10837 = distinct !DILexicalBlock(scope: !10827, file: !3, line: 1068, column: 7)
!10838 = !DILocation(line: 1068, column: 16, scope: !10837)
!10839 = !DILocation(line: 1068, column: 7, scope: !10827)
!10840 = !DILocation(line: 1069, column: 4, scope: !10837)
!10841 = !DILocation(line: 1070, column: 3, scope: !10842)
!10842 = distinct !DILexicalBlock(scope: !10843, file: !3, line: 1070, column: 3)
!10843 = distinct !DILexicalBlock(scope: !10844, file: !3, line: 1070, column: 3)
!10844 = distinct !DILexicalBlock(scope: !10845, file: !3, line: 1070, column: 3)
!10845 = distinct !DILexicalBlock(scope: !10827, file: !3, line: 1070, column: 3)
!10846 = distinct !{!10846, !10824, !10847}
!10847 = !DILocation(line: 1071, column: 2, scope: !10680)
!10848 = !DILocation(line: 1072, column: 7, scope: !10849)
!10849 = distinct !DILexicalBlock(scope: !10680, file: !3, line: 1072, column: 6)
!10850 = !DILocation(line: 1072, column: 6, scope: !10680)
!10851 = !DILocation(line: 1074, column: 3, scope: !10852)
!10852 = distinct !DILexicalBlock(scope: !10849, file: !3, line: 1072, column: 14)
!10853 = !DILocation(line: 1077, column: 21, scope: !10854)
!10854 = distinct !DILexicalBlock(scope: !10680, file: !3, line: 1077, column: 6)
!10855 = !DILocation(line: 1077, column: 7, scope: !10854)
!10856 = !DILocation(line: 1077, column: 6, scope: !10680)
!10857 = !DILocation(line: 1078, column: 33, scope: !10858)
!10858 = distinct !DILexicalBlock(scope: !10854, file: !3, line: 1077, column: 26)
!10859 = !DILocation(line: 1078, column: 37, scope: !10858)
!10860 = !DILocation(line: 1078, column: 12, scope: !10858)
!10861 = !DILocation(line: 1078, column: 10, scope: !10858)
!10862 = !DILocation(line: 1080, column: 25, scope: !10858)
!10863 = !DILocation(line: 1080, column: 29, scope: !10858)
!10864 = !DILocation(line: 1081, column: 30, scope: !10858)
!10865 = !DILocation(line: 1081, column: 37, scope: !10858)
!10866 = !DILocation(line: 1081, column: 29, scope: !10858)
!10867 = !DILocation(line: 1080, column: 3, scope: !10858)
!10868 = !DILocation(line: 1082, column: 2, scope: !10858)
!10869 = !DILocation(line: 1083, column: 2, scope: !10680)
!10870 = !DILocation(line: 1084, column: 1, scope: !10680)
!10871 = distinct !DISubprogram(name: "happy_meal_tx_reset", scope: !3, file: !3, line: 872, type: !9719, scopeLine: 873, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!10872 = !DILocalVariable(name: "hp", arg: 1, scope: !10871, file: !3, line: 872, type: !7554)
!10873 = !DILocation(line: 872, column: 52, scope: !10871)
!10874 = !DILocalVariable(name: "bregs", arg: 2, scope: !10871, file: !3, line: 872, type: !591)
!10875 = !DILocation(line: 872, column: 70, scope: !10871)
!10876 = !DILocalVariable(name: "tries", scope: !10871, file: !3, line: 874, type: !32)
!10877 = !DILocation(line: 874, column: 6, scope: !10871)
!10878 = !DILocation(line: 879, column: 2, scope: !10871)
!10879 = !DILocation(line: 880, column: 2, scope: !10871)
!10880 = !DILocation(line: 880, column: 10, scope: !10871)
!10881 = !DILocation(line: 880, column: 49, scope: !10871)
!10882 = !DILocation(line: 880, column: 54, scope: !10871)
!10883 = !DILocation(line: 880, column: 57, scope: !10871)
!10884 = !DILocation(line: 0, scope: !10871)
!10885 = !DILocation(line: 881, column: 3, scope: !10886)
!10886 = distinct !DILexicalBlock(scope: !10887, file: !3, line: 881, column: 3)
!10887 = distinct !DILexicalBlock(scope: !10888, file: !3, line: 881, column: 3)
!10888 = distinct !DILexicalBlock(scope: !10889, file: !3, line: 881, column: 3)
!10889 = distinct !DILexicalBlock(scope: !10871, file: !3, line: 881, column: 3)
!10890 = distinct !{!10890, !10879, !10891}
!10891 = !DILocation(line: 881, column: 3, scope: !10871)
!10892 = !DILocation(line: 884, column: 7, scope: !10893)
!10893 = distinct !DILexicalBlock(scope: !10871, file: !3, line: 884, column: 6)
!10894 = !DILocation(line: 884, column: 6, scope: !10871)
!10895 = !DILocation(line: 885, column: 3, scope: !10893)
!10896 = !DILocation(line: 889, column: 1, scope: !10871)
!10897 = distinct !DISubprogram(name: "happy_meal_rx_reset", scope: !3, file: !3, line: 892, type: !9719, scopeLine: 893, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!10898 = !DILocalVariable(name: "hp", arg: 1, scope: !10897, file: !3, line: 892, type: !7554)
!10899 = !DILocation(line: 892, column: 52, scope: !10897)
!10900 = !DILocalVariable(name: "bregs", arg: 2, scope: !10897, file: !3, line: 892, type: !591)
!10901 = !DILocation(line: 892, column: 70, scope: !10897)
!10902 = !DILocalVariable(name: "tries", scope: !10897, file: !3, line: 894, type: !32)
!10903 = !DILocation(line: 894, column: 6, scope: !10897)
!10904 = !DILocation(line: 899, column: 2, scope: !10897)
!10905 = !DILocation(line: 900, column: 2, scope: !10897)
!10906 = !DILocation(line: 900, column: 10, scope: !10897)
!10907 = !DILocation(line: 900, column: 49, scope: !10897)
!10908 = !DILocation(line: 900, column: 54, scope: !10897)
!10909 = !DILocation(line: 900, column: 57, scope: !10897)
!10910 = !DILocation(line: 0, scope: !10897)
!10911 = !DILocation(line: 901, column: 3, scope: !10912)
!10912 = distinct !DILexicalBlock(scope: !10913, file: !3, line: 901, column: 3)
!10913 = distinct !DILexicalBlock(scope: !10914, file: !3, line: 901, column: 3)
!10914 = distinct !DILexicalBlock(scope: !10915, file: !3, line: 901, column: 3)
!10915 = distinct !DILexicalBlock(scope: !10897, file: !3, line: 901, column: 3)
!10916 = distinct !{!10916, !10905, !10917}
!10917 = !DILocation(line: 901, column: 3, scope: !10897)
!10918 = !DILocation(line: 904, column: 7, scope: !10919)
!10919 = distinct !DILexicalBlock(scope: !10897, file: !3, line: 904, column: 6)
!10920 = !DILocation(line: 904, column: 6, scope: !10897)
!10921 = !DILocation(line: 905, column: 3, scope: !10919)
!10922 = !DILocation(line: 909, column: 1, scope: !10897)
!10923 = distinct !DISubprogram(name: "happy_meal_begin_auto_negotiation", scope: !3, file: !3, line: 1298, type: !10924, scopeLine: 1301, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!10924 = !DISubroutineType(types: !10925)
!10925 = !{null, !7554, !591, !6018}
!10926 = !DILocalVariable(name: "hp", arg: 1, scope: !10923, file: !3, line: 1298, type: !7554)
!10927 = !DILocation(line: 1298, column: 54, scope: !10923)
!10928 = !DILocalVariable(name: "tregs", arg: 2, scope: !10923, file: !3, line: 1299, type: !591)
!10929 = !DILocation(line: 1299, column: 21, scope: !10923)
!10930 = !DILocalVariable(name: "ep", arg: 3, scope: !10923, file: !3, line: 1300, type: !6018)
!10931 = !DILocation(line: 1300, column: 44, scope: !10923)
!10932 = !DILocalVariable(name: "timeout", scope: !10923, file: !3, line: 1302, type: !32)
!10933 = !DILocation(line: 1302, column: 6, scope: !10923)
!10934 = !DILocation(line: 1305, column: 42, scope: !10923)
!10935 = !DILocation(line: 1305, column: 46, scope: !10923)
!10936 = !DILocation(line: 1305, column: 21, scope: !10923)
!10937 = !DILocation(line: 1305, column: 2, scope: !10923)
!10938 = !DILocation(line: 1305, column: 6, scope: !10923)
!10939 = !DILocation(line: 1305, column: 19, scope: !10923)
!10940 = !DILocation(line: 1306, column: 42, scope: !10923)
!10941 = !DILocation(line: 1306, column: 46, scope: !10923)
!10942 = !DILocation(line: 1306, column: 21, scope: !10923)
!10943 = !DILocation(line: 1306, column: 2, scope: !10923)
!10944 = !DILocation(line: 1306, column: 6, scope: !10923)
!10945 = !DILocation(line: 1306, column: 19, scope: !10923)
!10946 = !DILocation(line: 1307, column: 42, scope: !10923)
!10947 = !DILocation(line: 1307, column: 46, scope: !10923)
!10948 = !DILocation(line: 1307, column: 21, scope: !10923)
!10949 = !DILocation(line: 1307, column: 2, scope: !10923)
!10950 = !DILocation(line: 1307, column: 6, scope: !10923)
!10951 = !DILocation(line: 1307, column: 19, scope: !10923)
!10952 = !DILocation(line: 1308, column: 42, scope: !10923)
!10953 = !DILocation(line: 1308, column: 46, scope: !10923)
!10954 = !DILocation(line: 1308, column: 21, scope: !10923)
!10955 = !DILocation(line: 1308, column: 2, scope: !10923)
!10956 = !DILocation(line: 1308, column: 6, scope: !10923)
!10957 = !DILocation(line: 1308, column: 19, scope: !10923)
!10958 = !DILocation(line: 1312, column: 42, scope: !10923)
!10959 = !DILocation(line: 1312, column: 46, scope: !10923)
!10960 = !DILocation(line: 1312, column: 21, scope: !10923)
!10961 = !DILocation(line: 1312, column: 2, scope: !10923)
!10962 = !DILocation(line: 1312, column: 6, scope: !10923)
!10963 = !DILocation(line: 1312, column: 19, scope: !10923)
!10964 = !DILocation(line: 1313, column: 7, scope: !10965)
!10965 = distinct !DILexicalBlock(scope: !10923, file: !3, line: 1313, column: 6)
!10966 = !DILocation(line: 1313, column: 10, scope: !10965)
!10967 = !DILocation(line: 1313, column: 13, scope: !10965)
!10968 = !DILocation(line: 1313, column: 17, scope: !10965)
!10969 = !DILocation(line: 1313, column: 22, scope: !10965)
!10970 = !DILocation(line: 1313, column: 30, scope: !10965)
!10971 = !DILocation(line: 1313, column: 6, scope: !10923)
!10972 = !DILocation(line: 1315, column: 7, scope: !10973)
!10973 = distinct !DILexicalBlock(scope: !10974, file: !3, line: 1315, column: 7)
!10974 = distinct !DILexicalBlock(scope: !10965, file: !3, line: 1313, column: 49)
!10975 = !DILocation(line: 1315, column: 11, scope: !10973)
!10976 = !DILocation(line: 1315, column: 19, scope: !10973)
!10977 = !DILocation(line: 1315, column: 7, scope: !10974)
!10978 = !DILocation(line: 1316, column: 4, scope: !10973)
!10979 = !DILocation(line: 1316, column: 8, scope: !10973)
!10980 = !DILocation(line: 1316, column: 21, scope: !10973)
!10981 = !DILocation(line: 1318, column: 4, scope: !10973)
!10982 = !DILocation(line: 1318, column: 8, scope: !10973)
!10983 = !DILocation(line: 1318, column: 21, scope: !10973)
!10984 = !DILocation(line: 1320, column: 7, scope: !10985)
!10985 = distinct !DILexicalBlock(scope: !10974, file: !3, line: 1320, column: 7)
!10986 = !DILocation(line: 1320, column: 11, scope: !10985)
!10987 = !DILocation(line: 1320, column: 19, scope: !10985)
!10988 = !DILocation(line: 1320, column: 7, scope: !10974)
!10989 = !DILocation(line: 1321, column: 4, scope: !10985)
!10990 = !DILocation(line: 1321, column: 8, scope: !10985)
!10991 = !DILocation(line: 1321, column: 21, scope: !10985)
!10992 = !DILocation(line: 1323, column: 4, scope: !10985)
!10993 = !DILocation(line: 1323, column: 8, scope: !10985)
!10994 = !DILocation(line: 1323, column: 21, scope: !10985)
!10995 = !DILocation(line: 1324, column: 7, scope: !10996)
!10996 = distinct !DILexicalBlock(scope: !10974, file: !3, line: 1324, column: 7)
!10997 = !DILocation(line: 1324, column: 11, scope: !10996)
!10998 = !DILocation(line: 1324, column: 19, scope: !10996)
!10999 = !DILocation(line: 1324, column: 7, scope: !10974)
!11000 = !DILocation(line: 1325, column: 4, scope: !10996)
!11001 = !DILocation(line: 1325, column: 8, scope: !10996)
!11002 = !DILocation(line: 1325, column: 21, scope: !10996)
!11003 = !DILocation(line: 1327, column: 4, scope: !10996)
!11004 = !DILocation(line: 1327, column: 8, scope: !10996)
!11005 = !DILocation(line: 1327, column: 21, scope: !10996)
!11006 = !DILocation(line: 1328, column: 7, scope: !11007)
!11007 = distinct !DILexicalBlock(scope: !10974, file: !3, line: 1328, column: 7)
!11008 = !DILocation(line: 1328, column: 11, scope: !11007)
!11009 = !DILocation(line: 1328, column: 19, scope: !11007)
!11010 = !DILocation(line: 1328, column: 7, scope: !10974)
!11011 = !DILocation(line: 1329, column: 4, scope: !11007)
!11012 = !DILocation(line: 1329, column: 8, scope: !11007)
!11013 = !DILocation(line: 1329, column: 21, scope: !11007)
!11014 = !DILocation(line: 1331, column: 4, scope: !11007)
!11015 = !DILocation(line: 1331, column: 8, scope: !11007)
!11016 = !DILocation(line: 1331, column: 21, scope: !11007)
!11017 = !DILocation(line: 1332, column: 25, scope: !10974)
!11018 = !DILocation(line: 1332, column: 29, scope: !10974)
!11019 = !DILocation(line: 1332, column: 51, scope: !10974)
!11020 = !DILocation(line: 1332, column: 55, scope: !10974)
!11021 = !DILocation(line: 1332, column: 3, scope: !10974)
!11022 = !DILocation(line: 1353, column: 3, scope: !10974)
!11023 = !DILocation(line: 1353, column: 7, scope: !10974)
!11024 = !DILocation(line: 1353, column: 15, scope: !10974)
!11025 = !DILocation(line: 1354, column: 25, scope: !10974)
!11026 = !DILocation(line: 1354, column: 29, scope: !10974)
!11027 = !DILocation(line: 1354, column: 46, scope: !10974)
!11028 = !DILocation(line: 1354, column: 50, scope: !10974)
!11029 = !DILocation(line: 1354, column: 3, scope: !10974)
!11030 = !DILocation(line: 1357, column: 3, scope: !10974)
!11031 = !DILocation(line: 1357, column: 7, scope: !10974)
!11032 = !DILocation(line: 1357, column: 15, scope: !10974)
!11033 = !DILocation(line: 1358, column: 25, scope: !10974)
!11034 = !DILocation(line: 1358, column: 29, scope: !10974)
!11035 = !DILocation(line: 1358, column: 46, scope: !10974)
!11036 = !DILocation(line: 1358, column: 50, scope: !10974)
!11037 = !DILocation(line: 1358, column: 3, scope: !10974)
!11038 = !DILocation(line: 1362, column: 11, scope: !10974)
!11039 = !DILocation(line: 1363, column: 3, scope: !10974)
!11040 = !DILocation(line: 1363, column: 10, scope: !10974)
!11041 = !DILocation(line: 1364, column: 39, scope: !11042)
!11042 = distinct !DILexicalBlock(scope: !10974, file: !3, line: 1363, column: 21)
!11043 = !DILocation(line: 1364, column: 43, scope: !11042)
!11044 = !DILocation(line: 1364, column: 18, scope: !11042)
!11045 = !DILocation(line: 1364, column: 4, scope: !11042)
!11046 = !DILocation(line: 1364, column: 8, scope: !11042)
!11047 = !DILocation(line: 1364, column: 16, scope: !11042)
!11048 = !DILocation(line: 1365, column: 10, scope: !11049)
!11049 = distinct !DILexicalBlock(scope: !11042, file: !3, line: 1365, column: 8)
!11050 = !DILocation(line: 1365, column: 14, scope: !11049)
!11051 = !DILocation(line: 1365, column: 22, scope: !11049)
!11052 = !DILocation(line: 1365, column: 8, scope: !11042)
!11053 = !DILocation(line: 1366, column: 5, scope: !11049)
!11054 = !DILocation(line: 1367, column: 4, scope: !11055)
!11055 = distinct !DILexicalBlock(scope: !11056, file: !3, line: 1367, column: 4)
!11056 = distinct !DILexicalBlock(scope: !11057, file: !3, line: 1367, column: 4)
!11057 = distinct !DILexicalBlock(scope: !11058, file: !3, line: 1367, column: 4)
!11058 = distinct !DILexicalBlock(scope: !11042, file: !3, line: 1367, column: 4)
!11059 = distinct !{!11059, !11039, !11060}
!11060 = !DILocation(line: 1368, column: 3, scope: !10974)
!11061 = !DILocation(line: 1369, column: 8, scope: !11062)
!11062 = distinct !DILexicalBlock(scope: !10974, file: !3, line: 1369, column: 7)
!11063 = !DILocation(line: 1369, column: 7, scope: !10974)
!11064 = !DILocation(line: 1371, column: 28, scope: !11065)
!11065 = distinct !DILexicalBlock(scope: !11062, file: !3, line: 1369, column: 17)
!11066 = !DILocation(line: 1371, column: 32, scope: !11065)
!11067 = !DILocation(line: 1371, column: 37, scope: !11065)
!11068 = !DILocation(line: 1371, column: 43, scope: !11065)
!11069 = !DILocation(line: 1371, column: 47, scope: !11065)
!11070 = !DILocation(line: 1370, column: 4, scope: !11065)
!11071 = !DILocation(line: 1373, column: 11, scope: !11065)
!11072 = !DILocation(line: 1373, column: 15, scope: !11065)
!11073 = !DILocation(line: 1373, column: 20, scope: !11065)
!11074 = !DILocation(line: 1372, column: 4, scope: !11065)
!11075 = !DILocation(line: 1374, column: 4, scope: !11065)
!11076 = !DILocation(line: 1376, column: 4, scope: !11077)
!11077 = distinct !DILexicalBlock(scope: !11062, file: !3, line: 1375, column: 10)
!11078 = !DILocation(line: 1376, column: 8, scope: !11077)
!11079 = !DILocation(line: 1376, column: 20, scope: !11077)
!11080 = !DILocation(line: 1378, column: 2, scope: !10974)
!11081 = !DILocation(line: 1378, column: 9, scope: !10965)
!11082 = !DILabel(scope: !11083, name: "force_link", file: !3, line: 1379)
!11083 = distinct !DILexicalBlock(scope: !10965, file: !3, line: 1378, column: 9)
!11084 = !DILocation(line: 1379, column: 1, scope: !11083)
!11085 = !DILocation(line: 1388, column: 8, scope: !11086)
!11086 = distinct !DILexicalBlock(scope: !11083, file: !3, line: 1388, column: 7)
!11087 = !DILocation(line: 1388, column: 11, scope: !11086)
!11088 = !DILocation(line: 1388, column: 14, scope: !11086)
!11089 = !DILocation(line: 1388, column: 18, scope: !11086)
!11090 = !DILocation(line: 1388, column: 23, scope: !11086)
!11091 = !DILocation(line: 1388, column: 31, scope: !11086)
!11092 = !DILocation(line: 1388, column: 7, scope: !11083)
!11093 = !DILocation(line: 1389, column: 4, scope: !11094)
!11094 = distinct !DILexicalBlock(scope: !11086, file: !3, line: 1388, column: 50)
!11095 = !DILocation(line: 1389, column: 8, scope: !11094)
!11096 = !DILocation(line: 1389, column: 16, scope: !11094)
!11097 = !DILocation(line: 1390, column: 3, scope: !11094)
!11098 = !DILocation(line: 1391, column: 8, scope: !11099)
!11099 = distinct !DILexicalBlock(scope: !11100, file: !3, line: 1391, column: 8)
!11100 = distinct !DILexicalBlock(scope: !11086, file: !3, line: 1390, column: 10)
!11101 = !DILocation(line: 1391, column: 12, scope: !11099)
!11102 = !DILocation(line: 1391, column: 17, scope: !11099)
!11103 = !DILocation(line: 1391, column: 23, scope: !11099)
!11104 = !DILocation(line: 1391, column: 8, scope: !11100)
!11105 = !DILocation(line: 1392, column: 5, scope: !11099)
!11106 = !DILocation(line: 1392, column: 9, scope: !11099)
!11107 = !DILocation(line: 1392, column: 17, scope: !11099)
!11108 = !DILocation(line: 1394, column: 5, scope: !11099)
!11109 = !DILocation(line: 1394, column: 9, scope: !11099)
!11110 = !DILocation(line: 1394, column: 17, scope: !11099)
!11111 = !DILocation(line: 1395, column: 8, scope: !11112)
!11112 = distinct !DILexicalBlock(scope: !11100, file: !3, line: 1395, column: 8)
!11113 = !DILocation(line: 1395, column: 12, scope: !11112)
!11114 = !DILocation(line: 1395, column: 17, scope: !11112)
!11115 = !DILocation(line: 1395, column: 24, scope: !11112)
!11116 = !DILocation(line: 1395, column: 8, scope: !11100)
!11117 = !DILocation(line: 1396, column: 5, scope: !11112)
!11118 = !DILocation(line: 1396, column: 9, scope: !11112)
!11119 = !DILocation(line: 1396, column: 17, scope: !11112)
!11120 = !DILocation(line: 1398, column: 25, scope: !11083)
!11121 = !DILocation(line: 1398, column: 29, scope: !11083)
!11122 = !DILocation(line: 1398, column: 46, scope: !11083)
!11123 = !DILocation(line: 1398, column: 50, scope: !11083)
!11124 = !DILocation(line: 1398, column: 3, scope: !11083)
!11125 = !DILocation(line: 1400, column: 22, scope: !11126)
!11126 = distinct !DILexicalBlock(scope: !11083, file: !3, line: 1400, column: 7)
!11127 = !DILocation(line: 1400, column: 8, scope: !11126)
!11128 = !DILocation(line: 1400, column: 7, scope: !11083)
!11129 = !DILocation(line: 1405, column: 43, scope: !11130)
!11130 = distinct !DILexicalBlock(scope: !11126, file: !3, line: 1400, column: 27)
!11131 = !DILocation(line: 1405, column: 47, scope: !11130)
!11132 = !DILocation(line: 1405, column: 22, scope: !11130)
!11133 = !DILocation(line: 1405, column: 4, scope: !11130)
!11134 = !DILocation(line: 1405, column: 8, scope: !11130)
!11135 = !DILocation(line: 1405, column: 20, scope: !11130)
!11136 = !DILocation(line: 1407, column: 4, scope: !11130)
!11137 = !DILocation(line: 1407, column: 8, scope: !11130)
!11138 = !DILocation(line: 1407, column: 20, scope: !11130)
!11139 = !DILocation(line: 1408, column: 26, scope: !11130)
!11140 = !DILocation(line: 1408, column: 30, scope: !11130)
!11141 = !DILocation(line: 1409, column: 12, scope: !11130)
!11142 = !DILocation(line: 1409, column: 16, scope: !11130)
!11143 = !DILocation(line: 1408, column: 4, scope: !11130)
!11144 = !DILocation(line: 1410, column: 3, scope: !11130)
!11145 = !DILocation(line: 1411, column: 3, scope: !11083)
!11146 = !DILocation(line: 1411, column: 7, scope: !11083)
!11147 = !DILocation(line: 1411, column: 19, scope: !11083)
!11148 = !DILocation(line: 1414, column: 2, scope: !10923)
!11149 = !DILocation(line: 1414, column: 6, scope: !10923)
!11150 = !DILocation(line: 1414, column: 18, scope: !10923)
!11151 = !DILocation(line: 1415, column: 28, scope: !10923)
!11152 = !DILocation(line: 1415, column: 36, scope: !10923)
!11153 = !DILocation(line: 1415, column: 2, scope: !10923)
!11154 = !DILocation(line: 1415, column: 6, scope: !10923)
!11155 = !DILocation(line: 1415, column: 18, scope: !10923)
!11156 = !DILocation(line: 1415, column: 26, scope: !10923)
!11157 = !DILocation(line: 1416, column: 13, scope: !10923)
!11158 = !DILocation(line: 1416, column: 17, scope: !10923)
!11159 = !DILocation(line: 1416, column: 2, scope: !10923)
!11160 = !DILocation(line: 1417, column: 1, scope: !10923)
!11161 = distinct !DISubprogram(name: "happy_meal_clean_rings", scope: !3, file: !3, line: 1197, type: !9190, scopeLine: 1198, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!11162 = !DILocalVariable(name: "hp", arg: 1, scope: !11161, file: !3, line: 1197, type: !7554)
!11163 = !DILocation(line: 1197, column: 55, scope: !11161)
!11164 = !DILocalVariable(name: "i", scope: !11161, file: !3, line: 1199, type: !32)
!11165 = !DILocation(line: 1199, column: 6, scope: !11161)
!11166 = !DILocation(line: 1201, column: 9, scope: !11167)
!11167 = distinct !DILexicalBlock(scope: !11161, file: !3, line: 1201, column: 2)
!11168 = !DILocation(line: 1201, column: 7, scope: !11167)
!11169 = !DILocation(line: 1201, column: 14, scope: !11170)
!11170 = distinct !DILexicalBlock(scope: !11167, file: !3, line: 1201, column: 2)
!11171 = !DILocation(line: 1201, column: 16, scope: !11170)
!11172 = !DILocation(line: 1201, column: 2, scope: !11167)
!11173 = !DILocation(line: 1202, column: 7, scope: !11174)
!11174 = distinct !DILexicalBlock(scope: !11175, file: !3, line: 1202, column: 7)
!11175 = distinct !DILexicalBlock(scope: !11170, file: !3, line: 1201, column: 37)
!11176 = !DILocation(line: 1202, column: 11, scope: !11174)
!11177 = !DILocation(line: 1202, column: 19, scope: !11174)
!11178 = !DILocation(line: 1202, column: 22, scope: !11174)
!11179 = !DILocation(line: 1202, column: 7, scope: !11175)
!11180 = !DILocalVariable(name: "skb", scope: !11181, file: !3, line: 1203, type: !415)
!11181 = distinct !DILexicalBlock(scope: !11174, file: !3, line: 1202, column: 31)
!11182 = !DILocation(line: 1203, column: 20, scope: !11181)
!11183 = !DILocation(line: 1203, column: 26, scope: !11181)
!11184 = !DILocation(line: 1203, column: 30, scope: !11181)
!11185 = !DILocation(line: 1203, column: 38, scope: !11181)
!11186 = !DILocalVariable(name: "rxd", scope: !11181, file: !3, line: 1204, type: !11187)
!11187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7564, size: 64)
!11188 = !DILocation(line: 1204, column: 27, scope: !11181)
!11189 = !DILocalVariable(name: "dma_addr", scope: !11181, file: !3, line: 1205, type: !987)
!11190 = !DILocation(line: 1205, column: 8, scope: !11181)
!11191 = !DILocation(line: 1207, column: 11, scope: !11181)
!11192 = !DILocation(line: 1207, column: 15, scope: !11181)
!11193 = !DILocation(line: 1207, column: 28, scope: !11181)
!11194 = !DILocation(line: 1207, column: 43, scope: !11181)
!11195 = !DILocation(line: 1207, column: 8, scope: !11181)
!11196 = !DILocation(line: 1208, column: 31, scope: !11181)
!11197 = !DILocation(line: 1208, column: 36, scope: !11181)
!11198 = !DILocation(line: 1208, column: 41, scope: !11181)
!11199 = !DILocation(line: 1208, column: 15, scope: !11181)
!11200 = !DILocation(line: 1208, column: 13, scope: !11181)
!11201 = !DILocation(line: 1209, column: 4, scope: !11181)
!11202 = !DILocation(line: 1211, column: 22, scope: !11181)
!11203 = !DILocation(line: 1211, column: 4, scope: !11181)
!11204 = !DILocation(line: 1212, column: 4, scope: !11181)
!11205 = !DILocation(line: 1212, column: 8, scope: !11181)
!11206 = !DILocation(line: 1212, column: 16, scope: !11181)
!11207 = !DILocation(line: 1212, column: 19, scope: !11181)
!11208 = !DILocation(line: 1213, column: 3, scope: !11181)
!11209 = !DILocation(line: 1214, column: 2, scope: !11175)
!11210 = !DILocation(line: 1201, column: 33, scope: !11170)
!11211 = !DILocation(line: 1201, column: 2, scope: !11170)
!11212 = distinct !{!11212, !11172, !11213}
!11213 = !DILocation(line: 1214, column: 2, scope: !11167)
!11214 = !DILocation(line: 1216, column: 9, scope: !11215)
!11215 = distinct !DILexicalBlock(scope: !11161, file: !3, line: 1216, column: 2)
!11216 = !DILocation(line: 1216, column: 7, scope: !11215)
!11217 = !DILocation(line: 1216, column: 14, scope: !11218)
!11218 = distinct !DILexicalBlock(scope: !11215, file: !3, line: 1216, column: 2)
!11219 = !DILocation(line: 1216, column: 16, scope: !11218)
!11220 = !DILocation(line: 1216, column: 2, scope: !11215)
!11221 = !DILocation(line: 1217, column: 7, scope: !11222)
!11222 = distinct !DILexicalBlock(scope: !11223, file: !3, line: 1217, column: 7)
!11223 = distinct !DILexicalBlock(scope: !11218, file: !3, line: 1216, column: 37)
!11224 = !DILocation(line: 1217, column: 11, scope: !11222)
!11225 = !DILocation(line: 1217, column: 19, scope: !11222)
!11226 = !DILocation(line: 1217, column: 22, scope: !11222)
!11227 = !DILocation(line: 1217, column: 7, scope: !11223)
!11228 = !DILocalVariable(name: "skb", scope: !11229, file: !3, line: 1218, type: !415)
!11229 = distinct !DILexicalBlock(scope: !11222, file: !3, line: 1217, column: 31)
!11230 = !DILocation(line: 1218, column: 20, scope: !11229)
!11231 = !DILocation(line: 1218, column: 26, scope: !11229)
!11232 = !DILocation(line: 1218, column: 30, scope: !11229)
!11233 = !DILocation(line: 1218, column: 38, scope: !11229)
!11234 = !DILocalVariable(name: "txd", scope: !11229, file: !3, line: 1219, type: !11235)
!11235 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7573, size: 64)
!11236 = !DILocation(line: 1219, column: 27, scope: !11229)
!11237 = !DILocalVariable(name: "dma_addr", scope: !11229, file: !3, line: 1220, type: !987)
!11238 = !DILocation(line: 1220, column: 8, scope: !11229)
!11239 = !DILocalVariable(name: "frag", scope: !11229, file: !3, line: 1221, type: !32)
!11240 = !DILocation(line: 1221, column: 8, scope: !11229)
!11241 = !DILocation(line: 1223, column: 4, scope: !11229)
!11242 = !DILocation(line: 1223, column: 8, scope: !11229)
!11243 = !DILocation(line: 1223, column: 16, scope: !11229)
!11244 = !DILocation(line: 1223, column: 19, scope: !11229)
!11245 = !DILocation(line: 1225, column: 14, scope: !11246)
!11246 = distinct !DILexicalBlock(scope: !11229, file: !3, line: 1225, column: 4)
!11247 = !DILocation(line: 1225, column: 9, scope: !11246)
!11248 = !DILocation(line: 1225, column: 19, scope: !11249)
!11249 = distinct !DILexicalBlock(scope: !11246, file: !3, line: 1225, column: 4)
!11250 = !DILocation(line: 1225, column: 27, scope: !11249)
!11251 = !DILocation(line: 1225, column: 44, scope: !11249)
!11252 = !DILocation(line: 1225, column: 24, scope: !11249)
!11253 = !DILocation(line: 1225, column: 4, scope: !11246)
!11254 = !DILocation(line: 1226, column: 12, scope: !11255)
!11255 = distinct !DILexicalBlock(scope: !11249, file: !3, line: 1225, column: 62)
!11256 = !DILocation(line: 1226, column: 16, scope: !11255)
!11257 = !DILocation(line: 1226, column: 29, scope: !11255)
!11258 = !DILocation(line: 1226, column: 44, scope: !11255)
!11259 = !DILocation(line: 1226, column: 9, scope: !11255)
!11260 = !DILocation(line: 1227, column: 32, scope: !11255)
!11261 = !DILocation(line: 1227, column: 37, scope: !11255)
!11262 = !DILocation(line: 1227, column: 42, scope: !11255)
!11263 = !DILocation(line: 1227, column: 16, scope: !11255)
!11264 = !DILocation(line: 1227, column: 14, scope: !11255)
!11265 = !DILocation(line: 1228, column: 10, scope: !11266)
!11266 = distinct !DILexicalBlock(scope: !11255, file: !3, line: 1228, column: 9)
!11267 = !DILocation(line: 1228, column: 9, scope: !11255)
!11268 = !DILocation(line: 1229, column: 6, scope: !11266)
!11269 = !DILocation(line: 1234, column: 6, scope: !11266)
!11270 = !DILocation(line: 1239, column: 9, scope: !11271)
!11271 = distinct !DILexicalBlock(scope: !11255, file: !3, line: 1239, column: 9)
!11272 = !DILocation(line: 1239, column: 17, scope: !11271)
!11273 = !DILocation(line: 1239, column: 34, scope: !11271)
!11274 = !DILocation(line: 1239, column: 14, scope: !11271)
!11275 = !DILocation(line: 1239, column: 9, scope: !11255)
!11276 = !DILocation(line: 1240, column: 7, scope: !11271)
!11277 = !DILocation(line: 1240, column: 6, scope: !11271)
!11278 = !DILocation(line: 1241, column: 4, scope: !11255)
!11279 = !DILocation(line: 1225, column: 58, scope: !11249)
!11280 = !DILocation(line: 1225, column: 4, scope: !11249)
!11281 = distinct !{!11281, !11253, !11282}
!11282 = !DILocation(line: 1241, column: 4, scope: !11246)
!11283 = !DILocation(line: 1243, column: 22, scope: !11229)
!11284 = !DILocation(line: 1243, column: 4, scope: !11229)
!11285 = !DILocation(line: 1244, column: 3, scope: !11229)
!11286 = !DILocation(line: 1245, column: 2, scope: !11223)
!11287 = !DILocation(line: 1216, column: 33, scope: !11218)
!11288 = !DILocation(line: 1216, column: 2, scope: !11218)
!11289 = distinct !{!11289, !11220, !11290}
!11290 = !DILocation(line: 1245, column: 2, scope: !11215)
!11291 = !DILocation(line: 1246, column: 1, scope: !11161)
!11292 = distinct !DISubprogram(name: "alloc_skb", scope: !417, file: !417, line: 1091, type: !11293, scopeLine: 1093, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!11293 = !DISubroutineType(types: !11294)
!11294 = !{!415, !7, !1742}
!11295 = !DILocalVariable(name: "size", arg: 1, scope: !11292, file: !417, line: 1091, type: !7)
!11296 = !DILocation(line: 1091, column: 54, scope: !11292)
!11297 = !DILocalVariable(name: "priority", arg: 2, scope: !11292, file: !417, line: 1092, type: !1742)
!11298 = !DILocation(line: 1092, column: 12, scope: !11292)
!11299 = !DILocation(line: 1094, column: 21, scope: !11292)
!11300 = !DILocation(line: 1094, column: 27, scope: !11292)
!11301 = !DILocation(line: 1094, column: 9, scope: !11292)
!11302 = !DILocation(line: 1094, column: 2, scope: !11292)
!11303 = distinct !DISubprogram(name: "skb_reserve", scope: !417, file: !417, line: 2378, type: !11304, scopeLine: 2379, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!11304 = !DISubroutineType(types: !11305)
!11305 = !{null, !415, !32}
!11306 = !DILocalVariable(name: "skb", arg: 1, scope: !11303, file: !417, line: 2378, type: !415)
!11307 = !DILocation(line: 2378, column: 48, scope: !11303)
!11308 = !DILocalVariable(name: "len", arg: 2, scope: !11303, file: !417, line: 2378, type: !32)
!11309 = !DILocation(line: 2378, column: 57, scope: !11303)
!11310 = !DILocation(line: 2380, column: 15, scope: !11303)
!11311 = !DILocation(line: 2380, column: 2, scope: !11303)
!11312 = !DILocation(line: 2380, column: 7, scope: !11303)
!11313 = !DILocation(line: 2380, column: 12, scope: !11303)
!11314 = !DILocation(line: 2381, column: 15, scope: !11303)
!11315 = !DILocation(line: 2381, column: 2, scope: !11303)
!11316 = !DILocation(line: 2381, column: 7, scope: !11303)
!11317 = !DILocation(line: 2381, column: 12, scope: !11303)
!11318 = !DILocation(line: 2382, column: 1, scope: !11303)
!11319 = !DILocalVariable(name: "dev", arg: 1, scope: !7821, file: !7822, line: 271, type: !6545)
!11320 = !DILocation(line: 271, column: 62, scope: !7821)
!11321 = !DILocalVariable(name: "ptr", arg: 2, scope: !7821, file: !7822, line: 271, type: !591)
!11322 = !DILocation(line: 271, column: 73, scope: !7821)
!11323 = !DILocalVariable(name: "size", arg: 3, scope: !7821, file: !7822, line: 272, type: !1039)
!11324 = !DILocation(line: 272, column: 10, scope: !7821)
!11325 = !DILocalVariable(name: "dir", arg: 4, scope: !7821, file: !7822, line: 272, type: !7157)
!11326 = !DILocation(line: 272, column: 40, scope: !7821)
!11327 = !DILocalVariable(name: "attrs", arg: 5, scope: !7821, file: !7822, line: 272, type: !312)
!11328 = !DILocation(line: 272, column: 59, scope: !7821)
!11329 = !DILocalVariable(name: "__ret_warn_once", scope: !11330, file: !7822, line: 275, type: !32)
!11330 = distinct !DILexicalBlock(scope: !11331, file: !7822, line: 275, column: 6)
!11331 = distinct !DILexicalBlock(scope: !7821, file: !7822, line: 275, column: 6)
!11332 = !DILocation(line: 275, column: 6, scope: !11330)
!11333 = !DILocation(line: 275, column: 6, scope: !11334)
!11334 = distinct !DILexicalBlock(scope: !11330, file: !7822, line: 275, column: 6)
!11335 = !DILocation(line: 0, scope: !11334)
!11336 = !DILocation(line: 275, column: 6, scope: !11337)
!11337 = distinct !DILexicalBlock(scope: !11334, file: !7822, line: 275, column: 6)
!11338 = !DILocalVariable(name: "__ret_warn_on", scope: !11339, file: !7822, line: 275, type: !32)
!11339 = distinct !DILexicalBlock(scope: !11337, file: !7822, line: 275, column: 6)
!11340 = !DILocation(line: 275, column: 6, scope: !11339)
!11341 = !DILocation(line: 275, column: 6, scope: !11342)
!11342 = distinct !DILexicalBlock(scope: !11339, file: !7822, line: 275, column: 6)
!11343 = !DILocation(line: 275, column: 6, scope: !11344)
!11344 = distinct !DILexicalBlock(scope: !11342, file: !7822, line: 275, column: 6)
!11345 = !DILocation(line: 275, column: 6, scope: !11346)
!11346 = distinct !DILexicalBlock(scope: !11344, file: !7822, line: 275, column: 6)
!11347 = !DILocation(line: 275, column: 6, scope: !11348)
!11348 = distinct !DILexicalBlock(scope: !11344, file: !7822, line: 275, column: 6)
!11349 = !DILocation(line: 275, column: 6, scope: !11350)
!11350 = distinct !DILexicalBlock(scope: !11348, file: !7822, line: 275, column: 6)
!11351 = !DILocation(line: 275, column: 6, scope: !11352)
!11352 = distinct !DILexicalBlock(scope: !11348, file: !7822, line: 275, column: 6)
!11353 = !{i32 -2141485937, i32 -2141485908, i32 -2141485862, i32 -2141485804, i32 -2141485750, i32 -2141485696, i32 -2141485641, i32 -2141485610}
!11354 = !DILocation(line: 275, column: 6, scope: !11355)
!11355 = distinct !DILexicalBlock(scope: !11348, file: !7822, line: 275, column: 6)
!11356 = !{i32 -2141485190, i32 -2141485183, i32 -2141485131, i32 -2141485100, i32 -2141485070}
!11357 = !DILocation(line: 275, column: 6, scope: !11358)
!11358 = distinct !DILexicalBlock(scope: !11348, file: !7822, line: 275, column: 6)
!11359 = !DILocation(line: 275, column: 6, scope: !11360)
!11360 = distinct !DILexicalBlock(scope: !11344, file: !7822, line: 275, column: 6)
!11361 = !DILocation(line: 275, column: 6, scope: !11331)
!11362 = !DILocation(line: 275, column: 6, scope: !7821)
!11363 = !DILocation(line: 277, column: 3, scope: !11331)
!11364 = !DILocation(line: 278, column: 23, scope: !7821)
!11365 = !DILocation(line: 278, column: 28, scope: !7821)
!11366 = !DILocation(line: 278, column: 33, scope: !7821)
!11367 = !DILocation(line: 278, column: 2, scope: !7821)
!11368 = !DILocation(line: 279, column: 28, scope: !7821)
!11369 = !DILocation(line: 279, column: 33, scope: !7821)
!11370 = !DILocation(line: 279, column: 52, scope: !7821)
!11371 = !DILocation(line: 280, column: 4, scope: !7821)
!11372 = !DILocation(line: 280, column: 10, scope: !7821)
!11373 = !DILocation(line: 280, column: 15, scope: !7821)
!11374 = !DILocation(line: 279, column: 9, scope: !7821)
!11375 = !DILocation(line: 279, column: 2, scope: !7821)
!11376 = !DILocation(line: 281, column: 1, scope: !7821)
!11377 = distinct !DISubprogram(name: "dma_mapping_error", scope: !7822, file: !7822, line: 94, type: !11378, scopeLine: 95, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!11378 = !DISubroutineType(types: !11379)
!11379 = !{!32, !6545, !2036}
!11380 = !DILocalVariable(name: "dev", arg: 1, scope: !11377, file: !7822, line: 94, type: !6545)
!11381 = !DILocation(line: 94, column: 52, scope: !11377)
!11382 = !DILocalVariable(name: "dma_addr", arg: 2, scope: !11377, file: !7822, line: 94, type: !2036)
!11383 = !DILocation(line: 94, column: 68, scope: !11377)
!11384 = !DILocation(line: 96, column: 26, scope: !11377)
!11385 = !DILocation(line: 96, column: 31, scope: !11377)
!11386 = !DILocation(line: 96, column: 2, scope: !11377)
!11387 = !DILocation(line: 98, column: 6, scope: !11388)
!11388 = distinct !DILexicalBlock(scope: !11377, file: !7822, line: 98, column: 6)
!11389 = !DILocation(line: 98, column: 15, scope: !11388)
!11390 = !DILocation(line: 98, column: 6, scope: !11377)
!11391 = !DILocation(line: 99, column: 3, scope: !11388)
!11392 = !DILocation(line: 100, column: 2, scope: !11377)
!11393 = !DILocation(line: 101, column: 1, scope: !11377)
!11394 = distinct !DISubprogram(name: "dev_kfree_skb_any", scope: !31, file: !31, line: 3817, type: !469, scopeLine: 3818, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!11395 = !DILocalVariable(name: "skb", arg: 1, scope: !11394, file: !31, line: 3817, type: !415)
!11396 = !DILocation(line: 3817, column: 54, scope: !11394)
!11397 = !DILocation(line: 3819, column: 22, scope: !11394)
!11398 = !DILocation(line: 3819, column: 2, scope: !11394)
!11399 = !DILocation(line: 3820, column: 1, scope: !11394)
!11400 = distinct !DISubprogram(name: "hme_read_desc32", scope: !3, file: !3, line: 304, type: !11401, scopeLine: 305, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!11401 = !DISubroutineType(types: !11402)
!11402 = !{!987, !7554, !11403}
!11403 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7567, size: 64)
!11404 = !DILocalVariable(name: "p", arg: 1, scope: !11405, file: !11406, line: 56, type: !11409)
!11405 = distinct !DISubprogram(name: "__le32_to_cpup", scope: !11406, file: !11406, line: 56, type: !11407, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!11406 = !DIFile(filename: "./include/uapi/linux/byteorder/little_endian.h", directory: "/home/lizy2001/genbc/linux")
!11407 = !DISubroutineType(types: !11408)
!11408 = !{!493, !11409}
!11409 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11410, size: 64)
!11410 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7641)
!11411 = !DILocation(line: 56, column: 59, scope: !11405, inlinedAt: !11412)
!11412 = distinct !DILocation(line: 306, column: 9, scope: !11400)
!11413 = !DILocalVariable(name: "hp", arg: 1, scope: !11400, file: !3, line: 304, type: !7554)
!11414 = !DILocation(line: 304, column: 54, scope: !11400)
!11415 = !DILocalVariable(name: "p", arg: 2, scope: !11400, file: !3, line: 304, type: !11403)
!11416 = !DILocation(line: 304, column: 65, scope: !11400)
!11417 = !DILocation(line: 306, column: 32, scope: !11400)
!11418 = !DILocation(line: 58, column: 25, scope: !11405, inlinedAt: !11412)
!11419 = !DILocation(line: 58, column: 24, scope: !11405, inlinedAt: !11412)
!11420 = !DILocation(line: 306, column: 2, scope: !11400)
!11421 = distinct !DISubprogram(name: "dma_unmap_single_attrs", scope: !7822, file: !7822, line: 283, type: !11422, scopeLine: 285, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!11422 = !DISubroutineType(types: !11423)
!11423 = !{null, !6545, !2036, !1039, !7157, !312}
!11424 = !DILocalVariable(name: "dev", arg: 1, scope: !11421, file: !7822, line: 283, type: !6545)
!11425 = !DILocation(line: 283, column: 58, scope: !11421)
!11426 = !DILocalVariable(name: "addr", arg: 2, scope: !11421, file: !7822, line: 283, type: !2036)
!11427 = !DILocation(line: 283, column: 74, scope: !11421)
!11428 = !DILocalVariable(name: "size", arg: 3, scope: !11421, file: !7822, line: 284, type: !1039)
!11429 = !DILocation(line: 284, column: 10, scope: !11421)
!11430 = !DILocalVariable(name: "dir", arg: 4, scope: !11421, file: !7822, line: 284, type: !7157)
!11431 = !DILocation(line: 284, column: 40, scope: !11421)
!11432 = !DILocalVariable(name: "attrs", arg: 5, scope: !11421, file: !7822, line: 284, type: !312)
!11433 = !DILocation(line: 284, column: 59, scope: !11421)
!11434 = !DILocation(line: 286, column: 30, scope: !11421)
!11435 = !DILocation(line: 286, column: 35, scope: !11421)
!11436 = !DILocation(line: 286, column: 41, scope: !11421)
!11437 = !DILocation(line: 286, column: 47, scope: !11421)
!11438 = !DILocation(line: 286, column: 52, scope: !11421)
!11439 = !DILocation(line: 286, column: 9, scope: !11421)
!11440 = !DILocation(line: 286, column: 2, scope: !11421)
!11441 = distinct !DISubprogram(name: "skb_end_pointer", scope: !417, file: !417, line: 1404, type: !11442, scopeLine: 1405, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!11442 = !DISubroutineType(types: !11443)
!11443 = !{!564, !6052}
!11444 = !DILocalVariable(name: "skb", arg: 1, scope: !11441, file: !417, line: 1404, type: !6052)
!11445 = !DILocation(line: 1404, column: 68, scope: !11441)
!11446 = !DILocation(line: 1406, column: 9, scope: !11441)
!11447 = !DILocation(line: 1406, column: 14, scope: !11441)
!11448 = !DILocation(line: 1406, column: 21, scope: !11441)
!11449 = !DILocation(line: 1406, column: 26, scope: !11441)
!11450 = !DILocation(line: 1406, column: 19, scope: !11441)
!11451 = !DILocation(line: 1406, column: 2, scope: !11441)
!11452 = distinct !DISubprogram(name: "dev_name", scope: !6541, file: !6541, line: 609, type: !11453, scopeLine: 610, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!11453 = !DISubroutineType(types: !11454)
!11454 = !{!292, !6892}
!11455 = !DILocalVariable(name: "dev", arg: 1, scope: !11452, file: !6541, line: 609, type: !6892)
!11456 = !DILocation(line: 609, column: 57, scope: !11452)
!11457 = !DILocation(line: 612, column: 6, scope: !11458)
!11458 = distinct !DILexicalBlock(scope: !11452, file: !6541, line: 612, column: 6)
!11459 = !DILocation(line: 612, column: 11, scope: !11458)
!11460 = !DILocation(line: 612, column: 6, scope: !11452)
!11461 = !DILocation(line: 613, column: 10, scope: !11458)
!11462 = !DILocation(line: 613, column: 15, scope: !11458)
!11463 = !DILocation(line: 613, column: 3, scope: !11458)
!11464 = !DILocation(line: 615, column: 23, scope: !11452)
!11465 = !DILocation(line: 615, column: 28, scope: !11452)
!11466 = !DILocation(line: 615, column: 9, scope: !11452)
!11467 = !DILocation(line: 615, column: 2, scope: !11452)
!11468 = !DILocation(line: 616, column: 1, scope: !11452)
!11469 = distinct !DISubprogram(name: "debug_dma_map_single", scope: !7822, file: !7822, line: 87, type: !11470, scopeLine: 89, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!11470 = !DISubroutineType(types: !11471)
!11471 = !{null, !6545, !3258, !312}
!11472 = !DILocalVariable(name: "dev", arg: 1, scope: !11469, file: !7822, line: 87, type: !6545)
!11473 = !DILocation(line: 87, column: 56, scope: !11469)
!11474 = !DILocalVariable(name: "addr", arg: 2, scope: !11469, file: !7822, line: 87, type: !3258)
!11475 = !DILocation(line: 87, column: 73, scope: !11469)
!11476 = !DILocalVariable(name: "len", arg: 3, scope: !11469, file: !7822, line: 88, type: !312)
!11477 = !DILocation(line: 88, column: 17, scope: !11469)
!11478 = !DILocation(line: 90, column: 1, scope: !11469)
!11479 = distinct !DISubprogram(name: "__phys_addr_nodebug", scope: !11480, file: !11480, line: 18, type: !11481, scopeLine: 19, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!11480 = !DIFile(filename: "./arch/x86/include/asm/page_64.h", directory: "/home/lizy2001/genbc/linux")
!11481 = !DISubroutineType(types: !11482)
!11482 = !{!312, !312}
!11483 = !DILocalVariable(name: "x", arg: 1, scope: !11479, file: !11480, line: 18, type: !312)
!11484 = !DILocation(line: 18, column: 63, scope: !11479)
!11485 = !DILocalVariable(name: "y", scope: !11479, file: !11480, line: 20, type: !312)
!11486 = !DILocation(line: 20, column: 16, scope: !11479)
!11487 = !DILocation(line: 20, column: 20, scope: !11479)
!11488 = !DILocation(line: 20, column: 22, scope: !11479)
!11489 = !DILocation(line: 23, column: 6, scope: !11479)
!11490 = !DILocation(line: 23, column: 12, scope: !11479)
!11491 = !DILocation(line: 23, column: 16, scope: !11479)
!11492 = !DILocation(line: 23, column: 14, scope: !11479)
!11493 = !DILocation(line: 23, column: 11, scope: !11479)
!11494 = !DILocation(line: 23, column: 21, scope: !11479)
!11495 = !DILocation(line: 23, column: 55, scope: !11479)
!11496 = !DILocation(line: 23, column: 53, scope: !11479)
!11497 = !DILocation(line: 23, column: 8, scope: !11479)
!11498 = !DILocation(line: 23, column: 4, scope: !11479)
!11499 = !DILocation(line: 25, column: 9, scope: !11479)
!11500 = !DILocation(line: 25, column: 2, scope: !11479)
!11501 = distinct !DISubprogram(name: "kobject_name", scope: !6115, file: !6115, line: 88, type: !11502, scopeLine: 89, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!11502 = !DISubroutineType(types: !11503)
!11503 = !{!292, !11504}
!11504 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11505, size: 64)
!11505 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6120)
!11506 = !DILocalVariable(name: "kobj", arg: 1, scope: !11501, file: !6115, line: 88, type: !11504)
!11507 = !DILocation(line: 88, column: 62, scope: !11501)
!11508 = !DILocation(line: 90, column: 9, scope: !11501)
!11509 = !DILocation(line: 90, column: 15, scope: !11501)
!11510 = !DILocation(line: 90, column: 2, scope: !11501)
!11511 = distinct !DISubprogram(name: "debug_dma_mapping_error", scope: !7822, file: !7822, line: 83, type: !11512, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!11512 = !DISubroutineType(types: !11513)
!11513 = !{null, !6545, !2036}
!11514 = !DILocalVariable(name: "dev", arg: 1, scope: !11511, file: !7822, line: 83, type: !6545)
!11515 = !DILocation(line: 83, column: 59, scope: !11511)
!11516 = !DILocalVariable(name: "dma_addr", arg: 2, scope: !11511, file: !7822, line: 84, type: !2036)
!11517 = !DILocation(line: 84, column: 14, scope: !11511)
!11518 = !DILocation(line: 86, column: 1, scope: !11511)
!11519 = distinct !DISubprogram(name: "happy_meal_open", scope: !3, file: !3, line: 2186, type: !402, scopeLine: 2187, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!11520 = !DILocation(line: 402, column: 57, scope: !7876, inlinedAt: !11521)
!11521 = distinct !DILocation(line: 2212, column: 2, scope: !11519)
!11522 = !DILocation(line: 377, column: 55, scope: !7883, inlinedAt: !11523)
!11523 = distinct !DILocation(line: 2210, column: 2, scope: !11519)
!11524 = !DILocalVariable(name: "dev", arg: 1, scope: !11519, file: !3, line: 2186, type: !290)
!11525 = !DILocation(line: 2186, column: 47, scope: !11519)
!11526 = !DILocalVariable(name: "hp", scope: !11519, file: !3, line: 2188, type: !7554)
!11527 = !DILocation(line: 2188, column: 21, scope: !11519)
!11528 = !DILocation(line: 2188, column: 38, scope: !11519)
!11529 = !DILocation(line: 2188, column: 26, scope: !11519)
!11530 = !DILocalVariable(name: "res", scope: !11519, file: !3, line: 2189, type: !32)
!11531 = !DILocation(line: 2189, column: 6, scope: !11519)
!11532 = !DILocation(line: 2196, column: 7, scope: !11533)
!11533 = distinct !DILexicalBlock(scope: !11519, file: !3, line: 2196, column: 6)
!11534 = !DILocation(line: 2196, column: 11, scope: !11533)
!11535 = !DILocation(line: 2196, column: 23, scope: !11533)
!11536 = !DILocation(line: 2196, column: 52, scope: !11533)
!11537 = !DILocation(line: 2196, column: 6, scope: !11519)
!11538 = !DILocation(line: 2197, column: 21, scope: !11539)
!11539 = distinct !DILexicalBlock(scope: !11533, file: !3, line: 2196, column: 70)
!11540 = !DILocation(line: 2197, column: 25, scope: !11539)
!11541 = !DILocation(line: 2198, column: 7, scope: !11539)
!11542 = !DILocation(line: 2198, column: 12, scope: !11539)
!11543 = !DILocation(line: 2198, column: 18, scope: !11539)
!11544 = !DILocation(line: 2197, column: 9, scope: !11539)
!11545 = !DILocation(line: 2197, column: 7, scope: !11539)
!11546 = !DILocation(line: 2199, column: 7, scope: !11547)
!11547 = distinct !DILexicalBlock(scope: !11539, file: !3, line: 2199, column: 7)
!11548 = !DILocation(line: 2199, column: 7, scope: !11539)
!11549 = !DILocation(line: 2202, column: 11, scope: !11550)
!11550 = distinct !DILexicalBlock(scope: !11547, file: !3, line: 2199, column: 12)
!11551 = !DILocation(line: 2202, column: 15, scope: !11550)
!11552 = !DILocation(line: 2201, column: 4, scope: !11550)
!11553 = !DILocation(line: 2204, column: 4, scope: !11550)
!11554 = !DILocation(line: 2206, column: 2, scope: !11539)
!11555 = !DILocation(line: 2210, column: 17, scope: !11519)
!11556 = !DILocation(line: 2210, column: 21, scope: !11519)
!11557 = !DILocation(line: 379, column: 2, scope: !8213, inlinedAt: !11523)
!11558 = !DILocation(line: 379, column: 2, scope: !8216, inlinedAt: !11523)
!11559 = !DILocation(line: 379, column: 2, scope: !8219, inlinedAt: !11523)
!11560 = !DILocation(line: 2211, column: 24, scope: !11519)
!11561 = !DILocation(line: 2211, column: 8, scope: !11519)
!11562 = !DILocation(line: 2211, column: 6, scope: !11519)
!11563 = !DILocation(line: 2212, column: 19, scope: !11519)
!11564 = !DILocation(line: 2212, column: 23, scope: !11519)
!11565 = !DILocation(line: 404, column: 2, scope: !8225, inlinedAt: !11521)
!11566 = !DILocation(line: 404, column: 2, scope: !8228, inlinedAt: !11521)
!11567 = !DILocation(line: 404, column: 2, scope: !8231, inlinedAt: !11521)
!11568 = !DILocation(line: 2214, column: 6, scope: !11569)
!11569 = distinct !DILexicalBlock(scope: !11519, file: !3, line: 2214, column: 6)
!11570 = !DILocation(line: 2214, column: 10, scope: !11569)
!11571 = !DILocation(line: 2214, column: 15, scope: !11569)
!11572 = !DILocation(line: 2214, column: 19, scope: !11569)
!11573 = !DILocation(line: 2214, column: 31, scope: !11569)
!11574 = !DILocation(line: 2214, column: 60, scope: !11569)
!11575 = !DILocation(line: 2214, column: 6, scope: !11519)
!11576 = !DILocation(line: 2215, column: 12, scope: !11569)
!11577 = !DILocation(line: 2215, column: 16, scope: !11569)
!11578 = !DILocation(line: 2215, column: 21, scope: !11569)
!11579 = !DILocation(line: 2215, column: 3, scope: !11569)
!11580 = !DILocation(line: 2216, column: 9, scope: !11519)
!11581 = !DILocation(line: 2216, column: 2, scope: !11519)
!11582 = !DILocation(line: 2217, column: 1, scope: !11519)
!11583 = distinct !DISubprogram(name: "happy_meal_close", scope: !3, file: !3, line: 2219, type: !402, scopeLine: 2220, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!11584 = !DILocation(line: 402, column: 57, scope: !7876, inlinedAt: !11585)
!11585 = distinct !DILocation(line: 2230, column: 2, scope: !11583)
!11586 = !DILocation(line: 377, column: 55, scope: !7883, inlinedAt: !11587)
!11587 = distinct !DILocation(line: 2223, column: 2, scope: !11583)
!11588 = !DILocalVariable(name: "dev", arg: 1, scope: !11583, file: !3, line: 2219, type: !290)
!11589 = !DILocation(line: 2219, column: 48, scope: !11583)
!11590 = !DILocalVariable(name: "hp", scope: !11583, file: !3, line: 2221, type: !7554)
!11591 = !DILocation(line: 2221, column: 21, scope: !11583)
!11592 = !DILocation(line: 2221, column: 38, scope: !11583)
!11593 = !DILocation(line: 2221, column: 26, scope: !11583)
!11594 = !DILocation(line: 2223, column: 17, scope: !11583)
!11595 = !DILocation(line: 2223, column: 21, scope: !11583)
!11596 = !DILocation(line: 379, column: 2, scope: !8213, inlinedAt: !11587)
!11597 = !DILocation(line: 379, column: 2, scope: !8216, inlinedAt: !11587)
!11598 = !DILocation(line: 379, column: 2, scope: !8219, inlinedAt: !11587)
!11599 = !DILocation(line: 2224, column: 18, scope: !11583)
!11600 = !DILocation(line: 2224, column: 22, scope: !11583)
!11601 = !DILocation(line: 2224, column: 26, scope: !11583)
!11602 = !DILocation(line: 2224, column: 2, scope: !11583)
!11603 = !DILocation(line: 2225, column: 25, scope: !11583)
!11604 = !DILocation(line: 2225, column: 2, scope: !11583)
!11605 = !DILocation(line: 2228, column: 13, scope: !11583)
!11606 = !DILocation(line: 2228, column: 17, scope: !11583)
!11607 = !DILocation(line: 2228, column: 2, scope: !11583)
!11608 = !DILocation(line: 2230, column: 19, scope: !11583)
!11609 = !DILocation(line: 2230, column: 23, scope: !11583)
!11610 = !DILocation(line: 404, column: 2, scope: !8225, inlinedAt: !11585)
!11611 = !DILocation(line: 404, column: 2, scope: !8228, inlinedAt: !11585)
!11612 = !DILocation(line: 404, column: 2, scope: !8231, inlinedAt: !11585)
!11613 = !DILocation(line: 2236, column: 7, scope: !11614)
!11614 = distinct !DILexicalBlock(scope: !11583, file: !3, line: 2236, column: 6)
!11615 = !DILocation(line: 2236, column: 11, scope: !11614)
!11616 = !DILocation(line: 2236, column: 23, scope: !11614)
!11617 = !DILocation(line: 2236, column: 52, scope: !11614)
!11618 = !DILocation(line: 2236, column: 6, scope: !11583)
!11619 = !DILocation(line: 2237, column: 12, scope: !11614)
!11620 = !DILocation(line: 2237, column: 16, scope: !11614)
!11621 = !DILocation(line: 2237, column: 21, scope: !11614)
!11622 = !DILocation(line: 2237, column: 3, scope: !11614)
!11623 = !DILocation(line: 2239, column: 2, scope: !11583)
!11624 = distinct !DISubprogram(name: "happy_meal_start_xmit", scope: !3, file: !3, line: 2285, type: !412, scopeLine: 2287, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!11625 = !DILocation(line: 402, column: 57, scope: !7876, inlinedAt: !11626)
!11626 = distinct !DILocation(line: 2382, column: 2, scope: !11624)
!11627 = !DILocation(line: 402, column: 57, scope: !7876, inlinedAt: !11628)
!11628 = distinct !DILocation(line: 2375, column: 2, scope: !11624)
!11629 = !DILocation(line: 402, column: 57, scope: !7876, inlinedAt: !11630)
!11630 = distinct !DILocation(line: 2306, column: 3, scope: !11631)
!11631 = distinct !DILexicalBlock(scope: !11632, file: !3, line: 2304, column: 62)
!11632 = distinct !DILexicalBlock(scope: !11624, file: !3, line: 2304, column: 7)
!11633 = !DILocation(line: 377, column: 55, scope: !7883, inlinedAt: !11634)
!11634 = distinct !DILocation(line: 2302, column: 2, scope: !11624)
!11635 = !DILocalVariable(name: "skb", arg: 1, scope: !11624, file: !3, line: 2285, type: !415)
!11636 = !DILocation(line: 2285, column: 58, scope: !11624)
!11637 = !DILocalVariable(name: "dev", arg: 2, scope: !11624, file: !3, line: 2286, type: !290)
!11638 = !DILocation(line: 2286, column: 26, scope: !11624)
!11639 = !DILocalVariable(name: "hp", scope: !11624, file: !3, line: 2288, type: !7554)
!11640 = !DILocation(line: 2288, column: 21, scope: !11624)
!11641 = !DILocation(line: 2288, column: 38, scope: !11624)
!11642 = !DILocation(line: 2288, column: 26, scope: !11624)
!11643 = !DILocalVariable(name: "entry", scope: !11624, file: !3, line: 2289, type: !32)
!11644 = !DILocation(line: 2289, column: 7, scope: !11624)
!11645 = !DILocalVariable(name: "tx_flags", scope: !11624, file: !3, line: 2290, type: !987)
!11646 = !DILocation(line: 2290, column: 7, scope: !11624)
!11647 = !DILocation(line: 2292, column: 11, scope: !11624)
!11648 = !DILocation(line: 2293, column: 6, scope: !11649)
!11649 = distinct !DILexicalBlock(scope: !11624, file: !3, line: 2293, column: 6)
!11650 = !DILocation(line: 2293, column: 11, scope: !11649)
!11651 = !DILocation(line: 2293, column: 21, scope: !11649)
!11652 = !DILocation(line: 2293, column: 6, scope: !11624)
!11653 = !DILocalVariable(name: "csum_start_off", scope: !11654, file: !3, line: 2294, type: !5859)
!11654 = distinct !DILexicalBlock(scope: !11649, file: !3, line: 2293, column: 42)
!11655 = !DILocation(line: 2294, column: 13, scope: !11654)
!11656 = !DILocation(line: 2294, column: 56, scope: !11654)
!11657 = !DILocation(line: 2294, column: 30, scope: !11654)
!11658 = !DILocalVariable(name: "csum_stuff_off", scope: !11654, file: !3, line: 2295, type: !5859)
!11659 = !DILocation(line: 2295, column: 13, scope: !11654)
!11660 = !DILocation(line: 2295, column: 30, scope: !11654)
!11661 = !DILocation(line: 2295, column: 47, scope: !11654)
!11662 = !DILocation(line: 2295, column: 52, scope: !11654)
!11663 = !DILocation(line: 2295, column: 45, scope: !11654)
!11664 = !DILocation(line: 2298, column: 10, scope: !11654)
!11665 = !DILocation(line: 2298, column: 25, scope: !11654)
!11666 = !DILocation(line: 2298, column: 32, scope: !11654)
!11667 = !DILocation(line: 2297, column: 44, scope: !11654)
!11668 = !DILocation(line: 2299, column: 10, scope: !11654)
!11669 = !DILocation(line: 2299, column: 25, scope: !11654)
!11670 = !DILocation(line: 2299, column: 32, scope: !11654)
!11671 = !DILocation(line: 2298, column: 53, scope: !11654)
!11672 = !DILocation(line: 2297, column: 12, scope: !11654)
!11673 = !DILocation(line: 2300, column: 2, scope: !11654)
!11674 = !DILocation(line: 2302, column: 17, scope: !11624)
!11675 = !DILocation(line: 2302, column: 21, scope: !11624)
!11676 = !DILocation(line: 379, column: 2, scope: !8213, inlinedAt: !11634)
!11677 = !DILocation(line: 379, column: 2, scope: !8216, inlinedAt: !11634)
!11678 = !DILocation(line: 379, column: 2, scope: !8219, inlinedAt: !11634)
!11679 = !DILocation(line: 2304, column: 7, scope: !11632)
!11680 = !DILocation(line: 2304, column: 30, scope: !11632)
!11681 = !DILocation(line: 2304, column: 47, scope: !11632)
!11682 = !DILocation(line: 2304, column: 56, scope: !11632)
!11683 = !DILocation(line: 2304, column: 26, scope: !11632)
!11684 = !DILocation(line: 2304, column: 7, scope: !11624)
!11685 = !DILocation(line: 2305, column: 20, scope: !11631)
!11686 = !DILocation(line: 2305, column: 3, scope: !11631)
!11687 = !DILocation(line: 2306, column: 20, scope: !11631)
!11688 = !DILocation(line: 2306, column: 24, scope: !11631)
!11689 = !DILocation(line: 404, column: 2, scope: !8225, inlinedAt: !11630)
!11690 = !DILocation(line: 404, column: 2, scope: !8228, inlinedAt: !11630)
!11691 = !DILocation(line: 404, column: 2, scope: !8231, inlinedAt: !11630)
!11692 = !DILocation(line: 2308, column: 10, scope: !11631)
!11693 = !DILocation(line: 2308, column: 15, scope: !11631)
!11694 = !DILocation(line: 2307, column: 3, scope: !11631)
!11695 = !DILocation(line: 2309, column: 3, scope: !11631)
!11696 = !DILocation(line: 2312, column: 10, scope: !11624)
!11697 = !DILocation(line: 2312, column: 14, scope: !11624)
!11698 = !DILocation(line: 2312, column: 8, scope: !11624)
!11699 = !DILocation(line: 2314, column: 23, scope: !11624)
!11700 = !DILocation(line: 2314, column: 2, scope: !11624)
!11701 = !DILocation(line: 2314, column: 6, scope: !11624)
!11702 = !DILocation(line: 2314, column: 14, scope: !11624)
!11703 = !DILocation(line: 2314, column: 21, scope: !11624)
!11704 = !DILocation(line: 2316, column: 6, scope: !11705)
!11705 = distinct !DILexicalBlock(scope: !11624, file: !3, line: 2316, column: 6)
!11706 = !DILocation(line: 2316, column: 23, scope: !11705)
!11707 = !DILocation(line: 2316, column: 32, scope: !11705)
!11708 = !DILocation(line: 2316, column: 6, scope: !11624)
!11709 = !DILocalVariable(name: "mapping", scope: !11710, file: !3, line: 2317, type: !987)
!11710 = distinct !DILexicalBlock(scope: !11705, file: !3, line: 2316, column: 38)
!11711 = !DILocation(line: 2317, column: 7, scope: !11710)
!11712 = !DILocalVariable(name: "len", scope: !11710, file: !3, line: 2317, type: !987)
!11713 = !DILocation(line: 2317, column: 16, scope: !11710)
!11714 = !DILocation(line: 2319, column: 9, scope: !11710)
!11715 = !DILocation(line: 2319, column: 14, scope: !11710)
!11716 = !DILocation(line: 2319, column: 7, scope: !11710)
!11717 = !DILocation(line: 2320, column: 13, scope: !11710)
!11718 = !DILocation(line: 2320, column: 11, scope: !11710)
!11719 = !DILocation(line: 2321, column: 7, scope: !11720)
!11720 = distinct !DILexicalBlock(scope: !11710, file: !3, line: 2321, column: 7)
!11721 = !DILocation(line: 2321, column: 7, scope: !11710)
!11722 = !DILocation(line: 2322, column: 4, scope: !11720)
!11723 = !DILocation(line: 2323, column: 12, scope: !11710)
!11724 = !DILocation(line: 2324, column: 3, scope: !11710)
!11725 = !DILocation(line: 2324, column: 3, scope: !11726)
!11726 = distinct !DILexicalBlock(scope: !11710, file: !3, line: 2324, column: 3)
!11727 = !{i32 -2139622100}
!11728 = !DILocation(line: 2327, column: 11, scope: !11710)
!11729 = !DILocation(line: 2327, column: 9, scope: !11710)
!11730 = !DILocation(line: 2328, column: 2, scope: !11710)
!11731 = !DILocalVariable(name: "first_len", scope: !11732, file: !3, line: 2329, type: !987)
!11732 = distinct !DILexicalBlock(scope: !11705, file: !3, line: 2328, column: 9)
!11733 = !DILocation(line: 2329, column: 7, scope: !11732)
!11734 = !DILocalVariable(name: "first_mapping", scope: !11732, file: !3, line: 2329, type: !987)
!11735 = !DILocation(line: 2329, column: 18, scope: !11732)
!11736 = !DILocalVariable(name: "frag", scope: !11732, file: !3, line: 2330, type: !32)
!11737 = !DILocation(line: 2330, column: 7, scope: !11732)
!11738 = !DILocalVariable(name: "first_entry", scope: !11732, file: !3, line: 2330, type: !32)
!11739 = !DILocation(line: 2330, column: 13, scope: !11732)
!11740 = !DILocation(line: 2330, column: 27, scope: !11732)
!11741 = !DILocation(line: 2335, column: 27, scope: !11732)
!11742 = !DILocation(line: 2335, column: 15, scope: !11732)
!11743 = !DILocation(line: 2335, column: 13, scope: !11732)
!11744 = !DILocation(line: 2336, column: 19, scope: !11732)
!11745 = !DILocation(line: 2336, column: 17, scope: !11732)
!11746 = !DILocation(line: 2338, column: 7, scope: !11747)
!11747 = distinct !DILexicalBlock(scope: !11732, file: !3, line: 2338, column: 7)
!11748 = !DILocation(line: 2338, column: 7, scope: !11732)
!11749 = !DILocation(line: 2339, column: 4, scope: !11747)
!11750 = !DILocation(line: 2340, column: 11, scope: !11732)
!11751 = !DILocation(line: 2340, column: 9, scope: !11732)
!11752 = !DILocation(line: 2342, column: 13, scope: !11753)
!11753 = distinct !DILexicalBlock(scope: !11732, file: !3, line: 2342, column: 3)
!11754 = !DILocation(line: 2342, column: 8, scope: !11753)
!11755 = !DILocation(line: 2342, column: 18, scope: !11756)
!11756 = distinct !DILexicalBlock(scope: !11753, file: !3, line: 2342, column: 3)
!11757 = !DILocation(line: 2342, column: 25, scope: !11756)
!11758 = !DILocation(line: 2342, column: 42, scope: !11756)
!11759 = !DILocation(line: 2342, column: 23, scope: !11756)
!11760 = !DILocation(line: 2342, column: 3, scope: !11753)
!11761 = !DILocalVariable(name: "this_frag", scope: !11762, file: !3, line: 2343, type: !11763)
!11762 = distinct !DILexicalBlock(scope: !11756, file: !3, line: 2342, column: 60)
!11763 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11764, size: 64)
!11764 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7662)
!11765 = !DILocation(line: 2343, column: 22, scope: !11762)
!11766 = !DILocation(line: 2343, column: 35, scope: !11762)
!11767 = !DILocation(line: 2343, column: 52, scope: !11762)
!11768 = !DILocation(line: 2343, column: 58, scope: !11762)
!11769 = !DILocalVariable(name: "len", scope: !11762, file: !3, line: 2344, type: !987)
!11770 = !DILocation(line: 2344, column: 8, scope: !11762)
!11771 = !DILocalVariable(name: "mapping", scope: !11762, file: !3, line: 2344, type: !987)
!11772 = !DILocation(line: 2344, column: 13, scope: !11762)
!11773 = !DILocalVariable(name: "this_txflags", scope: !11762, file: !3, line: 2344, type: !987)
!11774 = !DILocation(line: 2344, column: 22, scope: !11762)
!11775 = !DILocation(line: 2346, column: 24, scope: !11762)
!11776 = !DILocation(line: 2346, column: 10, scope: !11762)
!11777 = !DILocation(line: 2346, column: 8, scope: !11762)
!11778 = !DILocation(line: 2347, column: 31, scope: !11762)
!11779 = !DILocation(line: 2347, column: 35, scope: !11762)
!11780 = !DILocation(line: 2347, column: 44, scope: !11762)
!11781 = !DILocation(line: 2348, column: 13, scope: !11762)
!11782 = !DILocation(line: 2347, column: 14, scope: !11762)
!11783 = !DILocation(line: 2347, column: 12, scope: !11762)
!11784 = !DILocation(line: 2349, column: 8, scope: !11785)
!11785 = distinct !DILexicalBlock(scope: !11762, file: !3, line: 2349, column: 8)
!11786 = !DILocation(line: 2349, column: 8, scope: !11762)
!11787 = !DILocation(line: 2350, column: 26, scope: !11788)
!11788 = distinct !DILexicalBlock(scope: !11785, file: !3, line: 2349, column: 59)
!11789 = !DILocation(line: 2350, column: 30, scope: !11788)
!11790 = !DILocation(line: 2350, column: 45, scope: !11788)
!11791 = !DILocation(line: 2351, column: 12, scope: !11788)
!11792 = !DILocation(line: 2351, column: 25, scope: !11788)
!11793 = !DILocation(line: 2350, column: 5, scope: !11788)
!11794 = !DILocation(line: 2352, column: 5, scope: !11788)
!11795 = !DILocation(line: 2354, column: 19, scope: !11762)
!11796 = !DILocation(line: 2354, column: 17, scope: !11762)
!11797 = !DILocation(line: 2355, column: 8, scope: !11798)
!11798 = distinct !DILexicalBlock(scope: !11762, file: !3, line: 2355, column: 8)
!11799 = !DILocation(line: 2355, column: 16, scope: !11798)
!11800 = !DILocation(line: 2355, column: 33, scope: !11798)
!11801 = !DILocation(line: 2355, column: 42, scope: !11798)
!11802 = !DILocation(line: 2355, column: 13, scope: !11798)
!11803 = !DILocation(line: 2355, column: 8, scope: !11762)
!11804 = !DILocation(line: 2356, column: 18, scope: !11798)
!11805 = !DILocation(line: 2356, column: 5, scope: !11798)
!11806 = !DILocation(line: 2357, column: 4, scope: !11762)
!11807 = !DILocation(line: 2357, column: 4, scope: !11808)
!11808 = distinct !DILexicalBlock(scope: !11762, file: !3, line: 2357, column: 4)
!11809 = !{i32 -2139621154}
!11810 = !DILocation(line: 2360, column: 12, scope: !11762)
!11811 = !DILocation(line: 2360, column: 10, scope: !11762)
!11812 = !DILocation(line: 2361, column: 3, scope: !11762)
!11813 = !DILocation(line: 2342, column: 56, scope: !11756)
!11814 = !DILocation(line: 2342, column: 3, scope: !11756)
!11815 = distinct !{!11815, !11760, !11816}
!11816 = !DILocation(line: 2361, column: 3, scope: !11753)
!11817 = !DILocation(line: 2362, column: 3, scope: !11732)
!11818 = !DILocation(line: 2362, column: 3, scope: !11819)
!11819 = distinct !DILexicalBlock(scope: !11732, file: !3, line: 2362, column: 3)
!11820 = !{i32 -2139620596}
!11821 = !DILocation(line: 2367, column: 15, scope: !11624)
!11822 = !DILocation(line: 2367, column: 2, scope: !11624)
!11823 = !DILocation(line: 2367, column: 6, scope: !11624)
!11824 = !DILocation(line: 2367, column: 13, scope: !11624)
!11825 = !DILocation(line: 2369, column: 6, scope: !11826)
!11826 = distinct !DILexicalBlock(scope: !11624, file: !3, line: 2369, column: 6)
!11827 = !DILocation(line: 2369, column: 25, scope: !11826)
!11828 = !DILocation(line: 2369, column: 6, scope: !11624)
!11829 = !DILocation(line: 2370, column: 20, scope: !11826)
!11830 = !DILocation(line: 2370, column: 3, scope: !11826)
!11831 = !DILocation(line: 2373, column: 2, scope: !11624)
!11832 = !DILocation(line: 2375, column: 19, scope: !11624)
!11833 = !DILocation(line: 2375, column: 23, scope: !11624)
!11834 = !DILocation(line: 404, column: 2, scope: !8225, inlinedAt: !11628)
!11835 = !DILocation(line: 404, column: 2, scope: !8228, inlinedAt: !11628)
!11836 = !DILocation(line: 404, column: 2, scope: !8231, inlinedAt: !11628)
!11837 = !DILocation(line: 2377, column: 2, scope: !11624)
!11838 = !DILocation(line: 2377, column: 2, scope: !11839)
!11839 = distinct !DILexicalBlock(scope: !11624, file: !3, line: 2377, column: 2)
!11840 = !DILocation(line: 2378, column: 2, scope: !11624)
!11841 = !DILabel(scope: !11624, name: "out_dma_error", file: !3, line: 2380)
!11842 = !DILocation(line: 2380, column: 1, scope: !11624)
!11843 = !DILocation(line: 2381, column: 2, scope: !11624)
!11844 = !DILocation(line: 2381, column: 6, scope: !11624)
!11845 = !DILocation(line: 2381, column: 14, scope: !11624)
!11846 = !DILocation(line: 2381, column: 18, scope: !11624)
!11847 = !DILocation(line: 2381, column: 26, scope: !11624)
!11848 = !DILocation(line: 2382, column: 19, scope: !11624)
!11849 = !DILocation(line: 2382, column: 23, scope: !11624)
!11850 = !DILocation(line: 404, column: 2, scope: !8225, inlinedAt: !11626)
!11851 = !DILocation(line: 404, column: 2, scope: !8228, inlinedAt: !11626)
!11852 = !DILocation(line: 404, column: 2, scope: !8231, inlinedAt: !11626)
!11853 = !DILocation(line: 2384, column: 20, scope: !11624)
!11854 = !DILocation(line: 2384, column: 2, scope: !11624)
!11855 = !DILocation(line: 2385, column: 2, scope: !11624)
!11856 = !DILocation(line: 2385, column: 7, scope: !11624)
!11857 = !DILocation(line: 2385, column: 13, scope: !11624)
!11858 = !DILocation(line: 2385, column: 23, scope: !11624)
!11859 = !DILocation(line: 2386, column: 2, scope: !11624)
!11860 = !DILocation(line: 2387, column: 1, scope: !11624)
!11861 = distinct !DISubprogram(name: "happy_meal_set_multicast", scope: !3, file: !3, line: 2400, type: !406, scopeLine: 2401, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!11862 = !DILocation(line: 402, column: 57, scope: !7876, inlinedAt: !11863)
!11863 = distinct !DILocation(line: 2432, column: 2, scope: !11861)
!11864 = !DILocation(line: 377, column: 55, scope: !7883, inlinedAt: !11865)
!11865 = distinct !DILocation(line: 2407, column: 2, scope: !11861)
!11866 = !DILocalVariable(name: "dev", arg: 1, scope: !11861, file: !3, line: 2400, type: !290)
!11867 = !DILocation(line: 2400, column: 57, scope: !11861)
!11868 = !DILocalVariable(name: "hp", scope: !11861, file: !3, line: 2402, type: !7554)
!11869 = !DILocation(line: 2402, column: 21, scope: !11861)
!11870 = !DILocation(line: 2402, column: 38, scope: !11861)
!11871 = !DILocation(line: 2402, column: 26, scope: !11861)
!11872 = !DILocalVariable(name: "bregs", scope: !11861, file: !3, line: 2403, type: !591)
!11873 = !DILocation(line: 2403, column: 16, scope: !11861)
!11874 = !DILocation(line: 2403, column: 24, scope: !11861)
!11875 = !DILocation(line: 2403, column: 28, scope: !11861)
!11876 = !DILocalVariable(name: "ha", scope: !11861, file: !3, line: 2404, type: !7630)
!11877 = !DILocation(line: 2404, column: 25, scope: !11861)
!11878 = !DILocalVariable(name: "crc", scope: !11861, file: !3, line: 2405, type: !987)
!11879 = !DILocation(line: 2405, column: 6, scope: !11861)
!11880 = !DILocation(line: 2407, column: 17, scope: !11861)
!11881 = !DILocation(line: 2407, column: 21, scope: !11861)
!11882 = !DILocation(line: 379, column: 2, scope: !8213, inlinedAt: !11865)
!11883 = !DILocation(line: 379, column: 2, scope: !8216, inlinedAt: !11865)
!11884 = !DILocation(line: 379, column: 2, scope: !8219, inlinedAt: !11865)
!11885 = !DILocation(line: 2409, column: 7, scope: !11886)
!11886 = distinct !DILexicalBlock(scope: !11861, file: !3, line: 2409, column: 6)
!11887 = !DILocation(line: 2409, column: 12, scope: !11886)
!11888 = !DILocation(line: 2409, column: 18, scope: !11886)
!11889 = !DILocation(line: 2409, column: 34, scope: !11886)
!11890 = !DILocation(line: 2409, column: 38, scope: !11886)
!11891 = !DILocation(line: 2409, column: 59, scope: !11886)
!11892 = !DILocation(line: 2409, column: 6, scope: !11861)
!11893 = !DILocation(line: 2410, column: 3, scope: !11894)
!11894 = distinct !DILexicalBlock(scope: !11886, file: !3, line: 2409, column: 66)
!11895 = !DILocation(line: 2411, column: 3, scope: !11894)
!11896 = !DILocation(line: 2412, column: 3, scope: !11894)
!11897 = !DILocation(line: 2413, column: 3, scope: !11894)
!11898 = !DILocation(line: 2414, column: 2, scope: !11894)
!11899 = !DILocation(line: 2414, column: 13, scope: !11900)
!11900 = distinct !DILexicalBlock(scope: !11886, file: !3, line: 2414, column: 13)
!11901 = !DILocation(line: 2414, column: 18, scope: !11900)
!11902 = !DILocation(line: 2414, column: 24, scope: !11900)
!11903 = !DILocation(line: 2414, column: 13, scope: !11886)
!11904 = !DILocation(line: 2415, column: 3, scope: !11905)
!11905 = distinct !DILexicalBlock(scope: !11900, file: !3, line: 2414, column: 39)
!11906 = !DILocation(line: 2417, column: 2, scope: !11905)
!11907 = !DILocalVariable(name: "hash_table", scope: !11908, file: !3, line: 2418, type: !9969)
!11908 = distinct !DILexicalBlock(scope: !11900, file: !3, line: 2417, column: 9)
!11909 = !DILocation(line: 2418, column: 7, scope: !11908)
!11910 = !DILocation(line: 2420, column: 3, scope: !11908)
!11911 = !DILocalVariable(name: "__mptr", scope: !11912, file: !3, line: 2421, type: !591)
!11912 = distinct !DILexicalBlock(scope: !11913, file: !3, line: 2421, column: 3)
!11913 = distinct !DILexicalBlock(scope: !11908, file: !3, line: 2421, column: 3)
!11914 = !DILocation(line: 2421, column: 3, scope: !11912)
!11915 = !DILocation(line: 2421, column: 3, scope: !11916)
!11916 = distinct !DILexicalBlock(scope: !11912, file: !3, line: 2421, column: 3)
!11917 = !DILocation(line: 2421, column: 3, scope: !11913)
!11918 = !DILocation(line: 2421, column: 3, scope: !11919)
!11919 = distinct !DILexicalBlock(scope: !11913, file: !3, line: 2421, column: 3)
!11920 = !DILocation(line: 2422, column: 10, scope: !11921)
!11921 = distinct !DILexicalBlock(scope: !11919, file: !3, line: 2421, column: 36)
!11922 = !DILocation(line: 2422, column: 8, scope: !11921)
!11923 = !DILocation(line: 2423, column: 8, scope: !11921)
!11924 = !DILocation(line: 2424, column: 34, scope: !11921)
!11925 = !DILocation(line: 2424, column: 38, scope: !11921)
!11926 = !DILocation(line: 2424, column: 30, scope: !11921)
!11927 = !DILocation(line: 2424, column: 15, scope: !11921)
!11928 = !DILocation(line: 2424, column: 19, scope: !11921)
!11929 = !DILocation(line: 2424, column: 4, scope: !11921)
!11930 = !DILocation(line: 2424, column: 25, scope: !11921)
!11931 = !DILocation(line: 2425, column: 3, scope: !11921)
!11932 = !DILocalVariable(name: "__mptr", scope: !11933, file: !3, line: 2421, type: !591)
!11933 = distinct !DILexicalBlock(scope: !11919, file: !3, line: 2421, column: 3)
!11934 = !DILocation(line: 2421, column: 3, scope: !11933)
!11935 = !DILocation(line: 2421, column: 3, scope: !11936)
!11936 = distinct !DILexicalBlock(scope: !11933, file: !3, line: 2421, column: 3)
!11937 = distinct !{!11937, !11917, !11938}
!11938 = !DILocation(line: 2425, column: 3, scope: !11913)
!11939 = !DILocation(line: 2426, column: 3, scope: !11908)
!11940 = !DILocation(line: 2427, column: 3, scope: !11908)
!11941 = !DILocation(line: 2428, column: 3, scope: !11908)
!11942 = !DILocation(line: 2429, column: 3, scope: !11908)
!11943 = !DILocation(line: 2432, column: 19, scope: !11861)
!11944 = !DILocation(line: 2432, column: 23, scope: !11861)
!11945 = !DILocation(line: 404, column: 2, scope: !8225, inlinedAt: !11863)
!11946 = !DILocation(line: 404, column: 2, scope: !8228, inlinedAt: !11863)
!11947 = !DILocation(line: 404, column: 2, scope: !8231, inlinedAt: !11863)
!11948 = !DILocation(line: 2433, column: 1, scope: !11861)
!11949 = distinct !DISubprogram(name: "happy_meal_tx_timeout", scope: !3, file: !3, line: 2248, type: !733, scopeLine: 2249, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!11950 = !DILocation(line: 402, column: 57, scope: !7876, inlinedAt: !11951)
!11951 = distinct !DILocation(line: 2261, column: 2, scope: !11949)
!11952 = !DILocation(line: 377, column: 55, scope: !7883, inlinedAt: !11953)
!11953 = distinct !DILocation(line: 2259, column: 2, scope: !11949)
!11954 = !DILocalVariable(name: "dev", arg: 1, scope: !11949, file: !3, line: 2248, type: !290)
!11955 = !DILocation(line: 2248, column: 54, scope: !11949)
!11956 = !DILocalVariable(name: "txqueue", arg: 2, scope: !11949, file: !3, line: 2248, type: !7)
!11957 = !DILocation(line: 2248, column: 72, scope: !11949)
!11958 = !DILocalVariable(name: "hp", scope: !11949, file: !3, line: 2250, type: !7554)
!11959 = !DILocation(line: 2250, column: 21, scope: !11949)
!11960 = !DILocation(line: 2250, column: 38, scope: !11949)
!11961 = !DILocation(line: 2250, column: 26, scope: !11949)
!11962 = !DILocation(line: 2252, column: 58, scope: !11949)
!11963 = !DILocation(line: 2252, column: 63, scope: !11949)
!11964 = !DILocation(line: 2252, column: 2, scope: !11949)
!11965 = !DILocation(line: 2253, column: 2, scope: !11949)
!11966 = !DILocation(line: 2253, column: 2, scope: !11967)
!11967 = distinct !DILexicalBlock(scope: !11949, file: !3, line: 2253, column: 2)
!11968 = !DILocation(line: 2254, column: 60, scope: !11949)
!11969 = !DILocation(line: 2254, column: 65, scope: !11949)
!11970 = !DILocation(line: 2255, column: 3, scope: !11949)
!11971 = !DILocation(line: 2256, column: 3, scope: !11949)
!11972 = !DILocation(line: 2257, column: 3, scope: !11949)
!11973 = !DILocation(line: 2254, column: 2, scope: !11949)
!11974 = !DILocation(line: 2259, column: 17, scope: !11949)
!11975 = !DILocation(line: 2259, column: 21, scope: !11949)
!11976 = !DILocation(line: 379, column: 2, scope: !8213, inlinedAt: !11953)
!11977 = !DILocation(line: 379, column: 2, scope: !8216, inlinedAt: !11953)
!11978 = !DILocation(line: 379, column: 2, scope: !8219, inlinedAt: !11953)
!11979 = !DILocation(line: 2260, column: 18, scope: !11949)
!11980 = !DILocation(line: 2260, column: 2, scope: !11949)
!11981 = !DILocation(line: 2261, column: 19, scope: !11949)
!11982 = !DILocation(line: 2261, column: 23, scope: !11949)
!11983 = !DILocation(line: 404, column: 2, scope: !8225, inlinedAt: !11951)
!11984 = !DILocation(line: 404, column: 2, scope: !8228, inlinedAt: !11951)
!11985 = !DILocation(line: 404, column: 2, scope: !8231, inlinedAt: !11951)
!11986 = !DILocation(line: 2263, column: 19, scope: !11949)
!11987 = !DILocation(line: 2263, column: 2, scope: !11949)
!11988 = !DILocation(line: 2264, column: 1, scope: !11949)
!11989 = distinct !DISubprogram(name: "happy_meal_get_stats", scope: !3, file: !3, line: 2389, type: !781, scopeLine: 2390, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!11990 = !DILocation(line: 402, column: 57, scope: !7876, inlinedAt: !11991)
!11991 = distinct !DILocation(line: 2395, column: 2, scope: !11989)
!11992 = !DILocation(line: 377, column: 55, scope: !7883, inlinedAt: !11993)
!11993 = distinct !DILocation(line: 2393, column: 2, scope: !11989)
!11994 = !DILocalVariable(name: "dev", arg: 1, scope: !11989, file: !3, line: 2389, type: !290)
!11995 = !DILocation(line: 2389, column: 73, scope: !11989)
!11996 = !DILocalVariable(name: "hp", scope: !11989, file: !3, line: 2391, type: !7554)
!11997 = !DILocation(line: 2391, column: 21, scope: !11989)
!11998 = !DILocation(line: 2391, column: 38, scope: !11989)
!11999 = !DILocation(line: 2391, column: 26, scope: !11989)
!12000 = !DILocation(line: 2393, column: 17, scope: !11989)
!12001 = !DILocation(line: 2393, column: 21, scope: !11989)
!12002 = !DILocation(line: 379, column: 2, scope: !8213, inlinedAt: !11993)
!12003 = !DILocation(line: 379, column: 2, scope: !8216, inlinedAt: !11993)
!12004 = !DILocation(line: 379, column: 2, scope: !8219, inlinedAt: !11993)
!12005 = !DILocation(line: 2394, column: 26, scope: !11989)
!12006 = !DILocation(line: 2394, column: 30, scope: !11989)
!12007 = !DILocation(line: 2394, column: 34, scope: !11989)
!12008 = !DILocation(line: 2394, column: 2, scope: !11989)
!12009 = !DILocation(line: 2395, column: 19, scope: !11989)
!12010 = !DILocation(line: 2395, column: 23, scope: !11989)
!12011 = !DILocation(line: 404, column: 2, scope: !8225, inlinedAt: !11991)
!12012 = !DILocation(line: 404, column: 2, scope: !8228, inlinedAt: !11991)
!12013 = !DILocation(line: 404, column: 2, scope: !8231, inlinedAt: !11991)
!12014 = !DILocation(line: 2397, column: 10, scope: !11989)
!12015 = !DILocation(line: 2397, column: 15, scope: !11989)
!12016 = !DILocation(line: 2397, column: 2, scope: !11989)
!12017 = distinct !DISubprogram(name: "request_irq", scope: !3012, file: !3012, line: 157, type: !12018, scopeLine: 159, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!12018 = !DISubroutineType(types: !12019)
!12019 = !{!32, !7, !12020, !312, !292, !591}
!12020 = !DIDerivedType(tag: DW_TAG_typedef, name: "irq_handler_t", file: !3012, line: 92, baseType: !12021)
!12021 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12022, size: 64)
!12022 = !DISubroutineType(types: !12023)
!12023 = !{!12024, !32, !591}
!12024 = !DIDerivedType(tag: DW_TAG_typedef, name: "irqreturn_t", file: !7174, line: 17, baseType: !7173)
!12025 = !DILocalVariable(name: "irq", arg: 1, scope: !12017, file: !3012, line: 157, type: !7)
!12026 = !DILocation(line: 157, column: 26, scope: !12017)
!12027 = !DILocalVariable(name: "handler", arg: 2, scope: !12017, file: !3012, line: 157, type: !12020)
!12028 = !DILocation(line: 157, column: 45, scope: !12017)
!12029 = !DILocalVariable(name: "flags", arg: 3, scope: !12017, file: !3012, line: 157, type: !312)
!12030 = !DILocation(line: 157, column: 68, scope: !12017)
!12031 = !DILocalVariable(name: "name", arg: 4, scope: !12017, file: !3012, line: 158, type: !292)
!12032 = !DILocation(line: 158, column: 18, scope: !12017)
!12033 = !DILocalVariable(name: "dev", arg: 5, scope: !12017, file: !3012, line: 158, type: !591)
!12034 = !DILocation(line: 158, column: 30, scope: !12017)
!12035 = !DILocation(line: 160, column: 30, scope: !12017)
!12036 = !DILocation(line: 160, column: 35, scope: !12017)
!12037 = !DILocation(line: 160, column: 50, scope: !12017)
!12038 = !DILocation(line: 160, column: 57, scope: !12017)
!12039 = !DILocation(line: 160, column: 63, scope: !12017)
!12040 = !DILocation(line: 160, column: 9, scope: !12017)
!12041 = !DILocation(line: 160, column: 2, scope: !12017)
!12042 = distinct !DISubprogram(name: "happy_meal_interrupt", scope: !3, file: !3, line: 2097, type: !12022, scopeLine: 2098, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!12043 = !DILocalVariable(name: "lock", arg: 1, scope: !12044, file: !7877, line: 392, type: !2181)
!12044 = distinct !DISubprogram(name: "spin_unlock", scope: !7877, file: !7877, line: 392, type: !7878, scopeLine: 393, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!12045 = !DILocation(line: 392, column: 53, scope: !12044, inlinedAt: !12046)
!12046 = distinct !DILocation(line: 2130, column: 2, scope: !12042)
!12047 = !DILocalVariable(name: "lock", arg: 1, scope: !12048, file: !7877, line: 352, type: !2181)
!12048 = distinct !DISubprogram(name: "spin_lock", scope: !7877, file: !7877, line: 352, type: !7878, scopeLine: 353, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!12049 = !DILocation(line: 352, column: 51, scope: !12048, inlinedAt: !12050)
!12050 = distinct !DILocation(line: 2105, column: 2, scope: !12042)
!12051 = !DILocalVariable(name: "irq", arg: 1, scope: !12042, file: !3, line: 2097, type: !32)
!12052 = !DILocation(line: 2097, column: 45, scope: !12042)
!12053 = !DILocalVariable(name: "dev_id", arg: 2, scope: !12042, file: !3, line: 2097, type: !591)
!12054 = !DILocation(line: 2097, column: 56, scope: !12042)
!12055 = !DILocalVariable(name: "dev", scope: !12042, file: !3, line: 2099, type: !290)
!12056 = !DILocation(line: 2099, column: 21, scope: !12042)
!12057 = !DILocation(line: 2099, column: 27, scope: !12042)
!12058 = !DILocalVariable(name: "hp", scope: !12042, file: !3, line: 2100, type: !7554)
!12059 = !DILocation(line: 2100, column: 21, scope: !12042)
!12060 = !DILocation(line: 2100, column: 39, scope: !12042)
!12061 = !DILocation(line: 2100, column: 27, scope: !12042)
!12062 = !DILocalVariable(name: "happy_status", scope: !12042, file: !3, line: 2101, type: !987)
!12063 = !DILocation(line: 2101, column: 6, scope: !12042)
!12064 = !DILocation(line: 2101, column: 27, scope: !12042)
!12065 = !DILocation(line: 2105, column: 13, scope: !12042)
!12066 = !DILocation(line: 2105, column: 17, scope: !12042)
!12067 = !DILocation(line: 354, column: 2, scope: !12068, inlinedAt: !12050)
!12068 = distinct !DILexicalBlock(scope: !12048, file: !7877, line: 354, column: 2)
!12069 = !{i32 -2145387869}
!12070 = !DILocation(line: 354, column: 2, scope: !12071, inlinedAt: !12050)
!12071 = distinct !DILexicalBlock(scope: !12068, file: !7877, line: 354, column: 2)
!12072 = !DILocation(line: 2107, column: 6, scope: !12073)
!12073 = distinct !DILexicalBlock(scope: !12042, file: !3, line: 2107, column: 6)
!12074 = !DILocation(line: 2107, column: 19, scope: !12073)
!12075 = !DILocation(line: 2107, column: 6, scope: !12042)
!12076 = !DILocation(line: 2109, column: 34, scope: !12077)
!12077 = distinct !DILexicalBlock(scope: !12078, file: !3, line: 2109, column: 7)
!12078 = distinct !DILexicalBlock(scope: !12073, file: !3, line: 2107, column: 39)
!12079 = !DILocation(line: 2109, column: 48, scope: !12077)
!12080 = !DILocation(line: 2109, column: 7, scope: !12077)
!12081 = !DILocation(line: 2109, column: 7, scope: !12078)
!12082 = !DILocation(line: 2110, column: 4, scope: !12077)
!12083 = !DILocation(line: 2111, column: 2, scope: !12078)
!12084 = !DILocation(line: 2113, column: 6, scope: !12085)
!12085 = distinct !DILexicalBlock(scope: !12042, file: !3, line: 2113, column: 6)
!12086 = !DILocation(line: 2113, column: 19, scope: !12085)
!12087 = !DILocation(line: 2113, column: 6, scope: !12042)
!12088 = !DILocation(line: 2115, column: 28, scope: !12089)
!12089 = distinct !DILexicalBlock(scope: !12085, file: !3, line: 2113, column: 39)
!12090 = !DILocation(line: 2115, column: 3, scope: !12089)
!12091 = !DILocation(line: 2116, column: 2, scope: !12089)
!12092 = !DILocation(line: 2118, column: 6, scope: !12093)
!12093 = distinct !DILexicalBlock(scope: !12042, file: !3, line: 2118, column: 6)
!12094 = !DILocation(line: 2118, column: 19, scope: !12093)
!12095 = !DILocation(line: 2118, column: 6, scope: !12042)
!12096 = !DILocation(line: 2120, column: 17, scope: !12097)
!12097 = distinct !DILexicalBlock(scope: !12093, file: !3, line: 2118, column: 38)
!12098 = !DILocation(line: 2120, column: 3, scope: !12097)
!12099 = !DILocation(line: 2121, column: 2, scope: !12097)
!12100 = !DILocation(line: 2123, column: 6, scope: !12101)
!12101 = distinct !DILexicalBlock(scope: !12042, file: !3, line: 2123, column: 6)
!12102 = !DILocation(line: 2123, column: 19, scope: !12101)
!12103 = !DILocation(line: 2123, column: 6, scope: !12042)
!12104 = !DILocation(line: 2125, column: 17, scope: !12105)
!12105 = distinct !DILexicalBlock(scope: !12101, file: !3, line: 2123, column: 41)
!12106 = !DILocation(line: 2125, column: 21, scope: !12105)
!12107 = !DILocation(line: 2125, column: 3, scope: !12105)
!12108 = !DILocation(line: 2126, column: 2, scope: !12105)
!12109 = !DILocation(line: 2123, column: 21, scope: !12101)
!12110 = !DILabel(scope: !12042, name: "out", file: !3, line: 2129)
!12111 = !DILocation(line: 2129, column: 1, scope: !12042)
!12112 = !DILocation(line: 2130, column: 15, scope: !12042)
!12113 = !DILocation(line: 2130, column: 19, scope: !12042)
!12114 = !DILocation(line: 394, column: 2, scope: !12115, inlinedAt: !12046)
!12115 = distinct !DILexicalBlock(scope: !12044, file: !7877, line: 394, column: 2)
!12116 = !{i32 -2145385508}
!12117 = !DILocation(line: 394, column: 2, scope: !12118, inlinedAt: !12046)
!12118 = distinct !DILexicalBlock(scope: !12115, file: !7877, line: 394, column: 2)
!12119 = !DILocation(line: 2132, column: 2, scope: !12042)
!12120 = distinct !DISubprogram(name: "happy_meal_is_not_so_happy", scope: !3, file: !3, line: 1770, type: !12121, scopeLine: 1771, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!12121 = !DISubroutineType(types: !12122)
!12122 = !{!32, !7554, !987}
!12123 = !DILocalVariable(name: "hp", arg: 1, scope: !12120, file: !3, line: 1770, type: !7554)
!12124 = !DILocation(line: 1770, column: 58, scope: !12120)
!12125 = !DILocalVariable(name: "status", arg: 2, scope: !12120, file: !3, line: 1770, type: !987)
!12126 = !DILocation(line: 1770, column: 66, scope: !12120)
!12127 = !DILocalVariable(name: "reset", scope: !12120, file: !3, line: 1772, type: !32)
!12128 = !DILocation(line: 1772, column: 6, scope: !12120)
!12129 = !DILocation(line: 1775, column: 6, scope: !12130)
!12130 = distinct !DILexicalBlock(scope: !12120, file: !3, line: 1775, column: 6)
!12131 = !DILocation(line: 1775, column: 13, scope: !12130)
!12132 = !DILocation(line: 1775, column: 6, scope: !12120)
!12133 = !DILocation(line: 1782, column: 10, scope: !12130)
!12134 = !DILocation(line: 1782, column: 14, scope: !12130)
!12135 = !DILocation(line: 1782, column: 19, scope: !12130)
!12136 = !DILocation(line: 1782, column: 25, scope: !12130)
!12137 = !DILocation(line: 1781, column: 3, scope: !12130)
!12138 = !DILocation(line: 1784, column: 6, scope: !12139)
!12139 = distinct !DILexicalBlock(scope: !12120, file: !3, line: 1784, column: 6)
!12140 = !DILocation(line: 1784, column: 13, scope: !12139)
!12141 = !DILocation(line: 1784, column: 6, scope: !12120)
!12142 = !DILocation(line: 1787, column: 64, scope: !12143)
!12143 = distinct !DILexicalBlock(scope: !12139, file: !3, line: 1784, column: 34)
!12144 = !DILocation(line: 1787, column: 68, scope: !12143)
!12145 = !DILocation(line: 1787, column: 73, scope: !12143)
!12146 = !DILocation(line: 1787, column: 3, scope: !12143)
!12147 = !DILocation(line: 1788, column: 2, scope: !12143)
!12148 = !DILocation(line: 1790, column: 6, scope: !12149)
!12149 = distinct !DILexicalBlock(scope: !12120, file: !3, line: 1790, column: 6)
!12150 = !DILocation(line: 1790, column: 13, scope: !12149)
!12151 = !DILocation(line: 1790, column: 6, scope: !12120)
!12152 = !DILocation(line: 1792, column: 63, scope: !12153)
!12153 = distinct !DILexicalBlock(scope: !12149, file: !3, line: 1790, column: 34)
!12154 = !DILocation(line: 1792, column: 67, scope: !12153)
!12155 = !DILocation(line: 1792, column: 72, scope: !12153)
!12156 = !DILocation(line: 1792, column: 3, scope: !12153)
!12157 = !DILocation(line: 1793, column: 9, scope: !12153)
!12158 = !DILocation(line: 1794, column: 2, scope: !12153)
!12159 = !DILocation(line: 1796, column: 6, scope: !12160)
!12160 = distinct !DILexicalBlock(scope: !12120, file: !3, line: 1796, column: 6)
!12161 = !DILocation(line: 1796, column: 13, scope: !12160)
!12162 = !DILocation(line: 1796, column: 6, scope: !12120)
!12163 = !DILocation(line: 1799, column: 10, scope: !12164)
!12164 = distinct !DILexicalBlock(scope: !12160, file: !3, line: 1796, column: 36)
!12165 = !DILocation(line: 1799, column: 14, scope: !12164)
!12166 = !DILocation(line: 1799, column: 19, scope: !12164)
!12167 = !DILocation(line: 1798, column: 3, scope: !12164)
!12168 = !DILocation(line: 1800, column: 9, scope: !12164)
!12169 = !DILocation(line: 1801, column: 2, scope: !12164)
!12170 = !DILocation(line: 1803, column: 6, scope: !12171)
!12171 = distinct !DILexicalBlock(scope: !12120, file: !3, line: 1803, column: 6)
!12172 = !DILocation(line: 1803, column: 13, scope: !12171)
!12173 = !DILocation(line: 1803, column: 6, scope: !12120)
!12174 = !DILocation(line: 1807, column: 62, scope: !12175)
!12175 = distinct !DILexicalBlock(scope: !12171, file: !3, line: 1803, column: 36)
!12176 = !DILocation(line: 1807, column: 66, scope: !12175)
!12177 = !DILocation(line: 1807, column: 71, scope: !12175)
!12178 = !DILocation(line: 1807, column: 3, scope: !12175)
!12179 = !DILocation(line: 1808, column: 9, scope: !12175)
!12180 = !DILocation(line: 1809, column: 2, scope: !12175)
!12181 = !DILocation(line: 1811, column: 6, scope: !12182)
!12182 = distinct !DILexicalBlock(scope: !12120, file: !3, line: 1811, column: 6)
!12183 = !DILocation(line: 1811, column: 13, scope: !12182)
!12184 = !DILocation(line: 1811, column: 6, scope: !12120)
!12185 = !DILocation(line: 1819, column: 10, scope: !12186)
!12186 = distinct !DILexicalBlock(scope: !12182, file: !3, line: 1811, column: 32)
!12187 = !DILocation(line: 1819, column: 14, scope: !12186)
!12188 = !DILocation(line: 1819, column: 19, scope: !12186)
!12189 = !DILocation(line: 1817, column: 3, scope: !12186)
!12190 = !DILocation(line: 1820, column: 2, scope: !12186)
!12191 = !DILocation(line: 1822, column: 6, scope: !12192)
!12192 = distinct !DILexicalBlock(scope: !12120, file: !3, line: 1822, column: 6)
!12193 = !DILocation(line: 1822, column: 13, scope: !12192)
!12194 = !DILocation(line: 1822, column: 6, scope: !12120)
!12195 = !DILocation(line: 1824, column: 54, scope: !12196)
!12196 = distinct !DILexicalBlock(scope: !12192, file: !3, line: 1822, column: 68)
!12197 = !DILocation(line: 1824, column: 58, scope: !12196)
!12198 = !DILocation(line: 1824, column: 63, scope: !12196)
!12199 = !DILocation(line: 1824, column: 3, scope: !12196)
!12200 = !DILocation(line: 1825, column: 7, scope: !12201)
!12201 = distinct !DILexicalBlock(scope: !12196, file: !3, line: 1825, column: 7)
!12202 = !DILocation(line: 1825, column: 14, scope: !12201)
!12203 = !DILocation(line: 1825, column: 7, scope: !12196)
!12204 = !DILocation(line: 1826, column: 4, scope: !12201)
!12205 = !DILocation(line: 1827, column: 7, scope: !12206)
!12206 = distinct !DILexicalBlock(scope: !12196, file: !3, line: 1827, column: 7)
!12207 = !DILocation(line: 1827, column: 14, scope: !12206)
!12208 = !DILocation(line: 1827, column: 7, scope: !12196)
!12209 = !DILocation(line: 1828, column: 4, scope: !12206)
!12210 = !DILocation(line: 1829, column: 7, scope: !12211)
!12211 = distinct !DILexicalBlock(scope: !12196, file: !3, line: 1829, column: 7)
!12212 = !DILocation(line: 1829, column: 14, scope: !12211)
!12213 = !DILocation(line: 1829, column: 7, scope: !12196)
!12214 = !DILocation(line: 1830, column: 4, scope: !12211)
!12215 = !DILocation(line: 1831, column: 3, scope: !12196)
!12216 = !DILocation(line: 1832, column: 9, scope: !12196)
!12217 = !DILocation(line: 1833, column: 2, scope: !12196)
!12218 = !DILocation(line: 1835, column: 6, scope: !12219)
!12219 = distinct !DILexicalBlock(scope: !12120, file: !3, line: 1835, column: 6)
!12220 = !DILocation(line: 1835, column: 13, scope: !12219)
!12221 = !DILocation(line: 1835, column: 6, scope: !12120)
!12222 = !DILocation(line: 1840, column: 10, scope: !12223)
!12223 = distinct !DILexicalBlock(scope: !12219, file: !3, line: 1835, column: 33)
!12224 = !DILocation(line: 1840, column: 14, scope: !12223)
!12225 = !DILocation(line: 1840, column: 19, scope: !12223)
!12226 = !DILocation(line: 1839, column: 3, scope: !12223)
!12227 = !DILocation(line: 1841, column: 9, scope: !12223)
!12228 = !DILocation(line: 1842, column: 2, scope: !12223)
!12229 = !DILocation(line: 1844, column: 6, scope: !12230)
!12230 = distinct !DILexicalBlock(scope: !12120, file: !3, line: 1844, column: 6)
!12231 = !DILocation(line: 1844, column: 13, scope: !12230)
!12232 = !DILocation(line: 1844, column: 6, scope: !12120)
!12233 = !DILocation(line: 1846, column: 54, scope: !12234)
!12234 = distinct !DILexicalBlock(scope: !12230, file: !3, line: 1844, column: 33)
!12235 = !DILocation(line: 1846, column: 58, scope: !12234)
!12236 = !DILocation(line: 1846, column: 63, scope: !12234)
!12237 = !DILocation(line: 1846, column: 3, scope: !12234)
!12238 = !DILocation(line: 1847, column: 2, scope: !12234)
!12239 = !DILocation(line: 1849, column: 6, scope: !12240)
!12240 = distinct !DILexicalBlock(scope: !12120, file: !3, line: 1849, column: 6)
!12241 = !DILocation(line: 1849, column: 13, scope: !12240)
!12242 = !DILocation(line: 1849, column: 6, scope: !12120)
!12243 = !DILocation(line: 1852, column: 54, scope: !12244)
!12244 = distinct !DILexicalBlock(scope: !12240, file: !3, line: 1850, column: 77)
!12245 = !DILocation(line: 1852, column: 58, scope: !12244)
!12246 = !DILocation(line: 1852, column: 63, scope: !12244)
!12247 = !DILocation(line: 1852, column: 3, scope: !12244)
!12248 = !DILocation(line: 1853, column: 7, scope: !12249)
!12249 = distinct !DILexicalBlock(scope: !12244, file: !3, line: 1853, column: 7)
!12250 = !DILocation(line: 1853, column: 14, scope: !12249)
!12251 = !DILocation(line: 1853, column: 7, scope: !12244)
!12252 = !DILocation(line: 1854, column: 4, scope: !12249)
!12253 = !DILocation(line: 1855, column: 7, scope: !12254)
!12254 = distinct !DILexicalBlock(scope: !12244, file: !3, line: 1855, column: 7)
!12255 = !DILocation(line: 1855, column: 14, scope: !12254)
!12256 = !DILocation(line: 1855, column: 7, scope: !12244)
!12257 = !DILocation(line: 1856, column: 4, scope: !12254)
!12258 = !DILocation(line: 1857, column: 7, scope: !12259)
!12259 = distinct !DILexicalBlock(scope: !12244, file: !3, line: 1857, column: 7)
!12260 = !DILocation(line: 1857, column: 14, scope: !12259)
!12261 = !DILocation(line: 1857, column: 7, scope: !12244)
!12262 = !DILocation(line: 1858, column: 4, scope: !12259)
!12263 = !DILocation(line: 1859, column: 7, scope: !12264)
!12264 = distinct !DILexicalBlock(scope: !12244, file: !3, line: 1859, column: 7)
!12265 = !DILocation(line: 1859, column: 14, scope: !12264)
!12266 = !DILocation(line: 1859, column: 7, scope: !12244)
!12267 = !DILocation(line: 1860, column: 4, scope: !12264)
!12268 = !DILocation(line: 1861, column: 3, scope: !12244)
!12269 = !DILocation(line: 1862, column: 9, scope: !12244)
!12270 = !DILocation(line: 1863, column: 2, scope: !12244)
!12271 = !DILocation(line: 1865, column: 6, scope: !12272)
!12272 = distinct !DILexicalBlock(scope: !12120, file: !3, line: 1865, column: 6)
!12273 = !DILocation(line: 1865, column: 13, scope: !12272)
!12274 = !DILocation(line: 1865, column: 6, scope: !12120)
!12275 = !DILocation(line: 1870, column: 10, scope: !12276)
!12276 = distinct !DILexicalBlock(scope: !12272, file: !3, line: 1865, column: 53)
!12277 = !DILocation(line: 1870, column: 14, scope: !12276)
!12278 = !DILocation(line: 1870, column: 19, scope: !12276)
!12279 = !DILocation(line: 1871, column: 11, scope: !12276)
!12280 = !DILocation(line: 1871, column: 18, scope: !12276)
!12281 = !DILocation(line: 1871, column: 10, scope: !12276)
!12282 = !DILocation(line: 1869, column: 3, scope: !12276)
!12283 = !DILocation(line: 1872, column: 9, scope: !12276)
!12284 = !DILocation(line: 1873, column: 2, scope: !12276)
!12285 = !DILocation(line: 1875, column: 6, scope: !12286)
!12286 = distinct !DILexicalBlock(scope: !12120, file: !3, line: 1875, column: 6)
!12287 = !DILocation(line: 1875, column: 6, scope: !12120)
!12288 = !DILocation(line: 1876, column: 44, scope: !12289)
!12289 = distinct !DILexicalBlock(scope: !12286, file: !3, line: 1875, column: 13)
!12290 = !DILocation(line: 1876, column: 48, scope: !12289)
!12291 = !DILocation(line: 1876, column: 53, scope: !12289)
!12292 = !DILocation(line: 1876, column: 3, scope: !12289)
!12293 = !DILocation(line: 1877, column: 19, scope: !12289)
!12294 = !DILocation(line: 1877, column: 3, scope: !12289)
!12295 = !DILocation(line: 1878, column: 3, scope: !12289)
!12296 = !DILocation(line: 1880, column: 2, scope: !12120)
!12297 = !DILocation(line: 1881, column: 1, scope: !12120)
!12298 = distinct !DISubprogram(name: "happy_meal_mif_interrupt", scope: !3, file: !3, line: 1884, type: !9190, scopeLine: 1885, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!12299 = !DILocalVariable(name: "hp", arg: 1, scope: !12298, file: !3, line: 1884, type: !7554)
!12300 = !DILocation(line: 1884, column: 57, scope: !12298)
!12301 = !DILocalVariable(name: "tregs", scope: !12298, file: !3, line: 1886, type: !591)
!12302 = !DILocation(line: 1886, column: 16, scope: !12298)
!12303 = !DILocation(line: 1886, column: 24, scope: !12298)
!12304 = !DILocation(line: 1886, column: 28, scope: !12298)
!12305 = !DILocation(line: 1888, column: 48, scope: !12298)
!12306 = !DILocation(line: 1888, column: 52, scope: !12298)
!12307 = !DILocation(line: 1888, column: 57, scope: !12298)
!12308 = !DILocation(line: 1888, column: 2, scope: !12298)
!12309 = !DILocation(line: 1889, column: 37, scope: !12298)
!12310 = !DILocation(line: 1889, column: 41, scope: !12298)
!12311 = !DILocation(line: 1889, column: 16, scope: !12298)
!12312 = !DILocation(line: 1889, column: 2, scope: !12298)
!12313 = !DILocation(line: 1889, column: 6, scope: !12298)
!12314 = !DILocation(line: 1889, column: 14, scope: !12298)
!12315 = !DILocation(line: 1890, column: 36, scope: !12298)
!12316 = !DILocation(line: 1890, column: 40, scope: !12298)
!12317 = !DILocation(line: 1890, column: 15, scope: !12298)
!12318 = !DILocation(line: 1890, column: 2, scope: !12298)
!12319 = !DILocation(line: 1890, column: 6, scope: !12298)
!12320 = !DILocation(line: 1890, column: 13, scope: !12298)
!12321 = !DILocation(line: 1893, column: 6, scope: !12322)
!12322 = distinct !DILexicalBlock(scope: !12298, file: !3, line: 1893, column: 6)
!12323 = !DILocation(line: 1893, column: 10, scope: !12322)
!12324 = !DILocation(line: 1893, column: 17, scope: !12322)
!12325 = !DILocation(line: 1893, column: 6, scope: !12298)
!12326 = !DILocation(line: 1894, column: 64, scope: !12327)
!12327 = distinct !DILexicalBlock(scope: !12322, file: !3, line: 1893, column: 32)
!12328 = !DILocation(line: 1894, column: 68, scope: !12327)
!12329 = !DILocation(line: 1894, column: 73, scope: !12327)
!12330 = !DILocation(line: 1894, column: 3, scope: !12327)
!12331 = !DILocation(line: 1895, column: 3, scope: !12327)
!12332 = !DILocation(line: 1895, column: 7, scope: !12327)
!12333 = !DILocation(line: 1895, column: 15, scope: !12327)
!12334 = !DILocation(line: 1896, column: 2, scope: !12327)
!12335 = !DILocation(line: 1896, column: 13, scope: !12336)
!12336 = distinct !DILexicalBlock(scope: !12322, file: !3, line: 1896, column: 13)
!12337 = !DILocation(line: 1896, column: 17, scope: !12336)
!12338 = !DILocation(line: 1896, column: 24, scope: !12336)
!12339 = !DILocation(line: 1896, column: 13, scope: !12322)
!12340 = !DILocation(line: 1897, column: 64, scope: !12341)
!12341 = distinct !DILexicalBlock(scope: !12336, file: !3, line: 1896, column: 39)
!12342 = !DILocation(line: 1897, column: 68, scope: !12341)
!12343 = !DILocation(line: 1897, column: 73, scope: !12341)
!12344 = !DILocation(line: 1897, column: 3, scope: !12341)
!12345 = !DILocation(line: 1898, column: 3, scope: !12341)
!12346 = !DILocation(line: 1898, column: 7, scope: !12341)
!12347 = !DILocation(line: 1898, column: 15, scope: !12341)
!12348 = !DILocation(line: 1899, column: 2, scope: !12341)
!12349 = !DILocation(line: 1899, column: 13, scope: !12350)
!12350 = distinct !DILexicalBlock(scope: !12336, file: !3, line: 1899, column: 13)
!12351 = !DILocation(line: 1899, column: 17, scope: !12350)
!12352 = !DILocation(line: 1899, column: 24, scope: !12350)
!12353 = !DILocation(line: 1899, column: 13, scope: !12336)
!12354 = !DILocation(line: 1900, column: 63, scope: !12355)
!12355 = distinct !DILexicalBlock(scope: !12350, file: !3, line: 1899, column: 38)
!12356 = !DILocation(line: 1900, column: 67, scope: !12355)
!12357 = !DILocation(line: 1900, column: 72, scope: !12355)
!12358 = !DILocation(line: 1900, column: 3, scope: !12355)
!12359 = !DILocation(line: 1901, column: 3, scope: !12355)
!12360 = !DILocation(line: 1901, column: 7, scope: !12355)
!12361 = !DILocation(line: 1901, column: 15, scope: !12355)
!12362 = !DILocation(line: 1902, column: 2, scope: !12355)
!12363 = !DILocation(line: 1903, column: 56, scope: !12364)
!12364 = distinct !DILexicalBlock(scope: !12350, file: !3, line: 1902, column: 9)
!12365 = !DILocation(line: 1903, column: 60, scope: !12364)
!12366 = !DILocation(line: 1903, column: 65, scope: !12364)
!12367 = !DILocation(line: 1903, column: 3, scope: !12364)
!12368 = !DILocation(line: 1905, column: 24, scope: !12298)
!12369 = !DILocation(line: 1905, column: 28, scope: !12298)
!12370 = !DILocation(line: 1905, column: 45, scope: !12298)
!12371 = !DILocation(line: 1905, column: 49, scope: !12298)
!12372 = !DILocation(line: 1905, column: 2, scope: !12298)
!12373 = !DILocation(line: 1908, column: 23, scope: !12298)
!12374 = !DILocation(line: 1908, column: 27, scope: !12298)
!12375 = !DILocation(line: 1908, column: 2, scope: !12298)
!12376 = !DILocation(line: 1909, column: 1, scope: !12298)
!12377 = distinct !DISubprogram(name: "happy_meal_tx", scope: !3, file: !3, line: 1918, type: !9190, scopeLine: 1919, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!12378 = !DILocalVariable(name: "hp", arg: 1, scope: !12377, file: !3, line: 1918, type: !7554)
!12379 = !DILocation(line: 1918, column: 46, scope: !12377)
!12380 = !DILocalVariable(name: "txbase", scope: !12377, file: !3, line: 1920, type: !11235)
!12381 = !DILocation(line: 1920, column: 25, scope: !12377)
!12382 = !DILocation(line: 1920, column: 35, scope: !12377)
!12383 = !DILocation(line: 1920, column: 39, scope: !12377)
!12384 = !DILocation(line: 1920, column: 52, scope: !12377)
!12385 = !DILocalVariable(name: "this", scope: !12377, file: !3, line: 1921, type: !11235)
!12386 = !DILocation(line: 1921, column: 25, scope: !12377)
!12387 = !DILocalVariable(name: "dev", scope: !12377, file: !3, line: 1922, type: !290)
!12388 = !DILocation(line: 1922, column: 21, scope: !12377)
!12389 = !DILocation(line: 1922, column: 27, scope: !12377)
!12390 = !DILocation(line: 1922, column: 31, scope: !12377)
!12391 = !DILocalVariable(name: "elem", scope: !12377, file: !3, line: 1923, type: !32)
!12392 = !DILocation(line: 1923, column: 6, scope: !12377)
!12393 = !DILocation(line: 1925, column: 9, scope: !12377)
!12394 = !DILocation(line: 1925, column: 13, scope: !12377)
!12395 = !DILocation(line: 1925, column: 7, scope: !12377)
!12396 = !DILocation(line: 1927, column: 2, scope: !12377)
!12397 = !DILocation(line: 1927, column: 9, scope: !12377)
!12398 = !DILocation(line: 1927, column: 17, scope: !12377)
!12399 = !DILocation(line: 1927, column: 21, scope: !12377)
!12400 = !DILocation(line: 1927, column: 14, scope: !12377)
!12401 = !DILocalVariable(name: "skb", scope: !12402, file: !3, line: 1928, type: !415)
!12402 = distinct !DILexicalBlock(scope: !12377, file: !3, line: 1927, column: 29)
!12403 = !DILocation(line: 1928, column: 19, scope: !12402)
!12404 = !DILocalVariable(name: "flags", scope: !12402, file: !3, line: 1929, type: !987)
!12405 = !DILocation(line: 1929, column: 7, scope: !12402)
!12406 = !DILocalVariable(name: "dma_addr", scope: !12402, file: !3, line: 1929, type: !987)
!12407 = !DILocation(line: 1929, column: 14, scope: !12402)
!12408 = !DILocalVariable(name: "dma_len", scope: !12402, file: !3, line: 1929, type: !987)
!12409 = !DILocation(line: 1929, column: 24, scope: !12402)
!12410 = !DILocalVariable(name: "frag", scope: !12402, file: !3, line: 1930, type: !32)
!12411 = !DILocation(line: 1930, column: 7, scope: !12402)
!12412 = !DILocation(line: 1933, column: 11, scope: !12402)
!12413 = !DILocation(line: 1933, column: 18, scope: !12402)
!12414 = !DILocation(line: 1933, column: 8, scope: !12402)
!12415 = !DILocation(line: 1934, column: 27, scope: !12402)
!12416 = !DILocation(line: 1934, column: 32, scope: !12402)
!12417 = !DILocation(line: 1934, column: 38, scope: !12402)
!12418 = !DILocation(line: 1934, column: 11, scope: !12402)
!12419 = !DILocation(line: 1934, column: 9, scope: !12402)
!12420 = !DILocation(line: 1935, column: 7, scope: !12421)
!12421 = distinct !DILexicalBlock(scope: !12402, file: !3, line: 1935, column: 7)
!12422 = !DILocation(line: 1935, column: 13, scope: !12421)
!12423 = !DILocation(line: 1935, column: 7, scope: !12402)
!12424 = !DILocation(line: 1936, column: 4, scope: !12421)
!12425 = !DILocation(line: 1937, column: 9, scope: !12402)
!12426 = !DILocation(line: 1937, column: 13, scope: !12402)
!12427 = !DILocation(line: 1937, column: 21, scope: !12402)
!12428 = !DILocation(line: 1937, column: 7, scope: !12402)
!12429 = !DILocation(line: 1938, column: 7, scope: !12430)
!12430 = distinct !DILexicalBlock(scope: !12402, file: !3, line: 1938, column: 7)
!12431 = !DILocation(line: 1938, column: 24, scope: !12430)
!12432 = !DILocation(line: 1938, column: 7, scope: !12402)
!12433 = !DILocalVariable(name: "last", scope: !12434, file: !3, line: 1939, type: !32)
!12434 = distinct !DILexicalBlock(scope: !12430, file: !3, line: 1938, column: 34)
!12435 = !DILocation(line: 1939, column: 8, scope: !12434)
!12436 = !DILocation(line: 1941, column: 11, scope: !12434)
!12437 = !DILocation(line: 1941, column: 18, scope: !12434)
!12438 = !DILocation(line: 1941, column: 35, scope: !12434)
!12439 = !DILocation(line: 1941, column: 16, scope: !12434)
!12440 = !DILocation(line: 1941, column: 9, scope: !12434)
!12441 = !DILocation(line: 1942, column: 9, scope: !12434)
!12442 = !DILocation(line: 1943, column: 28, scope: !12434)
!12443 = !DILocation(line: 1943, column: 33, scope: !12434)
!12444 = !DILocation(line: 1943, column: 40, scope: !12434)
!12445 = !DILocation(line: 1943, column: 46, scope: !12434)
!12446 = !DILocation(line: 1943, column: 12, scope: !12434)
!12447 = !DILocation(line: 1943, column: 10, scope: !12434)
!12448 = !DILocation(line: 1944, column: 8, scope: !12449)
!12449 = distinct !DILexicalBlock(scope: !12434, file: !3, line: 1944, column: 8)
!12450 = !DILocation(line: 1944, column: 14, scope: !12449)
!12451 = !DILocation(line: 1944, column: 8, scope: !12434)
!12452 = !DILocation(line: 1945, column: 5, scope: !12449)
!12453 = !DILocation(line: 1946, column: 3, scope: !12434)
!12454 = !DILocation(line: 1947, column: 3, scope: !12402)
!12455 = !DILocation(line: 1947, column: 7, scope: !12402)
!12456 = !DILocation(line: 1947, column: 15, scope: !12402)
!12457 = !DILocation(line: 1947, column: 21, scope: !12402)
!12458 = !DILocation(line: 1948, column: 26, scope: !12402)
!12459 = !DILocation(line: 1948, column: 31, scope: !12402)
!12460 = !DILocation(line: 1948, column: 3, scope: !12402)
!12461 = !DILocation(line: 1948, column: 8, scope: !12402)
!12462 = !DILocation(line: 1948, column: 14, scope: !12402)
!12463 = !DILocation(line: 1948, column: 23, scope: !12402)
!12464 = !DILocation(line: 1950, column: 13, scope: !12465)
!12465 = distinct !DILexicalBlock(scope: !12402, file: !3, line: 1950, column: 3)
!12466 = !DILocation(line: 1950, column: 8, scope: !12465)
!12467 = !DILocation(line: 1950, column: 18, scope: !12468)
!12468 = distinct !DILexicalBlock(scope: !12465, file: !3, line: 1950, column: 3)
!12469 = !DILocation(line: 1950, column: 26, scope: !12468)
!12470 = !DILocation(line: 1950, column: 43, scope: !12468)
!12471 = !DILocation(line: 1950, column: 23, scope: !12468)
!12472 = !DILocation(line: 1950, column: 3, scope: !12465)
!12473 = !DILocation(line: 1951, column: 31, scope: !12474)
!12474 = distinct !DILexicalBlock(scope: !12468, file: !3, line: 1950, column: 61)
!12475 = !DILocation(line: 1951, column: 36, scope: !12474)
!12476 = !DILocation(line: 1951, column: 42, scope: !12474)
!12477 = !DILocation(line: 1951, column: 15, scope: !12474)
!12478 = !DILocation(line: 1951, column: 13, scope: !12474)
!12479 = !DILocation(line: 1952, column: 30, scope: !12474)
!12480 = !DILocation(line: 1952, column: 35, scope: !12474)
!12481 = !DILocation(line: 1952, column: 41, scope: !12474)
!12482 = !DILocation(line: 1952, column: 14, scope: !12474)
!12483 = !DILocation(line: 1952, column: 12, scope: !12474)
!12484 = !DILocation(line: 1954, column: 12, scope: !12474)
!12485 = !DILocation(line: 1955, column: 9, scope: !12486)
!12486 = distinct !DILexicalBlock(scope: !12474, file: !3, line: 1955, column: 8)
!12487 = !DILocation(line: 1955, column: 8, scope: !12474)
!12488 = !DILocation(line: 1956, column: 5, scope: !12486)
!12489 = !DILocation(line: 1958, column: 5, scope: !12486)
!12490 = !DILocation(line: 1960, column: 11, scope: !12474)
!12491 = !DILocation(line: 1960, column: 9, scope: !12474)
!12492 = !DILocation(line: 1961, column: 12, scope: !12474)
!12493 = !DILocation(line: 1961, column: 19, scope: !12474)
!12494 = !DILocation(line: 1961, column: 9, scope: !12474)
!12495 = !DILocation(line: 1962, column: 3, scope: !12474)
!12496 = !DILocation(line: 1950, column: 57, scope: !12468)
!12497 = !DILocation(line: 1950, column: 3, scope: !12468)
!12498 = distinct !{!12498, !12472, !12499}
!12499 = !DILocation(line: 1962, column: 3, scope: !12465)
!12500 = !DILocation(line: 1964, column: 23, scope: !12402)
!12501 = !DILocation(line: 1964, column: 3, scope: !12402)
!12502 = !DILocation(line: 1965, column: 3, scope: !12402)
!12503 = !DILocation(line: 1965, column: 8, scope: !12402)
!12504 = !DILocation(line: 1965, column: 14, scope: !12402)
!12505 = !DILocation(line: 1965, column: 24, scope: !12402)
!12506 = distinct !{!12506, !12396, !12507}
!12507 = !DILocation(line: 1966, column: 2, scope: !12377)
!12508 = !DILocation(line: 1967, column: 15, scope: !12377)
!12509 = !DILocation(line: 1967, column: 2, scope: !12377)
!12510 = !DILocation(line: 1967, column: 6, scope: !12377)
!12511 = !DILocation(line: 1967, column: 13, scope: !12377)
!12512 = !DILocation(line: 1970, column: 26, scope: !12513)
!12513 = distinct !DILexicalBlock(scope: !12377, file: !3, line: 1970, column: 6)
!12514 = !DILocation(line: 1970, column: 6, scope: !12513)
!12515 = !DILocation(line: 1970, column: 31, scope: !12513)
!12516 = !DILocation(line: 1971, column: 6, scope: !12513)
!12517 = !DILocation(line: 1971, column: 25, scope: !12513)
!12518 = !DILocation(line: 1970, column: 6, scope: !12377)
!12519 = !DILocation(line: 1972, column: 20, scope: !12513)
!12520 = !DILocation(line: 1972, column: 3, scope: !12513)
!12521 = !DILocation(line: 1973, column: 1, scope: !12377)
!12522 = distinct !DISubprogram(name: "happy_meal_rx", scope: !3, file: !3, line: 1990, type: !12523, scopeLine: 1991, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!12523 = !DISubroutineType(types: !12524)
!12524 = !{null, !7554, !290}
!12525 = !DILocalVariable(name: "hp", arg: 1, scope: !12522, file: !3, line: 1990, type: !7554)
!12526 = !DILocation(line: 1990, column: 46, scope: !12522)
!12527 = !DILocalVariable(name: "dev", arg: 2, scope: !12522, file: !3, line: 1990, type: !290)
!12528 = !DILocation(line: 1990, column: 69, scope: !12522)
!12529 = !DILocalVariable(name: "rxbase", scope: !12522, file: !3, line: 1992, type: !11187)
!12530 = !DILocation(line: 1992, column: 25, scope: !12522)
!12531 = !DILocation(line: 1992, column: 35, scope: !12522)
!12532 = !DILocation(line: 1992, column: 39, scope: !12522)
!12533 = !DILocation(line: 1992, column: 52, scope: !12522)
!12534 = !DILocalVariable(name: "this", scope: !12522, file: !3, line: 1993, type: !11187)
!12535 = !DILocation(line: 1993, column: 25, scope: !12522)
!12536 = !DILocalVariable(name: "elem", scope: !12522, file: !3, line: 1994, type: !32)
!12537 = !DILocation(line: 1994, column: 6, scope: !12522)
!12538 = !DILocation(line: 1994, column: 13, scope: !12522)
!12539 = !DILocation(line: 1994, column: 17, scope: !12522)
!12540 = !DILocalVariable(name: "drops", scope: !12522, file: !3, line: 1994, type: !32)
!12541 = !DILocation(line: 1994, column: 25, scope: !12522)
!12542 = !DILocalVariable(name: "flags", scope: !12522, file: !3, line: 1995, type: !987)
!12543 = !DILocation(line: 1995, column: 6, scope: !12522)
!12544 = !DILocation(line: 1998, column: 10, scope: !12522)
!12545 = !DILocation(line: 1998, column: 17, scope: !12522)
!12546 = !DILocation(line: 1998, column: 7, scope: !12522)
!12547 = !DILocation(line: 1999, column: 2, scope: !12522)
!12548 = !DILocation(line: 1999, column: 36, scope: !12522)
!12549 = !DILocation(line: 1999, column: 41, scope: !12522)
!12550 = !DILocation(line: 1999, column: 47, scope: !12522)
!12551 = !DILocation(line: 1999, column: 20, scope: !12522)
!12552 = !DILocation(line: 1999, column: 18, scope: !12522)
!12553 = !DILocation(line: 1999, column: 58, scope: !12522)
!12554 = !DILocation(line: 1999, column: 9, scope: !12522)
!12555 = !DILocalVariable(name: "skb", scope: !12556, file: !3, line: 2000, type: !415)
!12556 = distinct !DILexicalBlock(scope: !12522, file: !3, line: 1999, column: 73)
!12557 = !DILocation(line: 2000, column: 19, scope: !12556)
!12558 = !DILocalVariable(name: "len", scope: !12556, file: !3, line: 2001, type: !32)
!12559 = !DILocation(line: 2001, column: 7, scope: !12556)
!12560 = !DILocation(line: 2001, column: 13, scope: !12556)
!12561 = !DILocation(line: 2001, column: 19, scope: !12556)
!12562 = !DILocalVariable(name: "csum", scope: !12556, file: !3, line: 2002, type: !581)
!12563 = !DILocation(line: 2002, column: 7, scope: !12556)
!12564 = !DILocation(line: 2002, column: 14, scope: !12556)
!12565 = !DILocation(line: 2002, column: 20, scope: !12556)
!12566 = !DILocalVariable(name: "dma_addr", scope: !12556, file: !3, line: 2003, type: !987)
!12567 = !DILocation(line: 2003, column: 7, scope: !12556)
!12568 = !DILocation(line: 2003, column: 34, scope: !12556)
!12569 = !DILocation(line: 2003, column: 39, scope: !12556)
!12570 = !DILocation(line: 2003, column: 45, scope: !12556)
!12571 = !DILocation(line: 2003, column: 18, scope: !12556)
!12572 = !DILocation(line: 2008, column: 8, scope: !12573)
!12573 = distinct !DILexicalBlock(scope: !12556, file: !3, line: 2008, column: 7)
!12574 = !DILocation(line: 2008, column: 12, scope: !12573)
!12575 = !DILocation(line: 2008, column: 24, scope: !12573)
!12576 = !DILocation(line: 2008, column: 28, scope: !12573)
!12577 = !DILocation(line: 2008, column: 34, scope: !12573)
!12578 = !DILocation(line: 2008, column: 7, scope: !12556)
!12579 = !DILocation(line: 2010, column: 4, scope: !12580)
!12580 = distinct !DILexicalBlock(scope: !12573, file: !3, line: 2008, column: 54)
!12581 = !DILocation(line: 2010, column: 9, scope: !12580)
!12582 = !DILocation(line: 2010, column: 15, scope: !12580)
!12583 = !DILocation(line: 2010, column: 24, scope: !12580)
!12584 = !DILocation(line: 2011, column: 8, scope: !12585)
!12585 = distinct !DILexicalBlock(scope: !12580, file: !3, line: 2011, column: 8)
!12586 = !DILocation(line: 2011, column: 12, scope: !12585)
!12587 = !DILocation(line: 2011, column: 8, scope: !12580)
!12588 = !DILocation(line: 2012, column: 5, scope: !12585)
!12589 = !DILocation(line: 2012, column: 10, scope: !12585)
!12590 = !DILocation(line: 2012, column: 16, scope: !12585)
!12591 = !DILocation(line: 2012, column: 32, scope: !12585)
!12592 = !DILocation(line: 2013, column: 8, scope: !12593)
!12593 = distinct !DILexicalBlock(scope: !12580, file: !3, line: 2013, column: 8)
!12594 = !DILocation(line: 2013, column: 12, scope: !12593)
!12595 = !DILocation(line: 2013, column: 8, scope: !12580)
!12596 = !DILocation(line: 2014, column: 5, scope: !12597)
!12597 = distinct !DILexicalBlock(scope: !12593, file: !3, line: 2013, column: 39)
!12598 = !DILocation(line: 2014, column: 10, scope: !12597)
!12599 = !DILocation(line: 2014, column: 16, scope: !12597)
!12600 = !DILocation(line: 2014, column: 30, scope: !12597)
!12601 = !DILocation(line: 2015, column: 5, scope: !12597)
!12602 = !DILocation(line: 2015, column: 10, scope: !12597)
!12603 = !DILocation(line: 2015, column: 16, scope: !12597)
!12604 = !DILocation(line: 2015, column: 30, scope: !12597)
!12605 = !DILocation(line: 2016, column: 4, scope: !12597)
!12606 = !DILocation(line: 2013, column: 36, scope: !12593)
!12607 = !DILabel(scope: !12580, name: "drop_it", file: !3, line: 2019)
!12608 = !DILocation(line: 2019, column: 2, scope: !12580)
!12609 = !DILocation(line: 2020, column: 4, scope: !12580)
!12610 = !DILocation(line: 2020, column: 9, scope: !12580)
!12611 = !DILocation(line: 2020, column: 15, scope: !12580)
!12612 = !DILocation(line: 2020, column: 25, scope: !12580)
!12613 = !DILocation(line: 2021, column: 4, scope: !12580)
!12614 = !DILocation(line: 2021, column: 4, scope: !12615)
!12615 = distinct !DILexicalBlock(scope: !12580, file: !3, line: 2021, column: 4)
!12616 = !{i32 -2139625954}
!12617 = !DILocation(line: 2024, column: 4, scope: !12580)
!12618 = !DILocation(line: 2026, column: 9, scope: !12556)
!12619 = !DILocation(line: 2026, column: 13, scope: !12556)
!12620 = !DILocation(line: 2026, column: 21, scope: !12556)
!12621 = !DILocation(line: 2026, column: 7, scope: !12556)
!12622 = !DILocation(line: 2027, column: 7, scope: !12623)
!12623 = distinct !DILexicalBlock(scope: !12556, file: !3, line: 2027, column: 7)
!12624 = !DILocation(line: 2027, column: 11, scope: !12623)
!12625 = !DILocation(line: 2027, column: 7, scope: !12556)
!12626 = !DILocalVariable(name: "new_skb", scope: !12627, file: !3, line: 2028, type: !415)
!12627 = distinct !DILexicalBlock(scope: !12623, file: !3, line: 2027, column: 32)
!12628 = !DILocation(line: 2028, column: 20, scope: !12627)
!12629 = !DILocalVariable(name: "mapping", scope: !12627, file: !3, line: 2029, type: !987)
!12630 = !DILocation(line: 2029, column: 8, scope: !12627)
!12631 = !DILocalVariable(name: "__skb", scope: !12632, file: !3, line: 2032, type: !415)
!12632 = distinct !DILexicalBlock(scope: !12627, file: !3, line: 2032, column: 14)
!12633 = !DILocation(line: 2032, column: 14, scope: !12632)
!12634 = !DILocation(line: 2032, column: 14, scope: !12635)
!12635 = distinct !DILexicalBlock(scope: !12632, file: !3, line: 2032, column: 14)
!12636 = !DILocalVariable(name: "__offset", scope: !12637, file: !3, line: 2032, type: !32)
!12637 = distinct !DILexicalBlock(scope: !12635, file: !3, line: 2032, column: 14)
!12638 = !DILocation(line: 2032, column: 14, scope: !12637)
!12639 = !DILocation(line: 2032, column: 14, scope: !12640)
!12640 = distinct !DILexicalBlock(scope: !12637, file: !3, line: 2032, column: 14)
!12641 = !DILocation(line: 2032, column: 12, scope: !12627)
!12642 = !DILocation(line: 2033, column: 8, scope: !12643)
!12643 = distinct !DILexicalBlock(scope: !12627, file: !3, line: 2033, column: 8)
!12644 = !DILocation(line: 2033, column: 16, scope: !12643)
!12645 = !DILocation(line: 2033, column: 8, scope: !12627)
!12646 = !DILocation(line: 2034, column: 10, scope: !12647)
!12647 = distinct !DILexicalBlock(scope: !12643, file: !3, line: 2033, column: 25)
!12648 = !DILocation(line: 2035, column: 5, scope: !12647)
!12649 = !DILocation(line: 2037, column: 12, scope: !12627)
!12650 = !DILocation(line: 2037, column: 4, scope: !12627)
!12651 = !DILocation(line: 2038, column: 14, scope: !12627)
!12652 = !DILocation(line: 2038, column: 12, scope: !12627)
!12653 = !DILocation(line: 2041, column: 8, scope: !12654)
!12654 = distinct !DILexicalBlock(scope: !12627, file: !3, line: 2041, column: 8)
!12655 = !DILocation(line: 2041, column: 8, scope: !12627)
!12656 = !DILocation(line: 2042, column: 23, scope: !12657)
!12657 = distinct !DILexicalBlock(scope: !12654, file: !3, line: 2041, column: 59)
!12658 = !DILocation(line: 2042, column: 5, scope: !12657)
!12659 = !DILocation(line: 2043, column: 10, scope: !12657)
!12660 = !DILocation(line: 2044, column: 5, scope: !12657)
!12661 = !DILocation(line: 2047, column: 4, scope: !12627)
!12662 = !DILocation(line: 2048, column: 24, scope: !12627)
!12663 = !DILocation(line: 2048, column: 4, scope: !12627)
!12664 = !DILocation(line: 2048, column: 8, scope: !12627)
!12665 = !DILocation(line: 2048, column: 16, scope: !12627)
!12666 = !DILocation(line: 2048, column: 22, scope: !12627)
!12667 = !DILocation(line: 2049, column: 4, scope: !12627)
!12668 = !DILocation(line: 2049, column: 4, scope: !12669)
!12669 = distinct !DILexicalBlock(scope: !12627, file: !3, line: 2049, column: 4)
!12670 = !{i32 -2139624561}
!12671 = !DILocation(line: 2052, column: 16, scope: !12627)
!12672 = !DILocation(line: 2052, column: 4, scope: !12627)
!12673 = !DILocation(line: 2055, column: 13, scope: !12627)
!12674 = !DILocation(line: 2055, column: 18, scope: !12627)
!12675 = !DILocation(line: 2055, column: 4, scope: !12627)
!12676 = !DILocation(line: 2056, column: 3, scope: !12627)
!12677 = !DILocalVariable(name: "copy_skb", scope: !12678, file: !3, line: 2057, type: !415)
!12678 = distinct !DILexicalBlock(scope: !12623, file: !3, line: 2056, column: 10)
!12679 = !DILocation(line: 2057, column: 20, scope: !12678)
!12680 = !DILocation(line: 2057, column: 48, scope: !12678)
!12681 = !DILocation(line: 2057, column: 53, scope: !12678)
!12682 = !DILocation(line: 2057, column: 57, scope: !12678)
!12683 = !DILocation(line: 2057, column: 31, scope: !12678)
!12684 = !DILocation(line: 2059, column: 8, scope: !12685)
!12685 = distinct !DILexicalBlock(scope: !12678, file: !3, line: 2059, column: 8)
!12686 = !DILocation(line: 2059, column: 17, scope: !12685)
!12687 = !DILocation(line: 2059, column: 8, scope: !12678)
!12688 = !DILocation(line: 2060, column: 10, scope: !12689)
!12689 = distinct !DILexicalBlock(scope: !12685, file: !3, line: 2059, column: 26)
!12690 = !DILocation(line: 2061, column: 5, scope: !12689)
!12691 = !DILocation(line: 2064, column: 16, scope: !12678)
!12692 = !DILocation(line: 2064, column: 4, scope: !12678)
!12693 = !DILocation(line: 2065, column: 12, scope: !12678)
!12694 = !DILocation(line: 2065, column: 22, scope: !12678)
!12695 = !DILocation(line: 2065, column: 4, scope: !12678)
!12696 = !DILocation(line: 2066, column: 28, scope: !12678)
!12697 = !DILocation(line: 2066, column: 32, scope: !12678)
!12698 = !DILocation(line: 2066, column: 41, scope: !12678)
!12699 = !DILocation(line: 2066, column: 51, scope: !12678)
!12700 = !DILocation(line: 2066, column: 4, scope: !12678)
!12701 = !DILocation(line: 2067, column: 30, scope: !12678)
!12702 = !DILocation(line: 2067, column: 35, scope: !12678)
!12703 = !DILocation(line: 2067, column: 45, scope: !12678)
!12704 = !DILocation(line: 2067, column: 51, scope: !12678)
!12705 = !DILocation(line: 2067, column: 4, scope: !12678)
!12706 = !DILocation(line: 2068, column: 31, scope: !12678)
!12707 = !DILocation(line: 2068, column: 35, scope: !12678)
!12708 = !DILocation(line: 2068, column: 44, scope: !12678)
!12709 = !DILocation(line: 2068, column: 54, scope: !12678)
!12710 = !DILocation(line: 2068, column: 4, scope: !12678)
!12711 = !DILocation(line: 2070, column: 4, scope: !12678)
!12712 = !DILocation(line: 2070, column: 4, scope: !12713)
!12713 = distinct !DILexicalBlock(scope: !12678, file: !3, line: 2070, column: 4)
!12714 = !{i32 -2139624107}
!12715 = !DILocation(line: 2074, column: 10, scope: !12678)
!12716 = !DILocation(line: 2074, column: 8, scope: !12678)
!12717 = !DILocation(line: 2078, column: 45, scope: !12556)
!12718 = !DILocation(line: 2078, column: 28, scope: !12556)
!12719 = !DILocation(line: 2078, column: 27, scope: !12556)
!12720 = !DILocation(line: 2078, column: 15, scope: !12556)
!12721 = !DILocation(line: 2078, column: 3, scope: !12556)
!12722 = !DILocation(line: 2078, column: 8, scope: !12556)
!12723 = !DILocation(line: 2078, column: 13, scope: !12556)
!12724 = !DILocation(line: 2079, column: 3, scope: !12556)
!12725 = !DILocation(line: 2079, column: 8, scope: !12556)
!12726 = !DILocation(line: 2079, column: 18, scope: !12556)
!12727 = !DILocation(line: 2082, column: 34, scope: !12556)
!12728 = !DILocation(line: 2082, column: 39, scope: !12556)
!12729 = !DILocation(line: 2082, column: 19, scope: !12556)
!12730 = !DILocation(line: 2082, column: 3, scope: !12556)
!12731 = !DILocation(line: 2082, column: 8, scope: !12556)
!12732 = !DILocation(line: 2082, column: 17, scope: !12556)
!12733 = !DILocation(line: 2083, column: 12, scope: !12556)
!12734 = !DILocation(line: 2083, column: 3, scope: !12556)
!12735 = !DILocation(line: 2085, column: 3, scope: !12556)
!12736 = !DILocation(line: 2085, column: 8, scope: !12556)
!12737 = !DILocation(line: 2085, column: 14, scope: !12556)
!12738 = !DILocation(line: 2085, column: 24, scope: !12556)
!12739 = !DILocation(line: 2086, column: 26, scope: !12556)
!12740 = !DILocation(line: 2086, column: 3, scope: !12556)
!12741 = !DILocation(line: 2086, column: 8, scope: !12556)
!12742 = !DILocation(line: 2086, column: 14, scope: !12556)
!12743 = !DILocation(line: 2086, column: 23, scope: !12556)
!12744 = !DILabel(scope: !12556, name: "next", file: !3, line: 2087)
!12745 = !DILocation(line: 2087, column: 2, scope: !12556)
!12746 = !DILocation(line: 2088, column: 10, scope: !12556)
!12747 = !DILocation(line: 2088, column: 8, scope: !12556)
!12748 = !DILocation(line: 2089, column: 11, scope: !12556)
!12749 = !DILocation(line: 2089, column: 18, scope: !12556)
!12750 = !DILocation(line: 2089, column: 8, scope: !12556)
!12751 = distinct !{!12751, !12547, !12752}
!12752 = !DILocation(line: 2090, column: 2, scope: !12522)
!12753 = !DILocation(line: 2091, column: 15, scope: !12522)
!12754 = !DILocation(line: 2091, column: 2, scope: !12522)
!12755 = !DILocation(line: 2091, column: 6, scope: !12522)
!12756 = !DILocation(line: 2091, column: 13, scope: !12522)
!12757 = !DILocation(line: 2092, column: 6, scope: !12758)
!12758 = distinct !DILexicalBlock(scope: !12522, file: !3, line: 2092, column: 6)
!12759 = !DILocation(line: 2092, column: 6, scope: !12522)
!12760 = !DILocation(line: 2093, column: 63, scope: !12758)
!12761 = !DILocation(line: 2093, column: 67, scope: !12758)
!12762 = !DILocation(line: 2093, column: 72, scope: !12758)
!12763 = !DILocation(line: 2093, column: 3, scope: !12758)
!12764 = !DILocation(line: 2095, column: 1, scope: !12522)
!12765 = distinct !DISubprogram(name: "dev_consume_skb_irq", scope: !31, file: !31, line: 3812, type: !469, scopeLine: 3813, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!12766 = !DILocalVariable(name: "skb", arg: 1, scope: !12765, file: !31, line: 3812, type: !415)
!12767 = !DILocation(line: 3812, column: 56, scope: !12765)
!12768 = !DILocation(line: 3814, column: 22, scope: !12765)
!12769 = !DILocation(line: 3814, column: 2, scope: !12765)
!12770 = !DILocation(line: 3815, column: 1, scope: !12765)
!12771 = distinct !DISubprogram(name: "netif_queue_stopped", scope: !31, file: !31, line: 3354, type: !12772, scopeLine: 3355, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!12772 = !DISubroutineType(types: !12773)
!12773 = !{!771, !773}
!12774 = !DILocalVariable(name: "dev", arg: 1, scope: !12771, file: !31, line: 3354, type: !773)
!12775 = !DILocation(line: 3354, column: 65, scope: !12771)
!12776 = !DILocation(line: 3356, column: 52, scope: !12771)
!12777 = !DILocation(line: 3356, column: 32, scope: !12771)
!12778 = !DILocation(line: 3356, column: 9, scope: !12771)
!12779 = !DILocation(line: 3356, column: 2, scope: !12771)
!12780 = distinct !DISubprogram(name: "netif_wake_queue", scope: !31, file: !31, line: 3309, type: !406, scopeLine: 3310, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!12781 = !DILocalVariable(name: "dev", arg: 1, scope: !12780, file: !31, line: 3309, type: !290)
!12782 = !DILocation(line: 3309, column: 56, scope: !12780)
!12783 = !DILocation(line: 3311, column: 42, scope: !12780)
!12784 = !DILocation(line: 3311, column: 22, scope: !12780)
!12785 = !DILocation(line: 3311, column: 2, scope: !12780)
!12786 = !DILocation(line: 3312, column: 1, scope: !12780)
!12787 = distinct !DISubprogram(name: "netif_tx_queue_stopped", scope: !31, file: !31, line: 3343, type: !12788, scopeLine: 3344, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!12788 = !DISubroutineType(types: !12789)
!12789 = !{!771, !12790}
!12790 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12791, size: 64)
!12791 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6439)
!12792 = !DILocalVariable(name: "dev_queue", arg: 1, scope: !12787, file: !31, line: 3343, type: !12790)
!12793 = !DILocation(line: 3343, column: 70, scope: !12787)
!12794 = !DILocation(line: 3345, column: 43, scope: !12787)
!12795 = !DILocation(line: 3345, column: 54, scope: !12787)
!12796 = !DILocation(line: 3345, column: 9, scope: !12787)
!12797 = !DILocation(line: 3345, column: 2, scope: !12787)
!12798 = distinct !DISubprogram(name: "netdev_get_tx_queue", scope: !31, file: !31, line: 2234, type: !12799, scopeLine: 2236, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!12799 = !DISubroutineType(types: !12800)
!12800 = !{!6438, !773, !7}
!12801 = !DILocalVariable(name: "dev", arg: 1, scope: !12798, file: !31, line: 2234, type: !773)
!12802 = !DILocation(line: 2234, column: 67, scope: !12798)
!12803 = !DILocalVariable(name: "index", arg: 2, scope: !12798, file: !31, line: 2235, type: !7)
!12804 = !DILocation(line: 2235, column: 20, scope: !12798)
!12805 = !DILocation(line: 2237, column: 10, scope: !12798)
!12806 = !DILocation(line: 2237, column: 15, scope: !12798)
!12807 = !DILocation(line: 2237, column: 19, scope: !12798)
!12808 = !DILocation(line: 2237, column: 2, scope: !12798)
!12809 = distinct !DISubprogram(name: "test_bit", scope: !12810, file: !12810, line: 132, type: !12811, scopeLine: 133, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!12810 = !DIFile(filename: "./include/asm-generic/bitops/instrumented-non-atomic.h", directory: "/home/lizy2001/genbc/linux")
!12811 = !DISubroutineType(types: !12812)
!12812 = !{!771, !998, !12813}
!12813 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12814, size: 64)
!12814 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12815)
!12815 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !312)
!12816 = !DILocalVariable(name: "nr", arg: 1, scope: !12817, file: !9315, line: 210, type: !998)
!12817 = distinct !DISubprogram(name: "variable_test_bit", scope: !9315, file: !9315, line: 210, type: !12811, scopeLine: 211, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!12818 = !DILocation(line: 210, column: 52, scope: !12817, inlinedAt: !12819)
!12819 = distinct !DILocation(line: 135, column: 9, scope: !12809)
!12820 = !DILocalVariable(name: "addr", arg: 2, scope: !12817, file: !9315, line: 210, type: !12813)
!12821 = !DILocation(line: 210, column: 86, scope: !12817, inlinedAt: !12819)
!12822 = !DILocalVariable(name: "oldbit", scope: !12817, file: !9315, line: 212, type: !771)
!12823 = !DILocation(line: 212, column: 7, scope: !12817, inlinedAt: !12819)
!12824 = !DILocalVariable(name: "nr", arg: 1, scope: !12825, file: !9315, line: 204, type: !998)
!12825 = distinct !DISubprogram(name: "constant_test_bit", scope: !9315, file: !9315, line: 204, type: !12811, scopeLine: 205, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!12826 = !DILocation(line: 204, column: 52, scope: !12825, inlinedAt: !12827)
!12827 = distinct !DILocation(line: 135, column: 9, scope: !12809)
!12828 = !DILocalVariable(name: "addr", arg: 2, scope: !12825, file: !9315, line: 204, type: !12813)
!12829 = !DILocation(line: 204, column: 86, scope: !12825, inlinedAt: !12827)
!12830 = !DILocalVariable(name: "v", arg: 1, scope: !12831, file: !12832, line: 69, type: !9386)
!12831 = distinct !DISubprogram(name: "instrument_atomic_read", scope: !12832, file: !12832, line: 69, type: !12833, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!12832 = !DIFile(filename: "./include/linux/instrumented.h", directory: "/home/lizy2001/genbc/linux")
!12833 = !DISubroutineType(types: !12834)
!12834 = !{null, !9386, !1039}
!12835 = !DILocation(line: 69, column: 73, scope: !12831, inlinedAt: !12836)
!12836 = distinct !DILocation(line: 134, column: 2, scope: !12809)
!12837 = !DILocalVariable(name: "size", arg: 2, scope: !12831, file: !12832, line: 69, type: !1039)
!12838 = !DILocation(line: 69, column: 83, scope: !12831, inlinedAt: !12836)
!12839 = !DILocalVariable(name: "nr", arg: 1, scope: !12809, file: !12810, line: 132, type: !998)
!12840 = !DILocation(line: 132, column: 34, scope: !12809)
!12841 = !DILocalVariable(name: "addr", arg: 2, scope: !12809, file: !12810, line: 132, type: !12813)
!12842 = !DILocation(line: 132, column: 68, scope: !12809)
!12843 = !DILocation(line: 134, column: 25, scope: !12809)
!12844 = !DILocation(line: 134, column: 32, scope: !12809)
!12845 = !DILocation(line: 134, column: 30, scope: !12809)
!12846 = !DILocation(line: 71, column: 19, scope: !12831, inlinedAt: !12836)
!12847 = !DILocation(line: 71, column: 22, scope: !12831, inlinedAt: !12836)
!12848 = !DILocation(line: 71, column: 2, scope: !12831, inlinedAt: !12836)
!12849 = !DILocation(line: 72, column: 2, scope: !12831, inlinedAt: !12836)
!12850 = !DILocation(line: 135, column: 9, scope: !12809)
!12851 = !DILocation(line: 206, column: 19, scope: !12825, inlinedAt: !12827)
!12852 = !DILocation(line: 206, column: 22, scope: !12825, inlinedAt: !12827)
!12853 = !DILocation(line: 206, column: 15, scope: !12825, inlinedAt: !12827)
!12854 = !DILocation(line: 207, column: 4, scope: !12825, inlinedAt: !12827)
!12855 = !DILocation(line: 207, column: 9, scope: !12825, inlinedAt: !12827)
!12856 = !DILocation(line: 207, column: 12, scope: !12825, inlinedAt: !12827)
!12857 = !DILocation(line: 206, column: 44, scope: !12825, inlinedAt: !12827)
!12858 = !DILocation(line: 207, column: 37, scope: !12825, inlinedAt: !12827)
!12859 = !DILocation(line: 217, column: 33, scope: !12817, inlinedAt: !12819)
!12860 = !DILocation(line: 217, column: 46, scope: !12817, inlinedAt: !12819)
!12861 = !DILocation(line: 214, column: 2, scope: !12817, inlinedAt: !12819)
!12862 = !{i32 -2147051765, i32 -2147051705}
!12863 = !DILocation(line: 219, column: 9, scope: !12817, inlinedAt: !12819)
!12864 = !DILocation(line: 135, column: 2, scope: !12809)
!12865 = distinct !DISubprogram(name: "kasan_check_read", scope: !12866, file: !12866, line: 34, type: !12867, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!12866 = !DIFile(filename: "./include/linux/kasan-checks.h", directory: "/home/lizy2001/genbc/linux")
!12867 = !DISubroutineType(types: !12868)
!12868 = !{!771, !9386, !7}
!12869 = !DILocalVariable(name: "p", arg: 1, scope: !12865, file: !12866, line: 34, type: !9386)
!12870 = !DILocation(line: 34, column: 58, scope: !12865)
!12871 = !DILocalVariable(name: "size", arg: 2, scope: !12865, file: !12866, line: 34, type: !7)
!12872 = !DILocation(line: 34, column: 74, scope: !12865)
!12873 = !DILocation(line: 36, column: 2, scope: !12865)
!12874 = distinct !DISubprogram(name: "kcsan_check_access", scope: !12875, file: !12875, line: 178, type: !12876, scopeLine: 179, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!12875 = !DIFile(filename: "./include/linux/kcsan-checks.h", directory: "/home/lizy2001/genbc/linux")
!12876 = !DISubroutineType(types: !12877)
!12877 = !{null, !9386, !1039, !32}
!12878 = !DILocalVariable(name: "ptr", arg: 1, scope: !12874, file: !12875, line: 178, type: !9386)
!12879 = !DILocation(line: 178, column: 60, scope: !12874)
!12880 = !DILocalVariable(name: "size", arg: 2, scope: !12874, file: !12875, line: 178, type: !1039)
!12881 = !DILocation(line: 178, column: 72, scope: !12874)
!12882 = !DILocalVariable(name: "type", arg: 3, scope: !12874, file: !12875, line: 179, type: !32)
!12883 = !DILocation(line: 179, column: 15, scope: !12874)
!12884 = !DILocation(line: 179, column: 23, scope: !12874)
!12885 = distinct !DISubprogram(name: "netdev_alloc_skb", scope: !417, file: !417, line: 2823, type: !12886, scopeLine: 2825, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!12886 = !DISubroutineType(types: !12887)
!12887 = !{!415, !290, !7}
!12888 = !DILocalVariable(name: "dev", arg: 1, scope: !12885, file: !417, line: 2823, type: !290)
!12889 = !DILocation(line: 2823, column: 67, scope: !12885)
!12890 = !DILocalVariable(name: "length", arg: 2, scope: !12885, file: !417, line: 2824, type: !7)
!12891 = !DILocation(line: 2824, column: 26, scope: !12885)
!12892 = !DILocation(line: 2826, column: 28, scope: !12885)
!12893 = !DILocation(line: 2826, column: 33, scope: !12885)
!12894 = !DILocation(line: 2826, column: 9, scope: !12885)
!12895 = !DILocation(line: 2826, column: 2, scope: !12885)
!12896 = distinct !DISubprogram(name: "skb_copy_from_linear_data", scope: !417, file: !417, line: 3649, type: !12897, scopeLine: 3652, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!12897 = !DISubroutineType(types: !12898)
!12898 = !{null, !6052, !591, !4751}
!12899 = !DILocalVariable(name: "skb", arg: 1, scope: !12896, file: !417, line: 3649, type: !6052)
!12900 = !DILocation(line: 3649, column: 68, scope: !12896)
!12901 = !DILocalVariable(name: "to", arg: 2, scope: !12896, file: !417, line: 3650, type: !591)
!12902 = !DILocation(line: 3650, column: 17, scope: !12896)
!12903 = !DILocalVariable(name: "len", arg: 3, scope: !12896, file: !417, line: 3651, type: !4751)
!12904 = !DILocation(line: 3651, column: 30, scope: !12896)
!12905 = !DILocation(line: 3653, column: 9, scope: !12896)
!12906 = !DILocation(line: 3653, column: 13, scope: !12896)
!12907 = !DILocation(line: 3653, column: 18, scope: !12896)
!12908 = !DILocation(line: 3653, column: 24, scope: !12896)
!12909 = !DILocation(line: 3653, column: 2, scope: !12896)
!12910 = !DILocation(line: 3654, column: 1, scope: !12896)
!12911 = distinct !DISubprogram(name: "csum_unfold", scope: !12912, file: !12912, line: 107, type: !12913, scopeLine: 108, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!12912 = !DIFile(filename: "./include/net/checksum.h", directory: "/home/lizy2001/genbc/linux")
!12913 = !DISubroutineType(types: !12914)
!12914 = !{!524, !7664}
!12915 = !DILocalVariable(name: "n", arg: 1, scope: !12911, file: !12912, line: 107, type: !7664)
!12916 = !DILocation(line: 107, column: 42, scope: !12911)
!12917 = !DILocation(line: 109, column: 25, scope: !12911)
!12918 = !DILocation(line: 109, column: 9, scope: !12911)
!12919 = !DILocation(line: 109, column: 2, scope: !12911)
!12920 = distinct !DISubprogram(name: "__fswab16", scope: !12921, file: !12921, line: 48, type: !12922, scopeLine: 49, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!12921 = !DIFile(filename: "./include/uapi/linux/swab.h", directory: "/home/lizy2001/genbc/linux")
!12922 = !DISubroutineType(types: !12923)
!12923 = !{!475, !475}
!12924 = !DILocalVariable(name: "val", arg: 1, scope: !12920, file: !12921, line: 48, type: !475)
!12925 = !DILocation(line: 48, column: 57, scope: !12920)
!12926 = !DILocation(line: 53, column: 9, scope: !12920)
!12927 = !DILocation(line: 53, column: 2, scope: !12920)
!12928 = distinct !DISubprogram(name: "skb_checksum_start_offset", scope: !417, file: !417, line: 2594, type: !12929, scopeLine: 2595, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!12929 = !DISubroutineType(types: !12930)
!12930 = !{!32, !6052}
!12931 = !DILocalVariable(name: "skb", arg: 1, scope: !12928, file: !417, line: 2594, type: !6052)
!12932 = !DILocation(line: 2594, column: 67, scope: !12928)
!12933 = !DILocation(line: 2596, column: 9, scope: !12928)
!12934 = !DILocation(line: 2596, column: 14, scope: !12928)
!12935 = !DILocation(line: 2596, column: 40, scope: !12928)
!12936 = !DILocation(line: 2596, column: 27, scope: !12928)
!12937 = !DILocation(line: 2596, column: 25, scope: !12928)
!12938 = !DILocation(line: 2596, column: 2, scope: !12928)
!12939 = distinct !DISubprogram(name: "netif_stop_queue", scope: !31, file: !31, line: 3336, type: !406, scopeLine: 3337, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!12940 = !DILocalVariable(name: "dev_queue", arg: 1, scope: !12941, file: !31, line: 3324, type: !6438)
!12941 = distinct !DISubprogram(name: "netif_tx_stop_queue", scope: !31, file: !31, line: 3324, type: !12942, scopeLine: 3325, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!12942 = !DISubroutineType(types: !12943)
!12943 = !{null, !6438}
!12944 = !DILocation(line: 3324, column: 70, scope: !12941, inlinedAt: !12945)
!12945 = distinct !DILocation(line: 3338, column: 2, scope: !12939)
!12946 = !DILocalVariable(name: "dev", arg: 1, scope: !12939, file: !31, line: 3336, type: !290)
!12947 = !DILocation(line: 3336, column: 56, scope: !12939)
!12948 = !DILocation(line: 3338, column: 42, scope: !12939)
!12949 = !DILocation(line: 3338, column: 22, scope: !12939)
!12950 = !DILocation(line: 3326, column: 35, scope: !12941, inlinedAt: !12945)
!12951 = !DILocation(line: 3326, column: 46, scope: !12941, inlinedAt: !12945)
!12952 = !DILocation(line: 3326, column: 2, scope: !12941, inlinedAt: !12945)
!12953 = !DILocation(line: 3339, column: 1, scope: !12939)
!12954 = distinct !DISubprogram(name: "skb_headlen", scope: !417, file: !417, line: 2110, type: !12955, scopeLine: 2111, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!12955 = !DISubroutineType(types: !12956)
!12956 = !{!7, !6052}
!12957 = !DILocalVariable(name: "skb", arg: 1, scope: !12954, file: !417, line: 2110, type: !6052)
!12958 = !DILocation(line: 2110, column: 62, scope: !12954)
!12959 = !DILocation(line: 2112, column: 9, scope: !12954)
!12960 = !DILocation(line: 2112, column: 14, scope: !12954)
!12961 = !DILocation(line: 2112, column: 20, scope: !12954)
!12962 = !DILocation(line: 2112, column: 25, scope: !12954)
!12963 = !DILocation(line: 2112, column: 18, scope: !12954)
!12964 = !DILocation(line: 2112, column: 2, scope: !12954)
!12965 = distinct !DISubprogram(name: "skb_frag_size", scope: !417, file: !417, line: 327, type: !12966, scopeLine: 328, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!12966 = !DISubroutineType(types: !12967)
!12967 = !{!7, !11763}
!12968 = !DILocalVariable(name: "frag", arg: 1, scope: !12965, file: !417, line: 327, type: !11763)
!12969 = !DILocation(line: 327, column: 60, scope: !12965)
!12970 = !DILocation(line: 329, column: 9, scope: !12965)
!12971 = !DILocation(line: 329, column: 15, scope: !12965)
!12972 = !DILocation(line: 329, column: 2, scope: !12965)
!12973 = distinct !DISubprogram(name: "skb_frag_dma_map", scope: !417, file: !417, line: 3112, type: !12974, scopeLine: 3116, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!12974 = !DISubroutineType(types: !12975)
!12975 = !{!2036, !6545, !11763, !1039, !1039, !7157}
!12976 = !DILocalVariable(name: "dev", arg: 1, scope: !12973, file: !417, line: 3112, type: !6545)
!12977 = !DILocation(line: 3112, column: 58, scope: !12973)
!12978 = !DILocalVariable(name: "frag", arg: 2, scope: !12973, file: !417, line: 3113, type: !11763)
!12979 = !DILocation(line: 3113, column: 26, scope: !12973)
!12980 = !DILocalVariable(name: "offset", arg: 3, scope: !12973, file: !417, line: 3114, type: !1039)
!12981 = !DILocation(line: 3114, column: 15, scope: !12973)
!12982 = !DILocalVariable(name: "size", arg: 4, scope: !12973, file: !417, line: 3114, type: !1039)
!12983 = !DILocation(line: 3114, column: 30, scope: !12973)
!12984 = !DILocalVariable(name: "dir", arg: 5, scope: !12973, file: !417, line: 3115, type: !7157)
!12985 = !DILocation(line: 3115, column: 32, scope: !12973)
!12986 = !DILocation(line: 3117, column: 9, scope: !12973)
!12987 = !DILocation(line: 3117, column: 2, scope: !12973)
!12988 = distinct !DISubprogram(name: "unmap_partial_tx_skb", scope: !3, file: !3, line: 2266, type: !12989, scopeLine: 2268, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!12989 = !DISubroutineType(types: !12990)
!12990 = !{null, !7554, !987, !987, !987, !987}
!12991 = !DILocalVariable(name: "hp", arg: 1, scope: !12988, file: !3, line: 2266, type: !7554)
!12992 = !DILocation(line: 2266, column: 53, scope: !12988)
!12993 = !DILocalVariable(name: "first_mapping", arg: 2, scope: !12988, file: !3, line: 2266, type: !987)
!12994 = !DILocation(line: 2266, column: 61, scope: !12988)
!12995 = !DILocalVariable(name: "first_len", arg: 3, scope: !12988, file: !3, line: 2267, type: !987)
!12996 = !DILocation(line: 2267, column: 10, scope: !12988)
!12997 = !DILocalVariable(name: "first_entry", arg: 4, scope: !12988, file: !3, line: 2267, type: !987)
!12998 = !DILocation(line: 2267, column: 25, scope: !12988)
!12999 = !DILocalVariable(name: "entry", arg: 5, scope: !12988, file: !3, line: 2267, type: !987)
!13000 = !DILocation(line: 2267, column: 42, scope: !12988)
!13001 = !DILocalVariable(name: "txbase", scope: !12988, file: !3, line: 2269, type: !11235)
!13002 = !DILocation(line: 2269, column: 25, scope: !12988)
!13003 = !DILocation(line: 2269, column: 35, scope: !12988)
!13004 = !DILocation(line: 2269, column: 39, scope: !12988)
!13005 = !DILocation(line: 2269, column: 52, scope: !12988)
!13006 = !DILocation(line: 2271, column: 2, scope: !12988)
!13007 = !DILocation(line: 2273, column: 16, scope: !12988)
!13008 = !DILocation(line: 2273, column: 14, scope: !12988)
!13009 = !DILocation(line: 2274, column: 2, scope: !12988)
!13010 = !DILocation(line: 2274, column: 9, scope: !12988)
!13011 = !DILocation(line: 2274, column: 24, scope: !12988)
!13012 = !DILocation(line: 2274, column: 21, scope: !12988)
!13013 = !DILocalVariable(name: "this", scope: !13014, file: !3, line: 2275, type: !11235)
!13014 = distinct !DILexicalBlock(scope: !12988, file: !3, line: 2274, column: 31)
!13015 = !DILocation(line: 2275, column: 26, scope: !13014)
!13016 = !DILocation(line: 2275, column: 34, scope: !13014)
!13017 = !DILocation(line: 2275, column: 41, scope: !13014)
!13018 = !DILocalVariable(name: "addr", scope: !13014, file: !3, line: 2276, type: !987)
!13019 = !DILocation(line: 2276, column: 7, scope: !13014)
!13020 = !DILocalVariable(name: "len", scope: !13014, file: !3, line: 2276, type: !987)
!13021 = !DILocation(line: 2276, column: 13, scope: !13014)
!13022 = !DILocation(line: 2278, column: 26, scope: !13014)
!13023 = !DILocation(line: 2278, column: 31, scope: !13014)
!13024 = !DILocation(line: 2278, column: 37, scope: !13014)
!13025 = !DILocation(line: 2278, column: 10, scope: !13014)
!13026 = !DILocation(line: 2278, column: 8, scope: !13014)
!13027 = !DILocation(line: 2279, column: 25, scope: !13014)
!13028 = !DILocation(line: 2279, column: 30, scope: !13014)
!13029 = !DILocation(line: 2279, column: 36, scope: !13014)
!13030 = !DILocation(line: 2279, column: 9, scope: !13014)
!13031 = !DILocation(line: 2279, column: 7, scope: !13014)
!13032 = !DILocation(line: 2280, column: 7, scope: !13014)
!13033 = !DILocation(line: 2281, column: 3, scope: !13014)
!13034 = distinct !{!13034, !13009, !13035}
!13035 = !DILocation(line: 2282, column: 2, scope: !12988)
!13036 = !DILocation(line: 2283, column: 1, scope: !12988)
!13037 = distinct !DISubprogram(name: "skb_headroom", scope: !417, file: !417, line: 2339, type: !12955, scopeLine: 2340, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!13038 = !DILocalVariable(name: "skb", arg: 1, scope: !13037, file: !417, line: 2339, type: !6052)
!13039 = !DILocation(line: 2339, column: 63, scope: !13037)
!13040 = !DILocation(line: 2341, column: 9, scope: !13037)
!13041 = !DILocation(line: 2341, column: 14, scope: !13037)
!13042 = !DILocation(line: 2341, column: 21, scope: !13037)
!13043 = !DILocation(line: 2341, column: 26, scope: !13037)
!13044 = !DILocation(line: 2341, column: 19, scope: !13037)
!13045 = !DILocation(line: 2341, column: 2, scope: !13037)
!13046 = distinct !DISubprogram(name: "set_bit", scope: !13047, file: !13047, line: 26, type: !13048, scopeLine: 27, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!13047 = !DIFile(filename: "./include/asm-generic/bitops/instrumented-atomic.h", directory: "/home/lizy2001/genbc/linux")
!13048 = !DISubroutineType(types: !13049)
!13049 = !{null, !998, !13050}
!13050 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12815, size: 64)
!13051 = !DILocalVariable(name: "nr", arg: 1, scope: !13052, file: !9315, line: 52, type: !998)
!13052 = distinct !DISubprogram(name: "arch_set_bit", scope: !9315, file: !9315, line: 52, type: !13048, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!13053 = !DILocation(line: 52, column: 19, scope: !13052, inlinedAt: !13054)
!13054 = distinct !DILocation(line: 29, column: 2, scope: !13046)
!13055 = !DILocalVariable(name: "addr", arg: 2, scope: !13052, file: !9315, line: 52, type: !13050)
!13056 = !DILocation(line: 52, column: 47, scope: !13052, inlinedAt: !13054)
!13057 = !DILocalVariable(name: "v", arg: 1, scope: !13058, file: !12832, line: 84, type: !9386)
!13058 = distinct !DISubprogram(name: "instrument_atomic_write", scope: !12832, file: !12832, line: 84, type: !12833, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!13059 = !DILocation(line: 84, column: 74, scope: !13058, inlinedAt: !13060)
!13060 = distinct !DILocation(line: 28, column: 2, scope: !13046)
!13061 = !DILocalVariable(name: "size", arg: 2, scope: !13058, file: !12832, line: 84, type: !1039)
!13062 = !DILocation(line: 84, column: 84, scope: !13058, inlinedAt: !13060)
!13063 = !DILocalVariable(name: "nr", arg: 1, scope: !13046, file: !13047, line: 26, type: !998)
!13064 = !DILocation(line: 26, column: 33, scope: !13046)
!13065 = !DILocalVariable(name: "addr", arg: 2, scope: !13046, file: !13047, line: 26, type: !13050)
!13066 = !DILocation(line: 26, column: 61, scope: !13046)
!13067 = !DILocation(line: 28, column: 26, scope: !13046)
!13068 = !DILocation(line: 28, column: 33, scope: !13046)
!13069 = !DILocation(line: 28, column: 31, scope: !13046)
!13070 = !DILocation(line: 86, column: 20, scope: !13058, inlinedAt: !13060)
!13071 = !DILocation(line: 86, column: 23, scope: !13058, inlinedAt: !13060)
!13072 = !DILocation(line: 86, column: 2, scope: !13058, inlinedAt: !13060)
!13073 = !DILocation(line: 87, column: 2, scope: !13058, inlinedAt: !13060)
!13074 = !DILocation(line: 29, column: 15, scope: !13046)
!13075 = !DILocation(line: 29, column: 19, scope: !13046)
!13076 = !DILocation(line: 54, column: 27, scope: !13077, inlinedAt: !13054)
!13077 = distinct !DILexicalBlock(scope: !13052, file: !9315, line: 54, column: 6)
!13078 = !DILocation(line: 54, column: 6, scope: !13077, inlinedAt: !13054)
!13079 = !DILocation(line: 54, column: 6, scope: !13052, inlinedAt: !13054)
!13080 = !DILocation(line: 56, column: 6, scope: !13081, inlinedAt: !13054)
!13081 = distinct !DILexicalBlock(scope: !13077, file: !9315, line: 54, column: 32)
!13082 = !DILocation(line: 57, column: 12, scope: !13081, inlinedAt: !13054)
!13083 = !DILocation(line: 55, column: 3, scope: !13081, inlinedAt: !13054)
!13084 = !{i32 -2147061013}
!13085 = !DILocation(line: 59, column: 2, scope: !13081, inlinedAt: !13054)
!13086 = !DILocation(line: 61, column: 8, scope: !13087, inlinedAt: !13054)
!13087 = distinct !DILexicalBlock(scope: !13077, file: !9315, line: 59, column: 9)
!13088 = !DILocation(line: 61, column: 32, scope: !13087, inlinedAt: !13054)
!13089 = !DILocation(line: 60, column: 3, scope: !13087, inlinedAt: !13054)
!13090 = !{i32 -2147060881}
!13091 = !DILocation(line: 30, column: 1, scope: !13046)
!13092 = distinct !DISubprogram(name: "kasan_check_write", scope: !12866, file: !12866, line: 38, type: !12867, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!13093 = !DILocalVariable(name: "p", arg: 1, scope: !13092, file: !12866, line: 38, type: !9386)
!13094 = !DILocation(line: 38, column: 59, scope: !13092)
!13095 = !DILocalVariable(name: "size", arg: 2, scope: !13092, file: !12866, line: 38, type: !7)
!13096 = !DILocation(line: 38, column: 75, scope: !13092)
!13097 = !DILocation(line: 40, column: 2, scope: !13092)
!13098 = distinct !DISubprogram(name: "skb_frag_page", scope: !417, file: !417, line: 2983, type: !13099, scopeLine: 2984, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!13099 = !DISubroutineType(types: !13100)
!13100 = !{!1719, !11763}
!13101 = !DILocalVariable(name: "frag", arg: 1, scope: !13098, file: !417, line: 2983, type: !11763)
!13102 = !DILocation(line: 2983, column: 60, scope: !13098)
!13103 = !DILocation(line: 2985, column: 9, scope: !13098)
!13104 = !DILocation(line: 2985, column: 15, scope: !13098)
!13105 = !DILocation(line: 2985, column: 2, scope: !13098)
!13106 = distinct !DISubprogram(name: "skb_frag_off", scope: !417, file: !417, line: 2941, type: !12966, scopeLine: 2942, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!13107 = !DILocalVariable(name: "frag", arg: 1, scope: !13106, file: !417, line: 2941, type: !11763)
!13108 = !DILocation(line: 2941, column: 59, scope: !13106)
!13109 = !DILocation(line: 2943, column: 9, scope: !13106)
!13110 = !DILocation(line: 2943, column: 15, scope: !13106)
!13111 = !DILocation(line: 2943, column: 2, scope: !13106)
!13112 = distinct !DISubprogram(name: "hme_get_drvinfo", scope: !3, file: !3, line: 2509, type: !5527, scopeLine: 2510, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!13113 = !DILocalVariable(name: "dev", arg: 1, scope: !13112, file: !3, line: 2509, type: !290)
!13114 = !DILocation(line: 2509, column: 48, scope: !13112)
!13115 = !DILocalVariable(name: "info", arg: 2, scope: !13112, file: !3, line: 2509, type: !5529)
!13116 = !DILocation(line: 2509, column: 77, scope: !13112)
!13117 = !DILocalVariable(name: "hp", scope: !13112, file: !3, line: 2511, type: !7554)
!13118 = !DILocation(line: 2511, column: 21, scope: !13112)
!13119 = !DILocation(line: 2511, column: 38, scope: !13112)
!13120 = !DILocation(line: 2511, column: 26, scope: !13112)
!13121 = !DILocation(line: 2513, column: 10, scope: !13112)
!13122 = !DILocation(line: 2513, column: 16, scope: !13112)
!13123 = !DILocation(line: 2513, column: 2, scope: !13112)
!13124 = !DILocation(line: 2514, column: 10, scope: !13112)
!13125 = !DILocation(line: 2514, column: 16, scope: !13112)
!13126 = !DILocation(line: 2514, column: 2, scope: !13112)
!13127 = !DILocation(line: 2515, column: 6, scope: !13128)
!13128 = distinct !DILexicalBlock(scope: !13112, file: !3, line: 2515, column: 6)
!13129 = !DILocation(line: 2515, column: 10, scope: !13128)
!13130 = !DILocation(line: 2515, column: 22, scope: !13128)
!13131 = !DILocation(line: 2515, column: 6, scope: !13112)
!13132 = !DILocalVariable(name: "pdev", scope: !13133, file: !3, line: 2516, type: !7280)
!13133 = distinct !DILexicalBlock(scope: !13128, file: !3, line: 2515, column: 35)
!13134 = !DILocation(line: 2516, column: 19, scope: !13133)
!13135 = !DILocation(line: 2516, column: 26, scope: !13133)
!13136 = !DILocation(line: 2516, column: 30, scope: !13133)
!13137 = !DILocation(line: 2517, column: 11, scope: !13133)
!13138 = !DILocation(line: 2517, column: 17, scope: !13133)
!13139 = !DILocation(line: 2517, column: 36, scope: !13133)
!13140 = !DILocation(line: 2517, column: 27, scope: !13133)
!13141 = !DILocation(line: 2517, column: 3, scope: !13133)
!13142 = !DILocation(line: 2518, column: 2, scope: !13133)
!13143 = !DILocation(line: 2530, column: 1, scope: !13112)
!13144 = distinct !DISubprogram(name: "hme_get_link", scope: !3, file: !3, line: 2532, type: !5575, scopeLine: 2533, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!13145 = !DILocation(line: 402, column: 57, scope: !7876, inlinedAt: !13146)
!13146 = distinct !DILocation(line: 2538, column: 2, scope: !13144)
!13147 = !DILocation(line: 377, column: 55, scope: !7883, inlinedAt: !13148)
!13148 = distinct !DILocation(line: 2536, column: 2, scope: !13144)
!13149 = !DILocalVariable(name: "dev", arg: 1, scope: !13144, file: !3, line: 2532, type: !290)
!13150 = !DILocation(line: 2532, column: 44, scope: !13144)
!13151 = !DILocalVariable(name: "hp", scope: !13144, file: !3, line: 2534, type: !7554)
!13152 = !DILocation(line: 2534, column: 21, scope: !13144)
!13153 = !DILocation(line: 2534, column: 38, scope: !13144)
!13154 = !DILocation(line: 2534, column: 26, scope: !13144)
!13155 = !DILocation(line: 2536, column: 17, scope: !13144)
!13156 = !DILocation(line: 2536, column: 21, scope: !13144)
!13157 = !DILocation(line: 379, column: 2, scope: !8213, inlinedAt: !13148)
!13158 = !DILocation(line: 379, column: 2, scope: !8216, inlinedAt: !13148)
!13159 = !DILocation(line: 379, column: 2, scope: !8219, inlinedAt: !13148)
!13160 = !DILocation(line: 2537, column: 37, scope: !13144)
!13161 = !DILocation(line: 2537, column: 41, scope: !13144)
!13162 = !DILocation(line: 2537, column: 45, scope: !13144)
!13163 = !DILocation(line: 2537, column: 16, scope: !13144)
!13164 = !DILocation(line: 2537, column: 2, scope: !13144)
!13165 = !DILocation(line: 2537, column: 6, scope: !13144)
!13166 = !DILocation(line: 2537, column: 14, scope: !13144)
!13167 = !DILocation(line: 2538, column: 19, scope: !13144)
!13168 = !DILocation(line: 2538, column: 23, scope: !13144)
!13169 = !DILocation(line: 404, column: 2, scope: !8225, inlinedAt: !13146)
!13170 = !DILocation(line: 404, column: 2, scope: !8228, inlinedAt: !13146)
!13171 = !DILocation(line: 404, column: 2, scope: !8231, inlinedAt: !13146)
!13172 = !DILocation(line: 2540, column: 9, scope: !13144)
!13173 = !DILocation(line: 2540, column: 13, scope: !13144)
!13174 = !DILocation(line: 2540, column: 21, scope: !13144)
!13175 = !DILocation(line: 2540, column: 2, scope: !13144)
!13176 = distinct !DISubprogram(name: "hme_get_link_ksettings", scope: !3, file: !3, line: 2436, type: !5977, scopeLine: 2438, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!13177 = !DILocation(line: 402, column: 57, scope: !7876, inlinedAt: !13178)
!13178 = distinct !DILocation(line: 2456, column: 2, scope: !13176)
!13179 = !DILocation(line: 377, column: 55, scope: !7883, inlinedAt: !13180)
!13180 = distinct !DILocation(line: 2453, column: 2, scope: !13176)
!13181 = !DILocalVariable(name: "dev", arg: 1, scope: !13176, file: !3, line: 2436, type: !290)
!13182 = !DILocation(line: 2436, column: 54, scope: !13176)
!13183 = !DILocalVariable(name: "cmd", arg: 2, scope: !13176, file: !3, line: 2437, type: !5979)
!13184 = !DILocation(line: 2437, column: 38, scope: !13176)
!13185 = !DILocalVariable(name: "hp", scope: !13176, file: !3, line: 2439, type: !7554)
!13186 = !DILocation(line: 2439, column: 21, scope: !13176)
!13187 = !DILocation(line: 2439, column: 38, scope: !13176)
!13188 = !DILocation(line: 2439, column: 26, scope: !13176)
!13189 = !DILocalVariable(name: "speed", scope: !13176, file: !3, line: 2440, type: !987)
!13190 = !DILocation(line: 2440, column: 6, scope: !13176)
!13191 = !DILocalVariable(name: "supported", scope: !13176, file: !3, line: 2441, type: !987)
!13192 = !DILocation(line: 2441, column: 6, scope: !13176)
!13193 = !DILocation(line: 2443, column: 12, scope: !13176)
!13194 = !DILocation(line: 2449, column: 2, scope: !13176)
!13195 = !DILocation(line: 2449, column: 7, scope: !13176)
!13196 = !DILocation(line: 2449, column: 12, scope: !13176)
!13197 = !DILocation(line: 2449, column: 17, scope: !13176)
!13198 = !DILocation(line: 2450, column: 2, scope: !13176)
!13199 = !DILocation(line: 2450, column: 7, scope: !13176)
!13200 = !DILocation(line: 2450, column: 12, scope: !13176)
!13201 = !DILocation(line: 2450, column: 24, scope: !13176)
!13202 = !DILocation(line: 2453, column: 17, scope: !13176)
!13203 = !DILocation(line: 2453, column: 21, scope: !13176)
!13204 = !DILocation(line: 379, column: 2, scope: !8213, inlinedAt: !13180)
!13205 = !DILocation(line: 379, column: 2, scope: !8216, inlinedAt: !13180)
!13206 = !DILocation(line: 379, column: 2, scope: !8219, inlinedAt: !13180)
!13207 = !DILocation(line: 2454, column: 37, scope: !13176)
!13208 = !DILocation(line: 2454, column: 41, scope: !13176)
!13209 = !DILocation(line: 2454, column: 45, scope: !13176)
!13210 = !DILocation(line: 2454, column: 16, scope: !13176)
!13211 = !DILocation(line: 2454, column: 2, scope: !13176)
!13212 = !DILocation(line: 2454, column: 6, scope: !13176)
!13213 = !DILocation(line: 2454, column: 14, scope: !13176)
!13214 = !DILocation(line: 2455, column: 36, scope: !13176)
!13215 = !DILocation(line: 2455, column: 40, scope: !13176)
!13216 = !DILocation(line: 2455, column: 44, scope: !13176)
!13217 = !DILocation(line: 2455, column: 15, scope: !13176)
!13218 = !DILocation(line: 2455, column: 2, scope: !13176)
!13219 = !DILocation(line: 2455, column: 6, scope: !13176)
!13220 = !DILocation(line: 2455, column: 13, scope: !13176)
!13221 = !DILocation(line: 2456, column: 19, scope: !13176)
!13222 = !DILocation(line: 2456, column: 23, scope: !13176)
!13223 = !DILocation(line: 404, column: 2, scope: !8225, inlinedAt: !13178)
!13224 = !DILocation(line: 404, column: 2, scope: !8228, inlinedAt: !13178)
!13225 = !DILocation(line: 404, column: 2, scope: !8231, inlinedAt: !13178)
!13226 = !DILocation(line: 2458, column: 6, scope: !13227)
!13227 = distinct !DILexicalBlock(scope: !13176, file: !3, line: 2458, column: 6)
!13228 = !DILocation(line: 2458, column: 10, scope: !13227)
!13229 = !DILocation(line: 2458, column: 18, scope: !13227)
!13230 = !DILocation(line: 2458, column: 6, scope: !13176)
!13231 = !DILocation(line: 2459, column: 3, scope: !13232)
!13232 = distinct !DILexicalBlock(scope: !13227, file: !3, line: 2458, column: 35)
!13233 = !DILocation(line: 2459, column: 8, scope: !13232)
!13234 = !DILocation(line: 2459, column: 13, scope: !13232)
!13235 = !DILocation(line: 2459, column: 21, scope: !13232)
!13236 = !DILocation(line: 2460, column: 13, scope: !13232)
!13237 = !DILocation(line: 2460, column: 17, scope: !13232)
!13238 = !DILocation(line: 2460, column: 24, scope: !13232)
!13239 = !DILocation(line: 2460, column: 12, scope: !13232)
!13240 = !DILocation(line: 2460, column: 9, scope: !13232)
!13241 = !DILocation(line: 2462, column: 7, scope: !13242)
!13242 = distinct !DILexicalBlock(scope: !13232, file: !3, line: 2462, column: 7)
!13243 = !DILocation(line: 2462, column: 13, scope: !13242)
!13244 = !DILocation(line: 2462, column: 7, scope: !13232)
!13245 = !DILocation(line: 2464, column: 6, scope: !13242)
!13246 = !DILocation(line: 2464, column: 10, scope: !13242)
!13247 = !DILocation(line: 2464, column: 17, scope: !13242)
!13248 = !DILocation(line: 2464, column: 5, scope: !13242)
!13249 = !DILocation(line: 2463, column: 4, scope: !13242)
!13250 = !DILocation(line: 2463, column: 9, scope: !13242)
!13251 = !DILocation(line: 2463, column: 14, scope: !13242)
!13252 = !DILocation(line: 2463, column: 21, scope: !13242)
!13253 = !DILocation(line: 2468, column: 6, scope: !13242)
!13254 = !DILocation(line: 2468, column: 10, scope: !13242)
!13255 = !DILocation(line: 2468, column: 17, scope: !13242)
!13256 = !DILocation(line: 2468, column: 5, scope: !13242)
!13257 = !DILocation(line: 2467, column: 4, scope: !13242)
!13258 = !DILocation(line: 2467, column: 9, scope: !13242)
!13259 = !DILocation(line: 2467, column: 14, scope: !13242)
!13260 = !DILocation(line: 2467, column: 21, scope: !13242)
!13261 = !DILocation(line: 2470, column: 2, scope: !13232)
!13262 = !DILocation(line: 2471, column: 3, scope: !13263)
!13263 = distinct !DILexicalBlock(scope: !13227, file: !3, line: 2470, column: 9)
!13264 = !DILocation(line: 2471, column: 8, scope: !13263)
!13265 = !DILocation(line: 2471, column: 13, scope: !13263)
!13266 = !DILocation(line: 2471, column: 21, scope: !13263)
!13267 = !DILocation(line: 2472, column: 12, scope: !13263)
!13268 = !DILocation(line: 2472, column: 16, scope: !13263)
!13269 = !DILocation(line: 2472, column: 24, scope: !13263)
!13270 = !DILocation(line: 2472, column: 11, scope: !13263)
!13271 = !DILocation(line: 2472, column: 9, scope: !13263)
!13272 = !DILocation(line: 2474, column: 5, scope: !13263)
!13273 = !DILocation(line: 2474, column: 9, scope: !13263)
!13274 = !DILocation(line: 2474, column: 17, scope: !13263)
!13275 = !DILocation(line: 2474, column: 4, scope: !13263)
!13276 = !DILocation(line: 2473, column: 3, scope: !13263)
!13277 = !DILocation(line: 2473, column: 8, scope: !13263)
!13278 = !DILocation(line: 2473, column: 13, scope: !13263)
!13279 = !DILocation(line: 2473, column: 20, scope: !13263)
!13280 = !DILocation(line: 2477, column: 20, scope: !13176)
!13281 = !DILocation(line: 2477, column: 2, scope: !13176)
!13282 = !DILocation(line: 2477, column: 7, scope: !13176)
!13283 = !DILocation(line: 2477, column: 12, scope: !13176)
!13284 = !DILocation(line: 2477, column: 18, scope: !13176)
!13285 = !DILocation(line: 2478, column: 42, scope: !13176)
!13286 = !DILocation(line: 2478, column: 47, scope: !13176)
!13287 = !DILocation(line: 2478, column: 58, scope: !13176)
!13288 = !DILocation(line: 2479, column: 7, scope: !13176)
!13289 = !DILocation(line: 2478, column: 2, scope: !13176)
!13290 = !DILocation(line: 2481, column: 2, scope: !13176)
!13291 = distinct !DISubprogram(name: "hme_set_link_ksettings", scope: !3, file: !3, line: 2484, type: !6016, scopeLine: 2486, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!13292 = !DILocation(line: 402, column: 57, scope: !7876, inlinedAt: !13293)
!13293 = distinct !DILocation(line: 2504, column: 2, scope: !13291)
!13294 = !DILocation(line: 377, column: 55, scope: !7883, inlinedAt: !13295)
!13295 = distinct !DILocation(line: 2501, column: 2, scope: !13291)
!13296 = !DILocalVariable(name: "dev", arg: 1, scope: !13291, file: !3, line: 2484, type: !290)
!13297 = !DILocation(line: 2484, column: 54, scope: !13291)
!13298 = !DILocalVariable(name: "cmd", arg: 2, scope: !13291, file: !3, line: 2485, type: !6018)
!13299 = !DILocation(line: 2485, column: 44, scope: !13291)
!13300 = !DILocalVariable(name: "hp", scope: !13291, file: !3, line: 2487, type: !7554)
!13301 = !DILocation(line: 2487, column: 21, scope: !13291)
!13302 = !DILocation(line: 2487, column: 38, scope: !13291)
!13303 = !DILocation(line: 2487, column: 26, scope: !13291)
!13304 = !DILocation(line: 2490, column: 6, scope: !13305)
!13305 = distinct !DILexicalBlock(scope: !13291, file: !3, line: 2490, column: 6)
!13306 = !DILocation(line: 2490, column: 11, scope: !13305)
!13307 = !DILocation(line: 2490, column: 16, scope: !13305)
!13308 = !DILocation(line: 2490, column: 24, scope: !13305)
!13309 = !DILocation(line: 2490, column: 42, scope: !13305)
!13310 = !DILocation(line: 2491, column: 6, scope: !13305)
!13311 = !DILocation(line: 2491, column: 11, scope: !13305)
!13312 = !DILocation(line: 2491, column: 16, scope: !13305)
!13313 = !DILocation(line: 2491, column: 24, scope: !13305)
!13314 = !DILocation(line: 2490, column: 6, scope: !13291)
!13315 = !DILocation(line: 2492, column: 3, scope: !13305)
!13316 = !DILocation(line: 2493, column: 6, scope: !13317)
!13317 = distinct !DILexicalBlock(scope: !13291, file: !3, line: 2493, column: 6)
!13318 = !DILocation(line: 2493, column: 11, scope: !13317)
!13319 = !DILocation(line: 2493, column: 16, scope: !13317)
!13320 = !DILocation(line: 2493, column: 24, scope: !13317)
!13321 = !DILocation(line: 2493, column: 43, scope: !13317)
!13322 = !DILocation(line: 2494, column: 8, scope: !13317)
!13323 = !DILocation(line: 2494, column: 13, scope: !13317)
!13324 = !DILocation(line: 2494, column: 18, scope: !13317)
!13325 = !DILocation(line: 2494, column: 24, scope: !13317)
!13326 = !DILocation(line: 2494, column: 37, scope: !13317)
!13327 = !DILocation(line: 2495, column: 8, scope: !13317)
!13328 = !DILocation(line: 2495, column: 13, scope: !13317)
!13329 = !DILocation(line: 2495, column: 18, scope: !13317)
!13330 = !DILocation(line: 2495, column: 24, scope: !13317)
!13331 = !DILocation(line: 2495, column: 37, scope: !13317)
!13332 = !DILocation(line: 2496, column: 8, scope: !13317)
!13333 = !DILocation(line: 2496, column: 13, scope: !13317)
!13334 = !DILocation(line: 2496, column: 18, scope: !13317)
!13335 = !DILocation(line: 2496, column: 25, scope: !13317)
!13336 = !DILocation(line: 2496, column: 40, scope: !13317)
!13337 = !DILocation(line: 2497, column: 8, scope: !13317)
!13338 = !DILocation(line: 2497, column: 13, scope: !13317)
!13339 = !DILocation(line: 2497, column: 18, scope: !13317)
!13340 = !DILocation(line: 2497, column: 25, scope: !13317)
!13341 = !DILocation(line: 2493, column: 6, scope: !13291)
!13342 = !DILocation(line: 2498, column: 3, scope: !13317)
!13343 = !DILocation(line: 2501, column: 17, scope: !13291)
!13344 = !DILocation(line: 2501, column: 21, scope: !13291)
!13345 = !DILocation(line: 379, column: 2, scope: !8213, inlinedAt: !13295)
!13346 = !DILocation(line: 379, column: 2, scope: !8216, inlinedAt: !13295)
!13347 = !DILocation(line: 379, column: 2, scope: !8219, inlinedAt: !13295)
!13348 = !DILocation(line: 2502, column: 13, scope: !13291)
!13349 = !DILocation(line: 2502, column: 17, scope: !13291)
!13350 = !DILocation(line: 2502, column: 2, scope: !13291)
!13351 = !DILocation(line: 2503, column: 36, scope: !13291)
!13352 = !DILocation(line: 2503, column: 40, scope: !13291)
!13353 = !DILocation(line: 2503, column: 44, scope: !13291)
!13354 = !DILocation(line: 2503, column: 53, scope: !13291)
!13355 = !DILocation(line: 2503, column: 2, scope: !13291)
!13356 = !DILocation(line: 2504, column: 19, scope: !13291)
!13357 = !DILocation(line: 2504, column: 23, scope: !13291)
!13358 = !DILocation(line: 404, column: 2, scope: !8225, inlinedAt: !13293)
!13359 = !DILocation(line: 404, column: 2, scope: !8228, inlinedAt: !13293)
!13360 = !DILocation(line: 404, column: 2, scope: !8231, inlinedAt: !13293)
!13361 = !DILocation(line: 2506, column: 2, scope: !13291)
!13362 = !DILocation(line: 2507, column: 1, scope: !13291)
!13363 = distinct !DISubprogram(name: "pci_name", scope: !7282, file: !7282, line: 1875, type: !13364, scopeLine: 1876, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!13364 = !DISubroutineType(types: !13365)
!13365 = !{!292, !13366}
!13366 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13367, size: 64)
!13367 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7281)
!13368 = !DILocalVariable(name: "pdev", arg: 1, scope: !13363, file: !7282, line: 1875, type: !13366)
!13369 = !DILocation(line: 1875, column: 58, scope: !13363)
!13370 = !DILocation(line: 1877, column: 19, scope: !13363)
!13371 = !DILocation(line: 1877, column: 25, scope: !13363)
!13372 = !DILocation(line: 1877, column: 9, scope: !13363)
!13373 = !DILocation(line: 1877, column: 2, scope: !13363)
!13374 = distinct !DISubprogram(name: "arch_local_irq_disable", scope: !13375, file: !13375, line: 656, type: !3809, scopeLine: 657, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!13375 = !DIFile(filename: "./arch/x86/include/asm/paravirt.h", directory: "/home/lizy2001/genbc/linux")
!13376 = !DILocalVariable(name: "__edi", scope: !13377, file: !13375, line: 658, type: !312)
!13377 = distinct !DILexicalBlock(scope: !13374, file: !13375, line: 658, column: 2)
!13378 = !DILocation(line: 658, column: 2, scope: !13377)
!13379 = !DILocalVariable(name: "__esi", scope: !13377, file: !13375, line: 658, type: !312)
!13380 = !DILocalVariable(name: "__edx", scope: !13377, file: !13375, line: 658, type: !312)
!13381 = !DILocalVariable(name: "__ecx", scope: !13377, file: !13375, line: 658, type: !312)
!13382 = !DILocalVariable(name: "__eax", scope: !13377, file: !13375, line: 658, type: !312)
!13383 = !{i32 -2145689657, i32 -2145688925, i32 -2145688691, i32 -2145688640, i32 -2145688612, i32 -2145688587, i32 -2145688903, i32 -2145688890, i32 -2145688452, i32 -2145688333, i32 -2145688798, i32 -2145688771, i32 -2145688743, i32 -2145688713}
!13384 = !DILocation(line: 659, column: 1, scope: !13374)
!13385 = distinct !DISubprogram(name: "arch_local_irq_enable", scope: !13375, file: !13375, line: 661, type: !3809, scopeLine: 662, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!13386 = !DILocalVariable(name: "__edi", scope: !13387, file: !13375, line: 663, type: !312)
!13387 = distinct !DILexicalBlock(scope: !13385, file: !13375, line: 663, column: 2)
!13388 = !DILocation(line: 663, column: 2, scope: !13387)
!13389 = !DILocalVariable(name: "__esi", scope: !13387, file: !13375, line: 663, type: !312)
!13390 = !DILocalVariable(name: "__edx", scope: !13387, file: !13375, line: 663, type: !312)
!13391 = !DILocalVariable(name: "__ecx", scope: !13387, file: !13375, line: 663, type: !312)
!13392 = !DILocalVariable(name: "__eax", scope: !13387, file: !13375, line: 663, type: !312)
!13393 = !{i32 -2145687073, i32 -2145686343, i32 -2145686109, i32 -2145686058, i32 -2145686030, i32 -2145686005, i32 -2145686321, i32 -2145686308, i32 -2145685870, i32 -2145685751, i32 -2145686216, i32 -2145686189, i32 -2145686161, i32 -2145686131}
!13394 = !DILocation(line: 664, column: 1, scope: !13385)
!13395 = distinct !DISubprogram(name: "dev_set_drvdata", scope: !6541, file: !6541, line: 660, type: !13396, scopeLine: 661, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!13396 = !DISubroutineType(types: !13397)
!13397 = !{null, !6545, !591}
!13398 = !DILocalVariable(name: "dev", arg: 1, scope: !13395, file: !6541, line: 660, type: !6545)
!13399 = !DILocation(line: 660, column: 51, scope: !13395)
!13400 = !DILocalVariable(name: "data", arg: 2, scope: !13395, file: !6541, line: 660, type: !591)
!13401 = !DILocation(line: 660, column: 62, scope: !13395)
!13402 = !DILocation(line: 662, column: 21, scope: !13395)
!13403 = !DILocation(line: 662, column: 2, scope: !13395)
!13404 = !DILocation(line: 662, column: 7, scope: !13395)
!13405 = !DILocation(line: 662, column: 19, scope: !13395)
!13406 = !DILocation(line: 663, column: 1, scope: !13395)
!13407 = distinct !DISubprogram(name: "pci_get_drvdata", scope: !7282, file: !7282, line: 1865, type: !13408, scopeLine: 1866, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!13408 = !DISubroutineType(types: !13409)
!13409 = !{!591, !7280}
!13410 = !DILocalVariable(name: "pdev", arg: 1, scope: !13407, file: !7282, line: 1865, type: !7280)
!13411 = !DILocation(line: 1865, column: 53, scope: !13407)
!13412 = !DILocation(line: 1867, column: 26, scope: !13407)
!13413 = !DILocation(line: 1867, column: 32, scope: !13407)
!13414 = !DILocation(line: 1867, column: 9, scope: !13407)
!13415 = !DILocation(line: 1867, column: 2, scope: !13407)
!13416 = distinct !DISubprogram(name: "dma_free_coherent", scope: !7822, file: !7822, line: 400, type: !13417, scopeLine: 402, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!13417 = !DISubroutineType(types: !13418)
!13418 = !{null, !6545, !1039, !591, !2036}
!13419 = !DILocalVariable(name: "dev", arg: 1, scope: !13416, file: !7822, line: 400, type: !6545)
!13420 = !DILocation(line: 400, column: 53, scope: !13416)
!13421 = !DILocalVariable(name: "size", arg: 2, scope: !13416, file: !7822, line: 400, type: !1039)
!13422 = !DILocation(line: 400, column: 65, scope: !13416)
!13423 = !DILocalVariable(name: "cpu_addr", arg: 3, scope: !13416, file: !7822, line: 401, type: !591)
!13424 = !DILocation(line: 401, column: 9, scope: !13416)
!13425 = !DILocalVariable(name: "dma_handle", arg: 4, scope: !13416, file: !7822, line: 401, type: !2036)
!13426 = !DILocation(line: 401, column: 30, scope: !13416)
!13427 = !DILocation(line: 403, column: 24, scope: !13416)
!13428 = !DILocation(line: 403, column: 29, scope: !13416)
!13429 = !DILocation(line: 403, column: 35, scope: !13416)
!13430 = !DILocation(line: 403, column: 45, scope: !13416)
!13431 = !DILocation(line: 403, column: 9, scope: !13416)
!13432 = !DILocation(line: 403, column: 2, scope: !13416)
!13433 = distinct !DISubprogram(name: "dev_get_drvdata", scope: !6541, file: !6541, line: 655, type: !13434, scopeLine: 656, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!13434 = !DISubroutineType(types: !13435)
!13435 = !{!591, !6892}
!13436 = !DILocalVariable(name: "dev", arg: 1, scope: !13433, file: !6541, line: 655, type: !6892)
!13437 = !DILocation(line: 655, column: 58, scope: !13433)
!13438 = !DILocation(line: 657, column: 9, scope: !13433)
!13439 = !DILocation(line: 657, column: 14, scope: !13433)
!13440 = !DILocation(line: 657, column: 2, scope: !13433)
!13441 = distinct !DISubprogram(name: "happy_meal_pci_init", scope: !3, file: !3, line: 3244, type: !7861, scopeLine: 3245, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!13442 = !DILocation(line: 3246, column: 9, scope: !13441)
!13443 = !DILocation(line: 3246, column: 2, scope: !13441)
