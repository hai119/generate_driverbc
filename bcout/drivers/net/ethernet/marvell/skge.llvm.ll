; ModuleID = '../bcout/drivers/net/ethernet/marvell/skge.llvm.bc'
source_filename = "drivers/net/ethernet/marvell/skge.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64"

module asm ".section\09\22.initcall6.init\22, \22a\22\09"
module asm "__initcall_skge_init_module6:\09\09\09"
module asm ".long\09skge_init_module - .\09\09\09"
module asm ".previous\09\09\09\09\09"

%struct.module_version_attribute = type { %struct.module_attribute, i8*, i8* }
%struct.module_attribute = type { %struct.attribute, i64 (%struct.module_attribute*, %struct.module_kobject*, i8*)*, i64 (%struct.module_attribute*, %struct.module_kobject*, i8*, i64)*, void (%struct.module*, i8*)*, i32 (%struct.module*)*, void (%struct.module*)* }
%struct.attribute = type { i8*, i16 }
%struct.module_kobject = type { %struct.kobject, %struct.module*, %struct.kobject*, %struct.module_param_attrs*, %struct.completion* }
%struct.kobject = type { i8*, %struct.list_head, %struct.kobject*, %struct.kset*, %struct.kobj_type*, %struct.kernfs_node*, %struct.kref, i8 }
%struct.list_head = type { %struct.list_head*, %struct.list_head* }
%struct.kset = type { %struct.list_head, %struct.spinlock, %struct.kobject, %struct.kset_uevent_ops* }
%struct.spinlock = type { %union.anon.1 }
%union.anon.1 = type { %struct.raw_spinlock }
%struct.raw_spinlock = type { %struct.arch_spinlock_t }
%struct.arch_spinlock_t = type {}
%struct.kset_uevent_ops = type { i32 (%struct.kset*, %struct.kobject*)*, i8* (%struct.kset*, %struct.kobject*)*, i32 (%struct.kset*, %struct.kobject*, %struct.kobj_uevent_env*)* }
%struct.kobj_uevent_env = type { [3 x i8*], [64 x i8*], i32, [2048 x i8], i32 }
%struct.kobj_type = type { void (%struct.kobject*)*, %struct.sysfs_ops*, %struct.attribute**, %struct.attribute_group**, %struct.kobj_ns_type_operations* (%struct.kobject*)*, i8* (%struct.kobject*)*, void (%struct.kobject*, %struct.kuid_t*, %struct.kgid_t*)* }
%struct.sysfs_ops = type { i64 (%struct.kobject*, %struct.attribute*, i8*)*, i64 (%struct.kobject*, %struct.attribute*, i8*, i64)* }
%struct.attribute_group = type { i8*, i16 (%struct.kobject*, %struct.attribute*, i32)*, i16 (%struct.kobject*, %struct.bin_attribute*, i32)*, %struct.attribute**, %struct.bin_attribute** }
%struct.bin_attribute = type { %struct.attribute, i64, i8*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i32 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, %struct.vm_area_struct*)* }
%struct.file = type { %union.anon, %struct.path, %struct.inode*, %struct.file_operations*, %struct.spinlock, i32, %struct.atomic64_t, i32, i32, %struct.mutex, i64, %struct.fown_struct, %struct.cred*, %struct.file_ra_state, i64, i8*, %struct.list_head, %struct.list_head, %struct.address_space*, i32, i32 }
%union.anon = type { %struct.callback_head }
%struct.callback_head = type { %struct.callback_head*, void (%struct.callback_head*)* }
%struct.path = type { %struct.vfsmount*, %struct.dentry* }
%struct.vfsmount = type opaque
%struct.dentry = type { i32, %struct.seqcount_spinlock, %struct.hlist_bl_node, %struct.dentry*, %struct.qstr, %struct.inode*, [32 x i8], %struct.lockref, %struct.dentry_operations*, %struct.super_block*, i64, i8*, %union.anon.84, %struct.list_head, %struct.list_head, %union.anon.85 }
%struct.seqcount_spinlock = type { %struct.seqcount }
%struct.seqcount = type { i32 }
%struct.hlist_bl_node = type { %struct.hlist_bl_node*, %struct.hlist_bl_node** }
%struct.qstr = type { %union.anon.0, i8* }
%union.anon.0 = type { i64 }
%struct.lockref = type { %union.anon.82 }
%union.anon.82 = type { %struct.anon.83 }
%struct.anon.83 = type { %struct.spinlock, i32 }
%struct.dentry_operations = type { i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.qstr*)*, i32 (%struct.dentry*, i32, i8*, %struct.qstr*)*, i32 (%struct.dentry*)*, i32 (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*, %struct.inode*)*, i8* (%struct.dentry*, i8*, i32)*, %struct.vfsmount* (%struct.path*)*, i32 (%struct.path*, i1)*, %struct.dentry* (%struct.dentry*, %struct.inode*)*, [24 x i8] }
%struct.super_block = type { %struct.list_head, i32, i8, i64, i64, %struct.file_system_type*, %struct.super_operations*, %struct.dquot_operations*, %struct.quotactl_ops*, %struct.export_operations*, i64, i64, i64, %struct.dentry*, %struct.rw_semaphore, i32, %struct.atomic_t, %struct.xattr_handler**, %struct.hlist_bl_head, %struct.list_head, %struct.block_device*, %struct.backing_dev_info*, %struct.mtd_info*, %struct.hlist_node, i32, %struct.quota_info, %struct.sb_writers, i8*, i32, i64, i64, i32, %struct.fsnotify_mark_connector*, [32 x i8], %struct.uuid_t, i32, i32, %struct.mutex, i8*, %struct.dentry_operations*, i32, %struct.shrinker, %struct.atomic64_t, %struct.atomic64_t, i32, i32, %struct.workqueue_struct*, %struct.hlist_head, %struct.user_namespace*, %struct.list_lru, %struct.list_lru, %struct.callback_head, %struct.work_struct, %struct.mutex, i32, %struct.spinlock, %struct.list_head, %struct.spinlock, %struct.list_head }
%struct.file_system_type = type { i8*, i32, i32 (%struct.fs_context*)*, %struct.fs_parameter_spec*, %struct.dentry* (%struct.file_system_type*, i32, i8*, i8*)*, void (%struct.super_block*)*, %struct.module*, %struct.file_system_type*, %struct.hlist_head, %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key, [3 x %struct.lock_class_key], %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key }
%struct.fs_context = type opaque
%struct.fs_parameter_spec = type opaque
%struct.lock_class_key = type {}
%struct.super_operations = type { %struct.inode* (%struct.super_block*)*, void (%struct.inode*)*, void (%struct.inode*)*, void (%struct.inode*, i32)*, i32 (%struct.inode*, %struct.writeback_control*)*, i32 (%struct.inode*)*, void (%struct.inode*)*, void (%struct.super_block*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.dentry*, %struct.kstatfs*)*, i32 (%struct.super_block*, i32*, i8*)*, void (%struct.super_block*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.super_block*, %struct.page*, i32)*, i64 (%struct.super_block*, %struct.shrink_control*)*, i64 (%struct.super_block*, %struct.shrink_control*)* }
%struct.writeback_control = type opaque
%struct.kstatfs = type opaque
%struct.seq_file = type { i8*, i64, i64, i64, i64, i64, i64, %struct.mutex, %struct.seq_operations*, i32, %struct.file*, i8* }
%struct.seq_operations = type { i8* (%struct.seq_file*, i64*)*, void (%struct.seq_file*, i8*)*, i8* (%struct.seq_file*, i8*, i64*)*, i32 (%struct.seq_file*, i8*)* }
%struct.page = type { i64, %union.anon.2, %union.anon.74, %struct.atomic_t, [8 x i8] }
%union.anon.2 = type { %struct.anon.3 }
%struct.anon.3 = type { %struct.list_head, %struct.address_space*, i64, i64 }
%union.anon.74 = type { %struct.atomic_t }
%struct.shrink_control = type { i32, i32, i64, i64, %struct.mem_cgroup* }
%struct.mem_cgroup = type opaque
%struct.dquot_operations = type { i32 (%struct.dquot*)*, %struct.dquot* (%struct.super_block*, i32)*, void (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, i32)*, i64* (%struct.inode*)*, i32 (%struct.inode*, %struct.kprojid_t*)*, i32 (%struct.inode*, i64*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.dquot = type { %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.mutex, %struct.spinlock, %struct.atomic_t, %struct.super_block*, %struct.kqid, i64, i64, %struct.mem_dqblk }
%struct.kqid = type { %union.anon.75, i32 }
%union.anon.75 = type { %struct.kuid_t }
%struct.kuid_t = type { i32 }
%struct.mem_dqblk = type { i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.kprojid_t = type { i32 }
%struct.quotactl_ops = type { i32 (%struct.super_block*, i32, i32, %struct.path*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32, %struct.qc_info*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.kqid*, %struct.qc_dqblk*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.qc_state*)*, i32 (%struct.super_block*, i32)* }
%struct.qc_info = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.qc_dqblk = type { i32, i64, i64, i64, i64, i64, i64, i64, i64, i32, i32, i64, i64, i64, i64, i32 }
%struct.qc_state = type { i32, [3 x %struct.qc_type_state] }
%struct.qc_type_state = type { i32, i32, i32, i32, i32, i32, i32, i64, i64, i64 }
%struct.export_operations = type opaque
%struct.rw_semaphore = type { %struct.atomic64_t, %struct.atomic64_t, %struct.raw_spinlock, %struct.list_head }
%struct.atomic_t = type { i32 }
%struct.xattr_handler = type opaque
%struct.hlist_bl_head = type { %struct.hlist_bl_node* }
%struct.block_device = type opaque
%struct.backing_dev_info = type opaque
%struct.mtd_info = type opaque
%struct.hlist_node = type { %struct.hlist_node*, %struct.hlist_node** }
%struct.quota_info = type { i32, %struct.rw_semaphore, [3 x %struct.inode*], [3 x %struct.mem_dqinfo], [3 x %struct.quota_format_ops*] }
%struct.mem_dqinfo = type { %struct.quota_format_type*, i32, %struct.list_head, i64, i32, i32, i64, i64, i8* }
%struct.quota_format_type = type { i32, %struct.quota_format_ops*, %struct.module*, %struct.quota_format_type* }
%struct.quota_format_ops = type { i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.sb_writers = type { i32, %struct.wait_queue_head, [3 x %struct.percpu_rw_semaphore] }
%struct.wait_queue_head = type { %struct.spinlock, %struct.list_head }
%struct.percpu_rw_semaphore = type { %struct.rcu_sync, i32*, %struct.rcuwait, %struct.wait_queue_head, %struct.atomic_t }
%struct.rcu_sync = type { i32, i32, %struct.wait_queue_head, %struct.callback_head }
%struct.rcuwait = type { %struct.task_struct* }
%struct.task_struct = type { %struct.thread_info, i64, i8*, %struct.refcount_struct, i32, i32, i32, i32, i32, i32, i32, %struct.sched_class*, %struct.sched_entity, %struct.sched_rt_entity, %struct.sched_dl_entity, i32, i32, %struct.cpumask*, %struct.cpumask, %struct.sched_info, %struct.list_head, %struct.mm_struct*, %struct.mm_struct*, %struct.vmacache, i32, i32, i32, i32, i64, i32, i8, [3 x i8], i8, i64, %struct.restart_block, i32, i32, i64, %struct.task_struct*, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.pid*, [4 x %struct.hlist_node], %struct.list_head, %struct.list_head, %struct.completion*, i32*, i32*, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, %struct.posix_cputimers, %struct.posix_cputimers_work, %struct.cred*, %struct.cred*, %struct.cred*, %struct.key*, [16 x i8], %struct.nameidata*, %struct.fs_struct*, %struct.files_struct*, %struct.io_uring_task*, %struct.nsproxy*, %struct.signal_struct*, %struct.sighand_struct*, %struct.sigset_t, %struct.sigset_t, %struct.sigset_t, %struct.sigpending, i64, i64, i32, %struct.callback_head*, %struct.seccomp, i64, i64, %struct.spinlock, %struct.raw_spinlock, %struct.wake_q_node, %struct.rb_root_cached, %struct.task_struct*, %struct.rt_mutex_waiter*, i8*, %struct.bio_list*, %struct.blk_plug*, %struct.reclaim_state*, %struct.backing_dev_info*, %struct.io_context*, %struct.capture_control*, i64, %struct.kernel_siginfo*, %struct.task_io_accounting, %struct.robust_list_head*, %struct.list_head, %struct.futex_pi_state*, %struct.mutex, i32, [2 x %struct.perf_event_context*], %struct.mutex, %struct.list_head, %struct.rseq*, i32, i64, %struct.tlbflush_unmap_batch, %union.anon.67, %struct.pipe_inode_info*, %struct.page_frag, i32, i32, i64, i64, i64, i32, %struct.task_struct*, %struct.vm_struct*, %struct.refcount_struct, i8*, i64, i64, i64, %struct.callback_head, [24 x i8], %struct.thread_struct }
%struct.thread_info = type { i64, i32 }
%struct.sched_class = type opaque
%struct.sched_entity = type { %struct.load_weight, %struct.rb_node, %struct.list_head, i32, i64, i64, i64, i64, i64, %struct.sched_statistics }
%struct.load_weight = type { i64, i32 }
%struct.rb_node = type { i64, %struct.rb_node*, %struct.rb_node* }
%struct.sched_statistics = type {}
%struct.sched_rt_entity = type { %struct.list_head, i64, i64, i32, i16, i16, %struct.sched_rt_entity* }
%struct.sched_dl_entity = type { %struct.rb_node, i64, i64, i64, i64, i64, i64, i64, i32, i8, %struct.hrtimer, %struct.hrtimer, %struct.sched_dl_entity* }
%struct.hrtimer = type { %struct.timerqueue_node, i64, i32 (%struct.hrtimer*)*, %struct.hrtimer_clock_base*, i8, i8, i8, i8 }
%struct.timerqueue_node = type { %struct.rb_node, i64 }
%struct.hrtimer_clock_base = type { %struct.hrtimer_cpu_base*, i32, i32, %struct.seqcount_raw_spinlock, %struct.hrtimer*, %struct.timerqueue_head, i64 ()*, i64 }
%struct.hrtimer_cpu_base = type { %struct.raw_spinlock, i32, i32, i32, i8, i64, %struct.hrtimer*, i64, %struct.hrtimer*, [16 x i8], [8 x %struct.hrtimer_clock_base] }
%struct.seqcount_raw_spinlock = type { %struct.seqcount }
%struct.timerqueue_head = type { %struct.rb_root_cached }
%struct.cpumask = type { [1 x i64] }
%struct.sched_info = type {}
%struct.mm_struct = type { %struct.anon.18, [0 x i64] }
%struct.anon.18 = type { %struct.vm_area_struct*, %struct.rb_root, i64, i64 (%struct.file*, i64, i64, i64, i64)*, i64, i64, i64, i64, %struct.pgd_t*, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i32, %struct.spinlock, %struct.rw_semaphore, %struct.list_head, i64, i64, i64, i64, %struct.atomic64_t, i64, i64, i64, i64, %struct.spinlock, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, [44 x i64], %struct.mm_rss_stat, %struct.linux_binfmt*, %struct.mm_context_t, i64, %struct.core_state*, %struct.spinlock, %struct.kioctx_table*, %struct.user_namespace*, %struct.file*, %struct.mmu_notifier_subscriptions*, %struct.atomic_t, i8, %struct.uprobes_state, %struct.work_struct, i32 }
%struct.vm_area_struct = type { i64, i64, %struct.vm_area_struct*, %struct.vm_area_struct*, %struct.rb_node, i64, %struct.mm_struct*, %struct.pgprot, i64, %struct.anon.19, %struct.list_head, %struct.anon_vma*, %struct.vm_operations_struct*, i64, %struct.file*, i8*, %struct.atomic64_t, %struct.vm_userfaultfd_ctx }
%struct.pgprot = type { i64 }
%struct.anon.19 = type { %struct.rb_node, i64 }
%struct.anon_vma = type opaque
%struct.vm_operations_struct = type { void (%struct.vm_area_struct*)*, void (%struct.vm_area_struct*)*, i32 (%struct.vm_area_struct*, i64)*, i32 (%struct.vm_area_struct*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_fault*, i32)*, void (%struct.vm_fault*, i64, i64)*, i64 (%struct.vm_area_struct*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_area_struct*, i64, i8*, i32, i32)*, i8* (%struct.vm_area_struct*)*, %struct.page* (%struct.vm_area_struct*, i64)* }
%struct.vm_fault = type { %struct.vm_area_struct*, i32, i32, i64, i64, %struct.pmd_t*, %struct.pud_t*, %struct.pte_t, %struct.page*, %struct.page*, %struct.pte_t*, %struct.spinlock*, %struct.page* }
%struct.pmd_t = type { i64 }
%struct.pud_t = type { i64 }
%struct.pte_t = type { i64 }
%struct.vm_userfaultfd_ctx = type {}
%struct.rb_root = type { %struct.rb_node* }
%struct.pgd_t = type { i64 }
%struct.mm_rss_stat = type { [4 x %struct.atomic64_t] }
%struct.linux_binfmt = type opaque
%struct.mm_context_t = type { i64, %struct.atomic64_t, %struct.rw_semaphore, %struct.ldt_struct*, i16, %struct.mutex, i8*, %struct.vdso_image*, %struct.atomic_t, i16, i16 }
%struct.ldt_struct = type opaque
%struct.vdso_image = type { i8*, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.core_state = type { %struct.atomic_t, %struct.core_thread, %struct.completion }
%struct.core_thread = type { %struct.task_struct*, %struct.core_thread* }
%struct.completion = type { i32, %struct.swait_queue_head }
%struct.swait_queue_head = type { %struct.raw_spinlock, %struct.list_head }
%struct.kioctx_table = type opaque
%struct.mmu_notifier_subscriptions = type opaque
%struct.uprobes_state = type {}
%struct.vmacache = type { i64, [4 x %struct.vm_area_struct*] }
%struct.restart_block = type { i64 (%struct.restart_block*)*, %union.anon.20 }
%union.anon.20 = type { %struct.anon.21 }
%struct.anon.21 = type { i32*, i32, i32, i32, i64, i32* }
%struct.pid = type { %struct.refcount_struct, i32, %struct.spinlock, [4 x %struct.hlist_head], %struct.hlist_head, %struct.wait_queue_head, %struct.callback_head, [1 x %struct.upid] }
%struct.upid = type { i32, %struct.pid_namespace* }
%struct.pid_namespace = type opaque
%struct.prev_cputime = type { i64, i64, %struct.raw_spinlock }
%struct.posix_cputimers = type { [3 x %struct.posix_cputimer_base], i32, i32 }
%struct.posix_cputimer_base = type { i64, %struct.timerqueue_head }
%struct.posix_cputimers_work = type { %struct.callback_head, i32 }
%struct.key = type { %struct.refcount_struct, i32, %union.anon.25, %struct.rw_semaphore, %struct.key_user*, i8*, %union.anon.26, i64, %struct.kuid_t, %struct.kgid_t, i32, i16, i16, i16, i64, %union.anon.27, %union.anon.31, %struct.key_restriction* }
%union.anon.25 = type { %struct.rb_node }
%struct.key_user = type opaque
%union.anon.26 = type { i64 }
%struct.kgid_t = type { i32 }
%union.anon.27 = type { %struct.keyring_index_key }
%struct.keyring_index_key = type { i64, %union.anon.28, %struct.key_type*, %struct.key_tag*, i8* }
%union.anon.28 = type { i64 }
%struct.key_type = type opaque
%struct.key_tag = type { %struct.callback_head, %struct.refcount_struct, i8 }
%union.anon.31 = type { %union.key_payload }
%union.key_payload = type { [4 x i8*] }
%struct.key_restriction = type { i32 (%struct.key*, %struct.key_type*, %union.key_payload*, %struct.key*)*, %struct.key*, %struct.key_type* }
%struct.nameidata = type opaque
%struct.fs_struct = type opaque
%struct.files_struct = type opaque
%struct.io_uring_task = type opaque
%struct.nsproxy = type { %struct.atomic_t, %struct.uts_namespace*, %struct.ipc_namespace*, %struct.mnt_namespace*, %struct.pid_namespace*, %struct.net*, %struct.time_namespace*, %struct.time_namespace*, %struct.cgroup_namespace* }
%struct.uts_namespace = type opaque
%struct.ipc_namespace = type opaque
%struct.mnt_namespace = type opaque
%struct.net = type { %struct.refcount_struct, %struct.refcount_struct, %struct.spinlock, i32, i32, i32, %struct.spinlock, %struct.atomic_t, %struct.list_head, %struct.list_head, %struct.llist_node, %struct.key_tag*, %struct.user_namespace*, %struct.ucounts*, %struct.idr, %struct.ns_common, %struct.list_head, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.ctl_table_set, %struct.sock*, %struct.sock*, %struct.uevent_sock*, %struct.hlist_head*, %struct.hlist_head*, %struct.raw_notifier_head, i32, %struct.net_device*, %struct.list_head, %struct.netns_core, %struct.netns_mib, %struct.netns_packet, %struct.netns_unix, %struct.netns_nexthop, %struct.netns_ipv4, %struct.netns_ipv6, %struct.sk_buff_head, %struct.net_generic*, %struct.netns_bpf, %struct.atomic64_t, %struct.netns_can, %struct.sock* }
%struct.llist_node = type { %struct.llist_node* }
%struct.ucounts = type { %struct.hlist_node, %struct.user_namespace*, %struct.kuid_t, i32, [10 x %struct.atomic_t] }
%struct.idr = type { %struct.xarray, i32, i32 }
%struct.xarray = type { %struct.spinlock, i32, i8* }
%struct.ns_common = type { %struct.atomic64_t, %struct.proc_ns_operations*, i32 }
%struct.proc_ns_operations = type opaque
%struct.proc_dir_entry = type opaque
%struct.ctl_table_set = type { i32 (%struct.ctl_table_set*)*, %struct.ctl_dir }
%struct.ctl_dir = type { %struct.ctl_table_header, %struct.rb_root }
%struct.ctl_table_header = type { %union.anon.35, %struct.completion*, %struct.ctl_table*, %struct.ctl_table_root*, %struct.ctl_table_set*, %struct.ctl_dir*, %struct.ctl_node*, %struct.hlist_head }
%union.anon.35 = type { %struct.anon.36 }
%struct.anon.36 = type { %struct.ctl_table*, i32, i32, i32 }
%struct.ctl_table = type { i8*, i8*, i32, i16, %struct.ctl_table*, i32 (%struct.ctl_table*, i32, i8*, i64*, i64*)*, %struct.ctl_table_poll*, i8*, i8* }
%struct.ctl_table_poll = type { %struct.atomic_t, %struct.wait_queue_head }
%struct.ctl_table_root = type { %struct.ctl_table_set, %struct.ctl_table_set* (%struct.ctl_table_root*)*, void (%struct.ctl_table_header*, %struct.ctl_table*, %struct.kuid_t*, %struct.kgid_t*)*, i32 (%struct.ctl_table_header*, %struct.ctl_table*)* }
%struct.ctl_node = type { %struct.rb_node, %struct.ctl_table_header* }
%struct.uevent_sock = type opaque
%struct.raw_notifier_head = type { %struct.notifier_block* }
%struct.notifier_block = type { i32 (%struct.notifier_block*, i64, i8*)*, %struct.notifier_block*, i32 }
%struct.net_device = type { [16 x i8], %struct.netdev_name_node*, %struct.dev_ifalias*, i64, i64, i64, i32, i64, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.anon.87, i64, i64, i64, i64, i64, i64, i64, i32, i32, %struct.net_device_stats, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.iw_handler_def*, %struct.iw_public_data*, %struct.net_device_ops*, %struct.ethtool_ops*, %struct.ndisc_ops*, %struct.header_ops*, i32, i32, i16, i16, i8, i8, i8, i8, i32, i32, i32, i16, i16, i8, i8, i16, i16, [32 x i8], i8, i8, i8, i8, i16, i16, i16, %struct.spinlock, %struct.netdev_hw_addr_list, %struct.netdev_hw_addr_list, %struct.netdev_hw_addr_list, %struct.kset*, i32, i32, i8, %struct.vlan_info*, %struct.in_device*, %struct.inet6_dev*, %struct.wireless_dev*, %struct.wpan_dev*, i8*, %struct.netdev_rx_queue*, i32, i32, %struct.bpf_prog*, i64, i32, i32 (%struct.sk_buff**)*, i8*, %struct.netdev_queue*, [32 x i8], %struct.hlist_node, %struct.netdev_queue*, i32, i32, %struct.Qdisc*, i32, %struct.spinlock, %struct.xdp_dev_bulk_queue*, %struct.timer_list, i32, i32, %struct.list_head, i32*, %struct.list_head, i8, i8, i16, i8, void (%struct.net_device*)*, %struct.possible_net_t, %union.anon.127, %struct.device, [4 x %struct.attribute_group*], %struct.attribute_group*, %struct.rtnl_link_ops*, i32, i16, i16, [16 x %struct.netdev_tc_txq], [16 x i8], %struct.phy_device*, %struct.sfp_bus*, %struct.lock_class_key*, %struct.lock_class_key*, i8, i8, %struct.list_head, %struct.udp_tunnel_nic_info*, %struct.udp_tunnel_nic*, [3 x %struct.bpf_xdp_entity] }
%struct.netdev_name_node = type { %struct.hlist_node, %struct.list_head, %struct.net_device*, i8* }
%struct.dev_ifalias = type { %struct.callback_head, [0 x i8] }
%struct.anon.87 = type { %struct.list_head, %struct.list_head }
%struct.net_device_stats = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.iw_handler_def = type opaque
%struct.iw_public_data = type opaque
%struct.net_device_ops = type { i32 (%struct.net_device*)*, void (%struct.net_device*)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*)*, i32 (%struct.sk_buff*, %struct.net_device*)*, i64 (%struct.sk_buff*, %struct.net_device*, i64)*, i16 (%struct.net_device*, %struct.sk_buff*, %struct.net_device*)*, void (%struct.net_device*, i32)*, void (%struct.net_device*)*, i32 (%struct.net_device*, i8*)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*, %struct.ifreq*, i32)*, i32 (%struct.net_device*, %struct.ifmap*)*, i32 (%struct.net_device*, i32)*, i32 (%struct.net_device*, %struct.neigh_parms*)*, void (%struct.net_device*, i32)*, void (%struct.net_device*, %struct.rtnl_link_stats64*)*, i1 (%struct.net_device*, i32)*, i32 (i32, %struct.net_device*, i8*)*, %struct.net_device_stats* (%struct.net_device*)*, i32 (%struct.net_device*, i16, i16)*, i32 (%struct.net_device*, i16, i16)*, i32 (%struct.net_device*, i32, i8*)*, i32 (%struct.net_device*, i32, i16, i8, i16)*, i32 (%struct.net_device*, i32, i32, i32)*, i32 (%struct.net_device*, i32, i1)*, i32 (%struct.net_device*, i32, i1)*, i32 (%struct.net_device*, i32, %struct.ifla_vf_info*)*, i32 (%struct.net_device*, i32, i32)*, i32 (%struct.net_device*, i32, %struct.ifla_vf_stats*)*, i32 (%struct.net_device*, i32, %struct.nlattr**)*, i32 (%struct.net_device*, i32, %struct.sk_buff*)*, i32 (%struct.net_device*, i32, %struct.ifla_vf_guid*, %struct.ifla_vf_guid*)*, i32 (%struct.net_device*, i32, i64, i32)*, i32 (%struct.net_device*, i32, i1)*, i32 (%struct.net_device*, i32, i8*)*, i32 (%struct.net_device*, %struct.net_device*, %struct.netlink_ext_ack*)*, i32 (%struct.net_device*, %struct.net_device*)*, %struct.net_device* (%struct.net_device*, %struct.sk_buff*, i1)*, i64 (%struct.net_device*, i64)*, i32 (%struct.net_device*, i64)*, i32 (%struct.net_device*, %struct.neighbour*)*, void (%struct.net_device*, %struct.neighbour*)*, i32 (%struct.ndmsg*, %struct.nlattr**, %struct.net_device*, i8*, i16, i16, %struct.netlink_ext_ack*)*, i32 (%struct.ndmsg*, %struct.nlattr**, %struct.net_device*, i8*, i16)*, i32 (%struct.sk_buff*, %struct.netlink_callback*, %struct.net_device*, %struct.net_device*, i32*)*, i32 (%struct.sk_buff*, %struct.nlattr**, %struct.net_device*, i8*, i16, i32, i32, %struct.netlink_ext_ack*)*, i32 (%struct.net_device*, %struct.nlmsghdr*, i16, %struct.netlink_ext_ack*)*, i32 (%struct.sk_buff*, i32, i32, %struct.net_device*, i32, i32)*, i32 (%struct.net_device*, %struct.nlmsghdr*, i16)*, i32 (%struct.net_device*, i1)*, i32 (%struct.net_device*, %struct.netdev_phys_item_id*)*, i32 (%struct.net_device*, %struct.netdev_phys_item_id*)*, i32 (%struct.net_device*, i8*, i64)*, void (%struct.net_device*, %struct.udp_tunnel_info*)*, void (%struct.net_device*, %struct.udp_tunnel_info*)*, i8* (%struct.net_device*, %struct.net_device*)*, void (%struct.net_device*, i8*)*, i32 (%struct.net_device*, i32, i32)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*, i1)*, i32 (%struct.net_device*, %struct.sk_buff*)*, void (%struct.net_device*, i32)*, i32 (%struct.net_device*, %struct.netdev_bpf*)*, i32 (%struct.net_device*, i32, %struct.xdp_frame**, i32)*, i32 (%struct.net_device*, i32, i32)*, %struct.devlink_port* (%struct.net_device*)*, i32 (%struct.net_device*, %struct.ip_tunnel_parm*, i32)*, %struct.net_device* (%struct.net_device*)* }
%struct.sk_buff = type { %union.anon.40, %union.anon.43, %union.anon.44, [48 x i8], %union.anon.45, i32, i32, i16, i16, i16, [0 x i8], i8, [0 x i32], [0 x i8], i16, [0 x i8], i16, %union.anon.47, i32, i32, i32, i16, i16, %union.anon.49, %union.anon.50, %union.anon.51, i16, i16, i16, i16, i16, i16, i16, [0 x i32], i32, i32, i8*, i8*, i32, %struct.refcount_struct }
%union.anon.40 = type { %struct.anon.41 }
%struct.anon.41 = type { %struct.sk_buff*, %struct.sk_buff*, %union.anon.42 }
%union.anon.42 = type { %struct.net_device* }
%union.anon.43 = type { %struct.sock* }
%union.anon.44 = type { i64 }
%union.anon.45 = type { %struct.anon.46 }
%struct.anon.46 = type { i64, void (%struct.sk_buff*)* }
%union.anon.47 = type { i32 }
%union.anon.49 = type { i32 }
%union.anon.50 = type { i32 }
%union.anon.51 = type { i16 }
%struct.ifreq = type { %union.anon.88, %union.anon.89 }
%union.anon.88 = type { [16 x i8] }
%union.anon.89 = type { %struct.ifmap }
%struct.ifmap = type { i64, i64, i16, i8, i8, i8 }
%struct.neigh_parms = type opaque
%struct.rtnl_link_stats64 = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.ifla_vf_info = type { i32, [32 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i16 }
%struct.ifla_vf_stats = type { i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.nlattr = type { i16, i16 }
%struct.ifla_vf_guid = type { i32, i64 }
%struct.netlink_ext_ack = type { i8*, %struct.nlattr*, %struct.nla_policy*, [20 x i8], i8 }
%struct.nla_policy = type opaque
%struct.neighbour = type opaque
%struct.ndmsg = type { i8, i8, i16, i32, i16, i8, i8 }
%struct.netlink_callback = type { %struct.sk_buff*, %struct.nlmsghdr*, i32 (%struct.sk_buff*, %struct.netlink_callback*)*, i32 (%struct.netlink_callback*)*, i8*, %struct.module*, %struct.netlink_ext_ack*, i16, i16, i32, i32, i32, i8, %union.anon.91 }
%struct.nlmsghdr = type { i32, i16, i16, i32, i32 }
%union.anon.91 = type { [6 x i64] }
%struct.netdev_phys_item_id = type { [32 x i8], i8 }
%struct.udp_tunnel_info = type opaque
%struct.netdev_bpf = type { i32, %union.anon.92 }
%union.anon.92 = type { %struct.anon.93 }
%struct.anon.93 = type { i32, %struct.bpf_prog*, %struct.netlink_ext_ack* }
%struct.xdp_frame = type { i8*, i16, i16, i32, %struct.xdp_mem_info, %struct.net_device* }
%struct.xdp_mem_info = type { i32, i32 }
%struct.devlink_port = type opaque
%struct.ip_tunnel_parm = type opaque
%struct.ethtool_ops = type { i32, void (%struct.net_device*, %struct.ethtool_drvinfo*)*, i32 (%struct.net_device*)*, void (%struct.net_device*, %struct.ethtool_regs*, i8*)*, void (%struct.net_device*, %struct.ethtool_wolinfo*)*, i32 (%struct.net_device*, %struct.ethtool_wolinfo*)*, i32 (%struct.net_device*)*, void (%struct.net_device*, i32)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*, %struct.ethtool_link_ext_state_info*)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*, %struct.ethtool_eeprom*, i8*)*, i32 (%struct.net_device*, %struct.ethtool_eeprom*, i8*)*, i32 (%struct.net_device*, %struct.ethtool_coalesce*)*, i32 (%struct.net_device*, %struct.ethtool_coalesce*)*, void (%struct.net_device*, %struct.ethtool_ringparam*)*, i32 (%struct.net_device*, %struct.ethtool_ringparam*)*, void (%struct.net_device*, %struct.ethtool_pause_stats*)*, void (%struct.net_device*, %struct.ethtool_pauseparam*)*, i32 (%struct.net_device*, %struct.ethtool_pauseparam*)*, void (%struct.net_device*, %struct.ethtool_test*, i64*)*, void (%struct.net_device*, i32, i8*)*, i32 (%struct.net_device*, i32)*, void (%struct.net_device*, %struct.ethtool_stats*, i64*)*, i32 (%struct.net_device*)*, void (%struct.net_device*)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*, i32)*, i32 (%struct.net_device*, i32)*, i32 (%struct.net_device*, %struct.ethtool_rxnfc*, i32*)*, i32 (%struct.net_device*, %struct.ethtool_rxnfc*)*, i32 (%struct.net_device*, %struct.ethtool_flash*)*, i32 (%struct.net_device*, i32*)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*, i32*, i8*, i8*)*, i32 (%struct.net_device*, i32*, i8*, i8)*, i32 (%struct.net_device*, i32*, i8*, i8*, i32)*, i32 (%struct.net_device*, i32*, i8*, i8, i32*, i1)*, void (%struct.net_device*, %struct.ethtool_channels*)*, i32 (%struct.net_device*, %struct.ethtool_channels*)*, i32 (%struct.net_device*, %struct.ethtool_dump*)*, i32 (%struct.net_device*, %struct.ethtool_dump*, i8*)*, i32 (%struct.net_device*, %struct.ethtool_dump*)*, i32 (%struct.net_device*, %struct.ethtool_ts_info*)*, i32 (%struct.net_device*, %struct.ethtool_modinfo*)*, i32 (%struct.net_device*, %struct.ethtool_eeprom*, i8*)*, i32 (%struct.net_device*, %struct.ethtool_eee*)*, i32 (%struct.net_device*, %struct.ethtool_eee*)*, i32 (%struct.net_device*, %struct.ethtool_tunable*, i8*)*, i32 (%struct.net_device*, %struct.ethtool_tunable*, i8*)*, i32 (%struct.net_device*, i32, %struct.ethtool_coalesce*)*, i32 (%struct.net_device*, i32, %struct.ethtool_coalesce*)*, i32 (%struct.net_device*, %struct.ethtool_link_ksettings*)*, i32 (%struct.net_device*, %struct.ethtool_link_ksettings*)*, i32 (%struct.net_device*, %struct.ethtool_fecparam*)*, i32 (%struct.net_device*, %struct.ethtool_fecparam*)*, void (%struct.net_device*, %struct.ethtool_stats*, i64*)*, i32 (%struct.net_device*, %struct.ethtool_tunable*, i8*)*, i32 (%struct.net_device*, %struct.ethtool_tunable*, i8*)* }
%struct.ethtool_drvinfo = type { i32, [32 x i8], [32 x i8], [32 x i8], [32 x i8], [32 x i8], [12 x i8], i32, i32, i32, i32, i32 }
%struct.ethtool_regs = type { i32, i32, i32, [0 x i8] }
%struct.ethtool_wolinfo = type { i32, i32, i32, [6 x i8] }
%struct.ethtool_link_ext_state_info = type { i32, %union.anon.124 }
%union.anon.124 = type { i32 }
%struct.ethtool_coalesce = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.ethtool_ringparam = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.ethtool_pause_stats = type { i64, i64 }
%struct.ethtool_pauseparam = type { i32, i32, i32, i32 }
%struct.ethtool_test = type { i32, i32, i32, i32, [0 x i64] }
%struct.ethtool_rxnfc = type { i32, i32, i64, %struct.ethtool_rx_flow_spec, %union.anon.125, [0 x i32] }
%struct.ethtool_rx_flow_spec = type { i32, %union.ethtool_flow_union, %struct.ethtool_flow_ext, %union.ethtool_flow_union, %struct.ethtool_flow_ext, i64, i32 }
%union.ethtool_flow_union = type { %struct.ethtool_tcpip6_spec, [12 x i8] }
%struct.ethtool_tcpip6_spec = type { [4 x i32], [4 x i32], i16, i16, i8 }
%struct.ethtool_flow_ext = type { [2 x i8], [6 x i8], i16, i16, [2 x i32] }
%union.anon.125 = type { i32 }
%struct.ethtool_flash = type { i32, i32, [128 x i8] }
%struct.ethtool_channels = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.ethtool_dump = type { i32, i32, i32, i32, [0 x i8] }
%struct.ethtool_ts_info = type { i32, i32, i32, i32, [3 x i32], i32, [3 x i32] }
%struct.ethtool_modinfo = type { i32, i32, i32, [8 x i32] }
%struct.ethtool_eeprom = type { i32, i32, i32, i32, [0 x i8] }
%struct.ethtool_eee = type { i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%struct.ethtool_link_ksettings = type { %struct.ethtool_link_settings, %struct.anon.126 }
%struct.ethtool_link_settings = type { i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [1 x i8], [7 x i32], [0 x i32] }
%struct.anon.126 = type { [2 x i64], [2 x i64], [2 x i64] }
%struct.ethtool_fecparam = type { i32, i32, i32, i32 }
%struct.ethtool_stats = type { i32, i32, [0 x i64] }
%struct.ethtool_tunable = type { i32, i32, i32, i32, [0 x i8*] }
%struct.ndisc_ops = type opaque
%struct.header_ops = type { i32 (%struct.sk_buff*, %struct.net_device*, i16, i8*, i8*, i32)*, i32 (%struct.sk_buff*, i8*)*, i32 (%struct.neighbour*, %struct.hh_cache*, i16)*, void (%struct.hh_cache*, %struct.net_device*, i8*)*, i1 (i8*, i32)*, i16 (%struct.sk_buff*)* }
%struct.hh_cache = type { i32, %struct.seqlock_t, [12 x i64] }
%struct.seqlock_t = type { %struct.seqcount_spinlock, %struct.spinlock }
%struct.netdev_hw_addr_list = type { %struct.list_head, i32 }
%struct.vlan_info = type opaque
%struct.in_device = type opaque
%struct.inet6_dev = type opaque
%struct.wireless_dev = type opaque
%struct.wpan_dev = type opaque
%struct.netdev_rx_queue = type { %struct.kobject, %struct.net_device*, [56 x i8], %struct.xdp_rxq_info }
%struct.xdp_rxq_info = type { %struct.net_device*, i32, i32, %struct.xdp_mem_info, [40 x i8] }
%struct.bpf_prog = type opaque
%struct.netdev_queue = type { %struct.net_device*, %struct.Qdisc*, %struct.Qdisc*, %struct.kobject, i64, i64, %struct.net_device*, %struct.spinlock, i32, i64, i64, %struct.dql }
%struct.dql = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32 }
%struct.Qdisc = type opaque
%struct.xdp_dev_bulk_queue = type opaque
%struct.timer_list = type { %struct.hlist_node, i64, void (%struct.timer_list*)*, i32 }
%struct.possible_net_t = type { %struct.net* }
%union.anon.127 = type { i8* }
%struct.device = type { %struct.kobject, %struct.device*, %struct.device_private*, i8*, %struct.device_type*, %struct.bus_type*, %struct.device_driver*, i8*, i8*, %struct.mutex, %struct.dev_links_info, %struct.dev_pm_info, %struct.dev_pm_domain*, %struct.irq_domain*, %struct.list_head, %struct.dma_map_ops*, i64*, i64, i64, %struct.bus_dma_region*, %struct.device_dma_parameters*, %struct.list_head, %struct.dev_archdata, %struct.device_node*, %struct.fwnode_handle*, i32, i32, %struct.spinlock, %struct.list_head, %struct.class*, %struct.attribute_group**, void (%struct.device*)*, %struct.iommu_group*, %struct.dev_iommu*, i8 }
%struct.device_private = type opaque
%struct.device_type = type { i8*, %struct.attribute_group**, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*, %struct.kuid_t*, %struct.kgid_t*)*, void (%struct.device*)*, %struct.dev_pm_ops* }
%struct.dev_pm_ops = type { i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)* }
%struct.bus_type = type { i8*, i8*, %struct.device*, %struct.attribute_group**, %struct.attribute_group**, %struct.attribute_group**, i32 (%struct.device*, %struct.device_driver*)*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, %struct.dev_pm_ops*, %struct.iommu_ops*, %struct.subsys_private*, %struct.lock_class_key, i8 }
%struct.iommu_ops = type opaque
%struct.subsys_private = type opaque
%struct.device_driver = type { i8*, %struct.bus_type*, %struct.module*, i8*, i8, i32, %struct.of_device_id*, %struct.acpi_device_id*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, %struct.attribute_group**, %struct.attribute_group**, %struct.dev_pm_ops*, void (%struct.device*)*, %struct.driver_private* }
%struct.of_device_id = type { [32 x i8], [32 x i8], [128 x i8], i8* }
%struct.acpi_device_id = type { [9 x i8], i64, i32, i32 }
%struct.driver_private = type opaque
%struct.dev_links_info = type { %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, i8, i32 }
%struct.dev_pm_info = type { %struct.pm_message, i16, i32, %struct.spinlock, %struct.list_head, %struct.completion, %struct.wakeup_source*, i8, %struct.hrtimer, i64, %struct.work_struct, %struct.wait_queue_head, %struct.wake_irq*, %struct.atomic_t, %struct.atomic_t, i16, i32, i32, i32, i32, i32, i64, i64, i64, i64, %struct.pm_subsys_data*, void (%struct.device*, i32)*, %struct.dev_pm_qos* }
%struct.pm_message = type { i32 }
%struct.wakeup_source = type { i8*, i32, %struct.list_head, %struct.spinlock, %struct.wake_irq*, %struct.timer_list, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.device*, i8 }
%struct.wake_irq = type opaque
%struct.pm_subsys_data = type { %struct.spinlock, i32, %struct.list_head, %struct.pm_domain_data* }
%struct.pm_domain_data = type opaque
%struct.dev_pm_qos = type opaque
%struct.dev_pm_domain = type { %struct.dev_pm_ops, i32 (%struct.device*)*, void (%struct.device*, i1)*, i32 (%struct.device*)*, void (%struct.device*)*, void (%struct.device*)* }
%struct.irq_domain = type opaque
%struct.dma_map_ops = type opaque
%struct.bus_dma_region = type opaque
%struct.device_dma_parameters = type { i32, i64 }
%struct.dev_archdata = type {}
%struct.device_node = type opaque
%struct.fwnode_handle = type { %struct.fwnode_handle*, %struct.fwnode_operations*, %struct.device* }
%struct.fwnode_operations = type { %struct.fwnode_handle* (%struct.fwnode_handle*)*, void (%struct.fwnode_handle*)*, i1 (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*, %struct.device*)*, i1 (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i32, i8*, i64)*, i32 (%struct.fwnode_handle*, i8*, i8**, i64)*, i8* (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i8*, i32, i32, %struct.fwnode_reference_args*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, i32 (%struct.fwnode_handle*, %struct.fwnode_endpoint*)*, i32 (%struct.fwnode_handle*, %struct.device*)* }
%struct.fwnode_reference_args = type { %struct.fwnode_handle*, i32, [8 x i64] }
%struct.fwnode_endpoint = type { i32, i32, %struct.fwnode_handle* }
%struct.class = type { i8*, %struct.module*, %struct.attribute_group**, %struct.attribute_group**, %struct.kobject*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*)*, void (%struct.class*)*, void (%struct.device*)*, i32 (%struct.device*)*, %struct.kobj_ns_type_operations*, i8* (%struct.device*)*, void (%struct.device*, %struct.kuid_t*, %struct.kgid_t*)*, %struct.dev_pm_ops*, %struct.subsys_private* }
%struct.kobj_ns_type_operations = type { i32, i1 ()*, i8* ()*, i8* (%struct.sock*)*, i8* ()*, void (i8*)* }
%struct.iommu_group = type opaque
%struct.dev_iommu = type opaque
%struct.rtnl_link_ops = type opaque
%struct.netdev_tc_txq = type { i16, i16 }
%struct.phy_device = type opaque
%struct.sfp_bus = type opaque
%struct.udp_tunnel_nic_info = type opaque
%struct.udp_tunnel_nic = type opaque
%struct.bpf_xdp_entity = type { %struct.bpf_prog*, %struct.bpf_xdp_link* }
%struct.bpf_xdp_link = type opaque
%struct.netns_core = type { %struct.ctl_table_header*, i32, i32*, %struct.prot_inuse* }
%struct.prot_inuse = type opaque
%struct.netns_mib = type { %struct.tcp_mib*, %struct.ipstats_mib*, %struct.linux_mib*, %struct.udp_mib*, %struct.udp_mib*, %struct.icmp_mib*, %struct.icmpmsg_mib*, %struct.proc_dir_entry*, %struct.udp_mib*, %struct.udp_mib*, %struct.ipstats_mib*, %struct.icmpv6_mib*, %struct.icmpv6msg_mib* }
%struct.tcp_mib = type { [16 x i64] }
%struct.linux_mib = type { [124 x i64] }
%struct.icmp_mib = type { [28 x i64] }
%struct.icmpmsg_mib = type { [512 x %struct.atomic64_t] }
%struct.udp_mib = type { [9 x i64] }
%struct.ipstats_mib = type { [37 x i64], %struct.u64_stats_sync }
%struct.u64_stats_sync = type {}
%struct.icmpv6_mib = type { [6 x i64] }
%struct.icmpv6msg_mib = type { [512 x %struct.atomic64_t] }
%struct.netns_packet = type { %struct.mutex, %struct.hlist_head }
%struct.netns_unix = type { i32, %struct.ctl_table_header* }
%struct.netns_nexthop = type { %struct.rb_root, %struct.hlist_head*, i32, i32, %struct.blocking_notifier_head }
%struct.blocking_notifier_head = type { %struct.rw_semaphore, %struct.notifier_block* }
%struct.netns_ipv4 = type { %struct.ctl_table_header*, %struct.ctl_table_header*, %struct.ctl_table_header*, %struct.ctl_table_header*, %struct.ctl_table_header*, %struct.ipv4_devconf*, %struct.ipv4_devconf*, %struct.ip_ra_chain*, %struct.mutex, i8, %struct.hlist_head*, i8, %struct.sock*, %struct.sock**, %struct.sock*, %struct.inet_peer_base*, %struct.sock**, %struct.fqdir*, i32, i32, i32, i32, i32, i32, %struct.local_ports, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [3 x i32], [3 x i32], i32, i64, i64, %struct.inet_timewait_death_row, i32, i32, %struct.tcp_congestion_ops*, %struct.tcp_fastopen_context*, %struct.spinlock, i32, %struct.atomic_t, i64, i32, i32, i32, i32, i32, i32, i32, %struct.ping_group_range, %struct.atomic_t, i64*, i32, %struct.fib_notifier_ops*, i32, %struct.fib_notifier_ops*, i32, %struct.atomic_t, %struct.siphash_key_t }
%struct.ipv4_devconf = type opaque
%struct.ip_ra_chain = type opaque
%struct.inet_peer_base = type opaque
%struct.fqdir = type { i64, i64, i32, i32, %struct.inet_frags*, %struct.net*, i8, %struct.rhashtable, %struct.atomic64_t, %struct.work_struct }
%struct.inet_frags = type { i32, void (%struct.inet_frag_queue*, i8*)*, void (%struct.inet_frag_queue*)*, void (%struct.timer_list*)*, %struct.kmem_cache*, i8*, %struct.rhashtable_params, %struct.refcount_struct, %struct.completion }
%struct.inet_frag_queue = type { %struct.rhash_head, %union.anon.38, %struct.timer_list, %struct.spinlock, %struct.refcount_struct, %struct.rb_root, %struct.sk_buff*, %struct.sk_buff*, i64, i32, i32, i8, i16, %struct.fqdir*, %struct.callback_head }
%struct.rhash_head = type { %struct.rhash_head* }
%union.anon.38 = type { %struct.frag_v6_compare_key }
%struct.frag_v6_compare_key = type { %struct.in6_addr, %struct.in6_addr, i32, i32, i32 }
%struct.in6_addr = type { %union.anon.39 }
%union.anon.39 = type { [4 x i32] }
%struct.kmem_cache = type opaque
%struct.rhashtable_params = type { i16, i16, i16, i16, i32, i16, i8, i32 (i8*, i32, i32)*, i32 (i8*, i32, i32)*, i32 (%struct.rhashtable_compare_arg*, i8*)* }
%struct.rhashtable_compare_arg = type { %struct.rhashtable*, i8* }
%struct.rhashtable = type { %struct.bucket_table*, i32, i32, %struct.rhashtable_params, i8, %struct.work_struct, %struct.mutex, %struct.spinlock, %struct.atomic_t }
%struct.bucket_table = type opaque
%struct.local_ports = type { %struct.seqlock_t, [2 x i32], i8 }
%struct.inet_timewait_death_row = type { %struct.atomic_t, %struct.inet_hashinfo*, i32 }
%struct.inet_hashinfo = type opaque
%struct.tcp_congestion_ops = type opaque
%struct.tcp_fastopen_context = type opaque
%struct.ping_group_range = type { %struct.seqlock_t, [2 x %struct.kgid_t] }
%struct.fib_notifier_ops = type opaque
%struct.siphash_key_t = type { [2 x i64] }
%struct.netns_ipv6 = type { %struct.netns_sysctl_ipv6, %struct.ipv6_devconf*, %struct.ipv6_devconf*, %struct.inet_peer_base*, %struct.fqdir*, %struct.fib6_info*, %struct.rt6_info*, %struct.rt6_statistics*, %struct.timer_list, %struct.hlist_head*, %struct.fib6_table*, %struct.list_head, %struct.dst_ops, %struct.rwlock_t, %struct.spinlock, i32, i64, %struct.sock**, %struct.sock*, %struct.sock*, %struct.sock*, %struct.sock*, %struct.atomic_t, %struct.atomic_t, %struct.seg6_pernet_data*, %struct.fib_notifier_ops*, %struct.fib_notifier_ops*, i32, %struct.anon.52 }
%struct.netns_sysctl_ipv6 = type { %struct.ctl_table_header*, %struct.ctl_table_header*, %struct.ctl_table_header*, %struct.ctl_table_header*, %struct.ctl_table_header*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i64], i64*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8 }
%struct.ipv6_devconf = type opaque
%struct.fib6_info = type opaque
%struct.rt6_info = type opaque
%struct.rt6_statistics = type opaque
%struct.fib6_table = type opaque
%struct.dst_ops = type { i16, i32, i32 (%struct.dst_ops*)*, %struct.dst_entry* (%struct.dst_entry*, i32)*, i32 (%struct.dst_entry*)*, i32 (%struct.dst_entry*)*, i32* (%struct.dst_entry*, i64)*, void (%struct.dst_entry*)*, void (%struct.dst_entry*, %struct.net_device*, i32)*, %struct.dst_entry* (%struct.dst_entry*)*, void (%struct.sk_buff*)*, void (%struct.dst_entry*, %struct.sock*, %struct.sk_buff*, i32, i1)*, void (%struct.dst_entry*, %struct.sock*, %struct.sk_buff*)*, i32 (%struct.net*, %struct.sock*, %struct.sk_buff*)*, %struct.neighbour* (%struct.dst_entry*, %struct.sk_buff*, i8*)*, void (%struct.dst_entry*, i8*)*, %struct.kmem_cache*, %struct.percpu_counter }
%struct.dst_entry = type opaque
%struct.percpu_counter = type { i64 }
%struct.rwlock_t = type { %struct.arch_rwlock_t }
%struct.arch_rwlock_t = type {}
%struct.seg6_pernet_data = type opaque
%struct.anon.52 = type { %struct.hlist_head, %struct.spinlock, i32 }
%struct.sk_buff_head = type { %struct.sk_buff*, %struct.sk_buff*, i32, %struct.spinlock }
%struct.net_generic = type opaque
%struct.netns_bpf = type { [2 x %struct.bpf_prog_array*], [2 x %struct.bpf_prog*], [2 x %struct.list_head] }
%struct.bpf_prog_array = type { %struct.callback_head, [0 x %struct.bpf_prog_array_item] }
%struct.bpf_prog_array_item = type { %struct.bpf_prog*, [2 x %struct.bpf_cgroup_storage*] }
%struct.bpf_cgroup_storage = type opaque
%struct.netns_can = type { %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.can_dev_rcv_lists*, %struct.spinlock, %struct.timer_list, %struct.can_pkg_stats*, %struct.can_rcv_lists_stats*, %struct.hlist_head }
%struct.can_dev_rcv_lists = type opaque
%struct.can_pkg_stats = type opaque
%struct.can_rcv_lists_stats = type opaque
%struct.sock = type opaque
%struct.time_namespace = type opaque
%struct.cgroup_namespace = type { %struct.refcount_struct, %struct.ns_common, %struct.user_namespace*, %struct.ucounts*, %struct.css_set* }
%struct.css_set = type opaque
%struct.signal_struct = type { %struct.refcount_struct, %struct.atomic_t, i32, %struct.list_head, %struct.wait_queue_head, %struct.task_struct*, %struct.sigpending, %struct.hlist_head, i32, i32, %struct.task_struct*, i32, i32, i8, i32, %struct.list_head, %struct.hrtimer, i64, [2 x %struct.cpu_itimer], %struct.thread_group_cputimer, %struct.posix_cputimers, [4 x %struct.pid*], %struct.pid*, i32, %struct.tty_struct*, %struct.seqlock_t, i64, i64, i64, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.task_io_accounting, i64, [16 x %struct.rlimit], i8, i16, i16, %struct.mm_struct*, %struct.mutex, %struct.mutex }
%struct.cpu_itimer = type { i64, i64 }
%struct.thread_group_cputimer = type { %struct.task_cputime_atomic }
%struct.task_cputime_atomic = type { %struct.atomic64_t, %struct.atomic64_t, %struct.atomic64_t }
%struct.tty_struct = type opaque
%struct.rlimit = type { i64, i64 }
%struct.sighand_struct = type { %struct.spinlock, %struct.refcount_struct, %struct.wait_queue_head, [64 x %struct.k_sigaction] }
%struct.k_sigaction = type { %struct.sigaction }
%struct.sigaction = type { void (i32)*, i64, void ()*, %struct.sigset_t }
%struct.sigset_t = type { [1 x i64] }
%struct.sigpending = type { %struct.list_head, %struct.sigset_t }
%struct.seccomp = type { i32, %struct.atomic_t, %struct.seccomp_filter* }
%struct.seccomp_filter = type opaque
%struct.wake_q_node = type { %struct.wake_q_node* }
%struct.rb_root_cached = type { %struct.rb_root, %struct.rb_node* }
%struct.rt_mutex_waiter = type opaque
%struct.bio_list = type opaque
%struct.blk_plug = type opaque
%struct.reclaim_state = type opaque
%struct.io_context = type { %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.spinlock, i16, %struct.xarray, %struct.io_cq*, %struct.hlist_head, %struct.work_struct }
%struct.io_cq = type { %struct.request_queue*, %struct.io_context*, %union.anon.53, %union.anon.54, i32 }
%struct.request_queue = type opaque
%union.anon.53 = type { %struct.list_head }
%union.anon.54 = type { %struct.hlist_node }
%struct.capture_control = type opaque
%struct.kernel_siginfo = type { %struct.anon.55 }
%struct.anon.55 = type { i32, i32, i32, %union.__sifields }
%union.__sifields = type { %struct.anon.59 }
%struct.anon.59 = type { i32, i32, i32, i64, i64 }
%struct.task_io_accounting = type {}
%struct.robust_list_head = type opaque
%struct.futex_pi_state = type opaque
%struct.perf_event_context = type opaque
%struct.rseq = type { i32, i32, %union.anon.66, i32, [12 x i8] }
%union.anon.66 = type { i64 }
%struct.tlbflush_unmap_batch = type { %struct.arch_tlbflush_unmap_batch, i8, i8 }
%struct.arch_tlbflush_unmap_batch = type { %struct.cpumask }
%union.anon.67 = type { %struct.callback_head }
%struct.pipe_inode_info = type { %struct.mutex, %struct.wait_queue_head, %struct.wait_queue_head, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.page*, %struct.fasync_struct*, %struct.fasync_struct*, %struct.pipe_buffer*, %struct.user_struct* }
%struct.fasync_struct = type { %struct.rwlock_t, i32, i32, %struct.fasync_struct*, %struct.file*, %struct.callback_head }
%struct.pipe_buffer = type { %struct.page*, i32, i32, %struct.pipe_buf_operations*, i32, i64 }
%struct.pipe_buf_operations = type { i32 (%struct.pipe_inode_info*, %struct.pipe_buffer*)*, void (%struct.pipe_inode_info*, %struct.pipe_buffer*)*, i1 (%struct.pipe_inode_info*, %struct.pipe_buffer*)*, i1 (%struct.pipe_inode_info*, %struct.pipe_buffer*)* }
%struct.user_struct = type { %struct.refcount_struct, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i64, i64, %struct.atomic64_t, %struct.hlist_node, %struct.kuid_t, %struct.atomic64_t, %struct.ratelimit_state }
%struct.ratelimit_state = type { %struct.raw_spinlock, i32, i32, i32, i32, i64, i64 }
%struct.page_frag = type { %struct.page*, i32, i32 }
%struct.vm_struct = type { %struct.vm_struct*, i8*, i64, i64, %struct.page**, i32, i64, i8* }
%struct.refcount_struct = type { %struct.atomic_t }
%struct.thread_struct = type { [3 x %struct.desc_struct], i64, i16, i16, i16, i16, i64, i64, [4 x %struct.perf_event*], i64, i64, i64, i64, i64, %struct.io_bitmap*, i64, i8, [47 x i8], %struct.fpu }
%struct.desc_struct = type { i16, i16, i32 }
%struct.perf_event = type opaque
%struct.io_bitmap = type opaque
%struct.fpu = type { i32, i64, [48 x i8], %union.fpregs_state }
%union.fpregs_state = type { %struct.xregs_state, [3520 x i8] }
%struct.xregs_state = type { %struct.fxregs_state, %struct.xstate_header, [0 x i8] }
%struct.fxregs_state = type { i16, i16, i16, i16, %union.anon.68, i32, i32, [32 x i32], [64 x i32], [12 x i32], %union.anon.71 }
%union.anon.68 = type { %struct.anon.69 }
%struct.anon.69 = type { i64, i64 }
%union.anon.71 = type { [12 x i32] }
%struct.xstate_header = type { i64, i64, [6 x i64] }
%struct.fsnotify_mark_connector = type opaque
%struct.uuid_t = type { [16 x i8] }
%struct.shrinker = type { i64 (%struct.shrinker*, %struct.shrink_control*)*, i64 (%struct.shrinker*, %struct.shrink_control*)*, i64, i32, i32, %struct.list_head, %struct.atomic64_t* }
%struct.workqueue_struct = type opaque
%struct.hlist_head = type { %struct.hlist_node* }
%struct.user_namespace = type { %struct.uid_gid_map, %struct.uid_gid_map, %struct.uid_gid_map, %struct.atomic_t, %struct.user_namespace*, i32, %struct.kuid_t, %struct.kgid_t, %struct.ns_common, i64, %struct.list_head, %struct.key*, %struct.rw_semaphore, %struct.work_struct, %struct.ctl_table_set, %struct.ctl_table_header*, %struct.ucounts*, [10 x i32] }
%struct.uid_gid_map = type { i32, %union.anon.33 }
%union.anon.33 = type { %struct.anon.34, [48 x i8] }
%struct.anon.34 = type { %struct.uid_gid_extent*, %struct.uid_gid_extent* }
%struct.uid_gid_extent = type { i32, i32, i32 }
%struct.list_lru = type { %struct.list_lru_node* }
%struct.list_lru_node = type { %struct.spinlock, %struct.list_lru_one, i64 }
%struct.list_lru_one = type { %struct.list_head, i64 }
%struct.work_struct = type { %struct.atomic64_t, %struct.list_head, void (%struct.work_struct*)* }
%union.anon.84 = type { %struct.list_head }
%union.anon.85 = type { %struct.hlist_node }
%struct.inode = type { i16, i16, %struct.kuid_t, %struct.kgid_t, i32, %struct.inode_operations*, %struct.super_block*, %struct.address_space*, i64, %union.anon.76, i32, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.spinlock, i16, i8, i8, i64, i64, %struct.rw_semaphore, i64, i64, %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %union.anon.77, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %union.anon.78, %struct.file_lock_context*, %struct.address_space, %struct.list_head, %union.anon.81, i32, i32, %struct.fsnotify_mark_connector*, i8* }
%struct.inode_operations = type { %struct.dentry* (%struct.inode*, %struct.dentry*, i32)*, i8* (%struct.dentry*, %struct.inode*, %struct.delayed_call*)*, i32 (%struct.inode*, i32)*, %struct.posix_acl* (%struct.inode*, i32)*, i32 (%struct.dentry*, i8*, i32)*, i32 (%struct.inode*, %struct.dentry*, i16, i1)*, i32 (%struct.dentry*, %struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i8*)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i16, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.inode*, %struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.iattr*)*, i32 (%struct.path*, %struct.kstat*, i32, i32)*, i64 (%struct.dentry*, i8*, i64)*, i32 (%struct.inode*, %struct.fiemap_extent_info*, i64, i64)*, i32 (%struct.inode*, %struct.timespec64*, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.file*, i32, i16)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.posix_acl*, i32)*, [24 x i8] }
%struct.delayed_call = type { void (i8*)*, i8* }
%struct.posix_acl = type opaque
%struct.iattr = type { i32, i16, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.file* }
%struct.kstat = type { i32, i16, i32, i32, i64, i64, i64, i32, i32, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.timespec64, i64, i64 }
%struct.fiemap_extent_info = type opaque
%union.anon.76 = type { i32 }
%struct.timespec64 = type { i64, i64 }
%union.anon.77 = type { %struct.callback_head }
%union.anon.78 = type { %struct.file_operations* }
%struct.file_lock_context = type { %struct.spinlock, %struct.list_head, %struct.list_head, %struct.list_head }
%struct.address_space = type { %struct.inode*, %struct.xarray, i32, %struct.atomic_t, %struct.rb_root_cached, %struct.rw_semaphore, i64, i64, i64, %struct.address_space_operations*, i64, i32, %struct.spinlock, %struct.list_head, i8* }
%struct.address_space_operations = type { i32 (%struct.page*, %struct.writeback_control*)*, i32 (%struct.file*, %struct.page*)*, i32 (%struct.address_space*, %struct.writeback_control*)*, i32 (%struct.page*)*, i32 (%struct.file*, %struct.address_space*, %struct.list_head*, i32)*, void (%struct.readahead_control*)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page**, i8**)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page*, i8*)*, i64 (%struct.address_space*, i64)*, void (%struct.page*, i32, i32)*, i32 (%struct.page*, i32)*, void (%struct.page*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.address_space*, %struct.page*, %struct.page*, i32)*, i1 (%struct.page*, i32)*, void (%struct.page*)*, i32 (%struct.page*)*, i32 (%struct.page*, i64, i64)*, void (%struct.page*, i8*, i8*)*, i32 (%struct.address_space*, %struct.page*)*, i32 (%struct.swap_info_struct*, %struct.file*, i64*)*, void (%struct.file*)* }
%struct.readahead_control = type opaque
%struct.kiocb = type { %struct.file*, i64, void (%struct.kiocb*, i64, i64)*, i8*, i32, i16, i16, %union.anon.4 }
%union.anon.4 = type { %struct.wait_page_queue* }
%struct.wait_page_queue = type opaque
%struct.iov_iter = type { i32, i64, i64, %union.anon.5, %union.anon.6 }
%union.anon.5 = type { %struct.iovec* }
%struct.iovec = type { i8*, i64 }
%union.anon.6 = type { i64 }
%struct.swap_info_struct = type opaque
%union.anon.81 = type { %struct.pipe_inode_info* }
%struct.file_operations = type { %struct.module*, i64 (%struct.file*, i64, i32)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.kiocb*, i1)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.poll_table_struct*)*, i64 (%struct.file*, i32, i64)*, i64 (%struct.file*, i32, i64)*, i32 (%struct.file*, %struct.vm_area_struct*)*, i64, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i8*)*, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i64, i64, i32)*, i32 (i32, %struct.file*, i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.file*, %struct.page*, i32, i64, i64*, i32)*, i64 (%struct.file*, i64, i64, i64, i64)*, i32 (i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.pipe_inode_info*, %struct.file*, i64*, i64, i32)*, i64 (%struct.file*, i64*, %struct.pipe_inode_info*, i64, i32)*, i32 (%struct.file*, i64, %struct.file_lock**, i8**)*, i64 (%struct.file*, i32, i64, i64)*, void (%struct.seq_file*, %struct.file*)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i32 (%struct.file*, i64, i64, i32)* }
%struct.dir_context = type { i32 (%struct.dir_context*, i8*, i32, i64, i64, i32)*, i64 }
%struct.poll_table_struct = type opaque
%struct.file_lock = type { %struct.file_lock*, %struct.list_head, %struct.hlist_node, %struct.list_head, %struct.list_head, i8*, i32, i8, i32, i32, %struct.wait_queue_head, %struct.file*, i64, i64, %struct.fasync_struct*, i64, i64, %struct.file_lock_operations*, %struct.lock_manager_operations*, %union.anon.79 }
%struct.file_lock_operations = type { void (%struct.file_lock*, %struct.file_lock*)*, void (%struct.file_lock*)* }
%struct.lock_manager_operations = type { i8* (i8*)*, void (i8*)*, void (%struct.file_lock*)*, i32 (%struct.file_lock*, i32)*, i1 (%struct.file_lock*)*, i32 (%struct.file_lock*, i32, %struct.list_head*)*, void (%struct.file_lock*, i8**)*, i1 (%struct.file_lock*)* }
%union.anon.79 = type { %struct.nfs_lock_info }
%struct.nfs_lock_info = type { i32, %struct.nlm_lockowner*, %struct.list_head }
%struct.nlm_lockowner = type opaque
%struct.atomic64_t = type { i64 }
%struct.mutex = type { %struct.atomic64_t, %struct.spinlock, %struct.list_head }
%struct.fown_struct = type { %struct.rwlock_t, %struct.pid*, i32, %struct.kuid_t, %struct.kuid_t, i32 }
%struct.cred = type { %struct.atomic_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, i32, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, i8, %struct.key*, %struct.key*, %struct.key*, %struct.key*, %struct.user_struct*, %struct.user_namespace*, %struct.group_info*, %union.anon.37 }
%struct.kernel_cap_struct = type { [2 x i32] }
%struct.group_info = type { %struct.atomic_t, i32, [0 x %struct.kgid_t] }
%union.anon.37 = type { %struct.callback_head }
%struct.file_ra_state = type { i64, i32, i32, i32, i32, i64 }
%struct.kernfs_node = type { %struct.atomic_t, %struct.atomic_t, %struct.kernfs_node*, i8*, %struct.rb_node, i8*, i32, %union.anon.86, i8*, i64, i16, i16, %struct.kernfs_iattrs* }
%union.anon.86 = type { %struct.kernfs_elem_attr }
%struct.kernfs_elem_attr = type { %struct.kernfs_ops*, %struct.kernfs_open_node*, i64, %struct.kernfs_node* }
%struct.kernfs_ops = type { i32 (%struct.kernfs_open_file*)*, void (%struct.kernfs_open_file*)*, i32 (%struct.seq_file*, i8*)*, i8* (%struct.seq_file*, i64*)*, i8* (%struct.seq_file*, i8*, i64*)*, void (%struct.seq_file*, i8*)*, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i64, i8, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i32 (%struct.kernfs_open_file*, %struct.poll_table_struct*)*, i32 (%struct.kernfs_open_file*, %struct.vm_area_struct*)* }
%struct.kernfs_open_file = type { %struct.kernfs_node*, %struct.file*, %struct.seq_file*, i8*, %struct.mutex, %struct.mutex, i32, %struct.list_head, i8*, i64, i8, %struct.vm_operations_struct* }
%struct.kernfs_open_node = type opaque
%struct.kernfs_iattrs = type opaque
%struct.kref = type { %struct.refcount_struct }
%struct.module = type opaque
%struct.module_param_attrs = type opaque
%struct.kernel_param_ops = type { i32, i32 (i8*, %struct.kernel_param*)*, i32 (i8*, %struct.kernel_param*)*, void (i8*)* }
%struct.kernel_param = type { i8*, %struct.module*, %struct.kernel_param_ops*, i16, i8, i8, %union.anon.128 }
%union.anon.128 = type { i8* }
%struct.pci_driver = type { %struct.list_head, i8*, %struct.pci_device_id*, i32 (%struct.pci_dev*, %struct.pci_device_id*)*, void (%struct.pci_dev*)*, i32 (%struct.pci_dev*, i32)*, i32 (%struct.pci_dev*)*, void (%struct.pci_dev*)*, i32 (%struct.pci_dev*, i32)*, %struct.pci_error_handlers*, %struct.attribute_group**, %struct.device_driver, %struct.pci_dynids }
%struct.pci_device_id = type { i32, i32, i32, i32, i32, i32, i64 }
%struct.pci_dev = type <{ %struct.list_head, %struct.pci_bus*, %struct.pci_bus*, i8*, %struct.proc_dir_entry*, %struct.pci_slot*, i32, i16, i16, i16, i16, i32, i8, i8, i8, i8, i8, i8, i8, i8, i16, [6 x i8], i64*, %struct.pci_driver*, i64, %struct.device_dma_parameters, i32, i8, i8, i24, [2 x i8], i32, i32, [4 x i8], %struct.pcie_link_state*, i8, [3 x i8], i32, i8, [3 x i8], i32, %struct.device, i32, i32, [17 x %struct.resource], i8, [5 x i8], i16, %struct.atomic_t, [16 x i32], [4 x i8], %struct.hlist_head, %struct.bin_attribute*, i32, [4 x i8], [17 x %struct.bin_attribute*], [17 x %struct.bin_attribute*], %struct.attribute_group**, %struct.pci_vpd*, %union.anon.129, i16, i8, i8, i16, [2 x i8], i64, i64, i8*, i64 }>
%struct.pci_bus = type { %struct.list_head, %struct.pci_bus*, %struct.list_head, %struct.list_head, %struct.pci_dev*, %struct.list_head, [4 x %struct.resource*], %struct.list_head, %struct.resource, %struct.pci_ops*, %struct.msi_controller*, i8*, %struct.proc_dir_entry*, i8, i8, i8, i8, [48 x i8], i16, i16, %struct.device*, %struct.device, %struct.bin_attribute*, %struct.bin_attribute*, i8 }
%struct.resource = type { i64, i64, i8*, i64, i64, %struct.resource*, %struct.resource*, %struct.resource* }
%struct.pci_ops = type { i32 (%struct.pci_bus*)*, void (%struct.pci_bus*)*, i8* (%struct.pci_bus*, i32, i32)*, i32 (%struct.pci_bus*, i32, i32, i32, i32*)*, i32 (%struct.pci_bus*, i32, i32, i32, i32)* }
%struct.msi_controller = type opaque
%struct.pci_slot = type { %struct.pci_bus*, %struct.list_head, %struct.hotplug_slot*, i8, %struct.kobject }
%struct.hotplug_slot = type opaque
%struct.pcie_link_state = type opaque
%struct.pci_vpd = type opaque
%union.anon.129 = type { %struct.pci_sriov* }
%struct.pci_sriov = type opaque
%struct.pci_error_handlers = type { i32 (%struct.pci_dev*, i32)*, i32 (%struct.pci_dev*)*, i32 (%struct.pci_dev*)*, void (%struct.pci_dev*)*, void (%struct.pci_dev*)*, void (%struct.pci_dev*)* }
%struct.pci_dynids = type { %struct.spinlock, %struct.list_head }
%struct.paravirt_patch_template = type { %struct.pv_init_ops, %struct.pv_time_ops, %struct.pv_cpu_ops, %struct.pv_irq_ops, %struct.pv_mmu_ops, %struct.pv_lock_ops }
%struct.pv_init_ops = type { i32 (i8, i8*, i64, i32)* }
%struct.pv_time_ops = type { i64 ()*, i64 (i32)* }
%struct.pv_cpu_ops = type { void ()*, i64 (i32)*, void (i32, i64)*, i64 ()*, void (i64)*, void (i64)*, void ()*, void (%struct.desc_ptr*)*, void (%struct.desc_ptr*)*, void (i8*, i32)*, i64 ()*, void (%struct.thread_struct*, i32)*, void (i32)*, void (%struct.desc_struct*, i32, i8*)*, void (%struct.desc_struct*, i32, i8*, i32)*, void (%struct.gate_struct*, i32, %struct.gate_struct*)*, void (%struct.desc_struct*, i32)*, void (%struct.desc_struct*, i32)*, void (i64)*, void ()*, void ()*, void ()*, void (i32*, i32*, i32*, i32*)*, i64 (i32)*, void (i32, i32, i32)*, i64 (i32, i32*)*, i32 (i32, i32, i32)*, i64 (i32)*, void ()*, void ()*, void ()*, void (%struct.task_struct*)*, void (%struct.task_struct*)* }
%struct.desc_ptr = type <{ i16, i64 }>
%struct.gate_struct = type { i16, i16, %struct.idt_bits, i16, i32, i32 }
%struct.idt_bits = type { i16 }
%struct.pv_irq_ops = type { %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void ()*, void ()* }
%struct.paravirt_callee_save = type { i8* }
%struct.pv_mmu_ops = type { void ()*, void ()*, void (i64)*, void (%struct.cpumask*, %struct.flush_tlb_info*)*, void (%struct.mmu_gather*, i8*)*, void (%struct.mm_struct*)*, %struct.paravirt_callee_save, void (i64)*, i64 ()*, void (i64)*, void (%struct.mm_struct*, %struct.mm_struct*)*, void (%struct.mm_struct*, %struct.mm_struct*)*, i32 (%struct.mm_struct*)*, void (%struct.mm_struct*, %struct.pgd_t*)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (i64)*, void (i64)*, void (i64)*, void (i64)*, void (%struct.pte_t*, i64)*, void (%struct.pmd_t*, i64)*, i64 (%struct.vm_area_struct*, i64, %struct.pte_t*)*, void (%struct.vm_area_struct*, i64, %struct.pte_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.pud_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.p4d_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.pgd_t*, i64)*, %struct.pv_lazy_ops, void (i32, i64, i64)* }
%struct.flush_tlb_info = type opaque
%struct.mmu_gather = type opaque
%struct.p4d_t = type { i64 }
%struct.pv_lazy_ops = type { void ()*, void ()*, void ()* }
%struct.pv_lock_ops = type { void (%struct.qspinlock*, i32)*, %struct.paravirt_callee_save, void (i8*, i8)*, void (i32)*, %struct.paravirt_callee_save }
%struct.qspinlock = type opaque
%struct.anon.131 = type { i8, i8* }
%struct.anon.132 = type { i16, i16 }
%struct.skge_stat = type { [32 x i8], i16, i16 }
%struct.dmi_system_id = type { {}*, i8*, [4 x %struct.dmi_strmatch], i8* }
%struct.dmi_strmatch = type { i8, [79 x i8] }
%struct.skge_hw = type { i8*, %struct.pci_dev*, %struct.spinlock, i32, [2 x %struct.net_device*], i8, i8, i8, i8, i8, i32, i32, i16, %struct.spinlock, %struct.tasklet_struct, [0 x i8] }
%struct.tasklet_struct = type { %struct.tasklet_struct*, i64, %struct.atomic_t, i8, %union.anon.130, i64 }
%union.anon.130 = type { void (i64)* }
%struct.skge_port = type { %struct.skge_hw*, %struct.net_device*, %struct.napi_struct, i32, i32, %struct.skge_ring, %struct.skge_ring, i32, %struct.timer_list, i32, i32, i8, i8, i8, i8, i16, i32, i8*, i64, i64 }
%struct.napi_struct = type { %struct.list_head, i64, i32, i32, i64, i32 (%struct.napi_struct*, i32)*, %struct.net_device*, [8 x %struct.gro_list], %struct.sk_buff*, %struct.list_head, i32, %struct.hrtimer, %struct.list_head, %struct.hlist_node, i32 }
%struct.gro_list = type { %struct.list_head, i32 }
%struct.skge_ring = type { %struct.skge_element*, %struct.skge_element*, %struct.skge_element*, i64 }
%struct.skge_element = type { %struct.skge_element*, i8*, %struct.sk_buff*, i64, i32 }
%struct.skge_rx_desc = type { i32, i32, i32, i32, i32, i32, i16, i16, i16, i16 }
%struct.skge_tx_desc = type { i32, i32, i32, i32, i32, i32, i16, i16, i32 }
%struct.bio_vec = type { %struct.page*, i32, i32 }
%struct.skb_shared_info = type { i8, i8, i8, i8, i16, i16, %struct.sk_buff*, %struct.skb_shared_hwtstamps, i32, i32, %struct.atomic_t, i8*, [17 x %struct.bio_vec] }
%struct.skb_shared_hwtstamps = type { i64 }
%struct.iphdr = type { i8, i8, i16, i16, i16, i8, i8, i16, i32, i32 }
%struct.anon.48 = type { i16, i16 }
%struct.sockaddr = type { i16, [14 x i8] }
%struct.mii_ioctl_data = type { i16, i16, i16, i16 }
%struct.netdev_hw_addr = type { %struct.list_head, [32 x i8], i8, i8, i32, i32, i32, %struct.callback_head }

@__UNIQUE_ID_description325 = internal constant [52 x i8] c"skge.description=SysKonnect Gigabit Ethernet driver\00", section ".modinfo", align 1, !dbg !0
@__UNIQUE_ID_author326 = internal constant [64 x i8] c"skge.author=Stephen Hemminger <shemminger@linux-foundation.org>\00", section ".modinfo", align 1, !dbg !9252
@__UNIQUE_ID_file327 = internal constant [44 x i8] c"skge.file=drivers/net/ethernet/marvell/skge\00", section ".modinfo", align 1, !dbg !9255
@__UNIQUE_ID_license328 = internal constant [17 x i8] c"skge.license=GPL\00", section ".modinfo", align 1, !dbg !9258
@__UNIQUE_ID_version329 = internal constant [18 x i8] c"skge.version=1.14\00", section ".modinfo", align 1, !dbg !9261
@___modver_attr = internal global %struct.module_version_attribute { %struct.module_attribute { %struct.attribute { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i16 292 }, i64 (%struct.module_attribute*, %struct.module_kobject*, i8*)* @__modver_version_show, i64 (%struct.module_attribute*, %struct.module_kobject*, i8*, i64)* null, void (%struct.module*, i8*)* null, i32 (%struct.module*)* null, void (%struct.module*)* null }, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i32 0, i32 0) }, align 8, !dbg !9375
@__modver_attr = internal constant %struct.module_version_attribute* @___modver_attr, section "__modver", align 8, !dbg !9266
@__param_str_debug = internal constant [11 x i8] c"skge.debug\00", align 1, !dbg !9377
@param_ops_int = external dso_local constant %struct.kernel_param_ops, align 8
@debug = internal global i32 -1, align 4, !dbg !9382
@__param_debug = internal constant %struct.kernel_param { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__param_str_debug, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @param_ops_int, i16 0, i8 -1, i8 0, %union.anon.128 { i8* bitcast (i32* @debug to i8*) } }, section "__param", align 8, !dbg !9311
@__UNIQUE_ID_debugtype330 = internal constant [24 x i8] c"skge.parmtype=debug:int\00", section ".modinfo", align 1, !dbg !9360
@__UNIQUE_ID_debug331 = internal constant [48 x i8] c"skge.parm=debug:Debug level (0=none,...,16=all)\00", section ".modinfo", align 1, !dbg !9365
@skge_driver = internal global %struct.pci_driver { %struct.list_head zeroinitializer, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i32 0, i32 0), %struct.pci_device_id* getelementptr inbounds ([12 x %struct.pci_device_id], [12 x %struct.pci_device_id]* @skge_id_table, i32 0, i32 0), i32 (%struct.pci_dev*, %struct.pci_device_id*)* @skge_probe, void (%struct.pci_dev*)* @skge_remove, i32 (%struct.pci_dev*, i32)* null, i32 (%struct.pci_dev*)* null, void (%struct.pci_dev*)* @skge_shutdown, i32 (%struct.pci_dev*, i32)* null, %struct.pci_error_handlers* null, %struct.attribute_group** null, %struct.device_driver { i8* null, %struct.bus_type* null, %struct.module* null, i8* null, i8 0, i32 0, %struct.of_device_id* null, %struct.acpi_device_id* null, i32 (%struct.device*)* null, void (%struct.device*)* null, i32 (%struct.device*)* null, void (%struct.device*)* null, i32 (%struct.device*, i32)* null, i32 (%struct.device*)* null, %struct.attribute_group** null, %struct.attribute_group** null, %struct.dev_pm_ops* @skge_pm_ops, void (%struct.device*)* null, %struct.driver_private* null }, %struct.pci_dynids zeroinitializer }, align 8, !dbg !9384
@__UNIQUE_ID___addressable_skge_init_module349 = internal global i8* bitcast (i32 ()* @skge_init_module to i8*), section ".discard.addressable", align 8, !dbg !9368
@__exitcall_skge_cleanup_module = internal global void ()* @skge_cleanup_module, section ".exitcall.exit", align 8, !dbg !9370
@.str = private unnamed_addr constant [8 x i8] c"version\00", align 1
@.str.1 = private unnamed_addr constant [5 x i8] c"skge\00", align 1
@.str.2 = private unnamed_addr constant [5 x i8] c"1.14\00", align 1
@skge_id_table = internal constant [12 x %struct.pci_device_id] [%struct.pci_device_id { i32 4279, i32 5888, i32 -1, i32 -1, i32 0, i32 0, i64 0 }, %struct.pci_device_id { i32 4279, i32 33003, i32 -1, i32 -1, i32 0, i32 0, i64 0 }, %struct.pci_device_id { i32 4424, i32 17184, i32 -1, i32 -1, i32 0, i32 0, i64 0 }, %struct.pci_device_id { i32 4486, i32 19201, i32 -1, i32 -1, i32 0, i32 0, i64 0 }, %struct.pci_device_id { i32 4486, i32 19456, i32 -1, i32 -1, i32 0, i32 0, i64 0 }, %struct.pci_device_id { i32 4486, i32 17154, i32 -1, i32 -1, i32 0, i32 0, i64 0 }, %struct.pci_device_id { i32 4523, i32 17184, i32 -1, i32 -1, i32 0, i32 0, i64 0 }, %struct.pci_device_id { i32 4523, i32 20485, i32 -1, i32 -1, i32 0, i32 0, i64 0 }, %struct.pci_device_id { i32 4977, i32 17230, i32 -1, i32 -1, i32 0, i32 0, i64 0 }, %struct.pci_device_id { i32 5943, i32 4196, i32 -1, i32 -1, i32 0, i32 0, i64 0 }, %struct.pci_device_id { i32 5943, i32 4146, i32 -1, i32 21, i32 0, i32 0, i64 0 }, %struct.pci_device_id zeroinitializer], align 16, !dbg !9386
@skge_pm_ops = internal constant %struct.dev_pm_ops { i32 (%struct.device*)* null, void (%struct.device*)* null, i32 (%struct.device*)* @skge_suspend, i32 (%struct.device*)* @skge_resume, i32 (%struct.device*)* @skge_suspend, i32 (%struct.device*)* @skge_resume, i32 (%struct.device*)* @skge_suspend, i32 (%struct.device*)* @skge_resume, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null }, align 8, !dbg !9475
@.str.3 = private unnamed_addr constant [26 x i8] c"cannot enable PCI device\0A\00", align 1
@.str.4 = private unnamed_addr constant [29 x i8] c"cannot obtain PCI resources\0A\00", align 1
@only_32bit_dma = internal global i32 0, align 4, !dbg !9389
@.str.5 = private unnamed_addr constant [29 x i8] c"no usable DMA configuration\0A\00", align 1
@.str.6 = private unnamed_addr constant [12 x i8] c"skge@pci:%s\00", align 1
@.str.7 = private unnamed_addr constant [29 x i8] c"cannot map device registers\0A\00", align 1
@.str.8 = private unnamed_addr constant [46 x i8] c"\016skge: %s addr 0x%llx irq %d chip %s rev %d\0A\00", align 1
@.str.9 = private unnamed_addr constant [37 x i8] c"bad (zero?) ethernet address in rom\0A\00", align 1
@.str.10 = private unnamed_addr constant [28 x i8] c"cannot register net device\0A\00", align 1
@.str.11 = private unnamed_addr constant [35 x i8] c"cannot register second net device\0A\00", align 1
@.str.12 = private unnamed_addr constant [22 x i8] c"cannot assign irq %d\0A\00", align 1
@kmalloc_caches = external dso_local global [3 x [14 x %struct.kmem_cache*]], align 16
@.str.13 = private unnamed_addr constant [21 x i8] c"include/linux/slab.h\00", align 1
@.str.14 = private unnamed_addr constant [3 x i8] c"\017\00", align 1
@.str.15 = private unnamed_addr constant [32 x i8] c"phy interrupt status 0x%x 0x%x\0A\00", align 1
@.str.16 = private unnamed_addr constant [13 x i8] c"remote fault\00", align 1
@.str.17 = private unnamed_addr constant [19 x i8] c"master/slave fault\00", align 1
@.str.18 = private unnamed_addr constant [13 x i8] c"speed/duplex\00", align 1
@.str.19 = private unnamed_addr constant [41 x i8] c"\013skge: %s: autonegotiation failed (%s)\0A\00", align 1
@.str.20 = private unnamed_addr constant [30 x i8] c"\014skge: %s: phy read timeout\0A\00", align 1
@.str.21 = private unnamed_addr constant [31 x i8] c"\014skge: %s: phy write timeout\0A\00", align 1
@.str.22 = private unnamed_addr constant [51 x i8] c"Link is up at %d Mbps, %s duplex, flow control %s\0A\00", align 1
@.str.23 = private unnamed_addr constant [5 x i8] c"full\00", align 1
@.str.24 = private unnamed_addr constant [5 x i8] c"half\00", align 1
@.str.25 = private unnamed_addr constant [5 x i8] c"none\00", align 1
@.str.26 = private unnamed_addr constant [8 x i8] c"rx only\00", align 1
@.str.27 = private unnamed_addr constant [8 x i8] c"tx_only\00", align 1
@.str.28 = private unnamed_addr constant [5 x i8] c"both\00", align 1
@.str.29 = private unnamed_addr constant [15 x i8] c"indeterminated\00", align 1
@.str.30 = private unnamed_addr constant [14 x i8] c"Link is down\0A\00", align 1
@phy_pause_map = internal constant [5 x i16] [i16 0, i16 0, i16 2048, i16 1024, i16 3072], align 2, !dbg !9391
@fiber_pause_map = internal constant [5 x i16] [i16 0, i16 0, i16 256, i16 128, i16 384], align 2, !dbg !9394
@.str.31 = private unnamed_addr constant [27 x i8] c"phy interrupt status 0x%x\0A\00", align 1
@.str.32 = private unnamed_addr constant [43 x i8] c"\013skge: %s: uncorrectable pair swap error\0A\00", align 1
@.str.33 = private unnamed_addr constant [32 x i8] c"\014skge: %s: phy read timed out\0A\00", align 1
@.str.34 = private unnamed_addr constant [14 x i8] c"remote fault\0A\00", align 1
@.str.35 = private unnamed_addr constant [17 x i8] c"duplex mismatch\0A\00", align 1
@pv_ops = external dso_local global %struct.paravirt_patch_template, align 8
@.str.36 = private unnamed_addr constant [42 x i8] c"Genesis chip detected but not configured\0A\00", align 1
@.str.37 = private unnamed_addr constant [28 x i8] c"unsupported chip type 0x%x\0A\00", align 1
@.str.38 = private unnamed_addr constant [27 x i8] c"stuck hardware sensor bit\0A\00", align 1
@genesis_reset.zero = internal constant [8 x i8] zeroinitializer, align 1, !dbg !9396
@skge_board_name.buf = internal global [16 x i8] zeroinitializer, align 16, !dbg !9402
@skge_chips = internal constant [4 x %struct.anon.131] [%struct.anon.131 { i8 10, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.40, i32 0, i32 0) }, %struct.anon.131 { i8 -80, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.41, i32 0, i32 0) }, %struct.anon.131 { i8 -79, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.42, i32 0, i32 0) }, %struct.anon.131 { i8 -78, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.43, i32 0, i32 0) }], align 16, !dbg !9409
@.str.39 = private unnamed_addr constant [12 x i8] c"chipid 0x%x\00", align 1
@.str.40 = private unnamed_addr constant [8 x i8] c"Genesis\00", align 1
@.str.41 = private unnamed_addr constant [6 x i8] c"Yukon\00", align 1
@.str.42 = private unnamed_addr constant [11 x i8] c"Yukon-Lite\00", align 1
@.str.43 = private unnamed_addr constant [9 x i8] c"Yukon-LP\00", align 1
@skge_netdev_ops = internal constant %struct.net_device_ops { i32 (%struct.net_device*)* null, void (%struct.net_device*)* null, i32 (%struct.net_device*)* @skge_up, i32 (%struct.net_device*)* @skge_down, i32 (%struct.sk_buff*, %struct.net_device*)* @skge_xmit_frame, i64 (%struct.sk_buff*, %struct.net_device*, i64)* null, i16 (%struct.net_device*, %struct.sk_buff*, %struct.net_device*)* null, void (%struct.net_device*, i32)* null, void (%struct.net_device*)* @skge_set_multicast, i32 (%struct.net_device*, i8*)* @skge_set_mac_address, i32 (%struct.net_device*)* @eth_validate_addr, i32 (%struct.net_device*, %struct.ifreq*, i32)* @skge_ioctl, i32 (%struct.net_device*, %struct.ifmap*)* null, i32 (%struct.net_device*, i32)* @skge_change_mtu, i32 (%struct.net_device*, %struct.neigh_parms*)* null, void (%struct.net_device*, i32)* @skge_tx_timeout, void (%struct.net_device*, %struct.rtnl_link_stats64*)* null, i1 (%struct.net_device*, i32)* null, i32 (i32, %struct.net_device*, i8*)* null, %struct.net_device_stats* (%struct.net_device*)* @skge_get_stats, i32 (%struct.net_device*, i16, i16)* null, i32 (%struct.net_device*, i16, i16)* null, i32 (%struct.net_device*, i32, i8*)* null, i32 (%struct.net_device*, i32, i16, i8, i16)* null, i32 (%struct.net_device*, i32, i32, i32)* null, i32 (%struct.net_device*, i32, i1)* null, i32 (%struct.net_device*, i32, i1)* null, i32 (%struct.net_device*, i32, %struct.ifla_vf_info*)* null, i32 (%struct.net_device*, i32, i32)* null, i32 (%struct.net_device*, i32, %struct.ifla_vf_stats*)* null, i32 (%struct.net_device*, i32, %struct.nlattr**)* null, i32 (%struct.net_device*, i32, %struct.sk_buff*)* null, i32 (%struct.net_device*, i32, %struct.ifla_vf_guid*, %struct.ifla_vf_guid*)* null, i32 (%struct.net_device*, i32, i64, i32)* null, i32 (%struct.net_device*, i32, i1)* null, i32 (%struct.net_device*, i32, i8*)* null, i32 (%struct.net_device*, %struct.net_device*, %struct.netlink_ext_ack*)* null, i32 (%struct.net_device*, %struct.net_device*)* null, %struct.net_device* (%struct.net_device*, %struct.sk_buff*, i1)* null, i64 (%struct.net_device*, i64)* null, i32 (%struct.net_device*, i64)* null, i32 (%struct.net_device*, %struct.neighbour*)* null, void (%struct.net_device*, %struct.neighbour*)* null, i32 (%struct.ndmsg*, %struct.nlattr**, %struct.net_device*, i8*, i16, i16, %struct.netlink_ext_ack*)* null, i32 (%struct.ndmsg*, %struct.nlattr**, %struct.net_device*, i8*, i16)* null, i32 (%struct.sk_buff*, %struct.netlink_callback*, %struct.net_device*, %struct.net_device*, i32*)* null, i32 (%struct.sk_buff*, %struct.nlattr**, %struct.net_device*, i8*, i16, i32, i32, %struct.netlink_ext_ack*)* null, i32 (%struct.net_device*, %struct.nlmsghdr*, i16, %struct.netlink_ext_ack*)* null, i32 (%struct.sk_buff*, i32, i32, %struct.net_device*, i32, i32)* null, i32 (%struct.net_device*, %struct.nlmsghdr*, i16)* null, i32 (%struct.net_device*, i1)* null, i32 (%struct.net_device*, %struct.netdev_phys_item_id*)* null, i32 (%struct.net_device*, %struct.netdev_phys_item_id*)* null, i32 (%struct.net_device*, i8*, i64)* null, void (%struct.net_device*, %struct.udp_tunnel_info*)* null, void (%struct.net_device*, %struct.udp_tunnel_info*)* null, i8* (%struct.net_device*, %struct.net_device*)* null, void (%struct.net_device*, i8*)* null, i32 (%struct.net_device*, i32, i32)* null, i32 (%struct.net_device*)* null, i32 (%struct.net_device*, i1)* null, i32 (%struct.net_device*, %struct.sk_buff*)* null, void (%struct.net_device*, i32)* null, i32 (%struct.net_device*, %struct.netdev_bpf*)* null, i32 (%struct.net_device*, i32, %struct.xdp_frame**, i32)* null, i32 (%struct.net_device*, i32, i32)* null, %struct.devlink_port* (%struct.net_device*)* null, i32 (%struct.net_device*, %struct.ip_tunnel_parm*, i32)* null, %struct.net_device* (%struct.net_device*)* null }, align 8, !dbg !9419
@skge_ethtool_ops = internal constant %struct.ethtool_ops { i32 17, void (%struct.net_device*, %struct.ethtool_drvinfo*)* @skge_get_drvinfo, i32 (%struct.net_device*)* @skge_get_regs_len, void (%struct.net_device*, %struct.ethtool_regs*, i8*)* @skge_get_regs, void (%struct.net_device*, %struct.ethtool_wolinfo*)* @skge_get_wol, i32 (%struct.net_device*, %struct.ethtool_wolinfo*)* @skge_set_wol, i32 (%struct.net_device*)* @skge_get_msglevel, void (%struct.net_device*, i32)* @skge_set_msglevel, i32 (%struct.net_device*)* @skge_nway_reset, i32 (%struct.net_device*)* @ethtool_op_get_link, i32 (%struct.net_device*, %struct.ethtool_link_ext_state_info*)* null, i32 (%struct.net_device*)* @skge_get_eeprom_len, i32 (%struct.net_device*, %struct.ethtool_eeprom*, i8*)* @skge_get_eeprom, i32 (%struct.net_device*, %struct.ethtool_eeprom*, i8*)* @skge_set_eeprom, i32 (%struct.net_device*, %struct.ethtool_coalesce*)* @skge_get_coalesce, i32 (%struct.net_device*, %struct.ethtool_coalesce*)* @skge_set_coalesce, void (%struct.net_device*, %struct.ethtool_ringparam*)* @skge_get_ring_param, i32 (%struct.net_device*, %struct.ethtool_ringparam*)* @skge_set_ring_param, void (%struct.net_device*, %struct.ethtool_pause_stats*)* null, void (%struct.net_device*, %struct.ethtool_pauseparam*)* @skge_get_pauseparam, i32 (%struct.net_device*, %struct.ethtool_pauseparam*)* @skge_set_pauseparam, void (%struct.net_device*, %struct.ethtool_test*, i64*)* null, void (%struct.net_device*, i32, i8*)* @skge_get_strings, i32 (%struct.net_device*, i32)* @skge_set_phys_id, void (%struct.net_device*, %struct.ethtool_stats*, i64*)* @skge_get_ethtool_stats, i32 (%struct.net_device*)* null, void (%struct.net_device*)* null, i32 (%struct.net_device*)* null, i32 (%struct.net_device*, i32)* null, i32 (%struct.net_device*, i32)* @skge_get_sset_count, i32 (%struct.net_device*, %struct.ethtool_rxnfc*, i32*)* null, i32 (%struct.net_device*, %struct.ethtool_rxnfc*)* null, i32 (%struct.net_device*, %struct.ethtool_flash*)* null, i32 (%struct.net_device*, i32*)* null, i32 (%struct.net_device*)* null, i32 (%struct.net_device*)* null, i32 (%struct.net_device*, i32*, i8*, i8*)* null, i32 (%struct.net_device*, i32*, i8*, i8)* null, i32 (%struct.net_device*, i32*, i8*, i8*, i32)* null, i32 (%struct.net_device*, i32*, i8*, i8, i32*, i1)* null, void (%struct.net_device*, %struct.ethtool_channels*)* null, i32 (%struct.net_device*, %struct.ethtool_channels*)* null, i32 (%struct.net_device*, %struct.ethtool_dump*)* null, i32 (%struct.net_device*, %struct.ethtool_dump*, i8*)* null, i32 (%struct.net_device*, %struct.ethtool_dump*)* null, i32 (%struct.net_device*, %struct.ethtool_ts_info*)* null, i32 (%struct.net_device*, %struct.ethtool_modinfo*)* null, i32 (%struct.net_device*, %struct.ethtool_eeprom*, i8*)* null, i32 (%struct.net_device*, %struct.ethtool_eee*)* null, i32 (%struct.net_device*, %struct.ethtool_eee*)* null, i32 (%struct.net_device*, %struct.ethtool_tunable*, i8*)* null, i32 (%struct.net_device*, %struct.ethtool_tunable*, i8*)* null, i32 (%struct.net_device*, i32, %struct.ethtool_coalesce*)* null, i32 (%struct.net_device*, i32, %struct.ethtool_coalesce*)* null, i32 (%struct.net_device*, %struct.ethtool_link_ksettings*)* @skge_get_link_ksettings, i32 (%struct.net_device*, %struct.ethtool_link_ksettings*)* @skge_set_link_ksettings, i32 (%struct.net_device*, %struct.ethtool_fecparam*)* null, i32 (%struct.net_device*, %struct.ethtool_fecparam*)* null, void (%struct.net_device*, %struct.ethtool_stats*, i64*)* null, i32 (%struct.net_device*, %struct.ethtool_tunable*, i8*)* null, i32 (%struct.net_device*, %struct.ethtool_tunable*, i8*)* null }, align 8, !dbg !9467
@.str.44 = private unnamed_addr constant [20 x i8] c"enabling interface\0A\00", align 1
@.str.45 = private unnamed_addr constant [36 x i8] c"drivers/net/ethernet/marvell/skge.c\00", align 1
@.str.46 = private unnamed_addr constant [47 x i8] c"dma_alloc_coherent region crosses 4G boundary\0A\00", align 1
@.str.47 = private unnamed_addr constant [43 x i8] c"Unable to allocate interrupt %d error: %d\0A\00", align 1
@rxqaddr = internal constant [2 x i32] [i32 0, i32 128], align 4, !dbg !9445
@txqaddr = internal constant [2 x i32] [i32 640, i32 896], align 4, !dbg !9449
@portmask = internal constant [2 x i32] [i32 673251456, i32 336076802], align 4, !dbg !9451
@dma_map_single_attrs.__warned = internal global i8 0, section ".data.once", align 1, !dbg !9421
@.str.48 = private unnamed_addr constant [44 x i8] c"%s %s: rejecting DMA map of vmalloc memory\0A\00", align 1
@.str.49 = private unnamed_addr constant [28 x i8] c"include/linux/dma-mapping.h\00", align 1
@vmemmap_base = external dso_local global i64, align 8
@phys_base = external dso_local global i64, align 8
@page_offset_base = external dso_local global i64, align 8
@__preempt_count = external dso_local global i32, section ".data", align 4
@genesis_mac_init.zero = internal constant [6 x i8] zeroinitializer, align 1, !dbg !9427
@.str.50 = private unnamed_addr constant [22 x i8] c"genesis reset failed\0A\00", align 1
@jiffies = external dso_local global i64, align 8
@bcom_phy_init.A1hack = internal constant [12 x %struct.anon.132] [%struct.anon.132 { i16 24, i16 3104 }, %struct.anon.132 { i16 23, i16 18 }, %struct.anon.132 { i16 21, i16 4356 }, %struct.anon.132 { i16 23, i16 19 }, %struct.anon.132 { i16 21, i16 1028 }, %struct.anon.132 { i16 23, i16 -32762 }, %struct.anon.132 { i16 21, i16 306 }, %struct.anon.132 { i16 23, i16 -32762 }, %struct.anon.132 { i16 21, i16 562 }, %struct.anon.132 { i16 23, i16 -32755 }, %struct.anon.132 { i16 21, i16 15 }, %struct.anon.132 { i16 24, i16 1056 }], align 16, !dbg !9431
@bcom_phy_init.C0hack = internal constant [6 x %struct.anon.132] [%struct.anon.132 { i16 24, i16 3104 }, %struct.anon.132 { i16 23, i16 18 }, %struct.anon.132 { i16 21, i16 4612 }, %struct.anon.132 { i16 23, i16 19 }, %struct.anon.132 { i16 21, i16 2564 }, %struct.anon.132 { i16 24, i16 1056 }], align 16, !dbg !9442
@.str.51 = private unnamed_addr constant [26 x i8] c"include/linux/netdevice.h\00", align 1
@.str.52 = private unnamed_addr constant [21 x i8] c"disabling interface\0A\00", align 1
@.str.53 = private unnamed_addr constant [29 x i8] c"tx queued, slot %td, len %d\0A\00", align 1
@.str.54 = private unnamed_addr constant [22 x i8] c"%s: tx mapping error\0A\00", align 1
@.str.55 = private unnamed_addr constant [37 x i8] c"include/linux/dynamic_queue_limits.h\00", align 1
@pause_mc_addr = internal constant [6 x i8] c"\01\80\C2\00\00\01", align 1, !dbg !9454
@byte_rev_table = external dso_local constant [256 x i8], align 16
@.str.56 = private unnamed_addr constant [12 x i8] c"tx timeout\0A\00", align 1
@skge_stats = internal constant [21 x %struct.skge_stat] [%struct.skge_stat { [32 x i8] c"tx_bytes\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i16 644, i16 488 }, %struct.skge_stat { [32 x i8] c"rx_bytes\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i16 772, i16 312 }, %struct.skge_stat { [32 x i8] c"tx_broadcast\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i16 652, i16 456 }, %struct.skge_stat { [32 x i8] c"rx_broadcast\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i16 780, i16 264 }, %struct.skge_stat { [32 x i8] c"tx_multicast\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i16 656, i16 472 }, %struct.skge_stat { [32 x i8] c"rx_multicast\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i16 784, i16 280 }, %struct.skge_stat { [32 x i8] c"tx_unicast\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i16 660, i16 448 }, %struct.skge_stat { [32 x i8] c"rx_unicast\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i16 788, i16 256 }, %struct.skge_stat { [32 x i8] c"tx_mac_pause\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i16 672, i16 464 }, %struct.skge_stat { [32 x i8] c"rx_mac_pause\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i16 792, i16 272 }, %struct.skge_stat { [32 x i8] c"collisions\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i16 680, i16 592 }, %struct.skge_stat { [32 x i8] c"multi_collisions\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i16 684, i16 584 }, %struct.skge_stat { [32 x i8] c"aborted\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i16 688, i16 576 }, %struct.skge_stat { [32 x i8] c"late_collision\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i16 692, i16 568 }, %struct.skge_stat { [32 x i8] c"fifo_underrun\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i16 704, i16 600 }, %struct.skge_stat { [32 x i8] c"fifo_overflow\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i16 820, i16 432 }, %struct.skge_stat { [32 x i8] c"rx_toolong\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i16 848, i16 408 }, %struct.skge_stat { [32 x i8] c"rx_jabber\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i16 824, i16 416 }, %struct.skge_stat { [32 x i8] c"rx_runt\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i16 844, i16 344 }, %struct.skge_stat { [32 x i8] c"rx_too_long\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i16 848, i16 408 }, %struct.skge_stat { [32 x i8] c"rx_fcs_error\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i16 852, i16 288 }], align 16, !dbg !9456
@rxirqmask = internal constant [2 x i32] [i32 65536, i32 8192], align 4, !dbg !9469
@txirqmask = internal constant [2 x i32] [i32 128, i32 2], align 4, !dbg !9471
@napimask = internal constant [2 x i32] [i32 65664, i32 8194], align 4, !dbg !9473
@.str.57 = private unnamed_addr constant [18 x i8] c"tx done slot %td\0A\00", align 1
@.str.58 = private unnamed_addr constant [32 x i8] c"rx slot %td status 0x%x len %d\0A\00", align 1
@.str.59 = private unnamed_addr constant [43 x i8] c"rx err, slot %td control 0x%x status 0x%x\0A\00", align 1
@.str.60 = private unnamed_addr constant [10 x i8] c"addr %pM\0A\00", align 1
@.str.61 = private unnamed_addr constant [27 x i8] c"mac interrupt status 0x%x\0A\00", align 1
@.str.62 = private unnamed_addr constant [28 x i8] c"Ram read data parity error\0A\00", align 1
@.str.63 = private unnamed_addr constant [29 x i8] c"Ram write data parity error\0A\00", align 1
@.str.64 = private unnamed_addr constant [32 x i8] c"%s: receive queue parity error\0A\00", align 1
@.str.65 = private unnamed_addr constant [30 x i8] c"PCI error cmd=%#x status=%#x\0A\00", align 1
@.str.66 = private unnamed_addr constant [42 x i8] c"unable to clear error (so ignoring them)\0A\00", align 1
@.str.67 = private unnamed_addr constant [18 x i8] c"could not up: %d\0A\00", align 1
@.str.68 = private unnamed_addr constant [23 x i8] c"Gigabyte nForce boards\00", align 1
@.str.69 = private unnamed_addr constant [12 x i8] c"ASUS P5NSLI\00", align 1
@.str.70 = private unnamed_addr constant [24 x i8] c"FUJITSU SIEMENS A8NE-FM\00", align 1
@skge_32bit_dma_boards = internal constant [4 x { i32 (%struct.dmi_system_id*)*, i8*, [4 x %struct.dmi_strmatch], i8* }] [{ i32 (%struct.dmi_system_id*)*, i8*, [4 x %struct.dmi_strmatch], i8* } { i32 (%struct.dmi_system_id*)* null, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.68, i32 0, i32 0), [4 x %struct.dmi_strmatch] [%struct.dmi_strmatch { i8 13, [79 x i8] c"Gigabyte Technology Co\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }, %struct.dmi_strmatch { i8 14, [79 x i8] c"nForce\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }, %struct.dmi_strmatch zeroinitializer, %struct.dmi_strmatch zeroinitializer], i8* null }, { i32 (%struct.dmi_system_id*)*, i8*, [4 x %struct.dmi_strmatch], i8* } { i32 (%struct.dmi_system_id*)* null, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.69, i32 0, i32 0), [4 x %struct.dmi_strmatch] [%struct.dmi_strmatch { i8 13, [79 x i8] c"ASUSTeK Computer INC.\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }, %struct.dmi_strmatch { i8 14, [79 x i8] c"P5NSLI\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }, %struct.dmi_strmatch zeroinitializer, %struct.dmi_strmatch zeroinitializer], i8* null }, { i32 (%struct.dmi_system_id*)*, i8*, [4 x %struct.dmi_strmatch], i8* } { i32 (%struct.dmi_system_id*)* null, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.70, i32 0, i32 0), [4 x %struct.dmi_strmatch] [%struct.dmi_strmatch { i8 13, [79 x i8] c"ASUSTek Computer INC.\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }, %struct.dmi_strmatch { i8 14, [79 x i8] c"A8NE-FM\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }, %struct.dmi_strmatch zeroinitializer, %struct.dmi_strmatch zeroinitializer], i8* null }, { i32 (%struct.dmi_system_id*)*, i8*, [4 x %struct.dmi_strmatch], i8* } zeroinitializer], align 16, !dbg !9477
@llvm.used = appending global [12 x i8*] [i8* getelementptr inbounds ([52 x i8], [52 x i8]* @__UNIQUE_ID_description325, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @__UNIQUE_ID_author326, i32 0, i32 0), i8* getelementptr inbounds ([44 x i8], [44 x i8]* @__UNIQUE_ID_file327, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__UNIQUE_ID_license328, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__UNIQUE_ID_version329, i32 0, i32 0), i8* bitcast (%struct.module_version_attribute** @__modver_attr to i8*), i8* bitcast (%struct.kernel_param* @__param_debug to i8*), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @__UNIQUE_ID_debugtype330, i32 0, i32 0), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @__UNIQUE_ID_debug331, i32 0, i32 0), i8* bitcast (void ()* @skge_cleanup_module to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_skge_init_module349 to i8*), i8* bitcast (void ()** @__exitcall_skge_cleanup_module to i8*)], section "llvm.metadata"

; Function Attrs: cold noinline noredzone nounwind optnone sspstrong
define internal void @skge_cleanup_module() #0 section ".exit.text" !dbg !9507 {
entry:
  call void @pci_unregister_driver(%struct.pci_driver* @skge_driver) #14, !dbg !9508
  ret void, !dbg !9509
}

; Function Attrs: noredzone
declare dso_local void @pci_unregister_driver(%struct.pci_driver*) #1

; Function Attrs: cold noinline noredzone nounwind optnone sspstrong
define internal i32 @skge_init_module() #0 section ".init.text" !dbg !9510 {
entry:
  %call = call i32 @dmi_check_system(%struct.dmi_system_id* getelementptr inbounds ([4 x %struct.dmi_system_id], [4 x %struct.dmi_system_id]* bitcast ([4 x { i32 (%struct.dmi_system_id*)*, i8*, [4 x %struct.dmi_strmatch], i8* }]* @skge_32bit_dma_boards to [4 x %struct.dmi_system_id]*), i64 0, i64 0)) #14, !dbg !9513
  %tobool = icmp ne i32 %call, 0, !dbg !9513
  br i1 %tobool, label %if.then, label %if.end, !dbg !9515

if.then:                                          ; preds = %entry
  store i32 1, i32* @only_32bit_dma, align 4, !dbg !9516
  br label %if.end, !dbg !9517

if.end:                                           ; preds = %if.then, %entry
  %call1 = call i32 @__pci_register_driver(%struct.pci_driver* @skge_driver, %struct.module* null, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #14, !dbg !9518
  ret i32 %call1, !dbg !9519
}

; Function Attrs: noredzone
declare dso_local i64 @__modver_version_show(%struct.module_attribute*, %struct.module_kobject*, i8*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @skge_probe(%struct.pci_dev* %pdev, %struct.pci_device_id* %ent) #2 !dbg !9520 {
entry:
  %lock.addr.i96 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i96, metadata !9521, metadata !DIExpression()), !dbg !9527
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !9521, metadata !DIExpression()), !dbg !9530
  %retval = alloca i32, align 4
  %pdev.addr = alloca %struct.pci_dev*, align 8
  %ent.addr = alloca %struct.pci_device_id*, align 8
  %dev = alloca %struct.net_device*, align 8
  %dev1 = alloca %struct.net_device*, align 8
  %hw = alloca %struct.skge_hw*, align 8
  %err = alloca i32, align 4
  %using_dac = alloca i32, align 4
  %.compoundliteral = alloca %struct.spinlock, align 1
  %.compoundliteral42 = alloca %struct.spinlock, align 1
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !9533, metadata !DIExpression()), !dbg !9534
  store %struct.pci_device_id* %ent, %struct.pci_device_id** %ent.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_device_id** %ent.addr, metadata !9535, metadata !DIExpression()), !dbg !9536
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev, metadata !9537, metadata !DIExpression()), !dbg !9538
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev1, metadata !9539, metadata !DIExpression()), !dbg !9540
  call void @llvm.dbg.declare(metadata %struct.skge_hw** %hw, metadata !9541, metadata !DIExpression()), !dbg !9542
  call void @llvm.dbg.declare(metadata i32* %err, metadata !9543, metadata !DIExpression()), !dbg !9544
  call void @llvm.dbg.declare(metadata i32* %using_dac, metadata !9545, metadata !DIExpression()), !dbg !9546
  store i32 0, i32* %using_dac, align 4, !dbg !9546
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !9547
  %call = call i32 @pci_enable_device(%struct.pci_dev* %0) #14, !dbg !9548
  store i32 %call, i32* %err, align 4, !dbg !9549
  %1 = load i32, i32* %err, align 4, !dbg !9550
  %tobool = icmp ne i32 %1, 0, !dbg !9550
  br i1 %tobool, label %if.then, label %if.end, !dbg !9552

if.then:                                          ; preds = %entry
  %2 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !9553
  %dev2 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %2, i32 0, i32 41, !dbg !9553
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev2, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.3, i64 0, i64 0)) #15, !dbg !9553
  br label %err_out, !dbg !9555

if.end:                                           ; preds = %entry
  %3 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !9556
  %call3 = call i32 @pci_request_regions(%struct.pci_dev* %3, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #14, !dbg !9557
  store i32 %call3, i32* %err, align 4, !dbg !9558
  %4 = load i32, i32* %err, align 4, !dbg !9559
  %tobool4 = icmp ne i32 %4, 0, !dbg !9559
  br i1 %tobool4, label %if.then5, label %if.end7, !dbg !9561

if.then5:                                         ; preds = %if.end
  %5 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !9562
  %dev6 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %5, i32 0, i32 41, !dbg !9562
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev6, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.4, i64 0, i64 0)) #15, !dbg !9562
  br label %err_out_disable_pdev, !dbg !9564

if.end7:                                          ; preds = %if.end
  %6 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !9565
  call void @pci_set_master(%struct.pci_dev* %6) #14, !dbg !9566
  %7 = load i32, i32* @only_32bit_dma, align 4, !dbg !9567
  %tobool8 = icmp ne i32 %7, 0, !dbg !9567
  br i1 %tobool8, label %if.else, label %land.lhs.true, !dbg !9569

land.lhs.true:                                    ; preds = %if.end7
  %8 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !9570
  %dev9 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %8, i32 0, i32 41, !dbg !9571
  %call10 = call i32 @dma_set_mask(%struct.device* %dev9, i64 -1) #14, !dbg !9572
  %tobool11 = icmp ne i32 %call10, 0, !dbg !9572
  br i1 %tobool11, label %if.else, label %if.then12, !dbg !9573

if.then12:                                        ; preds = %land.lhs.true
  store i32 1, i32* %using_dac, align 4, !dbg !9574
  %9 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !9576
  %dev13 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %9, i32 0, i32 41, !dbg !9577
  %call14 = call i32 @dma_set_coherent_mask(%struct.device* %dev13, i64 -1) #14, !dbg !9578
  store i32 %call14, i32* %err, align 4, !dbg !9579
  br label %if.end22, !dbg !9580

if.else:                                          ; preds = %land.lhs.true, %if.end7
  %10 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !9581
  %dev15 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %10, i32 0, i32 41, !dbg !9583
  %call16 = call i32 @dma_set_mask(%struct.device* %dev15, i64 4294967295) #14, !dbg !9584
  store i32 %call16, i32* %err, align 4, !dbg !9585
  %tobool17 = icmp ne i32 %call16, 0, !dbg !9585
  br i1 %tobool17, label %if.end21, label %if.then18, !dbg !9586

if.then18:                                        ; preds = %if.else
  store i32 0, i32* %using_dac, align 4, !dbg !9587
  %11 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !9589
  %dev19 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %11, i32 0, i32 41, !dbg !9590
  %call20 = call i32 @dma_set_coherent_mask(%struct.device* %dev19, i64 4294967295) #14, !dbg !9591
  store i32 %call20, i32* %err, align 4, !dbg !9592
  br label %if.end21, !dbg !9593

if.end21:                                         ; preds = %if.then18, %if.else
  br label %if.end22

if.end22:                                         ; preds = %if.end21, %if.then12
  %12 = load i32, i32* %err, align 4, !dbg !9594
  %tobool23 = icmp ne i32 %12, 0, !dbg !9594
  br i1 %tobool23, label %if.then24, label %if.end26, !dbg !9596

if.then24:                                        ; preds = %if.end22
  %13 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !9597
  %dev25 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %13, i32 0, i32 41, !dbg !9597
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev25, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.5, i64 0, i64 0)) #15, !dbg !9597
  br label %err_out_free_regions, !dbg !9599

if.end26:                                         ; preds = %if.end22
  store i32 -12, i32* %err, align 4, !dbg !9600
  %14 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !9601
  %call27 = call i8* @pci_name(%struct.pci_dev* %14) #14, !dbg !9602
  %call28 = call i64 @strlen(i8* %call27) #14, !dbg !9603
  %add = add i64 113, %call28, !dbg !9604
  %add29 = add i64 %add, 1, !dbg !9605
  %call30 = call i8* @kzalloc(i64 %add29, i32 3264) #14, !dbg !9606
  %15 = bitcast i8* %call30 to %struct.skge_hw*, !dbg !9606
  store %struct.skge_hw* %15, %struct.skge_hw** %hw, align 8, !dbg !9607
  %16 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !9608
  %tobool31 = icmp ne %struct.skge_hw* %16, null, !dbg !9608
  br i1 %tobool31, label %if.end33, label %if.then32, !dbg !9610

if.then32:                                        ; preds = %if.end26
  br label %err_out_free_regions, !dbg !9611

if.end33:                                         ; preds = %if.end26
  %17 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !9612
  %irq_name = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %17, i32 0, i32 15, !dbg !9613
  %arraydecay = getelementptr inbounds [0 x i8], [0 x i8]* %irq_name, i64 0, i64 0, !dbg !9612
  %18 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !9614
  %call34 = call i8* @pci_name(%struct.pci_dev* %18) #14, !dbg !9615
  %call35 = call i32 (i8*, i8*, ...) @sprintf(i8* %arraydecay, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.6, i64 0, i64 0), i8* %call34) #14, !dbg !9616
  %19 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !9617
  %20 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !9618
  %pdev36 = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %20, i32 0, i32 1, !dbg !9619
  store %struct.pci_dev* %19, %struct.pci_dev** %pdev36, align 8, !dbg !9620
  br label %do.body, !dbg !9621

do.body:                                          ; preds = %if.end33
  %21 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !9622
  %hw_lock = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %21, i32 0, i32 2, !dbg !9622
  store %struct.spinlock* %hw_lock, %struct.spinlock** %lock.addr.i, align 8
  %22 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !9623
  %23 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %22, i32 0, i32 0, !dbg !9624
  %rlock.i = bitcast %union.anon.1* %23 to %struct.raw_spinlock*, !dbg !9624
  %24 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !9622
  %hw_lock38 = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %24, i32 0, i32 2, !dbg !9622
  %25 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %.compoundliteral, i32 0, i32 0, !dbg !9622
  %rlock = bitcast %union.anon.1* %25 to %struct.raw_spinlock*, !dbg !9622
  %26 = bitcast %struct.spinlock* %hw_lock38 to i8*, !dbg !9622
  %27 = bitcast %struct.spinlock* %.compoundliteral to i8*, !dbg !9622
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %26, i8* align 1 %27, i64 0, i1 false), !dbg !9622
  br label %do.end, !dbg !9622

do.end:                                           ; preds = %do.body
  br label %do.body39, !dbg !9625

do.body39:                                        ; preds = %do.end
  %28 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !9626
  %phy_lock = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %28, i32 0, i32 13, !dbg !9626
  store %struct.spinlock* %phy_lock, %struct.spinlock** %lock.addr.i96, align 8
  %29 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i96, align 8, !dbg !9627
  %30 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %29, i32 0, i32 0, !dbg !9628
  %rlock.i97 = bitcast %union.anon.1* %30 to %struct.raw_spinlock*, !dbg !9628
  %31 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !9626
  %phy_lock41 = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %31, i32 0, i32 13, !dbg !9626
  %32 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %.compoundliteral42, i32 0, i32 0, !dbg !9626
  %rlock43 = bitcast %union.anon.1* %32 to %struct.raw_spinlock*, !dbg !9626
  %33 = bitcast %struct.spinlock* %phy_lock41 to i8*, !dbg !9626
  %34 = bitcast %struct.spinlock* %.compoundliteral42 to i8*, !dbg !9626
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %33, i8* align 1 %34, i64 0, i1 false), !dbg !9626
  br label %do.end44, !dbg !9626

do.end44:                                         ; preds = %do.body39
  %35 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !9629
  %phy_task = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %35, i32 0, i32 14, !dbg !9630
  call void @tasklet_setup(%struct.tasklet_struct* %phy_task, void (%struct.tasklet_struct*)* @skge_extirq) #14, !dbg !9631
  %36 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !9632
  %resource = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %36, i32 0, i32 44, !dbg !9632
  %arrayidx = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource, i64 0, i64 0, !dbg !9632
  %start = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx, i32 0, i32 0, !dbg !9632
  %37 = load i64, i64* %start, align 8, !dbg !9632
  %call45 = call i8* @ioremap(i64 %37, i64 16384) #14, !dbg !9633
  %38 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !9634
  %regs = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %38, i32 0, i32 0, !dbg !9635
  store i8* %call45, i8** %regs, align 8, !dbg !9636
  %39 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !9637
  %regs46 = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %39, i32 0, i32 0, !dbg !9639
  %40 = load i8*, i8** %regs46, align 8, !dbg !9639
  %tobool47 = icmp ne i8* %40, null, !dbg !9637
  br i1 %tobool47, label %if.end50, label %if.then48, !dbg !9640

if.then48:                                        ; preds = %do.end44
  %41 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !9641
  %dev49 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %41, i32 0, i32 41, !dbg !9641
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev49, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.7, i64 0, i64 0)) #15, !dbg !9641
  br label %err_out_free_hw, !dbg !9643

if.end50:                                         ; preds = %do.end44
  %42 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !9644
  %call51 = call i32 @skge_reset(%struct.skge_hw* %42) #14, !dbg !9645
  store i32 %call51, i32* %err, align 4, !dbg !9646
  %43 = load i32, i32* %err, align 4, !dbg !9647
  %tobool52 = icmp ne i32 %43, 0, !dbg !9647
  br i1 %tobool52, label %if.then53, label %if.end54, !dbg !9649

if.then53:                                        ; preds = %if.end50
  br label %err_out_iounmap, !dbg !9650

if.end54:                                         ; preds = %if.end50
  %44 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !9651
  %resource55 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %44, i32 0, i32 44, !dbg !9651
  %arrayidx56 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource55, i64 0, i64 0, !dbg !9651
  %start57 = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx56, i32 0, i32 0, !dbg !9651
  %45 = load i64, i64* %start57, align 8, !dbg !9651
  %46 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !9651
  %irq = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %46, i32 0, i32 43, !dbg !9651
  %47 = load i32, i32* %irq, align 4, !dbg !9651
  %48 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !9651
  %call58 = call i8* @skge_board_name(%struct.skge_hw* %48) #14, !dbg !9651
  %49 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !9651
  %chip_rev = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %49, i32 0, i32 6, !dbg !9651
  %50 = load i8, i8* %chip_rev, align 1, !dbg !9651
  %conv = zext i8 %50 to i32, !dbg !9651
  %call59 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0), i64 %45, i32 %47, i8* %call58, i32 %conv) #15, !dbg !9651
  %51 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !9652
  %52 = load i32, i32* %using_dac, align 4, !dbg !9653
  %call60 = call %struct.net_device* @skge_devinit(%struct.skge_hw* %51, i32 0, i32 %52) #14, !dbg !9654
  store %struct.net_device* %call60, %struct.net_device** %dev, align 8, !dbg !9655
  %53 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !9656
  %tobool61 = icmp ne %struct.net_device* %53, null, !dbg !9656
  br i1 %tobool61, label %if.end63, label %if.then62, !dbg !9658

if.then62:                                        ; preds = %if.end54
  store i32 -12, i32* %err, align 4, !dbg !9659
  br label %err_out_led_off, !dbg !9661

if.end63:                                         ; preds = %if.end54
  %54 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !9662
  %dev_addr = getelementptr inbounds %struct.net_device, %struct.net_device* %54, i32 0, i32 74, !dbg !9664
  %55 = load i8*, i8** %dev_addr, align 8, !dbg !9664
  %call64 = call zeroext i1 @is_valid_ether_addr(i8* %55) #14, !dbg !9665
  br i1 %call64, label %if.end67, label %if.then65, !dbg !9666

if.then65:                                        ; preds = %if.end63
  %56 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !9667
  %dev66 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %56, i32 0, i32 41, !dbg !9667
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev66, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.9, i64 0, i64 0)) #15, !dbg !9667
  br label %if.end67, !dbg !9667

if.end67:                                         ; preds = %if.then65, %if.end63
  %57 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !9668
  %call68 = call i32 @register_netdev(%struct.net_device* %57) #14, !dbg !9669
  store i32 %call68, i32* %err, align 4, !dbg !9670
  %58 = load i32, i32* %err, align 4, !dbg !9671
  %tobool69 = icmp ne i32 %58, 0, !dbg !9671
  br i1 %tobool69, label %if.then70, label %if.end72, !dbg !9673

if.then70:                                        ; preds = %if.end67
  %59 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !9674
  %dev71 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %59, i32 0, i32 41, !dbg !9674
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev71, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.10, i64 0, i64 0)) #15, !dbg !9674
  br label %err_out_free_netdev, !dbg !9676

if.end72:                                         ; preds = %if.end67
  %60 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !9677
  call void @skge_show_addr(%struct.net_device* %60) #14, !dbg !9678
  %61 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !9679
  %ports = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %61, i32 0, i32 8, !dbg !9681
  %62 = load i8, i8* %ports, align 1, !dbg !9681
  %conv73 = zext i8 %62 to i32, !dbg !9679
  %cmp = icmp sgt i32 %conv73, 1, !dbg !9682
  br i1 %cmp, label %if.then75, label %if.end94, !dbg !9683

if.then75:                                        ; preds = %if.end72
  %63 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !9684
  %64 = load i32, i32* %using_dac, align 4, !dbg !9686
  %call76 = call %struct.net_device* @skge_devinit(%struct.skge_hw* %63, i32 1, i32 %64) #14, !dbg !9687
  store %struct.net_device* %call76, %struct.net_device** %dev1, align 8, !dbg !9688
  %65 = load %struct.net_device*, %struct.net_device** %dev1, align 8, !dbg !9689
  %tobool77 = icmp ne %struct.net_device* %65, null, !dbg !9689
  br i1 %tobool77, label %if.end79, label %if.then78, !dbg !9691

if.then78:                                        ; preds = %if.then75
  store i32 -12, i32* %err, align 4, !dbg !9692
  br label %err_out_unregister, !dbg !9694

if.end79:                                         ; preds = %if.then75
  %66 = load %struct.net_device*, %struct.net_device** %dev1, align 8, !dbg !9695
  %call80 = call i32 @register_netdev(%struct.net_device* %66) #14, !dbg !9696
  store i32 %call80, i32* %err, align 4, !dbg !9697
  %67 = load i32, i32* %err, align 4, !dbg !9698
  %tobool81 = icmp ne i32 %67, 0, !dbg !9698
  br i1 %tobool81, label %if.then82, label %if.end84, !dbg !9700

if.then82:                                        ; preds = %if.end79
  %68 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !9701
  %dev83 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %68, i32 0, i32 41, !dbg !9701
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev83, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.11, i64 0, i64 0)) #15, !dbg !9701
  br label %err_out_free_dev1, !dbg !9703

if.end84:                                         ; preds = %if.end79
  %69 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !9704
  %irq85 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %69, i32 0, i32 43, !dbg !9705
  %70 = load i32, i32* %irq85, align 4, !dbg !9705
  %71 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !9706
  %irq_name86 = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %71, i32 0, i32 15, !dbg !9707
  %arraydecay87 = getelementptr inbounds [0 x i8], [0 x i8]* %irq_name86, i64 0, i64 0, !dbg !9706
  %72 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !9708
  %73 = bitcast %struct.skge_hw* %72 to i8*, !dbg !9708
  %call88 = call i32 @request_irq(i32 %70, i32 (i32, i8*)* @skge_intr, i64 128, i8* %arraydecay87, i8* %73) #14, !dbg !9709
  store i32 %call88, i32* %err, align 4, !dbg !9710
  %74 = load i32, i32* %err, align 4, !dbg !9711
  %tobool89 = icmp ne i32 %74, 0, !dbg !9711
  br i1 %tobool89, label %if.then90, label %if.end93, !dbg !9713

if.then90:                                        ; preds = %if.end84
  %75 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !9714
  %dev91 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %75, i32 0, i32 41, !dbg !9714
  %76 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !9714
  %irq92 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %76, i32 0, i32 43, !dbg !9714
  %77 = load i32, i32* %irq92, align 4, !dbg !9714
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev91, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.12, i64 0, i64 0), i32 %77) #15, !dbg !9714
  br label %err_out_unregister_dev1, !dbg !9716

if.end93:                                         ; preds = %if.end84
  %78 = load %struct.net_device*, %struct.net_device** %dev1, align 8, !dbg !9717
  call void @skge_show_addr(%struct.net_device* %78) #14, !dbg !9718
  br label %if.end94, !dbg !9719

if.end94:                                         ; preds = %if.end93, %if.end72
  %79 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !9720
  %80 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !9721
  %81 = bitcast %struct.skge_hw* %80 to i8*, !dbg !9721
  call void @pci_set_drvdata(%struct.pci_dev* %79, i8* %81) #14, !dbg !9722
  store i32 0, i32* %retval, align 4, !dbg !9723
  br label %return, !dbg !9723

err_out_unregister_dev1:                          ; preds = %if.then90
  call void @llvm.dbg.label(metadata !9724), !dbg !9725
  %82 = load %struct.net_device*, %struct.net_device** %dev1, align 8, !dbg !9726
  call void @unregister_netdev(%struct.net_device* %82) #14, !dbg !9727
  br label %err_out_free_dev1, !dbg !9727

err_out_free_dev1:                                ; preds = %err_out_unregister_dev1, %if.then82
  call void @llvm.dbg.label(metadata !9728), !dbg !9729
  %83 = load %struct.net_device*, %struct.net_device** %dev1, align 8, !dbg !9730
  call void @free_netdev(%struct.net_device* %83) #14, !dbg !9731
  br label %err_out_unregister, !dbg !9731

err_out_unregister:                               ; preds = %err_out_free_dev1, %if.then78
  call void @llvm.dbg.label(metadata !9732), !dbg !9733
  %84 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !9734
  call void @unregister_netdev(%struct.net_device* %84) #14, !dbg !9735
  br label %err_out_free_netdev, !dbg !9735

err_out_free_netdev:                              ; preds = %err_out_unregister, %if.then70
  call void @llvm.dbg.label(metadata !9736), !dbg !9737
  %85 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !9738
  call void @free_netdev(%struct.net_device* %85) #14, !dbg !9739
  br label %err_out_led_off, !dbg !9739

err_out_led_off:                                  ; preds = %err_out_free_netdev, %if.then62
  call void @llvm.dbg.label(metadata !9740), !dbg !9741
  %86 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !9742
  call void @skge_write16(%struct.skge_hw* %86, i32 6, i16 zeroext 1) #14, !dbg !9743
  br label %err_out_iounmap, !dbg !9743

err_out_iounmap:                                  ; preds = %err_out_led_off, %if.then53
  call void @llvm.dbg.label(metadata !9744), !dbg !9745
  %87 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !9746
  %regs95 = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %87, i32 0, i32 0, !dbg !9747
  %88 = load i8*, i8** %regs95, align 8, !dbg !9747
  call void @iounmap(i8* %88) #14, !dbg !9748
  br label %err_out_free_hw, !dbg !9748

err_out_free_hw:                                  ; preds = %err_out_iounmap, %if.then48
  call void @llvm.dbg.label(metadata !9749), !dbg !9750
  %89 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !9751
  %90 = bitcast %struct.skge_hw* %89 to i8*, !dbg !9751
  call void @kfree(i8* %90) #14, !dbg !9752
  br label %err_out_free_regions, !dbg !9752

err_out_free_regions:                             ; preds = %err_out_free_hw, %if.then32, %if.then24
  call void @llvm.dbg.label(metadata !9753), !dbg !9754
  %91 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !9755
  call void @pci_release_regions(%struct.pci_dev* %91) #14, !dbg !9756
  br label %err_out_disable_pdev, !dbg !9756

err_out_disable_pdev:                             ; preds = %err_out_free_regions, %if.then5
  call void @llvm.dbg.label(metadata !9757), !dbg !9758
  %92 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !9759
  call void @pci_disable_device(%struct.pci_dev* %92) #14, !dbg !9760
  br label %err_out, !dbg !9760

err_out:                                          ; preds = %err_out_disable_pdev, %if.then
  call void @llvm.dbg.label(metadata !9761), !dbg !9762
  %93 = load i32, i32* %err, align 4, !dbg !9763
  store i32 %93, i32* %retval, align 4, !dbg !9764
  br label %return, !dbg !9764

return:                                           ; preds = %err_out, %if.end94
  %94 = load i32, i32* %retval, align 4, !dbg !9765
  ret i32 %94, !dbg !9765
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @skge_remove(%struct.pci_dev* %pdev) #2 !dbg !9766 {
entry:
  %lock.addr.i21 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i21, metadata !9767, metadata !DIExpression()), !dbg !9771
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !9773, metadata !DIExpression()), !dbg !9775
  %pdev.addr = alloca %struct.pci_dev*, align 8
  %hw = alloca %struct.skge_hw*, align 8
  %dev0 = alloca %struct.net_device*, align 8
  %dev1 = alloca %struct.net_device*, align 8
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !9777, metadata !DIExpression()), !dbg !9778
  call void @llvm.dbg.declare(metadata %struct.skge_hw** %hw, metadata !9779, metadata !DIExpression()), !dbg !9780
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !9781
  %call = call i8* @pci_get_drvdata(%struct.pci_dev* %0) #14, !dbg !9782
  %1 = bitcast i8* %call to %struct.skge_hw*, !dbg !9782
  store %struct.skge_hw* %1, %struct.skge_hw** %hw, align 8, !dbg !9780
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev0, metadata !9783, metadata !DIExpression()), !dbg !9784
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev1, metadata !9785, metadata !DIExpression()), !dbg !9786
  %2 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !9787
  %tobool = icmp ne %struct.skge_hw* %2, null, !dbg !9787
  br i1 %tobool, label %if.end, label %if.then, !dbg !9789

if.then:                                          ; preds = %entry
  br label %return, !dbg !9790

if.end:                                           ; preds = %entry
  %3 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !9791
  %dev = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %3, i32 0, i32 4, !dbg !9792
  %arrayidx = getelementptr [2 x %struct.net_device*], [2 x %struct.net_device*]* %dev, i64 0, i64 1, !dbg !9791
  %4 = load %struct.net_device*, %struct.net_device** %arrayidx, align 8, !dbg !9791
  store %struct.net_device* %4, %struct.net_device** %dev1, align 8, !dbg !9793
  %5 = load %struct.net_device*, %struct.net_device** %dev1, align 8, !dbg !9794
  %tobool1 = icmp ne %struct.net_device* %5, null, !dbg !9794
  br i1 %tobool1, label %if.then2, label %if.end3, !dbg !9796

if.then2:                                         ; preds = %if.end
  %6 = load %struct.net_device*, %struct.net_device** %dev1, align 8, !dbg !9797
  call void @unregister_netdev(%struct.net_device* %6) #14, !dbg !9798
  br label %if.end3, !dbg !9798

if.end3:                                          ; preds = %if.then2, %if.end
  %7 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !9799
  %dev4 = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %7, i32 0, i32 4, !dbg !9800
  %arrayidx5 = getelementptr [2 x %struct.net_device*], [2 x %struct.net_device*]* %dev4, i64 0, i64 0, !dbg !9799
  %8 = load %struct.net_device*, %struct.net_device** %arrayidx5, align 8, !dbg !9799
  store %struct.net_device* %8, %struct.net_device** %dev0, align 8, !dbg !9801
  %9 = load %struct.net_device*, %struct.net_device** %dev0, align 8, !dbg !9802
  call void @unregister_netdev(%struct.net_device* %9) #14, !dbg !9803
  %10 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !9804
  %phy_task = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %10, i32 0, i32 14, !dbg !9805
  call void @tasklet_kill(%struct.tasklet_struct* %phy_task) #14, !dbg !9806
  %11 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !9807
  %hw_lock = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %11, i32 0, i32 2, !dbg !9808
  store %struct.spinlock* %hw_lock, %struct.spinlock** %lock.addr.i, align 8
  call void @arch_local_irq_disable() #16, !dbg !9809
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !9812, !srcloc !9814
  %12 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !9815
  %13 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %12, i32 0, i32 0, !dbg !9815
  %rlock.i = bitcast %union.anon.1* %13 to %struct.raw_spinlock*, !dbg !9815
  %14 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !9817
  %intr_mask = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %14, i32 0, i32 3, !dbg !9818
  store i32 0, i32* %intr_mask, align 8, !dbg !9819
  %15 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !9820
  %ports = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %15, i32 0, i32 8, !dbg !9822
  %16 = load i8, i8* %ports, align 1, !dbg !9822
  %conv = zext i8 %16 to i32, !dbg !9820
  %cmp = icmp sgt i32 %conv, 1, !dbg !9823
  br i1 %cmp, label %if.then7, label %if.end9, !dbg !9824

if.then7:                                         ; preds = %if.end3
  %17 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !9825
  call void @skge_write32(%struct.skge_hw* %17, i32 12, i32 0) #14, !dbg !9827
  %18 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !9828
  %call8 = call i32 @skge_read32(%struct.skge_hw* %18, i32 12) #14, !dbg !9829
  br label %if.end9, !dbg !9830

if.end9:                                          ; preds = %if.then7, %if.end3
  %19 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !9831
  %hw_lock10 = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %19, i32 0, i32 2, !dbg !9832
  store %struct.spinlock* %hw_lock10, %struct.spinlock** %lock.addr.i21, align 8
  call void @arch_local_irq_enable() #16, !dbg !9833
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !9836, !srcloc !9838
  %20 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i21, align 8, !dbg !9839
  %21 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %20, i32 0, i32 0, !dbg !9839
  %rlock.i22 = bitcast %union.anon.1* %21 to %struct.raw_spinlock*, !dbg !9839
  %22 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !9841
  call void @skge_write16(%struct.skge_hw* %22, i32 6, i16 zeroext 1) #14, !dbg !9842
  %23 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !9843
  call void @skge_write8(%struct.skge_hw* %23, i32 4, i8 zeroext 1) #14, !dbg !9844
  %24 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !9845
  %ports11 = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %24, i32 0, i32 8, !dbg !9847
  %25 = load i8, i8* %ports11, align 1, !dbg !9847
  %conv12 = zext i8 %25 to i32, !dbg !9845
  %cmp13 = icmp sgt i32 %conv12, 1, !dbg !9848
  br i1 %cmp13, label %if.then15, label %if.end17, !dbg !9849

if.then15:                                        ; preds = %if.end9
  %26 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !9850
  %irq = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %26, i32 0, i32 43, !dbg !9851
  %27 = load i32, i32* %irq, align 4, !dbg !9851
  %28 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !9852
  %29 = bitcast %struct.skge_hw* %28 to i8*, !dbg !9852
  %call16 = call i8* @free_irq(i32 %27, i8* %29) #14, !dbg !9853
  br label %if.end17, !dbg !9853

if.end17:                                         ; preds = %if.then15, %if.end9
  %30 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !9854
  call void @pci_release_regions(%struct.pci_dev* %30) #14, !dbg !9855
  %31 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !9856
  call void @pci_disable_device(%struct.pci_dev* %31) #14, !dbg !9857
  %32 = load %struct.net_device*, %struct.net_device** %dev1, align 8, !dbg !9858
  %tobool18 = icmp ne %struct.net_device* %32, null, !dbg !9858
  br i1 %tobool18, label %if.then19, label %if.end20, !dbg !9860

if.then19:                                        ; preds = %if.end17
  %33 = load %struct.net_device*, %struct.net_device** %dev1, align 8, !dbg !9861
  call void @free_netdev(%struct.net_device* %33) #14, !dbg !9862
  br label %if.end20, !dbg !9862

if.end20:                                         ; preds = %if.then19, %if.end17
  %34 = load %struct.net_device*, %struct.net_device** %dev0, align 8, !dbg !9863
  call void @free_netdev(%struct.net_device* %34) #14, !dbg !9864
  %35 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !9865
  %regs = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %35, i32 0, i32 0, !dbg !9866
  %36 = load i8*, i8** %regs, align 8, !dbg !9866
  call void @iounmap(i8* %36) #14, !dbg !9867
  %37 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !9868
  %38 = bitcast %struct.skge_hw* %37 to i8*, !dbg !9868
  call void @kfree(i8* %38) #14, !dbg !9869
  br label %return, !dbg !9870

return:                                           ; preds = %if.end20, %if.then
  ret void, !dbg !9870
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @skge_shutdown(%struct.pci_dev* %pdev) #2 !dbg !9871 {
entry:
  %pdev.addr = alloca %struct.pci_dev*, align 8
  %hw = alloca %struct.skge_hw*, align 8
  %i = alloca i32, align 4
  %dev = alloca %struct.net_device*, align 8
  %skge = alloca %struct.skge_port*, align 8
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !9872, metadata !DIExpression()), !dbg !9873
  call void @llvm.dbg.declare(metadata %struct.skge_hw** %hw, metadata !9874, metadata !DIExpression()), !dbg !9875
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !9876
  %call = call i8* @pci_get_drvdata(%struct.pci_dev* %0) #14, !dbg !9877
  %1 = bitcast i8* %call to %struct.skge_hw*, !dbg !9877
  store %struct.skge_hw* %1, %struct.skge_hw** %hw, align 8, !dbg !9875
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9878, metadata !DIExpression()), !dbg !9879
  %2 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !9880
  %tobool = icmp ne %struct.skge_hw* %2, null, !dbg !9880
  br i1 %tobool, label %if.end, label %if.then, !dbg !9882

if.then:                                          ; preds = %entry
  br label %return, !dbg !9883

if.end:                                           ; preds = %entry
  store i32 0, i32* %i, align 4, !dbg !9884
  br label %for.cond, !dbg !9886

for.cond:                                         ; preds = %for.inc, %if.end
  %3 = load i32, i32* %i, align 4, !dbg !9887
  %4 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !9889
  %ports = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %4, i32 0, i32 8, !dbg !9890
  %5 = load i8, i8* %ports, align 1, !dbg !9890
  %conv = zext i8 %5 to i32, !dbg !9889
  %cmp = icmp slt i32 %3, %conv, !dbg !9891
  br i1 %cmp, label %for.body, label %for.end, !dbg !9892

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev, metadata !9893, metadata !DIExpression()), !dbg !9895
  %6 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !9896
  %dev2 = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %6, i32 0, i32 4, !dbg !9897
  %7 = load i32, i32* %i, align 4, !dbg !9898
  %idxprom = sext i32 %7 to i64, !dbg !9896
  %arrayidx = getelementptr [2 x %struct.net_device*], [2 x %struct.net_device*]* %dev2, i64 0, i64 %idxprom, !dbg !9896
  %8 = load %struct.net_device*, %struct.net_device** %arrayidx, align 8, !dbg !9896
  store %struct.net_device* %8, %struct.net_device** %dev, align 8, !dbg !9895
  call void @llvm.dbg.declare(metadata %struct.skge_port** %skge, metadata !9899, metadata !DIExpression()), !dbg !9900
  %9 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !9901
  %call3 = call i8* @netdev_priv(%struct.net_device* %9) #14, !dbg !9902
  %10 = bitcast i8* %call3 to %struct.skge_port*, !dbg !9902
  store %struct.skge_port* %10, %struct.skge_port** %skge, align 8, !dbg !9900
  %11 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !9903
  %wol = getelementptr inbounds %struct.skge_port, %struct.skge_port* %11, i32 0, i32 12, !dbg !9905
  %12 = load i8, i8* %wol, align 1, !dbg !9905
  %tobool4 = icmp ne i8 %12, 0, !dbg !9903
  br i1 %tobool4, label %if.then5, label %if.end6, !dbg !9906

if.then5:                                         ; preds = %for.body
  %13 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !9907
  call void @skge_wol_init(%struct.skge_port* %13) #14, !dbg !9908
  br label %if.end6, !dbg !9908

if.end6:                                          ; preds = %if.then5, %for.body
  br label %for.inc, !dbg !9909

for.inc:                                          ; preds = %if.end6
  %14 = load i32, i32* %i, align 4, !dbg !9910
  %inc = add i32 %14, 1, !dbg !9910
  store i32 %inc, i32* %i, align 4, !dbg !9910
  br label %for.cond, !dbg !9911, !llvm.loop !9912

for.end:                                          ; preds = %for.cond
  %15 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !9914
  %16 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !9915
  %dev7 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %16, i32 0, i32 41, !dbg !9916
  %call8 = call zeroext i1 @device_may_wakeup(%struct.device* %dev7) #14, !dbg !9917
  %call9 = call i32 @pci_wake_from_d3(%struct.pci_dev* %15, i1 zeroext %call8) #14, !dbg !9918
  %17 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !9919
  %call10 = call i32 @pci_set_power_state(%struct.pci_dev* %17, i32 3) #14, !dbg !9920
  br label %return, !dbg !9921

return:                                           ; preds = %for.end, %if.then
  ret void, !dbg !9921
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #3

; Function Attrs: noredzone
declare dso_local i32 @pci_enable_device(%struct.pci_dev*) #1

; Function Attrs: cold noredzone
declare dso_local void @_dev_err(%struct.device*, i8*, ...) #4

; Function Attrs: noredzone
declare dso_local i32 @pci_request_regions(%struct.pci_dev*, i8*) #1

; Function Attrs: noredzone
declare dso_local void @pci_set_master(%struct.pci_dev*) #1

; Function Attrs: noredzone
declare dso_local i32 @dma_set_mask(%struct.device*, i64) #1

; Function Attrs: noredzone
declare dso_local i32 @dma_set_coherent_mask(%struct.device*, i64) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kzalloc(i64 %size, i32 %flags) #2 !dbg !9922 {
entry:
  %s.addr.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i, metadata !9925, metadata !DIExpression()), !dbg !9929
  %flags.addr.i17.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i17.i, metadata !9935, metadata !DIExpression()), !dbg !9936
  %size.addr.i18.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i18.i, metadata !9937, metadata !DIExpression()), !dbg !9938
  %ret.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i, metadata !9939, metadata !DIExpression()), !dbg !9940
  %retval.i12.i = alloca i32, align 4
  %flags.addr.i13.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i13.i, metadata !9941, metadata !DIExpression()), !dbg !9945
  %retval.i.i = alloca i32, align 4
  %size.addr.i11.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i11.i, metadata !9947, metadata !DIExpression()), !dbg !9951
  %size.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i, metadata !9953, metadata !DIExpression()), !dbg !9957
  %flags.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i, metadata !9962, metadata !DIExpression()), !dbg !9963
  %order.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr.i.i.i, metadata !9964, metadata !DIExpression()), !dbg !9965
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !9966, metadata !DIExpression()), !dbg !9967
  %flags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i, metadata !9968, metadata !DIExpression()), !dbg !9969
  %order.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.i.i, metadata !9970, metadata !DIExpression()), !dbg !9971
  %retval.i = alloca i8*, align 8
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !9972, metadata !DIExpression()), !dbg !9973
  %flags.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i, metadata !9974, metadata !DIExpression()), !dbg !9975
  %index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.i, metadata !9976, metadata !DIExpression()), !dbg !9977
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !9978, metadata !DIExpression()), !dbg !9979
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !9980, metadata !DIExpression()), !dbg !9981
  %0 = load i64, i64* %size.addr, align 8, !dbg !9982
  %1 = load i32, i32* %flags.addr, align 4, !dbg !9983
  %or = or i32 %1, 256, !dbg !9984
  store i64 %0, i64* %size.addr.i, align 8
  store i32 %or, i32* %flags.addr.i, align 4
  %2 = load i64, i64* %size.addr.i, align 8, !dbg !9985
  %3 = call i1 @llvm.is.constant.i64(i64 %2) #10, !dbg !9986
  br i1 %3, label %if.then.i, label %if.end9.i, !dbg !9987

if.then.i:                                        ; preds = %entry
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !9988
  %cmp.i = icmp ugt i64 %4, 8192, !dbg !9989
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !9990

if.then1.i:                                       ; preds = %if.then.i
  %5 = load i64, i64* %size.addr.i, align 8, !dbg !9991
  %6 = load i32, i32* %flags.addr.i, align 4, !dbg !9992
  store i64 %5, i64* %size.addr.i.i, align 8
  store i32 %6, i32* %flags.addr.i.i, align 4
  %7 = load i64, i64* %size.addr.i.i, align 8, !dbg !9993
  %call.i.i = call i32 @get_order(i64 %7) #17, !dbg !9994
  store i32 %call.i.i, i32* %order.i.i, align 4, !dbg !9971
  %8 = load i64, i64* %size.addr.i.i, align 8, !dbg !9995
  %9 = load i32, i32* %flags.addr.i.i, align 4, !dbg !9996
  %10 = load i32, i32* %order.i.i, align 4, !dbg !9997
  store i64 %8, i64* %size.addr.i.i.i, align 8
  store i32 %9, i32* %flags.addr.i.i.i, align 4
  store i32 %10, i32* %order.addr.i.i.i, align 4
  %11 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !9998
  %12 = load i32, i32* %flags.addr.i.i.i, align 4, !dbg !9999
  %13 = load i32, i32* %order.addr.i.i.i, align 4, !dbg !10000
  %call.i.i.i = call noalias i8* @kmalloc_order(i64 %11, i32 %12, i32 %13) #16, !dbg !10001
  %ptrint.i.i.i = ptrtoint i8* %call.i.i.i to i64, !dbg !10001
  %maskedptr.i.i.i = and i64 %ptrint.i.i.i, 4095, !dbg !10001
  %maskcond.i.i.i = icmp eq i64 %maskedptr.i.i.i, 0, !dbg !10001
  call void @llvm.assume(i1 %maskcond.i.i.i) #10, !dbg !10001
  store i8* %call.i.i.i, i8** %retval.i, align 8, !dbg !10002
  br label %kmalloc.exit, !dbg !10002

if.end.i:                                         ; preds = %if.then.i
  %14 = load i64, i64* %size.addr.i, align 8, !dbg !10003
  store i64 %14, i64* %size.addr.i11.i, align 8
  %15 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10004
  %tobool.i.i = icmp ne i64 %15, 0, !dbg !10004
  br i1 %tobool.i.i, label %if.end.i.i, label %if.then.i.i, !dbg !10006

if.then.i.i:                                      ; preds = %if.end.i
  store i32 0, i32* %retval.i.i, align 4, !dbg !10007
  br label %kmalloc_index.exit.i, !dbg !10007

if.end.i.i:                                       ; preds = %if.end.i
  %16 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10008
  %cmp.i.i = icmp ule i64 %16, 8, !dbg !10010
  br i1 %cmp.i.i, label %if.then1.i.i, label %if.end2.i.i, !dbg !10011

if.then1.i.i:                                     ; preds = %if.end.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !10012
  br label %kmalloc_index.exit.i, !dbg !10012

if.end2.i.i:                                      ; preds = %if.end.i.i
  %17 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10013
  %cmp3.i.i = icmp ugt i64 %17, 64, !dbg !10015
  br i1 %cmp3.i.i, label %land.lhs.true.i.i, label %if.end6.i.i, !dbg !10016

land.lhs.true.i.i:                                ; preds = %if.end2.i.i
  %18 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10017
  %cmp4.i.i = icmp ule i64 %18, 96, !dbg !10018
  br i1 %cmp4.i.i, label %if.then5.i.i, label %if.end6.i.i, !dbg !10019

if.then5.i.i:                                     ; preds = %land.lhs.true.i.i
  store i32 1, i32* %retval.i.i, align 4, !dbg !10020
  br label %kmalloc_index.exit.i, !dbg !10020

if.end6.i.i:                                      ; preds = %land.lhs.true.i.i, %if.end2.i.i
  %19 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10021
  %cmp7.i.i = icmp ugt i64 %19, 128, !dbg !10023
  br i1 %cmp7.i.i, label %land.lhs.true8.i.i, label %if.end11.i.i, !dbg !10024

land.lhs.true8.i.i:                               ; preds = %if.end6.i.i
  %20 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10025
  %cmp9.i.i = icmp ule i64 %20, 192, !dbg !10026
  br i1 %cmp9.i.i, label %if.then10.i.i, label %if.end11.i.i, !dbg !10027

if.then10.i.i:                                    ; preds = %land.lhs.true8.i.i
  store i32 2, i32* %retval.i.i, align 4, !dbg !10028
  br label %kmalloc_index.exit.i, !dbg !10028

if.end11.i.i:                                     ; preds = %land.lhs.true8.i.i, %if.end6.i.i
  %21 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10029
  %cmp12.i.i = icmp ule i64 %21, 8, !dbg !10031
  br i1 %cmp12.i.i, label %if.then13.i.i, label %if.end14.i.i, !dbg !10032

if.then13.i.i:                                    ; preds = %if.end11.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !10033
  br label %kmalloc_index.exit.i, !dbg !10033

if.end14.i.i:                                     ; preds = %if.end11.i.i
  %22 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10034
  %cmp15.i.i = icmp ule i64 %22, 16, !dbg !10036
  br i1 %cmp15.i.i, label %if.then16.i.i, label %if.end17.i.i, !dbg !10037

if.then16.i.i:                                    ; preds = %if.end14.i.i
  store i32 4, i32* %retval.i.i, align 4, !dbg !10038
  br label %kmalloc_index.exit.i, !dbg !10038

if.end17.i.i:                                     ; preds = %if.end14.i.i
  %23 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10039
  %cmp18.i.i = icmp ule i64 %23, 32, !dbg !10041
  br i1 %cmp18.i.i, label %if.then19.i.i, label %if.end20.i.i, !dbg !10042

if.then19.i.i:                                    ; preds = %if.end17.i.i
  store i32 5, i32* %retval.i.i, align 4, !dbg !10043
  br label %kmalloc_index.exit.i, !dbg !10043

if.end20.i.i:                                     ; preds = %if.end17.i.i
  %24 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10044
  %cmp21.i.i = icmp ule i64 %24, 64, !dbg !10046
  br i1 %cmp21.i.i, label %if.then22.i.i, label %if.end23.i.i, !dbg !10047

if.then22.i.i:                                    ; preds = %if.end20.i.i
  store i32 6, i32* %retval.i.i, align 4, !dbg !10048
  br label %kmalloc_index.exit.i, !dbg !10048

if.end23.i.i:                                     ; preds = %if.end20.i.i
  %25 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10049
  %cmp24.i.i = icmp ule i64 %25, 128, !dbg !10051
  br i1 %cmp24.i.i, label %if.then25.i.i, label %if.end26.i.i, !dbg !10052

if.then25.i.i:                                    ; preds = %if.end23.i.i
  store i32 7, i32* %retval.i.i, align 4, !dbg !10053
  br label %kmalloc_index.exit.i, !dbg !10053

if.end26.i.i:                                     ; preds = %if.end23.i.i
  %26 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10054
  %cmp27.i.i = icmp ule i64 %26, 256, !dbg !10056
  br i1 %cmp27.i.i, label %if.then28.i.i, label %if.end29.i.i, !dbg !10057

if.then28.i.i:                                    ; preds = %if.end26.i.i
  store i32 8, i32* %retval.i.i, align 4, !dbg !10058
  br label %kmalloc_index.exit.i, !dbg !10058

if.end29.i.i:                                     ; preds = %if.end26.i.i
  %27 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10059
  %cmp30.i.i = icmp ule i64 %27, 512, !dbg !10061
  br i1 %cmp30.i.i, label %if.then31.i.i, label %if.end32.i.i, !dbg !10062

if.then31.i.i:                                    ; preds = %if.end29.i.i
  store i32 9, i32* %retval.i.i, align 4, !dbg !10063
  br label %kmalloc_index.exit.i, !dbg !10063

if.end32.i.i:                                     ; preds = %if.end29.i.i
  %28 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10064
  %cmp33.i.i = icmp ule i64 %28, 1024, !dbg !10066
  br i1 %cmp33.i.i, label %if.then34.i.i, label %if.end35.i.i, !dbg !10067

if.then34.i.i:                                    ; preds = %if.end32.i.i
  store i32 10, i32* %retval.i.i, align 4, !dbg !10068
  br label %kmalloc_index.exit.i, !dbg !10068

if.end35.i.i:                                     ; preds = %if.end32.i.i
  %29 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10069
  %cmp36.i.i = icmp ule i64 %29, 2048, !dbg !10071
  br i1 %cmp36.i.i, label %if.then37.i.i, label %if.end38.i.i, !dbg !10072

if.then37.i.i:                                    ; preds = %if.end35.i.i
  store i32 11, i32* %retval.i.i, align 4, !dbg !10073
  br label %kmalloc_index.exit.i, !dbg !10073

if.end38.i.i:                                     ; preds = %if.end35.i.i
  %30 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10074
  %cmp39.i.i = icmp ule i64 %30, 4096, !dbg !10076
  br i1 %cmp39.i.i, label %if.then40.i.i, label %if.end41.i.i, !dbg !10077

if.then40.i.i:                                    ; preds = %if.end38.i.i
  store i32 12, i32* %retval.i.i, align 4, !dbg !10078
  br label %kmalloc_index.exit.i, !dbg !10078

if.end41.i.i:                                     ; preds = %if.end38.i.i
  %31 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10079
  %cmp42.i.i = icmp ule i64 %31, 8192, !dbg !10081
  br i1 %cmp42.i.i, label %if.then43.i.i, label %if.end44.i.i, !dbg !10082

if.then43.i.i:                                    ; preds = %if.end41.i.i
  store i32 13, i32* %retval.i.i, align 4, !dbg !10083
  br label %kmalloc_index.exit.i, !dbg !10083

if.end44.i.i:                                     ; preds = %if.end41.i.i
  %32 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10084
  %cmp45.i.i = icmp ule i64 %32, 16384, !dbg !10086
  br i1 %cmp45.i.i, label %if.then46.i.i, label %if.end47.i.i, !dbg !10087

if.then46.i.i:                                    ; preds = %if.end44.i.i
  store i32 14, i32* %retval.i.i, align 4, !dbg !10088
  br label %kmalloc_index.exit.i, !dbg !10088

if.end47.i.i:                                     ; preds = %if.end44.i.i
  %33 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10089
  %cmp48.i.i = icmp ule i64 %33, 32768, !dbg !10091
  br i1 %cmp48.i.i, label %if.then49.i.i, label %if.end50.i.i, !dbg !10092

if.then49.i.i:                                    ; preds = %if.end47.i.i
  store i32 15, i32* %retval.i.i, align 4, !dbg !10093
  br label %kmalloc_index.exit.i, !dbg !10093

if.end50.i.i:                                     ; preds = %if.end47.i.i
  %34 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10094
  %cmp51.i.i = icmp ule i64 %34, 65536, !dbg !10096
  br i1 %cmp51.i.i, label %if.then52.i.i, label %if.end53.i.i, !dbg !10097

if.then52.i.i:                                    ; preds = %if.end50.i.i
  store i32 16, i32* %retval.i.i, align 4, !dbg !10098
  br label %kmalloc_index.exit.i, !dbg !10098

if.end53.i.i:                                     ; preds = %if.end50.i.i
  %35 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10099
  %cmp54.i.i = icmp ule i64 %35, 131072, !dbg !10101
  br i1 %cmp54.i.i, label %if.then55.i.i, label %if.end56.i.i, !dbg !10102

if.then55.i.i:                                    ; preds = %if.end53.i.i
  store i32 17, i32* %retval.i.i, align 4, !dbg !10103
  br label %kmalloc_index.exit.i, !dbg !10103

if.end56.i.i:                                     ; preds = %if.end53.i.i
  %36 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10104
  %cmp57.i.i = icmp ule i64 %36, 262144, !dbg !10106
  br i1 %cmp57.i.i, label %if.then58.i.i, label %if.end59.i.i, !dbg !10107

if.then58.i.i:                                    ; preds = %if.end56.i.i
  store i32 18, i32* %retval.i.i, align 4, !dbg !10108
  br label %kmalloc_index.exit.i, !dbg !10108

if.end59.i.i:                                     ; preds = %if.end56.i.i
  %37 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10109
  %cmp60.i.i = icmp ule i64 %37, 524288, !dbg !10111
  br i1 %cmp60.i.i, label %if.then61.i.i, label %if.end62.i.i, !dbg !10112

if.then61.i.i:                                    ; preds = %if.end59.i.i
  store i32 19, i32* %retval.i.i, align 4, !dbg !10113
  br label %kmalloc_index.exit.i, !dbg !10113

if.end62.i.i:                                     ; preds = %if.end59.i.i
  %38 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10114
  %cmp63.i.i = icmp ule i64 %38, 1048576, !dbg !10116
  br i1 %cmp63.i.i, label %if.then64.i.i, label %if.end65.i.i, !dbg !10117

if.then64.i.i:                                    ; preds = %if.end62.i.i
  store i32 20, i32* %retval.i.i, align 4, !dbg !10118
  br label %kmalloc_index.exit.i, !dbg !10118

if.end65.i.i:                                     ; preds = %if.end62.i.i
  %39 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10119
  %cmp66.i.i = icmp ule i64 %39, 2097152, !dbg !10121
  br i1 %cmp66.i.i, label %if.then67.i.i, label %if.end68.i.i, !dbg !10122

if.then67.i.i:                                    ; preds = %if.end65.i.i
  store i32 21, i32* %retval.i.i, align 4, !dbg !10123
  br label %kmalloc_index.exit.i, !dbg !10123

if.end68.i.i:                                     ; preds = %if.end65.i.i
  %40 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10124
  %cmp69.i.i = icmp ule i64 %40, 4194304, !dbg !10126
  br i1 %cmp69.i.i, label %if.then70.i.i, label %if.end71.i.i, !dbg !10127

if.then70.i.i:                                    ; preds = %if.end68.i.i
  store i32 22, i32* %retval.i.i, align 4, !dbg !10128
  br label %kmalloc_index.exit.i, !dbg !10128

if.end71.i.i:                                     ; preds = %if.end68.i.i
  %41 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10129
  %cmp72.i.i = icmp ule i64 %41, 8388608, !dbg !10131
  br i1 %cmp72.i.i, label %if.then73.i.i, label %if.end74.i.i, !dbg !10132

if.then73.i.i:                                    ; preds = %if.end71.i.i
  store i32 23, i32* %retval.i.i, align 4, !dbg !10133
  br label %kmalloc_index.exit.i, !dbg !10133

if.end74.i.i:                                     ; preds = %if.end71.i.i
  %42 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10134
  %cmp75.i.i = icmp ule i64 %42, 16777216, !dbg !10136
  br i1 %cmp75.i.i, label %if.then76.i.i, label %if.end77.i.i, !dbg !10137

if.then76.i.i:                                    ; preds = %if.end74.i.i
  store i32 24, i32* %retval.i.i, align 4, !dbg !10138
  br label %kmalloc_index.exit.i, !dbg !10138

if.end77.i.i:                                     ; preds = %if.end74.i.i
  %43 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10139
  %cmp78.i.i = icmp ule i64 %43, 33554432, !dbg !10141
  br i1 %cmp78.i.i, label %if.then79.i.i, label %if.end80.i.i, !dbg !10142

if.then79.i.i:                                    ; preds = %if.end77.i.i
  store i32 25, i32* %retval.i.i, align 4, !dbg !10143
  br label %kmalloc_index.exit.i, !dbg !10143

if.end80.i.i:                                     ; preds = %if.end77.i.i
  %44 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10144
  %cmp81.i.i = icmp ule i64 %44, 67108864, !dbg !10146
  br i1 %cmp81.i.i, label %if.then82.i.i, label %if.end83.i.i, !dbg !10147

if.then82.i.i:                                    ; preds = %if.end80.i.i
  store i32 26, i32* %retval.i.i, align 4, !dbg !10148
  br label %kmalloc_index.exit.i, !dbg !10148

if.end83.i.i:                                     ; preds = %if.end80.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.13, i64 0, i64 0), i32 382, i32 0, i64 12) #10, !dbg !10149, !srcloc !10152
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 235) #10, !dbg !10153, !srcloc !10156
  unreachable, !dbg !10157

kmalloc_index.exit.i:                             ; preds = %if.then82.i.i, %if.then79.i.i, %if.then76.i.i, %if.then73.i.i, %if.then70.i.i, %if.then67.i.i, %if.then64.i.i, %if.then61.i.i, %if.then58.i.i, %if.then55.i.i, %if.then52.i.i, %if.then49.i.i, %if.then46.i.i, %if.then43.i.i, %if.then40.i.i, %if.then37.i.i, %if.then34.i.i, %if.then31.i.i, %if.then28.i.i, %if.then25.i.i, %if.then22.i.i, %if.then19.i.i, %if.then16.i.i, %if.then13.i.i, %if.then10.i.i, %if.then5.i.i, %if.then1.i.i, %if.then.i.i
  %45 = load i32, i32* %retval.i.i, align 4, !dbg !10158
  store i32 %45, i32* %index.i, align 4, !dbg !10159
  %46 = load i32, i32* %index.i, align 4, !dbg !10160
  %tobool.i = icmp ne i32 %46, 0, !dbg !10160
  br i1 %tobool.i, label %if.end4.i, label %if.then3.i, !dbg !10162

if.then3.i:                                       ; preds = %kmalloc_index.exit.i
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i, align 8, !dbg !10163
  br label %kmalloc.exit, !dbg !10163

if.end4.i:                                        ; preds = %kmalloc_index.exit.i
  %47 = load i32, i32* %flags.addr.i, align 4, !dbg !10164
  store i32 %47, i32* %flags.addr.i13.i, align 4
  %48 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !10165
  %and.i.i = and i32 %48, 17, !dbg !10165
  %cmp.i14.i = icmp eq i32 %and.i.i, 0, !dbg !10165
  %lnot.i.i = xor i1 %cmp.i14.i, true, !dbg !10165
  %lnot.ext.i.i = zext i1 %cmp.i14.i to i32, !dbg !10165
  %conv.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !10165
  br i1 %cmp.i14.i, label %if.then.i15.i, label %if.end.i16.i, !dbg !10167

if.then.i15.i:                                    ; preds = %if.end4.i
  store i32 0, i32* %retval.i12.i, align 4, !dbg !10168
  br label %kmalloc_type.exit.i, !dbg !10168

if.end.i16.i:                                     ; preds = %if.end4.i
  %49 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !10169
  %and2.i.i = and i32 %49, 1, !dbg !10170
  %tobool3.i.i = icmp ne i32 %and2.i.i, 0, !dbg !10169
  %50 = zext i1 %tobool3.i.i to i64, !dbg !10169
  %cond.i.i = select i1 %tobool3.i.i, i32 2, i32 1, !dbg !10169
  store i32 %cond.i.i, i32* %retval.i12.i, align 4, !dbg !10171
  br label %kmalloc_type.exit.i, !dbg !10171

kmalloc_type.exit.i:                              ; preds = %if.end.i16.i, %if.then.i15.i
  %51 = load i32, i32* %retval.i12.i, align 4, !dbg !10172
  %idxprom.i = zext i32 %51 to i64, !dbg !10173
  %arrayidx.i = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i, !dbg !10173
  %52 = load i32, i32* %index.i, align 4, !dbg !10174
  %idxprom6.i = zext i32 %52 to i64, !dbg !10173
  %arrayidx7.i = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i, i64 0, i64 %idxprom6.i, !dbg !10173
  %53 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx7.i, align 8, !dbg !10173
  %54 = load i32, i32* %flags.addr.i, align 4, !dbg !10175
  %55 = load i64, i64* %size.addr.i, align 8, !dbg !10176
  store %struct.kmem_cache* %53, %struct.kmem_cache** %s.addr.i.i, align 8
  store i32 %54, i32* %flags.addr.i17.i, align 4
  store i64 %55, i64* %size.addr.i18.i, align 8
  %56 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !10177
  %57 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !10178
  %call.i19.i = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %56, i32 %57) #16, !dbg !10179
  %ptrint.i.i = ptrtoint i8* %call.i19.i to i64, !dbg !10179
  %maskedptr.i.i = and i64 %ptrint.i.i, 7, !dbg !10179
  %maskcond.i.i = icmp eq i64 %maskedptr.i.i, 0, !dbg !10179
  call void @llvm.assume(i1 %maskcond.i.i) #10, !dbg !10179
  store i8* %call.i19.i, i8** %ret.i.i, align 8, !dbg !9940
  %58 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !10180
  %59 = load i8*, i8** %ret.i.i, align 8, !dbg !10181
  %60 = load i64, i64* %size.addr.i18.i, align 8, !dbg !10182
  %61 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !10183
  %call1.i.i = call i8* @kasan_kmalloc(%struct.kmem_cache* %58, i8* %59, i64 %60, i32 %61) #16, !dbg !10184
  store i8* %call1.i.i, i8** %ret.i.i, align 8, !dbg !10185
  %62 = load i8*, i8** %ret.i.i, align 8, !dbg !10186
  store i8* %62, i8** %retval.i, align 8, !dbg !10187
  br label %kmalloc.exit, !dbg !10187

if.end9.i:                                        ; preds = %entry
  %63 = load i64, i64* %size.addr.i, align 8, !dbg !10188
  %64 = load i32, i32* %flags.addr.i, align 4, !dbg !10189
  %call10.i = call noalias i8* @__kmalloc(i64 %63, i32 %64) #16, !dbg !10190
  %ptrint.i = ptrtoint i8* %call10.i to i64, !dbg !10190
  %maskedptr.i = and i64 %ptrint.i, 7, !dbg !10190
  %maskcond.i = icmp eq i64 %maskedptr.i, 0, !dbg !10190
  call void @llvm.assume(i1 %maskcond.i) #10, !dbg !10190
  store i8* %call10.i, i8** %retval.i, align 8, !dbg !10191
  br label %kmalloc.exit, !dbg !10191

kmalloc.exit:                                     ; preds = %if.then1.i, %if.then3.i, %kmalloc_type.exit.i, %if.end9.i
  %65 = load i8*, i8** %retval.i, align 8, !dbg !10192
  ret i8* %65, !dbg !10193
}

; Function Attrs: noredzone
declare dso_local i64 @strlen(i8*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @pci_name(%struct.pci_dev* %pdev) #2 !dbg !10194 {
entry:
  %pdev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !10199, metadata !DIExpression()), !dbg !10200
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !10201
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 41, !dbg !10202
  %call = call i8* @dev_name(%struct.device* %dev) #14, !dbg !10203
  ret i8* %call, !dbg !10204
}

; Function Attrs: noredzone
declare dso_local i32 @sprintf(i8*, i8*, ...) #1

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #5

; Function Attrs: noredzone
declare dso_local void @tasklet_setup(%struct.tasklet_struct*, void (%struct.tasklet_struct*)*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @skge_extirq(%struct.tasklet_struct* %t) #2 !dbg !10205 {
entry:
  %lock.addr.i20 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i20, metadata !9767, metadata !DIExpression()), !dbg !10206
  %lock.addr.i18 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i18, metadata !9773, metadata !DIExpression()), !dbg !10208
  %lock.addr.i16 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i16, metadata !10210, metadata !DIExpression()), !dbg !10212
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !10219, metadata !DIExpression()), !dbg !10221
  %t.addr = alloca %struct.tasklet_struct*, align 8
  %hw = alloca %struct.skge_hw*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.skge_hw*, align 8
  %port = alloca i32, align 4
  %dev = alloca %struct.net_device*, align 8
  %skge = alloca %struct.skge_port*, align 8
  store %struct.tasklet_struct* %t, %struct.tasklet_struct** %t.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tasklet_struct** %t.addr, metadata !10223, metadata !DIExpression()), !dbg !10224
  call void @llvm.dbg.declare(metadata %struct.skge_hw** %hw, metadata !10225, metadata !DIExpression()), !dbg !10226
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !10227, metadata !DIExpression()), !dbg !10229
  %0 = load %struct.tasklet_struct*, %struct.tasklet_struct** %t.addr, align 8, !dbg !10229
  %1 = bitcast %struct.tasklet_struct* %0 to i8*, !dbg !10229
  store i8* %1, i8** %__mptr, align 8, !dbg !10229
  br label %do.body, !dbg !10229

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !10230

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !10229
  %add.ptr = getelementptr i8, i8* %2, i64 -64, !dbg !10229
  %3 = bitcast i8* %add.ptr to %struct.skge_hw*, !dbg !10229
  store %struct.skge_hw* %3, %struct.skge_hw** %tmp, align 8, !dbg !10230
  %4 = load %struct.skge_hw*, %struct.skge_hw** %tmp, align 8, !dbg !10229
  store %struct.skge_hw* %4, %struct.skge_hw** %hw, align 8, !dbg !10226
  call void @llvm.dbg.declare(metadata i32* %port, metadata !10232, metadata !DIExpression()), !dbg !10233
  store i32 0, i32* %port, align 4, !dbg !10234
  br label %for.cond, !dbg !10235

for.cond:                                         ; preds = %for.inc, %do.end
  %5 = load i32, i32* %port, align 4, !dbg !10236
  %6 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !10237
  %ports = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %6, i32 0, i32 8, !dbg !10238
  %7 = load i8, i8* %ports, align 1, !dbg !10238
  %conv = zext i8 %7 to i32, !dbg !10237
  %cmp = icmp slt i32 %5, %conv, !dbg !10239
  br i1 %cmp, label %for.body, label %for.end, !dbg !10240

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev, metadata !10241, metadata !DIExpression()), !dbg !10242
  %8 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !10243
  %dev2 = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %8, i32 0, i32 4, !dbg !10244
  %9 = load i32, i32* %port, align 4, !dbg !10245
  %idxprom = sext i32 %9 to i64, !dbg !10243
  %arrayidx = getelementptr [2 x %struct.net_device*], [2 x %struct.net_device*]* %dev2, i64 0, i64 %idxprom, !dbg !10243
  %10 = load %struct.net_device*, %struct.net_device** %arrayidx, align 8, !dbg !10243
  store %struct.net_device* %10, %struct.net_device** %dev, align 8, !dbg !10242
  %11 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !10246
  %call = call zeroext i1 @netif_running(%struct.net_device* %11) #14, !dbg !10247
  br i1 %call, label %if.then, label %if.end12, !dbg !10248

if.then:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata %struct.skge_port** %skge, metadata !10249, metadata !DIExpression()), !dbg !10250
  %12 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !10251
  %call3 = call i8* @netdev_priv(%struct.net_device* %12) #14, !dbg !10252
  %13 = bitcast i8* %call3 to %struct.skge_port*, !dbg !10252
  store %struct.skge_port* %13, %struct.skge_port** %skge, align 8, !dbg !10250
  %14 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !10253
  %phy_lock = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %14, i32 0, i32 13, !dbg !10254
  store %struct.spinlock* %phy_lock, %struct.spinlock** %lock.addr.i, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !10255, !srcloc !10257
  %15 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !10258
  %16 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %15, i32 0, i32 0, !dbg !10258
  %rlock.i = bitcast %union.anon.1* %16 to %struct.raw_spinlock*, !dbg !10258
  %17 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !10260
  %call4 = call zeroext i1 @is_genesis(%struct.skge_hw* %17) #14, !dbg !10262
  br i1 %call4, label %if.else, label %if.then5, !dbg !10263

if.then5:                                         ; preds = %if.then
  %18 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !10264
  call void @yukon_phy_intr(%struct.skge_port* %18) #14, !dbg !10265
  br label %if.end10, !dbg !10265

if.else:                                          ; preds = %if.then
  %19 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !10266
  %phy_type = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %19, i32 0, i32 9, !dbg !10268
  %20 = load i8, i8* %phy_type, align 4, !dbg !10268
  %conv6 = zext i8 %20 to i32, !dbg !10266
  %cmp7 = icmp eq i32 %conv6, 1, !dbg !10269
  br i1 %cmp7, label %if.then9, label %if.end, !dbg !10270

if.then9:                                         ; preds = %if.else
  %21 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !10271
  call void @bcom_phy_intr(%struct.skge_port* %21) #14, !dbg !10272
  br label %if.end, !dbg !10272

if.end:                                           ; preds = %if.then9, %if.else
  br label %if.end10

if.end10:                                         ; preds = %if.end, %if.then5
  %22 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !10273
  %phy_lock11 = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %22, i32 0, i32 13, !dbg !10274
  store %struct.spinlock* %phy_lock11, %struct.spinlock** %lock.addr.i16, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !10275, !srcloc !10277
  %23 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i16, align 8, !dbg !10278
  %24 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %23, i32 0, i32 0, !dbg !10278
  %rlock.i17 = bitcast %union.anon.1* %24 to %struct.raw_spinlock*, !dbg !10278
  br label %if.end12, !dbg !10280

if.end12:                                         ; preds = %if.end10, %for.body
  br label %for.inc, !dbg !10281

for.inc:                                          ; preds = %if.end12
  %25 = load i32, i32* %port, align 4, !dbg !10282
  %inc = add i32 %25, 1, !dbg !10282
  store i32 %inc, i32* %port, align 4, !dbg !10282
  br label %for.cond, !dbg !10283, !llvm.loop !10284

for.end:                                          ; preds = %for.cond
  %26 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !10286
  %hw_lock = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %26, i32 0, i32 2, !dbg !10287
  store %struct.spinlock* %hw_lock, %struct.spinlock** %lock.addr.i18, align 8
  call void @arch_local_irq_disable() #16, !dbg !10288
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !10289, !srcloc !9814
  %27 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i18, align 8, !dbg !10290
  %28 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %27, i32 0, i32 0, !dbg !10290
  %rlock.i19 = bitcast %union.anon.1* %28 to %struct.raw_spinlock*, !dbg !10290
  %29 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !10291
  %intr_mask = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %29, i32 0, i32 3, !dbg !10292
  %30 = load i32, i32* %intr_mask, align 8, !dbg !10293
  %or = or i32 %30, 8388608, !dbg !10293
  store i32 %or, i32* %intr_mask, align 8, !dbg !10293
  %31 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !10294
  %32 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !10295
  %intr_mask13 = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %32, i32 0, i32 3, !dbg !10296
  %33 = load i32, i32* %intr_mask13, align 8, !dbg !10296
  call void @skge_write32(%struct.skge_hw* %31, i32 12, i32 %33) #14, !dbg !10297
  %34 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !10298
  %call14 = call i32 @skge_read32(%struct.skge_hw* %34, i32 12) #14, !dbg !10299
  %35 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !10300
  %hw_lock15 = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %35, i32 0, i32 2, !dbg !10301
  store %struct.spinlock* %hw_lock15, %struct.spinlock** %lock.addr.i20, align 8
  call void @arch_local_irq_enable() #16, !dbg !10302
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !10303, !srcloc !9838
  %36 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i20, align 8, !dbg !10304
  %37 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %36, i32 0, i32 0, !dbg !10304
  %rlock.i21 = bitcast %union.anon.1* %37 to %struct.raw_spinlock*, !dbg !10304
  ret void, !dbg !10305
}

; Function Attrs: noredzone
declare dso_local i8* @ioremap(i64, i64) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @skge_reset(%struct.skge_hw* %hw) #2 !dbg !10306 {
entry:
  %retval = alloca i32, align 4
  %hw.addr = alloca %struct.skge_hw*, align 8
  %reg = alloca i32, align 4
  %ctst = alloca i16, align 2
  %pci_status = alloca i16, align 2
  %t8 = alloca i8, align 1
  %mac_cfg = alloca i8, align 1
  %pmd_type = alloca i8, align 1
  %i = alloca i32, align 4
  store %struct.skge_hw* %hw, %struct.skge_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.skge_hw** %hw.addr, metadata !10309, metadata !DIExpression()), !dbg !10310
  call void @llvm.dbg.declare(metadata i32* %reg, metadata !10311, metadata !DIExpression()), !dbg !10312
  call void @llvm.dbg.declare(metadata i16* %ctst, metadata !10313, metadata !DIExpression()), !dbg !10314
  call void @llvm.dbg.declare(metadata i16* %pci_status, metadata !10315, metadata !DIExpression()), !dbg !10316
  call void @llvm.dbg.declare(metadata i8* %t8, metadata !10317, metadata !DIExpression()), !dbg !10318
  call void @llvm.dbg.declare(metadata i8* %mac_cfg, metadata !10319, metadata !DIExpression()), !dbg !10320
  call void @llvm.dbg.declare(metadata i8* %pmd_type, metadata !10321, metadata !DIExpression()), !dbg !10322
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10323, metadata !DIExpression()), !dbg !10324
  %0 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !10325
  %call = call zeroext i16 @skge_read16(%struct.skge_hw* %0, i32 4) #14, !dbg !10326
  store i16 %call, i16* %ctst, align 2, !dbg !10327
  %1 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !10328
  call void @skge_write8(%struct.skge_hw* %1, i32 4, i8 zeroext 1) #14, !dbg !10329
  %2 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !10330
  call void @skge_write8(%struct.skge_hw* %2, i32 4, i8 zeroext 2) #14, !dbg !10331
  %3 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !10332
  call void @skge_write8(%struct.skge_hw* %3, i32 344, i8 zeroext 2) #14, !dbg !10333
  %4 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !10334
  call void @skge_write8(%struct.skge_hw* %4, i32 345, i8 zeroext 0) #14, !dbg !10335
  %5 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !10336
  %pdev = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %5, i32 0, i32 1, !dbg !10337
  %6 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !10337
  %call1 = call i32 @pci_read_config_word(%struct.pci_dev* %6, i32 6, i16* %pci_status) #14, !dbg !10338
  %7 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !10339
  %pdev2 = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %7, i32 0, i32 1, !dbg !10340
  %8 = load %struct.pci_dev*, %struct.pci_dev** %pdev2, align 8, !dbg !10340
  %9 = load i16, i16* %pci_status, align 2, !dbg !10341
  %conv = zext i16 %9 to i32, !dbg !10341
  %or = or i32 %conv, 63744, !dbg !10342
  %conv3 = trunc i32 %or to i16, !dbg !10341
  %call4 = call i32 @pci_write_config_word(%struct.pci_dev* %8, i32 6, i16 zeroext %conv3) #14, !dbg !10343
  %10 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !10344
  call void @skge_write8(%struct.skge_hw* %10, i32 344, i8 zeroext 1) #14, !dbg !10345
  %11 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !10346
  call void @skge_write8(%struct.skge_hw* %11, i32 4, i8 zeroext 8) #14, !dbg !10347
  %12 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !10348
  %13 = load i16, i16* %ctst, align 2, !dbg !10349
  %conv5 = zext i16 %13 to i32, !dbg !10349
  %and = and i32 %conv5, 14336, !dbg !10350
  %conv6 = trunc i32 %and to i16, !dbg !10349
  call void @skge_write16(%struct.skge_hw* %12, i32 4, i16 zeroext %conv6) #14, !dbg !10351
  %14 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !10352
  %call7 = call zeroext i8 @skge_read8(%struct.skge_hw* %14, i32 283) #14, !dbg !10353
  %15 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !10354
  %chip_id = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %15, i32 0, i32 5, !dbg !10355
  store i8 %call7, i8* %chip_id, align 8, !dbg !10356
  %16 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !10357
  %call8 = call zeroext i8 @skge_read8(%struct.skge_hw* %16, i32 285) #14, !dbg !10358
  %conv9 = zext i8 %call8 to i32, !dbg !10358
  %and10 = and i32 %conv9, 15, !dbg !10359
  %conv11 = trunc i32 %and10 to i8, !dbg !10358
  %17 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !10360
  %phy_type = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %17, i32 0, i32 9, !dbg !10361
  store i8 %conv11, i8* %phy_type, align 4, !dbg !10362
  %18 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !10363
  %call12 = call zeroext i8 @skge_read8(%struct.skge_hw* %18, i32 281) #14, !dbg !10364
  store i8 %call12, i8* %pmd_type, align 1, !dbg !10365
  %19 = load i8, i8* %pmd_type, align 1, !dbg !10366
  %conv13 = zext i8 %19 to i32, !dbg !10366
  %cmp = icmp eq i32 %conv13, 84, !dbg !10367
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !10368

lor.rhs:                                          ; preds = %entry
  %20 = load i8, i8* %pmd_type, align 1, !dbg !10369
  %conv15 = zext i8 %20 to i32, !dbg !10369
  %cmp16 = icmp eq i32 %conv15, 49, !dbg !10370
  br label %lor.end, !dbg !10368

lor.end:                                          ; preds = %lor.rhs, %entry
  %21 = phi i1 [ true, %entry ], [ %cmp16, %lor.rhs ]
  %lor.ext = zext i1 %21 to i32, !dbg !10368
  %conv18 = trunc i32 %lor.ext to i8, !dbg !10371
  %22 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !10372
  %copper = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %22, i32 0, i32 7, !dbg !10373
  store i8 %conv18, i8* %copper, align 2, !dbg !10374
  %23 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !10375
  %chip_id19 = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %23, i32 0, i32 5, !dbg !10376
  %24 = load i8, i8* %chip_id19, align 8, !dbg !10376
  %conv20 = zext i8 %24 to i32, !dbg !10375
  switch i32 %conv20, label %sw.default [
    i32 10, label %sw.bb
    i32 176, label %sw.bb22
    i32 177, label %sw.bb22
    i32 178, label %sw.bb22
  ], !dbg !10377

sw.bb:                                            ; preds = %lor.end
  %25 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !10378
  %pdev21 = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %25, i32 0, i32 1, !dbg !10378
  %26 = load %struct.pci_dev*, %struct.pci_dev** %pdev21, align 8, !dbg !10378
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %26, i32 0, i32 41, !dbg !10378
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.36, i64 0, i64 0)) #15, !dbg !10378
  store i32 -95, i32* %retval, align 4, !dbg !10380
  br label %return, !dbg !10380

sw.bb22:                                          ; preds = %lor.end, %lor.end, %lor.end
  %27 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !10381
  %phy_type23 = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %27, i32 0, i32 9, !dbg !10383
  %28 = load i8, i8* %phy_type23, align 4, !dbg !10383
  %conv24 = zext i8 %28 to i32, !dbg !10381
  %cmp25 = icmp slt i32 %conv24, 4, !dbg !10384
  br i1 %cmp25, label %land.lhs.true, label %if.end, !dbg !10385

land.lhs.true:                                    ; preds = %sw.bb22
  %29 = load i8, i8* %pmd_type, align 1, !dbg !10386
  %conv27 = zext i8 %29 to i32, !dbg !10386
  %cmp28 = icmp ne i32 %conv27, 83, !dbg !10387
  br i1 %cmp28, label %if.then, label %if.end, !dbg !10388

if.then:                                          ; preds = %land.lhs.true
  %30 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !10389
  %copper30 = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %30, i32 0, i32 7, !dbg !10390
  store i8 1, i8* %copper30, align 2, !dbg !10391
  br label %if.end, !dbg !10389

if.end:                                           ; preds = %if.then, %land.lhs.true, %sw.bb22
  %31 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !10392
  %phy_addr = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %31, i32 0, i32 12, !dbg !10393
  store i16 0, i16* %phy_addr, align 8, !dbg !10394
  br label %sw.epilog, !dbg !10395

sw.default:                                       ; preds = %lor.end
  %32 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !10396
  %pdev31 = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %32, i32 0, i32 1, !dbg !10396
  %33 = load %struct.pci_dev*, %struct.pci_dev** %pdev31, align 8, !dbg !10396
  %dev32 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %33, i32 0, i32 41, !dbg !10396
  %34 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !10396
  %chip_id33 = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %34, i32 0, i32 5, !dbg !10396
  %35 = load i8, i8* %chip_id33, align 8, !dbg !10396
  %conv34 = zext i8 %35 to i32, !dbg !10396
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev32, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.37, i64 0, i64 0), i32 %conv34) #15, !dbg !10396
  store i32 -95, i32* %retval, align 4, !dbg !10397
  br label %return, !dbg !10397

sw.epilog:                                        ; preds = %if.end
  %36 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !10398
  %call35 = call zeroext i8 @skge_read8(%struct.skge_hw* %36, i32 282) #14, !dbg !10399
  store i8 %call35, i8* %mac_cfg, align 1, !dbg !10400
  %37 = load i8, i8* %mac_cfg, align 1, !dbg !10401
  %conv36 = zext i8 %37 to i32, !dbg !10401
  %and37 = and i32 %conv36, 1, !dbg !10402
  %tobool = icmp ne i32 %and37, 0, !dbg !10403
  %38 = zext i1 %tobool to i64, !dbg !10403
  %cond = select i1 %tobool, i32 1, i32 2, !dbg !10403
  %conv38 = trunc i32 %cond to i8, !dbg !10403
  %39 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !10404
  %ports = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %39, i32 0, i32 8, !dbg !10405
  store i8 %conv38, i8* %ports, align 1, !dbg !10406
  %40 = load i8, i8* %mac_cfg, align 1, !dbg !10407
  %conv39 = zext i8 %40 to i32, !dbg !10407
  %and40 = and i32 %conv39, 240, !dbg !10408
  %shr = ashr i32 %and40, 4, !dbg !10409
  %conv41 = trunc i32 %shr to i8, !dbg !10410
  %41 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !10411
  %chip_rev = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %41, i32 0, i32 6, !dbg !10412
  store i8 %conv41, i8* %chip_rev, align 1, !dbg !10413
  %42 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !10414
  %call42 = call zeroext i8 @skge_read8(%struct.skge_hw* %42, i32 284) #14, !dbg !10415
  store i8 %call42, i8* %t8, align 1, !dbg !10416
  %43 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !10417
  %call43 = call zeroext i1 @is_genesis(%struct.skge_hw* %43) #14, !dbg !10419
  br i1 %call43, label %if.then44, label %if.else52, !dbg !10420

if.then44:                                        ; preds = %sw.epilog
  %44 = load i8, i8* %t8, align 1, !dbg !10421
  %conv45 = zext i8 %44 to i32, !dbg !10421
  %cmp46 = icmp eq i32 %conv45, 3, !dbg !10424
  br i1 %cmp46, label %if.then48, label %if.else, !dbg !10425

if.then48:                                        ; preds = %if.then44
  %45 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !10426
  %ram_size = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %45, i32 0, i32 10, !dbg !10428
  store i32 1048576, i32* %ram_size, align 8, !dbg !10429
  %46 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !10430
  %ram_offset = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %46, i32 0, i32 11, !dbg !10431
  store i32 524288, i32* %ram_offset, align 4, !dbg !10432
  br label %if.end51, !dbg !10433

if.else:                                          ; preds = %if.then44
  %47 = load i8, i8* %t8, align 1, !dbg !10434
  %conv49 = zext i8 %47 to i32, !dbg !10434
  %mul = mul i32 %conv49, 512, !dbg !10435
  %48 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !10436
  %ram_size50 = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %48, i32 0, i32 10, !dbg !10437
  store i32 %mul, i32* %ram_size50, align 8, !dbg !10438
  br label %if.end51

if.end51:                                         ; preds = %if.else, %if.then48
  br label %if.end63, !dbg !10439

if.else52:                                        ; preds = %sw.epilog
  %49 = load i8, i8* %t8, align 1, !dbg !10440
  %conv53 = zext i8 %49 to i32, !dbg !10440
  %cmp54 = icmp eq i32 %conv53, 0, !dbg !10442
  br i1 %cmp54, label %if.then56, label %if.else58, !dbg !10443

if.then56:                                        ; preds = %if.else52
  %50 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !10444
  %ram_size57 = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %50, i32 0, i32 10, !dbg !10445
  store i32 131072, i32* %ram_size57, align 8, !dbg !10446
  br label %if.end62, !dbg !10444

if.else58:                                        ; preds = %if.else52
  %51 = load i8, i8* %t8, align 1, !dbg !10447
  %conv59 = zext i8 %51 to i32, !dbg !10447
  %mul60 = mul i32 %conv59, 4096, !dbg !10448
  %52 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !10449
  %ram_size61 = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %52, i32 0, i32 10, !dbg !10450
  store i32 %mul60, i32* %ram_size61, align 8, !dbg !10451
  br label %if.end62

if.end62:                                         ; preds = %if.else58, %if.then56
  br label %if.end63

if.end63:                                         ; preds = %if.end62, %if.end51
  %53 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !10452
  %intr_mask = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %53, i32 0, i32 3, !dbg !10453
  store i32 -2147483648, i32* %intr_mask, align 8, !dbg !10454
  %54 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !10455
  %call64 = call zeroext i1 @is_genesis(%struct.skge_hw* %54) #14, !dbg !10457
  br i1 %call64, label %land.lhs.true66, label %if.then71, !dbg !10458

land.lhs.true66:                                  ; preds = %if.end63
  %55 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !10459
  %phy_type67 = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %55, i32 0, i32 9, !dbg !10460
  %56 = load i8, i8* %phy_type67, align 4, !dbg !10460
  %conv68 = zext i8 %56 to i32, !dbg !10459
  %cmp69 = icmp eq i32 %conv68, 0, !dbg !10461
  br i1 %cmp69, label %if.end74, label %if.then71, !dbg !10462

if.then71:                                        ; preds = %land.lhs.true66, %if.end63
  %57 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !10463
  %intr_mask72 = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %57, i32 0, i32 3, !dbg !10464
  %58 = load i32, i32* %intr_mask72, align 8, !dbg !10465
  %or73 = or i32 %58, 8388608, !dbg !10465
  store i32 %or73, i32* %intr_mask72, align 8, !dbg !10465
  br label %if.end74, !dbg !10463

if.end74:                                         ; preds = %if.then71, %land.lhs.true66
  %59 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !10466
  %call75 = call zeroext i1 @is_genesis(%struct.skge_hw* %59) #14, !dbg !10468
  br i1 %call75, label %if.then76, label %if.else77, !dbg !10469

if.then76:                                        ; preds = %if.end74
  %60 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !10470
  call void @genesis_init(%struct.skge_hw* %60) #14, !dbg !10471
  br label %if.end102, !dbg !10471

if.else77:                                        ; preds = %if.end74
  %61 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !10472
  call void @skge_write8(%struct.skge_hw* %61, i32 7, i8 zeroext -90) #14, !dbg !10474
  %62 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !10475
  %call78 = call i32 @skge_read32(%struct.skge_hw* %62, i32 8) #14, !dbg !10477
  %and79 = and i32 %call78, -2147483648, !dbg !10478
  %tobool80 = icmp ne i32 %and79, 0, !dbg !10478
  br i1 %tobool80, label %land.lhs.true81, label %if.end90, !dbg !10479

land.lhs.true81:                                  ; preds = %if.else77
  %63 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !10480
  %call82 = call i32 @skge_read32(%struct.skge_hw* %63, i32 16) #14, !dbg !10481
  %and83 = and i32 %call82, 4096, !dbg !10482
  %tobool84 = icmp ne i32 %and83, 0, !dbg !10482
  br i1 %tobool84, label %if.then85, label %if.end90, !dbg !10483

if.then85:                                        ; preds = %land.lhs.true81
  %64 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !10484
  %pdev86 = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %64, i32 0, i32 1, !dbg !10484
  %65 = load %struct.pci_dev*, %struct.pci_dev** %pdev86, align 8, !dbg !10484
  %dev87 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %65, i32 0, i32 41, !dbg !10484
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev87, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.38, i64 0, i64 0)) #15, !dbg !10484
  %66 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !10486
  %intr_mask88 = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %66, i32 0, i32 3, !dbg !10487
  %67 = load i32, i32* %intr_mask88, align 8, !dbg !10488
  %and89 = and i32 %67, 2147483647, !dbg !10488
  store i32 %and89, i32* %intr_mask88, align 8, !dbg !10488
  br label %if.end90, !dbg !10489

if.end90:                                         ; preds = %if.then85, %land.lhs.true81, %if.else77
  %68 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !10490
  call void @skge_write8(%struct.skge_hw* %68, i32 344, i8 zeroext 2) #14, !dbg !10491
  %69 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !10492
  %pdev91 = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %69, i32 0, i32 1, !dbg !10493
  %70 = load %struct.pci_dev*, %struct.pci_dev** %pdev91, align 8, !dbg !10493
  %call92 = call i32 @pci_read_config_dword(%struct.pci_dev* %70, i32 64, i32* %reg) #14, !dbg !10494
  %71 = load i32, i32* %reg, align 4, !dbg !10495
  %and93 = and i32 %71, -134217729, !dbg !10495
  store i32 %and93, i32* %reg, align 4, !dbg !10495
  %72 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !10496
  %pdev94 = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %72, i32 0, i32 1, !dbg !10497
  %73 = load %struct.pci_dev*, %struct.pci_dev** %pdev94, align 8, !dbg !10497
  %74 = load i32, i32* %reg, align 4, !dbg !10498
  %call95 = call i32 @pci_write_config_dword(%struct.pci_dev* %73, i32 64, i32 %74) #14, !dbg !10499
  %75 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !10500
  call void @skge_write8(%struct.skge_hw* %75, i32 344, i8 zeroext 1) #14, !dbg !10501
  store i32 0, i32* %i, align 4, !dbg !10502
  br label %for.cond, !dbg !10504

for.cond:                                         ; preds = %for.inc, %if.end90
  %76 = load i32, i32* %i, align 4, !dbg !10505
  %77 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !10507
  %ports96 = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %77, i32 0, i32 8, !dbg !10508
  %78 = load i8, i8* %ports96, align 1, !dbg !10508
  %conv97 = zext i8 %78 to i32, !dbg !10507
  %cmp98 = icmp slt i32 %76, %conv97, !dbg !10509
  br i1 %cmp98, label %for.body, label %for.end, !dbg !10510

for.body:                                         ; preds = %for.cond
  %79 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !10511
  %80 = load i32, i32* %i, align 4, !dbg !10513
  %shl = shl i32 %80, 7, !dbg !10513
  %add = add i32 %shl, 3856, !dbg !10513
  call void @skge_write16(%struct.skge_hw* %79, i32 %add, i16 zeroext 1) #14, !dbg !10514
  %81 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !10515
  %82 = load i32, i32* %i, align 4, !dbg !10516
  %shl100 = shl i32 %82, 7, !dbg !10516
  %add101 = add i32 %shl100, 3856, !dbg !10516
  call void @skge_write16(%struct.skge_hw* %81, i32 %add101, i16 zeroext 2) #14, !dbg !10517
  br label %for.inc, !dbg !10518

for.inc:                                          ; preds = %for.body
  %83 = load i32, i32* %i, align 4, !dbg !10519
  %inc = add i32 %83, 1, !dbg !10519
  store i32 %inc, i32* %i, align 4, !dbg !10519
  br label %for.cond, !dbg !10520, !llvm.loop !10521

for.end:                                          ; preds = %for.cond
  br label %if.end102

if.end102:                                        ; preds = %for.end, %if.then76
  %84 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !10523
  call void @skge_write8(%struct.skge_hw* %84, i32 312, i8 zeroext 2) #14, !dbg !10524
  %85 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !10525
  call void @skge_write8(%struct.skge_hw* %85, i32 312, i8 zeroext 1) #14, !dbg !10526
  %86 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !10527
  call void @skge_write8(%struct.skge_hw* %86, i32 6, i8 zeroext 2) #14, !dbg !10528
  store i32 0, i32* %i, align 4, !dbg !10529
  br label %for.cond103, !dbg !10531

for.cond103:                                      ; preds = %for.inc111, %if.end102
  %87 = load i32, i32* %i, align 4, !dbg !10532
  %88 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !10534
  %ports104 = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %88, i32 0, i32 8, !dbg !10535
  %89 = load i8, i8* %ports104, align 1, !dbg !10535
  %conv105 = zext i8 %89 to i32, !dbg !10534
  %cmp106 = icmp slt i32 %87, %conv105, !dbg !10536
  br i1 %cmp106, label %for.body108, label %for.end113, !dbg !10537

for.body108:                                      ; preds = %for.cond103
  %90 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !10538
  %91 = load i32, i32* %i, align 4, !dbg !10539
  %shl109 = shl i32 %91, 7, !dbg !10539
  %add110 = add i32 %shl109, 528, !dbg !10539
  call void @skge_write8(%struct.skge_hw* %90, i32 %add110, i8 zeroext 2) #14, !dbg !10540
  br label %for.inc111, !dbg !10540

for.inc111:                                       ; preds = %for.body108
  %92 = load i32, i32* %i, align 4, !dbg !10541
  %inc112 = add i32 %92, 1, !dbg !10541
  store i32 %inc112, i32* %i, align 4, !dbg !10541
  br label %for.cond103, !dbg !10542, !llvm.loop !10543

for.end113:                                       ; preds = %for.cond103
  %93 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !10545
  call void @skge_write16(%struct.skge_hw* %93, i32 416, i16 zeroext 2) #14, !dbg !10546
  %94 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !10547
  call void @skge_write8(%struct.skge_hw* %94, i32 400, i8 zeroext 36) #14, !dbg !10548
  %95 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !10549
  call void @skge_write8(%struct.skge_hw* %95, i32 401, i8 zeroext 36) #14, !dbg !10550
  %96 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !10551
  call void @skge_write8(%struct.skge_hw* %96, i32 402, i8 zeroext 36) #14, !dbg !10552
  %97 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !10553
  call void @skge_write8(%struct.skge_hw* %97, i32 403, i8 zeroext 36) #14, !dbg !10554
  %98 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !10555
  call void @skge_write8(%struct.skge_hw* %98, i32 404, i8 zeroext 36) #14, !dbg !10556
  %99 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !10557
  call void @skge_write8(%struct.skge_hw* %99, i32 405, i8 zeroext 36) #14, !dbg !10558
  %100 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !10559
  call void @skge_write8(%struct.skge_hw* %100, i32 406, i8 zeroext 36) #14, !dbg !10560
  %101 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !10561
  call void @skge_write8(%struct.skge_hw* %101, i32 407, i8 zeroext 36) #14, !dbg !10562
  %102 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !10563
  call void @skge_write8(%struct.skge_hw* %102, i32 408, i8 zeroext 36) #14, !dbg !10564
  %103 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !10565
  call void @skge_write8(%struct.skge_hw* %103, i32 409, i8 zeroext 36) #14, !dbg !10566
  %104 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !10567
  call void @skge_write8(%struct.skge_hw* %104, i32 410, i8 zeroext 36) #14, !dbg !10568
  %105 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !10569
  call void @skge_write8(%struct.skge_hw* %105, i32 411, i8 zeroext 36) #14, !dbg !10570
  %106 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !10571
  call void @skge_write32(%struct.skge_hw* %106, i32 20, i32 3135) #14, !dbg !10572
  %107 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !10573
  call void @skge_write32(%struct.skge_hw* %107, i32 332, i32 130) #14, !dbg !10574
  %108 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !10575
  %109 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !10576
  %call114 = call i32 @skge_usecs2clk(%struct.skge_hw* %109, i32 100) #14, !dbg !10577
  call void @skge_write32(%struct.skge_hw* %108, i32 320, i32 %call114) #14, !dbg !10578
  %110 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !10579
  call void @skge_write32(%struct.skge_hw* %110, i32 328, i32 4) #14, !dbg !10580
  %111 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !10581
  call void @skge_write32(%struct.skge_hw* %111, i32 12, i32 0) #14, !dbg !10582
  store i32 0, i32* %i, align 4, !dbg !10583
  br label %for.cond115, !dbg !10585

for.cond115:                                      ; preds = %for.inc125, %for.end113
  %112 = load i32, i32* %i, align 4, !dbg !10586
  %113 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !10588
  %ports116 = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %113, i32 0, i32 8, !dbg !10589
  %114 = load i8, i8* %ports116, align 1, !dbg !10589
  %conv117 = zext i8 %114 to i32, !dbg !10588
  %cmp118 = icmp slt i32 %112, %conv117, !dbg !10590
  br i1 %cmp118, label %for.body120, label %for.end127, !dbg !10591

for.body120:                                      ; preds = %for.cond115
  %115 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !10592
  %call121 = call zeroext i1 @is_genesis(%struct.skge_hw* %115) #14, !dbg !10595
  br i1 %call121, label %if.then122, label %if.else123, !dbg !10596

if.then122:                                       ; preds = %for.body120
  %116 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !10597
  %117 = load i32, i32* %i, align 4, !dbg !10598
  call void @genesis_reset(%struct.skge_hw* %116, i32 %117) #14, !dbg !10599
  br label %if.end124, !dbg !10599

if.else123:                                       ; preds = %for.body120
  %118 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !10600
  %119 = load i32, i32* %i, align 4, !dbg !10601
  call void @yukon_reset(%struct.skge_hw* %118, i32 %119) #14, !dbg !10602
  br label %if.end124

if.end124:                                        ; preds = %if.else123, %if.then122
  br label %for.inc125, !dbg !10603

for.inc125:                                       ; preds = %if.end124
  %120 = load i32, i32* %i, align 4, !dbg !10604
  %inc126 = add i32 %120, 1, !dbg !10604
  store i32 %inc126, i32* %i, align 4, !dbg !10604
  br label %for.cond115, !dbg !10605, !llvm.loop !10606

for.end127:                                       ; preds = %for.cond115
  store i32 0, i32* %retval, align 4, !dbg !10608
  br label %return, !dbg !10608

return:                                           ; preds = %for.end127, %sw.default, %sw.bb
  %121 = load i32, i32* %retval, align 4, !dbg !10609
  ret i32 %121, !dbg !10609
}

; Function Attrs: cold noredzone
declare dso_local i32 @printk(i8*, ...) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @skge_board_name(%struct.skge_hw* %hw) #2 !dbg !9404 {
entry:
  %retval = alloca i8*, align 8
  %hw.addr = alloca %struct.skge_hw*, align 8
  %i = alloca i32, align 4
  store %struct.skge_hw* %hw, %struct.skge_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.skge_hw** %hw.addr, metadata !10610, metadata !DIExpression()), !dbg !10611
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10612, metadata !DIExpression()), !dbg !10613
  store i32 0, i32* %i, align 4, !dbg !10614
  br label %for.cond, !dbg !10616

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !10617
  %conv = sext i32 %0 to i64, !dbg !10617
  %cmp = icmp ult i64 %conv, 4, !dbg !10619
  br i1 %cmp, label %for.body, label %for.end, !dbg !10620

for.body:                                         ; preds = %for.cond
  %1 = load i32, i32* %i, align 4, !dbg !10621
  %idxprom = sext i32 %1 to i64, !dbg !10623
  %arrayidx = getelementptr [4 x %struct.anon.131], [4 x %struct.anon.131]* @skge_chips, i64 0, i64 %idxprom, !dbg !10623
  %id = getelementptr inbounds %struct.anon.131, %struct.anon.131* %arrayidx, i32 0, i32 0, !dbg !10624
  %2 = load i8, i8* %id, align 16, !dbg !10624
  %conv2 = zext i8 %2 to i32, !dbg !10623
  %3 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !10625
  %chip_id = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %3, i32 0, i32 5, !dbg !10626
  %4 = load i8, i8* %chip_id, align 8, !dbg !10626
  %conv3 = zext i8 %4 to i32, !dbg !10625
  %cmp4 = icmp eq i32 %conv2, %conv3, !dbg !10627
  br i1 %cmp4, label %if.then, label %if.end, !dbg !10628

if.then:                                          ; preds = %for.body
  %5 = load i32, i32* %i, align 4, !dbg !10629
  %idxprom6 = sext i32 %5 to i64, !dbg !10630
  %arrayidx7 = getelementptr [4 x %struct.anon.131], [4 x %struct.anon.131]* @skge_chips, i64 0, i64 %idxprom6, !dbg !10630
  %name = getelementptr inbounds %struct.anon.131, %struct.anon.131* %arrayidx7, i32 0, i32 1, !dbg !10631
  %6 = load i8*, i8** %name, align 8, !dbg !10631
  store i8* %6, i8** %retval, align 8, !dbg !10632
  br label %return, !dbg !10632

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !10626

for.inc:                                          ; preds = %if.end
  %7 = load i32, i32* %i, align 4, !dbg !10633
  %inc = add i32 %7, 1, !dbg !10633
  store i32 %inc, i32* %i, align 4, !dbg !10633
  br label %for.cond, !dbg !10634, !llvm.loop !10635

for.end:                                          ; preds = %for.cond
  %8 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !10637
  %chip_id8 = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %8, i32 0, i32 5, !dbg !10638
  %9 = load i8, i8* %chip_id8, align 8, !dbg !10638
  %conv9 = zext i8 %9 to i32, !dbg !10637
  %call = call i32 (i8*, i64, i8*, ...) @snprintf(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @skge_board_name.buf, i64 0, i64 0), i64 16, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.39, i64 0, i64 0), i32 %conv9) #14, !dbg !10639
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @skge_board_name.buf, i64 0, i64 0), i8** %retval, align 8, !dbg !10640
  br label %return, !dbg !10640

return:                                           ; preds = %for.end, %if.then
  %10 = load i8*, i8** %retval, align 8, !dbg !10641
  ret i8* %10, !dbg !10641
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.net_device* @skge_devinit(%struct.skge_hw* %hw, i32 %port, i32 %highmem) #2 !dbg !10642 {
entry:
  %retval = alloca %struct.net_device*, align 8
  %hw.addr = alloca %struct.skge_hw*, align 8
  %port.addr = alloca i32, align 4
  %highmem.addr = alloca i32, align 4
  %skge = alloca %struct.skge_port*, align 8
  %dev = alloca %struct.net_device*, align 8
  store %struct.skge_hw* %hw, %struct.skge_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.skge_hw** %hw.addr, metadata !10645, metadata !DIExpression()), !dbg !10646
  store i32 %port, i32* %port.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %port.addr, metadata !10647, metadata !DIExpression()), !dbg !10648
  store i32 %highmem, i32* %highmem.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %highmem.addr, metadata !10649, metadata !DIExpression()), !dbg !10650
  call void @llvm.dbg.declare(metadata %struct.skge_port** %skge, metadata !10651, metadata !DIExpression()), !dbg !10652
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev, metadata !10653, metadata !DIExpression()), !dbg !10654
  %call = call %struct.net_device* @alloc_etherdev_mqs(i32 568, i32 1, i32 1) #14, !dbg !10655
  store %struct.net_device* %call, %struct.net_device** %dev, align 8, !dbg !10654
  %0 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !10656
  %tobool = icmp ne %struct.net_device* %0, null, !dbg !10656
  br i1 %tobool, label %if.end, label %if.then, !dbg !10658

if.then:                                          ; preds = %entry
  store %struct.net_device* null, %struct.net_device** %retval, align 8, !dbg !10659
  br label %return, !dbg !10659

if.end:                                           ; preds = %entry
  %1 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !10660
  %pdev = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %1, i32 0, i32 1, !dbg !10660
  %2 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !10660
  %dev1 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %2, i32 0, i32 41, !dbg !10660
  %3 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !10660
  %dev2 = getelementptr inbounds %struct.net_device, %struct.net_device* %3, i32 0, i32 106, !dbg !10660
  %parent = getelementptr inbounds %struct.device, %struct.device* %dev2, i32 0, i32 1, !dbg !10660
  store %struct.device* %dev1, %struct.device** %parent, align 8, !dbg !10660
  %4 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !10661
  %netdev_ops = getelementptr inbounds %struct.net_device, %struct.net_device* %4, i32 0, i32 32, !dbg !10662
  store %struct.net_device_ops* @skge_netdev_ops, %struct.net_device_ops** %netdev_ops, align 8, !dbg !10663
  %5 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !10664
  %ethtool_ops = getelementptr inbounds %struct.net_device, %struct.net_device* %5, i32 0, i32 33, !dbg !10665
  store %struct.ethtool_ops* @skge_ethtool_ops, %struct.ethtool_ops** %ethtool_ops, align 8, !dbg !10666
  %6 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !10667
  %watchdog_timeo = getelementptr inbounds %struct.net_device, %struct.net_device* %6, i32 0, i32 94, !dbg !10668
  store i32 1250, i32* %watchdog_timeo, align 8, !dbg !10669
  %7 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !10670
  %pdev3 = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %7, i32 0, i32 1, !dbg !10671
  %8 = load %struct.pci_dev*, %struct.pci_dev** %pdev3, align 8, !dbg !10671
  %irq = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %8, i32 0, i32 43, !dbg !10672
  %9 = load i32, i32* %irq, align 4, !dbg !10672
  %10 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !10673
  %irq4 = getelementptr inbounds %struct.net_device, %struct.net_device* %10, i32 0, i32 6, !dbg !10674
  store i32 %9, i32* %irq4, align 8, !dbg !10675
  %11 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !10676
  %min_mtu = getelementptr inbounds %struct.net_device, %struct.net_device* %11, i32 0, i32 45, !dbg !10677
  store i32 60, i32* %min_mtu, align 4, !dbg !10678
  %12 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !10679
  %max_mtu = getelementptr inbounds %struct.net_device, %struct.net_device* %12, i32 0, i32 46, !dbg !10680
  store i32 9000, i32* %max_mtu, align 8, !dbg !10681
  %13 = load i32, i32* %highmem.addr, align 4, !dbg !10682
  %tobool5 = icmp ne i32 %13, 0, !dbg !10682
  br i1 %tobool5, label %if.then6, label %if.end7, !dbg !10684

if.then6:                                         ; preds = %if.end
  %14 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !10685
  %features = getelementptr inbounds %struct.net_device, %struct.net_device* %14, i32 0, i32 15, !dbg !10686
  %15 = load i64, i64* %features, align 8, !dbg !10687
  %or = or i64 %15, 32, !dbg !10687
  store i64 %or, i64* %features, align 8, !dbg !10687
  br label %if.end7, !dbg !10685

if.end7:                                          ; preds = %if.then6, %if.end
  %16 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !10688
  %call8 = call i8* @netdev_priv(%struct.net_device* %16) #14, !dbg !10689
  %17 = bitcast i8* %call8 to %struct.skge_port*, !dbg !10689
  store %struct.skge_port* %17, %struct.skge_port** %skge, align 8, !dbg !10690
  %18 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !10691
  %19 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !10692
  %napi = getelementptr inbounds %struct.skge_port, %struct.skge_port* %19, i32 0, i32 2, !dbg !10693
  call void @netif_napi_add(%struct.net_device* %18, %struct.napi_struct* %napi, i32 (%struct.napi_struct*, i32)* @skge_poll, i32 64) #14, !dbg !10694
  %20 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !10695
  %21 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !10696
  %netdev = getelementptr inbounds %struct.skge_port, %struct.skge_port* %21, i32 0, i32 1, !dbg !10697
  store %struct.net_device* %20, %struct.net_device** %netdev, align 8, !dbg !10698
  %22 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !10699
  %23 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !10700
  %hw9 = getelementptr inbounds %struct.skge_port, %struct.skge_port* %23, i32 0, i32 0, !dbg !10701
  store %struct.skge_hw* %22, %struct.skge_hw** %hw9, align 8, !dbg !10702
  %24 = load i32, i32* @debug, align 4, !dbg !10703
  %call10 = call i32 @netif_msg_init(i32 %24, i32 55) #14, !dbg !10704
  %25 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !10705
  %msg_enable = getelementptr inbounds %struct.skge_port, %struct.skge_port* %25, i32 0, i32 4, !dbg !10706
  store i32 %call10, i32* %msg_enable, align 4, !dbg !10707
  %26 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !10708
  %tx_ring = getelementptr inbounds %struct.skge_port, %struct.skge_port* %26, i32 0, i32 5, !dbg !10709
  %count = getelementptr inbounds %struct.skge_ring, %struct.skge_ring* %tx_ring, i32 0, i32 3, !dbg !10710
  store i64 128, i64* %count, align 8, !dbg !10711
  %27 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !10712
  %rx_ring = getelementptr inbounds %struct.skge_port, %struct.skge_port* %27, i32 0, i32 6, !dbg !10713
  %count11 = getelementptr inbounds %struct.skge_ring, %struct.skge_ring* %rx_ring, i32 0, i32 3, !dbg !10714
  store i64 512, i64* %count11, align 8, !dbg !10715
  %28 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !10716
  %autoneg = getelementptr inbounds %struct.skge_port, %struct.skge_port* %28, i32 0, i32 13, !dbg !10717
  store i8 1, i8* %autoneg, align 2, !dbg !10718
  %29 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !10719
  %flow_control = getelementptr inbounds %struct.skge_port, %struct.skge_port* %29, i32 0, i32 9, !dbg !10720
  store i32 4, i32* %flow_control, align 8, !dbg !10721
  %30 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !10722
  %duplex = getelementptr inbounds %struct.skge_port, %struct.skge_port* %30, i32 0, i32 14, !dbg !10723
  store i8 -1, i8* %duplex, align 1, !dbg !10724
  %31 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !10725
  %speed = getelementptr inbounds %struct.skge_port, %struct.skge_port* %31, i32 0, i32 15, !dbg !10726
  store i16 -1, i16* %speed, align 4, !dbg !10727
  %32 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !10728
  %call12 = call i32 @skge_supported_modes(%struct.skge_hw* %32) #14, !dbg !10729
  %33 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !10730
  %advertising = getelementptr inbounds %struct.skge_port, %struct.skge_port* %33, i32 0, i32 16, !dbg !10731
  store i32 %call12, i32* %advertising, align 8, !dbg !10732
  %34 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !10733
  %pdev13 = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %34, i32 0, i32 1, !dbg !10735
  %35 = load %struct.pci_dev*, %struct.pci_dev** %pdev13, align 8, !dbg !10735
  %dev14 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %35, i32 0, i32 41, !dbg !10736
  %call15 = call zeroext i1 @device_can_wakeup(%struct.device* %dev14) #14, !dbg !10737
  br i1 %call15, label %if.then16, label %if.end23, !dbg !10738

if.then16:                                        ; preds = %if.end7
  %36 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !10739
  %call17 = call i32 @wol_supported(%struct.skge_hw* %36) #14, !dbg !10741
  %and = and i32 %call17, 32, !dbg !10742
  %conv = trunc i32 %and to i8, !dbg !10741
  %37 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !10743
  %wol = getelementptr inbounds %struct.skge_port, %struct.skge_port* %37, i32 0, i32 12, !dbg !10744
  store i8 %conv, i8* %wol, align 1, !dbg !10745
  %38 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !10746
  %pdev18 = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %38, i32 0, i32 1, !dbg !10747
  %39 = load %struct.pci_dev*, %struct.pci_dev** %pdev18, align 8, !dbg !10747
  %dev19 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %39, i32 0, i32 41, !dbg !10748
  %40 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !10749
  %wol20 = getelementptr inbounds %struct.skge_port, %struct.skge_port* %40, i32 0, i32 12, !dbg !10750
  %41 = load i8, i8* %wol20, align 1, !dbg !10750
  %tobool21 = icmp ne i8 %41, 0, !dbg !10749
  %call22 = call i32 @device_set_wakeup_enable(%struct.device* %dev19, i1 zeroext %tobool21) #14, !dbg !10751
  br label %if.end23, !dbg !10752

if.end23:                                         ; preds = %if.then16, %if.end7
  %42 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !10753
  %43 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !10754
  %dev24 = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %43, i32 0, i32 4, !dbg !10755
  %44 = load i32, i32* %port.addr, align 4, !dbg !10756
  %idxprom = sext i32 %44 to i64, !dbg !10754
  %arrayidx = getelementptr [2 x %struct.net_device*], [2 x %struct.net_device*]* %dev24, i64 0, i64 %idxprom, !dbg !10754
  store %struct.net_device* %42, %struct.net_device** %arrayidx, align 8, !dbg !10757
  %45 = load i32, i32* %port.addr, align 4, !dbg !10758
  %46 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !10759
  %port25 = getelementptr inbounds %struct.skge_port, %struct.skge_port* %46, i32 0, i32 3, !dbg !10760
  store i32 %45, i32* %port25, align 8, !dbg !10761
  %47 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !10762
  %call26 = call zeroext i1 @is_genesis(%struct.skge_hw* %47) #14, !dbg !10764
  br i1 %call26, label %if.then27, label %if.else, !dbg !10765

if.then27:                                        ; preds = %if.end23
  %48 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !10766
  %link_timer = getelementptr inbounds %struct.skge_port, %struct.skge_port* %48, i32 0, i32 8, !dbg !10766
  call void @init_timer_key(%struct.timer_list* %link_timer, void (%struct.timer_list*)* @xm_link_timer, i32 0, i8* null, %struct.lock_class_key* null) #14, !dbg !10766
  br label %if.end31, !dbg !10766

if.else:                                          ; preds = %if.end23
  %49 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !10767
  %hw_features = getelementptr inbounds %struct.net_device, %struct.net_device* %49, i32 0, i32 16, !dbg !10769
  store i64 1099511627779, i64* %hw_features, align 8, !dbg !10770
  %50 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !10771
  %hw_features28 = getelementptr inbounds %struct.net_device, %struct.net_device* %50, i32 0, i32 16, !dbg !10772
  %51 = load i64, i64* %hw_features28, align 8, !dbg !10772
  %52 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !10773
  %features29 = getelementptr inbounds %struct.net_device, %struct.net_device* %52, i32 0, i32 15, !dbg !10774
  %53 = load i64, i64* %features29, align 8, !dbg !10775
  %or30 = or i64 %53, %51, !dbg !10775
  store i64 %or30, i64* %features29, align 8, !dbg !10775
  br label %if.end31

if.end31:                                         ; preds = %if.else, %if.then27
  %54 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !10776
  %dev_addr = getelementptr inbounds %struct.net_device, %struct.net_device* %54, i32 0, i32 74, !dbg !10777
  %55 = load i8*, i8** %dev_addr, align 8, !dbg !10777
  %56 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !10778
  %regs = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %56, i32 0, i32 0, !dbg !10779
  %57 = load i8*, i8** %regs, align 8, !dbg !10779
  %add.ptr = getelementptr i8, i8* %57, i64 256, !dbg !10780
  %58 = load i32, i32* %port.addr, align 4, !dbg !10781
  %mul = mul i32 %58, 8, !dbg !10782
  %idx.ext = sext i32 %mul to i64, !dbg !10783
  %add.ptr32 = getelementptr i8, i8* %add.ptr, i64 %idx.ext, !dbg !10783
  call void @memcpy_fromio(i8* %55, i8* %add.ptr32, i64 6) #14, !dbg !10784
  %59 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !10785
  store %struct.net_device* %59, %struct.net_device** %retval, align 8, !dbg !10786
  br label %return, !dbg !10786

return:                                           ; preds = %if.end31, %if.then
  %60 = load %struct.net_device*, %struct.net_device** %retval, align 8, !dbg !10787
  ret %struct.net_device* %60, !dbg !10787
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @is_valid_ether_addr(i8* %addr) #2 !dbg !10788 {
entry:
  %addr.addr = alloca i8*, align 8
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !10792, metadata !DIExpression()), !dbg !10793
  %0 = load i8*, i8** %addr.addr, align 8, !dbg !10794
  %call = call zeroext i1 @is_multicast_ether_addr(i8* %0) #14, !dbg !10795
  br i1 %call, label %land.end, label %land.rhs, !dbg !10796

land.rhs:                                         ; preds = %entry
  %1 = load i8*, i8** %addr.addr, align 8, !dbg !10797
  %call1 = call zeroext i1 @is_zero_ether_addr(i8* %1) #14, !dbg !10798
  %lnot = xor i1 %call1, true, !dbg !10799
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %2 = phi i1 [ false, %entry ], [ %lnot, %land.rhs ], !dbg !10800
  ret i1 %2, !dbg !10801
}

; Function Attrs: cold noredzone
declare dso_local void @_dev_warn(%struct.device*, i8*, ...) #4

; Function Attrs: noredzone
declare dso_local i32 @register_netdev(%struct.net_device*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @skge_show_addr(%struct.net_device* %dev) #2 !dbg !10802 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %skge = alloca %struct.skge_port*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !10803, metadata !DIExpression()), !dbg !10804
  call void @llvm.dbg.declare(metadata %struct.skge_port** %skge, metadata !10805, metadata !DIExpression()), !dbg !10808
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !10809
  %call = call i8* @netdev_priv(%struct.net_device* %0) #14, !dbg !10810
  %1 = bitcast i8* %call to %struct.skge_port*, !dbg !10810
  store %struct.skge_port* %1, %struct.skge_port** %skge, align 8, !dbg !10808
  br label %do.body, !dbg !10811

do.body:                                          ; preds = %entry
  %2 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !10812
  %msg_enable = getelementptr inbounds %struct.skge_port, %struct.skge_port* %2, i32 0, i32 4, !dbg !10812
  %3 = load i32, i32* %msg_enable, align 4, !dbg !10812
  %and = and i32 %3, 2, !dbg !10812
  %tobool = icmp ne i32 %and, 0, !dbg !10812
  br i1 %tobool, label %if.then, label %if.end, !dbg !10815

if.then:                                          ; preds = %do.body
  %4 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !10812
  %netdev = getelementptr inbounds %struct.skge_port, %struct.skge_port* %4, i32 0, i32 1, !dbg !10812
  %5 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !10812
  %6 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !10812
  %dev_addr = getelementptr inbounds %struct.net_device, %struct.net_device* %6, i32 0, i32 74, !dbg !10812
  %7 = load i8*, i8** %dev_addr, align 8, !dbg !10812
  call void (%struct.net_device*, i8*, ...) @netdev_info(%struct.net_device* %5, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.60, i64 0, i64 0), i8* %7) #15, !dbg !10812
  br label %if.end, !dbg !10812

if.end:                                           ; preds = %if.then, %do.body
  br label %do.end, !dbg !10815

do.end:                                           ; preds = %if.end
  ret void, !dbg !10816
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @request_irq(i32 %irq, i32 (i32, i8*)* %handler, i64 %flags, i8* %name, i8* %dev) #2 !dbg !10817 {
entry:
  %irq.addr = alloca i32, align 4
  %handler.addr = alloca i32 (i32, i8*)*, align 8
  %flags.addr = alloca i64, align 8
  %name.addr = alloca i8*, align 8
  %dev.addr = alloca i8*, align 8
  store i32 %irq, i32* %irq.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %irq.addr, metadata !10825, metadata !DIExpression()), !dbg !10826
  store i32 (i32, i8*)* %handler, i32 (i32, i8*)** %handler.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (i32, i8*)** %handler.addr, metadata !10827, metadata !DIExpression()), !dbg !10828
  store i64 %flags, i64* %flags.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr, metadata !10829, metadata !DIExpression()), !dbg !10830
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !10831, metadata !DIExpression()), !dbg !10832
  store i8* %dev, i8** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dev.addr, metadata !10833, metadata !DIExpression()), !dbg !10834
  %0 = load i32, i32* %irq.addr, align 4, !dbg !10835
  %1 = load i32 (i32, i8*)*, i32 (i32, i8*)** %handler.addr, align 8, !dbg !10836
  %2 = load i64, i64* %flags.addr, align 8, !dbg !10837
  %3 = load i8*, i8** %name.addr, align 8, !dbg !10838
  %4 = load i8*, i8** %dev.addr, align 8, !dbg !10839
  %call = call i32 @request_threaded_irq(i32 %0, i32 (i32, i8*)* %1, i32 (i32, i8*)* null, i64 %2, i8* %3, i8* %4) #14, !dbg !10840
  ret i32 %call, !dbg !10841
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @skge_intr(i32 %irq, i8* %dev_id) #2 !dbg !10842 {
entry:
  %lock.addr.i69 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i69, metadata !10210, metadata !DIExpression()), !dbg !10843
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !10219, metadata !DIExpression()), !dbg !10845
  %irq.addr = alloca i32, align 4
  %dev_id.addr = alloca i8*, align 8
  %hw = alloca %struct.skge_hw*, align 8
  %status = alloca i32, align 4
  %handled = alloca i32, align 4
  %skge = alloca %struct.skge_port*, align 8
  %skge32 = alloca %struct.skge_port*, align 8
  store i32 %irq, i32* %irq.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %irq.addr, metadata !10847, metadata !DIExpression()), !dbg !10848
  store i8* %dev_id, i8** %dev_id.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dev_id.addr, metadata !10849, metadata !DIExpression()), !dbg !10850
  call void @llvm.dbg.declare(metadata %struct.skge_hw** %hw, metadata !10851, metadata !DIExpression()), !dbg !10852
  %0 = load i8*, i8** %dev_id.addr, align 8, !dbg !10853
  %1 = bitcast i8* %0 to %struct.skge_hw*, !dbg !10853
  store %struct.skge_hw* %1, %struct.skge_hw** %hw, align 8, !dbg !10852
  call void @llvm.dbg.declare(metadata i32* %status, metadata !10854, metadata !DIExpression()), !dbg !10855
  call void @llvm.dbg.declare(metadata i32* %handled, metadata !10856, metadata !DIExpression()), !dbg !10857
  store i32 0, i32* %handled, align 4, !dbg !10857
  %2 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !10858
  %hw_lock = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %2, i32 0, i32 2, !dbg !10859
  store %struct.spinlock* %hw_lock, %struct.spinlock** %lock.addr.i, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !10860, !srcloc !10257
  %3 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !10861
  %4 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %3, i32 0, i32 0, !dbg !10861
  %rlock.i = bitcast %union.anon.1* %4 to %struct.raw_spinlock*, !dbg !10861
  %5 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !10862
  %call = call i32 @skge_read32(%struct.skge_hw* %5, i32 24) #14, !dbg !10863
  store i32 %call, i32* %status, align 4, !dbg !10864
  %6 = load i32, i32* %status, align 4, !dbg !10865
  %cmp = icmp eq i32 %6, 0, !dbg !10867
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !10868

lor.lhs.false:                                    ; preds = %entry
  %7 = load i32, i32* %status, align 4, !dbg !10869
  %cmp1 = icmp eq i32 %7, -1, !dbg !10870
  br i1 %cmp1, label %if.then, label %if.end, !dbg !10871

if.then:                                          ; preds = %lor.lhs.false, %entry
  br label %out, !dbg !10872

if.end:                                           ; preds = %lor.lhs.false
  store i32 1, i32* %handled, align 4, !dbg !10873
  %8 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !10874
  %intr_mask = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %8, i32 0, i32 3, !dbg !10875
  %9 = load i32, i32* %intr_mask, align 8, !dbg !10875
  %10 = load i32, i32* %status, align 4, !dbg !10876
  %and = and i32 %10, %9, !dbg !10876
  store i32 %and, i32* %status, align 4, !dbg !10876
  %11 = load i32, i32* %status, align 4, !dbg !10877
  %and2 = and i32 %11, 8388608, !dbg !10879
  %tobool = icmp ne i32 %and2, 0, !dbg !10879
  br i1 %tobool, label %if.then3, label %if.end6, !dbg !10880

if.then3:                                         ; preds = %if.end
  %12 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !10881
  %intr_mask4 = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %12, i32 0, i32 3, !dbg !10883
  %13 = load i32, i32* %intr_mask4, align 8, !dbg !10884
  %and5 = and i32 %13, -8388609, !dbg !10884
  store i32 %and5, i32* %intr_mask4, align 8, !dbg !10884
  %14 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !10885
  %phy_task = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %14, i32 0, i32 14, !dbg !10886
  call void @tasklet_schedule(%struct.tasklet_struct* %phy_task) #14, !dbg !10887
  br label %if.end6, !dbg !10888

if.end6:                                          ; preds = %if.then3, %if.end
  %15 = load i32, i32* %status, align 4, !dbg !10889
  %and7 = and i32 %15, 65664, !dbg !10891
  %tobool8 = icmp ne i32 %and7, 0, !dbg !10891
  br i1 %tobool8, label %if.then9, label %if.end13, !dbg !10892

if.then9:                                         ; preds = %if.end6
  call void @llvm.dbg.declare(metadata %struct.skge_port** %skge, metadata !10893, metadata !DIExpression()), !dbg !10895
  %16 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !10896
  %dev = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %16, i32 0, i32 4, !dbg !10897
  %arrayidx = getelementptr [2 x %struct.net_device*], [2 x %struct.net_device*]* %dev, i64 0, i64 0, !dbg !10896
  %17 = load %struct.net_device*, %struct.net_device** %arrayidx, align 8, !dbg !10896
  %call10 = call i8* @netdev_priv(%struct.net_device* %17) #14, !dbg !10898
  %18 = bitcast i8* %call10 to %struct.skge_port*, !dbg !10898
  store %struct.skge_port* %18, %struct.skge_port** %skge, align 8, !dbg !10895
  %19 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !10899
  %intr_mask11 = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %19, i32 0, i32 3, !dbg !10900
  %20 = load i32, i32* %intr_mask11, align 8, !dbg !10901
  %and12 = and i32 %20, -65665, !dbg !10901
  store i32 %and12, i32* %intr_mask11, align 8, !dbg !10901
  %21 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !10902
  %napi = getelementptr inbounds %struct.skge_port, %struct.skge_port* %21, i32 0, i32 2, !dbg !10903
  call void @napi_schedule(%struct.napi_struct* %napi) #14, !dbg !10904
  br label %if.end13, !dbg !10905

if.end13:                                         ; preds = %if.then9, %if.end6
  %22 = load i32, i32* %status, align 4, !dbg !10906
  %and14 = and i32 %22, 134217728, !dbg !10908
  %tobool15 = icmp ne i32 %and14, 0, !dbg !10908
  br i1 %tobool15, label %if.then16, label %if.end17, !dbg !10909

if.then16:                                        ; preds = %if.end13
  %23 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !10910
  call void @skge_write16(%struct.skge_hw* %23, i32 496, i16 zeroext 4096) #14, !dbg !10911
  br label %if.end17, !dbg !10911

if.end17:                                         ; preds = %if.then16, %if.end13
  %24 = load i32, i32* %status, align 4, !dbg !10912
  %and18 = and i32 %24, 536870912, !dbg !10914
  %tobool19 = icmp ne i32 %and18, 0, !dbg !10914
  br i1 %tobool19, label %if.then20, label %if.end23, !dbg !10915

if.then20:                                        ; preds = %if.end17
  %25 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !10916
  %dev21 = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %25, i32 0, i32 4, !dbg !10918
  %arrayidx22 = getelementptr [2 x %struct.net_device*], [2 x %struct.net_device*]* %dev21, i64 0, i64 0, !dbg !10916
  %26 = load %struct.net_device*, %struct.net_device** %arrayidx22, align 8, !dbg !10916
  %stats = getelementptr inbounds %struct.net_device, %struct.net_device* %26, i32 0, i32 24, !dbg !10919
  %rx_over_errors = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %stats, i32 0, i32 11, !dbg !10920
  %27 = load i64, i64* %rx_over_errors, align 8, !dbg !10921
  %inc = add i64 %27, 1, !dbg !10921
  store i64 %inc, i64* %rx_over_errors, align 8, !dbg !10921
  %28 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !10922
  call void @skge_write16(%struct.skge_hw* %28, i32 496, i16 zeroext 1024) #14, !dbg !10923
  br label %if.end23, !dbg !10924

if.end23:                                         ; preds = %if.then20, %if.end17
  %29 = load i32, i32* %status, align 4, !dbg !10925
  %and24 = and i32 %29, 2097152, !dbg !10927
  %tobool25 = icmp ne i32 %and24, 0, !dbg !10927
  br i1 %tobool25, label %if.then26, label %if.end27, !dbg !10928

if.then26:                                        ; preds = %if.end23
  %30 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !10929
  call void @skge_mac_intr(%struct.skge_hw* %30, i32 0) #14, !dbg !10930
  br label %if.end27, !dbg !10930

if.end27:                                         ; preds = %if.then26, %if.end23
  %31 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !10931
  %dev28 = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %31, i32 0, i32 4, !dbg !10933
  %arrayidx29 = getelementptr [2 x %struct.net_device*], [2 x %struct.net_device*]* %dev28, i64 0, i64 1, !dbg !10931
  %32 = load %struct.net_device*, %struct.net_device** %arrayidx29, align 8, !dbg !10931
  %tobool30 = icmp ne %struct.net_device* %32, null, !dbg !10931
  br i1 %tobool30, label %if.then31, label %if.end60, !dbg !10934

if.then31:                                        ; preds = %if.end27
  call void @llvm.dbg.declare(metadata %struct.skge_port** %skge32, metadata !10935, metadata !DIExpression()), !dbg !10937
  %33 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !10938
  %dev33 = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %33, i32 0, i32 4, !dbg !10939
  %arrayidx34 = getelementptr [2 x %struct.net_device*], [2 x %struct.net_device*]* %dev33, i64 0, i64 1, !dbg !10938
  %34 = load %struct.net_device*, %struct.net_device** %arrayidx34, align 8, !dbg !10938
  %call35 = call i8* @netdev_priv(%struct.net_device* %34) #14, !dbg !10940
  %35 = bitcast i8* %call35 to %struct.skge_port*, !dbg !10940
  store %struct.skge_port* %35, %struct.skge_port** %skge32, align 8, !dbg !10937
  %36 = load i32, i32* %status, align 4, !dbg !10941
  %and36 = and i32 %36, 8194, !dbg !10943
  %tobool37 = icmp ne i32 %and36, 0, !dbg !10943
  br i1 %tobool37, label %if.then38, label %if.end42, !dbg !10944

if.then38:                                        ; preds = %if.then31
  %37 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !10945
  %intr_mask39 = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %37, i32 0, i32 3, !dbg !10947
  %38 = load i32, i32* %intr_mask39, align 8, !dbg !10948
  %and40 = and i32 %38, -8195, !dbg !10948
  store i32 %and40, i32* %intr_mask39, align 8, !dbg !10948
  %39 = load %struct.skge_port*, %struct.skge_port** %skge32, align 8, !dbg !10949
  %napi41 = getelementptr inbounds %struct.skge_port, %struct.skge_port* %39, i32 0, i32 2, !dbg !10950
  call void @napi_schedule(%struct.napi_struct* %napi41) #14, !dbg !10951
  br label %if.end42, !dbg !10952

if.end42:                                         ; preds = %if.then38, %if.then31
  %40 = load i32, i32* %status, align 4, !dbg !10953
  %and43 = and i32 %40, 268435456, !dbg !10955
  %tobool44 = icmp ne i32 %and43, 0, !dbg !10955
  br i1 %tobool44, label %if.then45, label %if.end51, !dbg !10956

if.then45:                                        ; preds = %if.end42
  %41 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !10957
  %dev46 = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %41, i32 0, i32 4, !dbg !10959
  %arrayidx47 = getelementptr [2 x %struct.net_device*], [2 x %struct.net_device*]* %dev46, i64 0, i64 1, !dbg !10957
  %42 = load %struct.net_device*, %struct.net_device** %arrayidx47, align 8, !dbg !10957
  %stats48 = getelementptr inbounds %struct.net_device, %struct.net_device* %42, i32 0, i32 24, !dbg !10960
  %rx_over_errors49 = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %stats48, i32 0, i32 11, !dbg !10961
  %43 = load i64, i64* %rx_over_errors49, align 8, !dbg !10962
  %inc50 = add i64 %43, 1, !dbg !10962
  store i64 %inc50, i64* %rx_over_errors49, align 8, !dbg !10962
  %44 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !10963
  call void @skge_write16(%struct.skge_hw* %44, i32 496, i16 zeroext 2048) #14, !dbg !10964
  br label %if.end51, !dbg !10965

if.end51:                                         ; preds = %if.then45, %if.end42
  %45 = load i32, i32* %status, align 4, !dbg !10966
  %and52 = and i32 %45, 67108864, !dbg !10968
  %tobool53 = icmp ne i32 %and52, 0, !dbg !10968
  br i1 %tobool53, label %if.then54, label %if.end55, !dbg !10969

if.then54:                                        ; preds = %if.end51
  %46 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !10970
  call void @skge_write16(%struct.skge_hw* %46, i32 496, i16 zeroext 8192) #14, !dbg !10971
  br label %if.end55, !dbg !10971

if.end55:                                         ; preds = %if.then54, %if.end51
  %47 = load i32, i32* %status, align 4, !dbg !10972
  %and56 = and i32 %47, 524288, !dbg !10974
  %tobool57 = icmp ne i32 %and56, 0, !dbg !10974
  br i1 %tobool57, label %if.then58, label %if.end59, !dbg !10975

if.then58:                                        ; preds = %if.end55
  %48 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !10976
  call void @skge_mac_intr(%struct.skge_hw* %48, i32 1) #14, !dbg !10977
  br label %if.end59, !dbg !10977

if.end59:                                         ; preds = %if.then58, %if.end55
  br label %if.end60, !dbg !10978

if.end60:                                         ; preds = %if.end59, %if.end27
  %49 = load i32, i32* %status, align 4, !dbg !10979
  %and61 = and i32 %49, -2147483648, !dbg !10981
  %tobool62 = icmp ne i32 %and61, 0, !dbg !10981
  br i1 %tobool62, label %if.then63, label %if.end64, !dbg !10982

if.then63:                                        ; preds = %if.end60
  %50 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !10983
  call void @skge_error_irq(%struct.skge_hw* %50) #14, !dbg !10984
  br label %if.end64, !dbg !10984

if.end64:                                         ; preds = %if.then63, %if.end60
  br label %out, !dbg !10985

out:                                              ; preds = %if.end64, %if.then
  call void @llvm.dbg.label(metadata !10986), !dbg !10987
  %51 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !10988
  %52 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !10989
  %intr_mask65 = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %52, i32 0, i32 3, !dbg !10990
  %53 = load i32, i32* %intr_mask65, align 8, !dbg !10990
  call void @skge_write32(%struct.skge_hw* %51, i32 12, i32 %53) #14, !dbg !10991
  %54 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !10992
  %call66 = call i32 @skge_read32(%struct.skge_hw* %54, i32 12) #14, !dbg !10993
  %55 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !10994
  %hw_lock67 = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %55, i32 0, i32 2, !dbg !10995
  store %struct.spinlock* %hw_lock67, %struct.spinlock** %lock.addr.i69, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !10996, !srcloc !10277
  %56 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i69, align 8, !dbg !10997
  %57 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %56, i32 0, i32 0, !dbg !10997
  %rlock.i70 = bitcast %union.anon.1* %57 to %struct.raw_spinlock*, !dbg !10997
  %58 = load i32, i32* %handled, align 4, !dbg !10998
  %tobool68 = icmp ne i32 %58, 0, !dbg !10998
  %59 = zext i1 %tobool68 to i64, !dbg !10998
  %cond = select i1 %tobool68, i32 1, i32 0, !dbg !10998
  ret i32 %cond, !dbg !10999
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pci_set_drvdata(%struct.pci_dev* %pdev, i8* %data) #2 !dbg !11000 {
entry:
  %pdev.addr = alloca %struct.pci_dev*, align 8
  %data.addr = alloca i8*, align 8
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !11003, metadata !DIExpression()), !dbg !11004
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !11005, metadata !DIExpression()), !dbg !11006
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !11007
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 41, !dbg !11008
  %1 = load i8*, i8** %data.addr, align 8, !dbg !11009
  call void @dev_set_drvdata(%struct.device* %dev, i8* %1) #14, !dbg !11010
  ret void, !dbg !11011
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #3

; Function Attrs: noredzone
declare dso_local void @unregister_netdev(%struct.net_device*) #1

; Function Attrs: noredzone
declare dso_local void @free_netdev(%struct.net_device*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @skge_write16(%struct.skge_hw* %hw, i32 %reg, i16 zeroext %val) #2 !dbg !11012 {
entry:
  %hw.addr = alloca %struct.skge_hw*, align 8
  %reg.addr = alloca i32, align 4
  %val.addr = alloca i16, align 2
  store %struct.skge_hw* %hw, %struct.skge_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.skge_hw** %hw.addr, metadata !11015, metadata !DIExpression()), !dbg !11016
  store i32 %reg, i32* %reg.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %reg.addr, metadata !11017, metadata !DIExpression()), !dbg !11018
  store i16 %val, i16* %val.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %val.addr, metadata !11019, metadata !DIExpression()), !dbg !11020
  %0 = load i16, i16* %val.addr, align 2, !dbg !11021
  %1 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !11022
  %regs = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %1, i32 0, i32 0, !dbg !11023
  %2 = load i8*, i8** %regs, align 8, !dbg !11023
  %3 = load i32, i32* %reg.addr, align 4, !dbg !11024
  %idx.ext = sext i32 %3 to i64, !dbg !11025
  %add.ptr = getelementptr i8, i8* %2, i64 %idx.ext, !dbg !11025
  call void @writew(i16 zeroext %0, i8* %add.ptr) #14, !dbg !11026
  ret void, !dbg !11027
}

; Function Attrs: noredzone
declare dso_local void @iounmap(i8*) #1

; Function Attrs: noredzone
declare dso_local void @kfree(i8*) #1

; Function Attrs: noredzone
declare dso_local void @pci_release_regions(%struct.pci_dev*) #1

; Function Attrs: noredzone
declare dso_local void @pci_disable_device(%struct.pci_dev*) #1

; Function Attrs: nounwind readnone willreturn
declare i1 @llvm.is.constant.i64(i64) #6

; Function Attrs: noredzone
declare dso_local noalias i8* @__kmalloc(i64, i32) #1

; Function Attrs: nounwind willreturn
declare void @llvm.assume(i1) #7

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @get_order(i64 %size) #8 !dbg !11028 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !11032, metadata !DIExpression()), !dbg !11037
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !11039, metadata !DIExpression()), !dbg !11040
  %retval = alloca i32, align 4
  %size.addr = alloca i64, align 8
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !11041, metadata !DIExpression()), !dbg !11042
  %0 = load i64, i64* %size.addr, align 8, !dbg !11043
  %1 = call i1 @llvm.is.constant.i64(i64 %0), !dbg !11045
  br i1 %1, label %if.then, label %if.end447, !dbg !11046

if.then:                                          ; preds = %entry
  %2 = load i64, i64* %size.addr, align 8, !dbg !11047
  %tobool = icmp ne i64 %2, 0, !dbg !11047
  br i1 %tobool, label %if.end, label %if.then1, !dbg !11050

if.then1:                                         ; preds = %if.then
  store i32 52, i32* %retval, align 4, !dbg !11051
  br label %return, !dbg !11051

if.end:                                           ; preds = %if.then
  %3 = load i64, i64* %size.addr, align 8, !dbg !11052
  %cmp = icmp ult i64 %3, 4096, !dbg !11054
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !11055

if.then2:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !11056
  br label %return, !dbg !11056

if.end3:                                          ; preds = %if.end
  %4 = load i64, i64* %size.addr, align 8, !dbg !11057
  %sub = sub i64 %4, 1, !dbg !11057
  %5 = call i1 @llvm.is.constant.i64(i64 %sub), !dbg !11057
  br i1 %5, label %cond.true, label %cond.false442, !dbg !11057

cond.true:                                        ; preds = %if.end3
  %6 = load i64, i64* %size.addr, align 8, !dbg !11057
  %sub4 = sub i64 %6, 1, !dbg !11057
  %7 = call i1 @llvm.is.constant.i64(i64 %sub4), !dbg !11057
  br i1 %7, label %cond.true5, label %cond.false439, !dbg !11057

cond.true5:                                       ; preds = %cond.true
  %8 = load i64, i64* %size.addr, align 8, !dbg !11057
  %sub6 = sub i64 %8, 1, !dbg !11057
  %cmp7 = icmp ult i64 %sub6, 2, !dbg !11057
  br i1 %cmp7, label %cond.true8, label %cond.false, !dbg !11057

cond.true8:                                       ; preds = %cond.true5
  br label %cond.end437, !dbg !11057

cond.false:                                       ; preds = %cond.true5
  %9 = load i64, i64* %size.addr, align 8, !dbg !11057
  %sub9 = sub i64 %9, 1, !dbg !11057
  %and = and i64 %sub9, -9223372036854775808, !dbg !11057
  %tobool10 = icmp ne i64 %and, 0, !dbg !11057
  br i1 %tobool10, label %cond.true11, label %cond.false12, !dbg !11057

cond.true11:                                      ; preds = %cond.false
  br label %cond.end435, !dbg !11057

cond.false12:                                     ; preds = %cond.false
  %10 = load i64, i64* %size.addr, align 8, !dbg !11057
  %sub13 = sub i64 %10, 1, !dbg !11057
  %and14 = and i64 %sub13, 4611686018427387904, !dbg !11057
  %tobool15 = icmp ne i64 %and14, 0, !dbg !11057
  br i1 %tobool15, label %cond.true16, label %cond.false17, !dbg !11057

cond.true16:                                      ; preds = %cond.false12
  br label %cond.end433, !dbg !11057

cond.false17:                                     ; preds = %cond.false12
  %11 = load i64, i64* %size.addr, align 8, !dbg !11057
  %sub18 = sub i64 %11, 1, !dbg !11057
  %and19 = and i64 %sub18, 2305843009213693952, !dbg !11057
  %tobool20 = icmp ne i64 %and19, 0, !dbg !11057
  br i1 %tobool20, label %cond.true21, label %cond.false22, !dbg !11057

cond.true21:                                      ; preds = %cond.false17
  br label %cond.end431, !dbg !11057

cond.false22:                                     ; preds = %cond.false17
  %12 = load i64, i64* %size.addr, align 8, !dbg !11057
  %sub23 = sub i64 %12, 1, !dbg !11057
  %and24 = and i64 %sub23, 1152921504606846976, !dbg !11057
  %tobool25 = icmp ne i64 %and24, 0, !dbg !11057
  br i1 %tobool25, label %cond.true26, label %cond.false27, !dbg !11057

cond.true26:                                      ; preds = %cond.false22
  br label %cond.end429, !dbg !11057

cond.false27:                                     ; preds = %cond.false22
  %13 = load i64, i64* %size.addr, align 8, !dbg !11057
  %sub28 = sub i64 %13, 1, !dbg !11057
  %and29 = and i64 %sub28, 576460752303423488, !dbg !11057
  %tobool30 = icmp ne i64 %and29, 0, !dbg !11057
  br i1 %tobool30, label %cond.true31, label %cond.false32, !dbg !11057

cond.true31:                                      ; preds = %cond.false27
  br label %cond.end427, !dbg !11057

cond.false32:                                     ; preds = %cond.false27
  %14 = load i64, i64* %size.addr, align 8, !dbg !11057
  %sub33 = sub i64 %14, 1, !dbg !11057
  %and34 = and i64 %sub33, 288230376151711744, !dbg !11057
  %tobool35 = icmp ne i64 %and34, 0, !dbg !11057
  br i1 %tobool35, label %cond.true36, label %cond.false37, !dbg !11057

cond.true36:                                      ; preds = %cond.false32
  br label %cond.end425, !dbg !11057

cond.false37:                                     ; preds = %cond.false32
  %15 = load i64, i64* %size.addr, align 8, !dbg !11057
  %sub38 = sub i64 %15, 1, !dbg !11057
  %and39 = and i64 %sub38, 144115188075855872, !dbg !11057
  %tobool40 = icmp ne i64 %and39, 0, !dbg !11057
  br i1 %tobool40, label %cond.true41, label %cond.false42, !dbg !11057

cond.true41:                                      ; preds = %cond.false37
  br label %cond.end423, !dbg !11057

cond.false42:                                     ; preds = %cond.false37
  %16 = load i64, i64* %size.addr, align 8, !dbg !11057
  %sub43 = sub i64 %16, 1, !dbg !11057
  %and44 = and i64 %sub43, 72057594037927936, !dbg !11057
  %tobool45 = icmp ne i64 %and44, 0, !dbg !11057
  br i1 %tobool45, label %cond.true46, label %cond.false47, !dbg !11057

cond.true46:                                      ; preds = %cond.false42
  br label %cond.end421, !dbg !11057

cond.false47:                                     ; preds = %cond.false42
  %17 = load i64, i64* %size.addr, align 8, !dbg !11057
  %sub48 = sub i64 %17, 1, !dbg !11057
  %and49 = and i64 %sub48, 36028797018963968, !dbg !11057
  %tobool50 = icmp ne i64 %and49, 0, !dbg !11057
  br i1 %tobool50, label %cond.true51, label %cond.false52, !dbg !11057

cond.true51:                                      ; preds = %cond.false47
  br label %cond.end419, !dbg !11057

cond.false52:                                     ; preds = %cond.false47
  %18 = load i64, i64* %size.addr, align 8, !dbg !11057
  %sub53 = sub i64 %18, 1, !dbg !11057
  %and54 = and i64 %sub53, 18014398509481984, !dbg !11057
  %tobool55 = icmp ne i64 %and54, 0, !dbg !11057
  br i1 %tobool55, label %cond.true56, label %cond.false57, !dbg !11057

cond.true56:                                      ; preds = %cond.false52
  br label %cond.end417, !dbg !11057

cond.false57:                                     ; preds = %cond.false52
  %19 = load i64, i64* %size.addr, align 8, !dbg !11057
  %sub58 = sub i64 %19, 1, !dbg !11057
  %and59 = and i64 %sub58, 9007199254740992, !dbg !11057
  %tobool60 = icmp ne i64 %and59, 0, !dbg !11057
  br i1 %tobool60, label %cond.true61, label %cond.false62, !dbg !11057

cond.true61:                                      ; preds = %cond.false57
  br label %cond.end415, !dbg !11057

cond.false62:                                     ; preds = %cond.false57
  %20 = load i64, i64* %size.addr, align 8, !dbg !11057
  %sub63 = sub i64 %20, 1, !dbg !11057
  %and64 = and i64 %sub63, 4503599627370496, !dbg !11057
  %tobool65 = icmp ne i64 %and64, 0, !dbg !11057
  br i1 %tobool65, label %cond.true66, label %cond.false67, !dbg !11057

cond.true66:                                      ; preds = %cond.false62
  br label %cond.end413, !dbg !11057

cond.false67:                                     ; preds = %cond.false62
  %21 = load i64, i64* %size.addr, align 8, !dbg !11057
  %sub68 = sub i64 %21, 1, !dbg !11057
  %and69 = and i64 %sub68, 2251799813685248, !dbg !11057
  %tobool70 = icmp ne i64 %and69, 0, !dbg !11057
  br i1 %tobool70, label %cond.true71, label %cond.false72, !dbg !11057

cond.true71:                                      ; preds = %cond.false67
  br label %cond.end411, !dbg !11057

cond.false72:                                     ; preds = %cond.false67
  %22 = load i64, i64* %size.addr, align 8, !dbg !11057
  %sub73 = sub i64 %22, 1, !dbg !11057
  %and74 = and i64 %sub73, 1125899906842624, !dbg !11057
  %tobool75 = icmp ne i64 %and74, 0, !dbg !11057
  br i1 %tobool75, label %cond.true76, label %cond.false77, !dbg !11057

cond.true76:                                      ; preds = %cond.false72
  br label %cond.end409, !dbg !11057

cond.false77:                                     ; preds = %cond.false72
  %23 = load i64, i64* %size.addr, align 8, !dbg !11057
  %sub78 = sub i64 %23, 1, !dbg !11057
  %and79 = and i64 %sub78, 562949953421312, !dbg !11057
  %tobool80 = icmp ne i64 %and79, 0, !dbg !11057
  br i1 %tobool80, label %cond.true81, label %cond.false82, !dbg !11057

cond.true81:                                      ; preds = %cond.false77
  br label %cond.end407, !dbg !11057

cond.false82:                                     ; preds = %cond.false77
  %24 = load i64, i64* %size.addr, align 8, !dbg !11057
  %sub83 = sub i64 %24, 1, !dbg !11057
  %and84 = and i64 %sub83, 281474976710656, !dbg !11057
  %tobool85 = icmp ne i64 %and84, 0, !dbg !11057
  br i1 %tobool85, label %cond.true86, label %cond.false87, !dbg !11057

cond.true86:                                      ; preds = %cond.false82
  br label %cond.end405, !dbg !11057

cond.false87:                                     ; preds = %cond.false82
  %25 = load i64, i64* %size.addr, align 8, !dbg !11057
  %sub88 = sub i64 %25, 1, !dbg !11057
  %and89 = and i64 %sub88, 140737488355328, !dbg !11057
  %tobool90 = icmp ne i64 %and89, 0, !dbg !11057
  br i1 %tobool90, label %cond.true91, label %cond.false92, !dbg !11057

cond.true91:                                      ; preds = %cond.false87
  br label %cond.end403, !dbg !11057

cond.false92:                                     ; preds = %cond.false87
  %26 = load i64, i64* %size.addr, align 8, !dbg !11057
  %sub93 = sub i64 %26, 1, !dbg !11057
  %and94 = and i64 %sub93, 70368744177664, !dbg !11057
  %tobool95 = icmp ne i64 %and94, 0, !dbg !11057
  br i1 %tobool95, label %cond.true96, label %cond.false97, !dbg !11057

cond.true96:                                      ; preds = %cond.false92
  br label %cond.end401, !dbg !11057

cond.false97:                                     ; preds = %cond.false92
  %27 = load i64, i64* %size.addr, align 8, !dbg !11057
  %sub98 = sub i64 %27, 1, !dbg !11057
  %and99 = and i64 %sub98, 35184372088832, !dbg !11057
  %tobool100 = icmp ne i64 %and99, 0, !dbg !11057
  br i1 %tobool100, label %cond.true101, label %cond.false102, !dbg !11057

cond.true101:                                     ; preds = %cond.false97
  br label %cond.end399, !dbg !11057

cond.false102:                                    ; preds = %cond.false97
  %28 = load i64, i64* %size.addr, align 8, !dbg !11057
  %sub103 = sub i64 %28, 1, !dbg !11057
  %and104 = and i64 %sub103, 17592186044416, !dbg !11057
  %tobool105 = icmp ne i64 %and104, 0, !dbg !11057
  br i1 %tobool105, label %cond.true106, label %cond.false107, !dbg !11057

cond.true106:                                     ; preds = %cond.false102
  br label %cond.end397, !dbg !11057

cond.false107:                                    ; preds = %cond.false102
  %29 = load i64, i64* %size.addr, align 8, !dbg !11057
  %sub108 = sub i64 %29, 1, !dbg !11057
  %and109 = and i64 %sub108, 8796093022208, !dbg !11057
  %tobool110 = icmp ne i64 %and109, 0, !dbg !11057
  br i1 %tobool110, label %cond.true111, label %cond.false112, !dbg !11057

cond.true111:                                     ; preds = %cond.false107
  br label %cond.end395, !dbg !11057

cond.false112:                                    ; preds = %cond.false107
  %30 = load i64, i64* %size.addr, align 8, !dbg !11057
  %sub113 = sub i64 %30, 1, !dbg !11057
  %and114 = and i64 %sub113, 4398046511104, !dbg !11057
  %tobool115 = icmp ne i64 %and114, 0, !dbg !11057
  br i1 %tobool115, label %cond.true116, label %cond.false117, !dbg !11057

cond.true116:                                     ; preds = %cond.false112
  br label %cond.end393, !dbg !11057

cond.false117:                                    ; preds = %cond.false112
  %31 = load i64, i64* %size.addr, align 8, !dbg !11057
  %sub118 = sub i64 %31, 1, !dbg !11057
  %and119 = and i64 %sub118, 2199023255552, !dbg !11057
  %tobool120 = icmp ne i64 %and119, 0, !dbg !11057
  br i1 %tobool120, label %cond.true121, label %cond.false122, !dbg !11057

cond.true121:                                     ; preds = %cond.false117
  br label %cond.end391, !dbg !11057

cond.false122:                                    ; preds = %cond.false117
  %32 = load i64, i64* %size.addr, align 8, !dbg !11057
  %sub123 = sub i64 %32, 1, !dbg !11057
  %and124 = and i64 %sub123, 1099511627776, !dbg !11057
  %tobool125 = icmp ne i64 %and124, 0, !dbg !11057
  br i1 %tobool125, label %cond.true126, label %cond.false127, !dbg !11057

cond.true126:                                     ; preds = %cond.false122
  br label %cond.end389, !dbg !11057

cond.false127:                                    ; preds = %cond.false122
  %33 = load i64, i64* %size.addr, align 8, !dbg !11057
  %sub128 = sub i64 %33, 1, !dbg !11057
  %and129 = and i64 %sub128, 549755813888, !dbg !11057
  %tobool130 = icmp ne i64 %and129, 0, !dbg !11057
  br i1 %tobool130, label %cond.true131, label %cond.false132, !dbg !11057

cond.true131:                                     ; preds = %cond.false127
  br label %cond.end387, !dbg !11057

cond.false132:                                    ; preds = %cond.false127
  %34 = load i64, i64* %size.addr, align 8, !dbg !11057
  %sub133 = sub i64 %34, 1, !dbg !11057
  %and134 = and i64 %sub133, 274877906944, !dbg !11057
  %tobool135 = icmp ne i64 %and134, 0, !dbg !11057
  br i1 %tobool135, label %cond.true136, label %cond.false137, !dbg !11057

cond.true136:                                     ; preds = %cond.false132
  br label %cond.end385, !dbg !11057

cond.false137:                                    ; preds = %cond.false132
  %35 = load i64, i64* %size.addr, align 8, !dbg !11057
  %sub138 = sub i64 %35, 1, !dbg !11057
  %and139 = and i64 %sub138, 137438953472, !dbg !11057
  %tobool140 = icmp ne i64 %and139, 0, !dbg !11057
  br i1 %tobool140, label %cond.true141, label %cond.false142, !dbg !11057

cond.true141:                                     ; preds = %cond.false137
  br label %cond.end383, !dbg !11057

cond.false142:                                    ; preds = %cond.false137
  %36 = load i64, i64* %size.addr, align 8, !dbg !11057
  %sub143 = sub i64 %36, 1, !dbg !11057
  %and144 = and i64 %sub143, 68719476736, !dbg !11057
  %tobool145 = icmp ne i64 %and144, 0, !dbg !11057
  br i1 %tobool145, label %cond.true146, label %cond.false147, !dbg !11057

cond.true146:                                     ; preds = %cond.false142
  br label %cond.end381, !dbg !11057

cond.false147:                                    ; preds = %cond.false142
  %37 = load i64, i64* %size.addr, align 8, !dbg !11057
  %sub148 = sub i64 %37, 1, !dbg !11057
  %and149 = and i64 %sub148, 34359738368, !dbg !11057
  %tobool150 = icmp ne i64 %and149, 0, !dbg !11057
  br i1 %tobool150, label %cond.true151, label %cond.false152, !dbg !11057

cond.true151:                                     ; preds = %cond.false147
  br label %cond.end379, !dbg !11057

cond.false152:                                    ; preds = %cond.false147
  %38 = load i64, i64* %size.addr, align 8, !dbg !11057
  %sub153 = sub i64 %38, 1, !dbg !11057
  %and154 = and i64 %sub153, 17179869184, !dbg !11057
  %tobool155 = icmp ne i64 %and154, 0, !dbg !11057
  br i1 %tobool155, label %cond.true156, label %cond.false157, !dbg !11057

cond.true156:                                     ; preds = %cond.false152
  br label %cond.end377, !dbg !11057

cond.false157:                                    ; preds = %cond.false152
  %39 = load i64, i64* %size.addr, align 8, !dbg !11057
  %sub158 = sub i64 %39, 1, !dbg !11057
  %and159 = and i64 %sub158, 8589934592, !dbg !11057
  %tobool160 = icmp ne i64 %and159, 0, !dbg !11057
  br i1 %tobool160, label %cond.true161, label %cond.false162, !dbg !11057

cond.true161:                                     ; preds = %cond.false157
  br label %cond.end375, !dbg !11057

cond.false162:                                    ; preds = %cond.false157
  %40 = load i64, i64* %size.addr, align 8, !dbg !11057
  %sub163 = sub i64 %40, 1, !dbg !11057
  %and164 = and i64 %sub163, 4294967296, !dbg !11057
  %tobool165 = icmp ne i64 %and164, 0, !dbg !11057
  br i1 %tobool165, label %cond.true166, label %cond.false167, !dbg !11057

cond.true166:                                     ; preds = %cond.false162
  br label %cond.end373, !dbg !11057

cond.false167:                                    ; preds = %cond.false162
  %41 = load i64, i64* %size.addr, align 8, !dbg !11057
  %sub168 = sub i64 %41, 1, !dbg !11057
  %and169 = and i64 %sub168, 2147483648, !dbg !11057
  %tobool170 = icmp ne i64 %and169, 0, !dbg !11057
  br i1 %tobool170, label %cond.true171, label %cond.false172, !dbg !11057

cond.true171:                                     ; preds = %cond.false167
  br label %cond.end371, !dbg !11057

cond.false172:                                    ; preds = %cond.false167
  %42 = load i64, i64* %size.addr, align 8, !dbg !11057
  %sub173 = sub i64 %42, 1, !dbg !11057
  %and174 = and i64 %sub173, 1073741824, !dbg !11057
  %tobool175 = icmp ne i64 %and174, 0, !dbg !11057
  br i1 %tobool175, label %cond.true176, label %cond.false177, !dbg !11057

cond.true176:                                     ; preds = %cond.false172
  br label %cond.end369, !dbg !11057

cond.false177:                                    ; preds = %cond.false172
  %43 = load i64, i64* %size.addr, align 8, !dbg !11057
  %sub178 = sub i64 %43, 1, !dbg !11057
  %and179 = and i64 %sub178, 536870912, !dbg !11057
  %tobool180 = icmp ne i64 %and179, 0, !dbg !11057
  br i1 %tobool180, label %cond.true181, label %cond.false182, !dbg !11057

cond.true181:                                     ; preds = %cond.false177
  br label %cond.end367, !dbg !11057

cond.false182:                                    ; preds = %cond.false177
  %44 = load i64, i64* %size.addr, align 8, !dbg !11057
  %sub183 = sub i64 %44, 1, !dbg !11057
  %and184 = and i64 %sub183, 268435456, !dbg !11057
  %tobool185 = icmp ne i64 %and184, 0, !dbg !11057
  br i1 %tobool185, label %cond.true186, label %cond.false187, !dbg !11057

cond.true186:                                     ; preds = %cond.false182
  br label %cond.end365, !dbg !11057

cond.false187:                                    ; preds = %cond.false182
  %45 = load i64, i64* %size.addr, align 8, !dbg !11057
  %sub188 = sub i64 %45, 1, !dbg !11057
  %and189 = and i64 %sub188, 134217728, !dbg !11057
  %tobool190 = icmp ne i64 %and189, 0, !dbg !11057
  br i1 %tobool190, label %cond.true191, label %cond.false192, !dbg !11057

cond.true191:                                     ; preds = %cond.false187
  br label %cond.end363, !dbg !11057

cond.false192:                                    ; preds = %cond.false187
  %46 = load i64, i64* %size.addr, align 8, !dbg !11057
  %sub193 = sub i64 %46, 1, !dbg !11057
  %and194 = and i64 %sub193, 67108864, !dbg !11057
  %tobool195 = icmp ne i64 %and194, 0, !dbg !11057
  br i1 %tobool195, label %cond.true196, label %cond.false197, !dbg !11057

cond.true196:                                     ; preds = %cond.false192
  br label %cond.end361, !dbg !11057

cond.false197:                                    ; preds = %cond.false192
  %47 = load i64, i64* %size.addr, align 8, !dbg !11057
  %sub198 = sub i64 %47, 1, !dbg !11057
  %and199 = and i64 %sub198, 33554432, !dbg !11057
  %tobool200 = icmp ne i64 %and199, 0, !dbg !11057
  br i1 %tobool200, label %cond.true201, label %cond.false202, !dbg !11057

cond.true201:                                     ; preds = %cond.false197
  br label %cond.end359, !dbg !11057

cond.false202:                                    ; preds = %cond.false197
  %48 = load i64, i64* %size.addr, align 8, !dbg !11057
  %sub203 = sub i64 %48, 1, !dbg !11057
  %and204 = and i64 %sub203, 16777216, !dbg !11057
  %tobool205 = icmp ne i64 %and204, 0, !dbg !11057
  br i1 %tobool205, label %cond.true206, label %cond.false207, !dbg !11057

cond.true206:                                     ; preds = %cond.false202
  br label %cond.end357, !dbg !11057

cond.false207:                                    ; preds = %cond.false202
  %49 = load i64, i64* %size.addr, align 8, !dbg !11057
  %sub208 = sub i64 %49, 1, !dbg !11057
  %and209 = and i64 %sub208, 8388608, !dbg !11057
  %tobool210 = icmp ne i64 %and209, 0, !dbg !11057
  br i1 %tobool210, label %cond.true211, label %cond.false212, !dbg !11057

cond.true211:                                     ; preds = %cond.false207
  br label %cond.end355, !dbg !11057

cond.false212:                                    ; preds = %cond.false207
  %50 = load i64, i64* %size.addr, align 8, !dbg !11057
  %sub213 = sub i64 %50, 1, !dbg !11057
  %and214 = and i64 %sub213, 4194304, !dbg !11057
  %tobool215 = icmp ne i64 %and214, 0, !dbg !11057
  br i1 %tobool215, label %cond.true216, label %cond.false217, !dbg !11057

cond.true216:                                     ; preds = %cond.false212
  br label %cond.end353, !dbg !11057

cond.false217:                                    ; preds = %cond.false212
  %51 = load i64, i64* %size.addr, align 8, !dbg !11057
  %sub218 = sub i64 %51, 1, !dbg !11057
  %and219 = and i64 %sub218, 2097152, !dbg !11057
  %tobool220 = icmp ne i64 %and219, 0, !dbg !11057
  br i1 %tobool220, label %cond.true221, label %cond.false222, !dbg !11057

cond.true221:                                     ; preds = %cond.false217
  br label %cond.end351, !dbg !11057

cond.false222:                                    ; preds = %cond.false217
  %52 = load i64, i64* %size.addr, align 8, !dbg !11057
  %sub223 = sub i64 %52, 1, !dbg !11057
  %and224 = and i64 %sub223, 1048576, !dbg !11057
  %tobool225 = icmp ne i64 %and224, 0, !dbg !11057
  br i1 %tobool225, label %cond.true226, label %cond.false227, !dbg !11057

cond.true226:                                     ; preds = %cond.false222
  br label %cond.end349, !dbg !11057

cond.false227:                                    ; preds = %cond.false222
  %53 = load i64, i64* %size.addr, align 8, !dbg !11057
  %sub228 = sub i64 %53, 1, !dbg !11057
  %and229 = and i64 %sub228, 524288, !dbg !11057
  %tobool230 = icmp ne i64 %and229, 0, !dbg !11057
  br i1 %tobool230, label %cond.true231, label %cond.false232, !dbg !11057

cond.true231:                                     ; preds = %cond.false227
  br label %cond.end347, !dbg !11057

cond.false232:                                    ; preds = %cond.false227
  %54 = load i64, i64* %size.addr, align 8, !dbg !11057
  %sub233 = sub i64 %54, 1, !dbg !11057
  %and234 = and i64 %sub233, 262144, !dbg !11057
  %tobool235 = icmp ne i64 %and234, 0, !dbg !11057
  br i1 %tobool235, label %cond.true236, label %cond.false237, !dbg !11057

cond.true236:                                     ; preds = %cond.false232
  br label %cond.end345, !dbg !11057

cond.false237:                                    ; preds = %cond.false232
  %55 = load i64, i64* %size.addr, align 8, !dbg !11057
  %sub238 = sub i64 %55, 1, !dbg !11057
  %and239 = and i64 %sub238, 131072, !dbg !11057
  %tobool240 = icmp ne i64 %and239, 0, !dbg !11057
  br i1 %tobool240, label %cond.true241, label %cond.false242, !dbg !11057

cond.true241:                                     ; preds = %cond.false237
  br label %cond.end343, !dbg !11057

cond.false242:                                    ; preds = %cond.false237
  %56 = load i64, i64* %size.addr, align 8, !dbg !11057
  %sub243 = sub i64 %56, 1, !dbg !11057
  %and244 = and i64 %sub243, 65536, !dbg !11057
  %tobool245 = icmp ne i64 %and244, 0, !dbg !11057
  br i1 %tobool245, label %cond.true246, label %cond.false247, !dbg !11057

cond.true246:                                     ; preds = %cond.false242
  br label %cond.end341, !dbg !11057

cond.false247:                                    ; preds = %cond.false242
  %57 = load i64, i64* %size.addr, align 8, !dbg !11057
  %sub248 = sub i64 %57, 1, !dbg !11057
  %and249 = and i64 %sub248, 32768, !dbg !11057
  %tobool250 = icmp ne i64 %and249, 0, !dbg !11057
  br i1 %tobool250, label %cond.true251, label %cond.false252, !dbg !11057

cond.true251:                                     ; preds = %cond.false247
  br label %cond.end339, !dbg !11057

cond.false252:                                    ; preds = %cond.false247
  %58 = load i64, i64* %size.addr, align 8, !dbg !11057
  %sub253 = sub i64 %58, 1, !dbg !11057
  %and254 = and i64 %sub253, 16384, !dbg !11057
  %tobool255 = icmp ne i64 %and254, 0, !dbg !11057
  br i1 %tobool255, label %cond.true256, label %cond.false257, !dbg !11057

cond.true256:                                     ; preds = %cond.false252
  br label %cond.end337, !dbg !11057

cond.false257:                                    ; preds = %cond.false252
  %59 = load i64, i64* %size.addr, align 8, !dbg !11057
  %sub258 = sub i64 %59, 1, !dbg !11057
  %and259 = and i64 %sub258, 8192, !dbg !11057
  %tobool260 = icmp ne i64 %and259, 0, !dbg !11057
  br i1 %tobool260, label %cond.true261, label %cond.false262, !dbg !11057

cond.true261:                                     ; preds = %cond.false257
  br label %cond.end335, !dbg !11057

cond.false262:                                    ; preds = %cond.false257
  %60 = load i64, i64* %size.addr, align 8, !dbg !11057
  %sub263 = sub i64 %60, 1, !dbg !11057
  %and264 = and i64 %sub263, 4096, !dbg !11057
  %tobool265 = icmp ne i64 %and264, 0, !dbg !11057
  br i1 %tobool265, label %cond.true266, label %cond.false267, !dbg !11057

cond.true266:                                     ; preds = %cond.false262
  br label %cond.end333, !dbg !11057

cond.false267:                                    ; preds = %cond.false262
  %61 = load i64, i64* %size.addr, align 8, !dbg !11057
  %sub268 = sub i64 %61, 1, !dbg !11057
  %and269 = and i64 %sub268, 2048, !dbg !11057
  %tobool270 = icmp ne i64 %and269, 0, !dbg !11057
  br i1 %tobool270, label %cond.true271, label %cond.false272, !dbg !11057

cond.true271:                                     ; preds = %cond.false267
  br label %cond.end331, !dbg !11057

cond.false272:                                    ; preds = %cond.false267
  %62 = load i64, i64* %size.addr, align 8, !dbg !11057
  %sub273 = sub i64 %62, 1, !dbg !11057
  %and274 = and i64 %sub273, 1024, !dbg !11057
  %tobool275 = icmp ne i64 %and274, 0, !dbg !11057
  br i1 %tobool275, label %cond.true276, label %cond.false277, !dbg !11057

cond.true276:                                     ; preds = %cond.false272
  br label %cond.end329, !dbg !11057

cond.false277:                                    ; preds = %cond.false272
  %63 = load i64, i64* %size.addr, align 8, !dbg !11057
  %sub278 = sub i64 %63, 1, !dbg !11057
  %and279 = and i64 %sub278, 512, !dbg !11057
  %tobool280 = icmp ne i64 %and279, 0, !dbg !11057
  br i1 %tobool280, label %cond.true281, label %cond.false282, !dbg !11057

cond.true281:                                     ; preds = %cond.false277
  br label %cond.end327, !dbg !11057

cond.false282:                                    ; preds = %cond.false277
  %64 = load i64, i64* %size.addr, align 8, !dbg !11057
  %sub283 = sub i64 %64, 1, !dbg !11057
  %and284 = and i64 %sub283, 256, !dbg !11057
  %tobool285 = icmp ne i64 %and284, 0, !dbg !11057
  br i1 %tobool285, label %cond.true286, label %cond.false287, !dbg !11057

cond.true286:                                     ; preds = %cond.false282
  br label %cond.end325, !dbg !11057

cond.false287:                                    ; preds = %cond.false282
  %65 = load i64, i64* %size.addr, align 8, !dbg !11057
  %sub288 = sub i64 %65, 1, !dbg !11057
  %and289 = and i64 %sub288, 128, !dbg !11057
  %tobool290 = icmp ne i64 %and289, 0, !dbg !11057
  br i1 %tobool290, label %cond.true291, label %cond.false292, !dbg !11057

cond.true291:                                     ; preds = %cond.false287
  br label %cond.end323, !dbg !11057

cond.false292:                                    ; preds = %cond.false287
  %66 = load i64, i64* %size.addr, align 8, !dbg !11057
  %sub293 = sub i64 %66, 1, !dbg !11057
  %and294 = and i64 %sub293, 64, !dbg !11057
  %tobool295 = icmp ne i64 %and294, 0, !dbg !11057
  br i1 %tobool295, label %cond.true296, label %cond.false297, !dbg !11057

cond.true296:                                     ; preds = %cond.false292
  br label %cond.end321, !dbg !11057

cond.false297:                                    ; preds = %cond.false292
  %67 = load i64, i64* %size.addr, align 8, !dbg !11057
  %sub298 = sub i64 %67, 1, !dbg !11057
  %and299 = and i64 %sub298, 32, !dbg !11057
  %tobool300 = icmp ne i64 %and299, 0, !dbg !11057
  br i1 %tobool300, label %cond.true301, label %cond.false302, !dbg !11057

cond.true301:                                     ; preds = %cond.false297
  br label %cond.end319, !dbg !11057

cond.false302:                                    ; preds = %cond.false297
  %68 = load i64, i64* %size.addr, align 8, !dbg !11057
  %sub303 = sub i64 %68, 1, !dbg !11057
  %and304 = and i64 %sub303, 16, !dbg !11057
  %tobool305 = icmp ne i64 %and304, 0, !dbg !11057
  br i1 %tobool305, label %cond.true306, label %cond.false307, !dbg !11057

cond.true306:                                     ; preds = %cond.false302
  br label %cond.end317, !dbg !11057

cond.false307:                                    ; preds = %cond.false302
  %69 = load i64, i64* %size.addr, align 8, !dbg !11057
  %sub308 = sub i64 %69, 1, !dbg !11057
  %and309 = and i64 %sub308, 8, !dbg !11057
  %tobool310 = icmp ne i64 %and309, 0, !dbg !11057
  br i1 %tobool310, label %cond.true311, label %cond.false312, !dbg !11057

cond.true311:                                     ; preds = %cond.false307
  br label %cond.end, !dbg !11057

cond.false312:                                    ; preds = %cond.false307
  %70 = load i64, i64* %size.addr, align 8, !dbg !11057
  %sub313 = sub i64 %70, 1, !dbg !11057
  %and314 = and i64 %sub313, 4, !dbg !11057
  %tobool315 = icmp ne i64 %and314, 0, !dbg !11057
  %71 = zext i1 %tobool315 to i64, !dbg !11057
  %cond = select i1 %tobool315, i32 2, i32 1, !dbg !11057
  br label %cond.end, !dbg !11057

cond.end:                                         ; preds = %cond.false312, %cond.true311
  %cond316 = phi i32 [ 3, %cond.true311 ], [ %cond, %cond.false312 ], !dbg !11057
  br label %cond.end317, !dbg !11057

cond.end317:                                      ; preds = %cond.end, %cond.true306
  %cond318 = phi i32 [ 4, %cond.true306 ], [ %cond316, %cond.end ], !dbg !11057
  br label %cond.end319, !dbg !11057

cond.end319:                                      ; preds = %cond.end317, %cond.true301
  %cond320 = phi i32 [ 5, %cond.true301 ], [ %cond318, %cond.end317 ], !dbg !11057
  br label %cond.end321, !dbg !11057

cond.end321:                                      ; preds = %cond.end319, %cond.true296
  %cond322 = phi i32 [ 6, %cond.true296 ], [ %cond320, %cond.end319 ], !dbg !11057
  br label %cond.end323, !dbg !11057

cond.end323:                                      ; preds = %cond.end321, %cond.true291
  %cond324 = phi i32 [ 7, %cond.true291 ], [ %cond322, %cond.end321 ], !dbg !11057
  br label %cond.end325, !dbg !11057

cond.end325:                                      ; preds = %cond.end323, %cond.true286
  %cond326 = phi i32 [ 8, %cond.true286 ], [ %cond324, %cond.end323 ], !dbg !11057
  br label %cond.end327, !dbg !11057

cond.end327:                                      ; preds = %cond.end325, %cond.true281
  %cond328 = phi i32 [ 9, %cond.true281 ], [ %cond326, %cond.end325 ], !dbg !11057
  br label %cond.end329, !dbg !11057

cond.end329:                                      ; preds = %cond.end327, %cond.true276
  %cond330 = phi i32 [ 10, %cond.true276 ], [ %cond328, %cond.end327 ], !dbg !11057
  br label %cond.end331, !dbg !11057

cond.end331:                                      ; preds = %cond.end329, %cond.true271
  %cond332 = phi i32 [ 11, %cond.true271 ], [ %cond330, %cond.end329 ], !dbg !11057
  br label %cond.end333, !dbg !11057

cond.end333:                                      ; preds = %cond.end331, %cond.true266
  %cond334 = phi i32 [ 12, %cond.true266 ], [ %cond332, %cond.end331 ], !dbg !11057
  br label %cond.end335, !dbg !11057

cond.end335:                                      ; preds = %cond.end333, %cond.true261
  %cond336 = phi i32 [ 13, %cond.true261 ], [ %cond334, %cond.end333 ], !dbg !11057
  br label %cond.end337, !dbg !11057

cond.end337:                                      ; preds = %cond.end335, %cond.true256
  %cond338 = phi i32 [ 14, %cond.true256 ], [ %cond336, %cond.end335 ], !dbg !11057
  br label %cond.end339, !dbg !11057

cond.end339:                                      ; preds = %cond.end337, %cond.true251
  %cond340 = phi i32 [ 15, %cond.true251 ], [ %cond338, %cond.end337 ], !dbg !11057
  br label %cond.end341, !dbg !11057

cond.end341:                                      ; preds = %cond.end339, %cond.true246
  %cond342 = phi i32 [ 16, %cond.true246 ], [ %cond340, %cond.end339 ], !dbg !11057
  br label %cond.end343, !dbg !11057

cond.end343:                                      ; preds = %cond.end341, %cond.true241
  %cond344 = phi i32 [ 17, %cond.true241 ], [ %cond342, %cond.end341 ], !dbg !11057
  br label %cond.end345, !dbg !11057

cond.end345:                                      ; preds = %cond.end343, %cond.true236
  %cond346 = phi i32 [ 18, %cond.true236 ], [ %cond344, %cond.end343 ], !dbg !11057
  br label %cond.end347, !dbg !11057

cond.end347:                                      ; preds = %cond.end345, %cond.true231
  %cond348 = phi i32 [ 19, %cond.true231 ], [ %cond346, %cond.end345 ], !dbg !11057
  br label %cond.end349, !dbg !11057

cond.end349:                                      ; preds = %cond.end347, %cond.true226
  %cond350 = phi i32 [ 20, %cond.true226 ], [ %cond348, %cond.end347 ], !dbg !11057
  br label %cond.end351, !dbg !11057

cond.end351:                                      ; preds = %cond.end349, %cond.true221
  %cond352 = phi i32 [ 21, %cond.true221 ], [ %cond350, %cond.end349 ], !dbg !11057
  br label %cond.end353, !dbg !11057

cond.end353:                                      ; preds = %cond.end351, %cond.true216
  %cond354 = phi i32 [ 22, %cond.true216 ], [ %cond352, %cond.end351 ], !dbg !11057
  br label %cond.end355, !dbg !11057

cond.end355:                                      ; preds = %cond.end353, %cond.true211
  %cond356 = phi i32 [ 23, %cond.true211 ], [ %cond354, %cond.end353 ], !dbg !11057
  br label %cond.end357, !dbg !11057

cond.end357:                                      ; preds = %cond.end355, %cond.true206
  %cond358 = phi i32 [ 24, %cond.true206 ], [ %cond356, %cond.end355 ], !dbg !11057
  br label %cond.end359, !dbg !11057

cond.end359:                                      ; preds = %cond.end357, %cond.true201
  %cond360 = phi i32 [ 25, %cond.true201 ], [ %cond358, %cond.end357 ], !dbg !11057
  br label %cond.end361, !dbg !11057

cond.end361:                                      ; preds = %cond.end359, %cond.true196
  %cond362 = phi i32 [ 26, %cond.true196 ], [ %cond360, %cond.end359 ], !dbg !11057
  br label %cond.end363, !dbg !11057

cond.end363:                                      ; preds = %cond.end361, %cond.true191
  %cond364 = phi i32 [ 27, %cond.true191 ], [ %cond362, %cond.end361 ], !dbg !11057
  br label %cond.end365, !dbg !11057

cond.end365:                                      ; preds = %cond.end363, %cond.true186
  %cond366 = phi i32 [ 28, %cond.true186 ], [ %cond364, %cond.end363 ], !dbg !11057
  br label %cond.end367, !dbg !11057

cond.end367:                                      ; preds = %cond.end365, %cond.true181
  %cond368 = phi i32 [ 29, %cond.true181 ], [ %cond366, %cond.end365 ], !dbg !11057
  br label %cond.end369, !dbg !11057

cond.end369:                                      ; preds = %cond.end367, %cond.true176
  %cond370 = phi i32 [ 30, %cond.true176 ], [ %cond368, %cond.end367 ], !dbg !11057
  br label %cond.end371, !dbg !11057

cond.end371:                                      ; preds = %cond.end369, %cond.true171
  %cond372 = phi i32 [ 31, %cond.true171 ], [ %cond370, %cond.end369 ], !dbg !11057
  br label %cond.end373, !dbg !11057

cond.end373:                                      ; preds = %cond.end371, %cond.true166
  %cond374 = phi i32 [ 32, %cond.true166 ], [ %cond372, %cond.end371 ], !dbg !11057
  br label %cond.end375, !dbg !11057

cond.end375:                                      ; preds = %cond.end373, %cond.true161
  %cond376 = phi i32 [ 33, %cond.true161 ], [ %cond374, %cond.end373 ], !dbg !11057
  br label %cond.end377, !dbg !11057

cond.end377:                                      ; preds = %cond.end375, %cond.true156
  %cond378 = phi i32 [ 34, %cond.true156 ], [ %cond376, %cond.end375 ], !dbg !11057
  br label %cond.end379, !dbg !11057

cond.end379:                                      ; preds = %cond.end377, %cond.true151
  %cond380 = phi i32 [ 35, %cond.true151 ], [ %cond378, %cond.end377 ], !dbg !11057
  br label %cond.end381, !dbg !11057

cond.end381:                                      ; preds = %cond.end379, %cond.true146
  %cond382 = phi i32 [ 36, %cond.true146 ], [ %cond380, %cond.end379 ], !dbg !11057
  br label %cond.end383, !dbg !11057

cond.end383:                                      ; preds = %cond.end381, %cond.true141
  %cond384 = phi i32 [ 37, %cond.true141 ], [ %cond382, %cond.end381 ], !dbg !11057
  br label %cond.end385, !dbg !11057

cond.end385:                                      ; preds = %cond.end383, %cond.true136
  %cond386 = phi i32 [ 38, %cond.true136 ], [ %cond384, %cond.end383 ], !dbg !11057
  br label %cond.end387, !dbg !11057

cond.end387:                                      ; preds = %cond.end385, %cond.true131
  %cond388 = phi i32 [ 39, %cond.true131 ], [ %cond386, %cond.end385 ], !dbg !11057
  br label %cond.end389, !dbg !11057

cond.end389:                                      ; preds = %cond.end387, %cond.true126
  %cond390 = phi i32 [ 40, %cond.true126 ], [ %cond388, %cond.end387 ], !dbg !11057
  br label %cond.end391, !dbg !11057

cond.end391:                                      ; preds = %cond.end389, %cond.true121
  %cond392 = phi i32 [ 41, %cond.true121 ], [ %cond390, %cond.end389 ], !dbg !11057
  br label %cond.end393, !dbg !11057

cond.end393:                                      ; preds = %cond.end391, %cond.true116
  %cond394 = phi i32 [ 42, %cond.true116 ], [ %cond392, %cond.end391 ], !dbg !11057
  br label %cond.end395, !dbg !11057

cond.end395:                                      ; preds = %cond.end393, %cond.true111
  %cond396 = phi i32 [ 43, %cond.true111 ], [ %cond394, %cond.end393 ], !dbg !11057
  br label %cond.end397, !dbg !11057

cond.end397:                                      ; preds = %cond.end395, %cond.true106
  %cond398 = phi i32 [ 44, %cond.true106 ], [ %cond396, %cond.end395 ], !dbg !11057
  br label %cond.end399, !dbg !11057

cond.end399:                                      ; preds = %cond.end397, %cond.true101
  %cond400 = phi i32 [ 45, %cond.true101 ], [ %cond398, %cond.end397 ], !dbg !11057
  br label %cond.end401, !dbg !11057

cond.end401:                                      ; preds = %cond.end399, %cond.true96
  %cond402 = phi i32 [ 46, %cond.true96 ], [ %cond400, %cond.end399 ], !dbg !11057
  br label %cond.end403, !dbg !11057

cond.end403:                                      ; preds = %cond.end401, %cond.true91
  %cond404 = phi i32 [ 47, %cond.true91 ], [ %cond402, %cond.end401 ], !dbg !11057
  br label %cond.end405, !dbg !11057

cond.end405:                                      ; preds = %cond.end403, %cond.true86
  %cond406 = phi i32 [ 48, %cond.true86 ], [ %cond404, %cond.end403 ], !dbg !11057
  br label %cond.end407, !dbg !11057

cond.end407:                                      ; preds = %cond.end405, %cond.true81
  %cond408 = phi i32 [ 49, %cond.true81 ], [ %cond406, %cond.end405 ], !dbg !11057
  br label %cond.end409, !dbg !11057

cond.end409:                                      ; preds = %cond.end407, %cond.true76
  %cond410 = phi i32 [ 50, %cond.true76 ], [ %cond408, %cond.end407 ], !dbg !11057
  br label %cond.end411, !dbg !11057

cond.end411:                                      ; preds = %cond.end409, %cond.true71
  %cond412 = phi i32 [ 51, %cond.true71 ], [ %cond410, %cond.end409 ], !dbg !11057
  br label %cond.end413, !dbg !11057

cond.end413:                                      ; preds = %cond.end411, %cond.true66
  %cond414 = phi i32 [ 52, %cond.true66 ], [ %cond412, %cond.end411 ], !dbg !11057
  br label %cond.end415, !dbg !11057

cond.end415:                                      ; preds = %cond.end413, %cond.true61
  %cond416 = phi i32 [ 53, %cond.true61 ], [ %cond414, %cond.end413 ], !dbg !11057
  br label %cond.end417, !dbg !11057

cond.end417:                                      ; preds = %cond.end415, %cond.true56
  %cond418 = phi i32 [ 54, %cond.true56 ], [ %cond416, %cond.end415 ], !dbg !11057
  br label %cond.end419, !dbg !11057

cond.end419:                                      ; preds = %cond.end417, %cond.true51
  %cond420 = phi i32 [ 55, %cond.true51 ], [ %cond418, %cond.end417 ], !dbg !11057
  br label %cond.end421, !dbg !11057

cond.end421:                                      ; preds = %cond.end419, %cond.true46
  %cond422 = phi i32 [ 56, %cond.true46 ], [ %cond420, %cond.end419 ], !dbg !11057
  br label %cond.end423, !dbg !11057

cond.end423:                                      ; preds = %cond.end421, %cond.true41
  %cond424 = phi i32 [ 57, %cond.true41 ], [ %cond422, %cond.end421 ], !dbg !11057
  br label %cond.end425, !dbg !11057

cond.end425:                                      ; preds = %cond.end423, %cond.true36
  %cond426 = phi i32 [ 58, %cond.true36 ], [ %cond424, %cond.end423 ], !dbg !11057
  br label %cond.end427, !dbg !11057

cond.end427:                                      ; preds = %cond.end425, %cond.true31
  %cond428 = phi i32 [ 59, %cond.true31 ], [ %cond426, %cond.end425 ], !dbg !11057
  br label %cond.end429, !dbg !11057

cond.end429:                                      ; preds = %cond.end427, %cond.true26
  %cond430 = phi i32 [ 60, %cond.true26 ], [ %cond428, %cond.end427 ], !dbg !11057
  br label %cond.end431, !dbg !11057

cond.end431:                                      ; preds = %cond.end429, %cond.true21
  %cond432 = phi i32 [ 61, %cond.true21 ], [ %cond430, %cond.end429 ], !dbg !11057
  br label %cond.end433, !dbg !11057

cond.end433:                                      ; preds = %cond.end431, %cond.true16
  %cond434 = phi i32 [ 62, %cond.true16 ], [ %cond432, %cond.end431 ], !dbg !11057
  br label %cond.end435, !dbg !11057

cond.end435:                                      ; preds = %cond.end433, %cond.true11
  %cond436 = phi i32 [ 63, %cond.true11 ], [ %cond434, %cond.end433 ], !dbg !11057
  br label %cond.end437, !dbg !11057

cond.end437:                                      ; preds = %cond.end435, %cond.true8
  %cond438 = phi i32 [ 0, %cond.true8 ], [ %cond436, %cond.end435 ], !dbg !11057
  br label %cond.end440, !dbg !11057

cond.false439:                                    ; preds = %cond.true
  br label %cond.end440, !dbg !11057

cond.end440:                                      ; preds = %cond.false439, %cond.end437
  %cond441 = phi i32 [ %cond438, %cond.end437 ], [ -1, %cond.false439 ], !dbg !11057
  br label %cond.end444, !dbg !11057

cond.false442:                                    ; preds = %if.end3
  %72 = load i64, i64* %size.addr, align 8, !dbg !11057
  %sub443 = sub i64 %72, 1, !dbg !11057
  %call = call i32 @__ilog2_u64(i64 %sub443) #17, !dbg !11057
  br label %cond.end444, !dbg !11057

cond.end444:                                      ; preds = %cond.false442, %cond.end440
  %cond445 = phi i32 [ %cond441, %cond.end440 ], [ %call, %cond.false442 ], !dbg !11057
  %sub446 = sub i32 %cond445, 12, !dbg !11058
  %add = add i32 %sub446, 1, !dbg !11059
  store i32 %add, i32* %retval, align 4, !dbg !11060
  br label %return, !dbg !11060

if.end447:                                        ; preds = %entry
  %73 = load i64, i64* %size.addr, align 8, !dbg !11061
  %dec = add i64 %73, -1, !dbg !11061
  store i64 %dec, i64* %size.addr, align 8, !dbg !11061
  %74 = load i64, i64* %size.addr, align 8, !dbg !11062
  %shr = lshr i64 %74, 12, !dbg !11062
  store i64 %shr, i64* %size.addr, align 8, !dbg !11062
  %75 = load i64, i64* %size.addr, align 8, !dbg !11063
  store i64 %75, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !11040
  %76 = load i32, i32* %bitpos.i, align 4, !dbg !11064
  %77 = load i64, i64* %x.addr.i, align 8, !dbg !11065
  %78 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %77, i32 %76) #9, !dbg !11064, !srcloc !11066
  store i32 %78, i32* %bitpos.i, align 4, !dbg !11064
  %79 = load i32, i32* %bitpos.i, align 4, !dbg !11067
  %add.i = add i32 %79, 1, !dbg !11068
  store i32 %add.i, i32* %retval, align 4, !dbg !11069
  br label %return, !dbg !11069

return:                                           ; preds = %if.end447, %cond.end444, %if.then2, %if.then1
  %80 = load i32, i32* %retval, align 4, !dbg !11070
  ret i32 %80, !dbg !11070
}

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @__ilog2_u64(i64 %n) #8 !dbg !11071 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !11032, metadata !DIExpression()), !dbg !11075
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !11039, metadata !DIExpression()), !dbg !11077
  %n.addr = alloca i64, align 8
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !11078, metadata !DIExpression()), !dbg !11079
  %0 = load i64, i64* %n.addr, align 8, !dbg !11080
  store i64 %0, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !11077
  %1 = load i32, i32* %bitpos.i, align 4, !dbg !11081
  %2 = load i64, i64* %x.addr.i, align 8, !dbg !11082
  %3 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %2, i32 %1) #9, !dbg !11081, !srcloc !11066
  store i32 %3, i32* %bitpos.i, align 4, !dbg !11081
  %4 = load i32, i32* %bitpos.i, align 4, !dbg !11083
  %add.i = add i32 %4, 1, !dbg !11084
  %sub = sub i32 %add.i, 1, !dbg !11085
  ret i32 %sub, !dbg !11086
}

; Function Attrs: noredzone
declare dso_local noalias i8* @kmalloc_order(i64, i32, i32) #1

; Function Attrs: noredzone
declare dso_local noalias i8* @kmem_cache_alloc(%struct.kmem_cache*, i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kasan_kmalloc(%struct.kmem_cache* %s, i8* %object, i64 %size, i32 %flags) #2 !dbg !11087 {
entry:
  %s.addr = alloca %struct.kmem_cache*, align 8
  %object.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store %struct.kmem_cache* %s, %struct.kmem_cache** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr, metadata !11091, metadata !DIExpression()), !dbg !11092
  store i8* %object, i8** %object.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %object.addr, metadata !11093, metadata !DIExpression()), !dbg !11094
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !11095, metadata !DIExpression()), !dbg !11096
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !11097, metadata !DIExpression()), !dbg !11098
  %0 = load i8*, i8** %object.addr, align 8, !dbg !11099
  ret i8* %0, !dbg !11100
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @dev_name(%struct.device* %dev) #2 !dbg !11101 {
entry:
  %retval = alloca i8*, align 8
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !11104, metadata !DIExpression()), !dbg !11105
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11106
  %init_name = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 3, !dbg !11108
  %1 = load i8*, i8** %init_name, align 8, !dbg !11108
  %tobool = icmp ne i8* %1, null, !dbg !11106
  br i1 %tobool, label %if.then, label %if.end, !dbg !11109

if.then:                                          ; preds = %entry
  %2 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11110
  %init_name1 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 3, !dbg !11111
  %3 = load i8*, i8** %init_name1, align 8, !dbg !11111
  store i8* %3, i8** %retval, align 8, !dbg !11112
  br label %return, !dbg !11112

if.end:                                           ; preds = %entry
  %4 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11113
  %kobj = getelementptr inbounds %struct.device, %struct.device* %4, i32 0, i32 0, !dbg !11114
  %call = call i8* @kobject_name(%struct.kobject* %kobj) #14, !dbg !11115
  store i8* %call, i8** %retval, align 8, !dbg !11116
  br label %return, !dbg !11116

return:                                           ; preds = %if.end, %if.then
  %5 = load i8*, i8** %retval, align 8, !dbg !11117
  ret i8* %5, !dbg !11117
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kobject_name(%struct.kobject* %kobj) #2 !dbg !11118 {
entry:
  %kobj.addr = alloca %struct.kobject*, align 8
  store %struct.kobject* %kobj, %struct.kobject** %kobj.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kobject** %kobj.addr, metadata !11123, metadata !DIExpression()), !dbg !11124
  %0 = load %struct.kobject*, %struct.kobject** %kobj.addr, align 8, !dbg !11125
  %name = getelementptr inbounds %struct.kobject, %struct.kobject* %0, i32 0, i32 0, !dbg !11126
  %1 = load i8*, i8** %name, align 8, !dbg !11126
  ret i8* %1, !dbg !11127
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @netif_running(%struct.net_device* %dev) #2 !dbg !11128 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !11131, metadata !DIExpression()), !dbg !11132
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11133
  %state = getelementptr inbounds %struct.net_device, %struct.net_device* %0, i32 0, i32 7, !dbg !11134
  %call = call zeroext i1 @test_bit(i64 0, i64* %state) #14, !dbg !11135
  ret i1 %call, !dbg !11136
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @netdev_priv(%struct.net_device* %dev) #2 !dbg !11137 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !11140, metadata !DIExpression()), !dbg !11141
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11142
  %1 = bitcast %struct.net_device* %0 to i8*, !dbg !11143
  %add.ptr = getelementptr i8, i8* %1, i64 1984, !dbg !11144
  ret i8* %add.ptr, !dbg !11145
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @is_genesis(%struct.skge_hw* %hw) #2 !dbg !11146 {
entry:
  %hw.addr = alloca %struct.skge_hw*, align 8
  store %struct.skge_hw* %hw, %struct.skge_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.skge_hw** %hw.addr, metadata !11149, metadata !DIExpression()), !dbg !11150
  ret i1 false, !dbg !11151
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @yukon_phy_intr(%struct.skge_port* %skge) #2 !dbg !11152 {
entry:
  %skge.addr = alloca %struct.skge_port*, align 8
  %hw = alloca %struct.skge_hw*, align 8
  %port = alloca i32, align 4
  %reason = alloca i8*, align 8
  %istatus = alloca i16, align 2
  %phystat = alloca i16, align 2
  store %struct.skge_port* %skge, %struct.skge_port** %skge.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.skge_port** %skge.addr, metadata !11153, metadata !DIExpression()), !dbg !11154
  call void @llvm.dbg.declare(metadata %struct.skge_hw** %hw, metadata !11155, metadata !DIExpression()), !dbg !11156
  %0 = load %struct.skge_port*, %struct.skge_port** %skge.addr, align 8, !dbg !11157
  %hw1 = getelementptr inbounds %struct.skge_port, %struct.skge_port* %0, i32 0, i32 0, !dbg !11158
  %1 = load %struct.skge_hw*, %struct.skge_hw** %hw1, align 8, !dbg !11158
  store %struct.skge_hw* %1, %struct.skge_hw** %hw, align 8, !dbg !11156
  call void @llvm.dbg.declare(metadata i32* %port, metadata !11159, metadata !DIExpression()), !dbg !11160
  %2 = load %struct.skge_port*, %struct.skge_port** %skge.addr, align 8, !dbg !11161
  %port2 = getelementptr inbounds %struct.skge_port, %struct.skge_port* %2, i32 0, i32 3, !dbg !11162
  %3 = load i32, i32* %port2, align 8, !dbg !11162
  store i32 %3, i32* %port, align 4, !dbg !11160
  call void @llvm.dbg.declare(metadata i8** %reason, metadata !11163, metadata !DIExpression()), !dbg !11164
  store i8* null, i8** %reason, align 8, !dbg !11164
  call void @llvm.dbg.declare(metadata i16* %istatus, metadata !11165, metadata !DIExpression()), !dbg !11166
  call void @llvm.dbg.declare(metadata i16* %phystat, metadata !11167, metadata !DIExpression()), !dbg !11168
  %4 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !11169
  %5 = load i32, i32* %port, align 4, !dbg !11170
  %call = call zeroext i16 @gm_phy_read(%struct.skge_hw* %4, i32 %5, i16 zeroext 19) #14, !dbg !11171
  store i16 %call, i16* %istatus, align 2, !dbg !11172
  %6 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !11173
  %7 = load i32, i32* %port, align 4, !dbg !11174
  %call3 = call zeroext i16 @gm_phy_read(%struct.skge_hw* %6, i32 %7, i16 zeroext 17) #14, !dbg !11175
  store i16 %call3, i16* %phystat, align 2, !dbg !11176
  br label %do.body, !dbg !11177

do.body:                                          ; preds = %entry
  %8 = load %struct.skge_port*, %struct.skge_port** %skge.addr, align 8, !dbg !11178
  %msg_enable = getelementptr inbounds %struct.skge_port, %struct.skge_port* %8, i32 0, i32 4, !dbg !11178
  %9 = load i32, i32* %msg_enable, align 4, !dbg !11178
  %and = and i32 %9, 512, !dbg !11178
  %tobool = icmp ne i32 %and, 0, !dbg !11178
  br i1 %tobool, label %if.then, label %if.end, !dbg !11181

if.then:                                          ; preds = %do.body
  %10 = load %struct.skge_port*, %struct.skge_port** %skge.addr, align 8, !dbg !11178
  %netdev = getelementptr inbounds %struct.skge_port, %struct.skge_port* %10, i32 0, i32 1, !dbg !11178
  %11 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !11178
  %12 = load i16, i16* %istatus, align 2, !dbg !11178
  %conv = zext i16 %12 to i32, !dbg !11178
  %13 = load i16, i16* %phystat, align 2, !dbg !11178
  %conv4 = zext i16 %13 to i32, !dbg !11178
  call void (i8*, %struct.net_device*, i8*, ...) @netdev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.14, i64 0, i64 0), %struct.net_device* %11, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.15, i64 0, i64 0), i32 %conv, i32 %conv4) #15, !dbg !11178
  br label %if.end, !dbg !11178

if.end:                                           ; preds = %if.then, %do.body
  br label %do.end, !dbg !11181

do.end:                                           ; preds = %if.end
  %14 = load i16, i16* %istatus, align 2, !dbg !11182
  %conv5 = zext i16 %14 to i32, !dbg !11182
  %and6 = and i32 %conv5, 2048, !dbg !11184
  %tobool7 = icmp ne i32 %and6, 0, !dbg !11184
  br i1 %tobool7, label %if.then8, label %if.end52, !dbg !11185

if.then8:                                         ; preds = %do.end
  %15 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !11186
  %16 = load i32, i32* %port, align 4, !dbg !11189
  %call9 = call zeroext i16 @gm_phy_read(%struct.skge_hw* %15, i32 %16, i16 zeroext 5) #14, !dbg !11190
  %conv10 = zext i16 %call9 to i32, !dbg !11190
  %and11 = and i32 %conv10, 8192, !dbg !11191
  %tobool12 = icmp ne i32 %and11, 0, !dbg !11191
  br i1 %tobool12, label %if.then13, label %if.end14, !dbg !11192

if.then13:                                        ; preds = %if.then8
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.16, i64 0, i64 0), i8** %reason, align 8, !dbg !11193
  br label %failed, !dbg !11195

if.end14:                                         ; preds = %if.then8
  %17 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !11196
  %18 = load i32, i32* %port, align 4, !dbg !11198
  %call15 = call zeroext i16 @gm_phy_read(%struct.skge_hw* %17, i32 %18, i16 zeroext 10) #14, !dbg !11199
  %conv16 = zext i16 %call15 to i32, !dbg !11199
  %and17 = and i32 %conv16, 32768, !dbg !11200
  %tobool18 = icmp ne i32 %and17, 0, !dbg !11200
  br i1 %tobool18, label %if.then19, label %if.end20, !dbg !11201

if.then19:                                        ; preds = %if.end14
  store i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.17, i64 0, i64 0), i8** %reason, align 8, !dbg !11202
  br label %failed, !dbg !11204

if.end20:                                         ; preds = %if.end14
  %19 = load i16, i16* %phystat, align 2, !dbg !11205
  %conv21 = zext i16 %19 to i32, !dbg !11205
  %and22 = and i32 %conv21, 2048, !dbg !11207
  %tobool23 = icmp ne i32 %and22, 0, !dbg !11207
  br i1 %tobool23, label %if.end25, label %if.then24, !dbg !11208

if.then24:                                        ; preds = %if.end20
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.18, i64 0, i64 0), i8** %reason, align 8, !dbg !11209
  br label %failed, !dbg !11211

if.end25:                                         ; preds = %if.end20
  %20 = load i16, i16* %phystat, align 2, !dbg !11212
  %conv26 = zext i16 %20 to i32, !dbg !11212
  %and27 = and i32 %conv26, 8192, !dbg !11213
  %tobool28 = icmp ne i32 %and27, 0, !dbg !11214
  %21 = zext i1 %tobool28 to i64, !dbg !11214
  %cond = select i1 %tobool28, i32 1, i32 0, !dbg !11214
  %conv29 = trunc i32 %cond to i8, !dbg !11214
  %22 = load %struct.skge_port*, %struct.skge_port** %skge.addr, align 8, !dbg !11215
  %duplex = getelementptr inbounds %struct.skge_port, %struct.skge_port* %22, i32 0, i32 14, !dbg !11216
  store i8 %conv29, i8* %duplex, align 1, !dbg !11217
  %23 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !11218
  %24 = load i16, i16* %phystat, align 2, !dbg !11219
  %call30 = call zeroext i16 @yukon_speed(%struct.skge_hw* %23, i16 zeroext %24) #14, !dbg !11220
  %25 = load %struct.skge_port*, %struct.skge_port** %skge.addr, align 8, !dbg !11221
  %speed = getelementptr inbounds %struct.skge_port, %struct.skge_port* %25, i32 0, i32 15, !dbg !11222
  store i16 %call30, i16* %speed, align 4, !dbg !11223
  %26 = load i16, i16* %phystat, align 2, !dbg !11224
  %conv31 = zext i16 %26 to i32, !dbg !11224
  %and32 = and i32 %conv31, 12, !dbg !11225
  switch i32 %and32, label %sw.default [
    i32 12, label %sw.bb
    i32 4, label %sw.bb33
    i32 8, label %sw.bb35
  ], !dbg !11226

sw.bb:                                            ; preds = %if.end25
  %27 = load %struct.skge_port*, %struct.skge_port** %skge.addr, align 8, !dbg !11227
  %flow_status = getelementptr inbounds %struct.skge_port, %struct.skge_port* %27, i32 0, i32 10, !dbg !11229
  store i32 4, i32* %flow_status, align 4, !dbg !11230
  br label %sw.epilog, !dbg !11231

sw.bb33:                                          ; preds = %if.end25
  %28 = load %struct.skge_port*, %struct.skge_port** %skge.addr, align 8, !dbg !11232
  %flow_status34 = getelementptr inbounds %struct.skge_port, %struct.skge_port* %28, i32 0, i32 10, !dbg !11233
  store i32 2, i32* %flow_status34, align 4, !dbg !11234
  br label %sw.epilog, !dbg !11235

sw.bb35:                                          ; preds = %if.end25
  %29 = load %struct.skge_port*, %struct.skge_port** %skge.addr, align 8, !dbg !11236
  %flow_status36 = getelementptr inbounds %struct.skge_port, %struct.skge_port* %29, i32 0, i32 10, !dbg !11237
  store i32 3, i32* %flow_status36, align 4, !dbg !11238
  br label %sw.epilog, !dbg !11239

sw.default:                                       ; preds = %if.end25
  %30 = load %struct.skge_port*, %struct.skge_port** %skge.addr, align 8, !dbg !11240
  %flow_status37 = getelementptr inbounds %struct.skge_port, %struct.skge_port* %30, i32 0, i32 10, !dbg !11241
  store i32 1, i32* %flow_status37, align 4, !dbg !11242
  br label %sw.epilog, !dbg !11243

sw.epilog:                                        ; preds = %sw.default, %sw.bb35, %sw.bb33, %sw.bb
  %31 = load %struct.skge_port*, %struct.skge_port** %skge.addr, align 8, !dbg !11244
  %flow_status38 = getelementptr inbounds %struct.skge_port, %struct.skge_port* %31, i32 0, i32 10, !dbg !11246
  %32 = load i32, i32* %flow_status38, align 4, !dbg !11246
  %cmp = icmp eq i32 %32, 1, !dbg !11247
  br i1 %cmp, label %if.then48, label %lor.lhs.false, !dbg !11248

lor.lhs.false:                                    ; preds = %sw.epilog
  %33 = load %struct.skge_port*, %struct.skge_port** %skge.addr, align 8, !dbg !11249
  %speed40 = getelementptr inbounds %struct.skge_port, %struct.skge_port* %33, i32 0, i32 15, !dbg !11250
  %34 = load i16, i16* %speed40, align 4, !dbg !11250
  %conv41 = zext i16 %34 to i32, !dbg !11249
  %cmp42 = icmp slt i32 %conv41, 1000, !dbg !11251
  br i1 %cmp42, label %land.lhs.true, label %if.else, !dbg !11252

land.lhs.true:                                    ; preds = %lor.lhs.false
  %35 = load %struct.skge_port*, %struct.skge_port** %skge.addr, align 8, !dbg !11253
  %duplex44 = getelementptr inbounds %struct.skge_port, %struct.skge_port* %35, i32 0, i32 14, !dbg !11254
  %36 = load i8, i8* %duplex44, align 1, !dbg !11254
  %conv45 = zext i8 %36 to i32, !dbg !11253
  %cmp46 = icmp eq i32 %conv45, 0, !dbg !11255
  br i1 %cmp46, label %if.then48, label %if.else, !dbg !11256

if.then48:                                        ; preds = %land.lhs.true, %sw.epilog
  %37 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !11257
  %38 = load i32, i32* %port, align 4, !dbg !11258
  %shl = shl i32 %38, 7, !dbg !11258
  %add = add i32 %shl, 3840, !dbg !11258
  call void @skge_write8(%struct.skge_hw* %37, i32 %add, i8 zeroext 4) #14, !dbg !11259
  br label %if.end51, !dbg !11259

if.else:                                          ; preds = %land.lhs.true, %lor.lhs.false
  %39 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !11260
  %40 = load i32, i32* %port, align 4, !dbg !11261
  %shl49 = shl i32 %40, 7, !dbg !11261
  %add50 = add i32 %shl49, 3840, !dbg !11261
  call void @skge_write8(%struct.skge_hw* %39, i32 %add50, i8 zeroext 8) #14, !dbg !11262
  br label %if.end51

if.end51:                                         ; preds = %if.else, %if.then48
  %41 = load %struct.skge_port*, %struct.skge_port** %skge.addr, align 8, !dbg !11263
  call void @yukon_link_up(%struct.skge_port* %41) #14, !dbg !11264
  br label %return, !dbg !11265

if.end52:                                         ; preds = %do.end
  %42 = load i16, i16* %istatus, align 2, !dbg !11266
  %conv53 = zext i16 %42 to i32, !dbg !11266
  %and54 = and i32 %conv53, 16384, !dbg !11268
  %tobool55 = icmp ne i32 %and54, 0, !dbg !11268
  br i1 %tobool55, label %if.then56, label %if.end59, !dbg !11269

if.then56:                                        ; preds = %if.end52
  %43 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !11270
  %44 = load i16, i16* %phystat, align 2, !dbg !11271
  %call57 = call zeroext i16 @yukon_speed(%struct.skge_hw* %43, i16 zeroext %44) #14, !dbg !11272
  %45 = load %struct.skge_port*, %struct.skge_port** %skge.addr, align 8, !dbg !11273
  %speed58 = getelementptr inbounds %struct.skge_port, %struct.skge_port* %45, i32 0, i32 15, !dbg !11274
  store i16 %call57, i16* %speed58, align 4, !dbg !11275
  br label %if.end59, !dbg !11273

if.end59:                                         ; preds = %if.then56, %if.end52
  %46 = load i16, i16* %istatus, align 2, !dbg !11276
  %conv60 = zext i16 %46 to i32, !dbg !11276
  %and61 = and i32 %conv60, 8192, !dbg !11278
  %tobool62 = icmp ne i32 %and61, 0, !dbg !11278
  br i1 %tobool62, label %if.then63, label %if.end70, !dbg !11279

if.then63:                                        ; preds = %if.end59
  %47 = load i16, i16* %phystat, align 2, !dbg !11280
  %conv64 = zext i16 %47 to i32, !dbg !11280
  %and65 = and i32 %conv64, 8192, !dbg !11281
  %tobool66 = icmp ne i32 %and65, 0, !dbg !11282
  %48 = zext i1 %tobool66 to i64, !dbg !11282
  %cond67 = select i1 %tobool66, i32 1, i32 0, !dbg !11282
  %conv68 = trunc i32 %cond67 to i8, !dbg !11282
  %49 = load %struct.skge_port*, %struct.skge_port** %skge.addr, align 8, !dbg !11283
  %duplex69 = getelementptr inbounds %struct.skge_port, %struct.skge_port* %49, i32 0, i32 14, !dbg !11284
  store i8 %conv68, i8* %duplex69, align 1, !dbg !11285
  br label %if.end70, !dbg !11283

if.end70:                                         ; preds = %if.then63, %if.end59
  %50 = load i16, i16* %istatus, align 2, !dbg !11286
  %conv71 = zext i16 %50 to i32, !dbg !11286
  %and72 = and i32 %conv71, 1024, !dbg !11288
  %tobool73 = icmp ne i32 %and72, 0, !dbg !11288
  br i1 %tobool73, label %if.then74, label %if.end81, !dbg !11289

if.then74:                                        ; preds = %if.end70
  %51 = load i16, i16* %phystat, align 2, !dbg !11290
  %conv75 = zext i16 %51 to i32, !dbg !11290
  %and76 = and i32 %conv75, 1024, !dbg !11293
  %tobool77 = icmp ne i32 %and76, 0, !dbg !11293
  br i1 %tobool77, label %if.then78, label %if.else79, !dbg !11294

if.then78:                                        ; preds = %if.then74
  %52 = load %struct.skge_port*, %struct.skge_port** %skge.addr, align 8, !dbg !11295
  call void @yukon_link_up(%struct.skge_port* %52) #14, !dbg !11296
  br label %if.end80, !dbg !11296

if.else79:                                        ; preds = %if.then74
  %53 = load %struct.skge_port*, %struct.skge_port** %skge.addr, align 8, !dbg !11297
  call void @yukon_link_down(%struct.skge_port* %53) #14, !dbg !11298
  br label %if.end80

if.end80:                                         ; preds = %if.else79, %if.then78
  br label %if.end81, !dbg !11299

if.end81:                                         ; preds = %if.end80, %if.end70
  br label %return, !dbg !11300

failed:                                           ; preds = %if.then24, %if.then19, %if.then13
  call void @llvm.dbg.label(metadata !11301), !dbg !11302
  %54 = load %struct.skge_port*, %struct.skge_port** %skge.addr, align 8, !dbg !11303
  %netdev82 = getelementptr inbounds %struct.skge_port, %struct.skge_port* %54, i32 0, i32 1, !dbg !11303
  %55 = load %struct.net_device*, %struct.net_device** %netdev82, align 8, !dbg !11303
  %name = getelementptr inbounds %struct.net_device, %struct.net_device* %55, i32 0, i32 0, !dbg !11303
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %name, i64 0, i64 0, !dbg !11303
  %56 = load i8*, i8** %reason, align 8, !dbg !11303
  %call83 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.19, i64 0, i64 0), i8* %arraydecay, i8* %56) #15, !dbg !11303
  br label %return, !dbg !11304

return:                                           ; preds = %failed, %if.end81, %if.end51
  ret void, !dbg !11304
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @bcom_phy_intr(%struct.skge_port* %skge) #2 !dbg !11305 {
entry:
  %skge.addr = alloca %struct.skge_port*, align 8
  %hw = alloca %struct.skge_hw*, align 8
  %port = alloca i32, align 4
  %isrc = alloca i16, align 2
  %ctrl = alloca i16, align 2
  store %struct.skge_port* %skge, %struct.skge_port** %skge.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.skge_port** %skge.addr, metadata !11306, metadata !DIExpression()), !dbg !11307
  call void @llvm.dbg.declare(metadata %struct.skge_hw** %hw, metadata !11308, metadata !DIExpression()), !dbg !11309
  %0 = load %struct.skge_port*, %struct.skge_port** %skge.addr, align 8, !dbg !11310
  %hw1 = getelementptr inbounds %struct.skge_port, %struct.skge_port* %0, i32 0, i32 0, !dbg !11311
  %1 = load %struct.skge_hw*, %struct.skge_hw** %hw1, align 8, !dbg !11311
  store %struct.skge_hw* %1, %struct.skge_hw** %hw, align 8, !dbg !11309
  call void @llvm.dbg.declare(metadata i32* %port, metadata !11312, metadata !DIExpression()), !dbg !11313
  %2 = load %struct.skge_port*, %struct.skge_port** %skge.addr, align 8, !dbg !11314
  %port2 = getelementptr inbounds %struct.skge_port, %struct.skge_port* %2, i32 0, i32 3, !dbg !11315
  %3 = load i32, i32* %port2, align 8, !dbg !11315
  store i32 %3, i32* %port, align 4, !dbg !11313
  call void @llvm.dbg.declare(metadata i16* %isrc, metadata !11316, metadata !DIExpression()), !dbg !11317
  %4 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !11318
  %5 = load i32, i32* %port, align 4, !dbg !11319
  %call = call zeroext i16 @xm_phy_read(%struct.skge_hw* %4, i32 %5, i16 zeroext 26) #14, !dbg !11320
  store i16 %call, i16* %isrc, align 2, !dbg !11321
  br label %do.body, !dbg !11322

do.body:                                          ; preds = %entry
  %6 = load %struct.skge_port*, %struct.skge_port** %skge.addr, align 8, !dbg !11323
  %msg_enable = getelementptr inbounds %struct.skge_port, %struct.skge_port* %6, i32 0, i32 4, !dbg !11323
  %7 = load i32, i32* %msg_enable, align 4, !dbg !11323
  %and = and i32 %7, 512, !dbg !11323
  %tobool = icmp ne i32 %and, 0, !dbg !11323
  br i1 %tobool, label %if.then, label %if.end, !dbg !11326

if.then:                                          ; preds = %do.body
  %8 = load %struct.skge_port*, %struct.skge_port** %skge.addr, align 8, !dbg !11323
  %netdev = getelementptr inbounds %struct.skge_port, %struct.skge_port* %8, i32 0, i32 1, !dbg !11323
  %9 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !11323
  %10 = load i16, i16* %isrc, align 2, !dbg !11323
  %conv = zext i16 %10 to i32, !dbg !11323
  call void (i8*, %struct.net_device*, i8*, ...) @netdev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.14, i64 0, i64 0), %struct.net_device* %9, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.31, i64 0, i64 0), i32 %conv) #15, !dbg !11323
  br label %if.end, !dbg !11323

if.end:                                           ; preds = %if.then, %do.body
  br label %do.end, !dbg !11326

do.end:                                           ; preds = %if.end
  %11 = load i16, i16* %isrc, align 2, !dbg !11327
  %conv3 = zext i16 %11 to i32, !dbg !11327
  %and4 = and i32 %conv3, 16384, !dbg !11329
  %tobool5 = icmp ne i32 %and4, 0, !dbg !11329
  br i1 %tobool5, label %if.then6, label %if.end8, !dbg !11330

if.then6:                                         ; preds = %do.end
  %12 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !11331
  %dev = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %12, i32 0, i32 4, !dbg !11331
  %13 = load i32, i32* %port, align 4, !dbg !11331
  %idxprom = sext i32 %13 to i64, !dbg !11331
  %arrayidx = getelementptr [2 x %struct.net_device*], [2 x %struct.net_device*]* %dev, i64 0, i64 %idxprom, !dbg !11331
  %14 = load %struct.net_device*, %struct.net_device** %arrayidx, align 8, !dbg !11331
  %name = getelementptr inbounds %struct.net_device, %struct.net_device* %14, i32 0, i32 0, !dbg !11331
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %name, i64 0, i64 0, !dbg !11331
  %call7 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.32, i64 0, i64 0), i8* %arraydecay) #15, !dbg !11331
  br label %if.end8, !dbg !11331

if.end8:                                          ; preds = %if.then6, %do.end
  %15 = load i16, i16* %isrc, align 2, !dbg !11332
  %conv9 = zext i16 %15 to i32, !dbg !11332
  %and10 = and i32 %conv9, 512, !dbg !11334
  %tobool11 = icmp ne i32 %and10, 0, !dbg !11334
  br i1 %tobool11, label %if.then12, label %if.end21, !dbg !11335

if.then12:                                        ; preds = %if.end8
  call void @llvm.dbg.declare(metadata i16* %ctrl, metadata !11336, metadata !DIExpression()), !dbg !11338
  %16 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !11339
  %17 = load i32, i32* %port, align 4, !dbg !11340
  %call13 = call zeroext i16 @xm_phy_read(%struct.skge_hw* %16, i32 %17, i16 zeroext 0) #14, !dbg !11341
  store i16 %call13, i16* %ctrl, align 2, !dbg !11338
  %18 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !11342
  %19 = load i32, i32* %port, align 4, !dbg !11343
  %20 = load i16, i16* %ctrl, align 2, !dbg !11344
  %conv14 = zext i16 %20 to i32, !dbg !11344
  %or = or i32 %conv14, 16384, !dbg !11345
  %conv15 = trunc i32 %or to i16, !dbg !11344
  %call16 = call i32 @xm_phy_write(%struct.skge_hw* %18, i32 %19, i16 zeroext 0, i16 zeroext %conv15) #14, !dbg !11346
  %21 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !11347
  %22 = load i32, i32* %port, align 4, !dbg !11348
  %23 = load i16, i16* %ctrl, align 2, !dbg !11349
  %conv17 = zext i16 %23 to i32, !dbg !11349
  %and18 = and i32 %conv17, -16385, !dbg !11350
  %conv19 = trunc i32 %and18 to i16, !dbg !11349
  %call20 = call i32 @xm_phy_write(%struct.skge_hw* %21, i32 %22, i16 zeroext 0, i16 zeroext %conv19) #14, !dbg !11351
  br label %if.end21, !dbg !11352

if.end21:                                         ; preds = %if.then12, %if.end8
  %24 = load i16, i16* %isrc, align 2, !dbg !11353
  %conv22 = zext i16 %24 to i32, !dbg !11353
  %and23 = and i32 %conv22, 1026, !dbg !11355
  %tobool24 = icmp ne i32 %and23, 0, !dbg !11355
  br i1 %tobool24, label %if.then25, label %if.end26, !dbg !11356

if.then25:                                        ; preds = %if.end21
  %25 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !11357
  %26 = load i32, i32* %port, align 4, !dbg !11358
  call void @bcom_check_link(%struct.skge_hw* %25, i32 %26) #14, !dbg !11359
  br label %if.end26, !dbg !11359

if.end26:                                         ; preds = %if.then25, %if.end21
  ret void, !dbg !11360
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @skge_write32(%struct.skge_hw* %hw, i32 %reg, i32 %val) #2 !dbg !11361 {
entry:
  %hw.addr = alloca %struct.skge_hw*, align 8
  %reg.addr = alloca i32, align 4
  %val.addr = alloca i32, align 4
  store %struct.skge_hw* %hw, %struct.skge_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.skge_hw** %hw.addr, metadata !11364, metadata !DIExpression()), !dbg !11365
  store i32 %reg, i32* %reg.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %reg.addr, metadata !11366, metadata !DIExpression()), !dbg !11367
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !11368, metadata !DIExpression()), !dbg !11369
  %0 = load i32, i32* %val.addr, align 4, !dbg !11370
  %1 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !11371
  %regs = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %1, i32 0, i32 0, !dbg !11372
  %2 = load i8*, i8** %regs, align 8, !dbg !11372
  %3 = load i32, i32* %reg.addr, align 4, !dbg !11373
  %idx.ext = sext i32 %3 to i64, !dbg !11374
  %add.ptr = getelementptr i8, i8* %2, i64 %idx.ext, !dbg !11374
  call void @writel(i32 %0, i8* %add.ptr) #14, !dbg !11375
  ret void, !dbg !11376
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @skge_read32(%struct.skge_hw* %hw, i32 %reg) #2 !dbg !11377 {
entry:
  %hw.addr = alloca %struct.skge_hw*, align 8
  %reg.addr = alloca i32, align 4
  store %struct.skge_hw* %hw, %struct.skge_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.skge_hw** %hw.addr, metadata !11380, metadata !DIExpression()), !dbg !11381
  store i32 %reg, i32* %reg.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %reg.addr, metadata !11382, metadata !DIExpression()), !dbg !11383
  %0 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !11384
  %regs = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %0, i32 0, i32 0, !dbg !11385
  %1 = load i8*, i8** %regs, align 8, !dbg !11385
  %2 = load i32, i32* %reg.addr, align 4, !dbg !11386
  %idx.ext = sext i32 %2 to i64, !dbg !11387
  %add.ptr = getelementptr i8, i8* %1, i64 %idx.ext, !dbg !11387
  %call = call i32 @readl(i8* %add.ptr) #14, !dbg !11388
  ret i32 %call, !dbg !11389
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @test_bit(i64 %nr, i64* %addr) #2 !dbg !11390 {
entry:
  %nr.addr.i3 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i3, metadata !11397, metadata !DIExpression()), !dbg !11399
  %addr.addr.i4 = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i4, metadata !11401, metadata !DIExpression()), !dbg !11402
  %oldbit.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %oldbit.i, metadata !11403, metadata !DIExpression()), !dbg !11404
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !11405, metadata !DIExpression()), !dbg !11407
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !11409, metadata !DIExpression()), !dbg !11410
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !11411, metadata !DIExpression()), !dbg !11419
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !11421, metadata !DIExpression()), !dbg !11422
  %nr.addr = alloca i64, align 8
  %addr.addr = alloca i64*, align 8
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !11423, metadata !DIExpression()), !dbg !11424
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !11425, metadata !DIExpression()), !dbg !11426
  %0 = load i64*, i64** %addr.addr, align 8, !dbg !11427
  %1 = load i64, i64* %nr.addr, align 8, !dbg !11428
  %div = sdiv i64 %1, 64, !dbg !11428
  %add.ptr = getelementptr i64, i64* %0, i64 %div, !dbg !11429
  %2 = bitcast i64* %add.ptr to i8*, !dbg !11427
  store i8* %2, i8** %v.addr.i, align 8
  store i64 8, i64* %size.addr.i, align 8
  %3 = load i8*, i8** %v.addr.i, align 8, !dbg !11430
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !11431
  %conv.i = trunc i64 %4 to i32, !dbg !11431
  %call.i = call zeroext i1 @kasan_check_read(i8* %3, i32 %conv.i) #16, !dbg !11432
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !11433
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !11433
  call void @kcsan_check_access(i8* %5, i64 %6, i32 4) #16, !dbg !11433
  %7 = load i64, i64* %nr.addr, align 8, !dbg !11434
  %8 = call i1 @llvm.is.constant.i64(i64 %7), !dbg !11434
  br i1 %8, label %cond.true, label %cond.false, !dbg !11434

cond.true:                                        ; preds = %entry
  %9 = load i64, i64* %nr.addr, align 8, !dbg !11434
  %10 = load i64*, i64** %addr.addr, align 8, !dbg !11434
  store i64 %9, i64* %nr.addr.i, align 8
  store i64* %10, i64** %addr.addr.i, align 8
  %11 = load i64, i64* %nr.addr.i, align 8, !dbg !11435
  %and.i = and i64 %11, 63, !dbg !11436
  %shl.i = shl i64 1, %and.i, !dbg !11437
  %12 = load i64*, i64** %addr.addr.i, align 8, !dbg !11438
  %13 = load i64, i64* %nr.addr.i, align 8, !dbg !11439
  %shr.i = ashr i64 %13, 6, !dbg !11440
  %arrayidx.i = getelementptr i64, i64* %12, i64 %shr.i, !dbg !11438
  %14 = load volatile i64, i64* %arrayidx.i, align 8, !dbg !11438
  %and1.i = and i64 %shl.i, %14, !dbg !11441
  %cmp.i = icmp ne i64 %and1.i, 0, !dbg !11442
  %conv = zext i1 %cmp.i to i32, !dbg !11434
  br label %cond.end, !dbg !11434

cond.false:                                       ; preds = %entry
  %15 = load i64, i64* %nr.addr, align 8, !dbg !11434
  %16 = load i64*, i64** %addr.addr, align 8, !dbg !11434
  store i64 %15, i64* %nr.addr.i3, align 8
  store i64* %16, i64** %addr.addr.i4, align 8
  %17 = load i64*, i64** %addr.addr.i4, align 8, !dbg !11443
  %18 = load i64, i64* %nr.addr.i3, align 8, !dbg !11444
  %19 = call i8 asm sideeffect " btq  $2,$1\0A\09/* output condition code c*/\0A", "={@ccc},*m,Ir,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %17, i64 %18) #10, !dbg !11445, !srcloc !11446
  store i8 %19, i8* %oldbit.i, align 1, !dbg !11445
  %20 = load i8, i8* %oldbit.i, align 1, !dbg !11447
  %tobool.i = trunc i8 %20 to i1, !dbg !11447
  %conv2 = zext i1 %tobool.i to i32, !dbg !11434
  br label %cond.end, !dbg !11434

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv, %cond.true ], [ %conv2, %cond.false ], !dbg !11434
  %tobool = icmp ne i32 %cond, 0, !dbg !11434
  ret i1 %tobool, !dbg !11448
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @kasan_check_read(i8* %p, i32 %size) #2 !dbg !11449 {
entry:
  %p.addr = alloca i8*, align 8
  %size.addr = alloca i32, align 4
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !11453, metadata !DIExpression()), !dbg !11454
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !11455, metadata !DIExpression()), !dbg !11456
  ret i1 true, !dbg !11457
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @kcsan_check_access(i8* %ptr, i64 %size, i32 %type) #2 !dbg !11458 {
entry:
  %ptr.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %type.addr = alloca i32, align 4
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !11462, metadata !DIExpression()), !dbg !11463
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !11464, metadata !DIExpression()), !dbg !11465
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !11466, metadata !DIExpression()), !dbg !11467
  ret void, !dbg !11468
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i16 @gm_phy_read(%struct.skge_hw* %hw, i32 %port, i16 zeroext %reg) #2 !dbg !11469 {
entry:
  %hw.addr = alloca %struct.skge_hw*, align 8
  %port.addr = alloca i32, align 4
  %reg.addr = alloca i16, align 2
  %v = alloca i16, align 2
  store %struct.skge_hw* %hw, %struct.skge_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.skge_hw** %hw.addr, metadata !11472, metadata !DIExpression()), !dbg !11473
  store i32 %port, i32* %port.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %port.addr, metadata !11474, metadata !DIExpression()), !dbg !11475
  store i16 %reg, i16* %reg.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %reg.addr, metadata !11476, metadata !DIExpression()), !dbg !11477
  call void @llvm.dbg.declare(metadata i16* %v, metadata !11478, metadata !DIExpression()), !dbg !11479
  store i16 0, i16* %v, align 2, !dbg !11479
  %0 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !11480
  %1 = load i32, i32* %port.addr, align 4, !dbg !11482
  %2 = load i16, i16* %reg.addr, align 2, !dbg !11483
  %call = call i32 @__gm_phy_read(%struct.skge_hw* %0, i32 %1, i16 zeroext %2, i16* %v) #14, !dbg !11484
  %tobool = icmp ne i32 %call, 0, !dbg !11484
  br i1 %tobool, label %if.then, label %if.end, !dbg !11485

if.then:                                          ; preds = %entry
  %3 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !11486
  %dev = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %3, i32 0, i32 4, !dbg !11486
  %4 = load i32, i32* %port.addr, align 4, !dbg !11486
  %idxprom = sext i32 %4 to i64, !dbg !11486
  %arrayidx = getelementptr [2 x %struct.net_device*], [2 x %struct.net_device*]* %dev, i64 0, i64 %idxprom, !dbg !11486
  %5 = load %struct.net_device*, %struct.net_device** %arrayidx, align 8, !dbg !11486
  %name = getelementptr inbounds %struct.net_device, %struct.net_device* %5, i32 0, i32 0, !dbg !11486
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %name, i64 0, i64 0, !dbg !11486
  %call1 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.20, i64 0, i64 0), i8* %arraydecay) #15, !dbg !11486
  br label %if.end, !dbg !11486

if.end:                                           ; preds = %if.then, %entry
  %6 = load i16, i16* %v, align 2, !dbg !11487
  ret i16 %6, !dbg !11488
}

; Function Attrs: cold noredzone
declare dso_local void @netdev_printk(i8*, %struct.net_device*, i8*, ...) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i16 @yukon_speed(%struct.skge_hw* %hw, i16 zeroext %aux) #2 !dbg !11489 {
entry:
  %retval = alloca i16, align 2
  %hw.addr = alloca %struct.skge_hw*, align 8
  %aux.addr = alloca i16, align 2
  store %struct.skge_hw* %hw, %struct.skge_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.skge_hw** %hw.addr, metadata !11492, metadata !DIExpression()), !dbg !11493
  store i16 %aux, i16* %aux.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %aux.addr, metadata !11494, metadata !DIExpression()), !dbg !11495
  %0 = load i16, i16* %aux.addr, align 2, !dbg !11496
  %conv = zext i16 %0 to i32, !dbg !11496
  %and = and i32 %conv, 49152, !dbg !11497
  switch i32 %and, label %sw.default [
    i32 32768, label %sw.bb
    i32 16384, label %sw.bb1
  ], !dbg !11498

sw.bb:                                            ; preds = %entry
  store i16 1000, i16* %retval, align 2, !dbg !11499
  br label %return, !dbg !11499

sw.bb1:                                           ; preds = %entry
  store i16 100, i16* %retval, align 2, !dbg !11501
  br label %return, !dbg !11501

sw.default:                                       ; preds = %entry
  store i16 10, i16* %retval, align 2, !dbg !11502
  br label %return, !dbg !11502

return:                                           ; preds = %sw.default, %sw.bb1, %sw.bb
  %1 = load i16, i16* %retval, align 2, !dbg !11503
  ret i16 %1, !dbg !11503
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @skge_write8(%struct.skge_hw* %hw, i32 %reg, i8 zeroext %val) #2 !dbg !11504 {
entry:
  %hw.addr = alloca %struct.skge_hw*, align 8
  %reg.addr = alloca i32, align 4
  %val.addr = alloca i8, align 1
  store %struct.skge_hw* %hw, %struct.skge_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.skge_hw** %hw.addr, metadata !11507, metadata !DIExpression()), !dbg !11508
  store i32 %reg, i32* %reg.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %reg.addr, metadata !11509, metadata !DIExpression()), !dbg !11510
  store i8 %val, i8* %val.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %val.addr, metadata !11511, metadata !DIExpression()), !dbg !11512
  %0 = load i8, i8* %val.addr, align 1, !dbg !11513
  %1 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !11514
  %regs = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %1, i32 0, i32 0, !dbg !11515
  %2 = load i8*, i8** %regs, align 8, !dbg !11515
  %3 = load i32, i32* %reg.addr, align 4, !dbg !11516
  %idx.ext = sext i32 %3 to i64, !dbg !11517
  %add.ptr = getelementptr i8, i8* %2, i64 %idx.ext, !dbg !11517
  call void @writeb(i8 zeroext %0, i8* %add.ptr) #14, !dbg !11518
  ret void, !dbg !11519
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @yukon_link_up(%struct.skge_port* %skge) #2 !dbg !11520 {
entry:
  %skge.addr = alloca %struct.skge_port*, align 8
  %hw = alloca %struct.skge_hw*, align 8
  %port = alloca i32, align 4
  %reg = alloca i16, align 2
  store %struct.skge_port* %skge, %struct.skge_port** %skge.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.skge_port** %skge.addr, metadata !11521, metadata !DIExpression()), !dbg !11522
  call void @llvm.dbg.declare(metadata %struct.skge_hw** %hw, metadata !11523, metadata !DIExpression()), !dbg !11524
  %0 = load %struct.skge_port*, %struct.skge_port** %skge.addr, align 8, !dbg !11525
  %hw1 = getelementptr inbounds %struct.skge_port, %struct.skge_port* %0, i32 0, i32 0, !dbg !11526
  %1 = load %struct.skge_hw*, %struct.skge_hw** %hw1, align 8, !dbg !11526
  store %struct.skge_hw* %1, %struct.skge_hw** %hw, align 8, !dbg !11524
  call void @llvm.dbg.declare(metadata i32* %port, metadata !11527, metadata !DIExpression()), !dbg !11528
  %2 = load %struct.skge_port*, %struct.skge_port** %skge.addr, align 8, !dbg !11529
  %port2 = getelementptr inbounds %struct.skge_port, %struct.skge_port* %2, i32 0, i32 3, !dbg !11530
  %3 = load i32, i32* %port2, align 8, !dbg !11530
  store i32 %3, i32* %port, align 4, !dbg !11528
  call void @llvm.dbg.declare(metadata i16* %reg, metadata !11531, metadata !DIExpression()), !dbg !11532
  %4 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !11533
  %5 = load i32, i32* %port, align 4, !dbg !11534
  %shl = shl i32 %5, 7, !dbg !11534
  %add = add i32 %shl, 3852, !dbg !11534
  call void @skge_write8(%struct.skge_hw* %4, i32 %add, i8 zeroext 10) #14, !dbg !11535
  %6 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !11536
  %7 = load i32, i32* %port, align 4, !dbg !11537
  %call = call zeroext i16 @gma_read16(%struct.skge_hw* %6, i32 %7, i32 4) #14, !dbg !11538
  store i16 %call, i16* %reg, align 2, !dbg !11539
  %8 = load %struct.skge_port*, %struct.skge_port** %skge.addr, align 8, !dbg !11540
  %duplex = getelementptr inbounds %struct.skge_port, %struct.skge_port* %8, i32 0, i32 14, !dbg !11542
  %9 = load i8, i8* %duplex, align 1, !dbg !11542
  %conv = zext i8 %9 to i32, !dbg !11540
  %cmp = icmp eq i32 %conv, 1, !dbg !11543
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !11544

lor.lhs.false:                                    ; preds = %entry
  %10 = load %struct.skge_port*, %struct.skge_port** %skge.addr, align 8, !dbg !11545
  %autoneg = getelementptr inbounds %struct.skge_port, %struct.skge_port* %10, i32 0, i32 13, !dbg !11546
  %11 = load i8, i8* %autoneg, align 2, !dbg !11546
  %conv4 = zext i8 %11 to i32, !dbg !11545
  %cmp5 = icmp eq i32 %conv4, 1, !dbg !11547
  br i1 %cmp5, label %if.then, label %if.end, !dbg !11548

if.then:                                          ; preds = %lor.lhs.false, %entry
  %12 = load i16, i16* %reg, align 2, !dbg !11549
  %conv7 = zext i16 %12 to i32, !dbg !11549
  %or = or i32 %conv7, 32, !dbg !11549
  %conv8 = trunc i32 %or to i16, !dbg !11549
  store i16 %conv8, i16* %reg, align 2, !dbg !11549
  br label %if.end, !dbg !11550

if.end:                                           ; preds = %if.then, %lor.lhs.false
  %13 = load i16, i16* %reg, align 2, !dbg !11551
  %conv9 = zext i16 %13 to i32, !dbg !11551
  %or10 = or i32 %conv9, 6144, !dbg !11551
  %conv11 = trunc i32 %or10 to i16, !dbg !11551
  store i16 %conv11, i16* %reg, align 2, !dbg !11551
  %14 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !11552
  %15 = load i32, i32* %port, align 4, !dbg !11553
  %16 = load i16, i16* %reg, align 2, !dbg !11554
  call void @gma_write16(%struct.skge_hw* %14, i32 %15, i32 4, i16 zeroext %16) #14, !dbg !11555
  %17 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !11556
  %18 = load i32, i32* %port, align 4, !dbg !11557
  %call12 = call i32 @gm_phy_write(%struct.skge_hw* %17, i32 %18, i16 zeroext 18, i16 zeroext -15232) #14, !dbg !11558
  %19 = load %struct.skge_port*, %struct.skge_port** %skge.addr, align 8, !dbg !11559
  call void @skge_link_up(%struct.skge_port* %19) #14, !dbg !11560
  ret void, !dbg !11561
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @yukon_link_down(%struct.skge_port* %skge) #2 !dbg !11562 {
entry:
  %skge.addr = alloca %struct.skge_port*, align 8
  %hw = alloca %struct.skge_hw*, align 8
  %port = alloca i32, align 4
  %ctrl = alloca i16, align 2
  store %struct.skge_port* %skge, %struct.skge_port** %skge.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.skge_port** %skge.addr, metadata !11563, metadata !DIExpression()), !dbg !11564
  call void @llvm.dbg.declare(metadata %struct.skge_hw** %hw, metadata !11565, metadata !DIExpression()), !dbg !11566
  %0 = load %struct.skge_port*, %struct.skge_port** %skge.addr, align 8, !dbg !11567
  %hw1 = getelementptr inbounds %struct.skge_port, %struct.skge_port* %0, i32 0, i32 0, !dbg !11568
  %1 = load %struct.skge_hw*, %struct.skge_hw** %hw1, align 8, !dbg !11568
  store %struct.skge_hw* %1, %struct.skge_hw** %hw, align 8, !dbg !11566
  call void @llvm.dbg.declare(metadata i32* %port, metadata !11569, metadata !DIExpression()), !dbg !11570
  %2 = load %struct.skge_port*, %struct.skge_port** %skge.addr, align 8, !dbg !11571
  %port2 = getelementptr inbounds %struct.skge_port, %struct.skge_port* %2, i32 0, i32 3, !dbg !11572
  %3 = load i32, i32* %port2, align 8, !dbg !11572
  store i32 %3, i32* %port, align 4, !dbg !11570
  call void @llvm.dbg.declare(metadata i16* %ctrl, metadata !11573, metadata !DIExpression()), !dbg !11574
  %4 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !11575
  %5 = load i32, i32* %port, align 4, !dbg !11576
  %call = call zeroext i16 @gma_read16(%struct.skge_hw* %4, i32 %5, i32 4) #14, !dbg !11577
  store i16 %call, i16* %ctrl, align 2, !dbg !11578
  %6 = load i16, i16* %ctrl, align 2, !dbg !11579
  %conv = zext i16 %6 to i32, !dbg !11579
  %and = and i32 %conv, -6145, !dbg !11579
  %conv3 = trunc i32 %and to i16, !dbg !11579
  store i16 %conv3, i16* %ctrl, align 2, !dbg !11579
  %7 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !11580
  %8 = load i32, i32* %port, align 4, !dbg !11581
  %9 = load i16, i16* %ctrl, align 2, !dbg !11582
  call void @gma_write16(%struct.skge_hw* %7, i32 %8, i32 4, i16 zeroext %9) #14, !dbg !11583
  %10 = load %struct.skge_port*, %struct.skge_port** %skge.addr, align 8, !dbg !11584
  %flow_status = getelementptr inbounds %struct.skge_port, %struct.skge_port* %10, i32 0, i32 10, !dbg !11586
  %11 = load i32, i32* %flow_status, align 4, !dbg !11586
  %cmp = icmp eq i32 %11, 2, !dbg !11587
  br i1 %cmp, label %if.then, label %if.end, !dbg !11588

if.then:                                          ; preds = %entry
  %12 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !11589
  %13 = load i32, i32* %port, align 4, !dbg !11591
  %call5 = call zeroext i16 @gm_phy_read(%struct.skge_hw* %12, i32 %13, i16 zeroext 4) #14, !dbg !11592
  store i16 %call5, i16* %ctrl, align 2, !dbg !11593
  %14 = load i16, i16* %ctrl, align 2, !dbg !11594
  %conv6 = zext i16 %14 to i32, !dbg !11594
  %or = or i32 %conv6, 2048, !dbg !11594
  %conv7 = trunc i32 %or to i16, !dbg !11594
  store i16 %conv7, i16* %ctrl, align 2, !dbg !11594
  %15 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !11595
  %16 = load i32, i32* %port, align 4, !dbg !11596
  %17 = load i16, i16* %ctrl, align 2, !dbg !11597
  %call8 = call i32 @gm_phy_write(%struct.skge_hw* %15, i32 %16, i16 zeroext 4, i16 zeroext %17) #14, !dbg !11598
  br label %if.end, !dbg !11599

if.end:                                           ; preds = %if.then, %entry
  %18 = load %struct.skge_port*, %struct.skge_port** %skge.addr, align 8, !dbg !11600
  call void @skge_link_down(%struct.skge_port* %18) #14, !dbg !11601
  %19 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !11602
  %20 = load i32, i32* %port, align 4, !dbg !11603
  call void @yukon_init(%struct.skge_hw* %19, i32 %20) #14, !dbg !11604
  ret void, !dbg !11605
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @__gm_phy_read(%struct.skge_hw* %hw, i32 %port, i16 zeroext %reg, i16* %val) #2 !dbg !11606 {
entry:
  %retval = alloca i32, align 4
  %hw.addr = alloca %struct.skge_hw*, align 8
  %port.addr = alloca i32, align 4
  %reg.addr = alloca i16, align 2
  %val.addr = alloca i16*, align 8
  %i = alloca i32, align 4
  store %struct.skge_hw* %hw, %struct.skge_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.skge_hw** %hw.addr, metadata !11610, metadata !DIExpression()), !dbg !11611
  store i32 %port, i32* %port.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %port.addr, metadata !11612, metadata !DIExpression()), !dbg !11613
  store i16 %reg, i16* %reg.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %reg.addr, metadata !11614, metadata !DIExpression()), !dbg !11615
  store i16* %val, i16** %val.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %val.addr, metadata !11616, metadata !DIExpression()), !dbg !11617
  call void @llvm.dbg.declare(metadata i32* %i, metadata !11618, metadata !DIExpression()), !dbg !11619
  %0 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !11620
  %1 = load i32, i32* %port.addr, align 4, !dbg !11621
  %2 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !11622
  %phy_addr = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %2, i32 0, i32 12, !dbg !11622
  %3 = load i16, i16* %phy_addr, align 8, !dbg !11622
  %conv = zext i16 %3 to i32, !dbg !11622
  %shl = shl i32 %conv, 11, !dbg !11622
  %and = and i32 %shl, 63488, !dbg !11622
  %4 = load i16, i16* %reg.addr, align 2, !dbg !11623
  %conv1 = zext i16 %4 to i32, !dbg !11623
  %shl2 = shl i32 %conv1, 6, !dbg !11623
  %and3 = and i32 %shl2, 1984, !dbg !11623
  %or = or i32 %and, %and3, !dbg !11624
  %or4 = or i32 %or, 32, !dbg !11625
  %conv5 = trunc i32 %or4 to i16, !dbg !11622
  call void @gma_write16(%struct.skge_hw* %0, i32 %1, i32 128, i16 zeroext %conv5) #14, !dbg !11626
  store i32 0, i32* %i, align 4, !dbg !11627
  br label %for.cond, !dbg !11629

for.cond:                                         ; preds = %for.inc, %entry
  %5 = load i32, i32* %i, align 4, !dbg !11630
  %cmp = icmp slt i32 %5, 1000, !dbg !11632
  br i1 %cmp, label %for.body, label %for.end, !dbg !11633

for.body:                                         ; preds = %for.cond
  call void @__const_udelay(i64 4295) #14, !dbg !11634
  %6 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !11640
  %7 = load i32, i32* %port.addr, align 4, !dbg !11642
  %call = call zeroext i16 @gma_read16(%struct.skge_hw* %6, i32 %7, i32 128) #14, !dbg !11643
  %conv7 = zext i16 %call to i32, !dbg !11643
  %and8 = and i32 %conv7, 16, !dbg !11644
  %tobool = icmp ne i32 %and8, 0, !dbg !11644
  br i1 %tobool, label %if.then, label %if.end, !dbg !11645

if.then:                                          ; preds = %for.body
  br label %ready, !dbg !11646

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !11647

for.inc:                                          ; preds = %if.end
  %8 = load i32, i32* %i, align 4, !dbg !11648
  %inc = add i32 %8, 1, !dbg !11648
  store i32 %inc, i32* %i, align 4, !dbg !11648
  br label %for.cond, !dbg !11649, !llvm.loop !11650

for.end:                                          ; preds = %for.cond
  store i32 -110, i32* %retval, align 4, !dbg !11652
  br label %return, !dbg !11652

ready:                                            ; preds = %if.then
  call void @llvm.dbg.label(metadata !11653), !dbg !11654
  %9 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !11655
  %10 = load i32, i32* %port.addr, align 4, !dbg !11656
  %call9 = call zeroext i16 @gma_read16(%struct.skge_hw* %9, i32 %10, i32 132) #14, !dbg !11657
  %11 = load i16*, i16** %val.addr, align 8, !dbg !11658
  store i16 %call9, i16* %11, align 2, !dbg !11659
  store i32 0, i32* %retval, align 4, !dbg !11660
  br label %return, !dbg !11660

return:                                           ; preds = %ready, %for.end
  %12 = load i32, i32* %retval, align 4, !dbg !11661
  ret i32 %12, !dbg !11661
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @gma_write16(%struct.skge_hw* %hw, i32 %port, i32 %r, i16 zeroext %v) #2 !dbg !11662 {
entry:
  %hw.addr = alloca %struct.skge_hw*, align 8
  %port.addr = alloca i32, align 4
  %r.addr = alloca i32, align 4
  %v.addr = alloca i16, align 2
  store %struct.skge_hw* %hw, %struct.skge_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.skge_hw** %hw.addr, metadata !11665, metadata !DIExpression()), !dbg !11666
  store i32 %port, i32* %port.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %port.addr, metadata !11667, metadata !DIExpression()), !dbg !11668
  store i32 %r, i32* %r.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %r.addr, metadata !11669, metadata !DIExpression()), !dbg !11670
  store i16 %v, i16* %v.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %v.addr, metadata !11671, metadata !DIExpression()), !dbg !11672
  %0 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !11673
  %1 = load i32, i32* %port.addr, align 4, !dbg !11674
  %mul = mul i32 %1, 4096, !dbg !11674
  %add = add i32 10240, %mul, !dbg !11674
  %2 = load i32, i32* %r.addr, align 4, !dbg !11674
  %add1 = add i32 %add, %2, !dbg !11674
  %3 = load i16, i16* %v.addr, align 2, !dbg !11675
  call void @skge_write16(%struct.skge_hw* %0, i32 %add1, i16 zeroext %3) #14, !dbg !11676
  ret void, !dbg !11677
}

; Function Attrs: noredzone
declare dso_local void @__const_udelay(i64) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i16 @gma_read16(%struct.skge_hw* %hw, i32 %port, i32 %reg) #2 !dbg !11678 {
entry:
  %hw.addr = alloca %struct.skge_hw*, align 8
  %port.addr = alloca i32, align 4
  %reg.addr = alloca i32, align 4
  store %struct.skge_hw* %hw, %struct.skge_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.skge_hw** %hw.addr, metadata !11681, metadata !DIExpression()), !dbg !11682
  store i32 %port, i32* %port.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %port.addr, metadata !11683, metadata !DIExpression()), !dbg !11684
  store i32 %reg, i32* %reg.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %reg.addr, metadata !11685, metadata !DIExpression()), !dbg !11686
  %0 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !11687
  %1 = load i32, i32* %port.addr, align 4, !dbg !11688
  %mul = mul i32 %1, 4096, !dbg !11688
  %add = add i32 10240, %mul, !dbg !11688
  %2 = load i32, i32* %reg.addr, align 4, !dbg !11688
  %add1 = add i32 %add, %2, !dbg !11688
  %call = call zeroext i16 @skge_read16(%struct.skge_hw* %0, i32 %add1) #14, !dbg !11689
  ret i16 %call, !dbg !11690
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i16 @skge_read16(%struct.skge_hw* %hw, i32 %reg) #2 !dbg !11691 {
entry:
  %hw.addr = alloca %struct.skge_hw*, align 8
  %reg.addr = alloca i32, align 4
  store %struct.skge_hw* %hw, %struct.skge_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.skge_hw** %hw.addr, metadata !11694, metadata !DIExpression()), !dbg !11695
  store i32 %reg, i32* %reg.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %reg.addr, metadata !11696, metadata !DIExpression()), !dbg !11697
  %0 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !11698
  %regs = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %0, i32 0, i32 0, !dbg !11699
  %1 = load i8*, i8** %regs, align 8, !dbg !11699
  %2 = load i32, i32* %reg.addr, align 4, !dbg !11700
  %idx.ext = sext i32 %2 to i64, !dbg !11701
  %add.ptr = getelementptr i8, i8* %1, i64 %idx.ext, !dbg !11701
  %call = call zeroext i16 @readw(i8* %add.ptr) #14, !dbg !11702
  ret i16 %call, !dbg !11703
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i16 @readw(i8* %addr) #2 !dbg !11704 {
entry:
  %addr.addr = alloca i8*, align 8
  %ret = alloca i16, align 2
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !11708, metadata !DIExpression()), !dbg !11709
  call void @llvm.dbg.declare(metadata i16* %ret, metadata !11710, metadata !DIExpression()), !dbg !11709
  %0 = load i8*, i8** %addr.addr, align 8, !dbg !11709
  %1 = bitcast i8* %0 to i16*, !dbg !11709
  %2 = call i16 asm sideeffect "movw $1,$0", "=r,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i16* %1) #10, !dbg !11709, !srcloc !11711
  store i16 %2, i16* %ret, align 2, !dbg !11709
  %3 = load i16, i16* %ret, align 2, !dbg !11709
  ret i16 %3, !dbg !11709
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @writeb(i8 zeroext %val, i8* %addr) #2 !dbg !11712 {
entry:
  %val.addr = alloca i8, align 1
  %addr.addr = alloca i8*, align 8
  store i8 %val, i8* %val.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %val.addr, metadata !11716, metadata !DIExpression()), !dbg !11717
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !11718, metadata !DIExpression()), !dbg !11717
  %0 = load i8, i8* %val.addr, align 1, !dbg !11717
  %1 = load i8*, i8** %addr.addr, align 8, !dbg !11717
  call void asm sideeffect "movb $0,$1", "q,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i8 %0, i8* %1) #10, !dbg !11717, !srcloc !11719
  ret void, !dbg !11717
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @gm_phy_write(%struct.skge_hw* %hw, i32 %port, i16 zeroext %reg, i16 zeroext %val) #2 !dbg !11720 {
entry:
  %retval = alloca i32, align 4
  %hw.addr = alloca %struct.skge_hw*, align 8
  %port.addr = alloca i32, align 4
  %reg.addr = alloca i16, align 2
  %val.addr = alloca i16, align 2
  %i = alloca i32, align 4
  store %struct.skge_hw* %hw, %struct.skge_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.skge_hw** %hw.addr, metadata !11723, metadata !DIExpression()), !dbg !11724
  store i32 %port, i32* %port.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %port.addr, metadata !11725, metadata !DIExpression()), !dbg !11726
  store i16 %reg, i16* %reg.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %reg.addr, metadata !11727, metadata !DIExpression()), !dbg !11728
  store i16 %val, i16* %val.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %val.addr, metadata !11729, metadata !DIExpression()), !dbg !11730
  call void @llvm.dbg.declare(metadata i32* %i, metadata !11731, metadata !DIExpression()), !dbg !11732
  %0 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !11733
  %1 = load i32, i32* %port.addr, align 4, !dbg !11734
  %2 = load i16, i16* %val.addr, align 2, !dbg !11735
  call void @gma_write16(%struct.skge_hw* %0, i32 %1, i32 132, i16 zeroext %2) #14, !dbg !11736
  %3 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !11737
  %4 = load i32, i32* %port.addr, align 4, !dbg !11738
  %5 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !11739
  %phy_addr = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %5, i32 0, i32 12, !dbg !11739
  %6 = load i16, i16* %phy_addr, align 8, !dbg !11739
  %conv = zext i16 %6 to i32, !dbg !11739
  %shl = shl i32 %conv, 11, !dbg !11739
  %and = and i32 %shl, 63488, !dbg !11739
  %7 = load i16, i16* %reg.addr, align 2, !dbg !11740
  %conv1 = zext i16 %7 to i32, !dbg !11740
  %shl2 = shl i32 %conv1, 6, !dbg !11740
  %and3 = and i32 %shl2, 1984, !dbg !11740
  %or = or i32 %and, %and3, !dbg !11741
  %conv4 = trunc i32 %or to i16, !dbg !11739
  call void @gma_write16(%struct.skge_hw* %3, i32 %4, i32 128, i16 zeroext %conv4) #14, !dbg !11742
  store i32 0, i32* %i, align 4, !dbg !11743
  br label %for.cond, !dbg !11745

for.cond:                                         ; preds = %for.inc, %entry
  %8 = load i32, i32* %i, align 4, !dbg !11746
  %cmp = icmp slt i32 %8, 1000, !dbg !11748
  br i1 %cmp, label %for.body, label %for.end, !dbg !11749

for.body:                                         ; preds = %for.cond
  call void @__const_udelay(i64 4295) #14, !dbg !11750
  %9 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !11756
  %10 = load i32, i32* %port.addr, align 4, !dbg !11758
  %call = call zeroext i16 @gma_read16(%struct.skge_hw* %9, i32 %10, i32 128) #14, !dbg !11759
  %conv6 = zext i16 %call to i32, !dbg !11759
  %and7 = and i32 %conv6, 8, !dbg !11760
  %tobool = icmp ne i32 %and7, 0, !dbg !11760
  br i1 %tobool, label %if.end, label %if.then, !dbg !11761

if.then:                                          ; preds = %for.body
  store i32 0, i32* %retval, align 4, !dbg !11762
  br label %return, !dbg !11762

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !11763

for.inc:                                          ; preds = %if.end
  %11 = load i32, i32* %i, align 4, !dbg !11764
  %inc = add i32 %11, 1, !dbg !11764
  store i32 %inc, i32* %i, align 4, !dbg !11764
  br label %for.cond, !dbg !11765, !llvm.loop !11766

for.end:                                          ; preds = %for.cond
  %12 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !11768
  %dev = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %12, i32 0, i32 4, !dbg !11768
  %13 = load i32, i32* %port.addr, align 4, !dbg !11768
  %idxprom = sext i32 %13 to i64, !dbg !11768
  %arrayidx = getelementptr [2 x %struct.net_device*], [2 x %struct.net_device*]* %dev, i64 0, i64 %idxprom, !dbg !11768
  %14 = load %struct.net_device*, %struct.net_device** %arrayidx, align 8, !dbg !11768
  %name = getelementptr inbounds %struct.net_device, %struct.net_device* %14, i32 0, i32 0, !dbg !11768
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %name, i64 0, i64 0, !dbg !11768
  %call8 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.21, i64 0, i64 0), i8* %arraydecay) #15, !dbg !11768
  store i32 -5, i32* %retval, align 4, !dbg !11769
  br label %return, !dbg !11769

return:                                           ; preds = %for.end, %if.then
  %15 = load i32, i32* %retval, align 4, !dbg !11770
  ret i32 %15, !dbg !11770
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @skge_link_up(%struct.skge_port* %skge) #2 !dbg !11771 {
entry:
  %skge.addr = alloca %struct.skge_port*, align 8
  store %struct.skge_port* %skge, %struct.skge_port** %skge.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.skge_port** %skge.addr, metadata !11772, metadata !DIExpression()), !dbg !11773
  %0 = load %struct.skge_port*, %struct.skge_port** %skge.addr, align 8, !dbg !11774
  %hw = getelementptr inbounds %struct.skge_port, %struct.skge_port* %0, i32 0, i32 0, !dbg !11775
  %1 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !11775
  %2 = load %struct.skge_port*, %struct.skge_port** %skge.addr, align 8, !dbg !11776
  %port = getelementptr inbounds %struct.skge_port, %struct.skge_port* %2, i32 0, i32 3, !dbg !11776
  %3 = load i32, i32* %port, align 8, !dbg !11776
  %shl = shl i32 %3, 7, !dbg !11776
  %add = add i32 %shl, 3132, !dbg !11776
  call void @skge_write8(%struct.skge_hw* %1, i32 %add, i8 zeroext 22) #14, !dbg !11777
  %4 = load %struct.skge_port*, %struct.skge_port** %skge.addr, align 8, !dbg !11778
  %netdev = getelementptr inbounds %struct.skge_port, %struct.skge_port* %4, i32 0, i32 1, !dbg !11779
  %5 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !11779
  call void @netif_carrier_on(%struct.net_device* %5) #14, !dbg !11780
  %6 = load %struct.skge_port*, %struct.skge_port** %skge.addr, align 8, !dbg !11781
  %netdev1 = getelementptr inbounds %struct.skge_port, %struct.skge_port* %6, i32 0, i32 1, !dbg !11782
  %7 = load %struct.net_device*, %struct.net_device** %netdev1, align 8, !dbg !11782
  call void @netif_wake_queue(%struct.net_device* %7) #14, !dbg !11783
  br label %do.body, !dbg !11784

do.body:                                          ; preds = %entry
  %8 = load %struct.skge_port*, %struct.skge_port** %skge.addr, align 8, !dbg !11785
  %msg_enable = getelementptr inbounds %struct.skge_port, %struct.skge_port* %8, i32 0, i32 4, !dbg !11785
  %9 = load i32, i32* %msg_enable, align 4, !dbg !11785
  %and = and i32 %9, 4, !dbg !11785
  %tobool = icmp ne i32 %and, 0, !dbg !11785
  br i1 %tobool, label %if.then, label %if.end, !dbg !11788

if.then:                                          ; preds = %do.body
  %10 = load %struct.skge_port*, %struct.skge_port** %skge.addr, align 8, !dbg !11785
  %netdev2 = getelementptr inbounds %struct.skge_port, %struct.skge_port* %10, i32 0, i32 1, !dbg !11785
  %11 = load %struct.net_device*, %struct.net_device** %netdev2, align 8, !dbg !11785
  %12 = load %struct.skge_port*, %struct.skge_port** %skge.addr, align 8, !dbg !11785
  %speed = getelementptr inbounds %struct.skge_port, %struct.skge_port* %12, i32 0, i32 15, !dbg !11785
  %13 = load i16, i16* %speed, align 4, !dbg !11785
  %conv = zext i16 %13 to i32, !dbg !11785
  %14 = load %struct.skge_port*, %struct.skge_port** %skge.addr, align 8, !dbg !11785
  %duplex = getelementptr inbounds %struct.skge_port, %struct.skge_port* %14, i32 0, i32 14, !dbg !11785
  %15 = load i8, i8* %duplex, align 1, !dbg !11785
  %conv3 = zext i8 %15 to i32, !dbg !11785
  %cmp = icmp eq i32 %conv3, 1, !dbg !11785
  %16 = zext i1 %cmp to i64, !dbg !11785
  %cond = select i1 %cmp, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.23, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.24, i64 0, i64 0), !dbg !11785
  %17 = load %struct.skge_port*, %struct.skge_port** %skge.addr, align 8, !dbg !11785
  %flow_status = getelementptr inbounds %struct.skge_port, %struct.skge_port* %17, i32 0, i32 10, !dbg !11785
  %18 = load i32, i32* %flow_status, align 4, !dbg !11785
  %call = call i8* @skge_pause(i32 %18) #14, !dbg !11785
  call void (%struct.net_device*, i8*, ...) @netdev_info(%struct.net_device* %11, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.22, i64 0, i64 0), i32 %conv, i8* %cond, i8* %call) #15, !dbg !11785
  br label %if.end, !dbg !11785

if.end:                                           ; preds = %if.then, %do.body
  br label %do.end, !dbg !11788

do.end:                                           ; preds = %if.end
  ret void, !dbg !11789
}

; Function Attrs: noredzone
declare dso_local void @netif_carrier_on(%struct.net_device*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @netif_wake_queue(%struct.net_device* %dev) #2 !dbg !11790 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !11791, metadata !DIExpression()), !dbg !11792
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11793
  %call = call %struct.netdev_queue* @netdev_get_tx_queue(%struct.net_device* %0, i32 0) #14, !dbg !11794
  call void @netif_tx_wake_queue(%struct.netdev_queue* %call) #14, !dbg !11795
  ret void, !dbg !11796
}

; Function Attrs: cold noredzone
declare dso_local void @netdev_info(%struct.net_device*, i8*, ...) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @skge_pause(i32 %status) #2 !dbg !11797 {
entry:
  %retval = alloca i8*, align 8
  %status.addr = alloca i32, align 4
  store i32 %status, i32* %status.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %status.addr, metadata !11800, metadata !DIExpression()), !dbg !11801
  %0 = load i32, i32* %status.addr, align 4, !dbg !11802
  switch i32 %0, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb1
    i32 3, label %sw.bb2
    i32 4, label %sw.bb3
  ], !dbg !11803

sw.bb:                                            ; preds = %entry
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.25, i64 0, i64 0), i8** %retval, align 8, !dbg !11804
  br label %return, !dbg !11804

sw.bb1:                                           ; preds = %entry
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.26, i64 0, i64 0), i8** %retval, align 8, !dbg !11806
  br label %return, !dbg !11806

sw.bb2:                                           ; preds = %entry
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.27, i64 0, i64 0), i8** %retval, align 8, !dbg !11807
  br label %return, !dbg !11807

sw.bb3:                                           ; preds = %entry
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.28, i64 0, i64 0), i8** %retval, align 8, !dbg !11808
  br label %return, !dbg !11808

sw.default:                                       ; preds = %entry
  store i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.29, i64 0, i64 0), i8** %retval, align 8, !dbg !11809
  br label %return, !dbg !11809

return:                                           ; preds = %sw.default, %sw.bb3, %sw.bb2, %sw.bb1, %sw.bb
  %1 = load i8*, i8** %retval, align 8, !dbg !11810
  ret i8* %1, !dbg !11810
}

; Function Attrs: noredzone
declare dso_local void @netif_tx_wake_queue(%struct.netdev_queue*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.netdev_queue* @netdev_get_tx_queue(%struct.net_device* %dev, i32 %index) #2 !dbg !11811 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %index.addr = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !11814, metadata !DIExpression()), !dbg !11815
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !11816, metadata !DIExpression()), !dbg !11817
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11818
  %_tx = getelementptr inbounds %struct.net_device, %struct.net_device* %0, i32 0, i32 86, !dbg !11819
  %1 = load %struct.netdev_queue*, %struct.netdev_queue** %_tx, align 8, !dbg !11819
  %2 = load i32, i32* %index.addr, align 4, !dbg !11820
  %idxprom = zext i32 %2 to i64, !dbg !11818
  %arrayidx = getelementptr %struct.netdev_queue, %struct.netdev_queue* %1, i64 %idxprom, !dbg !11818
  ret %struct.netdev_queue* %arrayidx, !dbg !11821
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @skge_link_down(%struct.skge_port* %skge) #2 !dbg !11822 {
entry:
  %skge.addr = alloca %struct.skge_port*, align 8
  store %struct.skge_port* %skge, %struct.skge_port** %skge.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.skge_port** %skge.addr, metadata !11823, metadata !DIExpression()), !dbg !11824
  %0 = load %struct.skge_port*, %struct.skge_port** %skge.addr, align 8, !dbg !11825
  %hw = getelementptr inbounds %struct.skge_port, %struct.skge_port* %0, i32 0, i32 0, !dbg !11826
  %1 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !11826
  %2 = load %struct.skge_port*, %struct.skge_port** %skge.addr, align 8, !dbg !11827
  %port = getelementptr inbounds %struct.skge_port, %struct.skge_port* %2, i32 0, i32 3, !dbg !11827
  %3 = load i32, i32* %port, align 8, !dbg !11827
  %shl = shl i32 %3, 7, !dbg !11827
  %add = add i32 %shl, 3132, !dbg !11827
  call void @skge_write8(%struct.skge_hw* %1, i32 %add, i8 zeroext 1) #14, !dbg !11828
  %4 = load %struct.skge_port*, %struct.skge_port** %skge.addr, align 8, !dbg !11829
  %netdev = getelementptr inbounds %struct.skge_port, %struct.skge_port* %4, i32 0, i32 1, !dbg !11830
  %5 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !11830
  call void @netif_carrier_off(%struct.net_device* %5) #14, !dbg !11831
  %6 = load %struct.skge_port*, %struct.skge_port** %skge.addr, align 8, !dbg !11832
  %netdev1 = getelementptr inbounds %struct.skge_port, %struct.skge_port* %6, i32 0, i32 1, !dbg !11833
  %7 = load %struct.net_device*, %struct.net_device** %netdev1, align 8, !dbg !11833
  call void @netif_stop_queue(%struct.net_device* %7) #14, !dbg !11834
  br label %do.body, !dbg !11835

do.body:                                          ; preds = %entry
  %8 = load %struct.skge_port*, %struct.skge_port** %skge.addr, align 8, !dbg !11836
  %msg_enable = getelementptr inbounds %struct.skge_port, %struct.skge_port* %8, i32 0, i32 4, !dbg !11836
  %9 = load i32, i32* %msg_enable, align 4, !dbg !11836
  %and = and i32 %9, 4, !dbg !11836
  %tobool = icmp ne i32 %and, 0, !dbg !11836
  br i1 %tobool, label %if.then, label %if.end, !dbg !11839

if.then:                                          ; preds = %do.body
  %10 = load %struct.skge_port*, %struct.skge_port** %skge.addr, align 8, !dbg !11836
  %netdev2 = getelementptr inbounds %struct.skge_port, %struct.skge_port* %10, i32 0, i32 1, !dbg !11836
  %11 = load %struct.net_device*, %struct.net_device** %netdev2, align 8, !dbg !11836
  call void (%struct.net_device*, i8*, ...) @netdev_info(%struct.net_device* %11, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.30, i64 0, i64 0)) #15, !dbg !11836
  br label %if.end, !dbg !11836

if.end:                                           ; preds = %if.then, %do.body
  br label %do.end, !dbg !11839

do.end:                                           ; preds = %if.end
  ret void, !dbg !11840
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @yukon_init(%struct.skge_hw* %hw, i32 %port) #2 !dbg !11841 {
entry:
  %hw.addr = alloca %struct.skge_hw*, align 8
  %port.addr = alloca i32, align 4
  %skge = alloca %struct.skge_port*, align 8
  %ctrl = alloca i16, align 2
  %ct1000 = alloca i16, align 2
  %adv = alloca i16, align 2
  %ectrl = alloca i16, align 2
  store %struct.skge_hw* %hw, %struct.skge_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.skge_hw** %hw.addr, metadata !11842, metadata !DIExpression()), !dbg !11843
  store i32 %port, i32* %port.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %port.addr, metadata !11844, metadata !DIExpression()), !dbg !11845
  call void @llvm.dbg.declare(metadata %struct.skge_port** %skge, metadata !11846, metadata !DIExpression()), !dbg !11847
  %0 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !11848
  %dev = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %0, i32 0, i32 4, !dbg !11849
  %1 = load i32, i32* %port.addr, align 4, !dbg !11850
  %idxprom = sext i32 %1 to i64, !dbg !11848
  %arrayidx = getelementptr [2 x %struct.net_device*], [2 x %struct.net_device*]* %dev, i64 0, i64 %idxprom, !dbg !11848
  %2 = load %struct.net_device*, %struct.net_device** %arrayidx, align 8, !dbg !11848
  %call = call i8* @netdev_priv(%struct.net_device* %2) #14, !dbg !11851
  %3 = bitcast i8* %call to %struct.skge_port*, !dbg !11851
  store %struct.skge_port* %3, %struct.skge_port** %skge, align 8, !dbg !11847
  call void @llvm.dbg.declare(metadata i16* %ctrl, metadata !11852, metadata !DIExpression()), !dbg !11853
  call void @llvm.dbg.declare(metadata i16* %ct1000, metadata !11854, metadata !DIExpression()), !dbg !11855
  call void @llvm.dbg.declare(metadata i16* %adv, metadata !11856, metadata !DIExpression()), !dbg !11857
  %4 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !11858
  %autoneg = getelementptr inbounds %struct.skge_port, %struct.skge_port* %4, i32 0, i32 13, !dbg !11860
  %5 = load i8, i8* %autoneg, align 2, !dbg !11860
  %conv = zext i8 %5 to i32, !dbg !11858
  %cmp = icmp eq i32 %conv, 1, !dbg !11861
  br i1 %cmp, label %if.then, label %if.end, !dbg !11862

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i16* %ectrl, metadata !11863, metadata !DIExpression()), !dbg !11865
  %6 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !11866
  %7 = load i32, i32* %port.addr, align 4, !dbg !11867
  %call2 = call zeroext i16 @gm_phy_read(%struct.skge_hw* %6, i32 %7, i16 zeroext 20) #14, !dbg !11868
  store i16 %call2, i16* %ectrl, align 2, !dbg !11865
  %8 = load i16, i16* %ectrl, align 2, !dbg !11869
  %conv3 = zext i16 %8 to i32, !dbg !11869
  %and = and i32 %conv3, -3953, !dbg !11869
  %conv4 = trunc i32 %and to i16, !dbg !11869
  store i16 %conv4, i16* %ectrl, align 2, !dbg !11869
  %9 = load i16, i16* %ectrl, align 2, !dbg !11870
  %conv5 = zext i16 %9 to i32, !dbg !11870
  %or = or i32 %conv5, 112, !dbg !11870
  %conv6 = trunc i32 %or to i16, !dbg !11870
  store i16 %conv6, i16* %ectrl, align 2, !dbg !11870
  %10 = load i16, i16* %ectrl, align 2, !dbg !11871
  %conv7 = zext i16 %10 to i32, !dbg !11871
  %or8 = or i32 %conv7, 256, !dbg !11871
  %conv9 = trunc i32 %or8 to i16, !dbg !11871
  store i16 %conv9, i16* %ectrl, align 2, !dbg !11871
  %11 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !11872
  %12 = load i32, i32* %port.addr, align 4, !dbg !11873
  %13 = load i16, i16* %ectrl, align 2, !dbg !11874
  %call10 = call i32 @gm_phy_write(%struct.skge_hw* %11, i32 %12, i16 zeroext 20, i16 zeroext %13) #14, !dbg !11875
  br label %if.end, !dbg !11876

if.end:                                           ; preds = %if.then, %entry
  %14 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !11877
  %15 = load i32, i32* %port.addr, align 4, !dbg !11878
  %call11 = call zeroext i16 @gm_phy_read(%struct.skge_hw* %14, i32 %15, i16 zeroext 0) #14, !dbg !11879
  store i16 %call11, i16* %ctrl, align 2, !dbg !11880
  %16 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !11881
  %autoneg12 = getelementptr inbounds %struct.skge_port, %struct.skge_port* %16, i32 0, i32 13, !dbg !11883
  %17 = load i8, i8* %autoneg12, align 2, !dbg !11883
  %conv13 = zext i8 %17 to i32, !dbg !11881
  %cmp14 = icmp eq i32 %conv13, 0, !dbg !11884
  br i1 %cmp14, label %if.then16, label %if.end20, !dbg !11885

if.then16:                                        ; preds = %if.end
  %18 = load i16, i16* %ctrl, align 2, !dbg !11886
  %conv17 = zext i16 %18 to i32, !dbg !11886
  %and18 = and i32 %conv17, -4097, !dbg !11886
  %conv19 = trunc i32 %and18 to i16, !dbg !11886
  store i16 %conv19, i16* %ctrl, align 2, !dbg !11886
  br label %if.end20, !dbg !11887

if.end20:                                         ; preds = %if.then16, %if.end
  %19 = load i16, i16* %ctrl, align 2, !dbg !11888
  %conv21 = zext i16 %19 to i32, !dbg !11888
  %or22 = or i32 %conv21, 32768, !dbg !11888
  %conv23 = trunc i32 %or22 to i16, !dbg !11888
  store i16 %conv23, i16* %ctrl, align 2, !dbg !11888
  %20 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !11889
  %21 = load i32, i32* %port.addr, align 4, !dbg !11890
  %22 = load i16, i16* %ctrl, align 2, !dbg !11891
  %call24 = call i32 @gm_phy_write(%struct.skge_hw* %20, i32 %21, i16 zeroext 0, i16 zeroext %22) #14, !dbg !11892
  store i16 0, i16* %ctrl, align 2, !dbg !11893
  store i16 0, i16* %ct1000, align 2, !dbg !11894
  store i16 1, i16* %adv, align 2, !dbg !11895
  %23 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !11896
  %autoneg25 = getelementptr inbounds %struct.skge_port, %struct.skge_port* %23, i32 0, i32 13, !dbg !11898
  %24 = load i8, i8* %autoneg25, align 2, !dbg !11898
  %conv26 = zext i8 %24 to i32, !dbg !11896
  %cmp27 = icmp eq i32 %conv26, 1, !dbg !11899
  br i1 %cmp27, label %if.then29, label %if.else119, !dbg !11900

if.then29:                                        ; preds = %if.end20
  %25 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !11901
  %copper = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %25, i32 0, i32 7, !dbg !11904
  %26 = load i8, i8* %copper, align 2, !dbg !11904
  %tobool = icmp ne i8 %26, 0, !dbg !11901
  br i1 %tobool, label %if.then30, label %if.else, !dbg !11905

if.then30:                                        ; preds = %if.then29
  %27 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !11906
  %advertising = getelementptr inbounds %struct.skge_port, %struct.skge_port* %27, i32 0, i32 16, !dbg !11909
  %28 = load i32, i32* %advertising, align 8, !dbg !11909
  %conv31 = zext i32 %28 to i64, !dbg !11906
  %and32 = and i64 %conv31, 32, !dbg !11910
  %tobool33 = icmp ne i64 %and32, 0, !dbg !11910
  br i1 %tobool33, label %if.then34, label %if.end38, !dbg !11911

if.then34:                                        ; preds = %if.then30
  %29 = load i16, i16* %ct1000, align 2, !dbg !11912
  %conv35 = zext i16 %29 to i32, !dbg !11912
  %or36 = or i32 %conv35, 512, !dbg !11912
  %conv37 = trunc i32 %or36 to i16, !dbg !11912
  store i16 %conv37, i16* %ct1000, align 2, !dbg !11912
  br label %if.end38, !dbg !11913

if.end38:                                         ; preds = %if.then34, %if.then30
  %30 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !11914
  %advertising39 = getelementptr inbounds %struct.skge_port, %struct.skge_port* %30, i32 0, i32 16, !dbg !11916
  %31 = load i32, i32* %advertising39, align 8, !dbg !11916
  %conv40 = zext i32 %31 to i64, !dbg !11914
  %and41 = and i64 %conv40, 16, !dbg !11917
  %tobool42 = icmp ne i64 %and41, 0, !dbg !11917
  br i1 %tobool42, label %if.then43, label %if.end47, !dbg !11918

if.then43:                                        ; preds = %if.end38
  %32 = load i16, i16* %ct1000, align 2, !dbg !11919
  %conv44 = zext i16 %32 to i32, !dbg !11919
  %or45 = or i32 %conv44, 256, !dbg !11919
  %conv46 = trunc i32 %or45 to i16, !dbg !11919
  store i16 %conv46, i16* %ct1000, align 2, !dbg !11919
  br label %if.end47, !dbg !11920

if.end47:                                         ; preds = %if.then43, %if.end38
  %33 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !11921
  %advertising48 = getelementptr inbounds %struct.skge_port, %struct.skge_port* %33, i32 0, i32 16, !dbg !11923
  %34 = load i32, i32* %advertising48, align 8, !dbg !11923
  %conv49 = zext i32 %34 to i64, !dbg !11921
  %and50 = and i64 %conv49, 8, !dbg !11924
  %tobool51 = icmp ne i64 %and50, 0, !dbg !11924
  br i1 %tobool51, label %if.then52, label %if.end56, !dbg !11925

if.then52:                                        ; preds = %if.end47
  %35 = load i16, i16* %adv, align 2, !dbg !11926
  %conv53 = zext i16 %35 to i32, !dbg !11926
  %or54 = or i32 %conv53, 256, !dbg !11926
  %conv55 = trunc i32 %or54 to i16, !dbg !11926
  store i16 %conv55, i16* %adv, align 2, !dbg !11926
  br label %if.end56, !dbg !11927

if.end56:                                         ; preds = %if.then52, %if.end47
  %36 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !11928
  %advertising57 = getelementptr inbounds %struct.skge_port, %struct.skge_port* %36, i32 0, i32 16, !dbg !11930
  %37 = load i32, i32* %advertising57, align 8, !dbg !11930
  %conv58 = zext i32 %37 to i64, !dbg !11928
  %and59 = and i64 %conv58, 4, !dbg !11931
  %tobool60 = icmp ne i64 %and59, 0, !dbg !11931
  br i1 %tobool60, label %if.then61, label %if.end65, !dbg !11932

if.then61:                                        ; preds = %if.end56
  %38 = load i16, i16* %adv, align 2, !dbg !11933
  %conv62 = zext i16 %38 to i32, !dbg !11933
  %or63 = or i32 %conv62, 128, !dbg !11933
  %conv64 = trunc i32 %or63 to i16, !dbg !11933
  store i16 %conv64, i16* %adv, align 2, !dbg !11933
  br label %if.end65, !dbg !11934

if.end65:                                         ; preds = %if.then61, %if.end56
  %39 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !11935
  %advertising66 = getelementptr inbounds %struct.skge_port, %struct.skge_port* %39, i32 0, i32 16, !dbg !11937
  %40 = load i32, i32* %advertising66, align 8, !dbg !11937
  %conv67 = zext i32 %40 to i64, !dbg !11935
  %and68 = and i64 %conv67, 2, !dbg !11938
  %tobool69 = icmp ne i64 %and68, 0, !dbg !11938
  br i1 %tobool69, label %if.then70, label %if.end74, !dbg !11939

if.then70:                                        ; preds = %if.end65
  %41 = load i16, i16* %adv, align 2, !dbg !11940
  %conv71 = zext i16 %41 to i32, !dbg !11940
  %or72 = or i32 %conv71, 64, !dbg !11940
  %conv73 = trunc i32 %or72 to i16, !dbg !11940
  store i16 %conv73, i16* %adv, align 2, !dbg !11940
  br label %if.end74, !dbg !11941

if.end74:                                         ; preds = %if.then70, %if.end65
  %42 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !11942
  %advertising75 = getelementptr inbounds %struct.skge_port, %struct.skge_port* %42, i32 0, i32 16, !dbg !11944
  %43 = load i32, i32* %advertising75, align 8, !dbg !11944
  %conv76 = zext i32 %43 to i64, !dbg !11942
  %and77 = and i64 %conv76, 1, !dbg !11945
  %tobool78 = icmp ne i64 %and77, 0, !dbg !11945
  br i1 %tobool78, label %if.then79, label %if.end83, !dbg !11946

if.then79:                                        ; preds = %if.end74
  %44 = load i16, i16* %adv, align 2, !dbg !11947
  %conv80 = zext i16 %44 to i32, !dbg !11947
  %or81 = or i32 %conv80, 32, !dbg !11947
  %conv82 = trunc i32 %or81 to i16, !dbg !11947
  store i16 %conv82, i16* %adv, align 2, !dbg !11947
  br label %if.end83, !dbg !11948

if.end83:                                         ; preds = %if.then79, %if.end74
  %45 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !11949
  %flow_control = getelementptr inbounds %struct.skge_port, %struct.skge_port* %45, i32 0, i32 9, !dbg !11950
  %46 = load i32, i32* %flow_control, align 8, !dbg !11950
  %idxprom84 = zext i32 %46 to i64, !dbg !11951
  %arrayidx85 = getelementptr [5 x i16], [5 x i16]* @phy_pause_map, i64 0, i64 %idxprom84, !dbg !11951
  %47 = load i16, i16* %arrayidx85, align 2, !dbg !11951
  %conv86 = zext i16 %47 to i32, !dbg !11951
  %48 = load i16, i16* %adv, align 2, !dbg !11952
  %conv87 = zext i16 %48 to i32, !dbg !11952
  %or88 = or i32 %conv87, %conv86, !dbg !11952
  %conv89 = trunc i32 %or88 to i16, !dbg !11952
  store i16 %conv89, i16* %adv, align 2, !dbg !11952
  br label %if.end115, !dbg !11953

if.else:                                          ; preds = %if.then29
  %49 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !11954
  %advertising90 = getelementptr inbounds %struct.skge_port, %struct.skge_port* %49, i32 0, i32 16, !dbg !11957
  %50 = load i32, i32* %advertising90, align 8, !dbg !11957
  %conv91 = zext i32 %50 to i64, !dbg !11954
  %and92 = and i64 %conv91, 32, !dbg !11958
  %tobool93 = icmp ne i64 %and92, 0, !dbg !11958
  br i1 %tobool93, label %if.then94, label %if.end98, !dbg !11959

if.then94:                                        ; preds = %if.else
  %51 = load i16, i16* %adv, align 2, !dbg !11960
  %conv95 = zext i16 %51 to i32, !dbg !11960
  %or96 = or i32 %conv95, 32, !dbg !11960
  %conv97 = trunc i32 %or96 to i16, !dbg !11960
  store i16 %conv97, i16* %adv, align 2, !dbg !11960
  br label %if.end98, !dbg !11961

if.end98:                                         ; preds = %if.then94, %if.else
  %52 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !11962
  %advertising99 = getelementptr inbounds %struct.skge_port, %struct.skge_port* %52, i32 0, i32 16, !dbg !11964
  %53 = load i32, i32* %advertising99, align 8, !dbg !11964
  %conv100 = zext i32 %53 to i64, !dbg !11962
  %and101 = and i64 %conv100, 16, !dbg !11965
  %tobool102 = icmp ne i64 %and101, 0, !dbg !11965
  br i1 %tobool102, label %if.then103, label %if.end107, !dbg !11966

if.then103:                                       ; preds = %if.end98
  %54 = load i16, i16* %adv, align 2, !dbg !11967
  %conv104 = zext i16 %54 to i32, !dbg !11967
  %or105 = or i32 %conv104, 64, !dbg !11967
  %conv106 = trunc i32 %or105 to i16, !dbg !11967
  store i16 %conv106, i16* %adv, align 2, !dbg !11967
  br label %if.end107, !dbg !11968

if.end107:                                        ; preds = %if.then103, %if.end98
  %55 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !11969
  %flow_control108 = getelementptr inbounds %struct.skge_port, %struct.skge_port* %55, i32 0, i32 9, !dbg !11970
  %56 = load i32, i32* %flow_control108, align 8, !dbg !11970
  %idxprom109 = zext i32 %56 to i64, !dbg !11971
  %arrayidx110 = getelementptr [5 x i16], [5 x i16]* @fiber_pause_map, i64 0, i64 %idxprom109, !dbg !11971
  %57 = load i16, i16* %arrayidx110, align 2, !dbg !11971
  %conv111 = zext i16 %57 to i32, !dbg !11971
  %58 = load i16, i16* %adv, align 2, !dbg !11972
  %conv112 = zext i16 %58 to i32, !dbg !11972
  %or113 = or i32 %conv112, %conv111, !dbg !11972
  %conv114 = trunc i32 %or113 to i16, !dbg !11972
  store i16 %conv114, i16* %adv, align 2, !dbg !11972
  br label %if.end115

if.end115:                                        ; preds = %if.end107, %if.end83
  %59 = load i16, i16* %ctrl, align 2, !dbg !11973
  %conv116 = zext i16 %59 to i32, !dbg !11973
  %or117 = or i32 %conv116, 4608, !dbg !11973
  %conv118 = trunc i32 %or117 to i16, !dbg !11973
  store i16 %conv118, i16* %ctrl, align 2, !dbg !11973
  br label %if.end139, !dbg !11974

if.else119:                                       ; preds = %if.end20
  store i16 4096, i16* %ct1000, align 2, !dbg !11975
  %60 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !11977
  %duplex = getelementptr inbounds %struct.skge_port, %struct.skge_port* %60, i32 0, i32 14, !dbg !11979
  %61 = load i8, i8* %duplex, align 1, !dbg !11979
  %conv120 = zext i8 %61 to i32, !dbg !11977
  %cmp121 = icmp eq i32 %conv120, 1, !dbg !11980
  br i1 %cmp121, label %if.then123, label %if.end127, !dbg !11981

if.then123:                                       ; preds = %if.else119
  %62 = load i16, i16* %ctrl, align 2, !dbg !11982
  %conv124 = zext i16 %62 to i32, !dbg !11982
  %or125 = or i32 %conv124, 256, !dbg !11982
  %conv126 = trunc i32 %or125 to i16, !dbg !11982
  store i16 %conv126, i16* %ctrl, align 2, !dbg !11982
  br label %if.end127, !dbg !11983

if.end127:                                        ; preds = %if.then123, %if.else119
  %63 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !11984
  %speed = getelementptr inbounds %struct.skge_port, %struct.skge_port* %63, i32 0, i32 15, !dbg !11985
  %64 = load i16, i16* %speed, align 4, !dbg !11985
  %conv128 = zext i16 %64 to i32, !dbg !11984
  switch i32 %conv128, label %sw.epilog [
    i32 1000, label %sw.bb
    i32 100, label %sw.bb132
  ], !dbg !11986

sw.bb:                                            ; preds = %if.end127
  %65 = load i16, i16* %ctrl, align 2, !dbg !11987
  %conv129 = zext i16 %65 to i32, !dbg !11987
  %or130 = or i32 %conv129, 64, !dbg !11987
  %conv131 = trunc i32 %or130 to i16, !dbg !11987
  store i16 %conv131, i16* %ctrl, align 2, !dbg !11987
  br label %sw.epilog, !dbg !11989

sw.bb132:                                         ; preds = %if.end127
  %66 = load i16, i16* %ctrl, align 2, !dbg !11990
  %conv133 = zext i16 %66 to i32, !dbg !11990
  %or134 = or i32 %conv133, 8192, !dbg !11990
  %conv135 = trunc i32 %or134 to i16, !dbg !11990
  store i16 %conv135, i16* %ctrl, align 2, !dbg !11990
  br label %sw.epilog, !dbg !11991

sw.epilog:                                        ; preds = %if.end127, %sw.bb132, %sw.bb
  %67 = load i16, i16* %ctrl, align 2, !dbg !11992
  %conv136 = zext i16 %67 to i32, !dbg !11992
  %or137 = or i32 %conv136, 32768, !dbg !11992
  %conv138 = trunc i32 %or137 to i16, !dbg !11992
  store i16 %conv138, i16* %ctrl, align 2, !dbg !11992
  br label %if.end139

if.end139:                                        ; preds = %sw.epilog, %if.end115
  %68 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !11993
  %69 = load i32, i32* %port.addr, align 4, !dbg !11994
  %70 = load i16, i16* %ct1000, align 2, !dbg !11995
  %call140 = call i32 @gm_phy_write(%struct.skge_hw* %68, i32 %69, i16 zeroext 9, i16 zeroext %70) #14, !dbg !11996
  %71 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !11997
  %72 = load i32, i32* %port.addr, align 4, !dbg !11998
  %73 = load i16, i16* %adv, align 2, !dbg !11999
  %call141 = call i32 @gm_phy_write(%struct.skge_hw* %71, i32 %72, i16 zeroext 4, i16 zeroext %73) #14, !dbg !12000
  %74 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !12001
  %75 = load i32, i32* %port.addr, align 4, !dbg !12002
  %76 = load i16, i16* %ctrl, align 2, !dbg !12003
  %call142 = call i32 @gm_phy_write(%struct.skge_hw* %74, i32 %75, i16 zeroext 0, i16 zeroext %76) #14, !dbg !12004
  %77 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !12005
  %autoneg143 = getelementptr inbounds %struct.skge_port, %struct.skge_port* %77, i32 0, i32 13, !dbg !12007
  %78 = load i8, i8* %autoneg143, align 2, !dbg !12007
  %conv144 = zext i8 %78 to i32, !dbg !12005
  %cmp145 = icmp eq i32 %conv144, 1, !dbg !12008
  br i1 %cmp145, label %if.then147, label %if.else149, !dbg !12009

if.then147:                                       ; preds = %if.end139
  %79 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !12010
  %80 = load i32, i32* %port.addr, align 4, !dbg !12011
  %call148 = call i32 @gm_phy_write(%struct.skge_hw* %79, i32 %80, i16 zeroext 18, i16 zeroext -30720) #14, !dbg !12012
  br label %if.end151, !dbg !12012

if.else149:                                       ; preds = %if.end139
  %81 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !12013
  %82 = load i32, i32* %port.addr, align 4, !dbg !12014
  %call150 = call i32 @gm_phy_write(%struct.skge_hw* %81, i32 %82, i16 zeroext 18, i16 zeroext -15232) #14, !dbg !12015
  br label %if.end151

if.end151:                                        ; preds = %if.else149, %if.then147
  ret void, !dbg !12016
}

; Function Attrs: noredzone
declare dso_local void @netif_carrier_off(%struct.net_device*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @netif_stop_queue(%struct.net_device* %dev) #2 !dbg !12017 {
entry:
  %dev_queue.addr.i = alloca %struct.netdev_queue*, align 8
  call void @llvm.dbg.declare(metadata %struct.netdev_queue** %dev_queue.addr.i, metadata !12018, metadata !DIExpression()), !dbg !12022
  %dev.addr = alloca %struct.net_device*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !12024, metadata !DIExpression()), !dbg !12025
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !12026
  %call = call %struct.netdev_queue* @netdev_get_tx_queue(%struct.net_device* %0, i32 0) #14, !dbg !12027
  store %struct.netdev_queue* %call, %struct.netdev_queue** %dev_queue.addr.i, align 8
  %1 = load %struct.netdev_queue*, %struct.netdev_queue** %dev_queue.addr.i, align 8, !dbg !12028
  %state.i = getelementptr inbounds %struct.netdev_queue, %struct.netdev_queue* %1, i32 0, i32 10, !dbg !12029
  call void @set_bit(i64 0, i64* %state.i) #16, !dbg !12030
  ret void, !dbg !12031
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @set_bit(i64 %nr, i64* %addr) #2 !dbg !12032 {
entry:
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !12037, metadata !DIExpression()), !dbg !12039
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !12041, metadata !DIExpression()), !dbg !12042
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !12043, metadata !DIExpression()), !dbg !12045
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !12047, metadata !DIExpression()), !dbg !12048
  %nr.addr = alloca i64, align 8
  %addr.addr = alloca i64*, align 8
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !12049, metadata !DIExpression()), !dbg !12050
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !12051, metadata !DIExpression()), !dbg !12052
  %0 = load i64*, i64** %addr.addr, align 8, !dbg !12053
  %1 = load i64, i64* %nr.addr, align 8, !dbg !12054
  %div = sdiv i64 %1, 64, !dbg !12054
  %add.ptr = getelementptr i64, i64* %0, i64 %div, !dbg !12055
  %2 = bitcast i64* %add.ptr to i8*, !dbg !12053
  store i8* %2, i8** %v.addr.i, align 8
  store i64 8, i64* %size.addr.i, align 8
  %3 = load i8*, i8** %v.addr.i, align 8, !dbg !12056
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !12057
  %conv.i = trunc i64 %4 to i32, !dbg !12057
  %call.i = call zeroext i1 @kasan_check_write(i8* %3, i32 %conv.i) #16, !dbg !12058
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !12059
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !12059
  call void @kcsan_check_access(i8* %5, i64 %6, i32 5) #16, !dbg !12059
  %7 = load i64, i64* %nr.addr, align 8, !dbg !12060
  %8 = load i64*, i64** %addr.addr, align 8, !dbg !12061
  store i64 %7, i64* %nr.addr.i, align 8
  store i64* %8, i64** %addr.addr.i, align 8
  %9 = load i64, i64* %nr.addr.i, align 8, !dbg !12062
  %10 = call i1 @llvm.is.constant.i64(i64 %9) #10, !dbg !12064
  br i1 %10, label %if.then.i, label %if.else.i, !dbg !12065

if.then.i:                                        ; preds = %entry
  %11 = load i64*, i64** %addr.addr.i, align 8, !dbg !12066
  %12 = bitcast i64* %11 to i8*, !dbg !12066
  %13 = load i64, i64* %nr.addr.i, align 8, !dbg !12066
  %shr.i = ashr i64 %13, 3, !dbg !12066
  %add.ptr.i = getelementptr i8, i8* %12, i64 %shr.i, !dbg !12066
  %14 = load i64, i64* %nr.addr.i, align 8, !dbg !12068
  %and.i = and i64 %14, 7, !dbg !12068
  %sh_prom.i = trunc i64 %and.i to i32, !dbg !12068
  %shl.i = shl i32 1, %sh_prom.i, !dbg !12068
  call void asm sideeffect "orb ${1:b},$0", "=*m,iq,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i8* %add.ptr.i, i32 %shl.i, i8* %add.ptr.i) #10, !dbg !12069, !srcloc !12070
  br label %arch_set_bit.exit, !dbg !12071

if.else.i:                                        ; preds = %entry
  %15 = load i64*, i64** %addr.addr.i, align 8, !dbg !12072
  %16 = load i64, i64* %nr.addr.i, align 8, !dbg !12074
  call void asm sideeffect " btsq  $1,$0", "*m,Ir,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %15, i64 %16) #10, !dbg !12075, !srcloc !12076
  br label %arch_set_bit.exit

arch_set_bit.exit:                                ; preds = %if.then.i, %if.else.i
  ret void, !dbg !12077
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @kasan_check_write(i8* %p, i32 %size) #2 !dbg !12078 {
entry:
  %p.addr = alloca i8*, align 8
  %size.addr = alloca i32, align 4
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !12079, metadata !DIExpression()), !dbg !12080
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !12081, metadata !DIExpression()), !dbg !12082
  ret i1 true, !dbg !12083
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i16 @xm_phy_read(%struct.skge_hw* %hw, i32 %port, i16 zeroext %reg) #2 !dbg !12084 {
entry:
  %hw.addr = alloca %struct.skge_hw*, align 8
  %port.addr = alloca i32, align 4
  %reg.addr = alloca i16, align 2
  %v = alloca i16, align 2
  store %struct.skge_hw* %hw, %struct.skge_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.skge_hw** %hw.addr, metadata !12085, metadata !DIExpression()), !dbg !12086
  store i32 %port, i32* %port.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %port.addr, metadata !12087, metadata !DIExpression()), !dbg !12088
  store i16 %reg, i16* %reg.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %reg.addr, metadata !12089, metadata !DIExpression()), !dbg !12090
  call void @llvm.dbg.declare(metadata i16* %v, metadata !12091, metadata !DIExpression()), !dbg !12092
  store i16 0, i16* %v, align 2, !dbg !12092
  %0 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !12093
  %1 = load i32, i32* %port.addr, align 4, !dbg !12095
  %2 = load i16, i16* %reg.addr, align 2, !dbg !12096
  %call = call i32 @__xm_phy_read(%struct.skge_hw* %0, i32 %1, i16 zeroext %2, i16* %v) #14, !dbg !12097
  %tobool = icmp ne i32 %call, 0, !dbg !12097
  br i1 %tobool, label %if.then, label %if.end, !dbg !12098

if.then:                                          ; preds = %entry
  %3 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !12099
  %dev = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %3, i32 0, i32 4, !dbg !12099
  %4 = load i32, i32* %port.addr, align 4, !dbg !12099
  %idxprom = sext i32 %4 to i64, !dbg !12099
  %arrayidx = getelementptr [2 x %struct.net_device*], [2 x %struct.net_device*]* %dev, i64 0, i64 %idxprom, !dbg !12099
  %5 = load %struct.net_device*, %struct.net_device** %arrayidx, align 8, !dbg !12099
  %name = getelementptr inbounds %struct.net_device, %struct.net_device* %5, i32 0, i32 0, !dbg !12099
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %name, i64 0, i64 0, !dbg !12099
  %call1 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.33, i64 0, i64 0), i8* %arraydecay) #15, !dbg !12099
  br label %if.end, !dbg !12099

if.end:                                           ; preds = %if.then, %entry
  %6 = load i16, i16* %v, align 2, !dbg !12100
  ret i16 %6, !dbg !12101
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @xm_phy_write(%struct.skge_hw* %hw, i32 %port, i16 zeroext %reg, i16 zeroext %val) #2 !dbg !12102 {
entry:
  %retval = alloca i32, align 4
  %hw.addr = alloca %struct.skge_hw*, align 8
  %port.addr = alloca i32, align 4
  %reg.addr = alloca i16, align 2
  %val.addr = alloca i16, align 2
  %i = alloca i32, align 4
  store %struct.skge_hw* %hw, %struct.skge_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.skge_hw** %hw.addr, metadata !12103, metadata !DIExpression()), !dbg !12104
  store i32 %port, i32* %port.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %port.addr, metadata !12105, metadata !DIExpression()), !dbg !12106
  store i16 %reg, i16* %reg.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %reg.addr, metadata !12107, metadata !DIExpression()), !dbg !12108
  store i16 %val, i16* %val.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %val.addr, metadata !12109, metadata !DIExpression()), !dbg !12110
  call void @llvm.dbg.declare(metadata i32* %i, metadata !12111, metadata !DIExpression()), !dbg !12112
  %0 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !12113
  %1 = load i32, i32* %port.addr, align 4, !dbg !12114
  %2 = load i16, i16* %reg.addr, align 2, !dbg !12115
  %conv = zext i16 %2 to i32, !dbg !12115
  %3 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !12116
  %phy_addr = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %3, i32 0, i32 12, !dbg !12117
  %4 = load i16, i16* %phy_addr, align 8, !dbg !12117
  %conv1 = zext i16 %4 to i32, !dbg !12116
  %or = or i32 %conv, %conv1, !dbg !12118
  %conv2 = trunc i32 %or to i16, !dbg !12115
  call void @xm_write16(%struct.skge_hw* %0, i32 %1, i32 52, i16 zeroext %conv2) #14, !dbg !12119
  store i32 0, i32* %i, align 4, !dbg !12120
  br label %for.cond, !dbg !12122

for.cond:                                         ; preds = %for.inc, %entry
  %5 = load i32, i32* %i, align 4, !dbg !12123
  %cmp = icmp slt i32 %5, 1000, !dbg !12125
  br i1 %cmp, label %for.body, label %for.end, !dbg !12126

for.body:                                         ; preds = %for.cond
  %6 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !12127
  %7 = load i32, i32* %port.addr, align 4, !dbg !12130
  %call = call zeroext i16 @xm_read16(%struct.skge_hw* %6, i32 %7, i32 0) #14, !dbg !12131
  %conv4 = zext i16 %call to i32, !dbg !12131
  %and = and i32 %conv4, 2048, !dbg !12132
  %tobool = icmp ne i32 %and, 0, !dbg !12132
  br i1 %tobool, label %if.end, label %if.then, !dbg !12133

if.then:                                          ; preds = %for.body
  br label %ready, !dbg !12134

if.end:                                           ; preds = %for.body
  call void @__const_udelay(i64 4295) #14, !dbg !12135
  br label %for.inc, !dbg !12140

for.inc:                                          ; preds = %if.end
  %8 = load i32, i32* %i, align 4, !dbg !12141
  %inc = add i32 %8, 1, !dbg !12141
  store i32 %inc, i32* %i, align 4, !dbg !12141
  br label %for.cond, !dbg !12142, !llvm.loop !12143

for.end:                                          ; preds = %for.cond
  store i32 -5, i32* %retval, align 4, !dbg !12145
  br label %return, !dbg !12145

ready:                                            ; preds = %if.then
  call void @llvm.dbg.label(metadata !12146), !dbg !12147
  %9 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !12148
  %10 = load i32, i32* %port.addr, align 4, !dbg !12149
  %11 = load i16, i16* %val.addr, align 2, !dbg !12150
  call void @xm_write16(%struct.skge_hw* %9, i32 %10, i32 56, i16 zeroext %11) #14, !dbg !12151
  store i32 0, i32* %i, align 4, !dbg !12152
  br label %for.cond5, !dbg !12154

for.cond5:                                        ; preds = %for.inc15, %ready
  %12 = load i32, i32* %i, align 4, !dbg !12155
  %cmp6 = icmp slt i32 %12, 1000, !dbg !12157
  br i1 %cmp6, label %for.body8, label %for.end17, !dbg !12158

for.body8:                                        ; preds = %for.cond5
  %13 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !12159
  %14 = load i32, i32* %port.addr, align 4, !dbg !12162
  %call9 = call zeroext i16 @xm_read16(%struct.skge_hw* %13, i32 %14, i32 0) #14, !dbg !12163
  %conv10 = zext i16 %call9 to i32, !dbg !12163
  %and11 = and i32 %conv10, 2048, !dbg !12164
  %tobool12 = icmp ne i32 %and11, 0, !dbg !12164
  br i1 %tobool12, label %if.end14, label %if.then13, !dbg !12165

if.then13:                                        ; preds = %for.body8
  store i32 0, i32* %retval, align 4, !dbg !12166
  br label %return, !dbg !12166

if.end14:                                         ; preds = %for.body8
  call void @__const_udelay(i64 4295) #14, !dbg !12167
  br label %for.inc15, !dbg !12172

for.inc15:                                        ; preds = %if.end14
  %15 = load i32, i32* %i, align 4, !dbg !12173
  %inc16 = add i32 %15, 1, !dbg !12173
  store i32 %inc16, i32* %i, align 4, !dbg !12173
  br label %for.cond5, !dbg !12174, !llvm.loop !12175

for.end17:                                        ; preds = %for.cond5
  store i32 -110, i32* %retval, align 4, !dbg !12177
  br label %return, !dbg !12177

return:                                           ; preds = %for.end17, %if.then13, %for.end
  %16 = load i32, i32* %retval, align 4, !dbg !12178
  ret i32 %16, !dbg !12178
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @bcom_check_link(%struct.skge_hw* %hw, i32 %port) #2 !dbg !12179 {
entry:
  %hw.addr = alloca %struct.skge_hw*, align 8
  %port.addr = alloca i32, align 4
  %dev = alloca %struct.net_device*, align 8
  %skge = alloca %struct.skge_port*, align 8
  %status = alloca i16, align 2
  %lpa = alloca i16, align 2
  %aux = alloca i16, align 2
  store %struct.skge_hw* %hw, %struct.skge_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.skge_hw** %hw.addr, metadata !12180, metadata !DIExpression()), !dbg !12181
  store i32 %port, i32* %port.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %port.addr, metadata !12182, metadata !DIExpression()), !dbg !12183
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev, metadata !12184, metadata !DIExpression()), !dbg !12185
  %0 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !12186
  %dev1 = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %0, i32 0, i32 4, !dbg !12187
  %1 = load i32, i32* %port.addr, align 4, !dbg !12188
  %idxprom = sext i32 %1 to i64, !dbg !12186
  %arrayidx = getelementptr [2 x %struct.net_device*], [2 x %struct.net_device*]* %dev1, i64 0, i64 %idxprom, !dbg !12186
  %2 = load %struct.net_device*, %struct.net_device** %arrayidx, align 8, !dbg !12186
  store %struct.net_device* %2, %struct.net_device** %dev, align 8, !dbg !12185
  call void @llvm.dbg.declare(metadata %struct.skge_port** %skge, metadata !12189, metadata !DIExpression()), !dbg !12190
  %3 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !12191
  %call = call i8* @netdev_priv(%struct.net_device* %3) #14, !dbg !12192
  %4 = bitcast i8* %call to %struct.skge_port*, !dbg !12192
  store %struct.skge_port* %4, %struct.skge_port** %skge, align 8, !dbg !12190
  call void @llvm.dbg.declare(metadata i16* %status, metadata !12193, metadata !DIExpression()), !dbg !12194
  %5 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !12195
  %6 = load i32, i32* %port.addr, align 4, !dbg !12196
  %call2 = call zeroext i16 @xm_phy_read(%struct.skge_hw* %5, i32 %6, i16 zeroext 1) #14, !dbg !12197
  %7 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !12198
  %8 = load i32, i32* %port.addr, align 4, !dbg !12199
  %call3 = call zeroext i16 @xm_phy_read(%struct.skge_hw* %7, i32 %8, i16 zeroext 1) #14, !dbg !12200
  store i16 %call3, i16* %status, align 2, !dbg !12201
  %9 = load i16, i16* %status, align 2, !dbg !12202
  %conv = zext i16 %9 to i32, !dbg !12202
  %and = and i32 %conv, 4, !dbg !12204
  %cmp = icmp eq i32 %and, 0, !dbg !12205
  br i1 %cmp, label %if.then, label %if.end, !dbg !12206

if.then:                                          ; preds = %entry
  %10 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !12207
  %11 = load i32, i32* %port.addr, align 4, !dbg !12209
  call void @xm_link_down(%struct.skge_hw* %10, i32 %11) #14, !dbg !12210
  br label %if.end37, !dbg !12211

if.end:                                           ; preds = %entry
  %12 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !12212
  %autoneg = getelementptr inbounds %struct.skge_port, %struct.skge_port* %12, i32 0, i32 13, !dbg !12214
  %13 = load i8, i8* %autoneg, align 2, !dbg !12214
  %conv5 = zext i8 %13 to i32, !dbg !12212
  %cmp6 = icmp eq i32 %conv5, 1, !dbg !12215
  br i1 %cmp6, label %if.then8, label %if.end34, !dbg !12216

if.then8:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata i16* %lpa, metadata !12217, metadata !DIExpression()), !dbg !12219
  call void @llvm.dbg.declare(metadata i16* %aux, metadata !12220, metadata !DIExpression()), !dbg !12221
  %14 = load i16, i16* %status, align 2, !dbg !12222
  %conv9 = zext i16 %14 to i32, !dbg !12222
  %and10 = and i32 %conv9, 32, !dbg !12224
  %tobool = icmp ne i32 %and10, 0, !dbg !12224
  br i1 %tobool, label %if.end12, label %if.then11, !dbg !12225

if.then11:                                        ; preds = %if.then8
  br label %if.end37, !dbg !12226

if.end12:                                         ; preds = %if.then8
  %15 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !12227
  %16 = load i32, i32* %port.addr, align 4, !dbg !12228
  %call13 = call zeroext i16 @xm_phy_read(%struct.skge_hw* %15, i32 %16, i16 zeroext 5) #14, !dbg !12229
  store i16 %call13, i16* %lpa, align 2, !dbg !12230
  %17 = load i16, i16* %lpa, align 2, !dbg !12231
  %conv14 = zext i16 %17 to i32, !dbg !12231
  %and15 = and i32 %conv14, 8192, !dbg !12233
  %tobool16 = icmp ne i32 %and15, 0, !dbg !12233
  br i1 %tobool16, label %if.then17, label %if.end18, !dbg !12234

if.then17:                                        ; preds = %if.end12
  %18 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !12235
  call void (%struct.net_device*, i8*, ...) @netdev_notice(%struct.net_device* %18, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.34, i64 0, i64 0)) #15, !dbg !12237
  br label %if.end37, !dbg !12238

if.end18:                                         ; preds = %if.end12
  %19 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !12239
  %20 = load i32, i32* %port.addr, align 4, !dbg !12240
  %call19 = call zeroext i16 @xm_phy_read(%struct.skge_hw* %19, i32 %20, i16 zeroext 25) #14, !dbg !12241
  store i16 %call19, i16* %aux, align 2, !dbg !12242
  %21 = load i16, i16* %aux, align 2, !dbg !12243
  %conv20 = zext i16 %21 to i32, !dbg !12243
  %and21 = and i32 %conv20, 1792, !dbg !12244
  switch i32 %and21, label %sw.default [
    i32 1792, label %sw.bb
    i32 1536, label %sw.bb22
  ], !dbg !12245

sw.bb:                                            ; preds = %if.end18
  %22 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !12246
  %duplex = getelementptr inbounds %struct.skge_port, %struct.skge_port* %22, i32 0, i32 14, !dbg !12248
  store i8 1, i8* %duplex, align 1, !dbg !12249
  br label %sw.epilog, !dbg !12250

sw.bb22:                                          ; preds = %if.end18
  %23 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !12251
  %duplex23 = getelementptr inbounds %struct.skge_port, %struct.skge_port* %23, i32 0, i32 14, !dbg !12252
  store i8 0, i8* %duplex23, align 1, !dbg !12253
  br label %sw.epilog, !dbg !12254

sw.default:                                       ; preds = %if.end18
  %24 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !12255
  call void (%struct.net_device*, i8*, ...) @netdev_notice(%struct.net_device* %24, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.35, i64 0, i64 0)) #15, !dbg !12256
  br label %if.end37, !dbg !12257

sw.epilog:                                        ; preds = %sw.bb22, %sw.bb
  %25 = load i16, i16* %aux, align 2, !dbg !12258
  %conv24 = zext i16 %25 to i32, !dbg !12258
  %and25 = and i32 %conv24, 3, !dbg !12259
  switch i32 %and25, label %sw.default31 [
    i32 3, label %sw.bb26
    i32 2, label %sw.bb27
    i32 1, label %sw.bb29
  ], !dbg !12260

sw.bb26:                                          ; preds = %sw.epilog
  %26 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !12261
  %flow_status = getelementptr inbounds %struct.skge_port, %struct.skge_port* %26, i32 0, i32 10, !dbg !12263
  store i32 4, i32* %flow_status, align 4, !dbg !12264
  br label %sw.epilog33, !dbg !12265

sw.bb27:                                          ; preds = %sw.epilog
  %27 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !12266
  %flow_status28 = getelementptr inbounds %struct.skge_port, %struct.skge_port* %27, i32 0, i32 10, !dbg !12267
  store i32 2, i32* %flow_status28, align 4, !dbg !12268
  br label %sw.epilog33, !dbg !12269

sw.bb29:                                          ; preds = %sw.epilog
  %28 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !12270
  %flow_status30 = getelementptr inbounds %struct.skge_port, %struct.skge_port* %28, i32 0, i32 10, !dbg !12271
  store i32 3, i32* %flow_status30, align 4, !dbg !12272
  br label %sw.epilog33, !dbg !12273

sw.default31:                                     ; preds = %sw.epilog
  %29 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !12274
  %flow_status32 = getelementptr inbounds %struct.skge_port, %struct.skge_port* %29, i32 0, i32 10, !dbg !12275
  store i32 1, i32* %flow_status32, align 4, !dbg !12276
  br label %sw.epilog33, !dbg !12277

sw.epilog33:                                      ; preds = %sw.default31, %sw.bb29, %sw.bb27, %sw.bb26
  %30 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !12278
  %speed = getelementptr inbounds %struct.skge_port, %struct.skge_port* %30, i32 0, i32 15, !dbg !12279
  store i16 1000, i16* %speed, align 4, !dbg !12280
  br label %if.end34, !dbg !12281

if.end34:                                         ; preds = %sw.epilog33, %if.end
  %31 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !12282
  %call35 = call zeroext i1 @netif_carrier_ok(%struct.net_device* %31) #14, !dbg !12284
  br i1 %call35, label %if.end37, label %if.then36, !dbg !12285

if.then36:                                        ; preds = %if.end34
  %32 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !12286
  call void @genesis_link_up(%struct.skge_port* %32) #14, !dbg !12287
  br label %if.end37, !dbg !12287

if.end37:                                         ; preds = %if.then, %if.then11, %if.then17, %sw.default, %if.then36, %if.end34
  ret void, !dbg !12288
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @__xm_phy_read(%struct.skge_hw* %hw, i32 %port, i16 zeroext %reg, i16* %val) #2 !dbg !12289 {
entry:
  %retval = alloca i32, align 4
  %hw.addr = alloca %struct.skge_hw*, align 8
  %port.addr = alloca i32, align 4
  %reg.addr = alloca i16, align 2
  %val.addr = alloca i16*, align 8
  %i = alloca i32, align 4
  store %struct.skge_hw* %hw, %struct.skge_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.skge_hw** %hw.addr, metadata !12290, metadata !DIExpression()), !dbg !12291
  store i32 %port, i32* %port.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %port.addr, metadata !12292, metadata !DIExpression()), !dbg !12293
  store i16 %reg, i16* %reg.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %reg.addr, metadata !12294, metadata !DIExpression()), !dbg !12295
  store i16* %val, i16** %val.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %val.addr, metadata !12296, metadata !DIExpression()), !dbg !12297
  call void @llvm.dbg.declare(metadata i32* %i, metadata !12298, metadata !DIExpression()), !dbg !12299
  %0 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !12300
  %1 = load i32, i32* %port.addr, align 4, !dbg !12301
  %2 = load i16, i16* %reg.addr, align 2, !dbg !12302
  %conv = zext i16 %2 to i32, !dbg !12302
  %3 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !12303
  %phy_addr = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %3, i32 0, i32 12, !dbg !12304
  %4 = load i16, i16* %phy_addr, align 8, !dbg !12304
  %conv1 = zext i16 %4 to i32, !dbg !12303
  %or = or i32 %conv, %conv1, !dbg !12305
  %conv2 = trunc i32 %or to i16, !dbg !12302
  call void @xm_write16(%struct.skge_hw* %0, i32 %1, i32 52, i16 zeroext %conv2) #14, !dbg !12306
  %5 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !12307
  %6 = load i32, i32* %port.addr, align 4, !dbg !12308
  %call = call zeroext i16 @xm_read16(%struct.skge_hw* %5, i32 %6, i32 56) #14, !dbg !12309
  %7 = load i16*, i16** %val.addr, align 8, !dbg !12310
  store i16 %call, i16* %7, align 2, !dbg !12311
  %8 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !12312
  %phy_type = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %8, i32 0, i32 9, !dbg !12314
  %9 = load i8, i8* %phy_type, align 4, !dbg !12314
  %conv3 = zext i8 %9 to i32, !dbg !12312
  %cmp = icmp eq i32 %conv3, 0, !dbg !12315
  br i1 %cmp, label %if.then, label %if.end, !dbg !12316

if.then:                                          ; preds = %entry
  br label %ready, !dbg !12317

if.end:                                           ; preds = %entry
  store i32 0, i32* %i, align 4, !dbg !12318
  br label %for.cond, !dbg !12320

for.cond:                                         ; preds = %for.inc, %if.end
  %10 = load i32, i32* %i, align 4, !dbg !12321
  %cmp5 = icmp slt i32 %10, 1000, !dbg !12323
  br i1 %cmp5, label %for.body, label %for.end, !dbg !12324

for.body:                                         ; preds = %for.cond
  %11 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !12325
  %12 = load i32, i32* %port.addr, align 4, !dbg !12328
  %call7 = call zeroext i16 @xm_read16(%struct.skge_hw* %11, i32 %12, i32 0) #14, !dbg !12329
  %conv8 = zext i16 %call7 to i32, !dbg !12329
  %and = and i32 %conv8, 4096, !dbg !12330
  %tobool = icmp ne i32 %and, 0, !dbg !12330
  br i1 %tobool, label %if.then9, label %if.end10, !dbg !12331

if.then9:                                         ; preds = %for.body
  br label %ready, !dbg !12332

if.end10:                                         ; preds = %for.body
  call void @__const_udelay(i64 4295) #14, !dbg !12333
  br label %for.inc, !dbg !12338

for.inc:                                          ; preds = %if.end10
  %13 = load i32, i32* %i, align 4, !dbg !12339
  %inc = add i32 %13, 1, !dbg !12339
  store i32 %inc, i32* %i, align 4, !dbg !12339
  br label %for.cond, !dbg !12340, !llvm.loop !12341

for.end:                                          ; preds = %for.cond
  store i32 -110, i32* %retval, align 4, !dbg !12343
  br label %return, !dbg !12343

ready:                                            ; preds = %if.then9, %if.then
  call void @llvm.dbg.label(metadata !12344), !dbg !12345
  %14 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !12346
  %15 = load i32, i32* %port.addr, align 4, !dbg !12347
  %call11 = call zeroext i16 @xm_read16(%struct.skge_hw* %14, i32 %15, i32 56) #14, !dbg !12348
  %16 = load i16*, i16** %val.addr, align 8, !dbg !12349
  store i16 %call11, i16* %16, align 2, !dbg !12350
  store i32 0, i32* %retval, align 4, !dbg !12351
  br label %return, !dbg !12351

return:                                           ; preds = %ready, %for.end
  %17 = load i32, i32* %retval, align 4, !dbg !12352
  ret i32 %17, !dbg !12352
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @xm_write16(%struct.skge_hw* %hw, i32 %port, i32 %r, i16 zeroext %v) #2 !dbg !12353 {
entry:
  %hw.addr = alloca %struct.skge_hw*, align 8
  %port.addr = alloca i32, align 4
  %r.addr = alloca i32, align 4
  %v.addr = alloca i16, align 2
  store %struct.skge_hw* %hw, %struct.skge_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.skge_hw** %hw.addr, metadata !12354, metadata !DIExpression()), !dbg !12355
  store i32 %port, i32* %port.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %port.addr, metadata !12356, metadata !DIExpression()), !dbg !12357
  store i32 %r, i32* %r.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %r.addr, metadata !12358, metadata !DIExpression()), !dbg !12359
  store i16 %v, i16* %v.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %v.addr, metadata !12360, metadata !DIExpression()), !dbg !12361
  %0 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !12362
  %1 = load i32, i32* %port.addr, align 4, !dbg !12363
  %mul = mul i32 %1, 4096, !dbg !12363
  %add = add i32 8192, %mul, !dbg !12363
  %2 = load i32, i32* %r.addr, align 4, !dbg !12363
  %shl = shl i32 %2, 1, !dbg !12363
  %or = or i32 %add, %shl, !dbg !12363
  %3 = load i16, i16* %v.addr, align 2, !dbg !12364
  call void @skge_write16(%struct.skge_hw* %0, i32 %or, i16 zeroext %3) #14, !dbg !12365
  ret void, !dbg !12366
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i16 @xm_read16(%struct.skge_hw* %hw, i32 %port, i32 %reg) #2 !dbg !12367 {
entry:
  %hw.addr = alloca %struct.skge_hw*, align 8
  %port.addr = alloca i32, align 4
  %reg.addr = alloca i32, align 4
  store %struct.skge_hw* %hw, %struct.skge_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.skge_hw** %hw.addr, metadata !12368, metadata !DIExpression()), !dbg !12369
  store i32 %port, i32* %port.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %port.addr, metadata !12370, metadata !DIExpression()), !dbg !12371
  store i32 %reg, i32* %reg.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %reg.addr, metadata !12372, metadata !DIExpression()), !dbg !12373
  %0 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !12374
  %1 = load i32, i32* %port.addr, align 4, !dbg !12375
  %mul = mul i32 %1, 4096, !dbg !12375
  %add = add i32 8192, %mul, !dbg !12375
  %2 = load i32, i32* %reg.addr, align 4, !dbg !12375
  %shl = shl i32 %2, 1, !dbg !12375
  %or = or i32 %add, %shl, !dbg !12375
  %call = call zeroext i16 @skge_read16(%struct.skge_hw* %0, i32 %or) #14, !dbg !12376
  ret i16 %call, !dbg !12377
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @xm_link_down(%struct.skge_hw* %hw, i32 %port) #2 !dbg !12378 {
entry:
  %hw.addr = alloca %struct.skge_hw*, align 8
  %port.addr = alloca i32, align 4
  %dev = alloca %struct.net_device*, align 8
  %skge = alloca %struct.skge_port*, align 8
  store %struct.skge_hw* %hw, %struct.skge_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.skge_hw** %hw.addr, metadata !12379, metadata !DIExpression()), !dbg !12380
  store i32 %port, i32* %port.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %port.addr, metadata !12381, metadata !DIExpression()), !dbg !12382
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev, metadata !12383, metadata !DIExpression()), !dbg !12384
  %0 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !12385
  %dev1 = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %0, i32 0, i32 4, !dbg !12386
  %1 = load i32, i32* %port.addr, align 4, !dbg !12387
  %idxprom = sext i32 %1 to i64, !dbg !12385
  %arrayidx = getelementptr [2 x %struct.net_device*], [2 x %struct.net_device*]* %dev1, i64 0, i64 %idxprom, !dbg !12385
  %2 = load %struct.net_device*, %struct.net_device** %arrayidx, align 8, !dbg !12385
  store %struct.net_device* %2, %struct.net_device** %dev, align 8, !dbg !12384
  call void @llvm.dbg.declare(metadata %struct.skge_port** %skge, metadata !12388, metadata !DIExpression()), !dbg !12389
  %3 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !12390
  %call = call i8* @netdev_priv(%struct.net_device* %3) #14, !dbg !12391
  %4 = bitcast i8* %call to %struct.skge_port*, !dbg !12391
  store %struct.skge_port* %4, %struct.skge_port** %skge, align 8, !dbg !12389
  %5 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !12392
  %6 = load i32, i32* %port.addr, align 4, !dbg !12393
  call void @xm_write16(%struct.skge_hw* %5, i32 %6, i32 68, i16 zeroext -1) #14, !dbg !12394
  %7 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !12395
  %call2 = call zeroext i1 @netif_carrier_ok(%struct.net_device* %7) #14, !dbg !12397
  br i1 %call2, label %if.then, label %if.end, !dbg !12398

if.then:                                          ; preds = %entry
  %8 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !12399
  call void @skge_link_down(%struct.skge_port* %8) #14, !dbg !12400
  br label %if.end, !dbg !12400

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !12401
}

; Function Attrs: cold noredzone
declare dso_local void @netdev_notice(%struct.net_device*, i8*, ...) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @netif_carrier_ok(%struct.net_device* %dev) #2 !dbg !12402 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !12403, metadata !DIExpression()), !dbg !12404
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !12405
  %state = getelementptr inbounds %struct.net_device, %struct.net_device* %0, i32 0, i32 7, !dbg !12406
  %call = call zeroext i1 @test_bit(i64 2, i64* %state) #14, !dbg !12407
  %lnot = xor i1 %call, true, !dbg !12408
  ret i1 %lnot, !dbg !12409
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @genesis_link_up(%struct.skge_port* %skge) #2 !dbg !12410 {
entry:
  %skge.addr = alloca %struct.skge_port*, align 8
  %hw = alloca %struct.skge_hw*, align 8
  %port = alloca i32, align 4
  %cmd = alloca i16, align 2
  %msk = alloca i16, align 2
  %mode = alloca i32, align 4
  store %struct.skge_port* %skge, %struct.skge_port** %skge.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.skge_port** %skge.addr, metadata !12411, metadata !DIExpression()), !dbg !12412
  call void @llvm.dbg.declare(metadata %struct.skge_hw** %hw, metadata !12413, metadata !DIExpression()), !dbg !12414
  %0 = load %struct.skge_port*, %struct.skge_port** %skge.addr, align 8, !dbg !12415
  %hw1 = getelementptr inbounds %struct.skge_port, %struct.skge_port* %0, i32 0, i32 0, !dbg !12416
  %1 = load %struct.skge_hw*, %struct.skge_hw** %hw1, align 8, !dbg !12416
  store %struct.skge_hw* %1, %struct.skge_hw** %hw, align 8, !dbg !12414
  call void @llvm.dbg.declare(metadata i32* %port, metadata !12417, metadata !DIExpression()), !dbg !12418
  %2 = load %struct.skge_port*, %struct.skge_port** %skge.addr, align 8, !dbg !12419
  %port2 = getelementptr inbounds %struct.skge_port, %struct.skge_port* %2, i32 0, i32 3, !dbg !12420
  %3 = load i32, i32* %port2, align 8, !dbg !12420
  store i32 %3, i32* %port, align 4, !dbg !12418
  call void @llvm.dbg.declare(metadata i16* %cmd, metadata !12421, metadata !DIExpression()), !dbg !12422
  call void @llvm.dbg.declare(metadata i16* %msk, metadata !12423, metadata !DIExpression()), !dbg !12424
  call void @llvm.dbg.declare(metadata i32* %mode, metadata !12425, metadata !DIExpression()), !dbg !12426
  %4 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !12427
  %5 = load i32, i32* %port, align 4, !dbg !12428
  %call = call zeroext i16 @xm_read16(%struct.skge_hw* %4, i32 %5, i32 0) #14, !dbg !12429
  store i16 %call, i16* %cmd, align 2, !dbg !12430
  %6 = load %struct.skge_port*, %struct.skge_port** %skge.addr, align 8, !dbg !12431
  %flow_status = getelementptr inbounds %struct.skge_port, %struct.skge_port* %6, i32 0, i32 10, !dbg !12433
  %7 = load i32, i32* %flow_status, align 4, !dbg !12433
  %cmp = icmp eq i32 %7, 1, !dbg !12434
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !12435

lor.lhs.false:                                    ; preds = %entry
  %8 = load %struct.skge_port*, %struct.skge_port** %skge.addr, align 8, !dbg !12436
  %flow_status3 = getelementptr inbounds %struct.skge_port, %struct.skge_port* %8, i32 0, i32 10, !dbg !12437
  %9 = load i32, i32* %flow_status3, align 4, !dbg !12437
  %cmp4 = icmp eq i32 %9, 3, !dbg !12438
  br i1 %cmp4, label %if.then, label %if.else, !dbg !12439

if.then:                                          ; preds = %lor.lhs.false, %entry
  %10 = load i16, i16* %cmd, align 2, !dbg !12440
  %conv = zext i16 %10 to i32, !dbg !12440
  %or = or i32 %conv, 1024, !dbg !12440
  %conv5 = trunc i32 %or to i16, !dbg !12440
  store i16 %conv5, i16* %cmd, align 2, !dbg !12440
  br label %if.end, !dbg !12441

if.else:                                          ; preds = %lor.lhs.false
  %11 = load i16, i16* %cmd, align 2, !dbg !12442
  %conv6 = zext i16 %11 to i32, !dbg !12442
  %and = and i32 %conv6, -1025, !dbg !12442
  %conv7 = trunc i32 %and to i16, !dbg !12442
  store i16 %conv7, i16* %cmd, align 2, !dbg !12442
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %12 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !12443
  %13 = load i32, i32* %port, align 4, !dbg !12444
  %14 = load i16, i16* %cmd, align 2, !dbg !12445
  call void @xm_write16(%struct.skge_hw* %12, i32 %13, i32 0, i16 zeroext %14) #14, !dbg !12446
  %15 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !12447
  %16 = load i32, i32* %port, align 4, !dbg !12448
  %call8 = call i32 @xm_read32(%struct.skge_hw* %15, i32 %16, i32 292) #14, !dbg !12449
  store i32 %call8, i32* %mode, align 4, !dbg !12450
  %17 = load %struct.skge_port*, %struct.skge_port** %skge.addr, align 8, !dbg !12451
  %flow_status9 = getelementptr inbounds %struct.skge_port, %struct.skge_port* %17, i32 0, i32 10, !dbg !12453
  %18 = load i32, i32* %flow_status9, align 4, !dbg !12453
  %cmp10 = icmp eq i32 %18, 4, !dbg !12454
  br i1 %cmp10, label %if.then16, label %lor.lhs.false12, !dbg !12455

lor.lhs.false12:                                  ; preds = %if.end
  %19 = load %struct.skge_port*, %struct.skge_port** %skge.addr, align 8, !dbg !12456
  %flow_status13 = getelementptr inbounds %struct.skge_port, %struct.skge_port* %19, i32 0, i32 10, !dbg !12457
  %20 = load i32, i32* %flow_status13, align 4, !dbg !12457
  %cmp14 = icmp eq i32 %20, 3, !dbg !12458
  br i1 %cmp14, label %if.then16, label %if.else18, !dbg !12459

if.then16:                                        ; preds = %lor.lhs.false12, %if.end
  %21 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !12460
  %22 = load i32, i32* %port, align 4, !dbg !12462
  call void @xm_write16(%struct.skge_hw* %21, i32 %22, i32 118, i16 zeroext -1) #14, !dbg !12463
  %23 = load i32, i32* %mode, align 4, !dbg !12464
  %or17 = or i32 %23, 33947648, !dbg !12464
  store i32 %or17, i32* %mode, align 4, !dbg !12464
  %24 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !12465
  %25 = load i32, i32* %port, align 4, !dbg !12466
  %shl = shl i32 %25, 7, !dbg !12466
  %add = add i32 %shl, 3096, !dbg !12466
  call void @skge_write16(%struct.skge_hw* %24, i32 %add, i16 zeroext 128) #14, !dbg !12467
  br label %if.end22, !dbg !12468

if.else18:                                        ; preds = %lor.lhs.false12
  %26 = load i32, i32* %mode, align 4, !dbg !12469
  %and19 = and i32 %26, -33947649, !dbg !12469
  store i32 %and19, i32* %mode, align 4, !dbg !12469
  %27 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !12471
  %28 = load i32, i32* %port, align 4, !dbg !12472
  %shl20 = shl i32 %28, 7, !dbg !12472
  %add21 = add i32 %shl20, 3096, !dbg !12472
  call void @skge_write16(%struct.skge_hw* %27, i32 %add21, i16 zeroext 64) #14, !dbg !12473
  br label %if.end22

if.end22:                                         ; preds = %if.else18, %if.then16
  %29 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !12474
  %30 = load i32, i32* %port, align 4, !dbg !12475
  %31 = load i32, i32* %mode, align 4, !dbg !12476
  call void @xm_write32(%struct.skge_hw* %29, i32 %30, i32 292, i32 %31) #14, !dbg !12477
  %32 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !12478
  %33 = load i32, i32* %port, align 4, !dbg !12479
  %call23 = call zeroext i16 @xm_read16(%struct.skge_hw* %32, i32 %33, i32 68) #14, !dbg !12480
  store i16 %call23, i16* %msk, align 2, !dbg !12481
  %34 = load i16, i16* %msk, align 2, !dbg !12482
  %conv24 = zext i16 %34 to i32, !dbg !12482
  %and25 = and i32 %conv24, -5, !dbg !12482
  %conv26 = trunc i32 %and25 to i16, !dbg !12482
  store i16 %conv26, i16* %msk, align 2, !dbg !12482
  %35 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !12483
  %36 = load i32, i32* %port, align 4, !dbg !12484
  %37 = load i16, i16* %msk, align 2, !dbg !12485
  call void @xm_write16(%struct.skge_hw* %35, i32 %36, i32 68, i16 zeroext %37) #14, !dbg !12486
  %38 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !12487
  %39 = load i32, i32* %port, align 4, !dbg !12488
  %call27 = call zeroext i16 @xm_read16(%struct.skge_hw* %38, i32 %39, i32 72) #14, !dbg !12489
  %40 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !12490
  %41 = load i32, i32* %port, align 4, !dbg !12491
  %call28 = call zeroext i16 @xm_read16(%struct.skge_hw* %40, i32 %41, i32 0) #14, !dbg !12492
  store i16 %call28, i16* %cmd, align 2, !dbg !12493
  %42 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !12494
  %phy_type = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %42, i32 0, i32 9, !dbg !12496
  %43 = load i8, i8* %phy_type, align 4, !dbg !12496
  %conv29 = zext i8 %43 to i32, !dbg !12494
  %cmp30 = icmp ne i32 %conv29, 0, !dbg !12497
  br i1 %cmp30, label %land.lhs.true, label %if.end39, !dbg !12498

land.lhs.true:                                    ; preds = %if.end22
  %44 = load %struct.skge_port*, %struct.skge_port** %skge.addr, align 8, !dbg !12499
  %duplex = getelementptr inbounds %struct.skge_port, %struct.skge_port* %44, i32 0, i32 14, !dbg !12500
  %45 = load i8, i8* %duplex, align 1, !dbg !12500
  %conv32 = zext i8 %45 to i32, !dbg !12499
  %cmp33 = icmp eq i32 %conv32, 1, !dbg !12501
  br i1 %cmp33, label %if.then35, label %if.end39, !dbg !12502

if.then35:                                        ; preds = %land.lhs.true
  %46 = load i16, i16* %cmd, align 2, !dbg !12503
  %conv36 = zext i16 %46 to i32, !dbg !12503
  %or37 = or i32 %conv36, 16, !dbg !12503
  %conv38 = trunc i32 %or37 to i16, !dbg !12503
  store i16 %conv38, i16* %cmd, align 2, !dbg !12503
  br label %if.end39, !dbg !12504

if.end39:                                         ; preds = %if.then35, %land.lhs.true, %if.end22
  %47 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !12505
  %phy_type40 = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %47, i32 0, i32 9, !dbg !12507
  %48 = load i8, i8* %phy_type40, align 4, !dbg !12507
  %conv41 = zext i8 %48 to i32, !dbg !12505
  %cmp42 = icmp eq i32 %conv41, 1, !dbg !12508
  br i1 %cmp42, label %if.then44, label %if.end51, !dbg !12509

if.then44:                                        ; preds = %if.end39
  %49 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !12510
  %50 = load i32, i32* %port, align 4, !dbg !12512
  %51 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !12513
  %52 = load i32, i32* %port, align 4, !dbg !12514
  %call45 = call zeroext i16 @xm_phy_read(%struct.skge_hw* %51, i32 %52, i16 zeroext 24) #14, !dbg !12515
  %conv46 = zext i16 %call45 to i32, !dbg !12515
  %and47 = and i32 %conv46, -33, !dbg !12516
  %conv48 = trunc i32 %and47 to i16, !dbg !12515
  %call49 = call i32 @xm_phy_write(%struct.skge_hw* %49, i32 %50, i16 zeroext 24, i16 zeroext %conv48) #14, !dbg !12517
  %53 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !12518
  %54 = load i32, i32* %port, align 4, !dbg !12519
  %call50 = call i32 @xm_phy_write(%struct.skge_hw* %53, i32 %54, i16 zeroext 27, i16 zeroext -17423) #14, !dbg !12520
  br label %if.end51, !dbg !12521

if.end51:                                         ; preds = %if.then44, %if.end39
  %55 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !12522
  %56 = load i32, i32* %port, align 4, !dbg !12523
  %57 = load i16, i16* %cmd, align 2, !dbg !12524
  %conv52 = zext i16 %57 to i32, !dbg !12524
  %or53 = or i32 %conv52, 2, !dbg !12525
  %or54 = or i32 %or53, 1, !dbg !12526
  %conv55 = trunc i32 %or54 to i16, !dbg !12524
  call void @xm_write16(%struct.skge_hw* %55, i32 %56, i32 0, i16 zeroext %conv55) #14, !dbg !12527
  %58 = load %struct.skge_port*, %struct.skge_port** %skge.addr, align 8, !dbg !12528
  call void @skge_link_up(%struct.skge_port* %58) #14, !dbg !12529
  ret void, !dbg !12530
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @xm_read32(%struct.skge_hw* %hw, i32 %port, i32 %reg) #2 !dbg !12531 {
entry:
  %hw.addr = alloca %struct.skge_hw*, align 8
  %port.addr = alloca i32, align 4
  %reg.addr = alloca i32, align 4
  %v = alloca i32, align 4
  store %struct.skge_hw* %hw, %struct.skge_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.skge_hw** %hw.addr, metadata !12534, metadata !DIExpression()), !dbg !12535
  store i32 %port, i32* %port.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %port.addr, metadata !12536, metadata !DIExpression()), !dbg !12537
  store i32 %reg, i32* %reg.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %reg.addr, metadata !12538, metadata !DIExpression()), !dbg !12539
  call void @llvm.dbg.declare(metadata i32* %v, metadata !12540, metadata !DIExpression()), !dbg !12541
  %0 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !12542
  %1 = load i32, i32* %port.addr, align 4, !dbg !12543
  %mul = mul i32 %1, 4096, !dbg !12543
  %add = add i32 8192, %mul, !dbg !12543
  %2 = load i32, i32* %reg.addr, align 4, !dbg !12543
  %shl = shl i32 %2, 1, !dbg !12543
  %or = or i32 %add, %shl, !dbg !12543
  %call = call zeroext i16 @skge_read16(%struct.skge_hw* %0, i32 %or) #14, !dbg !12544
  %conv = zext i16 %call to i32, !dbg !12544
  store i32 %conv, i32* %v, align 4, !dbg !12545
  %3 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !12546
  %4 = load i32, i32* %port.addr, align 4, !dbg !12547
  %mul1 = mul i32 %4, 4096, !dbg !12547
  %add2 = add i32 8192, %mul1, !dbg !12547
  %5 = load i32, i32* %reg.addr, align 4, !dbg !12547
  %add3 = add i32 %5, 2, !dbg !12547
  %shl4 = shl i32 %add3, 1, !dbg !12547
  %or5 = or i32 %add2, %shl4, !dbg !12547
  %call6 = call zeroext i16 @skge_read16(%struct.skge_hw* %3, i32 %or5) #14, !dbg !12548
  %conv7 = zext i16 %call6 to i32, !dbg !12549
  %shl8 = shl i32 %conv7, 16, !dbg !12550
  %6 = load i32, i32* %v, align 4, !dbg !12551
  %or9 = or i32 %6, %shl8, !dbg !12551
  store i32 %or9, i32* %v, align 4, !dbg !12551
  %7 = load i32, i32* %v, align 4, !dbg !12552
  ret i32 %7, !dbg !12553
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @xm_write32(%struct.skge_hw* %hw, i32 %port, i32 %r, i32 %v) #2 !dbg !12554 {
entry:
  %hw.addr = alloca %struct.skge_hw*, align 8
  %port.addr = alloca i32, align 4
  %r.addr = alloca i32, align 4
  %v.addr = alloca i32, align 4
  store %struct.skge_hw* %hw, %struct.skge_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.skge_hw** %hw.addr, metadata !12557, metadata !DIExpression()), !dbg !12558
  store i32 %port, i32* %port.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %port.addr, metadata !12559, metadata !DIExpression()), !dbg !12560
  store i32 %r, i32* %r.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %r.addr, metadata !12561, metadata !DIExpression()), !dbg !12562
  store i32 %v, i32* %v.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %v.addr, metadata !12563, metadata !DIExpression()), !dbg !12564
  %0 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !12565
  %1 = load i32, i32* %port.addr, align 4, !dbg !12566
  %mul = mul i32 %1, 4096, !dbg !12566
  %add = add i32 8192, %mul, !dbg !12566
  %2 = load i32, i32* %r.addr, align 4, !dbg !12566
  %shl = shl i32 %2, 1, !dbg !12566
  %or = or i32 %add, %shl, !dbg !12566
  %3 = load i32, i32* %v.addr, align 4, !dbg !12567
  %and = and i32 %3, 65535, !dbg !12568
  %conv = trunc i32 %and to i16, !dbg !12567
  call void @skge_write16(%struct.skge_hw* %0, i32 %or, i16 zeroext %conv) #14, !dbg !12569
  %4 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !12570
  %5 = load i32, i32* %port.addr, align 4, !dbg !12571
  %mul1 = mul i32 %5, 4096, !dbg !12571
  %add2 = add i32 8192, %mul1, !dbg !12571
  %6 = load i32, i32* %r.addr, align 4, !dbg !12571
  %add3 = add i32 %6, 2, !dbg !12571
  %shl4 = shl i32 %add3, 1, !dbg !12571
  %or5 = or i32 %add2, %shl4, !dbg !12571
  %7 = load i32, i32* %v.addr, align 4, !dbg !12572
  %shr = lshr i32 %7, 16, !dbg !12573
  %conv6 = trunc i32 %shr to i16, !dbg !12572
  call void @skge_write16(%struct.skge_hw* %4, i32 %or5, i16 zeroext %conv6) #14, !dbg !12574
  ret void, !dbg !12575
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @arch_local_irq_disable() #2 !dbg !12576 {
entry:
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !12578, metadata !DIExpression()), !dbg !12580
  %0 = load i64, i64* %__edi, align 8, !dbg !12580
  store i64 %0, i64* %__edi, align 8, !dbg !12580
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !12581, metadata !DIExpression()), !dbg !12580
  %1 = load i64, i64* %__esi, align 8, !dbg !12580
  store i64 %1, i64* %__esi, align 8, !dbg !12580
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !12582, metadata !DIExpression()), !dbg !12580
  %2 = load i64, i64* %__edx, align 8, !dbg !12580
  store i64 %2, i64* %__edx, align 8, !dbg !12580
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !12583, metadata !DIExpression()), !dbg !12580
  %3 = load i64, i64* %__ecx, align 8, !dbg !12580
  store i64 %3, i64* %__ecx, align 8, !dbg !12580
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !12584, metadata !DIExpression()), !dbg !12580
  %4 = load i64, i64* %__eax, align 8, !dbg !12580
  store i64 %4, i64* %__eax, align 8, !dbg !12580
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 2, i32 0), align 8, !dbg !12580
  %6 = call i64 @llvm.read_register.i64(metadata !9501), !dbg !12580
  %7 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 38, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 2, i32 0), i32 1, i64 %6) #10, !dbg !12580, !srcloc !12585
  %asmresult = extractvalue { i64, i64 } %7, 0, !dbg !12580
  %asmresult1 = extractvalue { i64, i64 } %7, 1, !dbg !12580
  store i64 %asmresult, i64* %__eax, align 8, !dbg !12580
  call void @llvm.write_register.i64(metadata !9501, i64 %asmresult1), !dbg !12580
  ret void, !dbg !12586
}

; Function Attrs: nounwind readonly
declare i64 @llvm.read_register.i64(metadata) #9

; Function Attrs: nounwind
declare void @llvm.write_register.i64(metadata, i64) #10

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @writel(i32 %val, i8* %addr) #2 !dbg !12587 {
entry:
  %val.addr = alloca i32, align 4
  %addr.addr = alloca i8*, align 8
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !12590, metadata !DIExpression()), !dbg !12591
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !12592, metadata !DIExpression()), !dbg !12591
  %0 = load i32, i32* %val.addr, align 4, !dbg !12591
  %1 = load i8*, i8** %addr.addr, align 8, !dbg !12591
  %2 = bitcast i8* %1 to i32*, !dbg !12591
  call void asm sideeffect "movl $0,$1", "r,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i32 %0, i32* %2) #10, !dbg !12591, !srcloc !12593
  ret void, !dbg !12591
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @readl(i8* %addr) #2 !dbg !12594 {
entry:
  %addr.addr = alloca i8*, align 8
  %ret = alloca i32, align 4
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !12597, metadata !DIExpression()), !dbg !12598
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !12599, metadata !DIExpression()), !dbg !12598
  %0 = load i8*, i8** %addr.addr, align 8, !dbg !12598
  %1 = bitcast i8* %0 to i32*, !dbg !12598
  %2 = call i32 asm sideeffect "movl $1,$0", "=r,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i32* %1) #10, !dbg !12598, !srcloc !12600
  store i32 %2, i32* %ret, align 4, !dbg !12598
  %3 = load i32, i32* %ret, align 4, !dbg !12598
  ret i32 %3, !dbg !12598
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @arch_local_irq_enable() #2 !dbg !12601 {
entry:
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !12602, metadata !DIExpression()), !dbg !12604
  %0 = load i64, i64* %__edi, align 8, !dbg !12604
  store i64 %0, i64* %__edi, align 8, !dbg !12604
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !12605, metadata !DIExpression()), !dbg !12604
  %1 = load i64, i64* %__esi, align 8, !dbg !12604
  store i64 %1, i64* %__esi, align 8, !dbg !12604
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !12606, metadata !DIExpression()), !dbg !12604
  %2 = load i64, i64* %__edx, align 8, !dbg !12604
  store i64 %2, i64* %__edx, align 8, !dbg !12604
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !12607, metadata !DIExpression()), !dbg !12604
  %3 = load i64, i64* %__ecx, align 8, !dbg !12604
  store i64 %3, i64* %__ecx, align 8, !dbg !12604
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !12608, metadata !DIExpression()), !dbg !12604
  %4 = load i64, i64* %__eax, align 8, !dbg !12604
  store i64 %4, i64* %__eax, align 8, !dbg !12604
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 3, i32 0), align 8, !dbg !12604
  %6 = call i64 @llvm.read_register.i64(metadata !9501), !dbg !12604
  %7 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 39, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 3, i32 0), i32 1, i64 %6) #10, !dbg !12604, !srcloc !12609
  %asmresult = extractvalue { i64, i64 } %7, 0, !dbg !12604
  %asmresult1 = extractvalue { i64, i64 } %7, 1, !dbg !12604
  store i64 %asmresult, i64* %__eax, align 8, !dbg !12604
  call void @llvm.write_register.i64(metadata !9501, i64 %asmresult1), !dbg !12604
  ret void, !dbg !12610
}

; Function Attrs: noredzone
declare dso_local i32 @pci_read_config_word(%struct.pci_dev*, i32, i16*) #1

; Function Attrs: noredzone
declare dso_local i32 @pci_write_config_word(%struct.pci_dev*, i32, i16 zeroext) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i8 @skge_read8(%struct.skge_hw* %hw, i32 %reg) #2 !dbg !12611 {
entry:
  %hw.addr = alloca %struct.skge_hw*, align 8
  %reg.addr = alloca i32, align 4
  store %struct.skge_hw* %hw, %struct.skge_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.skge_hw** %hw.addr, metadata !12614, metadata !DIExpression()), !dbg !12615
  store i32 %reg, i32* %reg.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %reg.addr, metadata !12616, metadata !DIExpression()), !dbg !12617
  %0 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !12618
  %regs = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %0, i32 0, i32 0, !dbg !12619
  %1 = load i8*, i8** %regs, align 8, !dbg !12619
  %2 = load i32, i32* %reg.addr, align 4, !dbg !12620
  %idx.ext = sext i32 %2 to i64, !dbg !12621
  %add.ptr = getelementptr i8, i8* %1, i64 %idx.ext, !dbg !12621
  %call = call zeroext i8 @readb(i8* %add.ptr) #14, !dbg !12622
  ret i8 %call, !dbg !12623
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @genesis_init(%struct.skge_hw* %hw) #2 !dbg !12624 {
entry:
  %hw.addr = alloca %struct.skge_hw*, align 8
  store %struct.skge_hw* %hw, %struct.skge_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.skge_hw** %hw.addr, metadata !12627, metadata !DIExpression()), !dbg !12628
  %0 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !12629
  call void @skge_write32(%struct.skge_hw* %0, i32 368, i32 26562500) #14, !dbg !12630
  %1 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !12631
  call void @skge_write8(%struct.skge_hw* %1, i32 376, i8 zeroext 2) #14, !dbg !12632
  %2 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !12633
  call void @skge_write16(%struct.skge_hw* %2, i32 440, i16 zeroext 2) #14, !dbg !12634
  %3 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !12635
  call void @skge_write8(%struct.skge_hw* %3, i32 432, i8 zeroext 72) #14, !dbg !12636
  %4 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !12637
  call void @skge_write8(%struct.skge_hw* %4, i32 433, i8 zeroext 72) #14, !dbg !12638
  %5 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !12639
  call void @skge_write8(%struct.skge_hw* %5, i32 434, i8 zeroext 72) #14, !dbg !12640
  %6 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !12641
  call void @skge_write8(%struct.skge_hw* %6, i32 435, i8 zeroext 72) #14, !dbg !12642
  %7 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !12643
  call void @skge_write8(%struct.skge_hw* %7, i32 448, i8 zeroext 0) #14, !dbg !12644
  %8 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !12645
  call void @skge_write8(%struct.skge_hw* %8, i32 449, i8 zeroext 0) #14, !dbg !12646
  %9 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !12647
  call void @skge_write8(%struct.skge_hw* %9, i32 450, i8 zeroext 0) #14, !dbg !12648
  %10 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !12649
  call void @skge_write8(%struct.skge_hw* %10, i32 451, i8 zeroext 0) #14, !dbg !12650
  %11 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !12651
  call void @skge_write16(%struct.skge_hw* %11, i32 496, i16 zeroext 2) #14, !dbg !12652
  %12 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !12653
  call void @skge_write16(%struct.skge_hw* %12, i32 464, i16 zeroext -1) #14, !dbg !12654
  %13 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !12655
  call void @skge_write16(%struct.skge_hw* %13, i32 472, i16 zeroext -1) #14, !dbg !12656
  %14 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !12657
  call void @skge_write16(%struct.skge_hw* %14, i32 468, i16 zeroext -1) #14, !dbg !12658
  %15 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !12659
  call void @skge_write16(%struct.skge_hw* %15, i32 476, i16 zeroext -1) #14, !dbg !12660
  ret void, !dbg !12661
}

; Function Attrs: noredzone
declare dso_local i32 @pci_read_config_dword(%struct.pci_dev*, i32, i32*) #1

; Function Attrs: noredzone
declare dso_local i32 @pci_write_config_dword(%struct.pci_dev*, i32, i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @skge_usecs2clk(%struct.skge_hw* %hw, i32 %usec) #2 !dbg !12662 {
entry:
  %hw.addr = alloca %struct.skge_hw*, align 8
  %usec.addr = alloca i32, align 4
  store %struct.skge_hw* %hw, %struct.skge_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.skge_hw** %hw.addr, metadata !12665, metadata !DIExpression()), !dbg !12666
  store i32 %usec, i32* %usec.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %usec.addr, metadata !12667, metadata !DIExpression()), !dbg !12668
  %0 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !12669
  %call = call i32 @hwkhz(%struct.skge_hw* %0) #14, !dbg !12670
  %1 = load i32, i32* %usec.addr, align 4, !dbg !12671
  %mul = mul i32 %call, %1, !dbg !12672
  %div = udiv i32 %mul, 1000, !dbg !12673
  ret i32 %div, !dbg !12674
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @genesis_reset(%struct.skge_hw* %hw, i32 %port) #2 !dbg !9398 {
entry:
  %hw.addr = alloca %struct.skge_hw*, align 8
  %port.addr = alloca i32, align 4
  %reg = alloca i32, align 4
  store %struct.skge_hw* %hw, %struct.skge_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.skge_hw** %hw.addr, metadata !12675, metadata !DIExpression()), !dbg !12676
  store i32 %port, i32* %port.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %port.addr, metadata !12677, metadata !DIExpression()), !dbg !12678
  call void @llvm.dbg.declare(metadata i32* %reg, metadata !12679, metadata !DIExpression()), !dbg !12680
  %0 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !12681
  %1 = load i32, i32* %port.addr, align 4, !dbg !12682
  %shl = shl i32 %1, 7, !dbg !12682
  %add = add i32 %shl, 3852, !dbg !12682
  call void @skge_write8(%struct.skge_hw* %0, i32 %add, i8 zeroext 0) #14, !dbg !12683
  %2 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !12684
  %3 = load i32, i32* %port.addr, align 4, !dbg !12685
  call void @xm_write32(%struct.skge_hw* %2, i32 %3, i32 64, i32 4) #14, !dbg !12686
  %4 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !12687
  %5 = load i32, i32* %port.addr, align 4, !dbg !12688
  call void @xm_write16(%struct.skge_hw* %4, i32 %5, i32 68, i16 zeroext -1) #14, !dbg !12689
  %6 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !12690
  %7 = load i32, i32* %port.addr, align 4, !dbg !12691
  call void @xm_write32(%struct.skge_hw* %6, i32 %7, i32 292, i32 0) #14, !dbg !12692
  %8 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !12693
  %9 = load i32, i32* %port.addr, align 4, !dbg !12694
  call void @xm_write16(%struct.skge_hw* %8, i32 %9, i32 32, i16 zeroext 0) #14, !dbg !12695
  %10 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !12696
  %11 = load i32, i32* %port.addr, align 4, !dbg !12697
  call void @xm_write16(%struct.skge_hw* %10, i32 %11, i32 48, i16 zeroext 0) #14, !dbg !12698
  %12 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !12699
  %phy_type = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %12, i32 0, i32 9, !dbg !12701
  %13 = load i8, i8* %phy_type, align 4, !dbg !12701
  %conv = zext i8 %13 to i32, !dbg !12699
  %cmp = icmp eq i32 %conv, 1, !dbg !12702
  br i1 %cmp, label %if.then, label %if.end, !dbg !12703

if.then:                                          ; preds = %entry
  %14 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !12704
  %15 = load i32, i32* %port.addr, align 4, !dbg !12705
  call void @xm_write16(%struct.skge_hw* %14, i32 %15, i32 27, i16 zeroext -1) #14, !dbg !12706
  br label %if.end, !dbg !12706

if.end:                                           ; preds = %if.then, %entry
  %16 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !12707
  %17 = load i32, i32* %port.addr, align 4, !dbg !12708
  call void @xm_outhash(%struct.skge_hw* %16, i32 %17, i32 272, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @genesis_reset.zero, i64 0, i64 0)) #14, !dbg !12709
  %18 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !12710
  %19 = load i32, i32* %port.addr, align 4, !dbg !12711
  %call = call i32 @xm_read32(%struct.skge_hw* %18, i32 %19, i32 292) #14, !dbg !12712
  store i32 %call, i32* %reg, align 4, !dbg !12713
  %20 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !12714
  %21 = load i32, i32* %port.addr, align 4, !dbg !12715
  %22 = load i32, i32* %reg, align 4, !dbg !12716
  %or = or i32 %22, 2, !dbg !12717
  call void @xm_write32(%struct.skge_hw* %20, i32 %21, i32 292, i32 %or) #14, !dbg !12718
  %23 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !12719
  %24 = load i32, i32* %port.addr, align 4, !dbg !12720
  %25 = load i32, i32* %reg, align 4, !dbg !12721
  %or2 = or i32 %25, 1, !dbg !12722
  call void @xm_write32(%struct.skge_hw* %23, i32 %24, i32 292, i32 %or2) #14, !dbg !12723
  ret void, !dbg !12724
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @yukon_reset(%struct.skge_hw* %hw, i32 %port) #2 !dbg !12725 {
entry:
  %hw.addr = alloca %struct.skge_hw*, align 8
  %port.addr = alloca i32, align 4
  store %struct.skge_hw* %hw, %struct.skge_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.skge_hw** %hw.addr, metadata !12726, metadata !DIExpression()), !dbg !12727
  store i32 %port, i32* %port.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %port.addr, metadata !12728, metadata !DIExpression()), !dbg !12729
  %0 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !12730
  %1 = load i32, i32* %port.addr, align 4, !dbg !12731
  %call = call i32 @gm_phy_write(%struct.skge_hw* %0, i32 %1, i16 zeroext 18, i16 zeroext 0) #14, !dbg !12732
  %2 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !12733
  %3 = load i32, i32* %port.addr, align 4, !dbg !12734
  call void @gma_write16(%struct.skge_hw* %2, i32 %3, i32 52, i16 zeroext 0) #14, !dbg !12735
  %4 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !12736
  %5 = load i32, i32* %port.addr, align 4, !dbg !12737
  call void @gma_write16(%struct.skge_hw* %4, i32 %5, i32 56, i16 zeroext 0) #14, !dbg !12738
  %6 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !12739
  %7 = load i32, i32* %port.addr, align 4, !dbg !12740
  call void @gma_write16(%struct.skge_hw* %6, i32 %7, i32 60, i16 zeroext 0) #14, !dbg !12741
  %8 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !12742
  %9 = load i32, i32* %port.addr, align 4, !dbg !12743
  call void @gma_write16(%struct.skge_hw* %8, i32 %9, i32 64, i16 zeroext 0) #14, !dbg !12744
  %10 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !12745
  %11 = load i32, i32* %port.addr, align 4, !dbg !12746
  %12 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !12747
  %13 = load i32, i32* %port.addr, align 4, !dbg !12748
  %call1 = call zeroext i16 @gma_read16(%struct.skge_hw* %12, i32 %13, i32 12) #14, !dbg !12749
  %conv = zext i16 %call1 to i32, !dbg !12749
  %or = or i32 %conv, 32768, !dbg !12750
  %or2 = or i32 %or, 16384, !dbg !12751
  %conv3 = trunc i32 %or2 to i16, !dbg !12749
  call void @gma_write16(%struct.skge_hw* %10, i32 %11, i32 12, i16 zeroext %conv3) #14, !dbg !12752
  ret void, !dbg !12753
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i8 @readb(i8* %addr) #2 !dbg !12754 {
entry:
  %addr.addr = alloca i8*, align 8
  %ret = alloca i8, align 1
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !12757, metadata !DIExpression()), !dbg !12758
  call void @llvm.dbg.declare(metadata i8* %ret, metadata !12759, metadata !DIExpression()), !dbg !12758
  %0 = load i8*, i8** %addr.addr, align 8, !dbg !12758
  %1 = call i8 asm sideeffect "movb $1,$0", "=q,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i8* %0) #10, !dbg !12758, !srcloc !12760
  store i8 %1, i8* %ret, align 1, !dbg !12758
  %2 = load i8, i8* %ret, align 1, !dbg !12758
  ret i8 %2, !dbg !12758
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @hwkhz(%struct.skge_hw* %hw) #2 !dbg !12761 {
entry:
  %hw.addr = alloca %struct.skge_hw*, align 8
  store %struct.skge_hw* %hw, %struct.skge_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.skge_hw** %hw.addr, metadata !12764, metadata !DIExpression()), !dbg !12765
  %0 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !12766
  %call = call zeroext i1 @is_genesis(%struct.skge_hw* %0) #14, !dbg !12767
  %1 = zext i1 %call to i64, !dbg !12767
  %cond = select i1 %call, i32 53125, i32 78125, !dbg !12767
  ret i32 %cond, !dbg !12768
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @xm_outhash(%struct.skge_hw* %hw, i32 %port, i32 %reg, i8* %hash) #2 !dbg !12769 {
entry:
  %hw.addr = alloca %struct.skge_hw*, align 8
  %port.addr = alloca i32, align 4
  %reg.addr = alloca i32, align 4
  %hash.addr = alloca i8*, align 8
  store %struct.skge_hw* %hw, %struct.skge_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.skge_hw** %hw.addr, metadata !12772, metadata !DIExpression()), !dbg !12773
  store i32 %port, i32* %port.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %port.addr, metadata !12774, metadata !DIExpression()), !dbg !12775
  store i32 %reg, i32* %reg.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %reg.addr, metadata !12776, metadata !DIExpression()), !dbg !12777
  store i8* %hash, i8** %hash.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %hash.addr, metadata !12778, metadata !DIExpression()), !dbg !12779
  %0 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !12780
  %1 = load i32, i32* %port.addr, align 4, !dbg !12781
  %2 = load i32, i32* %reg.addr, align 4, !dbg !12782
  %3 = load i8*, i8** %hash.addr, align 8, !dbg !12783
  %arrayidx = getelementptr i8, i8* %3, i64 0, !dbg !12783
  %4 = load i8, i8* %arrayidx, align 1, !dbg !12783
  %conv = zext i8 %4 to i16, !dbg !12784
  %conv1 = zext i16 %conv to i32, !dbg !12784
  %5 = load i8*, i8** %hash.addr, align 8, !dbg !12785
  %arrayidx2 = getelementptr i8, i8* %5, i64 1, !dbg !12785
  %6 = load i8, i8* %arrayidx2, align 1, !dbg !12785
  %conv3 = zext i8 %6 to i16, !dbg !12786
  %conv4 = zext i16 %conv3 to i32, !dbg !12786
  %shl = shl i32 %conv4, 8, !dbg !12787
  %or = or i32 %conv1, %shl, !dbg !12788
  %conv5 = trunc i32 %or to i16, !dbg !12784
  call void @xm_write16(%struct.skge_hw* %0, i32 %1, i32 %2, i16 zeroext %conv5) #14, !dbg !12789
  %7 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !12790
  %8 = load i32, i32* %port.addr, align 4, !dbg !12791
  %9 = load i32, i32* %reg.addr, align 4, !dbg !12792
  %add = add i32 %9, 2, !dbg !12793
  %10 = load i8*, i8** %hash.addr, align 8, !dbg !12794
  %arrayidx6 = getelementptr i8, i8* %10, i64 2, !dbg !12794
  %11 = load i8, i8* %arrayidx6, align 1, !dbg !12794
  %conv7 = zext i8 %11 to i16, !dbg !12795
  %conv8 = zext i16 %conv7 to i32, !dbg !12795
  %12 = load i8*, i8** %hash.addr, align 8, !dbg !12796
  %arrayidx9 = getelementptr i8, i8* %12, i64 3, !dbg !12796
  %13 = load i8, i8* %arrayidx9, align 1, !dbg !12796
  %conv10 = zext i8 %13 to i16, !dbg !12797
  %conv11 = zext i16 %conv10 to i32, !dbg !12797
  %shl12 = shl i32 %conv11, 8, !dbg !12798
  %or13 = or i32 %conv8, %shl12, !dbg !12799
  %conv14 = trunc i32 %or13 to i16, !dbg !12795
  call void @xm_write16(%struct.skge_hw* %7, i32 %8, i32 %add, i16 zeroext %conv14) #14, !dbg !12800
  %14 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !12801
  %15 = load i32, i32* %port.addr, align 4, !dbg !12802
  %16 = load i32, i32* %reg.addr, align 4, !dbg !12803
  %add15 = add i32 %16, 4, !dbg !12804
  %17 = load i8*, i8** %hash.addr, align 8, !dbg !12805
  %arrayidx16 = getelementptr i8, i8* %17, i64 4, !dbg !12805
  %18 = load i8, i8* %arrayidx16, align 1, !dbg !12805
  %conv17 = zext i8 %18 to i16, !dbg !12806
  %conv18 = zext i16 %conv17 to i32, !dbg !12806
  %19 = load i8*, i8** %hash.addr, align 8, !dbg !12807
  %arrayidx19 = getelementptr i8, i8* %19, i64 5, !dbg !12807
  %20 = load i8, i8* %arrayidx19, align 1, !dbg !12807
  %conv20 = zext i8 %20 to i16, !dbg !12808
  %conv21 = zext i16 %conv20 to i32, !dbg !12808
  %shl22 = shl i32 %conv21, 8, !dbg !12809
  %or23 = or i32 %conv18, %shl22, !dbg !12810
  %conv24 = trunc i32 %or23 to i16, !dbg !12806
  call void @xm_write16(%struct.skge_hw* %14, i32 %15, i32 %add15, i16 zeroext %conv24) #14, !dbg !12811
  %21 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !12812
  %22 = load i32, i32* %port.addr, align 4, !dbg !12813
  %23 = load i32, i32* %reg.addr, align 4, !dbg !12814
  %add25 = add i32 %23, 6, !dbg !12815
  %24 = load i8*, i8** %hash.addr, align 8, !dbg !12816
  %arrayidx26 = getelementptr i8, i8* %24, i64 6, !dbg !12816
  %25 = load i8, i8* %arrayidx26, align 1, !dbg !12816
  %conv27 = zext i8 %25 to i16, !dbg !12817
  %conv28 = zext i16 %conv27 to i32, !dbg !12817
  %26 = load i8*, i8** %hash.addr, align 8, !dbg !12818
  %arrayidx29 = getelementptr i8, i8* %26, i64 7, !dbg !12818
  %27 = load i8, i8* %arrayidx29, align 1, !dbg !12818
  %conv30 = zext i8 %27 to i16, !dbg !12819
  %conv31 = zext i16 %conv30 to i32, !dbg !12819
  %shl32 = shl i32 %conv31, 8, !dbg !12820
  %or33 = or i32 %conv28, %shl32, !dbg !12821
  %conv34 = trunc i32 %or33 to i16, !dbg !12817
  call void @xm_write16(%struct.skge_hw* %21, i32 %22, i32 %add25, i16 zeroext %conv34) #14, !dbg !12822
  ret void, !dbg !12823
}

; Function Attrs: noredzone
declare dso_local i32 @snprintf(i8*, i64, i8*, ...) #1

; Function Attrs: noredzone
declare dso_local %struct.net_device* @alloc_etherdev_mqs(i32, i32, i32) #1

; Function Attrs: noredzone
declare dso_local void @netif_napi_add(%struct.net_device*, %struct.napi_struct*, i32 (%struct.napi_struct*, i32)*, i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @skge_poll(%struct.napi_struct* %napi, i32 %budget) #2 !dbg !12824 {
entry:
  %lock.addr.i53 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i53, metadata !12825, metadata !DIExpression()), !dbg !12829
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !12833, metadata !DIExpression()), !dbg !12834
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !9521, metadata !DIExpression()), !dbg !12835
  %napi.addr = alloca %struct.napi_struct*, align 8
  %budget.addr = alloca i32, align 4
  %skge = alloca %struct.skge_port*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.skge_port*, align 8
  %dev = alloca %struct.net_device*, align 8
  %hw = alloca %struct.skge_hw*, align 8
  %ring = alloca %struct.skge_ring*, align 8
  %e = alloca %struct.skge_element*, align 8
  %work_done = alloca i32, align 4
  %rd = alloca %struct.skge_rx_desc*, align 8
  %skb = alloca %struct.sk_buff*, align 8
  %control = alloca i32, align 4
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp26 = alloca i32, align 4
  %__dummy30 = alloca i64, align 8
  %__dummy231 = alloca i64, align 8
  %tmp34 = alloca i32, align 4
  store %struct.napi_struct* %napi, %struct.napi_struct** %napi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.napi_struct** %napi.addr, metadata !12842, metadata !DIExpression()), !dbg !12843
  store i32 %budget, i32* %budget.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %budget.addr, metadata !12844, metadata !DIExpression()), !dbg !12845
  call void @llvm.dbg.declare(metadata %struct.skge_port** %skge, metadata !12846, metadata !DIExpression()), !dbg !12847
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !12848, metadata !DIExpression()), !dbg !12850
  %0 = load %struct.napi_struct*, %struct.napi_struct** %napi.addr, align 8, !dbg !12850
  %1 = bitcast %struct.napi_struct* %0 to i8*, !dbg !12850
  store i8* %1, i8** %__mptr, align 8, !dbg !12850
  br label %do.body, !dbg !12850

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !12851

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !12850
  %add.ptr = getelementptr i8, i8* %2, i64 -16, !dbg !12850
  %3 = bitcast i8* %add.ptr to %struct.skge_port*, !dbg !12850
  store %struct.skge_port* %3, %struct.skge_port** %tmp, align 8, !dbg !12851
  %4 = load %struct.skge_port*, %struct.skge_port** %tmp, align 8, !dbg !12850
  store %struct.skge_port* %4, %struct.skge_port** %skge, align 8, !dbg !12847
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev, metadata !12853, metadata !DIExpression()), !dbg !12854
  %5 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !12855
  %netdev = getelementptr inbounds %struct.skge_port, %struct.skge_port* %5, i32 0, i32 1, !dbg !12856
  %6 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !12856
  store %struct.net_device* %6, %struct.net_device** %dev, align 8, !dbg !12854
  call void @llvm.dbg.declare(metadata %struct.skge_hw** %hw, metadata !12857, metadata !DIExpression()), !dbg !12858
  %7 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !12859
  %hw1 = getelementptr inbounds %struct.skge_port, %struct.skge_port* %7, i32 0, i32 0, !dbg !12860
  %8 = load %struct.skge_hw*, %struct.skge_hw** %hw1, align 8, !dbg !12860
  store %struct.skge_hw* %8, %struct.skge_hw** %hw, align 8, !dbg !12858
  call void @llvm.dbg.declare(metadata %struct.skge_ring** %ring, metadata !12861, metadata !DIExpression()), !dbg !12863
  %9 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !12864
  %rx_ring = getelementptr inbounds %struct.skge_port, %struct.skge_port* %9, i32 0, i32 6, !dbg !12865
  store %struct.skge_ring* %rx_ring, %struct.skge_ring** %ring, align 8, !dbg !12863
  call void @llvm.dbg.declare(metadata %struct.skge_element** %e, metadata !12866, metadata !DIExpression()), !dbg !12867
  call void @llvm.dbg.declare(metadata i32* %work_done, metadata !12868, metadata !DIExpression()), !dbg !12869
  store i32 0, i32* %work_done, align 4, !dbg !12869
  %10 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !12870
  call void @skge_tx_done(%struct.net_device* %10) #14, !dbg !12871
  %11 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !12872
  %12 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !12873
  %port = getelementptr inbounds %struct.skge_port, %struct.skge_port* %12, i32 0, i32 3, !dbg !12873
  %13 = load i32, i32* %port, align 8, !dbg !12873
  %idxprom = sext i32 %13 to i64, !dbg !12873
  %arrayidx = getelementptr [2 x i32], [2 x i32]* @rxqaddr, i64 0, i64 %idxprom, !dbg !12873
  %14 = load i32, i32* %arrayidx, align 4, !dbg !12873
  %add = add i32 1024, %14, !dbg !12873
  %add2 = add i32 %add, 52, !dbg !12873
  call void @skge_write8(%struct.skge_hw* %11, i32 %add2, i8 zeroext 2) #14, !dbg !12874
  %15 = load %struct.skge_ring*, %struct.skge_ring** %ring, align 8, !dbg !12875
  %to_clean = getelementptr inbounds %struct.skge_ring, %struct.skge_ring* %15, i32 0, i32 0, !dbg !12877
  %16 = load %struct.skge_element*, %struct.skge_element** %to_clean, align 8, !dbg !12877
  store %struct.skge_element* %16, %struct.skge_element** %e, align 8, !dbg !12878
  br label %for.cond, !dbg !12879

for.cond:                                         ; preds = %for.inc, %do.end
  %17 = load %struct.skge_element*, %struct.skge_element** %e, align 8, !dbg !12880
  %next = getelementptr inbounds %struct.skge_element, %struct.skge_element* %17, i32 0, i32 0, !dbg !12880
  %18 = load %struct.skge_element*, %struct.skge_element** %next, align 8, !dbg !12880
  %19 = bitcast %struct.skge_element* %18 to i8*, !dbg !12880
  call void @llvm.prefetch.p0i8(i8* %19, i32 0, i32 3, i32 1), !dbg !12880
  %20 = load i32, i32* %work_done, align 4, !dbg !12882
  %21 = load i32, i32* %budget.addr, align 4, !dbg !12883
  %cmp = icmp slt i32 %20, %21, !dbg !12884
  br i1 %cmp, label %for.body, label %for.end, !dbg !12885

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.skge_rx_desc** %rd, metadata !12886, metadata !DIExpression()), !dbg !12901
  %22 = load %struct.skge_element*, %struct.skge_element** %e, align 8, !dbg !12902
  %desc = getelementptr inbounds %struct.skge_element, %struct.skge_element* %22, i32 0, i32 1, !dbg !12903
  %23 = load i8*, i8** %desc, align 8, !dbg !12903
  %24 = bitcast i8* %23 to %struct.skge_rx_desc*, !dbg !12902
  store %struct.skge_rx_desc* %24, %struct.skge_rx_desc** %rd, align 8, !dbg !12901
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb, metadata !12904, metadata !DIExpression()), !dbg !12905
  call void @llvm.dbg.declare(metadata i32* %control, metadata !12906, metadata !DIExpression()), !dbg !12907
  call void asm sideeffect "lfence", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !12908, !srcloc !12909
  %25 = load %struct.skge_rx_desc*, %struct.skge_rx_desc** %rd, align 8, !dbg !12910
  %control3 = getelementptr inbounds %struct.skge_rx_desc, %struct.skge_rx_desc* %25, i32 0, i32 0, !dbg !12911
  %26 = load i32, i32* %control3, align 4, !dbg !12911
  store i32 %26, i32* %control, align 4, !dbg !12912
  %27 = load i32, i32* %control, align 4, !dbg !12913
  %and = and i32 %27, -2147483648, !dbg !12915
  %tobool = icmp ne i32 %and, 0, !dbg !12915
  br i1 %tobool, label %if.then, label %if.end, !dbg !12916

if.then:                                          ; preds = %for.body
  br label %for.end, !dbg !12917

if.end:                                           ; preds = %for.body
  %28 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !12918
  %29 = load %struct.skge_element*, %struct.skge_element** %e, align 8, !dbg !12919
  %30 = load i32, i32* %control, align 4, !dbg !12920
  %31 = load %struct.skge_rx_desc*, %struct.skge_rx_desc** %rd, align 8, !dbg !12921
  %status = getelementptr inbounds %struct.skge_rx_desc, %struct.skge_rx_desc* %31, i32 0, i32 4, !dbg !12922
  %32 = load i32, i32* %status, align 4, !dbg !12922
  %33 = load %struct.skge_rx_desc*, %struct.skge_rx_desc** %rd, align 8, !dbg !12923
  %csum2 = getelementptr inbounds %struct.skge_rx_desc, %struct.skge_rx_desc* %33, i32 0, i32 6, !dbg !12924
  %34 = load i16, i16* %csum2, align 4, !dbg !12924
  %call = call %struct.sk_buff* @skge_rx_get(%struct.net_device* %28, %struct.skge_element* %29, i32 %30, i32 %32, i16 zeroext %34) #14, !dbg !12925
  store %struct.sk_buff* %call, %struct.sk_buff** %skb, align 8, !dbg !12926
  %35 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !12927
  %tobool4 = icmp ne %struct.sk_buff* %35, null, !dbg !12927
  %lnot = xor i1 %tobool4, true, !dbg !12927
  %lnot5 = xor i1 %lnot, true, !dbg !12927
  %lnot.ext = zext i1 %lnot5 to i32, !dbg !12927
  %conv = sext i32 %lnot.ext to i64, !dbg !12927
  %tobool6 = icmp ne i64 %conv, 0, !dbg !12927
  br i1 %tobool6, label %if.then7, label %if.end9, !dbg !12929

if.then7:                                         ; preds = %if.end
  %36 = load %struct.napi_struct*, %struct.napi_struct** %napi.addr, align 8, !dbg !12930
  %37 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !12932
  %call8 = call i32 @napi_gro_receive(%struct.napi_struct* %36, %struct.sk_buff* %37) #14, !dbg !12933
  %38 = load i32, i32* %work_done, align 4, !dbg !12934
  %inc = add i32 %38, 1, !dbg !12934
  store i32 %inc, i32* %work_done, align 4, !dbg !12934
  br label %if.end9, !dbg !12935

if.end9:                                          ; preds = %if.then7, %if.end
  br label %for.inc, !dbg !12936

for.inc:                                          ; preds = %if.end9
  %39 = load %struct.skge_element*, %struct.skge_element** %e, align 8, !dbg !12937
  %next10 = getelementptr inbounds %struct.skge_element, %struct.skge_element* %39, i32 0, i32 0, !dbg !12938
  %40 = load %struct.skge_element*, %struct.skge_element** %next10, align 8, !dbg !12938
  store %struct.skge_element* %40, %struct.skge_element** %e, align 8, !dbg !12939
  br label %for.cond, !dbg !12940, !llvm.loop !12941

for.end:                                          ; preds = %if.then, %for.cond
  %41 = load %struct.skge_element*, %struct.skge_element** %e, align 8, !dbg !12943
  %42 = load %struct.skge_ring*, %struct.skge_ring** %ring, align 8, !dbg !12944
  %to_clean11 = getelementptr inbounds %struct.skge_ring, %struct.skge_ring* %42, i32 0, i32 0, !dbg !12945
  store %struct.skge_element* %41, %struct.skge_element** %to_clean11, align 8, !dbg !12946
  call void asm sideeffect "sfence", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !12947, !srcloc !12948
  %43 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !12949
  %44 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !12950
  %port12 = getelementptr inbounds %struct.skge_port, %struct.skge_port* %44, i32 0, i32 3, !dbg !12950
  %45 = load i32, i32* %port12, align 8, !dbg !12950
  %idxprom13 = sext i32 %45 to i64, !dbg !12950
  %arrayidx14 = getelementptr [2 x i32], [2 x i32]* @rxqaddr, i64 0, i64 %idxprom13, !dbg !12950
  %46 = load i32, i32* %arrayidx14, align 4, !dbg !12950
  %add15 = add i32 1024, %46, !dbg !12950
  %add16 = add i32 %add15, 52, !dbg !12950
  call void @skge_write8(%struct.skge_hw* %43, i32 %add16, i8 zeroext 16) #14, !dbg !12951
  %47 = load i32, i32* %work_done, align 4, !dbg !12952
  %48 = load i32, i32* %budget.addr, align 4, !dbg !12953
  %cmp17 = icmp slt i32 %47, %48, !dbg !12954
  br i1 %cmp17, label %land.lhs.true, label %if.end52, !dbg !12955

land.lhs.true:                                    ; preds = %for.end
  %49 = load %struct.napi_struct*, %struct.napi_struct** %napi.addr, align 8, !dbg !12956
  %50 = load i32, i32* %work_done, align 4, !dbg !12957
  %call19 = call zeroext i1 @napi_complete_done(%struct.napi_struct* %49, i32 %50) #14, !dbg !12958
  br i1 %call19, label %if.then21, label %if.end52, !dbg !12959

if.then21:                                        ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !12960, metadata !DIExpression()), !dbg !12961
  br label %do.body22, !dbg !12962

do.body22:                                        ; preds = %if.then21
  br label %do.body23, !dbg !12963

do.body23:                                        ; preds = %do.body22
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !12964, metadata !DIExpression()), !dbg !12966
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !12967, metadata !DIExpression()), !dbg !12966
  %cmp24 = icmp eq i64* %__dummy, %__dummy2, !dbg !12966
  %conv25 = zext i1 %cmp24 to i32, !dbg !12966
  store i32 1, i32* %tmp26, align 4, !dbg !12966
  %51 = load i32, i32* %tmp26, align 4, !dbg !12966
  br label %do.body27, !dbg !12968

do.body27:                                        ; preds = %do.body23
  br label %do.body28, !dbg !12969

do.body28:                                        ; preds = %do.body27
  br label %do.body29, !dbg !12970

do.body29:                                        ; preds = %do.body28
  call void @llvm.dbg.declare(metadata i64* %__dummy30, metadata !12972, metadata !DIExpression()), !dbg !12975
  call void @llvm.dbg.declare(metadata i64* %__dummy231, metadata !12976, metadata !DIExpression()), !dbg !12975
  %cmp32 = icmp eq i64* %__dummy30, %__dummy231, !dbg !12975
  %conv33 = zext i1 %cmp32 to i32, !dbg !12975
  store i32 1, i32* %tmp34, align 4, !dbg !12975
  %52 = load i32, i32* %tmp34, align 4, !dbg !12975
  %call35 = call i64 @arch_local_irq_save() #14, !dbg !12977
  store i64 %call35, i64* %flags, align 8, !dbg !12977
  br label %do.end36, !dbg !12977

do.end36:                                         ; preds = %do.body29
  br label %do.end37, !dbg !12970

do.end37:                                         ; preds = %do.end36
  br label %do.body38, !dbg !12969

do.body38:                                        ; preds = %do.end37
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !12978, !srcloc !12979
  br label %do.body39, !dbg !12978

do.body39:                                        ; preds = %do.body38
  %53 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !12980
  %hw_lock = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %53, i32 0, i32 2, !dbg !12980
  store %struct.spinlock* %hw_lock, %struct.spinlock** %lock.addr.i, align 8
  %54 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !12981
  %55 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %54, i32 0, i32 0, !dbg !12982
  %rlock.i = bitcast %union.anon.1* %55 to %struct.raw_spinlock*, !dbg !12982
  br label %do.end41, !dbg !12980

do.end41:                                         ; preds = %do.body39
  br label %do.end42, !dbg !12978

do.end42:                                         ; preds = %do.end41
  br label %do.end43, !dbg !12969

do.end43:                                         ; preds = %do.end42
  br label %do.end44, !dbg !12968

do.end44:                                         ; preds = %do.end43
  br label %do.end45, !dbg !12963

do.end45:                                         ; preds = %do.end44
  %56 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !12983
  %port46 = getelementptr inbounds %struct.skge_port, %struct.skge_port* %56, i32 0, i32 3, !dbg !12984
  %57 = load i32, i32* %port46, align 8, !dbg !12984
  %idxprom47 = sext i32 %57 to i64, !dbg !12985
  %arrayidx48 = getelementptr [2 x i32], [2 x i32]* @napimask, i64 0, i64 %idxprom47, !dbg !12985
  %58 = load i32, i32* %arrayidx48, align 4, !dbg !12985
  %59 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !12986
  %intr_mask = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %59, i32 0, i32 3, !dbg !12987
  %60 = load i32, i32* %intr_mask, align 8, !dbg !12988
  %or = or i32 %60, %58, !dbg !12988
  store i32 %or, i32* %intr_mask, align 8, !dbg !12988
  %61 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !12989
  %62 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !12990
  %intr_mask49 = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %62, i32 0, i32 3, !dbg !12991
  %63 = load i32, i32* %intr_mask49, align 8, !dbg !12991
  call void @skge_write32(%struct.skge_hw* %61, i32 12, i32 %63) #14, !dbg !12992
  %64 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !12993
  %call50 = call i32 @skge_read32(%struct.skge_hw* %64, i32 12) #14, !dbg !12994
  %65 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !12995
  %hw_lock51 = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %65, i32 0, i32 2, !dbg !12996
  %66 = load i64, i64* %flags, align 8, !dbg !12997
  store %struct.spinlock* %hw_lock51, %struct.spinlock** %lock.addr.i53, align 8
  store i64 %66, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !1587, metadata !12998, metadata !DIExpression()) #10, !dbg !13001
  call void @llvm.dbg.declare(metadata !1587, metadata !13002, metadata !DIExpression()) #10, !dbg !13001
  store i32 1, i32* %tmp.i, align 4, !dbg !13001
  %67 = load i32, i32* %tmp.i, align 4, !dbg !13001
  call void @llvm.dbg.declare(metadata !1587, metadata !13003, metadata !DIExpression()) #10, !dbg !13008
  call void @llvm.dbg.declare(metadata !1587, metadata !13009, metadata !DIExpression()) #10, !dbg !13008
  store i32 1, i32* %tmp8.i, align 4, !dbg !13008
  %68 = load i32, i32* %tmp8.i, align 4, !dbg !13008
  %69 = load i64, i64* %flags.addr.i, align 8, !dbg !13010
  call void @arch_local_irq_restore(i64 %69) #16, !dbg !13010
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !13011, !srcloc !13013
  %70 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i53, align 8, !dbg !13014
  %71 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %70, i32 0, i32 0, !dbg !13014
  %rlock.i54 = bitcast %union.anon.1* %71 to %struct.raw_spinlock*, !dbg !13014
  br label %if.end52, !dbg !13016

if.end52:                                         ; preds = %do.end45, %land.lhs.true, %for.end
  %72 = load i32, i32* %work_done, align 4, !dbg !13017
  ret i32 %72, !dbg !13018
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @netif_msg_init(i32 %debug_value, i32 %default_msg_enable_bits) #2 !dbg !13019 {
entry:
  %retval = alloca i32, align 4
  %debug_value.addr = alloca i32, align 4
  %default_msg_enable_bits.addr = alloca i32, align 4
  store i32 %debug_value, i32* %debug_value.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %debug_value.addr, metadata !13022, metadata !DIExpression()), !dbg !13023
  store i32 %default_msg_enable_bits, i32* %default_msg_enable_bits.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %default_msg_enable_bits.addr, metadata !13024, metadata !DIExpression()), !dbg !13025
  %0 = load i32, i32* %debug_value.addr, align 4, !dbg !13026
  %cmp = icmp slt i32 %0, 0, !dbg !13028
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !13029

lor.lhs.false:                                    ; preds = %entry
  %1 = load i32, i32* %debug_value.addr, align 4, !dbg !13030
  %conv = sext i32 %1 to i64, !dbg !13030
  %cmp1 = icmp uge i64 %conv, 32, !dbg !13031
  br i1 %cmp1, label %if.then, label %if.end, !dbg !13032

if.then:                                          ; preds = %lor.lhs.false, %entry
  %2 = load i32, i32* %default_msg_enable_bits.addr, align 4, !dbg !13033
  store i32 %2, i32* %retval, align 4, !dbg !13034
  br label %return, !dbg !13034

if.end:                                           ; preds = %lor.lhs.false
  %3 = load i32, i32* %debug_value.addr, align 4, !dbg !13035
  %cmp3 = icmp eq i32 %3, 0, !dbg !13037
  br i1 %cmp3, label %if.then5, label %if.end6, !dbg !13038

if.then5:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !13039
  br label %return, !dbg !13039

if.end6:                                          ; preds = %if.end
  %4 = load i32, i32* %debug_value.addr, align 4, !dbg !13040
  %shl = shl i32 1, %4, !dbg !13041
  %sub = sub i32 %shl, 1, !dbg !13042
  store i32 %sub, i32* %retval, align 4, !dbg !13043
  br label %return, !dbg !13043

return:                                           ; preds = %if.end6, %if.then5, %if.then
  %5 = load i32, i32* %retval, align 4, !dbg !13044
  ret i32 %5, !dbg !13044
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @skge_supported_modes(%struct.skge_hw* %hw) #2 !dbg !13045 {
entry:
  %hw.addr = alloca %struct.skge_hw*, align 8
  %supported = alloca i32, align 4
  store %struct.skge_hw* %hw, %struct.skge_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.skge_hw** %hw.addr, metadata !13046, metadata !DIExpression()), !dbg !13047
  call void @llvm.dbg.declare(metadata i32* %supported, metadata !13048, metadata !DIExpression()), !dbg !13049
  %0 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !13050
  %copper = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %0, i32 0, i32 7, !dbg !13052
  %1 = load i8, i8* %copper, align 2, !dbg !13052
  %tobool = icmp ne i8 %1, 0, !dbg !13050
  br i1 %tobool, label %if.then, label %if.else10, !dbg !13053

if.then:                                          ; preds = %entry
  store i32 255, i32* %supported, align 4, !dbg !13054
  %2 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !13056
  %call = call zeroext i1 @is_genesis(%struct.skge_hw* %2) #14, !dbg !13058
  br i1 %call, label %if.then1, label %if.else, !dbg !13059

if.then1:                                         ; preds = %if.then
  %3 = load i32, i32* %supported, align 4, !dbg !13060
  %conv = zext i32 %3 to i64, !dbg !13060
  %and = and i64 %conv, -16, !dbg !13060
  %conv2 = trunc i64 %and to i32, !dbg !13060
  store i32 %conv2, i32* %supported, align 4, !dbg !13060
  br label %if.end9, !dbg !13061

if.else:                                          ; preds = %if.then
  %4 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !13062
  %chip_id = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %4, i32 0, i32 5, !dbg !13064
  %5 = load i8, i8* %chip_id, align 8, !dbg !13064
  %conv3 = zext i8 %5 to i32, !dbg !13062
  %cmp = icmp eq i32 %conv3, 176, !dbg !13065
  br i1 %cmp, label %if.then5, label %if.end, !dbg !13066

if.then5:                                         ; preds = %if.else
  %6 = load i32, i32* %supported, align 4, !dbg !13067
  %conv6 = zext i32 %6 to i64, !dbg !13067
  %and7 = and i64 %conv6, -17, !dbg !13067
  %conv8 = trunc i64 %and7 to i32, !dbg !13067
  store i32 %conv8, i32* %supported, align 4, !dbg !13067
  br label %if.end, !dbg !13068

if.end:                                           ; preds = %if.then5, %if.else
  br label %if.end9

if.end9:                                          ; preds = %if.end, %if.then1
  br label %if.end11, !dbg !13069

if.else10:                                        ; preds = %entry
  store i32 1136, i32* %supported, align 4, !dbg !13070
  br label %if.end11

if.end11:                                         ; preds = %if.else10, %if.end9
  %7 = load i32, i32* %supported, align 4, !dbg !13071
  ret i32 %7, !dbg !13072
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @device_can_wakeup(%struct.device* %dev) #2 !dbg !13073 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !13076, metadata !DIExpression()), !dbg !13077
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !13078
  %power = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 11, !dbg !13079
  %can_wakeup = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power, i32 0, i32 1, !dbg !13080
  %bf.load = load i16, i16* %can_wakeup, align 4, !dbg !13080
  %bf.clear = and i16 %bf.load, 1, !dbg !13080
  %bf.cast = zext i16 %bf.clear to i32, !dbg !13080
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !13078
  ret i1 %tobool, !dbg !13081
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @wol_supported(%struct.skge_hw* %hw) #2 !dbg !13082 {
entry:
  %retval = alloca i32, align 4
  %hw.addr = alloca %struct.skge_hw*, align 8
  store %struct.skge_hw* %hw, %struct.skge_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.skge_hw** %hw.addr, metadata !13083, metadata !DIExpression()), !dbg !13084
  %0 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !13085
  %call = call zeroext i1 @is_genesis(%struct.skge_hw* %0) #14, !dbg !13087
  br i1 %call, label %if.then, label %if.end, !dbg !13088

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !13089
  br label %return, !dbg !13089

if.end:                                           ; preds = %entry
  %1 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !13090
  %chip_id = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %1, i32 0, i32 5, !dbg !13092
  %2 = load i8, i8* %chip_id, align 8, !dbg !13092
  %conv = zext i8 %2 to i32, !dbg !13090
  %cmp = icmp eq i32 %conv, 176, !dbg !13093
  br i1 %cmp, label %land.lhs.true, label %if.end6, !dbg !13094

land.lhs.true:                                    ; preds = %if.end
  %3 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !13095
  %chip_rev = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %3, i32 0, i32 6, !dbg !13096
  %4 = load i8, i8* %chip_rev, align 1, !dbg !13096
  %conv2 = zext i8 %4 to i32, !dbg !13095
  %cmp3 = icmp eq i32 %conv2, 0, !dbg !13097
  br i1 %cmp3, label %if.then5, label %if.end6, !dbg !13098

if.then5:                                         ; preds = %land.lhs.true
  store i32 0, i32* %retval, align 4, !dbg !13099
  br label %return, !dbg !13099

if.end6:                                          ; preds = %land.lhs.true, %if.end
  store i32 33, i32* %retval, align 4, !dbg !13100
  br label %return, !dbg !13100

return:                                           ; preds = %if.end6, %if.then5, %if.then
  %5 = load i32, i32* %retval, align 4, !dbg !13101
  ret i32 %5, !dbg !13101
}

; Function Attrs: noredzone
declare dso_local i32 @device_set_wakeup_enable(%struct.device*, i1 zeroext) #1

; Function Attrs: noredzone
declare dso_local void @init_timer_key(%struct.timer_list*, void (%struct.timer_list*)*, i32, i8*, %struct.lock_class_key*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @xm_link_timer(%struct.timer_list* %t) #2 !dbg !13102 {
entry:
  %lock.addr.i43 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i43, metadata !12825, metadata !DIExpression()), !dbg !13103
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !12833, metadata !DIExpression()), !dbg !13105
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !9521, metadata !DIExpression()), !dbg !13106
  %t.addr = alloca %struct.timer_list*, align 8
  %skge = alloca %struct.skge_port*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.skge_port*, align 8
  %dev = alloca %struct.net_device*, align 8
  %hw = alloca %struct.skge_hw*, align 8
  %port = alloca i32, align 4
  %i = alloca i32, align 4
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp5 = alloca i32, align 4
  %__dummy9 = alloca i64, align 8
  %__dummy210 = alloca i64, align 8
  %tmp13 = alloca i32, align 4
  %msk = alloca i16, align 2
  store %struct.timer_list* %t, %struct.timer_list** %t.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.timer_list** %t.addr, metadata !13113, metadata !DIExpression()), !dbg !13114
  call void @llvm.dbg.declare(metadata %struct.skge_port** %skge, metadata !13115, metadata !DIExpression()), !dbg !13116
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !13117, metadata !DIExpression()), !dbg !13119
  %0 = load %struct.timer_list*, %struct.timer_list** %t.addr, align 8, !dbg !13119
  %1 = bitcast %struct.timer_list* %0 to i8*, !dbg !13119
  store i8* %1, i8** %__mptr, align 8, !dbg !13119
  br label %do.body, !dbg !13119

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !13120

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !13119
  %add.ptr = getelementptr i8, i8* %2, i64 -480, !dbg !13119
  %3 = bitcast i8* %add.ptr to %struct.skge_port*, !dbg !13119
  store %struct.skge_port* %3, %struct.skge_port** %tmp, align 8, !dbg !13120
  %4 = load %struct.skge_port*, %struct.skge_port** %tmp, align 8, !dbg !13119
  store %struct.skge_port* %4, %struct.skge_port** %skge, align 8, !dbg !13116
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev, metadata !13122, metadata !DIExpression()), !dbg !13123
  %5 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !13124
  %netdev = getelementptr inbounds %struct.skge_port, %struct.skge_port* %5, i32 0, i32 1, !dbg !13125
  %6 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !13125
  store %struct.net_device* %6, %struct.net_device** %dev, align 8, !dbg !13123
  call void @llvm.dbg.declare(metadata %struct.skge_hw** %hw, metadata !13126, metadata !DIExpression()), !dbg !13127
  %7 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !13128
  %hw1 = getelementptr inbounds %struct.skge_port, %struct.skge_port* %7, i32 0, i32 0, !dbg !13129
  %8 = load %struct.skge_hw*, %struct.skge_hw** %hw1, align 8, !dbg !13129
  store %struct.skge_hw* %8, %struct.skge_hw** %hw, align 8, !dbg !13127
  call void @llvm.dbg.declare(metadata i32* %port, metadata !13130, metadata !DIExpression()), !dbg !13131
  %9 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !13132
  %port2 = getelementptr inbounds %struct.skge_port, %struct.skge_port* %9, i32 0, i32 3, !dbg !13133
  %10 = load i32, i32* %port2, align 8, !dbg !13133
  store i32 %10, i32* %port, align 4, !dbg !13131
  call void @llvm.dbg.declare(metadata i32* %i, metadata !13134, metadata !DIExpression()), !dbg !13135
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !13136, metadata !DIExpression()), !dbg !13137
  %11 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !13138
  %call = call zeroext i1 @netif_running(%struct.net_device* %11) #14, !dbg !13140
  br i1 %call, label %if.end, label %if.then, !dbg !13141

if.then:                                          ; preds = %do.end
  br label %return, !dbg !13142

if.end:                                           ; preds = %do.end
  br label %do.body3, !dbg !13143

do.body3:                                         ; preds = %if.end
  br label %do.body4, !dbg !13144

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !13145, metadata !DIExpression()), !dbg !13147
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !13148, metadata !DIExpression()), !dbg !13147
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !13147
  %conv = zext i1 %cmp to i32, !dbg !13147
  store i32 1, i32* %tmp5, align 4, !dbg !13147
  %12 = load i32, i32* %tmp5, align 4, !dbg !13147
  br label %do.body6, !dbg !13149

do.body6:                                         ; preds = %do.body4
  br label %do.body7, !dbg !13150

do.body7:                                         ; preds = %do.body6
  br label %do.body8, !dbg !13151

do.body8:                                         ; preds = %do.body7
  call void @llvm.dbg.declare(metadata i64* %__dummy9, metadata !13153, metadata !DIExpression()), !dbg !13156
  call void @llvm.dbg.declare(metadata i64* %__dummy210, metadata !13157, metadata !DIExpression()), !dbg !13156
  %cmp11 = icmp eq i64* %__dummy9, %__dummy210, !dbg !13156
  %conv12 = zext i1 %cmp11 to i32, !dbg !13156
  store i32 1, i32* %tmp13, align 4, !dbg !13156
  %13 = load i32, i32* %tmp13, align 4, !dbg !13156
  %call14 = call i64 @arch_local_irq_save() #14, !dbg !13158
  store i64 %call14, i64* %flags, align 8, !dbg !13158
  br label %do.end15, !dbg !13158

do.end15:                                         ; preds = %do.body8
  br label %do.end16, !dbg !13151

do.end16:                                         ; preds = %do.end15
  br label %do.body17, !dbg !13150

do.body17:                                        ; preds = %do.end16
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !13159, !srcloc !13160
  br label %do.body18, !dbg !13159

do.body18:                                        ; preds = %do.body17
  %14 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !13161
  %phy_lock = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %14, i32 0, i32 13, !dbg !13161
  store %struct.spinlock* %phy_lock, %struct.spinlock** %lock.addr.i, align 8
  %15 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !13162
  %16 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %15, i32 0, i32 0, !dbg !13163
  %rlock.i = bitcast %union.anon.1* %16 to %struct.raw_spinlock*, !dbg !13163
  br label %do.end20, !dbg !13161

do.end20:                                         ; preds = %do.body18
  br label %do.end21, !dbg !13159

do.end21:                                         ; preds = %do.end20
  br label %do.end22, !dbg !13150

do.end22:                                         ; preds = %do.end21
  br label %do.end23, !dbg !13149

do.end23:                                         ; preds = %do.end22
  br label %do.end24, !dbg !13144

do.end24:                                         ; preds = %do.end23
  store i32 0, i32* %i, align 4, !dbg !13164
  br label %for.cond, !dbg !13166

for.cond:                                         ; preds = %for.inc, %do.end24
  %17 = load i32, i32* %i, align 4, !dbg !13167
  %cmp25 = icmp slt i32 %17, 3, !dbg !13169
  br i1 %cmp25, label %for.body, label %for.end, !dbg !13170

for.body:                                         ; preds = %for.cond
  %18 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !13171
  %19 = load i32, i32* %port, align 4, !dbg !13174
  %call27 = call zeroext i16 @xm_read16(%struct.skge_hw* %18, i32 %19, i32 64) #14, !dbg !13175
  %conv28 = zext i16 %call27 to i32, !dbg !13175
  %and = and i32 %conv28, 1, !dbg !13176
  %tobool = icmp ne i32 %and, 0, !dbg !13176
  br i1 %tobool, label %if.then29, label %if.end30, !dbg !13177

if.then29:                                        ; preds = %for.body
  br label %link_down, !dbg !13178

if.end30:                                         ; preds = %for.body
  br label %for.inc, !dbg !13179

for.inc:                                          ; preds = %if.end30
  %20 = load i32, i32* %i, align 4, !dbg !13180
  %inc = add i32 %20, 1, !dbg !13180
  store i32 %inc, i32* %i, align 4, !dbg !13180
  br label %for.cond, !dbg !13181, !llvm.loop !13182

for.end:                                          ; preds = %for.cond
  %21 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !13184
  %call31 = call i32 @xm_check_link(%struct.net_device* %21) #14, !dbg !13186
  %tobool32 = icmp ne i32 %call31, 0, !dbg !13186
  br i1 %tobool32, label %if.then33, label %if.else, !dbg !13187

if.then33:                                        ; preds = %for.end
  call void @llvm.dbg.declare(metadata i16* %msk, metadata !13188, metadata !DIExpression()), !dbg !13190
  %22 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !13191
  %23 = load i32, i32* %port, align 4, !dbg !13192
  %call34 = call zeroext i16 @xm_read16(%struct.skge_hw* %22, i32 %23, i32 68) #14, !dbg !13193
  store i16 %call34, i16* %msk, align 2, !dbg !13190
  %24 = load i16, i16* %msk, align 2, !dbg !13194
  %conv35 = zext i16 %24 to i32, !dbg !13194
  %and36 = and i32 %conv35, -2049, !dbg !13194
  %conv37 = trunc i32 %and36 to i16, !dbg !13194
  store i16 %conv37, i16* %msk, align 2, !dbg !13194
  %25 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !13195
  %26 = load i32, i32* %port, align 4, !dbg !13196
  %27 = load i16, i16* %msk, align 2, !dbg !13197
  call void @xm_write16(%struct.skge_hw* %25, i32 %26, i32 68, i16 zeroext %27) #14, !dbg !13198
  %28 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !13199
  %29 = load i32, i32* %port, align 4, !dbg !13200
  %call38 = call zeroext i16 @xm_read16(%struct.skge_hw* %28, i32 %29, i32 72) #14, !dbg !13201
  br label %if.end41, !dbg !13202

if.else:                                          ; preds = %for.end
  br label %link_down, !dbg !13203

link_down:                                        ; preds = %if.else, %if.then29
  call void @llvm.dbg.label(metadata !13204), !dbg !13206
  %30 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !13207
  %link_timer = getelementptr inbounds %struct.skge_port, %struct.skge_port* %30, i32 0, i32 8, !dbg !13208
  %31 = load volatile i64, i64* @jiffies, align 8, !dbg !13209
  %add = add i64 %31, 250, !dbg !13210
  %call39 = call i64 @round_jiffies(i64 %add) #14, !dbg !13211
  %call40 = call i32 @mod_timer(%struct.timer_list* %link_timer, i64 %call39) #14, !dbg !13212
  br label %if.end41

if.end41:                                         ; preds = %link_down, %if.then33
  %32 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !13213
  %phy_lock42 = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %32, i32 0, i32 13, !dbg !13214
  %33 = load i64, i64* %flags, align 8, !dbg !13215
  store %struct.spinlock* %phy_lock42, %struct.spinlock** %lock.addr.i43, align 8
  store i64 %33, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !1587, metadata !12998, metadata !DIExpression()) #10, !dbg !13216
  call void @llvm.dbg.declare(metadata !1587, metadata !13002, metadata !DIExpression()) #10, !dbg !13216
  store i32 1, i32* %tmp.i, align 4, !dbg !13216
  %34 = load i32, i32* %tmp.i, align 4, !dbg !13216
  call void @llvm.dbg.declare(metadata !1587, metadata !13003, metadata !DIExpression()) #10, !dbg !13217
  call void @llvm.dbg.declare(metadata !1587, metadata !13009, metadata !DIExpression()) #10, !dbg !13217
  store i32 1, i32* %tmp8.i, align 4, !dbg !13217
  %35 = load i32, i32* %tmp8.i, align 4, !dbg !13217
  %36 = load i64, i64* %flags.addr.i, align 8, !dbg !13218
  call void @arch_local_irq_restore(i64 %36) #16, !dbg !13218
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !13219, !srcloc !13013
  %37 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i43, align 8, !dbg !13220
  %38 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %37, i32 0, i32 0, !dbg !13220
  %rlock.i44 = bitcast %union.anon.1* %38 to %struct.raw_spinlock*, !dbg !13220
  br label %return, !dbg !13221

return:                                           ; preds = %if.end41, %if.then
  ret void, !dbg !13221
}

; Function Attrs: noredzone
declare dso_local void @memcpy_fromio(i8*, i8*, i64) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @skge_up(%struct.net_device* %dev) #2 !dbg !13222 {
entry:
  %lock.addr.i154 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i154, metadata !9767, metadata !DIExpression()), !dbg !13223
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !9773, metadata !DIExpression()), !dbg !13225
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.net_device*, align 8
  %skge = alloca %struct.skge_port*, align 8
  %hw = alloca %struct.skge_hw*, align 8
  %port = alloca i32, align 4
  %chunk = alloca i32, align 4
  %ram_addr = alloca i32, align 4
  %rx_size = alloca i64, align 8
  %tx_size = alloca i64, align 8
  %err = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !13227, metadata !DIExpression()), !dbg !13228
  call void @llvm.dbg.declare(metadata %struct.skge_port** %skge, metadata !13229, metadata !DIExpression()), !dbg !13230
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !13231
  %call = call i8* @netdev_priv(%struct.net_device* %0) #14, !dbg !13232
  %1 = bitcast i8* %call to %struct.skge_port*, !dbg !13232
  store %struct.skge_port* %1, %struct.skge_port** %skge, align 8, !dbg !13230
  call void @llvm.dbg.declare(metadata %struct.skge_hw** %hw, metadata !13233, metadata !DIExpression()), !dbg !13234
  %2 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !13235
  %hw1 = getelementptr inbounds %struct.skge_port, %struct.skge_port* %2, i32 0, i32 0, !dbg !13236
  %3 = load %struct.skge_hw*, %struct.skge_hw** %hw1, align 8, !dbg !13236
  store %struct.skge_hw* %3, %struct.skge_hw** %hw, align 8, !dbg !13234
  call void @llvm.dbg.declare(metadata i32* %port, metadata !13237, metadata !DIExpression()), !dbg !13238
  %4 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !13239
  %port2 = getelementptr inbounds %struct.skge_port, %struct.skge_port* %4, i32 0, i32 3, !dbg !13240
  %5 = load i32, i32* %port2, align 8, !dbg !13240
  store i32 %5, i32* %port, align 4, !dbg !13238
  call void @llvm.dbg.declare(metadata i32* %chunk, metadata !13241, metadata !DIExpression()), !dbg !13242
  call void @llvm.dbg.declare(metadata i32* %ram_addr, metadata !13243, metadata !DIExpression()), !dbg !13244
  call void @llvm.dbg.declare(metadata i64* %rx_size, metadata !13245, metadata !DIExpression()), !dbg !13246
  call void @llvm.dbg.declare(metadata i64* %tx_size, metadata !13247, metadata !DIExpression()), !dbg !13248
  call void @llvm.dbg.declare(metadata i32* %err, metadata !13249, metadata !DIExpression()), !dbg !13250
  %6 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !13251
  %dev_addr = getelementptr inbounds %struct.net_device, %struct.net_device* %6, i32 0, i32 74, !dbg !13253
  %7 = load i8*, i8** %dev_addr, align 8, !dbg !13253
  %call3 = call zeroext i1 @is_valid_ether_addr(i8* %7) #14, !dbg !13254
  br i1 %call3, label %if.end, label %if.then, !dbg !13255

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !13256
  br label %return, !dbg !13256

if.end:                                           ; preds = %entry
  br label %do.body, !dbg !13257

do.body:                                          ; preds = %if.end
  %8 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !13258
  %msg_enable = getelementptr inbounds %struct.skge_port, %struct.skge_port* %8, i32 0, i32 4, !dbg !13258
  %9 = load i32, i32* %msg_enable, align 4, !dbg !13258
  %and = and i32 %9, 32, !dbg !13258
  %tobool = icmp ne i32 %and, 0, !dbg !13258
  br i1 %tobool, label %if.then4, label %if.end5, !dbg !13261

if.then4:                                         ; preds = %do.body
  %10 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !13258
  %netdev = getelementptr inbounds %struct.skge_port, %struct.skge_port* %10, i32 0, i32 1, !dbg !13258
  %11 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !13258
  call void (%struct.net_device*, i8*, ...) @netdev_info(%struct.net_device* %11, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.44, i64 0, i64 0)) #15, !dbg !13258
  br label %if.end5, !dbg !13258

if.end5:                                          ; preds = %if.then4, %do.body
  br label %do.end, !dbg !13261

do.end:                                           ; preds = %if.end5
  %12 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !13262
  %mtu = getelementptr inbounds %struct.net_device, %struct.net_device* %12, i32 0, i32 44, !dbg !13264
  %13 = load i32, i32* %mtu, align 8, !dbg !13264
  %cmp = icmp ugt i32 %13, 1536, !dbg !13265
  br i1 %cmp, label %if.then6, label %if.else, !dbg !13266

if.then6:                                         ; preds = %do.end
  %14 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !13267
  %mtu7 = getelementptr inbounds %struct.net_device, %struct.net_device* %14, i32 0, i32 44, !dbg !13268
  %15 = load i32, i32* %mtu7, align 8, !dbg !13268
  %add = add i32 %15, 14, !dbg !13269
  %16 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !13270
  %rx_buf_size = getelementptr inbounds %struct.skge_port, %struct.skge_port* %16, i32 0, i32 7, !dbg !13271
  store i32 %add, i32* %rx_buf_size, align 8, !dbg !13272
  br label %if.end9, !dbg !13270

if.else:                                          ; preds = %do.end
  %17 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !13273
  %rx_buf_size8 = getelementptr inbounds %struct.skge_port, %struct.skge_port* %17, i32 0, i32 7, !dbg !13274
  store i32 1536, i32* %rx_buf_size8, align 8, !dbg !13275
  br label %if.end9

if.end9:                                          ; preds = %if.else, %if.then6
  %18 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !13276
  %rx_ring = getelementptr inbounds %struct.skge_port, %struct.skge_port* %18, i32 0, i32 6, !dbg !13277
  %count = getelementptr inbounds %struct.skge_ring, %struct.skge_ring* %rx_ring, i32 0, i32 3, !dbg !13278
  %19 = load i64, i64* %count, align 8, !dbg !13278
  %mul = mul i64 %19, 32, !dbg !13279
  store i64 %mul, i64* %rx_size, align 8, !dbg !13280
  %20 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !13281
  %tx_ring = getelementptr inbounds %struct.skge_port, %struct.skge_port* %20, i32 0, i32 5, !dbg !13282
  %count10 = getelementptr inbounds %struct.skge_ring, %struct.skge_ring* %tx_ring, i32 0, i32 3, !dbg !13283
  %21 = load i64, i64* %count10, align 8, !dbg !13283
  %mul11 = mul i64 %21, 32, !dbg !13284
  store i64 %mul11, i64* %tx_size, align 8, !dbg !13285
  %22 = load i64, i64* %tx_size, align 8, !dbg !13286
  %23 = load i64, i64* %rx_size, align 8, !dbg !13287
  %add12 = add i64 %22, %23, !dbg !13288
  %24 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !13289
  %mem_size = getelementptr inbounds %struct.skge_port, %struct.skge_port* %24, i32 0, i32 19, !dbg !13290
  store i64 %add12, i64* %mem_size, align 8, !dbg !13291
  %25 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !13292
  %pdev = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %25, i32 0, i32 1, !dbg !13293
  %26 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !13293
  %dev13 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %26, i32 0, i32 41, !dbg !13294
  %27 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !13295
  %mem_size14 = getelementptr inbounds %struct.skge_port, %struct.skge_port* %27, i32 0, i32 19, !dbg !13296
  %28 = load i64, i64* %mem_size14, align 8, !dbg !13296
  %29 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !13297
  %dma = getelementptr inbounds %struct.skge_port, %struct.skge_port* %29, i32 0, i32 18, !dbg !13298
  %call15 = call i8* @dma_alloc_coherent(%struct.device* %dev13, i64 %28, i64* %dma, i32 3264) #14, !dbg !13299
  %30 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !13300
  %mem = getelementptr inbounds %struct.skge_port, %struct.skge_port* %30, i32 0, i32 17, !dbg !13301
  store i8* %call15, i8** %mem, align 8, !dbg !13302
  %31 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !13303
  %mem16 = getelementptr inbounds %struct.skge_port, %struct.skge_port* %31, i32 0, i32 17, !dbg !13305
  %32 = load i8*, i8** %mem16, align 8, !dbg !13305
  %tobool17 = icmp ne i8* %32, null, !dbg !13303
  br i1 %tobool17, label %if.end19, label %if.then18, !dbg !13306

if.then18:                                        ; preds = %if.end9
  store i32 -12, i32* %retval, align 4, !dbg !13307
  br label %return, !dbg !13307

if.end19:                                         ; preds = %if.end9
  br label %do.body20, !dbg !13308

do.body20:                                        ; preds = %if.end19
  %33 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !13309
  %dma21 = getelementptr inbounds %struct.skge_port, %struct.skge_port* %33, i32 0, i32 18, !dbg !13309
  %34 = load i64, i64* %dma21, align 8, !dbg !13309
  %and22 = and i64 %34, 7, !dbg !13309
  %tobool23 = icmp ne i64 %and22, 0, !dbg !13309
  %lnot = xor i1 %tobool23, true, !dbg !13309
  %lnot24 = xor i1 %lnot, true, !dbg !13309
  %lnot.ext = zext i1 %lnot24 to i32, !dbg !13309
  %conv = sext i32 %lnot.ext to i64, !dbg !13309
  %tobool25 = icmp ne i64 %conv, 0, !dbg !13309
  br i1 %tobool25, label %if.then26, label %if.end35, !dbg !13312

if.then26:                                        ; preds = %do.body20
  br label %do.body27, !dbg !13309

do.body27:                                        ; preds = %if.then26
  br label %do.body28, !dbg !13313

do.body28:                                        ; preds = %do.body27
  br label %do.end29, !dbg !13315

do.end29:                                         ; preds = %do.body28
  br label %do.body30, !dbg !13313

do.body30:                                        ; preds = %do.end29
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.45, i64 0, i64 0), i32 2555, i32 0, i64 12) #10, !dbg !13317, !srcloc !13319
  br label %do.end31, !dbg !13317

do.end31:                                         ; preds = %do.body30
  br label %do.body32, !dbg !13313

do.body32:                                        ; preds = %do.end31
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 339) #10, !dbg !13320, !srcloc !13323
  unreachable, !dbg !13324

do.end33:                                         ; No predecessors!
  br label %do.end34, !dbg !13313

do.end34:                                         ; preds = %do.end33
  br label %if.end35, !dbg !13313

if.end35:                                         ; preds = %do.end34, %do.body20
  br label %do.end36, !dbg !13312

do.end36:                                         ; preds = %if.end35
  %35 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !13325
  %dma37 = getelementptr inbounds %struct.skge_port, %struct.skge_port* %35, i32 0, i32 18, !dbg !13325
  %36 = load i64, i64* %dma37, align 8, !dbg !13325
  %shr = lshr i64 %36, 16, !dbg !13325
  %shr38 = lshr i64 %shr, 16, !dbg !13325
  %conv39 = trunc i64 %shr38 to i32, !dbg !13325
  %37 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !13327
  %dma40 = getelementptr inbounds %struct.skge_port, %struct.skge_port* %37, i32 0, i32 18, !dbg !13327
  %38 = load i64, i64* %dma40, align 8, !dbg !13327
  %39 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !13327
  %mem_size41 = getelementptr inbounds %struct.skge_port, %struct.skge_port* %39, i32 0, i32 19, !dbg !13327
  %40 = load i64, i64* %mem_size41, align 8, !dbg !13327
  %add42 = add i64 %38, %40, !dbg !13327
  %shr43 = lshr i64 %add42, 16, !dbg !13327
  %shr44 = lshr i64 %shr43, 16, !dbg !13327
  %conv45 = trunc i64 %shr44 to i32, !dbg !13327
  %cmp46 = icmp ne i32 %conv39, %conv45, !dbg !13328
  br i1 %cmp46, label %if.then48, label %if.end51, !dbg !13329

if.then48:                                        ; preds = %do.end36
  %41 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !13330
  %pdev49 = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %41, i32 0, i32 1, !dbg !13330
  %42 = load %struct.pci_dev*, %struct.pci_dev** %pdev49, align 8, !dbg !13330
  %dev50 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %42, i32 0, i32 41, !dbg !13330
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev50, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.46, i64 0, i64 0)) #15, !dbg !13330
  store i32 -22, i32* %err, align 4, !dbg !13332
  br label %free_pci_mem, !dbg !13333

if.end51:                                         ; preds = %do.end36
  %43 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !13334
  %rx_ring52 = getelementptr inbounds %struct.skge_port, %struct.skge_port* %43, i32 0, i32 6, !dbg !13335
  %44 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !13336
  %mem53 = getelementptr inbounds %struct.skge_port, %struct.skge_port* %44, i32 0, i32 17, !dbg !13337
  %45 = load i8*, i8** %mem53, align 8, !dbg !13337
  %46 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !13338
  %dma54 = getelementptr inbounds %struct.skge_port, %struct.skge_port* %46, i32 0, i32 18, !dbg !13339
  %47 = load i64, i64* %dma54, align 8, !dbg !13339
  %conv55 = trunc i64 %47 to i32, !dbg !13338
  %call56 = call i32 @skge_ring_alloc(%struct.skge_ring* %rx_ring52, i8* %45, i32 %conv55) #14, !dbg !13340
  store i32 %call56, i32* %err, align 4, !dbg !13341
  %48 = load i32, i32* %err, align 4, !dbg !13342
  %tobool57 = icmp ne i32 %48, 0, !dbg !13342
  br i1 %tobool57, label %if.then58, label %if.end59, !dbg !13344

if.then58:                                        ; preds = %if.end51
  br label %free_pci_mem, !dbg !13345

if.end59:                                         ; preds = %if.end51
  %49 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !13346
  %call60 = call i32 @skge_rx_fill(%struct.net_device* %49) #14, !dbg !13347
  store i32 %call60, i32* %err, align 4, !dbg !13348
  %50 = load i32, i32* %err, align 4, !dbg !13349
  %tobool61 = icmp ne i32 %50, 0, !dbg !13349
  br i1 %tobool61, label %if.then62, label %if.end63, !dbg !13351

if.then62:                                        ; preds = %if.end59
  br label %free_rx_ring, !dbg !13352

if.end63:                                         ; preds = %if.end59
  %51 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !13353
  %tx_ring64 = getelementptr inbounds %struct.skge_port, %struct.skge_port* %51, i32 0, i32 5, !dbg !13354
  %52 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !13355
  %mem65 = getelementptr inbounds %struct.skge_port, %struct.skge_port* %52, i32 0, i32 17, !dbg !13356
  %53 = load i8*, i8** %mem65, align 8, !dbg !13356
  %54 = load i64, i64* %rx_size, align 8, !dbg !13357
  %add.ptr = getelementptr i8, i8* %53, i64 %54, !dbg !13358
  %55 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !13359
  %dma66 = getelementptr inbounds %struct.skge_port, %struct.skge_port* %55, i32 0, i32 18, !dbg !13360
  %56 = load i64, i64* %dma66, align 8, !dbg !13360
  %57 = load i64, i64* %rx_size, align 8, !dbg !13361
  %add67 = add i64 %56, %57, !dbg !13362
  %conv68 = trunc i64 %add67 to i32, !dbg !13359
  %call69 = call i32 @skge_ring_alloc(%struct.skge_ring* %tx_ring64, i8* %add.ptr, i32 %conv68) #14, !dbg !13363
  store i32 %call69, i32* %err, align 4, !dbg !13364
  %58 = load i32, i32* %err, align 4, !dbg !13365
  %tobool70 = icmp ne i32 %58, 0, !dbg !13365
  br i1 %tobool70, label %if.then71, label %if.end72, !dbg !13367

if.then71:                                        ; preds = %if.end63
  br label %free_rx_ring, !dbg !13368

if.end72:                                         ; preds = %if.end63
  %59 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !13369
  %ports = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %59, i32 0, i32 8, !dbg !13371
  %60 = load i8, i8* %ports, align 1, !dbg !13371
  %conv73 = zext i8 %60 to i32, !dbg !13369
  %cmp74 = icmp eq i32 %conv73, 1, !dbg !13372
  br i1 %cmp74, label %if.then76, label %if.end84, !dbg !13373

if.then76:                                        ; preds = %if.end72
  %61 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !13374
  %pdev77 = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %61, i32 0, i32 1, !dbg !13376
  %62 = load %struct.pci_dev*, %struct.pci_dev** %pdev77, align 8, !dbg !13376
  %irq = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %62, i32 0, i32 43, !dbg !13377
  %63 = load i32, i32* %irq, align 4, !dbg !13377
  %64 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !13378
  %name = getelementptr inbounds %struct.net_device, %struct.net_device* %64, i32 0, i32 0, !dbg !13379
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %name, i64 0, i64 0, !dbg !13378
  %65 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !13380
  %66 = bitcast %struct.skge_hw* %65 to i8*, !dbg !13380
  %call78 = call i32 @request_irq(i32 %63, i32 (i32, i8*)* @skge_intr, i64 128, i8* %arraydecay, i8* %66) #14, !dbg !13381
  store i32 %call78, i32* %err, align 4, !dbg !13382
  %67 = load i32, i32* %err, align 4, !dbg !13383
  %tobool79 = icmp ne i32 %67, 0, !dbg !13383
  br i1 %tobool79, label %if.then80, label %if.end83, !dbg !13385

if.then80:                                        ; preds = %if.then76
  %68 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !13386
  %69 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !13388
  %pdev81 = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %69, i32 0, i32 1, !dbg !13389
  %70 = load %struct.pci_dev*, %struct.pci_dev** %pdev81, align 8, !dbg !13389
  %irq82 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %70, i32 0, i32 43, !dbg !13390
  %71 = load i32, i32* %irq82, align 4, !dbg !13390
  %72 = load i32, i32* %err, align 4, !dbg !13391
  call void (%struct.net_device*, i8*, ...) @netdev_err(%struct.net_device* %68, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.47, i64 0, i64 0), i32 %71, i32 %72) #15, !dbg !13392
  br label %free_tx_ring, !dbg !13393

if.end83:                                         ; preds = %if.then76
  br label %if.end84, !dbg !13394

if.end84:                                         ; preds = %if.end83, %if.end72
  %73 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !13395
  call void @netif_carrier_off(%struct.net_device* %73) #14, !dbg !13396
  %74 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !13397
  %phy_lock = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %74, i32 0, i32 13, !dbg !13398
  call void @spin_lock_bh(%struct.spinlock* %phy_lock) #14, !dbg !13399
  %75 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !13400
  %call85 = call zeroext i1 @is_genesis(%struct.skge_hw* %75) #14, !dbg !13402
  br i1 %call85, label %if.then86, label %if.else87, !dbg !13403

if.then86:                                        ; preds = %if.end84
  %76 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !13404
  %77 = load i32, i32* %port, align 4, !dbg !13405
  call void @genesis_mac_init(%struct.skge_hw* %76, i32 %77) #14, !dbg !13406
  br label %if.end88, !dbg !13406

if.else87:                                        ; preds = %if.end84
  %78 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !13407
  %79 = load i32, i32* %port, align 4, !dbg !13408
  call void @yukon_mac_init(%struct.skge_hw* %78, i32 %79) #14, !dbg !13409
  br label %if.end88

if.end88:                                         ; preds = %if.else87, %if.then86
  %80 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !13410
  %phy_lock89 = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %80, i32 0, i32 13, !dbg !13411
  call void @spin_unlock_bh(%struct.spinlock* %phy_lock89) #14, !dbg !13412
  %81 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !13413
  %ram_size = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %81, i32 0, i32 10, !dbg !13414
  %82 = load i32, i32* %ram_size, align 8, !dbg !13414
  %83 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !13415
  %ram_offset = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %83, i32 0, i32 11, !dbg !13416
  %84 = load i32, i32* %ram_offset, align 4, !dbg !13416
  %sub = sub i32 %82, %84, !dbg !13417
  %85 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !13418
  %ports90 = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %85, i32 0, i32 8, !dbg !13419
  %86 = load i8, i8* %ports90, align 1, !dbg !13419
  %conv91 = zext i8 %86 to i32, !dbg !13418
  %mul92 = mul i32 %conv91, 2, !dbg !13420
  %div = udiv i32 %sub, %mul92, !dbg !13421
  store i32 %div, i32* %chunk, align 4, !dbg !13422
  %87 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !13423
  %ram_offset93 = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %87, i32 0, i32 11, !dbg !13424
  %88 = load i32, i32* %ram_offset93, align 4, !dbg !13424
  %89 = load i32, i32* %chunk, align 4, !dbg !13425
  %mul94 = mul i32 2, %89, !dbg !13426
  %90 = load i32, i32* %port, align 4, !dbg !13427
  %mul95 = mul i32 %mul94, %90, !dbg !13428
  %add96 = add i32 %88, %mul95, !dbg !13429
  store i32 %add96, i32* %ram_addr, align 4, !dbg !13430
  %91 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !13431
  %92 = load i32, i32* %port, align 4, !dbg !13432
  %idxprom = sext i32 %92 to i64, !dbg !13433
  %arrayidx = getelementptr [2 x i32], [2 x i32]* @rxqaddr, i64 0, i64 %idxprom, !dbg !13433
  %93 = load i32, i32* %arrayidx, align 4, !dbg !13433
  %conv97 = trunc i32 %93 to i16, !dbg !13433
  %94 = load i32, i32* %ram_addr, align 4, !dbg !13434
  %95 = load i32, i32* %chunk, align 4, !dbg !13435
  %conv98 = zext i32 %95 to i64, !dbg !13435
  call void @skge_ramset(%struct.skge_hw* %91, i16 zeroext %conv97, i32 %94, i64 %conv98) #14, !dbg !13436
  %96 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !13437
  %97 = load i32, i32* %port, align 4, !dbg !13438
  %idxprom99 = sext i32 %97 to i64, !dbg !13439
  %arrayidx100 = getelementptr [2 x i32], [2 x i32]* @rxqaddr, i64 0, i64 %idxprom99, !dbg !13439
  %98 = load i32, i32* %arrayidx100, align 4, !dbg !13439
  %conv101 = trunc i32 %98 to i16, !dbg !13439
  %99 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !13440
  %rx_ring102 = getelementptr inbounds %struct.skge_port, %struct.skge_port* %99, i32 0, i32 6, !dbg !13441
  %to_clean = getelementptr inbounds %struct.skge_ring, %struct.skge_ring* %rx_ring102, i32 0, i32 0, !dbg !13442
  %100 = load %struct.skge_element*, %struct.skge_element** %to_clean, align 8, !dbg !13442
  call void @skge_qset(%struct.skge_port* %96, i16 zeroext %conv101, %struct.skge_element* %100) #14, !dbg !13443
  br label %do.body103, !dbg !13444

do.body103:                                       ; preds = %if.end88
  %101 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !13445
  %tx_ring104 = getelementptr inbounds %struct.skge_port, %struct.skge_port* %101, i32 0, i32 5, !dbg !13445
  %to_use = getelementptr inbounds %struct.skge_ring, %struct.skge_ring* %tx_ring104, i32 0, i32 1, !dbg !13445
  %102 = load %struct.skge_element*, %struct.skge_element** %to_use, align 8, !dbg !13445
  %103 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !13445
  %tx_ring105 = getelementptr inbounds %struct.skge_port, %struct.skge_port* %103, i32 0, i32 5, !dbg !13445
  %to_clean106 = getelementptr inbounds %struct.skge_ring, %struct.skge_ring* %tx_ring105, i32 0, i32 0, !dbg !13445
  %104 = load %struct.skge_element*, %struct.skge_element** %to_clean106, align 8, !dbg !13445
  %cmp107 = icmp ne %struct.skge_element* %102, %104, !dbg !13445
  %lnot109 = xor i1 %cmp107, true, !dbg !13445
  %lnot111 = xor i1 %lnot109, true, !dbg !13445
  %lnot.ext112 = zext i1 %lnot111 to i32, !dbg !13445
  %conv113 = sext i32 %lnot.ext112 to i64, !dbg !13445
  %tobool114 = icmp ne i64 %conv113, 0, !dbg !13445
  br i1 %tobool114, label %if.then115, label %if.end124, !dbg !13448

if.then115:                                       ; preds = %do.body103
  br label %do.body116, !dbg !13445

do.body116:                                       ; preds = %if.then115
  br label %do.body117, !dbg !13449

do.body117:                                       ; preds = %do.body116
  br label %do.end118, !dbg !13451

do.end118:                                        ; preds = %do.body117
  br label %do.body119, !dbg !13449

do.body119:                                       ; preds = %do.end118
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.45, i64 0, i64 0), i32 2602, i32 0, i64 12) #10, !dbg !13453, !srcloc !13455
  br label %do.end120, !dbg !13453

do.end120:                                        ; preds = %do.body119
  br label %do.body121, !dbg !13449

do.body121:                                       ; preds = %do.end120
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 340) #10, !dbg !13456, !srcloc !13459
  unreachable, !dbg !13460

do.end122:                                        ; No predecessors!
  br label %do.end123, !dbg !13449

do.end123:                                        ; preds = %do.end122
  br label %if.end124, !dbg !13449

if.end124:                                        ; preds = %do.end123, %do.body103
  br label %do.end125, !dbg !13448

do.end125:                                        ; preds = %if.end124
  %105 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !13461
  %106 = load i32, i32* %port, align 4, !dbg !13462
  %idxprom126 = sext i32 %106 to i64, !dbg !13463
  %arrayidx127 = getelementptr [2 x i32], [2 x i32]* @txqaddr, i64 0, i64 %idxprom126, !dbg !13463
  %107 = load i32, i32* %arrayidx127, align 4, !dbg !13463
  %conv128 = trunc i32 %107 to i16, !dbg !13463
  %108 = load i32, i32* %ram_addr, align 4, !dbg !13464
  %109 = load i32, i32* %chunk, align 4, !dbg !13465
  %add129 = add i32 %108, %109, !dbg !13466
  %110 = load i32, i32* %chunk, align 4, !dbg !13467
  %conv130 = zext i32 %110 to i64, !dbg !13467
  call void @skge_ramset(%struct.skge_hw* %105, i16 zeroext %conv128, i32 %add129, i64 %conv130) #14, !dbg !13468
  %111 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !13469
  %112 = load i32, i32* %port, align 4, !dbg !13470
  %idxprom131 = sext i32 %112 to i64, !dbg !13471
  %arrayidx132 = getelementptr [2 x i32], [2 x i32]* @txqaddr, i64 0, i64 %idxprom131, !dbg !13471
  %113 = load i32, i32* %arrayidx132, align 4, !dbg !13471
  %conv133 = trunc i32 %113 to i16, !dbg !13471
  %114 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !13472
  %tx_ring134 = getelementptr inbounds %struct.skge_port, %struct.skge_port* %114, i32 0, i32 5, !dbg !13473
  %to_use135 = getelementptr inbounds %struct.skge_ring, %struct.skge_ring* %tx_ring134, i32 0, i32 1, !dbg !13474
  %115 = load %struct.skge_element*, %struct.skge_element** %to_use135, align 8, !dbg !13474
  call void @skge_qset(%struct.skge_port* %111, i16 zeroext %conv133, %struct.skge_element* %115) #14, !dbg !13475
  call void asm sideeffect "sfence", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !13476, !srcloc !13477
  %116 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !13478
  %117 = load i32, i32* %port, align 4, !dbg !13479
  %idxprom136 = sext i32 %117 to i64, !dbg !13479
  %arrayidx137 = getelementptr [2 x i32], [2 x i32]* @rxqaddr, i64 0, i64 %idxprom136, !dbg !13479
  %118 = load i32, i32* %arrayidx137, align 4, !dbg !13479
  %add138 = add i32 1024, %118, !dbg !13479
  %add139 = add i32 %add138, 52, !dbg !13479
  call void @skge_write8(%struct.skge_hw* %116, i32 %add139, i8 zeroext 18) #14, !dbg !13480
  %119 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !13481
  call void @skge_led(%struct.skge_port* %119, i32 1) #14, !dbg !13482
  %120 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !13483
  %hw_lock = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %120, i32 0, i32 2, !dbg !13484
  store %struct.spinlock* %hw_lock, %struct.spinlock** %lock.addr.i, align 8
  call void @arch_local_irq_disable() #16, !dbg !13485
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !13486, !srcloc !9814
  %121 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !13487
  %122 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %121, i32 0, i32 0, !dbg !13487
  %rlock.i = bitcast %union.anon.1* %122 to %struct.raw_spinlock*, !dbg !13487
  %123 = load i32, i32* %port, align 4, !dbg !13488
  %idxprom140 = sext i32 %123 to i64, !dbg !13489
  %arrayidx141 = getelementptr [2 x i32], [2 x i32]* @portmask, i64 0, i64 %idxprom140, !dbg !13489
  %124 = load i32, i32* %arrayidx141, align 4, !dbg !13489
  %125 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !13490
  %intr_mask = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %125, i32 0, i32 3, !dbg !13491
  %126 = load i32, i32* %intr_mask, align 8, !dbg !13492
  %or = or i32 %126, %124, !dbg !13492
  store i32 %or, i32* %intr_mask, align 8, !dbg !13492
  %127 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !13493
  %128 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !13494
  %intr_mask142 = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %128, i32 0, i32 3, !dbg !13495
  %129 = load i32, i32* %intr_mask142, align 8, !dbg !13495
  call void @skge_write32(%struct.skge_hw* %127, i32 12, i32 %129) #14, !dbg !13496
  %130 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !13497
  %call143 = call i32 @skge_read32(%struct.skge_hw* %130, i32 12) #14, !dbg !13498
  %131 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !13499
  %hw_lock144 = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %131, i32 0, i32 2, !dbg !13500
  store %struct.spinlock* %hw_lock144, %struct.spinlock** %lock.addr.i154, align 8
  call void @arch_local_irq_enable() #16, !dbg !13501
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !13502, !srcloc !9838
  %132 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i154, align 8, !dbg !13503
  %133 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %132, i32 0, i32 0, !dbg !13503
  %rlock.i155 = bitcast %union.anon.1* %133 to %struct.raw_spinlock*, !dbg !13503
  %134 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !13504
  %napi = getelementptr inbounds %struct.skge_port, %struct.skge_port* %134, i32 0, i32 2, !dbg !13505
  call void @napi_enable(%struct.napi_struct* %napi) #14, !dbg !13506
  %135 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !13507
  call void @skge_set_multicast(%struct.net_device* %135) #14, !dbg !13508
  store i32 0, i32* %retval, align 4, !dbg !13509
  br label %return, !dbg !13509

free_tx_ring:                                     ; preds = %if.then80
  call void @llvm.dbg.label(metadata !13510), !dbg !13511
  %136 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !13512
  %tx_ring145 = getelementptr inbounds %struct.skge_port, %struct.skge_port* %136, i32 0, i32 5, !dbg !13513
  %start = getelementptr inbounds %struct.skge_ring, %struct.skge_ring* %tx_ring145, i32 0, i32 2, !dbg !13514
  %137 = load %struct.skge_element*, %struct.skge_element** %start, align 8, !dbg !13514
  %138 = bitcast %struct.skge_element* %137 to i8*, !dbg !13512
  call void @kfree(i8* %138) #14, !dbg !13515
  br label %free_rx_ring, !dbg !13515

free_rx_ring:                                     ; preds = %free_tx_ring, %if.then71, %if.then62
  call void @llvm.dbg.label(metadata !13516), !dbg !13517
  %139 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !13518
  call void @skge_rx_clean(%struct.skge_port* %139) #14, !dbg !13519
  %140 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !13520
  %rx_ring146 = getelementptr inbounds %struct.skge_port, %struct.skge_port* %140, i32 0, i32 6, !dbg !13521
  %start147 = getelementptr inbounds %struct.skge_ring, %struct.skge_ring* %rx_ring146, i32 0, i32 2, !dbg !13522
  %141 = load %struct.skge_element*, %struct.skge_element** %start147, align 8, !dbg !13522
  %142 = bitcast %struct.skge_element* %141 to i8*, !dbg !13520
  call void @kfree(i8* %142) #14, !dbg !13523
  br label %free_pci_mem, !dbg !13523

free_pci_mem:                                     ; preds = %free_rx_ring, %if.then58, %if.then48
  call void @llvm.dbg.label(metadata !13524), !dbg !13525
  %143 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !13526
  %pdev148 = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %143, i32 0, i32 1, !dbg !13527
  %144 = load %struct.pci_dev*, %struct.pci_dev** %pdev148, align 8, !dbg !13527
  %dev149 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %144, i32 0, i32 41, !dbg !13528
  %145 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !13529
  %mem_size150 = getelementptr inbounds %struct.skge_port, %struct.skge_port* %145, i32 0, i32 19, !dbg !13530
  %146 = load i64, i64* %mem_size150, align 8, !dbg !13530
  %147 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !13531
  %mem151 = getelementptr inbounds %struct.skge_port, %struct.skge_port* %147, i32 0, i32 17, !dbg !13532
  %148 = load i8*, i8** %mem151, align 8, !dbg !13532
  %149 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !13533
  %dma152 = getelementptr inbounds %struct.skge_port, %struct.skge_port* %149, i32 0, i32 18, !dbg !13534
  %150 = load i64, i64* %dma152, align 8, !dbg !13534
  call void @dma_free_coherent(%struct.device* %dev149, i64 %146, i8* %148, i64 %150) #14, !dbg !13535
  %151 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !13536
  %mem153 = getelementptr inbounds %struct.skge_port, %struct.skge_port* %151, i32 0, i32 17, !dbg !13537
  store i8* null, i8** %mem153, align 8, !dbg !13538
  %152 = load i32, i32* %err, align 4, !dbg !13539
  store i32 %152, i32* %retval, align 4, !dbg !13540
  br label %return, !dbg !13540

return:                                           ; preds = %free_pci_mem, %do.end125, %if.then18, %if.then
  %153 = load i32, i32* %retval, align 4, !dbg !13541
  ret i32 %153, !dbg !13541
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @skge_down(%struct.net_device* %dev) #2 !dbg !13542 {
entry:
  %lock.addr.i71 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i71, metadata !9767, metadata !DIExpression()), !dbg !13543
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !9773, metadata !DIExpression()), !dbg !13545
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.net_device*, align 8
  %skge = alloca %struct.skge_port*, align 8
  %hw = alloca %struct.skge_hw*, align 8
  %port = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !13547, metadata !DIExpression()), !dbg !13548
  call void @llvm.dbg.declare(metadata %struct.skge_port** %skge, metadata !13549, metadata !DIExpression()), !dbg !13550
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !13551
  %call = call i8* @netdev_priv(%struct.net_device* %0) #14, !dbg !13552
  %1 = bitcast i8* %call to %struct.skge_port*, !dbg !13552
  store %struct.skge_port* %1, %struct.skge_port** %skge, align 8, !dbg !13550
  call void @llvm.dbg.declare(metadata %struct.skge_hw** %hw, metadata !13553, metadata !DIExpression()), !dbg !13554
  %2 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !13555
  %hw1 = getelementptr inbounds %struct.skge_port, %struct.skge_port* %2, i32 0, i32 0, !dbg !13556
  %3 = load %struct.skge_hw*, %struct.skge_hw** %hw1, align 8, !dbg !13556
  store %struct.skge_hw* %3, %struct.skge_hw** %hw, align 8, !dbg !13554
  call void @llvm.dbg.declare(metadata i32* %port, metadata !13557, metadata !DIExpression()), !dbg !13558
  %4 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !13559
  %port2 = getelementptr inbounds %struct.skge_port, %struct.skge_port* %4, i32 0, i32 3, !dbg !13560
  %5 = load i32, i32* %port2, align 8, !dbg !13560
  store i32 %5, i32* %port, align 4, !dbg !13558
  %6 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !13561
  %mem = getelementptr inbounds %struct.skge_port, %struct.skge_port* %6, i32 0, i32 17, !dbg !13563
  %7 = load i8*, i8** %mem, align 8, !dbg !13563
  %tobool = icmp ne i8* %7, null, !dbg !13561
  br i1 %tobool, label %if.end, label %if.then, !dbg !13564

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !13565
  br label %return, !dbg !13565

if.end:                                           ; preds = %entry
  br label %do.body, !dbg !13566

do.body:                                          ; preds = %if.end
  %8 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !13567
  %msg_enable = getelementptr inbounds %struct.skge_port, %struct.skge_port* %8, i32 0, i32 4, !dbg !13567
  %9 = load i32, i32* %msg_enable, align 4, !dbg !13567
  %and = and i32 %9, 16, !dbg !13567
  %tobool3 = icmp ne i32 %and, 0, !dbg !13567
  br i1 %tobool3, label %if.then4, label %if.end5, !dbg !13570

if.then4:                                         ; preds = %do.body
  %10 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !13567
  %netdev = getelementptr inbounds %struct.skge_port, %struct.skge_port* %10, i32 0, i32 1, !dbg !13567
  %11 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !13567
  call void (%struct.net_device*, i8*, ...) @netdev_info(%struct.net_device* %11, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.52, i64 0, i64 0)) #15, !dbg !13567
  br label %if.end5, !dbg !13567

if.end5:                                          ; preds = %if.then4, %do.body
  br label %do.end, !dbg !13570

do.end:                                           ; preds = %if.end5
  %12 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !13571
  call void @netif_tx_disable(%struct.net_device* %12) #14, !dbg !13572
  %13 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !13573
  %call6 = call zeroext i1 @is_genesis(%struct.skge_hw* %13) #14, !dbg !13575
  br i1 %call6, label %land.lhs.true, label %if.end10, !dbg !13576

land.lhs.true:                                    ; preds = %do.end
  %14 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !13577
  %phy_type = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %14, i32 0, i32 9, !dbg !13578
  %15 = load i8, i8* %phy_type, align 4, !dbg !13578
  %conv = zext i8 %15 to i32, !dbg !13577
  %cmp = icmp eq i32 %conv, 0, !dbg !13579
  br i1 %cmp, label %if.then8, label %if.end10, !dbg !13580

if.then8:                                         ; preds = %land.lhs.true
  %16 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !13581
  %link_timer = getelementptr inbounds %struct.skge_port, %struct.skge_port* %16, i32 0, i32 8, !dbg !13581
  %call9 = call i32 @del_timer(%struct.timer_list* %link_timer) #14, !dbg !13581
  br label %if.end10, !dbg !13581

if.end10:                                         ; preds = %if.then8, %land.lhs.true, %do.end
  %17 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !13582
  %napi = getelementptr inbounds %struct.skge_port, %struct.skge_port* %17, i32 0, i32 2, !dbg !13583
  call void @napi_disable(%struct.napi_struct* %napi) #14, !dbg !13584
  %18 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !13585
  call void @netif_carrier_off(%struct.net_device* %18) #14, !dbg !13586
  %19 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !13587
  %hw_lock = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %19, i32 0, i32 2, !dbg !13588
  store %struct.spinlock* %hw_lock, %struct.spinlock** %lock.addr.i, align 8
  call void @arch_local_irq_disable() #16, !dbg !13589
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !13590, !srcloc !9814
  %20 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !13591
  %21 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %20, i32 0, i32 0, !dbg !13591
  %rlock.i = bitcast %union.anon.1* %21 to %struct.raw_spinlock*, !dbg !13591
  %22 = load i32, i32* %port, align 4, !dbg !13592
  %idxprom = sext i32 %22 to i64, !dbg !13593
  %arrayidx = getelementptr [2 x i32], [2 x i32]* @portmask, i64 0, i64 %idxprom, !dbg !13593
  %23 = load i32, i32* %arrayidx, align 4, !dbg !13593
  %neg = xor i32 %23, -1, !dbg !13594
  %24 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !13595
  %intr_mask = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %24, i32 0, i32 3, !dbg !13596
  %25 = load i32, i32* %intr_mask, align 8, !dbg !13597
  %and11 = and i32 %25, %neg, !dbg !13597
  store i32 %and11, i32* %intr_mask, align 8, !dbg !13597
  %26 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !13598
  %27 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !13599
  %ports = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %27, i32 0, i32 8, !dbg !13600
  %28 = load i8, i8* %ports, align 1, !dbg !13600
  %conv12 = zext i8 %28 to i32, !dbg !13599
  %cmp13 = icmp eq i32 %conv12, 1, !dbg !13601
  br i1 %cmp13, label %cond.true, label %cond.false, !dbg !13602

cond.true:                                        ; preds = %if.end10
  br label %cond.end, !dbg !13602

cond.false:                                       ; preds = %if.end10
  %29 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !13603
  %intr_mask15 = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %29, i32 0, i32 3, !dbg !13604
  %30 = load i32, i32* %intr_mask15, align 8, !dbg !13604
  br label %cond.end, !dbg !13602

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ %30, %cond.false ], !dbg !13602
  call void @skge_write32(%struct.skge_hw* %26, i32 12, i32 %cond) #14, !dbg !13605
  %31 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !13606
  %call16 = call i32 @skge_read32(%struct.skge_hw* %31, i32 12) #14, !dbg !13607
  %32 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !13608
  %hw_lock17 = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %32, i32 0, i32 2, !dbg !13609
  store %struct.spinlock* %hw_lock17, %struct.spinlock** %lock.addr.i71, align 8
  call void @arch_local_irq_enable() #16, !dbg !13610
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !13611, !srcloc !9838
  %33 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i71, align 8, !dbg !13612
  %34 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %33, i32 0, i32 0, !dbg !13612
  %rlock.i72 = bitcast %union.anon.1* %34 to %struct.raw_spinlock*, !dbg !13612
  %35 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !13613
  %ports18 = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %35, i32 0, i32 8, !dbg !13615
  %36 = load i8, i8* %ports18, align 1, !dbg !13615
  %conv19 = zext i8 %36 to i32, !dbg !13613
  %cmp20 = icmp eq i32 %conv19, 1, !dbg !13616
  br i1 %cmp20, label %if.then22, label %if.end24, !dbg !13617

if.then22:                                        ; preds = %cond.end
  %37 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !13618
  %pdev = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %37, i32 0, i32 1, !dbg !13619
  %38 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !13619
  %irq = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %38, i32 0, i32 43, !dbg !13620
  %39 = load i32, i32* %irq, align 4, !dbg !13620
  %40 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !13621
  %41 = bitcast %struct.skge_hw* %40 to i8*, !dbg !13621
  %call23 = call i8* @free_irq(i32 %39, i8* %41) #14, !dbg !13622
  br label %if.end24, !dbg !13622

if.end24:                                         ; preds = %if.then22, %cond.end
  %42 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !13623
  %hw25 = getelementptr inbounds %struct.skge_port, %struct.skge_port* %42, i32 0, i32 0, !dbg !13624
  %43 = load %struct.skge_hw*, %struct.skge_hw** %hw25, align 8, !dbg !13624
  %44 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !13625
  %port26 = getelementptr inbounds %struct.skge_port, %struct.skge_port* %44, i32 0, i32 3, !dbg !13625
  %45 = load i32, i32* %port26, align 8, !dbg !13625
  %shl = shl i32 %45, 7, !dbg !13625
  %add = add i32 %shl, 3132, !dbg !13625
  call void @skge_write8(%struct.skge_hw* %43, i32 %add, i8 zeroext 1) #14, !dbg !13626
  %46 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !13627
  %call27 = call zeroext i1 @is_genesis(%struct.skge_hw* %46) #14, !dbg !13629
  br i1 %call27, label %if.then28, label %if.else, !dbg !13630

if.then28:                                        ; preds = %if.end24
  %47 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !13631
  call void @genesis_stop(%struct.skge_port* %47) #14, !dbg !13632
  br label %if.end29, !dbg !13632

if.else:                                          ; preds = %if.end24
  %48 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !13633
  call void @yukon_stop(%struct.skge_port* %48) #14, !dbg !13634
  br label %if.end29

if.end29:                                         ; preds = %if.else, %if.then28
  %49 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !13635
  %50 = load i32, i32* %port, align 4, !dbg !13636
  %idxprom30 = sext i32 %50 to i64, !dbg !13636
  %arrayidx31 = getelementptr [2 x i32], [2 x i32]* @txqaddr, i64 0, i64 %idxprom30, !dbg !13636
  %51 = load i32, i32* %arrayidx31, align 4, !dbg !13636
  %add32 = add i32 1024, %51, !dbg !13636
  %add33 = add i32 %add32, 52, !dbg !13636
  call void @skge_write8(%struct.skge_hw* %49, i32 %add33, i8 zeroext 32) #14, !dbg !13637
  %52 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !13638
  %53 = load i32, i32* %port, align 4, !dbg !13639
  %idxprom34 = sext i32 %53 to i64, !dbg !13639
  %arrayidx35 = getelementptr [2 x i32], [2 x i32]* @txqaddr, i64 0, i64 %idxprom34, !dbg !13639
  %54 = load i32, i32* %arrayidx35, align 4, !dbg !13639
  %add36 = add i32 2088, %54, !dbg !13639
  call void @skge_write32(%struct.skge_hw* %52, i32 %add36, i32 5) #14, !dbg !13640
  %55 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !13641
  %56 = load i32, i32* %port, align 4, !dbg !13642
  %shl37 = shl i32 %56, 7, !dbg !13642
  %add38 = add i32 %shl37, 528, !dbg !13642
  call void @skge_write8(%struct.skge_hw* %55, i32 %add38, i8 zeroext 84) #14, !dbg !13643
  %57 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !13644
  %58 = load i32, i32* %port, align 4, !dbg !13645
  %shl39 = shl i32 %58, 7, !dbg !13645
  %add40 = add i32 %shl39, 512, !dbg !13645
  call void @skge_write32(%struct.skge_hw* %57, i32 %add40, i32 0) #14, !dbg !13646
  %59 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !13647
  %60 = load i32, i32* %port, align 4, !dbg !13648
  %shl41 = shl i32 %60, 7, !dbg !13648
  %add42 = add i32 %shl41, 520, !dbg !13648
  call void @skge_write32(%struct.skge_hw* %59, i32 %add42, i32 0) #14, !dbg !13649
  %61 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !13650
  %62 = load i32, i32* %port, align 4, !dbg !13651
  %idxprom43 = sext i32 %62 to i64, !dbg !13651
  %arrayidx44 = getelementptr [2 x i32], [2 x i32]* @txqaddr, i64 0, i64 %idxprom43, !dbg !13651
  %63 = load i32, i32* %arrayidx44, align 4, !dbg !13651
  %add45 = add i32 1024, %63, !dbg !13651
  %add46 = add i32 %add45, 52, !dbg !13651
  call void @skge_write32(%struct.skge_hw* %61, i32 %add46, i32 1398016) #14, !dbg !13652
  %64 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !13653
  %65 = load i32, i32* %port, align 4, !dbg !13654
  %idxprom47 = sext i32 %65 to i64, !dbg !13654
  %arrayidx48 = getelementptr [2 x i32], [2 x i32]* @txqaddr, i64 0, i64 %idxprom47, !dbg !13654
  %66 = load i32, i32* %arrayidx48, align 4, !dbg !13654
  %add49 = add i32 2088, %66, !dbg !13654
  call void @skge_write32(%struct.skge_hw* %64, i32 %add49, i32 1) #14, !dbg !13655
  %67 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !13656
  %68 = load i32, i32* %port, align 4, !dbg !13657
  %cmp50 = icmp eq i32 %68, 0, !dbg !13657
  %69 = zext i1 %cmp50 to i64, !dbg !13657
  %cond52 = select i1 %cmp50, i32 640, i32 896, !dbg !13657
  %add53 = add i32 2088, %cond52, !dbg !13657
  call void @skge_write8(%struct.skge_hw* %67, i32 %add53, i8 zeroext 1) #14, !dbg !13658
  %70 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !13659
  %71 = load i32, i32* %port, align 4, !dbg !13660
  call void @skge_rx_stop(%struct.skge_hw* %70, i32 %71) #14, !dbg !13661
  %72 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !13662
  %call54 = call zeroext i1 @is_genesis(%struct.skge_hw* %72) #14, !dbg !13664
  br i1 %call54, label %if.then55, label %if.else60, !dbg !13665

if.then55:                                        ; preds = %if.end29
  %73 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !13666
  %74 = load i32, i32* %port, align 4, !dbg !13668
  %shl56 = shl i32 %74, 7, !dbg !13668
  %add57 = add i32 %shl56, 3356, !dbg !13668
  call void @skge_write8(%struct.skge_hw* %73, i32 %add57, i8 zeroext 1) #14, !dbg !13669
  %75 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !13670
  %76 = load i32, i32* %port, align 4, !dbg !13671
  %shl58 = shl i32 %76, 7, !dbg !13671
  %add59 = add i32 %shl58, 3100, !dbg !13671
  call void @skge_write8(%struct.skge_hw* %75, i32 %add59, i8 zeroext 1) #14, !dbg !13672
  br label %if.end65, !dbg !13673

if.else60:                                        ; preds = %if.end29
  %77 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !13674
  %78 = load i32, i32* %port, align 4, !dbg !13676
  %shl61 = shl i32 %78, 7, !dbg !13676
  %add62 = add i32 %shl61, 3144, !dbg !13676
  call void @skge_write8(%struct.skge_hw* %77, i32 %add62, i8 zeroext 1) #14, !dbg !13677
  %79 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !13678
  %80 = load i32, i32* %port, align 4, !dbg !13679
  %shl63 = shl i32 %80, 7, !dbg !13679
  %add64 = add i32 %shl63, 3400, !dbg !13679
  call void @skge_write8(%struct.skge_hw* %79, i32 %add64, i8 zeroext 1) #14, !dbg !13680
  br label %if.end65

if.end65:                                         ; preds = %if.else60, %if.then55
  %81 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !13681
  call void @skge_led(%struct.skge_port* %81, i32 0) #14, !dbg !13682
  %82 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !13683
  call void @netif_tx_lock_bh(%struct.net_device* %82) #14, !dbg !13684
  %83 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !13685
  call void @skge_tx_clean(%struct.net_device* %83) #14, !dbg !13686
  %84 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !13687
  call void @netif_tx_unlock_bh(%struct.net_device* %84) #14, !dbg !13688
  %85 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !13689
  call void @skge_rx_clean(%struct.skge_port* %85) #14, !dbg !13690
  %86 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !13691
  %rx_ring = getelementptr inbounds %struct.skge_port, %struct.skge_port* %86, i32 0, i32 6, !dbg !13692
  %start = getelementptr inbounds %struct.skge_ring, %struct.skge_ring* %rx_ring, i32 0, i32 2, !dbg !13693
  %87 = load %struct.skge_element*, %struct.skge_element** %start, align 8, !dbg !13693
  %88 = bitcast %struct.skge_element* %87 to i8*, !dbg !13691
  call void @kfree(i8* %88) #14, !dbg !13694
  %89 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !13695
  %tx_ring = getelementptr inbounds %struct.skge_port, %struct.skge_port* %89, i32 0, i32 5, !dbg !13696
  %start66 = getelementptr inbounds %struct.skge_ring, %struct.skge_ring* %tx_ring, i32 0, i32 2, !dbg !13697
  %90 = load %struct.skge_element*, %struct.skge_element** %start66, align 8, !dbg !13697
  %91 = bitcast %struct.skge_element* %90 to i8*, !dbg !13695
  call void @kfree(i8* %91) #14, !dbg !13698
  %92 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !13699
  %pdev67 = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %92, i32 0, i32 1, !dbg !13700
  %93 = load %struct.pci_dev*, %struct.pci_dev** %pdev67, align 8, !dbg !13700
  %dev68 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %93, i32 0, i32 41, !dbg !13701
  %94 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !13702
  %mem_size = getelementptr inbounds %struct.skge_port, %struct.skge_port* %94, i32 0, i32 19, !dbg !13703
  %95 = load i64, i64* %mem_size, align 8, !dbg !13703
  %96 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !13704
  %mem69 = getelementptr inbounds %struct.skge_port, %struct.skge_port* %96, i32 0, i32 17, !dbg !13705
  %97 = load i8*, i8** %mem69, align 8, !dbg !13705
  %98 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !13706
  %dma = getelementptr inbounds %struct.skge_port, %struct.skge_port* %98, i32 0, i32 18, !dbg !13707
  %99 = load i64, i64* %dma, align 8, !dbg !13707
  call void @dma_free_coherent(%struct.device* %dev68, i64 %95, i8* %97, i64 %99) #14, !dbg !13708
  %100 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !13709
  %mem70 = getelementptr inbounds %struct.skge_port, %struct.skge_port* %100, i32 0, i32 17, !dbg !13710
  store i8* null, i8** %mem70, align 8, !dbg !13711
  store i32 0, i32* %retval, align 4, !dbg !13712
  br label %return, !dbg !13712

return:                                           ; preds = %if.end65, %if.then
  %101 = load i32, i32* %retval, align 4, !dbg !13713
  ret i32 %101, !dbg !13713
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @skge_xmit_frame(%struct.sk_buff* %skb, %struct.net_device* %dev) #2 !dbg !13714 {
entry:
  %retval = alloca i32, align 4
  %skb.addr = alloca %struct.sk_buff*, align 8
  %dev.addr = alloca %struct.net_device*, align 8
  %skge = alloca %struct.skge_port*, align 8
  %hw = alloca %struct.skge_hw*, align 8
  %e = alloca %struct.skge_element*, align 8
  %td = alloca %struct.skge_tx_desc*, align 8
  %i = alloca i32, align 4
  %control = alloca i32, align 4
  %len = alloca i32, align 4
  %map = alloca i64, align 8
  %offset = alloca i32, align 4
  %tf = alloca %struct.skge_tx_desc*, align 8
  %frag = alloca %struct.bio_vec*, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !13715, metadata !DIExpression()), !dbg !13716
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !13717, metadata !DIExpression()), !dbg !13718
  call void @llvm.dbg.declare(metadata %struct.skge_port** %skge, metadata !13719, metadata !DIExpression()), !dbg !13720
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !13721
  %call = call i8* @netdev_priv(%struct.net_device* %0) #14, !dbg !13722
  %1 = bitcast i8* %call to %struct.skge_port*, !dbg !13722
  store %struct.skge_port* %1, %struct.skge_port** %skge, align 8, !dbg !13720
  call void @llvm.dbg.declare(metadata %struct.skge_hw** %hw, metadata !13723, metadata !DIExpression()), !dbg !13724
  %2 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !13725
  %hw1 = getelementptr inbounds %struct.skge_port, %struct.skge_port* %2, i32 0, i32 0, !dbg !13726
  %3 = load %struct.skge_hw*, %struct.skge_hw** %hw1, align 8, !dbg !13726
  store %struct.skge_hw* %3, %struct.skge_hw** %hw, align 8, !dbg !13724
  call void @llvm.dbg.declare(metadata %struct.skge_element** %e, metadata !13727, metadata !DIExpression()), !dbg !13728
  call void @llvm.dbg.declare(metadata %struct.skge_tx_desc** %td, metadata !13729, metadata !DIExpression()), !dbg !13731
  call void @llvm.dbg.declare(metadata i32* %i, metadata !13732, metadata !DIExpression()), !dbg !13733
  call void @llvm.dbg.declare(metadata i32* %control, metadata !13734, metadata !DIExpression()), !dbg !13735
  call void @llvm.dbg.declare(metadata i32* %len, metadata !13736, metadata !DIExpression()), !dbg !13737
  call void @llvm.dbg.declare(metadata i64* %map, metadata !13738, metadata !DIExpression()), !dbg !13739
  %4 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !13740
  %call2 = call i32 @skb_padto(%struct.sk_buff* %4, i32 60) #14, !dbg !13742
  %tobool = icmp ne i32 %call2, 0, !dbg !13742
  br i1 %tobool, label %if.then, label %if.end, !dbg !13743

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !13744
  br label %return, !dbg !13744

if.end:                                           ; preds = %entry
  %5 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !13745
  %tx_ring = getelementptr inbounds %struct.skge_port, %struct.skge_port* %5, i32 0, i32 5, !dbg !13745
  %call3 = call i32 @skge_avail(%struct.skge_ring* %tx_ring) #14, !dbg !13745
  %6 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !13745
  %call4 = call i8* @skb_end_pointer(%struct.sk_buff* %6) #14, !dbg !13745
  %7 = bitcast i8* %call4 to %struct.skb_shared_info*, !dbg !13745
  %nr_frags = getelementptr inbounds %struct.skb_shared_info, %struct.skb_shared_info* %7, i32 0, i32 2, !dbg !13745
  %8 = load i8, i8* %nr_frags, align 2, !dbg !13745
  %conv = zext i8 %8 to i32, !dbg !13745
  %add = add i32 %conv, 1, !dbg !13745
  %cmp = icmp slt i32 %call3, %add, !dbg !13745
  %lnot = xor i1 %cmp, true, !dbg !13745
  %lnot6 = xor i1 %lnot, true, !dbg !13745
  %lnot.ext = zext i1 %lnot6 to i32, !dbg !13745
  %conv7 = sext i32 %lnot.ext to i64, !dbg !13745
  %tobool8 = icmp ne i64 %conv7, 0, !dbg !13745
  br i1 %tobool8, label %if.then9, label %if.end10, !dbg !13747

if.then9:                                         ; preds = %if.end
  store i32 16, i32* %retval, align 4, !dbg !13748
  br label %return, !dbg !13748

if.end10:                                         ; preds = %if.end
  %9 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !13749
  %tx_ring11 = getelementptr inbounds %struct.skge_port, %struct.skge_port* %9, i32 0, i32 5, !dbg !13750
  %to_use = getelementptr inbounds %struct.skge_ring, %struct.skge_ring* %tx_ring11, i32 0, i32 1, !dbg !13751
  %10 = load %struct.skge_element*, %struct.skge_element** %to_use, align 8, !dbg !13751
  store %struct.skge_element* %10, %struct.skge_element** %e, align 8, !dbg !13752
  %11 = load %struct.skge_element*, %struct.skge_element** %e, align 8, !dbg !13753
  %desc = getelementptr inbounds %struct.skge_element, %struct.skge_element* %11, i32 0, i32 1, !dbg !13754
  %12 = load i8*, i8** %desc, align 8, !dbg !13754
  %13 = bitcast i8* %12 to %struct.skge_tx_desc*, !dbg !13753
  store %struct.skge_tx_desc* %13, %struct.skge_tx_desc** %td, align 8, !dbg !13755
  br label %do.body, !dbg !13756

do.body:                                          ; preds = %if.end10
  %14 = load %struct.skge_tx_desc*, %struct.skge_tx_desc** %td, align 8, !dbg !13757
  %control12 = getelementptr inbounds %struct.skge_tx_desc, %struct.skge_tx_desc* %14, i32 0, i32 0, !dbg !13757
  %15 = load i32, i32* %control12, align 4, !dbg !13757
  %and = and i32 %15, -2147483648, !dbg !13757
  %tobool13 = icmp ne i32 %and, 0, !dbg !13757
  %lnot14 = xor i1 %tobool13, true, !dbg !13757
  %lnot16 = xor i1 %lnot14, true, !dbg !13757
  %lnot.ext17 = zext i1 %lnot16 to i32, !dbg !13757
  %conv18 = sext i32 %lnot.ext17 to i64, !dbg !13757
  %tobool19 = icmp ne i64 %conv18, 0, !dbg !13757
  br i1 %tobool19, label %if.then20, label %if.end28, !dbg !13760

if.then20:                                        ; preds = %do.body
  br label %do.body21, !dbg !13757

do.body21:                                        ; preds = %if.then20
  br label %do.body22, !dbg !13761

do.body22:                                        ; preds = %do.body21
  br label %do.end, !dbg !13763

do.end:                                           ; preds = %do.body22
  br label %do.body23, !dbg !13761

do.body23:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.45, i64 0, i64 0), i32 2752, i32 0, i64 12) #10, !dbg !13765, !srcloc !13767
  br label %do.end24, !dbg !13765

do.end24:                                         ; preds = %do.body23
  br label %do.body25, !dbg !13761

do.body25:                                        ; preds = %do.end24
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 341) #10, !dbg !13768, !srcloc !13771
  unreachable, !dbg !13772

do.end26:                                         ; No predecessors!
  br label %do.end27, !dbg !13761

do.end27:                                         ; preds = %do.end26
  br label %if.end28, !dbg !13761

if.end28:                                         ; preds = %do.end27, %do.body
  br label %do.end29, !dbg !13760

do.end29:                                         ; preds = %if.end28
  %16 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !13773
  %17 = load %struct.skge_element*, %struct.skge_element** %e, align 8, !dbg !13774
  %skb30 = getelementptr inbounds %struct.skge_element, %struct.skge_element* %17, i32 0, i32 2, !dbg !13775
  store %struct.sk_buff* %16, %struct.sk_buff** %skb30, align 8, !dbg !13776
  %18 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !13777
  %call31 = call i32 @skb_headlen(%struct.sk_buff* %18) #14, !dbg !13778
  store i32 %call31, i32* %len, align 4, !dbg !13779
  %19 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !13780
  %pdev = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %19, i32 0, i32 1, !dbg !13780
  %20 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !13780
  %dev32 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %20, i32 0, i32 41, !dbg !13780
  %21 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !13780
  %data = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %21, i32 0, i32 37, !dbg !13780
  %22 = load i8*, i8** %data, align 8, !dbg !13780
  %23 = load i32, i32* %len, align 4, !dbg !13780
  %conv33 = zext i32 %23 to i64, !dbg !13780
  %call34 = call i64 @dma_map_single_attrs(%struct.device* %dev32, i8* %22, i64 %conv33, i32 1, i64 0) #14, !dbg !13780
  store i64 %call34, i64* %map, align 8, !dbg !13781
  %24 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !13782
  %pdev35 = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %24, i32 0, i32 1, !dbg !13784
  %25 = load %struct.pci_dev*, %struct.pci_dev** %pdev35, align 8, !dbg !13784
  %dev36 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %25, i32 0, i32 41, !dbg !13785
  %26 = load i64, i64* %map, align 8, !dbg !13786
  %call37 = call i32 @dma_mapping_error(%struct.device* %dev36, i64 %26) #14, !dbg !13787
  %tobool38 = icmp ne i32 %call37, 0, !dbg !13787
  br i1 %tobool38, label %if.then39, label %if.end40, !dbg !13788

if.then39:                                        ; preds = %do.end29
  br label %mapping_error, !dbg !13789

if.end40:                                         ; preds = %do.end29
  %27 = load i64, i64* %map, align 8, !dbg !13790
  %28 = load %struct.skge_element*, %struct.skge_element** %e, align 8, !dbg !13790
  %mapaddr = getelementptr inbounds %struct.skge_element, %struct.skge_element* %28, i32 0, i32 3, !dbg !13790
  store i64 %27, i64* %mapaddr, align 8, !dbg !13790
  %29 = load i32, i32* %len, align 4, !dbg !13791
  %30 = load %struct.skge_element*, %struct.skge_element** %e, align 8, !dbg !13791
  %maplen = getelementptr inbounds %struct.skge_element, %struct.skge_element* %30, i32 0, i32 4, !dbg !13791
  store i32 %29, i32* %maplen, align 8, !dbg !13791
  %31 = load i64, i64* %map, align 8, !dbg !13792
  %and41 = and i64 %31, 4294967295, !dbg !13792
  %conv42 = trunc i64 %and41 to i32, !dbg !13792
  %32 = load %struct.skge_tx_desc*, %struct.skge_tx_desc** %td, align 8, !dbg !13793
  %dma_lo = getelementptr inbounds %struct.skge_tx_desc, %struct.skge_tx_desc* %32, i32 0, i32 2, !dbg !13794
  store i32 %conv42, i32* %dma_lo, align 4, !dbg !13795
  %33 = load i64, i64* %map, align 8, !dbg !13796
  %shr = lshr i64 %33, 16, !dbg !13796
  %shr43 = lshr i64 %shr, 16, !dbg !13796
  %conv44 = trunc i64 %shr43 to i32, !dbg !13796
  %34 = load %struct.skge_tx_desc*, %struct.skge_tx_desc** %td, align 8, !dbg !13797
  %dma_hi = getelementptr inbounds %struct.skge_tx_desc, %struct.skge_tx_desc* %34, i32 0, i32 3, !dbg !13798
  store i32 %conv44, i32* %dma_hi, align 4, !dbg !13799
  %35 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !13800
  %ip_summed = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %35, i32 0, i32 14, !dbg !13802
  %bf.load = load i16, i16* %ip_summed, align 8, !dbg !13802
  %bf.lshr = lshr i16 %bf.load, 5, !dbg !13802
  %bf.clear = and i16 %bf.lshr, 3, !dbg !13802
  %bf.cast = trunc i16 %bf.clear to i8, !dbg !13802
  %conv45 = zext i8 %bf.cast to i32, !dbg !13800
  %cmp46 = icmp eq i32 %conv45, 3, !dbg !13803
  br i1 %cmp46, label %if.then48, label %if.else67, !dbg !13804

if.then48:                                        ; preds = %if.end40
  call void @llvm.dbg.declare(metadata i32* %offset, metadata !13805, metadata !DIExpression()), !dbg !13807
  %36 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !13808
  %call49 = call i32 @skb_checksum_start_offset(%struct.sk_buff* %36) #14, !dbg !13809
  store i32 %call49, i32* %offset, align 4, !dbg !13807
  %37 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !13810
  %call50 = call %struct.iphdr* @ipip_hdr(%struct.sk_buff* %37) #14, !dbg !13812
  %protocol = getelementptr inbounds %struct.iphdr, %struct.iphdr* %call50, i32 0, i32 6, !dbg !13813
  %38 = load i8, i8* %protocol, align 1, !dbg !13813
  %conv51 = zext i8 %38 to i32, !dbg !13812
  %cmp52 = icmp eq i32 %conv51, 17, !dbg !13814
  br i1 %cmp52, label %land.lhs.true, label %if.else, !dbg !13815

land.lhs.true:                                    ; preds = %if.then48
  %39 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !13816
  %chip_rev = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %39, i32 0, i32 6, !dbg !13817
  %40 = load i8, i8* %chip_rev, align 1, !dbg !13817
  %conv54 = zext i8 %40 to i32, !dbg !13816
  %cmp55 = icmp eq i32 %conv54, 0, !dbg !13818
  br i1 %cmp55, label %land.lhs.true57, label %if.else, !dbg !13819

land.lhs.true57:                                  ; preds = %land.lhs.true
  %41 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !13820
  %chip_id = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %41, i32 0, i32 5, !dbg !13821
  %42 = load i8, i8* %chip_id, align 8, !dbg !13821
  %conv58 = zext i8 %42 to i32, !dbg !13820
  %cmp59 = icmp eq i32 %conv58, 176, !dbg !13822
  br i1 %cmp59, label %if.then61, label %if.else, !dbg !13823

if.then61:                                        ; preds = %land.lhs.true57
  store i32 5636096, i32* %control, align 4, !dbg !13824
  br label %if.end62, !dbg !13825

if.else:                                          ; preds = %land.lhs.true57, %land.lhs.true, %if.then48
  store i32 5701632, i32* %control, align 4, !dbg !13826
  br label %if.end62

if.end62:                                         ; preds = %if.else, %if.then61
  %43 = load %struct.skge_tx_desc*, %struct.skge_tx_desc** %td, align 8, !dbg !13827
  %csum_offs = getelementptr inbounds %struct.skge_tx_desc, %struct.skge_tx_desc* %43, i32 0, i32 5, !dbg !13828
  store i32 0, i32* %csum_offs, align 4, !dbg !13829
  %44 = load i32, i32* %offset, align 4, !dbg !13830
  %conv63 = trunc i32 %44 to i16, !dbg !13830
  %45 = load %struct.skge_tx_desc*, %struct.skge_tx_desc** %td, align 8, !dbg !13831
  %csum_start = getelementptr inbounds %struct.skge_tx_desc, %struct.skge_tx_desc* %45, i32 0, i32 7, !dbg !13832
  store i16 %conv63, i16* %csum_start, align 2, !dbg !13833
  %46 = load i32, i32* %offset, align 4, !dbg !13834
  %47 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !13835
  %48 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %47, i32 0, i32 17, !dbg !13836
  %49 = bitcast %union.anon.47* %48 to %struct.anon.48*, !dbg !13836
  %csum_offset = getelementptr inbounds %struct.anon.48, %struct.anon.48* %49, i32 0, i32 1, !dbg !13836
  %50 = load i16, i16* %csum_offset, align 2, !dbg !13836
  %conv64 = zext i16 %50 to i32, !dbg !13835
  %add65 = add i32 %46, %conv64, !dbg !13837
  %conv66 = trunc i32 %add65 to i16, !dbg !13834
  %51 = load %struct.skge_tx_desc*, %struct.skge_tx_desc** %td, align 8, !dbg !13838
  %csum_write = getelementptr inbounds %struct.skge_tx_desc, %struct.skge_tx_desc* %51, i32 0, i32 6, !dbg !13839
  store i16 %conv66, i16* %csum_write, align 4, !dbg !13840
  br label %if.end68, !dbg !13841

if.else67:                                        ; preds = %if.end40
  store i32 5570560, i32* %control, align 4, !dbg !13842
  br label %if.end68

if.end68:                                         ; preds = %if.else67, %if.end62
  %52 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !13843
  %call69 = call i8* @skb_end_pointer(%struct.sk_buff* %52) #14, !dbg !13843
  %53 = bitcast i8* %call69 to %struct.skb_shared_info*, !dbg !13845
  %nr_frags70 = getelementptr inbounds %struct.skb_shared_info, %struct.skb_shared_info* %53, i32 0, i32 2, !dbg !13845
  %54 = load i8, i8* %nr_frags70, align 2, !dbg !13845
  %tobool71 = icmp ne i8 %54, 0, !dbg !13843
  br i1 %tobool71, label %if.else73, label %if.then72, !dbg !13846

if.then72:                                        ; preds = %if.end68
  %55 = load i32, i32* %control, align 4, !dbg !13847
  %or = or i32 %55, 671088640, !dbg !13847
  store i32 %or, i32* %control, align 4, !dbg !13847
  br label %if.end131, !dbg !13848

if.else73:                                        ; preds = %if.end68
  call void @llvm.dbg.declare(metadata %struct.skge_tx_desc** %tf, metadata !13849, metadata !DIExpression()), !dbg !13851
  %56 = load %struct.skge_tx_desc*, %struct.skge_tx_desc** %td, align 8, !dbg !13852
  store %struct.skge_tx_desc* %56, %struct.skge_tx_desc** %tf, align 8, !dbg !13851
  %57 = load i32, i32* %control, align 4, !dbg !13853
  %or74 = or i32 %57, 67108864, !dbg !13853
  store i32 %or74, i32* %control, align 4, !dbg !13853
  store i32 0, i32* %i, align 4, !dbg !13854
  br label %for.cond, !dbg !13856

for.cond:                                         ; preds = %for.inc, %if.else73
  %58 = load i32, i32* %i, align 4, !dbg !13857
  %59 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !13859
  %call75 = call i8* @skb_end_pointer(%struct.sk_buff* %59) #14, !dbg !13859
  %60 = bitcast i8* %call75 to %struct.skb_shared_info*, !dbg !13860
  %nr_frags76 = getelementptr inbounds %struct.skb_shared_info, %struct.skb_shared_info* %60, i32 0, i32 2, !dbg !13860
  %61 = load i8, i8* %nr_frags76, align 2, !dbg !13860
  %conv77 = zext i8 %61 to i32, !dbg !13859
  %cmp78 = icmp slt i32 %58, %conv77, !dbg !13861
  br i1 %cmp78, label %for.body, label %for.end, !dbg !13862

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.bio_vec** %frag, metadata !13863, metadata !DIExpression()), !dbg !13867
  %62 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !13868
  %call80 = call i8* @skb_end_pointer(%struct.sk_buff* %62) #14, !dbg !13868
  %63 = bitcast i8* %call80 to %struct.skb_shared_info*, !dbg !13869
  %frags = getelementptr inbounds %struct.skb_shared_info, %struct.skb_shared_info* %63, i32 0, i32 12, !dbg !13869
  %64 = load i32, i32* %i, align 4, !dbg !13870
  %idxprom = sext i32 %64 to i64, !dbg !13868
  %arrayidx = getelementptr [17 x %struct.bio_vec], [17 x %struct.bio_vec]* %frags, i64 0, i64 %idxprom, !dbg !13868
  store %struct.bio_vec* %arrayidx, %struct.bio_vec** %frag, align 8, !dbg !13867
  %65 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !13871
  %pdev81 = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %65, i32 0, i32 1, !dbg !13872
  %66 = load %struct.pci_dev*, %struct.pci_dev** %pdev81, align 8, !dbg !13872
  %dev82 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %66, i32 0, i32 41, !dbg !13873
  %67 = load %struct.bio_vec*, %struct.bio_vec** %frag, align 8, !dbg !13874
  %68 = load %struct.bio_vec*, %struct.bio_vec** %frag, align 8, !dbg !13875
  %call83 = call i32 @skb_frag_size(%struct.bio_vec* %68) #14, !dbg !13876
  %conv84 = zext i32 %call83 to i64, !dbg !13876
  %call85 = call i64 @skb_frag_dma_map(%struct.device* %dev82, %struct.bio_vec* %67, i64 0, i64 %conv84, i32 1) #14, !dbg !13877
  store i64 %call85, i64* %map, align 8, !dbg !13878
  %69 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !13879
  %pdev86 = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %69, i32 0, i32 1, !dbg !13881
  %70 = load %struct.pci_dev*, %struct.pci_dev** %pdev86, align 8, !dbg !13881
  %dev87 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %70, i32 0, i32 41, !dbg !13882
  %71 = load i64, i64* %map, align 8, !dbg !13883
  %call88 = call i32 @dma_mapping_error(%struct.device* %dev87, i64 %71) #14, !dbg !13884
  %tobool89 = icmp ne i32 %call88, 0, !dbg !13884
  br i1 %tobool89, label %if.then90, label %if.end91, !dbg !13885

if.then90:                                        ; preds = %for.body
  br label %mapping_unwind, !dbg !13886

if.end91:                                         ; preds = %for.body
  %72 = load %struct.skge_element*, %struct.skge_element** %e, align 8, !dbg !13887
  %next = getelementptr inbounds %struct.skge_element, %struct.skge_element* %72, i32 0, i32 0, !dbg !13888
  %73 = load %struct.skge_element*, %struct.skge_element** %next, align 8, !dbg !13888
  store %struct.skge_element* %73, %struct.skge_element** %e, align 8, !dbg !13889
  %74 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !13890
  %75 = load %struct.skge_element*, %struct.skge_element** %e, align 8, !dbg !13891
  %skb92 = getelementptr inbounds %struct.skge_element, %struct.skge_element* %75, i32 0, i32 2, !dbg !13892
  store %struct.sk_buff* %74, %struct.sk_buff** %skb92, align 8, !dbg !13893
  %76 = load %struct.skge_element*, %struct.skge_element** %e, align 8, !dbg !13894
  %desc93 = getelementptr inbounds %struct.skge_element, %struct.skge_element* %76, i32 0, i32 1, !dbg !13895
  %77 = load i8*, i8** %desc93, align 8, !dbg !13895
  %78 = bitcast i8* %77 to %struct.skge_tx_desc*, !dbg !13894
  store %struct.skge_tx_desc* %78, %struct.skge_tx_desc** %tf, align 8, !dbg !13896
  br label %do.body94, !dbg !13897

do.body94:                                        ; preds = %if.end91
  %79 = load %struct.skge_tx_desc*, %struct.skge_tx_desc** %tf, align 8, !dbg !13898
  %control95 = getelementptr inbounds %struct.skge_tx_desc, %struct.skge_tx_desc* %79, i32 0, i32 0, !dbg !13898
  %80 = load i32, i32* %control95, align 4, !dbg !13898
  %and96 = and i32 %80, -2147483648, !dbg !13898
  %tobool97 = icmp ne i32 %and96, 0, !dbg !13898
  %lnot98 = xor i1 %tobool97, true, !dbg !13898
  %lnot100 = xor i1 %lnot98, true, !dbg !13898
  %lnot.ext101 = zext i1 %lnot100 to i32, !dbg !13898
  %conv102 = sext i32 %lnot.ext101 to i64, !dbg !13898
  %tobool103 = icmp ne i64 %conv102, 0, !dbg !13898
  br i1 %tobool103, label %if.then104, label %if.end113, !dbg !13901

if.then104:                                       ; preds = %do.body94
  br label %do.body105, !dbg !13898

do.body105:                                       ; preds = %if.then104
  br label %do.body106, !dbg !13902

do.body106:                                       ; preds = %do.body105
  br label %do.end107, !dbg !13904

do.end107:                                        ; preds = %do.body106
  br label %do.body108, !dbg !13902

do.body108:                                       ; preds = %do.end107
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.45, i64 0, i64 0), i32 2800, i32 0, i64 12) #10, !dbg !13906, !srcloc !13908
  br label %do.end109, !dbg !13906

do.end109:                                        ; preds = %do.body108
  br label %do.body110, !dbg !13902

do.body110:                                       ; preds = %do.end109
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 342) #10, !dbg !13909, !srcloc !13912
  unreachable, !dbg !13913

do.end111:                                        ; No predecessors!
  br label %do.end112, !dbg !13902

do.end112:                                        ; preds = %do.end111
  br label %if.end113, !dbg !13902

if.end113:                                        ; preds = %do.end112, %do.body94
  br label %do.end114, !dbg !13901

do.end114:                                        ; preds = %if.end113
  %81 = load i64, i64* %map, align 8, !dbg !13914
  %and115 = and i64 %81, 4294967295, !dbg !13914
  %conv116 = trunc i64 %and115 to i32, !dbg !13914
  %82 = load %struct.skge_tx_desc*, %struct.skge_tx_desc** %tf, align 8, !dbg !13915
  %dma_lo117 = getelementptr inbounds %struct.skge_tx_desc, %struct.skge_tx_desc* %82, i32 0, i32 2, !dbg !13916
  store i32 %conv116, i32* %dma_lo117, align 4, !dbg !13917
  %83 = load i64, i64* %map, align 8, !dbg !13918
  %shr118 = lshr i64 %83, 16, !dbg !13918
  %shr119 = lshr i64 %shr118, 16, !dbg !13918
  %conv120 = trunc i64 %shr119 to i32, !dbg !13918
  %84 = load %struct.skge_tx_desc*, %struct.skge_tx_desc** %tf, align 8, !dbg !13919
  %dma_hi121 = getelementptr inbounds %struct.skge_tx_desc, %struct.skge_tx_desc* %84, i32 0, i32 3, !dbg !13920
  store i32 %conv120, i32* %dma_hi121, align 4, !dbg !13921
  %85 = load i64, i64* %map, align 8, !dbg !13922
  %86 = load %struct.skge_element*, %struct.skge_element** %e, align 8, !dbg !13922
  %mapaddr122 = getelementptr inbounds %struct.skge_element, %struct.skge_element* %86, i32 0, i32 3, !dbg !13922
  store i64 %85, i64* %mapaddr122, align 8, !dbg !13922
  %87 = load %struct.bio_vec*, %struct.bio_vec** %frag, align 8, !dbg !13923
  %call123 = call i32 @skb_frag_size(%struct.bio_vec* %87) #14, !dbg !13923
  %88 = load %struct.skge_element*, %struct.skge_element** %e, align 8, !dbg !13923
  %maplen124 = getelementptr inbounds %struct.skge_element, %struct.skge_element* %88, i32 0, i32 4, !dbg !13923
  store i32 %call123, i32* %maplen124, align 8, !dbg !13923
  %89 = load i32, i32* %control, align 4, !dbg !13924
  %or125 = or i32 -2130706432, %89, !dbg !13925
  %90 = load %struct.bio_vec*, %struct.bio_vec** %frag, align 8, !dbg !13926
  %call126 = call i32 @skb_frag_size(%struct.bio_vec* %90) #14, !dbg !13927
  %or127 = or i32 %or125, %call126, !dbg !13928
  %91 = load %struct.skge_tx_desc*, %struct.skge_tx_desc** %tf, align 8, !dbg !13929
  %control128 = getelementptr inbounds %struct.skge_tx_desc, %struct.skge_tx_desc* %91, i32 0, i32 0, !dbg !13930
  store i32 %or127, i32* %control128, align 4, !dbg !13931
  br label %for.inc, !dbg !13932

for.inc:                                          ; preds = %do.end114
  %92 = load i32, i32* %i, align 4, !dbg !13933
  %inc = add i32 %92, 1, !dbg !13933
  store i32 %inc, i32* %i, align 4, !dbg !13933
  br label %for.cond, !dbg !13934, !llvm.loop !13935

for.end:                                          ; preds = %for.cond
  %93 = load %struct.skge_tx_desc*, %struct.skge_tx_desc** %tf, align 8, !dbg !13937
  %control129 = getelementptr inbounds %struct.skge_tx_desc, %struct.skge_tx_desc* %93, i32 0, i32 0, !dbg !13938
  %94 = load i32, i32* %control129, align 4, !dbg !13939
  %or130 = or i32 %94, 671088640, !dbg !13939
  store i32 %or130, i32* %control129, align 4, !dbg !13939
  br label %if.end131

if.end131:                                        ; preds = %for.end, %if.then72
  call void asm sideeffect "sfence", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !13940, !srcloc !13941
  %95 = load i32, i32* %control, align 4, !dbg !13942
  %or132 = or i32 -1056964608, %95, !dbg !13943
  %96 = load i32, i32* %len, align 4, !dbg !13944
  %or133 = or i32 %or132, %96, !dbg !13945
  %97 = load %struct.skge_tx_desc*, %struct.skge_tx_desc** %td, align 8, !dbg !13946
  %control134 = getelementptr inbounds %struct.skge_tx_desc, %struct.skge_tx_desc* %97, i32 0, i32 0, !dbg !13947
  store i32 %or133, i32* %control134, align 4, !dbg !13948
  call void asm sideeffect "sfence", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !13949, !srcloc !13950
  %98 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !13951
  %99 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !13952
  %len135 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %99, i32 0, i32 5, !dbg !13953
  %100 = load i32, i32* %len135, align 8, !dbg !13953
  call void @netdev_sent_queue(%struct.net_device* %98, i32 %100) #14, !dbg !13954
  %101 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !13955
  %102 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !13956
  %port = getelementptr inbounds %struct.skge_port, %struct.skge_port* %102, i32 0, i32 3, !dbg !13956
  %103 = load i32, i32* %port, align 8, !dbg !13956
  %idxprom136 = sext i32 %103 to i64, !dbg !13956
  %arrayidx137 = getelementptr [2 x i32], [2 x i32]* @txqaddr, i64 0, i64 %idxprom136, !dbg !13956
  %104 = load i32, i32* %arrayidx137, align 4, !dbg !13956
  %add138 = add i32 1024, %104, !dbg !13956
  %add139 = add i32 %add138, 52, !dbg !13956
  call void @skge_write8(%struct.skge_hw* %101, i32 %add139, i8 zeroext 16) #14, !dbg !13957
  br label %do.body140, !dbg !13958

do.body140:                                       ; preds = %if.end131
  %105 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !13959
  %msg_enable = getelementptr inbounds %struct.skge_port, %struct.skge_port* %105, i32 0, i32 4, !dbg !13959
  %106 = load i32, i32* %msg_enable, align 4, !dbg !13959
  %and141 = and i32 %106, 256, !dbg !13959
  %tobool142 = icmp ne i32 %and141, 0, !dbg !13959
  br i1 %tobool142, label %if.then143, label %if.end146, !dbg !13962

if.then143:                                       ; preds = %do.body140
  %107 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !13959
  %netdev = getelementptr inbounds %struct.skge_port, %struct.skge_port* %107, i32 0, i32 1, !dbg !13959
  %108 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !13959
  %109 = load %struct.skge_element*, %struct.skge_element** %e, align 8, !dbg !13959
  %110 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !13959
  %tx_ring144 = getelementptr inbounds %struct.skge_port, %struct.skge_port* %110, i32 0, i32 5, !dbg !13959
  %start = getelementptr inbounds %struct.skge_ring, %struct.skge_ring* %tx_ring144, i32 0, i32 2, !dbg !13959
  %111 = load %struct.skge_element*, %struct.skge_element** %start, align 8, !dbg !13959
  %sub.ptr.lhs.cast = ptrtoint %struct.skge_element* %109 to i64, !dbg !13959
  %sub.ptr.rhs.cast = ptrtoint %struct.skge_element* %111 to i64, !dbg !13959
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !13959
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 40, !dbg !13959
  %112 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !13959
  %len145 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %112, i32 0, i32 5, !dbg !13959
  %113 = load i32, i32* %len145, align 8, !dbg !13959
  call void (i8*, %struct.net_device*, i8*, ...) @netdev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.14, i64 0, i64 0), %struct.net_device* %108, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.53, i64 0, i64 0), i64 %sub.ptr.div, i32 %113) #15, !dbg !13959
  br label %if.end146, !dbg !13959

if.end146:                                        ; preds = %if.then143, %do.body140
  br label %do.end147, !dbg !13962

do.end147:                                        ; preds = %if.end146
  %114 = load %struct.skge_element*, %struct.skge_element** %e, align 8, !dbg !13963
  %next148 = getelementptr inbounds %struct.skge_element, %struct.skge_element* %114, i32 0, i32 0, !dbg !13964
  %115 = load %struct.skge_element*, %struct.skge_element** %next148, align 8, !dbg !13964
  %116 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !13965
  %tx_ring149 = getelementptr inbounds %struct.skge_port, %struct.skge_port* %116, i32 0, i32 5, !dbg !13966
  %to_use150 = getelementptr inbounds %struct.skge_ring, %struct.skge_ring* %tx_ring149, i32 0, i32 1, !dbg !13967
  store %struct.skge_element* %115, %struct.skge_element** %to_use150, align 8, !dbg !13968
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !13969, !srcloc !13970
  %117 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !13971
  %tx_ring151 = getelementptr inbounds %struct.skge_port, %struct.skge_port* %117, i32 0, i32 5, !dbg !13973
  %call152 = call i32 @skge_avail(%struct.skge_ring* %tx_ring151) #14, !dbg !13974
  %conv153 = sext i32 %call152 to i64, !dbg !13974
  %cmp154 = icmp ule i64 %conv153, 18, !dbg !13975
  br i1 %cmp154, label %if.then156, label %if.end157, !dbg !13976

if.then156:                                       ; preds = %do.end147
  %118 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !13977
  call void @netif_stop_queue(%struct.net_device* %118) #14, !dbg !13979
  br label %if.end157, !dbg !13980

if.end157:                                        ; preds = %if.then156, %do.end147
  store i32 0, i32* %retval, align 4, !dbg !13981
  br label %return, !dbg !13981

mapping_unwind:                                   ; preds = %if.then90
  call void @llvm.dbg.label(metadata !13982), !dbg !13983
  %119 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !13984
  %tx_ring158 = getelementptr inbounds %struct.skge_port, %struct.skge_port* %119, i32 0, i32 5, !dbg !13985
  %to_use159 = getelementptr inbounds %struct.skge_ring, %struct.skge_ring* %tx_ring158, i32 0, i32 1, !dbg !13986
  %120 = load %struct.skge_element*, %struct.skge_element** %to_use159, align 8, !dbg !13986
  store %struct.skge_element* %120, %struct.skge_element** %e, align 8, !dbg !13987
  %121 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !13988
  %pdev160 = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %121, i32 0, i32 1, !dbg !13988
  %122 = load %struct.pci_dev*, %struct.pci_dev** %pdev160, align 8, !dbg !13988
  %dev161 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %122, i32 0, i32 41, !dbg !13988
  %123 = load %struct.skge_element*, %struct.skge_element** %e, align 8, !dbg !13988
  %mapaddr162 = getelementptr inbounds %struct.skge_element, %struct.skge_element* %123, i32 0, i32 3, !dbg !13988
  %124 = load i64, i64* %mapaddr162, align 8, !dbg !13988
  %125 = load %struct.skge_element*, %struct.skge_element** %e, align 8, !dbg !13988
  %maplen163 = getelementptr inbounds %struct.skge_element, %struct.skge_element* %125, i32 0, i32 4, !dbg !13988
  %126 = load i32, i32* %maplen163, align 8, !dbg !13988
  %conv164 = zext i32 %126 to i64, !dbg !13988
  call void @dma_unmap_single_attrs(%struct.device* %dev161, i64 %124, i64 %conv164, i32 1, i64 0) #14, !dbg !13988
  br label %while.cond, !dbg !13989

while.cond:                                       ; preds = %while.body, %mapping_unwind
  %127 = load i32, i32* %i, align 4, !dbg !13990
  %dec = add i32 %127, -1, !dbg !13990
  store i32 %dec, i32* %i, align 4, !dbg !13990
  %cmp165 = icmp sgt i32 %127, 0, !dbg !13991
  br i1 %cmp165, label %while.body, label %while.end, !dbg !13989

while.body:                                       ; preds = %while.cond
  %128 = load %struct.skge_element*, %struct.skge_element** %e, align 8, !dbg !13992
  %next167 = getelementptr inbounds %struct.skge_element, %struct.skge_element* %128, i32 0, i32 0, !dbg !13994
  %129 = load %struct.skge_element*, %struct.skge_element** %next167, align 8, !dbg !13994
  store %struct.skge_element* %129, %struct.skge_element** %e, align 8, !dbg !13995
  %130 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !13996
  %pdev168 = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %130, i32 0, i32 1, !dbg !13996
  %131 = load %struct.pci_dev*, %struct.pci_dev** %pdev168, align 8, !dbg !13996
  %dev169 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %131, i32 0, i32 41, !dbg !13996
  %132 = load %struct.skge_element*, %struct.skge_element** %e, align 8, !dbg !13996
  %mapaddr170 = getelementptr inbounds %struct.skge_element, %struct.skge_element* %132, i32 0, i32 3, !dbg !13996
  %133 = load i64, i64* %mapaddr170, align 8, !dbg !13996
  %134 = load %struct.skge_element*, %struct.skge_element** %e, align 8, !dbg !13996
  %maplen171 = getelementptr inbounds %struct.skge_element, %struct.skge_element* %134, i32 0, i32 4, !dbg !13996
  %135 = load i32, i32* %maplen171, align 8, !dbg !13996
  %conv172 = zext i32 %135 to i64, !dbg !13996
  call void @dma_unmap_page_attrs(%struct.device* %dev169, i64 %133, i64 %conv172, i32 1, i64 0) #14, !dbg !13996
  br label %while.cond, !dbg !13989, !llvm.loop !13997

while.end:                                        ; preds = %while.cond
  br label %mapping_error, !dbg !13989

mapping_error:                                    ; preds = %while.end, %if.then39
  call void @llvm.dbg.label(metadata !13999), !dbg !14000
  %call173 = call i32 @net_ratelimit() #14, !dbg !14001
  %tobool174 = icmp ne i32 %call173, 0, !dbg !14001
  br i1 %tobool174, label %if.then175, label %if.end178, !dbg !14003

if.then175:                                       ; preds = %mapping_error
  %136 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !14004
  %pdev176 = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %136, i32 0, i32 1, !dbg !14004
  %137 = load %struct.pci_dev*, %struct.pci_dev** %pdev176, align 8, !dbg !14004
  %dev177 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %137, i32 0, i32 41, !dbg !14004
  %138 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !14004
  %name = getelementptr inbounds %struct.net_device, %struct.net_device* %138, i32 0, i32 0, !dbg !14004
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %name, i64 0, i64 0, !dbg !14004
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev177, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.54, i64 0, i64 0), i8* %arraydecay) #15, !dbg !14004
  br label %if.end178, !dbg !14004

if.end178:                                        ; preds = %if.then175, %mapping_error
  %139 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !14005
  call void @dev_kfree_skb_any(%struct.sk_buff* %139) #14, !dbg !14006
  store i32 0, i32* %retval, align 4, !dbg !14007
  br label %return, !dbg !14007

return:                                           ; preds = %if.end178, %if.end157, %if.then9, %if.then
  %140 = load i32, i32* %retval, align 4, !dbg !14008
  ret i32 %140, !dbg !14008
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @skge_set_multicast(%struct.net_device* %dev) #2 !dbg !14009 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %skge = alloca %struct.skge_port*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !14010, metadata !DIExpression()), !dbg !14011
  call void @llvm.dbg.declare(metadata %struct.skge_port** %skge, metadata !14012, metadata !DIExpression()), !dbg !14013
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !14014
  %call = call i8* @netdev_priv(%struct.net_device* %0) #14, !dbg !14015
  %1 = bitcast i8* %call to %struct.skge_port*, !dbg !14015
  store %struct.skge_port* %1, %struct.skge_port** %skge, align 8, !dbg !14013
  %2 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !14016
  %hw = getelementptr inbounds %struct.skge_port, %struct.skge_port* %2, i32 0, i32 0, !dbg !14018
  %3 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !14018
  %call1 = call zeroext i1 @is_genesis(%struct.skge_hw* %3) #14, !dbg !14019
  br i1 %call1, label %if.then, label %if.else, !dbg !14020

if.then:                                          ; preds = %entry
  %4 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !14021
  call void @genesis_set_multicast(%struct.net_device* %4) #14, !dbg !14022
  br label %if.end, !dbg !14022

if.else:                                          ; preds = %entry
  %5 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !14023
  call void @yukon_set_multicast(%struct.net_device* %5) #14, !dbg !14024
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !14025
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @skge_set_mac_address(%struct.net_device* %dev, i8* %p) #2 !dbg !14026 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.net_device*, align 8
  %p.addr = alloca i8*, align 8
  %skge = alloca %struct.skge_port*, align 8
  %hw = alloca %struct.skge_hw*, align 8
  %port = alloca i32, align 4
  %addr = alloca %struct.sockaddr*, align 8
  %ctrl = alloca i16, align 2
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !14027, metadata !DIExpression()), !dbg !14028
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !14029, metadata !DIExpression()), !dbg !14030
  call void @llvm.dbg.declare(metadata %struct.skge_port** %skge, metadata !14031, metadata !DIExpression()), !dbg !14032
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !14033
  %call = call i8* @netdev_priv(%struct.net_device* %0) #14, !dbg !14034
  %1 = bitcast i8* %call to %struct.skge_port*, !dbg !14034
  store %struct.skge_port* %1, %struct.skge_port** %skge, align 8, !dbg !14032
  call void @llvm.dbg.declare(metadata %struct.skge_hw** %hw, metadata !14035, metadata !DIExpression()), !dbg !14036
  %2 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !14037
  %hw1 = getelementptr inbounds %struct.skge_port, %struct.skge_port* %2, i32 0, i32 0, !dbg !14038
  %3 = load %struct.skge_hw*, %struct.skge_hw** %hw1, align 8, !dbg !14038
  store %struct.skge_hw* %3, %struct.skge_hw** %hw, align 8, !dbg !14036
  call void @llvm.dbg.declare(metadata i32* %port, metadata !14039, metadata !DIExpression()), !dbg !14040
  %4 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !14041
  %port2 = getelementptr inbounds %struct.skge_port, %struct.skge_port* %4, i32 0, i32 3, !dbg !14042
  %5 = load i32, i32* %port2, align 8, !dbg !14042
  store i32 %5, i32* %port, align 4, !dbg !14040
  call void @llvm.dbg.declare(metadata %struct.sockaddr** %addr, metadata !14043, metadata !DIExpression()), !dbg !14046
  %6 = load i8*, i8** %p.addr, align 8, !dbg !14047
  %7 = bitcast i8* %6 to %struct.sockaddr*, !dbg !14047
  store %struct.sockaddr* %7, %struct.sockaddr** %addr, align 8, !dbg !14046
  call void @llvm.dbg.declare(metadata i16* %ctrl, metadata !14048, metadata !DIExpression()), !dbg !14049
  %8 = load %struct.sockaddr*, %struct.sockaddr** %addr, align 8, !dbg !14050
  %sa_data = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %8, i32 0, i32 1, !dbg !14052
  %arraydecay = getelementptr inbounds [14 x i8], [14 x i8]* %sa_data, i64 0, i64 0, !dbg !14050
  %call3 = call zeroext i1 @is_valid_ether_addr(i8* %arraydecay) #14, !dbg !14053
  br i1 %call3, label %if.end, label %if.then, !dbg !14054

if.then:                                          ; preds = %entry
  store i32 -99, i32* %retval, align 4, !dbg !14055
  br label %return, !dbg !14055

if.end:                                           ; preds = %entry
  %9 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !14056
  %dev_addr = getelementptr inbounds %struct.net_device, %struct.net_device* %9, i32 0, i32 74, !dbg !14057
  %10 = load i8*, i8** %dev_addr, align 8, !dbg !14057
  %11 = load %struct.sockaddr*, %struct.sockaddr** %addr, align 8, !dbg !14058
  %sa_data4 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %11, i32 0, i32 1, !dbg !14059
  %arraydecay5 = getelementptr inbounds [14 x i8], [14 x i8]* %sa_data4, i64 0, i64 0, !dbg !14060
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %10, i8* align 2 %arraydecay5, i64 6, i1 false), !dbg !14060
  %12 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !14061
  %call6 = call zeroext i1 @netif_running(%struct.net_device* %12) #14, !dbg !14063
  br i1 %call6, label %if.else, label %if.then7, !dbg !14064

if.then7:                                         ; preds = %if.end
  %13 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !14065
  %regs = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %13, i32 0, i32 0, !dbg !14067
  %14 = load i8*, i8** %regs, align 8, !dbg !14067
  %add.ptr = getelementptr i8, i8* %14, i64 256, !dbg !14068
  %15 = load i32, i32* %port, align 4, !dbg !14069
  %mul = mul i32 %15, 8, !dbg !14070
  %idx.ext = zext i32 %mul to i64, !dbg !14071
  %add.ptr8 = getelementptr i8, i8* %add.ptr, i64 %idx.ext, !dbg !14071
  %16 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !14072
  %dev_addr9 = getelementptr inbounds %struct.net_device, %struct.net_device* %16, i32 0, i32 74, !dbg !14073
  %17 = load i8*, i8** %dev_addr9, align 8, !dbg !14073
  call void @memcpy_toio(i8* %add.ptr8, i8* %17, i64 6) #14, !dbg !14074
  %18 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !14075
  %regs10 = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %18, i32 0, i32 0, !dbg !14076
  %19 = load i8*, i8** %regs10, align 8, !dbg !14076
  %add.ptr11 = getelementptr i8, i8* %19, i64 264, !dbg !14077
  %20 = load i32, i32* %port, align 4, !dbg !14078
  %mul12 = mul i32 %20, 8, !dbg !14079
  %idx.ext13 = zext i32 %mul12 to i64, !dbg !14080
  %add.ptr14 = getelementptr i8, i8* %add.ptr11, i64 %idx.ext13, !dbg !14080
  %21 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !14081
  %dev_addr15 = getelementptr inbounds %struct.net_device, %struct.net_device* %21, i32 0, i32 74, !dbg !14082
  %22 = load i8*, i8** %dev_addr15, align 8, !dbg !14082
  call void @memcpy_toio(i8* %add.ptr14, i8* %22, i64 6) #14, !dbg !14083
  br label %if.end38, !dbg !14084

if.else:                                          ; preds = %if.end
  %23 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !14085
  %phy_lock = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %23, i32 0, i32 13, !dbg !14087
  call void @spin_lock_bh(%struct.spinlock* %phy_lock) #14, !dbg !14088
  %24 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !14089
  %25 = load i32, i32* %port, align 4, !dbg !14090
  %call16 = call zeroext i16 @gma_read16(%struct.skge_hw* %24, i32 %25, i32 4) #14, !dbg !14091
  store i16 %call16, i16* %ctrl, align 2, !dbg !14092
  %26 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !14093
  %27 = load i32, i32* %port, align 4, !dbg !14094
  %28 = load i16, i16* %ctrl, align 2, !dbg !14095
  %conv = zext i16 %28 to i32, !dbg !14095
  %and = and i32 %conv, -2049, !dbg !14096
  %conv17 = trunc i32 %and to i16, !dbg !14095
  call void @gma_write16(%struct.skge_hw* %26, i32 %27, i32 4, i16 zeroext %conv17) #14, !dbg !14097
  %29 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !14098
  %regs18 = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %29, i32 0, i32 0, !dbg !14099
  %30 = load i8*, i8** %regs18, align 8, !dbg !14099
  %add.ptr19 = getelementptr i8, i8* %30, i64 256, !dbg !14100
  %31 = load i32, i32* %port, align 4, !dbg !14101
  %mul20 = mul i32 %31, 8, !dbg !14102
  %idx.ext21 = zext i32 %mul20 to i64, !dbg !14103
  %add.ptr22 = getelementptr i8, i8* %add.ptr19, i64 %idx.ext21, !dbg !14103
  %32 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !14104
  %dev_addr23 = getelementptr inbounds %struct.net_device, %struct.net_device* %32, i32 0, i32 74, !dbg !14105
  %33 = load i8*, i8** %dev_addr23, align 8, !dbg !14105
  call void @memcpy_toio(i8* %add.ptr22, i8* %33, i64 6) #14, !dbg !14106
  %34 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !14107
  %regs24 = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %34, i32 0, i32 0, !dbg !14108
  %35 = load i8*, i8** %regs24, align 8, !dbg !14108
  %add.ptr25 = getelementptr i8, i8* %35, i64 264, !dbg !14109
  %36 = load i32, i32* %port, align 4, !dbg !14110
  %mul26 = mul i32 %36, 8, !dbg !14111
  %idx.ext27 = zext i32 %mul26 to i64, !dbg !14112
  %add.ptr28 = getelementptr i8, i8* %add.ptr25, i64 %idx.ext27, !dbg !14112
  %37 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !14113
  %dev_addr29 = getelementptr inbounds %struct.net_device, %struct.net_device* %37, i32 0, i32 74, !dbg !14114
  %38 = load i8*, i8** %dev_addr29, align 8, !dbg !14114
  call void @memcpy_toio(i8* %add.ptr28, i8* %38, i64 6) #14, !dbg !14115
  %39 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !14116
  %call30 = call zeroext i1 @is_genesis(%struct.skge_hw* %39) #14, !dbg !14118
  br i1 %call30, label %if.then31, label %if.else33, !dbg !14119

if.then31:                                        ; preds = %if.else
  %40 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !14120
  %41 = load i32, i32* %port, align 4, !dbg !14121
  %42 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !14122
  %dev_addr32 = getelementptr inbounds %struct.net_device, %struct.net_device* %42, i32 0, i32 74, !dbg !14123
  %43 = load i8*, i8** %dev_addr32, align 8, !dbg !14123
  call void @xm_outaddr(%struct.skge_hw* %40, i32 %41, i32 264, i8* %43) #14, !dbg !14124
  br label %if.end36, !dbg !14124

if.else33:                                        ; preds = %if.else
  %44 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !14125
  %45 = load i32, i32* %port, align 4, !dbg !14127
  %46 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !14128
  %dev_addr34 = getelementptr inbounds %struct.net_device, %struct.net_device* %46, i32 0, i32 74, !dbg !14129
  %47 = load i8*, i8** %dev_addr34, align 8, !dbg !14129
  call void @gma_set_addr(%struct.skge_hw* %44, i32 %45, i32 28, i8* %47) #14, !dbg !14130
  %48 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !14131
  %49 = load i32, i32* %port, align 4, !dbg !14132
  %50 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !14133
  %dev_addr35 = getelementptr inbounds %struct.net_device, %struct.net_device* %50, i32 0, i32 74, !dbg !14134
  %51 = load i8*, i8** %dev_addr35, align 8, !dbg !14134
  call void @gma_set_addr(%struct.skge_hw* %48, i32 %49, i32 40, i8* %51) #14, !dbg !14135
  br label %if.end36

if.end36:                                         ; preds = %if.else33, %if.then31
  %52 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !14136
  %53 = load i32, i32* %port, align 4, !dbg !14137
  %54 = load i16, i16* %ctrl, align 2, !dbg !14138
  call void @gma_write16(%struct.skge_hw* %52, i32 %53, i32 4, i16 zeroext %54) #14, !dbg !14139
  %55 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !14140
  %phy_lock37 = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %55, i32 0, i32 13, !dbg !14141
  call void @spin_unlock_bh(%struct.spinlock* %phy_lock37) #14, !dbg !14142
  br label %if.end38

if.end38:                                         ; preds = %if.end36, %if.then7
  store i32 0, i32* %retval, align 4, !dbg !14143
  br label %return, !dbg !14143

return:                                           ; preds = %if.end38, %if.then
  %56 = load i32, i32* %retval, align 4, !dbg !14144
  ret i32 %56, !dbg !14144
}

; Function Attrs: noredzone
declare dso_local i32 @eth_validate_addr(%struct.net_device*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @skge_ioctl(%struct.net_device* %dev, %struct.ifreq* %ifr, i32 %cmd) #2 !dbg !14145 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.net_device*, align 8
  %ifr.addr = alloca %struct.ifreq*, align 8
  %cmd.addr = alloca i32, align 4
  %data = alloca %struct.mii_ioctl_data*, align 8
  %skge = alloca %struct.skge_port*, align 8
  %hw = alloca %struct.skge_hw*, align 8
  %err = alloca i32, align 4
  %val = alloca i16, align 2
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !14146, metadata !DIExpression()), !dbg !14147
  store %struct.ifreq* %ifr, %struct.ifreq** %ifr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ifreq** %ifr.addr, metadata !14148, metadata !DIExpression()), !dbg !14149
  store i32 %cmd, i32* %cmd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cmd.addr, metadata !14150, metadata !DIExpression()), !dbg !14151
  call void @llvm.dbg.declare(metadata %struct.mii_ioctl_data** %data, metadata !14152, metadata !DIExpression()), !dbg !14153
  %0 = load %struct.ifreq*, %struct.ifreq** %ifr.addr, align 8, !dbg !14154
  %call = call %struct.mii_ioctl_data* @if_mii(%struct.ifreq* %0) #14, !dbg !14155
  store %struct.mii_ioctl_data* %call, %struct.mii_ioctl_data** %data, align 8, !dbg !14153
  call void @llvm.dbg.declare(metadata %struct.skge_port** %skge, metadata !14156, metadata !DIExpression()), !dbg !14157
  %1 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !14158
  %call1 = call i8* @netdev_priv(%struct.net_device* %1) #14, !dbg !14159
  %2 = bitcast i8* %call1 to %struct.skge_port*, !dbg !14159
  store %struct.skge_port* %2, %struct.skge_port** %skge, align 8, !dbg !14157
  call void @llvm.dbg.declare(metadata %struct.skge_hw** %hw, metadata !14160, metadata !DIExpression()), !dbg !14161
  %3 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !14162
  %hw2 = getelementptr inbounds %struct.skge_port, %struct.skge_port* %3, i32 0, i32 0, !dbg !14163
  %4 = load %struct.skge_hw*, %struct.skge_hw** %hw2, align 8, !dbg !14163
  store %struct.skge_hw* %4, %struct.skge_hw** %hw, align 8, !dbg !14161
  call void @llvm.dbg.declare(metadata i32* %err, metadata !14164, metadata !DIExpression()), !dbg !14165
  store i32 -95, i32* %err, align 4, !dbg !14165
  %5 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !14166
  %call3 = call zeroext i1 @netif_running(%struct.net_device* %5) #14, !dbg !14168
  br i1 %call3, label %if.end, label %if.then, !dbg !14169

if.then:                                          ; preds = %entry
  store i32 -19, i32* %retval, align 4, !dbg !14170
  br label %return, !dbg !14170

if.end:                                           ; preds = %entry
  %6 = load i32, i32* %cmd.addr, align 4, !dbg !14171
  switch i32 %6, label %sw.epilog [
    i32 35143, label %sw.bb
    i32 35144, label %sw.bb4
    i32 35145, label %sw.bb17
  ], !dbg !14172

sw.bb:                                            ; preds = %if.end
  %7 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !14173
  %phy_addr = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %7, i32 0, i32 12, !dbg !14175
  %8 = load i16, i16* %phy_addr, align 8, !dbg !14175
  %9 = load %struct.mii_ioctl_data*, %struct.mii_ioctl_data** %data, align 8, !dbg !14176
  %phy_id = getelementptr inbounds %struct.mii_ioctl_data, %struct.mii_ioctl_data* %9, i32 0, i32 0, !dbg !14177
  store i16 %8, i16* %phy_id, align 2, !dbg !14178
  br label %sw.bb4, !dbg !14176

sw.bb4:                                           ; preds = %if.end, %sw.bb
  call void @llvm.dbg.declare(metadata i16* %val, metadata !14179, metadata !DIExpression()), !dbg !14181
  store i16 0, i16* %val, align 2, !dbg !14181
  %10 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !14182
  %phy_lock = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %10, i32 0, i32 13, !dbg !14183
  call void @spin_lock_bh(%struct.spinlock* %phy_lock) #14, !dbg !14184
  %11 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !14185
  %call5 = call zeroext i1 @is_genesis(%struct.skge_hw* %11) #14, !dbg !14187
  br i1 %call5, label %if.then6, label %if.else, !dbg !14188

if.then6:                                         ; preds = %sw.bb4
  %12 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !14189
  %13 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !14190
  %port = getelementptr inbounds %struct.skge_port, %struct.skge_port* %13, i32 0, i32 3, !dbg !14191
  %14 = load i32, i32* %port, align 8, !dbg !14191
  %15 = load %struct.mii_ioctl_data*, %struct.mii_ioctl_data** %data, align 8, !dbg !14192
  %reg_num = getelementptr inbounds %struct.mii_ioctl_data, %struct.mii_ioctl_data* %15, i32 0, i32 1, !dbg !14193
  %16 = load i16, i16* %reg_num, align 2, !dbg !14193
  %conv = zext i16 %16 to i32, !dbg !14192
  %and = and i32 %conv, 31, !dbg !14194
  %conv7 = trunc i32 %and to i16, !dbg !14192
  %call8 = call i32 @__xm_phy_read(%struct.skge_hw* %12, i32 %14, i16 zeroext %conv7, i16* %val) #14, !dbg !14195
  store i32 %call8, i32* %err, align 4, !dbg !14196
  br label %if.end15, !dbg !14197

if.else:                                          ; preds = %sw.bb4
  %17 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !14198
  %18 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !14199
  %port9 = getelementptr inbounds %struct.skge_port, %struct.skge_port* %18, i32 0, i32 3, !dbg !14200
  %19 = load i32, i32* %port9, align 8, !dbg !14200
  %20 = load %struct.mii_ioctl_data*, %struct.mii_ioctl_data** %data, align 8, !dbg !14201
  %reg_num10 = getelementptr inbounds %struct.mii_ioctl_data, %struct.mii_ioctl_data* %20, i32 0, i32 1, !dbg !14202
  %21 = load i16, i16* %reg_num10, align 2, !dbg !14202
  %conv11 = zext i16 %21 to i32, !dbg !14201
  %and12 = and i32 %conv11, 31, !dbg !14203
  %conv13 = trunc i32 %and12 to i16, !dbg !14201
  %call14 = call i32 @__gm_phy_read(%struct.skge_hw* %17, i32 %19, i16 zeroext %conv13, i16* %val) #14, !dbg !14204
  store i32 %call14, i32* %err, align 4, !dbg !14205
  br label %if.end15

if.end15:                                         ; preds = %if.else, %if.then6
  %22 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !14206
  %phy_lock16 = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %22, i32 0, i32 13, !dbg !14207
  call void @spin_unlock_bh(%struct.spinlock* %phy_lock16) #14, !dbg !14208
  %23 = load i16, i16* %val, align 2, !dbg !14209
  %24 = load %struct.mii_ioctl_data*, %struct.mii_ioctl_data** %data, align 8, !dbg !14210
  %val_out = getelementptr inbounds %struct.mii_ioctl_data, %struct.mii_ioctl_data* %24, i32 0, i32 3, !dbg !14211
  store i16 %23, i16* %val_out, align 2, !dbg !14212
  br label %sw.epilog, !dbg !14213

sw.bb17:                                          ; preds = %if.end
  %25 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !14214
  %phy_lock18 = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %25, i32 0, i32 13, !dbg !14215
  call void @spin_lock_bh(%struct.spinlock* %phy_lock18) #14, !dbg !14216
  %26 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !14217
  %call19 = call zeroext i1 @is_genesis(%struct.skge_hw* %26) #14, !dbg !14219
  br i1 %call19, label %if.then20, label %if.else27, !dbg !14220

if.then20:                                        ; preds = %sw.bb17
  %27 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !14221
  %28 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !14222
  %port21 = getelementptr inbounds %struct.skge_port, %struct.skge_port* %28, i32 0, i32 3, !dbg !14223
  %29 = load i32, i32* %port21, align 8, !dbg !14223
  %30 = load %struct.mii_ioctl_data*, %struct.mii_ioctl_data** %data, align 8, !dbg !14224
  %reg_num22 = getelementptr inbounds %struct.mii_ioctl_data, %struct.mii_ioctl_data* %30, i32 0, i32 1, !dbg !14225
  %31 = load i16, i16* %reg_num22, align 2, !dbg !14225
  %conv23 = zext i16 %31 to i32, !dbg !14224
  %and24 = and i32 %conv23, 31, !dbg !14226
  %conv25 = trunc i32 %and24 to i16, !dbg !14224
  %32 = load %struct.mii_ioctl_data*, %struct.mii_ioctl_data** %data, align 8, !dbg !14227
  %val_in = getelementptr inbounds %struct.mii_ioctl_data, %struct.mii_ioctl_data* %32, i32 0, i32 2, !dbg !14228
  %33 = load i16, i16* %val_in, align 2, !dbg !14228
  %call26 = call i32 @xm_phy_write(%struct.skge_hw* %27, i32 %29, i16 zeroext %conv25, i16 zeroext %33) #14, !dbg !14229
  store i32 %call26, i32* %err, align 4, !dbg !14230
  br label %if.end35, !dbg !14231

if.else27:                                        ; preds = %sw.bb17
  %34 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !14232
  %35 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !14233
  %port28 = getelementptr inbounds %struct.skge_port, %struct.skge_port* %35, i32 0, i32 3, !dbg !14234
  %36 = load i32, i32* %port28, align 8, !dbg !14234
  %37 = load %struct.mii_ioctl_data*, %struct.mii_ioctl_data** %data, align 8, !dbg !14235
  %reg_num29 = getelementptr inbounds %struct.mii_ioctl_data, %struct.mii_ioctl_data* %37, i32 0, i32 1, !dbg !14236
  %38 = load i16, i16* %reg_num29, align 2, !dbg !14236
  %conv30 = zext i16 %38 to i32, !dbg !14235
  %and31 = and i32 %conv30, 31, !dbg !14237
  %conv32 = trunc i32 %and31 to i16, !dbg !14235
  %39 = load %struct.mii_ioctl_data*, %struct.mii_ioctl_data** %data, align 8, !dbg !14238
  %val_in33 = getelementptr inbounds %struct.mii_ioctl_data, %struct.mii_ioctl_data* %39, i32 0, i32 2, !dbg !14239
  %40 = load i16, i16* %val_in33, align 2, !dbg !14239
  %call34 = call i32 @gm_phy_write(%struct.skge_hw* %34, i32 %36, i16 zeroext %conv32, i16 zeroext %40) #14, !dbg !14240
  store i32 %call34, i32* %err, align 4, !dbg !14241
  br label %if.end35

if.end35:                                         ; preds = %if.else27, %if.then20
  %41 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !14242
  %phy_lock36 = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %41, i32 0, i32 13, !dbg !14243
  call void @spin_unlock_bh(%struct.spinlock* %phy_lock36) #14, !dbg !14244
  br label %sw.epilog, !dbg !14245

sw.epilog:                                        ; preds = %if.end, %if.end35, %if.end15
  %42 = load i32, i32* %err, align 4, !dbg !14246
  store i32 %42, i32* %retval, align 4, !dbg !14247
  br label %return, !dbg !14247

return:                                           ; preds = %sw.epilog, %if.then
  %43 = load i32, i32* %retval, align 4, !dbg !14248
  ret i32 %43, !dbg !14248
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @skge_change_mtu(%struct.net_device* %dev, i32 %new_mtu) #2 !dbg !14249 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.net_device*, align 8
  %new_mtu.addr = alloca i32, align 4
  %err = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !14250, metadata !DIExpression()), !dbg !14251
  store i32 %new_mtu, i32* %new_mtu.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %new_mtu.addr, metadata !14252, metadata !DIExpression()), !dbg !14253
  call void @llvm.dbg.declare(metadata i32* %err, metadata !14254, metadata !DIExpression()), !dbg !14255
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !14256
  %call = call zeroext i1 @netif_running(%struct.net_device* %0) #14, !dbg !14258
  br i1 %call, label %if.end, label %if.then, !dbg !14259

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %new_mtu.addr, align 4, !dbg !14260
  %2 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !14262
  %mtu = getelementptr inbounds %struct.net_device, %struct.net_device* %2, i32 0, i32 44, !dbg !14263
  store i32 %1, i32* %mtu, align 8, !dbg !14264
  store i32 0, i32* %retval, align 4, !dbg !14265
  br label %return, !dbg !14265

if.end:                                           ; preds = %entry
  %3 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !14266
  %call1 = call i32 @skge_down(%struct.net_device* %3) #14, !dbg !14267
  %4 = load i32, i32* %new_mtu.addr, align 4, !dbg !14268
  %5 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !14269
  %mtu2 = getelementptr inbounds %struct.net_device, %struct.net_device* %5, i32 0, i32 44, !dbg !14270
  store i32 %4, i32* %mtu2, align 8, !dbg !14271
  %6 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !14272
  %call3 = call i32 @skge_up(%struct.net_device* %6) #14, !dbg !14273
  store i32 %call3, i32* %err, align 4, !dbg !14274
  %7 = load i32, i32* %err, align 4, !dbg !14275
  %tobool = icmp ne i32 %7, 0, !dbg !14275
  br i1 %tobool, label %if.then4, label %if.end5, !dbg !14277

if.then4:                                         ; preds = %if.end
  %8 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !14278
  call void @dev_close(%struct.net_device* %8) #14, !dbg !14279
  br label %if.end5, !dbg !14279

if.end5:                                          ; preds = %if.then4, %if.end
  %9 = load i32, i32* %err, align 4, !dbg !14280
  store i32 %9, i32* %retval, align 4, !dbg !14281
  br label %return, !dbg !14281

return:                                           ; preds = %if.end5, %if.then
  %10 = load i32, i32* %retval, align 4, !dbg !14282
  ret i32 %10, !dbg !14282
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @skge_tx_timeout(%struct.net_device* %dev, i32 %txqueue) #2 !dbg !14283 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %txqueue.addr = alloca i32, align 4
  %skge = alloca %struct.skge_port*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !14284, metadata !DIExpression()), !dbg !14285
  store i32 %txqueue, i32* %txqueue.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %txqueue.addr, metadata !14286, metadata !DIExpression()), !dbg !14287
  call void @llvm.dbg.declare(metadata %struct.skge_port** %skge, metadata !14288, metadata !DIExpression()), !dbg !14289
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !14290
  %call = call i8* @netdev_priv(%struct.net_device* %0) #14, !dbg !14291
  %1 = bitcast i8* %call to %struct.skge_port*, !dbg !14291
  store %struct.skge_port* %1, %struct.skge_port** %skge, align 8, !dbg !14289
  br label %do.body, !dbg !14292

do.body:                                          ; preds = %entry
  %2 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !14293
  %msg_enable = getelementptr inbounds %struct.skge_port, %struct.skge_port* %2, i32 0, i32 4, !dbg !14293
  %3 = load i32, i32* %msg_enable, align 4, !dbg !14293
  %and = and i32 %3, 8, !dbg !14293
  %tobool = icmp ne i32 %and, 0, !dbg !14293
  br i1 %tobool, label %if.then, label %if.end, !dbg !14296

if.then:                                          ; preds = %do.body
  %4 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !14293
  %netdev = getelementptr inbounds %struct.skge_port, %struct.skge_port* %4, i32 0, i32 1, !dbg !14293
  %5 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !14293
  call void (i8*, %struct.net_device*, i8*, ...) @netdev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.14, i64 0, i64 0), %struct.net_device* %5, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.56, i64 0, i64 0)) #15, !dbg !14293
  br label %if.end, !dbg !14293

if.end:                                           ; preds = %if.then, %do.body
  br label %do.end, !dbg !14296

do.end:                                           ; preds = %if.end
  %6 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !14297
  %hw = getelementptr inbounds %struct.skge_port, %struct.skge_port* %6, i32 0, i32 0, !dbg !14298
  %7 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !14298
  %8 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !14299
  %port = getelementptr inbounds %struct.skge_port, %struct.skge_port* %8, i32 0, i32 3, !dbg !14299
  %9 = load i32, i32* %port, align 8, !dbg !14299
  %idxprom = sext i32 %9 to i64, !dbg !14299
  %arrayidx = getelementptr [2 x i32], [2 x i32]* @txqaddr, i64 0, i64 %idxprom, !dbg !14299
  %10 = load i32, i32* %arrayidx, align 4, !dbg !14299
  %add = add i32 1024, %10, !dbg !14299
  %add1 = add i32 %add, 52, !dbg !14299
  call void @skge_write8(%struct.skge_hw* %7, i32 %add1, i8 zeroext 32) #14, !dbg !14300
  %11 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !14301
  call void @skge_tx_clean(%struct.net_device* %11) #14, !dbg !14302
  %12 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !14303
  call void @netif_wake_queue(%struct.net_device* %12) #14, !dbg !14304
  ret void, !dbg !14305
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.net_device_stats* @skge_get_stats(%struct.net_device* %dev) #2 !dbg !14306 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %skge = alloca %struct.skge_port*, align 8
  %data = alloca [21 x i64], align 16
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !14307, metadata !DIExpression()), !dbg !14308
  call void @llvm.dbg.declare(metadata %struct.skge_port** %skge, metadata !14309, metadata !DIExpression()), !dbg !14310
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !14311
  %call = call i8* @netdev_priv(%struct.net_device* %0) #14, !dbg !14312
  %1 = bitcast i8* %call to %struct.skge_port*, !dbg !14312
  store %struct.skge_port* %1, %struct.skge_port** %skge, align 8, !dbg !14310
  call void @llvm.dbg.declare(metadata [21 x i64]* %data, metadata !14313, metadata !DIExpression()), !dbg !14315
  %2 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !14316
  %hw = getelementptr inbounds %struct.skge_port, %struct.skge_port* %2, i32 0, i32 0, !dbg !14318
  %3 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !14318
  %call1 = call zeroext i1 @is_genesis(%struct.skge_hw* %3) #14, !dbg !14319
  br i1 %call1, label %if.then, label %if.else, !dbg !14320

if.then:                                          ; preds = %entry
  %4 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !14321
  %arraydecay = getelementptr inbounds [21 x i64], [21 x i64]* %data, i64 0, i64 0, !dbg !14322
  call void @genesis_get_stats(%struct.skge_port* %4, i64* %arraydecay) #14, !dbg !14323
  br label %if.end, !dbg !14323

if.else:                                          ; preds = %entry
  %5 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !14324
  %arraydecay2 = getelementptr inbounds [21 x i64], [21 x i64]* %data, i64 0, i64 0, !dbg !14325
  call void @yukon_get_stats(%struct.skge_port* %5, i64* %arraydecay2) #14, !dbg !14326
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %arrayidx = getelementptr [21 x i64], [21 x i64]* %data, i64 0, i64 0, !dbg !14327
  %6 = load i64, i64* %arrayidx, align 16, !dbg !14327
  %7 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !14328
  %stats = getelementptr inbounds %struct.net_device, %struct.net_device* %7, i32 0, i32 24, !dbg !14329
  %tx_bytes = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %stats, i32 0, i32 3, !dbg !14330
  store i64 %6, i64* %tx_bytes, align 8, !dbg !14331
  %arrayidx3 = getelementptr [21 x i64], [21 x i64]* %data, i64 0, i64 1, !dbg !14332
  %8 = load i64, i64* %arrayidx3, align 8, !dbg !14332
  %9 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !14333
  %stats4 = getelementptr inbounds %struct.net_device, %struct.net_device* %9, i32 0, i32 24, !dbg !14334
  %rx_bytes = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %stats4, i32 0, i32 2, !dbg !14335
  store i64 %8, i64* %rx_bytes, align 8, !dbg !14336
  %arrayidx5 = getelementptr [21 x i64], [21 x i64]* %data, i64 0, i64 2, !dbg !14337
  %10 = load i64, i64* %arrayidx5, align 16, !dbg !14337
  %arrayidx6 = getelementptr [21 x i64], [21 x i64]* %data, i64 0, i64 4, !dbg !14338
  %11 = load i64, i64* %arrayidx6, align 16, !dbg !14338
  %add = add i64 %10, %11, !dbg !14339
  %arrayidx7 = getelementptr [21 x i64], [21 x i64]* %data, i64 0, i64 6, !dbg !14340
  %12 = load i64, i64* %arrayidx7, align 16, !dbg !14340
  %add8 = add i64 %add, %12, !dbg !14341
  %13 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !14342
  %stats9 = getelementptr inbounds %struct.net_device, %struct.net_device* %13, i32 0, i32 24, !dbg !14343
  %tx_packets = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %stats9, i32 0, i32 1, !dbg !14344
  store i64 %add8, i64* %tx_packets, align 8, !dbg !14345
  %arrayidx10 = getelementptr [21 x i64], [21 x i64]* %data, i64 0, i64 3, !dbg !14346
  %14 = load i64, i64* %arrayidx10, align 8, !dbg !14346
  %arrayidx11 = getelementptr [21 x i64], [21 x i64]* %data, i64 0, i64 5, !dbg !14347
  %15 = load i64, i64* %arrayidx11, align 8, !dbg !14347
  %add12 = add i64 %14, %15, !dbg !14348
  %arrayidx13 = getelementptr [21 x i64], [21 x i64]* %data, i64 0, i64 7, !dbg !14349
  %16 = load i64, i64* %arrayidx13, align 8, !dbg !14349
  %add14 = add i64 %add12, %16, !dbg !14350
  %17 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !14351
  %stats15 = getelementptr inbounds %struct.net_device, %struct.net_device* %17, i32 0, i32 24, !dbg !14352
  %rx_packets = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %stats15, i32 0, i32 0, !dbg !14353
  store i64 %add14, i64* %rx_packets, align 8, !dbg !14354
  %arrayidx16 = getelementptr [21 x i64], [21 x i64]* %data, i64 0, i64 3, !dbg !14355
  %18 = load i64, i64* %arrayidx16, align 8, !dbg !14355
  %arrayidx17 = getelementptr [21 x i64], [21 x i64]* %data, i64 0, i64 5, !dbg !14356
  %19 = load i64, i64* %arrayidx17, align 8, !dbg !14356
  %add18 = add i64 %18, %19, !dbg !14357
  %20 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !14358
  %stats19 = getelementptr inbounds %struct.net_device, %struct.net_device* %20, i32 0, i32 24, !dbg !14359
  %multicast = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %stats19, i32 0, i32 8, !dbg !14360
  store i64 %add18, i64* %multicast, align 8, !dbg !14361
  %arrayidx20 = getelementptr [21 x i64], [21 x i64]* %data, i64 0, i64 10, !dbg !14362
  %21 = load i64, i64* %arrayidx20, align 16, !dbg !14362
  %22 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !14363
  %stats21 = getelementptr inbounds %struct.net_device, %struct.net_device* %22, i32 0, i32 24, !dbg !14364
  %collisions = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %stats21, i32 0, i32 9, !dbg !14365
  store i64 %21, i64* %collisions, align 8, !dbg !14366
  %arrayidx22 = getelementptr [21 x i64], [21 x i64]* %data, i64 0, i64 12, !dbg !14367
  %23 = load i64, i64* %arrayidx22, align 16, !dbg !14367
  %24 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !14368
  %stats23 = getelementptr inbounds %struct.net_device, %struct.net_device* %24, i32 0, i32 24, !dbg !14369
  %tx_aborted_errors = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %stats23, i32 0, i32 16, !dbg !14370
  store i64 %23, i64* %tx_aborted_errors, align 8, !dbg !14371
  %25 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !14372
  %stats24 = getelementptr inbounds %struct.net_device, %struct.net_device* %25, i32 0, i32 24, !dbg !14373
  ret %struct.net_device_stats* %stats24, !dbg !14374
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @dma_alloc_coherent(%struct.device* %dev, i64 %size, i64* %dma_handle, i32 %gfp) #2 !dbg !14375 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %size.addr = alloca i64, align 8
  %dma_handle.addr = alloca i64*, align 8
  %gfp.addr = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !14379, metadata !DIExpression()), !dbg !14380
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !14381, metadata !DIExpression()), !dbg !14382
  store i64* %dma_handle, i64** %dma_handle.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %dma_handle.addr, metadata !14383, metadata !DIExpression()), !dbg !14384
  store i32 %gfp, i32* %gfp.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %gfp.addr, metadata !14385, metadata !DIExpression()), !dbg !14386
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !14387
  %1 = load i64, i64* %size.addr, align 8, !dbg !14388
  %2 = load i64*, i64** %dma_handle.addr, align 8, !dbg !14389
  %3 = load i32, i32* %gfp.addr, align 4, !dbg !14390
  %4 = load i32, i32* %gfp.addr, align 4, !dbg !14391
  %and = and i32 %4, 8192, !dbg !14392
  %tobool = icmp ne i32 %and, 0, !dbg !14393
  %5 = zext i1 %tobool to i64, !dbg !14393
  %cond = select i1 %tobool, i64 256, i64 0, !dbg !14393
  %call = call i8* @dma_alloc_attrs(%struct.device* %0, i64 %1, i64* %2, i32 %3, i64 %cond) #14, !dbg !14394
  ret i8* %call, !dbg !14395
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @skge_ring_alloc(%struct.skge_ring* %ring, i8* %vaddr, i32 %base) #2 !dbg !14396 {
entry:
  %retval = alloca i32, align 4
  %ring.addr = alloca %struct.skge_ring*, align 8
  %vaddr.addr = alloca i8*, align 8
  %base.addr = alloca i32, align 4
  %d = alloca %struct.skge_tx_desc*, align 8
  %e = alloca %struct.skge_element*, align 8
  %i = alloca i32, align 4
  store %struct.skge_ring* %ring, %struct.skge_ring** %ring.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.skge_ring** %ring.addr, metadata !14399, metadata !DIExpression()), !dbg !14400
  store i8* %vaddr, i8** %vaddr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %vaddr.addr, metadata !14401, metadata !DIExpression()), !dbg !14402
  store i32 %base, i32* %base.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %base.addr, metadata !14403, metadata !DIExpression()), !dbg !14404
  call void @llvm.dbg.declare(metadata %struct.skge_tx_desc** %d, metadata !14405, metadata !DIExpression()), !dbg !14406
  call void @llvm.dbg.declare(metadata %struct.skge_element** %e, metadata !14407, metadata !DIExpression()), !dbg !14408
  call void @llvm.dbg.declare(metadata i32* %i, metadata !14409, metadata !DIExpression()), !dbg !14410
  %0 = load %struct.skge_ring*, %struct.skge_ring** %ring.addr, align 8, !dbg !14411
  %count = getelementptr inbounds %struct.skge_ring, %struct.skge_ring* %0, i32 0, i32 3, !dbg !14412
  %1 = load i64, i64* %count, align 8, !dbg !14412
  %call = call i8* @kcalloc(i64 %1, i64 40, i32 3264) #14, !dbg !14413
  %2 = bitcast i8* %call to %struct.skge_element*, !dbg !14413
  %3 = load %struct.skge_ring*, %struct.skge_ring** %ring.addr, align 8, !dbg !14414
  %start = getelementptr inbounds %struct.skge_ring, %struct.skge_ring* %3, i32 0, i32 2, !dbg !14415
  store %struct.skge_element* %2, %struct.skge_element** %start, align 8, !dbg !14416
  %4 = load %struct.skge_ring*, %struct.skge_ring** %ring.addr, align 8, !dbg !14417
  %start1 = getelementptr inbounds %struct.skge_ring, %struct.skge_ring* %4, i32 0, i32 2, !dbg !14419
  %5 = load %struct.skge_element*, %struct.skge_element** %start1, align 8, !dbg !14419
  %tobool = icmp ne %struct.skge_element* %5, null, !dbg !14417
  br i1 %tobool, label %if.end, label %if.then, !dbg !14420

if.then:                                          ; preds = %entry
  store i32 -12, i32* %retval, align 4, !dbg !14421
  br label %return, !dbg !14421

if.end:                                           ; preds = %entry
  store i32 0, i32* %i, align 4, !dbg !14422
  %6 = load %struct.skge_ring*, %struct.skge_ring** %ring.addr, align 8, !dbg !14424
  %start2 = getelementptr inbounds %struct.skge_ring, %struct.skge_ring* %6, i32 0, i32 2, !dbg !14425
  %7 = load %struct.skge_element*, %struct.skge_element** %start2, align 8, !dbg !14425
  store %struct.skge_element* %7, %struct.skge_element** %e, align 8, !dbg !14426
  %8 = load i8*, i8** %vaddr.addr, align 8, !dbg !14427
  %9 = bitcast i8* %8 to %struct.skge_tx_desc*, !dbg !14427
  store %struct.skge_tx_desc* %9, %struct.skge_tx_desc** %d, align 8, !dbg !14428
  br label %for.cond, !dbg !14429

for.cond:                                         ; preds = %for.inc, %if.end
  %10 = load i32, i32* %i, align 4, !dbg !14430
  %conv = sext i32 %10 to i64, !dbg !14430
  %11 = load %struct.skge_ring*, %struct.skge_ring** %ring.addr, align 8, !dbg !14432
  %count3 = getelementptr inbounds %struct.skge_ring, %struct.skge_ring* %11, i32 0, i32 3, !dbg !14433
  %12 = load i64, i64* %count3, align 8, !dbg !14433
  %cmp = icmp ult i64 %conv, %12, !dbg !14434
  br i1 %cmp, label %for.body, label %for.end, !dbg !14435

for.body:                                         ; preds = %for.cond
  %13 = load %struct.skge_tx_desc*, %struct.skge_tx_desc** %d, align 8, !dbg !14436
  %14 = bitcast %struct.skge_tx_desc* %13 to i8*, !dbg !14436
  %15 = load %struct.skge_element*, %struct.skge_element** %e, align 8, !dbg !14438
  %desc = getelementptr inbounds %struct.skge_element, %struct.skge_element* %15, i32 0, i32 1, !dbg !14439
  store i8* %14, i8** %desc, align 8, !dbg !14440
  %16 = load i32, i32* %i, align 4, !dbg !14441
  %conv5 = sext i32 %16 to i64, !dbg !14441
  %17 = load %struct.skge_ring*, %struct.skge_ring** %ring.addr, align 8, !dbg !14443
  %count6 = getelementptr inbounds %struct.skge_ring, %struct.skge_ring* %17, i32 0, i32 3, !dbg !14444
  %18 = load i64, i64* %count6, align 8, !dbg !14444
  %sub = sub i64 %18, 1, !dbg !14445
  %cmp7 = icmp eq i64 %conv5, %sub, !dbg !14446
  br i1 %cmp7, label %if.then9, label %if.else, !dbg !14447

if.then9:                                         ; preds = %for.body
  %19 = load %struct.skge_ring*, %struct.skge_ring** %ring.addr, align 8, !dbg !14448
  %start10 = getelementptr inbounds %struct.skge_ring, %struct.skge_ring* %19, i32 0, i32 2, !dbg !14450
  %20 = load %struct.skge_element*, %struct.skge_element** %start10, align 8, !dbg !14450
  %21 = load %struct.skge_element*, %struct.skge_element** %e, align 8, !dbg !14451
  %next = getelementptr inbounds %struct.skge_element, %struct.skge_element* %21, i32 0, i32 0, !dbg !14452
  store %struct.skge_element* %20, %struct.skge_element** %next, align 8, !dbg !14453
  %22 = load i32, i32* %base.addr, align 4, !dbg !14454
  %23 = load %struct.skge_tx_desc*, %struct.skge_tx_desc** %d, align 8, !dbg !14455
  %next_offset = getelementptr inbounds %struct.skge_tx_desc, %struct.skge_tx_desc* %23, i32 0, i32 1, !dbg !14456
  store i32 %22, i32* %next_offset, align 4, !dbg !14457
  br label %if.end17, !dbg !14458

if.else:                                          ; preds = %for.body
  %24 = load %struct.skge_element*, %struct.skge_element** %e, align 8, !dbg !14459
  %add.ptr = getelementptr %struct.skge_element, %struct.skge_element* %24, i64 1, !dbg !14461
  %25 = load %struct.skge_element*, %struct.skge_element** %e, align 8, !dbg !14462
  %next11 = getelementptr inbounds %struct.skge_element, %struct.skge_element* %25, i32 0, i32 0, !dbg !14463
  store %struct.skge_element* %add.ptr, %struct.skge_element** %next11, align 8, !dbg !14464
  %26 = load i32, i32* %base.addr, align 4, !dbg !14465
  %conv12 = zext i32 %26 to i64, !dbg !14465
  %27 = load i32, i32* %i, align 4, !dbg !14466
  %add = add i32 %27, 1, !dbg !14467
  %conv13 = sext i32 %add to i64, !dbg !14468
  %mul = mul i64 %conv13, 32, !dbg !14469
  %add14 = add i64 %conv12, %mul, !dbg !14470
  %conv15 = trunc i64 %add14 to i32, !dbg !14465
  %28 = load %struct.skge_tx_desc*, %struct.skge_tx_desc** %d, align 8, !dbg !14471
  %next_offset16 = getelementptr inbounds %struct.skge_tx_desc, %struct.skge_tx_desc* %28, i32 0, i32 1, !dbg !14472
  store i32 %conv15, i32* %next_offset16, align 4, !dbg !14473
  br label %if.end17

if.end17:                                         ; preds = %if.else, %if.then9
  br label %for.inc, !dbg !14474

for.inc:                                          ; preds = %if.end17
  %29 = load i32, i32* %i, align 4, !dbg !14475
  %inc = add i32 %29, 1, !dbg !14475
  store i32 %inc, i32* %i, align 4, !dbg !14475
  %30 = load %struct.skge_element*, %struct.skge_element** %e, align 8, !dbg !14476
  %incdec.ptr = getelementptr %struct.skge_element, %struct.skge_element* %30, i32 1, !dbg !14476
  store %struct.skge_element* %incdec.ptr, %struct.skge_element** %e, align 8, !dbg !14476
  %31 = load %struct.skge_tx_desc*, %struct.skge_tx_desc** %d, align 8, !dbg !14477
  %incdec.ptr18 = getelementptr %struct.skge_tx_desc, %struct.skge_tx_desc* %31, i32 1, !dbg !14477
  store %struct.skge_tx_desc* %incdec.ptr18, %struct.skge_tx_desc** %d, align 8, !dbg !14477
  br label %for.cond, !dbg !14478, !llvm.loop !14479

for.end:                                          ; preds = %for.cond
  %32 = load %struct.skge_ring*, %struct.skge_ring** %ring.addr, align 8, !dbg !14481
  %start19 = getelementptr inbounds %struct.skge_ring, %struct.skge_ring* %32, i32 0, i32 2, !dbg !14482
  %33 = load %struct.skge_element*, %struct.skge_element** %start19, align 8, !dbg !14482
  %34 = load %struct.skge_ring*, %struct.skge_ring** %ring.addr, align 8, !dbg !14483
  %to_clean = getelementptr inbounds %struct.skge_ring, %struct.skge_ring* %34, i32 0, i32 0, !dbg !14484
  store %struct.skge_element* %33, %struct.skge_element** %to_clean, align 8, !dbg !14485
  %35 = load %struct.skge_ring*, %struct.skge_ring** %ring.addr, align 8, !dbg !14486
  %to_use = getelementptr inbounds %struct.skge_ring, %struct.skge_ring* %35, i32 0, i32 1, !dbg !14487
  store %struct.skge_element* %33, %struct.skge_element** %to_use, align 8, !dbg !14488
  store i32 0, i32* %retval, align 4, !dbg !14489
  br label %return, !dbg !14489

return:                                           ; preds = %for.end, %if.then
  %36 = load i32, i32* %retval, align 4, !dbg !14490
  ret i32 %36, !dbg !14490
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @skge_rx_fill(%struct.net_device* %dev) #2 !dbg !14491 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.net_device*, align 8
  %skge = alloca %struct.skge_port*, align 8
  %ring = alloca %struct.skge_ring*, align 8
  %e = alloca %struct.skge_element*, align 8
  %skb = alloca %struct.sk_buff*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !14492, metadata !DIExpression()), !dbg !14493
  call void @llvm.dbg.declare(metadata %struct.skge_port** %skge, metadata !14494, metadata !DIExpression()), !dbg !14495
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !14496
  %call = call i8* @netdev_priv(%struct.net_device* %0) #14, !dbg !14497
  %1 = bitcast i8* %call to %struct.skge_port*, !dbg !14497
  store %struct.skge_port* %1, %struct.skge_port** %skge, align 8, !dbg !14495
  call void @llvm.dbg.declare(metadata %struct.skge_ring** %ring, metadata !14498, metadata !DIExpression()), !dbg !14499
  %2 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !14500
  %rx_ring = getelementptr inbounds %struct.skge_port, %struct.skge_port* %2, i32 0, i32 6, !dbg !14501
  store %struct.skge_ring* %rx_ring, %struct.skge_ring** %ring, align 8, !dbg !14499
  call void @llvm.dbg.declare(metadata %struct.skge_element** %e, metadata !14502, metadata !DIExpression()), !dbg !14503
  %3 = load %struct.skge_ring*, %struct.skge_ring** %ring, align 8, !dbg !14504
  %start = getelementptr inbounds %struct.skge_ring, %struct.skge_ring* %3, i32 0, i32 2, !dbg !14505
  %4 = load %struct.skge_element*, %struct.skge_element** %start, align 8, !dbg !14505
  store %struct.skge_element* %4, %struct.skge_element** %e, align 8, !dbg !14506
  br label %do.body, !dbg !14507

do.body:                                          ; preds = %do.cond, %entry
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb, metadata !14508, metadata !DIExpression()), !dbg !14510
  %5 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !14511
  %6 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !14512
  %rx_buf_size = getelementptr inbounds %struct.skge_port, %struct.skge_port* %6, i32 0, i32 7, !dbg !14513
  %7 = load i32, i32* %rx_buf_size, align 8, !dbg !14513
  %add = add i32 %7, 0, !dbg !14514
  %call1 = call %struct.sk_buff* @__netdev_alloc_skb(%struct.net_device* %5, i32 %add, i32 3264) #14, !dbg !14515
  store %struct.sk_buff* %call1, %struct.sk_buff** %skb, align 8, !dbg !14516
  %8 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !14517
  %tobool = icmp ne %struct.sk_buff* %8, null, !dbg !14517
  br i1 %tobool, label %if.end, label %if.then, !dbg !14519

if.then:                                          ; preds = %do.body
  store i32 -12, i32* %retval, align 4, !dbg !14520
  br label %return, !dbg !14520

if.end:                                           ; preds = %do.body
  %9 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !14521
  call void @skb_reserve(%struct.sk_buff* %9, i32 0) #14, !dbg !14522
  %10 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !14523
  %11 = load %struct.skge_element*, %struct.skge_element** %e, align 8, !dbg !14525
  %12 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !14526
  %13 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !14527
  %rx_buf_size2 = getelementptr inbounds %struct.skge_port, %struct.skge_port* %13, i32 0, i32 7, !dbg !14528
  %14 = load i32, i32* %rx_buf_size2, align 8, !dbg !14528
  %call3 = call i32 @skge_rx_setup(%struct.skge_port* %10, %struct.skge_element* %11, %struct.sk_buff* %12, i32 %14) #14, !dbg !14529
  %cmp = icmp slt i32 %call3, 0, !dbg !14530
  br i1 %cmp, label %if.then4, label %if.end5, !dbg !14531

if.then4:                                         ; preds = %if.end
  %15 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !14532
  call void @consume_skb(%struct.sk_buff* %15) #14, !dbg !14532
  store i32 -5, i32* %retval, align 4, !dbg !14534
  br label %return, !dbg !14534

if.end5:                                          ; preds = %if.end
  br label %do.cond, !dbg !14535

do.cond:                                          ; preds = %if.end5
  %16 = load %struct.skge_element*, %struct.skge_element** %e, align 8, !dbg !14536
  %next = getelementptr inbounds %struct.skge_element, %struct.skge_element* %16, i32 0, i32 0, !dbg !14537
  %17 = load %struct.skge_element*, %struct.skge_element** %next, align 8, !dbg !14537
  store %struct.skge_element* %17, %struct.skge_element** %e, align 8, !dbg !14538
  %18 = load %struct.skge_ring*, %struct.skge_ring** %ring, align 8, !dbg !14539
  %start6 = getelementptr inbounds %struct.skge_ring, %struct.skge_ring* %18, i32 0, i32 2, !dbg !14540
  %19 = load %struct.skge_element*, %struct.skge_element** %start6, align 8, !dbg !14540
  %cmp7 = icmp ne %struct.skge_element* %17, %19, !dbg !14541
  br i1 %cmp7, label %do.body, label %do.end, !dbg !14535, !llvm.loop !14542

do.end:                                           ; preds = %do.cond
  %20 = load %struct.skge_ring*, %struct.skge_ring** %ring, align 8, !dbg !14544
  %start8 = getelementptr inbounds %struct.skge_ring, %struct.skge_ring* %20, i32 0, i32 2, !dbg !14545
  %21 = load %struct.skge_element*, %struct.skge_element** %start8, align 8, !dbg !14545
  %22 = load %struct.skge_ring*, %struct.skge_ring** %ring, align 8, !dbg !14546
  %to_clean = getelementptr inbounds %struct.skge_ring, %struct.skge_ring* %22, i32 0, i32 0, !dbg !14547
  store %struct.skge_element* %21, %struct.skge_element** %to_clean, align 8, !dbg !14548
  store i32 0, i32* %retval, align 4, !dbg !14549
  br label %return, !dbg !14549

return:                                           ; preds = %do.end, %if.then4, %if.then
  %23 = load i32, i32* %retval, align 4, !dbg !14550
  ret i32 %23, !dbg !14550
}

; Function Attrs: cold noredzone
declare dso_local void @netdev_err(%struct.net_device*, i8*, ...) #4

; Function Attrs: alwaysinline noredzone nounwind sspstrong
define internal void @spin_lock_bh(%struct.spinlock* %lock) #11 !dbg !14551 {
entry:
  %val.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr.i.i, metadata !14552, metadata !DIExpression()), !dbg !14555
  %pao_ID__.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %pao_ID__.i.i, metadata !14563, metadata !DIExpression()), !dbg !14565
  %pto_val__.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %pto_val__.i.i, metadata !14566, metadata !DIExpression()), !dbg !14570
  %ip.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %ip.addr.i, metadata !14571, metadata !DIExpression()), !dbg !14572
  %cnt.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %cnt.addr.i, metadata !14573, metadata !DIExpression()), !dbg !14574
  %lock.addr = alloca %struct.spinlock*, align 8
  %tmp = alloca i64, align 8
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr, metadata !14575, metadata !DIExpression()), !dbg !14576
  br label %do.body, !dbg !14577

do.body:                                          ; preds = %entry
  br label %__here, !dbg !14578

__here:                                           ; preds = %indirectgoto, %do.body
  call void @llvm.dbg.label(metadata !14580), !dbg !14578
  store i64 ptrtoint (i8* blockaddress(@spin_lock_bh, %__here) to i64), i64* %tmp, align 8, !dbg !14578
  %0 = load i64, i64* %tmp, align 8, !dbg !14578
  store i64 %0, i64* %ip.addr.i, align 8
  store i32 512, i32* %cnt.addr.i, align 4
  %1 = load i32, i32* %cnt.addr.i, align 4, !dbg !14581
  store i32 %1, i32* %val.addr.i.i, align 4
  %2 = load i32, i32* %val.addr.i.i, align 4, !dbg !14565
  %3 = call i1 @llvm.is.constant.i32(i32 %2) #10, !dbg !14565
  br i1 %3, label %land.lhs.true.i.i, label %cond.false.i.i, !dbg !14565

land.lhs.true.i.i:                                ; preds = %__here
  %4 = load i32, i32* %val.addr.i.i, align 4, !dbg !14565
  %cmp.i.i = icmp eq i32 %4, 1, !dbg !14565
  br i1 %cmp.i.i, label %cond.true.i.i, label %lor.lhs.false.i.i, !dbg !14565

lor.lhs.false.i.i:                                ; preds = %land.lhs.true.i.i
  %5 = load i32, i32* %val.addr.i.i, align 4, !dbg !14565
  %cmp1.i.i = icmp eq i32 %5, -1, !dbg !14565
  br i1 %cmp1.i.i, label %cond.true.i.i, label %cond.false.i.i, !dbg !14565

cond.true.i.i:                                    ; preds = %lor.lhs.false.i.i, %land.lhs.true.i.i
  %6 = load i32, i32* %val.addr.i.i, align 4, !dbg !14565
  br label %__local_bh_disable_ip.exit, !dbg !14565

cond.false.i.i:                                   ; preds = %lor.lhs.false.i.i, %__here
  br label %__local_bh_disable_ip.exit, !dbg !14565

__local_bh_disable_ip.exit:                       ; preds = %cond.true.i.i, %cond.false.i.i
  %cond.i.i = phi i32 [ %6, %cond.true.i.i ], [ 0, %cond.false.i.i ], !dbg !14565
  store i32 %cond.i.i, i32* %pao_ID__.i.i, align 4, !dbg !14565
  %7 = load i32, i32* %val.addr.i.i, align 4, !dbg !14570
  %conv.i.i = sext i32 %7 to i64, !dbg !14570
  %and.i.i = and i64 %conv.i.i, 4294967295, !dbg !14570
  %conv3.i.i = trunc i64 %and.i.i to i32, !dbg !14570
  store i32 %conv3.i.i, i32* %pto_val__.i.i, align 4, !dbg !14570
  %8 = load i32, i32* %pto_val__.i.i, align 4, !dbg !14570
  call void asm "addl $1, $0", "=*m,ri,*m,~{dirflag},~{fpsr},~{flags}"(i32* @__preempt_count, i32 %8, i32* @__preempt_count) #10, !dbg !14570, !srcloc !14582
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !14583, !srcloc !14584
  br label %do.body1, !dbg !14585

do.body1:                                         ; preds = %__local_bh_disable_ip.exit
  %9 = load %struct.spinlock*, %struct.spinlock** %lock.addr, align 8, !dbg !14586
  %10 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %9, i32 0, i32 0, !dbg !14586
  %rlock = bitcast %union.anon.1* %10 to %struct.raw_spinlock*, !dbg !14586
  br label %do.end, !dbg !14586

do.end:                                           ; preds = %do.body1
  br label %do.end2, !dbg !14585

do.end2:                                          ; preds = %do.end
  ret void, !dbg !14588

indirectgoto:                                     ; No predecessors!
  indirectbr i8* undef, [label %__here]
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @genesis_mac_init(%struct.skge_hw* %hw, i32 %port) #2 !dbg !9429 {
entry:
  %hw.addr = alloca %struct.skge_hw*, align 8
  %port.addr = alloca i32, align 4
  %dev = alloca %struct.net_device*, align 8
  %skge = alloca %struct.skge_port*, align 8
  %jumbo = alloca i32, align 4
  %i = alloca i32, align 4
  %r = alloca i32, align 4
  store %struct.skge_hw* %hw, %struct.skge_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.skge_hw** %hw.addr, metadata !14589, metadata !DIExpression()), !dbg !14590
  store i32 %port, i32* %port.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %port.addr, metadata !14591, metadata !DIExpression()), !dbg !14592
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev, metadata !14593, metadata !DIExpression()), !dbg !14594
  %0 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !14595
  %dev1 = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %0, i32 0, i32 4, !dbg !14596
  %1 = load i32, i32* %port.addr, align 4, !dbg !14597
  %idxprom = sext i32 %1 to i64, !dbg !14595
  %arrayidx = getelementptr [2 x %struct.net_device*], [2 x %struct.net_device*]* %dev1, i64 0, i64 %idxprom, !dbg !14595
  %2 = load %struct.net_device*, %struct.net_device** %arrayidx, align 8, !dbg !14595
  store %struct.net_device* %2, %struct.net_device** %dev, align 8, !dbg !14594
  call void @llvm.dbg.declare(metadata %struct.skge_port** %skge, metadata !14598, metadata !DIExpression()), !dbg !14599
  %3 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !14600
  %call = call i8* @netdev_priv(%struct.net_device* %3) #14, !dbg !14601
  %4 = bitcast i8* %call to %struct.skge_port*, !dbg !14601
  store %struct.skge_port* %4, %struct.skge_port** %skge, align 8, !dbg !14599
  call void @llvm.dbg.declare(metadata i32* %jumbo, metadata !14602, metadata !DIExpression()), !dbg !14603
  %5 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !14604
  %dev2 = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %5, i32 0, i32 4, !dbg !14605
  %6 = load i32, i32* %port.addr, align 4, !dbg !14606
  %idxprom3 = sext i32 %6 to i64, !dbg !14604
  %arrayidx4 = getelementptr [2 x %struct.net_device*], [2 x %struct.net_device*]* %dev2, i64 0, i64 %idxprom3, !dbg !14604
  %7 = load %struct.net_device*, %struct.net_device** %arrayidx4, align 8, !dbg !14604
  %mtu = getelementptr inbounds %struct.net_device, %struct.net_device* %7, i32 0, i32 44, !dbg !14607
  %8 = load i32, i32* %mtu, align 8, !dbg !14607
  %cmp = icmp ugt i32 %8, 1500, !dbg !14608
  %conv = zext i1 %cmp to i32, !dbg !14608
  store i32 %conv, i32* %jumbo, align 4, !dbg !14603
  call void @llvm.dbg.declare(metadata i32* %i, metadata !14609, metadata !DIExpression()), !dbg !14610
  call void @llvm.dbg.declare(metadata i32* %r, metadata !14611, metadata !DIExpression()), !dbg !14612
  store i32 0, i32* %i, align 4, !dbg !14613
  br label %for.cond, !dbg !14615

for.cond:                                         ; preds = %for.inc, %entry
  %9 = load i32, i32* %i, align 4, !dbg !14616
  %cmp5 = icmp slt i32 %9, 10, !dbg !14618
  br i1 %cmp5, label %for.body, label %for.end, !dbg !14619

for.body:                                         ; preds = %for.cond
  %10 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !14620
  %11 = load i32, i32* %port.addr, align 4, !dbg !14622
  %shl = shl i32 %11, 7, !dbg !14622
  %add = add i32 %shl, 3352, !dbg !14622
  call void @skge_write16(%struct.skge_hw* %10, i32 %add, i16 zeroext 1) #14, !dbg !14623
  %12 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !14624
  %13 = load i32, i32* %port.addr, align 4, !dbg !14626
  %shl7 = shl i32 %13, 7, !dbg !14626
  %add8 = add i32 %shl7, 3352, !dbg !14626
  %call9 = call zeroext i16 @skge_read16(%struct.skge_hw* %12, i32 %add8) #14, !dbg !14627
  %conv10 = zext i16 %call9 to i32, !dbg !14627
  %and = and i32 %conv10, 1, !dbg !14628
  %tobool = icmp ne i32 %and, 0, !dbg !14628
  br i1 %tobool, label %if.then, label %if.end, !dbg !14629

if.then:                                          ; preds = %for.body
  br label %reset_ok, !dbg !14630

if.end:                                           ; preds = %for.body
  call void @__const_udelay(i64 4295) #14, !dbg !14631
  br label %for.inc, !dbg !14636

for.inc:                                          ; preds = %if.end
  %14 = load i32, i32* %i, align 4, !dbg !14637
  %inc = add i32 %14, 1, !dbg !14637
  store i32 %inc, i32* %i, align 4, !dbg !14637
  br label %for.cond, !dbg !14638, !llvm.loop !14639

for.end:                                          ; preds = %for.cond
  %15 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !14641
  call void (%struct.net_device*, i8*, ...) @netdev_warn(%struct.net_device* %15, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.50, i64 0, i64 0)) #15, !dbg !14642
  br label %reset_ok, !dbg !14642

reset_ok:                                         ; preds = %for.end, %if.then
  call void @llvm.dbg.label(metadata !14643), !dbg !14644
  %16 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !14645
  %17 = load i32, i32* %port.addr, align 4, !dbg !14646
  %shl11 = shl i32 %17, 7, !dbg !14646
  %add12 = add i32 %shl11, 3352, !dbg !14646
  call void @skge_write16(%struct.skge_hw* %16, i32 %add12, i16 zeroext 2) #14, !dbg !14647
  %18 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !14648
  %phy_type = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %18, i32 0, i32 9, !dbg !14650
  %19 = load i8, i8* %phy_type, align 4, !dbg !14650
  %conv13 = zext i8 %19 to i32, !dbg !14648
  %cmp14 = icmp ne i32 %conv13, 0, !dbg !14651
  br i1 %cmp14, label %if.then16, label %if.end23, !dbg !14652

if.then16:                                        ; preds = %reset_ok
  %20 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !14653
  %call17 = call i32 @skge_read32(%struct.skge_hw* %20, i32 348) #14, !dbg !14655
  store i32 %call17, i32* %r, align 4, !dbg !14656
  %21 = load i32, i32* %port.addr, align 4, !dbg !14657
  %cmp18 = icmp eq i32 %21, 0, !dbg !14659
  br i1 %cmp18, label %if.then20, label %if.else, !dbg !14660

if.then20:                                        ; preds = %if.then16
  %22 = load i32, i32* %r, align 4, !dbg !14661
  %or = or i32 %22, 65537, !dbg !14661
  store i32 %or, i32* %r, align 4, !dbg !14661
  br label %if.end22, !dbg !14662

if.else:                                          ; preds = %if.then16
  %23 = load i32, i32* %r, align 4, !dbg !14663
  %or21 = or i32 %23, 262148, !dbg !14663
  store i32 %or21, i32* %r, align 4, !dbg !14663
  br label %if.end22

if.end22:                                         ; preds = %if.else, %if.then20
  %24 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !14664
  %25 = load i32, i32* %r, align 4, !dbg !14665
  call void @skge_write32(%struct.skge_hw* %24, i32 348, i32 %25) #14, !dbg !14666
  %26 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !14667
  %27 = load i32, i32* %port.addr, align 4, !dbg !14668
  call void @xm_write16(%struct.skge_hw* %26, i32 %27, i32 76, i16 zeroext 1) #14, !dbg !14669
  br label %if.end23, !dbg !14670

if.end23:                                         ; preds = %if.end22, %reset_ok
  %28 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !14671
  %phy_type24 = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %28, i32 0, i32 9, !dbg !14672
  %29 = load i8, i8* %phy_type24, align 4, !dbg !14672
  %conv25 = zext i8 %29 to i32, !dbg !14671
  switch i32 %conv25, label %sw.epilog [
    i32 0, label %sw.bb
    i32 1, label %sw.bb26
  ], !dbg !14673

sw.bb:                                            ; preds = %if.end23
  %30 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !14674
  call void @xm_phy_init(%struct.skge_port* %30) #14, !dbg !14676
  br label %sw.epilog, !dbg !14677

sw.bb26:                                          ; preds = %if.end23
  %31 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !14678
  call void @bcom_phy_init(%struct.skge_port* %31) #14, !dbg !14679
  %32 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !14680
  %33 = load i32, i32* %port.addr, align 4, !dbg !14681
  call void @bcom_check_link(%struct.skge_hw* %32, i32 %33) #14, !dbg !14682
  br label %sw.epilog, !dbg !14683

sw.epilog:                                        ; preds = %sw.bb26, %if.end23, %sw.bb
  %34 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !14684
  %35 = load i32, i32* %port.addr, align 4, !dbg !14685
  %36 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !14686
  %dev_addr = getelementptr inbounds %struct.net_device, %struct.net_device* %36, i32 0, i32 74, !dbg !14687
  %37 = load i8*, i8** %dev_addr, align 8, !dbg !14687
  call void @xm_outaddr(%struct.skge_hw* %34, i32 %35, i32 264, i8* %37) #14, !dbg !14688
  store i32 1, i32* %i, align 4, !dbg !14689
  br label %for.cond27, !dbg !14691

for.cond27:                                       ; preds = %for.inc33, %sw.epilog
  %38 = load i32, i32* %i, align 4, !dbg !14692
  %cmp28 = icmp slt i32 %38, 16, !dbg !14694
  br i1 %cmp28, label %for.body30, label %for.end35, !dbg !14695

for.body30:                                       ; preds = %for.cond27
  %39 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !14696
  %40 = load i32, i32* %port.addr, align 4, !dbg !14697
  %41 = load i32, i32* %i, align 4, !dbg !14698
  %shl31 = shl i32 %41, 3, !dbg !14698
  %add32 = add i32 128, %shl31, !dbg !14698
  call void @xm_outaddr(%struct.skge_hw* %39, i32 %40, i32 %add32, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @genesis_mac_init.zero, i64 0, i64 0)) #14, !dbg !14699
  br label %for.inc33, !dbg !14699

for.inc33:                                        ; preds = %for.body30
  %42 = load i32, i32* %i, align 4, !dbg !14700
  %inc34 = add i32 %42, 1, !dbg !14700
  store i32 %inc34, i32* %i, align 4, !dbg !14700
  br label %for.cond27, !dbg !14701, !llvm.loop !14702

for.end35:                                        ; preds = %for.cond27
  %43 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !14704
  %44 = load i32, i32* %port.addr, align 4, !dbg !14705
  call void @xm_write16(%struct.skge_hw* %43, i32 %44, i32 512, i16 zeroext 3) #14, !dbg !14706
  %45 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !14707
  %46 = load i32, i32* %port.addr, align 4, !dbg !14708
  call void @xm_write16(%struct.skge_hw* %45, i32 %46, i32 512, i16 zeroext 3) #14, !dbg !14709
  %47 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !14710
  %48 = load i32, i32* %port.addr, align 4, !dbg !14711
  call void @xm_write16(%struct.skge_hw* %47, i32 %48, i32 282, i16 zeroext 1450) #14, !dbg !14712
  store i32 272, i32* %r, align 4, !dbg !14713
  %49 = load i32, i32* %jumbo, align 4, !dbg !14714
  %tobool36 = icmp ne i32 %49, 0, !dbg !14714
  br i1 %tobool36, label %if.then37, label %if.end39, !dbg !14716

if.then37:                                        ; preds = %for.end35
  %50 = load i32, i32* %r, align 4, !dbg !14717
  %or38 = or i32 %50, 128, !dbg !14717
  store i32 %or38, i32* %r, align 4, !dbg !14717
  br label %if.end39, !dbg !14718

if.end39:                                         ; preds = %if.then37, %for.end35
  %51 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !14719
  %duplex = getelementptr inbounds %struct.skge_port, %struct.skge_port* %51, i32 0, i32 14, !dbg !14721
  %52 = load i8, i8* %duplex, align 1, !dbg !14721
  %conv40 = zext i8 %52 to i32, !dbg !14719
  %cmp41 = icmp eq i32 %conv40, 0, !dbg !14722
  br i1 %cmp41, label %if.then43, label %if.end45, !dbg !14723

if.then43:                                        ; preds = %if.end39
  %53 = load i32, i32* %r, align 4, !dbg !14724
  %or44 = or i32 %53, 1, !dbg !14724
  store i32 %or44, i32* %r, align 4, !dbg !14724
  br label %if.end45, !dbg !14726

if.end45:                                         ; preds = %if.then43, %if.end39
  %54 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !14727
  %55 = load i32, i32* %port.addr, align 4, !dbg !14728
  %56 = load i32, i32* %r, align 4, !dbg !14729
  %conv46 = trunc i32 %56 to i16, !dbg !14729
  call void @xm_write16(%struct.skge_hw* %54, i32 %55, i32 48, i16 zeroext %conv46) #14, !dbg !14730
  %57 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !14731
  %58 = load i32, i32* %port.addr, align 4, !dbg !14732
  call void @xm_write16(%struct.skge_hw* %57, i32 %58, i32 32, i16 zeroext 1) #14, !dbg !14733
  %59 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !14734
  %ports = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %59, i32 0, i32 8, !dbg !14736
  %60 = load i8, i8* %ports, align 1, !dbg !14736
  %conv47 = zext i8 %60 to i32, !dbg !14734
  %cmp48 = icmp sgt i32 %conv47, 1, !dbg !14737
  br i1 %cmp48, label %land.lhs.true, label %if.else52, !dbg !14738

land.lhs.true:                                    ; preds = %if.end45
  %61 = load i32, i32* %jumbo, align 4, !dbg !14739
  %tobool50 = icmp ne i32 %61, 0, !dbg !14739
  br i1 %tobool50, label %if.then51, label %if.else52, !dbg !14740

if.then51:                                        ; preds = %land.lhs.true
  %62 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !14741
  %63 = load i32, i32* %port.addr, align 4, !dbg !14742
  call void @xm_write16(%struct.skge_hw* %62, i32 %63, i32 100, i16 zeroext 1020) #14, !dbg !14743
  br label %if.end53, !dbg !14743

if.else52:                                        ; preds = %land.lhs.true, %if.end45
  %64 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !14744
  %65 = load i32, i32* %port.addr, align 4, !dbg !14745
  call void @xm_write16(%struct.skge_hw* %64, i32 %65, i32 100, i16 zeroext 512) #14, !dbg !14746
  br label %if.end53

if.end53:                                         ; preds = %if.else52, %if.then51
  %66 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !14747
  %67 = load i32, i32* %port.addr, align 4, !dbg !14748
  call void @xm_write32(%struct.skge_hw* %66, i32 %67, i32 292, i32 20352) #14, !dbg !14749
  %68 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !14750
  %69 = load i32, i32* %port.addr, align 4, !dbg !14751
  call void @xm_write32(%struct.skge_hw* %68, i32 %69, i32 524, i32 6) #14, !dbg !14752
  %70 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !14753
  %71 = load i32, i32* %port.addr, align 4, !dbg !14754
  call void @xm_write32(%struct.skge_hw* %70, i32 %71, i32 528, i32 6) #14, !dbg !14755
  %72 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !14756
  call void @skge_write16(%struct.skge_hw* %72, i32 440, i16 zeroext 2) #14, !dbg !14757
  %73 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !14758
  call void @skge_write8(%struct.skge_hw* %73, i32 432, i8 zeroext 72) #14, !dbg !14759
  %74 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !14760
  call void @skge_write8(%struct.skge_hw* %74, i32 433, i8 zeroext 72) #14, !dbg !14761
  %75 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !14762
  call void @skge_write8(%struct.skge_hw* %75, i32 434, i8 zeroext 72) #14, !dbg !14763
  %76 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !14764
  call void @skge_write8(%struct.skge_hw* %76, i32 435, i8 zeroext 72) #14, !dbg !14765
  %77 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !14766
  call void @skge_write8(%struct.skge_hw* %77, i32 448, i8 zeroext 0) #14, !dbg !14767
  %78 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !14768
  call void @skge_write8(%struct.skge_hw* %78, i32 449, i8 zeroext 0) #14, !dbg !14769
  %79 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !14770
  call void @skge_write8(%struct.skge_hw* %79, i32 450, i8 zeroext 0) #14, !dbg !14771
  %80 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !14772
  call void @skge_write8(%struct.skge_hw* %80, i32 451, i8 zeroext 0) #14, !dbg !14773
  %81 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !14774
  %82 = load i32, i32* %port.addr, align 4, !dbg !14775
  %shl54 = shl i32 %82, 7, !dbg !14775
  %add55 = add i32 %shl54, 3100, !dbg !14775
  call void @skge_write8(%struct.skge_hw* %81, i32 %add55, i8 zeroext 2) #14, !dbg !14776
  %83 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !14777
  %84 = load i32, i32* %port.addr, align 4, !dbg !14778
  %shl56 = shl i32 %84, 7, !dbg !14778
  %add57 = add i32 %shl56, 3096, !dbg !14778
  call void @skge_write16(%struct.skge_hw* %83, i32 %add57, i16 zeroext 2048) #14, !dbg !14779
  %85 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !14780
  %86 = load i32, i32* %port.addr, align 4, !dbg !14781
  %shl58 = shl i32 %86, 7, !dbg !14781
  %add59 = add i32 %shl58, 3100, !dbg !14781
  call void @skge_write8(%struct.skge_hw* %85, i32 %add59, i8 zeroext 8) #14, !dbg !14782
  %87 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !14783
  %88 = load i32, i32* %port.addr, align 4, !dbg !14784
  %shl60 = shl i32 %88, 7, !dbg !14784
  %add61 = add i32 %shl60, 3356, !dbg !14784
  call void @skge_write8(%struct.skge_hw* %87, i32 %add61, i8 zeroext 2) #14, !dbg !14785
  %89 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !14786
  %90 = load i32, i32* %port.addr, align 4, !dbg !14787
  %shl62 = shl i32 %90, 7, !dbg !14787
  %add63 = add i32 %shl62, 3352, !dbg !14787
  call void @skge_write16(%struct.skge_hw* %89, i32 %add63, i16 zeroext 10272) #14, !dbg !14788
  %91 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !14789
  %92 = load i32, i32* %port.addr, align 4, !dbg !14790
  %shl64 = shl i32 %92, 7, !dbg !14790
  %add65 = add i32 %shl64, 3356, !dbg !14790
  call void @skge_write8(%struct.skge_hw* %91, i32 %add65, i8 zeroext 8) #14, !dbg !14791
  %93 = load i32, i32* %jumbo, align 4, !dbg !14792
  %tobool66 = icmp ne i32 %93, 0, !dbg !14792
  br i1 %tobool66, label %if.then67, label %if.else70, !dbg !14794

if.then67:                                        ; preds = %if.end53
  %94 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !14795
  %95 = load i32, i32* %port.addr, align 4, !dbg !14797
  %shl68 = shl i32 %95, 7, !dbg !14797
  %add69 = add i32 %shl68, 3096, !dbg !14797
  call void @skge_write16(%struct.skge_hw* %94, i32 %add69, i16 zeroext 32) #14, !dbg !14798
  br label %if.end74, !dbg !14799

if.else70:                                        ; preds = %if.end53
  %96 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !14800
  %97 = load i32, i32* %port.addr, align 4, !dbg !14802
  %cmp71 = icmp eq i32 %97, 0, !dbg !14803
  %98 = zext i1 %cmp71 to i64, !dbg !14804
  %cond = select i1 %cmp71, i32 128, i32 512, !dbg !14804
  %conv73 = trunc i32 %cond to i16, !dbg !14804
  call void @skge_write16(%struct.skge_hw* %96, i32 496, i16 zeroext %conv73) #14, !dbg !14805
  br label %if.end74

if.end74:                                         ; preds = %if.else70, %if.then67
  ret void, !dbg !14806
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @yukon_mac_init(%struct.skge_hw* %hw, i32 %port) #2 !dbg !14807 {
entry:
  %hw.addr = alloca %struct.skge_hw*, align 8
  %port.addr = alloca i32, align 4
  %skge = alloca %struct.skge_port*, align 8
  %i = alloca i32, align 4
  %reg = alloca i32, align 4
  %addr = alloca i8*, align 8
  store %struct.skge_hw* %hw, %struct.skge_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.skge_hw** %hw.addr, metadata !14808, metadata !DIExpression()), !dbg !14809
  store i32 %port, i32* %port.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %port.addr, metadata !14810, metadata !DIExpression()), !dbg !14811
  call void @llvm.dbg.declare(metadata %struct.skge_port** %skge, metadata !14812, metadata !DIExpression()), !dbg !14813
  %0 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !14814
  %dev = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %0, i32 0, i32 4, !dbg !14815
  %1 = load i32, i32* %port.addr, align 4, !dbg !14816
  %idxprom = sext i32 %1 to i64, !dbg !14814
  %arrayidx = getelementptr [2 x %struct.net_device*], [2 x %struct.net_device*]* %dev, i64 0, i64 %idxprom, !dbg !14814
  %2 = load %struct.net_device*, %struct.net_device** %arrayidx, align 8, !dbg !14814
  %call = call i8* @netdev_priv(%struct.net_device* %2) #14, !dbg !14817
  %3 = bitcast i8* %call to %struct.skge_port*, !dbg !14817
  store %struct.skge_port* %3, %struct.skge_port** %skge, align 8, !dbg !14813
  call void @llvm.dbg.declare(metadata i32* %i, metadata !14818, metadata !DIExpression()), !dbg !14819
  call void @llvm.dbg.declare(metadata i32* %reg, metadata !14820, metadata !DIExpression()), !dbg !14821
  call void @llvm.dbg.declare(metadata i8** %addr, metadata !14822, metadata !DIExpression()), !dbg !14823
  %4 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !14824
  %dev1 = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %4, i32 0, i32 4, !dbg !14825
  %5 = load i32, i32* %port.addr, align 4, !dbg !14826
  %idxprom2 = sext i32 %5 to i64, !dbg !14824
  %arrayidx3 = getelementptr [2 x %struct.net_device*], [2 x %struct.net_device*]* %dev1, i64 0, i64 %idxprom2, !dbg !14824
  %6 = load %struct.net_device*, %struct.net_device** %arrayidx3, align 8, !dbg !14824
  %dev_addr = getelementptr inbounds %struct.net_device, %struct.net_device* %6, i32 0, i32 74, !dbg !14827
  %7 = load i8*, i8** %dev_addr, align 8, !dbg !14827
  store i8* %7, i8** %addr, align 8, !dbg !14823
  %8 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !14828
  %chip_id = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %8, i32 0, i32 5, !dbg !14830
  %9 = load i8, i8* %chip_id, align 8, !dbg !14830
  %conv = zext i8 %9 to i32, !dbg !14828
  %cmp = icmp eq i32 %conv, 177, !dbg !14831
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !14832

land.lhs.true:                                    ; preds = %entry
  %10 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !14833
  %chip_rev = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %10, i32 0, i32 6, !dbg !14834
  %11 = load i8, i8* %chip_rev, align 1, !dbg !14834
  %conv5 = zext i8 %11 to i32, !dbg !14833
  %cmp6 = icmp sge i32 %conv5, 7, !dbg !14835
  br i1 %cmp6, label %if.then, label %if.end, !dbg !14836

if.then:                                          ; preds = %land.lhs.true
  %12 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !14837
  %call8 = call i32 @skge_read32(%struct.skge_hw* %12, i32 348) #14, !dbg !14839
  store i32 %call8, i32* %reg, align 4, !dbg !14840
  %13 = load i32, i32* %reg, align 4, !dbg !14841
  %or = or i32 %13, 33554944, !dbg !14841
  store i32 %or, i32* %reg, align 4, !dbg !14841
  %14 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !14842
  %15 = load i32, i32* %reg, align 4, !dbg !14843
  call void @skge_write32(%struct.skge_hw* %14, i32 348, i32 %15) #14, !dbg !14844
  br label %if.end, !dbg !14845

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %16 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !14846
  %17 = load i32, i32* %port.addr, align 4, !dbg !14847
  %shl = shl i32 %17, 7, !dbg !14847
  %add = add i32 %shl, 3844, !dbg !14847
  call void @skge_write32(%struct.skge_hw* %16, i32 %add, i32 1) #14, !dbg !14848
  %18 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !14849
  %19 = load i32, i32* %port.addr, align 4, !dbg !14850
  %shl9 = shl i32 %19, 7, !dbg !14850
  %add10 = add i32 %shl9, 3840, !dbg !14850
  call void @skge_write32(%struct.skge_hw* %18, i32 %add10, i32 1) #14, !dbg !14851
  %20 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !14852
  %chip_id11 = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %20, i32 0, i32 5, !dbg !14854
  %21 = load i8, i8* %chip_id11, align 8, !dbg !14854
  %conv12 = zext i8 %21 to i32, !dbg !14852
  %cmp13 = icmp eq i32 %conv12, 177, !dbg !14855
  br i1 %cmp13, label %land.lhs.true15, label %if.end23, !dbg !14856

land.lhs.true15:                                  ; preds = %if.end
  %22 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !14857
  %chip_rev16 = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %22, i32 0, i32 6, !dbg !14858
  %23 = load i8, i8* %chip_rev16, align 1, !dbg !14858
  %conv17 = zext i8 %23 to i32, !dbg !14857
  %cmp18 = icmp sge i32 %conv17, 7, !dbg !14859
  br i1 %cmp18, label %if.then20, label %if.end23, !dbg !14860

if.then20:                                        ; preds = %land.lhs.true15
  %24 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !14861
  %call21 = call i32 @skge_read32(%struct.skge_hw* %24, i32 348) #14, !dbg !14863
  store i32 %call21, i32* %reg, align 4, !dbg !14864
  %25 = load i32, i32* %reg, align 4, !dbg !14865
  %or22 = or i32 %25, 33554432, !dbg !14865
  store i32 %or22, i32* %reg, align 4, !dbg !14865
  %26 = load i32, i32* %reg, align 4, !dbg !14866
  %and = and i32 %26, -513, !dbg !14866
  store i32 %and, i32* %reg, align 4, !dbg !14866
  %27 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !14867
  %28 = load i32, i32* %reg, align 4, !dbg !14868
  call void @skge_write32(%struct.skge_hw* %27, i32 348, i32 %28) #14, !dbg !14869
  br label %if.end23, !dbg !14870

if.end23:                                         ; preds = %if.then20, %land.lhs.true15, %if.end
  store i32 185458688, i32* %reg, align 4, !dbg !14871
  %29 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !14872
  %copper = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %29, i32 0, i32 7, !dbg !14873
  %30 = load i8, i8* %copper, align 2, !dbg !14873
  %conv24 = zext i8 %30 to i32, !dbg !14872
  %tobool = icmp ne i32 %conv24, 0, !dbg !14872
  %31 = zext i1 %tobool to i64, !dbg !14872
  %cond = select i1 %tobool, i32 15728640, i32 7340032, !dbg !14872
  %32 = load i32, i32* %reg, align 4, !dbg !14874
  %or25 = or i32 %32, %cond, !dbg !14874
  store i32 %or25, i32* %reg, align 4, !dbg !14874
  %33 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !14875
  %34 = load i32, i32* %port.addr, align 4, !dbg !14876
  %shl26 = shl i32 %34, 7, !dbg !14876
  %add27 = add i32 %shl26, 3844, !dbg !14876
  %35 = load i32, i32* %reg, align 4, !dbg !14877
  %or28 = or i32 %35, 1, !dbg !14878
  call void @skge_write32(%struct.skge_hw* %33, i32 %add27, i32 %or28) #14, !dbg !14879
  %36 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !14880
  %37 = load i32, i32* %port.addr, align 4, !dbg !14881
  %shl29 = shl i32 %37, 7, !dbg !14881
  %add30 = add i32 %shl29, 3844, !dbg !14881
  %38 = load i32, i32* %reg, align 4, !dbg !14882
  %or31 = or i32 %38, 2, !dbg !14883
  call void @skge_write32(%struct.skge_hw* %36, i32 %add30, i32 %or31) #14, !dbg !14884
  %39 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !14885
  %40 = load i32, i32* %port.addr, align 4, !dbg !14886
  %shl32 = shl i32 %40, 7, !dbg !14886
  %add33 = add i32 %shl32, 3840, !dbg !14886
  call void @skge_write32(%struct.skge_hw* %39, i32 %add33, i32 10) #14, !dbg !14887
  %41 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !14888
  %autoneg = getelementptr inbounds %struct.skge_port, %struct.skge_port* %41, i32 0, i32 13, !dbg !14890
  %42 = load i8, i8* %autoneg, align 2, !dbg !14890
  %conv34 = zext i8 %42 to i32, !dbg !14888
  %cmp35 = icmp eq i32 %conv34, 0, !dbg !14891
  br i1 %cmp35, label %if.then37, label %if.else, !dbg !14892

if.then37:                                        ; preds = %if.end23
  store i32 7, i32* %reg, align 4, !dbg !14893
  %43 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !14895
  %44 = load i32, i32* %port.addr, align 4, !dbg !14896
  %45 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !14897
  %46 = load i32, i32* %port.addr, align 4, !dbg !14898
  %call38 = call zeroext i16 @gma_read16(%struct.skge_hw* %45, i32 %46, i32 4) #14, !dbg !14899
  %conv39 = zext i16 %call38 to i32, !dbg !14899
  %47 = load i32, i32* %reg, align 4, !dbg !14900
  %or40 = or i32 %conv39, %47, !dbg !14901
  %conv41 = trunc i32 %or40 to i16, !dbg !14899
  call void @gma_write16(%struct.skge_hw* %43, i32 %44, i32 4, i16 zeroext %conv41) #14, !dbg !14902
  %48 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !14903
  %speed = getelementptr inbounds %struct.skge_port, %struct.skge_port* %48, i32 0, i32 15, !dbg !14904
  %49 = load i16, i16* %speed, align 4, !dbg !14904
  %conv42 = zext i16 %49 to i32, !dbg !14903
  switch i32 %conv42, label %sw.epilog [
    i32 1000, label %sw.bb
    i32 100, label %sw.bb45
    i32 10, label %sw.bb48
  ], !dbg !14905

sw.bb:                                            ; preds = %if.then37
  %50 = load i32, i32* %reg, align 4, !dbg !14906
  %and43 = and i32 %50, -9, !dbg !14906
  store i32 %and43, i32* %reg, align 4, !dbg !14906
  %51 = load i32, i32* %reg, align 4, !dbg !14908
  %or44 = or i32 %51, 136, !dbg !14908
  store i32 %or44, i32* %reg, align 4, !dbg !14908
  br label %sw.epilog, !dbg !14909

sw.bb45:                                          ; preds = %if.then37
  %52 = load i32, i32* %reg, align 4, !dbg !14910
  %and46 = and i32 %52, -137, !dbg !14910
  store i32 %and46, i32* %reg, align 4, !dbg !14910
  %53 = load i32, i32* %reg, align 4, !dbg !14911
  %or47 = or i32 %53, 8, !dbg !14911
  store i32 %or47, i32* %reg, align 4, !dbg !14911
  br label %sw.epilog, !dbg !14912

sw.bb48:                                          ; preds = %if.then37
  %54 = load i32, i32* %reg, align 4, !dbg !14913
  %and49 = and i32 %54, -137, !dbg !14913
  store i32 %and49, i32* %reg, align 4, !dbg !14913
  br label %sw.epilog, !dbg !14914

sw.epilog:                                        ; preds = %if.then37, %sw.bb48, %sw.bb45, %sw.bb
  %55 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !14915
  %duplex = getelementptr inbounds %struct.skge_port, %struct.skge_port* %55, i32 0, i32 14, !dbg !14917
  %56 = load i8, i8* %duplex, align 1, !dbg !14917
  %conv50 = zext i8 %56 to i32, !dbg !14915
  %cmp51 = icmp eq i32 %conv50, 1, !dbg !14918
  br i1 %cmp51, label %if.then53, label %if.end55, !dbg !14919

if.then53:                                        ; preds = %sw.epilog
  %57 = load i32, i32* %reg, align 4, !dbg !14920
  %or54 = or i32 %57, 32, !dbg !14920
  store i32 %or54, i32* %reg, align 4, !dbg !14920
  br label %if.end55, !dbg !14921

if.end55:                                         ; preds = %if.then53, %sw.epilog
  br label %if.end56, !dbg !14922

if.else:                                          ; preds = %if.end23
  store i32 168, i32* %reg, align 4, !dbg !14923
  br label %if.end56

if.end56:                                         ; preds = %if.else, %if.end55
  %58 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !14924
  %flow_control = getelementptr inbounds %struct.skge_port, %struct.skge_port* %58, i32 0, i32 9, !dbg !14925
  %59 = load i32, i32* %flow_control, align 8, !dbg !14925
  switch i32 %59, label %sw.epilog64 [
    i32 1, label %sw.bb57
    i32 2, label %sw.bb61
    i32 3, label %sw.bb63
    i32 4, label %sw.bb63
  ], !dbg !14926

sw.bb57:                                          ; preds = %if.end56
  %60 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !14927
  %61 = load i32, i32* %port.addr, align 4, !dbg !14929
  %shl58 = shl i32 %61, 7, !dbg !14929
  %add59 = add i32 %shl58, 3840, !dbg !14929
  call void @skge_write32(%struct.skge_hw* %60, i32 %add59, i32 4) #14, !dbg !14930
  %62 = load i32, i32* %reg, align 4, !dbg !14931
  %or60 = or i32 %62, 8210, !dbg !14931
  store i32 %or60, i32* %reg, align 4, !dbg !14931
  br label %sw.epilog64, !dbg !14932

sw.bb61:                                          ; preds = %if.end56
  %63 = load i32, i32* %reg, align 4, !dbg !14933
  %or62 = or i32 %63, 18, !dbg !14933
  store i32 %or62, i32* %reg, align 4, !dbg !14933
  br label %sw.epilog64, !dbg !14934

sw.bb63:                                          ; preds = %if.end56, %if.end56
  br label %sw.epilog64, !dbg !14935

sw.epilog64:                                      ; preds = %if.end56, %sw.bb63, %sw.bb61, %sw.bb57
  %64 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !14936
  %65 = load i32, i32* %port.addr, align 4, !dbg !14937
  %66 = load i32, i32* %reg, align 4, !dbg !14938
  %conv65 = trunc i32 %66 to i16, !dbg !14938
  call void @gma_write16(%struct.skge_hw* %64, i32 %65, i32 4, i16 zeroext %conv65) #14, !dbg !14939
  %67 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !14940
  %68 = load i32, i32* %port.addr, align 4, !dbg !14941
  %shl66 = shl i32 %68, 7, !dbg !14941
  %add67 = add i32 %shl66, 3848, !dbg !14941
  %call68 = call zeroext i16 @skge_read16(%struct.skge_hw* %67, i32 %add67) #14, !dbg !14942
  %69 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !14943
  %70 = load i32, i32* %port.addr, align 4, !dbg !14944
  call void @yukon_init(%struct.skge_hw* %69, i32 %70) #14, !dbg !14945
  %71 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !14946
  %72 = load i32, i32* %port.addr, align 4, !dbg !14947
  %call69 = call zeroext i16 @gma_read16(%struct.skge_hw* %71, i32 %72, i32 136) #14, !dbg !14948
  %conv70 = zext i16 %call69 to i32, !dbg !14948
  store i32 %conv70, i32* %reg, align 4, !dbg !14949
  %73 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !14950
  %74 = load i32, i32* %port.addr, align 4, !dbg !14951
  %75 = load i32, i32* %reg, align 4, !dbg !14952
  %or71 = or i32 %75, 32, !dbg !14953
  %conv72 = trunc i32 %or71 to i16, !dbg !14952
  call void @gma_write16(%struct.skge_hw* %73, i32 %74, i32 136, i16 zeroext %conv72) #14, !dbg !14954
  store i32 0, i32* %i, align 4, !dbg !14955
  br label %for.cond, !dbg !14957

for.cond:                                         ; preds = %for.inc, %sw.epilog64
  %76 = load i32, i32* %i, align 4, !dbg !14958
  %cmp73 = icmp slt i32 %76, 44, !dbg !14960
  br i1 %cmp73, label %for.body, label %for.end, !dbg !14961

for.body:                                         ; preds = %for.cond
  %77 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !14962
  %78 = load i32, i32* %port.addr, align 4, !dbg !14963
  %79 = load i32, i32* %i, align 4, !dbg !14964
  %mul = mul i32 8, %79, !dbg !14965
  %add75 = add i32 256, %mul, !dbg !14966
  %call76 = call zeroext i16 @gma_read16(%struct.skge_hw* %77, i32 %78, i32 %add75) #14, !dbg !14967
  br label %for.inc, !dbg !14967

for.inc:                                          ; preds = %for.body
  %80 = load i32, i32* %i, align 4, !dbg !14968
  %inc = add i32 %80, 1, !dbg !14968
  store i32 %inc, i32* %i, align 4, !dbg !14968
  br label %for.cond, !dbg !14969, !llvm.loop !14970

for.end:                                          ; preds = %for.cond
  %81 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !14972
  %82 = load i32, i32* %port.addr, align 4, !dbg !14973
  %83 = load i32, i32* %reg, align 4, !dbg !14974
  %conv77 = trunc i32 %83 to i16, !dbg !14974
  call void @gma_write16(%struct.skge_hw* %81, i32 %82, i32 136, i16 zeroext %conv77) #14, !dbg !14975
  %84 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !14976
  %85 = load i32, i32* %port.addr, align 4, !dbg !14977
  call void @gma_write16(%struct.skge_hw* %84, i32 %85, i32 8, i16 zeroext 4096) #14, !dbg !14978
  %86 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !14979
  %87 = load i32, i32* %port.addr, align 4, !dbg !14980
  call void @gma_write16(%struct.skge_hw* %86, i32 %87, i32 12, i16 zeroext -8192) #14, !dbg !14981
  %88 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !14982
  %89 = load i32, i32* %port.addr, align 4, !dbg !14983
  call void @gma_write16(%struct.skge_hw* %88, i32 %89, i32 16, i16 zeroext -1) #14, !dbg !14984
  %90 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !14985
  %91 = load i32, i32* %port.addr, align 4, !dbg !14986
  call void @gma_write16(%struct.skge_hw* %90, i32 %91, i32 20, i16 zeroext -10304) #14, !dbg !14987
  store i32 8734, i32* %reg, align 4, !dbg !14988
  %92 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !14989
  %dev78 = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %92, i32 0, i32 4, !dbg !14991
  %93 = load i32, i32* %port.addr, align 4, !dbg !14992
  %idxprom79 = sext i32 %93 to i64, !dbg !14989
  %arrayidx80 = getelementptr [2 x %struct.net_device*], [2 x %struct.net_device*]* %dev78, i64 0, i64 %idxprom79, !dbg !14989
  %94 = load %struct.net_device*, %struct.net_device** %arrayidx80, align 8, !dbg !14989
  %mtu = getelementptr inbounds %struct.net_device, %struct.net_device* %94, i32 0, i32 44, !dbg !14993
  %95 = load i32, i32* %mtu, align 8, !dbg !14993
  %cmp81 = icmp ugt i32 %95, 1500, !dbg !14994
  br i1 %cmp81, label %if.then83, label %if.end85, !dbg !14995

if.then83:                                        ; preds = %for.end
  %96 = load i32, i32* %reg, align 4, !dbg !14996
  %or84 = or i32 %96, 256, !dbg !14996
  store i32 %or84, i32* %reg, align 4, !dbg !14996
  br label %if.end85, !dbg !14997

if.end85:                                         ; preds = %if.then83, %for.end
  %97 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !14998
  %98 = load i32, i32* %port.addr, align 4, !dbg !14999
  %99 = load i32, i32* %reg, align 4, !dbg !15000
  %conv86 = trunc i32 %99 to i16, !dbg !15000
  call void @gma_write16(%struct.skge_hw* %97, i32 %98, i32 24, i16 zeroext %conv86) #14, !dbg !15001
  %100 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !15002
  %101 = load i32, i32* %port.addr, align 4, !dbg !15003
  %102 = load i8*, i8** %addr, align 8, !dbg !15004
  call void @gma_set_addr(%struct.skge_hw* %100, i32 %101, i32 28, i8* %102) #14, !dbg !15005
  %103 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !15006
  %104 = load i32, i32* %port.addr, align 4, !dbg !15007
  %105 = load i8*, i8** %addr, align 8, !dbg !15008
  call void @gma_set_addr(%struct.skge_hw* %103, i32 %104, i32 40, i8* %105) #14, !dbg !15009
  %106 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !15010
  %107 = load i32, i32* %port.addr, align 4, !dbg !15011
  call void @gma_write16(%struct.skge_hw* %106, i32 %107, i32 80, i16 zeroext 0) #14, !dbg !15012
  %108 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !15013
  %109 = load i32, i32* %port.addr, align 4, !dbg !15014
  call void @gma_write16(%struct.skge_hw* %108, i32 %109, i32 84, i16 zeroext 0) #14, !dbg !15015
  %110 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !15016
  %111 = load i32, i32* %port.addr, align 4, !dbg !15017
  call void @gma_write16(%struct.skge_hw* %110, i32 %111, i32 88, i16 zeroext 0) #14, !dbg !15018
  %112 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !15019
  %113 = load i32, i32* %port.addr, align 4, !dbg !15020
  %shl87 = shl i32 %113, 7, !dbg !15020
  %add88 = add i32 %shl87, 3148, !dbg !15020
  call void @skge_write16(%struct.skge_hw* %112, i32 %add88, i16 zeroext 6243) #14, !dbg !15021
  store i32 136, i32* %reg, align 4, !dbg !15022
  %114 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !15023
  %call89 = call i32 @is_yukon_lite_a0(%struct.skge_hw* %114) #14, !dbg !15025
  %tobool90 = icmp ne i32 %call89, 0, !dbg !15025
  br i1 %tobool90, label %if.then91, label %if.end93, !dbg !15026

if.then91:                                        ; preds = %if.end85
  %115 = load i32, i32* %reg, align 4, !dbg !15027
  %and92 = and i32 %115, -129, !dbg !15027
  store i32 %and92, i32* %reg, align 4, !dbg !15027
  br label %if.end93, !dbg !15028

if.end93:                                         ; preds = %if.then91, %if.end85
  %116 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !15029
  %117 = load i32, i32* %port.addr, align 4, !dbg !15030
  %shl94 = shl i32 %117, 7, !dbg !15030
  %add95 = add i32 %shl94, 3144, !dbg !15030
  call void @skge_write8(%struct.skge_hw* %116, i32 %add95, i8 zeroext 2) #14, !dbg !15031
  %118 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !15032
  %119 = load i32, i32* %port.addr, align 4, !dbg !15033
  %shl96 = shl i32 %119, 7, !dbg !15033
  %add97 = add i32 %shl96, 3144, !dbg !15033
  %120 = load i32, i32* %reg, align 4, !dbg !15034
  %conv98 = trunc i32 %120 to i16, !dbg !15034
  call void @skge_write16(%struct.skge_hw* %118, i32 %add97, i16 zeroext %conv98) #14, !dbg !15035
  %121 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !15036
  %122 = load i32, i32* %port.addr, align 4, !dbg !15037
  %shl99 = shl i32 %122, 7, !dbg !15037
  %add100 = add i32 %shl99, 3152, !dbg !15037
  call void @skge_write16(%struct.skge_hw* %121, i32 %add100, i16 zeroext 11) #14, !dbg !15038
  %123 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !15039
  %124 = load i32, i32* %port.addr, align 4, !dbg !15040
  %shl101 = shl i32 %124, 7, !dbg !15040
  %add102 = add i32 %shl101, 3400, !dbg !15040
  call void @skge_write8(%struct.skge_hw* %123, i32 %add102, i8 zeroext 2) #14, !dbg !15041
  %125 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !15042
  %126 = load i32, i32* %port.addr, align 4, !dbg !15043
  %shl103 = shl i32 %126, 7, !dbg !15043
  %add104 = add i32 %shl103, 3400, !dbg !15043
  call void @skge_write16(%struct.skge_hw* %125, i32 %add104, i16 zeroext 8) #14, !dbg !15044
  ret void, !dbg !15045
}

; Function Attrs: alwaysinline noredzone nounwind sspstrong
define internal void @spin_unlock_bh(%struct.spinlock* %lock) #11 !dbg !15046 {
entry:
  %lock.addr = alloca %struct.spinlock*, align 8
  %tmp = alloca i64, align 8
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr, metadata !15047, metadata !DIExpression()), !dbg !15048
  br label %do.body, !dbg !15049

do.body:                                          ; preds = %entry
  br label %__here, !dbg !15050

__here:                                           ; preds = %indirectgoto, %do.body
  call void @llvm.dbg.label(metadata !15053), !dbg !15050
  store i64 ptrtoint (i8* blockaddress(@spin_unlock_bh, %__here) to i64), i64* %tmp, align 8, !dbg !15050
  %0 = load i64, i64* %tmp, align 8, !dbg !15050
  call void @__local_bh_enable_ip(i64 %0, i32 512) #14, !dbg !15054
  br label %do.body1, !dbg !15054

do.body1:                                         ; preds = %__here
  %1 = load %struct.spinlock*, %struct.spinlock** %lock.addr, align 8, !dbg !15055
  %2 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %1, i32 0, i32 0, !dbg !15055
  %rlock = bitcast %union.anon.1* %2 to %struct.raw_spinlock*, !dbg !15055
  br label %do.end, !dbg !15055

do.end:                                           ; preds = %do.body1
  br label %do.end2, !dbg !15054

do.end2:                                          ; preds = %do.end
  ret void, !dbg !15057

indirectgoto:                                     ; No predecessors!
  indirectbr i8* undef, [label %__here]
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @skge_ramset(%struct.skge_hw* %hw, i16 zeroext %q, i32 %start, i64 %len) #2 !dbg !15058 {
entry:
  %hw.addr = alloca %struct.skge_hw*, align 8
  %q.addr = alloca i16, align 2
  %start.addr = alloca i32, align 4
  %len.addr = alloca i64, align 8
  %end = alloca i32, align 4
  store %struct.skge_hw* %hw, %struct.skge_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.skge_hw** %hw.addr, metadata !15061, metadata !DIExpression()), !dbg !15062
  store i16 %q, i16* %q.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %q.addr, metadata !15063, metadata !DIExpression()), !dbg !15064
  store i32 %start, i32* %start.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %start.addr, metadata !15065, metadata !DIExpression()), !dbg !15066
  store i64 %len, i64* %len.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %len.addr, metadata !15067, metadata !DIExpression()), !dbg !15068
  call void @llvm.dbg.declare(metadata i32* %end, metadata !15069, metadata !DIExpression()), !dbg !15070
  %0 = load i32, i32* %start.addr, align 4, !dbg !15071
  %div = udiv i32 %0, 8, !dbg !15071
  store i32 %div, i32* %start.addr, align 4, !dbg !15071
  %1 = load i64, i64* %len.addr, align 8, !dbg !15072
  %div1 = udiv i64 %1, 8, !dbg !15072
  store i64 %div1, i64* %len.addr, align 8, !dbg !15072
  %2 = load i32, i32* %start.addr, align 4, !dbg !15073
  %conv = zext i32 %2 to i64, !dbg !15073
  %3 = load i64, i64* %len.addr, align 8, !dbg !15074
  %add = add i64 %conv, %3, !dbg !15075
  %sub = sub i64 %add, 1, !dbg !15076
  %conv2 = trunc i64 %sub to i32, !dbg !15073
  store i32 %conv2, i32* %end, align 4, !dbg !15077
  %4 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !15078
  %5 = load i16, i16* %q.addr, align 2, !dbg !15079
  %conv3 = zext i16 %5 to i32, !dbg !15079
  %add4 = add i32 2088, %conv3, !dbg !15079
  call void @skge_write8(%struct.skge_hw* %4, i32 %add4, i8 zeroext 2) #14, !dbg !15080
  %6 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !15081
  %7 = load i16, i16* %q.addr, align 2, !dbg !15082
  %conv5 = zext i16 %7 to i32, !dbg !15082
  %add6 = add i32 2048, %conv5, !dbg !15082
  %8 = load i32, i32* %start.addr, align 4, !dbg !15083
  call void @skge_write32(%struct.skge_hw* %6, i32 %add6, i32 %8) #14, !dbg !15084
  %9 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !15085
  %10 = load i16, i16* %q.addr, align 2, !dbg !15086
  %conv7 = zext i16 %10 to i32, !dbg !15086
  %add8 = add i32 2056, %conv7, !dbg !15086
  %11 = load i32, i32* %start.addr, align 4, !dbg !15087
  call void @skge_write32(%struct.skge_hw* %9, i32 %add8, i32 %11) #14, !dbg !15088
  %12 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !15089
  %13 = load i16, i16* %q.addr, align 2, !dbg !15090
  %conv9 = zext i16 %13 to i32, !dbg !15090
  %add10 = add i32 2060, %conv9, !dbg !15090
  %14 = load i32, i32* %start.addr, align 4, !dbg !15091
  call void @skge_write32(%struct.skge_hw* %12, i32 %add10, i32 %14) #14, !dbg !15092
  %15 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !15093
  %16 = load i16, i16* %q.addr, align 2, !dbg !15094
  %conv11 = zext i16 %16 to i32, !dbg !15094
  %add12 = add i32 2052, %conv11, !dbg !15094
  %17 = load i32, i32* %end, align 4, !dbg !15095
  call void @skge_write32(%struct.skge_hw* %15, i32 %add12, i32 %17) #14, !dbg !15096
  %18 = load i16, i16* %q.addr, align 2, !dbg !15097
  %conv13 = zext i16 %18 to i32, !dbg !15097
  %cmp = icmp eq i32 %conv13, 0, !dbg !15099
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !15100

lor.lhs.false:                                    ; preds = %entry
  %19 = load i16, i16* %q.addr, align 2, !dbg !15101
  %conv15 = zext i16 %19 to i32, !dbg !15101
  %cmp16 = icmp eq i32 %conv15, 128, !dbg !15102
  br i1 %cmp16, label %if.then, label %if.else, !dbg !15103

if.then:                                          ; preds = %lor.lhs.false, %entry
  %20 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !15104
  %21 = load i16, i16* %q.addr, align 2, !dbg !15106
  %conv18 = zext i16 %21 to i32, !dbg !15106
  %add19 = add i32 2064, %conv18, !dbg !15106
  %22 = load i32, i32* %start.addr, align 4, !dbg !15107
  %conv20 = zext i32 %22 to i64, !dbg !15107
  %23 = load i64, i64* %len.addr, align 8, !dbg !15108
  %mul = mul i64 2, %23, !dbg !15109
  %div21 = udiv i64 %mul, 3, !dbg !15110
  %add22 = add i64 %conv20, %div21, !dbg !15111
  %conv23 = trunc i64 %add22 to i32, !dbg !15107
  call void @skge_write32(%struct.skge_hw* %20, i32 %add19, i32 %conv23) #14, !dbg !15112
  %24 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !15113
  %25 = load i16, i16* %q.addr, align 2, !dbg !15114
  %conv24 = zext i16 %25 to i32, !dbg !15114
  %add25 = add i32 2068, %conv24, !dbg !15114
  %26 = load i32, i32* %start.addr, align 4, !dbg !15115
  %conv26 = zext i32 %26 to i64, !dbg !15115
  %27 = load i64, i64* %len.addr, align 8, !dbg !15116
  %div27 = udiv i64 %27, 3, !dbg !15117
  %add28 = add i64 %conv26, %div27, !dbg !15118
  %conv29 = trunc i64 %add28 to i32, !dbg !15115
  call void @skge_write32(%struct.skge_hw* %24, i32 %add25, i32 %conv29) #14, !dbg !15119
  br label %if.end, !dbg !15120

if.else:                                          ; preds = %lor.lhs.false
  %28 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !15121
  %29 = load i16, i16* %q.addr, align 2, !dbg !15123
  %conv30 = zext i16 %29 to i32, !dbg !15123
  %add31 = add i32 2088, %conv30, !dbg !15123
  call void @skge_write8(%struct.skge_hw* %28, i32 %add31, i8 zeroext 32) #14, !dbg !15124
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %30 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !15125
  %31 = load i16, i16* %q.addr, align 2, !dbg !15126
  %conv32 = zext i16 %31 to i32, !dbg !15126
  %add33 = add i32 2088, %conv32, !dbg !15126
  call void @skge_write8(%struct.skge_hw* %30, i32 %add33, i8 zeroext 8) #14, !dbg !15127
  ret void, !dbg !15128
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @skge_qset(%struct.skge_port* %skge, i16 zeroext %q, %struct.skge_element* %e) #2 !dbg !15129 {
entry:
  %skge.addr = alloca %struct.skge_port*, align 8
  %q.addr = alloca i16, align 2
  %e.addr = alloca %struct.skge_element*, align 8
  %hw = alloca %struct.skge_hw*, align 8
  %watermark = alloca i32, align 4
  %base = alloca i64, align 8
  store %struct.skge_port* %skge, %struct.skge_port** %skge.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.skge_port** %skge.addr, metadata !15134, metadata !DIExpression()), !dbg !15135
  store i16 %q, i16* %q.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %q.addr, metadata !15136, metadata !DIExpression()), !dbg !15137
  store %struct.skge_element* %e, %struct.skge_element** %e.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.skge_element** %e.addr, metadata !15138, metadata !DIExpression()), !dbg !15139
  call void @llvm.dbg.declare(metadata %struct.skge_hw** %hw, metadata !15140, metadata !DIExpression()), !dbg !15141
  %0 = load %struct.skge_port*, %struct.skge_port** %skge.addr, align 8, !dbg !15142
  %hw1 = getelementptr inbounds %struct.skge_port, %struct.skge_port* %0, i32 0, i32 0, !dbg !15143
  %1 = load %struct.skge_hw*, %struct.skge_hw** %hw1, align 8, !dbg !15143
  store %struct.skge_hw* %1, %struct.skge_hw** %hw, align 8, !dbg !15141
  call void @llvm.dbg.declare(metadata i32* %watermark, metadata !15144, metadata !DIExpression()), !dbg !15145
  store i32 1536, i32* %watermark, align 4, !dbg !15145
  call void @llvm.dbg.declare(metadata i64* %base, metadata !15146, metadata !DIExpression()), !dbg !15147
  %2 = load %struct.skge_port*, %struct.skge_port** %skge.addr, align 8, !dbg !15148
  %dma = getelementptr inbounds %struct.skge_port, %struct.skge_port* %2, i32 0, i32 18, !dbg !15149
  %3 = load i64, i64* %dma, align 8, !dbg !15149
  %4 = load %struct.skge_element*, %struct.skge_element** %e.addr, align 8, !dbg !15150
  %desc = getelementptr inbounds %struct.skge_element, %struct.skge_element* %4, i32 0, i32 1, !dbg !15151
  %5 = load i8*, i8** %desc, align 8, !dbg !15151
  %6 = load %struct.skge_port*, %struct.skge_port** %skge.addr, align 8, !dbg !15152
  %mem = getelementptr inbounds %struct.skge_port, %struct.skge_port* %6, i32 0, i32 17, !dbg !15153
  %7 = load i8*, i8** %mem, align 8, !dbg !15153
  %sub.ptr.lhs.cast = ptrtoint i8* %5 to i64, !dbg !15154
  %sub.ptr.rhs.cast = ptrtoint i8* %7 to i64, !dbg !15154
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !15154
  %add = add i64 %3, %sub.ptr.sub, !dbg !15155
  store i64 %add, i64* %base, align 8, !dbg !15147
  %8 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !15156
  %call = call zeroext i16 @skge_read16(%struct.skge_hw* %8, i32 4) #14, !dbg !15158
  %conv = zext i16 %call to i32, !dbg !15158
  %and = and i32 %conv, 768, !dbg !15159
  %cmp = icmp eq i32 %and, 0, !dbg !15160
  br i1 %cmp, label %if.then, label %if.end, !dbg !15161

if.then:                                          ; preds = %entry
  %9 = load i32, i32* %watermark, align 4, !dbg !15162
  %div = udiv i32 %9, 2, !dbg !15162
  store i32 %div, i32* %watermark, align 4, !dbg !15162
  br label %if.end, !dbg !15163

if.end:                                           ; preds = %if.then, %entry
  %10 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !15164
  %11 = load i16, i16* %q.addr, align 2, !dbg !15165
  %conv3 = zext i16 %11 to i32, !dbg !15165
  %add4 = add i32 1024, %conv3, !dbg !15165
  %add5 = add i32 %add4, 52, !dbg !15165
  call void @skge_write32(%struct.skge_hw* %10, i32 %add5, i32 2796032) #14, !dbg !15166
  %12 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !15167
  %13 = load i16, i16* %q.addr, align 2, !dbg !15168
  %conv6 = zext i16 %13 to i32, !dbg !15168
  %add7 = add i32 1024, %conv6, !dbg !15168
  %add8 = add i32 %add7, 56, !dbg !15168
  %14 = load i32, i32* %watermark, align 4, !dbg !15169
  call void @skge_write32(%struct.skge_hw* %12, i32 %add8, i32 %14) #14, !dbg !15170
  %15 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !15171
  %16 = load i16, i16* %q.addr, align 2, !dbg !15172
  %conv9 = zext i16 %16 to i32, !dbg !15172
  %add10 = add i32 1024, %conv9, !dbg !15172
  %add11 = add i32 %add10, 36, !dbg !15172
  %17 = load i64, i64* %base, align 8, !dbg !15173
  %shr = lshr i64 %17, 32, !dbg !15174
  %conv12 = trunc i64 %shr to i32, !dbg !15175
  call void @skge_write32(%struct.skge_hw* %15, i32 %add11, i32 %conv12) #14, !dbg !15176
  %18 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !15177
  %19 = load i16, i16* %q.addr, align 2, !dbg !15178
  %conv13 = zext i16 %19 to i32, !dbg !15178
  %add14 = add i32 1024, %conv13, !dbg !15178
  %add15 = add i32 %add14, 32, !dbg !15178
  %20 = load i64, i64* %base, align 8, !dbg !15179
  %conv16 = trunc i64 %20 to i32, !dbg !15180
  call void @skge_write32(%struct.skge_hw* %18, i32 %add15, i32 %conv16) #14, !dbg !15181
  ret void, !dbg !15182
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @skge_led(%struct.skge_port* %skge, i32 %mode) #2 !dbg !15183 {
entry:
  %skge.addr = alloca %struct.skge_port*, align 8
  %mode.addr = alloca i32, align 4
  %hw = alloca %struct.skge_hw*, align 8
  %port = alloca i32, align 4
  store %struct.skge_port* %skge, %struct.skge_port** %skge.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.skge_port** %skge.addr, metadata !15186, metadata !DIExpression()), !dbg !15187
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !15188, metadata !DIExpression()), !dbg !15189
  call void @llvm.dbg.declare(metadata %struct.skge_hw** %hw, metadata !15190, metadata !DIExpression()), !dbg !15191
  %0 = load %struct.skge_port*, %struct.skge_port** %skge.addr, align 8, !dbg !15192
  %hw1 = getelementptr inbounds %struct.skge_port, %struct.skge_port* %0, i32 0, i32 0, !dbg !15193
  %1 = load %struct.skge_hw*, %struct.skge_hw** %hw1, align 8, !dbg !15193
  store %struct.skge_hw* %1, %struct.skge_hw** %hw, align 8, !dbg !15191
  call void @llvm.dbg.declare(metadata i32* %port, metadata !15194, metadata !DIExpression()), !dbg !15195
  %2 = load %struct.skge_port*, %struct.skge_port** %skge.addr, align 8, !dbg !15196
  %port2 = getelementptr inbounds %struct.skge_port, %struct.skge_port* %2, i32 0, i32 3, !dbg !15197
  %3 = load i32, i32* %port2, align 8, !dbg !15197
  store i32 %3, i32* %port, align 4, !dbg !15195
  %4 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !15198
  %phy_lock = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %4, i32 0, i32 13, !dbg !15199
  call void @spin_lock_bh(%struct.spinlock* %phy_lock) #14, !dbg !15200
  %5 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !15201
  %call = call zeroext i1 @is_genesis(%struct.skge_hw* %5) #14, !dbg !15203
  br i1 %call, label %if.then, label %if.else44, !dbg !15204

if.then:                                          ; preds = %entry
  %6 = load i32, i32* %mode.addr, align 4, !dbg !15205
  switch i32 %6, label %sw.epilog [
    i32 0, label %sw.bb
    i32 1, label %sw.bb14
    i32 2, label %sw.bb23
  ], !dbg !15207

sw.bb:                                            ; preds = %if.then
  %7 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !15208
  %phy_type = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %7, i32 0, i32 9, !dbg !15211
  %8 = load i8, i8* %phy_type, align 4, !dbg !15211
  %conv = zext i8 %8 to i32, !dbg !15208
  %cmp = icmp eq i32 %conv, 1, !dbg !15212
  br i1 %cmp, label %if.then4, label %if.else, !dbg !15213

if.then4:                                         ; preds = %sw.bb
  %9 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !15214
  %10 = load i32, i32* %port, align 4, !dbg !15215
  %call5 = call i32 @xm_phy_write(%struct.skge_hw* %9, i32 %10, i16 zeroext 16, i16 zeroext 8) #14, !dbg !15216
  br label %if.end, !dbg !15216

if.else:                                          ; preds = %sw.bb
  %11 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !15217
  %12 = load i32, i32* %port, align 4, !dbg !15219
  %shl = shl i32 %12, 7, !dbg !15219
  %add = add i32 %shl, 3364, !dbg !15219
  call void @skge_write32(%struct.skge_hw* %11, i32 %add, i32 0) #14, !dbg !15220
  %13 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !15221
  %14 = load i32, i32* %port, align 4, !dbg !15222
  %shl6 = shl i32 %14, 7, !dbg !15222
  %add7 = add i32 %shl6, 3368, !dbg !15222
  call void @skge_write8(%struct.skge_hw* %13, i32 %add7, i8 zeroext 2) #14, !dbg !15223
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then4
  %15 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !15224
  %16 = load i32, i32* %port, align 4, !dbg !15225
  %shl8 = shl i32 %16, 7, !dbg !15225
  %add9 = add i32 %shl8, 3132, !dbg !15225
  call void @skge_write8(%struct.skge_hw* %15, i32 %add9, i8 zeroext 1) #14, !dbg !15226
  %17 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !15227
  %18 = load i32, i32* %port, align 4, !dbg !15228
  %shl10 = shl i32 %18, 7, !dbg !15228
  %add11 = add i32 %shl10, 3108, !dbg !15228
  call void @skge_write32(%struct.skge_hw* %17, i32 %add11, i32 0) #14, !dbg !15229
  %19 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !15230
  %20 = load i32, i32* %port, align 4, !dbg !15231
  %shl12 = shl i32 %20, 7, !dbg !15231
  %add13 = add i32 %shl12, 3112, !dbg !15231
  call void @skge_write8(%struct.skge_hw* %19, i32 %add13, i8 zeroext 2) #14, !dbg !15232
  br label %sw.epilog, !dbg !15233

sw.bb14:                                          ; preds = %if.then
  %21 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !15234
  %22 = load i32, i32* %port, align 4, !dbg !15235
  %shl15 = shl i32 %22, 7, !dbg !15235
  %add16 = add i32 %shl15, 3132, !dbg !15235
  call void @skge_write8(%struct.skge_hw* %21, i32 %add16, i8 zeroext 2) #14, !dbg !15236
  %23 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !15237
  %24 = load i32, i32* %port, align 4, !dbg !15238
  %shl17 = shl i32 %24, 7, !dbg !15238
  %add18 = add i32 %shl17, 3132, !dbg !15238
  call void @skge_write8(%struct.skge_hw* %23, i32 %add18, i8 zeroext 8) #14, !dbg !15239
  %25 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !15240
  %26 = load i32, i32* %port, align 4, !dbg !15241
  %shl19 = shl i32 %26, 7, !dbg !15241
  %add20 = add i32 %shl19, 3112, !dbg !15241
  call void @skge_write8(%struct.skge_hw* %25, i32 %add20, i8 zeroext 4) #14, !dbg !15242
  %27 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !15243
  %28 = load i32, i32* %port, align 4, !dbg !15244
  %shl21 = shl i32 %28, 7, !dbg !15244
  %add22 = add i32 %shl21, 3368, !dbg !15244
  call void @skge_write8(%struct.skge_hw* %27, i32 %add22, i8 zeroext 4) #14, !dbg !15245
  br label %sw.epilog, !dbg !15246

sw.bb23:                                          ; preds = %if.then
  %29 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !15247
  %30 = load i32, i32* %port, align 4, !dbg !15248
  %shl24 = shl i32 %30, 7, !dbg !15248
  %add25 = add i32 %shl24, 3113, !dbg !15248
  call void @skge_write8(%struct.skge_hw* %29, i32 %add25, i8 zeroext 4) #14, !dbg !15249
  %31 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !15250
  %32 = load i32, i32* %port, align 4, !dbg !15251
  %shl26 = shl i32 %32, 7, !dbg !15251
  %add27 = add i32 %shl26, 3108, !dbg !15251
  call void @skge_write32(%struct.skge_hw* %31, i32 %add27, i32 100) #14, !dbg !15252
  %33 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !15253
  %34 = load i32, i32* %port, align 4, !dbg !15254
  %shl28 = shl i32 %34, 7, !dbg !15254
  %add29 = add i32 %shl28, 3112, !dbg !15254
  call void @skge_write8(%struct.skge_hw* %33, i32 %add29, i8 zeroext 4) #14, !dbg !15255
  %35 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !15256
  %phy_type30 = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %35, i32 0, i32 9, !dbg !15258
  %36 = load i8, i8* %phy_type30, align 4, !dbg !15258
  %conv31 = zext i8 %36 to i32, !dbg !15256
  %cmp32 = icmp eq i32 %conv31, 1, !dbg !15259
  br i1 %cmp32, label %if.then34, label %if.else36, !dbg !15260

if.then34:                                        ; preds = %sw.bb23
  %37 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !15261
  %38 = load i32, i32* %port, align 4, !dbg !15262
  %call35 = call i32 @xm_phy_write(%struct.skge_hw* %37, i32 %38, i16 zeroext 16, i16 zeroext 16) #14, !dbg !15263
  br label %if.end43, !dbg !15263

if.else36:                                        ; preds = %sw.bb23
  %39 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !15264
  %40 = load i32, i32* %port, align 4, !dbg !15266
  %shl37 = shl i32 %40, 7, !dbg !15266
  %add38 = add i32 %shl37, 3369, !dbg !15266
  call void @skge_write8(%struct.skge_hw* %39, i32 %add38, i8 zeroext 4) #14, !dbg !15267
  %41 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !15268
  %42 = load i32, i32* %port, align 4, !dbg !15269
  %shl39 = shl i32 %42, 7, !dbg !15269
  %add40 = add i32 %shl39, 3364, !dbg !15269
  call void @skge_write32(%struct.skge_hw* %41, i32 %add40, i32 100) #14, !dbg !15270
  %43 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !15271
  %44 = load i32, i32* %port, align 4, !dbg !15272
  %shl41 = shl i32 %44, 7, !dbg !15272
  %add42 = add i32 %shl41, 3368, !dbg !15272
  call void @skge_write8(%struct.skge_hw* %43, i32 %add42, i8 zeroext 4) #14, !dbg !15273
  br label %if.end43

if.end43:                                         ; preds = %if.else36, %if.then34
  br label %sw.epilog, !dbg !15274

sw.epilog:                                        ; preds = %if.end43, %if.then, %sw.bb14, %if.end
  br label %if.end59, !dbg !15275

if.else44:                                        ; preds = %entry
  %45 = load i32, i32* %mode.addr, align 4, !dbg !15276
  switch i32 %45, label %sw.epilog58 [
    i32 0, label %sw.bb45
    i32 1, label %sw.bb48
    i32 2, label %sw.bb55
  ], !dbg !15278

sw.bb45:                                          ; preds = %if.else44
  %46 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !15279
  %47 = load i32, i32* %port, align 4, !dbg !15281
  %call46 = call i32 @gm_phy_write(%struct.skge_hw* %46, i32 %47, i16 zeroext 24, i16 zeroext 0) #14, !dbg !15282
  %48 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !15283
  %49 = load i32, i32* %port, align 4, !dbg !15284
  %call47 = call i32 @gm_phy_write(%struct.skge_hw* %48, i32 %49, i16 zeroext 25, i16 zeroext 2728) #14, !dbg !15285
  br label %sw.epilog58, !dbg !15286

sw.bb48:                                          ; preds = %if.else44
  %50 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !15287
  %51 = load i32, i32* %port, align 4, !dbg !15288
  %call49 = call i32 @gm_phy_write(%struct.skge_hw* %50, i32 %51, i16 zeroext 24, i16 zeroext 16645) #14, !dbg !15289
  %52 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !15290
  %53 = load i32, i32* %port, align 4, !dbg !15291
  %54 = load %struct.skge_port*, %struct.skge_port** %skge.addr, align 8, !dbg !15292
  %speed = getelementptr inbounds %struct.skge_port, %struct.skge_port* %54, i32 0, i32 15, !dbg !15293
  %55 = load i16, i16* %speed, align 4, !dbg !15293
  %conv50 = zext i16 %55 to i32, !dbg !15292
  %cmp51 = icmp eq i32 %conv50, 100, !dbg !15294
  %56 = zext i1 %cmp51 to i64, !dbg !15292
  %cond = select i1 %cmp51, i32 192, i32 0, !dbg !15292
  %or = or i32 8, %cond, !dbg !15295
  %conv53 = trunc i32 %or to i16, !dbg !15296
  %call54 = call i32 @gm_phy_write(%struct.skge_hw* %52, i32 %53, i16 zeroext 25, i16 zeroext %conv53) #14, !dbg !15297
  br label %sw.epilog58, !dbg !15298

sw.bb55:                                          ; preds = %if.else44
  %57 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !15299
  %58 = load i32, i32* %port, align 4, !dbg !15300
  %call56 = call i32 @gm_phy_write(%struct.skge_hw* %57, i32 %58, i16 zeroext 24, i16 zeroext 0) #14, !dbg !15301
  %59 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !15302
  %60 = load i32, i32* %port, align 4, !dbg !15303
  %call57 = call i32 @gm_phy_write(%struct.skge_hw* %59, i32 %60, i16 zeroext 25, i16 zeroext 4092) #14, !dbg !15304
  br label %sw.epilog58, !dbg !15305

sw.epilog58:                                      ; preds = %sw.bb55, %if.else44, %sw.bb48, %sw.bb45
  br label %if.end59

if.end59:                                         ; preds = %sw.epilog58, %sw.epilog
  %61 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !15306
  %phy_lock60 = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %61, i32 0, i32 13, !dbg !15307
  call void @spin_unlock_bh(%struct.spinlock* %phy_lock60) #14, !dbg !15308
  ret void, !dbg !15309
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @napi_enable(%struct.napi_struct* %n) #2 !dbg !15310 {
entry:
  %n.addr = alloca %struct.napi_struct*, align 8
  store %struct.napi_struct* %n, %struct.napi_struct** %n.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.napi_struct** %n.addr, metadata !15313, metadata !DIExpression()), !dbg !15314
  br label %do.body, !dbg !15315

do.body:                                          ; preds = %entry
  %0 = load %struct.napi_struct*, %struct.napi_struct** %n.addr, align 8, !dbg !15316
  %state = getelementptr inbounds %struct.napi_struct, %struct.napi_struct* %0, i32 0, i32 1, !dbg !15316
  %call = call zeroext i1 @test_bit(i64 0, i64* %state) #14, !dbg !15316
  %lnot = xor i1 %call, true, !dbg !15316
  %lnot1 = xor i1 %lnot, true, !dbg !15316
  %lnot2 = xor i1 %lnot1, true, !dbg !15316
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !15316
  %conv = sext i32 %lnot.ext to i64, !dbg !15316
  %tobool = icmp ne i64 %conv, 0, !dbg !15316
  br i1 %tobool, label %if.then, label %if.end, !dbg !15319

if.then:                                          ; preds = %do.body
  br label %do.body3, !dbg !15316

do.body3:                                         ; preds = %if.then
  br label %do.body4, !dbg !15320

do.body4:                                         ; preds = %do.body3
  br label %do.end, !dbg !15322

do.end:                                           ; preds = %do.body4
  br label %do.body5, !dbg !15320

do.body5:                                         ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.51, i64 0, i64 0), i32 509, i32 0, i64 12) #10, !dbg !15324, !srcloc !15326
  br label %do.end6, !dbg !15324

do.end6:                                          ; preds = %do.body5
  br label %do.body7, !dbg !15320

do.body7:                                         ; preds = %do.end6
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 278) #10, !dbg !15327, !srcloc !15330
  unreachable, !dbg !15331

do.end8:                                          ; No predecessors!
  br label %do.end9, !dbg !15320

do.end9:                                          ; preds = %do.end8
  br label %if.end, !dbg !15320

if.end:                                           ; preds = %do.end9, %do.body
  br label %do.end10, !dbg !15319

do.end10:                                         ; preds = %if.end
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !15332, !srcloc !15333
  %1 = load %struct.napi_struct*, %struct.napi_struct** %n.addr, align 8, !dbg !15334
  %state11 = getelementptr inbounds %struct.napi_struct, %struct.napi_struct* %1, i32 0, i32 1, !dbg !15335
  call void @clear_bit(i64 0, i64* %state11) #14, !dbg !15336
  %2 = load %struct.napi_struct*, %struct.napi_struct** %n.addr, align 8, !dbg !15337
  %state12 = getelementptr inbounds %struct.napi_struct, %struct.napi_struct* %2, i32 0, i32 1, !dbg !15338
  call void @clear_bit(i64 3, i64* %state12) #14, !dbg !15339
  ret void, !dbg !15340
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @skge_rx_clean(%struct.skge_port* %skge) #2 !dbg !15341 {
entry:
  %skge.addr = alloca %struct.skge_port*, align 8
  %hw = alloca %struct.skge_hw*, align 8
  %ring = alloca %struct.skge_ring*, align 8
  %e = alloca %struct.skge_element*, align 8
  %rd = alloca %struct.skge_rx_desc*, align 8
  store %struct.skge_port* %skge, %struct.skge_port** %skge.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.skge_port** %skge.addr, metadata !15342, metadata !DIExpression()), !dbg !15343
  call void @llvm.dbg.declare(metadata %struct.skge_hw** %hw, metadata !15344, metadata !DIExpression()), !dbg !15345
  %0 = load %struct.skge_port*, %struct.skge_port** %skge.addr, align 8, !dbg !15346
  %hw1 = getelementptr inbounds %struct.skge_port, %struct.skge_port* %0, i32 0, i32 0, !dbg !15347
  %1 = load %struct.skge_hw*, %struct.skge_hw** %hw1, align 8, !dbg !15347
  store %struct.skge_hw* %1, %struct.skge_hw** %hw, align 8, !dbg !15345
  call void @llvm.dbg.declare(metadata %struct.skge_ring** %ring, metadata !15348, metadata !DIExpression()), !dbg !15349
  %2 = load %struct.skge_port*, %struct.skge_port** %skge.addr, align 8, !dbg !15350
  %rx_ring = getelementptr inbounds %struct.skge_port, %struct.skge_port* %2, i32 0, i32 6, !dbg !15351
  store %struct.skge_ring* %rx_ring, %struct.skge_ring** %ring, align 8, !dbg !15349
  call void @llvm.dbg.declare(metadata %struct.skge_element** %e, metadata !15352, metadata !DIExpression()), !dbg !15353
  %3 = load %struct.skge_ring*, %struct.skge_ring** %ring, align 8, !dbg !15354
  %start = getelementptr inbounds %struct.skge_ring, %struct.skge_ring* %3, i32 0, i32 2, !dbg !15355
  %4 = load %struct.skge_element*, %struct.skge_element** %start, align 8, !dbg !15355
  store %struct.skge_element* %4, %struct.skge_element** %e, align 8, !dbg !15356
  br label %do.body, !dbg !15357

do.body:                                          ; preds = %do.cond, %entry
  call void @llvm.dbg.declare(metadata %struct.skge_rx_desc** %rd, metadata !15358, metadata !DIExpression()), !dbg !15360
  %5 = load %struct.skge_element*, %struct.skge_element** %e, align 8, !dbg !15361
  %desc = getelementptr inbounds %struct.skge_element, %struct.skge_element* %5, i32 0, i32 1, !dbg !15362
  %6 = load i8*, i8** %desc, align 8, !dbg !15362
  %7 = bitcast i8* %6 to %struct.skge_rx_desc*, !dbg !15361
  store %struct.skge_rx_desc* %7, %struct.skge_rx_desc** %rd, align 8, !dbg !15360
  %8 = load %struct.skge_rx_desc*, %struct.skge_rx_desc** %rd, align 8, !dbg !15363
  %control = getelementptr inbounds %struct.skge_rx_desc, %struct.skge_rx_desc* %8, i32 0, i32 0, !dbg !15364
  store i32 0, i32* %control, align 4, !dbg !15365
  %9 = load %struct.skge_element*, %struct.skge_element** %e, align 8, !dbg !15366
  %skb = getelementptr inbounds %struct.skge_element, %struct.skge_element* %9, i32 0, i32 2, !dbg !15368
  %10 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !15368
  %tobool = icmp ne %struct.sk_buff* %10, null, !dbg !15366
  br i1 %tobool, label %if.then, label %if.end, !dbg !15369

if.then:                                          ; preds = %do.body
  %11 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !15370
  %pdev = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %11, i32 0, i32 1, !dbg !15370
  %12 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !15370
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %12, i32 0, i32 41, !dbg !15370
  %13 = load %struct.skge_element*, %struct.skge_element** %e, align 8, !dbg !15370
  %mapaddr = getelementptr inbounds %struct.skge_element, %struct.skge_element* %13, i32 0, i32 3, !dbg !15370
  %14 = load i64, i64* %mapaddr, align 8, !dbg !15370
  %15 = load %struct.skge_element*, %struct.skge_element** %e, align 8, !dbg !15370
  %maplen = getelementptr inbounds %struct.skge_element, %struct.skge_element* %15, i32 0, i32 4, !dbg !15370
  %16 = load i32, i32* %maplen, align 8, !dbg !15370
  %conv = zext i32 %16 to i64, !dbg !15370
  call void @dma_unmap_single_attrs(%struct.device* %dev, i64 %14, i64 %conv, i32 2, i64 0) #14, !dbg !15370
  %17 = load %struct.skge_element*, %struct.skge_element** %e, align 8, !dbg !15372
  %skb2 = getelementptr inbounds %struct.skge_element, %struct.skge_element* %17, i32 0, i32 2, !dbg !15372
  %18 = load %struct.sk_buff*, %struct.sk_buff** %skb2, align 8, !dbg !15372
  call void @consume_skb(%struct.sk_buff* %18) #14, !dbg !15372
  %19 = load %struct.skge_element*, %struct.skge_element** %e, align 8, !dbg !15373
  %skb3 = getelementptr inbounds %struct.skge_element, %struct.skge_element* %19, i32 0, i32 2, !dbg !15374
  store %struct.sk_buff* null, %struct.sk_buff** %skb3, align 8, !dbg !15375
  br label %if.end, !dbg !15376

if.end:                                           ; preds = %if.then, %do.body
  br label %do.cond, !dbg !15377

do.cond:                                          ; preds = %if.end
  %20 = load %struct.skge_element*, %struct.skge_element** %e, align 8, !dbg !15378
  %next = getelementptr inbounds %struct.skge_element, %struct.skge_element* %20, i32 0, i32 0, !dbg !15379
  %21 = load %struct.skge_element*, %struct.skge_element** %next, align 8, !dbg !15379
  store %struct.skge_element* %21, %struct.skge_element** %e, align 8, !dbg !15380
  %22 = load %struct.skge_ring*, %struct.skge_ring** %ring, align 8, !dbg !15381
  %start4 = getelementptr inbounds %struct.skge_ring, %struct.skge_ring* %22, i32 0, i32 2, !dbg !15382
  %23 = load %struct.skge_element*, %struct.skge_element** %start4, align 8, !dbg !15382
  %cmp = icmp ne %struct.skge_element* %21, %23, !dbg !15383
  br i1 %cmp, label %do.body, label %do.end, !dbg !15377, !llvm.loop !15384

do.end:                                           ; preds = %do.cond
  ret void, !dbg !15386
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dma_free_coherent(%struct.device* %dev, i64 %size, i8* %cpu_addr, i64 %dma_handle) #2 !dbg !15387 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %size.addr = alloca i64, align 8
  %cpu_addr.addr = alloca i8*, align 8
  %dma_handle.addr = alloca i64, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !15390, metadata !DIExpression()), !dbg !15391
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !15392, metadata !DIExpression()), !dbg !15393
  store i8* %cpu_addr, i8** %cpu_addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %cpu_addr.addr, metadata !15394, metadata !DIExpression()), !dbg !15395
  store i64 %dma_handle, i64* %dma_handle.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dma_handle.addr, metadata !15396, metadata !DIExpression()), !dbg !15397
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !15398
  %1 = load i64, i64* %size.addr, align 8, !dbg !15399
  %2 = load i8*, i8** %cpu_addr.addr, align 8, !dbg !15400
  %3 = load i64, i64* %dma_handle.addr, align 8, !dbg !15401
  call void @dma_free_attrs(%struct.device* %0, i64 %1, i8* %2, i64 %3, i64 0) #14, !dbg !15402
  ret void, !dbg !15403
}

; Function Attrs: noredzone
declare dso_local i8* @dma_alloc_attrs(%struct.device*, i64, i64*, i32, i64) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kcalloc(i64 %n, i64 %size, i32 %flags) #2 !dbg !15404 {
entry:
  %n.addr = alloca i64, align 8
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !15407, metadata !DIExpression()), !dbg !15408
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !15409, metadata !DIExpression()), !dbg !15410
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !15411, metadata !DIExpression()), !dbg !15412
  %0 = load i64, i64* %n.addr, align 8, !dbg !15413
  %1 = load i64, i64* %size.addr, align 8, !dbg !15414
  %2 = load i32, i32* %flags.addr, align 4, !dbg !15415
  %or = or i32 %2, 256, !dbg !15416
  %call = call i8* @kmalloc_array(i64 %0, i64 %1, i32 %or) #14, !dbg !15417
  ret i8* %call, !dbg !15418
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kmalloc_array(i64 %n, i64 %size, i32 %flags) #2 !dbg !15419 {
entry:
  %s.addr.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i, metadata !9925, metadata !DIExpression()), !dbg !15420
  %flags.addr.i17.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i17.i, metadata !9935, metadata !DIExpression()), !dbg !15424
  %size.addr.i18.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i18.i, metadata !9937, metadata !DIExpression()), !dbg !15425
  %ret.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i, metadata !9939, metadata !DIExpression()), !dbg !15426
  %retval.i12.i = alloca i32, align 4
  %flags.addr.i13.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i13.i, metadata !9941, metadata !DIExpression()), !dbg !15427
  %retval.i.i = alloca i32, align 4
  %size.addr.i11.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i11.i, metadata !9947, metadata !DIExpression()), !dbg !15429
  %size.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i, metadata !9953, metadata !DIExpression()), !dbg !15431
  %flags.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i, metadata !9962, metadata !DIExpression()), !dbg !15434
  %order.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr.i.i.i, metadata !9964, metadata !DIExpression()), !dbg !15435
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !9966, metadata !DIExpression()), !dbg !15436
  %flags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i, metadata !9968, metadata !DIExpression()), !dbg !15437
  %order.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.i.i, metadata !9970, metadata !DIExpression()), !dbg !15438
  %retval.i = alloca i8*, align 8
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !9972, metadata !DIExpression()), !dbg !15439
  %flags.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i, metadata !9974, metadata !DIExpression()), !dbg !15440
  %index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.i, metadata !9976, metadata !DIExpression()), !dbg !15441
  %retval = alloca i8*, align 8
  %n.addr = alloca i64, align 8
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  %bytes = alloca i64, align 8
  %__a = alloca i64, align 8
  %__b = alloca i64, align 8
  %__d = alloca i64*, align 8
  %tmp = alloca i8, align 1
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !15442, metadata !DIExpression()), !dbg !15443
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !15444, metadata !DIExpression()), !dbg !15445
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !15446, metadata !DIExpression()), !dbg !15447
  call void @llvm.dbg.declare(metadata i64* %bytes, metadata !15448, metadata !DIExpression()), !dbg !15449
  call void @llvm.dbg.declare(metadata i64* %__a, metadata !15450, metadata !DIExpression()), !dbg !15453
  %0 = load i64, i64* %n.addr, align 8, !dbg !15453
  store i64 %0, i64* %__a, align 8, !dbg !15453
  call void @llvm.dbg.declare(metadata i64* %__b, metadata !15454, metadata !DIExpression()), !dbg !15453
  %1 = load i64, i64* %size.addr, align 8, !dbg !15453
  store i64 %1, i64* %__b, align 8, !dbg !15453
  call void @llvm.dbg.declare(metadata i64** %__d, metadata !15455, metadata !DIExpression()), !dbg !15453
  store i64* %bytes, i64** %__d, align 8, !dbg !15453
  %cmp = icmp eq i64* %__a, %__b, !dbg !15453
  %conv = zext i1 %cmp to i32, !dbg !15453
  %2 = load i64*, i64** %__d, align 8, !dbg !15453
  %cmp1 = icmp eq i64* %__a, %2, !dbg !15453
  %conv2 = zext i1 %cmp1 to i32, !dbg !15453
  %3 = load i64, i64* %__a, align 8, !dbg !15453
  %4 = load i64, i64* %__b, align 8, !dbg !15453
  %5 = load i64*, i64** %__d, align 8, !dbg !15453
  %6 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %3, i64 %4), !dbg !15453
  %7 = extractvalue { i64, i1 } %6, 1, !dbg !15453
  %8 = extractvalue { i64, i1 } %6, 0, !dbg !15453
  store i64 %8, i64* %5, align 8, !dbg !15453
  %frombool = zext i1 %7 to i8, !dbg !15453
  store i8 %frombool, i8* %tmp, align 1, !dbg !15453
  %9 = load i8, i8* %tmp, align 1, !dbg !15453
  %tobool = trunc i8 %9 to i1, !dbg !15453
  %call = call zeroext i1 @__must_check_overflow(i1 zeroext %tobool) #14, !dbg !15456
  %lnot = xor i1 %call, true, !dbg !15456
  %lnot3 = xor i1 %lnot, true, !dbg !15456
  %lnot.ext = zext i1 %lnot3 to i32, !dbg !15456
  %conv4 = sext i32 %lnot.ext to i64, !dbg !15456
  %tobool5 = icmp ne i64 %conv4, 0, !dbg !15456
  br i1 %tobool5, label %if.then, label %if.end, !dbg !15457

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval, align 8, !dbg !15458
  br label %return, !dbg !15458

if.end:                                           ; preds = %entry
  %10 = load i64, i64* %n.addr, align 8, !dbg !15459
  %11 = call i1 @llvm.is.constant.i64(i64 %10), !dbg !15460
  br i1 %11, label %land.lhs.true, label %if.end8, !dbg !15461

land.lhs.true:                                    ; preds = %if.end
  %12 = load i64, i64* %size.addr, align 8, !dbg !15462
  %13 = call i1 @llvm.is.constant.i64(i64 %12), !dbg !15463
  br i1 %13, label %if.then6, label %if.end8, !dbg !15464

if.then6:                                         ; preds = %land.lhs.true
  %14 = load i64, i64* %bytes, align 8, !dbg !15465
  %15 = load i32, i32* %flags.addr, align 4, !dbg !15466
  store i64 %14, i64* %size.addr.i, align 8
  store i32 %15, i32* %flags.addr.i, align 4
  %16 = load i64, i64* %size.addr.i, align 8, !dbg !15467
  %17 = call i1 @llvm.is.constant.i64(i64 %16) #10, !dbg !15468
  br i1 %17, label %if.then.i, label %if.end9.i, !dbg !15469

if.then.i:                                        ; preds = %if.then6
  %18 = load i64, i64* %size.addr.i, align 8, !dbg !15470
  %cmp.i = icmp ugt i64 %18, 8192, !dbg !15471
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !15472

if.then1.i:                                       ; preds = %if.then.i
  %19 = load i64, i64* %size.addr.i, align 8, !dbg !15473
  %20 = load i32, i32* %flags.addr.i, align 4, !dbg !15474
  store i64 %19, i64* %size.addr.i.i, align 8
  store i32 %20, i32* %flags.addr.i.i, align 4
  %21 = load i64, i64* %size.addr.i.i, align 8, !dbg !15475
  %call.i.i = call i32 @get_order(i64 %21) #17, !dbg !15476
  store i32 %call.i.i, i32* %order.i.i, align 4, !dbg !15438
  %22 = load i64, i64* %size.addr.i.i, align 8, !dbg !15477
  %23 = load i32, i32* %flags.addr.i.i, align 4, !dbg !15478
  %24 = load i32, i32* %order.i.i, align 4, !dbg !15479
  store i64 %22, i64* %size.addr.i.i.i, align 8
  store i32 %23, i32* %flags.addr.i.i.i, align 4
  store i32 %24, i32* %order.addr.i.i.i, align 4
  %25 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !15480
  %26 = load i32, i32* %flags.addr.i.i.i, align 4, !dbg !15481
  %27 = load i32, i32* %order.addr.i.i.i, align 4, !dbg !15482
  %call.i.i.i = call noalias i8* @kmalloc_order(i64 %25, i32 %26, i32 %27) #16, !dbg !15483
  %ptrint.i.i.i = ptrtoint i8* %call.i.i.i to i64, !dbg !15483
  %maskedptr.i.i.i = and i64 %ptrint.i.i.i, 4095, !dbg !15483
  %maskcond.i.i.i = icmp eq i64 %maskedptr.i.i.i, 0, !dbg !15483
  call void @llvm.assume(i1 %maskcond.i.i.i) #10, !dbg !15483
  store i8* %call.i.i.i, i8** %retval.i, align 8, !dbg !15484
  br label %kmalloc.exit, !dbg !15484

if.end.i:                                         ; preds = %if.then.i
  %28 = load i64, i64* %size.addr.i, align 8, !dbg !15485
  store i64 %28, i64* %size.addr.i11.i, align 8
  %29 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15486
  %tobool.i.i = icmp ne i64 %29, 0, !dbg !15486
  br i1 %tobool.i.i, label %if.end.i.i, label %if.then.i.i, !dbg !15487

if.then.i.i:                                      ; preds = %if.end.i
  store i32 0, i32* %retval.i.i, align 4, !dbg !15488
  br label %kmalloc_index.exit.i, !dbg !15488

if.end.i.i:                                       ; preds = %if.end.i
  %30 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15489
  %cmp.i.i = icmp ule i64 %30, 8, !dbg !15490
  br i1 %cmp.i.i, label %if.then1.i.i, label %if.end2.i.i, !dbg !15491

if.then1.i.i:                                     ; preds = %if.end.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !15492
  br label %kmalloc_index.exit.i, !dbg !15492

if.end2.i.i:                                      ; preds = %if.end.i.i
  %31 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15493
  %cmp3.i.i = icmp ugt i64 %31, 64, !dbg !15494
  br i1 %cmp3.i.i, label %land.lhs.true.i.i, label %if.end6.i.i, !dbg !15495

land.lhs.true.i.i:                                ; preds = %if.end2.i.i
  %32 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15496
  %cmp4.i.i = icmp ule i64 %32, 96, !dbg !15497
  br i1 %cmp4.i.i, label %if.then5.i.i, label %if.end6.i.i, !dbg !15498

if.then5.i.i:                                     ; preds = %land.lhs.true.i.i
  store i32 1, i32* %retval.i.i, align 4, !dbg !15499
  br label %kmalloc_index.exit.i, !dbg !15499

if.end6.i.i:                                      ; preds = %land.lhs.true.i.i, %if.end2.i.i
  %33 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15500
  %cmp7.i.i = icmp ugt i64 %33, 128, !dbg !15501
  br i1 %cmp7.i.i, label %land.lhs.true8.i.i, label %if.end11.i.i, !dbg !15502

land.lhs.true8.i.i:                               ; preds = %if.end6.i.i
  %34 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15503
  %cmp9.i.i = icmp ule i64 %34, 192, !dbg !15504
  br i1 %cmp9.i.i, label %if.then10.i.i, label %if.end11.i.i, !dbg !15505

if.then10.i.i:                                    ; preds = %land.lhs.true8.i.i
  store i32 2, i32* %retval.i.i, align 4, !dbg !15506
  br label %kmalloc_index.exit.i, !dbg !15506

if.end11.i.i:                                     ; preds = %land.lhs.true8.i.i, %if.end6.i.i
  %35 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15507
  %cmp12.i.i = icmp ule i64 %35, 8, !dbg !15508
  br i1 %cmp12.i.i, label %if.then13.i.i, label %if.end14.i.i, !dbg !15509

if.then13.i.i:                                    ; preds = %if.end11.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !15510
  br label %kmalloc_index.exit.i, !dbg !15510

if.end14.i.i:                                     ; preds = %if.end11.i.i
  %36 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15511
  %cmp15.i.i = icmp ule i64 %36, 16, !dbg !15512
  br i1 %cmp15.i.i, label %if.then16.i.i, label %if.end17.i.i, !dbg !15513

if.then16.i.i:                                    ; preds = %if.end14.i.i
  store i32 4, i32* %retval.i.i, align 4, !dbg !15514
  br label %kmalloc_index.exit.i, !dbg !15514

if.end17.i.i:                                     ; preds = %if.end14.i.i
  %37 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15515
  %cmp18.i.i = icmp ule i64 %37, 32, !dbg !15516
  br i1 %cmp18.i.i, label %if.then19.i.i, label %if.end20.i.i, !dbg !15517

if.then19.i.i:                                    ; preds = %if.end17.i.i
  store i32 5, i32* %retval.i.i, align 4, !dbg !15518
  br label %kmalloc_index.exit.i, !dbg !15518

if.end20.i.i:                                     ; preds = %if.end17.i.i
  %38 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15519
  %cmp21.i.i = icmp ule i64 %38, 64, !dbg !15520
  br i1 %cmp21.i.i, label %if.then22.i.i, label %if.end23.i.i, !dbg !15521

if.then22.i.i:                                    ; preds = %if.end20.i.i
  store i32 6, i32* %retval.i.i, align 4, !dbg !15522
  br label %kmalloc_index.exit.i, !dbg !15522

if.end23.i.i:                                     ; preds = %if.end20.i.i
  %39 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15523
  %cmp24.i.i = icmp ule i64 %39, 128, !dbg !15524
  br i1 %cmp24.i.i, label %if.then25.i.i, label %if.end26.i.i, !dbg !15525

if.then25.i.i:                                    ; preds = %if.end23.i.i
  store i32 7, i32* %retval.i.i, align 4, !dbg !15526
  br label %kmalloc_index.exit.i, !dbg !15526

if.end26.i.i:                                     ; preds = %if.end23.i.i
  %40 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15527
  %cmp27.i.i = icmp ule i64 %40, 256, !dbg !15528
  br i1 %cmp27.i.i, label %if.then28.i.i, label %if.end29.i.i, !dbg !15529

if.then28.i.i:                                    ; preds = %if.end26.i.i
  store i32 8, i32* %retval.i.i, align 4, !dbg !15530
  br label %kmalloc_index.exit.i, !dbg !15530

if.end29.i.i:                                     ; preds = %if.end26.i.i
  %41 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15531
  %cmp30.i.i = icmp ule i64 %41, 512, !dbg !15532
  br i1 %cmp30.i.i, label %if.then31.i.i, label %if.end32.i.i, !dbg !15533

if.then31.i.i:                                    ; preds = %if.end29.i.i
  store i32 9, i32* %retval.i.i, align 4, !dbg !15534
  br label %kmalloc_index.exit.i, !dbg !15534

if.end32.i.i:                                     ; preds = %if.end29.i.i
  %42 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15535
  %cmp33.i.i = icmp ule i64 %42, 1024, !dbg !15536
  br i1 %cmp33.i.i, label %if.then34.i.i, label %if.end35.i.i, !dbg !15537

if.then34.i.i:                                    ; preds = %if.end32.i.i
  store i32 10, i32* %retval.i.i, align 4, !dbg !15538
  br label %kmalloc_index.exit.i, !dbg !15538

if.end35.i.i:                                     ; preds = %if.end32.i.i
  %43 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15539
  %cmp36.i.i = icmp ule i64 %43, 2048, !dbg !15540
  br i1 %cmp36.i.i, label %if.then37.i.i, label %if.end38.i.i, !dbg !15541

if.then37.i.i:                                    ; preds = %if.end35.i.i
  store i32 11, i32* %retval.i.i, align 4, !dbg !15542
  br label %kmalloc_index.exit.i, !dbg !15542

if.end38.i.i:                                     ; preds = %if.end35.i.i
  %44 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15543
  %cmp39.i.i = icmp ule i64 %44, 4096, !dbg !15544
  br i1 %cmp39.i.i, label %if.then40.i.i, label %if.end41.i.i, !dbg !15545

if.then40.i.i:                                    ; preds = %if.end38.i.i
  store i32 12, i32* %retval.i.i, align 4, !dbg !15546
  br label %kmalloc_index.exit.i, !dbg !15546

if.end41.i.i:                                     ; preds = %if.end38.i.i
  %45 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15547
  %cmp42.i.i = icmp ule i64 %45, 8192, !dbg !15548
  br i1 %cmp42.i.i, label %if.then43.i.i, label %if.end44.i.i, !dbg !15549

if.then43.i.i:                                    ; preds = %if.end41.i.i
  store i32 13, i32* %retval.i.i, align 4, !dbg !15550
  br label %kmalloc_index.exit.i, !dbg !15550

if.end44.i.i:                                     ; preds = %if.end41.i.i
  %46 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15551
  %cmp45.i.i = icmp ule i64 %46, 16384, !dbg !15552
  br i1 %cmp45.i.i, label %if.then46.i.i, label %if.end47.i.i, !dbg !15553

if.then46.i.i:                                    ; preds = %if.end44.i.i
  store i32 14, i32* %retval.i.i, align 4, !dbg !15554
  br label %kmalloc_index.exit.i, !dbg !15554

if.end47.i.i:                                     ; preds = %if.end44.i.i
  %47 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15555
  %cmp48.i.i = icmp ule i64 %47, 32768, !dbg !15556
  br i1 %cmp48.i.i, label %if.then49.i.i, label %if.end50.i.i, !dbg !15557

if.then49.i.i:                                    ; preds = %if.end47.i.i
  store i32 15, i32* %retval.i.i, align 4, !dbg !15558
  br label %kmalloc_index.exit.i, !dbg !15558

if.end50.i.i:                                     ; preds = %if.end47.i.i
  %48 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15559
  %cmp51.i.i = icmp ule i64 %48, 65536, !dbg !15560
  br i1 %cmp51.i.i, label %if.then52.i.i, label %if.end53.i.i, !dbg !15561

if.then52.i.i:                                    ; preds = %if.end50.i.i
  store i32 16, i32* %retval.i.i, align 4, !dbg !15562
  br label %kmalloc_index.exit.i, !dbg !15562

if.end53.i.i:                                     ; preds = %if.end50.i.i
  %49 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15563
  %cmp54.i.i = icmp ule i64 %49, 131072, !dbg !15564
  br i1 %cmp54.i.i, label %if.then55.i.i, label %if.end56.i.i, !dbg !15565

if.then55.i.i:                                    ; preds = %if.end53.i.i
  store i32 17, i32* %retval.i.i, align 4, !dbg !15566
  br label %kmalloc_index.exit.i, !dbg !15566

if.end56.i.i:                                     ; preds = %if.end53.i.i
  %50 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15567
  %cmp57.i.i = icmp ule i64 %50, 262144, !dbg !15568
  br i1 %cmp57.i.i, label %if.then58.i.i, label %if.end59.i.i, !dbg !15569

if.then58.i.i:                                    ; preds = %if.end56.i.i
  store i32 18, i32* %retval.i.i, align 4, !dbg !15570
  br label %kmalloc_index.exit.i, !dbg !15570

if.end59.i.i:                                     ; preds = %if.end56.i.i
  %51 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15571
  %cmp60.i.i = icmp ule i64 %51, 524288, !dbg !15572
  br i1 %cmp60.i.i, label %if.then61.i.i, label %if.end62.i.i, !dbg !15573

if.then61.i.i:                                    ; preds = %if.end59.i.i
  store i32 19, i32* %retval.i.i, align 4, !dbg !15574
  br label %kmalloc_index.exit.i, !dbg !15574

if.end62.i.i:                                     ; preds = %if.end59.i.i
  %52 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15575
  %cmp63.i.i = icmp ule i64 %52, 1048576, !dbg !15576
  br i1 %cmp63.i.i, label %if.then64.i.i, label %if.end65.i.i, !dbg !15577

if.then64.i.i:                                    ; preds = %if.end62.i.i
  store i32 20, i32* %retval.i.i, align 4, !dbg !15578
  br label %kmalloc_index.exit.i, !dbg !15578

if.end65.i.i:                                     ; preds = %if.end62.i.i
  %53 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15579
  %cmp66.i.i = icmp ule i64 %53, 2097152, !dbg !15580
  br i1 %cmp66.i.i, label %if.then67.i.i, label %if.end68.i.i, !dbg !15581

if.then67.i.i:                                    ; preds = %if.end65.i.i
  store i32 21, i32* %retval.i.i, align 4, !dbg !15582
  br label %kmalloc_index.exit.i, !dbg !15582

if.end68.i.i:                                     ; preds = %if.end65.i.i
  %54 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15583
  %cmp69.i.i = icmp ule i64 %54, 4194304, !dbg !15584
  br i1 %cmp69.i.i, label %if.then70.i.i, label %if.end71.i.i, !dbg !15585

if.then70.i.i:                                    ; preds = %if.end68.i.i
  store i32 22, i32* %retval.i.i, align 4, !dbg !15586
  br label %kmalloc_index.exit.i, !dbg !15586

if.end71.i.i:                                     ; preds = %if.end68.i.i
  %55 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15587
  %cmp72.i.i = icmp ule i64 %55, 8388608, !dbg !15588
  br i1 %cmp72.i.i, label %if.then73.i.i, label %if.end74.i.i, !dbg !15589

if.then73.i.i:                                    ; preds = %if.end71.i.i
  store i32 23, i32* %retval.i.i, align 4, !dbg !15590
  br label %kmalloc_index.exit.i, !dbg !15590

if.end74.i.i:                                     ; preds = %if.end71.i.i
  %56 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15591
  %cmp75.i.i = icmp ule i64 %56, 16777216, !dbg !15592
  br i1 %cmp75.i.i, label %if.then76.i.i, label %if.end77.i.i, !dbg !15593

if.then76.i.i:                                    ; preds = %if.end74.i.i
  store i32 24, i32* %retval.i.i, align 4, !dbg !15594
  br label %kmalloc_index.exit.i, !dbg !15594

if.end77.i.i:                                     ; preds = %if.end74.i.i
  %57 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15595
  %cmp78.i.i = icmp ule i64 %57, 33554432, !dbg !15596
  br i1 %cmp78.i.i, label %if.then79.i.i, label %if.end80.i.i, !dbg !15597

if.then79.i.i:                                    ; preds = %if.end77.i.i
  store i32 25, i32* %retval.i.i, align 4, !dbg !15598
  br label %kmalloc_index.exit.i, !dbg !15598

if.end80.i.i:                                     ; preds = %if.end77.i.i
  %58 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15599
  %cmp81.i.i = icmp ule i64 %58, 67108864, !dbg !15600
  br i1 %cmp81.i.i, label %if.then82.i.i, label %if.end83.i.i, !dbg !15601

if.then82.i.i:                                    ; preds = %if.end80.i.i
  store i32 26, i32* %retval.i.i, align 4, !dbg !15602
  br label %kmalloc_index.exit.i, !dbg !15602

if.end83.i.i:                                     ; preds = %if.end80.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.13, i64 0, i64 0), i32 382, i32 0, i64 12) #10, !dbg !15603, !srcloc !10152
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 235) #10, !dbg !15604, !srcloc !10156
  unreachable, !dbg !15605

kmalloc_index.exit.i:                             ; preds = %if.then82.i.i, %if.then79.i.i, %if.then76.i.i, %if.then73.i.i, %if.then70.i.i, %if.then67.i.i, %if.then64.i.i, %if.then61.i.i, %if.then58.i.i, %if.then55.i.i, %if.then52.i.i, %if.then49.i.i, %if.then46.i.i, %if.then43.i.i, %if.then40.i.i, %if.then37.i.i, %if.then34.i.i, %if.then31.i.i, %if.then28.i.i, %if.then25.i.i, %if.then22.i.i, %if.then19.i.i, %if.then16.i.i, %if.then13.i.i, %if.then10.i.i, %if.then5.i.i, %if.then1.i.i, %if.then.i.i
  %59 = load i32, i32* %retval.i.i, align 4, !dbg !15606
  store i32 %59, i32* %index.i, align 4, !dbg !15607
  %60 = load i32, i32* %index.i, align 4, !dbg !15608
  %tobool.i = icmp ne i32 %60, 0, !dbg !15608
  br i1 %tobool.i, label %if.end4.i, label %if.then3.i, !dbg !15609

if.then3.i:                                       ; preds = %kmalloc_index.exit.i
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i, align 8, !dbg !15610
  br label %kmalloc.exit, !dbg !15610

if.end4.i:                                        ; preds = %kmalloc_index.exit.i
  %61 = load i32, i32* %flags.addr.i, align 4, !dbg !15611
  store i32 %61, i32* %flags.addr.i13.i, align 4
  %62 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !15612
  %and.i.i = and i32 %62, 17, !dbg !15612
  %cmp.i14.i = icmp eq i32 %and.i.i, 0, !dbg !15612
  %lnot.i.i = xor i1 %cmp.i14.i, true, !dbg !15612
  %lnot.ext.i.i = zext i1 %cmp.i14.i to i32, !dbg !15612
  %conv.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !15612
  br i1 %cmp.i14.i, label %if.then.i15.i, label %if.end.i16.i, !dbg !15613

if.then.i15.i:                                    ; preds = %if.end4.i
  store i32 0, i32* %retval.i12.i, align 4, !dbg !15614
  br label %kmalloc_type.exit.i, !dbg !15614

if.end.i16.i:                                     ; preds = %if.end4.i
  %63 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !15615
  %and2.i.i = and i32 %63, 1, !dbg !15616
  %tobool3.i.i = icmp ne i32 %and2.i.i, 0, !dbg !15615
  %64 = zext i1 %tobool3.i.i to i64, !dbg !15615
  %cond.i.i = select i1 %tobool3.i.i, i32 2, i32 1, !dbg !15615
  store i32 %cond.i.i, i32* %retval.i12.i, align 4, !dbg !15617
  br label %kmalloc_type.exit.i, !dbg !15617

kmalloc_type.exit.i:                              ; preds = %if.end.i16.i, %if.then.i15.i
  %65 = load i32, i32* %retval.i12.i, align 4, !dbg !15618
  %idxprom.i = zext i32 %65 to i64, !dbg !15619
  %arrayidx.i = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i, !dbg !15619
  %66 = load i32, i32* %index.i, align 4, !dbg !15620
  %idxprom6.i = zext i32 %66 to i64, !dbg !15619
  %arrayidx7.i = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i, i64 0, i64 %idxprom6.i, !dbg !15619
  %67 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx7.i, align 8, !dbg !15619
  %68 = load i32, i32* %flags.addr.i, align 4, !dbg !15621
  %69 = load i64, i64* %size.addr.i, align 8, !dbg !15622
  store %struct.kmem_cache* %67, %struct.kmem_cache** %s.addr.i.i, align 8
  store i32 %68, i32* %flags.addr.i17.i, align 4
  store i64 %69, i64* %size.addr.i18.i, align 8
  %70 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !15623
  %71 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !15624
  %call.i19.i = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %70, i32 %71) #16, !dbg !15625
  %ptrint.i.i = ptrtoint i8* %call.i19.i to i64, !dbg !15625
  %maskedptr.i.i = and i64 %ptrint.i.i, 7, !dbg !15625
  %maskcond.i.i = icmp eq i64 %maskedptr.i.i, 0, !dbg !15625
  call void @llvm.assume(i1 %maskcond.i.i) #10, !dbg !15625
  store i8* %call.i19.i, i8** %ret.i.i, align 8, !dbg !15426
  %72 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !15626
  %73 = load i8*, i8** %ret.i.i, align 8, !dbg !15627
  %74 = load i64, i64* %size.addr.i18.i, align 8, !dbg !15628
  %75 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !15629
  %call1.i.i = call i8* @kasan_kmalloc(%struct.kmem_cache* %72, i8* %73, i64 %74, i32 %75) #16, !dbg !15630
  store i8* %call1.i.i, i8** %ret.i.i, align 8, !dbg !15631
  %76 = load i8*, i8** %ret.i.i, align 8, !dbg !15632
  store i8* %76, i8** %retval.i, align 8, !dbg !15633
  br label %kmalloc.exit, !dbg !15633

if.end9.i:                                        ; preds = %if.then6
  %77 = load i64, i64* %size.addr.i, align 8, !dbg !15634
  %78 = load i32, i32* %flags.addr.i, align 4, !dbg !15635
  %call10.i = call noalias i8* @__kmalloc(i64 %77, i32 %78) #16, !dbg !15636
  %ptrint.i = ptrtoint i8* %call10.i to i64, !dbg !15636
  %maskedptr.i = and i64 %ptrint.i, 7, !dbg !15636
  %maskcond.i = icmp eq i64 %maskedptr.i, 0, !dbg !15636
  call void @llvm.assume(i1 %maskcond.i) #10, !dbg !15636
  store i8* %call10.i, i8** %retval.i, align 8, !dbg !15637
  br label %kmalloc.exit, !dbg !15637

kmalloc.exit:                                     ; preds = %if.then1.i, %if.then3.i, %kmalloc_type.exit.i, %if.end9.i
  %79 = load i8*, i8** %retval.i, align 8, !dbg !15638
  store i8* %79, i8** %retval, align 8, !dbg !15639
  br label %return, !dbg !15639

if.end8:                                          ; preds = %land.lhs.true, %if.end
  %80 = load i64, i64* %bytes, align 8, !dbg !15640
  %81 = load i32, i32* %flags.addr, align 4, !dbg !15641
  %call9 = call noalias i8* @__kmalloc(i64 %80, i32 %81) #14, !dbg !15642
  %ptrint = ptrtoint i8* %call9 to i64, !dbg !15642
  %maskedptr = and i64 %ptrint, 7, !dbg !15642
  %maskcond = icmp eq i64 %maskedptr, 0, !dbg !15642
  call void @llvm.assume(i1 %maskcond), !dbg !15642
  store i8* %call9, i8** %retval, align 8, !dbg !15643
  br label %return, !dbg !15643

return:                                           ; preds = %if.end8, %kmalloc.exit, %if.then
  %82 = load i8*, i8** %retval, align 8, !dbg !15644
  ret i8* %82, !dbg !15644
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__must_check_overflow(i1 zeroext %overflow) #2 !dbg !15645 {
entry:
  %overflow.addr = alloca i8, align 1
  %frombool = zext i1 %overflow to i8
  store i8 %frombool, i8* %overflow.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %overflow.addr, metadata !15649, metadata !DIExpression()), !dbg !15650
  %0 = load i8, i8* %overflow.addr, align 1, !dbg !15651
  %tobool = trunc i8 %0 to i1, !dbg !15651
  %lnot = xor i1 %tobool, true, !dbg !15651
  %lnot1 = xor i1 %lnot, true, !dbg !15651
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !15651
  %conv = sext i32 %lnot.ext to i64, !dbg !15651
  %tobool2 = icmp ne i64 %conv, 0, !dbg !15651
  ret i1 %tobool2, !dbg !15652
}

; Function Attrs: nounwind readnone speculatable willreturn
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #3

; Function Attrs: noredzone
declare dso_local %struct.sk_buff* @__netdev_alloc_skb(%struct.net_device*, i32, i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @skb_reserve(%struct.sk_buff* %skb, i32 %len) #2 !dbg !15653 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  %len.addr = alloca i32, align 4
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !15656, metadata !DIExpression()), !dbg !15657
  store i32 %len, i32* %len.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %len.addr, metadata !15658, metadata !DIExpression()), !dbg !15659
  %0 = load i32, i32* %len.addr, align 4, !dbg !15660
  %1 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !15661
  %data = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %1, i32 0, i32 37, !dbg !15662
  %2 = load i8*, i8** %data, align 8, !dbg !15663
  %idx.ext = sext i32 %0 to i64, !dbg !15663
  %add.ptr = getelementptr i8, i8* %2, i64 %idx.ext, !dbg !15663
  store i8* %add.ptr, i8** %data, align 8, !dbg !15663
  %3 = load i32, i32* %len.addr, align 4, !dbg !15664
  %4 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !15665
  %tail = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %4, i32 0, i32 34, !dbg !15666
  %5 = load i32, i32* %tail, align 8, !dbg !15667
  %add = add i32 %5, %3, !dbg !15667
  store i32 %add, i32* %tail, align 8, !dbg !15667
  ret void, !dbg !15668
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @skge_rx_setup(%struct.skge_port* %skge, %struct.skge_element* %e, %struct.sk_buff* %skb, i32 %bufsize) #2 !dbg !15669 {
entry:
  %retval = alloca i32, align 4
  %skge.addr = alloca %struct.skge_port*, align 8
  %e.addr = alloca %struct.skge_element*, align 8
  %skb.addr = alloca %struct.sk_buff*, align 8
  %bufsize.addr = alloca i32, align 4
  %rd = alloca %struct.skge_rx_desc*, align 8
  %map = alloca i64, align 8
  store %struct.skge_port* %skge, %struct.skge_port** %skge.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.skge_port** %skge.addr, metadata !15672, metadata !DIExpression()), !dbg !15673
  store %struct.skge_element* %e, %struct.skge_element** %e.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.skge_element** %e.addr, metadata !15674, metadata !DIExpression()), !dbg !15675
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !15676, metadata !DIExpression()), !dbg !15677
  store i32 %bufsize, i32* %bufsize.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bufsize.addr, metadata !15678, metadata !DIExpression()), !dbg !15679
  call void @llvm.dbg.declare(metadata %struct.skge_rx_desc** %rd, metadata !15680, metadata !DIExpression()), !dbg !15681
  %0 = load %struct.skge_element*, %struct.skge_element** %e.addr, align 8, !dbg !15682
  %desc = getelementptr inbounds %struct.skge_element, %struct.skge_element* %0, i32 0, i32 1, !dbg !15683
  %1 = load i8*, i8** %desc, align 8, !dbg !15683
  %2 = bitcast i8* %1 to %struct.skge_rx_desc*, !dbg !15682
  store %struct.skge_rx_desc* %2, %struct.skge_rx_desc** %rd, align 8, !dbg !15681
  call void @llvm.dbg.declare(metadata i64* %map, metadata !15684, metadata !DIExpression()), !dbg !15685
  %3 = load %struct.skge_port*, %struct.skge_port** %skge.addr, align 8, !dbg !15686
  %hw = getelementptr inbounds %struct.skge_port, %struct.skge_port* %3, i32 0, i32 0, !dbg !15686
  %4 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !15686
  %pdev = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %4, i32 0, i32 1, !dbg !15686
  %5 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !15686
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %5, i32 0, i32 41, !dbg !15686
  %6 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !15686
  %data = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %6, i32 0, i32 37, !dbg !15686
  %7 = load i8*, i8** %data, align 8, !dbg !15686
  %8 = load i32, i32* %bufsize.addr, align 4, !dbg !15686
  %conv = zext i32 %8 to i64, !dbg !15686
  %call = call i64 @dma_map_single_attrs(%struct.device* %dev, i8* %7, i64 %conv, i32 2, i64 0) #14, !dbg !15686
  store i64 %call, i64* %map, align 8, !dbg !15687
  %9 = load %struct.skge_port*, %struct.skge_port** %skge.addr, align 8, !dbg !15688
  %hw1 = getelementptr inbounds %struct.skge_port, %struct.skge_port* %9, i32 0, i32 0, !dbg !15690
  %10 = load %struct.skge_hw*, %struct.skge_hw** %hw1, align 8, !dbg !15690
  %pdev2 = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %10, i32 0, i32 1, !dbg !15691
  %11 = load %struct.pci_dev*, %struct.pci_dev** %pdev2, align 8, !dbg !15691
  %dev3 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %11, i32 0, i32 41, !dbg !15692
  %12 = load i64, i64* %map, align 8, !dbg !15693
  %call4 = call i32 @dma_mapping_error(%struct.device* %dev3, i64 %12) #14, !dbg !15694
  %tobool = icmp ne i32 %call4, 0, !dbg !15694
  br i1 %tobool, label %if.then, label %if.end, !dbg !15695

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, align 4, !dbg !15696
  br label %return, !dbg !15696

if.end:                                           ; preds = %entry
  %13 = load i64, i64* %map, align 8, !dbg !15697
  %and = and i64 %13, 4294967295, !dbg !15697
  %conv5 = trunc i64 %and to i32, !dbg !15697
  %14 = load %struct.skge_rx_desc*, %struct.skge_rx_desc** %rd, align 8, !dbg !15698
  %dma_lo = getelementptr inbounds %struct.skge_rx_desc, %struct.skge_rx_desc* %14, i32 0, i32 2, !dbg !15699
  store i32 %conv5, i32* %dma_lo, align 4, !dbg !15700
  %15 = load i64, i64* %map, align 8, !dbg !15701
  %shr = lshr i64 %15, 16, !dbg !15701
  %shr6 = lshr i64 %shr, 16, !dbg !15701
  %conv7 = trunc i64 %shr6 to i32, !dbg !15701
  %16 = load %struct.skge_rx_desc*, %struct.skge_rx_desc** %rd, align 8, !dbg !15702
  %dma_hi = getelementptr inbounds %struct.skge_rx_desc, %struct.skge_rx_desc* %16, i32 0, i32 3, !dbg !15703
  store i32 %conv7, i32* %dma_hi, align 4, !dbg !15704
  %17 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !15705
  %18 = load %struct.skge_element*, %struct.skge_element** %e.addr, align 8, !dbg !15706
  %skb8 = getelementptr inbounds %struct.skge_element, %struct.skge_element* %18, i32 0, i32 2, !dbg !15707
  store %struct.sk_buff* %17, %struct.sk_buff** %skb8, align 8, !dbg !15708
  %19 = load %struct.skge_rx_desc*, %struct.skge_rx_desc** %rd, align 8, !dbg !15709
  %csum1_start = getelementptr inbounds %struct.skge_rx_desc, %struct.skge_rx_desc* %19, i32 0, i32 9, !dbg !15710
  store i16 14, i16* %csum1_start, align 2, !dbg !15711
  %20 = load %struct.skge_rx_desc*, %struct.skge_rx_desc** %rd, align 8, !dbg !15712
  %csum2_start = getelementptr inbounds %struct.skge_rx_desc, %struct.skge_rx_desc* %20, i32 0, i32 8, !dbg !15713
  store i16 14, i16* %csum2_start, align 4, !dbg !15714
  %21 = load %struct.skge_rx_desc*, %struct.skge_rx_desc** %rd, align 8, !dbg !15715
  %csum1 = getelementptr inbounds %struct.skge_rx_desc, %struct.skge_rx_desc* %21, i32 0, i32 7, !dbg !15716
  store i16 0, i16* %csum1, align 2, !dbg !15717
  %22 = load %struct.skge_rx_desc*, %struct.skge_rx_desc** %rd, align 8, !dbg !15718
  %csum2 = getelementptr inbounds %struct.skge_rx_desc, %struct.skge_rx_desc* %22, i32 0, i32 6, !dbg !15719
  store i16 0, i16* %csum2, align 4, !dbg !15720
  call void asm sideeffect "sfence", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !15721, !srcloc !15722
  %23 = load i32, i32* %bufsize.addr, align 4, !dbg !15723
  %or = or i32 -933888000, %23, !dbg !15724
  %24 = load %struct.skge_rx_desc*, %struct.skge_rx_desc** %rd, align 8, !dbg !15725
  %control = getelementptr inbounds %struct.skge_rx_desc, %struct.skge_rx_desc* %24, i32 0, i32 0, !dbg !15726
  store i32 %or, i32* %control, align 4, !dbg !15727
  %25 = load i64, i64* %map, align 8, !dbg !15728
  %26 = load %struct.skge_element*, %struct.skge_element** %e.addr, align 8, !dbg !15728
  %mapaddr = getelementptr inbounds %struct.skge_element, %struct.skge_element* %26, i32 0, i32 3, !dbg !15728
  store i64 %25, i64* %mapaddr, align 8, !dbg !15728
  %27 = load i32, i32* %bufsize.addr, align 4, !dbg !15729
  %28 = load %struct.skge_element*, %struct.skge_element** %e.addr, align 8, !dbg !15729
  %maplen = getelementptr inbounds %struct.skge_element, %struct.skge_element* %28, i32 0, i32 4, !dbg !15729
  store i32 %27, i32* %maplen, align 8, !dbg !15729
  store i32 0, i32* %retval, align 4, !dbg !15730
  br label %return, !dbg !15730

return:                                           ; preds = %if.end, %if.then
  %29 = load i32, i32* %retval, align 4, !dbg !15731
  ret i32 %29, !dbg !15731
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @consume_skb(%struct.sk_buff* %skb) #2 !dbg !15732 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !15733, metadata !DIExpression()), !dbg !15734
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !15735
  call void @kfree_skb(%struct.sk_buff* %0) #14, !dbg !15736
  ret void, !dbg !15737
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @dma_map_single_attrs(%struct.device* %dev, i8* %ptr, i64 %size, i32 %dir, i64 %attrs) #2 !dbg !9423 {
entry:
  %retval = alloca i64, align 8
  %dev.addr = alloca %struct.device*, align 8
  %ptr.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %dir.addr = alloca i32, align 4
  %attrs.addr = alloca i64, align 8
  %__ret_warn_once = alloca i32, align 4
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  %tmp39 = alloca i64, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !15738, metadata !DIExpression()), !dbg !15739
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !15740, metadata !DIExpression()), !dbg !15741
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !15742, metadata !DIExpression()), !dbg !15743
  store i32 %dir, i32* %dir.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dir.addr, metadata !15744, metadata !DIExpression()), !dbg !15745
  store i64 %attrs, i64* %attrs.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %attrs.addr, metadata !15746, metadata !DIExpression()), !dbg !15747
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_once, metadata !15748, metadata !DIExpression()), !dbg !15751
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !15751
  %call = call zeroext i1 @is_vmalloc_addr(i8* %0) #14, !dbg !15751
  %lnot = xor i1 %call, true, !dbg !15751
  %lnot1 = xor i1 %lnot, true, !dbg !15751
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !15751
  store i32 %lnot.ext, i32* %__ret_warn_once, align 4, !dbg !15751
  %1 = load i32, i32* %__ret_warn_once, align 4, !dbg !15752
  %tobool = icmp ne i32 %1, 0, !dbg !15752
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !15752

land.rhs:                                         ; preds = %entry
  %2 = load i8, i8* @dma_map_single_attrs.__warned, align 1, !dbg !15752
  %tobool2 = trunc i8 %2 to i1, !dbg !15752
  %lnot3 = xor i1 %tobool2, true, !dbg !15752
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %3 = phi i1 [ false, %entry ], [ %lnot3, %land.rhs ], !dbg !15754
  %lnot5 = xor i1 %3, true, !dbg !15752
  %lnot7 = xor i1 %lnot5, true, !dbg !15752
  %lnot.ext8 = zext i1 %lnot7 to i32, !dbg !15752
  %conv = sext i32 %lnot.ext8 to i64, !dbg !15752
  %tobool9 = icmp ne i64 %conv, 0, !dbg !15752
  br i1 %tobool9, label %if.then, label %if.end38, !dbg !15751

if.then:                                          ; preds = %land.end
  store i8 1, i8* @dma_map_single_attrs.__warned, align 1, !dbg !15755
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !15757, metadata !DIExpression()), !dbg !15759
  store i32 1, i32* %__ret_warn_on, align 4, !dbg !15759
  %4 = load i32, i32* %__ret_warn_on, align 4, !dbg !15760
  %tobool10 = icmp ne i32 %4, 0, !dbg !15760
  %lnot11 = xor i1 %tobool10, true, !dbg !15760
  %lnot13 = xor i1 %lnot11, true, !dbg !15760
  %lnot.ext14 = zext i1 %lnot13 to i32, !dbg !15760
  %conv15 = sext i32 %lnot.ext14 to i64, !dbg !15760
  %tobool16 = icmp ne i64 %conv15, 0, !dbg !15760
  br i1 %tobool16, label %if.then17, label %if.end, !dbg !15759

if.then17:                                        ; preds = %if.then
  br label %do.body, !dbg !15760

do.body:                                          ; preds = %if.then17
  br label %do.body18, !dbg !15762

do.body18:                                        ; preds = %do.body
  br label %do.end, !dbg !15764

do.end:                                           ; preds = %do.body18
  %5 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !15762
  %call19 = call i8* @dev_driver_string(%struct.device* %5) #14, !dbg !15762
  %6 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !15762
  %call20 = call i8* @dev_name(%struct.device* %6) #14, !dbg !15762
  call void (i8*, ...) @__warn_printk(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.48, i64 0, i64 0), i8* %call19, i8* %call20) #14, !dbg !15762
  br label %do.body21, !dbg !15762

do.body21:                                        ; preds = %do.end
  br label %do.body22, !dbg !15766

do.body22:                                        ; preds = %do.body21
  br label %do.end23, !dbg !15768

do.end23:                                         ; preds = %do.body22
  br label %do.body24, !dbg !15766

do.body24:                                        ; preds = %do.end23
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.49, i64 0, i64 0), i32 276, i32 2313, i64 12) #10, !dbg !15770, !srcloc !15772
  br label %do.end25, !dbg !15770

do.end25:                                         ; preds = %do.body24
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 240) #10, !dbg !15773, !srcloc !15775
  br label %do.body26, !dbg !15766

do.body26:                                        ; preds = %do.end25
  br label %do.end27, !dbg !15776

do.end27:                                         ; preds = %do.body26
  br label %do.end28, !dbg !15766

do.end28:                                         ; preds = %do.end27
  br label %do.body29, !dbg !15762

do.body29:                                        ; preds = %do.end28
  br label %do.end30, !dbg !15778

do.end30:                                         ; preds = %do.body29
  br label %do.end31, !dbg !15762

do.end31:                                         ; preds = %do.end30
  br label %if.end, !dbg !15762

if.end:                                           ; preds = %do.end31, %if.then
  %7 = load i32, i32* %__ret_warn_on, align 4, !dbg !15759
  %tobool32 = icmp ne i32 %7, 0, !dbg !15759
  %lnot33 = xor i1 %tobool32, true, !dbg !15759
  %lnot35 = xor i1 %lnot33, true, !dbg !15759
  %lnot.ext36 = zext i1 %lnot35 to i32, !dbg !15759
  %conv37 = sext i32 %lnot.ext36 to i64, !dbg !15759
  store i64 %conv37, i64* %tmp, align 8, !dbg !15760
  %8 = load i64, i64* %tmp, align 8, !dbg !15759
  br label %if.end38, !dbg !15755

if.end38:                                         ; preds = %if.end, %land.end
  %9 = load i32, i32* %__ret_warn_once, align 4, !dbg !15751
  %tobool40 = icmp ne i32 %9, 0, !dbg !15751
  %lnot41 = xor i1 %tobool40, true, !dbg !15751
  %lnot43 = xor i1 %lnot41, true, !dbg !15751
  %lnot.ext44 = zext i1 %lnot43 to i32, !dbg !15751
  %conv45 = sext i32 %lnot.ext44 to i64, !dbg !15751
  store i64 %conv45, i64* %tmp39, align 8, !dbg !15752
  %10 = load i64, i64* %tmp39, align 8, !dbg !15751
  %tobool46 = icmp ne i64 %10, 0, !dbg !15780
  br i1 %tobool46, label %if.then47, label %if.end48, !dbg !15781

if.then47:                                        ; preds = %if.end38
  store i64 -1, i64* %retval, align 8, !dbg !15782
  br label %return, !dbg !15782

if.end48:                                         ; preds = %if.end38
  %11 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !15783
  %12 = load i8*, i8** %ptr.addr, align 8, !dbg !15784
  %13 = load i64, i64* %size.addr, align 8, !dbg !15785
  call void @debug_dma_map_single(%struct.device* %11, i8* %12, i64 %13) #14, !dbg !15786
  %14 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !15787
  %15 = load i64, i64* @vmemmap_base, align 8, !dbg !15788
  %16 = inttoptr i64 %15 to %struct.page*, !dbg !15788
  %17 = load i8*, i8** %ptr.addr, align 8, !dbg !15788
  %18 = ptrtoint i8* %17 to i64, !dbg !15788
  %call49 = call i64 @__phys_addr_nodebug(i64 %18) #14, !dbg !15788
  %shr = lshr i64 %call49, 12, !dbg !15788
  %add.ptr = getelementptr %struct.page, %struct.page* %16, i64 %shr, !dbg !15788
  %19 = load i8*, i8** %ptr.addr, align 8, !dbg !15789
  %20 = ptrtoint i8* %19 to i64, !dbg !15789
  %and = and i64 %20, 4095, !dbg !15789
  %21 = load i64, i64* %size.addr, align 8, !dbg !15790
  %22 = load i32, i32* %dir.addr, align 4, !dbg !15791
  %23 = load i64, i64* %attrs.addr, align 8, !dbg !15792
  %call50 = call i64 @dma_map_page_attrs(%struct.device* %14, %struct.page* %add.ptr, i64 %and, i64 %21, i32 %22, i64 %23) #14, !dbg !15793
  store i64 %call50, i64* %retval, align 8, !dbg !15794
  br label %return, !dbg !15794

return:                                           ; preds = %if.end48, %if.then47
  %24 = load i64, i64* %retval, align 8, !dbg !15795
  ret i64 %24, !dbg !15795
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @dma_mapping_error(%struct.device* %dev, i64 %dma_addr) #2 !dbg !15796 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.device*, align 8
  %dma_addr.addr = alloca i64, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !15799, metadata !DIExpression()), !dbg !15800
  store i64 %dma_addr, i64* %dma_addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dma_addr.addr, metadata !15801, metadata !DIExpression()), !dbg !15802
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !15803
  %1 = load i64, i64* %dma_addr.addr, align 8, !dbg !15804
  call void @debug_dma_mapping_error(%struct.device* %0, i64 %1) #14, !dbg !15805
  %2 = load i64, i64* %dma_addr.addr, align 8, !dbg !15806
  %cmp = icmp eq i64 %2, -1, !dbg !15808
  br i1 %cmp, label %if.then, label %if.end, !dbg !15809

if.then:                                          ; preds = %entry
  store i32 -12, i32* %retval, align 4, !dbg !15810
  br label %return, !dbg !15810

if.end:                                           ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !15811
  br label %return, !dbg !15811

return:                                           ; preds = %if.end, %if.then
  %3 = load i32, i32* %retval, align 4, !dbg !15812
  ret i32 %3, !dbg !15812
}

; Function Attrs: noredzone
declare dso_local zeroext i1 @is_vmalloc_addr(i8*) #1

; Function Attrs: noredzone
declare dso_local void @__warn_printk(i8*, ...) #1

; Function Attrs: noredzone
declare dso_local i8* @dev_driver_string(%struct.device*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @debug_dma_map_single(%struct.device* %dev, i8* %addr, i64 %len) #2 !dbg !15813 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %addr.addr = alloca i8*, align 8
  %len.addr = alloca i64, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !15816, metadata !DIExpression()), !dbg !15817
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !15818, metadata !DIExpression()), !dbg !15819
  store i64 %len, i64* %len.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %len.addr, metadata !15820, metadata !DIExpression()), !dbg !15821
  ret void, !dbg !15822
}

; Function Attrs: noredzone
declare dso_local i64 @dma_map_page_attrs(%struct.device*, %struct.page*, i64, i64, i32, i64) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @__phys_addr_nodebug(i64 %x) #2 !dbg !15823 {
entry:
  %x.addr = alloca i64, align 8
  %y = alloca i64, align 8
  store i64 %x, i64* %x.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr, metadata !15827, metadata !DIExpression()), !dbg !15828
  call void @llvm.dbg.declare(metadata i64* %y, metadata !15829, metadata !DIExpression()), !dbg !15830
  %0 = load i64, i64* %x.addr, align 8, !dbg !15831
  %sub = sub i64 %0, -2147483648, !dbg !15832
  store i64 %sub, i64* %y, align 8, !dbg !15830
  %1 = load i64, i64* %y, align 8, !dbg !15833
  %2 = load i64, i64* %x.addr, align 8, !dbg !15834
  %3 = load i64, i64* %y, align 8, !dbg !15835
  %cmp = icmp ugt i64 %2, %3, !dbg !15836
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !15837

cond.true:                                        ; preds = %entry
  %4 = load i64, i64* @phys_base, align 8, !dbg !15838
  br label %cond.end, !dbg !15837

cond.false:                                       ; preds = %entry
  %5 = load i64, i64* @page_offset_base, align 8, !dbg !15839
  %sub1 = sub i64 -2147483648, %5, !dbg !15840
  br label %cond.end, !dbg !15837

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %4, %cond.true ], [ %sub1, %cond.false ], !dbg !15837
  %add = add i64 %1, %cond, !dbg !15841
  store i64 %add, i64* %x.addr, align 8, !dbg !15842
  %6 = load i64, i64* %x.addr, align 8, !dbg !15843
  ret i64 %6, !dbg !15844
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @debug_dma_mapping_error(%struct.device* %dev, i64 %dma_addr) #2 !dbg !15845 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %dma_addr.addr = alloca i64, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !15848, metadata !DIExpression()), !dbg !15849
  store i64 %dma_addr, i64* %dma_addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dma_addr.addr, metadata !15850, metadata !DIExpression()), !dbg !15851
  ret void, !dbg !15852
}

; Function Attrs: noredzone
declare dso_local void @kfree_skb(%struct.sk_buff*) #1

; Function Attrs: nounwind readnone willreturn
declare i1 @llvm.is.constant.i32(i32) #6

; Function Attrs: cold noredzone
declare dso_local void @netdev_warn(%struct.net_device*, i8*, ...) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @xm_phy_init(%struct.skge_port* %skge) #2 !dbg !15853 {
entry:
  %skge.addr = alloca %struct.skge_port*, align 8
  %hw = alloca %struct.skge_hw*, align 8
  %port = alloca i32, align 4
  %ctrl = alloca i16, align 2
  store %struct.skge_port* %skge, %struct.skge_port** %skge.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.skge_port** %skge.addr, metadata !15854, metadata !DIExpression()), !dbg !15855
  call void @llvm.dbg.declare(metadata %struct.skge_hw** %hw, metadata !15856, metadata !DIExpression()), !dbg !15857
  %0 = load %struct.skge_port*, %struct.skge_port** %skge.addr, align 8, !dbg !15858
  %hw1 = getelementptr inbounds %struct.skge_port, %struct.skge_port* %0, i32 0, i32 0, !dbg !15859
  %1 = load %struct.skge_hw*, %struct.skge_hw** %hw1, align 8, !dbg !15859
  store %struct.skge_hw* %1, %struct.skge_hw** %hw, align 8, !dbg !15857
  call void @llvm.dbg.declare(metadata i32* %port, metadata !15860, metadata !DIExpression()), !dbg !15861
  %2 = load %struct.skge_port*, %struct.skge_port** %skge.addr, align 8, !dbg !15862
  %port2 = getelementptr inbounds %struct.skge_port, %struct.skge_port* %2, i32 0, i32 3, !dbg !15863
  %3 = load i32, i32* %port2, align 8, !dbg !15863
  store i32 %3, i32* %port, align 4, !dbg !15861
  call void @llvm.dbg.declare(metadata i16* %ctrl, metadata !15864, metadata !DIExpression()), !dbg !15865
  store i16 0, i16* %ctrl, align 2, !dbg !15865
  %4 = load %struct.skge_port*, %struct.skge_port** %skge.addr, align 8, !dbg !15866
  %autoneg = getelementptr inbounds %struct.skge_port, %struct.skge_port* %4, i32 0, i32 13, !dbg !15868
  %5 = load i8, i8* %autoneg, align 2, !dbg !15868
  %conv = zext i8 %5 to i32, !dbg !15866
  %cmp = icmp eq i32 %conv, 1, !dbg !15869
  br i1 %cmp, label %if.then, label %if.else, !dbg !15870

if.then:                                          ; preds = %entry
  %6 = load %struct.skge_port*, %struct.skge_port** %skge.addr, align 8, !dbg !15871
  %advertising = getelementptr inbounds %struct.skge_port, %struct.skge_port* %6, i32 0, i32 16, !dbg !15874
  %7 = load i32, i32* %advertising, align 8, !dbg !15874
  %conv4 = zext i32 %7 to i64, !dbg !15871
  %and = and i64 %conv4, 16, !dbg !15875
  %tobool = icmp ne i64 %and, 0, !dbg !15875
  br i1 %tobool, label %if.then5, label %if.end, !dbg !15876

if.then5:                                         ; preds = %if.then
  %8 = load i16, i16* %ctrl, align 2, !dbg !15877
  %conv6 = zext i16 %8 to i32, !dbg !15877
  %or = or i32 %conv6, 64, !dbg !15877
  %conv7 = trunc i32 %or to i16, !dbg !15877
  store i16 %conv7, i16* %ctrl, align 2, !dbg !15877
  br label %if.end, !dbg !15878

if.end:                                           ; preds = %if.then5, %if.then
  %9 = load %struct.skge_port*, %struct.skge_port** %skge.addr, align 8, !dbg !15879
  %advertising8 = getelementptr inbounds %struct.skge_port, %struct.skge_port* %9, i32 0, i32 16, !dbg !15881
  %10 = load i32, i32* %advertising8, align 8, !dbg !15881
  %conv9 = zext i32 %10 to i64, !dbg !15879
  %and10 = and i64 %conv9, 32, !dbg !15882
  %tobool11 = icmp ne i64 %and10, 0, !dbg !15882
  br i1 %tobool11, label %if.then12, label %if.end16, !dbg !15883

if.then12:                                        ; preds = %if.end
  %11 = load i16, i16* %ctrl, align 2, !dbg !15884
  %conv13 = zext i16 %11 to i32, !dbg !15884
  %or14 = or i32 %conv13, 32, !dbg !15884
  %conv15 = trunc i32 %or14 to i16, !dbg !15884
  store i16 %conv15, i16* %ctrl, align 2, !dbg !15884
  br label %if.end16, !dbg !15885

if.end16:                                         ; preds = %if.then12, %if.end
  %12 = load %struct.skge_port*, %struct.skge_port** %skge.addr, align 8, !dbg !15886
  %flow_control = getelementptr inbounds %struct.skge_port, %struct.skge_port* %12, i32 0, i32 9, !dbg !15887
  %13 = load i32, i32* %flow_control, align 8, !dbg !15887
  %idxprom = zext i32 %13 to i64, !dbg !15888
  %arrayidx = getelementptr [5 x i16], [5 x i16]* @fiber_pause_map, i64 0, i64 %idxprom, !dbg !15888
  %14 = load i16, i16* %arrayidx, align 2, !dbg !15888
  %conv17 = zext i16 %14 to i32, !dbg !15888
  %15 = load i16, i16* %ctrl, align 2, !dbg !15889
  %conv18 = zext i16 %15 to i32, !dbg !15889
  %or19 = or i32 %conv18, %conv17, !dbg !15889
  %conv20 = trunc i32 %or19 to i16, !dbg !15889
  store i16 %conv20, i16* %ctrl, align 2, !dbg !15889
  %16 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !15890
  %17 = load i32, i32* %port, align 4, !dbg !15891
  %18 = load i16, i16* %ctrl, align 2, !dbg !15892
  %call = call i32 @xm_phy_write(%struct.skge_hw* %16, i32 %17, i16 zeroext 4, i16 zeroext %18) #14, !dbg !15893
  store i16 4608, i16* %ctrl, align 2, !dbg !15894
  br label %if.end29, !dbg !15895

if.else:                                          ; preds = %entry
  %19 = load %struct.skge_port*, %struct.skge_port** %skge.addr, align 8, !dbg !15896
  %duplex = getelementptr inbounds %struct.skge_port, %struct.skge_port* %19, i32 0, i32 14, !dbg !15899
  %20 = load i8, i8* %duplex, align 1, !dbg !15899
  %conv21 = zext i8 %20 to i32, !dbg !15896
  %cmp22 = icmp eq i32 %conv21, 1, !dbg !15900
  br i1 %cmp22, label %if.then24, label %if.end28, !dbg !15901

if.then24:                                        ; preds = %if.else
  %21 = load i16, i16* %ctrl, align 2, !dbg !15902
  %conv25 = zext i16 %21 to i32, !dbg !15902
  %or26 = or i32 %conv25, 256, !dbg !15902
  %conv27 = trunc i32 %or26 to i16, !dbg !15902
  store i16 %conv27, i16* %ctrl, align 2, !dbg !15902
  br label %if.end28, !dbg !15903

if.end28:                                         ; preds = %if.then24, %if.else
  br label %if.end29

if.end29:                                         ; preds = %if.end28, %if.end16
  %22 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !15904
  %23 = load i32, i32* %port, align 4, !dbg !15905
  %24 = load i16, i16* %ctrl, align 2, !dbg !15906
  %call30 = call i32 @xm_phy_write(%struct.skge_hw* %22, i32 %23, i16 zeroext 0, i16 zeroext %24) #14, !dbg !15907
  %25 = load %struct.skge_port*, %struct.skge_port** %skge.addr, align 8, !dbg !15908
  %link_timer = getelementptr inbounds %struct.skge_port, %struct.skge_port* %25, i32 0, i32 8, !dbg !15909
  %26 = load volatile i64, i64* @jiffies, align 8, !dbg !15910
  %add = add i64 %26, 250, !dbg !15911
  %call31 = call i32 @mod_timer(%struct.timer_list* %link_timer, i64 %add) #14, !dbg !15912
  ret void, !dbg !15913
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @bcom_phy_init(%struct.skge_port* %skge) #2 !dbg !9433 {
entry:
  %skge.addr = alloca %struct.skge_port*, align 8
  %hw = alloca %struct.skge_hw*, align 8
  %port = alloca i32, align 4
  %i = alloca i32, align 4
  %id1 = alloca i16, align 2
  %r = alloca i16, align 2
  %ext = alloca i16, align 2
  %ctl = alloca i16, align 2
  %adv = alloca i16, align 2
  store %struct.skge_port* %skge, %struct.skge_port** %skge.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.skge_port** %skge.addr, metadata !15914, metadata !DIExpression()), !dbg !15915
  call void @llvm.dbg.declare(metadata %struct.skge_hw** %hw, metadata !15916, metadata !DIExpression()), !dbg !15917
  %0 = load %struct.skge_port*, %struct.skge_port** %skge.addr, align 8, !dbg !15918
  %hw1 = getelementptr inbounds %struct.skge_port, %struct.skge_port* %0, i32 0, i32 0, !dbg !15919
  %1 = load %struct.skge_hw*, %struct.skge_hw** %hw1, align 8, !dbg !15919
  store %struct.skge_hw* %1, %struct.skge_hw** %hw, align 8, !dbg !15917
  call void @llvm.dbg.declare(metadata i32* %port, metadata !15920, metadata !DIExpression()), !dbg !15921
  %2 = load %struct.skge_port*, %struct.skge_port** %skge.addr, align 8, !dbg !15922
  %port2 = getelementptr inbounds %struct.skge_port, %struct.skge_port* %2, i32 0, i32 3, !dbg !15923
  %3 = load i32, i32* %port2, align 8, !dbg !15923
  store i32 %3, i32* %port, align 4, !dbg !15921
  call void @llvm.dbg.declare(metadata i32* %i, metadata !15924, metadata !DIExpression()), !dbg !15925
  call void @llvm.dbg.declare(metadata i16* %id1, metadata !15926, metadata !DIExpression()), !dbg !15927
  call void @llvm.dbg.declare(metadata i16* %r, metadata !15928, metadata !DIExpression()), !dbg !15929
  call void @llvm.dbg.declare(metadata i16* %ext, metadata !15930, metadata !DIExpression()), !dbg !15931
  call void @llvm.dbg.declare(metadata i16* %ctl, metadata !15932, metadata !DIExpression()), !dbg !15933
  %4 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !15934
  %5 = load i32, i32* %port, align 4, !dbg !15935
  %call = call zeroext i16 @xm_phy_read(%struct.skge_hw* %4, i32 %5, i16 zeroext 3) #14, !dbg !15936
  store i16 %call, i16* %id1, align 2, !dbg !15937
  %6 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !15938
  %7 = load i32, i32* %port, align 4, !dbg !15939
  %call3 = call zeroext i16 @xm_read16(%struct.skge_hw* %6, i32 %7, i32 0) #14, !dbg !15940
  store i16 %call3, i16* %r, align 2, !dbg !15941
  %8 = load i16, i16* %r, align 2, !dbg !15942
  %conv = zext i16 %8 to i32, !dbg !15942
  %or = or i32 %conv, 32, !dbg !15942
  %conv4 = trunc i32 %or to i16, !dbg !15942
  store i16 %conv4, i16* %r, align 2, !dbg !15942
  %9 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !15943
  %10 = load i32, i32* %port, align 4, !dbg !15944
  %11 = load i16, i16* %r, align 2, !dbg !15945
  call void @xm_write16(%struct.skge_hw* %9, i32 %10, i32 0, i16 zeroext %11) #14, !dbg !15946
  %12 = load i16, i16* %id1, align 2, !dbg !15947
  %conv5 = zext i16 %12 to i32, !dbg !15947
  switch i32 %conv5, label %sw.epilog [
    i32 24644, label %sw.bb
    i32 24641, label %sw.bb11
  ], !dbg !15948

sw.bb:                                            ; preds = %entry
  store i32 0, i32* %i, align 4, !dbg !15949
  br label %for.cond, !dbg !15952

for.cond:                                         ; preds = %for.inc, %sw.bb
  %13 = load i32, i32* %i, align 4, !dbg !15953
  %conv6 = sext i32 %13 to i64, !dbg !15953
  %cmp = icmp ult i64 %conv6, 6, !dbg !15955
  br i1 %cmp, label %for.body, label %for.end, !dbg !15956

for.body:                                         ; preds = %for.cond
  %14 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !15957
  %15 = load i32, i32* %port, align 4, !dbg !15958
  %16 = load i32, i32* %i, align 4, !dbg !15959
  %idxprom = sext i32 %16 to i64, !dbg !15960
  %arrayidx = getelementptr [6 x %struct.anon.132], [6 x %struct.anon.132]* @bcom_phy_init.C0hack, i64 0, i64 %idxprom, !dbg !15960
  %reg = getelementptr inbounds %struct.anon.132, %struct.anon.132* %arrayidx, i32 0, i32 0, !dbg !15961
  %17 = load i16, i16* %reg, align 4, !dbg !15961
  %18 = load i32, i32* %i, align 4, !dbg !15962
  %idxprom8 = sext i32 %18 to i64, !dbg !15963
  %arrayidx9 = getelementptr [6 x %struct.anon.132], [6 x %struct.anon.132]* @bcom_phy_init.C0hack, i64 0, i64 %idxprom8, !dbg !15963
  %val = getelementptr inbounds %struct.anon.132, %struct.anon.132* %arrayidx9, i32 0, i32 1, !dbg !15964
  %19 = load i16, i16* %val, align 2, !dbg !15964
  %call10 = call i32 @xm_phy_write(%struct.skge_hw* %14, i32 %15, i16 zeroext %17, i16 zeroext %19) #14, !dbg !15965
  br label %for.inc, !dbg !15965

for.inc:                                          ; preds = %for.body
  %20 = load i32, i32* %i, align 4, !dbg !15966
  %inc = add i32 %20, 1, !dbg !15966
  store i32 %inc, i32* %i, align 4, !dbg !15966
  br label %for.cond, !dbg !15967, !llvm.loop !15968

for.end:                                          ; preds = %for.cond
  br label %sw.epilog, !dbg !15970

sw.bb11:                                          ; preds = %entry
  store i32 0, i32* %i, align 4, !dbg !15971
  br label %for.cond12, !dbg !15973

for.cond12:                                       ; preds = %for.inc24, %sw.bb11
  %21 = load i32, i32* %i, align 4, !dbg !15974
  %conv13 = sext i32 %21 to i64, !dbg !15974
  %cmp14 = icmp ult i64 %conv13, 12, !dbg !15976
  br i1 %cmp14, label %for.body16, label %for.end26, !dbg !15977

for.body16:                                       ; preds = %for.cond12
  %22 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !15978
  %23 = load i32, i32* %port, align 4, !dbg !15979
  %24 = load i32, i32* %i, align 4, !dbg !15980
  %idxprom17 = sext i32 %24 to i64, !dbg !15981
  %arrayidx18 = getelementptr [12 x %struct.anon.132], [12 x %struct.anon.132]* @bcom_phy_init.A1hack, i64 0, i64 %idxprom17, !dbg !15981
  %reg19 = getelementptr inbounds %struct.anon.132, %struct.anon.132* %arrayidx18, i32 0, i32 0, !dbg !15982
  %25 = load i16, i16* %reg19, align 4, !dbg !15982
  %26 = load i32, i32* %i, align 4, !dbg !15983
  %idxprom20 = sext i32 %26 to i64, !dbg !15984
  %arrayidx21 = getelementptr [12 x %struct.anon.132], [12 x %struct.anon.132]* @bcom_phy_init.A1hack, i64 0, i64 %idxprom20, !dbg !15984
  %val22 = getelementptr inbounds %struct.anon.132, %struct.anon.132* %arrayidx21, i32 0, i32 1, !dbg !15985
  %27 = load i16, i16* %val22, align 2, !dbg !15985
  %call23 = call i32 @xm_phy_write(%struct.skge_hw* %22, i32 %23, i16 zeroext %25, i16 zeroext %27) #14, !dbg !15986
  br label %for.inc24, !dbg !15986

for.inc24:                                        ; preds = %for.body16
  %28 = load i32, i32* %i, align 4, !dbg !15987
  %inc25 = add i32 %28, 1, !dbg !15987
  store i32 %inc25, i32* %i, align 4, !dbg !15987
  br label %for.cond12, !dbg !15988, !llvm.loop !15989

for.end26:                                        ; preds = %for.cond12
  br label %sw.epilog, !dbg !15991

sw.epilog:                                        ; preds = %entry, %for.end26, %for.end
  %29 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !15992
  %30 = load i32, i32* %port, align 4, !dbg !15993
  %call27 = call zeroext i16 @xm_phy_read(%struct.skge_hw* %29, i32 %30, i16 zeroext 24) #14, !dbg !15994
  store i16 %call27, i16* %r, align 2, !dbg !15995
  %31 = load i16, i16* %r, align 2, !dbg !15996
  %conv28 = zext i16 %31 to i32, !dbg !15996
  %or29 = or i32 %conv28, 32, !dbg !15996
  %conv30 = trunc i32 %or29 to i16, !dbg !15996
  store i16 %conv30, i16* %r, align 2, !dbg !15996
  %32 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !15997
  %33 = load i32, i32* %port, align 4, !dbg !15998
  %34 = load i16, i16* %r, align 2, !dbg !15999
  %call31 = call i32 @xm_phy_write(%struct.skge_hw* %32, i32 %33, i16 zeroext 24, i16 zeroext %34) #14, !dbg !16000
  %35 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !16001
  %36 = load i32, i32* %port, align 4, !dbg !16002
  %call32 = call zeroext i16 @xm_read16(%struct.skge_hw* %35, i32 %36, i32 72) #14, !dbg !16003
  store i16 32, i16* %ext, align 2, !dbg !16004
  store i16 64, i16* %ctl, align 2, !dbg !16005
  %37 = load %struct.skge_port*, %struct.skge_port** %skge.addr, align 8, !dbg !16006
  %autoneg = getelementptr inbounds %struct.skge_port, %struct.skge_port* %37, i32 0, i32 13, !dbg !16008
  %38 = load i8, i8* %autoneg, align 2, !dbg !16008
  %conv33 = zext i8 %38 to i32, !dbg !16006
  %cmp34 = icmp eq i32 %conv33, 1, !dbg !16009
  br i1 %cmp34, label %if.then, label %if.else, !dbg !16010

if.then:                                          ; preds = %sw.epilog
  call void @llvm.dbg.declare(metadata i16* %adv, metadata !16011, metadata !DIExpression()), !dbg !16013
  store i16 1024, i16* %adv, align 2, !dbg !16013
  %39 = load %struct.skge_port*, %struct.skge_port** %skge.addr, align 8, !dbg !16014
  %advertising = getelementptr inbounds %struct.skge_port, %struct.skge_port* %39, i32 0, i32 16, !dbg !16016
  %40 = load i32, i32* %advertising, align 8, !dbg !16016
  %conv36 = zext i32 %40 to i64, !dbg !16014
  %and = and i64 %conv36, 16, !dbg !16017
  %tobool = icmp ne i64 %and, 0, !dbg !16017
  br i1 %tobool, label %if.then37, label %if.end, !dbg !16018

if.then37:                                        ; preds = %if.then
  %41 = load i16, i16* %adv, align 2, !dbg !16019
  %conv38 = zext i16 %41 to i32, !dbg !16019
  %or39 = or i32 %conv38, 256, !dbg !16019
  %conv40 = trunc i32 %or39 to i16, !dbg !16019
  store i16 %conv40, i16* %adv, align 2, !dbg !16019
  br label %if.end, !dbg !16020

if.end:                                           ; preds = %if.then37, %if.then
  %42 = load %struct.skge_port*, %struct.skge_port** %skge.addr, align 8, !dbg !16021
  %advertising41 = getelementptr inbounds %struct.skge_port, %struct.skge_port* %42, i32 0, i32 16, !dbg !16023
  %43 = load i32, i32* %advertising41, align 8, !dbg !16023
  %conv42 = zext i32 %43 to i64, !dbg !16021
  %and43 = and i64 %conv42, 32, !dbg !16024
  %tobool44 = icmp ne i64 %and43, 0, !dbg !16024
  br i1 %tobool44, label %if.then45, label %if.end49, !dbg !16025

if.then45:                                        ; preds = %if.end
  %44 = load i16, i16* %adv, align 2, !dbg !16026
  %conv46 = zext i16 %44 to i32, !dbg !16026
  %or47 = or i32 %conv46, 512, !dbg !16026
  %conv48 = trunc i32 %or47 to i16, !dbg !16026
  store i16 %conv48, i16* %adv, align 2, !dbg !16026
  br label %if.end49, !dbg !16027

if.end49:                                         ; preds = %if.then45, %if.end
  %45 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !16028
  %46 = load i32, i32* %port, align 4, !dbg !16029
  %47 = load i16, i16* %adv, align 2, !dbg !16030
  %call50 = call i32 @xm_phy_write(%struct.skge_hw* %45, i32 %46, i16 zeroext 9, i16 zeroext %47) #14, !dbg !16031
  %48 = load i16, i16* %ctl, align 2, !dbg !16032
  %conv51 = zext i16 %48 to i32, !dbg !16032
  %or52 = or i32 %conv51, 4608, !dbg !16032
  %conv53 = trunc i32 %or52 to i16, !dbg !16032
  store i16 %conv53, i16* %ctl, align 2, !dbg !16032
  br label %if.end63, !dbg !16033

if.else:                                          ; preds = %sw.epilog
  %49 = load %struct.skge_port*, %struct.skge_port** %skge.addr, align 8, !dbg !16034
  %duplex = getelementptr inbounds %struct.skge_port, %struct.skge_port* %49, i32 0, i32 14, !dbg !16037
  %50 = load i8, i8* %duplex, align 1, !dbg !16037
  %conv54 = zext i8 %50 to i32, !dbg !16034
  %cmp55 = icmp eq i32 %conv54, 1, !dbg !16038
  br i1 %cmp55, label %if.then57, label %if.end61, !dbg !16039

if.then57:                                        ; preds = %if.else
  %51 = load i16, i16* %ctl, align 2, !dbg !16040
  %conv58 = zext i16 %51 to i32, !dbg !16040
  %or59 = or i32 %conv58, 256, !dbg !16040
  %conv60 = trunc i32 %or59 to i16, !dbg !16040
  store i16 %conv60, i16* %ctl, align 2, !dbg !16040
  br label %if.end61, !dbg !16041

if.end61:                                         ; preds = %if.then57, %if.else
  %52 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !16042
  %53 = load i32, i32* %port, align 4, !dbg !16043
  %call62 = call i32 @xm_phy_write(%struct.skge_hw* %52, i32 %53, i16 zeroext 9, i16 zeroext 4096) #14, !dbg !16044
  br label %if.end63

if.end63:                                         ; preds = %if.end61, %if.end49
  %54 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !16045
  %55 = load i32, i32* %port, align 4, !dbg !16046
  %56 = load %struct.skge_port*, %struct.skge_port** %skge.addr, align 8, !dbg !16047
  %flow_control = getelementptr inbounds %struct.skge_port, %struct.skge_port* %56, i32 0, i32 9, !dbg !16048
  %57 = load i32, i32* %flow_control, align 8, !dbg !16048
  %idxprom64 = zext i32 %57 to i64, !dbg !16049
  %arrayidx65 = getelementptr [5 x i16], [5 x i16]* @phy_pause_map, i64 0, i64 %idxprom64, !dbg !16049
  %58 = load i16, i16* %arrayidx65, align 2, !dbg !16049
  %conv66 = zext i16 %58 to i32, !dbg !16049
  %or67 = or i32 %conv66, 1, !dbg !16050
  %conv68 = trunc i32 %or67 to i16, !dbg !16049
  %call69 = call i32 @xm_phy_write(%struct.skge_hw* %54, i32 %55, i16 zeroext 4, i16 zeroext %conv68) #14, !dbg !16051
  %59 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !16052
  %dev = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %59, i32 0, i32 4, !dbg !16054
  %60 = load i32, i32* %port, align 4, !dbg !16055
  %idxprom70 = sext i32 %60 to i64, !dbg !16052
  %arrayidx71 = getelementptr [2 x %struct.net_device*], [2 x %struct.net_device*]* %dev, i64 0, i64 %idxprom70, !dbg !16052
  %61 = load %struct.net_device*, %struct.net_device** %arrayidx71, align 8, !dbg !16052
  %mtu = getelementptr inbounds %struct.net_device, %struct.net_device* %61, i32 0, i32 44, !dbg !16056
  %62 = load i32, i32* %mtu, align 8, !dbg !16056
  %cmp72 = icmp ugt i32 %62, 1500, !dbg !16057
  br i1 %cmp72, label %if.then74, label %if.end79, !dbg !16058

if.then74:                                        ; preds = %if.end63
  %63 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !16059
  %64 = load i32, i32* %port, align 4, !dbg !16061
  %call75 = call i32 @xm_phy_write(%struct.skge_hw* %63, i32 %64, i16 zeroext 24, i16 zeroext 17408) #14, !dbg !16062
  %65 = load i16, i16* %ext, align 2, !dbg !16063
  %conv76 = zext i16 %65 to i32, !dbg !16063
  %or77 = or i32 %conv76, 1, !dbg !16063
  %conv78 = trunc i32 %or77 to i16, !dbg !16063
  store i16 %conv78, i16* %ext, align 2, !dbg !16063
  br label %if.end79, !dbg !16064

if.end79:                                         ; preds = %if.then74, %if.end63
  %66 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !16065
  %67 = load i32, i32* %port, align 4, !dbg !16066
  %68 = load i16, i16* %ext, align 2, !dbg !16067
  %call80 = call i32 @xm_phy_write(%struct.skge_hw* %66, i32 %67, i16 zeroext 16, i16 zeroext %68) #14, !dbg !16068
  %69 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !16069
  %70 = load i32, i32* %port, align 4, !dbg !16070
  %71 = load i16, i16* %ctl, align 2, !dbg !16071
  %call81 = call i32 @xm_phy_write(%struct.skge_hw* %69, i32 %70, i16 zeroext 0, i16 zeroext %71) #14, !dbg !16072
  %72 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !16073
  %73 = load i32, i32* %port, align 4, !dbg !16074
  %call82 = call i32 @xm_phy_write(%struct.skge_hw* %72, i32 %73, i16 zeroext 27, i16 zeroext -17423) #14, !dbg !16075
  ret void, !dbg !16076
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @xm_outaddr(%struct.skge_hw* %hw, i32 %port, i32 %reg, i8* %addr) #2 !dbg !16077 {
entry:
  %hw.addr = alloca %struct.skge_hw*, align 8
  %port.addr = alloca i32, align 4
  %reg.addr = alloca i32, align 4
  %addr.addr = alloca i8*, align 8
  store %struct.skge_hw* %hw, %struct.skge_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.skge_hw** %hw.addr, metadata !16078, metadata !DIExpression()), !dbg !16079
  store i32 %port, i32* %port.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %port.addr, metadata !16080, metadata !DIExpression()), !dbg !16081
  store i32 %reg, i32* %reg.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %reg.addr, metadata !16082, metadata !DIExpression()), !dbg !16083
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !16084, metadata !DIExpression()), !dbg !16085
  %0 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !16086
  %1 = load i32, i32* %port.addr, align 4, !dbg !16087
  %2 = load i32, i32* %reg.addr, align 4, !dbg !16088
  %3 = load i8*, i8** %addr.addr, align 8, !dbg !16089
  %arrayidx = getelementptr i8, i8* %3, i64 0, !dbg !16089
  %4 = load i8, i8* %arrayidx, align 1, !dbg !16089
  %conv = zext i8 %4 to i16, !dbg !16090
  %conv1 = zext i16 %conv to i32, !dbg !16090
  %5 = load i8*, i8** %addr.addr, align 8, !dbg !16091
  %arrayidx2 = getelementptr i8, i8* %5, i64 1, !dbg !16091
  %6 = load i8, i8* %arrayidx2, align 1, !dbg !16091
  %conv3 = zext i8 %6 to i16, !dbg !16092
  %conv4 = zext i16 %conv3 to i32, !dbg !16092
  %shl = shl i32 %conv4, 8, !dbg !16093
  %or = or i32 %conv1, %shl, !dbg !16094
  %conv5 = trunc i32 %or to i16, !dbg !16090
  call void @xm_write16(%struct.skge_hw* %0, i32 %1, i32 %2, i16 zeroext %conv5) #14, !dbg !16095
  %7 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !16096
  %8 = load i32, i32* %port.addr, align 4, !dbg !16097
  %9 = load i32, i32* %reg.addr, align 4, !dbg !16098
  %add = add i32 %9, 2, !dbg !16099
  %10 = load i8*, i8** %addr.addr, align 8, !dbg !16100
  %arrayidx6 = getelementptr i8, i8* %10, i64 2, !dbg !16100
  %11 = load i8, i8* %arrayidx6, align 1, !dbg !16100
  %conv7 = zext i8 %11 to i16, !dbg !16101
  %conv8 = zext i16 %conv7 to i32, !dbg !16101
  %12 = load i8*, i8** %addr.addr, align 8, !dbg !16102
  %arrayidx9 = getelementptr i8, i8* %12, i64 3, !dbg !16102
  %13 = load i8, i8* %arrayidx9, align 1, !dbg !16102
  %conv10 = zext i8 %13 to i16, !dbg !16103
  %conv11 = zext i16 %conv10 to i32, !dbg !16103
  %shl12 = shl i32 %conv11, 8, !dbg !16104
  %or13 = or i32 %conv8, %shl12, !dbg !16105
  %conv14 = trunc i32 %or13 to i16, !dbg !16101
  call void @xm_write16(%struct.skge_hw* %7, i32 %8, i32 %add, i16 zeroext %conv14) #14, !dbg !16106
  %14 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !16107
  %15 = load i32, i32* %port.addr, align 4, !dbg !16108
  %16 = load i32, i32* %reg.addr, align 4, !dbg !16109
  %add15 = add i32 %16, 4, !dbg !16110
  %17 = load i8*, i8** %addr.addr, align 8, !dbg !16111
  %arrayidx16 = getelementptr i8, i8* %17, i64 4, !dbg !16111
  %18 = load i8, i8* %arrayidx16, align 1, !dbg !16111
  %conv17 = zext i8 %18 to i16, !dbg !16112
  %conv18 = zext i16 %conv17 to i32, !dbg !16112
  %19 = load i8*, i8** %addr.addr, align 8, !dbg !16113
  %arrayidx19 = getelementptr i8, i8* %19, i64 5, !dbg !16113
  %20 = load i8, i8* %arrayidx19, align 1, !dbg !16113
  %conv20 = zext i8 %20 to i16, !dbg !16114
  %conv21 = zext i16 %conv20 to i32, !dbg !16114
  %shl22 = shl i32 %conv21, 8, !dbg !16115
  %or23 = or i32 %conv18, %shl22, !dbg !16116
  %conv24 = trunc i32 %or23 to i16, !dbg !16112
  call void @xm_write16(%struct.skge_hw* %14, i32 %15, i32 %add15, i16 zeroext %conv24) #14, !dbg !16117
  ret void, !dbg !16118
}

; Function Attrs: noredzone
declare dso_local i32 @mod_timer(%struct.timer_list*, i64) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @gma_set_addr(%struct.skge_hw* %hw, i32 %port, i32 %reg, i8* %addr) #2 !dbg !16119 {
entry:
  %hw.addr = alloca %struct.skge_hw*, align 8
  %port.addr = alloca i32, align 4
  %reg.addr = alloca i32, align 4
  %addr.addr = alloca i8*, align 8
  store %struct.skge_hw* %hw, %struct.skge_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.skge_hw** %hw.addr, metadata !16122, metadata !DIExpression()), !dbg !16123
  store i32 %port, i32* %port.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %port.addr, metadata !16124, metadata !DIExpression()), !dbg !16125
  store i32 %reg, i32* %reg.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %reg.addr, metadata !16126, metadata !DIExpression()), !dbg !16127
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !16128, metadata !DIExpression()), !dbg !16129
  %0 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !16130
  %1 = load i32, i32* %port.addr, align 4, !dbg !16131
  %2 = load i32, i32* %reg.addr, align 4, !dbg !16132
  %3 = load i8*, i8** %addr.addr, align 8, !dbg !16133
  %arrayidx = getelementptr i8, i8* %3, i64 0, !dbg !16133
  %4 = load i8, i8* %arrayidx, align 1, !dbg !16133
  %conv = zext i8 %4 to i16, !dbg !16134
  %conv1 = zext i16 %conv to i32, !dbg !16134
  %5 = load i8*, i8** %addr.addr, align 8, !dbg !16135
  %arrayidx2 = getelementptr i8, i8* %5, i64 1, !dbg !16135
  %6 = load i8, i8* %arrayidx2, align 1, !dbg !16135
  %conv3 = zext i8 %6 to i16, !dbg !16136
  %conv4 = zext i16 %conv3 to i32, !dbg !16136
  %shl = shl i32 %conv4, 8, !dbg !16137
  %or = or i32 %conv1, %shl, !dbg !16138
  %conv5 = trunc i32 %or to i16, !dbg !16134
  call void @gma_write16(%struct.skge_hw* %0, i32 %1, i32 %2, i16 zeroext %conv5) #14, !dbg !16139
  %7 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !16140
  %8 = load i32, i32* %port.addr, align 4, !dbg !16141
  %9 = load i32, i32* %reg.addr, align 4, !dbg !16142
  %add = add i32 %9, 4, !dbg !16143
  %10 = load i8*, i8** %addr.addr, align 8, !dbg !16144
  %arrayidx6 = getelementptr i8, i8* %10, i64 2, !dbg !16144
  %11 = load i8, i8* %arrayidx6, align 1, !dbg !16144
  %conv7 = zext i8 %11 to i16, !dbg !16145
  %conv8 = zext i16 %conv7 to i32, !dbg !16145
  %12 = load i8*, i8** %addr.addr, align 8, !dbg !16146
  %arrayidx9 = getelementptr i8, i8* %12, i64 3, !dbg !16146
  %13 = load i8, i8* %arrayidx9, align 1, !dbg !16146
  %conv10 = zext i8 %13 to i16, !dbg !16147
  %conv11 = zext i16 %conv10 to i32, !dbg !16147
  %shl12 = shl i32 %conv11, 8, !dbg !16148
  %or13 = or i32 %conv8, %shl12, !dbg !16149
  %conv14 = trunc i32 %or13 to i16, !dbg !16145
  call void @gma_write16(%struct.skge_hw* %7, i32 %8, i32 %add, i16 zeroext %conv14) #14, !dbg !16150
  %14 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !16151
  %15 = load i32, i32* %port.addr, align 4, !dbg !16152
  %16 = load i32, i32* %reg.addr, align 4, !dbg !16153
  %add15 = add i32 %16, 8, !dbg !16154
  %17 = load i8*, i8** %addr.addr, align 8, !dbg !16155
  %arrayidx16 = getelementptr i8, i8* %17, i64 4, !dbg !16155
  %18 = load i8, i8* %arrayidx16, align 1, !dbg !16155
  %conv17 = zext i8 %18 to i16, !dbg !16156
  %conv18 = zext i16 %conv17 to i32, !dbg !16156
  %19 = load i8*, i8** %addr.addr, align 8, !dbg !16157
  %arrayidx19 = getelementptr i8, i8* %19, i64 5, !dbg !16157
  %20 = load i8, i8* %arrayidx19, align 1, !dbg !16157
  %conv20 = zext i8 %20 to i16, !dbg !16158
  %conv21 = zext i16 %conv20 to i32, !dbg !16158
  %shl22 = shl i32 %conv21, 8, !dbg !16159
  %or23 = or i32 %conv18, %shl22, !dbg !16160
  %conv24 = trunc i32 %or23 to i16, !dbg !16156
  call void @gma_write16(%struct.skge_hw* %14, i32 %15, i32 %add15, i16 zeroext %conv24) #14, !dbg !16161
  ret void, !dbg !16162
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @is_yukon_lite_a0(%struct.skge_hw* %hw) #2 !dbg !16163 {
entry:
  %retval = alloca i32, align 4
  %hw.addr = alloca %struct.skge_hw*, align 8
  %reg = alloca i32, align 4
  %ret = alloca i32, align 4
  store %struct.skge_hw* %hw, %struct.skge_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.skge_hw** %hw.addr, metadata !16164, metadata !DIExpression()), !dbg !16165
  call void @llvm.dbg.declare(metadata i32* %reg, metadata !16166, metadata !DIExpression()), !dbg !16167
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !16168, metadata !DIExpression()), !dbg !16169
  %0 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !16170
  %chip_id = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %0, i32 0, i32 5, !dbg !16172
  %1 = load i8, i8* %chip_id, align 8, !dbg !16172
  %conv = zext i8 %1 to i32, !dbg !16170
  %cmp = icmp ne i32 %conv, 176, !dbg !16173
  br i1 %cmp, label %if.then, label %if.end, !dbg !16174

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !16175
  br label %return, !dbg !16175

if.end:                                           ; preds = %entry
  %2 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !16176
  %call = call i32 @skge_read32(%struct.skge_hw* %2, i32 288) #14, !dbg !16177
  store i32 %call, i32* %reg, align 4, !dbg !16178
  %3 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !16179
  call void @skge_write8(%struct.skge_hw* %3, i32 291, i8 zeroext -1) #14, !dbg !16180
  %4 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !16181
  %call2 = call zeroext i8 @skge_read8(%struct.skge_hw* %4, i32 291) #14, !dbg !16182
  %conv3 = zext i8 %call2 to i32, !dbg !16182
  %cmp4 = icmp ne i32 %conv3, 0, !dbg !16183
  %conv5 = zext i1 %cmp4 to i32, !dbg !16183
  store i32 %conv5, i32* %ret, align 4, !dbg !16184
  %5 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !16185
  %6 = load i32, i32* %reg, align 4, !dbg !16186
  call void @skge_write32(%struct.skge_hw* %5, i32 288, i32 %6) #14, !dbg !16187
  %7 = load i32, i32* %ret, align 4, !dbg !16188
  store i32 %7, i32* %retval, align 4, !dbg !16189
  br label %return, !dbg !16189

return:                                           ; preds = %if.end, %if.then
  %8 = load i32, i32* %retval, align 4, !dbg !16190
  ret i32 %8, !dbg !16190
}

; Function Attrs: noredzone
declare dso_local void @__local_bh_enable_ip(i64, i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @clear_bit(i64 %nr, i64* %addr) #2 !dbg !16191 {
entry:
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !16192, metadata !DIExpression()), !dbg !16194
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !16196, metadata !DIExpression()), !dbg !16197
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !12043, metadata !DIExpression()), !dbg !16198
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !12047, metadata !DIExpression()), !dbg !16200
  %nr.addr = alloca i64, align 8
  %addr.addr = alloca i64*, align 8
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !16201, metadata !DIExpression()), !dbg !16202
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !16203, metadata !DIExpression()), !dbg !16204
  %0 = load i64*, i64** %addr.addr, align 8, !dbg !16205
  %1 = load i64, i64* %nr.addr, align 8, !dbg !16206
  %div = sdiv i64 %1, 64, !dbg !16206
  %add.ptr = getelementptr i64, i64* %0, i64 %div, !dbg !16207
  %2 = bitcast i64* %add.ptr to i8*, !dbg !16205
  store i8* %2, i8** %v.addr.i, align 8
  store i64 8, i64* %size.addr.i, align 8
  %3 = load i8*, i8** %v.addr.i, align 8, !dbg !16208
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !16209
  %conv.i = trunc i64 %4 to i32, !dbg !16209
  %call.i = call zeroext i1 @kasan_check_write(i8* %3, i32 %conv.i) #16, !dbg !16210
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !16211
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !16211
  call void @kcsan_check_access(i8* %5, i64 %6, i32 5) #16, !dbg !16211
  %7 = load i64, i64* %nr.addr, align 8, !dbg !16212
  %8 = load i64*, i64** %addr.addr, align 8, !dbg !16213
  store i64 %7, i64* %nr.addr.i, align 8
  store i64* %8, i64** %addr.addr.i, align 8
  %9 = load i64, i64* %nr.addr.i, align 8, !dbg !16214
  %10 = call i1 @llvm.is.constant.i64(i64 %9) #10, !dbg !16216
  br i1 %10, label %if.then.i, label %if.else.i, !dbg !16217

if.then.i:                                        ; preds = %entry
  %11 = load i64*, i64** %addr.addr.i, align 8, !dbg !16218
  %12 = bitcast i64* %11 to i8*, !dbg !16218
  %13 = load i64, i64* %nr.addr.i, align 8, !dbg !16218
  %shr.i = ashr i64 %13, 3, !dbg !16218
  %add.ptr.i = getelementptr i8, i8* %12, i64 %shr.i, !dbg !16218
  %14 = load i64, i64* %nr.addr.i, align 8, !dbg !16220
  %and.i = and i64 %14, 7, !dbg !16220
  %sh_prom.i = trunc i64 %and.i to i32, !dbg !16220
  %shl.i = shl i32 1, %sh_prom.i, !dbg !16220
  %neg.i = xor i32 %shl.i, -1, !dbg !16221
  call void asm sideeffect "andb ${1:b},$0", "=*m,iq,*m,~{dirflag},~{fpsr},~{flags}"(i8* %add.ptr.i, i32 %neg.i, i8* %add.ptr.i) #10, !dbg !16222, !srcloc !16223
  br label %arch_clear_bit.exit, !dbg !16224

if.else.i:                                        ; preds = %entry
  %15 = load i64*, i64** %addr.addr.i, align 8, !dbg !16225
  %16 = load i64, i64* %nr.addr.i, align 8, !dbg !16227
  call void asm sideeffect " btrq  $1,$0", "*m,Ir,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %15, i64 %16) #10, !dbg !16228, !srcloc !16229
  br label %arch_clear_bit.exit

arch_clear_bit.exit:                              ; preds = %if.then.i, %if.else.i
  ret void, !dbg !16230
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dma_unmap_single_attrs(%struct.device* %dev, i64 %addr, i64 %size, i32 %dir, i64 %attrs) #2 !dbg !16231 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %addr.addr = alloca i64, align 8
  %size.addr = alloca i64, align 8
  %dir.addr = alloca i32, align 4
  %attrs.addr = alloca i64, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !16234, metadata !DIExpression()), !dbg !16235
  store i64 %addr, i64* %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %addr.addr, metadata !16236, metadata !DIExpression()), !dbg !16237
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !16238, metadata !DIExpression()), !dbg !16239
  store i32 %dir, i32* %dir.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dir.addr, metadata !16240, metadata !DIExpression()), !dbg !16241
  store i64 %attrs, i64* %attrs.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %attrs.addr, metadata !16242, metadata !DIExpression()), !dbg !16243
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !16244
  %1 = load i64, i64* %addr.addr, align 8, !dbg !16245
  %2 = load i64, i64* %size.addr, align 8, !dbg !16246
  %3 = load i32, i32* %dir.addr, align 4, !dbg !16247
  %4 = load i64, i64* %attrs.addr, align 8, !dbg !16248
  call void @dma_unmap_page_attrs(%struct.device* %0, i64 %1, i64 %2, i32 %3, i64 %4) #14, !dbg !16249
  ret void, !dbg !16250
}

; Function Attrs: noredzone
declare dso_local void @dma_unmap_page_attrs(%struct.device*, i64, i64, i32, i64) #1

; Function Attrs: noredzone
declare dso_local void @dma_free_attrs(%struct.device*, i64, i8*, i64, i64) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @netif_tx_disable(%struct.net_device* %dev) #2 !dbg !16251 {
entry:
  %dev_queue.addr.i = alloca %struct.netdev_queue*, align 8
  call void @llvm.dbg.declare(metadata %struct.netdev_queue** %dev_queue.addr.i, metadata !12018, metadata !DIExpression()), !dbg !16252
  %dev.addr = alloca %struct.net_device*, align 8
  %i = alloca i32, align 4
  %cpu = alloca i32, align 4
  %txq = alloca %struct.netdev_queue*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !16257, metadata !DIExpression()), !dbg !16258
  call void @llvm.dbg.declare(metadata i32* %i, metadata !16259, metadata !DIExpression()), !dbg !16260
  call void @llvm.dbg.declare(metadata i32* %cpu, metadata !16261, metadata !DIExpression()), !dbg !16262
  call void @local_bh_disable() #14, !dbg !16263
  store i32 0, i32* %cpu, align 4, !dbg !16264
  store i32 0, i32* %i, align 4, !dbg !16265
  br label %for.cond, !dbg !16266

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !16267
  %1 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !16268
  %num_tx_queues = getelementptr inbounds %struct.net_device, %struct.net_device* %1, i32 0, i32 87, !dbg !16269
  %2 = load i32, i32* %num_tx_queues, align 8, !dbg !16269
  %cmp = icmp ult i32 %0, %2, !dbg !16270
  br i1 %cmp, label %for.body, label %for.end, !dbg !16271

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.netdev_queue** %txq, metadata !16272, metadata !DIExpression()), !dbg !16273
  %3 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !16274
  %4 = load i32, i32* %i, align 4, !dbg !16275
  %call = call %struct.netdev_queue* @netdev_get_tx_queue(%struct.net_device* %3, i32 %4) #14, !dbg !16276
  store %struct.netdev_queue* %call, %struct.netdev_queue** %txq, align 8, !dbg !16273
  %5 = load %struct.netdev_queue*, %struct.netdev_queue** %txq, align 8, !dbg !16277
  %6 = load i32, i32* %cpu, align 4, !dbg !16278
  call void @__netif_tx_lock(%struct.netdev_queue* %5, i32 %6) #14, !dbg !16279
  %7 = load %struct.netdev_queue*, %struct.netdev_queue** %txq, align 8, !dbg !16280
  store %struct.netdev_queue* %7, %struct.netdev_queue** %dev_queue.addr.i, align 8
  %8 = load %struct.netdev_queue*, %struct.netdev_queue** %dev_queue.addr.i, align 8, !dbg !16281
  %state.i = getelementptr inbounds %struct.netdev_queue, %struct.netdev_queue* %8, i32 0, i32 10, !dbg !16282
  call void @set_bit(i64 0, i64* %state.i) #16, !dbg !16283
  %9 = load %struct.netdev_queue*, %struct.netdev_queue** %txq, align 8, !dbg !16284
  call void @__netif_tx_unlock(%struct.netdev_queue* %9) #14, !dbg !16285
  br label %for.inc, !dbg !16286

for.inc:                                          ; preds = %for.body
  %10 = load i32, i32* %i, align 4, !dbg !16287
  %inc = add i32 %10, 1, !dbg !16287
  store i32 %inc, i32* %i, align 4, !dbg !16287
  br label %for.cond, !dbg !16288, !llvm.loop !16289

for.end:                                          ; preds = %for.cond
  call void @local_bh_enable() #14, !dbg !16291
  ret void, !dbg !16292
}

; Function Attrs: noredzone
declare dso_local i32 @del_timer(%struct.timer_list*) #1

; Function Attrs: noredzone
declare dso_local void @napi_disable(%struct.napi_struct*) #1

; Function Attrs: noredzone
declare dso_local i8* @free_irq(i32, i8*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @genesis_stop(%struct.skge_port* %skge) #2 !dbg !16293 {
entry:
  %skge.addr = alloca %struct.skge_port*, align 8
  %hw = alloca %struct.skge_hw*, align 8
  %port = alloca i32, align 4
  %retries = alloca i32, align 4
  %cmd = alloca i16, align 2
  %reg = alloca i32, align 4
  store %struct.skge_port* %skge, %struct.skge_port** %skge.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.skge_port** %skge.addr, metadata !16294, metadata !DIExpression()), !dbg !16295
  call void @llvm.dbg.declare(metadata %struct.skge_hw** %hw, metadata !16296, metadata !DIExpression()), !dbg !16297
  %0 = load %struct.skge_port*, %struct.skge_port** %skge.addr, align 8, !dbg !16298
  %hw1 = getelementptr inbounds %struct.skge_port, %struct.skge_port* %0, i32 0, i32 0, !dbg !16299
  %1 = load %struct.skge_hw*, %struct.skge_hw** %hw1, align 8, !dbg !16299
  store %struct.skge_hw* %1, %struct.skge_hw** %hw, align 8, !dbg !16297
  call void @llvm.dbg.declare(metadata i32* %port, metadata !16300, metadata !DIExpression()), !dbg !16301
  %2 = load %struct.skge_port*, %struct.skge_port** %skge.addr, align 8, !dbg !16302
  %port2 = getelementptr inbounds %struct.skge_port, %struct.skge_port* %2, i32 0, i32 3, !dbg !16303
  %3 = load i32, i32* %port2, align 8, !dbg !16303
  store i32 %3, i32* %port, align 4, !dbg !16301
  call void @llvm.dbg.declare(metadata i32* %retries, metadata !16304, metadata !DIExpression()), !dbg !16305
  store i32 1000, i32* %retries, align 4, !dbg !16305
  call void @llvm.dbg.declare(metadata i16* %cmd, metadata !16306, metadata !DIExpression()), !dbg !16307
  %4 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !16308
  %5 = load i32, i32* %port, align 4, !dbg !16309
  %call = call zeroext i16 @xm_read16(%struct.skge_hw* %4, i32 %5, i32 0) #14, !dbg !16310
  store i16 %call, i16* %cmd, align 2, !dbg !16311
  %6 = load i16, i16* %cmd, align 2, !dbg !16312
  %conv = zext i16 %6 to i32, !dbg !16312
  %and = and i32 %conv, -4, !dbg !16312
  %conv3 = trunc i32 %and to i16, !dbg !16312
  store i16 %conv3, i16* %cmd, align 2, !dbg !16312
  %7 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !16313
  %8 = load i32, i32* %port, align 4, !dbg !16314
  %9 = load i16, i16* %cmd, align 2, !dbg !16315
  call void @xm_write16(%struct.skge_hw* %7, i32 %8, i32 0, i16 zeroext %9) #14, !dbg !16316
  %10 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !16317
  %11 = load i32, i32* %port, align 4, !dbg !16318
  call void @genesis_reset(%struct.skge_hw* %10, i32 %11) #14, !dbg !16319
  %12 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !16320
  %13 = load i32, i32* %port, align 4, !dbg !16321
  %cmp = icmp eq i32 %13, 0, !dbg !16322
  %14 = zext i1 %cmp to i64, !dbg !16321
  %cond = select i1 %cmp, i32 4096, i32 8192, !dbg !16321
  %conv5 = trunc i32 %cond to i16, !dbg !16321
  call void @skge_write16(%struct.skge_hw* %12, i32 496, i16 zeroext %conv5) #14, !dbg !16323
  %15 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !16324
  %16 = load i32, i32* %port, align 4, !dbg !16325
  %shl = shl i32 %16, 7, !dbg !16325
  %add = add i32 %shl, 3352, !dbg !16325
  call void @skge_write16(%struct.skge_hw* %15, i32 %add, i16 zeroext 2) #14, !dbg !16326
  br label %do.body, !dbg !16327

do.body:                                          ; preds = %do.cond, %entry
  %17 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !16328
  %18 = load i32, i32* %port, align 4, !dbg !16330
  %shl6 = shl i32 %18, 7, !dbg !16330
  %add7 = add i32 %shl6, 3352, !dbg !16330
  call void @skge_write16(%struct.skge_hw* %17, i32 %add7, i16 zeroext 1) #14, !dbg !16331
  %19 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !16332
  %20 = load i32, i32* %port, align 4, !dbg !16334
  %shl8 = shl i32 %20, 7, !dbg !16334
  %add9 = add i32 %shl8, 3352, !dbg !16334
  %call10 = call zeroext i16 @skge_read16(%struct.skge_hw* %19, i32 %add9) #14, !dbg !16335
  %conv11 = zext i16 %call10 to i32, !dbg !16335
  %and12 = and i32 %conv11, 1, !dbg !16336
  %tobool = icmp ne i32 %and12, 0, !dbg !16336
  br i1 %tobool, label %if.end, label %if.then, !dbg !16337

if.then:                                          ; preds = %do.body
  br label %do.end, !dbg !16338

if.end:                                           ; preds = %do.body
  br label %do.cond, !dbg !16339

do.cond:                                          ; preds = %if.end
  %21 = load i32, i32* %retries, align 4, !dbg !16340
  %dec = add i32 %21, -1, !dbg !16340
  store i32 %dec, i32* %retries, align 4, !dbg !16340
  %cmp13 = icmp ugt i32 %dec, 0, !dbg !16341
  br i1 %cmp13, label %do.body, label %do.end, !dbg !16339, !llvm.loop !16342

do.end:                                           ; preds = %do.cond, %if.then
  %22 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !16344
  %phy_type = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %22, i32 0, i32 9, !dbg !16346
  %23 = load i8, i8* %phy_type, align 4, !dbg !16346
  %conv15 = zext i8 %23 to i32, !dbg !16344
  %cmp16 = icmp ne i32 %conv15, 0, !dbg !16347
  br i1 %cmp16, label %if.then18, label %if.end28, !dbg !16348

if.then18:                                        ; preds = %do.end
  call void @llvm.dbg.declare(metadata i32* %reg, metadata !16349, metadata !DIExpression()), !dbg !16351
  %24 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !16352
  %call19 = call i32 @skge_read32(%struct.skge_hw* %24, i32 348) #14, !dbg !16353
  store i32 %call19, i32* %reg, align 4, !dbg !16351
  %25 = load i32, i32* %port, align 4, !dbg !16354
  %cmp20 = icmp eq i32 %25, 0, !dbg !16356
  br i1 %cmp20, label %if.then22, label %if.else, !dbg !16357

if.then22:                                        ; preds = %if.then18
  %26 = load i32, i32* %reg, align 4, !dbg !16358
  %or = or i32 %26, 65536, !dbg !16358
  store i32 %or, i32* %reg, align 4, !dbg !16358
  %27 = load i32, i32* %reg, align 4, !dbg !16360
  %and23 = and i32 %27, -2, !dbg !16360
  store i32 %and23, i32* %reg, align 4, !dbg !16360
  br label %if.end26, !dbg !16361

if.else:                                          ; preds = %if.then18
  %28 = load i32, i32* %reg, align 4, !dbg !16362
  %or24 = or i32 %28, 262144, !dbg !16362
  store i32 %or24, i32* %reg, align 4, !dbg !16362
  %29 = load i32, i32* %reg, align 4, !dbg !16364
  %and25 = and i32 %29, -5, !dbg !16364
  store i32 %and25, i32* %reg, align 4, !dbg !16364
  br label %if.end26

if.end26:                                         ; preds = %if.else, %if.then22
  %30 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !16365
  %31 = load i32, i32* %reg, align 4, !dbg !16366
  call void @skge_write32(%struct.skge_hw* %30, i32 348, i32 %31) #14, !dbg !16367
  %32 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !16368
  %call27 = call i32 @skge_read32(%struct.skge_hw* %32, i32 348) #14, !dbg !16369
  br label %if.end28, !dbg !16370

if.end28:                                         ; preds = %if.end26, %do.end
  %33 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !16371
  %34 = load i32, i32* %port, align 4, !dbg !16372
  %35 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !16373
  %36 = load i32, i32* %port, align 4, !dbg !16374
  %call29 = call zeroext i16 @xm_read16(%struct.skge_hw* %35, i32 %36, i32 0) #14, !dbg !16375
  %conv30 = zext i16 %call29 to i32, !dbg !16375
  %and31 = and i32 %conv30, -4, !dbg !16376
  %conv32 = trunc i32 %and31 to i16, !dbg !16375
  call void @xm_write16(%struct.skge_hw* %33, i32 %34, i32 0, i16 zeroext %conv32) #14, !dbg !16377
  %37 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !16378
  %38 = load i32, i32* %port, align 4, !dbg !16379
  %call33 = call zeroext i16 @xm_read16(%struct.skge_hw* %37, i32 %38, i32 0) #14, !dbg !16380
  ret void, !dbg !16381
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @yukon_stop(%struct.skge_port* %skge) #2 !dbg !16382 {
entry:
  %skge.addr = alloca %struct.skge_port*, align 8
  %hw = alloca %struct.skge_hw*, align 8
  %port = alloca i32, align 4
  store %struct.skge_port* %skge, %struct.skge_port** %skge.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.skge_port** %skge.addr, metadata !16383, metadata !DIExpression()), !dbg !16384
  call void @llvm.dbg.declare(metadata %struct.skge_hw** %hw, metadata !16385, metadata !DIExpression()), !dbg !16386
  %0 = load %struct.skge_port*, %struct.skge_port** %skge.addr, align 8, !dbg !16387
  %hw1 = getelementptr inbounds %struct.skge_port, %struct.skge_port* %0, i32 0, i32 0, !dbg !16388
  %1 = load %struct.skge_hw*, %struct.skge_hw** %hw1, align 8, !dbg !16388
  store %struct.skge_hw* %1, %struct.skge_hw** %hw, align 8, !dbg !16386
  call void @llvm.dbg.declare(metadata i32* %port, metadata !16389, metadata !DIExpression()), !dbg !16390
  %2 = load %struct.skge_port*, %struct.skge_port** %skge.addr, align 8, !dbg !16391
  %port2 = getelementptr inbounds %struct.skge_port, %struct.skge_port* %2, i32 0, i32 3, !dbg !16392
  %3 = load i32, i32* %port2, align 8, !dbg !16392
  store i32 %3, i32* %port, align 4, !dbg !16390
  %4 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !16393
  %5 = load i32, i32* %port, align 4, !dbg !16394
  %shl = shl i32 %5, 7, !dbg !16394
  %add = add i32 %shl, 3852, !dbg !16394
  call void @skge_write8(%struct.skge_hw* %4, i32 %add, i8 zeroext 0) #14, !dbg !16395
  %6 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !16396
  %7 = load i32, i32* %port, align 4, !dbg !16397
  call void @yukon_reset(%struct.skge_hw* %6, i32 %7) #14, !dbg !16398
  %8 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !16399
  %9 = load i32, i32* %port, align 4, !dbg !16400
  %10 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !16401
  %11 = load i32, i32* %port, align 4, !dbg !16402
  %call = call zeroext i16 @gma_read16(%struct.skge_hw* %10, i32 %11, i32 4) #14, !dbg !16403
  %conv = zext i16 %call to i32, !dbg !16403
  %and = and i32 %conv, -6145, !dbg !16404
  %conv3 = trunc i32 %and to i16, !dbg !16403
  call void @gma_write16(%struct.skge_hw* %8, i32 %9, i32 4, i16 zeroext %conv3) #14, !dbg !16405
  %12 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !16406
  %13 = load i32, i32* %port, align 4, !dbg !16407
  %call4 = call zeroext i16 @gma_read16(%struct.skge_hw* %12, i32 %13, i32 4) #14, !dbg !16408
  %14 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !16409
  %15 = load i32, i32* %port, align 4, !dbg !16410
  call void @yukon_suspend(%struct.skge_hw* %14, i32 %15) #14, !dbg !16411
  %16 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !16412
  %17 = load i32, i32* %port, align 4, !dbg !16413
  %shl5 = shl i32 %17, 7, !dbg !16413
  %add6 = add i32 %shl5, 3844, !dbg !16413
  call void @skge_write8(%struct.skge_hw* %16, i32 %add6, i8 zeroext 1) #14, !dbg !16414
  %18 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !16415
  %19 = load i32, i32* %port, align 4, !dbg !16416
  %shl7 = shl i32 %19, 7, !dbg !16416
  %add8 = add i32 %shl7, 3840, !dbg !16416
  call void @skge_write8(%struct.skge_hw* %18, i32 %add8, i8 zeroext 1) #14, !dbg !16417
  ret void, !dbg !16418
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @skge_rx_stop(%struct.skge_hw* %hw, i32 %port) #2 !dbg !16419 {
entry:
  %hw.addr = alloca %struct.skge_hw*, align 8
  %port.addr = alloca i32, align 4
  store %struct.skge_hw* %hw, %struct.skge_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.skge_hw** %hw.addr, metadata !16420, metadata !DIExpression()), !dbg !16421
  store i32 %port, i32* %port.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %port.addr, metadata !16422, metadata !DIExpression()), !dbg !16423
  %0 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !16424
  %1 = load i32, i32* %port.addr, align 4, !dbg !16425
  %idxprom = sext i32 %1 to i64, !dbg !16425
  %arrayidx = getelementptr [2 x i32], [2 x i32]* @rxqaddr, i64 0, i64 %idxprom, !dbg !16425
  %2 = load i32, i32* %arrayidx, align 4, !dbg !16425
  %add = add i32 1024, %2, !dbg !16425
  %add1 = add i32 %add, 52, !dbg !16425
  call void @skge_write8(%struct.skge_hw* %0, i32 %add1, i8 zeroext 32) #14, !dbg !16426
  %3 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !16427
  %4 = load i32, i32* %port.addr, align 4, !dbg !16428
  %tobool = icmp ne i32 %4, 0, !dbg !16428
  %5 = zext i1 %tobool to i64, !dbg !16428
  %cond = select i1 %tobool, i32 128, i32 0, !dbg !16428
  %add2 = add i32 2088, %cond, !dbg !16428
  call void @skge_write32(%struct.skge_hw* %3, i32 %add2, i32 5) #14, !dbg !16429
  %6 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !16430
  %7 = load i32, i32* %port.addr, align 4, !dbg !16431
  %idxprom3 = sext i32 %7 to i64, !dbg !16431
  %arrayidx4 = getelementptr [2 x i32], [2 x i32]* @rxqaddr, i64 0, i64 %idxprom3, !dbg !16431
  %8 = load i32, i32* %arrayidx4, align 4, !dbg !16431
  %add5 = add i32 1024, %8, !dbg !16431
  %add6 = add i32 %add5, 52, !dbg !16431
  call void @skge_write32(%struct.skge_hw* %6, i32 %add6, i32 1398016) #14, !dbg !16432
  ret void, !dbg !16433
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @netif_tx_lock_bh(%struct.net_device* %dev) #2 !dbg !16434 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !16435, metadata !DIExpression()), !dbg !16436
  call void @local_bh_disable() #14, !dbg !16437
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !16438
  call void @netif_tx_lock(%struct.net_device* %0) #14, !dbg !16439
  ret void, !dbg !16440
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @skge_tx_clean(%struct.net_device* %dev) #2 !dbg !16441 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %skge = alloca %struct.skge_port*, align 8
  %e = alloca %struct.skge_element*, align 8
  %td = alloca %struct.skge_tx_desc*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !16442, metadata !DIExpression()), !dbg !16443
  call void @llvm.dbg.declare(metadata %struct.skge_port** %skge, metadata !16444, metadata !DIExpression()), !dbg !16445
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !16446
  %call = call i8* @netdev_priv(%struct.net_device* %0) #14, !dbg !16447
  %1 = bitcast i8* %call to %struct.skge_port*, !dbg !16447
  store %struct.skge_port* %1, %struct.skge_port** %skge, align 8, !dbg !16445
  call void @llvm.dbg.declare(metadata %struct.skge_element** %e, metadata !16448, metadata !DIExpression()), !dbg !16449
  %2 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !16450
  %tx_ring = getelementptr inbounds %struct.skge_port, %struct.skge_port* %2, i32 0, i32 5, !dbg !16452
  %to_clean = getelementptr inbounds %struct.skge_ring, %struct.skge_ring* %tx_ring, i32 0, i32 0, !dbg !16453
  %3 = load %struct.skge_element*, %struct.skge_element** %to_clean, align 8, !dbg !16453
  store %struct.skge_element* %3, %struct.skge_element** %e, align 8, !dbg !16454
  br label %for.cond, !dbg !16455

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load %struct.skge_element*, %struct.skge_element** %e, align 8, !dbg !16456
  %5 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !16458
  %tx_ring1 = getelementptr inbounds %struct.skge_port, %struct.skge_port* %5, i32 0, i32 5, !dbg !16459
  %to_use = getelementptr inbounds %struct.skge_ring, %struct.skge_ring* %tx_ring1, i32 0, i32 1, !dbg !16460
  %6 = load %struct.skge_element*, %struct.skge_element** %to_use, align 8, !dbg !16460
  %cmp = icmp ne %struct.skge_element* %4, %6, !dbg !16461
  br i1 %cmp, label %for.body, label %for.end, !dbg !16462

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.skge_tx_desc** %td, metadata !16463, metadata !DIExpression()), !dbg !16465
  %7 = load %struct.skge_element*, %struct.skge_element** %e, align 8, !dbg !16466
  %desc = getelementptr inbounds %struct.skge_element, %struct.skge_element* %7, i32 0, i32 1, !dbg !16467
  %8 = load i8*, i8** %desc, align 8, !dbg !16467
  %9 = bitcast i8* %8 to %struct.skge_tx_desc*, !dbg !16466
  store %struct.skge_tx_desc* %9, %struct.skge_tx_desc** %td, align 8, !dbg !16465
  %10 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !16468
  %hw = getelementptr inbounds %struct.skge_port, %struct.skge_port* %10, i32 0, i32 0, !dbg !16469
  %11 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !16469
  %pdev = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %11, i32 0, i32 1, !dbg !16470
  %12 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !16470
  %13 = load %struct.skge_element*, %struct.skge_element** %e, align 8, !dbg !16471
  %14 = load %struct.skge_tx_desc*, %struct.skge_tx_desc** %td, align 8, !dbg !16472
  %control = getelementptr inbounds %struct.skge_tx_desc, %struct.skge_tx_desc* %14, i32 0, i32 0, !dbg !16473
  %15 = load i32, i32* %control, align 4, !dbg !16473
  call void @skge_tx_unmap(%struct.pci_dev* %12, %struct.skge_element* %13, i32 %15) #14, !dbg !16474
  %16 = load %struct.skge_tx_desc*, %struct.skge_tx_desc** %td, align 8, !dbg !16475
  %control2 = getelementptr inbounds %struct.skge_tx_desc, %struct.skge_tx_desc* %16, i32 0, i32 0, !dbg !16477
  %17 = load i32, i32* %control2, align 4, !dbg !16477
  %and = and i32 %17, 536870912, !dbg !16478
  %tobool = icmp ne i32 %and, 0, !dbg !16478
  br i1 %tobool, label %if.then, label %if.end, !dbg !16479

if.then:                                          ; preds = %for.body
  %18 = load %struct.skge_element*, %struct.skge_element** %e, align 8, !dbg !16480
  %skb = getelementptr inbounds %struct.skge_element, %struct.skge_element* %18, i32 0, i32 2, !dbg !16480
  %19 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !16480
  call void @consume_skb(%struct.sk_buff* %19) #14, !dbg !16480
  br label %if.end, !dbg !16480

if.end:                                           ; preds = %if.then, %for.body
  %20 = load %struct.skge_tx_desc*, %struct.skge_tx_desc** %td, align 8, !dbg !16481
  %control3 = getelementptr inbounds %struct.skge_tx_desc, %struct.skge_tx_desc* %20, i32 0, i32 0, !dbg !16482
  store i32 0, i32* %control3, align 4, !dbg !16483
  br label %for.inc, !dbg !16484

for.inc:                                          ; preds = %if.end
  %21 = load %struct.skge_element*, %struct.skge_element** %e, align 8, !dbg !16485
  %next = getelementptr inbounds %struct.skge_element, %struct.skge_element* %21, i32 0, i32 0, !dbg !16486
  %22 = load %struct.skge_element*, %struct.skge_element** %next, align 8, !dbg !16486
  store %struct.skge_element* %22, %struct.skge_element** %e, align 8, !dbg !16487
  br label %for.cond, !dbg !16488, !llvm.loop !16489

for.end:                                          ; preds = %for.cond
  %23 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !16491
  call void @netdev_reset_queue(%struct.net_device* %23) #14, !dbg !16492
  %24 = load %struct.skge_element*, %struct.skge_element** %e, align 8, !dbg !16493
  %25 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !16494
  %tx_ring4 = getelementptr inbounds %struct.skge_port, %struct.skge_port* %25, i32 0, i32 5, !dbg !16495
  %to_clean5 = getelementptr inbounds %struct.skge_ring, %struct.skge_ring* %tx_ring4, i32 0, i32 0, !dbg !16496
  store %struct.skge_element* %24, %struct.skge_element** %to_clean5, align 8, !dbg !16497
  ret void, !dbg !16498
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @netif_tx_unlock_bh(%struct.net_device* %dev) #2 !dbg !16499 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !16500, metadata !DIExpression()), !dbg !16501
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !16502
  call void @netif_tx_unlock(%struct.net_device* %0) #14, !dbg !16503
  call void @local_bh_enable() #14, !dbg !16504
  ret void, !dbg !16505
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @local_bh_disable() #2 !dbg !16506 {
entry:
  %val.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr.i.i, metadata !14552, metadata !DIExpression()), !dbg !16507
  %pao_ID__.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %pao_ID__.i.i, metadata !14563, metadata !DIExpression()), !dbg !16510
  %pto_val__.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %pto_val__.i.i, metadata !14566, metadata !DIExpression()), !dbg !16511
  %ip.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %ip.addr.i, metadata !14571, metadata !DIExpression()), !dbg !16512
  %cnt.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %cnt.addr.i, metadata !14573, metadata !DIExpression()), !dbg !16513
  %tmp = alloca i64, align 8
  br label %__here, !dbg !16514

__here:                                           ; preds = %indirectgoto, %entry
  call void @llvm.dbg.label(metadata !16516), !dbg !16514
  store i64 ptrtoint (i8* blockaddress(@local_bh_disable, %__here) to i64), i64* %tmp, align 8, !dbg !16514
  %0 = load i64, i64* %tmp, align 8, !dbg !16514
  store i64 %0, i64* %ip.addr.i, align 8
  store i32 512, i32* %cnt.addr.i, align 4
  %1 = load i32, i32* %cnt.addr.i, align 4, !dbg !16517
  store i32 %1, i32* %val.addr.i.i, align 4
  %2 = load i32, i32* %val.addr.i.i, align 4, !dbg !16510
  %3 = call i1 @llvm.is.constant.i32(i32 %2) #10, !dbg !16510
  br i1 %3, label %land.lhs.true.i.i, label %cond.false.i.i, !dbg !16510

land.lhs.true.i.i:                                ; preds = %__here
  %4 = load i32, i32* %val.addr.i.i, align 4, !dbg !16510
  %cmp.i.i = icmp eq i32 %4, 1, !dbg !16510
  br i1 %cmp.i.i, label %cond.true.i.i, label %lor.lhs.false.i.i, !dbg !16510

lor.lhs.false.i.i:                                ; preds = %land.lhs.true.i.i
  %5 = load i32, i32* %val.addr.i.i, align 4, !dbg !16510
  %cmp1.i.i = icmp eq i32 %5, -1, !dbg !16510
  br i1 %cmp1.i.i, label %cond.true.i.i, label %cond.false.i.i, !dbg !16510

cond.true.i.i:                                    ; preds = %lor.lhs.false.i.i, %land.lhs.true.i.i
  %6 = load i32, i32* %val.addr.i.i, align 4, !dbg !16510
  br label %__local_bh_disable_ip.exit, !dbg !16510

cond.false.i.i:                                   ; preds = %lor.lhs.false.i.i, %__here
  br label %__local_bh_disable_ip.exit, !dbg !16510

__local_bh_disable_ip.exit:                       ; preds = %cond.true.i.i, %cond.false.i.i
  %cond.i.i = phi i32 [ %6, %cond.true.i.i ], [ 0, %cond.false.i.i ], !dbg !16510
  store i32 %cond.i.i, i32* %pao_ID__.i.i, align 4, !dbg !16510
  %7 = load i32, i32* %val.addr.i.i, align 4, !dbg !16511
  %conv.i.i = sext i32 %7 to i64, !dbg !16511
  %and.i.i = and i64 %conv.i.i, 4294967295, !dbg !16511
  %conv3.i.i = trunc i64 %and.i.i to i32, !dbg !16511
  store i32 %conv3.i.i, i32* %pto_val__.i.i, align 4, !dbg !16511
  %8 = load i32, i32* %pto_val__.i.i, align 4, !dbg !16511
  call void asm "addl $1, $0", "=*m,ri,*m,~{dirflag},~{fpsr},~{flags}"(i32* @__preempt_count, i32 %8, i32* @__preempt_count) #10, !dbg !16511, !srcloc !14582
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !16518, !srcloc !14584
  ret void, !dbg !16519

indirectgoto:                                     ; No predecessors!
  indirectbr i8* undef, [label %__here]
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__netif_tx_lock(%struct.netdev_queue* %txq, i32 %cpu) #2 !dbg !16520 {
entry:
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !10219, metadata !DIExpression()), !dbg !16523
  %txq.addr = alloca %struct.netdev_queue*, align 8
  %cpu.addr = alloca i32, align 4
  store %struct.netdev_queue* %txq, %struct.netdev_queue** %txq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.netdev_queue** %txq.addr, metadata !16525, metadata !DIExpression()), !dbg !16526
  store i32 %cpu, i32* %cpu.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cpu.addr, metadata !16527, metadata !DIExpression()), !dbg !16528
  %0 = load %struct.netdev_queue*, %struct.netdev_queue** %txq.addr, align 8, !dbg !16529
  %_xmit_lock = getelementptr inbounds %struct.netdev_queue, %struct.netdev_queue* %0, i32 0, i32 7, !dbg !16530
  store %struct.spinlock* %_xmit_lock, %struct.spinlock** %lock.addr.i, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !16531, !srcloc !10257
  %1 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !16532
  %2 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %1, i32 0, i32 0, !dbg !16532
  %rlock.i = bitcast %union.anon.1* %2 to %struct.raw_spinlock*, !dbg !16532
  %3 = load i32, i32* %cpu.addr, align 4, !dbg !16533
  %4 = load %struct.netdev_queue*, %struct.netdev_queue** %txq.addr, align 8, !dbg !16534
  %xmit_lock_owner = getelementptr inbounds %struct.netdev_queue, %struct.netdev_queue* %4, i32 0, i32 8, !dbg !16535
  store i32 %3, i32* %xmit_lock_owner, align 8, !dbg !16536
  ret void, !dbg !16537
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__netif_tx_unlock(%struct.netdev_queue* %txq) #2 !dbg !16538 {
entry:
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !10210, metadata !DIExpression()), !dbg !16539
  %txq.addr = alloca %struct.netdev_queue*, align 8
  store %struct.netdev_queue* %txq, %struct.netdev_queue** %txq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.netdev_queue** %txq.addr, metadata !16541, metadata !DIExpression()), !dbg !16542
  %0 = load %struct.netdev_queue*, %struct.netdev_queue** %txq.addr, align 8, !dbg !16543
  %xmit_lock_owner = getelementptr inbounds %struct.netdev_queue, %struct.netdev_queue* %0, i32 0, i32 8, !dbg !16544
  store i32 -1, i32* %xmit_lock_owner, align 8, !dbg !16545
  %1 = load %struct.netdev_queue*, %struct.netdev_queue** %txq.addr, align 8, !dbg !16546
  %_xmit_lock = getelementptr inbounds %struct.netdev_queue, %struct.netdev_queue* %1, i32 0, i32 7, !dbg !16547
  store %struct.spinlock* %_xmit_lock, %struct.spinlock** %lock.addr.i, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !16548, !srcloc !10277
  %2 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !16549
  %3 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %2, i32 0, i32 0, !dbg !16549
  %rlock.i = bitcast %union.anon.1* %3 to %struct.raw_spinlock*, !dbg !16549
  ret void, !dbg !16550
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @local_bh_enable() #2 !dbg !16551 {
entry:
  %tmp = alloca i64, align 8
  br label %__here, !dbg !16552

__here:                                           ; preds = %indirectgoto, %entry
  call void @llvm.dbg.label(metadata !16554), !dbg !16552
  store i64 ptrtoint (i8* blockaddress(@local_bh_enable, %__here) to i64), i64* %tmp, align 8, !dbg !16552
  %0 = load i64, i64* %tmp, align 8, !dbg !16552
  call void @__local_bh_enable_ip(i64 %0, i32 512) #14, !dbg !16555
  ret void, !dbg !16556

indirectgoto:                                     ; No predecessors!
  indirectbr i8* undef, [label %__here]
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @yukon_suspend(%struct.skge_hw* %hw, i32 %port) #2 !dbg !16557 {
entry:
  %hw.addr = alloca %struct.skge_hw*, align 8
  %port.addr = alloca i32, align 4
  %ctrl = alloca i16, align 2
  store %struct.skge_hw* %hw, %struct.skge_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.skge_hw** %hw.addr, metadata !16558, metadata !DIExpression()), !dbg !16559
  store i32 %port, i32* %port.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %port.addr, metadata !16560, metadata !DIExpression()), !dbg !16561
  call void @llvm.dbg.declare(metadata i16* %ctrl, metadata !16562, metadata !DIExpression()), !dbg !16563
  %0 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !16564
  %1 = load i32, i32* %port.addr, align 4, !dbg !16565
  %call = call zeroext i16 @gm_phy_read(%struct.skge_hw* %0, i32 %1, i16 zeroext 16) #14, !dbg !16566
  store i16 %call, i16* %ctrl, align 2, !dbg !16567
  %2 = load i16, i16* %ctrl, align 2, !dbg !16568
  %conv = zext i16 %2 to i32, !dbg !16568
  %or = or i32 %conv, 2, !dbg !16568
  %conv1 = trunc i32 %or to i16, !dbg !16568
  store i16 %conv1, i16* %ctrl, align 2, !dbg !16568
  %3 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !16569
  %4 = load i32, i32* %port.addr, align 4, !dbg !16570
  %5 = load i16, i16* %ctrl, align 2, !dbg !16571
  %call2 = call i32 @gm_phy_write(%struct.skge_hw* %3, i32 %4, i16 zeroext 16, i16 zeroext %5) #14, !dbg !16572
  %6 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !16573
  %7 = load i32, i32* %port.addr, align 4, !dbg !16574
  %call3 = call zeroext i16 @gm_phy_read(%struct.skge_hw* %6, i32 %7, i16 zeroext 0) #14, !dbg !16575
  store i16 %call3, i16* %ctrl, align 2, !dbg !16576
  %8 = load i16, i16* %ctrl, align 2, !dbg !16577
  %conv4 = zext i16 %8 to i32, !dbg !16577
  %or5 = or i32 %conv4, 32768, !dbg !16577
  %conv6 = trunc i32 %or5 to i16, !dbg !16577
  store i16 %conv6, i16* %ctrl, align 2, !dbg !16577
  %9 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !16578
  %10 = load i32, i32* %port.addr, align 4, !dbg !16579
  %11 = load i16, i16* %ctrl, align 2, !dbg !16580
  %call7 = call i32 @gm_phy_write(%struct.skge_hw* %9, i32 %10, i16 zeroext 0, i16 zeroext %11) #14, !dbg !16581
  %12 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !16582
  %13 = load i32, i32* %port.addr, align 4, !dbg !16583
  %call8 = call zeroext i16 @gm_phy_read(%struct.skge_hw* %12, i32 %13, i16 zeroext 0) #14, !dbg !16584
  store i16 %call8, i16* %ctrl, align 2, !dbg !16585
  %14 = load i16, i16* %ctrl, align 2, !dbg !16586
  %conv9 = zext i16 %14 to i32, !dbg !16586
  %or10 = or i32 %conv9, 2048, !dbg !16586
  %conv11 = trunc i32 %or10 to i16, !dbg !16586
  store i16 %conv11, i16* %ctrl, align 2, !dbg !16586
  %15 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !16587
  %16 = load i32, i32* %port.addr, align 4, !dbg !16588
  %17 = load i16, i16* %ctrl, align 2, !dbg !16589
  %call12 = call i32 @gm_phy_write(%struct.skge_hw* %15, i32 %16, i16 zeroext 0, i16 zeroext %17) #14, !dbg !16590
  ret void, !dbg !16591
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @netif_tx_lock(%struct.net_device* %dev) #2 !dbg !16592 {
entry:
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !10219, metadata !DIExpression()), !dbg !16593
  %dev.addr = alloca %struct.net_device*, align 8
  %i = alloca i32, align 4
  %cpu = alloca i32, align 4
  %txq = alloca %struct.netdev_queue*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !16595, metadata !DIExpression()), !dbg !16596
  call void @llvm.dbg.declare(metadata i32* %i, metadata !16597, metadata !DIExpression()), !dbg !16598
  call void @llvm.dbg.declare(metadata i32* %cpu, metadata !16599, metadata !DIExpression()), !dbg !16600
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !16601
  %tx_global_lock = getelementptr inbounds %struct.net_device, %struct.net_device* %0, i32 0, i32 91, !dbg !16602
  store %struct.spinlock* %tx_global_lock, %struct.spinlock** %lock.addr.i, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !16603, !srcloc !10257
  %1 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !16604
  %2 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %1, i32 0, i32 0, !dbg !16604
  %rlock.i = bitcast %union.anon.1* %2 to %struct.raw_spinlock*, !dbg !16604
  store i32 0, i32* %cpu, align 4, !dbg !16605
  store i32 0, i32* %i, align 4, !dbg !16606
  br label %for.cond, !dbg !16608

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load i32, i32* %i, align 4, !dbg !16609
  %4 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !16611
  %num_tx_queues = getelementptr inbounds %struct.net_device, %struct.net_device* %4, i32 0, i32 87, !dbg !16612
  %5 = load i32, i32* %num_tx_queues, align 8, !dbg !16612
  %cmp = icmp ult i32 %3, %5, !dbg !16613
  br i1 %cmp, label %for.body, label %for.end, !dbg !16614

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.netdev_queue** %txq, metadata !16615, metadata !DIExpression()), !dbg !16617
  %6 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !16618
  %7 = load i32, i32* %i, align 4, !dbg !16619
  %call = call %struct.netdev_queue* @netdev_get_tx_queue(%struct.net_device* %6, i32 %7) #14, !dbg !16620
  store %struct.netdev_queue* %call, %struct.netdev_queue** %txq, align 8, !dbg !16617
  %8 = load %struct.netdev_queue*, %struct.netdev_queue** %txq, align 8, !dbg !16621
  %9 = load i32, i32* %cpu, align 4, !dbg !16622
  call void @__netif_tx_lock(%struct.netdev_queue* %8, i32 %9) #14, !dbg !16623
  %10 = load %struct.netdev_queue*, %struct.netdev_queue** %txq, align 8, !dbg !16624
  %state = getelementptr inbounds %struct.netdev_queue, %struct.netdev_queue* %10, i32 0, i32 10, !dbg !16625
  call void @set_bit(i64 2, i64* %state) #14, !dbg !16626
  %11 = load %struct.netdev_queue*, %struct.netdev_queue** %txq, align 8, !dbg !16627
  call void @__netif_tx_unlock(%struct.netdev_queue* %11) #14, !dbg !16628
  br label %for.inc, !dbg !16629

for.inc:                                          ; preds = %for.body
  %12 = load i32, i32* %i, align 4, !dbg !16630
  %inc = add i32 %12, 1, !dbg !16630
  store i32 %inc, i32* %i, align 4, !dbg !16630
  br label %for.cond, !dbg !16631, !llvm.loop !16632

for.end:                                          ; preds = %for.cond
  ret void, !dbg !16634
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @skge_tx_unmap(%struct.pci_dev* %pdev, %struct.skge_element* %e, i32 %control) #2 !dbg !16635 {
entry:
  %pdev.addr = alloca %struct.pci_dev*, align 8
  %e.addr = alloca %struct.skge_element*, align 8
  %control.addr = alloca i32, align 4
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !16638, metadata !DIExpression()), !dbg !16639
  store %struct.skge_element* %e, %struct.skge_element** %e.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.skge_element** %e.addr, metadata !16640, metadata !DIExpression()), !dbg !16641
  store i32 %control, i32* %control.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %control.addr, metadata !16642, metadata !DIExpression()), !dbg !16643
  %0 = load i32, i32* %control.addr, align 4, !dbg !16644
  %and = and i32 %0, 1073741824, !dbg !16646
  %tobool = icmp ne i32 %and, 0, !dbg !16646
  br i1 %tobool, label %if.then, label %if.else, !dbg !16647

if.then:                                          ; preds = %entry
  %1 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !16648
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %1, i32 0, i32 41, !dbg !16648
  %2 = load %struct.skge_element*, %struct.skge_element** %e.addr, align 8, !dbg !16648
  %mapaddr = getelementptr inbounds %struct.skge_element, %struct.skge_element* %2, i32 0, i32 3, !dbg !16648
  %3 = load i64, i64* %mapaddr, align 8, !dbg !16648
  %4 = load %struct.skge_element*, %struct.skge_element** %e.addr, align 8, !dbg !16648
  %maplen = getelementptr inbounds %struct.skge_element, %struct.skge_element* %4, i32 0, i32 4, !dbg !16648
  %5 = load i32, i32* %maplen, align 8, !dbg !16648
  %conv = zext i32 %5 to i64, !dbg !16648
  call void @dma_unmap_single_attrs(%struct.device* %dev, i64 %3, i64 %conv, i32 1, i64 0) #14, !dbg !16648
  br label %if.end, !dbg !16648

if.else:                                          ; preds = %entry
  %6 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !16649
  %dev1 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %6, i32 0, i32 41, !dbg !16649
  %7 = load %struct.skge_element*, %struct.skge_element** %e.addr, align 8, !dbg !16649
  %mapaddr2 = getelementptr inbounds %struct.skge_element, %struct.skge_element* %7, i32 0, i32 3, !dbg !16649
  %8 = load i64, i64* %mapaddr2, align 8, !dbg !16649
  %9 = load %struct.skge_element*, %struct.skge_element** %e.addr, align 8, !dbg !16649
  %maplen3 = getelementptr inbounds %struct.skge_element, %struct.skge_element* %9, i32 0, i32 4, !dbg !16649
  %10 = load i32, i32* %maplen3, align 8, !dbg !16649
  %conv4 = zext i32 %10 to i64, !dbg !16649
  call void @dma_unmap_page_attrs(%struct.device* %dev1, i64 %8, i64 %conv4, i32 1, i64 0) #14, !dbg !16649
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !16650
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @netdev_reset_queue(%struct.net_device* %dev_queue) #2 !dbg !16651 {
entry:
  %dev_queue.addr = alloca %struct.net_device*, align 8
  store %struct.net_device* %dev_queue, %struct.net_device** %dev_queue.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev_queue.addr, metadata !16652, metadata !DIExpression()), !dbg !16653
  %0 = load %struct.net_device*, %struct.net_device** %dev_queue.addr, align 8, !dbg !16654
  %call = call %struct.netdev_queue* @netdev_get_tx_queue(%struct.net_device* %0, i32 0) #14, !dbg !16655
  call void @netdev_tx_reset_queue(%struct.netdev_queue* %call) #14, !dbg !16656
  ret void, !dbg !16657
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @netdev_tx_reset_queue(%struct.netdev_queue* %q) #2 !dbg !16658 {
entry:
  %q.addr = alloca %struct.netdev_queue*, align 8
  store %struct.netdev_queue* %q, %struct.netdev_queue** %q.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.netdev_queue** %q.addr, metadata !16659, metadata !DIExpression()), !dbg !16660
  %0 = load %struct.netdev_queue*, %struct.netdev_queue** %q.addr, align 8, !dbg !16661
  %state = getelementptr inbounds %struct.netdev_queue, %struct.netdev_queue* %0, i32 0, i32 10, !dbg !16662
  call void @clear_bit(i64 1, i64* %state) #14, !dbg !16663
  %1 = load %struct.netdev_queue*, %struct.netdev_queue** %q.addr, align 8, !dbg !16664
  %dql = getelementptr inbounds %struct.netdev_queue, %struct.netdev_queue* %1, i32 0, i32 11, !dbg !16665
  call void @dql_reset(%struct.dql* %dql) #14, !dbg !16666
  ret void, !dbg !16667
}

; Function Attrs: noredzone
declare dso_local void @dql_reset(%struct.dql*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @netif_tx_unlock(%struct.net_device* %dev) #2 !dbg !16668 {
entry:
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !10210, metadata !DIExpression()), !dbg !16669
  %dev.addr = alloca %struct.net_device*, align 8
  %i = alloca i32, align 4
  %txq = alloca %struct.netdev_queue*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !16671, metadata !DIExpression()), !dbg !16672
  call void @llvm.dbg.declare(metadata i32* %i, metadata !16673, metadata !DIExpression()), !dbg !16674
  store i32 0, i32* %i, align 4, !dbg !16675
  br label %for.cond, !dbg !16677

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !16678
  %1 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !16680
  %num_tx_queues = getelementptr inbounds %struct.net_device, %struct.net_device* %1, i32 0, i32 87, !dbg !16681
  %2 = load i32, i32* %num_tx_queues, align 8, !dbg !16681
  %cmp = icmp ult i32 %0, %2, !dbg !16682
  br i1 %cmp, label %for.body, label %for.end, !dbg !16683

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.netdev_queue** %txq, metadata !16684, metadata !DIExpression()), !dbg !16686
  %3 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !16687
  %4 = load i32, i32* %i, align 4, !dbg !16688
  %call = call %struct.netdev_queue* @netdev_get_tx_queue(%struct.net_device* %3, i32 %4) #14, !dbg !16689
  store %struct.netdev_queue* %call, %struct.netdev_queue** %txq, align 8, !dbg !16686
  %5 = load %struct.netdev_queue*, %struct.netdev_queue** %txq, align 8, !dbg !16690
  %state = getelementptr inbounds %struct.netdev_queue, %struct.netdev_queue* %5, i32 0, i32 10, !dbg !16691
  call void @clear_bit(i64 2, i64* %state) #14, !dbg !16692
  %6 = load %struct.netdev_queue*, %struct.netdev_queue** %txq, align 8, !dbg !16693
  call void @netif_schedule_queue(%struct.netdev_queue* %6) #14, !dbg !16694
  br label %for.inc, !dbg !16695

for.inc:                                          ; preds = %for.body
  %7 = load i32, i32* %i, align 4, !dbg !16696
  %inc = add i32 %7, 1, !dbg !16696
  store i32 %inc, i32* %i, align 4, !dbg !16696
  br label %for.cond, !dbg !16697, !llvm.loop !16698

for.end:                                          ; preds = %for.cond
  %8 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !16700
  %tx_global_lock = getelementptr inbounds %struct.net_device, %struct.net_device* %8, i32 0, i32 91, !dbg !16701
  store %struct.spinlock* %tx_global_lock, %struct.spinlock** %lock.addr.i, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !16702, !srcloc !10277
  %9 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !16703
  %10 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %9, i32 0, i32 0, !dbg !16703
  %rlock.i = bitcast %union.anon.1* %10 to %struct.raw_spinlock*, !dbg !16703
  ret void, !dbg !16704
}

; Function Attrs: noredzone
declare dso_local void @netif_schedule_queue(%struct.netdev_queue*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @skb_padto(%struct.sk_buff* %skb, i32 %len) #2 !dbg !16705 {
entry:
  %retval = alloca i32, align 4
  %skb.addr = alloca %struct.sk_buff*, align 8
  %len.addr = alloca i32, align 4
  %size = alloca i32, align 4
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !16708, metadata !DIExpression()), !dbg !16709
  store i32 %len, i32* %len.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %len.addr, metadata !16710, metadata !DIExpression()), !dbg !16711
  call void @llvm.dbg.declare(metadata i32* %size, metadata !16712, metadata !DIExpression()), !dbg !16713
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !16714
  %len1 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %0, i32 0, i32 5, !dbg !16715
  %1 = load i32, i32* %len1, align 8, !dbg !16715
  store i32 %1, i32* %size, align 4, !dbg !16713
  %2 = load i32, i32* %size, align 4, !dbg !16716
  %3 = load i32, i32* %len.addr, align 4, !dbg !16716
  %cmp = icmp uge i32 %2, %3, !dbg !16716
  %lnot = xor i1 %cmp, true, !dbg !16716
  %lnot2 = xor i1 %lnot, true, !dbg !16716
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !16716
  %conv = sext i32 %lnot.ext to i64, !dbg !16716
  %tobool = icmp ne i64 %conv, 0, !dbg !16716
  br i1 %tobool, label %if.then, label %if.end, !dbg !16718

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !16719
  br label %return, !dbg !16719

if.end:                                           ; preds = %entry
  %4 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !16720
  %5 = load i32, i32* %len.addr, align 4, !dbg !16721
  %6 = load i32, i32* %size, align 4, !dbg !16722
  %sub = sub i32 %5, %6, !dbg !16723
  %call = call i32 @skb_pad(%struct.sk_buff* %4, i32 %sub) #14, !dbg !16724
  store i32 %call, i32* %retval, align 4, !dbg !16725
  br label %return, !dbg !16725

return:                                           ; preds = %if.end, %if.then
  %7 = load i32, i32* %retval, align 4, !dbg !16726
  ret i32 %7, !dbg !16726
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @skge_avail(%struct.skge_ring* %ring) #2 !dbg !16727 {
entry:
  %ring.addr = alloca %struct.skge_ring*, align 8
  store %struct.skge_ring* %ring, %struct.skge_ring** %ring.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.skge_ring** %ring.addr, metadata !16732, metadata !DIExpression()), !dbg !16733
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !16734, !srcloc !16735
  %0 = load %struct.skge_ring*, %struct.skge_ring** %ring.addr, align 8, !dbg !16736
  %to_clean = getelementptr inbounds %struct.skge_ring, %struct.skge_ring* %0, i32 0, i32 0, !dbg !16737
  %1 = load %struct.skge_element*, %struct.skge_element** %to_clean, align 8, !dbg !16737
  %2 = load %struct.skge_ring*, %struct.skge_ring** %ring.addr, align 8, !dbg !16738
  %to_use = getelementptr inbounds %struct.skge_ring, %struct.skge_ring* %2, i32 0, i32 1, !dbg !16739
  %3 = load %struct.skge_element*, %struct.skge_element** %to_use, align 8, !dbg !16739
  %cmp = icmp ugt %struct.skge_element* %1, %3, !dbg !16740
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !16741

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !16741

cond.false:                                       ; preds = %entry
  %4 = load %struct.skge_ring*, %struct.skge_ring** %ring.addr, align 8, !dbg !16742
  %count = getelementptr inbounds %struct.skge_ring, %struct.skge_ring* %4, i32 0, i32 3, !dbg !16743
  %5 = load i64, i64* %count, align 8, !dbg !16743
  br label %cond.end, !dbg !16741

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ 0, %cond.true ], [ %5, %cond.false ], !dbg !16741
  %6 = load %struct.skge_ring*, %struct.skge_ring** %ring.addr, align 8, !dbg !16744
  %to_clean1 = getelementptr inbounds %struct.skge_ring, %struct.skge_ring* %6, i32 0, i32 0, !dbg !16745
  %7 = load %struct.skge_element*, %struct.skge_element** %to_clean1, align 8, !dbg !16745
  %8 = load %struct.skge_ring*, %struct.skge_ring** %ring.addr, align 8, !dbg !16746
  %to_use2 = getelementptr inbounds %struct.skge_ring, %struct.skge_ring* %8, i32 0, i32 1, !dbg !16747
  %9 = load %struct.skge_element*, %struct.skge_element** %to_use2, align 8, !dbg !16747
  %sub.ptr.lhs.cast = ptrtoint %struct.skge_element* %7 to i64, !dbg !16748
  %sub.ptr.rhs.cast = ptrtoint %struct.skge_element* %9 to i64, !dbg !16748
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !16748
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 40, !dbg !16748
  %add = add i64 %cond, %sub.ptr.div, !dbg !16749
  %sub = sub i64 %add, 1, !dbg !16750
  %conv = trunc i64 %sub to i32, !dbg !16751
  ret i32 %conv, !dbg !16752
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @skb_end_pointer(%struct.sk_buff* %skb) #2 !dbg !16753 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !16756, metadata !DIExpression()), !dbg !16757
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !16758
  %head = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %0, i32 0, i32 36, !dbg !16759
  %1 = load i8*, i8** %head, align 8, !dbg !16759
  %2 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !16760
  %end = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %2, i32 0, i32 35, !dbg !16761
  %3 = load i32, i32* %end, align 4, !dbg !16761
  %idx.ext = zext i32 %3 to i64, !dbg !16762
  %add.ptr = getelementptr i8, i8* %1, i64 %idx.ext, !dbg !16762
  ret i8* %add.ptr, !dbg !16763
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @skb_headlen(%struct.sk_buff* %skb) #2 !dbg !16764 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !16767, metadata !DIExpression()), !dbg !16768
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !16769
  %len = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %0, i32 0, i32 5, !dbg !16770
  %1 = load i32, i32* %len, align 8, !dbg !16770
  %2 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !16771
  %data_len = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %2, i32 0, i32 6, !dbg !16772
  %3 = load i32, i32* %data_len, align 4, !dbg !16772
  %sub = sub i32 %1, %3, !dbg !16773
  ret i32 %sub, !dbg !16774
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @skb_checksum_start_offset(%struct.sk_buff* %skb) #2 !dbg !16775 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !16778, metadata !DIExpression()), !dbg !16779
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !16780
  %1 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %0, i32 0, i32 17, !dbg !16781
  %2 = bitcast %union.anon.47* %1 to %struct.anon.48*, !dbg !16781
  %csum_start = getelementptr inbounds %struct.anon.48, %struct.anon.48* %2, i32 0, i32 0, !dbg !16781
  %3 = load i16, i16* %csum_start, align 4, !dbg !16781
  %conv = zext i16 %3 to i32, !dbg !16780
  %4 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !16782
  %call = call i32 @skb_headroom(%struct.sk_buff* %4) #14, !dbg !16783
  %sub = sub i32 %conv, %call, !dbg !16784
  ret i32 %sub, !dbg !16785
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.iphdr* @ipip_hdr(%struct.sk_buff* %skb) #2 !dbg !16786 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !16790, metadata !DIExpression()), !dbg !16791
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !16792
  %call = call i8* @skb_transport_header(%struct.sk_buff* %0) #14, !dbg !16793
  %1 = bitcast i8* %call to %struct.iphdr*, !dbg !16794
  ret %struct.iphdr* %1, !dbg !16795
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @skb_frag_dma_map(%struct.device* %dev, %struct.bio_vec* %frag, i64 %offset, i64 %size, i32 %dir) #2 !dbg !16796 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %frag.addr = alloca %struct.bio_vec*, align 8
  %offset.addr = alloca i64, align 8
  %size.addr = alloca i64, align 8
  %dir.addr = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !16799, metadata !DIExpression()), !dbg !16800
  store %struct.bio_vec* %frag, %struct.bio_vec** %frag.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bio_vec** %frag.addr, metadata !16801, metadata !DIExpression()), !dbg !16802
  store i64 %offset, i64* %offset.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %offset.addr, metadata !16803, metadata !DIExpression()), !dbg !16804
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !16805, metadata !DIExpression()), !dbg !16806
  store i32 %dir, i32* %dir.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dir.addr, metadata !16807, metadata !DIExpression()), !dbg !16808
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !16809
  %1 = load %struct.bio_vec*, %struct.bio_vec** %frag.addr, align 8, !dbg !16809
  %call = call %struct.page* @skb_frag_page(%struct.bio_vec* %1) #14, !dbg !16809
  %2 = load %struct.bio_vec*, %struct.bio_vec** %frag.addr, align 8, !dbg !16809
  %call1 = call i32 @skb_frag_off(%struct.bio_vec* %2) #14, !dbg !16809
  %conv = zext i32 %call1 to i64, !dbg !16809
  %3 = load i64, i64* %offset.addr, align 8, !dbg !16809
  %add = add i64 %conv, %3, !dbg !16809
  %4 = load i64, i64* %size.addr, align 8, !dbg !16809
  %5 = load i32, i32* %dir.addr, align 4, !dbg !16809
  %call2 = call i64 @dma_map_page_attrs(%struct.device* %0, %struct.page* %call, i64 %add, i64 %4, i32 %5, i64 0) #14, !dbg !16809
  ret i64 %call2, !dbg !16810
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @skb_frag_size(%struct.bio_vec* %frag) #2 !dbg !16811 {
entry:
  %frag.addr = alloca %struct.bio_vec*, align 8
  store %struct.bio_vec* %frag, %struct.bio_vec** %frag.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bio_vec** %frag.addr, metadata !16814, metadata !DIExpression()), !dbg !16815
  %0 = load %struct.bio_vec*, %struct.bio_vec** %frag.addr, align 8, !dbg !16816
  %bv_len = getelementptr inbounds %struct.bio_vec, %struct.bio_vec* %0, i32 0, i32 1, !dbg !16817
  %1 = load i32, i32* %bv_len, align 8, !dbg !16817
  ret i32 %1, !dbg !16818
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @netdev_sent_queue(%struct.net_device* %dev, i32 %bytes) #2 !dbg !16819 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %bytes.addr = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !16820, metadata !DIExpression()), !dbg !16821
  store i32 %bytes, i32* %bytes.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bytes.addr, metadata !16822, metadata !DIExpression()), !dbg !16823
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !16824
  %call = call %struct.netdev_queue* @netdev_get_tx_queue(%struct.net_device* %0, i32 0) #14, !dbg !16825
  %1 = load i32, i32* %bytes.addr, align 4, !dbg !16826
  call void @netdev_tx_sent_queue(%struct.netdev_queue* %call, i32 %1) #14, !dbg !16827
  ret void, !dbg !16828
}

; Function Attrs: noredzone
declare dso_local i32 @net_ratelimit() #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dev_kfree_skb_any(%struct.sk_buff* %skb) #2 !dbg !16829 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !16830, metadata !DIExpression()), !dbg !16831
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !16832
  call void @__dev_kfree_skb_any(%struct.sk_buff* %0, i32 1) #14, !dbg !16833
  ret void, !dbg !16834
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @skb_pad(%struct.sk_buff* %skb, i32 %pad) #2 !dbg !16835 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  %pad.addr = alloca i32, align 4
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !16838, metadata !DIExpression()), !dbg !16839
  store i32 %pad, i32* %pad.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %pad.addr, metadata !16840, metadata !DIExpression()), !dbg !16841
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !16842
  %1 = load i32, i32* %pad.addr, align 4, !dbg !16843
  %call = call i32 @__skb_pad(%struct.sk_buff* %0, i32 %1, i1 zeroext true) #14, !dbg !16844
  ret i32 %call, !dbg !16845
}

; Function Attrs: noredzone
declare dso_local i32 @__skb_pad(%struct.sk_buff*, i32, i1 zeroext) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @skb_headroom(%struct.sk_buff* %skb) #2 !dbg !16846 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !16847, metadata !DIExpression()), !dbg !16848
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !16849
  %data = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %0, i32 0, i32 37, !dbg !16850
  %1 = load i8*, i8** %data, align 8, !dbg !16850
  %2 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !16851
  %head = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %2, i32 0, i32 36, !dbg !16852
  %3 = load i8*, i8** %head, align 8, !dbg !16852
  %sub.ptr.lhs.cast = ptrtoint i8* %1 to i64, !dbg !16853
  %sub.ptr.rhs.cast = ptrtoint i8* %3 to i64, !dbg !16853
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !16853
  %conv = trunc i64 %sub.ptr.sub to i32, !dbg !16849
  ret i32 %conv, !dbg !16854
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @skb_transport_header(%struct.sk_buff* %skb) #2 !dbg !16855 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !16856, metadata !DIExpression()), !dbg !16857
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !16858
  %head = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %0, i32 0, i32 36, !dbg !16859
  %1 = load i8*, i8** %head, align 8, !dbg !16859
  %2 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !16860
  %transport_header = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %2, i32 0, i32 30, !dbg !16861
  %3 = load i16, i16* %transport_header, align 2, !dbg !16861
  %conv = zext i16 %3 to i32, !dbg !16860
  %idx.ext = sext i32 %conv to i64, !dbg !16862
  %add.ptr = getelementptr i8, i8* %1, i64 %idx.ext, !dbg !16862
  ret i8* %add.ptr, !dbg !16863
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.page* @skb_frag_page(%struct.bio_vec* %frag) #2 !dbg !16864 {
entry:
  %frag.addr = alloca %struct.bio_vec*, align 8
  store %struct.bio_vec* %frag, %struct.bio_vec** %frag.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bio_vec** %frag.addr, metadata !16867, metadata !DIExpression()), !dbg !16868
  %0 = load %struct.bio_vec*, %struct.bio_vec** %frag.addr, align 8, !dbg !16869
  %bv_page = getelementptr inbounds %struct.bio_vec, %struct.bio_vec* %0, i32 0, i32 0, !dbg !16870
  %1 = load %struct.page*, %struct.page** %bv_page, align 8, !dbg !16870
  ret %struct.page* %1, !dbg !16871
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @skb_frag_off(%struct.bio_vec* %frag) #2 !dbg !16872 {
entry:
  %frag.addr = alloca %struct.bio_vec*, align 8
  store %struct.bio_vec* %frag, %struct.bio_vec** %frag.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bio_vec** %frag.addr, metadata !16873, metadata !DIExpression()), !dbg !16874
  %0 = load %struct.bio_vec*, %struct.bio_vec** %frag.addr, align 8, !dbg !16875
  %bv_offset = getelementptr inbounds %struct.bio_vec, %struct.bio_vec* %0, i32 0, i32 2, !dbg !16876
  %1 = load i32, i32* %bv_offset, align 4, !dbg !16876
  ret i32 %1, !dbg !16877
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @netdev_tx_sent_queue(%struct.netdev_queue* %dev_queue, i32 %bytes) #2 !dbg !16878 {
entry:
  %dev_queue.addr = alloca %struct.netdev_queue*, align 8
  %bytes.addr = alloca i32, align 4
  store %struct.netdev_queue* %dev_queue, %struct.netdev_queue** %dev_queue.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.netdev_queue** %dev_queue.addr, metadata !16881, metadata !DIExpression()), !dbg !16882
  store i32 %bytes, i32* %bytes.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bytes.addr, metadata !16883, metadata !DIExpression()), !dbg !16884
  %0 = load %struct.netdev_queue*, %struct.netdev_queue** %dev_queue.addr, align 8, !dbg !16885
  %dql = getelementptr inbounds %struct.netdev_queue, %struct.netdev_queue* %0, i32 0, i32 11, !dbg !16886
  %1 = load i32, i32* %bytes.addr, align 4, !dbg !16887
  call void @dql_queued(%struct.dql* %dql, i32 %1) #14, !dbg !16888
  %2 = load %struct.netdev_queue*, %struct.netdev_queue** %dev_queue.addr, align 8, !dbg !16889
  %dql1 = getelementptr inbounds %struct.netdev_queue, %struct.netdev_queue* %2, i32 0, i32 11, !dbg !16889
  %call = call i32 @dql_avail(%struct.dql* %dql1) #14, !dbg !16889
  %cmp = icmp sge i32 %call, 0, !dbg !16889
  %lnot = xor i1 %cmp, true, !dbg !16889
  %lnot2 = xor i1 %lnot, true, !dbg !16889
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !16889
  %conv = sext i32 %lnot.ext to i64, !dbg !16889
  %tobool = icmp ne i64 %conv, 0, !dbg !16889
  br i1 %tobool, label %if.then, label %if.end, !dbg !16891

if.then:                                          ; preds = %entry
  br label %if.end15, !dbg !16892

if.end:                                           ; preds = %entry
  %3 = load %struct.netdev_queue*, %struct.netdev_queue** %dev_queue.addr, align 8, !dbg !16893
  %state = getelementptr inbounds %struct.netdev_queue, %struct.netdev_queue* %3, i32 0, i32 10, !dbg !16894
  call void @set_bit(i64 1, i64* %state) #14, !dbg !16895
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !16896, !srcloc !16897
  %4 = load %struct.netdev_queue*, %struct.netdev_queue** %dev_queue.addr, align 8, !dbg !16898
  %dql3 = getelementptr inbounds %struct.netdev_queue, %struct.netdev_queue* %4, i32 0, i32 11, !dbg !16898
  %call4 = call i32 @dql_avail(%struct.dql* %dql3) #14, !dbg !16898
  %cmp5 = icmp sge i32 %call4, 0, !dbg !16898
  %lnot7 = xor i1 %cmp5, true, !dbg !16898
  %lnot9 = xor i1 %lnot7, true, !dbg !16898
  %lnot.ext10 = zext i1 %lnot9 to i32, !dbg !16898
  %conv11 = sext i32 %lnot.ext10 to i64, !dbg !16898
  %tobool12 = icmp ne i64 %conv11, 0, !dbg !16898
  br i1 %tobool12, label %if.then13, label %if.end15, !dbg !16900

if.then13:                                        ; preds = %if.end
  %5 = load %struct.netdev_queue*, %struct.netdev_queue** %dev_queue.addr, align 8, !dbg !16901
  %state14 = getelementptr inbounds %struct.netdev_queue, %struct.netdev_queue* %5, i32 0, i32 10, !dbg !16902
  call void @clear_bit(i64 1, i64* %state14) #14, !dbg !16903
  br label %if.end15, !dbg !16903

if.end15:                                         ; preds = %if.then, %if.then13, %if.end
  ret void, !dbg !16904
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dql_queued(%struct.dql* %dql, i32 %count) #2 !dbg !16905 {
entry:
  %dql.addr = alloca %struct.dql*, align 8
  %count.addr = alloca i32, align 4
  store %struct.dql* %dql, %struct.dql** %dql.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dql** %dql.addr, metadata !16909, metadata !DIExpression()), !dbg !16910
  store i32 %count, i32* %count.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %count.addr, metadata !16911, metadata !DIExpression()), !dbg !16912
  br label %do.body, !dbg !16913

do.body:                                          ; preds = %entry
  %0 = load i32, i32* %count.addr, align 4, !dbg !16914
  %cmp = icmp ugt i32 %0, 268435455, !dbg !16914
  %lnot = xor i1 %cmp, true, !dbg !16914
  %lnot1 = xor i1 %lnot, true, !dbg !16914
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !16914
  %conv = sext i32 %lnot.ext to i64, !dbg !16914
  %tobool = icmp ne i64 %conv, 0, !dbg !16914
  br i1 %tobool, label %if.then, label %if.end, !dbg !16917

if.then:                                          ; preds = %do.body
  br label %do.body2, !dbg !16914

do.body2:                                         ; preds = %if.then
  br label %do.body3, !dbg !16918

do.body3:                                         ; preds = %do.body2
  br label %do.end, !dbg !16920

do.end:                                           ; preds = %do.body3
  br label %do.body4, !dbg !16918

do.body4:                                         ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.55, i64 0, i64 0), i32 77, i32 0, i64 12) #10, !dbg !16922, !srcloc !16924
  br label %do.end5, !dbg !16922

do.end5:                                          ; preds = %do.body4
  br label %do.body6, !dbg !16918

do.body6:                                         ; preds = %do.end5
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 152) #10, !dbg !16925, !srcloc !16928
  unreachable, !dbg !16929

do.end7:                                          ; No predecessors!
  br label %do.end8, !dbg !16918

do.end8:                                          ; preds = %do.end7
  br label %if.end, !dbg !16918

if.end:                                           ; preds = %do.end8, %do.body
  br label %do.end9, !dbg !16917

do.end9:                                          ; preds = %if.end
  %1 = load i32, i32* %count.addr, align 4, !dbg !16930
  %2 = load %struct.dql*, %struct.dql** %dql.addr, align 8, !dbg !16931
  %last_obj_cnt = getelementptr inbounds %struct.dql, %struct.dql* %2, i32 0, i32 2, !dbg !16932
  store i32 %1, i32* %last_obj_cnt, align 8, !dbg !16933
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !16934, !srcloc !16935
  %3 = load i32, i32* %count.addr, align 4, !dbg !16936
  %4 = load %struct.dql*, %struct.dql** %dql.addr, align 8, !dbg !16937
  %num_queued = getelementptr inbounds %struct.dql, %struct.dql* %4, i32 0, i32 0, !dbg !16938
  %5 = load i32, i32* %num_queued, align 8, !dbg !16939
  %add = add i32 %5, %3, !dbg !16939
  store i32 %add, i32* %num_queued, align 8, !dbg !16939
  ret void, !dbg !16940
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @dql_avail(%struct.dql* %dql) #2 !dbg !16941 {
entry:
  %dql.addr = alloca %struct.dql*, align 8
  %tmp = alloca i32, align 4
  %tmp3 = alloca i32, align 4
  store %struct.dql* %dql, %struct.dql** %dql.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dql** %dql.addr, metadata !16946, metadata !DIExpression()), !dbg !16947
  br label %do.body, !dbg !16948

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !16950

do.end:                                           ; preds = %do.body
  %0 = load %struct.dql*, %struct.dql** %dql.addr, align 8, !dbg !16948
  %adj_limit = getelementptr inbounds %struct.dql, %struct.dql* %0, i32 0, i32 1, !dbg !16948
  %1 = load volatile i32, i32* %adj_limit, align 4, !dbg !16948
  store i32 %1, i32* %tmp, align 4, !dbg !16950
  %2 = load i32, i32* %tmp, align 4, !dbg !16948
  br label %do.body1, !dbg !16952

do.body1:                                         ; preds = %do.end
  br label %do.end2, !dbg !16954

do.end2:                                          ; preds = %do.body1
  %3 = load %struct.dql*, %struct.dql** %dql.addr, align 8, !dbg !16952
  %num_queued = getelementptr inbounds %struct.dql, %struct.dql* %3, i32 0, i32 0, !dbg !16952
  %4 = load volatile i32, i32* %num_queued, align 8, !dbg !16952
  store i32 %4, i32* %tmp3, align 4, !dbg !16954
  %5 = load i32, i32* %tmp3, align 4, !dbg !16952
  %sub = sub i32 %2, %5, !dbg !16956
  ret i32 %sub, !dbg !16957
}

; Function Attrs: noredzone
declare dso_local void @__dev_kfree_skb_any(%struct.sk_buff*, i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @genesis_set_multicast(%struct.net_device* %dev) #2 !dbg !16958 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %skge = alloca %struct.skge_port*, align 8
  %hw = alloca %struct.skge_hw*, align 8
  %port = alloca i32, align 4
  %ha = alloca %struct.netdev_hw_addr*, align 8
  %mode = alloca i32, align 4
  %filter = alloca [8 x i8], align 1
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.netdev_hw_addr*, align 8
  %__mptr23 = alloca i8*, align 8
  %tmp28 = alloca %struct.netdev_hw_addr*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !16959, metadata !DIExpression()), !dbg !16960
  call void @llvm.dbg.declare(metadata %struct.skge_port** %skge, metadata !16961, metadata !DIExpression()), !dbg !16962
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !16963
  %call = call i8* @netdev_priv(%struct.net_device* %0) #14, !dbg !16964
  %1 = bitcast i8* %call to %struct.skge_port*, !dbg !16964
  store %struct.skge_port* %1, %struct.skge_port** %skge, align 8, !dbg !16962
  call void @llvm.dbg.declare(metadata %struct.skge_hw** %hw, metadata !16965, metadata !DIExpression()), !dbg !16966
  %2 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !16967
  %hw1 = getelementptr inbounds %struct.skge_port, %struct.skge_port* %2, i32 0, i32 0, !dbg !16968
  %3 = load %struct.skge_hw*, %struct.skge_hw** %hw1, align 8, !dbg !16968
  store %struct.skge_hw* %3, %struct.skge_hw** %hw, align 8, !dbg !16966
  call void @llvm.dbg.declare(metadata i32* %port, metadata !16969, metadata !DIExpression()), !dbg !16970
  %4 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !16971
  %port2 = getelementptr inbounds %struct.skge_port, %struct.skge_port* %4, i32 0, i32 3, !dbg !16972
  %5 = load i32, i32* %port2, align 8, !dbg !16972
  store i32 %5, i32* %port, align 4, !dbg !16970
  call void @llvm.dbg.declare(metadata %struct.netdev_hw_addr** %ha, metadata !16973, metadata !DIExpression()), !dbg !16974
  call void @llvm.dbg.declare(metadata i32* %mode, metadata !16975, metadata !DIExpression()), !dbg !16976
  call void @llvm.dbg.declare(metadata [8 x i8]* %filter, metadata !16977, metadata !DIExpression()), !dbg !16979
  %6 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !16980
  %7 = load i32, i32* %port, align 4, !dbg !16981
  %call3 = call i32 @xm_read32(%struct.skge_hw* %6, i32 %7, i32 292) #14, !dbg !16982
  store i32 %call3, i32* %mode, align 4, !dbg !16983
  %8 = load i32, i32* %mode, align 4, !dbg !16984
  %or = or i32 %8, 32768, !dbg !16984
  store i32 %or, i32* %mode, align 4, !dbg !16984
  %9 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !16985
  %flags = getelementptr inbounds %struct.net_device, %struct.net_device* %9, i32 0, i32 36, !dbg !16987
  %10 = load i32, i32* %flags, align 8, !dbg !16987
  %and = and i32 %10, 256, !dbg !16988
  %tobool = icmp ne i32 %and, 0, !dbg !16988
  br i1 %tobool, label %if.then, label %if.else, !dbg !16989

if.then:                                          ; preds = %entry
  %11 = load i32, i32* %mode, align 4, !dbg !16990
  %or4 = or i32 %11, 8, !dbg !16990
  store i32 %or4, i32* %mode, align 4, !dbg !16990
  br label %if.end, !dbg !16991

if.else:                                          ; preds = %entry
  %12 = load i32, i32* %mode, align 4, !dbg !16992
  %and5 = and i32 %12, -9, !dbg !16992
  store i32 %and5, i32* %mode, align 4, !dbg !16992
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %13 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !16993
  %flags6 = getelementptr inbounds %struct.net_device, %struct.net_device* %13, i32 0, i32 36, !dbg !16995
  %14 = load i32, i32* %flags6, align 8, !dbg !16995
  %and7 = and i32 %14, 512, !dbg !16996
  %tobool8 = icmp ne i32 %and7, 0, !dbg !16996
  br i1 %tobool8, label %if.then9, label %if.else10, !dbg !16997

if.then9:                                         ; preds = %if.end
  %arraydecay = getelementptr inbounds [8 x i8], [8 x i8]* %filter, i64 0, i64 0, !dbg !16998
  call void @llvm.memset.p0i8.i64(i8* align 1 %arraydecay, i8 -1, i64 8, i1 false), !dbg !16998
  br label %if.end30, !dbg !16998

if.else10:                                        ; preds = %if.end
  %arraydecay11 = getelementptr inbounds [8 x i8], [8 x i8]* %filter, i64 0, i64 0, !dbg !16999
  call void @llvm.memset.p0i8.i64(i8* align 1 %arraydecay11, i8 0, i64 8, i1 false), !dbg !16999
  %15 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !17001
  %flow_status = getelementptr inbounds %struct.skge_port, %struct.skge_port* %15, i32 0, i32 10, !dbg !17003
  %16 = load i32, i32* %flow_status, align 4, !dbg !17003
  %cmp = icmp eq i32 %16, 2, !dbg !17004
  br i1 %cmp, label %if.then14, label %lor.lhs.false, !dbg !17005

lor.lhs.false:                                    ; preds = %if.else10
  %17 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !17006
  %flow_status12 = getelementptr inbounds %struct.skge_port, %struct.skge_port* %17, i32 0, i32 10, !dbg !17007
  %18 = load i32, i32* %flow_status12, align 4, !dbg !17007
  %cmp13 = icmp eq i32 %18, 4, !dbg !17008
  br i1 %cmp13, label %if.then14, label %if.end16, !dbg !17009

if.then14:                                        ; preds = %lor.lhs.false, %if.else10
  %arraydecay15 = getelementptr inbounds [8 x i8], [8 x i8]* %filter, i64 0, i64 0, !dbg !17010
  call void @genesis_add_filter(i8* %arraydecay15, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @pause_mc_addr, i64 0, i64 0)) #14, !dbg !17011
  br label %if.end16, !dbg !17011

if.end16:                                         ; preds = %if.then14, %lor.lhs.false
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !17012, metadata !DIExpression()), !dbg !17015
  %19 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !17015
  %mc = getelementptr inbounds %struct.net_device, %struct.net_device* %19, i32 0, i32 63, !dbg !17015
  %list = getelementptr inbounds %struct.netdev_hw_addr_list, %struct.netdev_hw_addr_list* %mc, i32 0, i32 0, !dbg !17015
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %list, i32 0, i32 0, !dbg !17015
  %20 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !17015
  %21 = bitcast %struct.list_head* %20 to i8*, !dbg !17015
  store i8* %21, i8** %__mptr, align 8, !dbg !17015
  br label %do.body, !dbg !17015

do.body:                                          ; preds = %if.end16
  br label %do.end, !dbg !17016

do.end:                                           ; preds = %do.body
  %22 = load i8*, i8** %__mptr, align 8, !dbg !17015
  %add.ptr = getelementptr i8, i8* %22, i64 0, !dbg !17015
  %23 = bitcast i8* %add.ptr to %struct.netdev_hw_addr*, !dbg !17015
  store %struct.netdev_hw_addr* %23, %struct.netdev_hw_addr** %tmp, align 8, !dbg !17016
  %24 = load %struct.netdev_hw_addr*, %struct.netdev_hw_addr** %tmp, align 8, !dbg !17015
  store %struct.netdev_hw_addr* %24, %struct.netdev_hw_addr** %ha, align 8, !dbg !17018
  br label %for.cond, !dbg !17018

for.cond:                                         ; preds = %do.end27, %do.end
  %25 = load %struct.netdev_hw_addr*, %struct.netdev_hw_addr** %ha, align 8, !dbg !17019
  %list17 = getelementptr inbounds %struct.netdev_hw_addr, %struct.netdev_hw_addr* %25, i32 0, i32 0, !dbg !17019
  %26 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !17019
  %mc18 = getelementptr inbounds %struct.net_device, %struct.net_device* %26, i32 0, i32 63, !dbg !17019
  %list19 = getelementptr inbounds %struct.netdev_hw_addr_list, %struct.netdev_hw_addr_list* %mc18, i32 0, i32 0, !dbg !17019
  %cmp20 = icmp eq %struct.list_head* %list17, %list19, !dbg !17019
  %lnot = xor i1 %cmp20, true, !dbg !17019
  br i1 %lnot, label %for.body, label %for.end, !dbg !17018

for.body:                                         ; preds = %for.cond
  %arraydecay21 = getelementptr inbounds [8 x i8], [8 x i8]* %filter, i64 0, i64 0, !dbg !17021
  %27 = load %struct.netdev_hw_addr*, %struct.netdev_hw_addr** %ha, align 8, !dbg !17022
  %addr = getelementptr inbounds %struct.netdev_hw_addr, %struct.netdev_hw_addr* %27, i32 0, i32 1, !dbg !17023
  %arraydecay22 = getelementptr inbounds [32 x i8], [32 x i8]* %addr, i64 0, i64 0, !dbg !17022
  call void @genesis_add_filter(i8* %arraydecay21, i8* %arraydecay22) #14, !dbg !17024
  br label %for.inc, !dbg !17024

for.inc:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata i8** %__mptr23, metadata !17025, metadata !DIExpression()), !dbg !17027
  %28 = load %struct.netdev_hw_addr*, %struct.netdev_hw_addr** %ha, align 8, !dbg !17027
  %list24 = getelementptr inbounds %struct.netdev_hw_addr, %struct.netdev_hw_addr* %28, i32 0, i32 0, !dbg !17027
  %next25 = getelementptr inbounds %struct.list_head, %struct.list_head* %list24, i32 0, i32 0, !dbg !17027
  %29 = load %struct.list_head*, %struct.list_head** %next25, align 8, !dbg !17027
  %30 = bitcast %struct.list_head* %29 to i8*, !dbg !17027
  store i8* %30, i8** %__mptr23, align 8, !dbg !17027
  br label %do.body26, !dbg !17027

do.body26:                                        ; preds = %for.inc
  br label %do.end27, !dbg !17028

do.end27:                                         ; preds = %do.body26
  %31 = load i8*, i8** %__mptr23, align 8, !dbg !17027
  %add.ptr29 = getelementptr i8, i8* %31, i64 0, !dbg !17027
  %32 = bitcast i8* %add.ptr29 to %struct.netdev_hw_addr*, !dbg !17027
  store %struct.netdev_hw_addr* %32, %struct.netdev_hw_addr** %tmp28, align 8, !dbg !17028
  %33 = load %struct.netdev_hw_addr*, %struct.netdev_hw_addr** %tmp28, align 8, !dbg !17027
  store %struct.netdev_hw_addr* %33, %struct.netdev_hw_addr** %ha, align 8, !dbg !17019
  br label %for.cond, !dbg !17019, !llvm.loop !17030

for.end:                                          ; preds = %for.cond
  br label %if.end30

if.end30:                                         ; preds = %for.end, %if.then9
  %34 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !17032
  %35 = load i32, i32* %port, align 4, !dbg !17033
  %36 = load i32, i32* %mode, align 4, !dbg !17034
  call void @xm_write32(%struct.skge_hw* %34, i32 %35, i32 292, i32 %36) #14, !dbg !17035
  %37 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !17036
  %38 = load i32, i32* %port, align 4, !dbg !17037
  %arraydecay31 = getelementptr inbounds [8 x i8], [8 x i8]* %filter, i64 0, i64 0, !dbg !17038
  call void @xm_outhash(%struct.skge_hw* %37, i32 %38, i32 272, i8* %arraydecay31) #14, !dbg !17039
  ret void, !dbg !17040
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @yukon_set_multicast(%struct.net_device* %dev) #2 !dbg !17041 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %skge = alloca %struct.skge_port*, align 8
  %hw = alloca %struct.skge_hw*, align 8
  %port = alloca i32, align 4
  %ha = alloca %struct.netdev_hw_addr*, align 8
  %rx_pause = alloca i32, align 4
  %reg = alloca i16, align 2
  %filter = alloca [8 x i8], align 1
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.netdev_hw_addr*, align 8
  %__mptr38 = alloca i8*, align 8
  %tmp43 = alloca %struct.netdev_hw_addr*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !17042, metadata !DIExpression()), !dbg !17043
  call void @llvm.dbg.declare(metadata %struct.skge_port** %skge, metadata !17044, metadata !DIExpression()), !dbg !17045
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !17046
  %call = call i8* @netdev_priv(%struct.net_device* %0) #14, !dbg !17047
  %1 = bitcast i8* %call to %struct.skge_port*, !dbg !17047
  store %struct.skge_port* %1, %struct.skge_port** %skge, align 8, !dbg !17045
  call void @llvm.dbg.declare(metadata %struct.skge_hw** %hw, metadata !17048, metadata !DIExpression()), !dbg !17049
  %2 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !17050
  %hw1 = getelementptr inbounds %struct.skge_port, %struct.skge_port* %2, i32 0, i32 0, !dbg !17051
  %3 = load %struct.skge_hw*, %struct.skge_hw** %hw1, align 8, !dbg !17051
  store %struct.skge_hw* %3, %struct.skge_hw** %hw, align 8, !dbg !17049
  call void @llvm.dbg.declare(metadata i32* %port, metadata !17052, metadata !DIExpression()), !dbg !17053
  %4 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !17054
  %port2 = getelementptr inbounds %struct.skge_port, %struct.skge_port* %4, i32 0, i32 3, !dbg !17055
  %5 = load i32, i32* %port2, align 8, !dbg !17055
  store i32 %5, i32* %port, align 4, !dbg !17053
  call void @llvm.dbg.declare(metadata %struct.netdev_hw_addr** %ha, metadata !17056, metadata !DIExpression()), !dbg !17057
  call void @llvm.dbg.declare(metadata i32* %rx_pause, metadata !17058, metadata !DIExpression()), !dbg !17059
  %6 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !17060
  %flow_status = getelementptr inbounds %struct.skge_port, %struct.skge_port* %6, i32 0, i32 10, !dbg !17061
  %7 = load i32, i32* %flow_status, align 4, !dbg !17061
  %cmp = icmp eq i32 %7, 2, !dbg !17062
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !17063

lor.rhs:                                          ; preds = %entry
  %8 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !17064
  %flow_status3 = getelementptr inbounds %struct.skge_port, %struct.skge_port* %8, i32 0, i32 10, !dbg !17065
  %9 = load i32, i32* %flow_status3, align 4, !dbg !17065
  %cmp4 = icmp eq i32 %9, 4, !dbg !17066
  br label %lor.end, !dbg !17063

lor.end:                                          ; preds = %lor.rhs, %entry
  %10 = phi i1 [ true, %entry ], [ %cmp4, %lor.rhs ]
  %lor.ext = zext i1 %10 to i32, !dbg !17063
  store i32 %lor.ext, i32* %rx_pause, align 4, !dbg !17059
  call void @llvm.dbg.declare(metadata i16* %reg, metadata !17067, metadata !DIExpression()), !dbg !17068
  call void @llvm.dbg.declare(metadata [8 x i8]* %filter, metadata !17069, metadata !DIExpression()), !dbg !17070
  %arraydecay = getelementptr inbounds [8 x i8], [8 x i8]* %filter, i64 0, i64 0, !dbg !17071
  call void @llvm.memset.p0i8.i64(i8* align 1 %arraydecay, i8 0, i64 8, i1 false), !dbg !17071
  %11 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !17072
  %12 = load i32, i32* %port, align 4, !dbg !17073
  %call5 = call zeroext i16 @gma_read16(%struct.skge_hw* %11, i32 %12, i32 12) #14, !dbg !17074
  store i16 %call5, i16* %reg, align 2, !dbg !17075
  %13 = load i16, i16* %reg, align 2, !dbg !17076
  %conv = zext i16 %13 to i32, !dbg !17076
  %or = or i32 %conv, 32768, !dbg !17076
  %conv6 = trunc i32 %or to i16, !dbg !17076
  store i16 %conv6, i16* %reg, align 2, !dbg !17076
  %14 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !17077
  %flags = getelementptr inbounds %struct.net_device, %struct.net_device* %14, i32 0, i32 36, !dbg !17079
  %15 = load i32, i32* %flags, align 8, !dbg !17079
  %and = and i32 %15, 256, !dbg !17080
  %tobool = icmp ne i32 %and, 0, !dbg !17080
  br i1 %tobool, label %if.then, label %if.else, !dbg !17081

if.then:                                          ; preds = %lor.end
  %16 = load i16, i16* %reg, align 2, !dbg !17082
  %conv7 = zext i16 %16 to i32, !dbg !17082
  %and8 = and i32 %conv7, -49153, !dbg !17082
  %conv9 = trunc i32 %and8 to i16, !dbg !17082
  store i16 %conv9, i16* %reg, align 2, !dbg !17082
  br label %if.end47, !dbg !17083

if.else:                                          ; preds = %lor.end
  %17 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !17084
  %flags10 = getelementptr inbounds %struct.net_device, %struct.net_device* %17, i32 0, i32 36, !dbg !17086
  %18 = load i32, i32* %flags10, align 8, !dbg !17086
  %and11 = and i32 %18, 512, !dbg !17087
  %tobool12 = icmp ne i32 %and11, 0, !dbg !17087
  br i1 %tobool12, label %if.then13, label %if.else15, !dbg !17088

if.then13:                                        ; preds = %if.else
  %arraydecay14 = getelementptr inbounds [8 x i8], [8 x i8]* %filter, i64 0, i64 0, !dbg !17089
  call void @llvm.memset.p0i8.i64(i8* align 1 %arraydecay14, i8 -1, i64 8, i1 false), !dbg !17089
  br label %if.end46, !dbg !17089

if.else15:                                        ; preds = %if.else
  %19 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !17090
  %mc = getelementptr inbounds %struct.net_device, %struct.net_device* %19, i32 0, i32 63, !dbg !17090
  %count = getelementptr inbounds %struct.netdev_hw_addr_list, %struct.netdev_hw_addr_list* %mc, i32 0, i32 1, !dbg !17090
  %20 = load i32, i32* %count, align 8, !dbg !17090
  %cmp16 = icmp eq i32 %20, 0, !dbg !17090
  br i1 %cmp16, label %land.lhs.true, label %if.else23, !dbg !17092

land.lhs.true:                                    ; preds = %if.else15
  %21 = load i32, i32* %rx_pause, align 4, !dbg !17093
  %tobool18 = icmp ne i32 %21, 0, !dbg !17093
  br i1 %tobool18, label %if.else23, label %if.then19, !dbg !17094

if.then19:                                        ; preds = %land.lhs.true
  %22 = load i16, i16* %reg, align 2, !dbg !17095
  %conv20 = zext i16 %22 to i32, !dbg !17095
  %and21 = and i32 %conv20, -16385, !dbg !17095
  %conv22 = trunc i32 %and21 to i16, !dbg !17095
  store i16 %conv22, i16* %reg, align 2, !dbg !17095
  br label %if.end45, !dbg !17096

if.else23:                                        ; preds = %land.lhs.true, %if.else15
  %23 = load i16, i16* %reg, align 2, !dbg !17097
  %conv24 = zext i16 %23 to i32, !dbg !17097
  %or25 = or i32 %conv24, 16384, !dbg !17097
  %conv26 = trunc i32 %or25 to i16, !dbg !17097
  store i16 %conv26, i16* %reg, align 2, !dbg !17097
  %24 = load i32, i32* %rx_pause, align 4, !dbg !17099
  %tobool27 = icmp ne i32 %24, 0, !dbg !17099
  br i1 %tobool27, label %if.then28, label %if.end, !dbg !17101

if.then28:                                        ; preds = %if.else23
  %arraydecay29 = getelementptr inbounds [8 x i8], [8 x i8]* %filter, i64 0, i64 0, !dbg !17102
  call void @yukon_add_filter(i8* %arraydecay29, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @pause_mc_addr, i64 0, i64 0)) #14, !dbg !17103
  br label %if.end, !dbg !17103

if.end:                                           ; preds = %if.then28, %if.else23
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !17104, metadata !DIExpression()), !dbg !17107
  %25 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !17107
  %mc30 = getelementptr inbounds %struct.net_device, %struct.net_device* %25, i32 0, i32 63, !dbg !17107
  %list = getelementptr inbounds %struct.netdev_hw_addr_list, %struct.netdev_hw_addr_list* %mc30, i32 0, i32 0, !dbg !17107
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %list, i32 0, i32 0, !dbg !17107
  %26 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !17107
  %27 = bitcast %struct.list_head* %26 to i8*, !dbg !17107
  store i8* %27, i8** %__mptr, align 8, !dbg !17107
  br label %do.body, !dbg !17107

do.body:                                          ; preds = %if.end
  br label %do.end, !dbg !17108

do.end:                                           ; preds = %do.body
  %28 = load i8*, i8** %__mptr, align 8, !dbg !17107
  %add.ptr = getelementptr i8, i8* %28, i64 0, !dbg !17107
  %29 = bitcast i8* %add.ptr to %struct.netdev_hw_addr*, !dbg !17107
  store %struct.netdev_hw_addr* %29, %struct.netdev_hw_addr** %tmp, align 8, !dbg !17108
  %30 = load %struct.netdev_hw_addr*, %struct.netdev_hw_addr** %tmp, align 8, !dbg !17107
  store %struct.netdev_hw_addr* %30, %struct.netdev_hw_addr** %ha, align 8, !dbg !17110
  br label %for.cond, !dbg !17110

for.cond:                                         ; preds = %do.end42, %do.end
  %31 = load %struct.netdev_hw_addr*, %struct.netdev_hw_addr** %ha, align 8, !dbg !17111
  %list31 = getelementptr inbounds %struct.netdev_hw_addr, %struct.netdev_hw_addr* %31, i32 0, i32 0, !dbg !17111
  %32 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !17111
  %mc32 = getelementptr inbounds %struct.net_device, %struct.net_device* %32, i32 0, i32 63, !dbg !17111
  %list33 = getelementptr inbounds %struct.netdev_hw_addr_list, %struct.netdev_hw_addr_list* %mc32, i32 0, i32 0, !dbg !17111
  %cmp34 = icmp eq %struct.list_head* %list31, %list33, !dbg !17111
  %lnot = xor i1 %cmp34, true, !dbg !17111
  br i1 %lnot, label %for.body, label %for.end, !dbg !17110

for.body:                                         ; preds = %for.cond
  %arraydecay36 = getelementptr inbounds [8 x i8], [8 x i8]* %filter, i64 0, i64 0, !dbg !17113
  %33 = load %struct.netdev_hw_addr*, %struct.netdev_hw_addr** %ha, align 8, !dbg !17114
  %addr = getelementptr inbounds %struct.netdev_hw_addr, %struct.netdev_hw_addr* %33, i32 0, i32 1, !dbg !17115
  %arraydecay37 = getelementptr inbounds [32 x i8], [32 x i8]* %addr, i64 0, i64 0, !dbg !17114
  call void @yukon_add_filter(i8* %arraydecay36, i8* %arraydecay37) #14, !dbg !17116
  br label %for.inc, !dbg !17116

for.inc:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata i8** %__mptr38, metadata !17117, metadata !DIExpression()), !dbg !17119
  %34 = load %struct.netdev_hw_addr*, %struct.netdev_hw_addr** %ha, align 8, !dbg !17119
  %list39 = getelementptr inbounds %struct.netdev_hw_addr, %struct.netdev_hw_addr* %34, i32 0, i32 0, !dbg !17119
  %next40 = getelementptr inbounds %struct.list_head, %struct.list_head* %list39, i32 0, i32 0, !dbg !17119
  %35 = load %struct.list_head*, %struct.list_head** %next40, align 8, !dbg !17119
  %36 = bitcast %struct.list_head* %35 to i8*, !dbg !17119
  store i8* %36, i8** %__mptr38, align 8, !dbg !17119
  br label %do.body41, !dbg !17119

do.body41:                                        ; preds = %for.inc
  br label %do.end42, !dbg !17120

do.end42:                                         ; preds = %do.body41
  %37 = load i8*, i8** %__mptr38, align 8, !dbg !17119
  %add.ptr44 = getelementptr i8, i8* %37, i64 0, !dbg !17119
  %38 = bitcast i8* %add.ptr44 to %struct.netdev_hw_addr*, !dbg !17119
  store %struct.netdev_hw_addr* %38, %struct.netdev_hw_addr** %tmp43, align 8, !dbg !17120
  %39 = load %struct.netdev_hw_addr*, %struct.netdev_hw_addr** %tmp43, align 8, !dbg !17119
  store %struct.netdev_hw_addr* %39, %struct.netdev_hw_addr** %ha, align 8, !dbg !17111
  br label %for.cond, !dbg !17111, !llvm.loop !17122

for.end:                                          ; preds = %for.cond
  br label %if.end45

if.end45:                                         ; preds = %for.end, %if.then19
  br label %if.end46

if.end46:                                         ; preds = %if.end45, %if.then13
  br label %if.end47

if.end47:                                         ; preds = %if.end46, %if.then
  %40 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !17124
  %41 = load i32, i32* %port, align 4, !dbg !17125
  %arrayidx = getelementptr [8 x i8], [8 x i8]* %filter, i64 0, i64 0, !dbg !17126
  %42 = load i8, i8* %arrayidx, align 1, !dbg !17126
  %conv48 = zext i8 %42 to i16, !dbg !17127
  %conv49 = zext i16 %conv48 to i32, !dbg !17127
  %arrayidx50 = getelementptr [8 x i8], [8 x i8]* %filter, i64 0, i64 1, !dbg !17128
  %43 = load i8, i8* %arrayidx50, align 1, !dbg !17128
  %conv51 = zext i8 %43 to i16, !dbg !17129
  %conv52 = zext i16 %conv51 to i32, !dbg !17129
  %shl = shl i32 %conv52, 8, !dbg !17130
  %or53 = or i32 %conv49, %shl, !dbg !17131
  %conv54 = trunc i32 %or53 to i16, !dbg !17127
  call void @gma_write16(%struct.skge_hw* %40, i32 %41, i32 52, i16 zeroext %conv54) #14, !dbg !17132
  %44 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !17133
  %45 = load i32, i32* %port, align 4, !dbg !17134
  %arrayidx55 = getelementptr [8 x i8], [8 x i8]* %filter, i64 0, i64 2, !dbg !17135
  %46 = load i8, i8* %arrayidx55, align 1, !dbg !17135
  %conv56 = zext i8 %46 to i16, !dbg !17136
  %conv57 = zext i16 %conv56 to i32, !dbg !17136
  %arrayidx58 = getelementptr [8 x i8], [8 x i8]* %filter, i64 0, i64 3, !dbg !17137
  %47 = load i8, i8* %arrayidx58, align 1, !dbg !17137
  %conv59 = zext i8 %47 to i16, !dbg !17138
  %conv60 = zext i16 %conv59 to i32, !dbg !17138
  %shl61 = shl i32 %conv60, 8, !dbg !17139
  %or62 = or i32 %conv57, %shl61, !dbg !17140
  %conv63 = trunc i32 %or62 to i16, !dbg !17136
  call void @gma_write16(%struct.skge_hw* %44, i32 %45, i32 56, i16 zeroext %conv63) #14, !dbg !17141
  %48 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !17142
  %49 = load i32, i32* %port, align 4, !dbg !17143
  %arrayidx64 = getelementptr [8 x i8], [8 x i8]* %filter, i64 0, i64 4, !dbg !17144
  %50 = load i8, i8* %arrayidx64, align 1, !dbg !17144
  %conv65 = zext i8 %50 to i16, !dbg !17145
  %conv66 = zext i16 %conv65 to i32, !dbg !17145
  %arrayidx67 = getelementptr [8 x i8], [8 x i8]* %filter, i64 0, i64 5, !dbg !17146
  %51 = load i8, i8* %arrayidx67, align 1, !dbg !17146
  %conv68 = zext i8 %51 to i16, !dbg !17147
  %conv69 = zext i16 %conv68 to i32, !dbg !17147
  %shl70 = shl i32 %conv69, 8, !dbg !17148
  %or71 = or i32 %conv66, %shl70, !dbg !17149
  %conv72 = trunc i32 %or71 to i16, !dbg !17145
  call void @gma_write16(%struct.skge_hw* %48, i32 %49, i32 60, i16 zeroext %conv72) #14, !dbg !17150
  %52 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !17151
  %53 = load i32, i32* %port, align 4, !dbg !17152
  %arrayidx73 = getelementptr [8 x i8], [8 x i8]* %filter, i64 0, i64 6, !dbg !17153
  %54 = load i8, i8* %arrayidx73, align 1, !dbg !17153
  %conv74 = zext i8 %54 to i16, !dbg !17154
  %conv75 = zext i16 %conv74 to i32, !dbg !17154
  %arrayidx76 = getelementptr [8 x i8], [8 x i8]* %filter, i64 0, i64 7, !dbg !17155
  %55 = load i8, i8* %arrayidx76, align 1, !dbg !17155
  %conv77 = zext i8 %55 to i16, !dbg !17156
  %conv78 = zext i16 %conv77 to i32, !dbg !17156
  %shl79 = shl i32 %conv78, 8, !dbg !17157
  %or80 = or i32 %conv75, %shl79, !dbg !17158
  %conv81 = trunc i32 %or80 to i16, !dbg !17154
  call void @gma_write16(%struct.skge_hw* %52, i32 %53, i32 64, i16 zeroext %conv81) #14, !dbg !17159
  %56 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !17160
  %57 = load i32, i32* %port, align 4, !dbg !17161
  %58 = load i16, i16* %reg, align 2, !dbg !17162
  call void @gma_write16(%struct.skge_hw* %56, i32 %57, i32 12, i16 zeroext %58) #14, !dbg !17163
  ret void, !dbg !17164
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #5

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @genesis_add_filter(i8* %filter, i8* %addr) #2 !dbg !17165 {
entry:
  %filter.addr = alloca i8*, align 8
  %addr.addr = alloca i8*, align 8
  %crc = alloca i32, align 4
  %bit = alloca i32, align 4
  store i8* %filter, i8** %filter.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %filter.addr, metadata !17168, metadata !DIExpression()), !dbg !17169
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !17170, metadata !DIExpression()), !dbg !17171
  call void @llvm.dbg.declare(metadata i32* %crc, metadata !17172, metadata !DIExpression()), !dbg !17173
  call void @llvm.dbg.declare(metadata i32* %bit, metadata !17174, metadata !DIExpression()), !dbg !17175
  %0 = load i8*, i8** %addr.addr, align 8, !dbg !17176
  %call = call i32 @crc32_le(i32 -1, i8* %0, i64 6) #18, !dbg !17176
  store i32 %call, i32* %crc, align 4, !dbg !17177
  %1 = load i32, i32* %crc, align 4, !dbg !17178
  %neg = xor i32 %1, -1, !dbg !17179
  %and = and i32 %neg, 63, !dbg !17180
  store i32 %and, i32* %bit, align 4, !dbg !17181
  %2 = load i32, i32* %bit, align 4, !dbg !17182
  %rem = urem i32 %2, 8, !dbg !17183
  %shl = shl i32 1, %rem, !dbg !17184
  %3 = load i8*, i8** %filter.addr, align 8, !dbg !17185
  %4 = load i32, i32* %bit, align 4, !dbg !17186
  %div = udiv i32 %4, 8, !dbg !17187
  %idxprom = zext i32 %div to i64, !dbg !17185
  %arrayidx = getelementptr i8, i8* %3, i64 %idxprom, !dbg !17185
  %5 = load i8, i8* %arrayidx, align 1, !dbg !17188
  %conv = zext i8 %5 to i32, !dbg !17188
  %or = or i32 %conv, %shl, !dbg !17188
  %conv1 = trunc i32 %or to i8, !dbg !17188
  store i8 %conv1, i8* %arrayidx, align 1, !dbg !17188
  ret void, !dbg !17189
}

; Function Attrs: noredzone nounwind readonly
declare dso_local i32 @crc32_le(i32, i8*, i64) #12

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @yukon_add_filter(i8* %filter, i8* %addr) #2 !dbg !17190 {
entry:
  %filter.addr = alloca i8*, align 8
  %addr.addr = alloca i8*, align 8
  %bit = alloca i32, align 4
  %__x = alloca i32, align 4
  %tmp = alloca i32, align 4
  %___x = alloca i32, align 4
  %tmp20 = alloca i32, align 4
  store i8* %filter, i8** %filter.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %filter.addr, metadata !17191, metadata !DIExpression()), !dbg !17192
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !17193, metadata !DIExpression()), !dbg !17194
  call void @llvm.dbg.declare(metadata i32* %bit, metadata !17195, metadata !DIExpression()), !dbg !17196
  call void @llvm.dbg.declare(metadata i32* %__x, metadata !17197, metadata !DIExpression()), !dbg !17199
  %0 = load i8*, i8** %addr.addr, align 8, !dbg !17199
  %call = call i32 @crc32_le(i32 -1, i8* %0, i64 6) #18, !dbg !17199
  store i32 %call, i32* %__x, align 4, !dbg !17199
  %1 = load i32, i32* %__x, align 4, !dbg !17199
  %2 = call i1 @llvm.is.constant.i32(i32 %1), !dbg !17199
  br i1 %2, label %cond.true, label %cond.false, !dbg !17199

cond.true:                                        ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %___x, metadata !17200, metadata !DIExpression()), !dbg !17202
  %3 = load i32, i32* %__x, align 4, !dbg !17202
  store i32 %3, i32* %___x, align 4, !dbg !17202
  %4 = load i32, i32* %___x, align 4, !dbg !17202
  %shr = lshr i32 %4, 16, !dbg !17202
  %5 = load i32, i32* %___x, align 4, !dbg !17202
  %shl = shl i32 %5, 16, !dbg !17202
  %or = or i32 %shr, %shl, !dbg !17202
  store i32 %or, i32* %___x, align 4, !dbg !17202
  %6 = load i32, i32* %___x, align 4, !dbg !17202
  %and = and i32 %6, -16711936, !dbg !17202
  %shr1 = lshr i32 %and, 8, !dbg !17202
  %7 = load i32, i32* %___x, align 4, !dbg !17202
  %and2 = and i32 %7, 16711935, !dbg !17202
  %shl3 = shl i32 %and2, 8, !dbg !17202
  %or4 = or i32 %shr1, %shl3, !dbg !17202
  store i32 %or4, i32* %___x, align 4, !dbg !17202
  %8 = load i32, i32* %___x, align 4, !dbg !17202
  %and5 = and i32 %8, -252645136, !dbg !17202
  %shr6 = lshr i32 %and5, 4, !dbg !17202
  %9 = load i32, i32* %___x, align 4, !dbg !17202
  %and7 = and i32 %9, 252645135, !dbg !17202
  %shl8 = shl i32 %and7, 4, !dbg !17202
  %or9 = or i32 %shr6, %shl8, !dbg !17202
  store i32 %or9, i32* %___x, align 4, !dbg !17202
  %10 = load i32, i32* %___x, align 4, !dbg !17202
  %and10 = and i32 %10, -858993460, !dbg !17202
  %shr11 = lshr i32 %and10, 2, !dbg !17202
  %11 = load i32, i32* %___x, align 4, !dbg !17202
  %and12 = and i32 %11, 858993459, !dbg !17202
  %shl13 = shl i32 %and12, 2, !dbg !17202
  %or14 = or i32 %shr11, %shl13, !dbg !17202
  store i32 %or14, i32* %___x, align 4, !dbg !17202
  %12 = load i32, i32* %___x, align 4, !dbg !17202
  %and15 = and i32 %12, -1431655766, !dbg !17202
  %shr16 = lshr i32 %and15, 1, !dbg !17202
  %13 = load i32, i32* %___x, align 4, !dbg !17202
  %and17 = and i32 %13, 1431655765, !dbg !17202
  %shl18 = shl i32 %and17, 1, !dbg !17202
  %or19 = or i32 %shr16, %shl18, !dbg !17202
  store i32 %or19, i32* %___x, align 4, !dbg !17202
  %14 = load i32, i32* %___x, align 4, !dbg !17202
  store i32 %14, i32* %tmp20, align 4, !dbg !17202
  %15 = load i32, i32* %tmp20, align 4, !dbg !17202
  br label %cond.end, !dbg !17199

cond.false:                                       ; preds = %entry
  %16 = load i32, i32* %__x, align 4, !dbg !17199
  %call21 = call i32 @__bitrev32(i32 %16) #14, !dbg !17199
  br label %cond.end, !dbg !17199

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %15, %cond.true ], [ %call21, %cond.false ], !dbg !17199
  store i32 %cond, i32* %tmp, align 4, !dbg !17199
  %17 = load i32, i32* %tmp, align 4, !dbg !17199
  %and22 = and i32 %17, 63, !dbg !17203
  store i32 %and22, i32* %bit, align 4, !dbg !17196
  %18 = load i32, i32* %bit, align 4, !dbg !17204
  %rem = urem i32 %18, 8, !dbg !17205
  %shl23 = shl i32 1, %rem, !dbg !17206
  %19 = load i8*, i8** %filter.addr, align 8, !dbg !17207
  %20 = load i32, i32* %bit, align 4, !dbg !17208
  %div = udiv i32 %20, 8, !dbg !17209
  %idxprom = zext i32 %div to i64, !dbg !17207
  %arrayidx = getelementptr i8, i8* %19, i64 %idxprom, !dbg !17207
  %21 = load i8, i8* %arrayidx, align 1, !dbg !17210
  %conv = zext i8 %21 to i32, !dbg !17210
  %or24 = or i32 %conv, %shl23, !dbg !17210
  %conv25 = trunc i32 %or24 to i8, !dbg !17210
  store i8 %conv25, i8* %arrayidx, align 1, !dbg !17210
  ret void, !dbg !17211
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @__bitrev32(i32 %x) #2 !dbg !17212 {
entry:
  %x.addr = alloca i32, align 4
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !17216, metadata !DIExpression()), !dbg !17217
  %0 = load i32, i32* %x.addr, align 4, !dbg !17218
  %and = and i32 %0, 65535, !dbg !17219
  %conv = trunc i32 %and to i16, !dbg !17218
  %call = call zeroext i16 @__bitrev16(i16 zeroext %conv) #14, !dbg !17220
  %conv1 = zext i16 %call to i32, !dbg !17220
  %shl = shl i32 %conv1, 16, !dbg !17221
  %1 = load i32, i32* %x.addr, align 4, !dbg !17222
  %shr = lshr i32 %1, 16, !dbg !17223
  %conv2 = trunc i32 %shr to i16, !dbg !17222
  %call3 = call zeroext i16 @__bitrev16(i16 zeroext %conv2) #14, !dbg !17224
  %conv4 = zext i16 %call3 to i32, !dbg !17224
  %or = or i32 %shl, %conv4, !dbg !17225
  ret i32 %or, !dbg !17226
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i16 @__bitrev16(i16 zeroext %x) #2 !dbg !17227 {
entry:
  %x.addr = alloca i16, align 2
  store i16 %x, i16* %x.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %x.addr, metadata !17230, metadata !DIExpression()), !dbg !17231
  %0 = load i16, i16* %x.addr, align 2, !dbg !17232
  %conv = zext i16 %0 to i32, !dbg !17232
  %and = and i32 %conv, 255, !dbg !17233
  %conv1 = trunc i32 %and to i8, !dbg !17232
  %call = call zeroext i8 @__bitrev8(i8 zeroext %conv1) #14, !dbg !17234
  %conv2 = zext i8 %call to i32, !dbg !17234
  %shl = shl i32 %conv2, 8, !dbg !17235
  %1 = load i16, i16* %x.addr, align 2, !dbg !17236
  %conv3 = zext i16 %1 to i32, !dbg !17236
  %shr = ashr i32 %conv3, 8, !dbg !17237
  %conv4 = trunc i32 %shr to i8, !dbg !17236
  %call5 = call zeroext i8 @__bitrev8(i8 zeroext %conv4) #14, !dbg !17238
  %conv6 = zext i8 %call5 to i32, !dbg !17238
  %or = or i32 %shl, %conv6, !dbg !17239
  %conv7 = trunc i32 %or to i16, !dbg !17240
  ret i16 %conv7, !dbg !17241
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i8 @__bitrev8(i8 zeroext %byte) #2 !dbg !17242 {
entry:
  %byte.addr = alloca i8, align 1
  store i8 %byte, i8* %byte.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %byte.addr, metadata !17245, metadata !DIExpression()), !dbg !17246
  %0 = load i8, i8* %byte.addr, align 1, !dbg !17247
  %idxprom = zext i8 %0 to i64, !dbg !17248
  %arrayidx = getelementptr [256 x i8], [256 x i8]* @byte_rev_table, i64 0, i64 %idxprom, !dbg !17248
  %1 = load i8, i8* %arrayidx, align 1, !dbg !17248
  ret i8 %1, !dbg !17249
}

; Function Attrs: noredzone
declare dso_local void @memcpy_toio(i8*, i8*, i64) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.mii_ioctl_data* @if_mii(%struct.ifreq* %rq) #2 !dbg !17250 {
entry:
  %rq.addr = alloca %struct.ifreq*, align 8
  store %struct.ifreq* %rq, %struct.ifreq** %rq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ifreq** %rq.addr, metadata !17254, metadata !DIExpression()), !dbg !17255
  %0 = load %struct.ifreq*, %struct.ifreq** %rq.addr, align 8, !dbg !17256
  %ifr_ifru = getelementptr inbounds %struct.ifreq, %struct.ifreq* %0, i32 0, i32 1, !dbg !17257
  %1 = bitcast %union.anon.89* %ifr_ifru to %struct.mii_ioctl_data*, !dbg !17258
  ret %struct.mii_ioctl_data* %1, !dbg !17259
}

; Function Attrs: noredzone
declare dso_local void @dev_close(%struct.net_device*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @genesis_get_stats(%struct.skge_port* %skge, i64* %data) #2 !dbg !17260 {
entry:
  %skge.addr = alloca %struct.skge_port*, align 8
  %data.addr = alloca i64*, align 8
  %hw = alloca %struct.skge_hw*, align 8
  %port = alloca i32, align 4
  %i = alloca i32, align 4
  %timeout = alloca i64, align 8
  store %struct.skge_port* %skge, %struct.skge_port** %skge.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.skge_port** %skge.addr, metadata !17263, metadata !DIExpression()), !dbg !17264
  store i64* %data, i64** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %data.addr, metadata !17265, metadata !DIExpression()), !dbg !17266
  call void @llvm.dbg.declare(metadata %struct.skge_hw** %hw, metadata !17267, metadata !DIExpression()), !dbg !17268
  %0 = load %struct.skge_port*, %struct.skge_port** %skge.addr, align 8, !dbg !17269
  %hw1 = getelementptr inbounds %struct.skge_port, %struct.skge_port* %0, i32 0, i32 0, !dbg !17270
  %1 = load %struct.skge_hw*, %struct.skge_hw** %hw1, align 8, !dbg !17270
  store %struct.skge_hw* %1, %struct.skge_hw** %hw, align 8, !dbg !17268
  call void @llvm.dbg.declare(metadata i32* %port, metadata !17271, metadata !DIExpression()), !dbg !17272
  %2 = load %struct.skge_port*, %struct.skge_port** %skge.addr, align 8, !dbg !17273
  %port2 = getelementptr inbounds %struct.skge_port, %struct.skge_port* %2, i32 0, i32 3, !dbg !17274
  %3 = load i32, i32* %port2, align 8, !dbg !17274
  store i32 %3, i32* %port, align 4, !dbg !17272
  call void @llvm.dbg.declare(metadata i32* %i, metadata !17275, metadata !DIExpression()), !dbg !17276
  call void @llvm.dbg.declare(metadata i64* %timeout, metadata !17277, metadata !DIExpression()), !dbg !17278
  %4 = load volatile i64, i64* @jiffies, align 8, !dbg !17279
  %add = add i64 %4, 250, !dbg !17280
  store i64 %add, i64* %timeout, align 8, !dbg !17278
  %5 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !17281
  %6 = load i32, i32* %port, align 4, !dbg !17282
  call void @xm_write16(%struct.skge_hw* %5, i32 %6, i32 512, i16 zeroext 48) #14, !dbg !17283
  br label %while.cond, !dbg !17284

while.cond:                                       ; preds = %if.end, %entry
  %7 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !17285
  %8 = load i32, i32* %port, align 4, !dbg !17286
  %call = call zeroext i16 @xm_read16(%struct.skge_hw* %7, i32 %8, i32 512) #14, !dbg !17287
  %conv = zext i16 %call to i32, !dbg !17287
  %and = and i32 %conv, 48, !dbg !17288
  %tobool = icmp ne i32 %and, 0, !dbg !17284
  br i1 %tobool, label %while.body, label %while.end, !dbg !17284

while.body:                                       ; preds = %while.cond
  %9 = load i64, i64* %timeout, align 8, !dbg !17289
  %10 = load volatile i64, i64* @jiffies, align 8, !dbg !17289
  %sub = sub i64 %9, %10, !dbg !17289
  %cmp = icmp slt i64 %sub, 0, !dbg !17289
  br i1 %cmp, label %if.then, label %if.end, !dbg !17292

if.then:                                          ; preds = %while.body
  br label %while.end, !dbg !17293

if.end:                                           ; preds = %while.body
  call void @__const_udelay(i64 42950) #14, !dbg !17294
  br label %while.cond, !dbg !17284, !llvm.loop !17299

while.end:                                        ; preds = %if.then, %while.cond
  %11 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !17301
  %12 = load i32, i32* %port, align 4, !dbg !17302
  %call4 = call i32 @xm_read32(%struct.skge_hw* %11, i32 %12, i32 644) #14, !dbg !17303
  %conv5 = zext i32 %call4 to i64, !dbg !17304
  %shl = shl i64 %conv5, 32, !dbg !17305
  %13 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !17306
  %14 = load i32, i32* %port, align 4, !dbg !17307
  %call6 = call i32 @xm_read32(%struct.skge_hw* %13, i32 %14, i32 648) #14, !dbg !17308
  %conv7 = zext i32 %call6 to i64, !dbg !17308
  %or = or i64 %shl, %conv7, !dbg !17309
  %15 = load i64*, i64** %data.addr, align 8, !dbg !17310
  %arrayidx = getelementptr i64, i64* %15, i64 0, !dbg !17310
  store i64 %or, i64* %arrayidx, align 8, !dbg !17311
  %16 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !17312
  %17 = load i32, i32* %port, align 4, !dbg !17313
  %call8 = call i32 @xm_read32(%struct.skge_hw* %16, i32 %17, i32 772) #14, !dbg !17314
  %conv9 = zext i32 %call8 to i64, !dbg !17315
  %shl10 = shl i64 %conv9, 32, !dbg !17316
  %18 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !17317
  %19 = load i32, i32* %port, align 4, !dbg !17318
  %call11 = call i32 @xm_read32(%struct.skge_hw* %18, i32 %19, i32 776) #14, !dbg !17319
  %conv12 = zext i32 %call11 to i64, !dbg !17319
  %or13 = or i64 %shl10, %conv12, !dbg !17320
  %20 = load i64*, i64** %data.addr, align 8, !dbg !17321
  %arrayidx14 = getelementptr i64, i64* %20, i64 1, !dbg !17321
  store i64 %or13, i64* %arrayidx14, align 8, !dbg !17322
  store i32 2, i32* %i, align 4, !dbg !17323
  br label %for.cond, !dbg !17325

for.cond:                                         ; preds = %for.inc, %while.end
  %21 = load i32, i32* %i, align 4, !dbg !17326
  %conv15 = sext i32 %21 to i64, !dbg !17326
  %cmp16 = icmp ult i64 %conv15, 21, !dbg !17328
  br i1 %cmp16, label %for.body, label %for.end, !dbg !17329

for.body:                                         ; preds = %for.cond
  %22 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !17330
  %23 = load i32, i32* %port, align 4, !dbg !17331
  %24 = load i32, i32* %i, align 4, !dbg !17332
  %idxprom = sext i32 %24 to i64, !dbg !17333
  %arrayidx18 = getelementptr [21 x %struct.skge_stat], [21 x %struct.skge_stat]* @skge_stats, i64 0, i64 %idxprom, !dbg !17333
  %xmac_offset = getelementptr inbounds %struct.skge_stat, %struct.skge_stat* %arrayidx18, i32 0, i32 1, !dbg !17334
  %25 = load i16, i16* %xmac_offset, align 4, !dbg !17334
  %conv19 = zext i16 %25 to i32, !dbg !17333
  %call20 = call i32 @xm_read32(%struct.skge_hw* %22, i32 %23, i32 %conv19) #14, !dbg !17335
  %conv21 = zext i32 %call20 to i64, !dbg !17335
  %26 = load i64*, i64** %data.addr, align 8, !dbg !17336
  %27 = load i32, i32* %i, align 4, !dbg !17337
  %idxprom22 = sext i32 %27 to i64, !dbg !17336
  %arrayidx23 = getelementptr i64, i64* %26, i64 %idxprom22, !dbg !17336
  store i64 %conv21, i64* %arrayidx23, align 8, !dbg !17338
  br label %for.inc, !dbg !17336

for.inc:                                          ; preds = %for.body
  %28 = load i32, i32* %i, align 4, !dbg !17339
  %inc = add i32 %28, 1, !dbg !17339
  store i32 %inc, i32* %i, align 4, !dbg !17339
  br label %for.cond, !dbg !17340, !llvm.loop !17341

for.end:                                          ; preds = %for.cond
  ret void, !dbg !17343
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @yukon_get_stats(%struct.skge_port* %skge, i64* %data) #2 !dbg !17344 {
entry:
  %skge.addr = alloca %struct.skge_port*, align 8
  %data.addr = alloca i64*, align 8
  %hw = alloca %struct.skge_hw*, align 8
  %port = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.skge_port* %skge, %struct.skge_port** %skge.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.skge_port** %skge.addr, metadata !17345, metadata !DIExpression()), !dbg !17346
  store i64* %data, i64** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %data.addr, metadata !17347, metadata !DIExpression()), !dbg !17348
  call void @llvm.dbg.declare(metadata %struct.skge_hw** %hw, metadata !17349, metadata !DIExpression()), !dbg !17350
  %0 = load %struct.skge_port*, %struct.skge_port** %skge.addr, align 8, !dbg !17351
  %hw1 = getelementptr inbounds %struct.skge_port, %struct.skge_port* %0, i32 0, i32 0, !dbg !17352
  %1 = load %struct.skge_hw*, %struct.skge_hw** %hw1, align 8, !dbg !17352
  store %struct.skge_hw* %1, %struct.skge_hw** %hw, align 8, !dbg !17350
  call void @llvm.dbg.declare(metadata i32* %port, metadata !17353, metadata !DIExpression()), !dbg !17354
  %2 = load %struct.skge_port*, %struct.skge_port** %skge.addr, align 8, !dbg !17355
  %port2 = getelementptr inbounds %struct.skge_port, %struct.skge_port* %2, i32 0, i32 3, !dbg !17356
  %3 = load i32, i32* %port2, align 8, !dbg !17356
  store i32 %3, i32* %port, align 4, !dbg !17354
  call void @llvm.dbg.declare(metadata i32* %i, metadata !17357, metadata !DIExpression()), !dbg !17358
  %4 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !17359
  %5 = load i32, i32* %port, align 4, !dbg !17360
  %call = call i32 @gma_read32(%struct.skge_hw* %4, i32 %5, i32 488) #14, !dbg !17361
  %conv = zext i32 %call to i64, !dbg !17362
  %shl = shl i64 %conv, 32, !dbg !17363
  %6 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !17364
  %7 = load i32, i32* %port, align 4, !dbg !17365
  %call3 = call i32 @gma_read32(%struct.skge_hw* %6, i32 %7, i32 480) #14, !dbg !17366
  %conv4 = zext i32 %call3 to i64, !dbg !17366
  %or = or i64 %shl, %conv4, !dbg !17367
  %8 = load i64*, i64** %data.addr, align 8, !dbg !17368
  %arrayidx = getelementptr i64, i64* %8, i64 0, !dbg !17368
  store i64 %or, i64* %arrayidx, align 8, !dbg !17369
  %9 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !17370
  %10 = load i32, i32* %port, align 4, !dbg !17371
  %call5 = call i32 @gma_read32(%struct.skge_hw* %9, i32 %10, i32 312) #14, !dbg !17372
  %conv6 = zext i32 %call5 to i64, !dbg !17373
  %shl7 = shl i64 %conv6, 32, !dbg !17374
  %11 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !17375
  %12 = load i32, i32* %port, align 4, !dbg !17376
  %call8 = call i32 @gma_read32(%struct.skge_hw* %11, i32 %12, i32 304) #14, !dbg !17377
  %conv9 = zext i32 %call8 to i64, !dbg !17377
  %or10 = or i64 %shl7, %conv9, !dbg !17378
  %13 = load i64*, i64** %data.addr, align 8, !dbg !17379
  %arrayidx11 = getelementptr i64, i64* %13, i64 1, !dbg !17379
  store i64 %or10, i64* %arrayidx11, align 8, !dbg !17380
  store i32 2, i32* %i, align 4, !dbg !17381
  br label %for.cond, !dbg !17383

for.cond:                                         ; preds = %for.inc, %entry
  %14 = load i32, i32* %i, align 4, !dbg !17384
  %conv12 = sext i32 %14 to i64, !dbg !17384
  %cmp = icmp ult i64 %conv12, 21, !dbg !17386
  br i1 %cmp, label %for.body, label %for.end, !dbg !17387

for.body:                                         ; preds = %for.cond
  %15 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !17388
  %16 = load i32, i32* %port, align 4, !dbg !17389
  %17 = load i32, i32* %i, align 4, !dbg !17390
  %idxprom = sext i32 %17 to i64, !dbg !17391
  %arrayidx14 = getelementptr [21 x %struct.skge_stat], [21 x %struct.skge_stat]* @skge_stats, i64 0, i64 %idxprom, !dbg !17391
  %gma_offset = getelementptr inbounds %struct.skge_stat, %struct.skge_stat* %arrayidx14, i32 0, i32 2, !dbg !17392
  %18 = load i16, i16* %gma_offset, align 2, !dbg !17392
  %conv15 = zext i16 %18 to i32, !dbg !17391
  %call16 = call i32 @gma_read32(%struct.skge_hw* %15, i32 %16, i32 %conv15) #14, !dbg !17393
  %conv17 = zext i32 %call16 to i64, !dbg !17393
  %19 = load i64*, i64** %data.addr, align 8, !dbg !17394
  %20 = load i32, i32* %i, align 4, !dbg !17395
  %idxprom18 = sext i32 %20 to i64, !dbg !17394
  %arrayidx19 = getelementptr i64, i64* %19, i64 %idxprom18, !dbg !17394
  store i64 %conv17, i64* %arrayidx19, align 8, !dbg !17396
  br label %for.inc, !dbg !17394

for.inc:                                          ; preds = %for.body
  %21 = load i32, i32* %i, align 4, !dbg !17397
  %inc = add i32 %21, 1, !dbg !17397
  store i32 %inc, i32* %i, align 4, !dbg !17397
  br label %for.cond, !dbg !17398, !llvm.loop !17399

for.end:                                          ; preds = %for.cond
  ret void, !dbg !17401
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @gma_read32(%struct.skge_hw* %hw, i32 %port, i32 %reg) #2 !dbg !17402 {
entry:
  %hw.addr = alloca %struct.skge_hw*, align 8
  %port.addr = alloca i32, align 4
  %reg.addr = alloca i32, align 4
  store %struct.skge_hw* %hw, %struct.skge_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.skge_hw** %hw.addr, metadata !17403, metadata !DIExpression()), !dbg !17404
  store i32 %port, i32* %port.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %port.addr, metadata !17405, metadata !DIExpression()), !dbg !17406
  store i32 %reg, i32* %reg.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %reg.addr, metadata !17407, metadata !DIExpression()), !dbg !17408
  %0 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !17409
  %1 = load i32, i32* %port.addr, align 4, !dbg !17410
  %mul = mul i32 %1, 4096, !dbg !17410
  %add = add i32 10240, %mul, !dbg !17410
  %2 = load i32, i32* %reg.addr, align 4, !dbg !17410
  %add1 = add i32 %add, %2, !dbg !17410
  %call = call zeroext i16 @skge_read16(%struct.skge_hw* %0, i32 %add1) #14, !dbg !17411
  %conv = zext i16 %call to i32, !dbg !17412
  %3 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !17413
  %4 = load i32, i32* %port.addr, align 4, !dbg !17414
  %mul2 = mul i32 %4, 4096, !dbg !17414
  %add3 = add i32 10240, %mul2, !dbg !17414
  %5 = load i32, i32* %reg.addr, align 4, !dbg !17414
  %add4 = add i32 %5, 4, !dbg !17414
  %add5 = add i32 %add3, %add4, !dbg !17414
  %call6 = call zeroext i16 @skge_read16(%struct.skge_hw* %3, i32 %add5) #14, !dbg !17415
  %conv7 = zext i16 %call6 to i32, !dbg !17416
  %shl = shl i32 %conv7, 16, !dbg !17417
  %or = or i32 %conv, %shl, !dbg !17418
  ret i32 %or, !dbg !17419
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @skge_get_drvinfo(%struct.net_device* %dev, %struct.ethtool_drvinfo* %info) #2 !dbg !17420 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %info.addr = alloca %struct.ethtool_drvinfo*, align 8
  %skge = alloca %struct.skge_port*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !17421, metadata !DIExpression()), !dbg !17422
  store %struct.ethtool_drvinfo* %info, %struct.ethtool_drvinfo** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ethtool_drvinfo** %info.addr, metadata !17423, metadata !DIExpression()), !dbg !17424
  call void @llvm.dbg.declare(metadata %struct.skge_port** %skge, metadata !17425, metadata !DIExpression()), !dbg !17426
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !17427
  %call = call i8* @netdev_priv(%struct.net_device* %0) #14, !dbg !17428
  %1 = bitcast i8* %call to %struct.skge_port*, !dbg !17428
  store %struct.skge_port* %1, %struct.skge_port** %skge, align 8, !dbg !17426
  %2 = load %struct.ethtool_drvinfo*, %struct.ethtool_drvinfo** %info.addr, align 8, !dbg !17429
  %driver = getelementptr inbounds %struct.ethtool_drvinfo, %struct.ethtool_drvinfo* %2, i32 0, i32 1, !dbg !17430
  %arraydecay = getelementptr inbounds [32 x i8], [32 x i8]* %driver, i64 0, i64 0, !dbg !17429
  %call1 = call i64 @strlcpy(i8* %arraydecay, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0), i64 32) #14, !dbg !17431
  %3 = load %struct.ethtool_drvinfo*, %struct.ethtool_drvinfo** %info.addr, align 8, !dbg !17432
  %version = getelementptr inbounds %struct.ethtool_drvinfo, %struct.ethtool_drvinfo* %3, i32 0, i32 2, !dbg !17433
  %arraydecay2 = getelementptr inbounds [32 x i8], [32 x i8]* %version, i64 0, i64 0, !dbg !17432
  %call3 = call i64 @strlcpy(i8* %arraydecay2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0), i64 32) #14, !dbg !17434
  %4 = load %struct.ethtool_drvinfo*, %struct.ethtool_drvinfo** %info.addr, align 8, !dbg !17435
  %bus_info = getelementptr inbounds %struct.ethtool_drvinfo, %struct.ethtool_drvinfo* %4, i32 0, i32 4, !dbg !17436
  %arraydecay4 = getelementptr inbounds [32 x i8], [32 x i8]* %bus_info, i64 0, i64 0, !dbg !17435
  %5 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !17437
  %hw = getelementptr inbounds %struct.skge_port, %struct.skge_port* %5, i32 0, i32 0, !dbg !17438
  %6 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !17438
  %pdev = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %6, i32 0, i32 1, !dbg !17439
  %7 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !17439
  %call5 = call i8* @pci_name(%struct.pci_dev* %7) #14, !dbg !17440
  %call6 = call i64 @strlcpy(i8* %arraydecay4, i8* %call5, i64 32) #14, !dbg !17441
  ret void, !dbg !17442
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @skge_get_regs_len(%struct.net_device* %dev) #2 !dbg !17443 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !17444, metadata !DIExpression()), !dbg !17445
  ret i32 16384, !dbg !17446
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @skge_get_regs(%struct.net_device* %dev, %struct.ethtool_regs* %regs, i8* %p) #2 !dbg !17447 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %regs.addr = alloca %struct.ethtool_regs*, align 8
  %p.addr = alloca i8*, align 8
  %skge = alloca %struct.skge_port*, align 8
  %io = alloca i8*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !17448, metadata !DIExpression()), !dbg !17449
  store %struct.ethtool_regs* %regs, %struct.ethtool_regs** %regs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ethtool_regs** %regs.addr, metadata !17450, metadata !DIExpression()), !dbg !17451
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !17452, metadata !DIExpression()), !dbg !17453
  call void @llvm.dbg.declare(metadata %struct.skge_port** %skge, metadata !17454, metadata !DIExpression()), !dbg !17455
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !17456
  %call = call i8* @netdev_priv(%struct.net_device* %0) #14, !dbg !17457
  %1 = bitcast i8* %call to %struct.skge_port*, !dbg !17457
  store %struct.skge_port* %1, %struct.skge_port** %skge, align 8, !dbg !17455
  call void @llvm.dbg.declare(metadata i8** %io, metadata !17458, metadata !DIExpression()), !dbg !17459
  %2 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !17460
  %hw = getelementptr inbounds %struct.skge_port, %struct.skge_port* %2, i32 0, i32 0, !dbg !17461
  %3 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !17461
  %regs1 = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %3, i32 0, i32 0, !dbg !17462
  %4 = load i8*, i8** %regs1, align 8, !dbg !17462
  store i8* %4, i8** %io, align 8, !dbg !17459
  %5 = load %struct.ethtool_regs*, %struct.ethtool_regs** %regs.addr, align 8, !dbg !17463
  %version = getelementptr inbounds %struct.ethtool_regs, %struct.ethtool_regs* %5, i32 0, i32 1, !dbg !17464
  store i32 1, i32* %version, align 4, !dbg !17465
  %6 = load i8*, i8** %p.addr, align 8, !dbg !17466
  %7 = load %struct.ethtool_regs*, %struct.ethtool_regs** %regs.addr, align 8, !dbg !17467
  %len = getelementptr inbounds %struct.ethtool_regs, %struct.ethtool_regs* %7, i32 0, i32 2, !dbg !17468
  %8 = load i32, i32* %len, align 4, !dbg !17468
  %conv = zext i32 %8 to i64, !dbg !17467
  call void @llvm.memset.p0i8.i64(i8* align 1 %6, i8 0, i64 %conv, i1 false), !dbg !17469
  %9 = load i8*, i8** %p.addr, align 8, !dbg !17470
  %10 = load i8*, i8** %io, align 8, !dbg !17471
  call void @memcpy_fromio(i8* %9, i8* %10, i64 384) #14, !dbg !17472
  %11 = load %struct.ethtool_regs*, %struct.ethtool_regs** %regs.addr, align 8, !dbg !17473
  %len2 = getelementptr inbounds %struct.ethtool_regs, %struct.ethtool_regs* %11, i32 0, i32 2, !dbg !17475
  %12 = load i32, i32* %len2, align 4, !dbg !17475
  %cmp = icmp ugt i32 %12, 400, !dbg !17476
  br i1 %cmp, label %if.then, label %if.end, !dbg !17477

if.then:                                          ; preds = %entry
  %13 = load i8*, i8** %p.addr, align 8, !dbg !17478
  %add.ptr = getelementptr i8, i8* %13, i64 400, !dbg !17480
  %14 = load i8*, i8** %io, align 8, !dbg !17481
  %add.ptr4 = getelementptr i8, i8* %14, i64 400, !dbg !17482
  %15 = load %struct.ethtool_regs*, %struct.ethtool_regs** %regs.addr, align 8, !dbg !17483
  %len5 = getelementptr inbounds %struct.ethtool_regs, %struct.ethtool_regs* %15, i32 0, i32 2, !dbg !17484
  %16 = load i32, i32* %len5, align 4, !dbg !17484
  %sub = sub i32 %16, 400, !dbg !17485
  %conv6 = zext i32 %sub to i64, !dbg !17483
  call void @memcpy_fromio(i8* %add.ptr, i8* %add.ptr4, i64 %conv6) #14, !dbg !17486
  br label %if.end, !dbg !17487

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !17488
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @skge_get_wol(%struct.net_device* %dev, %struct.ethtool_wolinfo* %wol) #2 !dbg !17489 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %wol.addr = alloca %struct.ethtool_wolinfo*, align 8
  %skge = alloca %struct.skge_port*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !17490, metadata !DIExpression()), !dbg !17491
  store %struct.ethtool_wolinfo* %wol, %struct.ethtool_wolinfo** %wol.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ethtool_wolinfo** %wol.addr, metadata !17492, metadata !DIExpression()), !dbg !17493
  call void @llvm.dbg.declare(metadata %struct.skge_port** %skge, metadata !17494, metadata !DIExpression()), !dbg !17495
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !17496
  %call = call i8* @netdev_priv(%struct.net_device* %0) #14, !dbg !17497
  %1 = bitcast i8* %call to %struct.skge_port*, !dbg !17497
  store %struct.skge_port* %1, %struct.skge_port** %skge, align 8, !dbg !17495
  %2 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !17498
  %hw = getelementptr inbounds %struct.skge_port, %struct.skge_port* %2, i32 0, i32 0, !dbg !17499
  %3 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !17499
  %call1 = call i32 @wol_supported(%struct.skge_hw* %3) #14, !dbg !17500
  %4 = load %struct.ethtool_wolinfo*, %struct.ethtool_wolinfo** %wol.addr, align 8, !dbg !17501
  %supported = getelementptr inbounds %struct.ethtool_wolinfo, %struct.ethtool_wolinfo* %4, i32 0, i32 1, !dbg !17502
  store i32 %call1, i32* %supported, align 4, !dbg !17503
  %5 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !17504
  %wol2 = getelementptr inbounds %struct.skge_port, %struct.skge_port* %5, i32 0, i32 12, !dbg !17505
  %6 = load i8, i8* %wol2, align 1, !dbg !17505
  %conv = zext i8 %6 to i32, !dbg !17504
  %7 = load %struct.ethtool_wolinfo*, %struct.ethtool_wolinfo** %wol.addr, align 8, !dbg !17506
  %wolopts = getelementptr inbounds %struct.ethtool_wolinfo, %struct.ethtool_wolinfo* %7, i32 0, i32 2, !dbg !17507
  store i32 %conv, i32* %wolopts, align 4, !dbg !17508
  ret void, !dbg !17509
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @skge_set_wol(%struct.net_device* %dev, %struct.ethtool_wolinfo* %wol) #2 !dbg !17510 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.net_device*, align 8
  %wol.addr = alloca %struct.ethtool_wolinfo*, align 8
  %skge = alloca %struct.skge_port*, align 8
  %hw = alloca %struct.skge_hw*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !17511, metadata !DIExpression()), !dbg !17512
  store %struct.ethtool_wolinfo* %wol, %struct.ethtool_wolinfo** %wol.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ethtool_wolinfo** %wol.addr, metadata !17513, metadata !DIExpression()), !dbg !17514
  call void @llvm.dbg.declare(metadata %struct.skge_port** %skge, metadata !17515, metadata !DIExpression()), !dbg !17516
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !17517
  %call = call i8* @netdev_priv(%struct.net_device* %0) #14, !dbg !17518
  %1 = bitcast i8* %call to %struct.skge_port*, !dbg !17518
  store %struct.skge_port* %1, %struct.skge_port** %skge, align 8, !dbg !17516
  call void @llvm.dbg.declare(metadata %struct.skge_hw** %hw, metadata !17519, metadata !DIExpression()), !dbg !17520
  %2 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !17521
  %hw1 = getelementptr inbounds %struct.skge_port, %struct.skge_port* %2, i32 0, i32 0, !dbg !17522
  %3 = load %struct.skge_hw*, %struct.skge_hw** %hw1, align 8, !dbg !17522
  store %struct.skge_hw* %3, %struct.skge_hw** %hw, align 8, !dbg !17520
  %4 = load %struct.ethtool_wolinfo*, %struct.ethtool_wolinfo** %wol.addr, align 8, !dbg !17523
  %wolopts = getelementptr inbounds %struct.ethtool_wolinfo, %struct.ethtool_wolinfo* %4, i32 0, i32 2, !dbg !17525
  %5 = load i32, i32* %wolopts, align 4, !dbg !17525
  %6 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !17526
  %call2 = call i32 @wol_supported(%struct.skge_hw* %6) #14, !dbg !17527
  %neg = xor i32 %call2, -1, !dbg !17528
  %and = and i32 %5, %neg, !dbg !17529
  %tobool = icmp ne i32 %and, 0, !dbg !17529
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !17530

lor.lhs.false:                                    ; preds = %entry
  %7 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !17531
  %pdev = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %7, i32 0, i32 1, !dbg !17532
  %8 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !17532
  %dev3 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %8, i32 0, i32 41, !dbg !17533
  %call4 = call zeroext i1 @device_can_wakeup(%struct.device* %dev3) #14, !dbg !17534
  br i1 %call4, label %if.end, label %if.then, !dbg !17535

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 -95, i32* %retval, align 4, !dbg !17536
  br label %return, !dbg !17536

if.end:                                           ; preds = %lor.lhs.false
  %9 = load %struct.ethtool_wolinfo*, %struct.ethtool_wolinfo** %wol.addr, align 8, !dbg !17537
  %wolopts5 = getelementptr inbounds %struct.ethtool_wolinfo, %struct.ethtool_wolinfo* %9, i32 0, i32 2, !dbg !17538
  %10 = load i32, i32* %wolopts5, align 4, !dbg !17538
  %conv = trunc i32 %10 to i8, !dbg !17537
  %11 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !17539
  %wol6 = getelementptr inbounds %struct.skge_port, %struct.skge_port* %11, i32 0, i32 12, !dbg !17540
  store i8 %conv, i8* %wol6, align 1, !dbg !17541
  %12 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !17542
  %pdev7 = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %12, i32 0, i32 1, !dbg !17543
  %13 = load %struct.pci_dev*, %struct.pci_dev** %pdev7, align 8, !dbg !17543
  %dev8 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %13, i32 0, i32 41, !dbg !17544
  %14 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !17545
  %wol9 = getelementptr inbounds %struct.skge_port, %struct.skge_port* %14, i32 0, i32 12, !dbg !17546
  %15 = load i8, i8* %wol9, align 1, !dbg !17546
  %tobool10 = icmp ne i8 %15, 0, !dbg !17545
  %call11 = call i32 @device_set_wakeup_enable(%struct.device* %dev8, i1 zeroext %tobool10) #14, !dbg !17547
  store i32 0, i32* %retval, align 4, !dbg !17548
  br label %return, !dbg !17548

return:                                           ; preds = %if.end, %if.then
  %16 = load i32, i32* %retval, align 4, !dbg !17549
  ret i32 %16, !dbg !17549
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @skge_get_msglevel(%struct.net_device* %netdev) #2 !dbg !17550 {
entry:
  %netdev.addr = alloca %struct.net_device*, align 8
  %skge = alloca %struct.skge_port*, align 8
  store %struct.net_device* %netdev, %struct.net_device** %netdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %netdev.addr, metadata !17551, metadata !DIExpression()), !dbg !17552
  call void @llvm.dbg.declare(metadata %struct.skge_port** %skge, metadata !17553, metadata !DIExpression()), !dbg !17554
  %0 = load %struct.net_device*, %struct.net_device** %netdev.addr, align 8, !dbg !17555
  %call = call i8* @netdev_priv(%struct.net_device* %0) #14, !dbg !17556
  %1 = bitcast i8* %call to %struct.skge_port*, !dbg !17556
  store %struct.skge_port* %1, %struct.skge_port** %skge, align 8, !dbg !17554
  %2 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !17557
  %msg_enable = getelementptr inbounds %struct.skge_port, %struct.skge_port* %2, i32 0, i32 4, !dbg !17558
  %3 = load i32, i32* %msg_enable, align 4, !dbg !17558
  ret i32 %3, !dbg !17559
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @skge_set_msglevel(%struct.net_device* %netdev, i32 %value) #2 !dbg !17560 {
entry:
  %netdev.addr = alloca %struct.net_device*, align 8
  %value.addr = alloca i32, align 4
  %skge = alloca %struct.skge_port*, align 8
  store %struct.net_device* %netdev, %struct.net_device** %netdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %netdev.addr, metadata !17561, metadata !DIExpression()), !dbg !17562
  store i32 %value, i32* %value.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr, metadata !17563, metadata !DIExpression()), !dbg !17564
  call void @llvm.dbg.declare(metadata %struct.skge_port** %skge, metadata !17565, metadata !DIExpression()), !dbg !17566
  %0 = load %struct.net_device*, %struct.net_device** %netdev.addr, align 8, !dbg !17567
  %call = call i8* @netdev_priv(%struct.net_device* %0) #14, !dbg !17568
  %1 = bitcast i8* %call to %struct.skge_port*, !dbg !17568
  store %struct.skge_port* %1, %struct.skge_port** %skge, align 8, !dbg !17566
  %2 = load i32, i32* %value.addr, align 4, !dbg !17569
  %3 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !17570
  %msg_enable = getelementptr inbounds %struct.skge_port, %struct.skge_port* %3, i32 0, i32 4, !dbg !17571
  store i32 %2, i32* %msg_enable, align 4, !dbg !17572
  ret void, !dbg !17573
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @skge_nway_reset(%struct.net_device* %dev) #2 !dbg !17574 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.net_device*, align 8
  %skge = alloca %struct.skge_port*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !17575, metadata !DIExpression()), !dbg !17576
  call void @llvm.dbg.declare(metadata %struct.skge_port** %skge, metadata !17577, metadata !DIExpression()), !dbg !17578
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !17579
  %call = call i8* @netdev_priv(%struct.net_device* %0) #14, !dbg !17580
  %1 = bitcast i8* %call to %struct.skge_port*, !dbg !17580
  store %struct.skge_port* %1, %struct.skge_port** %skge, align 8, !dbg !17578
  %2 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !17581
  %autoneg = getelementptr inbounds %struct.skge_port, %struct.skge_port* %2, i32 0, i32 13, !dbg !17583
  %3 = load i8, i8* %autoneg, align 2, !dbg !17583
  %conv = zext i8 %3 to i32, !dbg !17581
  %cmp = icmp ne i32 %conv, 1, !dbg !17584
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !17585

lor.lhs.false:                                    ; preds = %entry
  %4 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !17586
  %call2 = call zeroext i1 @netif_running(%struct.net_device* %4) #14, !dbg !17587
  br i1 %call2, label %if.end, label %if.then, !dbg !17588

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 -22, i32* %retval, align 4, !dbg !17589
  br label %return, !dbg !17589

if.end:                                           ; preds = %lor.lhs.false
  %5 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !17590
  call void @skge_phy_reset(%struct.skge_port* %5) #14, !dbg !17591
  store i32 0, i32* %retval, align 4, !dbg !17592
  br label %return, !dbg !17592

return:                                           ; preds = %if.end, %if.then
  %6 = load i32, i32* %retval, align 4, !dbg !17593
  ret i32 %6, !dbg !17593
}

; Function Attrs: noredzone
declare dso_local i32 @ethtool_op_get_link(%struct.net_device*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @skge_get_eeprom_len(%struct.net_device* %dev) #2 !dbg !17594 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %skge = alloca %struct.skge_port*, align 8
  %reg2 = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !17595, metadata !DIExpression()), !dbg !17596
  call void @llvm.dbg.declare(metadata %struct.skge_port** %skge, metadata !17597, metadata !DIExpression()), !dbg !17598
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !17599
  %call = call i8* @netdev_priv(%struct.net_device* %0) #14, !dbg !17600
  %1 = bitcast i8* %call to %struct.skge_port*, !dbg !17600
  store %struct.skge_port* %1, %struct.skge_port** %skge, align 8, !dbg !17598
  call void @llvm.dbg.declare(metadata i32* %reg2, metadata !17601, metadata !DIExpression()), !dbg !17602
  %2 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !17603
  %hw = getelementptr inbounds %struct.skge_port, %struct.skge_port* %2, i32 0, i32 0, !dbg !17604
  %3 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !17604
  %pdev = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %3, i32 0, i32 1, !dbg !17605
  %4 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !17605
  %call1 = call i32 @pci_read_config_dword(%struct.pci_dev* %4, i32 68, i32* %reg2) #14, !dbg !17606
  %5 = load i32, i32* %reg2, align 4, !dbg !17607
  %conv = zext i32 %5 to i64, !dbg !17607
  %and = and i64 %conv, 114688, !dbg !17608
  %shr = ashr i64 %and, 14, !dbg !17609
  %add = add i64 %shr, 8, !dbg !17610
  %sh_prom = trunc i64 %add to i32, !dbg !17611
  %shl = shl i32 1, %sh_prom, !dbg !17611
  ret i32 %shl, !dbg !17612
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @skge_get_eeprom(%struct.net_device* %dev, %struct.ethtool_eeprom* %eeprom, i8* %data) #2 !dbg !17613 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.net_device*, align 8
  %eeprom.addr = alloca %struct.ethtool_eeprom*, align 8
  %data.addr = alloca i8*, align 8
  %skge = alloca %struct.skge_port*, align 8
  %pdev = alloca %struct.pci_dev*, align 8
  %cap = alloca i32, align 4
  %length = alloca i32, align 4
  %offset = alloca i16, align 2
  %val = alloca i32, align 4
  %n = alloca i32, align 4
  %__UNIQUE_ID___x334 = alloca i32, align 4
  %__UNIQUE_ID___y335 = alloca i32, align 4
  %tmp = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !17614, metadata !DIExpression()), !dbg !17615
  store %struct.ethtool_eeprom* %eeprom, %struct.ethtool_eeprom** %eeprom.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ethtool_eeprom** %eeprom.addr, metadata !17616, metadata !DIExpression()), !dbg !17617
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !17618, metadata !DIExpression()), !dbg !17619
  call void @llvm.dbg.declare(metadata %struct.skge_port** %skge, metadata !17620, metadata !DIExpression()), !dbg !17621
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !17622
  %call = call i8* @netdev_priv(%struct.net_device* %0) #14, !dbg !17623
  %1 = bitcast i8* %call to %struct.skge_port*, !dbg !17623
  store %struct.skge_port* %1, %struct.skge_port** %skge, align 8, !dbg !17621
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev, metadata !17624, metadata !DIExpression()), !dbg !17625
  %2 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !17626
  %hw = getelementptr inbounds %struct.skge_port, %struct.skge_port* %2, i32 0, i32 0, !dbg !17627
  %3 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !17627
  %pdev1 = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %3, i32 0, i32 1, !dbg !17628
  %4 = load %struct.pci_dev*, %struct.pci_dev** %pdev1, align 8, !dbg !17628
  store %struct.pci_dev* %4, %struct.pci_dev** %pdev, align 8, !dbg !17625
  call void @llvm.dbg.declare(metadata i32* %cap, metadata !17629, metadata !DIExpression()), !dbg !17630
  %5 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !17631
  %call2 = call i32 @pci_find_capability(%struct.pci_dev* %5, i32 3) #14, !dbg !17632
  store i32 %call2, i32* %cap, align 4, !dbg !17630
  call void @llvm.dbg.declare(metadata i32* %length, metadata !17633, metadata !DIExpression()), !dbg !17634
  %6 = load %struct.ethtool_eeprom*, %struct.ethtool_eeprom** %eeprom.addr, align 8, !dbg !17635
  %len = getelementptr inbounds %struct.ethtool_eeprom, %struct.ethtool_eeprom* %6, i32 0, i32 3, !dbg !17636
  %7 = load i32, i32* %len, align 4, !dbg !17636
  store i32 %7, i32* %length, align 4, !dbg !17634
  call void @llvm.dbg.declare(metadata i16* %offset, metadata !17637, metadata !DIExpression()), !dbg !17638
  %8 = load %struct.ethtool_eeprom*, %struct.ethtool_eeprom** %eeprom.addr, align 8, !dbg !17639
  %offset3 = getelementptr inbounds %struct.ethtool_eeprom, %struct.ethtool_eeprom* %8, i32 0, i32 2, !dbg !17640
  %9 = load i32, i32* %offset3, align 4, !dbg !17640
  %conv = trunc i32 %9 to i16, !dbg !17639
  store i16 %conv, i16* %offset, align 2, !dbg !17638
  %10 = load i32, i32* %cap, align 4, !dbg !17641
  %tobool = icmp ne i32 %10, 0, !dbg !17641
  br i1 %tobool, label %if.end, label %if.then, !dbg !17643

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !17644
  br label %return, !dbg !17644

if.end:                                           ; preds = %entry
  %11 = load %struct.ethtool_eeprom*, %struct.ethtool_eeprom** %eeprom.addr, align 8, !dbg !17645
  %magic = getelementptr inbounds %struct.ethtool_eeprom, %struct.ethtool_eeprom* %11, i32 0, i32 1, !dbg !17646
  store i32 -1724667205, i32* %magic, align 4, !dbg !17647
  br label %while.cond, !dbg !17648

while.cond:                                       ; preds = %cond.end, %if.end
  %12 = load i32, i32* %length, align 4, !dbg !17649
  %cmp = icmp sgt i32 %12, 0, !dbg !17650
  br i1 %cmp, label %while.body, label %while.end, !dbg !17648

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i32* %val, metadata !17651, metadata !DIExpression()), !dbg !17653
  %13 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !17654
  %14 = load i32, i32* %cap, align 4, !dbg !17655
  %15 = load i16, i16* %offset, align 2, !dbg !17656
  %call5 = call i32 @skge_vpd_read(%struct.pci_dev* %13, i32 %14, i16 zeroext %15) #14, !dbg !17657
  store i32 %call5, i32* %val, align 4, !dbg !17653
  call void @llvm.dbg.declare(metadata i32* %n, metadata !17658, metadata !DIExpression()), !dbg !17659
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___x334, metadata !17660, metadata !DIExpression()), !dbg !17662
  %16 = load i32, i32* %length, align 4, !dbg !17662
  store i32 %16, i32* %__UNIQUE_ID___x334, align 4, !dbg !17662
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___y335, metadata !17663, metadata !DIExpression()), !dbg !17662
  store i32 4, i32* %__UNIQUE_ID___y335, align 4, !dbg !17662
  %17 = load i32, i32* %__UNIQUE_ID___x334, align 4, !dbg !17662
  %18 = load i32, i32* %__UNIQUE_ID___y335, align 4, !dbg !17662
  %cmp6 = icmp slt i32 %17, %18, !dbg !17662
  br i1 %cmp6, label %cond.true, label %cond.false, !dbg !17662

cond.true:                                        ; preds = %while.body
  %19 = load i32, i32* %__UNIQUE_ID___x334, align 4, !dbg !17662
  br label %cond.end, !dbg !17662

cond.false:                                       ; preds = %while.body
  %20 = load i32, i32* %__UNIQUE_ID___y335, align 4, !dbg !17662
  br label %cond.end, !dbg !17662

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %19, %cond.true ], [ %20, %cond.false ], !dbg !17662
  store i32 %cond, i32* %tmp, align 4, !dbg !17662
  %21 = load i32, i32* %tmp, align 4, !dbg !17662
  store i32 %21, i32* %n, align 4, !dbg !17659
  %22 = load i8*, i8** %data.addr, align 8, !dbg !17664
  %23 = bitcast i32* %val to i8*, !dbg !17665
  %24 = load i32, i32* %n, align 4, !dbg !17666
  %conv8 = sext i32 %24 to i64, !dbg !17666
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %22, i8* align 4 %23, i64 %conv8, i1 false), !dbg !17665
  %25 = load i32, i32* %n, align 4, !dbg !17667
  %26 = load i32, i32* %length, align 4, !dbg !17668
  %sub = sub i32 %26, %25, !dbg !17668
  store i32 %sub, i32* %length, align 4, !dbg !17668
  %27 = load i32, i32* %n, align 4, !dbg !17669
  %28 = load i8*, i8** %data.addr, align 8, !dbg !17670
  %idx.ext = sext i32 %27 to i64, !dbg !17670
  %add.ptr = getelementptr i8, i8* %28, i64 %idx.ext, !dbg !17670
  store i8* %add.ptr, i8** %data.addr, align 8, !dbg !17670
  %29 = load i32, i32* %n, align 4, !dbg !17671
  %30 = load i16, i16* %offset, align 2, !dbg !17672
  %conv9 = zext i16 %30 to i32, !dbg !17672
  %add = add i32 %conv9, %29, !dbg !17672
  %conv10 = trunc i32 %add to i16, !dbg !17672
  store i16 %conv10, i16* %offset, align 2, !dbg !17672
  br label %while.cond, !dbg !17648, !llvm.loop !17673

while.end:                                        ; preds = %while.cond
  store i32 0, i32* %retval, align 4, !dbg !17675
  br label %return, !dbg !17675

return:                                           ; preds = %while.end, %if.then
  %31 = load i32, i32* %retval, align 4, !dbg !17676
  ret i32 %31, !dbg !17676
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @skge_set_eeprom(%struct.net_device* %dev, %struct.ethtool_eeprom* %eeprom, i8* %data) #2 !dbg !17677 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.net_device*, align 8
  %eeprom.addr = alloca %struct.ethtool_eeprom*, align 8
  %data.addr = alloca i8*, align 8
  %skge = alloca %struct.skge_port*, align 8
  %pdev = alloca %struct.pci_dev*, align 8
  %cap = alloca i32, align 4
  %length = alloca i32, align 4
  %offset = alloca i16, align 2
  %val = alloca i32, align 4
  %n = alloca i32, align 4
  %__UNIQUE_ID___x336 = alloca i32, align 4
  %__UNIQUE_ID___y337 = alloca i32, align 4
  %tmp = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !17678, metadata !DIExpression()), !dbg !17679
  store %struct.ethtool_eeprom* %eeprom, %struct.ethtool_eeprom** %eeprom.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ethtool_eeprom** %eeprom.addr, metadata !17680, metadata !DIExpression()), !dbg !17681
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !17682, metadata !DIExpression()), !dbg !17683
  call void @llvm.dbg.declare(metadata %struct.skge_port** %skge, metadata !17684, metadata !DIExpression()), !dbg !17685
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !17686
  %call = call i8* @netdev_priv(%struct.net_device* %0) #14, !dbg !17687
  %1 = bitcast i8* %call to %struct.skge_port*, !dbg !17687
  store %struct.skge_port* %1, %struct.skge_port** %skge, align 8, !dbg !17685
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev, metadata !17688, metadata !DIExpression()), !dbg !17689
  %2 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !17690
  %hw = getelementptr inbounds %struct.skge_port, %struct.skge_port* %2, i32 0, i32 0, !dbg !17691
  %3 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !17691
  %pdev1 = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %3, i32 0, i32 1, !dbg !17692
  %4 = load %struct.pci_dev*, %struct.pci_dev** %pdev1, align 8, !dbg !17692
  store %struct.pci_dev* %4, %struct.pci_dev** %pdev, align 8, !dbg !17689
  call void @llvm.dbg.declare(metadata i32* %cap, metadata !17693, metadata !DIExpression()), !dbg !17694
  %5 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !17695
  %call2 = call i32 @pci_find_capability(%struct.pci_dev* %5, i32 3) #14, !dbg !17696
  store i32 %call2, i32* %cap, align 4, !dbg !17694
  call void @llvm.dbg.declare(metadata i32* %length, metadata !17697, metadata !DIExpression()), !dbg !17698
  %6 = load %struct.ethtool_eeprom*, %struct.ethtool_eeprom** %eeprom.addr, align 8, !dbg !17699
  %len = getelementptr inbounds %struct.ethtool_eeprom, %struct.ethtool_eeprom* %6, i32 0, i32 3, !dbg !17700
  %7 = load i32, i32* %len, align 4, !dbg !17700
  store i32 %7, i32* %length, align 4, !dbg !17698
  call void @llvm.dbg.declare(metadata i16* %offset, metadata !17701, metadata !DIExpression()), !dbg !17702
  %8 = load %struct.ethtool_eeprom*, %struct.ethtool_eeprom** %eeprom.addr, align 8, !dbg !17703
  %offset3 = getelementptr inbounds %struct.ethtool_eeprom, %struct.ethtool_eeprom* %8, i32 0, i32 2, !dbg !17704
  %9 = load i32, i32* %offset3, align 4, !dbg !17704
  %conv = trunc i32 %9 to i16, !dbg !17703
  store i16 %conv, i16* %offset, align 2, !dbg !17702
  %10 = load i32, i32* %cap, align 4, !dbg !17705
  %tobool = icmp ne i32 %10, 0, !dbg !17705
  br i1 %tobool, label %if.end, label %if.then, !dbg !17707

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !17708
  br label %return, !dbg !17708

if.end:                                           ; preds = %entry
  %11 = load %struct.ethtool_eeprom*, %struct.ethtool_eeprom** %eeprom.addr, align 8, !dbg !17709
  %magic = getelementptr inbounds %struct.ethtool_eeprom, %struct.ethtool_eeprom* %11, i32 0, i32 1, !dbg !17711
  %12 = load i32, i32* %magic, align 4, !dbg !17711
  %cmp = icmp ne i32 %12, -1724667205, !dbg !17712
  br i1 %cmp, label %if.then5, label %if.end6, !dbg !17713

if.then5:                                         ; preds = %if.end
  store i32 -22, i32* %retval, align 4, !dbg !17714
  br label %return, !dbg !17714

if.end6:                                          ; preds = %if.end
  br label %while.cond, !dbg !17715

while.cond:                                       ; preds = %if.end16, %if.end6
  %13 = load i32, i32* %length, align 4, !dbg !17716
  %cmp7 = icmp sgt i32 %13, 0, !dbg !17717
  br i1 %cmp7, label %while.body, label %while.end, !dbg !17715

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i32* %val, metadata !17718, metadata !DIExpression()), !dbg !17720
  call void @llvm.dbg.declare(metadata i32* %n, metadata !17721, metadata !DIExpression()), !dbg !17722
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___x336, metadata !17723, metadata !DIExpression()), !dbg !17725
  %14 = load i32, i32* %length, align 4, !dbg !17725
  store i32 %14, i32* %__UNIQUE_ID___x336, align 4, !dbg !17725
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___y337, metadata !17726, metadata !DIExpression()), !dbg !17725
  store i32 4, i32* %__UNIQUE_ID___y337, align 4, !dbg !17725
  %15 = load i32, i32* %__UNIQUE_ID___x336, align 4, !dbg !17725
  %16 = load i32, i32* %__UNIQUE_ID___y337, align 4, !dbg !17725
  %cmp9 = icmp slt i32 %15, %16, !dbg !17725
  br i1 %cmp9, label %cond.true, label %cond.false, !dbg !17725

cond.true:                                        ; preds = %while.body
  %17 = load i32, i32* %__UNIQUE_ID___x336, align 4, !dbg !17725
  br label %cond.end, !dbg !17725

cond.false:                                       ; preds = %while.body
  %18 = load i32, i32* %__UNIQUE_ID___y337, align 4, !dbg !17725
  br label %cond.end, !dbg !17725

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %17, %cond.true ], [ %18, %cond.false ], !dbg !17725
  store i32 %cond, i32* %tmp, align 4, !dbg !17725
  %19 = load i32, i32* %tmp, align 4, !dbg !17725
  store i32 %19, i32* %n, align 4, !dbg !17722
  %20 = load i32, i32* %n, align 4, !dbg !17727
  %conv11 = sext i32 %20 to i64, !dbg !17727
  %cmp12 = icmp ult i64 %conv11, 4, !dbg !17729
  br i1 %cmp12, label %if.then14, label %if.end16, !dbg !17730

if.then14:                                        ; preds = %cond.end
  %21 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !17731
  %22 = load i32, i32* %cap, align 4, !dbg !17732
  %23 = load i16, i16* %offset, align 2, !dbg !17733
  %call15 = call i32 @skge_vpd_read(%struct.pci_dev* %21, i32 %22, i16 zeroext %23) #14, !dbg !17734
  store i32 %call15, i32* %val, align 4, !dbg !17735
  br label %if.end16, !dbg !17736

if.end16:                                         ; preds = %if.then14, %cond.end
  %24 = bitcast i32* %val to i8*, !dbg !17737
  %25 = load i8*, i8** %data.addr, align 8, !dbg !17738
  %26 = load i32, i32* %n, align 4, !dbg !17739
  %conv17 = sext i32 %26 to i64, !dbg !17739
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %24, i8* align 1 %25, i64 %conv17, i1 false), !dbg !17737
  %27 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !17740
  %28 = load i32, i32* %cap, align 4, !dbg !17741
  %29 = load i16, i16* %offset, align 2, !dbg !17742
  %30 = load i32, i32* %val, align 4, !dbg !17743
  call void @skge_vpd_write(%struct.pci_dev* %27, i32 %28, i16 zeroext %29, i32 %30) #14, !dbg !17744
  %31 = load i32, i32* %n, align 4, !dbg !17745
  %32 = load i32, i32* %length, align 4, !dbg !17746
  %sub = sub i32 %32, %31, !dbg !17746
  store i32 %sub, i32* %length, align 4, !dbg !17746
  %33 = load i32, i32* %n, align 4, !dbg !17747
  %34 = load i8*, i8** %data.addr, align 8, !dbg !17748
  %idx.ext = sext i32 %33 to i64, !dbg !17748
  %add.ptr = getelementptr i8, i8* %34, i64 %idx.ext, !dbg !17748
  store i8* %add.ptr, i8** %data.addr, align 8, !dbg !17748
  %35 = load i32, i32* %n, align 4, !dbg !17749
  %36 = load i16, i16* %offset, align 2, !dbg !17750
  %conv18 = zext i16 %36 to i32, !dbg !17750
  %add = add i32 %conv18, %35, !dbg !17750
  %conv19 = trunc i32 %add to i16, !dbg !17750
  store i16 %conv19, i16* %offset, align 2, !dbg !17750
  br label %while.cond, !dbg !17715, !llvm.loop !17751

while.end:                                        ; preds = %while.cond
  store i32 0, i32* %retval, align 4, !dbg !17753
  br label %return, !dbg !17753

return:                                           ; preds = %while.end, %if.then5, %if.then
  %37 = load i32, i32* %retval, align 4, !dbg !17754
  ret i32 %37, !dbg !17754
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @skge_get_coalesce(%struct.net_device* %dev, %struct.ethtool_coalesce* %ecmd) #2 !dbg !17755 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %ecmd.addr = alloca %struct.ethtool_coalesce*, align 8
  %skge = alloca %struct.skge_port*, align 8
  %hw = alloca %struct.skge_hw*, align 8
  %port = alloca i32, align 4
  %delay = alloca i32, align 4
  %msk = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !17756, metadata !DIExpression()), !dbg !17757
  store %struct.ethtool_coalesce* %ecmd, %struct.ethtool_coalesce** %ecmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ethtool_coalesce** %ecmd.addr, metadata !17758, metadata !DIExpression()), !dbg !17759
  call void @llvm.dbg.declare(metadata %struct.skge_port** %skge, metadata !17760, metadata !DIExpression()), !dbg !17761
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !17762
  %call = call i8* @netdev_priv(%struct.net_device* %0) #14, !dbg !17763
  %1 = bitcast i8* %call to %struct.skge_port*, !dbg !17763
  store %struct.skge_port* %1, %struct.skge_port** %skge, align 8, !dbg !17761
  call void @llvm.dbg.declare(metadata %struct.skge_hw** %hw, metadata !17764, metadata !DIExpression()), !dbg !17765
  %2 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !17766
  %hw1 = getelementptr inbounds %struct.skge_port, %struct.skge_port* %2, i32 0, i32 0, !dbg !17767
  %3 = load %struct.skge_hw*, %struct.skge_hw** %hw1, align 8, !dbg !17767
  store %struct.skge_hw* %3, %struct.skge_hw** %hw, align 8, !dbg !17765
  call void @llvm.dbg.declare(metadata i32* %port, metadata !17768, metadata !DIExpression()), !dbg !17769
  %4 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !17770
  %port2 = getelementptr inbounds %struct.skge_port, %struct.skge_port* %4, i32 0, i32 3, !dbg !17771
  %5 = load i32, i32* %port2, align 8, !dbg !17771
  store i32 %5, i32* %port, align 4, !dbg !17769
  %6 = load %struct.ethtool_coalesce*, %struct.ethtool_coalesce** %ecmd.addr, align 8, !dbg !17772
  %rx_coalesce_usecs = getelementptr inbounds %struct.ethtool_coalesce, %struct.ethtool_coalesce* %6, i32 0, i32 1, !dbg !17773
  store i32 0, i32* %rx_coalesce_usecs, align 4, !dbg !17774
  %7 = load %struct.ethtool_coalesce*, %struct.ethtool_coalesce** %ecmd.addr, align 8, !dbg !17775
  %tx_coalesce_usecs = getelementptr inbounds %struct.ethtool_coalesce, %struct.ethtool_coalesce* %7, i32 0, i32 5, !dbg !17776
  store i32 0, i32* %tx_coalesce_usecs, align 4, !dbg !17777
  %8 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !17778
  %call3 = call i32 @skge_read32(%struct.skge_hw* %8, i32 328) #14, !dbg !17780
  %and = and i32 %call3, 4, !dbg !17781
  %tobool = icmp ne i32 %and, 0, !dbg !17781
  br i1 %tobool, label %if.then, label %if.end18, !dbg !17782

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %delay, metadata !17783, metadata !DIExpression()), !dbg !17785
  %9 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !17786
  %10 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !17787
  %call4 = call i32 @skge_read32(%struct.skge_hw* %10, i32 320) #14, !dbg !17788
  %call5 = call i32 @skge_clk2usec(%struct.skge_hw* %9, i32 %call4) #14, !dbg !17789
  store i32 %call5, i32* %delay, align 4, !dbg !17785
  call void @llvm.dbg.declare(metadata i32* %msk, metadata !17790, metadata !DIExpression()), !dbg !17791
  %11 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !17792
  %call6 = call i32 @skge_read32(%struct.skge_hw* %11, i32 332) #14, !dbg !17793
  store i32 %call6, i32* %msk, align 4, !dbg !17791
  %12 = load i32, i32* %msk, align 4, !dbg !17794
  %13 = load i32, i32* %port, align 4, !dbg !17796
  %idxprom = sext i32 %13 to i64, !dbg !17797
  %arrayidx = getelementptr [2 x i32], [2 x i32]* @rxirqmask, i64 0, i64 %idxprom, !dbg !17797
  %14 = load i32, i32* %arrayidx, align 4, !dbg !17797
  %and7 = and i32 %12, %14, !dbg !17798
  %tobool8 = icmp ne i32 %and7, 0, !dbg !17798
  br i1 %tobool8, label %if.then9, label %if.end, !dbg !17799

if.then9:                                         ; preds = %if.then
  %15 = load i32, i32* %delay, align 4, !dbg !17800
  %16 = load %struct.ethtool_coalesce*, %struct.ethtool_coalesce** %ecmd.addr, align 8, !dbg !17801
  %rx_coalesce_usecs10 = getelementptr inbounds %struct.ethtool_coalesce, %struct.ethtool_coalesce* %16, i32 0, i32 1, !dbg !17802
  store i32 %15, i32* %rx_coalesce_usecs10, align 4, !dbg !17803
  br label %if.end, !dbg !17801

if.end:                                           ; preds = %if.then9, %if.then
  %17 = load i32, i32* %msk, align 4, !dbg !17804
  %18 = load i32, i32* %port, align 4, !dbg !17806
  %idxprom11 = sext i32 %18 to i64, !dbg !17807
  %arrayidx12 = getelementptr [2 x i32], [2 x i32]* @txirqmask, i64 0, i64 %idxprom11, !dbg !17807
  %19 = load i32, i32* %arrayidx12, align 4, !dbg !17807
  %and13 = and i32 %17, %19, !dbg !17808
  %tobool14 = icmp ne i32 %and13, 0, !dbg !17808
  br i1 %tobool14, label %if.then15, label %if.end17, !dbg !17809

if.then15:                                        ; preds = %if.end
  %20 = load i32, i32* %delay, align 4, !dbg !17810
  %21 = load %struct.ethtool_coalesce*, %struct.ethtool_coalesce** %ecmd.addr, align 8, !dbg !17811
  %tx_coalesce_usecs16 = getelementptr inbounds %struct.ethtool_coalesce, %struct.ethtool_coalesce* %21, i32 0, i32 5, !dbg !17812
  store i32 %20, i32* %tx_coalesce_usecs16, align 4, !dbg !17813
  br label %if.end17, !dbg !17811

if.end17:                                         ; preds = %if.then15, %if.end
  br label %if.end18, !dbg !17814

if.end18:                                         ; preds = %if.end17, %entry
  ret i32 0, !dbg !17815
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @skge_set_coalesce(%struct.net_device* %dev, %struct.ethtool_coalesce* %ecmd) #2 !dbg !17816 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.net_device*, align 8
  %ecmd.addr = alloca %struct.ethtool_coalesce*, align 8
  %skge = alloca %struct.skge_port*, align 8
  %hw = alloca %struct.skge_hw*, align 8
  %port = alloca i32, align 4
  %msk = alloca i32, align 4
  %delay = alloca i32, align 4
  %__UNIQUE_ID___x332 = alloca i32, align 4
  %__UNIQUE_ID___y333 = alloca i32, align 4
  %tmp = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !17817, metadata !DIExpression()), !dbg !17818
  store %struct.ethtool_coalesce* %ecmd, %struct.ethtool_coalesce** %ecmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ethtool_coalesce** %ecmd.addr, metadata !17819, metadata !DIExpression()), !dbg !17820
  call void @llvm.dbg.declare(metadata %struct.skge_port** %skge, metadata !17821, metadata !DIExpression()), !dbg !17822
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !17823
  %call = call i8* @netdev_priv(%struct.net_device* %0) #14, !dbg !17824
  %1 = bitcast i8* %call to %struct.skge_port*, !dbg !17824
  store %struct.skge_port* %1, %struct.skge_port** %skge, align 8, !dbg !17822
  call void @llvm.dbg.declare(metadata %struct.skge_hw** %hw, metadata !17825, metadata !DIExpression()), !dbg !17826
  %2 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !17827
  %hw1 = getelementptr inbounds %struct.skge_port, %struct.skge_port* %2, i32 0, i32 0, !dbg !17828
  %3 = load %struct.skge_hw*, %struct.skge_hw** %hw1, align 8, !dbg !17828
  store %struct.skge_hw* %3, %struct.skge_hw** %hw, align 8, !dbg !17826
  call void @llvm.dbg.declare(metadata i32* %port, metadata !17829, metadata !DIExpression()), !dbg !17830
  %4 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !17831
  %port2 = getelementptr inbounds %struct.skge_port, %struct.skge_port* %4, i32 0, i32 3, !dbg !17832
  %5 = load i32, i32* %port2, align 8, !dbg !17832
  store i32 %5, i32* %port, align 4, !dbg !17830
  call void @llvm.dbg.declare(metadata i32* %msk, metadata !17833, metadata !DIExpression()), !dbg !17834
  %6 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !17835
  %call3 = call i32 @skge_read32(%struct.skge_hw* %6, i32 332) #14, !dbg !17836
  store i32 %call3, i32* %msk, align 4, !dbg !17834
  call void @llvm.dbg.declare(metadata i32* %delay, metadata !17837, metadata !DIExpression()), !dbg !17838
  store i32 25, i32* %delay, align 4, !dbg !17838
  %7 = load %struct.ethtool_coalesce*, %struct.ethtool_coalesce** %ecmd.addr, align 8, !dbg !17839
  %rx_coalesce_usecs = getelementptr inbounds %struct.ethtool_coalesce, %struct.ethtool_coalesce* %7, i32 0, i32 1, !dbg !17841
  %8 = load i32, i32* %rx_coalesce_usecs, align 4, !dbg !17841
  %cmp = icmp eq i32 %8, 0, !dbg !17842
  br i1 %cmp, label %if.then, label %if.else, !dbg !17843

if.then:                                          ; preds = %entry
  %9 = load i32, i32* %port, align 4, !dbg !17844
  %idxprom = sext i32 %9 to i64, !dbg !17845
  %arrayidx = getelementptr [2 x i32], [2 x i32]* @rxirqmask, i64 0, i64 %idxprom, !dbg !17845
  %10 = load i32, i32* %arrayidx, align 4, !dbg !17845
  %neg = xor i32 %10, -1, !dbg !17846
  %11 = load i32, i32* %msk, align 4, !dbg !17847
  %and = and i32 %11, %neg, !dbg !17847
  store i32 %and, i32* %msk, align 4, !dbg !17847
  br label %if.end13, !dbg !17848

if.else:                                          ; preds = %entry
  %12 = load %struct.ethtool_coalesce*, %struct.ethtool_coalesce** %ecmd.addr, align 8, !dbg !17849
  %rx_coalesce_usecs4 = getelementptr inbounds %struct.ethtool_coalesce, %struct.ethtool_coalesce* %12, i32 0, i32 1, !dbg !17851
  %13 = load i32, i32* %rx_coalesce_usecs4, align 4, !dbg !17851
  %cmp5 = icmp ult i32 %13, 25, !dbg !17852
  br i1 %cmp5, label %if.then8, label %lor.lhs.false, !dbg !17853

lor.lhs.false:                                    ; preds = %if.else
  %14 = load %struct.ethtool_coalesce*, %struct.ethtool_coalesce** %ecmd.addr, align 8, !dbg !17854
  %rx_coalesce_usecs6 = getelementptr inbounds %struct.ethtool_coalesce, %struct.ethtool_coalesce* %14, i32 0, i32 1, !dbg !17855
  %15 = load i32, i32* %rx_coalesce_usecs6, align 4, !dbg !17855
  %cmp7 = icmp ugt i32 %15, 33333, !dbg !17856
  br i1 %cmp7, label %if.then8, label %if.else9, !dbg !17857

if.then8:                                         ; preds = %lor.lhs.false, %if.else
  store i32 -22, i32* %retval, align 4, !dbg !17858
  br label %return, !dbg !17858

if.else9:                                         ; preds = %lor.lhs.false
  %16 = load i32, i32* %port, align 4, !dbg !17859
  %idxprom10 = sext i32 %16 to i64, !dbg !17861
  %arrayidx11 = getelementptr [2 x i32], [2 x i32]* @rxirqmask, i64 0, i64 %idxprom10, !dbg !17861
  %17 = load i32, i32* %arrayidx11, align 4, !dbg !17861
  %18 = load i32, i32* %msk, align 4, !dbg !17862
  %or = or i32 %18, %17, !dbg !17862
  store i32 %or, i32* %msk, align 4, !dbg !17862
  %19 = load %struct.ethtool_coalesce*, %struct.ethtool_coalesce** %ecmd.addr, align 8, !dbg !17863
  %rx_coalesce_usecs12 = getelementptr inbounds %struct.ethtool_coalesce, %struct.ethtool_coalesce* %19, i32 0, i32 1, !dbg !17864
  %20 = load i32, i32* %rx_coalesce_usecs12, align 4, !dbg !17864
  store i32 %20, i32* %delay, align 4, !dbg !17865
  br label %if.end

if.end:                                           ; preds = %if.else9
  br label %if.end13

if.end13:                                         ; preds = %if.end, %if.then
  %21 = load %struct.ethtool_coalesce*, %struct.ethtool_coalesce** %ecmd.addr, align 8, !dbg !17866
  %tx_coalesce_usecs = getelementptr inbounds %struct.ethtool_coalesce, %struct.ethtool_coalesce* %21, i32 0, i32 5, !dbg !17868
  %22 = load i32, i32* %tx_coalesce_usecs, align 4, !dbg !17868
  %cmp14 = icmp eq i32 %22, 0, !dbg !17869
  br i1 %cmp14, label %if.then15, label %if.else20, !dbg !17870

if.then15:                                        ; preds = %if.end13
  %23 = load i32, i32* %port, align 4, !dbg !17871
  %idxprom16 = sext i32 %23 to i64, !dbg !17872
  %arrayidx17 = getelementptr [2 x i32], [2 x i32]* @txirqmask, i64 0, i64 %idxprom16, !dbg !17872
  %24 = load i32, i32* %arrayidx17, align 4, !dbg !17872
  %neg18 = xor i32 %24, -1, !dbg !17873
  %25 = load i32, i32* %msk, align 4, !dbg !17874
  %and19 = and i32 %25, %neg18, !dbg !17874
  store i32 %and19, i32* %msk, align 4, !dbg !17874
  br label %if.end34, !dbg !17875

if.else20:                                        ; preds = %if.end13
  %26 = load %struct.ethtool_coalesce*, %struct.ethtool_coalesce** %ecmd.addr, align 8, !dbg !17876
  %tx_coalesce_usecs21 = getelementptr inbounds %struct.ethtool_coalesce, %struct.ethtool_coalesce* %26, i32 0, i32 5, !dbg !17878
  %27 = load i32, i32* %tx_coalesce_usecs21, align 4, !dbg !17878
  %cmp22 = icmp ult i32 %27, 25, !dbg !17879
  br i1 %cmp22, label %if.then26, label %lor.lhs.false23, !dbg !17880

lor.lhs.false23:                                  ; preds = %if.else20
  %28 = load %struct.ethtool_coalesce*, %struct.ethtool_coalesce** %ecmd.addr, align 8, !dbg !17881
  %tx_coalesce_usecs24 = getelementptr inbounds %struct.ethtool_coalesce, %struct.ethtool_coalesce* %28, i32 0, i32 5, !dbg !17882
  %29 = load i32, i32* %tx_coalesce_usecs24, align 4, !dbg !17882
  %cmp25 = icmp ugt i32 %29, 33333, !dbg !17883
  br i1 %cmp25, label %if.then26, label %if.else27, !dbg !17884

if.then26:                                        ; preds = %lor.lhs.false23, %if.else20
  store i32 -22, i32* %retval, align 4, !dbg !17885
  br label %return, !dbg !17885

if.else27:                                        ; preds = %lor.lhs.false23
  %30 = load i32, i32* %port, align 4, !dbg !17886
  %idxprom28 = sext i32 %30 to i64, !dbg !17888
  %arrayidx29 = getelementptr [2 x i32], [2 x i32]* @txirqmask, i64 0, i64 %idxprom28, !dbg !17888
  %31 = load i32, i32* %arrayidx29, align 4, !dbg !17888
  %32 = load i32, i32* %msk, align 4, !dbg !17889
  %or30 = or i32 %32, %31, !dbg !17889
  store i32 %or30, i32* %msk, align 4, !dbg !17889
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___x332, metadata !17890, metadata !DIExpression()), !dbg !17892
  %33 = load i32, i32* %delay, align 4, !dbg !17892
  store i32 %33, i32* %__UNIQUE_ID___x332, align 4, !dbg !17892
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___y333, metadata !17893, metadata !DIExpression()), !dbg !17892
  %34 = load %struct.ethtool_coalesce*, %struct.ethtool_coalesce** %ecmd.addr, align 8, !dbg !17892
  %rx_coalesce_usecs31 = getelementptr inbounds %struct.ethtool_coalesce, %struct.ethtool_coalesce* %34, i32 0, i32 1, !dbg !17892
  %35 = load i32, i32* %rx_coalesce_usecs31, align 4, !dbg !17892
  store i32 %35, i32* %__UNIQUE_ID___y333, align 4, !dbg !17892
  %36 = load i32, i32* %__UNIQUE_ID___x332, align 4, !dbg !17892
  %37 = load i32, i32* %__UNIQUE_ID___y333, align 4, !dbg !17892
  %cmp32 = icmp ult i32 %36, %37, !dbg !17892
  br i1 %cmp32, label %cond.true, label %cond.false, !dbg !17892

cond.true:                                        ; preds = %if.else27
  %38 = load i32, i32* %__UNIQUE_ID___x332, align 4, !dbg !17892
  br label %cond.end, !dbg !17892

cond.false:                                       ; preds = %if.else27
  %39 = load i32, i32* %__UNIQUE_ID___y333, align 4, !dbg !17892
  br label %cond.end, !dbg !17892

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %38, %cond.true ], [ %39, %cond.false ], !dbg !17892
  store i32 %cond, i32* %tmp, align 4, !dbg !17892
  %40 = load i32, i32* %tmp, align 4, !dbg !17892
  store i32 %40, i32* %delay, align 4, !dbg !17894
  br label %if.end33

if.end33:                                         ; preds = %cond.end
  br label %if.end34

if.end34:                                         ; preds = %if.end33, %if.then15
  %41 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !17895
  %42 = load i32, i32* %msk, align 4, !dbg !17896
  call void @skge_write32(%struct.skge_hw* %41, i32 332, i32 %42) #14, !dbg !17897
  %43 = load i32, i32* %msk, align 4, !dbg !17898
  %cmp35 = icmp eq i32 %43, 0, !dbg !17900
  br i1 %cmp35, label %if.then36, label %if.else37, !dbg !17901

if.then36:                                        ; preds = %if.end34
  %44 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !17902
  call void @skge_write32(%struct.skge_hw* %44, i32 328, i32 2) #14, !dbg !17903
  br label %if.end39, !dbg !17903

if.else37:                                        ; preds = %if.end34
  %45 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !17904
  %46 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !17906
  %47 = load i32, i32* %delay, align 4, !dbg !17907
  %call38 = call i32 @skge_usecs2clk(%struct.skge_hw* %46, i32 %47) #14, !dbg !17908
  call void @skge_write32(%struct.skge_hw* %45, i32 320, i32 %call38) #14, !dbg !17909
  %48 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !17910
  call void @skge_write32(%struct.skge_hw* %48, i32 328, i32 4) #14, !dbg !17911
  br label %if.end39

if.end39:                                         ; preds = %if.else37, %if.then36
  store i32 0, i32* %retval, align 4, !dbg !17912
  br label %return, !dbg !17912

return:                                           ; preds = %if.end39, %if.then26, %if.then8
  %49 = load i32, i32* %retval, align 4, !dbg !17913
  ret i32 %49, !dbg !17913
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @skge_get_ring_param(%struct.net_device* %dev, %struct.ethtool_ringparam* %p) #2 !dbg !17914 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %p.addr = alloca %struct.ethtool_ringparam*, align 8
  %skge = alloca %struct.skge_port*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !17915, metadata !DIExpression()), !dbg !17916
  store %struct.ethtool_ringparam* %p, %struct.ethtool_ringparam** %p.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ethtool_ringparam** %p.addr, metadata !17917, metadata !DIExpression()), !dbg !17918
  call void @llvm.dbg.declare(metadata %struct.skge_port** %skge, metadata !17919, metadata !DIExpression()), !dbg !17920
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !17921
  %call = call i8* @netdev_priv(%struct.net_device* %0) #14, !dbg !17922
  %1 = bitcast i8* %call to %struct.skge_port*, !dbg !17922
  store %struct.skge_port* %1, %struct.skge_port** %skge, align 8, !dbg !17920
  %2 = load %struct.ethtool_ringparam*, %struct.ethtool_ringparam** %p.addr, align 8, !dbg !17923
  %rx_max_pending = getelementptr inbounds %struct.ethtool_ringparam, %struct.ethtool_ringparam* %2, i32 0, i32 1, !dbg !17924
  store i32 4096, i32* %rx_max_pending, align 4, !dbg !17925
  %3 = load %struct.ethtool_ringparam*, %struct.ethtool_ringparam** %p.addr, align 8, !dbg !17926
  %tx_max_pending = getelementptr inbounds %struct.ethtool_ringparam, %struct.ethtool_ringparam* %3, i32 0, i32 4, !dbg !17927
  store i32 1024, i32* %tx_max_pending, align 4, !dbg !17928
  %4 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !17929
  %rx_ring = getelementptr inbounds %struct.skge_port, %struct.skge_port* %4, i32 0, i32 6, !dbg !17930
  %count = getelementptr inbounds %struct.skge_ring, %struct.skge_ring* %rx_ring, i32 0, i32 3, !dbg !17931
  %5 = load i64, i64* %count, align 8, !dbg !17931
  %conv = trunc i64 %5 to i32, !dbg !17929
  %6 = load %struct.ethtool_ringparam*, %struct.ethtool_ringparam** %p.addr, align 8, !dbg !17932
  %rx_pending = getelementptr inbounds %struct.ethtool_ringparam, %struct.ethtool_ringparam* %6, i32 0, i32 5, !dbg !17933
  store i32 %conv, i32* %rx_pending, align 4, !dbg !17934
  %7 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !17935
  %tx_ring = getelementptr inbounds %struct.skge_port, %struct.skge_port* %7, i32 0, i32 5, !dbg !17936
  %count1 = getelementptr inbounds %struct.skge_ring, %struct.skge_ring* %tx_ring, i32 0, i32 3, !dbg !17937
  %8 = load i64, i64* %count1, align 8, !dbg !17937
  %conv2 = trunc i64 %8 to i32, !dbg !17935
  %9 = load %struct.ethtool_ringparam*, %struct.ethtool_ringparam** %p.addr, align 8, !dbg !17938
  %tx_pending = getelementptr inbounds %struct.ethtool_ringparam, %struct.ethtool_ringparam* %9, i32 0, i32 8, !dbg !17939
  store i32 %conv2, i32* %tx_pending, align 4, !dbg !17940
  ret void, !dbg !17941
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @skge_set_ring_param(%struct.net_device* %dev, %struct.ethtool_ringparam* %p) #2 !dbg !17942 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.net_device*, align 8
  %p.addr = alloca %struct.ethtool_ringparam*, align 8
  %skge = alloca %struct.skge_port*, align 8
  %err = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !17943, metadata !DIExpression()), !dbg !17944
  store %struct.ethtool_ringparam* %p, %struct.ethtool_ringparam** %p.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ethtool_ringparam** %p.addr, metadata !17945, metadata !DIExpression()), !dbg !17946
  call void @llvm.dbg.declare(metadata %struct.skge_port** %skge, metadata !17947, metadata !DIExpression()), !dbg !17948
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !17949
  %call = call i8* @netdev_priv(%struct.net_device* %0) #14, !dbg !17950
  %1 = bitcast i8* %call to %struct.skge_port*, !dbg !17950
  store %struct.skge_port* %1, %struct.skge_port** %skge, align 8, !dbg !17948
  call void @llvm.dbg.declare(metadata i32* %err, metadata !17951, metadata !DIExpression()), !dbg !17952
  store i32 0, i32* %err, align 4, !dbg !17952
  %2 = load %struct.ethtool_ringparam*, %struct.ethtool_ringparam** %p.addr, align 8, !dbg !17953
  %rx_pending = getelementptr inbounds %struct.ethtool_ringparam, %struct.ethtool_ringparam* %2, i32 0, i32 5, !dbg !17955
  %3 = load i32, i32* %rx_pending, align 4, !dbg !17955
  %cmp = icmp eq i32 %3, 0, !dbg !17956
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !17957

lor.lhs.false:                                    ; preds = %entry
  %4 = load %struct.ethtool_ringparam*, %struct.ethtool_ringparam** %p.addr, align 8, !dbg !17958
  %rx_pending1 = getelementptr inbounds %struct.ethtool_ringparam, %struct.ethtool_ringparam* %4, i32 0, i32 5, !dbg !17959
  %5 = load i32, i32* %rx_pending1, align 4, !dbg !17959
  %cmp2 = icmp ugt i32 %5, 4096, !dbg !17960
  br i1 %cmp2, label %if.then, label %lor.lhs.false3, !dbg !17961

lor.lhs.false3:                                   ; preds = %lor.lhs.false
  %6 = load %struct.ethtool_ringparam*, %struct.ethtool_ringparam** %p.addr, align 8, !dbg !17962
  %tx_pending = getelementptr inbounds %struct.ethtool_ringparam, %struct.ethtool_ringparam* %6, i32 0, i32 8, !dbg !17963
  %7 = load i32, i32* %tx_pending, align 4, !dbg !17963
  %conv = zext i32 %7 to i64, !dbg !17962
  %cmp4 = icmp ult i64 %conv, 18, !dbg !17964
  br i1 %cmp4, label %if.then, label %lor.lhs.false6, !dbg !17965

lor.lhs.false6:                                   ; preds = %lor.lhs.false3
  %8 = load %struct.ethtool_ringparam*, %struct.ethtool_ringparam** %p.addr, align 8, !dbg !17966
  %tx_pending7 = getelementptr inbounds %struct.ethtool_ringparam, %struct.ethtool_ringparam* %8, i32 0, i32 8, !dbg !17967
  %9 = load i32, i32* %tx_pending7, align 4, !dbg !17967
  %cmp8 = icmp ugt i32 %9, 1024, !dbg !17968
  br i1 %cmp8, label %if.then, label %if.end, !dbg !17969

if.then:                                          ; preds = %lor.lhs.false6, %lor.lhs.false3, %lor.lhs.false, %entry
  store i32 -22, i32* %retval, align 4, !dbg !17970
  br label %return, !dbg !17970

if.end:                                           ; preds = %lor.lhs.false6
  %10 = load %struct.ethtool_ringparam*, %struct.ethtool_ringparam** %p.addr, align 8, !dbg !17971
  %rx_pending10 = getelementptr inbounds %struct.ethtool_ringparam, %struct.ethtool_ringparam* %10, i32 0, i32 5, !dbg !17972
  %11 = load i32, i32* %rx_pending10, align 4, !dbg !17972
  %conv11 = zext i32 %11 to i64, !dbg !17971
  %12 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !17973
  %rx_ring = getelementptr inbounds %struct.skge_port, %struct.skge_port* %12, i32 0, i32 6, !dbg !17974
  %count = getelementptr inbounds %struct.skge_ring, %struct.skge_ring* %rx_ring, i32 0, i32 3, !dbg !17975
  store i64 %conv11, i64* %count, align 8, !dbg !17976
  %13 = load %struct.ethtool_ringparam*, %struct.ethtool_ringparam** %p.addr, align 8, !dbg !17977
  %tx_pending12 = getelementptr inbounds %struct.ethtool_ringparam, %struct.ethtool_ringparam* %13, i32 0, i32 8, !dbg !17978
  %14 = load i32, i32* %tx_pending12, align 4, !dbg !17978
  %conv13 = zext i32 %14 to i64, !dbg !17977
  %15 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !17979
  %tx_ring = getelementptr inbounds %struct.skge_port, %struct.skge_port* %15, i32 0, i32 5, !dbg !17980
  %count14 = getelementptr inbounds %struct.skge_ring, %struct.skge_ring* %tx_ring, i32 0, i32 3, !dbg !17981
  store i64 %conv13, i64* %count14, align 8, !dbg !17982
  %16 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !17983
  %call15 = call zeroext i1 @netif_running(%struct.net_device* %16) #14, !dbg !17985
  br i1 %call15, label %if.then16, label %if.end21, !dbg !17986

if.then16:                                        ; preds = %if.end
  %17 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !17987
  %call17 = call i32 @skge_down(%struct.net_device* %17) #14, !dbg !17989
  %18 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !17990
  %call18 = call i32 @skge_up(%struct.net_device* %18) #14, !dbg !17991
  store i32 %call18, i32* %err, align 4, !dbg !17992
  %19 = load i32, i32* %err, align 4, !dbg !17993
  %tobool = icmp ne i32 %19, 0, !dbg !17993
  br i1 %tobool, label %if.then19, label %if.end20, !dbg !17995

if.then19:                                        ; preds = %if.then16
  %20 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !17996
  call void @dev_close(%struct.net_device* %20) #14, !dbg !17997
  br label %if.end20, !dbg !17997

if.end20:                                         ; preds = %if.then19, %if.then16
  br label %if.end21, !dbg !17998

if.end21:                                         ; preds = %if.end20, %if.end
  %21 = load i32, i32* %err, align 4, !dbg !17999
  store i32 %21, i32* %retval, align 4, !dbg !18000
  br label %return, !dbg !18000

return:                                           ; preds = %if.end21, %if.then
  %22 = load i32, i32* %retval, align 4, !dbg !18001
  ret i32 %22, !dbg !18001
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @skge_get_pauseparam(%struct.net_device* %dev, %struct.ethtool_pauseparam* %ecmd) #2 !dbg !18002 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %ecmd.addr = alloca %struct.ethtool_pauseparam*, align 8
  %skge = alloca %struct.skge_port*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !18003, metadata !DIExpression()), !dbg !18004
  store %struct.ethtool_pauseparam* %ecmd, %struct.ethtool_pauseparam** %ecmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ethtool_pauseparam** %ecmd.addr, metadata !18005, metadata !DIExpression()), !dbg !18006
  call void @llvm.dbg.declare(metadata %struct.skge_port** %skge, metadata !18007, metadata !DIExpression()), !dbg !18008
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !18009
  %call = call i8* @netdev_priv(%struct.net_device* %0) #14, !dbg !18010
  %1 = bitcast i8* %call to %struct.skge_port*, !dbg !18010
  store %struct.skge_port* %1, %struct.skge_port** %skge, align 8, !dbg !18008
  %2 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !18011
  %flow_control = getelementptr inbounds %struct.skge_port, %struct.skge_port* %2, i32 0, i32 9, !dbg !18012
  %3 = load i32, i32* %flow_control, align 8, !dbg !18012
  %cmp = icmp eq i32 %3, 3, !dbg !18013
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !18014

lor.rhs:                                          ; preds = %entry
  %4 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !18015
  %flow_control1 = getelementptr inbounds %struct.skge_port, %struct.skge_port* %4, i32 0, i32 9, !dbg !18016
  %5 = load i32, i32* %flow_control1, align 8, !dbg !18016
  %cmp2 = icmp eq i32 %5, 4, !dbg !18017
  br label %lor.end, !dbg !18014

lor.end:                                          ; preds = %lor.rhs, %entry
  %6 = phi i1 [ true, %entry ], [ %cmp2, %lor.rhs ]
  %lor.ext = zext i1 %6 to i32, !dbg !18014
  %7 = load %struct.ethtool_pauseparam*, %struct.ethtool_pauseparam** %ecmd.addr, align 8, !dbg !18018
  %rx_pause = getelementptr inbounds %struct.ethtool_pauseparam, %struct.ethtool_pauseparam* %7, i32 0, i32 2, !dbg !18019
  store i32 %lor.ext, i32* %rx_pause, align 4, !dbg !18020
  %8 = load %struct.ethtool_pauseparam*, %struct.ethtool_pauseparam** %ecmd.addr, align 8, !dbg !18021
  %rx_pause3 = getelementptr inbounds %struct.ethtool_pauseparam, %struct.ethtool_pauseparam* %8, i32 0, i32 2, !dbg !18022
  %9 = load i32, i32* %rx_pause3, align 4, !dbg !18022
  %tobool = icmp ne i32 %9, 0, !dbg !18021
  br i1 %tobool, label %lor.end7, label %lor.rhs4, !dbg !18023

lor.rhs4:                                         ; preds = %lor.end
  %10 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !18024
  %flow_control5 = getelementptr inbounds %struct.skge_port, %struct.skge_port* %10, i32 0, i32 9, !dbg !18025
  %11 = load i32, i32* %flow_control5, align 8, !dbg !18025
  %cmp6 = icmp eq i32 %11, 2, !dbg !18026
  br label %lor.end7, !dbg !18023

lor.end7:                                         ; preds = %lor.rhs4, %lor.end
  %12 = phi i1 [ true, %lor.end ], [ %cmp6, %lor.rhs4 ]
  %lor.ext8 = zext i1 %12 to i32, !dbg !18023
  %13 = load %struct.ethtool_pauseparam*, %struct.ethtool_pauseparam** %ecmd.addr, align 8, !dbg !18027
  %tx_pause = getelementptr inbounds %struct.ethtool_pauseparam, %struct.ethtool_pauseparam* %13, i32 0, i32 3, !dbg !18028
  store i32 %lor.ext8, i32* %tx_pause, align 4, !dbg !18029
  %14 = load %struct.ethtool_pauseparam*, %struct.ethtool_pauseparam** %ecmd.addr, align 8, !dbg !18030
  %rx_pause9 = getelementptr inbounds %struct.ethtool_pauseparam, %struct.ethtool_pauseparam* %14, i32 0, i32 2, !dbg !18031
  %15 = load i32, i32* %rx_pause9, align 4, !dbg !18031
  %tobool10 = icmp ne i32 %15, 0, !dbg !18030
  br i1 %tobool10, label %lor.end14, label %lor.rhs11, !dbg !18032

lor.rhs11:                                        ; preds = %lor.end7
  %16 = load %struct.ethtool_pauseparam*, %struct.ethtool_pauseparam** %ecmd.addr, align 8, !dbg !18033
  %tx_pause12 = getelementptr inbounds %struct.ethtool_pauseparam, %struct.ethtool_pauseparam* %16, i32 0, i32 3, !dbg !18034
  %17 = load i32, i32* %tx_pause12, align 4, !dbg !18034
  %tobool13 = icmp ne i32 %17, 0, !dbg !18032
  br label %lor.end14, !dbg !18032

lor.end14:                                        ; preds = %lor.rhs11, %lor.end7
  %18 = phi i1 [ true, %lor.end7 ], [ %tobool13, %lor.rhs11 ]
  %lor.ext15 = zext i1 %18 to i32, !dbg !18032
  %19 = load %struct.ethtool_pauseparam*, %struct.ethtool_pauseparam** %ecmd.addr, align 8, !dbg !18035
  %autoneg = getelementptr inbounds %struct.ethtool_pauseparam, %struct.ethtool_pauseparam* %19, i32 0, i32 1, !dbg !18036
  store i32 %lor.ext15, i32* %autoneg, align 4, !dbg !18037
  ret void, !dbg !18038
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @skge_set_pauseparam(%struct.net_device* %dev, %struct.ethtool_pauseparam* %ecmd) #2 !dbg !18039 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.net_device*, align 8
  %ecmd.addr = alloca %struct.ethtool_pauseparam*, align 8
  %skge = alloca %struct.skge_port*, align 8
  %old = alloca %struct.ethtool_pauseparam, align 4
  %err = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !18040, metadata !DIExpression()), !dbg !18041
  store %struct.ethtool_pauseparam* %ecmd, %struct.ethtool_pauseparam** %ecmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ethtool_pauseparam** %ecmd.addr, metadata !18042, metadata !DIExpression()), !dbg !18043
  call void @llvm.dbg.declare(metadata %struct.skge_port** %skge, metadata !18044, metadata !DIExpression()), !dbg !18045
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !18046
  %call = call i8* @netdev_priv(%struct.net_device* %0) #14, !dbg !18047
  %1 = bitcast i8* %call to %struct.skge_port*, !dbg !18047
  store %struct.skge_port* %1, %struct.skge_port** %skge, align 8, !dbg !18045
  call void @llvm.dbg.declare(metadata %struct.ethtool_pauseparam* %old, metadata !18048, metadata !DIExpression()), !dbg !18049
  call void @llvm.dbg.declare(metadata i32* %err, metadata !18050, metadata !DIExpression()), !dbg !18051
  store i32 0, i32* %err, align 4, !dbg !18051
  %2 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !18052
  call void @skge_get_pauseparam(%struct.net_device* %2, %struct.ethtool_pauseparam* %old) #14, !dbg !18053
  %3 = load %struct.ethtool_pauseparam*, %struct.ethtool_pauseparam** %ecmd.addr, align 8, !dbg !18054
  %autoneg = getelementptr inbounds %struct.ethtool_pauseparam, %struct.ethtool_pauseparam* %3, i32 0, i32 1, !dbg !18056
  %4 = load i32, i32* %autoneg, align 4, !dbg !18056
  %autoneg1 = getelementptr inbounds %struct.ethtool_pauseparam, %struct.ethtool_pauseparam* %old, i32 0, i32 1, !dbg !18057
  %5 = load i32, i32* %autoneg1, align 4, !dbg !18057
  %cmp = icmp ne i32 %4, %5, !dbg !18058
  br i1 %cmp, label %if.then, label %if.else, !dbg !18059

if.then:                                          ; preds = %entry
  %6 = load %struct.ethtool_pauseparam*, %struct.ethtool_pauseparam** %ecmd.addr, align 8, !dbg !18060
  %autoneg2 = getelementptr inbounds %struct.ethtool_pauseparam, %struct.ethtool_pauseparam* %6, i32 0, i32 1, !dbg !18061
  %7 = load i32, i32* %autoneg2, align 4, !dbg !18061
  %tobool = icmp ne i32 %7, 0, !dbg !18060
  %8 = zext i1 %tobool to i64, !dbg !18060
  %cond = select i1 %tobool, i32 1, i32 3, !dbg !18060
  %9 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !18062
  %flow_control = getelementptr inbounds %struct.skge_port, %struct.skge_port* %9, i32 0, i32 9, !dbg !18063
  store i32 %cond, i32* %flow_control, align 8, !dbg !18064
  br label %if.end27, !dbg !18062

if.else:                                          ; preds = %entry
  %10 = load %struct.ethtool_pauseparam*, %struct.ethtool_pauseparam** %ecmd.addr, align 8, !dbg !18065
  %rx_pause = getelementptr inbounds %struct.ethtool_pauseparam, %struct.ethtool_pauseparam* %10, i32 0, i32 2, !dbg !18068
  %11 = load i32, i32* %rx_pause, align 4, !dbg !18068
  %tobool3 = icmp ne i32 %11, 0, !dbg !18065
  br i1 %tobool3, label %land.lhs.true, label %if.else7, !dbg !18069

land.lhs.true:                                    ; preds = %if.else
  %12 = load %struct.ethtool_pauseparam*, %struct.ethtool_pauseparam** %ecmd.addr, align 8, !dbg !18070
  %tx_pause = getelementptr inbounds %struct.ethtool_pauseparam, %struct.ethtool_pauseparam* %12, i32 0, i32 3, !dbg !18071
  %13 = load i32, i32* %tx_pause, align 4, !dbg !18071
  %tobool4 = icmp ne i32 %13, 0, !dbg !18070
  br i1 %tobool4, label %if.then5, label %if.else7, !dbg !18072

if.then5:                                         ; preds = %land.lhs.true
  %14 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !18073
  %flow_control6 = getelementptr inbounds %struct.skge_port, %struct.skge_port* %14, i32 0, i32 9, !dbg !18074
  store i32 3, i32* %flow_control6, align 8, !dbg !18075
  br label %if.end26, !dbg !18073

if.else7:                                         ; preds = %land.lhs.true, %if.else
  %15 = load %struct.ethtool_pauseparam*, %struct.ethtool_pauseparam** %ecmd.addr, align 8, !dbg !18076
  %rx_pause8 = getelementptr inbounds %struct.ethtool_pauseparam, %struct.ethtool_pauseparam* %15, i32 0, i32 2, !dbg !18078
  %16 = load i32, i32* %rx_pause8, align 4, !dbg !18078
  %tobool9 = icmp ne i32 %16, 0, !dbg !18076
  br i1 %tobool9, label %land.lhs.true10, label %if.else15, !dbg !18079

land.lhs.true10:                                  ; preds = %if.else7
  %17 = load %struct.ethtool_pauseparam*, %struct.ethtool_pauseparam** %ecmd.addr, align 8, !dbg !18080
  %tx_pause11 = getelementptr inbounds %struct.ethtool_pauseparam, %struct.ethtool_pauseparam* %17, i32 0, i32 3, !dbg !18081
  %18 = load i32, i32* %tx_pause11, align 4, !dbg !18081
  %tobool12 = icmp ne i32 %18, 0, !dbg !18080
  br i1 %tobool12, label %if.else15, label %if.then13, !dbg !18082

if.then13:                                        ; preds = %land.lhs.true10
  %19 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !18083
  %flow_control14 = getelementptr inbounds %struct.skge_port, %struct.skge_port* %19, i32 0, i32 9, !dbg !18084
  store i32 4, i32* %flow_control14, align 8, !dbg !18085
  br label %if.end25, !dbg !18083

if.else15:                                        ; preds = %land.lhs.true10, %if.else7
  %20 = load %struct.ethtool_pauseparam*, %struct.ethtool_pauseparam** %ecmd.addr, align 8, !dbg !18086
  %rx_pause16 = getelementptr inbounds %struct.ethtool_pauseparam, %struct.ethtool_pauseparam* %20, i32 0, i32 2, !dbg !18088
  %21 = load i32, i32* %rx_pause16, align 4, !dbg !18088
  %tobool17 = icmp ne i32 %21, 0, !dbg !18086
  br i1 %tobool17, label %if.else23, label %land.lhs.true18, !dbg !18089

land.lhs.true18:                                  ; preds = %if.else15
  %22 = load %struct.ethtool_pauseparam*, %struct.ethtool_pauseparam** %ecmd.addr, align 8, !dbg !18090
  %tx_pause19 = getelementptr inbounds %struct.ethtool_pauseparam, %struct.ethtool_pauseparam* %22, i32 0, i32 3, !dbg !18091
  %23 = load i32, i32* %tx_pause19, align 4, !dbg !18091
  %tobool20 = icmp ne i32 %23, 0, !dbg !18090
  br i1 %tobool20, label %if.then21, label %if.else23, !dbg !18092

if.then21:                                        ; preds = %land.lhs.true18
  %24 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !18093
  %flow_control22 = getelementptr inbounds %struct.skge_port, %struct.skge_port* %24, i32 0, i32 9, !dbg !18094
  store i32 2, i32* %flow_control22, align 8, !dbg !18095
  br label %if.end, !dbg !18093

if.else23:                                        ; preds = %land.lhs.true18, %if.else15
  %25 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !18096
  %flow_control24 = getelementptr inbounds %struct.skge_port, %struct.skge_port* %25, i32 0, i32 9, !dbg !18097
  store i32 1, i32* %flow_control24, align 8, !dbg !18098
  br label %if.end

if.end:                                           ; preds = %if.else23, %if.then21
  br label %if.end25

if.end25:                                         ; preds = %if.end, %if.then13
  br label %if.end26

if.end26:                                         ; preds = %if.end25, %if.then5
  br label %if.end27

if.end27:                                         ; preds = %if.end26, %if.then
  %26 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !18099
  %call28 = call zeroext i1 @netif_running(%struct.net_device* %26) #14, !dbg !18101
  br i1 %call28, label %if.then29, label %if.end35, !dbg !18102

if.then29:                                        ; preds = %if.end27
  %27 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !18103
  %call30 = call i32 @skge_down(%struct.net_device* %27) #14, !dbg !18105
  %28 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !18106
  %call31 = call i32 @skge_up(%struct.net_device* %28) #14, !dbg !18107
  store i32 %call31, i32* %err, align 4, !dbg !18108
  %29 = load i32, i32* %err, align 4, !dbg !18109
  %tobool32 = icmp ne i32 %29, 0, !dbg !18109
  br i1 %tobool32, label %if.then33, label %if.end34, !dbg !18111

if.then33:                                        ; preds = %if.then29
  %30 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !18112
  call void @dev_close(%struct.net_device* %30) #14, !dbg !18114
  %31 = load i32, i32* %err, align 4, !dbg !18115
  store i32 %31, i32* %retval, align 4, !dbg !18116
  br label %return, !dbg !18116

if.end34:                                         ; preds = %if.then29
  br label %if.end35, !dbg !18117

if.end35:                                         ; preds = %if.end34, %if.end27
  store i32 0, i32* %retval, align 4, !dbg !18118
  br label %return, !dbg !18118

return:                                           ; preds = %if.end35, %if.then33
  %32 = load i32, i32* %retval, align 4, !dbg !18119
  ret i32 %32, !dbg !18119
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @skge_get_strings(%struct.net_device* %dev, i32 %stringset, i8* %data) #2 !dbg !18120 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %stringset.addr = alloca i32, align 4
  %data.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !18121, metadata !DIExpression()), !dbg !18122
  store i32 %stringset, i32* %stringset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %stringset.addr, metadata !18123, metadata !DIExpression()), !dbg !18124
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !18125, metadata !DIExpression()), !dbg !18126
  call void @llvm.dbg.declare(metadata i32* %i, metadata !18127, metadata !DIExpression()), !dbg !18128
  %0 = load i32, i32* %stringset.addr, align 4, !dbg !18129
  switch i32 %0, label %sw.epilog [
    i32 1, label %sw.bb
  ], !dbg !18130

sw.bb:                                            ; preds = %entry
  store i32 0, i32* %i, align 4, !dbg !18131
  br label %for.cond, !dbg !18134

for.cond:                                         ; preds = %for.inc, %sw.bb
  %1 = load i32, i32* %i, align 4, !dbg !18135
  %conv = sext i32 %1 to i64, !dbg !18135
  %cmp = icmp ult i64 %conv, 21, !dbg !18137
  br i1 %cmp, label %for.body, label %for.end, !dbg !18138

for.body:                                         ; preds = %for.cond
  %2 = load i8*, i8** %data.addr, align 8, !dbg !18139
  %3 = load i32, i32* %i, align 4, !dbg !18140
  %mul = mul i32 %3, 32, !dbg !18141
  %idx.ext = sext i32 %mul to i64, !dbg !18142
  %add.ptr = getelementptr i8, i8* %2, i64 %idx.ext, !dbg !18142
  %4 = load i32, i32* %i, align 4, !dbg !18143
  %idxprom = sext i32 %4 to i64, !dbg !18144
  %arrayidx = getelementptr [21 x %struct.skge_stat], [21 x %struct.skge_stat]* @skge_stats, i64 0, i64 %idxprom, !dbg !18144
  %name = getelementptr inbounds %struct.skge_stat, %struct.skge_stat* %arrayidx, i32 0, i32 0, !dbg !18145
  %arraydecay = getelementptr inbounds [32 x i8], [32 x i8]* %name, i64 0, i64 0, !dbg !18146
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %add.ptr, i8* align 4 %arraydecay, i64 32, i1 false), !dbg !18146
  br label %for.inc, !dbg !18146

for.inc:                                          ; preds = %for.body
  %5 = load i32, i32* %i, align 4, !dbg !18147
  %inc = add i32 %5, 1, !dbg !18147
  store i32 %inc, i32* %i, align 4, !dbg !18147
  br label %for.cond, !dbg !18148, !llvm.loop !18149

for.end:                                          ; preds = %for.cond
  br label %sw.epilog, !dbg !18151

sw.epilog:                                        ; preds = %entry, %for.end
  ret void, !dbg !18152
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @skge_set_phys_id(%struct.net_device* %dev, i32 %state) #2 !dbg !18153 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.net_device*, align 8
  %state.addr = alloca i32, align 4
  %skge = alloca %struct.skge_port*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !18154, metadata !DIExpression()), !dbg !18155
  store i32 %state, i32* %state.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %state.addr, metadata !18156, metadata !DIExpression()), !dbg !18157
  call void @llvm.dbg.declare(metadata %struct.skge_port** %skge, metadata !18158, metadata !DIExpression()), !dbg !18159
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !18160
  %call = call i8* @netdev_priv(%struct.net_device* %0) #14, !dbg !18161
  %1 = bitcast i8* %call to %struct.skge_port*, !dbg !18161
  store %struct.skge_port* %1, %struct.skge_port** %skge, align 8, !dbg !18159
  %2 = load i32, i32* %state.addr, align 4, !dbg !18162
  switch i32 %2, label %sw.epilog [
    i32 1, label %sw.bb
    i32 2, label %sw.bb1
    i32 3, label %sw.bb2
    i32 0, label %sw.bb3
  ], !dbg !18163

sw.bb:                                            ; preds = %entry
  store i32 2, i32* %retval, align 4, !dbg !18164
  br label %return, !dbg !18164

sw.bb1:                                           ; preds = %entry
  %3 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !18166
  call void @skge_led(%struct.skge_port* %3, i32 2) #14, !dbg !18167
  br label %sw.epilog, !dbg !18168

sw.bb2:                                           ; preds = %entry
  %4 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !18169
  call void @skge_led(%struct.skge_port* %4, i32 0) #14, !dbg !18170
  br label %sw.epilog, !dbg !18171

sw.bb3:                                           ; preds = %entry
  %5 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !18172
  %6 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !18173
  %call4 = call zeroext i1 @netif_running(%struct.net_device* %6) #14, !dbg !18174
  %7 = zext i1 %call4 to i64, !dbg !18174
  %cond = select i1 %call4, i32 1, i32 0, !dbg !18174
  call void @skge_led(%struct.skge_port* %5, i32 %cond) #14, !dbg !18175
  br label %sw.epilog, !dbg !18176

sw.epilog:                                        ; preds = %sw.bb3, %entry, %sw.bb2, %sw.bb1
  store i32 0, i32* %retval, align 4, !dbg !18177
  br label %return, !dbg !18177

return:                                           ; preds = %sw.epilog, %sw.bb
  %8 = load i32, i32* %retval, align 4, !dbg !18178
  ret i32 %8, !dbg !18178
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @skge_get_ethtool_stats(%struct.net_device* %dev, %struct.ethtool_stats* %stats, i64* %data) #2 !dbg !18179 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %stats.addr = alloca %struct.ethtool_stats*, align 8
  %data.addr = alloca i64*, align 8
  %skge = alloca %struct.skge_port*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !18180, metadata !DIExpression()), !dbg !18181
  store %struct.ethtool_stats* %stats, %struct.ethtool_stats** %stats.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ethtool_stats** %stats.addr, metadata !18182, metadata !DIExpression()), !dbg !18183
  store i64* %data, i64** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %data.addr, metadata !18184, metadata !DIExpression()), !dbg !18185
  call void @llvm.dbg.declare(metadata %struct.skge_port** %skge, metadata !18186, metadata !DIExpression()), !dbg !18187
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !18188
  %call = call i8* @netdev_priv(%struct.net_device* %0) #14, !dbg !18189
  %1 = bitcast i8* %call to %struct.skge_port*, !dbg !18189
  store %struct.skge_port* %1, %struct.skge_port** %skge, align 8, !dbg !18187
  %2 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !18190
  %hw = getelementptr inbounds %struct.skge_port, %struct.skge_port* %2, i32 0, i32 0, !dbg !18192
  %3 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !18192
  %call1 = call zeroext i1 @is_genesis(%struct.skge_hw* %3) #14, !dbg !18193
  br i1 %call1, label %if.then, label %if.else, !dbg !18194

if.then:                                          ; preds = %entry
  %4 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !18195
  %5 = load i64*, i64** %data.addr, align 8, !dbg !18196
  call void @genesis_get_stats(%struct.skge_port* %4, i64* %5) #14, !dbg !18197
  br label %if.end, !dbg !18197

if.else:                                          ; preds = %entry
  %6 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !18198
  %7 = load i64*, i64** %data.addr, align 8, !dbg !18199
  call void @yukon_get_stats(%struct.skge_port* %6, i64* %7) #14, !dbg !18200
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !18201
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @skge_get_sset_count(%struct.net_device* %dev, i32 %sset) #2 !dbg !18202 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.net_device*, align 8
  %sset.addr = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !18203, metadata !DIExpression()), !dbg !18204
  store i32 %sset, i32* %sset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %sset.addr, metadata !18205, metadata !DIExpression()), !dbg !18206
  %0 = load i32, i32* %sset.addr, align 4, !dbg !18207
  switch i32 %0, label %sw.default [
    i32 1, label %sw.bb
  ], !dbg !18208

sw.bb:                                            ; preds = %entry
  store i32 21, i32* %retval, align 4, !dbg !18209
  br label %return, !dbg !18209

sw.default:                                       ; preds = %entry
  store i32 -95, i32* %retval, align 4, !dbg !18211
  br label %return, !dbg !18211

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i32, i32* %retval, align 4, !dbg !18212
  ret i32 %1, !dbg !18212
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @skge_get_link_ksettings(%struct.net_device* %dev, %struct.ethtool_link_ksettings* %cmd) #2 !dbg !18213 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %cmd.addr = alloca %struct.ethtool_link_ksettings*, align 8
  %skge = alloca %struct.skge_port*, align 8
  %hw = alloca %struct.skge_hw*, align 8
  %supported = alloca i32, align 4
  %advertising = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !18214, metadata !DIExpression()), !dbg !18215
  store %struct.ethtool_link_ksettings* %cmd, %struct.ethtool_link_ksettings** %cmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ethtool_link_ksettings** %cmd.addr, metadata !18216, metadata !DIExpression()), !dbg !18217
  call void @llvm.dbg.declare(metadata %struct.skge_port** %skge, metadata !18218, metadata !DIExpression()), !dbg !18219
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !18220
  %call = call i8* @netdev_priv(%struct.net_device* %0) #14, !dbg !18221
  %1 = bitcast i8* %call to %struct.skge_port*, !dbg !18221
  store %struct.skge_port* %1, %struct.skge_port** %skge, align 8, !dbg !18219
  call void @llvm.dbg.declare(metadata %struct.skge_hw** %hw, metadata !18222, metadata !DIExpression()), !dbg !18223
  %2 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !18224
  %hw1 = getelementptr inbounds %struct.skge_port, %struct.skge_port* %2, i32 0, i32 0, !dbg !18225
  %3 = load %struct.skge_hw*, %struct.skge_hw** %hw1, align 8, !dbg !18225
  store %struct.skge_hw* %3, %struct.skge_hw** %hw, align 8, !dbg !18223
  call void @llvm.dbg.declare(metadata i32* %supported, metadata !18226, metadata !DIExpression()), !dbg !18227
  call void @llvm.dbg.declare(metadata i32* %advertising, metadata !18228, metadata !DIExpression()), !dbg !18229
  %4 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !18230
  %call2 = call i32 @skge_supported_modes(%struct.skge_hw* %4) #14, !dbg !18231
  store i32 %call2, i32* %supported, align 4, !dbg !18232
  %5 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !18233
  %copper = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %5, i32 0, i32 7, !dbg !18235
  %6 = load i8, i8* %copper, align 2, !dbg !18235
  %tobool = icmp ne i8 %6, 0, !dbg !18233
  br i1 %tobool, label %if.then, label %if.else, !dbg !18236

if.then:                                          ; preds = %entry
  %7 = load %struct.ethtool_link_ksettings*, %struct.ethtool_link_ksettings** %cmd.addr, align 8, !dbg !18237
  %base = getelementptr inbounds %struct.ethtool_link_ksettings, %struct.ethtool_link_ksettings* %7, i32 0, i32 0, !dbg !18239
  %port = getelementptr inbounds %struct.ethtool_link_settings, %struct.ethtool_link_settings* %base, i32 0, i32 3, !dbg !18240
  store i8 0, i8* %port, align 1, !dbg !18241
  %8 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !18242
  %phy_addr = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %8, i32 0, i32 12, !dbg !18243
  %9 = load i16, i16* %phy_addr, align 8, !dbg !18243
  %conv = trunc i16 %9 to i8, !dbg !18242
  %10 = load %struct.ethtool_link_ksettings*, %struct.ethtool_link_ksettings** %cmd.addr, align 8, !dbg !18244
  %base3 = getelementptr inbounds %struct.ethtool_link_ksettings, %struct.ethtool_link_ksettings* %10, i32 0, i32 0, !dbg !18245
  %phy_address = getelementptr inbounds %struct.ethtool_link_settings, %struct.ethtool_link_settings* %base3, i32 0, i32 4, !dbg !18246
  store i8 %conv, i8* %phy_address, align 2, !dbg !18247
  br label %if.end, !dbg !18248

if.else:                                          ; preds = %entry
  %11 = load %struct.ethtool_link_ksettings*, %struct.ethtool_link_ksettings** %cmd.addr, align 8, !dbg !18249
  %base4 = getelementptr inbounds %struct.ethtool_link_ksettings, %struct.ethtool_link_ksettings* %11, i32 0, i32 0, !dbg !18250
  %port5 = getelementptr inbounds %struct.ethtool_link_settings, %struct.ethtool_link_settings* %base4, i32 0, i32 3, !dbg !18251
  store i8 3, i8* %port5, align 1, !dbg !18252
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %12 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !18253
  %advertising6 = getelementptr inbounds %struct.skge_port, %struct.skge_port* %12, i32 0, i32 16, !dbg !18254
  %13 = load i32, i32* %advertising6, align 8, !dbg !18254
  store i32 %13, i32* %advertising, align 4, !dbg !18255
  %14 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !18256
  %autoneg = getelementptr inbounds %struct.skge_port, %struct.skge_port* %14, i32 0, i32 13, !dbg !18257
  %15 = load i8, i8* %autoneg, align 2, !dbg !18257
  %16 = load %struct.ethtool_link_ksettings*, %struct.ethtool_link_ksettings** %cmd.addr, align 8, !dbg !18258
  %base7 = getelementptr inbounds %struct.ethtool_link_ksettings, %struct.ethtool_link_ksettings* %16, i32 0, i32 0, !dbg !18259
  %autoneg8 = getelementptr inbounds %struct.ethtool_link_settings, %struct.ethtool_link_settings* %base7, i32 0, i32 5, !dbg !18260
  store i8 %15, i8* %autoneg8, align 1, !dbg !18261
  %17 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !18262
  %speed = getelementptr inbounds %struct.skge_port, %struct.skge_port* %17, i32 0, i32 15, !dbg !18263
  %18 = load i16, i16* %speed, align 4, !dbg !18263
  %conv9 = zext i16 %18 to i32, !dbg !18262
  %19 = load %struct.ethtool_link_ksettings*, %struct.ethtool_link_ksettings** %cmd.addr, align 8, !dbg !18264
  %base10 = getelementptr inbounds %struct.ethtool_link_ksettings, %struct.ethtool_link_ksettings* %19, i32 0, i32 0, !dbg !18265
  %speed11 = getelementptr inbounds %struct.ethtool_link_settings, %struct.ethtool_link_settings* %base10, i32 0, i32 1, !dbg !18266
  store i32 %conv9, i32* %speed11, align 4, !dbg !18267
  %20 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !18268
  %duplex = getelementptr inbounds %struct.skge_port, %struct.skge_port* %20, i32 0, i32 14, !dbg !18269
  %21 = load i8, i8* %duplex, align 1, !dbg !18269
  %22 = load %struct.ethtool_link_ksettings*, %struct.ethtool_link_ksettings** %cmd.addr, align 8, !dbg !18270
  %base12 = getelementptr inbounds %struct.ethtool_link_ksettings, %struct.ethtool_link_ksettings* %22, i32 0, i32 0, !dbg !18271
  %duplex13 = getelementptr inbounds %struct.ethtool_link_settings, %struct.ethtool_link_settings* %base12, i32 0, i32 2, !dbg !18272
  store i8 %21, i8* %duplex13, align 8, !dbg !18273
  %23 = load %struct.ethtool_link_ksettings*, %struct.ethtool_link_ksettings** %cmd.addr, align 8, !dbg !18274
  %link_modes = getelementptr inbounds %struct.ethtool_link_ksettings, %struct.ethtool_link_ksettings* %23, i32 0, i32 1, !dbg !18275
  %supported14 = getelementptr inbounds %struct.anon.126, %struct.anon.126* %link_modes, i32 0, i32 0, !dbg !18276
  %arraydecay = getelementptr inbounds [2 x i64], [2 x i64]* %supported14, i64 0, i64 0, !dbg !18274
  %24 = load i32, i32* %supported, align 4, !dbg !18277
  call void @ethtool_convert_legacy_u32_to_link_mode(i64* %arraydecay, i32 %24) #14, !dbg !18278
  %25 = load %struct.ethtool_link_ksettings*, %struct.ethtool_link_ksettings** %cmd.addr, align 8, !dbg !18279
  %link_modes15 = getelementptr inbounds %struct.ethtool_link_ksettings, %struct.ethtool_link_ksettings* %25, i32 0, i32 1, !dbg !18280
  %advertising16 = getelementptr inbounds %struct.anon.126, %struct.anon.126* %link_modes15, i32 0, i32 1, !dbg !18281
  %arraydecay17 = getelementptr inbounds [2 x i64], [2 x i64]* %advertising16, i64 0, i64 0, !dbg !18279
  %26 = load i32, i32* %advertising, align 4, !dbg !18282
  call void @ethtool_convert_legacy_u32_to_link_mode(i64* %arraydecay17, i32 %26) #14, !dbg !18283
  ret i32 0, !dbg !18284
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @skge_set_link_ksettings(%struct.net_device* %dev, %struct.ethtool_link_ksettings* %cmd) #2 !dbg !18285 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.net_device*, align 8
  %cmd.addr = alloca %struct.ethtool_link_ksettings*, align 8
  %skge = alloca %struct.skge_port*, align 8
  %hw = alloca %struct.skge_hw*, align 8
  %supported = alloca i32, align 4
  %err = alloca i32, align 4
  %advertising = alloca i32, align 4
  %setting = alloca i32, align 4
  %speed6 = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !18286, metadata !DIExpression()), !dbg !18287
  store %struct.ethtool_link_ksettings* %cmd, %struct.ethtool_link_ksettings** %cmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ethtool_link_ksettings** %cmd.addr, metadata !18288, metadata !DIExpression()), !dbg !18289
  call void @llvm.dbg.declare(metadata %struct.skge_port** %skge, metadata !18290, metadata !DIExpression()), !dbg !18291
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !18292
  %call = call i8* @netdev_priv(%struct.net_device* %0) #14, !dbg !18293
  %1 = bitcast i8* %call to %struct.skge_port*, !dbg !18293
  store %struct.skge_port* %1, %struct.skge_port** %skge, align 8, !dbg !18291
  call void @llvm.dbg.declare(metadata %struct.skge_hw** %hw, metadata !18294, metadata !DIExpression()), !dbg !18295
  %2 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !18296
  %hw1 = getelementptr inbounds %struct.skge_port, %struct.skge_port* %2, i32 0, i32 0, !dbg !18297
  %3 = load %struct.skge_hw*, %struct.skge_hw** %hw1, align 8, !dbg !18297
  store %struct.skge_hw* %3, %struct.skge_hw** %hw, align 8, !dbg !18295
  call void @llvm.dbg.declare(metadata i32* %supported, metadata !18298, metadata !DIExpression()), !dbg !18299
  %4 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !18300
  %call2 = call i32 @skge_supported_modes(%struct.skge_hw* %4) #14, !dbg !18301
  store i32 %call2, i32* %supported, align 4, !dbg !18299
  call void @llvm.dbg.declare(metadata i32* %err, metadata !18302, metadata !DIExpression()), !dbg !18303
  store i32 0, i32* %err, align 4, !dbg !18303
  call void @llvm.dbg.declare(metadata i32* %advertising, metadata !18304, metadata !DIExpression()), !dbg !18305
  %5 = load %struct.ethtool_link_ksettings*, %struct.ethtool_link_ksettings** %cmd.addr, align 8, !dbg !18306
  %link_modes = getelementptr inbounds %struct.ethtool_link_ksettings, %struct.ethtool_link_ksettings* %5, i32 0, i32 1, !dbg !18307
  %advertising3 = getelementptr inbounds %struct.anon.126, %struct.anon.126* %link_modes, i32 0, i32 1, !dbg !18308
  %arraydecay = getelementptr inbounds [2 x i64], [2 x i64]* %advertising3, i64 0, i64 0, !dbg !18306
  %call4 = call zeroext i1 @ethtool_convert_link_mode_to_legacy_u32(i32* %advertising, i64* %arraydecay) #14, !dbg !18309
  %6 = load %struct.ethtool_link_ksettings*, %struct.ethtool_link_ksettings** %cmd.addr, align 8, !dbg !18310
  %base = getelementptr inbounds %struct.ethtool_link_ksettings, %struct.ethtool_link_ksettings* %6, i32 0, i32 0, !dbg !18312
  %autoneg = getelementptr inbounds %struct.ethtool_link_settings, %struct.ethtool_link_settings* %base, i32 0, i32 5, !dbg !18313
  %7 = load i8, i8* %autoneg, align 1, !dbg !18313
  %conv = zext i8 %7 to i32, !dbg !18310
  %cmp = icmp eq i32 %conv, 1, !dbg !18314
  br i1 %cmp, label %if.then, label %if.else, !dbg !18315

if.then:                                          ; preds = %entry
  %8 = load i32, i32* %supported, align 4, !dbg !18316
  store i32 %8, i32* %advertising, align 4, !dbg !18318
  %9 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !18319
  %duplex = getelementptr inbounds %struct.skge_port, %struct.skge_port* %9, i32 0, i32 14, !dbg !18320
  store i8 -1, i8* %duplex, align 1, !dbg !18321
  %10 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !18322
  %speed = getelementptr inbounds %struct.skge_port, %struct.skge_port* %10, i32 0, i32 15, !dbg !18323
  store i16 -1, i16* %speed, align 4, !dbg !18324
  br label %if.end67, !dbg !18325

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %setting, metadata !18326, metadata !DIExpression()), !dbg !18328
  call void @llvm.dbg.declare(metadata i32* %speed6, metadata !18329, metadata !DIExpression()), !dbg !18330
  %11 = load %struct.ethtool_link_ksettings*, %struct.ethtool_link_ksettings** %cmd.addr, align 8, !dbg !18331
  %base7 = getelementptr inbounds %struct.ethtool_link_ksettings, %struct.ethtool_link_ksettings* %11, i32 0, i32 0, !dbg !18332
  %speed8 = getelementptr inbounds %struct.ethtool_link_settings, %struct.ethtool_link_settings* %base7, i32 0, i32 1, !dbg !18333
  %12 = load i32, i32* %speed8, align 4, !dbg !18333
  store i32 %12, i32* %speed6, align 4, !dbg !18330
  %13 = load i32, i32* %speed6, align 4, !dbg !18334
  switch i32 %13, label %sw.default [
    i32 1000, label %sw.bb
    i32 100, label %sw.bb24
    i32 10, label %sw.bb41
  ], !dbg !18335

sw.bb:                                            ; preds = %if.else
  %14 = load %struct.ethtool_link_ksettings*, %struct.ethtool_link_ksettings** %cmd.addr, align 8, !dbg !18336
  %base9 = getelementptr inbounds %struct.ethtool_link_ksettings, %struct.ethtool_link_ksettings* %14, i32 0, i32 0, !dbg !18339
  %duplex10 = getelementptr inbounds %struct.ethtool_link_settings, %struct.ethtool_link_settings* %base9, i32 0, i32 2, !dbg !18340
  %15 = load i8, i8* %duplex10, align 8, !dbg !18340
  %conv11 = zext i8 %15 to i32, !dbg !18336
  %cmp12 = icmp eq i32 %conv11, 1, !dbg !18341
  br i1 %cmp12, label %if.then14, label %if.else15, !dbg !18342

if.then14:                                        ; preds = %sw.bb
  store i32 32, i32* %setting, align 4, !dbg !18343
  br label %if.end23, !dbg !18344

if.else15:                                        ; preds = %sw.bb
  %16 = load %struct.ethtool_link_ksettings*, %struct.ethtool_link_ksettings** %cmd.addr, align 8, !dbg !18345
  %base16 = getelementptr inbounds %struct.ethtool_link_ksettings, %struct.ethtool_link_ksettings* %16, i32 0, i32 0, !dbg !18347
  %duplex17 = getelementptr inbounds %struct.ethtool_link_settings, %struct.ethtool_link_settings* %base16, i32 0, i32 2, !dbg !18348
  %17 = load i8, i8* %duplex17, align 8, !dbg !18348
  %conv18 = zext i8 %17 to i32, !dbg !18345
  %cmp19 = icmp eq i32 %conv18, 0, !dbg !18349
  br i1 %cmp19, label %if.then21, label %if.else22, !dbg !18350

if.then21:                                        ; preds = %if.else15
  store i32 16, i32* %setting, align 4, !dbg !18351
  br label %if.end, !dbg !18352

if.else22:                                        ; preds = %if.else15
  store i32 -22, i32* %retval, align 4, !dbg !18353
  br label %return, !dbg !18353

if.end:                                           ; preds = %if.then21
  br label %if.end23

if.end23:                                         ; preds = %if.end, %if.then14
  br label %sw.epilog, !dbg !18354

sw.bb24:                                          ; preds = %if.else
  %18 = load %struct.ethtool_link_ksettings*, %struct.ethtool_link_ksettings** %cmd.addr, align 8, !dbg !18355
  %base25 = getelementptr inbounds %struct.ethtool_link_ksettings, %struct.ethtool_link_ksettings* %18, i32 0, i32 0, !dbg !18357
  %duplex26 = getelementptr inbounds %struct.ethtool_link_settings, %struct.ethtool_link_settings* %base25, i32 0, i32 2, !dbg !18358
  %19 = load i8, i8* %duplex26, align 8, !dbg !18358
  %conv27 = zext i8 %19 to i32, !dbg !18355
  %cmp28 = icmp eq i32 %conv27, 1, !dbg !18359
  br i1 %cmp28, label %if.then30, label %if.else31, !dbg !18360

if.then30:                                        ; preds = %sw.bb24
  store i32 8, i32* %setting, align 4, !dbg !18361
  br label %if.end40, !dbg !18362

if.else31:                                        ; preds = %sw.bb24
  %20 = load %struct.ethtool_link_ksettings*, %struct.ethtool_link_ksettings** %cmd.addr, align 8, !dbg !18363
  %base32 = getelementptr inbounds %struct.ethtool_link_ksettings, %struct.ethtool_link_ksettings* %20, i32 0, i32 0, !dbg !18365
  %duplex33 = getelementptr inbounds %struct.ethtool_link_settings, %struct.ethtool_link_settings* %base32, i32 0, i32 2, !dbg !18366
  %21 = load i8, i8* %duplex33, align 8, !dbg !18366
  %conv34 = zext i8 %21 to i32, !dbg !18363
  %cmp35 = icmp eq i32 %conv34, 0, !dbg !18367
  br i1 %cmp35, label %if.then37, label %if.else38, !dbg !18368

if.then37:                                        ; preds = %if.else31
  store i32 4, i32* %setting, align 4, !dbg !18369
  br label %if.end39, !dbg !18370

if.else38:                                        ; preds = %if.else31
  store i32 -22, i32* %retval, align 4, !dbg !18371
  br label %return, !dbg !18371

if.end39:                                         ; preds = %if.then37
  br label %if.end40

if.end40:                                         ; preds = %if.end39, %if.then30
  br label %sw.epilog, !dbg !18372

sw.bb41:                                          ; preds = %if.else
  %22 = load %struct.ethtool_link_ksettings*, %struct.ethtool_link_ksettings** %cmd.addr, align 8, !dbg !18373
  %base42 = getelementptr inbounds %struct.ethtool_link_ksettings, %struct.ethtool_link_ksettings* %22, i32 0, i32 0, !dbg !18375
  %duplex43 = getelementptr inbounds %struct.ethtool_link_settings, %struct.ethtool_link_settings* %base42, i32 0, i32 2, !dbg !18376
  %23 = load i8, i8* %duplex43, align 8, !dbg !18376
  %conv44 = zext i8 %23 to i32, !dbg !18373
  %cmp45 = icmp eq i32 %conv44, 1, !dbg !18377
  br i1 %cmp45, label %if.then47, label %if.else48, !dbg !18378

if.then47:                                        ; preds = %sw.bb41
  store i32 2, i32* %setting, align 4, !dbg !18379
  br label %if.end57, !dbg !18380

if.else48:                                        ; preds = %sw.bb41
  %24 = load %struct.ethtool_link_ksettings*, %struct.ethtool_link_ksettings** %cmd.addr, align 8, !dbg !18381
  %base49 = getelementptr inbounds %struct.ethtool_link_ksettings, %struct.ethtool_link_ksettings* %24, i32 0, i32 0, !dbg !18383
  %duplex50 = getelementptr inbounds %struct.ethtool_link_settings, %struct.ethtool_link_settings* %base49, i32 0, i32 2, !dbg !18384
  %25 = load i8, i8* %duplex50, align 8, !dbg !18384
  %conv51 = zext i8 %25 to i32, !dbg !18381
  %cmp52 = icmp eq i32 %conv51, 0, !dbg !18385
  br i1 %cmp52, label %if.then54, label %if.else55, !dbg !18386

if.then54:                                        ; preds = %if.else48
  store i32 1, i32* %setting, align 4, !dbg !18387
  br label %if.end56, !dbg !18388

if.else55:                                        ; preds = %if.else48
  store i32 -22, i32* %retval, align 4, !dbg !18389
  br label %return, !dbg !18389

if.end56:                                         ; preds = %if.then54
  br label %if.end57

if.end57:                                         ; preds = %if.end56, %if.then47
  br label %sw.epilog, !dbg !18390

sw.default:                                       ; preds = %if.else
  store i32 -22, i32* %retval, align 4, !dbg !18391
  br label %return, !dbg !18391

sw.epilog:                                        ; preds = %if.end57, %if.end40, %if.end23
  %26 = load i32, i32* %setting, align 4, !dbg !18392
  %27 = load i32, i32* %supported, align 4, !dbg !18394
  %and = and i32 %26, %27, !dbg !18395
  %cmp58 = icmp eq i32 %and, 0, !dbg !18396
  br i1 %cmp58, label %if.then60, label %if.end61, !dbg !18397

if.then60:                                        ; preds = %sw.epilog
  store i32 -22, i32* %retval, align 4, !dbg !18398
  br label %return, !dbg !18398

if.end61:                                         ; preds = %sw.epilog
  %28 = load i32, i32* %speed6, align 4, !dbg !18399
  %conv62 = trunc i32 %28 to i16, !dbg !18399
  %29 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !18400
  %speed63 = getelementptr inbounds %struct.skge_port, %struct.skge_port* %29, i32 0, i32 15, !dbg !18401
  store i16 %conv62, i16* %speed63, align 4, !dbg !18402
  %30 = load %struct.ethtool_link_ksettings*, %struct.ethtool_link_ksettings** %cmd.addr, align 8, !dbg !18403
  %base64 = getelementptr inbounds %struct.ethtool_link_ksettings, %struct.ethtool_link_ksettings* %30, i32 0, i32 0, !dbg !18404
  %duplex65 = getelementptr inbounds %struct.ethtool_link_settings, %struct.ethtool_link_settings* %base64, i32 0, i32 2, !dbg !18405
  %31 = load i8, i8* %duplex65, align 8, !dbg !18405
  %32 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !18406
  %duplex66 = getelementptr inbounds %struct.skge_port, %struct.skge_port* %32, i32 0, i32 14, !dbg !18407
  store i8 %31, i8* %duplex66, align 1, !dbg !18408
  br label %if.end67

if.end67:                                         ; preds = %if.end61, %if.then
  %33 = load %struct.ethtool_link_ksettings*, %struct.ethtool_link_ksettings** %cmd.addr, align 8, !dbg !18409
  %base68 = getelementptr inbounds %struct.ethtool_link_ksettings, %struct.ethtool_link_ksettings* %33, i32 0, i32 0, !dbg !18410
  %autoneg69 = getelementptr inbounds %struct.ethtool_link_settings, %struct.ethtool_link_settings* %base68, i32 0, i32 5, !dbg !18411
  %34 = load i8, i8* %autoneg69, align 1, !dbg !18411
  %35 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !18412
  %autoneg70 = getelementptr inbounds %struct.skge_port, %struct.skge_port* %35, i32 0, i32 13, !dbg !18413
  store i8 %34, i8* %autoneg70, align 2, !dbg !18414
  %36 = load i32, i32* %advertising, align 4, !dbg !18415
  %37 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !18416
  %advertising71 = getelementptr inbounds %struct.skge_port, %struct.skge_port* %37, i32 0, i32 16, !dbg !18417
  store i32 %36, i32* %advertising71, align 8, !dbg !18418
  %38 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !18419
  %call72 = call zeroext i1 @netif_running(%struct.net_device* %38) #14, !dbg !18421
  br i1 %call72, label %if.then73, label %if.end78, !dbg !18422

if.then73:                                        ; preds = %if.end67
  %39 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !18423
  %call74 = call i32 @skge_down(%struct.net_device* %39) #14, !dbg !18425
  %40 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !18426
  %call75 = call i32 @skge_up(%struct.net_device* %40) #14, !dbg !18427
  store i32 %call75, i32* %err, align 4, !dbg !18428
  %41 = load i32, i32* %err, align 4, !dbg !18429
  %tobool = icmp ne i32 %41, 0, !dbg !18429
  br i1 %tobool, label %if.then76, label %if.end77, !dbg !18431

if.then76:                                        ; preds = %if.then73
  %42 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !18432
  call void @dev_close(%struct.net_device* %42) #14, !dbg !18434
  %43 = load i32, i32* %err, align 4, !dbg !18435
  store i32 %43, i32* %retval, align 4, !dbg !18436
  br label %return, !dbg !18436

if.end77:                                         ; preds = %if.then73
  br label %if.end78, !dbg !18437

if.end78:                                         ; preds = %if.end77, %if.end67
  store i32 0, i32* %retval, align 4, !dbg !18438
  br label %return, !dbg !18438

return:                                           ; preds = %if.end78, %if.then76, %if.then60, %sw.default, %if.else55, %if.else38, %if.else22
  %44 = load i32, i32* %retval, align 4, !dbg !18439
  ret i32 %44, !dbg !18439
}

; Function Attrs: noredzone
declare dso_local i64 @strlcpy(i8*, i8*, i64) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @skge_phy_reset(%struct.skge_port* %skge) #2 !dbg !18440 {
entry:
  %skge.addr = alloca %struct.skge_port*, align 8
  %hw = alloca %struct.skge_hw*, align 8
  %port = alloca i32, align 4
  %dev = alloca %struct.net_device*, align 8
  store %struct.skge_port* %skge, %struct.skge_port** %skge.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.skge_port** %skge.addr, metadata !18441, metadata !DIExpression()), !dbg !18442
  call void @llvm.dbg.declare(metadata %struct.skge_hw** %hw, metadata !18443, metadata !DIExpression()), !dbg !18444
  %0 = load %struct.skge_port*, %struct.skge_port** %skge.addr, align 8, !dbg !18445
  %hw1 = getelementptr inbounds %struct.skge_port, %struct.skge_port* %0, i32 0, i32 0, !dbg !18446
  %1 = load %struct.skge_hw*, %struct.skge_hw** %hw1, align 8, !dbg !18446
  store %struct.skge_hw* %1, %struct.skge_hw** %hw, align 8, !dbg !18444
  call void @llvm.dbg.declare(metadata i32* %port, metadata !18447, metadata !DIExpression()), !dbg !18448
  %2 = load %struct.skge_port*, %struct.skge_port** %skge.addr, align 8, !dbg !18449
  %port2 = getelementptr inbounds %struct.skge_port, %struct.skge_port* %2, i32 0, i32 3, !dbg !18450
  %3 = load i32, i32* %port2, align 8, !dbg !18450
  store i32 %3, i32* %port, align 4, !dbg !18448
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev, metadata !18451, metadata !DIExpression()), !dbg !18452
  %4 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !18453
  %dev3 = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %4, i32 0, i32 4, !dbg !18454
  %5 = load i32, i32* %port, align 4, !dbg !18455
  %idxprom = sext i32 %5 to i64, !dbg !18453
  %arrayidx = getelementptr [2 x %struct.net_device*], [2 x %struct.net_device*]* %dev3, i64 0, i64 %idxprom, !dbg !18453
  %6 = load %struct.net_device*, %struct.net_device** %arrayidx, align 8, !dbg !18453
  store %struct.net_device* %6, %struct.net_device** %dev, align 8, !dbg !18452
  %7 = load %struct.skge_port*, %struct.skge_port** %skge.addr, align 8, !dbg !18456
  %netdev = getelementptr inbounds %struct.skge_port, %struct.skge_port* %7, i32 0, i32 1, !dbg !18457
  %8 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !18457
  call void @netif_stop_queue(%struct.net_device* %8) #14, !dbg !18458
  %9 = load %struct.skge_port*, %struct.skge_port** %skge.addr, align 8, !dbg !18459
  %netdev4 = getelementptr inbounds %struct.skge_port, %struct.skge_port* %9, i32 0, i32 1, !dbg !18460
  %10 = load %struct.net_device*, %struct.net_device** %netdev4, align 8, !dbg !18460
  call void @netif_carrier_off(%struct.net_device* %10) #14, !dbg !18461
  %11 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !18462
  %phy_lock = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %11, i32 0, i32 13, !dbg !18463
  call void @spin_lock_bh(%struct.spinlock* %phy_lock) #14, !dbg !18464
  %12 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !18465
  %call = call zeroext i1 @is_genesis(%struct.skge_hw* %12) #14, !dbg !18467
  br i1 %call, label %if.then, label %if.else, !dbg !18468

if.then:                                          ; preds = %entry
  %13 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !18469
  %14 = load i32, i32* %port, align 4, !dbg !18471
  call void @genesis_reset(%struct.skge_hw* %13, i32 %14) #14, !dbg !18472
  %15 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !18473
  %16 = load i32, i32* %port, align 4, !dbg !18474
  call void @genesis_mac_init(%struct.skge_hw* %15, i32 %16) #14, !dbg !18475
  br label %if.end, !dbg !18476

if.else:                                          ; preds = %entry
  %17 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !18477
  %18 = load i32, i32* %port, align 4, !dbg !18479
  call void @yukon_reset(%struct.skge_hw* %17, i32 %18) #14, !dbg !18480
  %19 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !18481
  %20 = load i32, i32* %port, align 4, !dbg !18482
  call void @yukon_init(%struct.skge_hw* %19, i32 %20) #14, !dbg !18483
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %21 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !18484
  %phy_lock5 = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %21, i32 0, i32 13, !dbg !18485
  call void @spin_unlock_bh(%struct.spinlock* %phy_lock5) #14, !dbg !18486
  %22 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !18487
  call void @skge_set_multicast(%struct.net_device* %22) #14, !dbg !18488
  ret void, !dbg !18489
}

; Function Attrs: noredzone
declare dso_local i32 @pci_find_capability(%struct.pci_dev*, i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @skge_vpd_read(%struct.pci_dev* %pdev, i32 %cap, i16 zeroext %offset) #2 !dbg !18490 {
entry:
  %pdev.addr = alloca %struct.pci_dev*, align 8
  %cap.addr = alloca i32, align 4
  %offset.addr = alloca i16, align 2
  %val = alloca i32, align 4
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !18493, metadata !DIExpression()), !dbg !18494
  store i32 %cap, i32* %cap.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cap.addr, metadata !18495, metadata !DIExpression()), !dbg !18496
  store i16 %offset, i16* %offset.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %offset.addr, metadata !18497, metadata !DIExpression()), !dbg !18498
  call void @llvm.dbg.declare(metadata i32* %val, metadata !18499, metadata !DIExpression()), !dbg !18500
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !18501
  %1 = load i32, i32* %cap.addr, align 4, !dbg !18502
  %add = add i32 %1, 2, !dbg !18503
  %2 = load i16, i16* %offset.addr, align 2, !dbg !18504
  %call = call i32 @pci_write_config_word(%struct.pci_dev* %0, i32 %add, i16 zeroext %2) #14, !dbg !18505
  br label %do.body, !dbg !18506

do.body:                                          ; preds = %do.cond, %entry
  %3 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !18507
  %4 = load i32, i32* %cap.addr, align 4, !dbg !18509
  %add1 = add i32 %4, 2, !dbg !18510
  %call2 = call i32 @pci_read_config_word(%struct.pci_dev* %3, i32 %add1, i16* %offset.addr) #14, !dbg !18511
  br label %do.cond, !dbg !18512

do.cond:                                          ; preds = %do.body
  %5 = load i16, i16* %offset.addr, align 2, !dbg !18513
  %conv = zext i16 %5 to i32, !dbg !18513
  %and = and i32 %conv, 32768, !dbg !18514
  %tobool = icmp ne i32 %and, 0, !dbg !18515
  %lnot = xor i1 %tobool, true, !dbg !18515
  br i1 %lnot, label %do.body, label %do.end, !dbg !18512, !llvm.loop !18516

do.end:                                           ; preds = %do.cond
  %6 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !18518
  %7 = load i32, i32* %cap.addr, align 4, !dbg !18519
  %add3 = add i32 %7, 4, !dbg !18520
  %call4 = call i32 @pci_read_config_dword(%struct.pci_dev* %6, i32 %add3, i32* %val) #14, !dbg !18521
  %8 = load i32, i32* %val, align 4, !dbg !18522
  ret i32 %8, !dbg !18523
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @skge_vpd_write(%struct.pci_dev* %pdev, i32 %cap, i16 zeroext %offset, i32 %val) #2 !dbg !18524 {
entry:
  %pdev.addr = alloca %struct.pci_dev*, align 8
  %cap.addr = alloca i32, align 4
  %offset.addr = alloca i16, align 2
  %val.addr = alloca i32, align 4
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !18527, metadata !DIExpression()), !dbg !18528
  store i32 %cap, i32* %cap.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cap.addr, metadata !18529, metadata !DIExpression()), !dbg !18530
  store i16 %offset, i16* %offset.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %offset.addr, metadata !18531, metadata !DIExpression()), !dbg !18532
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !18533, metadata !DIExpression()), !dbg !18534
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !18535
  %1 = load i32, i32* %cap.addr, align 4, !dbg !18536
  %add = add i32 %1, 4, !dbg !18537
  %2 = load i32, i32* %val.addr, align 4, !dbg !18538
  %call = call i32 @pci_write_config_dword(%struct.pci_dev* %0, i32 %add, i32 %2) #14, !dbg !18539
  %3 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !18540
  %4 = load i32, i32* %cap.addr, align 4, !dbg !18541
  %add1 = add i32 %4, 2, !dbg !18542
  %5 = load i16, i16* %offset.addr, align 2, !dbg !18543
  %conv = zext i16 %5 to i32, !dbg !18543
  %or = or i32 %conv, 32768, !dbg !18544
  %conv2 = trunc i32 %or to i16, !dbg !18543
  %call3 = call i32 @pci_write_config_word(%struct.pci_dev* %3, i32 %add1, i16 zeroext %conv2) #14, !dbg !18545
  br label %do.body, !dbg !18546

do.body:                                          ; preds = %do.cond, %entry
  %6 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !18547
  %7 = load i32, i32* %cap.addr, align 4, !dbg !18549
  %add4 = add i32 %7, 2, !dbg !18550
  %call5 = call i32 @pci_read_config_word(%struct.pci_dev* %6, i32 %add4, i16* %offset.addr) #14, !dbg !18551
  br label %do.cond, !dbg !18552

do.cond:                                          ; preds = %do.body
  %8 = load i16, i16* %offset.addr, align 2, !dbg !18553
  %conv6 = zext i16 %8 to i32, !dbg !18553
  %and = and i32 %conv6, 32768, !dbg !18554
  %tobool = icmp ne i32 %and, 0, !dbg !18552
  br i1 %tobool, label %do.body, label %do.end, !dbg !18552, !llvm.loop !18555

do.end:                                           ; preds = %do.cond
  ret void, !dbg !18557
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @skge_clk2usec(%struct.skge_hw* %hw, i32 %ticks) #2 !dbg !18558 {
entry:
  %hw.addr = alloca %struct.skge_hw*, align 8
  %ticks.addr = alloca i32, align 4
  store %struct.skge_hw* %hw, %struct.skge_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.skge_hw** %hw.addr, metadata !18559, metadata !DIExpression()), !dbg !18560
  store i32 %ticks, i32* %ticks.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ticks.addr, metadata !18561, metadata !DIExpression()), !dbg !18562
  %0 = load i32, i32* %ticks.addr, align 4, !dbg !18563
  %mul = mul i32 %0, 1000, !dbg !18564
  %1 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !18565
  %call = call i32 @hwkhz(%struct.skge_hw* %1) #14, !dbg !18566
  %div = udiv i32 %mul, %call, !dbg !18567
  ret i32 %div, !dbg !18568
}

; Function Attrs: noredzone
declare dso_local void @ethtool_convert_legacy_u32_to_link_mode(i64*, i32) #1

; Function Attrs: noredzone
declare dso_local zeroext i1 @ethtool_convert_link_mode_to_legacy_u32(i32*, i64*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @skge_tx_done(%struct.net_device* %dev) #2 !dbg !18569 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %skge = alloca %struct.skge_port*, align 8
  %ring = alloca %struct.skge_ring*, align 8
  %e = alloca %struct.skge_element*, align 8
  %bytes_compl = alloca i32, align 4
  %pkts_compl = alloca i32, align 4
  %control = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !18570, metadata !DIExpression()), !dbg !18571
  call void @llvm.dbg.declare(metadata %struct.skge_port** %skge, metadata !18572, metadata !DIExpression()), !dbg !18573
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !18574
  %call = call i8* @netdev_priv(%struct.net_device* %0) #14, !dbg !18575
  %1 = bitcast i8* %call to %struct.skge_port*, !dbg !18575
  store %struct.skge_port* %1, %struct.skge_port** %skge, align 8, !dbg !18573
  call void @llvm.dbg.declare(metadata %struct.skge_ring** %ring, metadata !18576, metadata !DIExpression()), !dbg !18577
  %2 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !18578
  %tx_ring = getelementptr inbounds %struct.skge_port, %struct.skge_port* %2, i32 0, i32 5, !dbg !18579
  store %struct.skge_ring* %tx_ring, %struct.skge_ring** %ring, align 8, !dbg !18577
  call void @llvm.dbg.declare(metadata %struct.skge_element** %e, metadata !18580, metadata !DIExpression()), !dbg !18581
  call void @llvm.dbg.declare(metadata i32* %bytes_compl, metadata !18582, metadata !DIExpression()), !dbg !18583
  store i32 0, i32* %bytes_compl, align 4, !dbg !18583
  call void @llvm.dbg.declare(metadata i32* %pkts_compl, metadata !18584, metadata !DIExpression()), !dbg !18585
  store i32 0, i32* %pkts_compl, align 4, !dbg !18585
  %3 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !18586
  %hw = getelementptr inbounds %struct.skge_port, %struct.skge_port* %3, i32 0, i32 0, !dbg !18587
  %4 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !18587
  %5 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !18588
  %port = getelementptr inbounds %struct.skge_port, %struct.skge_port* %5, i32 0, i32 3, !dbg !18588
  %6 = load i32, i32* %port, align 8, !dbg !18588
  %idxprom = sext i32 %6 to i64, !dbg !18588
  %arrayidx = getelementptr [2 x i32], [2 x i32]* @txqaddr, i64 0, i64 %idxprom, !dbg !18588
  %7 = load i32, i32* %arrayidx, align 4, !dbg !18588
  %add = add i32 1024, %7, !dbg !18588
  %add1 = add i32 %add, 52, !dbg !18588
  call void @skge_write8(%struct.skge_hw* %4, i32 %add1, i8 zeroext 2) #14, !dbg !18589
  %8 = load %struct.skge_ring*, %struct.skge_ring** %ring, align 8, !dbg !18590
  %to_clean = getelementptr inbounds %struct.skge_ring, %struct.skge_ring* %8, i32 0, i32 0, !dbg !18592
  %9 = load %struct.skge_element*, %struct.skge_element** %to_clean, align 8, !dbg !18592
  store %struct.skge_element* %9, %struct.skge_element** %e, align 8, !dbg !18593
  br label %for.cond, !dbg !18594

for.cond:                                         ; preds = %for.inc, %entry
  %10 = load %struct.skge_element*, %struct.skge_element** %e, align 8, !dbg !18595
  %11 = load %struct.skge_ring*, %struct.skge_ring** %ring, align 8, !dbg !18597
  %to_use = getelementptr inbounds %struct.skge_ring, %struct.skge_ring* %11, i32 0, i32 1, !dbg !18598
  %12 = load %struct.skge_element*, %struct.skge_element** %to_use, align 8, !dbg !18598
  %cmp = icmp ne %struct.skge_element* %10, %12, !dbg !18599
  br i1 %cmp, label %for.body, label %for.end, !dbg !18600

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %control, metadata !18601, metadata !DIExpression()), !dbg !18603
  %13 = load %struct.skge_element*, %struct.skge_element** %e, align 8, !dbg !18604
  %desc = getelementptr inbounds %struct.skge_element, %struct.skge_element* %13, i32 0, i32 1, !dbg !18605
  %14 = load i8*, i8** %desc, align 8, !dbg !18605
  %15 = bitcast i8* %14 to %struct.skge_tx_desc*, !dbg !18606
  %control2 = getelementptr inbounds %struct.skge_tx_desc, %struct.skge_tx_desc* %15, i32 0, i32 0, !dbg !18607
  %16 = load i32, i32* %control2, align 4, !dbg !18607
  store i32 %16, i32* %control, align 4, !dbg !18603
  %17 = load i32, i32* %control, align 4, !dbg !18608
  %and = and i32 %17, -2147483648, !dbg !18610
  %tobool = icmp ne i32 %and, 0, !dbg !18610
  br i1 %tobool, label %if.then, label %if.end, !dbg !18611

if.then:                                          ; preds = %for.body
  br label %for.end, !dbg !18612

if.end:                                           ; preds = %for.body
  %18 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !18613
  %hw3 = getelementptr inbounds %struct.skge_port, %struct.skge_port* %18, i32 0, i32 0, !dbg !18614
  %19 = load %struct.skge_hw*, %struct.skge_hw** %hw3, align 8, !dbg !18614
  %pdev = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %19, i32 0, i32 1, !dbg !18615
  %20 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !18615
  %21 = load %struct.skge_element*, %struct.skge_element** %e, align 8, !dbg !18616
  %22 = load i32, i32* %control, align 4, !dbg !18617
  call void @skge_tx_unmap(%struct.pci_dev* %20, %struct.skge_element* %21, i32 %22) #14, !dbg !18618
  %23 = load i32, i32* %control, align 4, !dbg !18619
  %and4 = and i32 %23, 536870912, !dbg !18621
  %tobool5 = icmp ne i32 %and4, 0, !dbg !18621
  br i1 %tobool5, label %if.then6, label %if.end14, !dbg !18622

if.then6:                                         ; preds = %if.end
  br label %do.body, !dbg !18623

do.body:                                          ; preds = %if.then6
  %24 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !18625
  %msg_enable = getelementptr inbounds %struct.skge_port, %struct.skge_port* %24, i32 0, i32 4, !dbg !18625
  %25 = load i32, i32* %msg_enable, align 4, !dbg !18625
  %and7 = and i32 %25, 1024, !dbg !18625
  %tobool8 = icmp ne i32 %and7, 0, !dbg !18625
  br i1 %tobool8, label %if.then9, label %if.end11, !dbg !18628

if.then9:                                         ; preds = %do.body
  %26 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !18625
  %netdev = getelementptr inbounds %struct.skge_port, %struct.skge_port* %26, i32 0, i32 1, !dbg !18625
  %27 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !18625
  %28 = load %struct.skge_element*, %struct.skge_element** %e, align 8, !dbg !18625
  %29 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !18625
  %tx_ring10 = getelementptr inbounds %struct.skge_port, %struct.skge_port* %29, i32 0, i32 5, !dbg !18625
  %start = getelementptr inbounds %struct.skge_ring, %struct.skge_ring* %tx_ring10, i32 0, i32 2, !dbg !18625
  %30 = load %struct.skge_element*, %struct.skge_element** %start, align 8, !dbg !18625
  %sub.ptr.lhs.cast = ptrtoint %struct.skge_element* %28 to i64, !dbg !18625
  %sub.ptr.rhs.cast = ptrtoint %struct.skge_element* %30 to i64, !dbg !18625
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !18625
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 40, !dbg !18625
  call void (i8*, %struct.net_device*, i8*, ...) @netdev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.14, i64 0, i64 0), %struct.net_device* %27, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.57, i64 0, i64 0), i64 %sub.ptr.div) #15, !dbg !18625
  br label %if.end11, !dbg !18625

if.end11:                                         ; preds = %if.then9, %do.body
  br label %do.end, !dbg !18628

do.end:                                           ; preds = %if.end11
  %31 = load i32, i32* %pkts_compl, align 4, !dbg !18629
  %inc = add i32 %31, 1, !dbg !18629
  store i32 %inc, i32* %pkts_compl, align 4, !dbg !18629
  %32 = load %struct.skge_element*, %struct.skge_element** %e, align 8, !dbg !18630
  %skb = getelementptr inbounds %struct.skge_element, %struct.skge_element* %32, i32 0, i32 2, !dbg !18631
  %33 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !18631
  %len = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %33, i32 0, i32 5, !dbg !18632
  %34 = load i32, i32* %len, align 8, !dbg !18632
  %35 = load i32, i32* %bytes_compl, align 4, !dbg !18633
  %add12 = add i32 %35, %34, !dbg !18633
  store i32 %add12, i32* %bytes_compl, align 4, !dbg !18633
  %36 = load %struct.skge_element*, %struct.skge_element** %e, align 8, !dbg !18634
  %skb13 = getelementptr inbounds %struct.skge_element, %struct.skge_element* %36, i32 0, i32 2, !dbg !18635
  %37 = load %struct.sk_buff*, %struct.sk_buff** %skb13, align 8, !dbg !18635
  call void @dev_consume_skb_any(%struct.sk_buff* %37) #14, !dbg !18636
  br label %if.end14, !dbg !18637

if.end14:                                         ; preds = %do.end, %if.end
  br label %for.inc, !dbg !18638

for.inc:                                          ; preds = %if.end14
  %38 = load %struct.skge_element*, %struct.skge_element** %e, align 8, !dbg !18639
  %next = getelementptr inbounds %struct.skge_element, %struct.skge_element* %38, i32 0, i32 0, !dbg !18640
  %39 = load %struct.skge_element*, %struct.skge_element** %next, align 8, !dbg !18640
  store %struct.skge_element* %39, %struct.skge_element** %e, align 8, !dbg !18641
  br label %for.cond, !dbg !18642, !llvm.loop !18643

for.end:                                          ; preds = %if.then, %for.cond
  %40 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !18645
  %41 = load i32, i32* %pkts_compl, align 4, !dbg !18646
  %42 = load i32, i32* %bytes_compl, align 4, !dbg !18647
  call void @netdev_completed_queue(%struct.net_device* %40, i32 %41, i32 %42) #14, !dbg !18648
  %43 = load %struct.skge_element*, %struct.skge_element** %e, align 8, !dbg !18649
  %44 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !18650
  %tx_ring15 = getelementptr inbounds %struct.skge_port, %struct.skge_port* %44, i32 0, i32 5, !dbg !18651
  %to_clean16 = getelementptr inbounds %struct.skge_ring, %struct.skge_ring* %tx_ring15, i32 0, i32 0, !dbg !18652
  store %struct.skge_element* %43, %struct.skge_element** %to_clean16, align 8, !dbg !18653
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !18654, !srcloc !18655
  %45 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !18656
  %call17 = call zeroext i1 @netif_queue_stopped(%struct.net_device* %45) #14, !dbg !18656
  br i1 %call17, label %land.rhs, label %land.end, !dbg !18656

land.rhs:                                         ; preds = %for.end
  %46 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !18656
  %tx_ring18 = getelementptr inbounds %struct.skge_port, %struct.skge_port* %46, i32 0, i32 5, !dbg !18656
  %call19 = call i32 @skge_avail(%struct.skge_ring* %tx_ring18) #14, !dbg !18656
  %conv = sext i32 %call19 to i64, !dbg !18656
  %cmp20 = icmp ugt i64 %conv, 18, !dbg !18656
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.end
  %47 = phi i1 [ false, %for.end ], [ %cmp20, %land.rhs ], !dbg !18658
  %lnot = xor i1 %47, true, !dbg !18656
  %lnot22 = xor i1 %lnot, true, !dbg !18656
  %lnot.ext = zext i1 %lnot22 to i32, !dbg !18656
  %conv23 = sext i32 %lnot.ext to i64, !dbg !18656
  %tobool24 = icmp ne i64 %conv23, 0, !dbg !18656
  br i1 %tobool24, label %if.then25, label %if.end43, !dbg !18659

if.then25:                                        ; preds = %land.end
  %48 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !18660
  call void @netif_tx_lock(%struct.net_device* %48) #14, !dbg !18662
  %49 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !18663
  %call26 = call zeroext i1 @netif_queue_stopped(%struct.net_device* %49) #14, !dbg !18663
  br i1 %call26, label %land.rhs28, label %land.end34, !dbg !18663

land.rhs28:                                       ; preds = %if.then25
  %50 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !18663
  %tx_ring29 = getelementptr inbounds %struct.skge_port, %struct.skge_port* %50, i32 0, i32 5, !dbg !18663
  %call30 = call i32 @skge_avail(%struct.skge_ring* %tx_ring29) #14, !dbg !18663
  %conv31 = sext i32 %call30 to i64, !dbg !18663
  %cmp32 = icmp ugt i64 %conv31, 18, !dbg !18663
  br label %land.end34

land.end34:                                       ; preds = %land.rhs28, %if.then25
  %51 = phi i1 [ false, %if.then25 ], [ %cmp32, %land.rhs28 ], !dbg !18665
  %lnot35 = xor i1 %51, true, !dbg !18663
  %lnot37 = xor i1 %lnot35, true, !dbg !18663
  %lnot.ext38 = zext i1 %lnot37 to i32, !dbg !18663
  %conv39 = sext i32 %lnot.ext38 to i64, !dbg !18663
  %tobool40 = icmp ne i64 %conv39, 0, !dbg !18663
  br i1 %tobool40, label %if.then41, label %if.end42, !dbg !18666

if.then41:                                        ; preds = %land.end34
  %52 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !18667
  call void @netif_wake_queue(%struct.net_device* %52) #14, !dbg !18669
  br label %if.end42, !dbg !18670

if.end42:                                         ; preds = %if.then41, %land.end34
  %53 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !18671
  call void @netif_tx_unlock(%struct.net_device* %53) #14, !dbg !18672
  br label %if.end43, !dbg !18673

if.end43:                                         ; preds = %if.end42, %land.end
  ret void, !dbg !18674
}

; Function Attrs: inaccessiblemem_or_argmemonly nounwind willreturn
declare void @llvm.prefetch.p0i8(i8* nocapture readonly, i32 immarg, i32 immarg, i32) #13

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.sk_buff* @skge_rx_get(%struct.net_device* %dev, %struct.skge_element* %e, i32 %control, i32 %status, i16 zeroext %csum) #2 !dbg !18675 {
entry:
  %retval = alloca %struct.sk_buff*, align 8
  %dev.addr = alloca %struct.net_device*, align 8
  %e.addr = alloca %struct.skge_element*, align 8
  %control.addr = alloca i32, align 4
  %status.addr = alloca i32, align 4
  %csum.addr = alloca i16, align 2
  %skge = alloca %struct.skge_port*, align 8
  %skb = alloca %struct.sk_buff*, align 8
  %len = alloca i16, align 2
  %ee = alloca %struct.skge_element, align 8
  %nskb = alloca %struct.sk_buff*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !18678, metadata !DIExpression()), !dbg !18679
  store %struct.skge_element* %e, %struct.skge_element** %e.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.skge_element** %e.addr, metadata !18680, metadata !DIExpression()), !dbg !18681
  store i32 %control, i32* %control.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %control.addr, metadata !18682, metadata !DIExpression()), !dbg !18683
  store i32 %status, i32* %status.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %status.addr, metadata !18684, metadata !DIExpression()), !dbg !18685
  store i16 %csum, i16* %csum.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %csum.addr, metadata !18686, metadata !DIExpression()), !dbg !18687
  call void @llvm.dbg.declare(metadata %struct.skge_port** %skge, metadata !18688, metadata !DIExpression()), !dbg !18689
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !18690
  %call = call i8* @netdev_priv(%struct.net_device* %0) #14, !dbg !18691
  %1 = bitcast i8* %call to %struct.skge_port*, !dbg !18691
  store %struct.skge_port* %1, %struct.skge_port** %skge, align 8, !dbg !18689
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb, metadata !18692, metadata !DIExpression()), !dbg !18693
  call void @llvm.dbg.declare(metadata i16* %len, metadata !18694, metadata !DIExpression()), !dbg !18695
  %2 = load i32, i32* %control.addr, align 4, !dbg !18696
  %and = and i32 %2, 65535, !dbg !18697
  %conv = trunc i32 %and to i16, !dbg !18696
  store i16 %conv, i16* %len, align 2, !dbg !18695
  br label %do.body, !dbg !18698

do.body:                                          ; preds = %entry
  %3 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !18699
  %msg_enable = getelementptr inbounds %struct.skge_port, %struct.skge_port* %3, i32 0, i32 4, !dbg !18699
  %4 = load i32, i32* %msg_enable, align 4, !dbg !18699
  %and1 = and i32 %4, 2048, !dbg !18699
  %tobool = icmp ne i32 %and1, 0, !dbg !18699
  br i1 %tobool, label %if.then, label %if.end, !dbg !18702

if.then:                                          ; preds = %do.body
  %5 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !18699
  %netdev = getelementptr inbounds %struct.skge_port, %struct.skge_port* %5, i32 0, i32 1, !dbg !18699
  %6 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !18699
  %7 = load %struct.skge_element*, %struct.skge_element** %e.addr, align 8, !dbg !18699
  %8 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !18699
  %rx_ring = getelementptr inbounds %struct.skge_port, %struct.skge_port* %8, i32 0, i32 6, !dbg !18699
  %start = getelementptr inbounds %struct.skge_ring, %struct.skge_ring* %rx_ring, i32 0, i32 2, !dbg !18699
  %9 = load %struct.skge_element*, %struct.skge_element** %start, align 8, !dbg !18699
  %sub.ptr.lhs.cast = ptrtoint %struct.skge_element* %7 to i64, !dbg !18699
  %sub.ptr.rhs.cast = ptrtoint %struct.skge_element* %9 to i64, !dbg !18699
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !18699
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 40, !dbg !18699
  %10 = load i32, i32* %status.addr, align 4, !dbg !18699
  %11 = load i16, i16* %len, align 2, !dbg !18699
  %conv2 = zext i16 %11 to i32, !dbg !18699
  call void (i8*, %struct.net_device*, i8*, ...) @netdev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.14, i64 0, i64 0), %struct.net_device* %6, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.58, i64 0, i64 0), i64 %sub.ptr.div, i32 %10, i32 %conv2) #15, !dbg !18699
  br label %if.end, !dbg !18699

if.end:                                           ; preds = %if.then, %do.body
  br label %do.end, !dbg !18702

do.end:                                           ; preds = %if.end
  %12 = load i16, i16* %len, align 2, !dbg !18703
  %conv3 = zext i16 %12 to i32, !dbg !18703
  %13 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !18705
  %rx_buf_size = getelementptr inbounds %struct.skge_port, %struct.skge_port* %13, i32 0, i32 7, !dbg !18706
  %14 = load i32, i32* %rx_buf_size, align 8, !dbg !18706
  %cmp = icmp ugt i32 %conv3, %14, !dbg !18707
  br i1 %cmp, label %if.then5, label %if.end6, !dbg !18708

if.then5:                                         ; preds = %do.end
  br label %error, !dbg !18709

if.end6:                                          ; preds = %do.end
  %15 = load i32, i32* %control.addr, align 4, !dbg !18710
  %and7 = and i32 %15, 1610612736, !dbg !18712
  %cmp8 = icmp ne i32 %and7, 1610612736, !dbg !18713
  br i1 %cmp8, label %if.then10, label %if.end11, !dbg !18714

if.then10:                                        ; preds = %if.end6
  br label %error, !dbg !18715

if.end11:                                         ; preds = %if.end6
  %16 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !18716
  %hw = getelementptr inbounds %struct.skge_port, %struct.skge_port* %16, i32 0, i32 0, !dbg !18718
  %17 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !18718
  %18 = load i32, i32* %status.addr, align 4, !dbg !18719
  %call12 = call i32 @bad_phy_status(%struct.skge_hw* %17, i32 %18) #14, !dbg !18720
  %tobool13 = icmp ne i32 %call12, 0, !dbg !18720
  br i1 %tobool13, label %if.then14, label %if.end15, !dbg !18721

if.then14:                                        ; preds = %if.end11
  br label %error, !dbg !18722

if.end15:                                         ; preds = %if.end11
  %19 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !18723
  %hw16 = getelementptr inbounds %struct.skge_port, %struct.skge_port* %19, i32 0, i32 0, !dbg !18725
  %20 = load %struct.skge_hw*, %struct.skge_hw** %hw16, align 8, !dbg !18725
  %21 = load i32, i32* %status.addr, align 4, !dbg !18726
  %call17 = call zeroext i16 @phy_length(%struct.skge_hw* %20, i32 %21) #14, !dbg !18727
  %conv18 = zext i16 %call17 to i32, !dbg !18727
  %22 = load i16, i16* %len, align 2, !dbg !18728
  %conv19 = zext i16 %22 to i32, !dbg !18728
  %cmp20 = icmp ne i32 %conv18, %conv19, !dbg !18729
  br i1 %cmp20, label %if.then22, label %if.end23, !dbg !18730

if.then22:                                        ; preds = %if.end15
  br label %error, !dbg !18731

if.end23:                                         ; preds = %if.end15
  %23 = load i16, i16* %len, align 2, !dbg !18732
  %conv24 = zext i16 %23 to i32, !dbg !18732
  %cmp25 = icmp slt i32 %conv24, 128, !dbg !18734
  br i1 %cmp25, label %if.then27, label %if.else, !dbg !18735

if.then27:                                        ; preds = %if.end23
  %24 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !18736
  %25 = load i16, i16* %len, align 2, !dbg !18738
  %conv28 = zext i16 %25 to i32, !dbg !18738
  %call29 = call %struct.sk_buff* @netdev_alloc_skb_ip_align(%struct.net_device* %24, i32 %conv28) #14, !dbg !18739
  store %struct.sk_buff* %call29, %struct.sk_buff** %skb, align 8, !dbg !18740
  %26 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !18741
  %tobool30 = icmp ne %struct.sk_buff* %26, null, !dbg !18741
  br i1 %tobool30, label %if.end32, label %if.then31, !dbg !18743

if.then31:                                        ; preds = %if.then27
  br label %resubmit, !dbg !18744

if.end32:                                         ; preds = %if.then27
  %27 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !18745
  %hw33 = getelementptr inbounds %struct.skge_port, %struct.skge_port* %27, i32 0, i32 0, !dbg !18746
  %28 = load %struct.skge_hw*, %struct.skge_hw** %hw33, align 8, !dbg !18746
  %pdev = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %28, i32 0, i32 1, !dbg !18747
  %29 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !18747
  %dev34 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %29, i32 0, i32 41, !dbg !18748
  %30 = load %struct.skge_element*, %struct.skge_element** %e.addr, align 8, !dbg !18749
  %mapaddr = getelementptr inbounds %struct.skge_element, %struct.skge_element* %30, i32 0, i32 3, !dbg !18749
  %31 = load i64, i64* %mapaddr, align 8, !dbg !18749
  %32 = load %struct.skge_element*, %struct.skge_element** %e.addr, align 8, !dbg !18750
  %maplen = getelementptr inbounds %struct.skge_element, %struct.skge_element* %32, i32 0, i32 4, !dbg !18750
  %33 = load i32, i32* %maplen, align 8, !dbg !18750
  %conv35 = zext i32 %33 to i64, !dbg !18750
  call void @dma_sync_single_for_cpu(%struct.device* %dev34, i64 %31, i64 %conv35, i32 2) #14, !dbg !18751
  %34 = load %struct.skge_element*, %struct.skge_element** %e.addr, align 8, !dbg !18752
  %skb36 = getelementptr inbounds %struct.skge_element, %struct.skge_element* %34, i32 0, i32 2, !dbg !18753
  %35 = load %struct.sk_buff*, %struct.sk_buff** %skb36, align 8, !dbg !18753
  %36 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !18754
  %data = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %36, i32 0, i32 37, !dbg !18755
  %37 = load i8*, i8** %data, align 8, !dbg !18755
  %38 = load i16, i16* %len, align 2, !dbg !18756
  %conv37 = zext i16 %38 to i32, !dbg !18756
  call void @skb_copy_from_linear_data(%struct.sk_buff* %35, i8* %37, i32 %conv37) #14, !dbg !18757
  %39 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !18758
  %hw38 = getelementptr inbounds %struct.skge_port, %struct.skge_port* %39, i32 0, i32 0, !dbg !18759
  %40 = load %struct.skge_hw*, %struct.skge_hw** %hw38, align 8, !dbg !18759
  %pdev39 = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %40, i32 0, i32 1, !dbg !18760
  %41 = load %struct.pci_dev*, %struct.pci_dev** %pdev39, align 8, !dbg !18760
  %dev40 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %41, i32 0, i32 41, !dbg !18761
  %42 = load %struct.skge_element*, %struct.skge_element** %e.addr, align 8, !dbg !18762
  %mapaddr41 = getelementptr inbounds %struct.skge_element, %struct.skge_element* %42, i32 0, i32 3, !dbg !18762
  %43 = load i64, i64* %mapaddr41, align 8, !dbg !18762
  %44 = load %struct.skge_element*, %struct.skge_element** %e.addr, align 8, !dbg !18763
  %maplen42 = getelementptr inbounds %struct.skge_element, %struct.skge_element* %44, i32 0, i32 4, !dbg !18763
  %45 = load i32, i32* %maplen42, align 8, !dbg !18763
  %conv43 = zext i32 %45 to i64, !dbg !18763
  call void @dma_sync_single_for_device(%struct.device* %dev40, i64 %43, i64 %conv43, i32 2) #14, !dbg !18764
  %46 = load %struct.skge_element*, %struct.skge_element** %e.addr, align 8, !dbg !18765
  %47 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !18766
  %rx_buf_size44 = getelementptr inbounds %struct.skge_port, %struct.skge_port* %47, i32 0, i32 7, !dbg !18767
  %48 = load i32, i32* %rx_buf_size44, align 8, !dbg !18767
  call void @skge_rx_reuse(%struct.skge_element* %46, i32 %48) #14, !dbg !18768
  br label %if.end64, !dbg !18769

if.else:                                          ; preds = %if.end23
  call void @llvm.dbg.declare(metadata %struct.skge_element* %ee, metadata !18770, metadata !DIExpression()), !dbg !18772
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %nskb, metadata !18773, metadata !DIExpression()), !dbg !18774
  %49 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !18775
  %50 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !18776
  %rx_buf_size45 = getelementptr inbounds %struct.skge_port, %struct.skge_port* %50, i32 0, i32 7, !dbg !18777
  %51 = load i32, i32* %rx_buf_size45, align 8, !dbg !18777
  %call46 = call %struct.sk_buff* @netdev_alloc_skb_ip_align(%struct.net_device* %49, i32 %51) #14, !dbg !18778
  store %struct.sk_buff* %call46, %struct.sk_buff** %nskb, align 8, !dbg !18779
  %52 = load %struct.sk_buff*, %struct.sk_buff** %nskb, align 8, !dbg !18780
  %tobool47 = icmp ne %struct.sk_buff* %52, null, !dbg !18780
  br i1 %tobool47, label %if.end49, label %if.then48, !dbg !18782

if.then48:                                        ; preds = %if.else
  br label %resubmit, !dbg !18783

if.end49:                                         ; preds = %if.else
  %53 = load %struct.skge_element*, %struct.skge_element** %e.addr, align 8, !dbg !18784
  %54 = bitcast %struct.skge_element* %ee to i8*, !dbg !18785
  %55 = bitcast %struct.skge_element* %53 to i8*, !dbg !18785
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %54, i8* align 8 %55, i64 40, i1 false), !dbg !18785
  %skb50 = getelementptr inbounds %struct.skge_element, %struct.skge_element* %ee, i32 0, i32 2, !dbg !18786
  %56 = load %struct.sk_buff*, %struct.sk_buff** %skb50, align 8, !dbg !18786
  store %struct.sk_buff* %56, %struct.sk_buff** %skb, align 8, !dbg !18787
  %57 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !18788
  %data51 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %57, i32 0, i32 37, !dbg !18788
  %58 = load i8*, i8** %data51, align 8, !dbg !18788
  call void @llvm.prefetch.p0i8(i8* %58, i32 0, i32 3, i32 1), !dbg !18788
  %59 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !18789
  %60 = load %struct.skge_element*, %struct.skge_element** %e.addr, align 8, !dbg !18791
  %61 = load %struct.sk_buff*, %struct.sk_buff** %nskb, align 8, !dbg !18792
  %62 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !18793
  %rx_buf_size52 = getelementptr inbounds %struct.skge_port, %struct.skge_port* %62, i32 0, i32 7, !dbg !18794
  %63 = load i32, i32* %rx_buf_size52, align 8, !dbg !18794
  %call53 = call i32 @skge_rx_setup(%struct.skge_port* %59, %struct.skge_element* %60, %struct.sk_buff* %61, i32 %63) #14, !dbg !18795
  %cmp54 = icmp slt i32 %call53, 0, !dbg !18796
  br i1 %cmp54, label %if.then56, label %if.end57, !dbg !18797

if.then56:                                        ; preds = %if.end49
  %64 = load %struct.sk_buff*, %struct.sk_buff** %nskb, align 8, !dbg !18798
  call void @consume_skb(%struct.sk_buff* %64) #14, !dbg !18798
  br label %resubmit, !dbg !18800

if.end57:                                         ; preds = %if.end49
  %65 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !18801
  %hw58 = getelementptr inbounds %struct.skge_port, %struct.skge_port* %65, i32 0, i32 0, !dbg !18801
  %66 = load %struct.skge_hw*, %struct.skge_hw** %hw58, align 8, !dbg !18801
  %pdev59 = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %66, i32 0, i32 1, !dbg !18801
  %67 = load %struct.pci_dev*, %struct.pci_dev** %pdev59, align 8, !dbg !18801
  %dev60 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %67, i32 0, i32 41, !dbg !18801
  %mapaddr61 = getelementptr inbounds %struct.skge_element, %struct.skge_element* %ee, i32 0, i32 3, !dbg !18801
  %68 = load i64, i64* %mapaddr61, align 8, !dbg !18801
  %maplen62 = getelementptr inbounds %struct.skge_element, %struct.skge_element* %ee, i32 0, i32 4, !dbg !18801
  %69 = load i32, i32* %maplen62, align 8, !dbg !18801
  %conv63 = zext i32 %69 to i64, !dbg !18801
  call void @dma_unmap_single_attrs(%struct.device* %dev60, i64 %68, i64 %conv63, i32 2, i64 0) #14, !dbg !18801
  br label %if.end64

if.end64:                                         ; preds = %if.end57, %if.end32
  %70 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !18802
  %71 = load i16, i16* %len, align 2, !dbg !18803
  %conv65 = zext i16 %71 to i32, !dbg !18803
  %call66 = call i8* @skb_put(%struct.sk_buff* %70, i32 %conv65) #14, !dbg !18804
  %72 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !18805
  %features = getelementptr inbounds %struct.net_device, %struct.net_device* %72, i32 0, i32 15, !dbg !18807
  %73 = load i64, i64* %features, align 8, !dbg !18807
  %and67 = and i64 %73, 1099511627776, !dbg !18808
  %tobool68 = icmp ne i64 %and67, 0, !dbg !18808
  br i1 %tobool68, label %if.then69, label %if.end72, !dbg !18809

if.then69:                                        ; preds = %if.end64
  %74 = load i16, i16* %csum.addr, align 2, !dbg !18810
  %conv70 = zext i16 %74 to i32, !dbg !18810
  %75 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !18812
  %76 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %75, i32 0, i32 17, !dbg !18813
  %csum71 = bitcast %union.anon.47* %76 to i32*, !dbg !18813
  store i32 %conv70, i32* %csum71, align 4, !dbg !18814
  %77 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !18815
  %ip_summed = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %77, i32 0, i32 14, !dbg !18816
  %bf.load = load i16, i16* %ip_summed, align 8, !dbg !18817
  %bf.clear = and i16 %bf.load, -97, !dbg !18817
  %bf.set = or i16 %bf.clear, 64, !dbg !18817
  store i16 %bf.set, i16* %ip_summed, align 8, !dbg !18817
  br label %if.end72, !dbg !18818

if.end72:                                         ; preds = %if.then69, %if.end64
  %78 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !18819
  %79 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !18820
  %call73 = call zeroext i16 @eth_type_trans(%struct.sk_buff* %78, %struct.net_device* %79) #14, !dbg !18821
  %80 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !18822
  %protocol = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %80, i32 0, i32 29, !dbg !18823
  store i16 %call73, i16* %protocol, align 8, !dbg !18824
  %81 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !18825
  store %struct.sk_buff* %81, %struct.sk_buff** %retval, align 8, !dbg !18826
  br label %return, !dbg !18826

error:                                            ; preds = %if.then22, %if.then14, %if.then10, %if.then5
  call void @llvm.dbg.label(metadata !18827), !dbg !18828
  br label %do.body74, !dbg !18829

do.body74:                                        ; preds = %error
  %82 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !18830
  %msg_enable75 = getelementptr inbounds %struct.skge_port, %struct.skge_port* %82, i32 0, i32 4, !dbg !18830
  %83 = load i32, i32* %msg_enable75, align 4, !dbg !18830
  %and76 = and i32 %83, 64, !dbg !18830
  %tobool77 = icmp ne i32 %and76, 0, !dbg !18830
  br i1 %tobool77, label %if.then78, label %if.end86, !dbg !18833

if.then78:                                        ; preds = %do.body74
  %84 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !18830
  %netdev79 = getelementptr inbounds %struct.skge_port, %struct.skge_port* %84, i32 0, i32 1, !dbg !18830
  %85 = load %struct.net_device*, %struct.net_device** %netdev79, align 8, !dbg !18830
  %86 = load %struct.skge_element*, %struct.skge_element** %e.addr, align 8, !dbg !18830
  %87 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !18830
  %rx_ring80 = getelementptr inbounds %struct.skge_port, %struct.skge_port* %87, i32 0, i32 6, !dbg !18830
  %start81 = getelementptr inbounds %struct.skge_ring, %struct.skge_ring* %rx_ring80, i32 0, i32 2, !dbg !18830
  %88 = load %struct.skge_element*, %struct.skge_element** %start81, align 8, !dbg !18830
  %sub.ptr.lhs.cast82 = ptrtoint %struct.skge_element* %86 to i64, !dbg !18830
  %sub.ptr.rhs.cast83 = ptrtoint %struct.skge_element* %88 to i64, !dbg !18830
  %sub.ptr.sub84 = sub i64 %sub.ptr.lhs.cast82, %sub.ptr.rhs.cast83, !dbg !18830
  %sub.ptr.div85 = sdiv exact i64 %sub.ptr.sub84, 40, !dbg !18830
  %89 = load i32, i32* %control.addr, align 4, !dbg !18830
  %90 = load i32, i32* %status.addr, align 4, !dbg !18830
  call void (i8*, %struct.net_device*, i8*, ...) @netdev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.14, i64 0, i64 0), %struct.net_device* %85, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.59, i64 0, i64 0), i64 %sub.ptr.div85, i32 %89, i32 %90) #15, !dbg !18830
  br label %if.end86, !dbg !18830

if.end86:                                         ; preds = %if.then78, %do.body74
  br label %do.end87, !dbg !18833

do.end87:                                         ; preds = %if.end86
  %91 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !18834
  %hw88 = getelementptr inbounds %struct.skge_port, %struct.skge_port* %91, i32 0, i32 0, !dbg !18836
  %92 = load %struct.skge_hw*, %struct.skge_hw** %hw88, align 8, !dbg !18836
  %call89 = call zeroext i1 @is_genesis(%struct.skge_hw* %92) #14, !dbg !18837
  br i1 %call89, label %if.then90, label %if.else107, !dbg !18838

if.then90:                                        ; preds = %do.end87
  %93 = load i32, i32* %status.addr, align 4, !dbg !18839
  %and91 = and i32 %93, 24, !dbg !18842
  %tobool92 = icmp ne i32 %and91, 0, !dbg !18842
  br i1 %tobool92, label %if.then93, label %if.end94, !dbg !18843

if.then93:                                        ; preds = %if.then90
  %94 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !18844
  %stats = getelementptr inbounds %struct.net_device, %struct.net_device* %94, i32 0, i32 24, !dbg !18845
  %rx_length_errors = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %stats, i32 0, i32 10, !dbg !18846
  %95 = load i64, i64* %rx_length_errors, align 8, !dbg !18847
  %inc = add i64 %95, 1, !dbg !18847
  store i64 %inc, i64* %rx_length_errors, align 8, !dbg !18847
  br label %if.end94, !dbg !18844

if.end94:                                         ; preds = %if.then93, %if.then90
  %96 = load i32, i32* %status.addr, align 4, !dbg !18848
  %and95 = and i32 %96, 32, !dbg !18850
  %tobool96 = icmp ne i32 %and95, 0, !dbg !18850
  br i1 %tobool96, label %if.then97, label %if.end100, !dbg !18851

if.then97:                                        ; preds = %if.end94
  %97 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !18852
  %stats98 = getelementptr inbounds %struct.net_device, %struct.net_device* %97, i32 0, i32 24, !dbg !18853
  %rx_frame_errors = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %stats98, i32 0, i32 13, !dbg !18854
  %98 = load i64, i64* %rx_frame_errors, align 8, !dbg !18855
  %inc99 = add i64 %98, 1, !dbg !18855
  store i64 %inc99, i64* %rx_frame_errors, align 8, !dbg !18855
  br label %if.end100, !dbg !18852

if.end100:                                        ; preds = %if.then97, %if.end94
  %99 = load i32, i32* %status.addr, align 4, !dbg !18856
  %and101 = and i32 %99, 4, !dbg !18858
  %tobool102 = icmp ne i32 %and101, 0, !dbg !18858
  br i1 %tobool102, label %if.then103, label %if.end106, !dbg !18859

if.then103:                                       ; preds = %if.end100
  %100 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !18860
  %stats104 = getelementptr inbounds %struct.net_device, %struct.net_device* %100, i32 0, i32 24, !dbg !18861
  %rx_crc_errors = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %stats104, i32 0, i32 12, !dbg !18862
  %101 = load i64, i64* %rx_crc_errors, align 8, !dbg !18863
  %inc105 = add i64 %101, 1, !dbg !18863
  store i64 %inc105, i64* %rx_crc_errors, align 8, !dbg !18863
  br label %if.end106, !dbg !18860

if.end106:                                        ; preds = %if.then103, %if.end100
  br label %if.end129, !dbg !18864

if.else107:                                       ; preds = %do.end87
  %102 = load i32, i32* %status.addr, align 4, !dbg !18865
  %and108 = and i32 %102, 2064, !dbg !18868
  %tobool109 = icmp ne i32 %and108, 0, !dbg !18868
  br i1 %tobool109, label %if.then110, label %if.end114, !dbg !18869

if.then110:                                       ; preds = %if.else107
  %103 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !18870
  %stats111 = getelementptr inbounds %struct.net_device, %struct.net_device* %103, i32 0, i32 24, !dbg !18871
  %rx_length_errors112 = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %stats111, i32 0, i32 10, !dbg !18872
  %104 = load i64, i64* %rx_length_errors112, align 8, !dbg !18873
  %inc113 = add i64 %104, 1, !dbg !18873
  store i64 %inc113, i64* %rx_length_errors112, align 8, !dbg !18873
  br label %if.end114, !dbg !18870

if.end114:                                        ; preds = %if.then110, %if.else107
  %105 = load i32, i32* %status.addr, align 4, !dbg !18874
  %and115 = and i32 %105, 8, !dbg !18876
  %tobool116 = icmp ne i32 %and115, 0, !dbg !18876
  br i1 %tobool116, label %if.then117, label %if.end121, !dbg !18877

if.then117:                                       ; preds = %if.end114
  %106 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !18878
  %stats118 = getelementptr inbounds %struct.net_device, %struct.net_device* %106, i32 0, i32 24, !dbg !18879
  %rx_frame_errors119 = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %stats118, i32 0, i32 13, !dbg !18880
  %107 = load i64, i64* %rx_frame_errors119, align 8, !dbg !18881
  %inc120 = add i64 %107, 1, !dbg !18881
  store i64 %inc120, i64* %rx_frame_errors119, align 8, !dbg !18881
  br label %if.end121, !dbg !18878

if.end121:                                        ; preds = %if.then117, %if.end114
  %108 = load i32, i32* %status.addr, align 4, !dbg !18882
  %and122 = and i32 %108, 2, !dbg !18884
  %tobool123 = icmp ne i32 %and122, 0, !dbg !18884
  br i1 %tobool123, label %if.then124, label %if.end128, !dbg !18885

if.then124:                                       ; preds = %if.end121
  %109 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !18886
  %stats125 = getelementptr inbounds %struct.net_device, %struct.net_device* %109, i32 0, i32 24, !dbg !18887
  %rx_crc_errors126 = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %stats125, i32 0, i32 12, !dbg !18888
  %110 = load i64, i64* %rx_crc_errors126, align 8, !dbg !18889
  %inc127 = add i64 %110, 1, !dbg !18889
  store i64 %inc127, i64* %rx_crc_errors126, align 8, !dbg !18889
  br label %if.end128, !dbg !18886

if.end128:                                        ; preds = %if.then124, %if.end121
  br label %if.end129

if.end129:                                        ; preds = %if.end128, %if.end106
  br label %resubmit, !dbg !18890

resubmit:                                         ; preds = %if.end129, %if.then56, %if.then48, %if.then31
  call void @llvm.dbg.label(metadata !18891), !dbg !18892
  %111 = load %struct.skge_element*, %struct.skge_element** %e.addr, align 8, !dbg !18893
  %112 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !18894
  %rx_buf_size130 = getelementptr inbounds %struct.skge_port, %struct.skge_port* %112, i32 0, i32 7, !dbg !18895
  %113 = load i32, i32* %rx_buf_size130, align 8, !dbg !18895
  call void @skge_rx_reuse(%struct.skge_element* %111, i32 %113) #14, !dbg !18896
  store %struct.sk_buff* null, %struct.sk_buff** %retval, align 8, !dbg !18897
  br label %return, !dbg !18897

return:                                           ; preds = %resubmit, %if.end72
  %114 = load %struct.sk_buff*, %struct.sk_buff** %retval, align 8, !dbg !18898
  ret %struct.sk_buff* %114, !dbg !18898
}

; Function Attrs: noredzone
declare dso_local i32 @napi_gro_receive(%struct.napi_struct*, %struct.sk_buff*) #1

; Function Attrs: noredzone
declare dso_local zeroext i1 @napi_complete_done(%struct.napi_struct*, i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @arch_local_irq_save() #2 !dbg !18899 {
entry:
  %f = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %f, metadata !18902, metadata !DIExpression()), !dbg !18903
  %call = call i64 @arch_local_save_flags() #14, !dbg !18904
  store i64 %call, i64* %f, align 8, !dbg !18905
  call void @arch_local_irq_disable() #14, !dbg !18906
  %0 = load i64, i64* %f, align 8, !dbg !18907
  ret i64 %0, !dbg !18908
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dev_consume_skb_any(%struct.sk_buff* %skb) #2 !dbg !18909 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !18910, metadata !DIExpression()), !dbg !18911
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !18912
  call void @__dev_kfree_skb_any(%struct.sk_buff* %0, i32 0) #14, !dbg !18913
  ret void, !dbg !18914
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @netdev_completed_queue(%struct.net_device* %dev, i32 %pkts, i32 %bytes) #2 !dbg !18915 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %pkts.addr = alloca i32, align 4
  %bytes.addr = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !18918, metadata !DIExpression()), !dbg !18919
  store i32 %pkts, i32* %pkts.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %pkts.addr, metadata !18920, metadata !DIExpression()), !dbg !18921
  store i32 %bytes, i32* %bytes.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bytes.addr, metadata !18922, metadata !DIExpression()), !dbg !18923
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !18924
  %call = call %struct.netdev_queue* @netdev_get_tx_queue(%struct.net_device* %0, i32 0) #14, !dbg !18925
  %1 = load i32, i32* %pkts.addr, align 4, !dbg !18926
  %2 = load i32, i32* %bytes.addr, align 4, !dbg !18927
  call void @netdev_tx_completed_queue(%struct.netdev_queue* %call, i32 %1, i32 %2) #14, !dbg !18928
  ret void, !dbg !18929
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @netif_queue_stopped(%struct.net_device* %dev) #2 !dbg !18930 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !18931, metadata !DIExpression()), !dbg !18932
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !18933
  %call = call %struct.netdev_queue* @netdev_get_tx_queue(%struct.net_device* %0, i32 0) #14, !dbg !18934
  %call1 = call zeroext i1 @netif_tx_queue_stopped(%struct.netdev_queue* %call) #14, !dbg !18935
  ret i1 %call1, !dbg !18936
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @netdev_tx_completed_queue(%struct.netdev_queue* %dev_queue, i32 %pkts, i32 %bytes) #2 !dbg !18937 {
entry:
  %dev_queue.addr = alloca %struct.netdev_queue*, align 8
  %pkts.addr = alloca i32, align 4
  %bytes.addr = alloca i32, align 4
  store %struct.netdev_queue* %dev_queue, %struct.netdev_queue** %dev_queue.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.netdev_queue** %dev_queue.addr, metadata !18940, metadata !DIExpression()), !dbg !18941
  store i32 %pkts, i32* %pkts.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %pkts.addr, metadata !18942, metadata !DIExpression()), !dbg !18943
  store i32 %bytes, i32* %bytes.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bytes.addr, metadata !18944, metadata !DIExpression()), !dbg !18945
  %0 = load i32, i32* %bytes.addr, align 4, !dbg !18946
  %tobool = icmp ne i32 %0, 0, !dbg !18946
  %lnot = xor i1 %tobool, true, !dbg !18946
  %lnot1 = xor i1 %lnot, true, !dbg !18946
  %lnot2 = xor i1 %lnot1, true, !dbg !18946
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !18946
  %conv = sext i32 %lnot.ext to i64, !dbg !18946
  %tobool3 = icmp ne i64 %conv, 0, !dbg !18946
  br i1 %tobool3, label %if.then, label %if.end, !dbg !18948

if.then:                                          ; preds = %entry
  br label %if.end16, !dbg !18949

if.end:                                           ; preds = %entry
  %1 = load %struct.netdev_queue*, %struct.netdev_queue** %dev_queue.addr, align 8, !dbg !18950
  %dql = getelementptr inbounds %struct.netdev_queue, %struct.netdev_queue* %1, i32 0, i32 11, !dbg !18951
  %2 = load i32, i32* %bytes.addr, align 4, !dbg !18952
  call void @dql_completed(%struct.dql* %dql, i32 %2) #14, !dbg !18953
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !18954, !srcloc !18955
  %3 = load %struct.netdev_queue*, %struct.netdev_queue** %dev_queue.addr, align 8, !dbg !18956
  %dql4 = getelementptr inbounds %struct.netdev_queue, %struct.netdev_queue* %3, i32 0, i32 11, !dbg !18956
  %call = call i32 @dql_avail(%struct.dql* %dql4) #14, !dbg !18956
  %cmp = icmp slt i32 %call, 0, !dbg !18956
  %lnot6 = xor i1 %cmp, true, !dbg !18956
  %lnot8 = xor i1 %lnot6, true, !dbg !18956
  %lnot.ext9 = zext i1 %lnot8 to i32, !dbg !18956
  %conv10 = sext i32 %lnot.ext9 to i64, !dbg !18956
  %tobool11 = icmp ne i64 %conv10, 0, !dbg !18956
  br i1 %tobool11, label %if.then12, label %if.end13, !dbg !18958

if.then12:                                        ; preds = %if.end
  br label %if.end16, !dbg !18959

if.end13:                                         ; preds = %if.end
  %4 = load %struct.netdev_queue*, %struct.netdev_queue** %dev_queue.addr, align 8, !dbg !18960
  %state = getelementptr inbounds %struct.netdev_queue, %struct.netdev_queue* %4, i32 0, i32 10, !dbg !18962
  %call14 = call zeroext i1 @test_and_clear_bit(i64 1, i64* %state) #14, !dbg !18963
  br i1 %call14, label %if.then15, label %if.end16, !dbg !18964

if.then15:                                        ; preds = %if.end13
  %5 = load %struct.netdev_queue*, %struct.netdev_queue** %dev_queue.addr, align 8, !dbg !18965
  call void @netif_schedule_queue(%struct.netdev_queue* %5) #14, !dbg !18966
  br label %if.end16, !dbg !18966

if.end16:                                         ; preds = %if.then, %if.then12, %if.then15, %if.end13
  ret void, !dbg !18967
}

; Function Attrs: noredzone
declare dso_local void @dql_completed(%struct.dql*, i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @test_and_clear_bit(i64 %nr, i64* %addr) #2 !dbg !18968 {
entry:
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !18971, metadata !DIExpression()), !dbg !18973
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !18975, metadata !DIExpression()), !dbg !18976
  %c.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %c.i, metadata !18977, metadata !DIExpression()), !dbg !18979
  %tmp.i = alloca i8, align 1
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !18980, metadata !DIExpression()), !dbg !18982
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !18984, metadata !DIExpression()), !dbg !18985
  %nr.addr = alloca i64, align 8
  %addr.addr = alloca i64*, align 8
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !18986, metadata !DIExpression()), !dbg !18987
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !18988, metadata !DIExpression()), !dbg !18989
  %0 = load i64*, i64** %addr.addr, align 8, !dbg !18990
  %1 = load i64, i64* %nr.addr, align 8, !dbg !18991
  %div = sdiv i64 %1, 64, !dbg !18991
  %add.ptr = getelementptr i64, i64* %0, i64 %div, !dbg !18992
  %2 = bitcast i64* %add.ptr to i8*, !dbg !18990
  store i8* %2, i8** %v.addr.i, align 8
  store i64 8, i64* %size.addr.i, align 8
  %3 = load i8*, i8** %v.addr.i, align 8, !dbg !18993
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !18994
  %conv.i = trunc i64 %4 to i32, !dbg !18994
  %call.i = call zeroext i1 @kasan_check_write(i8* %3, i32 %conv.i) #16, !dbg !18995
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !18996
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !18996
  call void @kcsan_check_access(i8* %5, i64 %6, i32 7) #16, !dbg !18996
  %7 = load i64, i64* %nr.addr, align 8, !dbg !18997
  %8 = load i64*, i64** %addr.addr, align 8, !dbg !18998
  store i64 %7, i64* %nr.addr.i, align 8
  store i64* %8, i64** %addr.addr.i, align 8
  %9 = load i64*, i64** %addr.addr.i, align 8, !dbg !18979
  %10 = load i64, i64* %nr.addr.i, align 8, !dbg !18979
  %11 = call i8 asm sideeffect " btrq  $2, $0\0A\09/* output condition code c*/\0A", "=*m,={@ccc},Ir,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %9, i64 %10, i64* %9) #10, !dbg !18979, !srcloc !18999
  store i8 %11, i8* %c.i, align 1, !dbg !18979
  %12 = load i8, i8* %c.i, align 1, !dbg !18979
  %tobool.i = trunc i8 %12 to i1, !dbg !18979
  %frombool.i = zext i1 %tobool.i to i8, !dbg !18979
  store i8 %frombool.i, i8* %tmp.i, align 1, !dbg !18979
  %13 = load i8, i8* %tmp.i, align 1, !dbg !18979
  %tobool1.i = trunc i8 %13 to i1, !dbg !18979
  ret i1 %tobool1.i, !dbg !19000
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @netif_tx_queue_stopped(%struct.netdev_queue* %dev_queue) #2 !dbg !19001 {
entry:
  %dev_queue.addr = alloca %struct.netdev_queue*, align 8
  store %struct.netdev_queue* %dev_queue, %struct.netdev_queue** %dev_queue.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.netdev_queue** %dev_queue.addr, metadata !19006, metadata !DIExpression()), !dbg !19007
  %0 = load %struct.netdev_queue*, %struct.netdev_queue** %dev_queue.addr, align 8, !dbg !19008
  %state = getelementptr inbounds %struct.netdev_queue, %struct.netdev_queue* %0, i32 0, i32 10, !dbg !19009
  %call = call zeroext i1 @test_bit(i64 0, i64* %state) #14, !dbg !19010
  ret i1 %call, !dbg !19011
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @bad_phy_status(%struct.skge_hw* %hw, i32 %status) #2 !dbg !19012 {
entry:
  %retval = alloca i32, align 4
  %hw.addr = alloca %struct.skge_hw*, align 8
  %status.addr = alloca i32, align 4
  store %struct.skge_hw* %hw, %struct.skge_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.skge_hw** %hw.addr, metadata !19015, metadata !DIExpression()), !dbg !19016
  store i32 %status, i32* %status.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %status.addr, metadata !19017, metadata !DIExpression()), !dbg !19018
  %0 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !19019
  %call = call zeroext i1 @is_genesis(%struct.skge_hw* %0) #14, !dbg !19021
  br i1 %call, label %if.then, label %if.else, !dbg !19022

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %status.addr, align 4, !dbg !19023
  %and = and i32 %1, 131074, !dbg !19024
  %cmp = icmp ne i32 %and, 0, !dbg !19025
  %conv = zext i1 %cmp to i32, !dbg !19025
  store i32 %conv, i32* %retval, align 4, !dbg !19026
  br label %return, !dbg !19026

if.else:                                          ; preds = %entry
  %2 = load i32, i32* %status.addr, align 4, !dbg !19027
  %and1 = and i32 %2, 4338, !dbg !19028
  %tobool = icmp ne i32 %and1, 0, !dbg !19028
  br i1 %tobool, label %lor.end, label %lor.rhs, !dbg !19029

lor.rhs:                                          ; preds = %if.else
  %3 = load i32, i32* %status.addr, align 4, !dbg !19030
  %and2 = and i32 %3, 256, !dbg !19031
  %cmp3 = icmp eq i32 %and2, 0, !dbg !19032
  br label %lor.end, !dbg !19029

lor.end:                                          ; preds = %lor.rhs, %if.else
  %4 = phi i1 [ true, %if.else ], [ %cmp3, %lor.rhs ]
  %lor.ext = zext i1 %4 to i32, !dbg !19029
  store i32 %lor.ext, i32* %retval, align 4, !dbg !19033
  br label %return, !dbg !19033

return:                                           ; preds = %lor.end, %if.then
  %5 = load i32, i32* %retval, align 4, !dbg !19034
  ret i32 %5, !dbg !19034
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i16 @phy_length(%struct.skge_hw* %hw, i32 %status) #2 !dbg !19035 {
entry:
  %retval = alloca i16, align 2
  %hw.addr = alloca %struct.skge_hw*, align 8
  %status.addr = alloca i32, align 4
  store %struct.skge_hw* %hw, %struct.skge_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.skge_hw** %hw.addr, metadata !19038, metadata !DIExpression()), !dbg !19039
  store i32 %status, i32* %status.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %status.addr, metadata !19040, metadata !DIExpression()), !dbg !19041
  %0 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !19042
  %call = call zeroext i1 @is_genesis(%struct.skge_hw* %0) #14, !dbg !19044
  br i1 %call, label %if.then, label %if.else, !dbg !19045

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %status.addr, align 4, !dbg !19046
  %shr = lshr i32 %1, 18, !dbg !19047
  %conv = trunc i32 %shr to i16, !dbg !19046
  store i16 %conv, i16* %retval, align 2, !dbg !19048
  br label %return, !dbg !19048

if.else:                                          ; preds = %entry
  %2 = load i32, i32* %status.addr, align 4, !dbg !19049
  %shr1 = lshr i32 %2, 16, !dbg !19050
  %conv2 = trunc i32 %shr1 to i16, !dbg !19049
  store i16 %conv2, i16* %retval, align 2, !dbg !19051
  br label %return, !dbg !19051

return:                                           ; preds = %if.else, %if.then
  %3 = load i16, i16* %retval, align 2, !dbg !19052
  ret i16 %3, !dbg !19052
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.sk_buff* @netdev_alloc_skb_ip_align(%struct.net_device* %dev, i32 %length) #2 !dbg !19053 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %length.addr = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !19056, metadata !DIExpression()), !dbg !19057
  store i32 %length, i32* %length.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %length.addr, metadata !19058, metadata !DIExpression()), !dbg !19059
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !19060
  %1 = load i32, i32* %length.addr, align 4, !dbg !19061
  %call = call %struct.sk_buff* @__netdev_alloc_skb_ip_align(%struct.net_device* %0, i32 %1, i32 2592) #14, !dbg !19062
  ret %struct.sk_buff* %call, !dbg !19063
}

; Function Attrs: noredzone
declare dso_local void @dma_sync_single_for_cpu(%struct.device*, i64, i64, i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @skb_copy_from_linear_data(%struct.sk_buff* %skb, i8* %to, i32 %len) #2 !dbg !19064 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  %to.addr = alloca i8*, align 8
  %len.addr = alloca i32, align 4
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !19067, metadata !DIExpression()), !dbg !19068
  store i8* %to, i8** %to.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr, metadata !19069, metadata !DIExpression()), !dbg !19070
  store i32 %len, i32* %len.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %len.addr, metadata !19071, metadata !DIExpression()), !dbg !19072
  %0 = load i8*, i8** %to.addr, align 8, !dbg !19073
  %1 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !19074
  %data = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %1, i32 0, i32 37, !dbg !19075
  %2 = load i8*, i8** %data, align 8, !dbg !19075
  %3 = load i32, i32* %len.addr, align 4, !dbg !19076
  %conv = zext i32 %3 to i64, !dbg !19076
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %0, i8* align 1 %2, i64 %conv, i1 false), !dbg !19077
  ret void, !dbg !19078
}

; Function Attrs: noredzone
declare dso_local void @dma_sync_single_for_device(%struct.device*, i64, i64, i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @skge_rx_reuse(%struct.skge_element* %e, i32 %size) #2 !dbg !19079 {
entry:
  %e.addr = alloca %struct.skge_element*, align 8
  %size.addr = alloca i32, align 4
  %rd = alloca %struct.skge_rx_desc*, align 8
  store %struct.skge_element* %e, %struct.skge_element** %e.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.skge_element** %e.addr, metadata !19082, metadata !DIExpression()), !dbg !19083
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !19084, metadata !DIExpression()), !dbg !19085
  call void @llvm.dbg.declare(metadata %struct.skge_rx_desc** %rd, metadata !19086, metadata !DIExpression()), !dbg !19087
  %0 = load %struct.skge_element*, %struct.skge_element** %e.addr, align 8, !dbg !19088
  %desc = getelementptr inbounds %struct.skge_element, %struct.skge_element* %0, i32 0, i32 1, !dbg !19089
  %1 = load i8*, i8** %desc, align 8, !dbg !19089
  %2 = bitcast i8* %1 to %struct.skge_rx_desc*, !dbg !19088
  store %struct.skge_rx_desc* %2, %struct.skge_rx_desc** %rd, align 8, !dbg !19087
  %3 = load %struct.skge_rx_desc*, %struct.skge_rx_desc** %rd, align 8, !dbg !19090
  %csum2 = getelementptr inbounds %struct.skge_rx_desc, %struct.skge_rx_desc* %3, i32 0, i32 6, !dbg !19091
  store i16 0, i16* %csum2, align 4, !dbg !19092
  %4 = load %struct.skge_rx_desc*, %struct.skge_rx_desc** %rd, align 8, !dbg !19093
  %csum2_start = getelementptr inbounds %struct.skge_rx_desc, %struct.skge_rx_desc* %4, i32 0, i32 8, !dbg !19094
  store i16 14, i16* %csum2_start, align 4, !dbg !19095
  call void asm sideeffect "sfence", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !19096, !srcloc !19097
  %5 = load i32, i32* %size.addr, align 4, !dbg !19098
  %or = or i32 -933888000, %5, !dbg !19099
  %6 = load %struct.skge_rx_desc*, %struct.skge_rx_desc** %rd, align 8, !dbg !19100
  %control = getelementptr inbounds %struct.skge_rx_desc, %struct.skge_rx_desc* %6, i32 0, i32 0, !dbg !19101
  store i32 %or, i32* %control, align 4, !dbg !19102
  ret void, !dbg !19103
}

; Function Attrs: noredzone
declare dso_local i8* @skb_put(%struct.sk_buff*, i32) #1

; Function Attrs: noredzone
declare dso_local zeroext i16 @eth_type_trans(%struct.sk_buff*, %struct.net_device*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.sk_buff* @__netdev_alloc_skb_ip_align(%struct.net_device* %dev, i32 %length, i32 %gfp) #2 !dbg !19104 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %length.addr = alloca i32, align 4
  %gfp.addr = alloca i32, align 4
  %skb = alloca %struct.sk_buff*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !19107, metadata !DIExpression()), !dbg !19108
  store i32 %length, i32* %length.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %length.addr, metadata !19109, metadata !DIExpression()), !dbg !19110
  store i32 %gfp, i32* %gfp.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %gfp.addr, metadata !19111, metadata !DIExpression()), !dbg !19112
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb, metadata !19113, metadata !DIExpression()), !dbg !19114
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !19115
  %1 = load i32, i32* %length.addr, align 4, !dbg !19116
  %add = add i32 %1, 0, !dbg !19117
  %2 = load i32, i32* %gfp.addr, align 4, !dbg !19118
  %call = call %struct.sk_buff* @__netdev_alloc_skb(%struct.net_device* %0, i32 %add, i32 %2) #14, !dbg !19119
  store %struct.sk_buff* %call, %struct.sk_buff** %skb, align 8, !dbg !19114
  %3 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !19120
  ret %struct.sk_buff* %3, !dbg !19121
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @arch_local_save_flags() #2 !dbg !19122 {
entry:
  %__ret = alloca i64, align 8
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  %__mask = alloca i64, align 8
  %tmp = alloca i64, align 8
  %tmp2 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %__ret, metadata !19123, metadata !DIExpression()), !dbg !19125
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !19126, metadata !DIExpression()), !dbg !19125
  %0 = load i64, i64* %__edi, align 8, !dbg !19125
  store i64 %0, i64* %__edi, align 8, !dbg !19125
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !19127, metadata !DIExpression()), !dbg !19125
  %1 = load i64, i64* %__esi, align 8, !dbg !19125
  store i64 %1, i64* %__esi, align 8, !dbg !19125
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !19128, metadata !DIExpression()), !dbg !19125
  %2 = load i64, i64* %__edx, align 8, !dbg !19125
  store i64 %2, i64* %__edx, align 8, !dbg !19125
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !19129, metadata !DIExpression()), !dbg !19125
  %3 = load i64, i64* %__ecx, align 8, !dbg !19125
  store i64 %3, i64* %__ecx, align 8, !dbg !19125
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !19130, metadata !DIExpression()), !dbg !19125
  %4 = load i64, i64* %__eax, align 8, !dbg !19125
  store i64 %4, i64* %__eax, align 8, !dbg !19125
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 0, i32 0), align 8, !dbg !19125
  %6 = call i64 @llvm.read_register.i64(metadata !9501), !dbg !19131
  %7 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 36, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 0, i32 0), i32 1, i64 %6) #10, !dbg !19131, !srcloc !19134
  %asmresult = extractvalue { i64, i64 } %7, 0, !dbg !19131
  %asmresult1 = extractvalue { i64, i64 } %7, 1, !dbg !19131
  store i64 %asmresult, i64* %__eax, align 8, !dbg !19131
  call void @llvm.write_register.i64(metadata !9501, i64 %asmresult1), !dbg !19131
  %8 = load i64, i64* %__eax, align 8, !dbg !19131
  call void @llvm.dbg.declare(metadata i64* %__mask, metadata !19135, metadata !DIExpression()), !dbg !19137
  store i64 -1, i64* %__mask, align 8, !dbg !19137
  %9 = load i64, i64* %__mask, align 8, !dbg !19137
  store i64 %9, i64* %tmp, align 8, !dbg !19137
  %10 = load i64, i64* %tmp, align 8, !dbg !19137
  %and = and i64 %8, %10, !dbg !19131
  store i64 %and, i64* %__ret, align 8, !dbg !19131
  %11 = load i64, i64* %__ret, align 8, !dbg !19125
  store i64 %11, i64* %tmp2, align 8, !dbg !19138
  %12 = load i64, i64* %tmp2, align 8, !dbg !19125
  ret i64 %12, !dbg !19139
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @arch_local_irq_restore(i64 %f) #2 !dbg !19140 {
entry:
  %f.addr = alloca i64, align 8
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  store i64 %f, i64* %f.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %f.addr, metadata !19141, metadata !DIExpression()), !dbg !19142
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !19143, metadata !DIExpression()), !dbg !19145
  %0 = load i64, i64* %__edi, align 8, !dbg !19145
  store i64 %0, i64* %__edi, align 8, !dbg !19145
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !19146, metadata !DIExpression()), !dbg !19145
  %1 = load i64, i64* %__esi, align 8, !dbg !19145
  store i64 %1, i64* %__esi, align 8, !dbg !19145
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !19147, metadata !DIExpression()), !dbg !19145
  %2 = load i64, i64* %__edx, align 8, !dbg !19145
  store i64 %2, i64* %__edx, align 8, !dbg !19145
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !19148, metadata !DIExpression()), !dbg !19145
  %3 = load i64, i64* %__ecx, align 8, !dbg !19145
  store i64 %3, i64* %__ecx, align 8, !dbg !19145
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !19149, metadata !DIExpression()), !dbg !19145
  %4 = load i64, i64* %__eax, align 8, !dbg !19145
  store i64 %4, i64* %__eax, align 8, !dbg !19145
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 1, i32 0), align 8, !dbg !19145
  %6 = call i64 @llvm.read_register.i64(metadata !9501), !dbg !19145
  %7 = load i64, i64* %f.addr, align 8, !dbg !19145
  %8 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,{di},1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 37, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 1, i32 0), i32 1, i64 %7, i64 %6) #10, !dbg !19145, !srcloc !19150
  %asmresult = extractvalue { i64, i64 } %8, 0, !dbg !19145
  %asmresult1 = extractvalue { i64, i64 } %8, 1, !dbg !19145
  store i64 %asmresult, i64* %__eax, align 8, !dbg !19145
  call void @llvm.write_register.i64(metadata !9501, i64 %asmresult1), !dbg !19145
  ret void, !dbg !19151
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @xm_check_link(%struct.net_device* %dev) #2 !dbg !19152 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.net_device*, align 8
  %skge = alloca %struct.skge_port*, align 8
  %hw = alloca %struct.skge_hw*, align 8
  %port = alloca i32, align 4
  %status = alloca i16, align 2
  %lpa = alloca i16, align 2
  %res = alloca i16, align 2
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !19153, metadata !DIExpression()), !dbg !19154
  call void @llvm.dbg.declare(metadata %struct.skge_port** %skge, metadata !19155, metadata !DIExpression()), !dbg !19156
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !19157
  %call = call i8* @netdev_priv(%struct.net_device* %0) #14, !dbg !19158
  %1 = bitcast i8* %call to %struct.skge_port*, !dbg !19158
  store %struct.skge_port* %1, %struct.skge_port** %skge, align 8, !dbg !19156
  call void @llvm.dbg.declare(metadata %struct.skge_hw** %hw, metadata !19159, metadata !DIExpression()), !dbg !19160
  %2 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !19161
  %hw1 = getelementptr inbounds %struct.skge_port, %struct.skge_port* %2, i32 0, i32 0, !dbg !19162
  %3 = load %struct.skge_hw*, %struct.skge_hw** %hw1, align 8, !dbg !19162
  store %struct.skge_hw* %3, %struct.skge_hw** %hw, align 8, !dbg !19160
  call void @llvm.dbg.declare(metadata i32* %port, metadata !19163, metadata !DIExpression()), !dbg !19164
  %4 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !19165
  %port2 = getelementptr inbounds %struct.skge_port, %struct.skge_port* %4, i32 0, i32 3, !dbg !19166
  %5 = load i32, i32* %port2, align 8, !dbg !19166
  store i32 %5, i32* %port, align 4, !dbg !19164
  call void @llvm.dbg.declare(metadata i16* %status, metadata !19167, metadata !DIExpression()), !dbg !19168
  %6 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !19169
  %7 = load i32, i32* %port, align 4, !dbg !19170
  %call3 = call zeroext i16 @xm_phy_read(%struct.skge_hw* %6, i32 %7, i16 zeroext 1) #14, !dbg !19171
  %8 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !19172
  %9 = load i32, i32* %port, align 4, !dbg !19173
  %call4 = call zeroext i16 @xm_phy_read(%struct.skge_hw* %8, i32 %9, i16 zeroext 1) #14, !dbg !19174
  store i16 %call4, i16* %status, align 2, !dbg !19175
  %10 = load i16, i16* %status, align 2, !dbg !19176
  %conv = zext i16 %10 to i32, !dbg !19176
  %and = and i32 %conv, 4, !dbg !19178
  %cmp = icmp eq i32 %and, 0, !dbg !19179
  br i1 %cmp, label %if.then, label %if.end, !dbg !19180

if.then:                                          ; preds = %entry
  %11 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !19181
  %12 = load i32, i32* %port, align 4, !dbg !19183
  call void @xm_link_down(%struct.skge_hw* %11, i32 %12) #14, !dbg !19184
  store i32 0, i32* %retval, align 4, !dbg !19185
  br label %return, !dbg !19185

if.end:                                           ; preds = %entry
  %13 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !19186
  %autoneg = getelementptr inbounds %struct.skge_port, %struct.skge_port* %13, i32 0, i32 13, !dbg !19188
  %14 = load i8, i8* %autoneg, align 2, !dbg !19188
  %conv6 = zext i8 %14 to i32, !dbg !19186
  %cmp7 = icmp eq i32 %conv6, 1, !dbg !19189
  br i1 %cmp7, label %if.then9, label %if.end60, !dbg !19190

if.then9:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata i16* %lpa, metadata !19191, metadata !DIExpression()), !dbg !19193
  call void @llvm.dbg.declare(metadata i16* %res, metadata !19194, metadata !DIExpression()), !dbg !19195
  %15 = load i16, i16* %status, align 2, !dbg !19196
  %conv10 = zext i16 %15 to i32, !dbg !19196
  %and11 = and i32 %conv10, 32, !dbg !19198
  %tobool = icmp ne i32 %and11, 0, !dbg !19198
  br i1 %tobool, label %if.end13, label %if.then12, !dbg !19199

if.then12:                                        ; preds = %if.then9
  store i32 0, i32* %retval, align 4, !dbg !19200
  br label %return, !dbg !19200

if.end13:                                         ; preds = %if.then9
  %16 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !19201
  %17 = load i32, i32* %port, align 4, !dbg !19202
  %call14 = call zeroext i16 @xm_phy_read(%struct.skge_hw* %16, i32 %17, i16 zeroext 5) #14, !dbg !19203
  store i16 %call14, i16* %lpa, align 2, !dbg !19204
  %18 = load i16, i16* %lpa, align 2, !dbg !19205
  %conv15 = zext i16 %18 to i32, !dbg !19205
  %and16 = and i32 %conv15, 8192, !dbg !19207
  %tobool17 = icmp ne i32 %and16, 0, !dbg !19207
  br i1 %tobool17, label %if.then18, label %if.end19, !dbg !19208

if.then18:                                        ; preds = %if.end13
  %19 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !19209
  call void (%struct.net_device*, i8*, ...) @netdev_notice(%struct.net_device* %19, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.34, i64 0, i64 0)) #15, !dbg !19211
  store i32 0, i32* %retval, align 4, !dbg !19212
  br label %return, !dbg !19212

if.end19:                                         ; preds = %if.end13
  %20 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !19213
  %21 = load i32, i32* %port, align 4, !dbg !19214
  %call20 = call zeroext i16 @xm_phy_read(%struct.skge_hw* %20, i32 %21, i16 zeroext 16) #14, !dbg !19215
  store i16 %call20, i16* %res, align 2, !dbg !19216
  %22 = load i16, i16* %res, align 2, !dbg !19217
  %conv21 = zext i16 %22 to i32, !dbg !19217
  %and22 = and i32 %conv21, 96, !dbg !19218
  switch i32 %and22, label %sw.default [
    i32 32, label %sw.bb
    i32 64, label %sw.bb23
  ], !dbg !19219

sw.bb:                                            ; preds = %if.end19
  %23 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !19220
  %duplex = getelementptr inbounds %struct.skge_port, %struct.skge_port* %23, i32 0, i32 14, !dbg !19222
  store i8 1, i8* %duplex, align 1, !dbg !19223
  br label %sw.epilog, !dbg !19224

sw.bb23:                                          ; preds = %if.end19
  %24 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !19225
  %duplex24 = getelementptr inbounds %struct.skge_port, %struct.skge_port* %24, i32 0, i32 14, !dbg !19226
  store i8 0, i8* %duplex24, align 1, !dbg !19227
  br label %sw.epilog, !dbg !19228

sw.default:                                       ; preds = %if.end19
  %25 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !19229
  call void (%struct.net_device*, i8*, ...) @netdev_notice(%struct.net_device* %25, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.35, i64 0, i64 0)) #15, !dbg !19230
  store i32 0, i32* %retval, align 4, !dbg !19231
  br label %return, !dbg !19231

sw.epilog:                                        ; preds = %sw.bb23, %sw.bb
  %26 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !19232
  %flow_control = getelementptr inbounds %struct.skge_port, %struct.skge_port* %26, i32 0, i32 9, !dbg !19234
  %27 = load i32, i32* %flow_control, align 8, !dbg !19234
  %cmp25 = icmp eq i32 %27, 3, !dbg !19235
  br i1 %cmp25, label %land.lhs.true, label %lor.lhs.false, !dbg !19236

lor.lhs.false:                                    ; preds = %sw.epilog
  %28 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !19237
  %flow_control27 = getelementptr inbounds %struct.skge_port, %struct.skge_port* %28, i32 0, i32 9, !dbg !19238
  %29 = load i32, i32* %flow_control27, align 8, !dbg !19238
  %cmp28 = icmp eq i32 %29, 4, !dbg !19239
  br i1 %cmp28, label %land.lhs.true, label %if.else, !dbg !19240

land.lhs.true:                                    ; preds = %lor.lhs.false, %sw.epilog
  %30 = load i16, i16* %lpa, align 2, !dbg !19241
  %conv30 = zext i16 %30 to i32, !dbg !19241
  %and31 = and i32 %conv30, 128, !dbg !19242
  %tobool32 = icmp ne i32 %and31, 0, !dbg !19242
  br i1 %tobool32, label %if.then33, label %if.else, !dbg !19243

if.then33:                                        ; preds = %land.lhs.true
  %31 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !19244
  %flow_status = getelementptr inbounds %struct.skge_port, %struct.skge_port* %31, i32 0, i32 10, !dbg !19245
  store i32 4, i32* %flow_status, align 4, !dbg !19246
  br label %if.end59, !dbg !19244

if.else:                                          ; preds = %land.lhs.true, %lor.lhs.false
  %32 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !19247
  %flow_control34 = getelementptr inbounds %struct.skge_port, %struct.skge_port* %32, i32 0, i32 9, !dbg !19249
  %33 = load i32, i32* %flow_control34, align 8, !dbg !19249
  %cmp35 = icmp eq i32 %33, 4, !dbg !19250
  br i1 %cmp35, label %land.lhs.true37, label %if.else44, !dbg !19251

land.lhs.true37:                                  ; preds = %if.else
  %34 = load i16, i16* %lpa, align 2, !dbg !19252
  %conv38 = zext i16 %34 to i32, !dbg !19252
  %and39 = and i32 %conv38, 384, !dbg !19253
  %cmp40 = icmp eq i32 %and39, 256, !dbg !19254
  br i1 %cmp40, label %if.then42, label %if.else44, !dbg !19255

if.then42:                                        ; preds = %land.lhs.true37
  %35 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !19256
  %flow_status43 = getelementptr inbounds %struct.skge_port, %struct.skge_port* %35, i32 0, i32 10, !dbg !19257
  store i32 2, i32* %flow_status43, align 4, !dbg !19258
  br label %if.end58, !dbg !19256

if.else44:                                        ; preds = %land.lhs.true37, %if.else
  %36 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !19259
  %flow_control45 = getelementptr inbounds %struct.skge_port, %struct.skge_port* %36, i32 0, i32 9, !dbg !19261
  %37 = load i32, i32* %flow_control45, align 8, !dbg !19261
  %cmp46 = icmp eq i32 %37, 2, !dbg !19262
  br i1 %cmp46, label %land.lhs.true48, label %if.else55, !dbg !19263

land.lhs.true48:                                  ; preds = %if.else44
  %38 = load i16, i16* %lpa, align 2, !dbg !19264
  %conv49 = zext i16 %38 to i32, !dbg !19264
  %and50 = and i32 %conv49, 384, !dbg !19265
  %cmp51 = icmp eq i32 %and50, 384, !dbg !19266
  br i1 %cmp51, label %if.then53, label %if.else55, !dbg !19267

if.then53:                                        ; preds = %land.lhs.true48
  %39 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !19268
  %flow_status54 = getelementptr inbounds %struct.skge_port, %struct.skge_port* %39, i32 0, i32 10, !dbg !19269
  store i32 3, i32* %flow_status54, align 4, !dbg !19270
  br label %if.end57, !dbg !19268

if.else55:                                        ; preds = %land.lhs.true48, %if.else44
  %40 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !19271
  %flow_status56 = getelementptr inbounds %struct.skge_port, %struct.skge_port* %40, i32 0, i32 10, !dbg !19272
  store i32 1, i32* %flow_status56, align 4, !dbg !19273
  br label %if.end57

if.end57:                                         ; preds = %if.else55, %if.then53
  br label %if.end58

if.end58:                                         ; preds = %if.end57, %if.then42
  br label %if.end59

if.end59:                                         ; preds = %if.end58, %if.then33
  %41 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !19274
  %speed = getelementptr inbounds %struct.skge_port, %struct.skge_port* %41, i32 0, i32 15, !dbg !19275
  store i16 1000, i16* %speed, align 4, !dbg !19276
  br label %if.end60, !dbg !19277

if.end60:                                         ; preds = %if.end59, %if.end
  %42 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !19278
  %call61 = call zeroext i1 @netif_carrier_ok(%struct.net_device* %42) #14, !dbg !19280
  br i1 %call61, label %if.end63, label %if.then62, !dbg !19281

if.then62:                                        ; preds = %if.end60
  %43 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !19282
  call void @genesis_link_up(%struct.skge_port* %43) #14, !dbg !19283
  br label %if.end63, !dbg !19283

if.end63:                                         ; preds = %if.then62, %if.end60
  store i32 1, i32* %retval, align 4, !dbg !19284
  br label %return, !dbg !19284

return:                                           ; preds = %if.end63, %sw.default, %if.then18, %if.then12, %if.then
  %44 = load i32, i32* %retval, align 4, !dbg !19285
  ret i32 %44, !dbg !19285
}

; Function Attrs: noredzone
declare dso_local i64 @round_jiffies(i64) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @is_multicast_ether_addr(i8* %addr) #2 !dbg !19286 {
entry:
  %addr.addr = alloca i8*, align 8
  %a = alloca i32, align 4
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !19287, metadata !DIExpression()), !dbg !19288
  call void @llvm.dbg.declare(metadata i32* %a, metadata !19289, metadata !DIExpression()), !dbg !19290
  %0 = load i8*, i8** %addr.addr, align 8, !dbg !19291
  %1 = bitcast i8* %0 to i32*, !dbg !19292
  %2 = load i32, i32* %1, align 4, !dbg !19292
  store i32 %2, i32* %a, align 4, !dbg !19290
  %3 = load i32, i32* %a, align 4, !dbg !19293
  %and = and i32 1, %3, !dbg !19294
  %tobool = icmp ne i32 %and, 0, !dbg !19295
  ret i1 %tobool, !dbg !19296
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @is_zero_ether_addr(i8* %addr) #2 !dbg !19297 {
entry:
  %addr.addr = alloca i8*, align 8
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !19298, metadata !DIExpression()), !dbg !19299
  %0 = load i8*, i8** %addr.addr, align 8, !dbg !19300
  %1 = bitcast i8* %0 to i32*, !dbg !19301
  %2 = load i32, i32* %1, align 4, !dbg !19301
  %3 = load i8*, i8** %addr.addr, align 8, !dbg !19302
  %add.ptr = getelementptr i8, i8* %3, i64 4, !dbg !19303
  %4 = bitcast i8* %add.ptr to i16*, !dbg !19304
  %5 = load i16, i16* %4, align 2, !dbg !19304
  %conv = zext i16 %5 to i32, !dbg !19305
  %or = or i32 %2, %conv, !dbg !19306
  %cmp = icmp eq i32 %or, 0, !dbg !19307
  ret i1 %cmp, !dbg !19308
}

; Function Attrs: noredzone
declare dso_local i32 @request_threaded_irq(i32, i32 (i32, i8*)*, i32 (i32, i8*)*, i64, i8*, i8*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @tasklet_schedule(%struct.tasklet_struct* %t) #2 !dbg !19309 {
entry:
  %t.addr = alloca %struct.tasklet_struct*, align 8
  store %struct.tasklet_struct* %t, %struct.tasklet_struct** %t.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tasklet_struct** %t.addr, metadata !19310, metadata !DIExpression()), !dbg !19311
  %0 = load %struct.tasklet_struct*, %struct.tasklet_struct** %t.addr, align 8, !dbg !19312
  %state = getelementptr inbounds %struct.tasklet_struct, %struct.tasklet_struct* %0, i32 0, i32 1, !dbg !19314
  %call = call zeroext i1 @test_and_set_bit(i64 0, i64* %state) #14, !dbg !19315
  br i1 %call, label %if.end, label %if.then, !dbg !19316

if.then:                                          ; preds = %entry
  %1 = load %struct.tasklet_struct*, %struct.tasklet_struct** %t.addr, align 8, !dbg !19317
  call void @__tasklet_schedule(%struct.tasklet_struct* %1) #14, !dbg !19318
  br label %if.end, !dbg !19318

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !19319
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @napi_schedule(%struct.napi_struct* %n) #2 !dbg !19320 {
entry:
  %n.addr = alloca %struct.napi_struct*, align 8
  store %struct.napi_struct* %n, %struct.napi_struct** %n.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.napi_struct** %n.addr, metadata !19321, metadata !DIExpression()), !dbg !19322
  %0 = load %struct.napi_struct*, %struct.napi_struct** %n.addr, align 8, !dbg !19323
  %call = call zeroext i1 @napi_schedule_prep(%struct.napi_struct* %0) #14, !dbg !19325
  br i1 %call, label %if.then, label %if.end, !dbg !19326

if.then:                                          ; preds = %entry
  %1 = load %struct.napi_struct*, %struct.napi_struct** %n.addr, align 8, !dbg !19327
  call void @__napi_schedule(%struct.napi_struct* %1) #14, !dbg !19328
  br label %if.end, !dbg !19328

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !19329
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @skge_mac_intr(%struct.skge_hw* %hw, i32 %port) #2 !dbg !19330 {
entry:
  %hw.addr = alloca %struct.skge_hw*, align 8
  %port.addr = alloca i32, align 4
  store %struct.skge_hw* %hw, %struct.skge_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.skge_hw** %hw.addr, metadata !19331, metadata !DIExpression()), !dbg !19332
  store i32 %port, i32* %port.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %port.addr, metadata !19333, metadata !DIExpression()), !dbg !19334
  %0 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !19335
  %call = call zeroext i1 @is_genesis(%struct.skge_hw* %0) #14, !dbg !19337
  br i1 %call, label %if.then, label %if.else, !dbg !19338

if.then:                                          ; preds = %entry
  %1 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !19339
  %2 = load i32, i32* %port.addr, align 4, !dbg !19340
  call void @genesis_mac_intr(%struct.skge_hw* %1, i32 %2) #14, !dbg !19341
  br label %if.end, !dbg !19341

if.else:                                          ; preds = %entry
  %3 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !19342
  %4 = load i32, i32* %port.addr, align 4, !dbg !19343
  call void @yukon_mac_intr(%struct.skge_hw* %3, i32 %4) #14, !dbg !19344
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !19345
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @skge_error_irq(%struct.skge_hw* %hw) #2 !dbg !19346 {
entry:
  %hw.addr = alloca %struct.skge_hw*, align 8
  %pdev = alloca %struct.pci_dev*, align 8
  %hwstatus = alloca i32, align 4
  %pci_status = alloca i16, align 2
  %pci_cmd = alloca i16, align 2
  store %struct.skge_hw* %hw, %struct.skge_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.skge_hw** %hw.addr, metadata !19347, metadata !DIExpression()), !dbg !19348
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev, metadata !19349, metadata !DIExpression()), !dbg !19350
  %0 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !19351
  %pdev1 = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %0, i32 0, i32 1, !dbg !19352
  %1 = load %struct.pci_dev*, %struct.pci_dev** %pdev1, align 8, !dbg !19352
  store %struct.pci_dev* %1, %struct.pci_dev** %pdev, align 8, !dbg !19350
  call void @llvm.dbg.declare(metadata i32* %hwstatus, metadata !19353, metadata !DIExpression()), !dbg !19354
  %2 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !19355
  %call = call i32 @skge_read32(%struct.skge_hw* %2, i32 16) #14, !dbg !19356
  store i32 %call, i32* %hwstatus, align 4, !dbg !19354
  %3 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !19357
  %call2 = call zeroext i1 @is_genesis(%struct.skge_hw* %3) #14, !dbg !19359
  br i1 %call2, label %if.then, label %if.else, !dbg !19360

if.then:                                          ; preds = %entry
  %4 = load i32, i32* %hwstatus, align 4, !dbg !19361
  %and = and i32 %4, 640, !dbg !19364
  %tobool = icmp ne i32 %and, 0, !dbg !19364
  br i1 %tobool, label %if.then3, label %if.end, !dbg !19365

if.then3:                                         ; preds = %if.then
  %5 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !19366
  call void @skge_write16(%struct.skge_hw* %5, i32 3096, i16 zeroext 1) #14, !dbg !19367
  br label %if.end, !dbg !19367

if.end:                                           ; preds = %if.then3, %if.then
  %6 = load i32, i32* %hwstatus, align 4, !dbg !19368
  %and4 = and i32 %6, 320, !dbg !19370
  %tobool5 = icmp ne i32 %and4, 0, !dbg !19370
  br i1 %tobool5, label %if.then6, label %if.end7, !dbg !19371

if.then6:                                         ; preds = %if.end
  %7 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !19372
  call void @skge_write16(%struct.skge_hw* %7, i32 3100, i16 zeroext 1) #14, !dbg !19373
  br label %if.end7, !dbg !19373

if.end7:                                          ; preds = %if.then6, %if.end
  br label %if.end12, !dbg !19374

if.else:                                          ; preds = %entry
  %8 = load i32, i32* %hwstatus, align 4, !dbg !19375
  %and8 = and i32 %8, 8192, !dbg !19378
  %tobool9 = icmp ne i32 %and8, 0, !dbg !19378
  br i1 %tobool9, label %if.then10, label %if.end11, !dbg !19379

if.then10:                                        ; preds = %if.else
  %9 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !19380
  call void @skge_write8(%struct.skge_hw* %9, i32 3608, i8 zeroext 1) #14, !dbg !19381
  br label %if.end11, !dbg !19381

if.end11:                                         ; preds = %if.then10, %if.else
  br label %if.end12

if.end12:                                         ; preds = %if.end11, %if.end7
  %10 = load i32, i32* %hwstatus, align 4, !dbg !19382
  %and13 = and i32 %10, 32, !dbg !19384
  %tobool14 = icmp ne i32 %and13, 0, !dbg !19384
  br i1 %tobool14, label %if.then15, label %if.end16, !dbg !19385

if.then15:                                        ; preds = %if.end12
  %11 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !19386
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %11, i32 0, i32 41, !dbg !19386
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.62, i64 0, i64 0)) #15, !dbg !19386
  %12 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !19388
  call void @skge_write16(%struct.skge_hw* %12, i32 416, i16 zeroext 512) #14, !dbg !19389
  br label %if.end16, !dbg !19390

if.end16:                                         ; preds = %if.then15, %if.end12
  %13 = load i32, i32* %hwstatus, align 4, !dbg !19391
  %and17 = and i32 %13, 16, !dbg !19393
  %tobool18 = icmp ne i32 %and17, 0, !dbg !19393
  br i1 %tobool18, label %if.then19, label %if.end21, !dbg !19394

if.then19:                                        ; preds = %if.end16
  %14 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !19395
  %dev20 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %14, i32 0, i32 41, !dbg !19395
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev20, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.63, i64 0, i64 0)) #15, !dbg !19395
  %15 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !19397
  call void @skge_write16(%struct.skge_hw* %15, i32 416, i16 zeroext 256) #14, !dbg !19398
  br label %if.end21, !dbg !19399

if.end21:                                         ; preds = %if.then19, %if.end16
  %16 = load i32, i32* %hwstatus, align 4, !dbg !19400
  %and22 = and i32 %16, 8, !dbg !19402
  %tobool23 = icmp ne i32 %and22, 0, !dbg !19402
  br i1 %tobool23, label %if.then24, label %if.end25, !dbg !19403

if.then24:                                        ; preds = %if.end21
  %17 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !19404
  call void @skge_mac_parity(%struct.skge_hw* %17, i32 0) #14, !dbg !19405
  br label %if.end25, !dbg !19405

if.end25:                                         ; preds = %if.then24, %if.end21
  %18 = load i32, i32* %hwstatus, align 4, !dbg !19406
  %and26 = and i32 %18, 4, !dbg !19408
  %tobool27 = icmp ne i32 %and26, 0, !dbg !19408
  br i1 %tobool27, label %if.then28, label %if.end29, !dbg !19409

if.then28:                                        ; preds = %if.end25
  %19 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !19410
  call void @skge_mac_parity(%struct.skge_hw* %19, i32 1) #14, !dbg !19411
  br label %if.end29, !dbg !19411

if.end29:                                         ; preds = %if.then28, %if.end25
  %20 = load i32, i32* %hwstatus, align 4, !dbg !19412
  %and30 = and i32 %20, 2, !dbg !19414
  %tobool31 = icmp ne i32 %and30, 0, !dbg !19414
  br i1 %tobool31, label %if.then32, label %if.end35, !dbg !19415

if.then32:                                        ; preds = %if.end29
  %21 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !19416
  %dev33 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %21, i32 0, i32 41, !dbg !19416
  %22 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !19416
  %dev34 = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %22, i32 0, i32 4, !dbg !19416
  %arrayidx = getelementptr [2 x %struct.net_device*], [2 x %struct.net_device*]* %dev34, i64 0, i64 0, !dbg !19416
  %23 = load %struct.net_device*, %struct.net_device** %arrayidx, align 8, !dbg !19416
  %name = getelementptr inbounds %struct.net_device, %struct.net_device* %23, i32 0, i32 0, !dbg !19416
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %name, i64 0, i64 0, !dbg !19416
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev33, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.64, i64 0, i64 0), i8* %arraydecay) #15, !dbg !19416
  %24 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !19418
  call void @skge_write32(%struct.skge_hw* %24, i32 96, i32 8) #14, !dbg !19419
  br label %if.end35, !dbg !19420

if.end35:                                         ; preds = %if.then32, %if.end29
  %25 = load i32, i32* %hwstatus, align 4, !dbg !19421
  %and36 = and i32 %25, 1, !dbg !19423
  %tobool37 = icmp ne i32 %and36, 0, !dbg !19423
  br i1 %tobool37, label %if.then38, label %if.end44, !dbg !19424

if.then38:                                        ; preds = %if.end35
  %26 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !19425
  %dev39 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %26, i32 0, i32 41, !dbg !19425
  %27 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !19425
  %dev40 = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %27, i32 0, i32 4, !dbg !19425
  %arrayidx41 = getelementptr [2 x %struct.net_device*], [2 x %struct.net_device*]* %dev40, i64 0, i64 1, !dbg !19425
  %28 = load %struct.net_device*, %struct.net_device** %arrayidx41, align 8, !dbg !19425
  %name42 = getelementptr inbounds %struct.net_device, %struct.net_device* %28, i32 0, i32 0, !dbg !19425
  %arraydecay43 = getelementptr inbounds [16 x i8], [16 x i8]* %name42, i64 0, i64 0, !dbg !19425
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev39, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.64, i64 0, i64 0), i8* %arraydecay43) #15, !dbg !19425
  %29 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !19427
  call void @skge_write32(%struct.skge_hw* %29, i32 100, i32 8) #14, !dbg !19428
  br label %if.end44, !dbg !19429

if.end44:                                         ; preds = %if.then38, %if.end35
  %30 = load i32, i32* %hwstatus, align 4, !dbg !19430
  %and45 = and i32 %30, 3072, !dbg !19432
  %tobool46 = icmp ne i32 %and45, 0, !dbg !19432
  br i1 %tobool46, label %if.then47, label %if.end68, !dbg !19433

if.then47:                                        ; preds = %if.end44
  call void @llvm.dbg.declare(metadata i16* %pci_status, metadata !19434, metadata !DIExpression()), !dbg !19436
  call void @llvm.dbg.declare(metadata i16* %pci_cmd, metadata !19437, metadata !DIExpression()), !dbg !19438
  %31 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !19439
  %call48 = call i32 @pci_read_config_word(%struct.pci_dev* %31, i32 4, i16* %pci_cmd) #14, !dbg !19440
  %32 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !19441
  %call49 = call i32 @pci_read_config_word(%struct.pci_dev* %32, i32 6, i16* %pci_status) #14, !dbg !19442
  %33 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !19443
  %dev50 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %33, i32 0, i32 41, !dbg !19443
  %34 = load i16, i16* %pci_cmd, align 2, !dbg !19443
  %conv = zext i16 %34 to i32, !dbg !19443
  %35 = load i16, i16* %pci_status, align 2, !dbg !19443
  %conv51 = zext i16 %35 to i32, !dbg !19443
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev50, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.65, i64 0, i64 0), i32 %conv, i32 %conv51) #15, !dbg !19443
  %36 = load i16, i16* %pci_status, align 2, !dbg !19444
  %conv52 = zext i16 %36 to i32, !dbg !19444
  %and53 = and i32 %conv52, 63744, !dbg !19444
  %conv54 = trunc i32 %and53 to i16, !dbg !19444
  store i16 %conv54, i16* %pci_status, align 2, !dbg !19444
  %37 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !19445
  call void @skge_write8(%struct.skge_hw* %37, i32 344, i8 zeroext 2) #14, !dbg !19446
  %38 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !19447
  %39 = load i16, i16* %pci_cmd, align 2, !dbg !19448
  %conv55 = zext i16 %39 to i32, !dbg !19448
  %or = or i32 %conv55, 256, !dbg !19449
  %or56 = or i32 %or, 64, !dbg !19450
  %conv57 = trunc i32 %or56 to i16, !dbg !19448
  %call58 = call i32 @pci_write_config_word(%struct.pci_dev* %38, i32 4, i16 zeroext %conv57) #14, !dbg !19451
  %40 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !19452
  %41 = load i16, i16* %pci_status, align 2, !dbg !19453
  %call59 = call i32 @pci_write_config_word(%struct.pci_dev* %40, i32 6, i16 zeroext %41) #14, !dbg !19454
  %42 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !19455
  call void @skge_write8(%struct.skge_hw* %42, i32 344, i8 zeroext 1) #14, !dbg !19456
  %43 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !19457
  %call60 = call i32 @skge_read32(%struct.skge_hw* %43, i32 16) #14, !dbg !19458
  store i32 %call60, i32* %hwstatus, align 4, !dbg !19459
  %44 = load i32, i32* %hwstatus, align 4, !dbg !19460
  %and61 = and i32 %44, 1024, !dbg !19462
  %tobool62 = icmp ne i32 %and61, 0, !dbg !19462
  br i1 %tobool62, label %if.then63, label %if.end67, !dbg !19463

if.then63:                                        ; preds = %if.then47
  %45 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !19464
  %pdev64 = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %45, i32 0, i32 1, !dbg !19464
  %46 = load %struct.pci_dev*, %struct.pci_dev** %pdev64, align 8, !dbg !19464
  %dev65 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %46, i32 0, i32 41, !dbg !19464
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev65, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.66, i64 0, i64 0)) #15, !dbg !19464
  %47 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !19466
  %intr_mask = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %47, i32 0, i32 3, !dbg !19467
  %48 = load i32, i32* %intr_mask, align 8, !dbg !19468
  %and66 = and i32 %48, 2147483647, !dbg !19468
  store i32 %and66, i32* %intr_mask, align 8, !dbg !19468
  br label %if.end67, !dbg !19469

if.end67:                                         ; preds = %if.then63, %if.then47
  br label %if.end68, !dbg !19470

if.end68:                                         ; preds = %if.end67, %if.end44
  ret void, !dbg !19471
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @test_and_set_bit(i64 %nr, i64* %addr) #2 !dbg !19472 {
entry:
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !19473, metadata !DIExpression()), !dbg !19475
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !19477, metadata !DIExpression()), !dbg !19478
  %c.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %c.i, metadata !19479, metadata !DIExpression()), !dbg !19481
  %tmp.i = alloca i8, align 1
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !18980, metadata !DIExpression()), !dbg !19482
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !18984, metadata !DIExpression()), !dbg !19484
  %nr.addr = alloca i64, align 8
  %addr.addr = alloca i64*, align 8
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !19485, metadata !DIExpression()), !dbg !19486
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !19487, metadata !DIExpression()), !dbg !19488
  %0 = load i64*, i64** %addr.addr, align 8, !dbg !19489
  %1 = load i64, i64* %nr.addr, align 8, !dbg !19490
  %div = sdiv i64 %1, 64, !dbg !19490
  %add.ptr = getelementptr i64, i64* %0, i64 %div, !dbg !19491
  %2 = bitcast i64* %add.ptr to i8*, !dbg !19489
  store i8* %2, i8** %v.addr.i, align 8
  store i64 8, i64* %size.addr.i, align 8
  %3 = load i8*, i8** %v.addr.i, align 8, !dbg !19492
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !19493
  %conv.i = trunc i64 %4 to i32, !dbg !19493
  %call.i = call zeroext i1 @kasan_check_write(i8* %3, i32 %conv.i) #16, !dbg !19494
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !19495
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !19495
  call void @kcsan_check_access(i8* %5, i64 %6, i32 7) #16, !dbg !19495
  %7 = load i64, i64* %nr.addr, align 8, !dbg !19496
  %8 = load i64*, i64** %addr.addr, align 8, !dbg !19497
  store i64 %7, i64* %nr.addr.i, align 8
  store i64* %8, i64** %addr.addr.i, align 8
  %9 = load i64*, i64** %addr.addr.i, align 8, !dbg !19481
  %10 = load i64, i64* %nr.addr.i, align 8, !dbg !19481
  %11 = call i8 asm sideeffect " btsq  $2, $0\0A\09/* output condition code c*/\0A", "=*m,={@ccc},Ir,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %9, i64 %10, i64* %9) #10, !dbg !19481, !srcloc !19498
  store i8 %11, i8* %c.i, align 1, !dbg !19481
  %12 = load i8, i8* %c.i, align 1, !dbg !19481
  %tobool.i = trunc i8 %12 to i1, !dbg !19481
  %frombool.i = zext i1 %tobool.i to i8, !dbg !19481
  store i8 %frombool.i, i8* %tmp.i, align 1, !dbg !19481
  %13 = load i8, i8* %tmp.i, align 1, !dbg !19481
  %tobool1.i = trunc i8 %13 to i1, !dbg !19481
  ret i1 %tobool1.i, !dbg !19499
}

; Function Attrs: noredzone
declare dso_local void @__tasklet_schedule(%struct.tasklet_struct*) #1

; Function Attrs: noredzone
declare dso_local zeroext i1 @napi_schedule_prep(%struct.napi_struct*) #1

; Function Attrs: noredzone
declare dso_local void @__napi_schedule(%struct.napi_struct*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @genesis_mac_intr(%struct.skge_hw* %hw, i32 %port) #2 !dbg !19500 {
entry:
  %hw.addr = alloca %struct.skge_hw*, align 8
  %port.addr = alloca i32, align 4
  %dev = alloca %struct.net_device*, align 8
  %skge = alloca %struct.skge_port*, align 8
  %status = alloca i16, align 2
  store %struct.skge_hw* %hw, %struct.skge_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.skge_hw** %hw.addr, metadata !19501, metadata !DIExpression()), !dbg !19502
  store i32 %port, i32* %port.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %port.addr, metadata !19503, metadata !DIExpression()), !dbg !19504
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev, metadata !19505, metadata !DIExpression()), !dbg !19506
  %0 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !19507
  %dev1 = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %0, i32 0, i32 4, !dbg !19508
  %1 = load i32, i32* %port.addr, align 4, !dbg !19509
  %idxprom = sext i32 %1 to i64, !dbg !19507
  %arrayidx = getelementptr [2 x %struct.net_device*], [2 x %struct.net_device*]* %dev1, i64 0, i64 %idxprom, !dbg !19507
  %2 = load %struct.net_device*, %struct.net_device** %arrayidx, align 8, !dbg !19507
  store %struct.net_device* %2, %struct.net_device** %dev, align 8, !dbg !19506
  call void @llvm.dbg.declare(metadata %struct.skge_port** %skge, metadata !19510, metadata !DIExpression()), !dbg !19511
  %3 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !19512
  %call = call i8* @netdev_priv(%struct.net_device* %3) #14, !dbg !19513
  %4 = bitcast i8* %call to %struct.skge_port*, !dbg !19513
  store %struct.skge_port* %4, %struct.skge_port** %skge, align 8, !dbg !19511
  call void @llvm.dbg.declare(metadata i16* %status, metadata !19514, metadata !DIExpression()), !dbg !19515
  %5 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !19516
  %6 = load i32, i32* %port.addr, align 4, !dbg !19517
  %call2 = call zeroext i16 @xm_read16(%struct.skge_hw* %5, i32 %6, i32 72) #14, !dbg !19518
  store i16 %call2, i16* %status, align 2, !dbg !19515
  br label %do.body, !dbg !19519

do.body:                                          ; preds = %entry
  %7 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !19520
  %msg_enable = getelementptr inbounds %struct.skge_port, %struct.skge_port* %7, i32 0, i32 4, !dbg !19520
  %8 = load i32, i32* %msg_enable, align 4, !dbg !19520
  %and = and i32 %8, 512, !dbg !19520
  %tobool = icmp ne i32 %and, 0, !dbg !19520
  br i1 %tobool, label %if.then, label %if.end, !dbg !19523

if.then:                                          ; preds = %do.body
  %9 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !19520
  %netdev = getelementptr inbounds %struct.skge_port, %struct.skge_port* %9, i32 0, i32 1, !dbg !19520
  %10 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !19520
  %11 = load i16, i16* %status, align 2, !dbg !19520
  %conv = zext i16 %11 to i32, !dbg !19520
  call void (i8*, %struct.net_device*, i8*, ...) @netdev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.14, i64 0, i64 0), %struct.net_device* %10, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.61, i64 0, i64 0), i32 %conv) #15, !dbg !19520
  br label %if.end, !dbg !19520

if.end:                                           ; preds = %if.then, %do.body
  br label %do.end, !dbg !19523

do.end:                                           ; preds = %if.end
  %12 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !19524
  %phy_type = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %12, i32 0, i32 9, !dbg !19526
  %13 = load i8, i8* %phy_type, align 4, !dbg !19526
  %conv3 = zext i8 %13 to i32, !dbg !19524
  %cmp = icmp eq i32 %conv3, 0, !dbg !19527
  br i1 %cmp, label %land.lhs.true, label %if.end10, !dbg !19528

land.lhs.true:                                    ; preds = %do.end
  %14 = load i16, i16* %status, align 2, !dbg !19529
  %conv5 = zext i16 %14 to i32, !dbg !19529
  %and6 = and i32 %conv5, 2048, !dbg !19530
  %tobool7 = icmp ne i32 %and6, 0, !dbg !19530
  br i1 %tobool7, label %if.then8, label %if.end10, !dbg !19531

if.then8:                                         ; preds = %land.lhs.true
  %15 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !19532
  %16 = load i32, i32* %port.addr, align 4, !dbg !19534
  call void @xm_link_down(%struct.skge_hw* %15, i32 %16) #14, !dbg !19535
  %17 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !19536
  %link_timer = getelementptr inbounds %struct.skge_port, %struct.skge_port* %17, i32 0, i32 8, !dbg !19537
  %18 = load volatile i64, i64* @jiffies, align 8, !dbg !19538
  %add = add i64 %18, 1, !dbg !19539
  %call9 = call i32 @mod_timer(%struct.timer_list* %link_timer, i64 %add) #14, !dbg !19540
  br label %if.end10, !dbg !19541

if.end10:                                         ; preds = %if.then8, %land.lhs.true, %do.end
  %19 = load i16, i16* %status, align 2, !dbg !19542
  %conv11 = zext i16 %19 to i32, !dbg !19542
  %and12 = and i32 %conv11, 4, !dbg !19544
  %tobool13 = icmp ne i32 %and12, 0, !dbg !19544
  br i1 %tobool13, label %if.then14, label %if.end15, !dbg !19545

if.then14:                                        ; preds = %if.end10
  %20 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !19546
  %21 = load i32, i32* %port.addr, align 4, !dbg !19548
  call void @xm_write32(%struct.skge_hw* %20, i32 %21, i32 292, i32 2) #14, !dbg !19549
  %22 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !19550
  %stats = getelementptr inbounds %struct.net_device, %struct.net_device* %22, i32 0, i32 24, !dbg !19551
  %tx_fifo_errors = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %stats, i32 0, i32 18, !dbg !19552
  %23 = load i64, i64* %tx_fifo_errors, align 8, !dbg !19553
  %inc = add i64 %23, 1, !dbg !19553
  store i64 %inc, i64* %tx_fifo_errors, align 8, !dbg !19553
  br label %if.end15, !dbg !19554

if.end15:                                         ; preds = %if.then14, %if.end10
  ret void, !dbg !19555
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @yukon_mac_intr(%struct.skge_hw* %hw, i32 %port) #2 !dbg !19556 {
entry:
  %hw.addr = alloca %struct.skge_hw*, align 8
  %port.addr = alloca i32, align 4
  %dev = alloca %struct.net_device*, align 8
  %skge = alloca %struct.skge_port*, align 8
  %status = alloca i8, align 1
  store %struct.skge_hw* %hw, %struct.skge_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.skge_hw** %hw.addr, metadata !19557, metadata !DIExpression()), !dbg !19558
  store i32 %port, i32* %port.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %port.addr, metadata !19559, metadata !DIExpression()), !dbg !19560
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev, metadata !19561, metadata !DIExpression()), !dbg !19562
  %0 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !19563
  %dev1 = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %0, i32 0, i32 4, !dbg !19564
  %1 = load i32, i32* %port.addr, align 4, !dbg !19565
  %idxprom = sext i32 %1 to i64, !dbg !19563
  %arrayidx = getelementptr [2 x %struct.net_device*], [2 x %struct.net_device*]* %dev1, i64 0, i64 %idxprom, !dbg !19563
  %2 = load %struct.net_device*, %struct.net_device** %arrayidx, align 8, !dbg !19563
  store %struct.net_device* %2, %struct.net_device** %dev, align 8, !dbg !19562
  call void @llvm.dbg.declare(metadata %struct.skge_port** %skge, metadata !19566, metadata !DIExpression()), !dbg !19567
  %3 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !19568
  %call = call i8* @netdev_priv(%struct.net_device* %3) #14, !dbg !19569
  %4 = bitcast i8* %call to %struct.skge_port*, !dbg !19569
  store %struct.skge_port* %4, %struct.skge_port** %skge, align 8, !dbg !19567
  call void @llvm.dbg.declare(metadata i8* %status, metadata !19570, metadata !DIExpression()), !dbg !19571
  %5 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !19572
  %6 = load i32, i32* %port.addr, align 4, !dbg !19573
  %shl = shl i32 %6, 7, !dbg !19573
  %add = add i32 %shl, 3848, !dbg !19573
  %call2 = call zeroext i8 @skge_read8(%struct.skge_hw* %5, i32 %add) #14, !dbg !19574
  store i8 %call2, i8* %status, align 1, !dbg !19571
  br label %do.body, !dbg !19575

do.body:                                          ; preds = %entry
  %7 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !19576
  %msg_enable = getelementptr inbounds %struct.skge_port, %struct.skge_port* %7, i32 0, i32 4, !dbg !19576
  %8 = load i32, i32* %msg_enable, align 4, !dbg !19576
  %and = and i32 %8, 512, !dbg !19576
  %tobool = icmp ne i32 %and, 0, !dbg !19576
  br i1 %tobool, label %if.then, label %if.end, !dbg !19579

if.then:                                          ; preds = %do.body
  %9 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !19576
  %netdev = getelementptr inbounds %struct.skge_port, %struct.skge_port* %9, i32 0, i32 1, !dbg !19576
  %10 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !19576
  %11 = load i8, i8* %status, align 1, !dbg !19576
  %conv = zext i8 %11 to i32, !dbg !19576
  call void (i8*, %struct.net_device*, i8*, ...) @netdev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.14, i64 0, i64 0), %struct.net_device* %10, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.61, i64 0, i64 0), i32 %conv) #15, !dbg !19576
  br label %if.end, !dbg !19576

if.end:                                           ; preds = %if.then, %do.body
  br label %do.end, !dbg !19579

do.end:                                           ; preds = %if.end
  %12 = load i8, i8* %status, align 1, !dbg !19580
  %conv3 = zext i8 %12 to i32, !dbg !19580
  %and4 = and i32 %conv3, 2, !dbg !19582
  %tobool5 = icmp ne i32 %and4, 0, !dbg !19582
  br i1 %tobool5, label %if.then6, label %if.end9, !dbg !19583

if.then6:                                         ; preds = %do.end
  %13 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !19584
  %stats = getelementptr inbounds %struct.net_device, %struct.net_device* %13, i32 0, i32 24, !dbg !19586
  %rx_fifo_errors = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %stats, i32 0, i32 14, !dbg !19587
  %14 = load i64, i64* %rx_fifo_errors, align 8, !dbg !19588
  %inc = add i64 %14, 1, !dbg !19588
  store i64 %inc, i64* %rx_fifo_errors, align 8, !dbg !19588
  %15 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !19589
  %16 = load i32, i32* %port.addr, align 4, !dbg !19590
  %shl7 = shl i32 %16, 7, !dbg !19590
  %add8 = add i32 %shl7, 3144, !dbg !19590
  call void @skge_write8(%struct.skge_hw* %15, i32 %add8, i8 zeroext 32) #14, !dbg !19591
  br label %if.end9, !dbg !19592

if.end9:                                          ; preds = %if.then6, %do.end
  %17 = load i8, i8* %status, align 1, !dbg !19593
  %conv10 = zext i8 %17 to i32, !dbg !19593
  %and11 = and i32 %conv10, 8, !dbg !19595
  %tobool12 = icmp ne i32 %and11, 0, !dbg !19595
  br i1 %tobool12, label %if.then13, label %if.end18, !dbg !19596

if.then13:                                        ; preds = %if.end9
  %18 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !19597
  %stats14 = getelementptr inbounds %struct.net_device, %struct.net_device* %18, i32 0, i32 24, !dbg !19599
  %tx_fifo_errors = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %stats14, i32 0, i32 18, !dbg !19600
  %19 = load i64, i64* %tx_fifo_errors, align 8, !dbg !19601
  %inc15 = add i64 %19, 1, !dbg !19601
  store i64 %inc15, i64* %tx_fifo_errors, align 8, !dbg !19601
  %20 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !19602
  %21 = load i32, i32* %port.addr, align 4, !dbg !19603
  %shl16 = shl i32 %21, 7, !dbg !19603
  %add17 = add i32 %shl16, 3400, !dbg !19603
  call void @skge_write8(%struct.skge_hw* %20, i32 %add17, i8 zeroext 64) #14, !dbg !19604
  br label %if.end18, !dbg !19605

if.end18:                                         ; preds = %if.then13, %if.end9
  ret void, !dbg !19606
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @skge_mac_parity(%struct.skge_hw* %hw, i32 %port) #2 !dbg !19607 {
entry:
  %hw.addr = alloca %struct.skge_hw*, align 8
  %port.addr = alloca i32, align 4
  %dev = alloca %struct.net_device*, align 8
  store %struct.skge_hw* %hw, %struct.skge_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.skge_hw** %hw.addr, metadata !19608, metadata !DIExpression()), !dbg !19609
  store i32 %port, i32* %port.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %port.addr, metadata !19610, metadata !DIExpression()), !dbg !19611
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev, metadata !19612, metadata !DIExpression()), !dbg !19613
  %0 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !19614
  %dev1 = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %0, i32 0, i32 4, !dbg !19615
  %1 = load i32, i32* %port.addr, align 4, !dbg !19616
  %idxprom = sext i32 %1 to i64, !dbg !19614
  %arrayidx = getelementptr [2 x %struct.net_device*], [2 x %struct.net_device*]* %dev1, i64 0, i64 %idxprom, !dbg !19614
  %2 = load %struct.net_device*, %struct.net_device** %arrayidx, align 8, !dbg !19614
  store %struct.net_device* %2, %struct.net_device** %dev, align 8, !dbg !19613
  %3 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !19617
  %stats = getelementptr inbounds %struct.net_device, %struct.net_device* %3, i32 0, i32 24, !dbg !19618
  %tx_heartbeat_errors = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %stats, i32 0, i32 19, !dbg !19619
  %4 = load i64, i64* %tx_heartbeat_errors, align 8, !dbg !19620
  %inc = add i64 %4, 1, !dbg !19620
  store i64 %inc, i64* %tx_heartbeat_errors, align 8, !dbg !19620
  %5 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !19621
  %call = call zeroext i1 @is_genesis(%struct.skge_hw* %5) #14, !dbg !19623
  br i1 %call, label %if.then, label %if.else, !dbg !19624

if.then:                                          ; preds = %entry
  %6 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !19625
  %7 = load i32, i32* %port.addr, align 4, !dbg !19626
  %shl = shl i32 %7, 7, !dbg !19626
  %add = add i32 %shl, 3352, !dbg !19626
  call void @skge_write16(%struct.skge_hw* %6, i32 %add, i16 zeroext -32768) #14, !dbg !19627
  br label %if.end, !dbg !19627

if.else:                                          ; preds = %entry
  %8 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !19628
  %9 = load i32, i32* %port.addr, align 4, !dbg !19629
  %shl2 = shl i32 %9, 7, !dbg !19629
  %add3 = add i32 %shl2, 3400, !dbg !19629
  %10 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !19630
  %chip_id = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %10, i32 0, i32 5, !dbg !19631
  %11 = load i8, i8* %chip_id, align 8, !dbg !19631
  %conv = zext i8 %11 to i32, !dbg !19630
  %cmp = icmp eq i32 %conv, 176, !dbg !19632
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !19633

land.rhs:                                         ; preds = %if.else
  %12 = load %struct.skge_hw*, %struct.skge_hw** %hw.addr, align 8, !dbg !19634
  %chip_rev = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %12, i32 0, i32 6, !dbg !19635
  %13 = load i8, i8* %chip_rev, align 1, !dbg !19635
  %conv5 = zext i8 %13 to i32, !dbg !19634
  %cmp6 = icmp eq i32 %conv5, 0, !dbg !19636
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.else
  %14 = phi i1 [ false, %if.else ], [ %cmp6, %land.rhs ], !dbg !19637
  %15 = zext i1 %14 to i64, !dbg !19638
  %cond = select i1 %14, i32 32, i32 16, !dbg !19638
  %conv8 = trunc i32 %cond to i8, !dbg !19638
  call void @skge_write8(%struct.skge_hw* %8, i32 %add3, i8 zeroext %conv8) #14, !dbg !19639
  br label %if.end

if.end:                                           ; preds = %land.end, %if.then
  ret void, !dbg !19640
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dev_set_drvdata(%struct.device* %dev, i8* %data) #2 !dbg !19641 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %data.addr = alloca i8*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !19644, metadata !DIExpression()), !dbg !19645
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !19646, metadata !DIExpression()), !dbg !19647
  %0 = load i8*, i8** %data.addr, align 8, !dbg !19648
  %1 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !19649
  %driver_data = getelementptr inbounds %struct.device, %struct.device* %1, i32 0, i32 8, !dbg !19650
  store i8* %0, i8** %driver_data, align 8, !dbg !19651
  ret void, !dbg !19652
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @writew(i16 zeroext %val, i8* %addr) #2 !dbg !19653 {
entry:
  %val.addr = alloca i16, align 2
  %addr.addr = alloca i8*, align 8
  store i16 %val, i16* %val.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %val.addr, metadata !19656, metadata !DIExpression()), !dbg !19657
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !19658, metadata !DIExpression()), !dbg !19657
  %0 = load i16, i16* %val.addr, align 2, !dbg !19657
  %1 = load i8*, i8** %addr.addr, align 8, !dbg !19657
  %2 = bitcast i8* %1 to i16*, !dbg !19657
  call void asm sideeffect "movw $0,$1", "r,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i16 %0, i16* %2) #10, !dbg !19657, !srcloc !19659
  ret void, !dbg !19657
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @pci_get_drvdata(%struct.pci_dev* %pdev) #2 !dbg !19660 {
entry:
  %pdev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !19663, metadata !DIExpression()), !dbg !19664
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !19665
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 41, !dbg !19666
  %call = call i8* @dev_get_drvdata(%struct.device* %dev) #14, !dbg !19667
  ret i8* %call, !dbg !19668
}

; Function Attrs: noredzone
declare dso_local void @tasklet_kill(%struct.tasklet_struct*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @dev_get_drvdata(%struct.device* %dev) #2 !dbg !19669 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !19672, metadata !DIExpression()), !dbg !19673
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !19674
  %driver_data = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 8, !dbg !19675
  %1 = load i8*, i8** %driver_data, align 8, !dbg !19675
  ret i8* %1, !dbg !19676
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @skge_wol_init(%struct.skge_port* %skge) #2 !dbg !19677 {
entry:
  %skge.addr = alloca %struct.skge_port*, align 8
  %hw = alloca %struct.skge_hw*, align 8
  %port = alloca i32, align 4
  %ctrl = alloca i16, align 2
  %reg = alloca i32, align 4
  store %struct.skge_port* %skge, %struct.skge_port** %skge.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.skge_port** %skge.addr, metadata !19678, metadata !DIExpression()), !dbg !19679
  call void @llvm.dbg.declare(metadata %struct.skge_hw** %hw, metadata !19680, metadata !DIExpression()), !dbg !19681
  %0 = load %struct.skge_port*, %struct.skge_port** %skge.addr, align 8, !dbg !19682
  %hw1 = getelementptr inbounds %struct.skge_port, %struct.skge_port* %0, i32 0, i32 0, !dbg !19683
  %1 = load %struct.skge_hw*, %struct.skge_hw** %hw1, align 8, !dbg !19683
  store %struct.skge_hw* %1, %struct.skge_hw** %hw, align 8, !dbg !19681
  call void @llvm.dbg.declare(metadata i32* %port, metadata !19684, metadata !DIExpression()), !dbg !19685
  %2 = load %struct.skge_port*, %struct.skge_port** %skge.addr, align 8, !dbg !19686
  %port2 = getelementptr inbounds %struct.skge_port, %struct.skge_port* %2, i32 0, i32 3, !dbg !19687
  %3 = load i32, i32* %port2, align 8, !dbg !19687
  store i32 %3, i32* %port, align 4, !dbg !19685
  call void @llvm.dbg.declare(metadata i16* %ctrl, metadata !19688, metadata !DIExpression()), !dbg !19689
  %4 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !19690
  call void @skge_write16(%struct.skge_hw* %4, i32 4, i16 zeroext 2) #14, !dbg !19691
  %5 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !19692
  %6 = load i32, i32* %port, align 4, !dbg !19693
  %shl = shl i32 %6, 7, !dbg !19693
  %add = add i32 %shl, 3856, !dbg !19693
  call void @skge_write16(%struct.skge_hw* %5, i32 %add, i16 zeroext 2) #14, !dbg !19694
  %7 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !19695
  call void @skge_write8(%struct.skge_hw* %7, i32 7, i8 zeroext -87) #14, !dbg !19696
  %8 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !19697
  %chip_id = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %8, i32 0, i32 5, !dbg !19699
  %9 = load i8, i8* %chip_id, align 8, !dbg !19699
  %conv = zext i8 %9 to i32, !dbg !19697
  %cmp = icmp eq i32 %conv, 177, !dbg !19700
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !19701

land.lhs.true:                                    ; preds = %entry
  %10 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !19702
  %chip_rev = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %10, i32 0, i32 6, !dbg !19703
  %11 = load i8, i8* %chip_rev, align 1, !dbg !19703
  %conv4 = zext i8 %11 to i32, !dbg !19702
  %cmp5 = icmp sge i32 %conv4, 7, !dbg !19704
  br i1 %cmp5, label %if.then, label %if.end, !dbg !19705

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i32* %reg, metadata !19706, metadata !DIExpression()), !dbg !19708
  %12 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !19709
  %call = call i32 @skge_read32(%struct.skge_hw* %12, i32 348) #14, !dbg !19710
  store i32 %call, i32* %reg, align 4, !dbg !19708
  %13 = load i32, i32* %reg, align 4, !dbg !19711
  %or = or i32 %13, 33554432, !dbg !19711
  store i32 %or, i32* %reg, align 4, !dbg !19711
  %14 = load i32, i32* %reg, align 4, !dbg !19712
  %and = and i32 %14, -513, !dbg !19712
  store i32 %and, i32* %reg, align 4, !dbg !19712
  %15 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !19713
  %16 = load i32, i32* %reg, align 4, !dbg !19714
  call void @skge_write32(%struct.skge_hw* %15, i32 348, i32 %16) #14, !dbg !19715
  br label %if.end, !dbg !19716

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %17 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !19717
  %18 = load i32, i32* %port, align 4, !dbg !19718
  %shl7 = shl i32 %18, 7, !dbg !19718
  %add8 = add i32 %shl7, 3844, !dbg !19718
  call void @skge_write32(%struct.skge_hw* %17, i32 %add8, i32 32522241) #14, !dbg !19719
  %19 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !19720
  %20 = load i32, i32* %port, align 4, !dbg !19721
  %shl9 = shl i32 %20, 7, !dbg !19721
  %add10 = add i32 %shl9, 3844, !dbg !19721
  call void @skge_write32(%struct.skge_hw* %19, i32 %add10, i32 32522242) #14, !dbg !19722
  %21 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !19723
  %22 = load i32, i32* %port, align 4, !dbg !19724
  %shl11 = shl i32 %22, 7, !dbg !19724
  %add12 = add i32 %shl11, 3840, !dbg !19724
  call void @skge_write32(%struct.skge_hw* %21, i32 %add12, i32 2) #14, !dbg !19725
  %23 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !19726
  %24 = load i32, i32* %port, align 4, !dbg !19727
  %call13 = call i32 @gm_phy_write(%struct.skge_hw* %23, i32 %24, i16 zeroext 4, i16 zeroext 481) #14, !dbg !19728
  %25 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !19729
  %26 = load i32, i32* %port, align 4, !dbg !19730
  %call14 = call i32 @gm_phy_write(%struct.skge_hw* %25, i32 %26, i16 zeroext 9, i16 zeroext 0) #14, !dbg !19731
  %27 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !19732
  %28 = load i32, i32* %port, align 4, !dbg !19733
  %call15 = call i32 @gm_phy_write(%struct.skge_hw* %27, i32 %28, i16 zeroext 0, i16 zeroext -19712) #14, !dbg !19734
  %29 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !19735
  %30 = load i32, i32* %port, align 4, !dbg !19736
  call void @gma_write16(%struct.skge_hw* %29, i32 %30, i32 4, i16 zeroext 14386) #14, !dbg !19737
  %31 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !19738
  %regs = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %31, i32 0, i32 0, !dbg !19739
  %32 = load i8*, i8** %regs, align 8, !dbg !19739
  %33 = load i32, i32* %port, align 4, !dbg !19740
  %mul = mul i32 %33, 128, !dbg !19740
  %add16 = add i32 3876, %mul, !dbg !19740
  %idx.ext = sext i32 %add16 to i64, !dbg !19741
  %add.ptr = getelementptr i8, i8* %32, i64 %idx.ext, !dbg !19741
  %34 = load %struct.skge_port*, %struct.skge_port** %skge.addr, align 8, !dbg !19742
  %netdev = getelementptr inbounds %struct.skge_port, %struct.skge_port* %34, i32 0, i32 1, !dbg !19743
  %35 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !19743
  %dev_addr = getelementptr inbounds %struct.net_device, %struct.net_device* %35, i32 0, i32 74, !dbg !19744
  %36 = load i8*, i8** %dev_addr, align 8, !dbg !19744
  call void @memcpy_toio(i8* %add.ptr, i8* %36, i64 6) #14, !dbg !19745
  %37 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !19746
  %38 = load i32, i32* %port, align 4, !dbg !19747
  %mul17 = mul i32 %38, 128, !dbg !19747
  %add18 = add i32 3872, %mul17, !dbg !19747
  call void @skge_write16(%struct.skge_hw* %37, i32 %add18, i16 zeroext 4096) #14, !dbg !19748
  store i16 0, i16* %ctrl, align 2, !dbg !19749
  %39 = load %struct.skge_port*, %struct.skge_port** %skge.addr, align 8, !dbg !19750
  %wol = getelementptr inbounds %struct.skge_port, %struct.skge_port* %39, i32 0, i32 12, !dbg !19752
  %40 = load i8, i8* %wol, align 1, !dbg !19752
  %conv19 = zext i8 %40 to i32, !dbg !19750
  %and20 = and i32 %conv19, 1, !dbg !19753
  %tobool = icmp ne i32 %and20, 0, !dbg !19753
  br i1 %tobool, label %if.then21, label %if.else, !dbg !19754

if.then21:                                        ; preds = %if.end
  %41 = load i16, i16* %ctrl, align 2, !dbg !19755
  %conv22 = zext i16 %41 to i32, !dbg !19755
  %or23 = or i32 %conv22, 2080, !dbg !19755
  %conv24 = trunc i32 %or23 to i16, !dbg !19755
  store i16 %conv24, i16* %ctrl, align 2, !dbg !19755
  br label %if.end28, !dbg !19756

if.else:                                          ; preds = %if.end
  %42 = load i16, i16* %ctrl, align 2, !dbg !19757
  %conv25 = zext i16 %42 to i32, !dbg !19757
  %or26 = or i32 %conv25, 1040, !dbg !19757
  %conv27 = trunc i32 %or26 to i16, !dbg !19757
  store i16 %conv27, i16* %ctrl, align 2, !dbg !19757
  br label %if.end28

if.end28:                                         ; preds = %if.else, %if.then21
  %43 = load %struct.skge_port*, %struct.skge_port** %skge.addr, align 8, !dbg !19758
  %wol29 = getelementptr inbounds %struct.skge_port, %struct.skge_port* %43, i32 0, i32 12, !dbg !19760
  %44 = load i8, i8* %wol29, align 1, !dbg !19760
  %conv30 = zext i8 %44 to i32, !dbg !19758
  %and31 = and i32 %conv30, 32, !dbg !19761
  %tobool32 = icmp ne i32 %and31, 0, !dbg !19761
  br i1 %tobool32, label %if.then33, label %if.else37, !dbg !19762

if.then33:                                        ; preds = %if.end28
  %45 = load i16, i16* %ctrl, align 2, !dbg !19763
  %conv34 = zext i16 %45 to i32, !dbg !19763
  %or35 = or i32 %conv34, 520, !dbg !19763
  %conv36 = trunc i32 %or35 to i16, !dbg !19763
  store i16 %conv36, i16* %ctrl, align 2, !dbg !19763
  br label %if.end41, !dbg !19764

if.else37:                                        ; preds = %if.end28
  %46 = load i16, i16* %ctrl, align 2, !dbg !19765
  %conv38 = zext i16 %46 to i32, !dbg !19765
  %or39 = or i32 %conv38, 260, !dbg !19765
  %conv40 = trunc i32 %or39 to i16, !dbg !19765
  store i16 %conv40, i16* %ctrl, align 2, !dbg !19765
  br label %if.end41

if.end41:                                         ; preds = %if.else37, %if.then33
  %47 = load i16, i16* %ctrl, align 2, !dbg !19766
  %conv42 = zext i16 %47 to i32, !dbg !19766
  %or43 = or i32 %conv42, 65, !dbg !19766
  %conv44 = trunc i32 %or43 to i16, !dbg !19766
  store i16 %conv44, i16* %ctrl, align 2, !dbg !19766
  %48 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !19767
  %49 = load i32, i32* %port, align 4, !dbg !19768
  %mul45 = mul i32 %49, 128, !dbg !19768
  %add46 = add i32 3872, %mul45, !dbg !19768
  %50 = load i16, i16* %ctrl, align 2, !dbg !19769
  call void @skge_write16(%struct.skge_hw* %48, i32 %add46, i16 zeroext %50) #14, !dbg !19770
  %51 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !19771
  %52 = load i32, i32* %port, align 4, !dbg !19772
  %shl47 = shl i32 %52, 7, !dbg !19772
  %add48 = add i32 %shl47, 3144, !dbg !19772
  call void @skge_write8(%struct.skge_hw* %51, i32 %add48, i8 zeroext 1) #14, !dbg !19773
  ret void, !dbg !19774
}

; Function Attrs: noredzone
declare dso_local i32 @pci_wake_from_d3(%struct.pci_dev*, i1 zeroext) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @device_may_wakeup(%struct.device* %dev) #2 !dbg !19775 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !19776, metadata !DIExpression()), !dbg !19777
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !19778
  %power = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 11, !dbg !19779
  %can_wakeup = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power, i32 0, i32 1, !dbg !19780
  %bf.load = load i16, i16* %can_wakeup, align 4, !dbg !19780
  %bf.clear = and i16 %bf.load, 1, !dbg !19780
  %bf.cast = zext i16 %bf.clear to i32, !dbg !19780
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !19778
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !19781

land.rhs:                                         ; preds = %entry
  %1 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !19782
  %power1 = getelementptr inbounds %struct.device, %struct.device* %1, i32 0, i32 11, !dbg !19783
  %wakeup = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power1, i32 0, i32 6, !dbg !19784
  %2 = load %struct.wakeup_source*, %struct.wakeup_source** %wakeup, align 8, !dbg !19784
  %tobool2 = icmp ne %struct.wakeup_source* %2, null, !dbg !19785
  %lnot = xor i1 %tobool2, true, !dbg !19785
  %lnot3 = xor i1 %lnot, true, !dbg !19786
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %3 = phi i1 [ false, %entry ], [ %lnot3, %land.rhs ], !dbg !19787
  ret i1 %3, !dbg !19788
}

; Function Attrs: noredzone
declare dso_local i32 @pci_set_power_state(%struct.pci_dev*, i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @skge_suspend(%struct.device* %dev) #2 !dbg !19789 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.device*, align 8
  %hw = alloca %struct.skge_hw*, align 8
  %i = alloca i32, align 4
  %dev2 = alloca %struct.net_device*, align 8
  %skge = alloca %struct.skge_port*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !19790, metadata !DIExpression()), !dbg !19791
  call void @llvm.dbg.declare(metadata %struct.skge_hw** %hw, metadata !19792, metadata !DIExpression()), !dbg !19793
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !19794
  %call = call i8* @dev_get_drvdata(%struct.device* %0) #14, !dbg !19795
  %1 = bitcast i8* %call to %struct.skge_hw*, !dbg !19795
  store %struct.skge_hw* %1, %struct.skge_hw** %hw, align 8, !dbg !19793
  call void @llvm.dbg.declare(metadata i32* %i, metadata !19796, metadata !DIExpression()), !dbg !19797
  %2 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !19798
  %tobool = icmp ne %struct.skge_hw* %2, null, !dbg !19798
  br i1 %tobool, label %if.end, label %if.then, !dbg !19800

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !19801
  br label %return, !dbg !19801

if.end:                                           ; preds = %entry
  store i32 0, i32* %i, align 4, !dbg !19802
  br label %for.cond, !dbg !19804

for.cond:                                         ; preds = %for.inc, %if.end
  %3 = load i32, i32* %i, align 4, !dbg !19805
  %4 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !19807
  %ports = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %4, i32 0, i32 8, !dbg !19808
  %5 = load i8, i8* %ports, align 1, !dbg !19808
  %conv = zext i8 %5 to i32, !dbg !19807
  %cmp = icmp slt i32 %3, %conv, !dbg !19809
  br i1 %cmp, label %for.body, label %for.end, !dbg !19810

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev2, metadata !19811, metadata !DIExpression()), !dbg !19813
  %6 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !19814
  %dev3 = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %6, i32 0, i32 4, !dbg !19815
  %7 = load i32, i32* %i, align 4, !dbg !19816
  %idxprom = sext i32 %7 to i64, !dbg !19814
  %arrayidx = getelementptr [2 x %struct.net_device*], [2 x %struct.net_device*]* %dev3, i64 0, i64 %idxprom, !dbg !19814
  %8 = load %struct.net_device*, %struct.net_device** %arrayidx, align 8, !dbg !19814
  store %struct.net_device* %8, %struct.net_device** %dev2, align 8, !dbg !19813
  call void @llvm.dbg.declare(metadata %struct.skge_port** %skge, metadata !19817, metadata !DIExpression()), !dbg !19818
  %9 = load %struct.net_device*, %struct.net_device** %dev2, align 8, !dbg !19819
  %call4 = call i8* @netdev_priv(%struct.net_device* %9) #14, !dbg !19820
  %10 = bitcast i8* %call4 to %struct.skge_port*, !dbg !19820
  store %struct.skge_port* %10, %struct.skge_port** %skge, align 8, !dbg !19818
  %11 = load %struct.net_device*, %struct.net_device** %dev2, align 8, !dbg !19821
  %call5 = call zeroext i1 @netif_running(%struct.net_device* %11) #14, !dbg !19823
  br i1 %call5, label %if.then6, label %if.end8, !dbg !19824

if.then6:                                         ; preds = %for.body
  %12 = load %struct.net_device*, %struct.net_device** %dev2, align 8, !dbg !19825
  %call7 = call i32 @skge_down(%struct.net_device* %12) #14, !dbg !19826
  br label %if.end8, !dbg !19826

if.end8:                                          ; preds = %if.then6, %for.body
  %13 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !19827
  %wol = getelementptr inbounds %struct.skge_port, %struct.skge_port* %13, i32 0, i32 12, !dbg !19829
  %14 = load i8, i8* %wol, align 1, !dbg !19829
  %tobool9 = icmp ne i8 %14, 0, !dbg !19827
  br i1 %tobool9, label %if.then10, label %if.end11, !dbg !19830

if.then10:                                        ; preds = %if.end8
  %15 = load %struct.skge_port*, %struct.skge_port** %skge, align 8, !dbg !19831
  call void @skge_wol_init(%struct.skge_port* %15) #14, !dbg !19832
  br label %if.end11, !dbg !19832

if.end11:                                         ; preds = %if.then10, %if.end8
  br label %for.inc, !dbg !19833

for.inc:                                          ; preds = %if.end11
  %16 = load i32, i32* %i, align 4, !dbg !19834
  %inc = add i32 %16, 1, !dbg !19834
  store i32 %inc, i32* %i, align 4, !dbg !19834
  br label %for.cond, !dbg !19835, !llvm.loop !19836

for.end:                                          ; preds = %for.cond
  %17 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !19838
  call void @skge_write32(%struct.skge_hw* %17, i32 12, i32 0) #14, !dbg !19839
  store i32 0, i32* %retval, align 4, !dbg !19840
  br label %return, !dbg !19840

return:                                           ; preds = %for.end, %if.then
  %18 = load i32, i32* %retval, align 4, !dbg !19841
  ret i32 %18, !dbg !19841
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @skge_resume(%struct.device* %dev) #2 !dbg !19842 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.device*, align 8
  %hw = alloca %struct.skge_hw*, align 8
  %i = alloca i32, align 4
  %err = alloca i32, align 4
  %dev6 = alloca %struct.net_device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !19843, metadata !DIExpression()), !dbg !19844
  call void @llvm.dbg.declare(metadata %struct.skge_hw** %hw, metadata !19845, metadata !DIExpression()), !dbg !19846
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !19847
  %call = call i8* @dev_get_drvdata(%struct.device* %0) #14, !dbg !19848
  %1 = bitcast i8* %call to %struct.skge_hw*, !dbg !19848
  store %struct.skge_hw* %1, %struct.skge_hw** %hw, align 8, !dbg !19846
  call void @llvm.dbg.declare(metadata i32* %i, metadata !19849, metadata !DIExpression()), !dbg !19850
  call void @llvm.dbg.declare(metadata i32* %err, metadata !19851, metadata !DIExpression()), !dbg !19852
  %2 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !19853
  %tobool = icmp ne %struct.skge_hw* %2, null, !dbg !19853
  br i1 %tobool, label %if.end, label %if.then, !dbg !19855

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !19856
  br label %return, !dbg !19856

if.end:                                           ; preds = %entry
  %3 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !19857
  %call1 = call i32 @skge_reset(%struct.skge_hw* %3) #14, !dbg !19858
  store i32 %call1, i32* %err, align 4, !dbg !19859
  %4 = load i32, i32* %err, align 4, !dbg !19860
  %tobool2 = icmp ne i32 %4, 0, !dbg !19860
  br i1 %tobool2, label %if.then3, label %if.end4, !dbg !19862

if.then3:                                         ; preds = %if.end
  br label %out, !dbg !19863

if.end4:                                          ; preds = %if.end
  store i32 0, i32* %i, align 4, !dbg !19864
  br label %for.cond, !dbg !19866

for.cond:                                         ; preds = %for.inc, %if.end4
  %5 = load i32, i32* %i, align 4, !dbg !19867
  %6 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !19869
  %ports = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %6, i32 0, i32 8, !dbg !19870
  %7 = load i8, i8* %ports, align 1, !dbg !19870
  %conv = zext i8 %7 to i32, !dbg !19869
  %cmp = icmp slt i32 %5, %conv, !dbg !19871
  br i1 %cmp, label %for.body, label %for.end, !dbg !19872

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev6, metadata !19873, metadata !DIExpression()), !dbg !19875
  %8 = load %struct.skge_hw*, %struct.skge_hw** %hw, align 8, !dbg !19876
  %dev7 = getelementptr inbounds %struct.skge_hw, %struct.skge_hw* %8, i32 0, i32 4, !dbg !19877
  %9 = load i32, i32* %i, align 4, !dbg !19878
  %idxprom = sext i32 %9 to i64, !dbg !19876
  %arrayidx = getelementptr [2 x %struct.net_device*], [2 x %struct.net_device*]* %dev7, i64 0, i64 %idxprom, !dbg !19876
  %10 = load %struct.net_device*, %struct.net_device** %arrayidx, align 8, !dbg !19876
  store %struct.net_device* %10, %struct.net_device** %dev6, align 8, !dbg !19875
  %11 = load %struct.net_device*, %struct.net_device** %dev6, align 8, !dbg !19879
  %call8 = call zeroext i1 @netif_running(%struct.net_device* %11) #14, !dbg !19881
  br i1 %call8, label %if.then9, label %if.end14, !dbg !19882

if.then9:                                         ; preds = %for.body
  %12 = load %struct.net_device*, %struct.net_device** %dev6, align 8, !dbg !19883
  %call10 = call i32 @skge_up(%struct.net_device* %12) #14, !dbg !19885
  store i32 %call10, i32* %err, align 4, !dbg !19886
  %13 = load i32, i32* %err, align 4, !dbg !19887
  %tobool11 = icmp ne i32 %13, 0, !dbg !19887
  br i1 %tobool11, label %if.then12, label %if.end13, !dbg !19889

if.then12:                                        ; preds = %if.then9
  %14 = load %struct.net_device*, %struct.net_device** %dev6, align 8, !dbg !19890
  %15 = load i32, i32* %err, align 4, !dbg !19892
  call void (%struct.net_device*, i8*, ...) @netdev_err(%struct.net_device* %14, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.67, i64 0, i64 0), i32 %15) #15, !dbg !19893
  %16 = load %struct.net_device*, %struct.net_device** %dev6, align 8, !dbg !19894
  call void @dev_close(%struct.net_device* %16) #14, !dbg !19895
  br label %out, !dbg !19896

if.end13:                                         ; preds = %if.then9
  br label %if.end14, !dbg !19897

if.end14:                                         ; preds = %if.end13, %for.body
  br label %for.inc, !dbg !19898

for.inc:                                          ; preds = %if.end14
  %17 = load i32, i32* %i, align 4, !dbg !19899
  %inc = add i32 %17, 1, !dbg !19899
  store i32 %inc, i32* %i, align 4, !dbg !19899
  br label %for.cond, !dbg !19900, !llvm.loop !19901

for.end:                                          ; preds = %for.cond
  br label %out, !dbg !19902

out:                                              ; preds = %for.end, %if.then12, %if.then3
  call void @llvm.dbg.label(metadata !19903), !dbg !19904
  %18 = load i32, i32* %err, align 4, !dbg !19905
  store i32 %18, i32* %retval, align 4, !dbg !19906
  br label %return, !dbg !19906

return:                                           ; preds = %out, %if.then
  %19 = load i32, i32* %retval, align 4, !dbg !19907
  ret i32 %19, !dbg !19907
}

; Function Attrs: noredzone
declare dso_local i32 @dmi_check_system(%struct.dmi_system_id*) #1

; Function Attrs: noredzone
declare dso_local i32 @__pci_register_driver(%struct.pci_driver*, %struct.module*, i8*) #1

attributes #0 = { cold noinline noredzone nounwind optnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noinline noredzone nounwind optnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readnone speculatable willreturn }
attributes #4 = { cold noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind willreturn }
attributes #6 = { nounwind readnone willreturn }
attributes #7 = { nounwind willreturn }
attributes #8 = { noinline noredzone nounwind optnone readnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readonly }
attributes #10 = { nounwind }
attributes #11 = { alwaysinline noredzone nounwind sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { noredzone nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { inaccessiblemem_or_argmemonly nounwind willreturn }
attributes #14 = { noredzone }
attributes #15 = { cold noredzone }
attributes #16 = { noredzone nounwind }
attributes #17 = { noredzone nounwind readnone }
attributes #18 = { noredzone nounwind readonly }

!llvm.dbg.cu = !{!2}
!llvm.named.register.rsp = !{!9501}
!llvm.module.flags = !{!9502, !9503, !9504, !9505}
!llvm.ident = !{!9506}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_description325", scope: !2, file: !3, line: 60, type: !9500, isLocal: true, isDefinition: true, align: 8)
!2 = distinct !DICompileUnit(language: DW_LANG_C89, file: !3, producer: "clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !8793, globals: !9251, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "drivers/net/ethernet/marvell/skge.c", directory: "/home/lizy2001/genbc/linux")
!4 = !{!5, !13, !19, !24, !30, !37, !57, !64, !95, !129, !170, !177, !208, !221, !229, !235, !242, !246, !250, !257, !263, !6490, !6626, !6706, !6782, !6790, !6197, !4288, !4383, !5050, !5069, !7052, !7163, !7189, !7196, !7202, !7209, !7217, !7255, !7263, !7268, !7302, !7320, !7339, !7352, !7361, !7379, !7396, !7406, !7434, !7441, !7447, !7473, !7490, !7512, !7520, !7525, !7540, !7545, !7557, !7573, !7668, !7676, !7682, !7687, !7710, !7727, !7755, !7769, !7779, !7792, !7797, !7813, !7831, !7904, !7933, !7950, !7962, !7972, !7977, !7982, !7999, !8004, !8013, !8023, !8029, !8033, !8039, !8055, !8062, !8068, !8132, !8150, !8175, !8180, !8187, !8204, !8221, !8233, !8255, !8260, !8268, !8279, !8288, !8320, !8348, !8354, !8362, !8380, !8388, !8399, !8424, !8428, !8434, !8442, !8449, !8460, !8479, !8496, !8514, !8525, !8540, !8548, !8556, !8561, !8569, !8574, !8580, !8590, !8599, !8606, !8614, !8623, !8637, !8668, !8672, !8693, !8735, !8756, !8763, !8769, !8775, !8780, !8788}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "migrate_mode", file: !6, line: 15, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "./include/linux/migrate_mode.h", directory: "/home/lizy2001/genbc/linux")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10, !11, !12}
!9 = !DIEnumerator(name: "MIGRATE_ASYNC", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "MIGRATE_SYNC_LIGHT", value: 1, isUnsigned: true)
!11 = !DIEnumerator(name: "MIGRATE_SYNC", value: 2, isUnsigned: true)
!12 = !DIEnumerator(name: "MIGRATE_SYNC_NO_COPY", value: 3, isUnsigned: true)
!13 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "page_entry_size", file: !14, line: 546, baseType: !7, size: 32, elements: !15)
!14 = !DIFile(filename: "./include/linux/mm.h", directory: "/home/lizy2001/genbc/linux")
!15 = !{!16, !17, !18}
!16 = !DIEnumerator(name: "PE_SIZE_PTE", value: 0, isUnsigned: true)
!17 = !DIEnumerator(name: "PE_SIZE_PMD", value: 1, isUnsigned: true)
!18 = !DIEnumerator(name: "PE_SIZE_PUD", value: 2, isUnsigned: true)
!19 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "hrtimer_restart", file: !20, line: 65, baseType: !7, size: 32, elements: !21)
!20 = !DIFile(filename: "./include/linux/hrtimer.h", directory: "/home/lizy2001/genbc/linux")
!21 = !{!22, !23}
!22 = !DIEnumerator(name: "HRTIMER_NORESTART", value: 0, isUnsigned: true)
!23 = !DIEnumerator(name: "HRTIMER_RESTART", value: 1, isUnsigned: true)
!24 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "timespec_type", file: !25, line: 16, baseType: !7, size: 32, elements: !26)
!25 = !DIFile(filename: "./include/linux/restart_block.h", directory: "/home/lizy2001/genbc/linux")
!26 = !{!27, !28, !29}
!27 = !DIEnumerator(name: "TT_NONE", value: 0, isUnsigned: true)
!28 = !DIEnumerator(name: "TT_NATIVE", value: 1, isUnsigned: true)
!29 = !DIEnumerator(name: "TT_COMPAT", value: 2, isUnsigned: true)
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "netdev_tx", file: !31, line: 115, baseType: !32, size: 32, elements: !33)
!31 = !DIFile(filename: "./include/linux/netdevice.h", directory: "/home/lizy2001/genbc/linux")
!32 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!33 = !{!34, !35, !36}
!34 = !DIEnumerator(name: "__NETDEV_TX_MIN", value: -2147483648)
!35 = !DIEnumerator(name: "NETDEV_TX_OK", value: 0)
!36 = !DIEnumerator(name: "NETDEV_TX_BUSY", value: 16)
!37 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "tc_setup_type", file: !31, line: 836, baseType: !7, size: 32, elements: !38)
!38 = !{!39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56}
!39 = !DIEnumerator(name: "TC_SETUP_QDISC_MQPRIO", value: 0, isUnsigned: true)
!40 = !DIEnumerator(name: "TC_SETUP_CLSU32", value: 1, isUnsigned: true)
!41 = !DIEnumerator(name: "TC_SETUP_CLSFLOWER", value: 2, isUnsigned: true)
!42 = !DIEnumerator(name: "TC_SETUP_CLSMATCHALL", value: 3, isUnsigned: true)
!43 = !DIEnumerator(name: "TC_SETUP_CLSBPF", value: 4, isUnsigned: true)
!44 = !DIEnumerator(name: "TC_SETUP_BLOCK", value: 5, isUnsigned: true)
!45 = !DIEnumerator(name: "TC_SETUP_QDISC_CBS", value: 6, isUnsigned: true)
!46 = !DIEnumerator(name: "TC_SETUP_QDISC_RED", value: 7, isUnsigned: true)
!47 = !DIEnumerator(name: "TC_SETUP_QDISC_PRIO", value: 8, isUnsigned: true)
!48 = !DIEnumerator(name: "TC_SETUP_QDISC_MQ", value: 9, isUnsigned: true)
!49 = !DIEnumerator(name: "TC_SETUP_QDISC_ETF", value: 10, isUnsigned: true)
!50 = !DIEnumerator(name: "TC_SETUP_ROOT_QDISC", value: 11, isUnsigned: true)
!51 = !DIEnumerator(name: "TC_SETUP_QDISC_GRED", value: 12, isUnsigned: true)
!52 = !DIEnumerator(name: "TC_SETUP_QDISC_TAPRIO", value: 13, isUnsigned: true)
!53 = !DIEnumerator(name: "TC_SETUP_FT", value: 14, isUnsigned: true)
!54 = !DIEnumerator(name: "TC_SETUP_QDISC_ETS", value: 15, isUnsigned: true)
!55 = !DIEnumerator(name: "TC_SETUP_QDISC_TBF", value: 16, isUnsigned: true)
!56 = !DIEnumerator(name: "TC_SETUP_QDISC_FIFO", value: 17, isUnsigned: true)
!57 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "bpf_netdev_command", file: !31, line: 860, baseType: !7, size: 32, elements: !58)
!58 = !{!59, !60, !61, !62, !63}
!59 = !DIEnumerator(name: "XDP_SETUP_PROG", value: 0, isUnsigned: true)
!60 = !DIEnumerator(name: "XDP_SETUP_PROG_HW", value: 1, isUnsigned: true)
!61 = !DIEnumerator(name: "BPF_OFFLOAD_MAP_ALLOC", value: 2, isUnsigned: true)
!62 = !DIEnumerator(name: "BPF_OFFLOAD_MAP_FREE", value: 3, isUnsigned: true)
!63 = !DIEnumerator(name: "XDP_SETUP_XSK_POOL", value: 4, isUnsigned: true)
!64 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "bpf_reg_type", file: !65, line: 369, baseType: !7, size: 32, elements: !66)
!65 = !DIFile(filename: "./include/linux/bpf.h", directory: "/home/lizy2001/genbc/linux")
!66 = !{!67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94}
!67 = !DIEnumerator(name: "NOT_INIT", value: 0, isUnsigned: true)
!68 = !DIEnumerator(name: "SCALAR_VALUE", value: 1, isUnsigned: true)
!69 = !DIEnumerator(name: "PTR_TO_CTX", value: 2, isUnsigned: true)
!70 = !DIEnumerator(name: "CONST_PTR_TO_MAP", value: 3, isUnsigned: true)
!71 = !DIEnumerator(name: "PTR_TO_MAP_VALUE", value: 4, isUnsigned: true)
!72 = !DIEnumerator(name: "PTR_TO_MAP_VALUE_OR_NULL", value: 5, isUnsigned: true)
!73 = !DIEnumerator(name: "PTR_TO_STACK", value: 6, isUnsigned: true)
!74 = !DIEnumerator(name: "PTR_TO_PACKET_META", value: 7, isUnsigned: true)
!75 = !DIEnumerator(name: "PTR_TO_PACKET", value: 8, isUnsigned: true)
!76 = !DIEnumerator(name: "PTR_TO_PACKET_END", value: 9, isUnsigned: true)
!77 = !DIEnumerator(name: "PTR_TO_FLOW_KEYS", value: 10, isUnsigned: true)
!78 = !DIEnumerator(name: "PTR_TO_SOCKET", value: 11, isUnsigned: true)
!79 = !DIEnumerator(name: "PTR_TO_SOCKET_OR_NULL", value: 12, isUnsigned: true)
!80 = !DIEnumerator(name: "PTR_TO_SOCK_COMMON", value: 13, isUnsigned: true)
!81 = !DIEnumerator(name: "PTR_TO_SOCK_COMMON_OR_NULL", value: 14, isUnsigned: true)
!82 = !DIEnumerator(name: "PTR_TO_TCP_SOCK", value: 15, isUnsigned: true)
!83 = !DIEnumerator(name: "PTR_TO_TCP_SOCK_OR_NULL", value: 16, isUnsigned: true)
!84 = !DIEnumerator(name: "PTR_TO_TP_BUFFER", value: 17, isUnsigned: true)
!85 = !DIEnumerator(name: "PTR_TO_XDP_SOCK", value: 18, isUnsigned: true)
!86 = !DIEnumerator(name: "PTR_TO_BTF_ID", value: 19, isUnsigned: true)
!87 = !DIEnumerator(name: "PTR_TO_BTF_ID_OR_NULL", value: 20, isUnsigned: true)
!88 = !DIEnumerator(name: "PTR_TO_MEM", value: 21, isUnsigned: true)
!89 = !DIEnumerator(name: "PTR_TO_MEM_OR_NULL", value: 22, isUnsigned: true)
!90 = !DIEnumerator(name: "PTR_TO_RDONLY_BUF", value: 23, isUnsigned: true)
!91 = !DIEnumerator(name: "PTR_TO_RDONLY_BUF_OR_NULL", value: 24, isUnsigned: true)
!92 = !DIEnumerator(name: "PTR_TO_RDWR_BUF", value: 25, isUnsigned: true)
!93 = !DIEnumerator(name: "PTR_TO_RDWR_BUF_OR_NULL", value: 26, isUnsigned: true)
!94 = !DIEnumerator(name: "PTR_TO_PERCPU_BTF_ID", value: 27, isUnsigned: true)
!95 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "bpf_prog_type", file: !96, line: 170, baseType: !7, size: 32, elements: !97)
!96 = !DIFile(filename: "./include/uapi/linux/bpf.h", directory: "/home/lizy2001/genbc/linux")
!97 = !{!98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128}
!98 = !DIEnumerator(name: "BPF_PROG_TYPE_UNSPEC", value: 0, isUnsigned: true)
!99 = !DIEnumerator(name: "BPF_PROG_TYPE_SOCKET_FILTER", value: 1, isUnsigned: true)
!100 = !DIEnumerator(name: "BPF_PROG_TYPE_KPROBE", value: 2, isUnsigned: true)
!101 = !DIEnumerator(name: "BPF_PROG_TYPE_SCHED_CLS", value: 3, isUnsigned: true)
!102 = !DIEnumerator(name: "BPF_PROG_TYPE_SCHED_ACT", value: 4, isUnsigned: true)
!103 = !DIEnumerator(name: "BPF_PROG_TYPE_TRACEPOINT", value: 5, isUnsigned: true)
!104 = !DIEnumerator(name: "BPF_PROG_TYPE_XDP", value: 6, isUnsigned: true)
!105 = !DIEnumerator(name: "BPF_PROG_TYPE_PERF_EVENT", value: 7, isUnsigned: true)
!106 = !DIEnumerator(name: "BPF_PROG_TYPE_CGROUP_SKB", value: 8, isUnsigned: true)
!107 = !DIEnumerator(name: "BPF_PROG_TYPE_CGROUP_SOCK", value: 9, isUnsigned: true)
!108 = !DIEnumerator(name: "BPF_PROG_TYPE_LWT_IN", value: 10, isUnsigned: true)
!109 = !DIEnumerator(name: "BPF_PROG_TYPE_LWT_OUT", value: 11, isUnsigned: true)
!110 = !DIEnumerator(name: "BPF_PROG_TYPE_LWT_XMIT", value: 12, isUnsigned: true)
!111 = !DIEnumerator(name: "BPF_PROG_TYPE_SOCK_OPS", value: 13, isUnsigned: true)
!112 = !DIEnumerator(name: "BPF_PROG_TYPE_SK_SKB", value: 14, isUnsigned: true)
!113 = !DIEnumerator(name: "BPF_PROG_TYPE_CGROUP_DEVICE", value: 15, isUnsigned: true)
!114 = !DIEnumerator(name: "BPF_PROG_TYPE_SK_MSG", value: 16, isUnsigned: true)
!115 = !DIEnumerator(name: "BPF_PROG_TYPE_RAW_TRACEPOINT", value: 17, isUnsigned: true)
!116 = !DIEnumerator(name: "BPF_PROG_TYPE_CGROUP_SOCK_ADDR", value: 18, isUnsigned: true)
!117 = !DIEnumerator(name: "BPF_PROG_TYPE_LWT_SEG6LOCAL", value: 19, isUnsigned: true)
!118 = !DIEnumerator(name: "BPF_PROG_TYPE_LIRC_MODE2", value: 20, isUnsigned: true)
!119 = !DIEnumerator(name: "BPF_PROG_TYPE_SK_REUSEPORT", value: 21, isUnsigned: true)
!120 = !DIEnumerator(name: "BPF_PROG_TYPE_FLOW_DISSECTOR", value: 22, isUnsigned: true)
!121 = !DIEnumerator(name: "BPF_PROG_TYPE_CGROUP_SYSCTL", value: 23, isUnsigned: true)
!122 = !DIEnumerator(name: "BPF_PROG_TYPE_RAW_TRACEPOINT_WRITABLE", value: 24, isUnsigned: true)
!123 = !DIEnumerator(name: "BPF_PROG_TYPE_CGROUP_SOCKOPT", value: 25, isUnsigned: true)
!124 = !DIEnumerator(name: "BPF_PROG_TYPE_TRACING", value: 26, isUnsigned: true)
!125 = !DIEnumerator(name: "BPF_PROG_TYPE_STRUCT_OPS", value: 27, isUnsigned: true)
!126 = !DIEnumerator(name: "BPF_PROG_TYPE_EXT", value: 28, isUnsigned: true)
!127 = !DIEnumerator(name: "BPF_PROG_TYPE_LSM", value: 29, isUnsigned: true)
!128 = !DIEnumerator(name: "BPF_PROG_TYPE_SK_LOOKUP", value: 30, isUnsigned: true)
!129 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "bpf_attach_type", file: !96, line: 204, baseType: !7, size: 32, elements: !130)
!130 = !{!131, !132, !133, !134, !135, !136, !137, !138, !139, !140, !141, !142, !143, !144, !145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169}
!131 = !DIEnumerator(name: "BPF_CGROUP_INET_INGRESS", value: 0, isUnsigned: true)
!132 = !DIEnumerator(name: "BPF_CGROUP_INET_EGRESS", value: 1, isUnsigned: true)
!133 = !DIEnumerator(name: "BPF_CGROUP_INET_SOCK_CREATE", value: 2, isUnsigned: true)
!134 = !DIEnumerator(name: "BPF_CGROUP_SOCK_OPS", value: 3, isUnsigned: true)
!135 = !DIEnumerator(name: "BPF_SK_SKB_STREAM_PARSER", value: 4, isUnsigned: true)
!136 = !DIEnumerator(name: "BPF_SK_SKB_STREAM_VERDICT", value: 5, isUnsigned: true)
!137 = !DIEnumerator(name: "BPF_CGROUP_DEVICE", value: 6, isUnsigned: true)
!138 = !DIEnumerator(name: "BPF_SK_MSG_VERDICT", value: 7, isUnsigned: true)
!139 = !DIEnumerator(name: "BPF_CGROUP_INET4_BIND", value: 8, isUnsigned: true)
!140 = !DIEnumerator(name: "BPF_CGROUP_INET6_BIND", value: 9, isUnsigned: true)
!141 = !DIEnumerator(name: "BPF_CGROUP_INET4_CONNECT", value: 10, isUnsigned: true)
!142 = !DIEnumerator(name: "BPF_CGROUP_INET6_CONNECT", value: 11, isUnsigned: true)
!143 = !DIEnumerator(name: "BPF_CGROUP_INET4_POST_BIND", value: 12, isUnsigned: true)
!144 = !DIEnumerator(name: "BPF_CGROUP_INET6_POST_BIND", value: 13, isUnsigned: true)
!145 = !DIEnumerator(name: "BPF_CGROUP_UDP4_SENDMSG", value: 14, isUnsigned: true)
!146 = !DIEnumerator(name: "BPF_CGROUP_UDP6_SENDMSG", value: 15, isUnsigned: true)
!147 = !DIEnumerator(name: "BPF_LIRC_MODE2", value: 16, isUnsigned: true)
!148 = !DIEnumerator(name: "BPF_FLOW_DISSECTOR", value: 17, isUnsigned: true)
!149 = !DIEnumerator(name: "BPF_CGROUP_SYSCTL", value: 18, isUnsigned: true)
!150 = !DIEnumerator(name: "BPF_CGROUP_UDP4_RECVMSG", value: 19, isUnsigned: true)
!151 = !DIEnumerator(name: "BPF_CGROUP_UDP6_RECVMSG", value: 20, isUnsigned: true)
!152 = !DIEnumerator(name: "BPF_CGROUP_GETSOCKOPT", value: 21, isUnsigned: true)
!153 = !DIEnumerator(name: "BPF_CGROUP_SETSOCKOPT", value: 22, isUnsigned: true)
!154 = !DIEnumerator(name: "BPF_TRACE_RAW_TP", value: 23, isUnsigned: true)
!155 = !DIEnumerator(name: "BPF_TRACE_FENTRY", value: 24, isUnsigned: true)
!156 = !DIEnumerator(name: "BPF_TRACE_FEXIT", value: 25, isUnsigned: true)
!157 = !DIEnumerator(name: "BPF_MODIFY_RETURN", value: 26, isUnsigned: true)
!158 = !DIEnumerator(name: "BPF_LSM_MAC", value: 27, isUnsigned: true)
!159 = !DIEnumerator(name: "BPF_TRACE_ITER", value: 28, isUnsigned: true)
!160 = !DIEnumerator(name: "BPF_CGROUP_INET4_GETPEERNAME", value: 29, isUnsigned: true)
!161 = !DIEnumerator(name: "BPF_CGROUP_INET6_GETPEERNAME", value: 30, isUnsigned: true)
!162 = !DIEnumerator(name: "BPF_CGROUP_INET4_GETSOCKNAME", value: 31, isUnsigned: true)
!163 = !DIEnumerator(name: "BPF_CGROUP_INET6_GETSOCKNAME", value: 32, isUnsigned: true)
!164 = !DIEnumerator(name: "BPF_XDP_DEVMAP", value: 33, isUnsigned: true)
!165 = !DIEnumerator(name: "BPF_CGROUP_INET_SOCK_RELEASE", value: 34, isUnsigned: true)
!166 = !DIEnumerator(name: "BPF_XDP_CPUMAP", value: 35, isUnsigned: true)
!167 = !DIEnumerator(name: "BPF_SK_LOOKUP", value: 36, isUnsigned: true)
!168 = !DIEnumerator(name: "BPF_XDP", value: 37, isUnsigned: true)
!169 = !DIEnumerator(name: "__MAX_BPF_ATTACH_TYPE", value: 38, isUnsigned: true)
!170 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "bpf_tramp_prog_type", file: !65, line: 578, baseType: !7, size: 32, elements: !171)
!171 = !{!172, !173, !174, !175, !176}
!172 = !DIEnumerator(name: "BPF_TRAMP_FENTRY", value: 0, isUnsigned: true)
!173 = !DIEnumerator(name: "BPF_TRAMP_FEXIT", value: 1, isUnsigned: true)
!174 = !DIEnumerator(name: "BPF_TRAMP_MODIFY_RETURN", value: 2, isUnsigned: true)
!175 = !DIEnumerator(name: "BPF_TRAMP_MAX", value: 3, isUnsigned: true)
!176 = !DIEnumerator(name: "BPF_TRAMP_REPLACE", value: 4, isUnsigned: true)
!177 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "bpf_map_type", file: !96, line: 130, baseType: !7, size: 32, elements: !178)
!178 = !{!179, !180, !181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207}
!179 = !DIEnumerator(name: "BPF_MAP_TYPE_UNSPEC", value: 0, isUnsigned: true)
!180 = !DIEnumerator(name: "BPF_MAP_TYPE_HASH", value: 1, isUnsigned: true)
!181 = !DIEnumerator(name: "BPF_MAP_TYPE_ARRAY", value: 2, isUnsigned: true)
!182 = !DIEnumerator(name: "BPF_MAP_TYPE_PROG_ARRAY", value: 3, isUnsigned: true)
!183 = !DIEnumerator(name: "BPF_MAP_TYPE_PERF_EVENT_ARRAY", value: 4, isUnsigned: true)
!184 = !DIEnumerator(name: "BPF_MAP_TYPE_PERCPU_HASH", value: 5, isUnsigned: true)
!185 = !DIEnumerator(name: "BPF_MAP_TYPE_PERCPU_ARRAY", value: 6, isUnsigned: true)
!186 = !DIEnumerator(name: "BPF_MAP_TYPE_STACK_TRACE", value: 7, isUnsigned: true)
!187 = !DIEnumerator(name: "BPF_MAP_TYPE_CGROUP_ARRAY", value: 8, isUnsigned: true)
!188 = !DIEnumerator(name: "BPF_MAP_TYPE_LRU_HASH", value: 9, isUnsigned: true)
!189 = !DIEnumerator(name: "BPF_MAP_TYPE_LRU_PERCPU_HASH", value: 10, isUnsigned: true)
!190 = !DIEnumerator(name: "BPF_MAP_TYPE_LPM_TRIE", value: 11, isUnsigned: true)
!191 = !DIEnumerator(name: "BPF_MAP_TYPE_ARRAY_OF_MAPS", value: 12, isUnsigned: true)
!192 = !DIEnumerator(name: "BPF_MAP_TYPE_HASH_OF_MAPS", value: 13, isUnsigned: true)
!193 = !DIEnumerator(name: "BPF_MAP_TYPE_DEVMAP", value: 14, isUnsigned: true)
!194 = !DIEnumerator(name: "BPF_MAP_TYPE_SOCKMAP", value: 15, isUnsigned: true)
!195 = !DIEnumerator(name: "BPF_MAP_TYPE_CPUMAP", value: 16, isUnsigned: true)
!196 = !DIEnumerator(name: "BPF_MAP_TYPE_XSKMAP", value: 17, isUnsigned: true)
!197 = !DIEnumerator(name: "BPF_MAP_TYPE_SOCKHASH", value: 18, isUnsigned: true)
!198 = !DIEnumerator(name: "BPF_MAP_TYPE_CGROUP_STORAGE", value: 19, isUnsigned: true)
!199 = !DIEnumerator(name: "BPF_MAP_TYPE_REUSEPORT_SOCKARRAY", value: 20, isUnsigned: true)
!200 = !DIEnumerator(name: "BPF_MAP_TYPE_PERCPU_CGROUP_STORAGE", value: 21, isUnsigned: true)
!201 = !DIEnumerator(name: "BPF_MAP_TYPE_QUEUE", value: 22, isUnsigned: true)
!202 = !DIEnumerator(name: "BPF_MAP_TYPE_STACK", value: 23, isUnsigned: true)
!203 = !DIEnumerator(name: "BPF_MAP_TYPE_SK_STORAGE", value: 24, isUnsigned: true)
!204 = !DIEnumerator(name: "BPF_MAP_TYPE_DEVMAP_HASH", value: 25, isUnsigned: true)
!205 = !DIEnumerator(name: "BPF_MAP_TYPE_STRUCT_OPS", value: 26, isUnsigned: true)
!206 = !DIEnumerator(name: "BPF_MAP_TYPE_RINGBUF", value: 27, isUnsigned: true)
!207 = !DIEnumerator(name: "BPF_MAP_TYPE_INODE_STORAGE", value: 28, isUnsigned: true)
!208 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ethtool_link_ext_state", file: !209, line: 585, baseType: !7, size: 32, elements: !210)
!209 = !DIFile(filename: "./include/uapi/linux/ethtool.h", directory: "/home/lizy2001/genbc/linux")
!210 = !{!211, !212, !213, !214, !215, !216, !217, !218, !219, !220}
!211 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_AUTONEG", value: 0, isUnsigned: true)
!212 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_LINK_TRAINING_FAILURE", value: 1, isUnsigned: true)
!213 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_LINK_LOGICAL_MISMATCH", value: 2, isUnsigned: true)
!214 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_BAD_SIGNAL_INTEGRITY", value: 3, isUnsigned: true)
!215 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_NO_CABLE", value: 4, isUnsigned: true)
!216 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_CABLE_ISSUE", value: 5, isUnsigned: true)
!217 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_EEPROM_ISSUE", value: 6, isUnsigned: true)
!218 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_CALIBRATION_FAILURE", value: 7, isUnsigned: true)
!219 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_POWER_BUDGET_EXCEEDED", value: 8, isUnsigned: true)
!220 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_OVERHEAT", value: 9, isUnsigned: true)
!221 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ethtool_link_ext_substate_autoneg", file: !209, line: 602, baseType: !7, size: 32, elements: !222)
!222 = !{!223, !224, !225, !226, !227, !228}
!223 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_AN_NO_PARTNER_DETECTED", value: 1, isUnsigned: true)
!224 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_AN_ACK_NOT_RECEIVED", value: 2, isUnsigned: true)
!225 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_AN_NEXT_PAGE_EXCHANGE_FAILED", value: 3, isUnsigned: true)
!226 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_AN_NO_PARTNER_DETECTED_FORCE_MODE", value: 4, isUnsigned: true)
!227 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_AN_FEC_MISMATCH_DURING_OVERRIDE", value: 5, isUnsigned: true)
!228 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_AN_NO_HCD", value: 6, isUnsigned: true)
!229 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ethtool_link_ext_substate_link_training", file: !209, line: 615, baseType: !7, size: 32, elements: !230)
!230 = !{!231, !232, !233, !234}
!231 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LT_KR_FRAME_LOCK_NOT_ACQUIRED", value: 1, isUnsigned: true)
!232 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LT_KR_LINK_INHIBIT_TIMEOUT", value: 2, isUnsigned: true)
!233 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LT_KR_LINK_PARTNER_DID_NOT_SET_RECEIVER_READY", value: 3, isUnsigned: true)
!234 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LT_REMOTE_FAULT", value: 4, isUnsigned: true)
!235 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ethtool_link_ext_substate_link_logical_mismatch", file: !209, line: 626, baseType: !7, size: 32, elements: !236)
!236 = !{!237, !238, !239, !240, !241}
!237 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LLM_PCS_DID_NOT_ACQUIRE_BLOCK_LOCK", value: 1, isUnsigned: true)
!238 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LLM_PCS_DID_NOT_ACQUIRE_AM_LOCK", value: 2, isUnsigned: true)
!239 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LLM_PCS_DID_NOT_GET_ALIGN_STATUS", value: 3, isUnsigned: true)
!240 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LLM_FC_FEC_IS_NOT_LOCKED", value: 4, isUnsigned: true)
!241 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LLM_RS_FEC_IS_NOT_LOCKED", value: 5, isUnsigned: true)
!242 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ethtool_link_ext_substate_bad_signal_integrity", file: !209, line: 638, baseType: !7, size: 32, elements: !243)
!243 = !{!244, !245}
!244 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_BSI_LARGE_NUMBER_OF_PHYSICAL_ERRORS", value: 1, isUnsigned: true)
!245 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_BSI_UNSUPPORTED_RATE", value: 2, isUnsigned: true)
!246 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ethtool_link_ext_substate_cable_issue", file: !209, line: 647, baseType: !7, size: 32, elements: !247)
!247 = !{!248, !249}
!248 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_CI_UNSUPPORTED_CABLE", value: 1, isUnsigned: true)
!249 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_CI_CABLE_TEST_FAILURE", value: 2, isUnsigned: true)
!250 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ethtool_phys_id_state", file: !251, line: 54, baseType: !7, size: 32, elements: !252)
!251 = !DIFile(filename: "./include/linux/ethtool.h", directory: "/home/lizy2001/genbc/linux")
!252 = !{!253, !254, !255, !256}
!253 = !DIEnumerator(name: "ETHTOOL_ID_INACTIVE", value: 0, isUnsigned: true)
!254 = !DIEnumerator(name: "ETHTOOL_ID_ACTIVE", value: 1, isUnsigned: true)
!255 = !DIEnumerator(name: "ETHTOOL_ID_ON", value: 2, isUnsigned: true)
!256 = !DIEnumerator(name: "ETHTOOL_ID_OFF", value: 3, isUnsigned: true)
!257 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rx_handler_result", file: !31, line: 423, baseType: !7, size: 32, elements: !258)
!258 = !{!259, !260, !261, !262}
!259 = !DIEnumerator(name: "RX_HANDLER_CONSUMED", value: 0, isUnsigned: true)
!260 = !DIEnumerator(name: "RX_HANDLER_ANOTHER", value: 1, isUnsigned: true)
!261 = !DIEnumerator(name: "RX_HANDLER_EXACT", value: 2, isUnsigned: true)
!262 = !DIEnumerator(name: "RX_HANDLER_PASS", value: 3, isUnsigned: true)
!263 = !DICompositeType(tag: DW_TAG_enumeration_type, scope: !264, file: !31, line: 2085, baseType: !7, size: 32, elements: !7045)
!264 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "net_device", file: !31, line: 1858, size: 15808, elements: !265)
!265 = !{!266, !271, !294, !311, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !328, !336, !337, !338, !339, !340, !341, !342, !343, !344, !370, !380, !381, !382, !387, !388, !392, !395, !5518, !6034, !6038, !6078, !6079, !6080, !6081, !6082, !6083, !6084, !6085, !6086, !6087, !6088, !6089, !6090, !6091, !6092, !6093, !6094, !6095, !6096, !6097, !6098, !6099, !6100, !6101, !6102, !6103, !6104, !6109, !6110, !6111, !6391, !6392, !6393, !6394, !6397, !6400, !6403, !6406, !6409, !6410, !6423, !6424, !6425, !6426, !6427, !6428, !6435, !6436, !6470, !6471, !6472, !6473, !6474, !6475, !6476, !6477, !6478, !6481, !6482, !6483, !6484, !6485, !6486, !6487, !6488, !6489, !6494, !6495, !6496, !6501, !6538, !7000, !7002, !7003, !7007, !7008, !7009, !7010, !7016, !7018, !7021, !7024, !7026, !7027, !7028, !7029, !7030, !7034, !7037}
!266 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !264, file: !31, line: 1859, baseType: !267, size: 128)
!267 = !DICompositeType(tag: DW_TAG_array_type, baseType: !268, size: 128, elements: !269)
!268 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!269 = !{!270}
!270 = !DISubrange(count: 16)
!271 = !DIDerivedType(tag: DW_TAG_member, name: "name_node", scope: !264, file: !31, line: 1860, baseType: !272, size: 64, offset: 128)
!272 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !273, size: 64)
!273 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netdev_name_node", file: !31, line: 938, size: 384, elements: !274)
!274 = !{!275, !283, !289, !291}
!275 = !DIDerivedType(tag: DW_TAG_member, name: "hlist", scope: !273, file: !31, line: 939, baseType: !276, size: 128)
!276 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_node", file: !277, line: 186, size: 128, elements: !278)
!277 = !DIFile(filename: "./include/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!278 = !{!279, !281}
!279 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !276, file: !277, line: 187, baseType: !280, size: 64)
!280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !276, size: 64)
!281 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !276, file: !277, line: 187, baseType: !282, size: 64, offset: 64)
!282 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !280, size: 64)
!283 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !273, file: !31, line: 940, baseType: !284, size: 128, offset: 128)
!284 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_head", file: !277, line: 178, size: 128, elements: !285)
!285 = !{!286, !288}
!286 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !284, file: !277, line: 179, baseType: !287, size: 64)
!287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !284, size: 64)
!288 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !284, file: !277, line: 179, baseType: !287, size: 64, offset: 64)
!289 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !273, file: !31, line: 941, baseType: !290, size: 64, offset: 256)
!290 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !264, size: 64)
!291 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !273, file: !31, line: 942, baseType: !292, size: 64, offset: 320)
!292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !293, size: 64)
!293 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !268)
!294 = !DIDerivedType(tag: DW_TAG_member, name: "ifalias", scope: !264, file: !31, line: 1861, baseType: !295, size: 64, offset: 192)
!295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !296, size: 64)
!296 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_ifalias", file: !31, line: 930, size: 128, elements: !297)
!297 = !{!298, !307}
!298 = !DIDerivedType(tag: DW_TAG_member, name: "rcuhead", scope: !296, file: !31, line: 931, baseType: !299, size: 128, align: 64)
!299 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "callback_head", file: !277, line: 216, size: 128, align: 64, elements: !300)
!300 = !{!301, !303}
!301 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !299, file: !277, line: 217, baseType: !302, size: 64)
!302 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !299, size: 64)
!303 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !299, file: !277, line: 218, baseType: !304, size: 64, offset: 64)
!304 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !305, size: 64)
!305 = !DISubroutineType(types: !306)
!306 = !{null, !302}
!307 = !DIDerivedType(tag: DW_TAG_member, name: "ifalias", scope: !296, file: !31, line: 932, baseType: !308, offset: 128)
!308 = !DICompositeType(tag: DW_TAG_array_type, baseType: !268, elements: !309)
!309 = !{!310}
!310 = !DISubrange(count: -1)
!311 = !DIDerivedType(tag: DW_TAG_member, name: "mem_end", scope: !264, file: !31, line: 1866, baseType: !312, size: 64, offset: 256)
!312 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!313 = !DIDerivedType(tag: DW_TAG_member, name: "mem_start", scope: !264, file: !31, line: 1867, baseType: !312, size: 64, offset: 320)
!314 = !DIDerivedType(tag: DW_TAG_member, name: "base_addr", scope: !264, file: !31, line: 1868, baseType: !312, size: 64, offset: 384)
!315 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !264, file: !31, line: 1869, baseType: !32, size: 32, offset: 448)
!316 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !264, file: !31, line: 1877, baseType: !312, size: 64, offset: 512)
!317 = !DIDerivedType(tag: DW_TAG_member, name: "dev_list", scope: !264, file: !31, line: 1879, baseType: !284, size: 128, offset: 576)
!318 = !DIDerivedType(tag: DW_TAG_member, name: "napi_list", scope: !264, file: !31, line: 1880, baseType: !284, size: 128, offset: 704)
!319 = !DIDerivedType(tag: DW_TAG_member, name: "unreg_list", scope: !264, file: !31, line: 1881, baseType: !284, size: 128, offset: 832)
!320 = !DIDerivedType(tag: DW_TAG_member, name: "close_list", scope: !264, file: !31, line: 1882, baseType: !284, size: 128, offset: 960)
!321 = !DIDerivedType(tag: DW_TAG_member, name: "ptype_all", scope: !264, file: !31, line: 1883, baseType: !284, size: 128, offset: 1088)
!322 = !DIDerivedType(tag: DW_TAG_member, name: "ptype_specific", scope: !264, file: !31, line: 1884, baseType: !284, size: 128, offset: 1216)
!323 = !DIDerivedType(tag: DW_TAG_member, name: "adj_list", scope: !264, file: !31, line: 1889, baseType: !324, size: 256, offset: 1344)
!324 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !264, file: !31, line: 1886, size: 256, elements: !325)
!325 = !{!326, !327}
!326 = !DIDerivedType(tag: DW_TAG_member, name: "upper", scope: !324, file: !31, line: 1887, baseType: !284, size: 128)
!327 = !DIDerivedType(tag: DW_TAG_member, name: "lower", scope: !324, file: !31, line: 1888, baseType: !284, size: 128, offset: 128)
!328 = !DIDerivedType(tag: DW_TAG_member, name: "features", scope: !264, file: !31, line: 1891, baseType: !329, size: 64, offset: 1600)
!329 = !DIDerivedType(tag: DW_TAG_typedef, name: "netdev_features_t", file: !330, line: 12, baseType: !331)
!330 = !DIFile(filename: "./include/linux/netdev_features.h", directory: "/home/lizy2001/genbc/linux")
!331 = !DIDerivedType(tag: DW_TAG_typedef, name: "u64", file: !332, line: 23, baseType: !333)
!332 = !DIFile(filename: "./include/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!333 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u64", file: !334, line: 31, baseType: !335)
!334 = !DIFile(filename: "./include/uapi/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!335 = !DIBasicType(name: "long long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!336 = !DIDerivedType(tag: DW_TAG_member, name: "hw_features", scope: !264, file: !31, line: 1892, baseType: !329, size: 64, offset: 1664)
!337 = !DIDerivedType(tag: DW_TAG_member, name: "wanted_features", scope: !264, file: !31, line: 1893, baseType: !329, size: 64, offset: 1728)
!338 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_features", scope: !264, file: !31, line: 1894, baseType: !329, size: 64, offset: 1792)
!339 = !DIDerivedType(tag: DW_TAG_member, name: "hw_enc_features", scope: !264, file: !31, line: 1895, baseType: !329, size: 64, offset: 1856)
!340 = !DIDerivedType(tag: DW_TAG_member, name: "mpls_features", scope: !264, file: !31, line: 1896, baseType: !329, size: 64, offset: 1920)
!341 = !DIDerivedType(tag: DW_TAG_member, name: "gso_partial_features", scope: !264, file: !31, line: 1897, baseType: !329, size: 64, offset: 1984)
!342 = !DIDerivedType(tag: DW_TAG_member, name: "ifindex", scope: !264, file: !31, line: 1899, baseType: !32, size: 32, offset: 2048)
!343 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !264, file: !31, line: 1900, baseType: !32, size: 32, offset: 2080)
!344 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !264, file: !31, line: 1902, baseType: !345, size: 1472, offset: 2112)
!345 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "net_device_stats", file: !31, line: 169, size: 1472, elements: !346)
!346 = !{!347, !348, !349, !350, !351, !352, !353, !354, !355, !356, !357, !358, !359, !360, !361, !362, !363, !364, !365, !366, !367, !368, !369}
!347 = !DIDerivedType(tag: DW_TAG_member, name: "rx_packets", scope: !345, file: !31, line: 170, baseType: !312, size: 64)
!348 = !DIDerivedType(tag: DW_TAG_member, name: "tx_packets", scope: !345, file: !31, line: 171, baseType: !312, size: 64, offset: 64)
!349 = !DIDerivedType(tag: DW_TAG_member, name: "rx_bytes", scope: !345, file: !31, line: 172, baseType: !312, size: 64, offset: 128)
!350 = !DIDerivedType(tag: DW_TAG_member, name: "tx_bytes", scope: !345, file: !31, line: 173, baseType: !312, size: 64, offset: 192)
!351 = !DIDerivedType(tag: DW_TAG_member, name: "rx_errors", scope: !345, file: !31, line: 174, baseType: !312, size: 64, offset: 256)
!352 = !DIDerivedType(tag: DW_TAG_member, name: "tx_errors", scope: !345, file: !31, line: 175, baseType: !312, size: 64, offset: 320)
!353 = !DIDerivedType(tag: DW_TAG_member, name: "rx_dropped", scope: !345, file: !31, line: 176, baseType: !312, size: 64, offset: 384)
!354 = !DIDerivedType(tag: DW_TAG_member, name: "tx_dropped", scope: !345, file: !31, line: 177, baseType: !312, size: 64, offset: 448)
!355 = !DIDerivedType(tag: DW_TAG_member, name: "multicast", scope: !345, file: !31, line: 178, baseType: !312, size: 64, offset: 512)
!356 = !DIDerivedType(tag: DW_TAG_member, name: "collisions", scope: !345, file: !31, line: 179, baseType: !312, size: 64, offset: 576)
!357 = !DIDerivedType(tag: DW_TAG_member, name: "rx_length_errors", scope: !345, file: !31, line: 180, baseType: !312, size: 64, offset: 640)
!358 = !DIDerivedType(tag: DW_TAG_member, name: "rx_over_errors", scope: !345, file: !31, line: 181, baseType: !312, size: 64, offset: 704)
!359 = !DIDerivedType(tag: DW_TAG_member, name: "rx_crc_errors", scope: !345, file: !31, line: 182, baseType: !312, size: 64, offset: 768)
!360 = !DIDerivedType(tag: DW_TAG_member, name: "rx_frame_errors", scope: !345, file: !31, line: 183, baseType: !312, size: 64, offset: 832)
!361 = !DIDerivedType(tag: DW_TAG_member, name: "rx_fifo_errors", scope: !345, file: !31, line: 184, baseType: !312, size: 64, offset: 896)
!362 = !DIDerivedType(tag: DW_TAG_member, name: "rx_missed_errors", scope: !345, file: !31, line: 185, baseType: !312, size: 64, offset: 960)
!363 = !DIDerivedType(tag: DW_TAG_member, name: "tx_aborted_errors", scope: !345, file: !31, line: 186, baseType: !312, size: 64, offset: 1024)
!364 = !DIDerivedType(tag: DW_TAG_member, name: "tx_carrier_errors", scope: !345, file: !31, line: 187, baseType: !312, size: 64, offset: 1088)
!365 = !DIDerivedType(tag: DW_TAG_member, name: "tx_fifo_errors", scope: !345, file: !31, line: 188, baseType: !312, size: 64, offset: 1152)
!366 = !DIDerivedType(tag: DW_TAG_member, name: "tx_heartbeat_errors", scope: !345, file: !31, line: 189, baseType: !312, size: 64, offset: 1216)
!367 = !DIDerivedType(tag: DW_TAG_member, name: "tx_window_errors", scope: !345, file: !31, line: 190, baseType: !312, size: 64, offset: 1280)
!368 = !DIDerivedType(tag: DW_TAG_member, name: "rx_compressed", scope: !345, file: !31, line: 191, baseType: !312, size: 64, offset: 1344)
!369 = !DIDerivedType(tag: DW_TAG_member, name: "tx_compressed", scope: !345, file: !31, line: 192, baseType: !312, size: 64, offset: 1408)
!370 = !DIDerivedType(tag: DW_TAG_member, name: "rx_dropped", scope: !264, file: !31, line: 1904, baseType: !371, size: 64, offset: 3584)
!371 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_long_t", file: !372, line: 13, baseType: !373)
!372 = !DIFile(filename: "./include/asm-generic/atomic-long.h", directory: "/home/lizy2001/genbc/linux")
!373 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic64_t", file: !277, line: 175, baseType: !374)
!374 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !277, line: 173, size: 64, elements: !375)
!375 = !{!376}
!376 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !374, file: !277, line: 174, baseType: !377, size: 64)
!377 = !DIDerivedType(tag: DW_TAG_typedef, name: "s64", file: !332, line: 22, baseType: !378)
!378 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s64", file: !334, line: 30, baseType: !379)
!379 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!380 = !DIDerivedType(tag: DW_TAG_member, name: "tx_dropped", scope: !264, file: !31, line: 1905, baseType: !371, size: 64, offset: 3648)
!381 = !DIDerivedType(tag: DW_TAG_member, name: "rx_nohandler", scope: !264, file: !31, line: 1906, baseType: !371, size: 64, offset: 3712)
!382 = !DIDerivedType(tag: DW_TAG_member, name: "carrier_up_count", scope: !264, file: !31, line: 1909, baseType: !383, size: 32, offset: 3776)
!383 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_t", file: !277, line: 168, baseType: !384)
!384 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !277, line: 166, size: 32, elements: !385)
!385 = !{!386}
!386 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !384, file: !277, line: 167, baseType: !32, size: 32)
!387 = !DIDerivedType(tag: DW_TAG_member, name: "carrier_down_count", scope: !264, file: !31, line: 1910, baseType: !383, size: 32, offset: 3808)
!388 = !DIDerivedType(tag: DW_TAG_member, name: "wireless_handlers", scope: !264, file: !31, line: 1913, baseType: !389, size: 64, offset: 3840)
!389 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !390, size: 64)
!390 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !391)
!391 = !DICompositeType(tag: DW_TAG_structure_type, name: "iw_handler_def", file: !31, line: 1913, flags: DIFlagFwdDecl)
!392 = !DIDerivedType(tag: DW_TAG_member, name: "wireless_data", scope: !264, file: !31, line: 1914, baseType: !393, size: 64, offset: 3904)
!393 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !394, size: 64)
!394 = !DICompositeType(tag: DW_TAG_structure_type, name: "iw_public_data", file: !31, line: 1914, flags: DIFlagFwdDecl)
!395 = !DIDerivedType(tag: DW_TAG_member, name: "netdev_ops", scope: !264, file: !31, line: 1916, baseType: !396, size: 64, offset: 3968)
!396 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !397, size: 64)
!397 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !398)
!398 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "net_device_ops", file: !31, line: 1283, size: 4416, elements: !399)
!399 = !{!400, !404, !408, !409, !410, !573, !577, !582, !586, !587, !592, !593, !716, !721, !725, !731, !735, !767, !775, !779, !784, !788, !789, !795, !799, !803, !807, !808, !830, !834, !849, !860, !864, !873, !877, !878, !882, !903, !907, !911, !915, !919, !926, !930, !948, !952, !1002, !1006, !1011, !1015, !1019, !1023, !1033, !1034, !1043, !1049, !1050, !1054, !1058, !1062, !1066, !1067, !1071, !1072, !5478, !5498, !5502, !5508, !5514}
!400 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_init", scope: !398, file: !31, line: 1284, baseType: !401, size: 64)
!401 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !402, size: 64)
!402 = !DISubroutineType(types: !403)
!403 = !{!32, !290}
!404 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_uninit", scope: !398, file: !31, line: 1285, baseType: !405, size: 64, offset: 64)
!405 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !406, size: 64)
!406 = !DISubroutineType(types: !407)
!407 = !{null, !290}
!408 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_open", scope: !398, file: !31, line: 1286, baseType: !401, size: 64, offset: 128)
!409 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_stop", scope: !398, file: !31, line: 1287, baseType: !401, size: 64, offset: 192)
!410 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_start_xmit", scope: !398, file: !31, line: 1288, baseType: !411, size: 64, offset: 256)
!411 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !412, size: 64)
!412 = !DISubroutineType(types: !413)
!413 = !{!414, !415, !290}
!414 = !DIDerivedType(tag: DW_TAG_typedef, name: "netdev_tx_t", file: !31, line: 120, baseType: !30)
!415 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !416, size: 64)
!416 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sk_buff", file: !417, line: 713, size: 1600, elements: !418)
!417 = !DIFile(filename: "./include/linux/skbuff.h", directory: "/home/lizy2001/genbc/linux")
!418 = !{!419, !441, !449, !456, !460, !472, !473, !474, !477, !478, !479, !485, !486, !487, !488, !489, !490, !491, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519, !520, !531, !532, !533, !534, !536, !537, !542, !547, !552, !553, !554, !555, !556, !557, !558, !559, !560, !562, !563, !565, !566, !567}
!419 = !DIDerivedType(tag: DW_TAG_member, scope: !416, file: !417, line: 714, baseType: !420, size: 192)
!420 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !416, file: !417, line: 714, size: 192, elements: !421)
!421 = !{!422, !432, !440}
!422 = !DIDerivedType(tag: DW_TAG_member, scope: !420, file: !417, line: 715, baseType: !423, size: 192)
!423 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !420, file: !417, line: 715, size: 192, elements: !424)
!424 = !{!425, !426, !427}
!425 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !423, file: !417, line: 717, baseType: !415, size: 64)
!426 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !423, file: !417, line: 718, baseType: !415, size: 64, offset: 64)
!427 = !DIDerivedType(tag: DW_TAG_member, scope: !423, file: !417, line: 720, baseType: !428, size: 64, offset: 128)
!428 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !423, file: !417, line: 720, size: 64, elements: !429)
!429 = !{!430, !431}
!430 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !428, file: !417, line: 721, baseType: !290, size: 64)
!431 = !DIDerivedType(tag: DW_TAG_member, name: "dev_scratch", scope: !428, file: !417, line: 726, baseType: !312, size: 64)
!432 = !DIDerivedType(tag: DW_TAG_member, name: "rbnode", scope: !420, file: !417, line: 729, baseType: !433, size: 192, align: 64)
!433 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_node", file: !434, line: 24, size: 192, align: 64, elements: !435)
!434 = !DIFile(filename: "./include/linux/rbtree.h", directory: "/home/lizy2001/genbc/linux")
!435 = !{!436, !437, !439}
!436 = !DIDerivedType(tag: DW_TAG_member, name: "__rb_parent_color", scope: !433, file: !434, line: 25, baseType: !312, size: 64)
!437 = !DIDerivedType(tag: DW_TAG_member, name: "rb_right", scope: !433, file: !434, line: 26, baseType: !438, size: 64, offset: 64)
!438 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !433, size: 64)
!439 = !DIDerivedType(tag: DW_TAG_member, name: "rb_left", scope: !433, file: !434, line: 27, baseType: !438, size: 64, offset: 128)
!440 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !420, file: !417, line: 730, baseType: !284, size: 128)
!441 = !DIDerivedType(tag: DW_TAG_member, scope: !416, file: !417, line: 733, baseType: !442, size: 64, offset: 192)
!442 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !416, file: !417, line: 733, size: 64, elements: !443)
!443 = !{!444, !448}
!444 = !DIDerivedType(tag: DW_TAG_member, name: "sk", scope: !442, file: !417, line: 734, baseType: !445, size: 64)
!445 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !446, size: 64)
!446 = !DICompositeType(tag: DW_TAG_structure_type, name: "sock", file: !447, line: 19, flags: DIFlagFwdDecl)
!447 = !DIFile(filename: "./include/linux/kobject_ns.h", directory: "/home/lizy2001/genbc/linux")
!448 = !DIDerivedType(tag: DW_TAG_member, name: "ip_defrag_offset", scope: !442, file: !417, line: 735, baseType: !32, size: 32)
!449 = !DIDerivedType(tag: DW_TAG_member, scope: !416, file: !417, line: 738, baseType: !450, size: 64, offset: 256)
!450 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !416, file: !417, line: 738, size: 64, elements: !451)
!451 = !{!452, !455}
!452 = !DIDerivedType(tag: DW_TAG_member, name: "tstamp", scope: !450, file: !417, line: 739, baseType: !453, size: 64)
!453 = !DIDerivedType(tag: DW_TAG_typedef, name: "ktime_t", file: !454, line: 29, baseType: !377)
!454 = !DIFile(filename: "./include/linux/ktime.h", directory: "/home/lizy2001/genbc/linux")
!455 = !DIDerivedType(tag: DW_TAG_member, name: "skb_mstamp_ns", scope: !450, file: !417, line: 740, baseType: !331, size: 64)
!456 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !416, file: !417, line: 748, baseType: !457, size: 384, align: 64, offset: 320)
!457 = !DICompositeType(tag: DW_TAG_array_type, baseType: !268, size: 384, elements: !458)
!458 = !{!459}
!459 = !DISubrange(count: 48)
!460 = !DIDerivedType(tag: DW_TAG_member, scope: !416, file: !417, line: 750, baseType: !461, size: 128, offset: 704)
!461 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !416, file: !417, line: 750, size: 128, elements: !462)
!462 = !{!463, !471}
!463 = !DIDerivedType(tag: DW_TAG_member, scope: !461, file: !417, line: 751, baseType: !464, size: 128)
!464 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !461, file: !417, line: 751, size: 128, elements: !465)
!465 = !{!466, !467}
!466 = !DIDerivedType(tag: DW_TAG_member, name: "_skb_refdst", scope: !464, file: !417, line: 752, baseType: !312, size: 64)
!467 = !DIDerivedType(tag: DW_TAG_member, name: "destructor", scope: !464, file: !417, line: 753, baseType: !468, size: 64, offset: 64)
!468 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !469, size: 64)
!469 = !DISubroutineType(types: !470)
!470 = !{null, !415}
!471 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_tsorted_anchor", scope: !461, file: !417, line: 755, baseType: !284, size: 128)
!472 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !416, file: !417, line: 761, baseType: !7, size: 32, offset: 832)
!473 = !DIDerivedType(tag: DW_TAG_member, name: "data_len", scope: !416, file: !417, line: 762, baseType: !7, size: 32, offset: 864)
!474 = !DIDerivedType(tag: DW_TAG_member, name: "mac_len", scope: !416, file: !417, line: 763, baseType: !475, size: 16, offset: 896)
!475 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u16", file: !334, line: 24, baseType: !476)
!476 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!477 = !DIDerivedType(tag: DW_TAG_member, name: "hdr_len", scope: !416, file: !417, line: 764, baseType: !475, size: 16, offset: 912)
!478 = !DIDerivedType(tag: DW_TAG_member, name: "queue_mapping", scope: !416, file: !417, line: 769, baseType: !475, size: 16, offset: 928)
!479 = !DIDerivedType(tag: DW_TAG_member, name: "__cloned_offset", scope: !416, file: !417, line: 780, baseType: !480, offset: 944)
!480 = !DICompositeType(tag: DW_TAG_array_type, baseType: !481, elements: !483)
!481 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u8", file: !334, line: 21, baseType: !482)
!482 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!483 = !{!484}
!484 = !DISubrange(count: 0)
!485 = !DIDerivedType(tag: DW_TAG_member, name: "cloned", scope: !416, file: !417, line: 782, baseType: !481, size: 1, offset: 944, flags: DIFlagBitField, extraData: i64 944)
!486 = !DIDerivedType(tag: DW_TAG_member, name: "nohdr", scope: !416, file: !417, line: 783, baseType: !481, size: 1, offset: 945, flags: DIFlagBitField, extraData: i64 944)
!487 = !DIDerivedType(tag: DW_TAG_member, name: "fclone", scope: !416, file: !417, line: 784, baseType: !481, size: 2, offset: 946, flags: DIFlagBitField, extraData: i64 944)
!488 = !DIDerivedType(tag: DW_TAG_member, name: "peeked", scope: !416, file: !417, line: 785, baseType: !481, size: 1, offset: 948, flags: DIFlagBitField, extraData: i64 944)
!489 = !DIDerivedType(tag: DW_TAG_member, name: "head_frag", scope: !416, file: !417, line: 786, baseType: !481, size: 1, offset: 949, flags: DIFlagBitField, extraData: i64 944)
!490 = !DIDerivedType(tag: DW_TAG_member, name: "pfmemalloc", scope: !416, file: !417, line: 787, baseType: !481, size: 1, offset: 950, flags: DIFlagBitField, extraData: i64 944)
!491 = !DIDerivedType(tag: DW_TAG_member, name: "headers_start", scope: !416, file: !417, line: 795, baseType: !492, offset: 960)
!492 = !DICompositeType(tag: DW_TAG_array_type, baseType: !493, elements: !483)
!493 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u32", file: !334, line: 27, baseType: !7)
!494 = !DIDerivedType(tag: DW_TAG_member, name: "__pkt_type_offset", scope: !416, file: !417, line: 807, baseType: !480, offset: 960)
!495 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_type", scope: !416, file: !417, line: 809, baseType: !481, size: 3, offset: 960, flags: DIFlagBitField, extraData: i64 960)
!496 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_df", scope: !416, file: !417, line: 810, baseType: !481, size: 1, offset: 963, flags: DIFlagBitField, extraData: i64 960)
!497 = !DIDerivedType(tag: DW_TAG_member, name: "nf_trace", scope: !416, file: !417, line: 811, baseType: !481, size: 1, offset: 964, flags: DIFlagBitField, extraData: i64 960)
!498 = !DIDerivedType(tag: DW_TAG_member, name: "ip_summed", scope: !416, file: !417, line: 812, baseType: !481, size: 2, offset: 965, flags: DIFlagBitField, extraData: i64 960)
!499 = !DIDerivedType(tag: DW_TAG_member, name: "ooo_okay", scope: !416, file: !417, line: 813, baseType: !481, size: 1, offset: 967, flags: DIFlagBitField, extraData: i64 960)
!500 = !DIDerivedType(tag: DW_TAG_member, name: "l4_hash", scope: !416, file: !417, line: 815, baseType: !481, size: 1, offset: 968, flags: DIFlagBitField, extraData: i64 960)
!501 = !DIDerivedType(tag: DW_TAG_member, name: "sw_hash", scope: !416, file: !417, line: 816, baseType: !481, size: 1, offset: 969, flags: DIFlagBitField, extraData: i64 960)
!502 = !DIDerivedType(tag: DW_TAG_member, name: "wifi_acked_valid", scope: !416, file: !417, line: 817, baseType: !481, size: 1, offset: 970, flags: DIFlagBitField, extraData: i64 960)
!503 = !DIDerivedType(tag: DW_TAG_member, name: "wifi_acked", scope: !416, file: !417, line: 818, baseType: !481, size: 1, offset: 971, flags: DIFlagBitField, extraData: i64 960)
!504 = !DIDerivedType(tag: DW_TAG_member, name: "no_fcs", scope: !416, file: !417, line: 819, baseType: !481, size: 1, offset: 972, flags: DIFlagBitField, extraData: i64 960)
!505 = !DIDerivedType(tag: DW_TAG_member, name: "encapsulation", scope: !416, file: !417, line: 821, baseType: !481, size: 1, offset: 973, flags: DIFlagBitField, extraData: i64 960)
!506 = !DIDerivedType(tag: DW_TAG_member, name: "encap_hdr_csum", scope: !416, file: !417, line: 822, baseType: !481, size: 1, offset: 974, flags: DIFlagBitField, extraData: i64 960)
!507 = !DIDerivedType(tag: DW_TAG_member, name: "csum_valid", scope: !416, file: !417, line: 823, baseType: !481, size: 1, offset: 975, flags: DIFlagBitField, extraData: i64 960)
!508 = !DIDerivedType(tag: DW_TAG_member, name: "__pkt_vlan_present_offset", scope: !416, file: !417, line: 832, baseType: !480, offset: 976)
!509 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_present", scope: !416, file: !417, line: 834, baseType: !481, size: 1, offset: 976, flags: DIFlagBitField, extraData: i64 976)
!510 = !DIDerivedType(tag: DW_TAG_member, name: "csum_complete_sw", scope: !416, file: !417, line: 835, baseType: !481, size: 1, offset: 977, flags: DIFlagBitField, extraData: i64 976)
!511 = !DIDerivedType(tag: DW_TAG_member, name: "csum_level", scope: !416, file: !417, line: 836, baseType: !481, size: 2, offset: 978, flags: DIFlagBitField, extraData: i64 976)
!512 = !DIDerivedType(tag: DW_TAG_member, name: "csum_not_inet", scope: !416, file: !417, line: 837, baseType: !481, size: 1, offset: 980, flags: DIFlagBitField, extraData: i64 976)
!513 = !DIDerivedType(tag: DW_TAG_member, name: "dst_pending_confirm", scope: !416, file: !417, line: 838, baseType: !481, size: 1, offset: 981, flags: DIFlagBitField, extraData: i64 976)
!514 = !DIDerivedType(tag: DW_TAG_member, name: "ndisc_nodetype", scope: !416, file: !417, line: 840, baseType: !481, size: 2, offset: 982, flags: DIFlagBitField, extraData: i64 976)
!515 = !DIDerivedType(tag: DW_TAG_member, name: "ipvs_property", scope: !416, file: !417, line: 843, baseType: !481, size: 1, offset: 984, flags: DIFlagBitField, extraData: i64 976)
!516 = !DIDerivedType(tag: DW_TAG_member, name: "inner_protocol_type", scope: !416, file: !417, line: 844, baseType: !481, size: 1, offset: 985, flags: DIFlagBitField, extraData: i64 976)
!517 = !DIDerivedType(tag: DW_TAG_member, name: "remcsum_offload", scope: !416, file: !417, line: 845, baseType: !481, size: 1, offset: 986, flags: DIFlagBitField, extraData: i64 976)
!518 = !DIDerivedType(tag: DW_TAG_member, name: "offload_fwd_mark", scope: !416, file: !417, line: 847, baseType: !481, size: 1, offset: 987, flags: DIFlagBitField, extraData: i64 976)
!519 = !DIDerivedType(tag: DW_TAG_member, name: "offload_l3_fwd_mark", scope: !416, file: !417, line: 848, baseType: !481, size: 1, offset: 988, flags: DIFlagBitField, extraData: i64 976)
!520 = !DIDerivedType(tag: DW_TAG_member, scope: !416, file: !417, line: 866, baseType: !521, size: 32, offset: 992)
!521 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !416, file: !417, line: 866, size: 32, elements: !522)
!522 = !{!523, !526}
!523 = !DIDerivedType(tag: DW_TAG_member, name: "csum", scope: !521, file: !417, line: 867, baseType: !524, size: 32)
!524 = !DIDerivedType(tag: DW_TAG_typedef, name: "__wsum", file: !525, line: 37, baseType: !493)
!525 = !DIFile(filename: "./include/uapi/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!526 = !DIDerivedType(tag: DW_TAG_member, scope: !521, file: !417, line: 868, baseType: !527, size: 32)
!527 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !521, file: !417, line: 868, size: 32, elements: !528)
!528 = !{!529, !530}
!529 = !DIDerivedType(tag: DW_TAG_member, name: "csum_start", scope: !527, file: !417, line: 869, baseType: !475, size: 16)
!530 = !DIDerivedType(tag: DW_TAG_member, name: "csum_offset", scope: !527, file: !417, line: 870, baseType: !475, size: 16, offset: 16)
!531 = !DIDerivedType(tag: DW_TAG_member, name: "priority", scope: !416, file: !417, line: 873, baseType: !493, size: 32, offset: 1024)
!532 = !DIDerivedType(tag: DW_TAG_member, name: "skb_iif", scope: !416, file: !417, line: 874, baseType: !32, size: 32, offset: 1056)
!533 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !416, file: !417, line: 875, baseType: !493, size: 32, offset: 1088)
!534 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_proto", scope: !416, file: !417, line: 876, baseType: !535, size: 16, offset: 1120)
!535 = !DIDerivedType(tag: DW_TAG_typedef, name: "__be16", file: !525, line: 30, baseType: !475)
!536 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_tci", scope: !416, file: !417, line: 877, baseType: !475, size: 16, offset: 1136)
!537 = !DIDerivedType(tag: DW_TAG_member, scope: !416, file: !417, line: 879, baseType: !538, size: 32, offset: 1152)
!538 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !416, file: !417, line: 879, size: 32, elements: !539)
!539 = !{!540, !541}
!540 = !DIDerivedType(tag: DW_TAG_member, name: "napi_id", scope: !538, file: !417, line: 880, baseType: !7, size: 32)
!541 = !DIDerivedType(tag: DW_TAG_member, name: "sender_cpu", scope: !538, file: !417, line: 881, baseType: !7, size: 32)
!542 = !DIDerivedType(tag: DW_TAG_member, scope: !416, file: !417, line: 888, baseType: !543, size: 32, offset: 1184)
!543 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !416, file: !417, line: 888, size: 32, elements: !544)
!544 = !{!545, !546}
!545 = !DIDerivedType(tag: DW_TAG_member, name: "mark", scope: !543, file: !417, line: 889, baseType: !493, size: 32)
!546 = !DIDerivedType(tag: DW_TAG_member, name: "reserved_tailroom", scope: !543, file: !417, line: 890, baseType: !493, size: 32)
!547 = !DIDerivedType(tag: DW_TAG_member, scope: !416, file: !417, line: 893, baseType: !548, size: 16, offset: 1216)
!548 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !416, file: !417, line: 893, size: 16, elements: !549)
!549 = !{!550, !551}
!550 = !DIDerivedType(tag: DW_TAG_member, name: "inner_protocol", scope: !548, file: !417, line: 894, baseType: !535, size: 16)
!551 = !DIDerivedType(tag: DW_TAG_member, name: "inner_ipproto", scope: !548, file: !417, line: 895, baseType: !481, size: 8)
!552 = !DIDerivedType(tag: DW_TAG_member, name: "inner_transport_header", scope: !416, file: !417, line: 898, baseType: !475, size: 16, offset: 1232)
!553 = !DIDerivedType(tag: DW_TAG_member, name: "inner_network_header", scope: !416, file: !417, line: 899, baseType: !475, size: 16, offset: 1248)
!554 = !DIDerivedType(tag: DW_TAG_member, name: "inner_mac_header", scope: !416, file: !417, line: 900, baseType: !475, size: 16, offset: 1264)
!555 = !DIDerivedType(tag: DW_TAG_member, name: "protocol", scope: !416, file: !417, line: 902, baseType: !535, size: 16, offset: 1280)
!556 = !DIDerivedType(tag: DW_TAG_member, name: "transport_header", scope: !416, file: !417, line: 903, baseType: !475, size: 16, offset: 1296)
!557 = !DIDerivedType(tag: DW_TAG_member, name: "network_header", scope: !416, file: !417, line: 904, baseType: !475, size: 16, offset: 1312)
!558 = !DIDerivedType(tag: DW_TAG_member, name: "mac_header", scope: !416, file: !417, line: 905, baseType: !475, size: 16, offset: 1328)
!559 = !DIDerivedType(tag: DW_TAG_member, name: "headers_end", scope: !416, file: !417, line: 908, baseType: !492, offset: 1344)
!560 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !416, file: !417, line: 912, baseType: !561, size: 32, offset: 1344)
!561 = !DIDerivedType(tag: DW_TAG_typedef, name: "sk_buff_data_t", file: !417, line: 606, baseType: !7)
!562 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !416, file: !417, line: 913, baseType: !561, size: 32, offset: 1376)
!563 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !416, file: !417, line: 914, baseType: !564, size: 64, offset: 1408)
!564 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !482, size: 64)
!565 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !416, file: !417, line: 915, baseType: !564, size: 64, offset: 1472)
!566 = !DIDerivedType(tag: DW_TAG_member, name: "truesize", scope: !416, file: !417, line: 916, baseType: !7, size: 32, offset: 1536)
!567 = !DIDerivedType(tag: DW_TAG_member, name: "users", scope: !416, file: !417, line: 917, baseType: !568, size: 32, offset: 1568)
!568 = !DIDerivedType(tag: DW_TAG_typedef, name: "refcount_t", file: !569, line: 113, baseType: !570)
!569 = !DIFile(filename: "./include/linux/refcount.h", directory: "/home/lizy2001/genbc/linux")
!570 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "refcount_struct", file: !569, line: 111, size: 32, elements: !571)
!571 = !{!572}
!572 = !DIDerivedType(tag: DW_TAG_member, name: "refs", scope: !570, file: !569, line: 112, baseType: !383, size: 32)
!573 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_features_check", scope: !398, file: !31, line: 1290, baseType: !574, size: 64, offset: 320)
!574 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !575, size: 64)
!575 = !DISubroutineType(types: !576)
!576 = !{!329, !415, !290, !329}
!577 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_select_queue", scope: !398, file: !31, line: 1293, baseType: !578, size: 64, offset: 384)
!578 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !579, size: 64)
!579 = !DISubroutineType(types: !580)
!580 = !{!581, !290, !415, !290}
!581 = !DIDerivedType(tag: DW_TAG_typedef, name: "u16", file: !332, line: 19, baseType: !475)
!582 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_change_rx_flags", scope: !398, file: !31, line: 1296, baseType: !583, size: 64, offset: 448)
!583 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !584, size: 64)
!584 = !DISubroutineType(types: !585)
!585 = !{null, !290, !32}
!586 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_rx_mode", scope: !398, file: !31, line: 1298, baseType: !405, size: 64, offset: 512)
!587 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_mac_address", scope: !398, file: !31, line: 1299, baseType: !588, size: 64, offset: 576)
!588 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !589, size: 64)
!589 = !DISubroutineType(types: !590)
!590 = !{!32, !290, !591}
!591 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!592 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_validate_addr", scope: !398, file: !31, line: 1301, baseType: !401, size: 64, offset: 640)
!593 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_do_ioctl", scope: !398, file: !31, line: 1302, baseType: !594, size: 64, offset: 704)
!594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !595, size: 64)
!595 = !DISubroutineType(types: !596)
!596 = !{!32, !290, !597, !32}
!597 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !598, size: 64)
!598 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ifreq", file: !599, line: 234, size: 320, elements: !600)
!599 = !DIFile(filename: "./include/uapi/linux/if.h", directory: "/home/lizy2001/genbc/linux")
!600 = !{!601, !605}
!601 = !DIDerivedType(tag: DW_TAG_member, name: "ifr_ifrn", scope: !598, file: !599, line: 239, baseType: !602, size: 128)
!602 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !598, file: !599, line: 236, size: 128, elements: !603)
!603 = !{!604}
!604 = !DIDerivedType(tag: DW_TAG_member, name: "ifrn_name", scope: !602, file: !599, line: 238, baseType: !267, size: 128)
!605 = !DIDerivedType(tag: DW_TAG_member, name: "ifr_ifru", scope: !598, file: !599, line: 255, baseType: !606, size: 192, offset: 128)
!606 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !598, file: !599, line: 241, size: 192, elements: !607)
!607 = !{!608, !620, !621, !622, !623, !624, !626, !627, !628, !637, !638, !639, !640}
!608 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_addr", scope: !606, file: !599, line: 242, baseType: !609, size: 128)
!609 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sockaddr", file: !610, line: 32, size: 128, elements: !611)
!610 = !DIFile(filename: "./include/linux/socket.h", directory: "/home/lizy2001/genbc/linux")
!611 = !{!612, !616}
!612 = !DIDerivedType(tag: DW_TAG_member, name: "sa_family", scope: !609, file: !610, line: 33, baseType: !613, size: 16)
!613 = !DIDerivedType(tag: DW_TAG_typedef, name: "sa_family_t", file: !610, line: 26, baseType: !614)
!614 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_sa_family_t", file: !615, line: 10, baseType: !476)
!615 = !DIFile(filename: "./include/uapi/linux/socket.h", directory: "/home/lizy2001/genbc/linux")
!616 = !DIDerivedType(tag: DW_TAG_member, name: "sa_data", scope: !609, file: !610, line: 34, baseType: !617, size: 112, offset: 16)
!617 = !DICompositeType(tag: DW_TAG_array_type, baseType: !268, size: 112, elements: !618)
!618 = !{!619}
!619 = !DISubrange(count: 14)
!620 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_dstaddr", scope: !606, file: !599, line: 243, baseType: !609, size: 128)
!621 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_broadaddr", scope: !606, file: !599, line: 244, baseType: !609, size: 128)
!622 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_netmask", scope: !606, file: !599, line: 245, baseType: !609, size: 128)
!623 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_hwaddr", scope: !606, file: !599, line: 246, baseType: !609, size: 128)
!624 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_flags", scope: !606, file: !599, line: 247, baseType: !625, size: 16)
!625 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!626 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_ivalue", scope: !606, file: !599, line: 248, baseType: !32, size: 32)
!627 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_mtu", scope: !606, file: !599, line: 249, baseType: !32, size: 32)
!628 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_map", scope: !606, file: !599, line: 250, baseType: !629, size: 192)
!629 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ifmap", file: !599, line: 196, size: 192, elements: !630)
!630 = !{!631, !632, !633, !634, !635, !636}
!631 = !DIDerivedType(tag: DW_TAG_member, name: "mem_start", scope: !629, file: !599, line: 197, baseType: !312, size: 64)
!632 = !DIDerivedType(tag: DW_TAG_member, name: "mem_end", scope: !629, file: !599, line: 198, baseType: !312, size: 64, offset: 64)
!633 = !DIDerivedType(tag: DW_TAG_member, name: "base_addr", scope: !629, file: !599, line: 199, baseType: !476, size: 16, offset: 128)
!634 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !629, file: !599, line: 200, baseType: !482, size: 8, offset: 144)
!635 = !DIDerivedType(tag: DW_TAG_member, name: "dma", scope: !629, file: !599, line: 201, baseType: !482, size: 8, offset: 152)
!636 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !629, file: !599, line: 202, baseType: !482, size: 8, offset: 160)
!637 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_slave", scope: !606, file: !599, line: 251, baseType: !267, size: 128)
!638 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_newname", scope: !606, file: !599, line: 252, baseType: !267, size: 128)
!639 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_data", scope: !606, file: !599, line: 253, baseType: !591, size: 64)
!640 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_settings", scope: !606, file: !599, line: 254, baseType: !641, size: 128)
!641 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "if_settings", file: !599, line: 207, size: 128, elements: !642)
!642 = !{!643, !644, !645}
!643 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !641, file: !599, line: 208, baseType: !7, size: 32)
!644 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !641, file: !599, line: 209, baseType: !7, size: 32, offset: 32)
!645 = !DIDerivedType(tag: DW_TAG_member, name: "ifs_ifsu", scope: !641, file: !599, line: 222, baseType: !646, size: 64, offset: 64)
!646 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !641, file: !599, line: 210, size: 64, elements: !647)
!647 = !{!648, !656, !663, !675, !681, !688, !699, !707}
!648 = !DIDerivedType(tag: DW_TAG_member, name: "raw_hdlc", scope: !646, file: !599, line: 212, baseType: !649, size: 64)
!649 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !650, size: 64)
!650 = !DIDerivedType(tag: DW_TAG_typedef, name: "raw_hdlc_proto", file: !651, line: 56, baseType: !652)
!651 = !DIFile(filename: "./include/uapi/linux/hdlc/ioctl.h", directory: "/home/lizy2001/genbc/linux")
!652 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !651, line: 53, size: 32, elements: !653)
!653 = !{!654, !655}
!654 = !DIDerivedType(tag: DW_TAG_member, name: "encoding", scope: !652, file: !651, line: 54, baseType: !476, size: 16)
!655 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !652, file: !651, line: 55, baseType: !476, size: 16, offset: 16)
!656 = !DIDerivedType(tag: DW_TAG_member, name: "cisco", scope: !646, file: !599, line: 213, baseType: !657, size: 64)
!657 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !658, size: 64)
!658 = !DIDerivedType(tag: DW_TAG_typedef, name: "cisco_proto", file: !651, line: 80, baseType: !659)
!659 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !651, line: 77, size: 64, elements: !660)
!660 = !{!661, !662}
!661 = !DIDerivedType(tag: DW_TAG_member, name: "interval", scope: !659, file: !651, line: 78, baseType: !7, size: 32)
!662 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !659, file: !651, line: 79, baseType: !7, size: 32, offset: 32)
!663 = !DIDerivedType(tag: DW_TAG_member, name: "fr", scope: !646, file: !599, line: 214, baseType: !664, size: 64)
!664 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !665, size: 64)
!665 = !DIDerivedType(tag: DW_TAG_typedef, name: "fr_proto", file: !651, line: 66, baseType: !666)
!666 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !651, line: 58, size: 192, elements: !667)
!667 = !{!668, !669, !670, !671, !672, !673, !674}
!668 = !DIDerivedType(tag: DW_TAG_member, name: "t391", scope: !666, file: !651, line: 59, baseType: !7, size: 32)
!669 = !DIDerivedType(tag: DW_TAG_member, name: "t392", scope: !666, file: !651, line: 60, baseType: !7, size: 32, offset: 32)
!670 = !DIDerivedType(tag: DW_TAG_member, name: "n391", scope: !666, file: !651, line: 61, baseType: !7, size: 32, offset: 64)
!671 = !DIDerivedType(tag: DW_TAG_member, name: "n392", scope: !666, file: !651, line: 62, baseType: !7, size: 32, offset: 96)
!672 = !DIDerivedType(tag: DW_TAG_member, name: "n393", scope: !666, file: !651, line: 63, baseType: !7, size: 32, offset: 128)
!673 = !DIDerivedType(tag: DW_TAG_member, name: "lmi", scope: !666, file: !651, line: 64, baseType: !476, size: 16, offset: 160)
!674 = !DIDerivedType(tag: DW_TAG_member, name: "dce", scope: !666, file: !651, line: 65, baseType: !476, size: 16, offset: 176)
!675 = !DIDerivedType(tag: DW_TAG_member, name: "fr_pvc", scope: !646, file: !599, line: 215, baseType: !676, size: 64)
!676 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !677, size: 64)
!677 = !DIDerivedType(tag: DW_TAG_typedef, name: "fr_proto_pvc", file: !651, line: 70, baseType: !678)
!678 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !651, line: 68, size: 32, elements: !679)
!679 = !{!680}
!680 = !DIDerivedType(tag: DW_TAG_member, name: "dlci", scope: !678, file: !651, line: 69, baseType: !7, size: 32)
!681 = !DIDerivedType(tag: DW_TAG_member, name: "fr_pvc_info", scope: !646, file: !599, line: 216, baseType: !682, size: 64)
!682 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !683, size: 64)
!683 = !DIDerivedType(tag: DW_TAG_typedef, name: "fr_proto_pvc_info", file: !651, line: 75, baseType: !684)
!684 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !651, line: 72, size: 160, elements: !685)
!685 = !{!686, !687}
!686 = !DIDerivedType(tag: DW_TAG_member, name: "dlci", scope: !684, file: !651, line: 73, baseType: !7, size: 32)
!687 = !DIDerivedType(tag: DW_TAG_member, name: "master", scope: !684, file: !651, line: 74, baseType: !267, size: 128, offset: 32)
!688 = !DIDerivedType(tag: DW_TAG_member, name: "x25", scope: !646, file: !599, line: 217, baseType: !689, size: 64)
!689 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !690, size: 64)
!690 = !DIDerivedType(tag: DW_TAG_typedef, name: "x25_hdlc_proto", file: !651, line: 89, baseType: !691)
!691 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !651, line: 82, size: 192, elements: !692)
!692 = !{!693, !694, !695, !696, !697, !698}
!693 = !DIDerivedType(tag: DW_TAG_member, name: "dce", scope: !691, file: !651, line: 83, baseType: !476, size: 16)
!694 = !DIDerivedType(tag: DW_TAG_member, name: "modulo", scope: !691, file: !651, line: 84, baseType: !7, size: 32, offset: 32)
!695 = !DIDerivedType(tag: DW_TAG_member, name: "window", scope: !691, file: !651, line: 85, baseType: !7, size: 32, offset: 64)
!696 = !DIDerivedType(tag: DW_TAG_member, name: "t1", scope: !691, file: !651, line: 86, baseType: !7, size: 32, offset: 96)
!697 = !DIDerivedType(tag: DW_TAG_member, name: "t2", scope: !691, file: !651, line: 87, baseType: !7, size: 32, offset: 128)
!698 = !DIDerivedType(tag: DW_TAG_member, name: "n2", scope: !691, file: !651, line: 88, baseType: !7, size: 32, offset: 160)
!699 = !DIDerivedType(tag: DW_TAG_member, name: "sync", scope: !646, file: !599, line: 220, baseType: !700, size: 64)
!700 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !701, size: 64)
!701 = !DIDerivedType(tag: DW_TAG_typedef, name: "sync_serial_settings", file: !651, line: 44, baseType: !702)
!702 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !651, line: 40, size: 96, elements: !703)
!703 = !{!704, !705, !706}
!704 = !DIDerivedType(tag: DW_TAG_member, name: "clock_rate", scope: !702, file: !651, line: 41, baseType: !7, size: 32)
!705 = !DIDerivedType(tag: DW_TAG_member, name: "clock_type", scope: !702, file: !651, line: 42, baseType: !7, size: 32, offset: 32)
!706 = !DIDerivedType(tag: DW_TAG_member, name: "loopback", scope: !702, file: !651, line: 43, baseType: !476, size: 16, offset: 64)
!707 = !DIDerivedType(tag: DW_TAG_member, name: "te1", scope: !646, file: !599, line: 221, baseType: !708, size: 64)
!708 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !709, size: 64)
!709 = !DIDerivedType(tag: DW_TAG_typedef, name: "te1_settings", file: !651, line: 51, baseType: !710)
!710 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !651, line: 46, size: 128, elements: !711)
!711 = !{!712, !713, !714, !715}
!712 = !DIDerivedType(tag: DW_TAG_member, name: "clock_rate", scope: !710, file: !651, line: 47, baseType: !7, size: 32)
!713 = !DIDerivedType(tag: DW_TAG_member, name: "clock_type", scope: !710, file: !651, line: 48, baseType: !7, size: 32, offset: 32)
!714 = !DIDerivedType(tag: DW_TAG_member, name: "loopback", scope: !710, file: !651, line: 49, baseType: !476, size: 16, offset: 64)
!715 = !DIDerivedType(tag: DW_TAG_member, name: "slot_map", scope: !710, file: !651, line: 50, baseType: !7, size: 32, offset: 96)
!716 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_config", scope: !398, file: !31, line: 1304, baseType: !717, size: 64, offset: 768)
!717 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !718, size: 64)
!718 = !DISubroutineType(types: !719)
!719 = !{!32, !290, !720}
!720 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !629, size: 64)
!721 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_change_mtu", scope: !398, file: !31, line: 1306, baseType: !722, size: 64, offset: 832)
!722 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !723, size: 64)
!723 = !DISubroutineType(types: !724)
!724 = !{!32, !290, !32}
!725 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_neigh_setup", scope: !398, file: !31, line: 1308, baseType: !726, size: 64, offset: 896)
!726 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !727, size: 64)
!727 = !DISubroutineType(types: !728)
!728 = !{!32, !290, !729}
!729 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !730, size: 64)
!730 = !DICompositeType(tag: DW_TAG_structure_type, name: "neigh_parms", file: !31, line: 206, flags: DIFlagFwdDecl)
!731 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_tx_timeout", scope: !398, file: !31, line: 1310, baseType: !732, size: 64, offset: 960)
!732 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !733, size: 64)
!733 = !DISubroutineType(types: !734)
!734 = !{null, !290, !7}
!735 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_stats64", scope: !398, file: !31, line: 1313, baseType: !736, size: 64, offset: 1024)
!736 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !737, size: 64)
!737 = !DISubroutineType(types: !738)
!738 = !{null, !290, !739}
!739 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !740, size: 64)
!740 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtnl_link_stats64", file: !741, line: 214, size: 1536, elements: !742)
!741 = !DIFile(filename: "./include/uapi/linux/if_link.h", directory: "/home/lizy2001/genbc/linux")
!742 = !{!743, !744, !745, !746, !747, !748, !749, !750, !751, !752, !753, !754, !755, !756, !757, !758, !759, !760, !761, !762, !763, !764, !765, !766}
!743 = !DIDerivedType(tag: DW_TAG_member, name: "rx_packets", scope: !740, file: !741, line: 215, baseType: !333, size: 64)
!744 = !DIDerivedType(tag: DW_TAG_member, name: "tx_packets", scope: !740, file: !741, line: 216, baseType: !333, size: 64, offset: 64)
!745 = !DIDerivedType(tag: DW_TAG_member, name: "rx_bytes", scope: !740, file: !741, line: 217, baseType: !333, size: 64, offset: 128)
!746 = !DIDerivedType(tag: DW_TAG_member, name: "tx_bytes", scope: !740, file: !741, line: 218, baseType: !333, size: 64, offset: 192)
!747 = !DIDerivedType(tag: DW_TAG_member, name: "rx_errors", scope: !740, file: !741, line: 219, baseType: !333, size: 64, offset: 256)
!748 = !DIDerivedType(tag: DW_TAG_member, name: "tx_errors", scope: !740, file: !741, line: 220, baseType: !333, size: 64, offset: 320)
!749 = !DIDerivedType(tag: DW_TAG_member, name: "rx_dropped", scope: !740, file: !741, line: 221, baseType: !333, size: 64, offset: 384)
!750 = !DIDerivedType(tag: DW_TAG_member, name: "tx_dropped", scope: !740, file: !741, line: 222, baseType: !333, size: 64, offset: 448)
!751 = !DIDerivedType(tag: DW_TAG_member, name: "multicast", scope: !740, file: !741, line: 223, baseType: !333, size: 64, offset: 512)
!752 = !DIDerivedType(tag: DW_TAG_member, name: "collisions", scope: !740, file: !741, line: 224, baseType: !333, size: 64, offset: 576)
!753 = !DIDerivedType(tag: DW_TAG_member, name: "rx_length_errors", scope: !740, file: !741, line: 227, baseType: !333, size: 64, offset: 640)
!754 = !DIDerivedType(tag: DW_TAG_member, name: "rx_over_errors", scope: !740, file: !741, line: 228, baseType: !333, size: 64, offset: 704)
!755 = !DIDerivedType(tag: DW_TAG_member, name: "rx_crc_errors", scope: !740, file: !741, line: 229, baseType: !333, size: 64, offset: 768)
!756 = !DIDerivedType(tag: DW_TAG_member, name: "rx_frame_errors", scope: !740, file: !741, line: 230, baseType: !333, size: 64, offset: 832)
!757 = !DIDerivedType(tag: DW_TAG_member, name: "rx_fifo_errors", scope: !740, file: !741, line: 231, baseType: !333, size: 64, offset: 896)
!758 = !DIDerivedType(tag: DW_TAG_member, name: "rx_missed_errors", scope: !740, file: !741, line: 232, baseType: !333, size: 64, offset: 960)
!759 = !DIDerivedType(tag: DW_TAG_member, name: "tx_aborted_errors", scope: !740, file: !741, line: 235, baseType: !333, size: 64, offset: 1024)
!760 = !DIDerivedType(tag: DW_TAG_member, name: "tx_carrier_errors", scope: !740, file: !741, line: 236, baseType: !333, size: 64, offset: 1088)
!761 = !DIDerivedType(tag: DW_TAG_member, name: "tx_fifo_errors", scope: !740, file: !741, line: 237, baseType: !333, size: 64, offset: 1152)
!762 = !DIDerivedType(tag: DW_TAG_member, name: "tx_heartbeat_errors", scope: !740, file: !741, line: 238, baseType: !333, size: 64, offset: 1216)
!763 = !DIDerivedType(tag: DW_TAG_member, name: "tx_window_errors", scope: !740, file: !741, line: 239, baseType: !333, size: 64, offset: 1280)
!764 = !DIDerivedType(tag: DW_TAG_member, name: "rx_compressed", scope: !740, file: !741, line: 242, baseType: !333, size: 64, offset: 1344)
!765 = !DIDerivedType(tag: DW_TAG_member, name: "tx_compressed", scope: !740, file: !741, line: 243, baseType: !333, size: 64, offset: 1408)
!766 = !DIDerivedType(tag: DW_TAG_member, name: "rx_nohandler", scope: !740, file: !741, line: 244, baseType: !333, size: 64, offset: 1472)
!767 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_has_offload_stats", scope: !398, file: !31, line: 1315, baseType: !768, size: 64, offset: 1088)
!768 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !769, size: 64)
!769 = !DISubroutineType(types: !770)
!770 = !{!771, !773, !32}
!771 = !DIDerivedType(tag: DW_TAG_typedef, name: "bool", file: !277, line: 30, baseType: !772)
!772 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!773 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !774, size: 64)
!774 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !264)
!775 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_offload_stats", scope: !398, file: !31, line: 1316, baseType: !776, size: 64, offset: 1152)
!776 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !777, size: 64)
!777 = !DISubroutineType(types: !778)
!778 = !{!32, !32, !773, !591}
!779 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_stats", scope: !398, file: !31, line: 1319, baseType: !780, size: 64, offset: 1216)
!780 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !781, size: 64)
!781 = !DISubroutineType(types: !782)
!782 = !{!783, !290}
!783 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !345, size: 64)
!784 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_vlan_rx_add_vid", scope: !398, file: !31, line: 1321, baseType: !785, size: 64, offset: 1280)
!785 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !786, size: 64)
!786 = !DISubroutineType(types: !787)
!787 = !{!32, !290, !535, !581}
!788 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_vlan_rx_kill_vid", scope: !398, file: !31, line: 1323, baseType: !785, size: 64, offset: 1344)
!789 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_mac", scope: !398, file: !31, line: 1331, baseType: !790, size: 64, offset: 1408)
!790 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !791, size: 64)
!791 = !DISubroutineType(types: !792)
!792 = !{!32, !290, !32, !793}
!793 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !794, size: 64)
!794 = !DIDerivedType(tag: DW_TAG_typedef, name: "u8", file: !332, line: 17, baseType: !481)
!795 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_vlan", scope: !398, file: !31, line: 1333, baseType: !796, size: 64, offset: 1472)
!796 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !797, size: 64)
!797 = !DISubroutineType(types: !798)
!798 = !{!32, !290, !32, !581, !794, !535}
!799 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_rate", scope: !398, file: !31, line: 1336, baseType: !800, size: 64, offset: 1536)
!800 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !801, size: 64)
!801 = !DISubroutineType(types: !802)
!802 = !{!32, !290, !32, !32, !32}
!803 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_spoofchk", scope: !398, file: !31, line: 1339, baseType: !804, size: 64, offset: 1600)
!804 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !805, size: 64)
!805 = !DISubroutineType(types: !806)
!806 = !{!32, !290, !32, !771}
!807 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_trust", scope: !398, file: !31, line: 1341, baseType: !804, size: 64, offset: 1664)
!808 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_vf_config", scope: !398, file: !31, line: 1343, baseType: !809, size: 64, offset: 1728)
!809 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !810, size: 64)
!810 = !DISubroutineType(types: !811)
!811 = !{!32, !290, !32, !812}
!812 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !813, size: 64)
!813 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ifla_vf_info", file: !814, line: 20, size: 576, elements: !815)
!814 = !DIFile(filename: "./include/linux/if_link.h", directory: "/home/lizy2001/genbc/linux")
!815 = !{!816, !817, !821, !822, !823, !824, !825, !826, !827, !828, !829}
!816 = !DIDerivedType(tag: DW_TAG_member, name: "vf", scope: !813, file: !814, line: 21, baseType: !493, size: 32)
!817 = !DIDerivedType(tag: DW_TAG_member, name: "mac", scope: !813, file: !814, line: 22, baseType: !818, size: 256, offset: 32)
!818 = !DICompositeType(tag: DW_TAG_array_type, baseType: !481, size: 256, elements: !819)
!819 = !{!820}
!820 = !DISubrange(count: 32)
!821 = !DIDerivedType(tag: DW_TAG_member, name: "vlan", scope: !813, file: !814, line: 23, baseType: !493, size: 32, offset: 288)
!822 = !DIDerivedType(tag: DW_TAG_member, name: "qos", scope: !813, file: !814, line: 24, baseType: !493, size: 32, offset: 320)
!823 = !DIDerivedType(tag: DW_TAG_member, name: "spoofchk", scope: !813, file: !814, line: 25, baseType: !493, size: 32, offset: 352)
!824 = !DIDerivedType(tag: DW_TAG_member, name: "linkstate", scope: !813, file: !814, line: 26, baseType: !493, size: 32, offset: 384)
!825 = !DIDerivedType(tag: DW_TAG_member, name: "min_tx_rate", scope: !813, file: !814, line: 27, baseType: !493, size: 32, offset: 416)
!826 = !DIDerivedType(tag: DW_TAG_member, name: "max_tx_rate", scope: !813, file: !814, line: 28, baseType: !493, size: 32, offset: 448)
!827 = !DIDerivedType(tag: DW_TAG_member, name: "rss_query_en", scope: !813, file: !814, line: 29, baseType: !493, size: 32, offset: 480)
!828 = !DIDerivedType(tag: DW_TAG_member, name: "trusted", scope: !813, file: !814, line: 30, baseType: !493, size: 32, offset: 512)
!829 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_proto", scope: !813, file: !814, line: 31, baseType: !535, size: 16, offset: 544)
!830 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_link_state", scope: !398, file: !31, line: 1346, baseType: !831, size: 64, offset: 1792)
!831 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !832, size: 64)
!832 = !DISubroutineType(types: !833)
!833 = !{!32, !290, !32, !32}
!834 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_vf_stats", scope: !398, file: !31, line: 1348, baseType: !835, size: 64, offset: 1856)
!835 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !836, size: 64)
!836 = !DISubroutineType(types: !837)
!837 = !{!32, !290, !32, !838}
!838 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !839, size: 64)
!839 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ifla_vf_stats", file: !814, line: 9, size: 512, elements: !840)
!840 = !{!841, !842, !843, !844, !845, !846, !847, !848}
!841 = !DIDerivedType(tag: DW_TAG_member, name: "rx_packets", scope: !839, file: !814, line: 10, baseType: !333, size: 64)
!842 = !DIDerivedType(tag: DW_TAG_member, name: "tx_packets", scope: !839, file: !814, line: 11, baseType: !333, size: 64, offset: 64)
!843 = !DIDerivedType(tag: DW_TAG_member, name: "rx_bytes", scope: !839, file: !814, line: 12, baseType: !333, size: 64, offset: 128)
!844 = !DIDerivedType(tag: DW_TAG_member, name: "tx_bytes", scope: !839, file: !814, line: 13, baseType: !333, size: 64, offset: 192)
!845 = !DIDerivedType(tag: DW_TAG_member, name: "broadcast", scope: !839, file: !814, line: 14, baseType: !333, size: 64, offset: 256)
!846 = !DIDerivedType(tag: DW_TAG_member, name: "multicast", scope: !839, file: !814, line: 15, baseType: !333, size: 64, offset: 320)
!847 = !DIDerivedType(tag: DW_TAG_member, name: "rx_dropped", scope: !839, file: !814, line: 16, baseType: !333, size: 64, offset: 384)
!848 = !DIDerivedType(tag: DW_TAG_member, name: "tx_dropped", scope: !839, file: !814, line: 17, baseType: !333, size: 64, offset: 448)
!849 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_port", scope: !398, file: !31, line: 1352, baseType: !850, size: 64, offset: 1920)
!850 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !851, size: 64)
!851 = !DISubroutineType(types: !852)
!852 = !{!32, !290, !32, !853}
!853 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !854, size: 64)
!854 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !855, size: 64)
!855 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nlattr", file: !856, line: 213, size: 32, elements: !857)
!856 = !DIFile(filename: "./include/uapi/linux/netlink.h", directory: "/home/lizy2001/genbc/linux")
!857 = !{!858, !859}
!858 = !DIDerivedType(tag: DW_TAG_member, name: "nla_len", scope: !855, file: !856, line: 214, baseType: !475, size: 16)
!859 = !DIDerivedType(tag: DW_TAG_member, name: "nla_type", scope: !855, file: !856, line: 215, baseType: !475, size: 16, offset: 16)
!860 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_vf_port", scope: !398, file: !31, line: 1355, baseType: !861, size: 64, offset: 1984)
!861 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !862, size: 64)
!862 = !DISubroutineType(types: !863)
!863 = !{!32, !290, !32, !415}
!864 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_vf_guid", scope: !398, file: !31, line: 1357, baseType: !865, size: 64, offset: 2048)
!865 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !866, size: 64)
!866 = !DISubroutineType(types: !867)
!867 = !{!32, !290, !32, !868, !868}
!868 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !869, size: 64)
!869 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ifla_vf_guid", file: !741, line: 956, size: 128, elements: !870)
!870 = !{!871, !872}
!871 = !DIDerivedType(tag: DW_TAG_member, name: "vf", scope: !869, file: !741, line: 957, baseType: !493, size: 32)
!872 = !DIDerivedType(tag: DW_TAG_member, name: "guid", scope: !869, file: !741, line: 958, baseType: !333, size: 64, offset: 64)
!873 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_guid", scope: !398, file: !31, line: 1361, baseType: !874, size: 64, offset: 2112)
!874 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !875, size: 64)
!875 = !DISubroutineType(types: !876)
!876 = !{!32, !290, !32, !331, !32}
!877 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_rss_query_en", scope: !398, file: !31, line: 1364, baseType: !804, size: 64, offset: 2176)
!878 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_setup_tc", scope: !398, file: !31, line: 1367, baseType: !879, size: 64, offset: 2240)
!879 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !880, size: 64)
!880 = !DISubroutineType(types: !881)
!881 = !{!32, !290, !37, !591}
!882 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_add_slave", scope: !398, file: !31, line: 1400, baseType: !883, size: 64, offset: 2304)
!883 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !884, size: 64)
!884 = !DISubroutineType(types: !885)
!885 = !{!32, !290, !290, !886}
!886 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !887, size: 64)
!887 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netlink_ext_ack", file: !888, line: 75, size: 384, elements: !889)
!888 = !DIFile(filename: "./include/linux/netlink.h", directory: "/home/lizy2001/genbc/linux")
!889 = !{!890, !891, !894, !898, !902}
!890 = !DIDerivedType(tag: DW_TAG_member, name: "_msg", scope: !887, file: !888, line: 76, baseType: !292, size: 64)
!891 = !DIDerivedType(tag: DW_TAG_member, name: "bad_attr", scope: !887, file: !888, line: 77, baseType: !892, size: 64, offset: 64)
!892 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !893, size: 64)
!893 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !855)
!894 = !DIDerivedType(tag: DW_TAG_member, name: "policy", scope: !887, file: !888, line: 78, baseType: !895, size: 64, offset: 128)
!895 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !896, size: 64)
!896 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !897)
!897 = !DICompositeType(tag: DW_TAG_structure_type, name: "nla_policy", file: !888, line: 78, flags: DIFlagFwdDecl)
!898 = !DIDerivedType(tag: DW_TAG_member, name: "cookie", scope: !887, file: !888, line: 79, baseType: !899, size: 160, offset: 192)
!899 = !DICompositeType(tag: DW_TAG_array_type, baseType: !794, size: 160, elements: !900)
!900 = !{!901}
!901 = !DISubrange(count: 20)
!902 = !DIDerivedType(tag: DW_TAG_member, name: "cookie_len", scope: !887, file: !888, line: 80, baseType: !794, size: 8, offset: 352)
!903 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_del_slave", scope: !398, file: !31, line: 1403, baseType: !904, size: 64, offset: 2368)
!904 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !905, size: 64)
!905 = !DISubroutineType(types: !906)
!906 = !{!32, !290, !290}
!907 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_xmit_slave", scope: !398, file: !31, line: 1405, baseType: !908, size: 64, offset: 2432)
!908 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !909, size: 64)
!909 = !DISubroutineType(types: !910)
!910 = !{!290, !290, !415, !771}
!911 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_fix_features", scope: !398, file: !31, line: 1408, baseType: !912, size: 64, offset: 2496)
!912 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !913, size: 64)
!913 = !DISubroutineType(types: !914)
!914 = !{!329, !290, !329}
!915 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_features", scope: !398, file: !31, line: 1410, baseType: !916, size: 64, offset: 2560)
!916 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !917, size: 64)
!917 = !DISubroutineType(types: !918)
!918 = !{!32, !290, !329}
!919 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_neigh_construct", scope: !398, file: !31, line: 1412, baseType: !920, size: 64, offset: 2624)
!920 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !921, size: 64)
!921 = !DISubroutineType(types: !922)
!922 = !{!32, !290, !923}
!923 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !924, size: 64)
!924 = !DICompositeType(tag: DW_TAG_structure_type, name: "neighbour", file: !925, line: 35, flags: DIFlagFwdDecl)
!925 = !DIFile(filename: "./include/net/dst_ops.h", directory: "/home/lizy2001/genbc/linux")
!926 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_neigh_destroy", scope: !398, file: !31, line: 1414, baseType: !927, size: 64, offset: 2688)
!927 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !928, size: 64)
!928 = !DISubroutineType(types: !929)
!929 = !{null, !290, !923}
!930 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_fdb_add", scope: !398, file: !31, line: 1417, baseType: !931, size: 64, offset: 2752)
!931 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !932, size: 64)
!932 = !DISubroutineType(types: !933)
!933 = !{!32, !934, !853, !290, !946, !581, !581, !886}
!934 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !935, size: 64)
!935 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ndmsg", file: !936, line: 8, size: 96, elements: !937)
!936 = !DIFile(filename: "./include/uapi/linux/neighbour.h", directory: "/home/lizy2001/genbc/linux")
!937 = !{!938, !939, !940, !941, !943, !944, !945}
!938 = !DIDerivedType(tag: DW_TAG_member, name: "ndm_family", scope: !935, file: !936, line: 9, baseType: !481, size: 8)
!939 = !DIDerivedType(tag: DW_TAG_member, name: "ndm_pad1", scope: !935, file: !936, line: 10, baseType: !481, size: 8, offset: 8)
!940 = !DIDerivedType(tag: DW_TAG_member, name: "ndm_pad2", scope: !935, file: !936, line: 11, baseType: !475, size: 16, offset: 16)
!941 = !DIDerivedType(tag: DW_TAG_member, name: "ndm_ifindex", scope: !935, file: !936, line: 12, baseType: !942, size: 32, offset: 32)
!942 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s32", file: !334, line: 26, baseType: !32)
!943 = !DIDerivedType(tag: DW_TAG_member, name: "ndm_state", scope: !935, file: !936, line: 13, baseType: !475, size: 16, offset: 64)
!944 = !DIDerivedType(tag: DW_TAG_member, name: "ndm_flags", scope: !935, file: !936, line: 14, baseType: !481, size: 8, offset: 80)
!945 = !DIDerivedType(tag: DW_TAG_member, name: "ndm_type", scope: !935, file: !936, line: 15, baseType: !481, size: 8, offset: 88)
!946 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !947, size: 64)
!947 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !482)
!948 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_fdb_del", scope: !398, file: !31, line: 1424, baseType: !949, size: 64, offset: 2816)
!949 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !950, size: 64)
!950 = !DISubroutineType(types: !951)
!951 = !{!32, !934, !853, !290, !946, !581}
!952 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_fdb_dump", scope: !398, file: !31, line: 1429, baseType: !953, size: 64, offset: 2880)
!953 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !954, size: 64)
!954 = !DISubroutineType(types: !955)
!955 = !{!32, !415, !956, !290, !290, !1001}
!956 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !957, size: 64)
!957 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netlink_callback", file: !888, line: 203, size: 1024, elements: !958)
!958 = !{!959, !960, !970, !974, !978, !979, !983, !984, !985, !986, !988, !989, !990, !991}
!959 = !DIDerivedType(tag: DW_TAG_member, name: "skb", scope: !957, file: !888, line: 204, baseType: !415, size: 64)
!960 = !DIDerivedType(tag: DW_TAG_member, name: "nlh", scope: !957, file: !888, line: 205, baseType: !961, size: 64, offset: 64)
!961 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !962, size: 64)
!962 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !963)
!963 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nlmsghdr", file: !856, line: 44, size: 128, elements: !964)
!964 = !{!965, !966, !967, !968, !969}
!965 = !DIDerivedType(tag: DW_TAG_member, name: "nlmsg_len", scope: !963, file: !856, line: 45, baseType: !493, size: 32)
!966 = !DIDerivedType(tag: DW_TAG_member, name: "nlmsg_type", scope: !963, file: !856, line: 46, baseType: !475, size: 16, offset: 32)
!967 = !DIDerivedType(tag: DW_TAG_member, name: "nlmsg_flags", scope: !963, file: !856, line: 47, baseType: !475, size: 16, offset: 48)
!968 = !DIDerivedType(tag: DW_TAG_member, name: "nlmsg_seq", scope: !963, file: !856, line: 48, baseType: !493, size: 32, offset: 64)
!969 = !DIDerivedType(tag: DW_TAG_member, name: "nlmsg_pid", scope: !963, file: !856, line: 49, baseType: !493, size: 32, offset: 96)
!970 = !DIDerivedType(tag: DW_TAG_member, name: "dump", scope: !957, file: !888, line: 206, baseType: !971, size: 64, offset: 128)
!971 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !972, size: 64)
!972 = !DISubroutineType(types: !973)
!973 = !{!32, !415, !956}
!974 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !957, file: !888, line: 208, baseType: !975, size: 64, offset: 192)
!975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !976, size: 64)
!976 = !DISubroutineType(types: !977)
!977 = !{!32, !956}
!978 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !957, file: !888, line: 209, baseType: !591, size: 64, offset: 256)
!979 = !DIDerivedType(tag: DW_TAG_member, name: "module", scope: !957, file: !888, line: 211, baseType: !980, size: 64, offset: 320)
!980 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !981, size: 64)
!981 = !DICompositeType(tag: DW_TAG_structure_type, name: "module", file: !982, line: 76, flags: DIFlagFwdDecl)
!982 = !DIFile(filename: "./arch/x86/include/asm/alternative.h", directory: "/home/lizy2001/genbc/linux")
!983 = !DIDerivedType(tag: DW_TAG_member, name: "extack", scope: !957, file: !888, line: 212, baseType: !886, size: 64, offset: 384)
!984 = !DIDerivedType(tag: DW_TAG_member, name: "family", scope: !957, file: !888, line: 213, baseType: !581, size: 16, offset: 448)
!985 = !DIDerivedType(tag: DW_TAG_member, name: "answer_flags", scope: !957, file: !888, line: 214, baseType: !581, size: 16, offset: 464)
!986 = !DIDerivedType(tag: DW_TAG_member, name: "min_dump_alloc", scope: !957, file: !888, line: 215, baseType: !987, size: 32, offset: 480)
!987 = !DIDerivedType(tag: DW_TAG_typedef, name: "u32", file: !332, line: 21, baseType: !493)
!988 = !DIDerivedType(tag: DW_TAG_member, name: "prev_seq", scope: !957, file: !888, line: 216, baseType: !7, size: 32, offset: 512)
!989 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !957, file: !888, line: 216, baseType: !7, size: 32, offset: 544)
!990 = !DIDerivedType(tag: DW_TAG_member, name: "strict_check", scope: !957, file: !888, line: 217, baseType: !771, size: 8, offset: 576)
!991 = !DIDerivedType(tag: DW_TAG_member, scope: !957, file: !888, line: 218, baseType: !992, size: 384, offset: 640)
!992 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !957, file: !888, line: 218, size: 384, elements: !993)
!993 = !{!994, !996}
!994 = !DIDerivedType(tag: DW_TAG_member, name: "ctx", scope: !992, file: !888, line: 219, baseType: !995, size: 384)
!995 = !DICompositeType(tag: DW_TAG_array_type, baseType: !794, size: 384, elements: !458)
!996 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !992, file: !888, line: 224, baseType: !997, size: 384)
!997 = !DICompositeType(tag: DW_TAG_array_type, baseType: !998, size: 384, elements: !999)
!998 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!999 = !{!1000}
!1000 = !DISubrange(count: 6)
!1001 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !32, size: 64)
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_fdb_get", scope: !398, file: !31, line: 1434, baseType: !1003, size: 64, offset: 2944)
!1003 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1004, size: 64)
!1004 = !DISubroutineType(types: !1005)
!1005 = !{!32, !415, !853, !290, !946, !581, !987, !987, !886}
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_bridge_setlink", scope: !398, file: !31, line: 1440, baseType: !1007, size: 64, offset: 3008)
!1007 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1008, size: 64)
!1008 = !DISubroutineType(types: !1009)
!1009 = !{!32, !290, !1010, !581, !886}
!1010 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !963, size: 64)
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_bridge_getlink", scope: !398, file: !31, line: 1444, baseType: !1012, size: 64, offset: 3072)
!1012 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1013, size: 64)
!1013 = !DISubroutineType(types: !1014)
!1014 = !{!32, !415, !987, !987, !290, !987, !32}
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_bridge_dellink", scope: !398, file: !31, line: 1449, baseType: !1016, size: 64, offset: 3136)
!1016 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1017, size: 64)
!1017 = !DISubroutineType(types: !1018)
!1018 = !{!32, !290, !1010, !581}
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_change_carrier", scope: !398, file: !31, line: 1452, baseType: !1020, size: 64, offset: 3200)
!1020 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1021, size: 64)
!1021 = !DISubroutineType(types: !1022)
!1022 = !{!32, !290, !771}
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_phys_port_id", scope: !398, file: !31, line: 1454, baseType: !1024, size: 64, offset: 3264)
!1024 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1025, size: 64)
!1025 = !DISubroutineType(types: !1026)
!1026 = !{!32, !290, !1027}
!1027 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1028, size: 64)
!1028 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netdev_phys_item_id", file: !31, line: 820, size: 264, elements: !1029)
!1029 = !{!1030, !1032}
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1028, file: !31, line: 821, baseType: !1031, size: 256)
!1031 = !DICompositeType(tag: DW_TAG_array_type, baseType: !482, size: 256, elements: !819)
!1032 = !DIDerivedType(tag: DW_TAG_member, name: "id_len", scope: !1028, file: !31, line: 822, baseType: !482, size: 8, offset: 256)
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_port_parent_id", scope: !398, file: !31, line: 1456, baseType: !1024, size: 64, offset: 3328)
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_phys_port_name", scope: !398, file: !31, line: 1458, baseType: !1035, size: 64, offset: 3392)
!1035 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1036, size: 64)
!1036 = !DISubroutineType(types: !1037)
!1037 = !{!32, !290, !1038, !1039}
!1038 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !268, size: 64)
!1039 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !277, line: 55, baseType: !1040)
!1040 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_size_t", file: !1041, line: 72, baseType: !1042)
!1041 = !DIFile(filename: "./include/uapi/asm-generic/posix_types.h", directory: "/home/lizy2001/genbc/linux")
!1042 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ulong_t", file: !1041, line: 16, baseType: !312)
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_udp_tunnel_add", scope: !398, file: !31, line: 1460, baseType: !1044, size: 64, offset: 3456)
!1044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1045, size: 64)
!1045 = !DISubroutineType(types: !1046)
!1046 = !{null, !290, !1047}
!1047 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1048, size: 64)
!1048 = !DICompositeType(tag: DW_TAG_structure_type, name: "udp_tunnel_info", file: !31, line: 67, flags: DIFlagFwdDecl)
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_udp_tunnel_del", scope: !398, file: !31, line: 1462, baseType: !1044, size: 64, offset: 3520)
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_dfwd_add_station", scope: !398, file: !31, line: 1464, baseType: !1051, size: 64, offset: 3584)
!1051 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1052, size: 64)
!1052 = !DISubroutineType(types: !1053)
!1053 = !{!591, !290, !290}
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_dfwd_del_station", scope: !398, file: !31, line: 1466, baseType: !1055, size: 64, offset: 3648)
!1055 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1056, size: 64)
!1056 = !DISubroutineType(types: !1057)
!1057 = !{null, !290, !591}
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_tx_maxrate", scope: !398, file: !31, line: 1469, baseType: !1059, size: 64, offset: 3712)
!1059 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1060, size: 64)
!1060 = !DISubroutineType(types: !1061)
!1061 = !{!32, !290, !32, !987}
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_iflink", scope: !398, file: !31, line: 1472, baseType: !1063, size: 64, offset: 3776)
!1063 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1064, size: 64)
!1064 = !DISubroutineType(types: !1065)
!1065 = !{!32, !773}
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_change_proto_down", scope: !398, file: !31, line: 1473, baseType: !1020, size: 64, offset: 3840)
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_fill_metadata_dst", scope: !398, file: !31, line: 1475, baseType: !1068, size: 64, offset: 3904)
!1068 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1069, size: 64)
!1069 = !DISubroutineType(types: !1070)
!1070 = !{!32, !290, !415}
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_rx_headroom", scope: !398, file: !31, line: 1477, baseType: !583, size: 64, offset: 3968)
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_bpf", scope: !398, file: !31, line: 1479, baseType: !1073, size: 64, offset: 4032)
!1073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1074, size: 64)
!1074 = !DISubroutineType(types: !1075)
!1075 = !{!32, !290, !1076}
!1076 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1077, size: 64)
!1077 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netdev_bpf", file: !31, line: 894, size: 256, elements: !1078)
!1078 = !{!1079, !1080}
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "command", scope: !1077, file: !31, line: 895, baseType: !57, size: 32)
!1080 = !DIDerivedType(tag: DW_TAG_member, scope: !1077, file: !31, line: 896, baseType: !1081, size: 192, offset: 64)
!1081 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1077, file: !31, line: 896, size: 192, elements: !1082)
!1082 = !{!1083, !1092, !5471}
!1083 = !DIDerivedType(tag: DW_TAG_member, scope: !1081, file: !31, line: 898, baseType: !1084, size: 192)
!1084 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1081, file: !31, line: 898, size: 192, elements: !1085)
!1085 = !{!1086, !1087, !1091}
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1084, file: !31, line: 899, baseType: !987, size: 32)
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "prog", scope: !1084, file: !31, line: 900, baseType: !1088, size: 64, offset: 64)
!1088 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1089, size: 64)
!1089 = !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_prog", file: !1090, line: 11, flags: DIFlagFwdDecl)
!1090 = !DIFile(filename: "./include/net/flow_dissector.h", directory: "/home/lizy2001/genbc/linux")
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "extack", scope: !1084, file: !31, line: 901, baseType: !886, size: 64, offset: 128)
!1092 = !DIDerivedType(tag: DW_TAG_member, scope: !1081, file: !31, line: 904, baseType: !1093, size: 64)
!1093 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1081, file: !31, line: 904, size: 64, elements: !1094)
!1094 = !{!1095}
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "offmap", scope: !1093, file: !31, line: 905, baseType: !1096, size: 64)
!1096 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1097, size: 64)
!1097 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_offloaded_map", file: !65, line: 222, size: 2560, elements: !1098)
!1098 = !{!1099, !5450, !5451, !5469, !5470}
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "map", scope: !1097, file: !65, line: 223, baseType: !1100, size: 2048)
!1100 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_map", file: !65, line: 141, size: 2048, elements: !1101)
!1101 = !{!1102, !5424, !5425, !5426, !5427, !5428, !5429, !5430, !5431, !5432, !5433, !5434, !5435, !5436, !5441, !5442, !5443, !5444, !5445, !5446, !5447, !5448, !5449}
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !1100, file: !65, line: 145, baseType: !1103, size: 64, align: 512)
!1103 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1104, size: 64)
!1104 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1105)
!1105 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_map_ops", file: !65, line: 54, size: 2368, elements: !1106)
!1106 = !{!1107, !1306, !1311, !5096, !5100, !5104, !5105, !5109, !5115, !5116, !5117, !5118, !5119, !5123, !5127, !5131, !5132, !5133, !5137, !5138, !5150, !5154, !5158, !5170, !5359, !5363, !5367, !5372, !5376, !5380, !5384, !5390, !5394, !5401, !5405, !5407, !5408}
!1107 = !DIDerivedType(tag: DW_TAG_member, name: "map_alloc_check", scope: !1105, file: !65, line: 56, baseType: !1108, size: 64)
!1108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1109, size: 64)
!1109 = !DISubroutineType(types: !1110)
!1110 = !{!32, !1111}
!1111 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1112, size: 64)
!1112 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "bpf_attr", file: !96, line: 483, size: 960, align: 64, elements: !1113)
!1113 = !{!1114, !1130, !1141, !1152, !1176, !1182, !1190, !1207, !1220, !1226, !1235, !1240, !1248, !1260, !1280, !1287, !1291, !1295, !1300}
!1114 = !DIDerivedType(tag: DW_TAG_member, scope: !1112, file: !96, line: 484, baseType: !1115, size: 512)
!1115 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1112, file: !96, line: 484, size: 512, elements: !1116)
!1116 = !{!1117, !1118, !1119, !1120, !1121, !1122, !1123, !1124, !1125, !1126, !1127, !1128, !1129}
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "map_type", scope: !1115, file: !96, line: 485, baseType: !493, size: 32)
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "key_size", scope: !1115, file: !96, line: 486, baseType: !493, size: 32, offset: 32)
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "value_size", scope: !1115, file: !96, line: 487, baseType: !493, size: 32, offset: 64)
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "max_entries", scope: !1115, file: !96, line: 488, baseType: !493, size: 32, offset: 96)
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "map_flags", scope: !1115, file: !96, line: 489, baseType: !493, size: 32, offset: 128)
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "inner_map_fd", scope: !1115, file: !96, line: 492, baseType: !493, size: 32, offset: 160)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "numa_node", scope: !1115, file: !96, line: 493, baseType: !493, size: 32, offset: 192)
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "map_name", scope: !1115, file: !96, line: 496, baseType: !267, size: 128, offset: 224)
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "map_ifindex", scope: !1115, file: !96, line: 497, baseType: !493, size: 32, offset: 352)
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "btf_fd", scope: !1115, file: !96, line: 498, baseType: !493, size: 32, offset: 384)
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "btf_key_type_id", scope: !1115, file: !96, line: 499, baseType: !493, size: 32, offset: 416)
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "btf_value_type_id", scope: !1115, file: !96, line: 500, baseType: !493, size: 32, offset: 448)
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "btf_vmlinux_value_type_id", scope: !1115, file: !96, line: 501, baseType: !493, size: 32, offset: 480)
!1130 = !DIDerivedType(tag: DW_TAG_member, scope: !1112, file: !96, line: 507, baseType: !1131, size: 256)
!1131 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1112, file: !96, line: 507, size: 256, elements: !1132)
!1132 = !{!1133, !1134, !1135, !1140}
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "map_fd", scope: !1131, file: !96, line: 508, baseType: !493, size: 32)
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !1131, file: !96, line: 509, baseType: !333, size: 64, align: 64, offset: 64)
!1135 = !DIDerivedType(tag: DW_TAG_member, scope: !1131, file: !96, line: 510, baseType: !1136, size: 64, offset: 128)
!1136 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1131, file: !96, line: 510, size: 64, elements: !1137)
!1137 = !{!1138, !1139}
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1136, file: !96, line: 511, baseType: !333, size: 64, align: 64)
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "next_key", scope: !1136, file: !96, line: 512, baseType: !333, size: 64, align: 64)
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1131, file: !96, line: 514, baseType: !333, size: 64, offset: 192)
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "batch", scope: !1112, file: !96, line: 532, baseType: !1142, size: 448)
!1142 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1112, file: !96, line: 517, size: 448, elements: !1143)
!1143 = !{!1144, !1145, !1146, !1147, !1148, !1149, !1150, !1151}
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "in_batch", scope: !1142, file: !96, line: 518, baseType: !333, size: 64, align: 64)
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "out_batch", scope: !1142, file: !96, line: 521, baseType: !333, size: 64, align: 64, offset: 64)
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "keys", scope: !1142, file: !96, line: 522, baseType: !333, size: 64, align: 64, offset: 128)
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "values", scope: !1142, file: !96, line: 523, baseType: !333, size: 64, align: 64, offset: 192)
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1142, file: !96, line: 524, baseType: !493, size: 32, offset: 256)
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "map_fd", scope: !1142, file: !96, line: 529, baseType: !493, size: 32, offset: 288)
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "elem_flags", scope: !1142, file: !96, line: 530, baseType: !333, size: 64, offset: 320)
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1142, file: !96, line: 531, baseType: !333, size: 64, offset: 384)
!1152 = !DIDerivedType(tag: DW_TAG_member, scope: !1112, file: !96, line: 534, baseType: !1153, size: 960)
!1153 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1112, file: !96, line: 534, size: 960, elements: !1154)
!1154 = !{!1155, !1156, !1157, !1158, !1159, !1160, !1161, !1162, !1163, !1164, !1165, !1166, !1167, !1168, !1169, !1170, !1171, !1172, !1173, !1174, !1175}
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "prog_type", scope: !1153, file: !96, line: 535, baseType: !493, size: 32)
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "insn_cnt", scope: !1153, file: !96, line: 536, baseType: !493, size: 32, offset: 32)
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "insns", scope: !1153, file: !96, line: 537, baseType: !333, size: 64, align: 64, offset: 64)
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "license", scope: !1153, file: !96, line: 538, baseType: !333, size: 64, align: 64, offset: 128)
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "log_level", scope: !1153, file: !96, line: 539, baseType: !493, size: 32, offset: 192)
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "log_size", scope: !1153, file: !96, line: 540, baseType: !493, size: 32, offset: 224)
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "log_buf", scope: !1153, file: !96, line: 541, baseType: !333, size: 64, align: 64, offset: 256)
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "kern_version", scope: !1153, file: !96, line: 542, baseType: !493, size: 32, offset: 320)
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "prog_flags", scope: !1153, file: !96, line: 543, baseType: !493, size: 32, offset: 352)
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "prog_name", scope: !1153, file: !96, line: 544, baseType: !267, size: 128, offset: 384)
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "prog_ifindex", scope: !1153, file: !96, line: 545, baseType: !493, size: 32, offset: 512)
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "expected_attach_type", scope: !1153, file: !96, line: 550, baseType: !493, size: 32, offset: 544)
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "prog_btf_fd", scope: !1153, file: !96, line: 551, baseType: !493, size: 32, offset: 576)
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "func_info_rec_size", scope: !1153, file: !96, line: 552, baseType: !493, size: 32, offset: 608)
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "func_info", scope: !1153, file: !96, line: 553, baseType: !333, size: 64, align: 64, offset: 640)
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "func_info_cnt", scope: !1153, file: !96, line: 554, baseType: !493, size: 32, offset: 704)
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "line_info_rec_size", scope: !1153, file: !96, line: 555, baseType: !493, size: 32, offset: 736)
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "line_info", scope: !1153, file: !96, line: 556, baseType: !333, size: 64, align: 64, offset: 768)
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "line_info_cnt", scope: !1153, file: !96, line: 557, baseType: !493, size: 32, offset: 832)
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "attach_btf_id", scope: !1153, file: !96, line: 558, baseType: !493, size: 32, offset: 864)
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "attach_prog_fd", scope: !1153, file: !96, line: 559, baseType: !493, size: 32, offset: 896)
!1176 = !DIDerivedType(tag: DW_TAG_member, scope: !1112, file: !96, line: 562, baseType: !1177, size: 128)
!1177 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1112, file: !96, line: 562, size: 128, elements: !1178)
!1178 = !{!1179, !1180, !1181}
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "pathname", scope: !1177, file: !96, line: 563, baseType: !333, size: 64, align: 64)
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "bpf_fd", scope: !1177, file: !96, line: 564, baseType: !493, size: 32, offset: 64)
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "file_flags", scope: !1177, file: !96, line: 565, baseType: !493, size: 32, offset: 96)
!1182 = !DIDerivedType(tag: DW_TAG_member, scope: !1112, file: !96, line: 568, baseType: !1183, size: 160)
!1183 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1112, file: !96, line: 568, size: 160, elements: !1184)
!1184 = !{!1185, !1186, !1187, !1188, !1189}
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "target_fd", scope: !1183, file: !96, line: 569, baseType: !493, size: 32)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "attach_bpf_fd", scope: !1183, file: !96, line: 570, baseType: !493, size: 32, offset: 32)
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "attach_type", scope: !1183, file: !96, line: 571, baseType: !493, size: 32, offset: 64)
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "attach_flags", scope: !1183, file: !96, line: 572, baseType: !493, size: 32, offset: 96)
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "replace_bpf_fd", scope: !1183, file: !96, line: 573, baseType: !493, size: 32, offset: 128)
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "test", scope: !1112, file: !96, line: 600, baseType: !1191, size: 576)
!1191 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1112, file: !96, line: 579, size: 576, elements: !1192)
!1192 = !{!1193, !1194, !1195, !1196, !1197, !1198, !1199, !1200, !1201, !1202, !1203, !1204, !1205, !1206}
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "prog_fd", scope: !1191, file: !96, line: 580, baseType: !493, size: 32)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "retval", scope: !1191, file: !96, line: 581, baseType: !493, size: 32, offset: 32)
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "data_size_in", scope: !1191, file: !96, line: 582, baseType: !493, size: 32, offset: 64)
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "data_size_out", scope: !1191, file: !96, line: 583, baseType: !493, size: 32, offset: 96)
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "data_in", scope: !1191, file: !96, line: 587, baseType: !333, size: 64, align: 64, offset: 128)
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "data_out", scope: !1191, file: !96, line: 588, baseType: !333, size: 64, align: 64, offset: 192)
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "repeat", scope: !1191, file: !96, line: 589, baseType: !493, size: 32, offset: 256)
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !1191, file: !96, line: 590, baseType: !493, size: 32, offset: 288)
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_size_in", scope: !1191, file: !96, line: 591, baseType: !493, size: 32, offset: 320)
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_size_out", scope: !1191, file: !96, line: 592, baseType: !493, size: 32, offset: 352)
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_in", scope: !1191, file: !96, line: 596, baseType: !333, size: 64, align: 64, offset: 384)
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_out", scope: !1191, file: !96, line: 597, baseType: !333, size: 64, align: 64, offset: 448)
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1191, file: !96, line: 598, baseType: !493, size: 32, offset: 512)
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "cpu", scope: !1191, file: !96, line: 599, baseType: !493, size: 32, offset: 544)
!1207 = !DIDerivedType(tag: DW_TAG_member, scope: !1112, file: !96, line: 602, baseType: !1208, size: 96)
!1208 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1112, file: !96, line: 602, size: 96, elements: !1209)
!1209 = !{!1210, !1218, !1219}
!1210 = !DIDerivedType(tag: DW_TAG_member, scope: !1208, file: !96, line: 603, baseType: !1211, size: 32)
!1211 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1208, file: !96, line: 603, size: 32, elements: !1212)
!1212 = !{!1213, !1214, !1215, !1216, !1217}
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "start_id", scope: !1211, file: !96, line: 604, baseType: !493, size: 32)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "prog_id", scope: !1211, file: !96, line: 605, baseType: !493, size: 32)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "map_id", scope: !1211, file: !96, line: 606, baseType: !493, size: 32)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "btf_id", scope: !1211, file: !96, line: 607, baseType: !493, size: 32)
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "link_id", scope: !1211, file: !96, line: 608, baseType: !493, size: 32)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "next_id", scope: !1208, file: !96, line: 610, baseType: !493, size: 32, offset: 32)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "open_flags", scope: !1208, file: !96, line: 611, baseType: !493, size: 32, offset: 64)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !1112, file: !96, line: 618, baseType: !1221, size: 128)
!1221 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1112, file: !96, line: 614, size: 128, elements: !1222)
!1222 = !{!1223, !1224, !1225}
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "bpf_fd", scope: !1221, file: !96, line: 615, baseType: !493, size: 32)
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "info_len", scope: !1221, file: !96, line: 616, baseType: !493, size: 32, offset: 32)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !1221, file: !96, line: 617, baseType: !333, size: 64, align: 64, offset: 64)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "query", scope: !1112, file: !96, line: 627, baseType: !1227, size: 256)
!1227 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1112, file: !96, line: 620, size: 256, elements: !1228)
!1228 = !{!1229, !1230, !1231, !1232, !1233, !1234}
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "target_fd", scope: !1227, file: !96, line: 621, baseType: !493, size: 32)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "attach_type", scope: !1227, file: !96, line: 622, baseType: !493, size: 32, offset: 32)
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "query_flags", scope: !1227, file: !96, line: 623, baseType: !493, size: 32, offset: 64)
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "attach_flags", scope: !1227, file: !96, line: 624, baseType: !493, size: 32, offset: 96)
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "prog_ids", scope: !1227, file: !96, line: 625, baseType: !333, size: 64, align: 64, offset: 128)
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "prog_cnt", scope: !1227, file: !96, line: 626, baseType: !493, size: 32, offset: 192)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "raw_tracepoint", scope: !1112, file: !96, line: 632, baseType: !1236, size: 128)
!1236 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1112, file: !96, line: 629, size: 128, elements: !1237)
!1237 = !{!1238, !1239}
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1236, file: !96, line: 630, baseType: !333, size: 64)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "prog_fd", scope: !1236, file: !96, line: 631, baseType: !493, size: 32, offset: 64)
!1240 = !DIDerivedType(tag: DW_TAG_member, scope: !1112, file: !96, line: 634, baseType: !1241, size: 256)
!1241 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1112, file: !96, line: 634, size: 256, elements: !1242)
!1242 = !{!1243, !1244, !1245, !1246, !1247}
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "btf", scope: !1241, file: !96, line: 635, baseType: !333, size: 64, align: 64)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "btf_log_buf", scope: !1241, file: !96, line: 636, baseType: !333, size: 64, align: 64, offset: 64)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "btf_size", scope: !1241, file: !96, line: 637, baseType: !493, size: 32, offset: 128)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "btf_log_size", scope: !1241, file: !96, line: 638, baseType: !493, size: 32, offset: 160)
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "btf_log_level", scope: !1241, file: !96, line: 639, baseType: !493, size: 32, offset: 192)
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "task_fd_query", scope: !1112, file: !96, line: 656, baseType: !1249, size: 384)
!1249 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1112, file: !96, line: 642, size: 384, elements: !1250)
!1250 = !{!1251, !1252, !1253, !1254, !1255, !1256, !1257, !1258, !1259}
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !1249, file: !96, line: 643, baseType: !493, size: 32)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "fd", scope: !1249, file: !96, line: 644, baseType: !493, size: 32, offset: 32)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1249, file: !96, line: 645, baseType: !493, size: 32, offset: 64)
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "buf_len", scope: !1249, file: !96, line: 646, baseType: !493, size: 32, offset: 96)
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1249, file: !96, line: 647, baseType: !333, size: 64, align: 64, offset: 128)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "prog_id", scope: !1249, file: !96, line: 652, baseType: !493, size: 32, offset: 192)
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "fd_type", scope: !1249, file: !96, line: 653, baseType: !493, size: 32, offset: 224)
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "probe_offset", scope: !1249, file: !96, line: 654, baseType: !333, size: 64, offset: 256)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "probe_addr", scope: !1249, file: !96, line: 655, baseType: !333, size: 64, offset: 320)
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "link_create", scope: !1112, file: !96, line: 673, baseType: !1261, size: 256)
!1261 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1112, file: !96, line: 658, size: 256, elements: !1262)
!1262 = !{!1263, !1264, !1269, !1270, !1271}
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "prog_fd", scope: !1261, file: !96, line: 659, baseType: !493, size: 32)
!1264 = !DIDerivedType(tag: DW_TAG_member, scope: !1261, file: !96, line: 660, baseType: !1265, size: 32, offset: 32)
!1265 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1261, file: !96, line: 660, size: 32, elements: !1266)
!1266 = !{!1267, !1268}
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "target_fd", scope: !1265, file: !96, line: 661, baseType: !493, size: 32)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "target_ifindex", scope: !1265, file: !96, line: 662, baseType: !493, size: 32)
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "attach_type", scope: !1261, file: !96, line: 664, baseType: !493, size: 32, offset: 64)
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1261, file: !96, line: 665, baseType: !493, size: 32, offset: 96)
!1271 = !DIDerivedType(tag: DW_TAG_member, scope: !1261, file: !96, line: 666, baseType: !1272, size: 128, offset: 128)
!1272 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1261, file: !96, line: 666, size: 128, elements: !1273)
!1273 = !{!1274, !1275}
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "target_btf_id", scope: !1272, file: !96, line: 667, baseType: !493, size: 32)
!1275 = !DIDerivedType(tag: DW_TAG_member, scope: !1272, file: !96, line: 668, baseType: !1276, size: 128)
!1276 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1272, file: !96, line: 668, size: 128, elements: !1277)
!1277 = !{!1278, !1279}
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "iter_info", scope: !1276, file: !96, line: 669, baseType: !333, size: 64, align: 64)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "iter_info_len", scope: !1276, file: !96, line: 670, baseType: !493, size: 32, offset: 64)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "link_update", scope: !1112, file: !96, line: 683, baseType: !1281, size: 128)
!1281 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1112, file: !96, line: 675, size: 128, elements: !1282)
!1282 = !{!1283, !1284, !1285, !1286}
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "link_fd", scope: !1281, file: !96, line: 676, baseType: !493, size: 32)
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "new_prog_fd", scope: !1281, file: !96, line: 678, baseType: !493, size: 32, offset: 32)
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1281, file: !96, line: 679, baseType: !493, size: 32, offset: 64)
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "old_prog_fd", scope: !1281, file: !96, line: 682, baseType: !493, size: 32, offset: 96)
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "link_detach", scope: !1112, file: !96, line: 687, baseType: !1288, size: 32)
!1288 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1112, file: !96, line: 685, size: 32, elements: !1289)
!1289 = !{!1290}
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "link_fd", scope: !1288, file: !96, line: 686, baseType: !493, size: 32)
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "enable_stats", scope: !1112, file: !96, line: 691, baseType: !1292, size: 32)
!1292 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1112, file: !96, line: 689, size: 32, elements: !1293)
!1293 = !{!1294}
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1292, file: !96, line: 690, baseType: !493, size: 32)
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "iter_create", scope: !1112, file: !96, line: 696, baseType: !1296, size: 64)
!1296 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1112, file: !96, line: 693, size: 64, elements: !1297)
!1297 = !{!1298, !1299}
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "link_fd", scope: !1296, file: !96, line: 694, baseType: !493, size: 32)
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1296, file: !96, line: 695, baseType: !493, size: 32, offset: 32)
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "prog_bind_map", scope: !1112, file: !96, line: 702, baseType: !1301, size: 96)
!1301 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1112, file: !96, line: 698, size: 96, elements: !1302)
!1302 = !{!1303, !1304, !1305}
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "prog_fd", scope: !1301, file: !96, line: 699, baseType: !493, size: 32)
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "map_fd", scope: !1301, file: !96, line: 700, baseType: !493, size: 32, offset: 32)
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1301, file: !96, line: 701, baseType: !493, size: 32, offset: 64)
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "map_alloc", scope: !1105, file: !65, line: 57, baseType: !1307, size: 64, offset: 64)
!1307 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1308, size: 64)
!1308 = !DISubroutineType(types: !1309)
!1309 = !{!1310, !1111}
!1310 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1100, size: 64)
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "map_release", scope: !1105, file: !65, line: 58, baseType: !1312, size: 64, offset: 128)
!1312 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1313, size: 64)
!1313 = !DISubroutineType(types: !1314)
!1314 = !{null, !1310, !1315}
!1315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1316, size: 64)
!1316 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file", file: !1317, line: 916, size: 1856, align: 32, elements: !1318)
!1317 = !DIFile(filename: "./include/linux/fs.h", directory: "/home/lizy2001/genbc/linux")
!1318 = !{!1319, !1329, !5046, !5047, !5048, !5049, !5058, !5059, !5060, !5061, !5062, !5063, !5079, !5080, !5089, !5090, !5091, !5092, !5093, !5094, !5095}
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "f_u", scope: !1316, file: !1317, line: 920, baseType: !1320, size: 128)
!1320 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1316, file: !1317, line: 917, size: 128, elements: !1321)
!1321 = !{!1322, !1328}
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "fu_llist", scope: !1320, file: !1317, line: 918, baseType: !1323, size: 64)
!1323 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "llist_node", file: !1324, line: 58, size: 64, elements: !1325)
!1324 = !DIFile(filename: "./include/linux/llist.h", directory: "/home/lizy2001/genbc/linux")
!1325 = !{!1326}
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1323, file: !1324, line: 59, baseType: !1327, size: 64)
!1327 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1323, size: 64)
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "fu_rcuhead", scope: !1320, file: !1317, line: 919, baseType: !299, size: 128, align: 64)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "f_path", scope: !1316, file: !1317, line: 921, baseType: !1330, size: 128, offset: 128)
!1330 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "path", file: !1331, line: 8, size: 128, elements: !1332)
!1331 = !DIFile(filename: "./include/linux/path.h", directory: "/home/lizy2001/genbc/linux")
!1332 = !{!1333, !1337}
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "mnt", scope: !1330, file: !1331, line: 9, baseType: !1334, size: 64)
!1334 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1335, size: 64)
!1335 = !DICompositeType(tag: DW_TAG_structure_type, name: "vfsmount", file: !1336, line: 18, flags: DIFlagFwdDecl)
!1336 = !DIFile(filename: "./include/linux/dcache.h", directory: "/home/lizy2001/genbc/linux")
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "dentry", scope: !1330, file: !1331, line: 10, baseType: !1338, size: 64, offset: 64)
!1338 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1339, size: 64)
!1339 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry", file: !1336, line: 89, size: 1536, elements: !1340)
!1340 = !{!1341, !1342, !1352, !1360, !1361, !1374, !5015, !5016, !5028, !5029, !5030, !5031, !5032, !5038, !5039, !5040}
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "d_flags", scope: !1339, file: !1336, line: 91, baseType: !7, size: 32)
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "d_seq", scope: !1339, file: !1336, line: 92, baseType: !1343, size: 32, offset: 32)
!1343 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_spinlock_t", file: !1344, line: 277, baseType: !1345)
!1344 = !DIFile(filename: "./include/linux/seqlock.h", directory: "/home/lizy2001/genbc/linux")
!1345 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_spinlock", file: !1344, line: 277, size: 32, elements: !1346)
!1346 = !{!1347}
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !1345, file: !1344, line: 277, baseType: !1348, size: 32)
!1348 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_t", file: !1344, line: 70, baseType: !1349)
!1349 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount", file: !1344, line: 65, size: 32, elements: !1350)
!1350 = !{!1351}
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "sequence", scope: !1349, file: !1344, line: 66, baseType: !7, size: 32)
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !1339, file: !1336, line: 93, baseType: !1353, size: 128, offset: 64)
!1353 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_node", file: !1354, line: 38, size: 128, elements: !1355)
!1354 = !DIFile(filename: "./include/linux/list_bl.h", directory: "/home/lizy2001/genbc/linux")
!1355 = !{!1356, !1358}
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1353, file: !1354, line: 39, baseType: !1357, size: 64)
!1357 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1353, size: 64)
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !1353, file: !1354, line: 39, baseType: !1359, size: 64, offset: 64)
!1359 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1357, size: 64)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "d_parent", scope: !1339, file: !1336, line: 94, baseType: !1338, size: 64, offset: 192)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "d_name", scope: !1339, file: !1336, line: 95, baseType: !1362, size: 128, offset: 256)
!1362 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qstr", file: !1336, line: 47, size: 128, elements: !1363)
!1363 = !{!1364, !1373}
!1364 = !DIDerivedType(tag: DW_TAG_member, scope: !1362, file: !1336, line: 48, baseType: !1365, size: 64)
!1365 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1362, file: !1336, line: 48, size: 64, elements: !1366)
!1366 = !{!1367, !1372}
!1367 = !DIDerivedType(tag: DW_TAG_member, scope: !1365, file: !1336, line: 49, baseType: !1368, size: 64)
!1368 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1365, file: !1336, line: 49, size: 64, elements: !1369)
!1369 = !{!1370, !1371}
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !1368, file: !1336, line: 50, baseType: !987, size: 32)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1368, file: !1336, line: 50, baseType: !987, size: 32, offset: 32)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "hash_len", scope: !1365, file: !1336, line: 52, baseType: !331, size: 64)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1362, file: !1336, line: 54, baseType: !946, size: 64, offset: 64)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "d_inode", scope: !1339, file: !1336, line: 96, baseType: !1375, size: 64, offset: 384)
!1375 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1376, size: 64)
!1376 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode", file: !1317, line: 610, size: 4224, elements: !1377)
!1377 = !{!1378, !1380, !1381, !1389, !1396, !1397, !1544, !4744, !4745, !4746, !4752, !4753, !4754, !4755, !4756, !4757, !4758, !4759, !4760, !4761, !4762, !4763, !4764, !4765, !4766, !4767, !4768, !4769, !4770, !4771, !4776, !4777, !4778, !4779, !4780, !4781, !4782, !4991, !4999, !5000, !5001, !5011, !5012, !5013, !5014}
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "i_mode", scope: !1376, file: !1317, line: 611, baseType: !1379, size: 16)
!1379 = !DIDerivedType(tag: DW_TAG_typedef, name: "umode_t", file: !277, line: 19, baseType: !476)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "i_opflags", scope: !1376, file: !1317, line: 612, baseType: !476, size: 16, offset: 16)
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "i_uid", scope: !1376, file: !1317, line: 613, baseType: !1382, size: 32, offset: 32)
!1382 = !DIDerivedType(tag: DW_TAG_typedef, name: "kuid_t", file: !1383, line: 23, baseType: !1384)
!1383 = !DIFile(filename: "./include/linux/uidgid.h", directory: "/home/lizy2001/genbc/linux")
!1384 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1383, line: 21, size: 32, elements: !1385)
!1385 = !{!1386}
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1384, file: !1383, line: 22, baseType: !1387, size: 32)
!1387 = !DIDerivedType(tag: DW_TAG_typedef, name: "uid_t", file: !277, line: 32, baseType: !1388)
!1388 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_uid32_t", file: !1041, line: 49, baseType: !7)
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "i_gid", scope: !1376, file: !1317, line: 614, baseType: !1390, size: 32, offset: 64)
!1390 = !DIDerivedType(tag: DW_TAG_typedef, name: "kgid_t", file: !1383, line: 28, baseType: !1391)
!1391 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1383, line: 26, size: 32, elements: !1392)
!1392 = !{!1393}
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1391, file: !1383, line: 27, baseType: !1394, size: 32)
!1394 = !DIDerivedType(tag: DW_TAG_typedef, name: "gid_t", file: !277, line: 33, baseType: !1395)
!1395 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_gid32_t", file: !1041, line: 50, baseType: !7)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !1376, file: !1317, line: 615, baseType: !7, size: 32, offset: 96)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "i_op", scope: !1376, file: !1317, line: 622, baseType: !1398, size: 64, offset: 128)
!1398 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1399, size: 64)
!1399 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1400)
!1400 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode_operations", file: !1317, line: 1864, size: 1536, align: 512, elements: !1401)
!1401 = !{!1402, !1406, !1419, !1423, !1429, !1433, !1437, !1441, !1445, !1449, !1453, !1454, !1460, !1464, !1488, !1517, !1524, !1530, !1535, !1539, !1540}
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "lookup", scope: !1400, file: !1317, line: 1865, baseType: !1403, size: 64)
!1403 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1404, size: 64)
!1404 = !DISubroutineType(types: !1405)
!1405 = !{!1338, !1375, !1338, !7}
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "get_link", scope: !1400, file: !1317, line: 1866, baseType: !1407, size: 64, offset: 64)
!1407 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1408, size: 64)
!1408 = !DISubroutineType(types: !1409)
!1409 = !{!292, !1338, !1375, !1410}
!1410 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1411, size: 64)
!1411 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "delayed_call", file: !1412, line: 10, size: 128, elements: !1413)
!1412 = !DIFile(filename: "./include/linux/delayed_call.h", directory: "/home/lizy2001/genbc/linux")
!1413 = !{!1414, !1418}
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !1411, file: !1412, line: 11, baseType: !1415, size: 64)
!1415 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1416, size: 64)
!1416 = !DISubroutineType(types: !1417)
!1417 = !{null, !591}
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !1411, file: !1412, line: 12, baseType: !591, size: 64, offset: 64)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "permission", scope: !1400, file: !1317, line: 1867, baseType: !1420, size: 64, offset: 128)
!1420 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1421, size: 64)
!1421 = !DISubroutineType(types: !1422)
!1422 = !{!32, !1375, !32}
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "get_acl", scope: !1400, file: !1317, line: 1868, baseType: !1424, size: 64, offset: 192)
!1424 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1425, size: 64)
!1425 = !DISubroutineType(types: !1426)
!1426 = !{!1427, !1375, !32}
!1427 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1428, size: 64)
!1428 = !DICompositeType(tag: DW_TAG_structure_type, name: "posix_acl", file: !1317, line: 581, flags: DIFlagFwdDecl)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "readlink", scope: !1400, file: !1317, line: 1870, baseType: !1430, size: 64, offset: 256)
!1430 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1431, size: 64)
!1431 = !DISubroutineType(types: !1432)
!1432 = !{!32, !1338, !1038, !32}
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "create", scope: !1400, file: !1317, line: 1872, baseType: !1434, size: 64, offset: 320)
!1434 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1435, size: 64)
!1435 = !DISubroutineType(types: !1436)
!1436 = !{!32, !1375, !1338, !1379, !771}
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !1400, file: !1317, line: 1873, baseType: !1438, size: 64, offset: 384)
!1438 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1439, size: 64)
!1439 = !DISubroutineType(types: !1440)
!1440 = !{!32, !1338, !1375, !1338}
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "unlink", scope: !1400, file: !1317, line: 1874, baseType: !1442, size: 64, offset: 448)
!1442 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1443, size: 64)
!1443 = !DISubroutineType(types: !1444)
!1444 = !{!32, !1375, !1338}
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !1400, file: !1317, line: 1875, baseType: !1446, size: 64, offset: 512)
!1446 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1447, size: 64)
!1447 = !DISubroutineType(types: !1448)
!1448 = !{!32, !1375, !1338, !292}
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !1400, file: !1317, line: 1876, baseType: !1450, size: 64, offset: 576)
!1450 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1451, size: 64)
!1451 = !DISubroutineType(types: !1452)
!1452 = !{!32, !1375, !1338, !1379}
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !1400, file: !1317, line: 1877, baseType: !1442, size: 64, offset: 640)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "mknod", scope: !1400, file: !1317, line: 1878, baseType: !1455, size: 64, offset: 704)
!1455 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1456, size: 64)
!1456 = !DISubroutineType(types: !1457)
!1457 = !{!32, !1375, !1338, !1379, !1458}
!1458 = !DIDerivedType(tag: DW_TAG_typedef, name: "dev_t", file: !277, line: 16, baseType: !1459)
!1459 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_dev_t", file: !277, line: 13, baseType: !987)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !1400, file: !1317, line: 1879, baseType: !1461, size: 64, offset: 768)
!1461 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1462, size: 64)
!1462 = !DISubroutineType(types: !1463)
!1463 = !{!32, !1375, !1338, !1375, !1338, !7}
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "setattr", scope: !1400, file: !1317, line: 1881, baseType: !1465, size: 64, offset: 832)
!1465 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1466, size: 64)
!1466 = !DISubroutineType(types: !1467)
!1467 = !{!32, !1338, !1468}
!1468 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1469, size: 64)
!1469 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iattr", file: !1317, line: 219, size: 640, elements: !1470)
!1470 = !{!1471, !1472, !1473, !1474, !1475, !1478, !1485, !1486, !1487}
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "ia_valid", scope: !1469, file: !1317, line: 220, baseType: !7, size: 32)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mode", scope: !1469, file: !1317, line: 221, baseType: !1379, size: 16, offset: 32)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "ia_uid", scope: !1469, file: !1317, line: 222, baseType: !1382, size: 32, offset: 64)
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "ia_gid", scope: !1469, file: !1317, line: 223, baseType: !1390, size: 32, offset: 96)
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "ia_size", scope: !1469, file: !1317, line: 224, baseType: !1476, size: 64, offset: 128)
!1476 = !DIDerivedType(tag: DW_TAG_typedef, name: "loff_t", file: !277, line: 46, baseType: !1477)
!1477 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_loff_t", file: !1041, line: 88, baseType: !379)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "ia_atime", scope: !1469, file: !1317, line: 225, baseType: !1479, size: 128, offset: 192)
!1479 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec64", file: !1480, line: 13, size: 128, elements: !1481)
!1480 = !DIFile(filename: "./include/linux/time64.h", directory: "/home/lizy2001/genbc/linux")
!1481 = !{!1482, !1484}
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1479, file: !1480, line: 14, baseType: !1483, size: 64)
!1483 = !DIDerivedType(tag: DW_TAG_typedef, name: "time64_t", file: !1480, line: 8, baseType: !378)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1479, file: !1480, line: 15, baseType: !998, size: 64, offset: 64)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mtime", scope: !1469, file: !1317, line: 226, baseType: !1479, size: 128, offset: 320)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "ia_ctime", scope: !1469, file: !1317, line: 227, baseType: !1479, size: 128, offset: 448)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "ia_file", scope: !1469, file: !1317, line: 234, baseType: !1315, size: 64, offset: 576)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "getattr", scope: !1400, file: !1317, line: 1882, baseType: !1489, size: 64, offset: 896)
!1489 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1490, size: 64)
!1490 = !DISubroutineType(types: !1491)
!1491 = !{!32, !1492, !1494, !987, !7}
!1492 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1493, size: 64)
!1493 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1330)
!1494 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1495, size: 64)
!1495 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kstat", file: !1496, line: 22, size: 1152, elements: !1497)
!1496 = !DIFile(filename: "./include/linux/stat.h", directory: "/home/lizy2001/genbc/linux")
!1497 = !{!1498, !1499, !1500, !1501, !1503, !1504, !1505, !1506, !1507, !1508, !1509, !1510, !1511, !1512, !1513, !1514, !1515, !1516}
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "result_mask", scope: !1495, file: !1496, line: 23, baseType: !987, size: 32)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1495, file: !1496, line: 24, baseType: !1379, size: 16, offset: 32)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "nlink", scope: !1495, file: !1496, line: 25, baseType: !7, size: 32, offset: 64)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "blksize", scope: !1495, file: !1496, line: 26, baseType: !1502, size: 32, offset: 96)
!1502 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !277, line: 104, baseType: !987)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !1495, file: !1496, line: 27, baseType: !331, size: 64, offset: 128)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "attributes_mask", scope: !1495, file: !1496, line: 28, baseType: !331, size: 64, offset: 192)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !1495, file: !1496, line: 37, baseType: !331, size: 64, offset: 256)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1495, file: !1496, line: 38, baseType: !1458, size: 32, offset: 320)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "rdev", scope: !1495, file: !1496, line: 39, baseType: !1458, size: 32, offset: 352)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1495, file: !1496, line: 40, baseType: !1382, size: 32, offset: 384)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1495, file: !1496, line: 41, baseType: !1390, size: 32, offset: 416)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1495, file: !1496, line: 42, baseType: !1476, size: 64, offset: 448)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "atime", scope: !1495, file: !1496, line: 43, baseType: !1479, size: 128, offset: 512)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "mtime", scope: !1495, file: !1496, line: 44, baseType: !1479, size: 128, offset: 640)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !1495, file: !1496, line: 45, baseType: !1479, size: 128, offset: 768)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "btime", scope: !1495, file: !1496, line: 46, baseType: !1479, size: 128, offset: 896)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !1495, file: !1496, line: 47, baseType: !331, size: 64, offset: 1024)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "mnt_id", scope: !1495, file: !1496, line: 48, baseType: !331, size: 64, offset: 1088)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "listxattr", scope: !1400, file: !1317, line: 1883, baseType: !1518, size: 64, offset: 960)
!1518 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1519, size: 64)
!1519 = !DISubroutineType(types: !1520)
!1520 = !{!1521, !1338, !1038, !1039}
!1521 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !277, line: 60, baseType: !1522)
!1522 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ssize_t", file: !1041, line: 73, baseType: !1523)
!1523 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_long_t", file: !1041, line: 15, baseType: !998)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "fiemap", scope: !1400, file: !1317, line: 1884, baseType: !1525, size: 64, offset: 1024)
!1525 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1526, size: 64)
!1526 = !DISubroutineType(types: !1527)
!1527 = !{!32, !1375, !1528, !331, !331}
!1528 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1529, size: 64)
!1529 = !DICompositeType(tag: DW_TAG_structure_type, name: "fiemap_extent_info", file: !1317, line: 50, flags: DIFlagFwdDecl)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "update_time", scope: !1400, file: !1317, line: 1886, baseType: !1531, size: 64, offset: 1088)
!1531 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1532, size: 64)
!1532 = !DISubroutineType(types: !1533)
!1533 = !{!32, !1375, !1534, !32}
!1534 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1479, size: 64)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_open", scope: !1400, file: !1317, line: 1887, baseType: !1536, size: 64, offset: 1152)
!1536 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1537, size: 64)
!1537 = !DISubroutineType(types: !1538)
!1538 = !{!32, !1375, !1338, !1315, !7, !1379}
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "tmpfile", scope: !1400, file: !1317, line: 1890, baseType: !1450, size: 64, offset: 1216)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "set_acl", scope: !1400, file: !1317, line: 1891, baseType: !1541, size: 64, offset: 1280)
!1541 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1542, size: 64)
!1542 = !DISubroutineType(types: !1543)
!1543 = !{!32, !1375, !1427, !32}
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb", scope: !1376, file: !1317, line: 623, baseType: !1545, size: 64, offset: 192)
!1545 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1546, size: 64)
!1546 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_block", file: !1317, line: 1416, size: 9472, elements: !1547)
!1547 = !{!1548, !1549, !1550, !1551, !1552, !1553, !1597, !4346, !4434, !4517, !4521, !4522, !4523, !4524, !4525, !4526, !4527, !4528, !4533, !4537, !4538, !4541, !4542, !4545, !4546, !4547, !4588, !4615, !4616, !4617, !4618, !4619, !4620, !4623, !4625, !4631, !4632, !4634, !4635, !4636, !4695, !4696, !4711, !4712, !4713, !4714, !4715, !4718, !4719, !4720, !4735, !4736, !4737, !4738, !4739, !4740, !4741, !4742, !4743}
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "s_list", scope: !1546, file: !1317, line: 1417, baseType: !284, size: 128)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "s_dev", scope: !1546, file: !1317, line: 1418, baseType: !1458, size: 32, offset: 128)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize_bits", scope: !1546, file: !1317, line: 1419, baseType: !482, size: 8, offset: 160)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize", scope: !1546, file: !1317, line: 1420, baseType: !312, size: 64, offset: 192)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "s_maxbytes", scope: !1546, file: !1317, line: 1421, baseType: !1476, size: 64, offset: 256)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "s_type", scope: !1546, file: !1317, line: 1422, baseType: !1554, size: 64, offset: 320)
!1554 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1555, size: 64)
!1555 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_system_type", file: !1317, line: 2228, size: 576, elements: !1556)
!1556 = !{!1557, !1558, !1559, !1566, !1570, !1574, !1578, !1579, !1580, !1584, !1588, !1589, !1590, !1594, !1595, !1596}
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1555, file: !1317, line: 2229, baseType: !292, size: 64)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "fs_flags", scope: !1555, file: !1317, line: 2230, baseType: !32, size: 32, offset: 64)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "init_fs_context", scope: !1555, file: !1317, line: 2238, baseType: !1560, size: 64, offset: 128)
!1560 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1561, size: 64)
!1561 = !DISubroutineType(types: !1562)
!1562 = !{!32, !1563}
!1563 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1564, size: 64)
!1564 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_context", file: !1565, line: 28, flags: DIFlagFwdDecl)
!1565 = !DIFile(filename: "./include/linux/kernfs.h", directory: "/home/lizy2001/genbc/linux")
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "parameters", scope: !1555, file: !1317, line: 2239, baseType: !1567, size: 64, offset: 192)
!1567 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1568, size: 64)
!1568 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1569)
!1569 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_parameter_spec", file: !1317, line: 70, flags: DIFlagFwdDecl)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "mount", scope: !1555, file: !1317, line: 2240, baseType: !1571, size: 64, offset: 256)
!1571 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1572, size: 64)
!1572 = !DISubroutineType(types: !1573)
!1573 = !{!1338, !1554, !32, !292, !591}
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "kill_sb", scope: !1555, file: !1317, line: 2242, baseType: !1575, size: 64, offset: 320)
!1575 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1576, size: 64)
!1576 = !DISubroutineType(types: !1577)
!1577 = !{null, !1545}
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1555, file: !1317, line: 2243, baseType: !980, size: 64, offset: 384)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1555, file: !1317, line: 2244, baseType: !1554, size: 64, offset: 448)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "fs_supers", scope: !1555, file: !1317, line: 2245, baseType: !1581, size: 64, offset: 512)
!1581 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_head", file: !277, line: 182, size: 64, elements: !1582)
!1582 = !{!1583}
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !1581, file: !277, line: 183, baseType: !280, size: 64)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "s_lock_key", scope: !1555, file: !1317, line: 2247, baseType: !1585, offset: 576)
!1585 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_class_key", file: !1586, line: 187, elements: !1587)
!1586 = !DIFile(filename: "./include/linux/lockdep_types.h", directory: "/home/lizy2001/genbc/linux")
!1587 = !{}
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount_key", scope: !1555, file: !1317, line: 2248, baseType: !1585, offset: 576)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_key", scope: !1555, file: !1317, line: 2249, baseType: !1585, offset: 576)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers_key", scope: !1555, file: !1317, line: 2250, baseType: !1591, offset: 576)
!1591 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1585, elements: !1592)
!1592 = !{!1593}
!1593 = !DISubrange(count: 3)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock_key", scope: !1555, file: !1317, line: 2252, baseType: !1585, offset: 576)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_key", scope: !1555, file: !1317, line: 2253, baseType: !1585, offset: 576)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_dir_key", scope: !1555, file: !1317, line: 2254, baseType: !1585, offset: 576)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "s_op", scope: !1546, file: !1317, line: 1423, baseType: !1598, size: 64, offset: 384)
!1598 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1599, size: 64)
!1599 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1600)
!1600 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_operations", file: !1317, line: 1935, size: 1472, elements: !1601)
!1601 = !{!1602, !1606, !1610, !1611, !1615, !1621, !1625, !1626, !1627, !1631, !1635, !1636, !1637, !1638, !1644, !1648, !1649, !1712, !1713, !1714, !1715, !4330, !4345}
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_inode", scope: !1600, file: !1317, line: 1936, baseType: !1603, size: 64)
!1603 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1604, size: 64)
!1604 = !DISubroutineType(types: !1605)
!1605 = !{!1375, !1545}
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_inode", scope: !1600, file: !1317, line: 1937, baseType: !1607, size: 64, offset: 64)
!1607 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1608, size: 64)
!1608 = !DISubroutineType(types: !1609)
!1609 = !{null, !1375}
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !1600, file: !1317, line: 1938, baseType: !1607, size: 64, offset: 128)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_inode", scope: !1600, file: !1317, line: 1940, baseType: !1612, size: 64, offset: 192)
!1612 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1613, size: 64)
!1613 = !DISubroutineType(types: !1614)
!1614 = !{null, !1375, !32}
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "write_inode", scope: !1600, file: !1317, line: 1941, baseType: !1616, size: 64, offset: 256)
!1616 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1617, size: 64)
!1617 = !DISubroutineType(types: !1618)
!1618 = !{!32, !1375, !1619}
!1619 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1620, size: 64)
!1620 = !DICompositeType(tag: DW_TAG_structure_type, name: "writeback_control", file: !1317, line: 289, flags: DIFlagFwdDecl)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "drop_inode", scope: !1600, file: !1317, line: 1942, baseType: !1622, size: 64, offset: 320)
!1622 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1623, size: 64)
!1623 = !DISubroutineType(types: !1624)
!1624 = !{!32, !1375}
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "evict_inode", scope: !1600, file: !1317, line: 1943, baseType: !1607, size: 64, offset: 384)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "put_super", scope: !1600, file: !1317, line: 1944, baseType: !1575, size: 64, offset: 448)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "sync_fs", scope: !1600, file: !1317, line: 1945, baseType: !1628, size: 64, offset: 512)
!1628 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1629, size: 64)
!1629 = !DISubroutineType(types: !1630)
!1630 = !{!32, !1545, !32}
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_super", scope: !1600, file: !1317, line: 1946, baseType: !1632, size: 64, offset: 576)
!1632 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1633, size: 64)
!1633 = !DISubroutineType(types: !1634)
!1634 = !{!32, !1545}
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_fs", scope: !1600, file: !1317, line: 1947, baseType: !1632, size: 64, offset: 640)
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_super", scope: !1600, file: !1317, line: 1948, baseType: !1632, size: 64, offset: 704)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "unfreeze_fs", scope: !1600, file: !1317, line: 1949, baseType: !1632, size: 64, offset: 768)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "statfs", scope: !1600, file: !1317, line: 1950, baseType: !1639, size: 64, offset: 832)
!1639 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1640, size: 64)
!1640 = !DISubroutineType(types: !1641)
!1641 = !{!32, !1338, !1642}
!1642 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1643, size: 64)
!1643 = !DICompositeType(tag: DW_TAG_structure_type, name: "kstatfs", file: !1317, line: 57, flags: DIFlagFwdDecl)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "remount_fs", scope: !1600, file: !1317, line: 1951, baseType: !1645, size: 64, offset: 896)
!1645 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1646, size: 64)
!1646 = !DISubroutineType(types: !1647)
!1647 = !{!32, !1545, !1001, !1038}
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "umount_begin", scope: !1600, file: !1317, line: 1952, baseType: !1575, size: 64, offset: 960)
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !1600, file: !1317, line: 1954, baseType: !1650, size: 64, offset: 1024)
!1650 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1651, size: 64)
!1651 = !DISubroutineType(types: !1652)
!1652 = !{!32, !1653, !1338}
!1653 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1654, size: 64)
!1654 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seq_file", file: !1655, line: 16, size: 896, elements: !1656)
!1655 = !DIFile(filename: "./include/linux/seq_file.h", directory: "/home/lizy2001/genbc/linux")
!1656 = !{!1657, !1658, !1659, !1660, !1661, !1662, !1663, !1664, !1685, !1707, !1708, !1711}
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1654, file: !1655, line: 17, baseType: !1038, size: 64)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1654, file: !1655, line: 18, baseType: !1039, size: 64, offset: 64)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "from", scope: !1654, file: !1655, line: 19, baseType: !1039, size: 64, offset: 128)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1654, file: !1655, line: 20, baseType: !1039, size: 64, offset: 192)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "pad_until", scope: !1654, file: !1655, line: 21, baseType: !1039, size: 64, offset: 256)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1654, file: !1655, line: 22, baseType: !1476, size: 64, offset: 320)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "read_pos", scope: !1654, file: !1655, line: 23, baseType: !1476, size: 64, offset: 384)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1654, file: !1655, line: 24, baseType: !1665, size: 192, offset: 448)
!1665 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mutex", file: !1666, line: 53, size: 192, elements: !1667)
!1666 = !DIFile(filename: "./include/linux/mutex.h", directory: "/home/lizy2001/genbc/linux")
!1667 = !{!1668, !1669, !1684}
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1665, file: !1666, line: 54, baseType: !371, size: 64)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !1665, file: !1666, line: 55, baseType: !1670, offset: 64)
!1670 = !DIDerivedType(tag: DW_TAG_typedef, name: "spinlock_t", file: !1671, line: 83, baseType: !1672)
!1671 = !DIFile(filename: "./include/linux/spinlock_types.h", directory: "/home/lizy2001/genbc/linux")
!1672 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "spinlock", file: !1671, line: 71, elements: !1673)
!1673 = !{!1674}
!1674 = !DIDerivedType(tag: DW_TAG_member, scope: !1672, file: !1671, line: 72, baseType: !1675)
!1675 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1672, file: !1671, line: 72, elements: !1676)
!1676 = !{!1677}
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "rlock", scope: !1675, file: !1671, line: 73, baseType: !1678)
!1678 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "raw_spinlock", file: !1671, line: 20, elements: !1679)
!1679 = !{!1680}
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !1678, file: !1671, line: 21, baseType: !1681)
!1681 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_spinlock_t", file: !1682, line: 25, baseType: !1683)
!1682 = !DIFile(filename: "./include/linux/spinlock_types_up.h", directory: "/home/lizy2001/genbc/linux")
!1683 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1682, line: 25, elements: !1587)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !1665, file: !1666, line: 59, baseType: !284, size: 128, offset: 64)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !1654, file: !1655, line: 25, baseType: !1686, size: 64, offset: 640)
!1686 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1687, size: 64)
!1687 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1688)
!1688 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seq_operations", file: !1655, line: 31, size: 256, elements: !1689)
!1689 = !{!1690, !1695, !1699, !1703}
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !1688, file: !1655, line: 32, baseType: !1691, size: 64)
!1691 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1692, size: 64)
!1692 = !DISubroutineType(types: !1693)
!1693 = !{!591, !1653, !1694}
!1694 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1476, size: 64)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "stop", scope: !1688, file: !1655, line: 33, baseType: !1696, size: 64, offset: 64)
!1696 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1697, size: 64)
!1697 = !DISubroutineType(types: !1698)
!1698 = !{null, !1653, !591}
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1688, file: !1655, line: 34, baseType: !1700, size: 64, offset: 128)
!1700 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1701, size: 64)
!1701 = !DISubroutineType(types: !1702)
!1702 = !{!591, !1653, !591, !1694}
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !1688, file: !1655, line: 35, baseType: !1704, size: 64, offset: 192)
!1704 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1705, size: 64)
!1705 = !DISubroutineType(types: !1706)
!1706 = !{!32, !1653, !591}
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "poll_event", scope: !1654, file: !1655, line: 26, baseType: !32, size: 32, offset: 704)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !1654, file: !1655, line: 27, baseType: !1709, size: 64, offset: 768)
!1709 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1710, size: 64)
!1710 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1316)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !1654, file: !1655, line: 28, baseType: !591, size: 64, offset: 832)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "show_devname", scope: !1600, file: !1317, line: 1955, baseType: !1650, size: 64, offset: 1088)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !1600, file: !1317, line: 1956, baseType: !1650, size: 64, offset: 1152)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "show_stats", scope: !1600, file: !1317, line: 1957, baseType: !1650, size: 64, offset: 1216)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "bdev_try_to_free_page", scope: !1600, file: !1317, line: 1963, baseType: !1716, size: 64, offset: 1280)
!1716 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1717, size: 64)
!1717 = !DISubroutineType(types: !1718)
!1718 = !{!32, !1545, !1719, !1742}
!1719 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1720, size: 64)
!1720 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page", file: !1721, line: 68, size: 512, align: 128, elements: !1722)
!1721 = !DIFile(filename: "./include/linux/mm_types.h", directory: "/home/lizy2001/genbc/linux")
!1722 = !{!1723, !1724, !4322, !4329}
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1720, file: !1721, line: 69, baseType: !312, size: 64)
!1724 = !DIDerivedType(tag: DW_TAG_member, scope: !1720, file: !1721, line: 77, baseType: !1725, size: 320, offset: 64)
!1725 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1720, file: !1721, line: 77, size: 320, elements: !1726)
!1726 = !{!1727, !2032, !2037, !2065, !2073, !2079, !4246, !4321}
!1727 = !DIDerivedType(tag: DW_TAG_member, scope: !1725, file: !1721, line: 78, baseType: !1728, size: 320)
!1728 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1725, file: !1721, line: 78, size: 320, elements: !1729)
!1729 = !{!1730, !1731, !2030, !2031}
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !1728, file: !1721, line: 84, baseType: !284, size: 128)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "mapping", scope: !1728, file: !1721, line: 86, baseType: !1732, size: 64, offset: 128)
!1732 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1733, size: 64)
!1733 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space", file: !1317, line: 451, size: 1216, align: 64, elements: !1734)
!1734 = !{!1735, !1736, !1744, !1745, !1746, !1754, !1763, !1764, !1765, !1766, !2023, !2024, !2027, !2028, !2029}
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "host", scope: !1733, file: !1317, line: 452, baseType: !1375, size: 64)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "i_pages", scope: !1733, file: !1317, line: 453, baseType: !1737, size: 128, offset: 64)
!1737 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xarray", file: !1738, line: 292, size: 128, elements: !1739)
!1738 = !DIFile(filename: "./include/linux/xarray.h", directory: "/home/lizy2001/genbc/linux")
!1739 = !{!1740, !1741, !1743}
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "xa_lock", scope: !1737, file: !1738, line: 293, baseType: !1670)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "xa_flags", scope: !1737, file: !1738, line: 295, baseType: !1742, size: 32)
!1742 = !DIDerivedType(tag: DW_TAG_typedef, name: "gfp_t", file: !277, line: 148, baseType: !7)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "xa_head", scope: !1737, file: !1738, line: 296, baseType: !591, size: 64, offset: 64)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !1733, file: !1317, line: 454, baseType: !1742, size: 32, offset: 192)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_writable", scope: !1733, file: !1317, line: 455, baseType: !383, size: 32, offset: 224)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap", scope: !1733, file: !1317, line: 460, baseType: !1747, size: 128, offset: 256)
!1747 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root_cached", file: !434, line: 125, size: 128, elements: !1748)
!1748 = !{!1749, !1753}
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !1747, file: !434, line: 126, baseType: !1750, size: 64)
!1750 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root", file: !434, line: 31, size: 64, elements: !1751)
!1751 = !{!1752}
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !1750, file: !434, line: 32, baseType: !438, size: 64)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "rb_leftmost", scope: !1747, file: !434, line: 127, baseType: !438, size: 64, offset: 64)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_rwsem", scope: !1733, file: !1317, line: 461, baseType: !1755, size: 256, offset: 384)
!1755 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rw_semaphore", file: !1756, line: 35, size: 256, elements: !1757)
!1756 = !DIFile(filename: "./include/linux/rwsem.h", directory: "/home/lizy2001/genbc/linux")
!1757 = !{!1758, !1759, !1760, !1762}
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1755, file: !1756, line: 36, baseType: !371, size: 64)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1755, file: !1756, line: 42, baseType: !371, size: 64, offset: 64)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !1755, file: !1756, line: 46, baseType: !1761, offset: 128)
!1761 = !DIDerivedType(tag: DW_TAG_typedef, name: "raw_spinlock_t", file: !1671, line: 29, baseType: !1678)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !1755, file: !1756, line: 47, baseType: !284, size: 128, offset: 128)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "nrpages", scope: !1733, file: !1317, line: 462, baseType: !312, size: 64, offset: 640)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "nrexceptional", scope: !1733, file: !1317, line: 463, baseType: !312, size: 64, offset: 704)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "writeback_index", scope: !1733, file: !1317, line: 464, baseType: !312, size: 64, offset: 768)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "a_ops", scope: !1733, file: !1317, line: 465, baseType: !1767, size: 64, offset: 832)
!1767 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1768, size: 64)
!1768 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1769)
!1769 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space_operations", file: !1317, line: 367, size: 1408, elements: !1770)
!1770 = !{!1771, !1775, !1779, !1783, !1787, !1791, !1797, !1803, !1807, !1812, !1816, !1820, !1824, !1987, !1991, !1997, !1998, !1999, !2003, !2008, !2012, !2019}
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "writepage", scope: !1769, file: !1317, line: 368, baseType: !1772, size: 64)
!1772 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1773, size: 64)
!1773 = !DISubroutineType(types: !1774)
!1774 = !{!32, !1719, !1619}
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "readpage", scope: !1769, file: !1317, line: 369, baseType: !1776, size: 64, offset: 64)
!1776 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1777, size: 64)
!1777 = !DISubroutineType(types: !1778)
!1778 = !{!32, !1315, !1719}
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "writepages", scope: !1769, file: !1317, line: 372, baseType: !1780, size: 64, offset: 128)
!1780 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1781, size: 64)
!1781 = !DISubroutineType(types: !1782)
!1782 = !{!32, !1732, !1619}
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "set_page_dirty", scope: !1769, file: !1317, line: 375, baseType: !1784, size: 64, offset: 192)
!1784 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1785, size: 64)
!1785 = !DISubroutineType(types: !1786)
!1786 = !{!32, !1719}
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "readpages", scope: !1769, file: !1317, line: 381, baseType: !1788, size: 64, offset: 256)
!1788 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1789, size: 64)
!1789 = !DISubroutineType(types: !1790)
!1790 = !{!32, !1315, !1732, !287, !7}
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "readahead", scope: !1769, file: !1317, line: 383, baseType: !1792, size: 64, offset: 320)
!1792 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1793, size: 64)
!1793 = !DISubroutineType(types: !1794)
!1794 = !{null, !1795}
!1795 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1796, size: 64)
!1796 = !DICompositeType(tag: DW_TAG_structure_type, name: "readahead_control", file: !1317, line: 290, flags: DIFlagFwdDecl)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "write_begin", scope: !1769, file: !1317, line: 385, baseType: !1798, size: 64, offset: 384)
!1798 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1799, size: 64)
!1799 = !DISubroutineType(types: !1800)
!1800 = !{!32, !1315, !1732, !1476, !7, !7, !1801, !1802}
!1801 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1719, size: 64)
!1802 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !591, size: 64)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "write_end", scope: !1769, file: !1317, line: 388, baseType: !1804, size: 64, offset: 448)
!1804 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1805, size: 64)
!1805 = !DISubroutineType(types: !1806)
!1806 = !{!32, !1315, !1732, !1476, !7, !7, !1719, !591}
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "bmap", scope: !1769, file: !1317, line: 393, baseType: !1808, size: 64, offset: 512)
!1808 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1809, size: 64)
!1809 = !DISubroutineType(types: !1810)
!1810 = !{!1811, !1732, !1811}
!1811 = !DIDerivedType(tag: DW_TAG_typedef, name: "sector_t", file: !277, line: 125, baseType: !331)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "invalidatepage", scope: !1769, file: !1317, line: 394, baseType: !1813, size: 64, offset: 576)
!1813 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1814, size: 64)
!1814 = !DISubroutineType(types: !1815)
!1815 = !{null, !1719, !7, !7}
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "releasepage", scope: !1769, file: !1317, line: 395, baseType: !1817, size: 64, offset: 640)
!1817 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1818, size: 64)
!1818 = !DISubroutineType(types: !1819)
!1819 = !{!32, !1719, !1742}
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "freepage", scope: !1769, file: !1317, line: 396, baseType: !1821, size: 64, offset: 704)
!1821 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1822, size: 64)
!1822 = !DISubroutineType(types: !1823)
!1823 = !{null, !1719}
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "direct_IO", scope: !1769, file: !1317, line: 397, baseType: !1825, size: 64, offset: 768)
!1825 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1826, size: 64)
!1826 = !DISubroutineType(types: !1827)
!1827 = !{!1521, !1828, !1848}
!1828 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1829, size: 64)
!1829 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kiocb", file: !1317, line: 320, size: 384, elements: !1830)
!1830 = !{!1831, !1832, !1833, !1837, !1838, !1839, !1840, !1841}
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "ki_filp", scope: !1829, file: !1317, line: 321, baseType: !1315, size: 64)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "ki_pos", scope: !1829, file: !1317, line: 326, baseType: !1476, size: 64, offset: 64)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "ki_complete", scope: !1829, file: !1317, line: 327, baseType: !1834, size: 64, offset: 128)
!1834 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1835, size: 64)
!1835 = !DISubroutineType(types: !1836)
!1836 = !{null, !1828, !998, !998}
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !1829, file: !1317, line: 328, baseType: !591, size: 64, offset: 192)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "ki_flags", scope: !1829, file: !1317, line: 329, baseType: !32, size: 32, offset: 256)
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "ki_hint", scope: !1829, file: !1317, line: 330, baseType: !581, size: 16, offset: 288)
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "ki_ioprio", scope: !1829, file: !1317, line: 331, baseType: !581, size: 16, offset: 304)
!1841 = !DIDerivedType(tag: DW_TAG_member, scope: !1829, file: !1317, line: 332, baseType: !1842, size: 64, offset: 320)
!1842 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1829, file: !1317, line: 332, size: 64, elements: !1843)
!1843 = !{!1844, !1845}
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "ki_cookie", scope: !1842, file: !1317, line: 333, baseType: !7, size: 32)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "ki_waitq", scope: !1842, file: !1317, line: 334, baseType: !1846, size: 64)
!1846 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1847, size: 64)
!1847 = !DICompositeType(tag: DW_TAG_structure_type, name: "wait_page_queue", file: !1317, line: 334, flags: DIFlagFwdDecl)
!1848 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1849, size: 64)
!1849 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iov_iter", file: !1850, line: 29, size: 320, elements: !1851)
!1850 = !DIFile(filename: "./include/linux/uio.h", directory: "/home/lizy2001/genbc/linux")
!1851 = !{!1852, !1853, !1854, !1855, !1978}
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1849, file: !1850, line: 35, baseType: !7, size: 32)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "iov_offset", scope: !1849, file: !1850, line: 36, baseType: !1039, size: 64, offset: 64)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1849, file: !1850, line: 37, baseType: !1039, size: 64, offset: 128)
!1855 = !DIDerivedType(tag: DW_TAG_member, scope: !1849, file: !1850, line: 38, baseType: !1856, size: 64, offset: 192)
!1856 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1849, file: !1850, line: 38, size: 64, elements: !1857)
!1857 = !{!1858, !1866, !1873, !1882}
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "iov", scope: !1856, file: !1850, line: 39, baseType: !1859, size: 64)
!1859 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1860, size: 64)
!1860 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1861)
!1861 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iovec", file: !1862, line: 17, size: 128, elements: !1863)
!1862 = !DIFile(filename: "./include/uapi/linux/uio.h", directory: "/home/lizy2001/genbc/linux")
!1863 = !{!1864, !1865}
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "iov_base", scope: !1861, file: !1862, line: 19, baseType: !591, size: 64)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "iov_len", scope: !1861, file: !1862, line: 20, baseType: !1040, size: 64, offset: 64)
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "kvec", scope: !1856, file: !1850, line: 40, baseType: !1867, size: 64)
!1867 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1868, size: 64)
!1868 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1869)
!1869 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kvec", file: !1850, line: 15, size: 128, elements: !1870)
!1870 = !{!1871, !1872}
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "iov_base", scope: !1869, file: !1850, line: 16, baseType: !591, size: 64)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "iov_len", scope: !1869, file: !1850, line: 17, baseType: !1039, size: 64, offset: 64)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "bvec", scope: !1856, file: !1850, line: 41, baseType: !1874, size: 64)
!1874 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1875, size: 64)
!1875 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1876)
!1876 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bio_vec", file: !1877, line: 31, size: 128, elements: !1878)
!1877 = !DIFile(filename: "./include/linux/bvec.h", directory: "/home/lizy2001/genbc/linux")
!1878 = !{!1879, !1880, !1881}
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "bv_page", scope: !1876, file: !1877, line: 32, baseType: !1719, size: 64)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "bv_len", scope: !1876, file: !1877, line: 33, baseType: !7, size: 32, offset: 64)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "bv_offset", scope: !1876, file: !1877, line: 34, baseType: !7, size: 32, offset: 96)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "pipe", scope: !1856, file: !1850, line: 42, baseType: !1883, size: 64)
!1883 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1884, size: 64)
!1884 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pipe_inode_info", file: !1885, line: 57, size: 1088, elements: !1886)
!1885 = !DIFile(filename: "./include/linux/pipe_fs_i.h", directory: "/home/lizy2001/genbc/linux")
!1886 = !{!1887, !1888, !1895, !1896, !1897, !1898, !1899, !1900, !1901, !1902, !1903, !1904, !1905, !1906, !1907, !1924, !1925, !1952}
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !1884, file: !1885, line: 58, baseType: !1665, size: 192)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "rd_wait", scope: !1884, file: !1885, line: 59, baseType: !1889, size: 128, offset: 192)
!1889 = !DIDerivedType(tag: DW_TAG_typedef, name: "wait_queue_head_t", file: !1890, line: 40, baseType: !1891)
!1890 = !DIFile(filename: "./include/linux/wait.h", directory: "/home/lizy2001/genbc/linux")
!1891 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wait_queue_head", file: !1890, line: 36, size: 128, elements: !1892)
!1892 = !{!1893, !1894}
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1891, file: !1890, line: 37, baseType: !1670)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1891, file: !1890, line: 38, baseType: !284, size: 128)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "wr_wait", scope: !1884, file: !1885, line: 59, baseType: !1889, size: 128, offset: 320)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1884, file: !1885, line: 60, baseType: !7, size: 32, offset: 448)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1884, file: !1885, line: 61, baseType: !7, size: 32, offset: 480)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "max_usage", scope: !1884, file: !1885, line: 62, baseType: !7, size: 32, offset: 512)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "ring_size", scope: !1884, file: !1885, line: 63, baseType: !7, size: 32, offset: 544)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "nr_accounted", scope: !1884, file: !1885, line: 67, baseType: !7, size: 32, offset: 576)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "readers", scope: !1884, file: !1885, line: 68, baseType: !7, size: 32, offset: 608)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "writers", scope: !1884, file: !1885, line: 69, baseType: !7, size: 32, offset: 640)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !1884, file: !1885, line: 70, baseType: !7, size: 32, offset: 672)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "r_counter", scope: !1884, file: !1885, line: 71, baseType: !7, size: 32, offset: 704)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "w_counter", scope: !1884, file: !1885, line: 72, baseType: !7, size: 32, offset: 736)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "tmp_page", scope: !1884, file: !1885, line: 73, baseType: !1719, size: 64, offset: 768)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "fasync_readers", scope: !1884, file: !1885, line: 74, baseType: !1908, size: 64, offset: 832)
!1908 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1909, size: 64)
!1909 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fasync_struct", file: !1317, line: 1314, size: 320, elements: !1910)
!1910 = !{!1911, !1919, !1920, !1921, !1922, !1923}
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "fa_lock", scope: !1909, file: !1317, line: 1315, baseType: !1912)
!1912 = !DIDerivedType(tag: DW_TAG_typedef, name: "rwlock_t", file: !1913, line: 20, baseType: !1914)
!1913 = !DIFile(filename: "./include/linux/rwlock_types.h", directory: "/home/lizy2001/genbc/linux")
!1914 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1913, line: 11, elements: !1915)
!1915 = !{!1916}
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !1914, file: !1913, line: 12, baseType: !1917)
!1917 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_rwlock_t", file: !1682, line: 33, baseType: !1918)
!1918 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1682, line: 31, elements: !1587)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !1909, file: !1317, line: 1316, baseType: !32, size: 32)
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "fa_fd", scope: !1909, file: !1317, line: 1317, baseType: !32, size: 32, offset: 32)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "fa_next", scope: !1909, file: !1317, line: 1318, baseType: !1908, size: 64, offset: 64)
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "fa_file", scope: !1909, file: !1317, line: 1319, baseType: !1315, size: 64, offset: 128)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "fa_rcu", scope: !1909, file: !1317, line: 1320, baseType: !299, size: 128, align: 64, offset: 192)
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "fasync_writers", scope: !1884, file: !1885, line: 75, baseType: !1908, size: 64, offset: 896)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "bufs", scope: !1884, file: !1885, line: 76, baseType: !1926, size: 64, offset: 960)
!1926 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1927, size: 64)
!1927 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pipe_buffer", file: !1885, line: 26, size: 320, elements: !1928)
!1928 = !{!1929, !1930, !1931, !1932, !1950, !1951}
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !1927, file: !1885, line: 27, baseType: !1719, size: 64)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1927, file: !1885, line: 28, baseType: !7, size: 32, offset: 64)
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1927, file: !1885, line: 28, baseType: !7, size: 32, offset: 96)
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !1927, file: !1885, line: 29, baseType: !1933, size: 64, offset: 128)
!1933 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1934, size: 64)
!1934 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1935)
!1935 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pipe_buf_operations", file: !1885, line: 93, size: 256, elements: !1936)
!1936 = !{!1937, !1941, !1945, !1949}
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "confirm", scope: !1935, file: !1885, line: 101, baseType: !1938, size: 64)
!1938 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1939, size: 64)
!1939 = !DISubroutineType(types: !1940)
!1940 = !{!32, !1883, !1926}
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !1935, file: !1885, line: 107, baseType: !1942, size: 64, offset: 64)
!1942 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1943, size: 64)
!1943 = !DISubroutineType(types: !1944)
!1944 = !{null, !1883, !1926}
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "try_steal", scope: !1935, file: !1885, line: 117, baseType: !1946, size: 64, offset: 128)
!1946 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1947, size: 64)
!1947 = !DISubroutineType(types: !1948)
!1948 = !{!771, !1883, !1926}
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !1935, file: !1885, line: 122, baseType: !1946, size: 64, offset: 192)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1927, file: !1885, line: 30, baseType: !7, size: 32, offset: 192)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !1927, file: !1885, line: 31, baseType: !312, size: 64, offset: 256)
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !1884, file: !1885, line: 77, baseType: !1953, size: 64, offset: 1024)
!1953 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1954, size: 64)
!1954 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "user_struct", file: !1955, line: 13, size: 896, elements: !1956)
!1955 = !DIFile(filename: "./include/linux/sched/user.h", directory: "/home/lizy2001/genbc/linux")
!1956 = !{!1957, !1958, !1959, !1960, !1961, !1962, !1963, !1964, !1965, !1966, !1967}
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !1954, file: !1955, line: 14, baseType: !568, size: 32)
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "processes", scope: !1954, file: !1955, line: 15, baseType: !383, size: 32, offset: 32)
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "sigpending", scope: !1954, file: !1955, line: 16, baseType: !383, size: 32, offset: 64)
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "epoll_watches", scope: !1954, file: !1955, line: 21, baseType: !371, size: 64, offset: 128)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "locked_shm", scope: !1954, file: !1955, line: 27, baseType: !312, size: 64, offset: 192)
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "unix_inflight", scope: !1954, file: !1955, line: 28, baseType: !312, size: 64, offset: 256)
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "pipe_bufs", scope: !1954, file: !1955, line: 29, baseType: !371, size: 64, offset: 320)
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "uidhash_node", scope: !1954, file: !1955, line: 32, baseType: !276, size: 128, offset: 384)
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1954, file: !1955, line: 33, baseType: !1382, size: 32, offset: 512)
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !1954, file: !1955, line: 37, baseType: !371, size: 64, offset: 576)
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "ratelimit", scope: !1954, file: !1955, line: 44, baseType: !1968, size: 256, offset: 640)
!1968 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ratelimit_state", file: !1969, line: 15, size: 256, elements: !1970)
!1969 = !DIFile(filename: "./include/linux/ratelimit_types.h", directory: "/home/lizy2001/genbc/linux")
!1970 = !{!1971, !1972, !1973, !1974, !1975, !1976, !1977}
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1968, file: !1969, line: 16, baseType: !1761)
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "interval", scope: !1968, file: !1969, line: 18, baseType: !32, size: 32)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "burst", scope: !1968, file: !1969, line: 19, baseType: !32, size: 32, offset: 32)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "printed", scope: !1968, file: !1969, line: 20, baseType: !32, size: 32, offset: 64)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "missed", scope: !1968, file: !1969, line: 21, baseType: !32, size: 32, offset: 96)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "begin", scope: !1968, file: !1969, line: 22, baseType: !312, size: 64, offset: 128)
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1968, file: !1969, line: 23, baseType: !312, size: 64, offset: 192)
!1978 = !DIDerivedType(tag: DW_TAG_member, scope: !1849, file: !1850, line: 44, baseType: !1979, size: 64, offset: 256)
!1979 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1849, file: !1850, line: 44, size: 64, elements: !1980)
!1980 = !{!1981, !1982}
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "nr_segs", scope: !1979, file: !1850, line: 45, baseType: !312, size: 64)
!1982 = !DIDerivedType(tag: DW_TAG_member, scope: !1979, file: !1850, line: 46, baseType: !1983, size: 64)
!1983 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1979, file: !1850, line: 46, size: 64, elements: !1984)
!1984 = !{!1985, !1986}
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1983, file: !1850, line: 47, baseType: !7, size: 32)
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "start_head", scope: !1983, file: !1850, line: 48, baseType: !7, size: 32, offset: 32)
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "migratepage", scope: !1769, file: !1317, line: 402, baseType: !1988, size: 64, offset: 832)
!1988 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1989, size: 64)
!1989 = !DISubroutineType(types: !1990)
!1990 = !{!32, !1732, !1719, !1719, !5}
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "isolate_page", scope: !1769, file: !1317, line: 404, baseType: !1992, size: 64, offset: 896)
!1992 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1993, size: 64)
!1993 = !DISubroutineType(types: !1994)
!1994 = !{!771, !1719, !1995}
!1995 = !DIDerivedType(tag: DW_TAG_typedef, name: "isolate_mode_t", file: !1996, line: 305, baseType: !7)
!1996 = !DIFile(filename: "./include/linux/mmzone.h", directory: "/home/lizy2001/genbc/linux")
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "putback_page", scope: !1769, file: !1317, line: 405, baseType: !1821, size: 64, offset: 960)
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "launder_page", scope: !1769, file: !1317, line: 406, baseType: !1784, size: 64, offset: 1024)
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "is_partially_uptodate", scope: !1769, file: !1317, line: 407, baseType: !2000, size: 64, offset: 1088)
!2000 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2001, size: 64)
!2001 = !DISubroutineType(types: !2002)
!2002 = !{!32, !1719, !312, !312}
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "is_dirty_writeback", scope: !1769, file: !1317, line: 409, baseType: !2004, size: 64, offset: 1152)
!2004 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2005, size: 64)
!2005 = !DISubroutineType(types: !2006)
!2006 = !{null, !1719, !2007, !2007}
!2007 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !771, size: 64)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "error_remove_page", scope: !1769, file: !1317, line: 410, baseType: !2009, size: 64, offset: 1216)
!2009 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2010, size: 64)
!2010 = !DISubroutineType(types: !2011)
!2011 = !{!32, !1732, !1719}
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "swap_activate", scope: !1769, file: !1317, line: 413, baseType: !2013, size: 64, offset: 1280)
!2013 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2014, size: 64)
!2014 = !DISubroutineType(types: !2015)
!2015 = !{!32, !2016, !1315, !2018}
!2016 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2017, size: 64)
!2017 = !DICompositeType(tag: DW_TAG_structure_type, name: "swap_info_struct", file: !1317, line: 61, flags: DIFlagFwdDecl)
!2018 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1811, size: 64)
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "swap_deactivate", scope: !1769, file: !1317, line: 415, baseType: !2020, size: 64, offset: 1344)
!2020 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2021, size: 64)
!2021 = !DISubroutineType(types: !2022)
!2022 = !{null, !1315}
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1733, file: !1317, line: 466, baseType: !312, size: 64, offset: 896)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "wb_err", scope: !1733, file: !1317, line: 467, baseType: !2025, size: 32, offset: 960)
!2025 = !DIDerivedType(tag: DW_TAG_typedef, name: "errseq_t", file: !2026, line: 8, baseType: !987)
!2026 = !DIFile(filename: "./include/linux/errseq.h", directory: "/home/lizy2001/genbc/linux")
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "private_lock", scope: !1733, file: !1317, line: 468, baseType: !1670, offset: 992)
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "private_list", scope: !1733, file: !1317, line: 469, baseType: !284, size: 128, offset: 1024)
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !1733, file: !1317, line: 470, baseType: !591, size: 64, offset: 1152)
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1728, file: !1721, line: 87, baseType: !312, size: 64, offset: 192)
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !1728, file: !1721, line: 94, baseType: !312, size: 64, offset: 256)
!2032 = !DIDerivedType(tag: DW_TAG_member, scope: !1725, file: !1721, line: 96, baseType: !2033, size: 64)
!2033 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1725, file: !1721, line: 96, size: 64, elements: !2034)
!2034 = !{!2035}
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "dma_addr", scope: !2033, file: !1721, line: 101, baseType: !2036, size: 64)
!2036 = !DIDerivedType(tag: DW_TAG_typedef, name: "dma_addr_t", file: !277, line: 143, baseType: !331)
!2037 = !DIDerivedType(tag: DW_TAG_member, scope: !1725, file: !1721, line: 103, baseType: !2038, size: 320)
!2038 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1725, file: !1721, line: 103, size: 320, elements: !2039)
!2039 = !{!2040, !2050, !2053, !2054}
!2040 = !DIDerivedType(tag: DW_TAG_member, scope: !2038, file: !1721, line: 104, baseType: !2041, size: 128)
!2041 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2038, file: !1721, line: 104, size: 128, elements: !2042)
!2042 = !{!2043, !2044}
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "slab_list", scope: !2041, file: !1721, line: 105, baseType: !284, size: 128)
!2044 = !DIDerivedType(tag: DW_TAG_member, scope: !2041, file: !1721, line: 106, baseType: !2045, size: 128)
!2045 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2041, file: !1721, line: 106, size: 128, elements: !2046)
!2046 = !{!2047, !2048, !2049}
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2045, file: !1721, line: 107, baseType: !1719, size: 64)
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !2045, file: !1721, line: 109, baseType: !32, size: 32, offset: 64)
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "pobjects", scope: !2045, file: !1721, line: 110, baseType: !32, size: 32, offset: 96)
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "slab_cache", scope: !2038, file: !1721, line: 117, baseType: !2051, size: 64, offset: 128)
!2051 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2052, size: 64)
!2052 = !DICompositeType(tag: DW_TAG_structure_type, name: "kmem_cache", file: !1721, line: 117, flags: DIFlagFwdDecl)
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "freelist", scope: !2038, file: !1721, line: 119, baseType: !591, size: 64, offset: 192)
!2054 = !DIDerivedType(tag: DW_TAG_member, scope: !2038, file: !1721, line: 120, baseType: !2055, size: 64, offset: 256)
!2055 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2038, file: !1721, line: 120, size: 64, elements: !2056)
!2056 = !{!2057, !2058, !2059}
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "s_mem", scope: !2055, file: !1721, line: 121, baseType: !591, size: 64)
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "counters", scope: !2055, file: !1721, line: 122, baseType: !312, size: 64)
!2059 = !DIDerivedType(tag: DW_TAG_member, scope: !2055, file: !1721, line: 123, baseType: !2060, size: 32)
!2060 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2055, file: !1721, line: 123, size: 32, elements: !2061)
!2061 = !{!2062, !2063, !2064}
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "inuse", scope: !2060, file: !1721, line: 124, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !2060, file: !1721, line: 125, baseType: !7, size: 15, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !2060, file: !1721, line: 126, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!2065 = !DIDerivedType(tag: DW_TAG_member, scope: !1725, file: !1721, line: 130, baseType: !2066, size: 192)
!2066 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1725, file: !1721, line: 130, size: 192, elements: !2067)
!2067 = !{!2068, !2069, !2070, !2071, !2072}
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "compound_head", scope: !2066, file: !1721, line: 131, baseType: !312, size: 64)
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "compound_dtor", scope: !2066, file: !1721, line: 134, baseType: !482, size: 8, offset: 64)
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "compound_order", scope: !2066, file: !1721, line: 135, baseType: !482, size: 8, offset: 72)
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "compound_mapcount", scope: !2066, file: !1721, line: 136, baseType: !383, size: 32, offset: 96)
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "compound_nr", scope: !2066, file: !1721, line: 137, baseType: !7, size: 32, offset: 128)
!2073 = !DIDerivedType(tag: DW_TAG_member, scope: !1725, file: !1721, line: 139, baseType: !2074, size: 256)
!2074 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1725, file: !1721, line: 139, size: 256, elements: !2075)
!2075 = !{!2076, !2077, !2078}
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "_compound_pad_1", scope: !2074, file: !1721, line: 140, baseType: !312, size: 64)
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "hpage_pinned_refcount", scope: !2074, file: !1721, line: 141, baseType: !383, size: 32, offset: 64)
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_list", scope: !2074, file: !1721, line: 143, baseType: !284, size: 128, offset: 128)
!2079 = !DIDerivedType(tag: DW_TAG_member, scope: !1725, file: !1721, line: 145, baseType: !2080, size: 256)
!2080 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1725, file: !1721, line: 145, size: 256, elements: !2081)
!2081 = !{!2082, !2083, !2086, !2087, !4245}
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_1", scope: !2080, file: !1721, line: 146, baseType: !312, size: 64)
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "pmd_huge_pte", scope: !2080, file: !1721, line: 147, baseType: !2084, size: 64, offset: 64)
!2084 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgtable_t", file: !2085, line: 509, baseType: !1719)
!2085 = !DIFile(filename: "./arch/x86/include/asm/pgtable_types.h", directory: "/home/lizy2001/genbc/linux")
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_2", scope: !2080, file: !1721, line: 148, baseType: !312, size: 64, offset: 128)
!2087 = !DIDerivedType(tag: DW_TAG_member, scope: !2080, file: !1721, line: 149, baseType: !2088, size: 64, offset: 192)
!2088 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2080, file: !1721, line: 149, size: 64, elements: !2089)
!2089 = !{!2090, !4244}
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "pt_mm", scope: !2088, file: !1721, line: 150, baseType: !2091, size: 64)
!2091 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2092, size: 64)
!2092 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_struct", file: !1721, line: 388, size: 7296, elements: !2093)
!2093 = !{!2094, !4242}
!2094 = !DIDerivedType(tag: DW_TAG_member, scope: !2092, file: !1721, line: 389, baseType: !2095, size: 7296)
!2095 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2092, file: !1721, line: 389, size: 7296, elements: !2096)
!2096 = !{!2097, !2215, !2216, !2217, !2221, !2222, !2223, !2224, !2225, !2232, !2233, !2234, !2235, !2236, !2237, !2238, !2239, !2240, !2241, !2242, !2243, !2244, !2245, !2246, !2247, !2248, !2249, !2250, !2251, !2252, !2253, !2254, !2255, !2256, !2257, !2258, !2259, !2260, !2261, !2262, !2266, !2274, !2277, !2316, !2317, !4226, !4227, !4230, !4231, !4232, !4235, !4236, !4237, !4240, !4241}
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !2095, file: !1721, line: 390, baseType: !2098, size: 64)
!2098 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2099, size: 64)
!2099 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_area_struct", file: !1721, line: 305, size: 1472, elements: !2100)
!2100 = !{!2101, !2102, !2103, !2104, !2105, !2106, !2107, !2108, !2115, !2116, !2121, !2122, !2125, !2209, !2210, !2211, !2212, !2213}
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "vm_start", scope: !2099, file: !1721, line: 308, baseType: !312, size: 64)
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "vm_end", scope: !2099, file: !1721, line: 309, baseType: !312, size: 64, offset: 64)
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "vm_next", scope: !2099, file: !1721, line: 313, baseType: !2098, size: 64, offset: 128)
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "vm_prev", scope: !2099, file: !1721, line: 313, baseType: !2098, size: 64, offset: 192)
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "vm_rb", scope: !2099, file: !1721, line: 315, baseType: !433, size: 192, align: 64, offset: 256)
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_gap", scope: !2099, file: !1721, line: 323, baseType: !312, size: 64, offset: 448)
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "vm_mm", scope: !2099, file: !1721, line: 327, baseType: !2091, size: 64, offset: 512)
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "vm_page_prot", scope: !2099, file: !1721, line: 333, baseType: !2109, size: 64, offset: 576)
!2109 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprot_t", file: !2085, line: 284, baseType: !2110)
!2110 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pgprot", file: !2085, line: 284, size: 64, elements: !2111)
!2111 = !{!2112}
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "pgprot", scope: !2110, file: !2085, line: 284, baseType: !2113, size: 64)
!2113 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprotval_t", file: !2114, line: 19, baseType: !312)
!2114 = !DIFile(filename: "./arch/x86/include/asm/pgtable_64_types.h", directory: "/home/lizy2001/genbc/linux")
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "vm_flags", scope: !2099, file: !1721, line: 334, baseType: !312, size: 64, offset: 640)
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "shared", scope: !2099, file: !1721, line: 343, baseType: !2117, size: 256, offset: 704)
!2117 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2099, file: !1721, line: 340, size: 256, elements: !2118)
!2118 = !{!2119, !2120}
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !2117, file: !1721, line: 341, baseType: !433, size: 192, align: 64)
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_last", scope: !2117, file: !1721, line: 342, baseType: !312, size: 64, offset: 192)
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma_chain", scope: !2099, file: !1721, line: 351, baseType: !284, size: 128, offset: 960)
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma", scope: !2099, file: !1721, line: 353, baseType: !2123, size: 64, offset: 1088)
!2123 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2124, size: 64)
!2124 = !DICompositeType(tag: DW_TAG_structure_type, name: "anon_vma", file: !1721, line: 353, flags: DIFlagFwdDecl)
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !2099, file: !1721, line: 356, baseType: !2126, size: 64, offset: 1152)
!2126 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2127, size: 64)
!2127 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2128)
!2128 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_operations_struct", file: !14, line: 557, size: 832, elements: !2129)
!2129 = !{!2130, !2134, !2135, !2139, !2143, !2183, !2187, !2191, !2195, !2196, !2197, !2201, !2205}
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !2128, file: !14, line: 558, baseType: !2131, size: 64)
!2131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2132, size: 64)
!2132 = !DISubroutineType(types: !2133)
!2133 = !{null, !2098}
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !2128, file: !14, line: 559, baseType: !2131, size: 64, offset: 64)
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "split", scope: !2128, file: !14, line: 560, baseType: !2136, size: 64, offset: 128)
!2136 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2137, size: 64)
!2137 = !DISubroutineType(types: !2138)
!2138 = !{!32, !2098, !312}
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "mremap", scope: !2128, file: !14, line: 561, baseType: !2140, size: 64, offset: 192)
!2140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2141, size: 64)
!2141 = !DISubroutineType(types: !2142)
!2142 = !{!32, !2098}
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "fault", scope: !2128, file: !14, line: 562, baseType: !2144, size: 64, offset: 256)
!2144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2145, size: 64)
!2145 = !DISubroutineType(types: !2146)
!2146 = !{!2147, !2148}
!2147 = !DIDerivedType(tag: DW_TAG_typedef, name: "vm_fault_t", file: !1721, line: 682, baseType: !7)
!2148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2149, size: 64)
!2149 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_fault", file: !14, line: 508, size: 768, elements: !2150)
!2150 = !{!2151, !2152, !2153, !2154, !2155, !2156, !2163, !2170, !2176, !2177, !2178, !2180, !2182}
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "vma", scope: !2149, file: !14, line: 509, baseType: !2098, size: 64)
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2149, file: !14, line: 510, baseType: !7, size: 32, offset: 64)
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !2149, file: !14, line: 511, baseType: !1742, size: 32, offset: 96)
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "pgoff", scope: !2149, file: !14, line: 512, baseType: !312, size: 64, offset: 128)
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !2149, file: !14, line: 513, baseType: !312, size: 64, offset: 192)
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "pmd", scope: !2149, file: !14, line: 514, baseType: !2157, size: 64, offset: 256)
!2157 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2158, size: 64)
!2158 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmd_t", file: !2085, line: 385, baseType: !2159)
!2159 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2085, line: 385, size: 64, elements: !2160)
!2160 = !{!2161}
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "pmd", scope: !2159, file: !2085, line: 385, baseType: !2162, size: 64)
!2162 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmdval_t", file: !2114, line: 15, baseType: !312)
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "pud", scope: !2149, file: !14, line: 516, baseType: !2164, size: 64, offset: 320)
!2164 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2165, size: 64)
!2165 = !DIDerivedType(tag: DW_TAG_typedef, name: "pud_t", file: !2085, line: 359, baseType: !2166)
!2166 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2085, line: 359, size: 64, elements: !2167)
!2167 = !{!2168}
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "pud", scope: !2166, file: !2085, line: 359, baseType: !2169, size: 64)
!2169 = !DIDerivedType(tag: DW_TAG_typedef, name: "pudval_t", file: !2114, line: 16, baseType: !312)
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "orig_pte", scope: !2149, file: !14, line: 519, baseType: !2171, size: 64, offset: 384)
!2171 = !DIDerivedType(tag: DW_TAG_typedef, name: "pte_t", file: !2114, line: 21, baseType: !2172)
!2172 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2114, line: 21, size: 64, elements: !2173)
!2173 = !{!2174}
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "pte", scope: !2172, file: !2114, line: 21, baseType: !2175, size: 64)
!2175 = !DIDerivedType(tag: DW_TAG_typedef, name: "pteval_t", file: !2114, line: 14, baseType: !312)
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "cow_page", scope: !2149, file: !14, line: 521, baseType: !1719, size: 64, offset: 448)
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !2149, file: !14, line: 522, baseType: !1719, size: 64, offset: 512)
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "pte", scope: !2149, file: !14, line: 528, baseType: !2179, size: 64, offset: 576)
!2179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2171, size: 64)
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !2149, file: !14, line: 532, baseType: !2181, size: 64, offset: 640)
!2181 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1670, size: 64)
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_pte", scope: !2149, file: !14, line: 536, baseType: !2084, size: 64, offset: 704)
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "huge_fault", scope: !2128, file: !14, line: 563, baseType: !2184, size: 64, offset: 320)
!2184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2185, size: 64)
!2185 = !DISubroutineType(types: !2186)
!2186 = !{!2147, !2148, !13}
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "map_pages", scope: !2128, file: !14, line: 565, baseType: !2188, size: 64, offset: 384)
!2188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2189, size: 64)
!2189 = !DISubroutineType(types: !2190)
!2190 = !{null, !2148, !312, !312}
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "pagesize", scope: !2128, file: !14, line: 567, baseType: !2192, size: 64, offset: 448)
!2192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2193, size: 64)
!2193 = !DISubroutineType(types: !2194)
!2194 = !{!312, !2098}
!2195 = !DIDerivedType(tag: DW_TAG_member, name: "page_mkwrite", scope: !2128, file: !14, line: 571, baseType: !2144, size: 64, offset: 512)
!2196 = !DIDerivedType(tag: DW_TAG_member, name: "pfn_mkwrite", scope: !2128, file: !14, line: 574, baseType: !2144, size: 64, offset: 576)
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "access", scope: !2128, file: !14, line: 579, baseType: !2198, size: 64, offset: 640)
!2198 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2199, size: 64)
!2199 = !DISubroutineType(types: !2200)
!2200 = !{!32, !2098, !312, !591, !32, !32}
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2128, file: !14, line: 585, baseType: !2202, size: 64, offset: 704)
!2202 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2203, size: 64)
!2203 = !DISubroutineType(types: !2204)
!2204 = !{!292, !2098}
!2205 = !DIDerivedType(tag: DW_TAG_member, name: "find_special_page", scope: !2128, file: !14, line: 615, baseType: !2206, size: 64, offset: 768)
!2206 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2207, size: 64)
!2207 = !DISubroutineType(types: !2208)
!2208 = !{!1719, !2098, !312}
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "vm_pgoff", scope: !2099, file: !1721, line: 359, baseType: !312, size: 64, offset: 1216)
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "vm_file", scope: !2099, file: !1721, line: 361, baseType: !1315, size: 64, offset: 1280)
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "vm_private_data", scope: !2099, file: !1721, line: 362, baseType: !591, size: 64, offset: 1344)
!2212 = !DIDerivedType(tag: DW_TAG_member, name: "swap_readahead_info", scope: !2099, file: !1721, line: 365, baseType: !371, size: 64, offset: 1408)
!2213 = !DIDerivedType(tag: DW_TAG_member, name: "vm_userfaultfd_ctx", scope: !2099, file: !1721, line: 373, baseType: !2214, offset: 1472)
!2214 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_userfaultfd_ctx", file: !1721, line: 296, elements: !1587)
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "mm_rb", scope: !2095, file: !1721, line: 391, baseType: !1750, size: 64, offset: 64)
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache_seqnum", scope: !2095, file: !1721, line: 392, baseType: !331, size: 64, offset: 128)
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !2095, file: !1721, line: 394, baseType: !2218, size: 64, offset: 192)
!2218 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2219, size: 64)
!2219 = !DISubroutineType(types: !2220)
!2220 = !{!312, !1315, !312, !312, !312, !312}
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_base", scope: !2095, file: !1721, line: 398, baseType: !312, size: 64, offset: 256)
!2222 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_legacy_base", scope: !2095, file: !1721, line: 399, baseType: !312, size: 64, offset: 320)
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "task_size", scope: !2095, file: !1721, line: 405, baseType: !312, size: 64, offset: 384)
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "highest_vm_end", scope: !2095, file: !1721, line: 406, baseType: !312, size: 64, offset: 448)
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !2095, file: !1721, line: 407, baseType: !2226, size: 64, offset: 512)
!2226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2227, size: 64)
!2227 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgd_t", file: !2085, line: 286, baseType: !2228)
!2228 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2085, line: 286, size: 64, elements: !2229)
!2229 = !{!2230}
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !2228, file: !2085, line: 286, baseType: !2231, size: 64)
!2231 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgdval_t", file: !2114, line: 18, baseType: !312)
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "membarrier_state", scope: !2095, file: !1721, line: 416, baseType: !383, size: 32, offset: 576)
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "mm_users", scope: !2095, file: !1721, line: 428, baseType: !383, size: 32, offset: 608)
!2234 = !DIDerivedType(tag: DW_TAG_member, name: "mm_count", scope: !2095, file: !1721, line: 437, baseType: !383, size: 32, offset: 640)
!2235 = !DIDerivedType(tag: DW_TAG_member, name: "has_pinned", scope: !2095, file: !1721, line: 447, baseType: !383, size: 32, offset: 672)
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "pgtables_bytes", scope: !2095, file: !1721, line: 450, baseType: !371, size: 64, offset: 704)
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "map_count", scope: !2095, file: !1721, line: 452, baseType: !32, size: 32, offset: 768)
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "page_table_lock", scope: !2095, file: !1721, line: 454, baseType: !1670, offset: 800)
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_lock", scope: !2095, file: !1721, line: 457, baseType: !1755, size: 256, offset: 832)
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "mmlist", scope: !2095, file: !1721, line: 459, baseType: !284, size: 128, offset: 1088)
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_rss", scope: !2095, file: !1721, line: 466, baseType: !312, size: 64, offset: 1216)
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_vm", scope: !2095, file: !1721, line: 467, baseType: !312, size: 64, offset: 1280)
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "total_vm", scope: !2095, file: !1721, line: 469, baseType: !312, size: 64, offset: 1344)
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !2095, file: !1721, line: 470, baseType: !312, size: 64, offset: 1408)
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "pinned_vm", scope: !2095, file: !1721, line: 471, baseType: !373, size: 64, offset: 1472)
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "data_vm", scope: !2095, file: !1721, line: 472, baseType: !312, size: 64, offset: 1536)
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "exec_vm", scope: !2095, file: !1721, line: 473, baseType: !312, size: 64, offset: 1600)
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm", scope: !2095, file: !1721, line: 474, baseType: !312, size: 64, offset: 1664)
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "def_flags", scope: !2095, file: !1721, line: 475, baseType: !312, size: 64, offset: 1728)
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "arg_lock", scope: !2095, file: !1721, line: 477, baseType: !1670, offset: 1792)
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "start_code", scope: !2095, file: !1721, line: 478, baseType: !312, size: 64, offset: 1792)
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "end_code", scope: !2095, file: !1721, line: 478, baseType: !312, size: 64, offset: 1856)
!2253 = !DIDerivedType(tag: DW_TAG_member, name: "start_data", scope: !2095, file: !1721, line: 478, baseType: !312, size: 64, offset: 1920)
!2254 = !DIDerivedType(tag: DW_TAG_member, name: "end_data", scope: !2095, file: !1721, line: 478, baseType: !312, size: 64, offset: 1984)
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "start_brk", scope: !2095, file: !1721, line: 479, baseType: !312, size: 64, offset: 2048)
!2256 = !DIDerivedType(tag: DW_TAG_member, name: "brk", scope: !2095, file: !1721, line: 479, baseType: !312, size: 64, offset: 2112)
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "start_stack", scope: !2095, file: !1721, line: 479, baseType: !312, size: 64, offset: 2176)
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "arg_start", scope: !2095, file: !1721, line: 480, baseType: !312, size: 64, offset: 2240)
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "arg_end", scope: !2095, file: !1721, line: 480, baseType: !312, size: 64, offset: 2304)
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "env_start", scope: !2095, file: !1721, line: 480, baseType: !312, size: 64, offset: 2368)
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "env_end", scope: !2095, file: !1721, line: 480, baseType: !312, size: 64, offset: 2432)
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "saved_auxv", scope: !2095, file: !1721, line: 482, baseType: !2263, size: 2816, offset: 2496)
!2263 = !DICompositeType(tag: DW_TAG_array_type, baseType: !312, size: 2816, elements: !2264)
!2264 = !{!2265}
!2265 = !DISubrange(count: 44)
!2266 = !DIDerivedType(tag: DW_TAG_member, name: "rss_stat", scope: !2095, file: !1721, line: 488, baseType: !2267, size: 256, offset: 5312)
!2267 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_rss_stat", file: !2268, line: 60, size: 256, elements: !2269)
!2268 = !DIFile(filename: "./include/linux/mm_types_task.h", directory: "/home/lizy2001/genbc/linux")
!2269 = !{!2270}
!2270 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2267, file: !2268, line: 61, baseType: !2271, size: 256)
!2271 = !DICompositeType(tag: DW_TAG_array_type, baseType: !371, size: 256, elements: !2272)
!2272 = !{!2273}
!2273 = !DISubrange(count: 4)
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "binfmt", scope: !2095, file: !1721, line: 490, baseType: !2275, size: 64, offset: 5568)
!2275 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2276, size: 64)
!2276 = !DICompositeType(tag: DW_TAG_structure_type, name: "linux_binfmt", file: !1721, line: 490, flags: DIFlagFwdDecl)
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !2095, file: !1721, line: 493, baseType: !2278, size: 896, offset: 5632)
!2278 = !DIDerivedType(tag: DW_TAG_typedef, name: "mm_context_t", file: !2279, line: 53, baseType: !2280)
!2279 = !DIFile(filename: "./arch/x86/include/asm/mmu.h", directory: "/home/lizy2001/genbc/linux")
!2280 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2279, line: 13, size: 896, elements: !2281)
!2281 = !{!2282, !2283, !2284, !2285, !2288, !2289, !2290, !2291, !2311, !2312, !2313}
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_id", scope: !2280, file: !2279, line: 18, baseType: !331, size: 64)
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_gen", scope: !2280, file: !2279, line: 28, baseType: !373, size: 64, offset: 64)
!2284 = !DIDerivedType(tag: DW_TAG_member, name: "ldt_usr_sem", scope: !2280, file: !2279, line: 31, baseType: !1755, size: 256, offset: 128)
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "ldt", scope: !2280, file: !2279, line: 32, baseType: !2286, size: 64, offset: 384)
!2286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2287, size: 64)
!2287 = !DICompositeType(tag: DW_TAG_structure_type, name: "ldt_struct", file: !2279, line: 32, flags: DIFlagFwdDecl)
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "ia32_compat", scope: !2280, file: !2279, line: 37, baseType: !476, size: 16, offset: 448)
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2280, file: !2279, line: 40, baseType: !1665, size: 192, offset: 512)
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "vdso", scope: !2280, file: !2279, line: 41, baseType: !591, size: 64, offset: 704)
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "vdso_image", scope: !2280, file: !2279, line: 42, baseType: !2292, size: 64, offset: 768)
!2292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2293, size: 64)
!2293 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2294)
!2294 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vdso_image", file: !2295, line: 13, size: 896, elements: !2296)
!2295 = !DIFile(filename: "./arch/x86/include/asm/vdso.h", directory: "/home/lizy2001/genbc/linux")
!2296 = !{!2297, !2298, !2299, !2300, !2301, !2302, !2303, !2304, !2305, !2306, !2307, !2308, !2309, !2310}
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2294, file: !2295, line: 14, baseType: !591, size: 64)
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2294, file: !2295, line: 15, baseType: !312, size: 64, offset: 64)
!2299 = !DIDerivedType(tag: DW_TAG_member, name: "alt", scope: !2294, file: !2295, line: 17, baseType: !312, size: 64, offset: 128)
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "alt_len", scope: !2294, file: !2295, line: 17, baseType: !312, size: 64, offset: 192)
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_start", scope: !2294, file: !2295, line: 19, baseType: !998, size: 64, offset: 256)
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_page", scope: !2294, file: !2295, line: 21, baseType: !998, size: 64, offset: 320)
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "sym_pvclock_page", scope: !2294, file: !2295, line: 22, baseType: !998, size: 64, offset: 384)
!2304 = !DIDerivedType(tag: DW_TAG_member, name: "sym_hvclock_page", scope: !2294, file: !2295, line: 23, baseType: !998, size: 64, offset: 448)
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "sym_timens_page", scope: !2294, file: !2295, line: 24, baseType: !998, size: 64, offset: 512)
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "sym_VDSO32_NOTE_MASK", scope: !2294, file: !2295, line: 25, baseType: !998, size: 64, offset: 576)
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_sigreturn", scope: !2294, file: !2295, line: 26, baseType: !998, size: 64, offset: 640)
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_rt_sigreturn", scope: !2294, file: !2295, line: 27, baseType: !998, size: 64, offset: 704)
!2309 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_vsyscall", scope: !2294, file: !2295, line: 28, baseType: !998, size: 64, offset: 768)
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "sym_int80_landing_pad", scope: !2294, file: !2295, line: 29, baseType: !998, size: 64, offset: 832)
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "perf_rdpmc_allowed", scope: !2280, file: !2279, line: 44, baseType: !383, size: 32, offset: 832)
!2312 = !DIDerivedType(tag: DW_TAG_member, name: "pkey_allocation_map", scope: !2280, file: !2279, line: 50, baseType: !581, size: 16, offset: 864)
!2313 = !DIDerivedType(tag: DW_TAG_member, name: "execute_only_pkey", scope: !2280, file: !2279, line: 51, baseType: !2314, size: 16, offset: 880)
!2314 = !DIDerivedType(tag: DW_TAG_typedef, name: "s16", file: !332, line: 18, baseType: !2315)
!2315 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s16", file: !334, line: 23, baseType: !625)
!2316 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2095, file: !1721, line: 495, baseType: !312, size: 64, offset: 6528)
!2317 = !DIDerivedType(tag: DW_TAG_member, name: "core_state", scope: !2095, file: !1721, line: 497, baseType: !2318, size: 64, offset: 6592)
!2318 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2319, size: 64)
!2319 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_state", file: !1721, line: 381, size: 384, elements: !2320)
!2320 = !{!2321, !2322, !4225}
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !2319, file: !1721, line: 382, baseType: !383, size: 32)
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "dumper", scope: !2319, file: !1721, line: 383, baseType: !2323, size: 128, offset: 64)
!2323 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_thread", file: !1721, line: 376, size: 128, elements: !2324)
!2324 = !{!2325, !4223}
!2325 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !2323, file: !1721, line: 377, baseType: !2326, size: 64)
!2326 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2327, size: 64)
!2327 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_struct", file: !2328, line: 640, size: 48640, elements: !2329)
!2328 = !DIFile(filename: "./include/linux/sched.h", directory: "/home/lizy2001/genbc/linux")
!2329 = !{!2330, !2336, !2338, !2339, !2340, !2341, !2342, !2343, !2344, !2345, !2346, !2347, !2351, !2369, !2380, !2461, !2462, !2463, !2474, !2475, !2477, !2478, !2479, !2480, !2486, !2487, !2488, !2489, !2490, !2491, !2492, !2493, !2494, !2495, !2496, !2497, !2498, !2499, !2500, !2501, !2558, !2561, !2562, !2563, !2564, !2565, !2566, !2567, !2568, !2569, !2570, !2591, !2593, !2594, !2595, !2607, !2608, !2609, !2610, !2611, !2612, !2618, !2619, !2620, !2621, !2622, !2623, !2624, !2636, !2641, !2949, !2950, !2951, !2952, !2953, !2956, !2959, !2962, !2965, !3686, !3782, !3813, !3814, !3815, !3816, !3817, !3818, !3819, !3820, !3821, !3830, !3831, !3832, !3833, !3834, !3839, !3840, !3841, !3844, !3845, !3848, !3851, !3854, !3857, !3889, !3892, !3893, !3972, !3973, !3976, !3977, !3980, !3981, !3982, !3986, !3987, !3988, !4001, !4002, !4003, !4013, !4018, !4019, !4025, !4026, !4027, !4028, !4029, !4030, !4031, !4032, !4046, !4047, !4048, !4049, !4050, !4051, !4052, !4053, !4054}
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "thread_info", scope: !2327, file: !2328, line: 646, baseType: !2331, size: 128)
!2331 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_info", file: !2332, line: 56, size: 128, elements: !2333)
!2332 = !DIFile(filename: "./arch/x86/include/asm/thread_info.h", directory: "/home/lizy2001/genbc/linux")
!2333 = !{!2334, !2335}
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2331, file: !2332, line: 57, baseType: !312, size: 64)
!2335 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !2331, file: !2332, line: 58, baseType: !987, size: 32, offset: 64)
!2336 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2327, file: !2328, line: 649, baseType: !2337, size: 64, offset: 128)
!2337 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !998)
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !2327, file: !2328, line: 657, baseType: !591, size: 64, offset: 192)
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !2327, file: !2328, line: 658, baseType: !568, size: 32, offset: 256)
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2327, file: !2328, line: 660, baseType: !7, size: 32, offset: 288)
!2341 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace", scope: !2327, file: !2328, line: 661, baseType: !7, size: 32, offset: 320)
!2342 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !2327, file: !2328, line: 684, baseType: !32, size: 32, offset: 352)
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2327, file: !2328, line: 686, baseType: !32, size: 32, offset: 384)
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "static_prio", scope: !2327, file: !2328, line: 687, baseType: !32, size: 32, offset: 416)
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "normal_prio", scope: !2327, file: !2328, line: 688, baseType: !32, size: 32, offset: 448)
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "rt_priority", scope: !2327, file: !2328, line: 689, baseType: !7, size: 32, offset: 480)
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "sched_class", scope: !2327, file: !2328, line: 691, baseType: !2348, size: 64, offset: 512)
!2348 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2349, size: 64)
!2349 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2350)
!2350 = !DICompositeType(tag: DW_TAG_structure_type, name: "sched_class", file: !2328, line: 691, flags: DIFlagFwdDecl)
!2351 = !DIDerivedType(tag: DW_TAG_member, name: "se", scope: !2327, file: !2328, line: 692, baseType: !2352, size: 832, offset: 576)
!2352 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_entity", file: !2328, line: 451, size: 832, elements: !2353)
!2353 = !{!2354, !2359, !2360, !2361, !2362, !2363, !2364, !2365, !2366, !2367}
!2354 = !DIDerivedType(tag: DW_TAG_member, name: "load", scope: !2352, file: !2328, line: 453, baseType: !2355, size: 128)
!2355 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "load_weight", file: !2328, line: 325, size: 128, elements: !2356)
!2356 = !{!2357, !2358}
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !2355, file: !2328, line: 326, baseType: !312, size: 64)
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "inv_weight", scope: !2355, file: !2328, line: 327, baseType: !987, size: 32, offset: 64)
!2359 = !DIDerivedType(tag: DW_TAG_member, name: "run_node", scope: !2352, file: !2328, line: 454, baseType: !433, size: 192, align: 64, offset: 128)
!2360 = !DIDerivedType(tag: DW_TAG_member, name: "group_node", scope: !2352, file: !2328, line: 455, baseType: !284, size: 128, offset: 320)
!2361 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !2352, file: !2328, line: 456, baseType: !7, size: 32, offset: 448)
!2362 = !DIDerivedType(tag: DW_TAG_member, name: "exec_start", scope: !2352, file: !2328, line: 458, baseType: !331, size: 64, offset: 512)
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !2352, file: !2328, line: 459, baseType: !331, size: 64, offset: 576)
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "vruntime", scope: !2352, file: !2328, line: 460, baseType: !331, size: 64, offset: 640)
!2365 = !DIDerivedType(tag: DW_TAG_member, name: "prev_sum_exec_runtime", scope: !2352, file: !2328, line: 461, baseType: !331, size: 64, offset: 704)
!2366 = !DIDerivedType(tag: DW_TAG_member, name: "nr_migrations", scope: !2352, file: !2328, line: 463, baseType: !331, size: 64, offset: 768)
!2367 = !DIDerivedType(tag: DW_TAG_member, name: "statistics", scope: !2352, file: !2328, line: 465, baseType: !2368, offset: 832)
!2368 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_statistics", file: !2328, line: 415, elements: !1587)
!2369 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !2327, file: !2328, line: 693, baseType: !2370, size: 384, offset: 1408)
!2370 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_rt_entity", file: !2328, line: 489, size: 384, elements: !2371)
!2371 = !{!2372, !2373, !2374, !2375, !2376, !2377, !2378}
!2372 = !DIDerivedType(tag: DW_TAG_member, name: "run_list", scope: !2370, file: !2328, line: 490, baseType: !284, size: 128)
!2373 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2370, file: !2328, line: 491, baseType: !312, size: 64, offset: 128)
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "watchdog_stamp", scope: !2370, file: !2328, line: 492, baseType: !312, size: 64, offset: 192)
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "time_slice", scope: !2370, file: !2328, line: 493, baseType: !7, size: 32, offset: 256)
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !2370, file: !2328, line: 494, baseType: !476, size: 16, offset: 288)
!2377 = !DIDerivedType(tag: DW_TAG_member, name: "on_list", scope: !2370, file: !2328, line: 495, baseType: !476, size: 16, offset: 304)
!2378 = !DIDerivedType(tag: DW_TAG_member, name: "back", scope: !2370, file: !2328, line: 497, baseType: !2379, size: 64, offset: 320)
!2379 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2370, size: 64)
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "dl", scope: !2327, file: !2328, line: 697, baseType: !2381, size: 1792, offset: 1792)
!2381 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_dl_entity", file: !2328, line: 507, size: 1792, elements: !2382)
!2382 = !{!2383, !2384, !2385, !2386, !2387, !2388, !2389, !2390, !2391, !2392, !2393, !2394, !2395, !2396, !2458, !2459}
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !2381, file: !2328, line: 508, baseType: !433, size: 192, align: 64)
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "dl_runtime", scope: !2381, file: !2328, line: 515, baseType: !331, size: 64, offset: 192)
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "dl_deadline", scope: !2381, file: !2328, line: 516, baseType: !331, size: 64, offset: 256)
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "dl_period", scope: !2381, file: !2328, line: 517, baseType: !331, size: 64, offset: 320)
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "dl_bw", scope: !2381, file: !2328, line: 518, baseType: !331, size: 64, offset: 384)
!2388 = !DIDerivedType(tag: DW_TAG_member, name: "dl_density", scope: !2381, file: !2328, line: 519, baseType: !331, size: 64, offset: 448)
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "runtime", scope: !2381, file: !2328, line: 526, baseType: !377, size: 64, offset: 512)
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "deadline", scope: !2381, file: !2328, line: 527, baseType: !331, size: 64, offset: 576)
!2391 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2381, file: !2328, line: 528, baseType: !7, size: 32, offset: 640)
!2392 = !DIDerivedType(tag: DW_TAG_member, name: "dl_throttled", scope: !2381, file: !2328, line: 554, baseType: !7, size: 1, offset: 672, flags: DIFlagBitField, extraData: i64 672)
!2393 = !DIDerivedType(tag: DW_TAG_member, name: "dl_yielded", scope: !2381, file: !2328, line: 555, baseType: !7, size: 1, offset: 673, flags: DIFlagBitField, extraData: i64 672)
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "dl_non_contending", scope: !2381, file: !2328, line: 556, baseType: !7, size: 1, offset: 674, flags: DIFlagBitField, extraData: i64 672)
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "dl_overrun", scope: !2381, file: !2328, line: 557, baseType: !7, size: 1, offset: 675, flags: DIFlagBitField, extraData: i64 672)
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "dl_timer", scope: !2381, file: !2328, line: 563, baseType: !2397, size: 512, offset: 704)
!2397 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer", file: !20, line: 118, size: 512, elements: !2398)
!2398 = !{!2399, !2405, !2406, !2411, !2454, !2455, !2456, !2457}
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2397, file: !20, line: 119, baseType: !2400, size: 256)
!2400 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_node", file: !2401, line: 9, size: 256, elements: !2402)
!2401 = !DIFile(filename: "./include/linux/timerqueue.h", directory: "/home/lizy2001/genbc/linux")
!2402 = !{!2403, !2404}
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2400, file: !2401, line: 10, baseType: !433, size: 192, align: 64)
!2404 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !2400, file: !2401, line: 11, baseType: !453, size: 64, offset: 192)
!2405 = !DIDerivedType(tag: DW_TAG_member, name: "_softexpires", scope: !2397, file: !20, line: 120, baseType: !453, size: 64, offset: 256)
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !2397, file: !20, line: 121, baseType: !2407, size: 64, offset: 320)
!2407 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2408, size: 64)
!2408 = !DISubroutineType(types: !2409)
!2409 = !{!19, !2410}
!2410 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2397, size: 64)
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2397, file: !20, line: 122, baseType: !2412, size: 64, offset: 384)
!2412 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2413, size: 64)
!2413 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_clock_base", file: !20, line: 159, size: 512, align: 512, elements: !2414)
!2414 = !{!2415, !2435, !2436, !2439, !2444, !2445, !2449, !2453}
!2415 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_base", scope: !2413, file: !20, line: 160, baseType: !2416, size: 64)
!2416 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2417, size: 64)
!2417 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_cpu_base", file: !20, line: 214, size: 4608, align: 512, elements: !2418)
!2418 = !{!2419, !2420, !2421, !2422, !2423, !2424, !2425, !2426, !2427, !2428, !2429, !2430, !2431}
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2417, file: !20, line: 215, baseType: !1761)
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "cpu", scope: !2417, file: !20, line: 216, baseType: !7, size: 32)
!2421 = !DIDerivedType(tag: DW_TAG_member, name: "active_bases", scope: !2417, file: !20, line: 217, baseType: !7, size: 32, offset: 32)
!2422 = !DIDerivedType(tag: DW_TAG_member, name: "clock_was_set_seq", scope: !2417, file: !20, line: 218, baseType: !7, size: 32, offset: 64)
!2423 = !DIDerivedType(tag: DW_TAG_member, name: "hres_active", scope: !2417, file: !20, line: 219, baseType: !7, size: 1, offset: 96, flags: DIFlagBitField, extraData: i64 96)
!2424 = !DIDerivedType(tag: DW_TAG_member, name: "in_hrtirq", scope: !2417, file: !20, line: 220, baseType: !7, size: 1, offset: 97, flags: DIFlagBitField, extraData: i64 96)
!2425 = !DIDerivedType(tag: DW_TAG_member, name: "hang_detected", scope: !2417, file: !20, line: 221, baseType: !7, size: 1, offset: 98, flags: DIFlagBitField, extraData: i64 96)
!2426 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_activated", scope: !2417, file: !20, line: 222, baseType: !7, size: 1, offset: 99, flags: DIFlagBitField, extraData: i64 96)
!2427 = !DIDerivedType(tag: DW_TAG_member, name: "expires_next", scope: !2417, file: !20, line: 233, baseType: !453, size: 64, offset: 128)
!2428 = !DIDerivedType(tag: DW_TAG_member, name: "next_timer", scope: !2417, file: !20, line: 234, baseType: !2410, size: 64, offset: 192)
!2429 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_expires_next", scope: !2417, file: !20, line: 235, baseType: !453, size: 64, offset: 256)
!2430 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_next_timer", scope: !2417, file: !20, line: 236, baseType: !2410, size: 64, offset: 320)
!2431 = !DIDerivedType(tag: DW_TAG_member, name: "clock_base", scope: !2417, file: !20, line: 237, baseType: !2432, size: 4096, offset: 512)
!2432 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2413, size: 4096, elements: !2433)
!2433 = !{!2434}
!2434 = !DISubrange(count: 8)
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !2413, file: !20, line: 161, baseType: !7, size: 32, offset: 64)
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !2413, file: !20, line: 162, baseType: !2437, size: 32, offset: 96)
!2437 = !DIDerivedType(tag: DW_TAG_typedef, name: "clockid_t", file: !277, line: 27, baseType: !2438)
!2438 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clockid_t", file: !1041, line: 96, baseType: !32)
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !2413, file: !20, line: 163, baseType: !2440, size: 32, offset: 128)
!2440 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_raw_spinlock_t", file: !1344, line: 276, baseType: !2441)
!2441 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_raw_spinlock", file: !1344, line: 276, size: 32, elements: !2442)
!2442 = !{!2443}
!2443 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !2441, file: !1344, line: 276, baseType: !1348, size: 32)
!2444 = !DIDerivedType(tag: DW_TAG_member, name: "running", scope: !2413, file: !20, line: 164, baseType: !2410, size: 64, offset: 192)
!2445 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !2413, file: !20, line: 165, baseType: !2446, size: 128, offset: 256)
!2446 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_head", file: !2401, line: 14, size: 128, elements: !2447)
!2447 = !{!2448}
!2448 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !2446, file: !2401, line: 15, baseType: !1747, size: 128)
!2449 = !DIDerivedType(tag: DW_TAG_member, name: "get_time", scope: !2413, file: !20, line: 166, baseType: !2450, size: 64, offset: 384)
!2450 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2451, size: 64)
!2451 = !DISubroutineType(types: !2452)
!2452 = !{!453}
!2453 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !2413, file: !20, line: 167, baseType: !453, size: 64, offset: 448)
!2454 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2397, file: !20, line: 123, baseType: !794, size: 8, offset: 448)
!2455 = !DIDerivedType(tag: DW_TAG_member, name: "is_rel", scope: !2397, file: !20, line: 124, baseType: !794, size: 8, offset: 456)
!2456 = !DIDerivedType(tag: DW_TAG_member, name: "is_soft", scope: !2397, file: !20, line: 125, baseType: !794, size: 8, offset: 464)
!2457 = !DIDerivedType(tag: DW_TAG_member, name: "is_hard", scope: !2397, file: !20, line: 126, baseType: !794, size: 8, offset: 472)
!2458 = !DIDerivedType(tag: DW_TAG_member, name: "inactive_timer", scope: !2381, file: !2328, line: 572, baseType: !2397, size: 512, offset: 1216)
!2459 = !DIDerivedType(tag: DW_TAG_member, name: "pi_se", scope: !2381, file: !2328, line: 580, baseType: !2460, size: 64, offset: 1728)
!2460 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2381, size: 64)
!2461 = !DIDerivedType(tag: DW_TAG_member, name: "policy", scope: !2327, file: !2328, line: 721, baseType: !7, size: 32, offset: 3584)
!2462 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cpus_allowed", scope: !2327, file: !2328, line: 722, baseType: !32, size: 32, offset: 3616)
!2463 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_ptr", scope: !2327, file: !2328, line: 723, baseType: !2464, size: 64, offset: 3648)
!2464 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2465, size: 64)
!2465 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2466)
!2466 = !DIDerivedType(tag: DW_TAG_typedef, name: "cpumask_t", file: !2467, line: 17, baseType: !2468)
!2467 = !DIFile(filename: "./include/linux/cpumask.h", directory: "/home/lizy2001/genbc/linux")
!2468 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpumask", file: !2467, line: 17, size: 64, elements: !2469)
!2469 = !{!2470}
!2470 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !2468, file: !2467, line: 17, baseType: !2471, size: 64)
!2471 = !DICompositeType(tag: DW_TAG_array_type, baseType: !312, size: 64, elements: !2472)
!2472 = !{!2473}
!2473 = !DISubrange(count: 1)
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_mask", scope: !2327, file: !2328, line: 724, baseType: !2466, size: 64, offset: 3712)
!2475 = !DIDerivedType(tag: DW_TAG_member, name: "sched_info", scope: !2327, file: !2328, line: 749, baseType: !2476, offset: 3776)
!2476 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_info", file: !2328, line: 290, elements: !1587)
!2477 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !2327, file: !2328, line: 751, baseType: !284, size: 128, offset: 3776)
!2478 = !DIDerivedType(tag: DW_TAG_member, name: "mm", scope: !2327, file: !2328, line: 757, baseType: !2091, size: 64, offset: 3904)
!2479 = !DIDerivedType(tag: DW_TAG_member, name: "active_mm", scope: !2327, file: !2328, line: 758, baseType: !2091, size: 64, offset: 3968)
!2480 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache", scope: !2327, file: !2328, line: 761, baseType: !2481, size: 320, offset: 4032)
!2481 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vmacache", file: !2268, line: 34, size: 320, elements: !2482)
!2482 = !{!2483, !2484}
!2483 = !DIDerivedType(tag: DW_TAG_member, name: "seqnum", scope: !2481, file: !2268, line: 35, baseType: !331, size: 64)
!2484 = !DIDerivedType(tag: DW_TAG_member, name: "vmas", scope: !2481, file: !2268, line: 36, baseType: !2485, size: 256, offset: 64)
!2485 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2098, size: 256, elements: !2272)
!2486 = !DIDerivedType(tag: DW_TAG_member, name: "exit_state", scope: !2327, file: !2328, line: 766, baseType: !32, size: 32, offset: 4352)
!2487 = !DIDerivedType(tag: DW_TAG_member, name: "exit_code", scope: !2327, file: !2328, line: 767, baseType: !32, size: 32, offset: 4384)
!2488 = !DIDerivedType(tag: DW_TAG_member, name: "exit_signal", scope: !2327, file: !2328, line: 768, baseType: !32, size: 32, offset: 4416)
!2489 = !DIDerivedType(tag: DW_TAG_member, name: "pdeath_signal", scope: !2327, file: !2328, line: 770, baseType: !32, size: 32, offset: 4448)
!2490 = !DIDerivedType(tag: DW_TAG_member, name: "jobctl", scope: !2327, file: !2328, line: 772, baseType: !312, size: 64, offset: 4480)
!2491 = !DIDerivedType(tag: DW_TAG_member, name: "personality", scope: !2327, file: !2328, line: 775, baseType: !7, size: 32, offset: 4544)
!2492 = !DIDerivedType(tag: DW_TAG_member, name: "sched_reset_on_fork", scope: !2327, file: !2328, line: 778, baseType: !7, size: 1, offset: 4576, flags: DIFlagBitField, extraData: i64 4576)
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "sched_contributes_to_load", scope: !2327, file: !2328, line: 779, baseType: !7, size: 1, offset: 4577, flags: DIFlagBitField, extraData: i64 4576)
!2494 = !DIDerivedType(tag: DW_TAG_member, name: "sched_migrated", scope: !2327, file: !2328, line: 780, baseType: !7, size: 1, offset: 4578, flags: DIFlagBitField, extraData: i64 4576)
!2495 = !DIDerivedType(tag: DW_TAG_member, name: "sched_remote_wakeup", scope: !2327, file: !2328, line: 803, baseType: !7, size: 1, offset: 4608, flags: DIFlagBitField, extraData: i64 4608)
!2496 = !DIDerivedType(tag: DW_TAG_member, name: "in_execve", scope: !2327, file: !2328, line: 806, baseType: !7, size: 1, offset: 4609, flags: DIFlagBitField, extraData: i64 4608)
!2497 = !DIDerivedType(tag: DW_TAG_member, name: "in_iowait", scope: !2327, file: !2328, line: 807, baseType: !7, size: 1, offset: 4610, flags: DIFlagBitField, extraData: i64 4608)
!2498 = !DIDerivedType(tag: DW_TAG_member, name: "restore_sigmask", scope: !2327, file: !2328, line: 809, baseType: !7, size: 1, offset: 4611, flags: DIFlagBitField, extraData: i64 4608)
!2499 = !DIDerivedType(tag: DW_TAG_member, name: "brk_randomized", scope: !2327, file: !2328, line: 815, baseType: !7, size: 1, offset: 4612, flags: DIFlagBitField, extraData: i64 4608)
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_flags", scope: !2327, file: !2328, line: 831, baseType: !312, size: 64, offset: 4672)
!2501 = !DIDerivedType(tag: DW_TAG_member, name: "restart_block", scope: !2327, file: !2328, line: 833, baseType: !2502, size: 384, offset: 4736)
!2502 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "restart_block", file: !25, line: 25, size: 384, elements: !2503)
!2503 = !{!2504, !2509}
!2504 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2502, file: !25, line: 26, baseType: !2505, size: 64)
!2505 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2506, size: 64)
!2506 = !DISubroutineType(types: !2507)
!2507 = !{!998, !2508}
!2508 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2502, size: 64)
!2509 = !DIDerivedType(tag: DW_TAG_member, scope: !2502, file: !25, line: 27, baseType: !2510, size: 320, offset: 64)
!2510 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2502, file: !25, line: 27, size: 320, elements: !2511)
!2511 = !{!2512, !2522, !2548}
!2512 = !DIDerivedType(tag: DW_TAG_member, name: "futex", scope: !2510, file: !25, line: 36, baseType: !2513, size: 320)
!2513 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2510, file: !25, line: 29, size: 320, elements: !2514)
!2514 = !{!2515, !2517, !2518, !2519, !2520, !2521}
!2515 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr", scope: !2513, file: !25, line: 30, baseType: !2516, size: 64)
!2516 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !987, size: 64)
!2517 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !2513, file: !25, line: 31, baseType: !987, size: 32, offset: 64)
!2518 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2513, file: !25, line: 32, baseType: !987, size: 32, offset: 96)
!2519 = !DIDerivedType(tag: DW_TAG_member, name: "bitset", scope: !2513, file: !25, line: 33, baseType: !987, size: 32, offset: 128)
!2520 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !2513, file: !25, line: 34, baseType: !331, size: 64, offset: 192)
!2521 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr2", scope: !2513, file: !25, line: 35, baseType: !2516, size: 64, offset: 256)
!2522 = !DIDerivedType(tag: DW_TAG_member, name: "nanosleep", scope: !2510, file: !25, line: 46, baseType: !2523, size: 192)
!2523 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2510, file: !25, line: 38, size: 192, elements: !2524)
!2524 = !{!2525, !2526, !2527, !2547}
!2525 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !2523, file: !25, line: 39, baseType: !2437, size: 32)
!2526 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2523, file: !25, line: 40, baseType: !24, size: 32, offset: 32)
!2527 = !DIDerivedType(tag: DW_TAG_member, scope: !2523, file: !25, line: 41, baseType: !2528, size: 64, offset: 64)
!2528 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2523, file: !25, line: 41, size: 64, elements: !2529)
!2529 = !{!2530, !2538}
!2530 = !DIDerivedType(tag: DW_TAG_member, name: "rmtp", scope: !2528, file: !25, line: 42, baseType: !2531, size: 64)
!2531 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2532, size: 64)
!2532 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__kernel_timespec", file: !2533, line: 7, size: 128, elements: !2534)
!2533 = !DIFile(filename: "./include/uapi/linux/time_types.h", directory: "/home/lizy2001/genbc/linux")
!2534 = !{!2535, !2537}
!2535 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2532, file: !2533, line: 8, baseType: !2536, size: 64)
!2536 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_time64_t", file: !1041, line: 93, baseType: !379)
!2537 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !2532, file: !2533, line: 9, baseType: !379, size: 64, offset: 64)
!2538 = !DIDerivedType(tag: DW_TAG_member, name: "compat_rmtp", scope: !2528, file: !25, line: 43, baseType: !2539, size: 64)
!2539 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2540, size: 64)
!2540 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "old_timespec32", file: !2541, line: 7, size: 64, elements: !2542)
!2541 = !DIFile(filename: "./include/vdso/time32.h", directory: "/home/lizy2001/genbc/linux")
!2542 = !{!2543, !2546}
!2543 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2540, file: !2541, line: 8, baseType: !2544, size: 32)
!2544 = !DIDerivedType(tag: DW_TAG_typedef, name: "old_time32_t", file: !2541, line: 5, baseType: !2545)
!2545 = !DIDerivedType(tag: DW_TAG_typedef, name: "s32", file: !332, line: 20, baseType: !942)
!2546 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !2540, file: !2541, line: 9, baseType: !2545, size: 32, offset: 32)
!2547 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !2523, file: !25, line: 45, baseType: !331, size: 64, offset: 128)
!2548 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !2510, file: !25, line: 54, baseType: !2549, size: 256)
!2549 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2510, file: !25, line: 48, size: 256, elements: !2550)
!2550 = !{!2551, !2554, !2555, !2556, !2557}
!2551 = !DIDerivedType(tag: DW_TAG_member, name: "ufds", scope: !2549, file: !25, line: 49, baseType: !2552, size: 64)
!2552 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2553, size: 64)
!2553 = !DICompositeType(tag: DW_TAG_structure_type, name: "pollfd", file: !25, line: 14, flags: DIFlagFwdDecl)
!2554 = !DIDerivedType(tag: DW_TAG_member, name: "nfds", scope: !2549, file: !25, line: 50, baseType: !32, size: 32, offset: 64)
!2555 = !DIDerivedType(tag: DW_TAG_member, name: "has_timeout", scope: !2549, file: !25, line: 51, baseType: !32, size: 32, offset: 96)
!2556 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2549, file: !25, line: 52, baseType: !312, size: 64, offset: 128)
!2557 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !2549, file: !25, line: 53, baseType: !312, size: 64, offset: 192)
!2558 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !2327, file: !2328, line: 835, baseType: !2559, size: 32, offset: 5120)
!2559 = !DIDerivedType(tag: DW_TAG_typedef, name: "pid_t", file: !277, line: 22, baseType: !2560)
!2560 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_pid_t", file: !1041, line: 28, baseType: !32)
!2561 = !DIDerivedType(tag: DW_TAG_member, name: "tgid", scope: !2327, file: !2328, line: 836, baseType: !2559, size: 32, offset: 5152)
!2562 = !DIDerivedType(tag: DW_TAG_member, name: "stack_canary", scope: !2327, file: !2328, line: 840, baseType: !312, size: 64, offset: 5184)
!2563 = !DIDerivedType(tag: DW_TAG_member, name: "real_parent", scope: !2327, file: !2328, line: 849, baseType: !2326, size: 64, offset: 5248)
!2564 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !2327, file: !2328, line: 852, baseType: !2326, size: 64, offset: 5312)
!2565 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2327, file: !2328, line: 857, baseType: !284, size: 128, offset: 5376)
!2566 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !2327, file: !2328, line: 858, baseType: !284, size: 128, offset: 5504)
!2567 = !DIDerivedType(tag: DW_TAG_member, name: "group_leader", scope: !2327, file: !2328, line: 859, baseType: !2326, size: 64, offset: 5632)
!2568 = !DIDerivedType(tag: DW_TAG_member, name: "ptraced", scope: !2327, file: !2328, line: 867, baseType: !284, size: 128, offset: 5696)
!2569 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_entry", scope: !2327, file: !2328, line: 868, baseType: !284, size: 128, offset: 5824)
!2570 = !DIDerivedType(tag: DW_TAG_member, name: "thread_pid", scope: !2327, file: !2328, line: 871, baseType: !2571, size: 64, offset: 5952)
!2571 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2572, size: 64)
!2572 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pid", file: !2573, line: 59, size: 768, elements: !2574)
!2573 = !DIFile(filename: "./include/linux/pid.h", directory: "/home/lizy2001/genbc/linux")
!2574 = !{!2575, !2576, !2577, !2578, !2580, !2581, !2582, !2583}
!2575 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2572, file: !2573, line: 61, baseType: !568, size: 32)
!2576 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !2572, file: !2573, line: 62, baseType: !7, size: 32, offset: 32)
!2577 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2572, file: !2573, line: 63, baseType: !1670, offset: 64)
!2578 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !2572, file: !2573, line: 65, baseType: !2579, size: 256, offset: 64)
!2579 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1581, size: 256, elements: !2272)
!2580 = !DIDerivedType(tag: DW_TAG_member, name: "inodes", scope: !2572, file: !2573, line: 66, baseType: !1581, size: 64, offset: 320)
!2581 = !DIDerivedType(tag: DW_TAG_member, name: "wait_pidfd", scope: !2572, file: !2573, line: 68, baseType: !1889, size: 128, offset: 384)
!2582 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2572, file: !2573, line: 69, baseType: !299, size: 128, align: 64, offset: 512)
!2583 = !DIDerivedType(tag: DW_TAG_member, name: "numbers", scope: !2572, file: !2573, line: 70, baseType: !2584, size: 128, offset: 640)
!2584 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2585, size: 128, elements: !2472)
!2585 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "upid", file: !2573, line: 54, size: 128, elements: !2586)
!2586 = !{!2587, !2588}
!2587 = !DIDerivedType(tag: DW_TAG_member, name: "nr", scope: !2585, file: !2573, line: 55, baseType: !32, size: 32)
!2588 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !2585, file: !2573, line: 56, baseType: !2589, size: 64, offset: 64)
!2589 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2590, size: 64)
!2590 = !DICompositeType(tag: DW_TAG_structure_type, name: "pid_namespace", file: !2573, line: 56, flags: DIFlagFwdDecl)
!2591 = !DIDerivedType(tag: DW_TAG_member, name: "pid_links", scope: !2327, file: !2328, line: 872, baseType: !2592, size: 512, offset: 6016)
!2592 = !DICompositeType(tag: DW_TAG_array_type, baseType: !276, size: 512, elements: !2272)
!2593 = !DIDerivedType(tag: DW_TAG_member, name: "thread_group", scope: !2327, file: !2328, line: 873, baseType: !284, size: 128, offset: 6528)
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "thread_node", scope: !2327, file: !2328, line: 874, baseType: !284, size: 128, offset: 6656)
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "vfork_done", scope: !2327, file: !2328, line: 876, baseType: !2596, size: 64, offset: 6784)
!2596 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2597, size: 64)
!2597 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "completion", file: !2598, line: 26, size: 192, elements: !2599)
!2598 = !DIFile(filename: "./include/linux/completion.h", directory: "/home/lizy2001/genbc/linux")
!2599 = !{!2600, !2601}
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !2597, file: !2598, line: 27, baseType: !7, size: 32)
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !2597, file: !2598, line: 28, baseType: !2602, size: 128, offset: 64)
!2602 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swait_queue_head", file: !2603, line: 43, size: 128, elements: !2604)
!2603 = !DIFile(filename: "./include/linux/swait.h", directory: "/home/lizy2001/genbc/linux")
!2604 = !{!2605, !2606}
!2605 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2602, file: !2603, line: 44, baseType: !1761)
!2606 = !DIDerivedType(tag: DW_TAG_member, name: "task_list", scope: !2602, file: !2603, line: 45, baseType: !284, size: 128)
!2607 = !DIDerivedType(tag: DW_TAG_member, name: "set_child_tid", scope: !2327, file: !2328, line: 879, baseType: !1001, size: 64, offset: 6848)
!2608 = !DIDerivedType(tag: DW_TAG_member, name: "clear_child_tid", scope: !2327, file: !2328, line: 882, baseType: !1001, size: 64, offset: 6912)
!2609 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !2327, file: !2328, line: 884, baseType: !331, size: 64, offset: 6976)
!2610 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !2327, file: !2328, line: 885, baseType: !331, size: 64, offset: 7040)
!2611 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !2327, file: !2328, line: 890, baseType: !331, size: 64, offset: 7104)
!2612 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !2327, file: !2328, line: 891, baseType: !2613, size: 128, offset: 7168)
!2613 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "prev_cputime", file: !2328, line: 242, size: 128, elements: !2614)
!2614 = !{!2615, !2616, !2617}
!2615 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !2613, file: !2328, line: 244, baseType: !331, size: 64)
!2616 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !2613, file: !2328, line: 245, baseType: !331, size: 64, offset: 64)
!2617 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2613, file: !2328, line: 246, baseType: !1761, offset: 128)
!2618 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !2327, file: !2328, line: 900, baseType: !312, size: 64, offset: 7296)
!2619 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !2327, file: !2328, line: 901, baseType: !312, size: 64, offset: 7360)
!2620 = !DIDerivedType(tag: DW_TAG_member, name: "start_time", scope: !2327, file: !2328, line: 904, baseType: !331, size: 64, offset: 7424)
!2621 = !DIDerivedType(tag: DW_TAG_member, name: "start_boottime", scope: !2327, file: !2328, line: 907, baseType: !331, size: 64, offset: 7488)
!2622 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !2327, file: !2328, line: 910, baseType: !312, size: 64, offset: 7552)
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !2327, file: !2328, line: 911, baseType: !312, size: 64, offset: 7616)
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !2327, file: !2328, line: 914, baseType: !2625, size: 640, offset: 7680)
!2625 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers", file: !2626, line: 123, size: 640, elements: !2627)
!2626 = !DIFile(filename: "./include/linux/posix-timers.h", directory: "/home/lizy2001/genbc/linux")
!2627 = !{!2628, !2634, !2635}
!2628 = !DIDerivedType(tag: DW_TAG_member, name: "bases", scope: !2625, file: !2626, line: 124, baseType: !2629, size: 576)
!2629 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2630, size: 576, elements: !1592)
!2630 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimer_base", file: !2626, line: 108, size: 192, elements: !2631)
!2631 = !{!2632, !2633}
!2632 = !DIDerivedType(tag: DW_TAG_member, name: "nextevt", scope: !2630, file: !2626, line: 109, baseType: !331, size: 64)
!2633 = !DIDerivedType(tag: DW_TAG_member, name: "tqhead", scope: !2630, file: !2626, line: 110, baseType: !2446, size: 128, offset: 64)
!2634 = !DIDerivedType(tag: DW_TAG_member, name: "timers_active", scope: !2625, file: !2626, line: 125, baseType: !7, size: 32, offset: 576)
!2635 = !DIDerivedType(tag: DW_TAG_member, name: "expiry_active", scope: !2625, file: !2626, line: 126, baseType: !7, size: 32, offset: 608)
!2636 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers_work", scope: !2327, file: !2328, line: 917, baseType: !2637, size: 192, offset: 8320)
!2637 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers_work", file: !2626, line: 134, size: 192, elements: !2638)
!2638 = !{!2639, !2640}
!2639 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !2637, file: !2626, line: 135, baseType: !299, size: 128, align: 64)
!2640 = !DIDerivedType(tag: DW_TAG_member, name: "scheduled", scope: !2637, file: !2626, line: 136, baseType: !7, size: 32, offset: 128)
!2641 = !DIDerivedType(tag: DW_TAG_member, name: "ptracer_cred", scope: !2327, file: !2328, line: 923, baseType: !2642, size: 64, offset: 8512)
!2642 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2643, size: 64)
!2643 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2644)
!2644 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cred", file: !2645, line: 111, size: 1280, elements: !2646)
!2645 = !DIFile(filename: "./include/linux/cred.h", directory: "/home/lizy2001/genbc/linux")
!2646 = !{!2647, !2648, !2649, !2650, !2651, !2652, !2653, !2654, !2655, !2656, !2657, !2666, !2667, !2668, !2669, !2670, !2671, !2776, !2777, !2778, !2779, !2780, !2936, !2944}
!2647 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !2644, file: !2645, line: 112, baseType: !383, size: 32)
!2648 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2644, file: !2645, line: 120, baseType: !1382, size: 32, offset: 32)
!2649 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !2644, file: !2645, line: 121, baseType: !1390, size: 32, offset: 64)
!2650 = !DIDerivedType(tag: DW_TAG_member, name: "suid", scope: !2644, file: !2645, line: 122, baseType: !1382, size: 32, offset: 96)
!2651 = !DIDerivedType(tag: DW_TAG_member, name: "sgid", scope: !2644, file: !2645, line: 123, baseType: !1390, size: 32, offset: 128)
!2652 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !2644, file: !2645, line: 124, baseType: !1382, size: 32, offset: 160)
!2653 = !DIDerivedType(tag: DW_TAG_member, name: "egid", scope: !2644, file: !2645, line: 125, baseType: !1390, size: 32, offset: 192)
!2654 = !DIDerivedType(tag: DW_TAG_member, name: "fsuid", scope: !2644, file: !2645, line: 126, baseType: !1382, size: 32, offset: 224)
!2655 = !DIDerivedType(tag: DW_TAG_member, name: "fsgid", scope: !2644, file: !2645, line: 127, baseType: !1390, size: 32, offset: 256)
!2656 = !DIDerivedType(tag: DW_TAG_member, name: "securebits", scope: !2644, file: !2645, line: 128, baseType: !7, size: 32, offset: 288)
!2657 = !DIDerivedType(tag: DW_TAG_member, name: "cap_inheritable", scope: !2644, file: !2645, line: 129, baseType: !2658, size: 64, offset: 320)
!2658 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_cap_t", file: !2659, line: 26, baseType: !2660)
!2659 = !DIFile(filename: "./include/linux/capability.h", directory: "/home/lizy2001/genbc/linux")
!2660 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_cap_struct", file: !2659, line: 24, size: 64, elements: !2661)
!2661 = !{!2662}
!2662 = !DIDerivedType(tag: DW_TAG_member, name: "cap", scope: !2660, file: !2659, line: 25, baseType: !2663, size: 64)
!2663 = !DICompositeType(tag: DW_TAG_array_type, baseType: !493, size: 64, elements: !2664)
!2664 = !{!2665}
!2665 = !DISubrange(count: 2)
!2666 = !DIDerivedType(tag: DW_TAG_member, name: "cap_permitted", scope: !2644, file: !2645, line: 130, baseType: !2658, size: 64, offset: 384)
!2667 = !DIDerivedType(tag: DW_TAG_member, name: "cap_effective", scope: !2644, file: !2645, line: 131, baseType: !2658, size: 64, offset: 448)
!2668 = !DIDerivedType(tag: DW_TAG_member, name: "cap_bset", scope: !2644, file: !2645, line: 132, baseType: !2658, size: 64, offset: 512)
!2669 = !DIDerivedType(tag: DW_TAG_member, name: "cap_ambient", scope: !2644, file: !2645, line: 133, baseType: !2658, size: 64, offset: 576)
!2670 = !DIDerivedType(tag: DW_TAG_member, name: "jit_keyring", scope: !2644, file: !2645, line: 135, baseType: !482, size: 8, offset: 640)
!2671 = !DIDerivedType(tag: DW_TAG_member, name: "session_keyring", scope: !2644, file: !2645, line: 137, baseType: !2672, size: 64, offset: 704)
!2672 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2673, size: 64)
!2673 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key", file: !2674, line: 189, size: 1664, elements: !2675)
!2674 = !DIFile(filename: "./include/linux/key.h", directory: "/home/lizy2001/genbc/linux")
!2675 = !{!2676, !2677, !2680, !2685, !2686, !2689, !2690, !2695, !2696, !2697, !2698, !2700, !2701, !2702, !2703, !2704, !2740, !2761}
!2676 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !2673, file: !2674, line: 190, baseType: !568, size: 32)
!2677 = !DIDerivedType(tag: DW_TAG_member, name: "serial", scope: !2673, file: !2674, line: 191, baseType: !2678, size: 32, offset: 32)
!2678 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_serial_t", file: !2674, line: 28, baseType: !2679)
!2679 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !277, line: 98, baseType: !2545)
!2680 = !DIDerivedType(tag: DW_TAG_member, scope: !2673, file: !2674, line: 192, baseType: !2681, size: 192, offset: 64)
!2681 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2673, file: !2674, line: 192, size: 192, elements: !2682)
!2682 = !{!2683, !2684}
!2683 = !DIDerivedType(tag: DW_TAG_member, name: "graveyard_link", scope: !2681, file: !2674, line: 193, baseType: !284, size: 128)
!2684 = !DIDerivedType(tag: DW_TAG_member, name: "serial_node", scope: !2681, file: !2674, line: 194, baseType: !433, size: 192, align: 64)
!2685 = !DIDerivedType(tag: DW_TAG_member, name: "sem", scope: !2673, file: !2674, line: 199, baseType: !1755, size: 256, offset: 256)
!2686 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !2673, file: !2674, line: 200, baseType: !2687, size: 64, offset: 512)
!2687 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2688, size: 64)
!2688 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_user", file: !2674, line: 200, flags: DIFlagFwdDecl)
!2689 = !DIDerivedType(tag: DW_TAG_member, name: "security", scope: !2673, file: !2674, line: 201, baseType: !591, size: 64, offset: 576)
!2690 = !DIDerivedType(tag: DW_TAG_member, scope: !2673, file: !2674, line: 202, baseType: !2691, size: 64, offset: 640)
!2691 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2673, file: !2674, line: 202, size: 64, elements: !2692)
!2692 = !{!2693, !2694}
!2693 = !DIDerivedType(tag: DW_TAG_member, name: "expiry", scope: !2691, file: !2674, line: 203, baseType: !1483, size: 64)
!2694 = !DIDerivedType(tag: DW_TAG_member, name: "revoked_at", scope: !2691, file: !2674, line: 204, baseType: !1483, size: 64)
!2695 = !DIDerivedType(tag: DW_TAG_member, name: "last_used_at", scope: !2673, file: !2674, line: 206, baseType: !1483, size: 64, offset: 704)
!2696 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2673, file: !2674, line: 207, baseType: !1382, size: 32, offset: 768)
!2697 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !2673, file: !2674, line: 208, baseType: !1390, size: 32, offset: 800)
!2698 = !DIDerivedType(tag: DW_TAG_member, name: "perm", scope: !2673, file: !2674, line: 209, baseType: !2699, size: 32, offset: 832)
!2699 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_perm_t", file: !2674, line: 31, baseType: !1502)
!2700 = !DIDerivedType(tag: DW_TAG_member, name: "quotalen", scope: !2673, file: !2674, line: 210, baseType: !476, size: 16, offset: 864)
!2701 = !DIDerivedType(tag: DW_TAG_member, name: "datalen", scope: !2673, file: !2674, line: 211, baseType: !476, size: 16, offset: 880)
!2702 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2673, file: !2674, line: 215, baseType: !625, size: 16, offset: 896)
!2703 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2673, file: !2674, line: 222, baseType: !312, size: 64, offset: 960)
!2704 = !DIDerivedType(tag: DW_TAG_member, scope: !2673, file: !2674, line: 239, baseType: !2705, size: 320, offset: 1024)
!2705 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2673, file: !2674, line: 239, size: 320, elements: !2706)
!2706 = !{!2707, !2732}
!2707 = !DIDerivedType(tag: DW_TAG_member, name: "index_key", scope: !2705, file: !2674, line: 240, baseType: !2708, size: 320)
!2708 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "keyring_index_key", file: !2674, line: 108, size: 320, elements: !2709)
!2709 = !{!2710, !2711, !2721, !2724, !2731}
!2710 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !2708, file: !2674, line: 110, baseType: !312, size: 64)
!2711 = !DIDerivedType(tag: DW_TAG_member, scope: !2708, file: !2674, line: 111, baseType: !2712, size: 64, offset: 64)
!2712 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2708, file: !2674, line: 111, size: 64, elements: !2713)
!2713 = !{!2714, !2720}
!2714 = !DIDerivedType(tag: DW_TAG_member, scope: !2712, file: !2674, line: 112, baseType: !2715, size: 64)
!2715 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2712, file: !2674, line: 112, size: 64, elements: !2716)
!2716 = !{!2717, !2718}
!2717 = !DIDerivedType(tag: DW_TAG_member, name: "desc_len", scope: !2715, file: !2674, line: 114, baseType: !581, size: 16)
!2718 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !2715, file: !2674, line: 115, baseType: !2719, size: 48, offset: 16)
!2719 = !DICompositeType(tag: DW_TAG_array_type, baseType: !268, size: 48, elements: !999)
!2720 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !2712, file: !2674, line: 121, baseType: !312, size: 64)
!2721 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2708, file: !2674, line: 123, baseType: !2722, size: 64, offset: 128)
!2722 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2723, size: 64)
!2723 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_type", file: !2674, line: 96, flags: DIFlagFwdDecl)
!2724 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !2708, file: !2674, line: 124, baseType: !2725, size: 64, offset: 192)
!2725 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2726, size: 64)
!2726 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_tag", file: !2674, line: 102, size: 192, elements: !2727)
!2727 = !{!2728, !2729, !2730}
!2728 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2726, file: !2674, line: 103, baseType: !299, size: 128, align: 64)
!2729 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !2726, file: !2674, line: 104, baseType: !568, size: 32, offset: 128)
!2730 = !DIDerivedType(tag: DW_TAG_member, name: "removed", scope: !2726, file: !2674, line: 105, baseType: !771, size: 8, offset: 160)
!2731 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !2708, file: !2674, line: 125, baseType: !292, size: 64, offset: 256)
!2732 = !DIDerivedType(tag: DW_TAG_member, scope: !2705, file: !2674, line: 241, baseType: !2733, size: 320)
!2733 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2705, file: !2674, line: 241, size: 320, elements: !2734)
!2734 = !{!2735, !2736, !2737, !2738, !2739}
!2735 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !2733, file: !2674, line: 242, baseType: !312, size: 64)
!2736 = !DIDerivedType(tag: DW_TAG_member, name: "len_desc", scope: !2733, file: !2674, line: 243, baseType: !312, size: 64, offset: 64)
!2737 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2733, file: !2674, line: 244, baseType: !2722, size: 64, offset: 128)
!2738 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !2733, file: !2674, line: 245, baseType: !2725, size: 64, offset: 192)
!2739 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !2733, file: !2674, line: 246, baseType: !1038, size: 64, offset: 256)
!2740 = !DIDerivedType(tag: DW_TAG_member, scope: !2673, file: !2674, line: 254, baseType: !2741, size: 256, offset: 1344)
!2741 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2673, file: !2674, line: 254, size: 256, elements: !2742)
!2742 = !{!2743, !2749}
!2743 = !DIDerivedType(tag: DW_TAG_member, name: "payload", scope: !2741, file: !2674, line: 255, baseType: !2744, size: 256)
!2744 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "key_payload", file: !2674, line: 128, size: 256, elements: !2745)
!2745 = !{!2746, !2747}
!2746 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_data0", scope: !2744, file: !2674, line: 129, baseType: !591, size: 64)
!2747 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2744, file: !2674, line: 130, baseType: !2748, size: 256)
!2748 = !DICompositeType(tag: DW_TAG_array_type, baseType: !591, size: 256, elements: !2272)
!2749 = !DIDerivedType(tag: DW_TAG_member, scope: !2741, file: !2674, line: 256, baseType: !2750, size: 256)
!2750 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2741, file: !2674, line: 256, size: 256, elements: !2751)
!2751 = !{!2752, !2753}
!2752 = !DIDerivedType(tag: DW_TAG_member, name: "name_link", scope: !2750, file: !2674, line: 258, baseType: !284, size: 128)
!2753 = !DIDerivedType(tag: DW_TAG_member, name: "keys", scope: !2750, file: !2674, line: 259, baseType: !2754, size: 128, offset: 128)
!2754 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array", file: !2755, line: 22, size: 128, elements: !2756)
!2755 = !DIFile(filename: "./include/linux/assoc_array.h", directory: "/home/lizy2001/genbc/linux")
!2756 = !{!2757, !2760}
!2757 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !2754, file: !2755, line: 23, baseType: !2758, size: 64)
!2758 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2759, size: 64)
!2759 = !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array_ptr", file: !2755, line: 23, flags: DIFlagFwdDecl)
!2760 = !DIDerivedType(tag: DW_TAG_member, name: "nr_leaves_on_tree", scope: !2754, file: !2755, line: 24, baseType: !312, size: 64, offset: 64)
!2761 = !DIDerivedType(tag: DW_TAG_member, name: "restrict_link", scope: !2673, file: !2674, line: 274, baseType: !2762, size: 64, offset: 1600)
!2762 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2763, size: 64)
!2763 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_restriction", file: !2674, line: 170, size: 192, elements: !2764)
!2764 = !{!2765, !2774, !2775}
!2765 = !DIDerivedType(tag: DW_TAG_member, name: "check", scope: !2763, file: !2674, line: 171, baseType: !2766, size: 64)
!2766 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_restrict_link_func_t", file: !2674, line: 165, baseType: !2767)
!2767 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2768, size: 64)
!2768 = !DISubroutineType(types: !2769)
!2769 = !{!32, !2672, !2770, !2772, !2672}
!2770 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2771, size: 64)
!2771 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2723)
!2772 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2773, size: 64)
!2773 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2744)
!2774 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !2763, file: !2674, line: 172, baseType: !2672, size: 64, offset: 64)
!2775 = !DIDerivedType(tag: DW_TAG_member, name: "keytype", scope: !2763, file: !2674, line: 173, baseType: !2722, size: 64, offset: 128)
!2776 = !DIDerivedType(tag: DW_TAG_member, name: "process_keyring", scope: !2644, file: !2645, line: 138, baseType: !2672, size: 64, offset: 768)
!2777 = !DIDerivedType(tag: DW_TAG_member, name: "thread_keyring", scope: !2644, file: !2645, line: 139, baseType: !2672, size: 64, offset: 832)
!2778 = !DIDerivedType(tag: DW_TAG_member, name: "request_key_auth", scope: !2644, file: !2645, line: 140, baseType: !2672, size: 64, offset: 896)
!2779 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !2644, file: !2645, line: 145, baseType: !1953, size: 64, offset: 960)
!2780 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !2644, file: !2645, line: 146, baseType: !2781, size: 64, offset: 1024)
!2781 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2782, size: 64)
!2782 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "user_namespace", file: !2783, line: 56, size: 4160, elements: !2784)
!2783 = !DIFile(filename: "./include/linux/user_namespace.h", directory: "/home/lizy2001/genbc/linux")
!2784 = !{!2785, !2807, !2808, !2809, !2810, !2811, !2812, !2813, !2814, !2824, !2825, !2826, !2827, !2828, !2840, !2921, !2922, !2934}
!2785 = !DIDerivedType(tag: DW_TAG_member, name: "uid_map", scope: !2782, file: !2783, line: 57, baseType: !2786, size: 576)
!2786 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uid_gid_map", file: !2783, line: 23, size: 576, elements: !2787)
!2787 = !{!2788, !2789}
!2788 = !DIDerivedType(tag: DW_TAG_member, name: "nr_extents", scope: !2786, file: !2783, line: 24, baseType: !987, size: 32)
!2789 = !DIDerivedType(tag: DW_TAG_member, scope: !2786, file: !2783, line: 25, baseType: !2790, size: 512, offset: 64)
!2790 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2786, file: !2783, line: 25, size: 512, elements: !2791)
!2791 = !{!2792, !2801}
!2792 = !DIDerivedType(tag: DW_TAG_member, name: "extent", scope: !2790, file: !2783, line: 26, baseType: !2793, size: 480)
!2793 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2794, size: 480, elements: !2799)
!2794 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uid_gid_extent", file: !2783, line: 17, size: 96, elements: !2795)
!2795 = !{!2796, !2797, !2798}
!2796 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !2794, file: !2783, line: 18, baseType: !987, size: 32)
!2797 = !DIDerivedType(tag: DW_TAG_member, name: "lower_first", scope: !2794, file: !2783, line: 19, baseType: !987, size: 32, offset: 32)
!2798 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2794, file: !2783, line: 20, baseType: !987, size: 32, offset: 64)
!2799 = !{!2800}
!2800 = !DISubrange(count: 5)
!2801 = !DIDerivedType(tag: DW_TAG_member, scope: !2790, file: !2783, line: 27, baseType: !2802, size: 128)
!2802 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2790, file: !2783, line: 27, size: 128, elements: !2803)
!2803 = !{!2804, !2806}
!2804 = !DIDerivedType(tag: DW_TAG_member, name: "forward", scope: !2802, file: !2783, line: 28, baseType: !2805, size: 64)
!2805 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2794, size: 64)
!2806 = !DIDerivedType(tag: DW_TAG_member, name: "reverse", scope: !2802, file: !2783, line: 29, baseType: !2805, size: 64, offset: 64)
!2807 = !DIDerivedType(tag: DW_TAG_member, name: "gid_map", scope: !2782, file: !2783, line: 58, baseType: !2786, size: 576, offset: 576)
!2808 = !DIDerivedType(tag: DW_TAG_member, name: "projid_map", scope: !2782, file: !2783, line: 59, baseType: !2786, size: 576, offset: 1152)
!2809 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2782, file: !2783, line: 60, baseType: !383, size: 32, offset: 1728)
!2810 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !2782, file: !2783, line: 61, baseType: !2781, size: 64, offset: 1792)
!2811 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !2782, file: !2783, line: 62, baseType: !32, size: 32, offset: 1856)
!2812 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !2782, file: !2783, line: 63, baseType: !1382, size: 32, offset: 1888)
!2813 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !2782, file: !2783, line: 64, baseType: !1390, size: 32, offset: 1920)
!2814 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !2782, file: !2783, line: 65, baseType: !2815, size: 192, offset: 1984)
!2815 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ns_common", file: !2816, line: 7, size: 192, elements: !2817)
!2816 = !DIFile(filename: "./include/linux/ns_common.h", directory: "/home/lizy2001/genbc/linux")
!2817 = !{!2818, !2819, !2823}
!2818 = !DIDerivedType(tag: DW_TAG_member, name: "stashed", scope: !2815, file: !2816, line: 8, baseType: !371, size: 64)
!2819 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !2815, file: !2816, line: 9, baseType: !2820, size: 64, offset: 64)
!2820 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2821, size: 64)
!2821 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2822)
!2822 = !DICompositeType(tag: DW_TAG_structure_type, name: "proc_ns_operations", file: !2816, line: 5, flags: DIFlagFwdDecl)
!2823 = !DIDerivedType(tag: DW_TAG_member, name: "inum", scope: !2815, file: !2816, line: 10, baseType: !7, size: 32, offset: 128)
!2824 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2782, file: !2783, line: 66, baseType: !312, size: 64, offset: 2176)
!2825 = !DIDerivedType(tag: DW_TAG_member, name: "keyring_name_list", scope: !2782, file: !2783, line: 74, baseType: !284, size: 128, offset: 2240)
!2826 = !DIDerivedType(tag: DW_TAG_member, name: "user_keyring_register", scope: !2782, file: !2783, line: 75, baseType: !2672, size: 64, offset: 2368)
!2827 = !DIDerivedType(tag: DW_TAG_member, name: "keyring_sem", scope: !2782, file: !2783, line: 76, baseType: !1755, size: 256, offset: 2432)
!2828 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !2782, file: !2783, line: 83, baseType: !2829, size: 256, offset: 2688)
!2829 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "work_struct", file: !2830, line: 102, size: 256, elements: !2831)
!2830 = !DIFile(filename: "./include/linux/workqueue.h", directory: "/home/lizy2001/genbc/linux")
!2831 = !{!2832, !2833, !2834}
!2832 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2829, file: !2830, line: 103, baseType: !371, size: 64)
!2833 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !2829, file: !2830, line: 104, baseType: !284, size: 128, offset: 64)
!2834 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !2829, file: !2830, line: 105, baseType: !2835, size: 64, offset: 192)
!2835 = !DIDerivedType(tag: DW_TAG_typedef, name: "work_func_t", file: !2830, line: 21, baseType: !2836)
!2836 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2837, size: 64)
!2837 = !DISubroutineType(types: !2838)
!2838 = !{null, !2839}
!2839 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2829, size: 64)
!2840 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !2782, file: !2783, line: 85, baseType: !2841, size: 768, offset: 2944)
!2841 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_table_set", file: !2842, line: 156, size: 768, elements: !2843)
!2842 = !DIFile(filename: "./include/linux/sysctl.h", directory: "/home/lizy2001/genbc/linux")
!2843 = !{!2844, !2849}
!2844 = !DIDerivedType(tag: DW_TAG_member, name: "is_seen", scope: !2841, file: !2842, line: 157, baseType: !2845, size: 64)
!2845 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2846, size: 64)
!2846 = !DISubroutineType(types: !2847)
!2847 = !{!32, !2848}
!2848 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2841, size: 64)
!2849 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !2841, file: !2842, line: 158, baseType: !2850, size: 704, offset: 64)
!2850 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_dir", file: !2842, line: 150, size: 704, elements: !2851)
!2851 = !{!2852, !2920}
!2852 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !2850, file: !2842, line: 152, baseType: !2853, size: 640)
!2853 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_table_header", file: !2842, line: 131, size: 640, elements: !2854)
!2854 = !{!2855, !2888, !2889, !2890, !2910, !2911, !2913, !2919}
!2855 = !DIDerivedType(tag: DW_TAG_member, scope: !2853, file: !2842, line: 132, baseType: !2856, size: 192)
!2856 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2853, file: !2842, line: 132, size: 192, elements: !2857)
!2857 = !{!2858, !2887}
!2858 = !DIDerivedType(tag: DW_TAG_member, scope: !2856, file: !2842, line: 133, baseType: !2859, size: 192)
!2859 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2856, file: !2842, line: 133, size: 192, elements: !2860)
!2860 = !{!2861, !2884, !2885, !2886}
!2861 = !DIDerivedType(tag: DW_TAG_member, name: "ctl_table", scope: !2859, file: !2842, line: 134, baseType: !2862, size: 64)
!2862 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2863, size: 64)
!2863 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_table", file: !2842, line: 112, size: 512, elements: !2864)
!2864 = !{!2865, !2866, !2867, !2868, !2869, !2870, !2876, !2882, !2883}
!2865 = !DIDerivedType(tag: DW_TAG_member, name: "procname", scope: !2863, file: !2842, line: 113, baseType: !292, size: 64)
!2866 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2863, file: !2842, line: 114, baseType: !591, size: 64, offset: 64)
!2867 = !DIDerivedType(tag: DW_TAG_member, name: "maxlen", scope: !2863, file: !2842, line: 115, baseType: !32, size: 32, offset: 128)
!2868 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2863, file: !2842, line: 116, baseType: !1379, size: 16, offset: 160)
!2869 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !2863, file: !2842, line: 117, baseType: !2862, size: 64, offset: 192)
!2870 = !DIDerivedType(tag: DW_TAG_member, name: "proc_handler", scope: !2863, file: !2842, line: 118, baseType: !2871, size: 64, offset: 256)
!2871 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2872, size: 64)
!2872 = !DIDerivedType(tag: DW_TAG_typedef, name: "proc_handler", file: !2842, line: 47, baseType: !2873)
!2873 = !DISubroutineType(types: !2874)
!2874 = !{!32, !2862, !32, !591, !2875, !1694}
!2875 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1039, size: 64)
!2876 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !2863, file: !2842, line: 119, baseType: !2877, size: 64, offset: 320)
!2877 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2878, size: 64)
!2878 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_table_poll", file: !2842, line: 94, size: 192, elements: !2879)
!2879 = !{!2880, !2881}
!2880 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !2878, file: !2842, line: 95, baseType: !383, size: 32)
!2881 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !2878, file: !2842, line: 96, baseType: !1889, size: 128, offset: 64)
!2882 = !DIDerivedType(tag: DW_TAG_member, name: "extra1", scope: !2863, file: !2842, line: 120, baseType: !591, size: 64, offset: 384)
!2883 = !DIDerivedType(tag: DW_TAG_member, name: "extra2", scope: !2863, file: !2842, line: 121, baseType: !591, size: 64, offset: 448)
!2884 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !2859, file: !2842, line: 135, baseType: !32, size: 32, offset: 64)
!2885 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2859, file: !2842, line: 136, baseType: !32, size: 32, offset: 96)
!2886 = !DIDerivedType(tag: DW_TAG_member, name: "nreg", scope: !2859, file: !2842, line: 137, baseType: !32, size: 32, offset: 128)
!2887 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2856, file: !2842, line: 139, baseType: !299, size: 128, align: 64)
!2888 = !DIDerivedType(tag: DW_TAG_member, name: "unregistering", scope: !2853, file: !2842, line: 141, baseType: !2596, size: 64, offset: 192)
!2889 = !DIDerivedType(tag: DW_TAG_member, name: "ctl_table_arg", scope: !2853, file: !2842, line: 142, baseType: !2862, size: 64, offset: 256)
!2890 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !2853, file: !2842, line: 143, baseType: !2891, size: 64, offset: 320)
!2891 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2892, size: 64)
!2892 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_table_root", file: !2842, line: 161, size: 960, elements: !2893)
!2893 = !{!2894, !2895, !2899, !2906}
!2894 = !DIDerivedType(tag: DW_TAG_member, name: "default_set", scope: !2892, file: !2842, line: 162, baseType: !2841, size: 768)
!2895 = !DIDerivedType(tag: DW_TAG_member, name: "lookup", scope: !2892, file: !2842, line: 163, baseType: !2896, size: 64, offset: 768)
!2896 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2897, size: 64)
!2897 = !DISubroutineType(types: !2898)
!2898 = !{!2848, !2891}
!2899 = !DIDerivedType(tag: DW_TAG_member, name: "set_ownership", scope: !2892, file: !2842, line: 164, baseType: !2900, size: 64, offset: 832)
!2900 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2901, size: 64)
!2901 = !DISubroutineType(types: !2902)
!2902 = !{null, !2903, !2862, !2904, !2905}
!2903 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2853, size: 64)
!2904 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1382, size: 64)
!2905 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1390, size: 64)
!2906 = !DIDerivedType(tag: DW_TAG_member, name: "permissions", scope: !2892, file: !2842, line: 167, baseType: !2907, size: 64, offset: 896)
!2907 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2908, size: 64)
!2908 = !DISubroutineType(types: !2909)
!2909 = !{!32, !2903, !2862}
!2910 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !2853, file: !2842, line: 144, baseType: !2848, size: 64, offset: 384)
!2911 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !2853, file: !2842, line: 145, baseType: !2912, size: 64, offset: 448)
!2912 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2850, size: 64)
!2913 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2853, file: !2842, line: 146, baseType: !2914, size: 64, offset: 512)
!2914 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2915, size: 64)
!2915 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_node", file: !2842, line: 124, size: 256, elements: !2916)
!2916 = !{!2917, !2918}
!2917 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2915, file: !2842, line: 125, baseType: !433, size: 192, align: 64)
!2918 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !2915, file: !2842, line: 126, baseType: !2903, size: 64, offset: 192)
!2919 = !DIDerivedType(tag: DW_TAG_member, name: "inodes", scope: !2853, file: !2842, line: 147, baseType: !1581, size: 64, offset: 576)
!2920 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !2850, file: !2842, line: 153, baseType: !1750, size: 64, offset: 640)
!2921 = !DIDerivedType(tag: DW_TAG_member, name: "sysctls", scope: !2782, file: !2783, line: 86, baseType: !2903, size: 64, offset: 3712)
!2922 = !DIDerivedType(tag: DW_TAG_member, name: "ucounts", scope: !2782, file: !2783, line: 88, baseType: !2923, size: 64, offset: 3776)
!2923 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2924, size: 64)
!2924 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ucounts", file: !2783, line: 92, size: 576, elements: !2925)
!2925 = !{!2926, !2927, !2928, !2929, !2930}
!2926 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2924, file: !2783, line: 93, baseType: !276, size: 128)
!2927 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !2924, file: !2783, line: 94, baseType: !2781, size: 64, offset: 128)
!2928 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2924, file: !2783, line: 95, baseType: !1382, size: 32, offset: 192)
!2929 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2924, file: !2783, line: 96, baseType: !32, size: 32, offset: 224)
!2930 = !DIDerivedType(tag: DW_TAG_member, name: "ucount", scope: !2924, file: !2783, line: 97, baseType: !2931, size: 320, offset: 256)
!2931 = !DICompositeType(tag: DW_TAG_array_type, baseType: !383, size: 320, elements: !2932)
!2932 = !{!2933}
!2933 = !DISubrange(count: 10)
!2934 = !DIDerivedType(tag: DW_TAG_member, name: "ucount_max", scope: !2782, file: !2783, line: 89, baseType: !2935, size: 320, offset: 3840)
!2935 = !DICompositeType(tag: DW_TAG_array_type, baseType: !32, size: 320, elements: !2932)
!2936 = !DIDerivedType(tag: DW_TAG_member, name: "group_info", scope: !2644, file: !2645, line: 147, baseType: !2937, size: 64, offset: 1088)
!2937 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2938, size: 64)
!2938 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "group_info", file: !2645, line: 25, size: 64, elements: !2939)
!2939 = !{!2940, !2941, !2942}
!2940 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !2938, file: !2645, line: 26, baseType: !383, size: 32)
!2941 = !DIDerivedType(tag: DW_TAG_member, name: "ngroups", scope: !2938, file: !2645, line: 27, baseType: !32, size: 32, offset: 32)
!2942 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !2938, file: !2645, line: 28, baseType: !2943, offset: 64)
!2943 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1390, elements: !483)
!2944 = !DIDerivedType(tag: DW_TAG_member, scope: !2644, file: !2645, line: 149, baseType: !2945, size: 128, offset: 1152)
!2945 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2644, file: !2645, line: 149, size: 128, elements: !2946)
!2946 = !{!2947, !2948}
!2947 = !DIDerivedType(tag: DW_TAG_member, name: "non_rcu", scope: !2945, file: !2645, line: 150, baseType: !32, size: 32)
!2948 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2945, file: !2645, line: 151, baseType: !299, size: 128, align: 64)
!2949 = !DIDerivedType(tag: DW_TAG_member, name: "real_cred", scope: !2327, file: !2328, line: 926, baseType: !2642, size: 64, offset: 8576)
!2950 = !DIDerivedType(tag: DW_TAG_member, name: "cred", scope: !2327, file: !2328, line: 929, baseType: !2642, size: 64, offset: 8640)
!2951 = !DIDerivedType(tag: DW_TAG_member, name: "cached_requested_key", scope: !2327, file: !2328, line: 933, baseType: !2672, size: 64, offset: 8704)
!2952 = !DIDerivedType(tag: DW_TAG_member, name: "comm", scope: !2327, file: !2328, line: 943, baseType: !267, size: 128, offset: 8768)
!2953 = !DIDerivedType(tag: DW_TAG_member, name: "nameidata", scope: !2327, file: !2328, line: 945, baseType: !2954, size: 64, offset: 8896)
!2954 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2955, size: 64)
!2955 = !DICompositeType(tag: DW_TAG_structure_type, name: "nameidata", file: !2328, line: 49, flags: DIFlagFwdDecl)
!2956 = !DIDerivedType(tag: DW_TAG_member, name: "fs", scope: !2327, file: !2328, line: 956, baseType: !2957, size: 64, offset: 8960)
!2957 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2958, size: 64)
!2958 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_struct", file: !2328, line: 45, flags: DIFlagFwdDecl)
!2959 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !2327, file: !2328, line: 959, baseType: !2960, size: 64, offset: 9024)
!2960 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2961, size: 64)
!2961 = !DICompositeType(tag: DW_TAG_structure_type, name: "files_struct", file: !2328, line: 959, flags: DIFlagFwdDecl)
!2962 = !DIDerivedType(tag: DW_TAG_member, name: "io_uring", scope: !2327, file: !2328, line: 962, baseType: !2963, size: 64, offset: 9088)
!2963 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2964, size: 64)
!2964 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_uring_task", file: !2328, line: 66, flags: DIFlagFwdDecl)
!2965 = !DIDerivedType(tag: DW_TAG_member, name: "nsproxy", scope: !2327, file: !2328, line: 966, baseType: !2966, size: 64, offset: 9152)
!2966 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2967, size: 64)
!2967 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nsproxy", file: !2968, line: 31, size: 576, elements: !2969)
!2968 = !DIFile(filename: "./include/linux/nsproxy.h", directory: "/home/lizy2001/genbc/linux")
!2969 = !{!2970, !2971, !2974, !2977, !2980, !2981, !3669, !3672, !3673}
!2970 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2967, file: !2968, line: 32, baseType: !383, size: 32)
!2971 = !DIDerivedType(tag: DW_TAG_member, name: "uts_ns", scope: !2967, file: !2968, line: 33, baseType: !2972, size: 64, offset: 64)
!2972 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2973, size: 64)
!2973 = !DICompositeType(tag: DW_TAG_structure_type, name: "uts_namespace", file: !2968, line: 9, flags: DIFlagFwdDecl)
!2974 = !DIDerivedType(tag: DW_TAG_member, name: "ipc_ns", scope: !2967, file: !2968, line: 34, baseType: !2975, size: 64, offset: 128)
!2975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2976, size: 64)
!2976 = !DICompositeType(tag: DW_TAG_structure_type, name: "ipc_namespace", file: !2968, line: 10, flags: DIFlagFwdDecl)
!2977 = !DIDerivedType(tag: DW_TAG_member, name: "mnt_ns", scope: !2967, file: !2968, line: 35, baseType: !2978, size: 64, offset: 192)
!2978 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2979, size: 64)
!2979 = !DICompositeType(tag: DW_TAG_structure_type, name: "mnt_namespace", file: !2968, line: 8, flags: DIFlagFwdDecl)
!2980 = !DIDerivedType(tag: DW_TAG_member, name: "pid_ns_for_children", scope: !2967, file: !2968, line: 36, baseType: !2589, size: 64, offset: 256)
!2981 = !DIDerivedType(tag: DW_TAG_member, name: "net_ns", scope: !2967, file: !2968, line: 37, baseType: !2982, size: 64, offset: 320)
!2982 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2983, size: 64)
!2983 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "net", file: !2984, line: 56, size: 16896, elements: !2985)
!2984 = !DIFile(filename: "./include/net/net_namespace.h", directory: "/home/lizy2001/genbc/linux")
!2985 = !{!2986, !2987, !2988, !2989, !2990, !2991, !2992, !2993, !2994, !2995, !2996, !2997, !2998, !2999, !3000, !3007, !3008, !3009, !3013, !3014, !3015, !3016, !3017, !3020, !3022, !3023, !3038, !3039, !3040, !3041, !3051, !3120, !3126, !3132, !3145, !3454, !3608, !3615, !3618, !3641, !3642, !3668}
!2986 = !DIDerivedType(tag: DW_TAG_member, name: "passive", scope: !2983, file: !2984, line: 60, baseType: !568, size: 32)
!2987 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2983, file: !2984, line: 63, baseType: !568, size: 32, offset: 32)
!2988 = !DIDerivedType(tag: DW_TAG_member, name: "rules_mod_lock", scope: !2983, file: !2984, line: 66, baseType: !1670, offset: 64)
!2989 = !DIDerivedType(tag: DW_TAG_member, name: "dev_unreg_count", scope: !2983, file: !2984, line: 68, baseType: !7, size: 32, offset: 64)
!2990 = !DIDerivedType(tag: DW_TAG_member, name: "dev_base_seq", scope: !2983, file: !2984, line: 70, baseType: !7, size: 32, offset: 96)
!2991 = !DIDerivedType(tag: DW_TAG_member, name: "ifindex", scope: !2983, file: !2984, line: 71, baseType: !32, size: 32, offset: 128)
!2992 = !DIDerivedType(tag: DW_TAG_member, name: "nsid_lock", scope: !2983, file: !2984, line: 73, baseType: !1670, offset: 160)
!2993 = !DIDerivedType(tag: DW_TAG_member, name: "fnhe_genid", scope: !2983, file: !2984, line: 74, baseType: !383, size: 32, offset: 160)
!2994 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2983, file: !2984, line: 76, baseType: !284, size: 128, offset: 192)
!2995 = !DIDerivedType(tag: DW_TAG_member, name: "exit_list", scope: !2983, file: !2984, line: 77, baseType: !284, size: 128, offset: 320)
!2996 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup_list", scope: !2983, file: !2984, line: 83, baseType: !1323, size: 64, offset: 448)
!2997 = !DIDerivedType(tag: DW_TAG_member, name: "key_domain", scope: !2983, file: !2984, line: 86, baseType: !2725, size: 64, offset: 512)
!2998 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !2983, file: !2984, line: 88, baseType: !2781, size: 64, offset: 576)
!2999 = !DIDerivedType(tag: DW_TAG_member, name: "ucounts", scope: !2983, file: !2984, line: 89, baseType: !2923, size: 64, offset: 640)
!3000 = !DIDerivedType(tag: DW_TAG_member, name: "netns_ids", scope: !2983, file: !2984, line: 90, baseType: !3001, size: 192, offset: 704)
!3001 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "idr", file: !3002, line: 19, size: 192, elements: !3003)
!3002 = !DIFile(filename: "./include/linux/idr.h", directory: "/home/lizy2001/genbc/linux")
!3003 = !{!3004, !3005, !3006}
!3004 = !DIDerivedType(tag: DW_TAG_member, name: "idr_rt", scope: !3001, file: !3002, line: 20, baseType: !1737, size: 128)
!3005 = !DIDerivedType(tag: DW_TAG_member, name: "idr_base", scope: !3001, file: !3002, line: 21, baseType: !7, size: 32, offset: 128)
!3006 = !DIDerivedType(tag: DW_TAG_member, name: "idr_next", scope: !3001, file: !3002, line: 22, baseType: !7, size: 32, offset: 160)
!3007 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !2983, file: !2984, line: 92, baseType: !2815, size: 192, offset: 896)
!3008 = !DIDerivedType(tag: DW_TAG_member, name: "dev_base_head", scope: !2983, file: !2984, line: 94, baseType: !284, size: 128, offset: 1088)
!3009 = !DIDerivedType(tag: DW_TAG_member, name: "proc_net", scope: !2983, file: !2984, line: 95, baseType: !3010, size: 64, offset: 1216)
!3010 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3011, size: 64)
!3011 = !DICompositeType(tag: DW_TAG_structure_type, name: "proc_dir_entry", file: !3012, line: 17, flags: DIFlagFwdDecl)
!3012 = !DIFile(filename: "./include/net/netns/mib.h", directory: "/home/lizy2001/genbc/linux")
!3013 = !DIDerivedType(tag: DW_TAG_member, name: "proc_net_stat", scope: !2983, file: !2984, line: 96, baseType: !3010, size: 64, offset: 1280)
!3014 = !DIDerivedType(tag: DW_TAG_member, name: "sysctls", scope: !2983, file: !2984, line: 99, baseType: !2841, size: 768, offset: 1344)
!3015 = !DIDerivedType(tag: DW_TAG_member, name: "rtnl", scope: !2983, file: !2984, line: 102, baseType: !445, size: 64, offset: 2112)
!3016 = !DIDerivedType(tag: DW_TAG_member, name: "genl_sock", scope: !2983, file: !2984, line: 103, baseType: !445, size: 64, offset: 2176)
!3017 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_sock", scope: !2983, file: !2984, line: 105, baseType: !3018, size: 64, offset: 2240)
!3018 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3019, size: 64)
!3019 = !DICompositeType(tag: DW_TAG_structure_type, name: "uevent_sock", file: !2984, line: 48, flags: DIFlagFwdDecl)
!3020 = !DIDerivedType(tag: DW_TAG_member, name: "dev_name_head", scope: !2983, file: !2984, line: 107, baseType: !3021, size: 64, offset: 2304)
!3021 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1581, size: 64)
!3022 = !DIDerivedType(tag: DW_TAG_member, name: "dev_index_head", scope: !2983, file: !2984, line: 108, baseType: !3021, size: 64, offset: 2368)
!3023 = !DIDerivedType(tag: DW_TAG_member, name: "netdev_chain", scope: !2983, file: !2984, line: 109, baseType: !3024, size: 64, offset: 2432)
!3024 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "raw_notifier_head", file: !3025, line: 70, size: 64, elements: !3026)
!3025 = !DIFile(filename: "./include/linux/notifier.h", directory: "/home/lizy2001/genbc/linux")
!3026 = !{!3027}
!3027 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3024, file: !3025, line: 71, baseType: !3028, size: 64)
!3028 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3029, size: 64)
!3029 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "notifier_block", file: !3025, line: 54, size: 192, elements: !3030)
!3030 = !{!3031, !3036, !3037}
!3031 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_call", scope: !3029, file: !3025, line: 55, baseType: !3032, size: 64)
!3032 = !DIDerivedType(tag: DW_TAG_typedef, name: "notifier_fn_t", file: !3025, line: 51, baseType: !3033)
!3033 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3034, size: 64)
!3034 = !DISubroutineType(types: !3035)
!3035 = !{!32, !3028, !312, !591}
!3036 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3029, file: !3025, line: 56, baseType: !3028, size: 64, offset: 64)
!3037 = !DIDerivedType(tag: DW_TAG_member, name: "priority", scope: !3029, file: !3025, line: 57, baseType: !32, size: 32, offset: 128)
!3038 = !DIDerivedType(tag: DW_TAG_member, name: "hash_mix", scope: !2983, file: !2984, line: 114, baseType: !987, size: 32, offset: 2496)
!3039 = !DIDerivedType(tag: DW_TAG_member, name: "loopback_dev", scope: !2983, file: !2984, line: 116, baseType: !290, size: 64, offset: 2560)
!3040 = !DIDerivedType(tag: DW_TAG_member, name: "rules_ops", scope: !2983, file: !2984, line: 119, baseType: !284, size: 128, offset: 2624)
!3041 = !DIDerivedType(tag: DW_TAG_member, name: "core", scope: !2983, file: !2984, line: 121, baseType: !3042, size: 256, offset: 2752)
!3042 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_core", file: !3043, line: 8, size: 256, elements: !3044)
!3043 = !DIFile(filename: "./include/net/netns/core.h", directory: "/home/lizy2001/genbc/linux")
!3044 = !{!3045, !3046, !3047, !3048}
!3045 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_hdr", scope: !3042, file: !3043, line: 10, baseType: !2903, size: 64)
!3046 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_somaxconn", scope: !3042, file: !3043, line: 12, baseType: !32, size: 32, offset: 64)
!3047 = !DIDerivedType(tag: DW_TAG_member, name: "sock_inuse", scope: !3042, file: !3043, line: 15, baseType: !1001, size: 64, offset: 128)
!3048 = !DIDerivedType(tag: DW_TAG_member, name: "prot_inuse", scope: !3042, file: !3043, line: 16, baseType: !3049, size: 64, offset: 192)
!3049 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3050, size: 64)
!3050 = !DICompositeType(tag: DW_TAG_structure_type, name: "prot_inuse", file: !3043, line: 6, flags: DIFlagFwdDecl)
!3051 = !DIDerivedType(tag: DW_TAG_member, name: "mib", scope: !2983, file: !2984, line: 122, baseType: !3052, size: 832, offset: 3008)
!3052 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_mib", file: !3012, line: 7, size: 832, elements: !3053)
!3053 = !{!3054, !3061, !3072, !3080, !3088, !3089, !3097, !3105, !3106, !3107, !3108, !3109, !3115}
!3054 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_statistics", scope: !3052, file: !3012, line: 8, baseType: !3055, size: 64)
!3055 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3056, size: 64)
!3056 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tcp_mib", file: !3057, line: 92, size: 1024, elements: !3058)
!3057 = !DIFile(filename: "./include/net/snmp.h", directory: "/home/lizy2001/genbc/linux")
!3058 = !{!3059}
!3059 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !3056, file: !3057, line: 93, baseType: !3060, size: 1024)
!3060 = !DICompositeType(tag: DW_TAG_array_type, baseType: !312, size: 1024, elements: !269)
!3061 = !DIDerivedType(tag: DW_TAG_member, name: "ip_statistics", scope: !3052, file: !3012, line: 9, baseType: !3062, size: 64, offset: 64)
!3062 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3063, size: 64)
!3063 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ipstats_mib", file: !3057, line: 51, size: 2368, elements: !3064)
!3064 = !{!3065, !3069}
!3065 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !3063, file: !3057, line: 53, baseType: !3066, size: 2368)
!3066 = !DICompositeType(tag: DW_TAG_array_type, baseType: !331, size: 2368, elements: !3067)
!3067 = !{!3068}
!3068 = !DISubrange(count: 37)
!3069 = !DIDerivedType(tag: DW_TAG_member, name: "syncp", scope: !3063, file: !3057, line: 54, baseType: !3070, offset: 2368)
!3070 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "u64_stats_sync", file: !3071, line: 68, elements: !1587)
!3071 = !DIFile(filename: "./include/linux/u64_stats_sync.h", directory: "/home/lizy2001/genbc/linux")
!3072 = !DIDerivedType(tag: DW_TAG_member, name: "net_statistics", scope: !3052, file: !3012, line: 10, baseType: !3073, size: 64, offset: 128)
!3073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3074, size: 64)
!3074 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "linux_mib", file: !3057, line: 104, size: 7936, elements: !3075)
!3075 = !{!3076}
!3076 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !3074, file: !3057, line: 105, baseType: !3077, size: 7936)
!3077 = !DICompositeType(tag: DW_TAG_array_type, baseType: !312, size: 7936, elements: !3078)
!3078 = !{!3079}
!3079 = !DISubrange(count: 124)
!3080 = !DIDerivedType(tag: DW_TAG_member, name: "udp_statistics", scope: !3052, file: !3012, line: 11, baseType: !3081, size: 64, offset: 192)
!3081 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3082, size: 64)
!3082 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "udp_mib", file: !3057, line: 98, size: 576, elements: !3083)
!3083 = !{!3084}
!3084 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !3082, file: !3057, line: 99, baseType: !3085, size: 576)
!3085 = !DICompositeType(tag: DW_TAG_array_type, baseType: !312, size: 576, elements: !3086)
!3086 = !{!3087}
!3087 = !DISubrange(count: 9)
!3088 = !DIDerivedType(tag: DW_TAG_member, name: "udplite_statistics", scope: !3052, file: !3012, line: 12, baseType: !3081, size: 64, offset: 256)
!3089 = !DIDerivedType(tag: DW_TAG_member, name: "icmp_statistics", scope: !3052, file: !3012, line: 13, baseType: !3090, size: 64, offset: 320)
!3090 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3091, size: 64)
!3091 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "icmp_mib", file: !3057, line: 59, size: 1792, elements: !3092)
!3092 = !{!3093}
!3093 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !3091, file: !3057, line: 60, baseType: !3094, size: 1792)
!3094 = !DICompositeType(tag: DW_TAG_array_type, baseType: !312, size: 1792, elements: !3095)
!3095 = !{!3096}
!3096 = !DISubrange(count: 28)
!3097 = !DIDerivedType(tag: DW_TAG_member, name: "icmpmsg_statistics", scope: !3052, file: !3012, line: 14, baseType: !3098, size: 64, offset: 384)
!3098 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3099, size: 64)
!3099 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "icmpmsg_mib", file: !3057, line: 64, size: 32768, elements: !3100)
!3100 = !{!3101}
!3101 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !3099, file: !3057, line: 65, baseType: !3102, size: 32768)
!3102 = !DICompositeType(tag: DW_TAG_array_type, baseType: !371, size: 32768, elements: !3103)
!3103 = !{!3104}
!3104 = !DISubrange(count: 512)
!3105 = !DIDerivedType(tag: DW_TAG_member, name: "proc_net_devsnmp6", scope: !3052, file: !3012, line: 17, baseType: !3010, size: 64, offset: 448)
!3106 = !DIDerivedType(tag: DW_TAG_member, name: "udp_stats_in6", scope: !3052, file: !3012, line: 18, baseType: !3081, size: 64, offset: 512)
!3107 = !DIDerivedType(tag: DW_TAG_member, name: "udplite_stats_in6", scope: !3052, file: !3012, line: 19, baseType: !3081, size: 64, offset: 576)
!3108 = !DIDerivedType(tag: DW_TAG_member, name: "ipv6_statistics", scope: !3052, file: !3012, line: 20, baseType: !3062, size: 64, offset: 640)
!3109 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6_statistics", scope: !3052, file: !3012, line: 21, baseType: !3110, size: 64, offset: 704)
!3110 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3111, size: 64)
!3111 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "icmpv6_mib", file: !3057, line: 71, size: 384, elements: !3112)
!3112 = !{!3113}
!3113 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !3111, file: !3057, line: 72, baseType: !3114, size: 384)
!3114 = !DICompositeType(tag: DW_TAG_array_type, baseType: !312, size: 384, elements: !999)
!3115 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6msg_statistics", scope: !3052, file: !3012, line: 22, baseType: !3116, size: 64, offset: 768)
!3116 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3117, size: 64)
!3117 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "icmpv6msg_mib", file: !3057, line: 81, size: 32768, elements: !3118)
!3118 = !{!3119}
!3119 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !3117, file: !3057, line: 82, baseType: !3102, size: 32768)
!3120 = !DIDerivedType(tag: DW_TAG_member, name: "packet", scope: !2983, file: !2984, line: 123, baseType: !3121, size: 256, offset: 3840)
!3121 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_packet", file: !3122, line: 11, size: 256, elements: !3123)
!3122 = !DIFile(filename: "./include/net/netns/packet.h", directory: "/home/lizy2001/genbc/linux")
!3123 = !{!3124, !3125}
!3124 = !DIDerivedType(tag: DW_TAG_member, name: "sklist_lock", scope: !3121, file: !3122, line: 12, baseType: !1665, size: 192)
!3125 = !DIDerivedType(tag: DW_TAG_member, name: "sklist", scope: !3121, file: !3122, line: 13, baseType: !1581, size: 64, offset: 192)
!3126 = !DIDerivedType(tag: DW_TAG_member, name: "unx", scope: !2983, file: !2984, line: 124, baseType: !3127, size: 128, offset: 4096)
!3127 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_unix", file: !3128, line: 9, size: 128, elements: !3129)
!3128 = !DIFile(filename: "./include/net/netns/unix.h", directory: "/home/lizy2001/genbc/linux")
!3129 = !{!3130, !3131}
!3130 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_max_dgram_qlen", scope: !3127, file: !3128, line: 10, baseType: !32, size: 32)
!3131 = !DIDerivedType(tag: DW_TAG_member, name: "ctl", scope: !3127, file: !3128, line: 11, baseType: !2903, size: 64, offset: 64)
!3132 = !DIDerivedType(tag: DW_TAG_member, name: "nexthop", scope: !2983, file: !2984, line: 125, baseType: !3133, size: 512, offset: 4224)
!3133 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_nexthop", file: !3134, line: 11, size: 512, elements: !3135)
!3134 = !DIFile(filename: "./include/net/netns/nexthop.h", directory: "/home/lizy2001/genbc/linux")
!3135 = !{!3136, !3137, !3138, !3139, !3140}
!3136 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !3133, file: !3134, line: 12, baseType: !1750, size: 64)
!3137 = !DIDerivedType(tag: DW_TAG_member, name: "devhash", scope: !3133, file: !3134, line: 13, baseType: !3021, size: 64, offset: 64)
!3138 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !3133, file: !3134, line: 15, baseType: !7, size: 32, offset: 128)
!3139 = !DIDerivedType(tag: DW_TAG_member, name: "last_id_allocated", scope: !3133, file: !3134, line: 16, baseType: !987, size: 32, offset: 160)
!3140 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_chain", scope: !3133, file: !3134, line: 17, baseType: !3141, size: 320, offset: 192)
!3141 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blocking_notifier_head", file: !3025, line: 65, size: 320, elements: !3142)
!3142 = !{!3143, !3144}
!3143 = !DIDerivedType(tag: DW_TAG_member, name: "rwsem", scope: !3141, file: !3025, line: 66, baseType: !1755, size: 256)
!3144 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3141, file: !3025, line: 67, baseType: !3028, size: 64, offset: 256)
!3145 = !DIDerivedType(tag: DW_TAG_member, name: "ipv4", scope: !2983, file: !2984, line: 126, baseType: !3146, size: 5440, offset: 4736)
!3146 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_ipv4", file: !3147, line: 43, size: 5440, elements: !3148)
!3147 = !DIFile(filename: "./include/net/netns/ipv4.h", directory: "/home/lizy2001/genbc/linux")
!3148 = !{!3149, !3150, !3151, !3152, !3153, !3154, !3157, !3158, !3161, !3162, !3163, !3164, !3165, !3166, !3168, !3169, !3172, !3173, !3314, !3315, !3316, !3317, !3318, !3319, !3320, !3332, !3333, !3334, !3335, !3336, !3337, !3338, !3339, !3340, !3341, !3342, !3343, !3344, !3345, !3346, !3347, !3348, !3349, !3350, !3351, !3352, !3353, !3354, !3355, !3356, !3357, !3358, !3359, !3360, !3361, !3362, !3363, !3364, !3365, !3366, !3367, !3368, !3369, !3370, !3371, !3372, !3373, !3374, !3375, !3376, !3377, !3378, !3379, !3380, !3381, !3382, !3383, !3384, !3385, !3386, !3387, !3388, !3389, !3390, !3391, !3392, !3393, !3394, !3395, !3396, !3398, !3399, !3400, !3401, !3402, !3410, !3411, !3412, !3416, !3419, !3420, !3421, !3422, !3423, !3424, !3425, !3426, !3427, !3428, !3429, !3430, !3436, !3437, !3439, !3440, !3443, !3444, !3445, !3446, !3447}
!3149 = !DIDerivedType(tag: DW_TAG_member, name: "forw_hdr", scope: !3146, file: !3147, line: 45, baseType: !2903, size: 64)
!3150 = !DIDerivedType(tag: DW_TAG_member, name: "frags_hdr", scope: !3146, file: !3147, line: 46, baseType: !2903, size: 64, offset: 64)
!3151 = !DIDerivedType(tag: DW_TAG_member, name: "ipv4_hdr", scope: !3146, file: !3147, line: 47, baseType: !2903, size: 64, offset: 128)
!3152 = !DIDerivedType(tag: DW_TAG_member, name: "route_hdr", scope: !3146, file: !3147, line: 48, baseType: !2903, size: 64, offset: 192)
!3153 = !DIDerivedType(tag: DW_TAG_member, name: "xfrm4_hdr", scope: !3146, file: !3147, line: 49, baseType: !2903, size: 64, offset: 256)
!3154 = !DIDerivedType(tag: DW_TAG_member, name: "devconf_all", scope: !3146, file: !3147, line: 51, baseType: !3155, size: 64, offset: 320)
!3155 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3156, size: 64)
!3156 = !DICompositeType(tag: DW_TAG_structure_type, name: "ipv4_devconf", file: !3147, line: 16, flags: DIFlagFwdDecl)
!3157 = !DIDerivedType(tag: DW_TAG_member, name: "devconf_dflt", scope: !3146, file: !3147, line: 52, baseType: !3155, size: 64, offset: 384)
!3158 = !DIDerivedType(tag: DW_TAG_member, name: "ra_chain", scope: !3146, file: !3147, line: 53, baseType: !3159, size: 64, offset: 448)
!3159 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3160, size: 64)
!3160 = !DICompositeType(tag: DW_TAG_structure_type, name: "ip_ra_chain", file: !3147, line: 53, flags: DIFlagFwdDecl)
!3161 = !DIDerivedType(tag: DW_TAG_member, name: "ra_mutex", scope: !3146, file: !3147, line: 54, baseType: !1665, size: 192, offset: 512)
!3162 = !DIDerivedType(tag: DW_TAG_member, name: "fib_has_custom_local_routes", scope: !3146, file: !3147, line: 62, baseType: !771, size: 8, offset: 704)
!3163 = !DIDerivedType(tag: DW_TAG_member, name: "fib_table_hash", scope: !3146, file: !3147, line: 66, baseType: !3021, size: 64, offset: 768)
!3164 = !DIDerivedType(tag: DW_TAG_member, name: "fib_offload_disabled", scope: !3146, file: !3147, line: 67, baseType: !771, size: 8, offset: 832)
!3165 = !DIDerivedType(tag: DW_TAG_member, name: "fibnl", scope: !3146, file: !3147, line: 68, baseType: !445, size: 64, offset: 896)
!3166 = !DIDerivedType(tag: DW_TAG_member, name: "icmp_sk", scope: !3146, file: !3147, line: 70, baseType: !3167, size: 64, offset: 960)
!3167 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !445, size: 64)
!3168 = !DIDerivedType(tag: DW_TAG_member, name: "mc_autojoin_sk", scope: !3146, file: !3147, line: 71, baseType: !445, size: 64, offset: 1024)
!3169 = !DIDerivedType(tag: DW_TAG_member, name: "peers", scope: !3146, file: !3147, line: 73, baseType: !3170, size: 64, offset: 1088)
!3170 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3171, size: 64)
!3171 = !DICompositeType(tag: DW_TAG_structure_type, name: "inet_peer_base", file: !3147, line: 73, flags: DIFlagFwdDecl)
!3172 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_sk", scope: !3146, file: !3147, line: 74, baseType: !3167, size: 64, offset: 1152)
!3173 = !DIDerivedType(tag: DW_TAG_member, name: "fqdir", scope: !3146, file: !3147, line: 75, baseType: !3174, size: 64, offset: 1216)
!3174 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3175, size: 64)
!3175 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fqdir", file: !3176, line: 9, size: 1728, elements: !3177)
!3176 = !DIFile(filename: "./include/net/inet_frag.h", directory: "/home/lizy2001/genbc/linux")
!3177 = !{!3178, !3179, !3180, !3181, !3182, !3309, !3310, !3311, !3312, !3313}
!3178 = !DIDerivedType(tag: DW_TAG_member, name: "high_thresh", scope: !3175, file: !3176, line: 11, baseType: !998, size: 64)
!3179 = !DIDerivedType(tag: DW_TAG_member, name: "low_thresh", scope: !3175, file: !3176, line: 12, baseType: !998, size: 64, offset: 64)
!3180 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !3175, file: !3176, line: 13, baseType: !32, size: 32, offset: 128)
!3181 = !DIDerivedType(tag: DW_TAG_member, name: "max_dist", scope: !3175, file: !3176, line: 14, baseType: !32, size: 32, offset: 160)
!3182 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !3175, file: !3176, line: 15, baseType: !3183, size: 64, offset: 192)
!3183 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3184, size: 64)
!3184 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inet_frags", file: !3176, line: 98, size: 960, elements: !3185)
!3185 = !{!3186, !3187, !3259, !3263, !3264, !3265, !3266, !3307, !3308}
!3186 = !DIDerivedType(tag: DW_TAG_member, name: "qsize", scope: !3184, file: !3176, line: 99, baseType: !7, size: 32)
!3187 = !DIDerivedType(tag: DW_TAG_member, name: "constructor", scope: !3184, file: !3176, line: 101, baseType: !3188, size: 64, offset: 64)
!3188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3189, size: 64)
!3189 = !DISubroutineType(types: !3190)
!3190 = !{null, !3191, !3257}
!3191 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3192, size: 64)
!3192 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inet_frag_queue", file: !3176, line: 77, size: 1408, elements: !3193)
!3193 = !{!3194, !3200, !3233, !3245, !3246, !3247, !3248, !3249, !3250, !3251, !3252, !3253, !3254, !3255, !3256}
!3194 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3192, file: !3176, line: 78, baseType: !3195, size: 64)
!3195 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rhash_head", file: !3196, line: 17, size: 64, elements: !3197)
!3196 = !DIFile(filename: "./include/linux/rhashtable-types.h", directory: "/home/lizy2001/genbc/linux")
!3197 = !{!3198}
!3198 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3195, file: !3196, line: 18, baseType: !3199, size: 64)
!3199 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3195, size: 64)
!3200 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !3192, file: !3176, line: 82, baseType: !3201, size: 352, offset: 64)
!3201 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3192, file: !3176, line: 79, size: 352, elements: !3202)
!3202 = !{!3203, !3213}
!3203 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !3201, file: !3176, line: 80, baseType: !3204, size: 160)
!3204 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "frag_v4_compare_key", file: !3176, line: 41, size: 160, elements: !3205)
!3205 = !{!3206, !3208, !3209, !3210, !3211, !3212}
!3206 = !DIDerivedType(tag: DW_TAG_member, name: "saddr", scope: !3204, file: !3176, line: 42, baseType: !3207, size: 32)
!3207 = !DIDerivedType(tag: DW_TAG_typedef, name: "__be32", file: !525, line: 32, baseType: !493)
!3208 = !DIDerivedType(tag: DW_TAG_member, name: "daddr", scope: !3204, file: !3176, line: 43, baseType: !3207, size: 32, offset: 32)
!3209 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !3204, file: !3176, line: 44, baseType: !987, size: 32, offset: 64)
!3210 = !DIDerivedType(tag: DW_TAG_member, name: "vif", scope: !3204, file: !3176, line: 45, baseType: !987, size: 32, offset: 96)
!3211 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3204, file: !3176, line: 46, baseType: !535, size: 16, offset: 128)
!3212 = !DIDerivedType(tag: DW_TAG_member, name: "protocol", scope: !3204, file: !3176, line: 47, baseType: !581, size: 16, offset: 144)
!3213 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !3201, file: !3176, line: 81, baseType: !3214, size: 352)
!3214 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "frag_v6_compare_key", file: !3176, line: 50, size: 352, elements: !3215)
!3215 = !{!3216, !3229, !3230, !3231, !3232}
!3216 = !DIDerivedType(tag: DW_TAG_member, name: "saddr", scope: !3214, file: !3176, line: 51, baseType: !3217, size: 128)
!3217 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "in6_addr", file: !3218, line: 33, size: 128, elements: !3219)
!3218 = !DIFile(filename: "./include/uapi/linux/in6.h", directory: "/home/lizy2001/genbc/linux")
!3219 = !{!3220}
!3220 = !DIDerivedType(tag: DW_TAG_member, name: "in6_u", scope: !3217, file: !3218, line: 40, baseType: !3221, size: 128)
!3221 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3217, file: !3218, line: 34, size: 128, elements: !3222)
!3222 = !{!3223, !3225, !3227}
!3223 = !DIDerivedType(tag: DW_TAG_member, name: "u6_addr8", scope: !3221, file: !3218, line: 35, baseType: !3224, size: 128)
!3224 = !DICompositeType(tag: DW_TAG_array_type, baseType: !481, size: 128, elements: !269)
!3225 = !DIDerivedType(tag: DW_TAG_member, name: "u6_addr16", scope: !3221, file: !3218, line: 37, baseType: !3226, size: 128)
!3226 = !DICompositeType(tag: DW_TAG_array_type, baseType: !535, size: 128, elements: !2433)
!3227 = !DIDerivedType(tag: DW_TAG_member, name: "u6_addr32", scope: !3221, file: !3218, line: 38, baseType: !3228, size: 128)
!3228 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3207, size: 128, elements: !2272)
!3229 = !DIDerivedType(tag: DW_TAG_member, name: "daddr", scope: !3214, file: !3176, line: 52, baseType: !3217, size: 128, offset: 128)
!3230 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !3214, file: !3176, line: 53, baseType: !987, size: 32, offset: 256)
!3231 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3214, file: !3176, line: 54, baseType: !3207, size: 32, offset: 288)
!3232 = !DIDerivedType(tag: DW_TAG_member, name: "iif", scope: !3214, file: !3176, line: 55, baseType: !987, size: 32, offset: 320)
!3233 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !3192, file: !3176, line: 83, baseType: !3234, size: 320, offset: 448)
!3234 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timer_list", file: !3235, line: 11, size: 320, elements: !3236)
!3235 = !DIFile(filename: "./include/linux/timer.h", directory: "/home/lizy2001/genbc/linux")
!3236 = !{!3237, !3238, !3239, !3244}
!3237 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !3234, file: !3235, line: 16, baseType: !276, size: 128)
!3238 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !3234, file: !3235, line: 17, baseType: !312, size: 64, offset: 128)
!3239 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !3234, file: !3235, line: 18, baseType: !3240, size: 64, offset: 192)
!3240 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3241, size: 64)
!3241 = !DISubroutineType(types: !3242)
!3242 = !{null, !3243}
!3243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3234, size: 64)
!3244 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3234, file: !3235, line: 19, baseType: !987, size: 32, offset: 256)
!3245 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3192, file: !3176, line: 84, baseType: !1670, offset: 768)
!3246 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !3192, file: !3176, line: 85, baseType: !568, size: 32, offset: 768)
!3247 = !DIDerivedType(tag: DW_TAG_member, name: "rb_fragments", scope: !3192, file: !3176, line: 86, baseType: !1750, size: 64, offset: 832)
!3248 = !DIDerivedType(tag: DW_TAG_member, name: "fragments_tail", scope: !3192, file: !3176, line: 87, baseType: !415, size: 64, offset: 896)
!3249 = !DIDerivedType(tag: DW_TAG_member, name: "last_run_head", scope: !3192, file: !3176, line: 88, baseType: !415, size: 64, offset: 960)
!3250 = !DIDerivedType(tag: DW_TAG_member, name: "stamp", scope: !3192, file: !3176, line: 89, baseType: !453, size: 64, offset: 1024)
!3251 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !3192, file: !3176, line: 90, baseType: !32, size: 32, offset: 1088)
!3252 = !DIDerivedType(tag: DW_TAG_member, name: "meat", scope: !3192, file: !3176, line: 91, baseType: !32, size: 32, offset: 1120)
!3253 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3192, file: !3176, line: 92, baseType: !481, size: 8, offset: 1152)
!3254 = !DIDerivedType(tag: DW_TAG_member, name: "max_size", scope: !3192, file: !3176, line: 93, baseType: !581, size: 16, offset: 1168)
!3255 = !DIDerivedType(tag: DW_TAG_member, name: "fqdir", scope: !3192, file: !3176, line: 94, baseType: !3174, size: 64, offset: 1216)
!3256 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !3192, file: !3176, line: 95, baseType: !299, size: 128, align: 64, offset: 1280)
!3257 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3258, size: 64)
!3258 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!3259 = !DIDerivedType(tag: DW_TAG_member, name: "destructor", scope: !3184, file: !3176, line: 103, baseType: !3260, size: 64, offset: 128)
!3260 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3261, size: 64)
!3261 = !DISubroutineType(types: !3262)
!3262 = !{null, !3191}
!3263 = !DIDerivedType(tag: DW_TAG_member, name: "frag_expire", scope: !3184, file: !3176, line: 104, baseType: !3240, size: 64, offset: 192)
!3264 = !DIDerivedType(tag: DW_TAG_member, name: "frags_cachep", scope: !3184, file: !3176, line: 105, baseType: !2051, size: 64, offset: 256)
!3265 = !DIDerivedType(tag: DW_TAG_member, name: "frags_cache_name", scope: !3184, file: !3176, line: 106, baseType: !292, size: 64, offset: 320)
!3266 = !DIDerivedType(tag: DW_TAG_member, name: "rhash_params", scope: !3184, file: !3176, line: 107, baseType: !3267, size: 320, offset: 384)
!3267 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rhashtable_params", file: !3196, line: 56, size: 320, elements: !3268)
!3268 = !{!3269, !3270, !3271, !3272, !3273, !3274, !3275, !3276, !3281, !3283}
!3269 = !DIDerivedType(tag: DW_TAG_member, name: "nelem_hint", scope: !3267, file: !3196, line: 57, baseType: !581, size: 16)
!3270 = !DIDerivedType(tag: DW_TAG_member, name: "key_len", scope: !3267, file: !3196, line: 58, baseType: !581, size: 16, offset: 16)
!3271 = !DIDerivedType(tag: DW_TAG_member, name: "key_offset", scope: !3267, file: !3196, line: 59, baseType: !581, size: 16, offset: 32)
!3272 = !DIDerivedType(tag: DW_TAG_member, name: "head_offset", scope: !3267, file: !3196, line: 60, baseType: !581, size: 16, offset: 48)
!3273 = !DIDerivedType(tag: DW_TAG_member, name: "max_size", scope: !3267, file: !3196, line: 61, baseType: !7, size: 32, offset: 64)
!3274 = !DIDerivedType(tag: DW_TAG_member, name: "min_size", scope: !3267, file: !3196, line: 62, baseType: !581, size: 16, offset: 96)
!3275 = !DIDerivedType(tag: DW_TAG_member, name: "automatic_shrinking", scope: !3267, file: !3196, line: 63, baseType: !771, size: 8, offset: 112)
!3276 = !DIDerivedType(tag: DW_TAG_member, name: "hashfn", scope: !3267, file: !3196, line: 64, baseType: !3277, size: 64, offset: 128)
!3277 = !DIDerivedType(tag: DW_TAG_typedef, name: "rht_hashfn_t", file: !3196, line: 38, baseType: !3278)
!3278 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3279, size: 64)
!3279 = !DISubroutineType(types: !3280)
!3280 = !{!987, !3257, !987, !987}
!3281 = !DIDerivedType(tag: DW_TAG_member, name: "obj_hashfn", scope: !3267, file: !3196, line: 65, baseType: !3282, size: 64, offset: 192)
!3282 = !DIDerivedType(tag: DW_TAG_typedef, name: "rht_obj_hashfn_t", file: !3196, line: 39, baseType: !3278)
!3283 = !DIDerivedType(tag: DW_TAG_member, name: "obj_cmpfn", scope: !3267, file: !3196, line: 66, baseType: !3284, size: 64, offset: 256)
!3284 = !DIDerivedType(tag: DW_TAG_typedef, name: "rht_obj_cmpfn_t", file: !3196, line: 40, baseType: !3285)
!3285 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3286, size: 64)
!3286 = !DISubroutineType(types: !3287)
!3287 = !{!32, !3288, !3257}
!3288 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3289, size: 64)
!3289 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rhashtable_compare_arg", file: !3196, line: 33, size: 128, elements: !3290)
!3290 = !{!3291, !3306}
!3291 = !DIDerivedType(tag: DW_TAG_member, name: "ht", scope: !3289, file: !3196, line: 34, baseType: !3292, size: 64)
!3292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3293, size: 64)
!3293 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rhashtable", file: !3196, line: 81, size: 1024, elements: !3294)
!3294 = !{!3295, !3298, !3299, !3300, !3301, !3302, !3303, !3304, !3305}
!3295 = !DIDerivedType(tag: DW_TAG_member, name: "tbl", scope: !3293, file: !3196, line: 82, baseType: !3296, size: 64)
!3296 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3297, size: 64)
!3297 = !DICompositeType(tag: DW_TAG_structure_type, name: "bucket_table", file: !3196, line: 26, flags: DIFlagFwdDecl)
!3298 = !DIDerivedType(tag: DW_TAG_member, name: "key_len", scope: !3293, file: !3196, line: 83, baseType: !7, size: 32, offset: 64)
!3299 = !DIDerivedType(tag: DW_TAG_member, name: "max_elems", scope: !3293, file: !3196, line: 84, baseType: !7, size: 32, offset: 96)
!3300 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3293, file: !3196, line: 85, baseType: !3267, size: 320, offset: 128)
!3301 = !DIDerivedType(tag: DW_TAG_member, name: "rhlist", scope: !3293, file: !3196, line: 86, baseType: !771, size: 8, offset: 448)
!3302 = !DIDerivedType(tag: DW_TAG_member, name: "run_work", scope: !3293, file: !3196, line: 87, baseType: !2829, size: 256, offset: 512)
!3303 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !3293, file: !3196, line: 88, baseType: !1665, size: 192, offset: 768)
!3304 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3293, file: !3196, line: 89, baseType: !1670, offset: 960)
!3305 = !DIDerivedType(tag: DW_TAG_member, name: "nelems", scope: !3293, file: !3196, line: 90, baseType: !383, size: 32, offset: 960)
!3306 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !3289, file: !3196, line: 35, baseType: !3257, size: 64, offset: 64)
!3307 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !3184, file: !3176, line: 108, baseType: !568, size: 32, offset: 704)
!3308 = !DIDerivedType(tag: DW_TAG_member, name: "completion", scope: !3184, file: !3176, line: 109, baseType: !2597, size: 192, offset: 768)
!3309 = !DIDerivedType(tag: DW_TAG_member, name: "net", scope: !3175, file: !3176, line: 16, baseType: !2982, size: 64, offset: 256)
!3310 = !DIDerivedType(tag: DW_TAG_member, name: "dead", scope: !3175, file: !3176, line: 17, baseType: !771, size: 8, offset: 320)
!3311 = !DIDerivedType(tag: DW_TAG_member, name: "rhashtable", scope: !3175, file: !3176, line: 19, baseType: !3293, size: 1024, offset: 384)
!3312 = !DIDerivedType(tag: DW_TAG_member, name: "mem", scope: !3175, file: !3176, line: 22, baseType: !371, size: 64, offset: 1408)
!3313 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_work", scope: !3175, file: !3176, line: 23, baseType: !2829, size: 256, offset: 1472)
!3314 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_icmp_echo_ignore_all", scope: !3146, file: !3147, line: 87, baseType: !32, size: 32, offset: 1280)
!3315 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_icmp_echo_ignore_broadcasts", scope: !3146, file: !3147, line: 88, baseType: !32, size: 32, offset: 1312)
!3316 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_icmp_ignore_bogus_error_responses", scope: !3146, file: !3147, line: 89, baseType: !32, size: 32, offset: 1344)
!3317 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_icmp_ratelimit", scope: !3146, file: !3147, line: 90, baseType: !32, size: 32, offset: 1376)
!3318 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_icmp_ratemask", scope: !3146, file: !3147, line: 91, baseType: !32, size: 32, offset: 1408)
!3319 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_icmp_errors_use_inbound_ifaddr", scope: !3146, file: !3147, line: 92, baseType: !32, size: 32, offset: 1440)
!3320 = !DIDerivedType(tag: DW_TAG_member, name: "ip_local_ports", scope: !3146, file: !3147, line: 94, baseType: !3321, size: 128, offset: 1472)
!3321 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "local_ports", file: !3147, line: 21, size: 128, elements: !3322)
!3322 = !{!3323, !3329, !3331}
!3323 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3321, file: !3147, line: 22, baseType: !3324, size: 32)
!3324 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqlock_t", file: !1344, line: 805, baseType: !3325)
!3325 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1344, line: 798, size: 32, elements: !3326)
!3326 = !{!3327, !3328}
!3327 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !3325, file: !1344, line: 803, baseType: !1343, size: 32)
!3328 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3325, file: !1344, line: 804, baseType: !1670, offset: 32)
!3329 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !3321, file: !3147, line: 23, baseType: !3330, size: 64, offset: 32)
!3330 = !DICompositeType(tag: DW_TAG_array_type, baseType: !32, size: 64, elements: !2664)
!3331 = !DIDerivedType(tag: DW_TAG_member, name: "warned", scope: !3321, file: !3147, line: 24, baseType: !771, size: 8, offset: 96)
!3332 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_ecn", scope: !3146, file: !3147, line: 96, baseType: !32, size: 32, offset: 1600)
!3333 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_ecn_fallback", scope: !3146, file: !3147, line: 97, baseType: !32, size: 32, offset: 1632)
!3334 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_default_ttl", scope: !3146, file: !3147, line: 99, baseType: !32, size: 32, offset: 1664)
!3335 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_no_pmtu_disc", scope: !3146, file: !3147, line: 100, baseType: !32, size: 32, offset: 1696)
!3336 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_fwd_use_pmtu", scope: !3146, file: !3147, line: 101, baseType: !32, size: 32, offset: 1728)
!3337 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_fwd_update_priority", scope: !3146, file: !3147, line: 102, baseType: !32, size: 32, offset: 1760)
!3338 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_nonlocal_bind", scope: !3146, file: !3147, line: 103, baseType: !32, size: 32, offset: 1792)
!3339 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_autobind_reuse", scope: !3146, file: !3147, line: 104, baseType: !32, size: 32, offset: 1824)
!3340 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_dynaddr", scope: !3146, file: !3147, line: 106, baseType: !32, size: 32, offset: 1856)
!3341 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_early_demux", scope: !3146, file: !3147, line: 107, baseType: !32, size: 32, offset: 1888)
!3342 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_early_demux", scope: !3146, file: !3147, line: 111, baseType: !32, size: 32, offset: 1920)
!3343 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_udp_early_demux", scope: !3146, file: !3147, line: 112, baseType: !32, size: 32, offset: 1952)
!3344 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_nexthop_compat_mode", scope: !3146, file: !3147, line: 114, baseType: !32, size: 32, offset: 1984)
!3345 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_fwmark_reflect", scope: !3146, file: !3147, line: 116, baseType: !32, size: 32, offset: 2016)
!3346 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_fwmark_accept", scope: !3146, file: !3147, line: 117, baseType: !32, size: 32, offset: 2048)
!3347 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_mtu_probing", scope: !3146, file: !3147, line: 121, baseType: !32, size: 32, offset: 2080)
!3348 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_mtu_probe_floor", scope: !3146, file: !3147, line: 122, baseType: !32, size: 32, offset: 2112)
!3349 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_base_mss", scope: !3146, file: !3147, line: 123, baseType: !32, size: 32, offset: 2144)
!3350 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_min_snd_mss", scope: !3146, file: !3147, line: 124, baseType: !32, size: 32, offset: 2176)
!3351 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_probe_threshold", scope: !3146, file: !3147, line: 125, baseType: !32, size: 32, offset: 2208)
!3352 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_probe_interval", scope: !3146, file: !3147, line: 126, baseType: !987, size: 32, offset: 2240)
!3353 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_keepalive_time", scope: !3146, file: !3147, line: 128, baseType: !32, size: 32, offset: 2272)
!3354 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_keepalive_probes", scope: !3146, file: !3147, line: 129, baseType: !32, size: 32, offset: 2304)
!3355 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_keepalive_intvl", scope: !3146, file: !3147, line: 130, baseType: !32, size: 32, offset: 2336)
!3356 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_syn_retries", scope: !3146, file: !3147, line: 132, baseType: !32, size: 32, offset: 2368)
!3357 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_synack_retries", scope: !3146, file: !3147, line: 133, baseType: !32, size: 32, offset: 2400)
!3358 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_syncookies", scope: !3146, file: !3147, line: 134, baseType: !32, size: 32, offset: 2432)
!3359 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_reordering", scope: !3146, file: !3147, line: 135, baseType: !32, size: 32, offset: 2464)
!3360 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_retries1", scope: !3146, file: !3147, line: 136, baseType: !32, size: 32, offset: 2496)
!3361 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_retries2", scope: !3146, file: !3147, line: 137, baseType: !32, size: 32, offset: 2528)
!3362 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_orphan_retries", scope: !3146, file: !3147, line: 138, baseType: !32, size: 32, offset: 2560)
!3363 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_fin_timeout", scope: !3146, file: !3147, line: 139, baseType: !32, size: 32, offset: 2592)
!3364 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_notsent_lowat", scope: !3146, file: !3147, line: 140, baseType: !7, size: 32, offset: 2624)
!3365 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_tw_reuse", scope: !3146, file: !3147, line: 141, baseType: !32, size: 32, offset: 2656)
!3366 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_sack", scope: !3146, file: !3147, line: 142, baseType: !32, size: 32, offset: 2688)
!3367 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_window_scaling", scope: !3146, file: !3147, line: 143, baseType: !32, size: 32, offset: 2720)
!3368 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_timestamps", scope: !3146, file: !3147, line: 144, baseType: !32, size: 32, offset: 2752)
!3369 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_early_retrans", scope: !3146, file: !3147, line: 145, baseType: !32, size: 32, offset: 2784)
!3370 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_recovery", scope: !3146, file: !3147, line: 146, baseType: !32, size: 32, offset: 2816)
!3371 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_thin_linear_timeouts", scope: !3146, file: !3147, line: 147, baseType: !32, size: 32, offset: 2848)
!3372 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_slow_start_after_idle", scope: !3146, file: !3147, line: 148, baseType: !32, size: 32, offset: 2880)
!3373 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_retrans_collapse", scope: !3146, file: !3147, line: 149, baseType: !32, size: 32, offset: 2912)
!3374 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_stdurg", scope: !3146, file: !3147, line: 150, baseType: !32, size: 32, offset: 2944)
!3375 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_rfc1337", scope: !3146, file: !3147, line: 151, baseType: !32, size: 32, offset: 2976)
!3376 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_abort_on_overflow", scope: !3146, file: !3147, line: 152, baseType: !32, size: 32, offset: 3008)
!3377 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_fack", scope: !3146, file: !3147, line: 153, baseType: !32, size: 32, offset: 3040)
!3378 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_max_reordering", scope: !3146, file: !3147, line: 154, baseType: !32, size: 32, offset: 3072)
!3379 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_dsack", scope: !3146, file: !3147, line: 155, baseType: !32, size: 32, offset: 3104)
!3380 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_app_win", scope: !3146, file: !3147, line: 156, baseType: !32, size: 32, offset: 3136)
!3381 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_adv_win_scale", scope: !3146, file: !3147, line: 157, baseType: !32, size: 32, offset: 3168)
!3382 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_frto", scope: !3146, file: !3147, line: 158, baseType: !32, size: 32, offset: 3200)
!3383 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_nometrics_save", scope: !3146, file: !3147, line: 159, baseType: !32, size: 32, offset: 3232)
!3384 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_no_ssthresh_metrics_save", scope: !3146, file: !3147, line: 160, baseType: !32, size: 32, offset: 3264)
!3385 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_moderate_rcvbuf", scope: !3146, file: !3147, line: 161, baseType: !32, size: 32, offset: 3296)
!3386 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_tso_win_divisor", scope: !3146, file: !3147, line: 162, baseType: !32, size: 32, offset: 3328)
!3387 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_workaround_signed_windows", scope: !3146, file: !3147, line: 163, baseType: !32, size: 32, offset: 3360)
!3388 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_limit_output_bytes", scope: !3146, file: !3147, line: 164, baseType: !32, size: 32, offset: 3392)
!3389 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_challenge_ack_limit", scope: !3146, file: !3147, line: 165, baseType: !32, size: 32, offset: 3424)
!3390 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_min_tso_segs", scope: !3146, file: !3147, line: 166, baseType: !32, size: 32, offset: 3456)
!3391 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_min_rtt_wlen", scope: !3146, file: !3147, line: 167, baseType: !32, size: 32, offset: 3488)
!3392 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_autocorking", scope: !3146, file: !3147, line: 168, baseType: !32, size: 32, offset: 3520)
!3393 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_invalid_ratelimit", scope: !3146, file: !3147, line: 169, baseType: !32, size: 32, offset: 3552)
!3394 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_pacing_ss_ratio", scope: !3146, file: !3147, line: 170, baseType: !32, size: 32, offset: 3584)
!3395 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_pacing_ca_ratio", scope: !3146, file: !3147, line: 171, baseType: !32, size: 32, offset: 3616)
!3396 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_wmem", scope: !3146, file: !3147, line: 172, baseType: !3397, size: 96, offset: 3648)
!3397 = !DICompositeType(tag: DW_TAG_array_type, baseType: !32, size: 96, elements: !1592)
!3398 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_rmem", scope: !3146, file: !3147, line: 173, baseType: !3397, size: 96, offset: 3744)
!3399 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_comp_sack_nr", scope: !3146, file: !3147, line: 174, baseType: !32, size: 32, offset: 3840)
!3400 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_comp_sack_delay_ns", scope: !3146, file: !3147, line: 175, baseType: !312, size: 64, offset: 3904)
!3401 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_comp_sack_slack_ns", scope: !3146, file: !3147, line: 176, baseType: !312, size: 64, offset: 3968)
!3402 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_death_row", scope: !3146, file: !3147, line: 177, baseType: !3403, size: 192, offset: 4032)
!3403 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inet_timewait_death_row", file: !3147, line: 34, size: 192, elements: !3404)
!3404 = !{!3405, !3406, !3409}
!3405 = !DIDerivedType(tag: DW_TAG_member, name: "tw_count", scope: !3403, file: !3147, line: 35, baseType: !383, size: 32)
!3406 = !DIDerivedType(tag: DW_TAG_member, name: "hashinfo", scope: !3403, file: !3147, line: 37, baseType: !3407, size: 64, offset: 64)
!3407 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3408, size: 64)
!3408 = !DICompositeType(tag: DW_TAG_structure_type, name: "inet_hashinfo", file: !3147, line: 32, flags: DIFlagFwdDecl)
!3409 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_max_tw_buckets", scope: !3403, file: !3147, line: 38, baseType: !32, size: 32, offset: 128)
!3410 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_max_syn_backlog", scope: !3146, file: !3147, line: 178, baseType: !32, size: 32, offset: 4224)
!3411 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_fastopen", scope: !3146, file: !3147, line: 179, baseType: !32, size: 32, offset: 4256)
!3412 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_congestion_control", scope: !3146, file: !3147, line: 180, baseType: !3413, size: 64, offset: 4288)
!3413 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3414, size: 64)
!3414 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3415)
!3415 = !DICompositeType(tag: DW_TAG_structure_type, name: "tcp_congestion_ops", file: !3147, line: 180, flags: DIFlagFwdDecl)
!3416 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_fastopen_ctx", scope: !3146, file: !3147, line: 181, baseType: !3417, size: 64, offset: 4352)
!3417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3418, size: 64)
!3418 = !DICompositeType(tag: DW_TAG_structure_type, name: "tcp_fastopen_context", file: !3147, line: 41, flags: DIFlagFwdDecl)
!3419 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_fastopen_ctx_lock", scope: !3146, file: !3147, line: 182, baseType: !1670, offset: 4416)
!3420 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_fastopen_blackhole_timeout", scope: !3146, file: !3147, line: 183, baseType: !7, size: 32, offset: 4416)
!3421 = !DIDerivedType(tag: DW_TAG_member, name: "tfo_active_disable_times", scope: !3146, file: !3147, line: 184, baseType: !383, size: 32, offset: 4448)
!3422 = !DIDerivedType(tag: DW_TAG_member, name: "tfo_active_disable_stamp", scope: !3146, file: !3147, line: 185, baseType: !312, size: 64, offset: 4480)
!3423 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_reflect_tos", scope: !3146, file: !3147, line: 186, baseType: !32, size: 32, offset: 4544)
!3424 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_udp_wmem_min", scope: !3146, file: !3147, line: 188, baseType: !32, size: 32, offset: 4576)
!3425 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_udp_rmem_min", scope: !3146, file: !3147, line: 189, baseType: !32, size: 32, offset: 4608)
!3426 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_igmp_max_memberships", scope: !3146, file: !3147, line: 195, baseType: !32, size: 32, offset: 4640)
!3427 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_igmp_max_msf", scope: !3146, file: !3147, line: 196, baseType: !32, size: 32, offset: 4672)
!3428 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_igmp_llm_reports", scope: !3146, file: !3147, line: 197, baseType: !32, size: 32, offset: 4704)
!3429 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_igmp_qrv", scope: !3146, file: !3147, line: 198, baseType: !32, size: 32, offset: 4736)
!3430 = !DIDerivedType(tag: DW_TAG_member, name: "ping_group_range", scope: !3146, file: !3147, line: 200, baseType: !3431, size: 96, offset: 4768)
!3431 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ping_group_range", file: !3147, line: 27, size: 96, elements: !3432)
!3432 = !{!3433, !3434}
!3433 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3431, file: !3147, line: 28, baseType: !3324, size: 32)
!3434 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !3431, file: !3147, line: 29, baseType: !3435, size: 64, offset: 32)
!3435 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1390, size: 64, elements: !2664)
!3436 = !DIDerivedType(tag: DW_TAG_member, name: "dev_addr_genid", scope: !3146, file: !3147, line: 202, baseType: !383, size: 32, offset: 4864)
!3437 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_local_reserved_ports", scope: !3146, file: !3147, line: 205, baseType: !3438, size: 64, offset: 4928)
!3438 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !312, size: 64)
!3439 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_prot_sock", scope: !3146, file: !3147, line: 206, baseType: !32, size: 32, offset: 4992)
!3440 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_ops", scope: !3146, file: !3147, line: 222, baseType: !3441, size: 64, offset: 5056)
!3441 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3442, size: 64)
!3442 = !DICompositeType(tag: DW_TAG_structure_type, name: "fib_notifier_ops", file: !3147, line: 222, flags: DIFlagFwdDecl)
!3443 = !DIDerivedType(tag: DW_TAG_member, name: "fib_seq", scope: !3146, file: !3147, line: 223, baseType: !7, size: 32, offset: 5120)
!3444 = !DIDerivedType(tag: DW_TAG_member, name: "ipmr_notifier_ops", scope: !3146, file: !3147, line: 225, baseType: !3441, size: 64, offset: 5184)
!3445 = !DIDerivedType(tag: DW_TAG_member, name: "ipmr_seq", scope: !3146, file: !3147, line: 226, baseType: !7, size: 32, offset: 5248)
!3446 = !DIDerivedType(tag: DW_TAG_member, name: "rt_genid", scope: !3146, file: !3147, line: 228, baseType: !383, size: 32, offset: 5280)
!3447 = !DIDerivedType(tag: DW_TAG_member, name: "ip_id_key", scope: !3146, file: !3147, line: 229, baseType: !3448, size: 128, offset: 5312)
!3448 = !DIDerivedType(tag: DW_TAG_typedef, name: "siphash_key_t", file: !3449, line: 22, baseType: !3450)
!3449 = !DIFile(filename: "./include/linux/siphash.h", directory: "/home/lizy2001/genbc/linux")
!3450 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3449, line: 20, size: 128, elements: !3451)
!3451 = !{!3452}
!3452 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !3450, file: !3449, line: 21, baseType: !3453, size: 128)
!3453 = !DICompositeType(tag: DW_TAG_array_type, baseType: !331, size: 128, elements: !2664)
!3454 = !DIDerivedType(tag: DW_TAG_member, name: "ipv6", scope: !2983, file: !2984, line: 128, baseType: !3455, size: 4608, offset: 10176)
!3455 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_ipv6", file: !3456, line: 56, size: 4608, elements: !3457)
!3456 = !DIFile(filename: "./include/net/netns/ipv6.h", directory: "/home/lizy2001/genbc/linux")
!3457 = !{!3458, !3498, !3501, !3502, !3503, !3504, !3507, !3510, !3513, !3514, !3515, !3518, !3519, !3585, !3586, !3587, !3588, !3589, !3590, !3591, !3592, !3593, !3594, !3595, !3596, !3599, !3600, !3601, !3602}
!3458 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl", scope: !3455, file: !3456, line: 57, baseType: !3459, size: 1600)
!3459 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_sysctl_ipv6", file: !3456, line: 15, size: 1600, elements: !3460)
!3460 = !{!3461, !3462, !3463, !3464, !3465, !3466, !3467, !3468, !3469, !3470, !3471, !3472, !3473, !3474, !3475, !3476, !3477, !3478, !3479, !3480, !3481, !3482, !3484, !3485, !3486, !3487, !3488, !3489, !3490, !3491, !3492, !3493, !3494, !3495, !3496, !3497}
!3461 = !DIDerivedType(tag: DW_TAG_member, name: "hdr", scope: !3459, file: !3456, line: 17, baseType: !2903, size: 64)
!3462 = !DIDerivedType(tag: DW_TAG_member, name: "route_hdr", scope: !3459, file: !3456, line: 18, baseType: !2903, size: 64, offset: 64)
!3463 = !DIDerivedType(tag: DW_TAG_member, name: "icmp_hdr", scope: !3459, file: !3456, line: 19, baseType: !2903, size: 64, offset: 128)
!3464 = !DIDerivedType(tag: DW_TAG_member, name: "frags_hdr", scope: !3459, file: !3456, line: 20, baseType: !2903, size: 64, offset: 192)
!3465 = !DIDerivedType(tag: DW_TAG_member, name: "xfrm6_hdr", scope: !3459, file: !3456, line: 21, baseType: !2903, size: 64, offset: 256)
!3466 = !DIDerivedType(tag: DW_TAG_member, name: "bindv6only", scope: !3459, file: !3456, line: 23, baseType: !32, size: 32, offset: 320)
!3467 = !DIDerivedType(tag: DW_TAG_member, name: "flush_delay", scope: !3459, file: !3456, line: 24, baseType: !32, size: 32, offset: 352)
!3468 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_max_size", scope: !3459, file: !3456, line: 25, baseType: !32, size: 32, offset: 384)
!3469 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_gc_min_interval", scope: !3459, file: !3456, line: 26, baseType: !32, size: 32, offset: 416)
!3470 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_gc_timeout", scope: !3459, file: !3456, line: 27, baseType: !32, size: 32, offset: 448)
!3471 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_gc_interval", scope: !3459, file: !3456, line: 28, baseType: !32, size: 32, offset: 480)
!3472 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_gc_elasticity", scope: !3459, file: !3456, line: 29, baseType: !32, size: 32, offset: 512)
!3473 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_mtu_expires", scope: !3459, file: !3456, line: 30, baseType: !32, size: 32, offset: 544)
!3474 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_min_advmss", scope: !3459, file: !3456, line: 31, baseType: !32, size: 32, offset: 576)
!3475 = !DIDerivedType(tag: DW_TAG_member, name: "multipath_hash_policy", scope: !3459, file: !3456, line: 32, baseType: !32, size: 32, offset: 608)
!3476 = !DIDerivedType(tag: DW_TAG_member, name: "flowlabel_consistency", scope: !3459, file: !3456, line: 33, baseType: !32, size: 32, offset: 640)
!3477 = !DIDerivedType(tag: DW_TAG_member, name: "auto_flowlabels", scope: !3459, file: !3456, line: 34, baseType: !32, size: 32, offset: 672)
!3478 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6_time", scope: !3459, file: !3456, line: 35, baseType: !32, size: 32, offset: 704)
!3479 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6_echo_ignore_all", scope: !3459, file: !3456, line: 36, baseType: !32, size: 32, offset: 736)
!3480 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6_echo_ignore_multicast", scope: !3459, file: !3456, line: 37, baseType: !32, size: 32, offset: 768)
!3481 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6_echo_ignore_anycast", scope: !3459, file: !3456, line: 38, baseType: !32, size: 32, offset: 800)
!3482 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6_ratemask", scope: !3459, file: !3456, line: 39, baseType: !3483, size: 256, offset: 832)
!3483 = !DICompositeType(tag: DW_TAG_array_type, baseType: !312, size: 256, elements: !2272)
!3484 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6_ratemask_ptr", scope: !3459, file: !3456, line: 40, baseType: !3438, size: 64, offset: 1088)
!3485 = !DIDerivedType(tag: DW_TAG_member, name: "anycast_src_echo_reply", scope: !3459, file: !3456, line: 41, baseType: !32, size: 32, offset: 1152)
!3486 = !DIDerivedType(tag: DW_TAG_member, name: "ip_nonlocal_bind", scope: !3459, file: !3456, line: 42, baseType: !32, size: 32, offset: 1184)
!3487 = !DIDerivedType(tag: DW_TAG_member, name: "fwmark_reflect", scope: !3459, file: !3456, line: 43, baseType: !32, size: 32, offset: 1216)
!3488 = !DIDerivedType(tag: DW_TAG_member, name: "idgen_retries", scope: !3459, file: !3456, line: 44, baseType: !32, size: 32, offset: 1248)
!3489 = !DIDerivedType(tag: DW_TAG_member, name: "idgen_delay", scope: !3459, file: !3456, line: 45, baseType: !32, size: 32, offset: 1280)
!3490 = !DIDerivedType(tag: DW_TAG_member, name: "flowlabel_state_ranges", scope: !3459, file: !3456, line: 46, baseType: !32, size: 32, offset: 1312)
!3491 = !DIDerivedType(tag: DW_TAG_member, name: "flowlabel_reflect", scope: !3459, file: !3456, line: 47, baseType: !32, size: 32, offset: 1344)
!3492 = !DIDerivedType(tag: DW_TAG_member, name: "max_dst_opts_cnt", scope: !3459, file: !3456, line: 48, baseType: !32, size: 32, offset: 1376)
!3493 = !DIDerivedType(tag: DW_TAG_member, name: "max_hbh_opts_cnt", scope: !3459, file: !3456, line: 49, baseType: !32, size: 32, offset: 1408)
!3494 = !DIDerivedType(tag: DW_TAG_member, name: "max_dst_opts_len", scope: !3459, file: !3456, line: 50, baseType: !32, size: 32, offset: 1440)
!3495 = !DIDerivedType(tag: DW_TAG_member, name: "max_hbh_opts_len", scope: !3459, file: !3456, line: 51, baseType: !32, size: 32, offset: 1472)
!3496 = !DIDerivedType(tag: DW_TAG_member, name: "seg6_flowlabel", scope: !3459, file: !3456, line: 52, baseType: !32, size: 32, offset: 1504)
!3497 = !DIDerivedType(tag: DW_TAG_member, name: "skip_notify_on_dev_down", scope: !3459, file: !3456, line: 53, baseType: !771, size: 8, offset: 1536)
!3498 = !DIDerivedType(tag: DW_TAG_member, name: "devconf_all", scope: !3455, file: !3456, line: 58, baseType: !3499, size: 64, offset: 1600)
!3499 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3500, size: 64)
!3500 = !DICompositeType(tag: DW_TAG_structure_type, name: "ipv6_devconf", file: !3456, line: 58, flags: DIFlagFwdDecl)
!3501 = !DIDerivedType(tag: DW_TAG_member, name: "devconf_dflt", scope: !3455, file: !3456, line: 59, baseType: !3499, size: 64, offset: 1664)
!3502 = !DIDerivedType(tag: DW_TAG_member, name: "peers", scope: !3455, file: !3456, line: 60, baseType: !3170, size: 64, offset: 1728)
!3503 = !DIDerivedType(tag: DW_TAG_member, name: "fqdir", scope: !3455, file: !3456, line: 61, baseType: !3174, size: 64, offset: 1792)
!3504 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_null_entry", scope: !3455, file: !3456, line: 71, baseType: !3505, size: 64, offset: 1856)
!3505 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3506, size: 64)
!3506 = !DICompositeType(tag: DW_TAG_structure_type, name: "fib6_info", file: !3456, line: 71, flags: DIFlagFwdDecl)
!3507 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_null_entry", scope: !3455, file: !3456, line: 72, baseType: !3508, size: 64, offset: 1920)
!3508 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3509, size: 64)
!3509 = !DICompositeType(tag: DW_TAG_structure_type, name: "rt6_info", file: !3456, line: 72, flags: DIFlagFwdDecl)
!3510 = !DIDerivedType(tag: DW_TAG_member, name: "rt6_stats", scope: !3455, file: !3456, line: 73, baseType: !3511, size: 64, offset: 1984)
!3511 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3512, size: 64)
!3512 = !DICompositeType(tag: DW_TAG_structure_type, name: "rt6_statistics", file: !3456, line: 73, flags: DIFlagFwdDecl)
!3513 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_fib_timer", scope: !3455, file: !3456, line: 74, baseType: !3234, size: 320, offset: 2048)
!3514 = !DIDerivedType(tag: DW_TAG_member, name: "fib_table_hash", scope: !3455, file: !3456, line: 75, baseType: !3021, size: 64, offset: 2368)
!3515 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_main_tbl", scope: !3455, file: !3456, line: 76, baseType: !3516, size: 64, offset: 2432)
!3516 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3517, size: 64)
!3517 = !DICompositeType(tag: DW_TAG_structure_type, name: "fib6_table", file: !3456, line: 76, flags: DIFlagFwdDecl)
!3518 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_walkers", scope: !3455, file: !3456, line: 77, baseType: !284, size: 128, offset: 2496)
!3519 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_dst_ops", scope: !3455, file: !3456, line: 78, baseType: !3520, size: 1088, offset: 2624)
!3520 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dst_ops", file: !925, line: 15, size: 1088, elements: !3521)
!3521 = !{!3522, !3523, !3524, !3529, !3535, !3541, !3542, !3546, !3550, !3554, !3558, !3559, !3563, !3567, !3571, !3575, !3579, !3580}
!3522 = !DIDerivedType(tag: DW_TAG_member, name: "family", scope: !3520, file: !925, line: 16, baseType: !476, size: 16)
!3523 = !DIDerivedType(tag: DW_TAG_member, name: "gc_thresh", scope: !3520, file: !925, line: 17, baseType: !7, size: 32, offset: 32)
!3524 = !DIDerivedType(tag: DW_TAG_member, name: "gc", scope: !3520, file: !925, line: 19, baseType: !3525, size: 64, offset: 64)
!3525 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3526, size: 64)
!3526 = !DISubroutineType(types: !3527)
!3527 = !{!32, !3528}
!3528 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3520, size: 64)
!3529 = !DIDerivedType(tag: DW_TAG_member, name: "check", scope: !3520, file: !925, line: 20, baseType: !3530, size: 64, offset: 128)
!3530 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3531, size: 64)
!3531 = !DISubroutineType(types: !3532)
!3532 = !{!3533, !3533, !493}
!3533 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3534, size: 64)
!3534 = !DICompositeType(tag: DW_TAG_structure_type, name: "dst_entry", file: !417, line: 956, flags: DIFlagFwdDecl)
!3535 = !DIDerivedType(tag: DW_TAG_member, name: "default_advmss", scope: !3520, file: !925, line: 21, baseType: !3536, size: 64, offset: 192)
!3536 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3537, size: 64)
!3537 = !DISubroutineType(types: !3538)
!3538 = !{!7, !3539}
!3539 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3540, size: 64)
!3540 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3534)
!3541 = !DIDerivedType(tag: DW_TAG_member, name: "mtu", scope: !3520, file: !925, line: 22, baseType: !3536, size: 64, offset: 256)
!3542 = !DIDerivedType(tag: DW_TAG_member, name: "cow_metrics", scope: !3520, file: !925, line: 23, baseType: !3543, size: 64, offset: 320)
!3543 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3544, size: 64)
!3544 = !DISubroutineType(types: !3545)
!3545 = !{!2516, !3533, !312}
!3546 = !DIDerivedType(tag: DW_TAG_member, name: "destroy", scope: !3520, file: !925, line: 24, baseType: !3547, size: 64, offset: 384)
!3547 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3548, size: 64)
!3548 = !DISubroutineType(types: !3549)
!3549 = !{null, !3533}
!3550 = !DIDerivedType(tag: DW_TAG_member, name: "ifdown", scope: !3520, file: !925, line: 25, baseType: !3551, size: 64, offset: 448)
!3551 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3552, size: 64)
!3552 = !DISubroutineType(types: !3553)
!3553 = !{null, !3533, !290, !32}
!3554 = !DIDerivedType(tag: DW_TAG_member, name: "negative_advice", scope: !3520, file: !925, line: 27, baseType: !3555, size: 64, offset: 512)
!3555 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3556, size: 64)
!3556 = !DISubroutineType(types: !3557)
!3557 = !{!3533, !3533}
!3558 = !DIDerivedType(tag: DW_TAG_member, name: "link_failure", scope: !3520, file: !925, line: 28, baseType: !468, size: 64, offset: 576)
!3559 = !DIDerivedType(tag: DW_TAG_member, name: "update_pmtu", scope: !3520, file: !925, line: 29, baseType: !3560, size: 64, offset: 640)
!3560 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3561, size: 64)
!3561 = !DISubroutineType(types: !3562)
!3562 = !{null, !3533, !445, !415, !987, !771}
!3563 = !DIDerivedType(tag: DW_TAG_member, name: "redirect", scope: !3520, file: !925, line: 32, baseType: !3564, size: 64, offset: 704)
!3564 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3565, size: 64)
!3565 = !DISubroutineType(types: !3566)
!3566 = !{null, !3533, !445, !415}
!3567 = !DIDerivedType(tag: DW_TAG_member, name: "local_out", scope: !3520, file: !925, line: 34, baseType: !3568, size: 64, offset: 768)
!3568 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3569, size: 64)
!3569 = !DISubroutineType(types: !3570)
!3570 = !{!32, !2982, !445, !415}
!3571 = !DIDerivedType(tag: DW_TAG_member, name: "neigh_lookup", scope: !3520, file: !925, line: 35, baseType: !3572, size: 64, offset: 832)
!3572 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3573, size: 64)
!3573 = !DISubroutineType(types: !3574)
!3574 = !{!923, !3539, !415, !3257}
!3575 = !DIDerivedType(tag: DW_TAG_member, name: "confirm_neigh", scope: !3520, file: !925, line: 38, baseType: !3576, size: 64, offset: 896)
!3576 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3577, size: 64)
!3577 = !DISubroutineType(types: !3578)
!3578 = !{null, !3539, !3257}
!3579 = !DIDerivedType(tag: DW_TAG_member, name: "kmem_cachep", scope: !3520, file: !925, line: 41, baseType: !2051, size: 64, offset: 960)
!3580 = !DIDerivedType(tag: DW_TAG_member, name: "pcpuc_entries", scope: !3520, file: !925, line: 43, baseType: !3581, size: 64, offset: 1024)
!3581 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_counter", file: !3582, line: 97, size: 64, elements: !3583)
!3582 = !DIFile(filename: "./include/linux/percpu_counter.h", directory: "/home/lizy2001/genbc/linux")
!3583 = !{!3584}
!3584 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3581, file: !3582, line: 98, baseType: !377, size: 64)
!3585 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_walker_lock", scope: !3455, file: !3456, line: 79, baseType: !1912, offset: 3712)
!3586 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_gc_lock", scope: !3455, file: !3456, line: 80, baseType: !1670, offset: 3712)
!3587 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_gc_expire", scope: !3455, file: !3456, line: 81, baseType: !7, size: 32, offset: 3712)
!3588 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_last_gc", scope: !3455, file: !3456, line: 82, baseType: !312, size: 64, offset: 3776)
!3589 = !DIDerivedType(tag: DW_TAG_member, name: "icmp_sk", scope: !3455, file: !3456, line: 94, baseType: !3167, size: 64, offset: 3840)
!3590 = !DIDerivedType(tag: DW_TAG_member, name: "ndisc_sk", scope: !3455, file: !3456, line: 95, baseType: !445, size: 64, offset: 3904)
!3591 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_sk", scope: !3455, file: !3456, line: 96, baseType: !445, size: 64, offset: 3968)
!3592 = !DIDerivedType(tag: DW_TAG_member, name: "igmp_sk", scope: !3455, file: !3456, line: 97, baseType: !445, size: 64, offset: 4032)
!3593 = !DIDerivedType(tag: DW_TAG_member, name: "mc_autojoin_sk", scope: !3455, file: !3456, line: 98, baseType: !445, size: 64, offset: 4096)
!3594 = !DIDerivedType(tag: DW_TAG_member, name: "dev_addr_genid", scope: !3455, file: !3456, line: 107, baseType: !383, size: 32, offset: 4160)
!3595 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_sernum", scope: !3455, file: !3456, line: 108, baseType: !383, size: 32, offset: 4192)
!3596 = !DIDerivedType(tag: DW_TAG_member, name: "seg6_data", scope: !3455, file: !3456, line: 109, baseType: !3597, size: 64, offset: 4224)
!3597 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3598, size: 64)
!3598 = !DICompositeType(tag: DW_TAG_structure_type, name: "seg6_pernet_data", file: !3456, line: 109, flags: DIFlagFwdDecl)
!3599 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_ops", scope: !3455, file: !3456, line: 110, baseType: !3441, size: 64, offset: 4288)
!3600 = !DIDerivedType(tag: DW_TAG_member, name: "ip6mr_notifier_ops", scope: !3455, file: !3456, line: 111, baseType: !3441, size: 64, offset: 4352)
!3601 = !DIDerivedType(tag: DW_TAG_member, name: "ipmr_seq", scope: !3455, file: !3456, line: 112, baseType: !7, size: 32, offset: 4416)
!3602 = !DIDerivedType(tag: DW_TAG_member, name: "ip6addrlbl_table", scope: !3455, file: !3456, line: 117, baseType: !3603, size: 128, offset: 4480)
!3603 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3455, file: !3456, line: 113, size: 128, elements: !3604)
!3604 = !{!3605, !3606, !3607}
!3605 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3603, file: !3456, line: 114, baseType: !1581, size: 64)
!3606 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3603, file: !3456, line: 115, baseType: !1670, offset: 64)
!3607 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !3603, file: !3456, line: 116, baseType: !987, size: 32, offset: 64)
!3608 = !DIDerivedType(tag: DW_TAG_member, name: "wext_nlevents", scope: !2983, file: !2984, line: 162, baseType: !3609, size: 192, offset: 14784)
!3609 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sk_buff_head", file: !417, line: 291, size: 192, elements: !3610)
!3610 = !{!3611, !3612, !3613, !3614}
!3611 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3609, file: !417, line: 293, baseType: !415, size: 64)
!3612 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3609, file: !417, line: 294, baseType: !415, size: 64, offset: 64)
!3613 = !DIDerivedType(tag: DW_TAG_member, name: "qlen", scope: !3609, file: !417, line: 296, baseType: !493, size: 32, offset: 128)
!3614 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3609, file: !417, line: 297, baseType: !1670, offset: 160)
!3615 = !DIDerivedType(tag: DW_TAG_member, name: "gen", scope: !2983, file: !2984, line: 164, baseType: !3616, size: 64, offset: 14976)
!3616 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3617, size: 64)
!3617 = !DICompositeType(tag: DW_TAG_structure_type, name: "net_generic", file: !2984, line: 47, flags: DIFlagFwdDecl)
!3618 = !DIDerivedType(tag: DW_TAG_member, name: "bpf", scope: !2983, file: !2984, line: 167, baseType: !3619, size: 512, offset: 15040)
!3619 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_bpf", file: !3620, line: 14, size: 512, elements: !3621)
!3620 = !DIFile(filename: "./include/net/netns/bpf.h", directory: "/home/lizy2001/genbc/linux")
!3621 = !{!3622, !3637, !3639}
!3622 = !DIDerivedType(tag: DW_TAG_member, name: "run_array", scope: !3619, file: !3620, line: 16, baseType: !3623, size: 128)
!3623 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3624, size: 128, elements: !2664)
!3624 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3625, size: 64)
!3625 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_prog_array", file: !65, line: 1037, size: 128, elements: !3626)
!3626 = !{!3627, !3628}
!3627 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !3625, file: !65, line: 1038, baseType: !299, size: 128, align: 64)
!3628 = !DIDerivedType(tag: DW_TAG_member, name: "items", scope: !3625, file: !65, line: 1039, baseType: !3629, offset: 128)
!3629 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3630, elements: !309)
!3630 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_prog_array_item", file: !65, line: 1032, size: 192, elements: !3631)
!3631 = !{!3632, !3633}
!3632 = !DIDerivedType(tag: DW_TAG_member, name: "prog", scope: !3630, file: !65, line: 1033, baseType: !1088, size: 64)
!3633 = !DIDerivedType(tag: DW_TAG_member, name: "cgroup_storage", scope: !3630, file: !65, line: 1034, baseType: !3634, size: 128, offset: 64)
!3634 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3635, size: 128, elements: !2664)
!3635 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3636, size: 64)
!3636 = !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_cgroup_storage", file: !65, line: 1034, flags: DIFlagFwdDecl)
!3637 = !DIDerivedType(tag: DW_TAG_member, name: "progs", scope: !3619, file: !3620, line: 17, baseType: !3638, size: 128, offset: 128)
!3638 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1088, size: 128, elements: !2664)
!3639 = !DIDerivedType(tag: DW_TAG_member, name: "links", scope: !3619, file: !3620, line: 18, baseType: !3640, size: 256, offset: 256)
!3640 = !DICompositeType(tag: DW_TAG_array_type, baseType: !284, size: 256, elements: !2664)
!3641 = !DIDerivedType(tag: DW_TAG_member, name: "net_cookie", scope: !2983, file: !2984, line: 174, baseType: !373, size: 64, offset: 15552)
!3642 = !DIDerivedType(tag: DW_TAG_member, name: "can", scope: !2983, file: !2984, line: 183, baseType: !3643, size: 1216, offset: 15616)
!3643 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_can", file: !3644, line: 15, size: 1216, elements: !3645)
!3644 = !DIFile(filename: "./include/net/netns/can.h", directory: "/home/lizy2001/genbc/linux")
!3645 = !{!3646, !3647, !3648, !3649, !3650, !3651, !3652, !3653, !3654, !3655, !3656, !3659, !3660, !3661, !3664, !3667}
!3646 = !DIDerivedType(tag: DW_TAG_member, name: "proc_dir", scope: !3643, file: !3644, line: 17, baseType: !3010, size: 64)
!3647 = !DIDerivedType(tag: DW_TAG_member, name: "pde_stats", scope: !3643, file: !3644, line: 18, baseType: !3010, size: 64, offset: 64)
!3648 = !DIDerivedType(tag: DW_TAG_member, name: "pde_reset_stats", scope: !3643, file: !3644, line: 19, baseType: !3010, size: 64, offset: 128)
!3649 = !DIDerivedType(tag: DW_TAG_member, name: "pde_rcvlist_all", scope: !3643, file: !3644, line: 20, baseType: !3010, size: 64, offset: 192)
!3650 = !DIDerivedType(tag: DW_TAG_member, name: "pde_rcvlist_fil", scope: !3643, file: !3644, line: 21, baseType: !3010, size: 64, offset: 256)
!3651 = !DIDerivedType(tag: DW_TAG_member, name: "pde_rcvlist_inv", scope: !3643, file: !3644, line: 22, baseType: !3010, size: 64, offset: 320)
!3652 = !DIDerivedType(tag: DW_TAG_member, name: "pde_rcvlist_sff", scope: !3643, file: !3644, line: 23, baseType: !3010, size: 64, offset: 384)
!3653 = !DIDerivedType(tag: DW_TAG_member, name: "pde_rcvlist_eff", scope: !3643, file: !3644, line: 24, baseType: !3010, size: 64, offset: 448)
!3654 = !DIDerivedType(tag: DW_TAG_member, name: "pde_rcvlist_err", scope: !3643, file: !3644, line: 25, baseType: !3010, size: 64, offset: 512)
!3655 = !DIDerivedType(tag: DW_TAG_member, name: "bcmproc_dir", scope: !3643, file: !3644, line: 26, baseType: !3010, size: 64, offset: 576)
!3656 = !DIDerivedType(tag: DW_TAG_member, name: "rx_alldev_list", scope: !3643, file: !3644, line: 30, baseType: !3657, size: 64, offset: 640)
!3657 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3658, size: 64)
!3658 = !DICompositeType(tag: DW_TAG_structure_type, name: "can_dev_rcv_lists", file: !3644, line: 11, flags: DIFlagFwdDecl)
!3659 = !DIDerivedType(tag: DW_TAG_member, name: "rcvlists_lock", scope: !3643, file: !3644, line: 31, baseType: !1670, offset: 704)
!3660 = !DIDerivedType(tag: DW_TAG_member, name: "stattimer", scope: !3643, file: !3644, line: 32, baseType: !3234, size: 320, offset: 704)
!3661 = !DIDerivedType(tag: DW_TAG_member, name: "pkg_stats", scope: !3643, file: !3644, line: 33, baseType: !3662, size: 64, offset: 1024)
!3662 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3663, size: 64)
!3663 = !DICompositeType(tag: DW_TAG_structure_type, name: "can_pkg_stats", file: !3644, line: 12, flags: DIFlagFwdDecl)
!3664 = !DIDerivedType(tag: DW_TAG_member, name: "rcv_lists_stats", scope: !3643, file: !3644, line: 34, baseType: !3665, size: 64, offset: 1088)
!3665 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3666, size: 64)
!3666 = !DICompositeType(tag: DW_TAG_structure_type, name: "can_rcv_lists_stats", file: !3644, line: 13, flags: DIFlagFwdDecl)
!3667 = !DIDerivedType(tag: DW_TAG_member, name: "cgw_list", scope: !3643, file: !3644, line: 37, baseType: !1581, size: 64, offset: 1152)
!3668 = !DIDerivedType(tag: DW_TAG_member, name: "diag_nlsk", scope: !2983, file: !2984, line: 191, baseType: !445, size: 64, offset: 16832)
!3669 = !DIDerivedType(tag: DW_TAG_member, name: "time_ns", scope: !2967, file: !2968, line: 38, baseType: !3670, size: 64, offset: 384)
!3670 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3671, size: 64)
!3671 = !DICompositeType(tag: DW_TAG_structure_type, name: "time_namespace", file: !2968, line: 38, flags: DIFlagFwdDecl)
!3672 = !DIDerivedType(tag: DW_TAG_member, name: "time_ns_for_children", scope: !2967, file: !2968, line: 39, baseType: !3670, size: 64, offset: 448)
!3673 = !DIDerivedType(tag: DW_TAG_member, name: "cgroup_ns", scope: !2967, file: !2968, line: 40, baseType: !3674, size: 64, offset: 512)
!3674 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3675, size: 64)
!3675 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cgroup_namespace", file: !3676, line: 856, size: 448, elements: !3677)
!3676 = !DIFile(filename: "./include/linux/cgroup.h", directory: "/home/lizy2001/genbc/linux")
!3677 = !{!3678, !3679, !3680, !3681, !3682}
!3678 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3675, file: !3676, line: 857, baseType: !568, size: 32)
!3679 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !3675, file: !3676, line: 858, baseType: !2815, size: 192, offset: 64)
!3680 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !3675, file: !3676, line: 859, baseType: !2781, size: 64, offset: 256)
!3681 = !DIDerivedType(tag: DW_TAG_member, name: "ucounts", scope: !3675, file: !3676, line: 860, baseType: !2923, size: 64, offset: 320)
!3682 = !DIDerivedType(tag: DW_TAG_member, name: "root_cset", scope: !3675, file: !3676, line: 861, baseType: !3683, size: 64, offset: 384)
!3683 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3684, size: 64)
!3684 = !DICompositeType(tag: DW_TAG_structure_type, name: "css_set", file: !3685, line: 16, flags: DIFlagFwdDecl)
!3685 = !DIFile(filename: "./include/linux/sched/task.h", directory: "/home/lizy2001/genbc/linux")
!3686 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !2327, file: !2328, line: 969, baseType: !3687, size: 64, offset: 9216)
!3687 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3688, size: 64)
!3688 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "signal_struct", file: !3689, line: 82, size: 7296, elements: !3690)
!3689 = !DIFile(filename: "./include/linux/sched/signal.h", directory: "/home/lizy2001/genbc/linux")
!3690 = !{!3691, !3692, !3693, !3694, !3695, !3696, !3697, !3708, !3709, !3710, !3711, !3712, !3713, !3714, !3715, !3716, !3717, !3718, !3719, !3720, !3726, !3735, !3736, !3738, !3739, !3740, !3743, !3744, !3745, !3746, !3747, !3748, !3749, !3750, !3751, !3752, !3753, !3754, !3755, !3756, !3757, !3758, !3759, !3760, !3761, !3762, !3763, !3764, !3765, !3768, !3769, !3776, !3777, !3778, !3779, !3780, !3781}
!3691 = !DIDerivedType(tag: DW_TAG_member, name: "sigcnt", scope: !3688, file: !3689, line: 83, baseType: !568, size: 32)
!3692 = !DIDerivedType(tag: DW_TAG_member, name: "live", scope: !3688, file: !3689, line: 84, baseType: !383, size: 32, offset: 32)
!3693 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !3688, file: !3689, line: 85, baseType: !32, size: 32, offset: 64)
!3694 = !DIDerivedType(tag: DW_TAG_member, name: "thread_head", scope: !3688, file: !3689, line: 86, baseType: !284, size: 128, offset: 128)
!3695 = !DIDerivedType(tag: DW_TAG_member, name: "wait_chldexit", scope: !3688, file: !3689, line: 88, baseType: !1889, size: 128, offset: 256)
!3696 = !DIDerivedType(tag: DW_TAG_member, name: "curr_target", scope: !3688, file: !3689, line: 91, baseType: !2326, size: 64, offset: 384)
!3697 = !DIDerivedType(tag: DW_TAG_member, name: "shared_pending", scope: !3688, file: !3689, line: 94, baseType: !3698, size: 192, offset: 448)
!3698 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigpending", file: !3699, line: 30, size: 192, elements: !3700)
!3699 = !DIFile(filename: "./include/linux/signal_types.h", directory: "/home/lizy2001/genbc/linux")
!3700 = !{!3701, !3702}
!3701 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3698, file: !3699, line: 31, baseType: !284, size: 128)
!3702 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !3698, file: !3699, line: 32, baseType: !3703, size: 64, offset: 128)
!3703 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigset_t", file: !3704, line: 25, baseType: !3705)
!3704 = !DIFile(filename: "./arch/x86/include/asm/signal.h", directory: "/home/lizy2001/genbc/linux")
!3705 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3704, line: 23, size: 64, elements: !3706)
!3706 = !{!3707}
!3707 = !DIDerivedType(tag: DW_TAG_member, name: "sig", scope: !3705, file: !3704, line: 24, baseType: !2471, size: 64)
!3708 = !DIDerivedType(tag: DW_TAG_member, name: "multiprocess", scope: !3688, file: !3689, line: 97, baseType: !1581, size: 64, offset: 640)
!3709 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_code", scope: !3688, file: !3689, line: 100, baseType: !32, size: 32, offset: 704)
!3710 = !DIDerivedType(tag: DW_TAG_member, name: "notify_count", scope: !3688, file: !3689, line: 106, baseType: !32, size: 32, offset: 736)
!3711 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_task", scope: !3688, file: !3689, line: 107, baseType: !2326, size: 64, offset: 768)
!3712 = !DIDerivedType(tag: DW_TAG_member, name: "group_stop_count", scope: !3688, file: !3689, line: 110, baseType: !32, size: 32, offset: 832)
!3713 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3688, file: !3689, line: 111, baseType: !7, size: 32, offset: 864)
!3714 = !DIDerivedType(tag: DW_TAG_member, name: "is_child_subreaper", scope: !3688, file: !3689, line: 122, baseType: !7, size: 1, offset: 896, flags: DIFlagBitField, extraData: i64 896)
!3715 = !DIDerivedType(tag: DW_TAG_member, name: "has_child_subreaper", scope: !3688, file: !3689, line: 123, baseType: !7, size: 1, offset: 897, flags: DIFlagBitField, extraData: i64 896)
!3716 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timer_id", scope: !3688, file: !3689, line: 128, baseType: !32, size: 32, offset: 928)
!3717 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timers", scope: !3688, file: !3689, line: 129, baseType: !284, size: 128, offset: 960)
!3718 = !DIDerivedType(tag: DW_TAG_member, name: "real_timer", scope: !3688, file: !3689, line: 132, baseType: !2397, size: 512, offset: 1088)
!3719 = !DIDerivedType(tag: DW_TAG_member, name: "it_real_incr", scope: !3688, file: !3689, line: 133, baseType: !453, size: 64, offset: 1600)
!3720 = !DIDerivedType(tag: DW_TAG_member, name: "it", scope: !3688, file: !3689, line: 140, baseType: !3721, size: 256, offset: 1664)
!3721 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3722, size: 256, elements: !2664)
!3722 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpu_itimer", file: !3689, line: 38, size: 128, elements: !3723)
!3723 = !{!3724, !3725}
!3724 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !3722, file: !3689, line: 39, baseType: !331, size: 64)
!3725 = !DIDerivedType(tag: DW_TAG_member, name: "incr", scope: !3722, file: !3689, line: 40, baseType: !331, size: 64, offset: 64)
!3726 = !DIDerivedType(tag: DW_TAG_member, name: "cputimer", scope: !3688, file: !3689, line: 146, baseType: !3727, size: 192, offset: 1920)
!3727 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_group_cputimer", file: !3689, line: 66, size: 192, elements: !3728)
!3728 = !{!3729}
!3729 = !DIDerivedType(tag: DW_TAG_member, name: "cputime_atomic", scope: !3727, file: !3689, line: 67, baseType: !3730, size: 192)
!3730 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_cputime_atomic", file: !3689, line: 47, size: 192, elements: !3731)
!3731 = !{!3732, !3733, !3734}
!3732 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !3730, file: !3689, line: 48, baseType: !373, size: 64)
!3733 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !3730, file: !3689, line: 49, baseType: !373, size: 64, offset: 64)
!3734 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !3730, file: !3689, line: 50, baseType: !373, size: 64, offset: 128)
!3735 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !3688, file: !3689, line: 150, baseType: !2625, size: 640, offset: 2112)
!3736 = !DIDerivedType(tag: DW_TAG_member, name: "pids", scope: !3688, file: !3689, line: 153, baseType: !3737, size: 256, offset: 2752)
!3737 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2571, size: 256, elements: !2272)
!3738 = !DIDerivedType(tag: DW_TAG_member, name: "tty_old_pgrp", scope: !3688, file: !3689, line: 159, baseType: !2571, size: 64, offset: 3008)
!3739 = !DIDerivedType(tag: DW_TAG_member, name: "leader", scope: !3688, file: !3689, line: 162, baseType: !32, size: 32, offset: 3072)
!3740 = !DIDerivedType(tag: DW_TAG_member, name: "tty", scope: !3688, file: !3689, line: 164, baseType: !3741, size: 64, offset: 3136)
!3741 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3742, size: 64)
!3742 = !DICompositeType(tag: DW_TAG_structure_type, name: "tty_struct", file: !3689, line: 164, flags: DIFlagFwdDecl)
!3743 = !DIDerivedType(tag: DW_TAG_member, name: "stats_lock", scope: !3688, file: !3689, line: 175, baseType: !3324, size: 32, offset: 3200)
!3744 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !3688, file: !3689, line: 176, baseType: !331, size: 64, offset: 3264)
!3745 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !3688, file: !3689, line: 176, baseType: !331, size: 64, offset: 3328)
!3746 = !DIDerivedType(tag: DW_TAG_member, name: "cutime", scope: !3688, file: !3689, line: 176, baseType: !331, size: 64, offset: 3392)
!3747 = !DIDerivedType(tag: DW_TAG_member, name: "cstime", scope: !3688, file: !3689, line: 176, baseType: !331, size: 64, offset: 3456)
!3748 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !3688, file: !3689, line: 177, baseType: !331, size: 64, offset: 3520)
!3749 = !DIDerivedType(tag: DW_TAG_member, name: "cgtime", scope: !3688, file: !3689, line: 178, baseType: !331, size: 64, offset: 3584)
!3750 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !3688, file: !3689, line: 179, baseType: !2613, size: 128, offset: 3648)
!3751 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !3688, file: !3689, line: 180, baseType: !312, size: 64, offset: 3776)
!3752 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !3688, file: !3689, line: 180, baseType: !312, size: 64, offset: 3840)
!3753 = !DIDerivedType(tag: DW_TAG_member, name: "cnvcsw", scope: !3688, file: !3689, line: 180, baseType: !312, size: 64, offset: 3904)
!3754 = !DIDerivedType(tag: DW_TAG_member, name: "cnivcsw", scope: !3688, file: !3689, line: 180, baseType: !312, size: 64, offset: 3968)
!3755 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !3688, file: !3689, line: 181, baseType: !312, size: 64, offset: 4032)
!3756 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !3688, file: !3689, line: 181, baseType: !312, size: 64, offset: 4096)
!3757 = !DIDerivedType(tag: DW_TAG_member, name: "cmin_flt", scope: !3688, file: !3689, line: 181, baseType: !312, size: 64, offset: 4160)
!3758 = !DIDerivedType(tag: DW_TAG_member, name: "cmaj_flt", scope: !3688, file: !3689, line: 181, baseType: !312, size: 64, offset: 4224)
!3759 = !DIDerivedType(tag: DW_TAG_member, name: "inblock", scope: !3688, file: !3689, line: 182, baseType: !312, size: 64, offset: 4288)
!3760 = !DIDerivedType(tag: DW_TAG_member, name: "oublock", scope: !3688, file: !3689, line: 182, baseType: !312, size: 64, offset: 4352)
!3761 = !DIDerivedType(tag: DW_TAG_member, name: "cinblock", scope: !3688, file: !3689, line: 182, baseType: !312, size: 64, offset: 4416)
!3762 = !DIDerivedType(tag: DW_TAG_member, name: "coublock", scope: !3688, file: !3689, line: 182, baseType: !312, size: 64, offset: 4480)
!3763 = !DIDerivedType(tag: DW_TAG_member, name: "maxrss", scope: !3688, file: !3689, line: 183, baseType: !312, size: 64, offset: 4544)
!3764 = !DIDerivedType(tag: DW_TAG_member, name: "cmaxrss", scope: !3688, file: !3689, line: 183, baseType: !312, size: 64, offset: 4608)
!3765 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !3688, file: !3689, line: 184, baseType: !3766, offset: 4672)
!3766 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_io_accounting", file: !3767, line: 12, elements: !1587)
!3767 = !DIFile(filename: "./include/linux/task_io_accounting.h", directory: "/home/lizy2001/genbc/linux")
!3768 = !DIDerivedType(tag: DW_TAG_member, name: "sum_sched_runtime", scope: !3688, file: !3689, line: 192, baseType: !335, size: 64, offset: 4672)
!3769 = !DIDerivedType(tag: DW_TAG_member, name: "rlim", scope: !3688, file: !3689, line: 203, baseType: !3770, size: 2048, offset: 4736)
!3770 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3771, size: 2048, elements: !269)
!3771 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rlimit", file: !3772, line: 43, size: 128, elements: !3773)
!3772 = !DIFile(filename: "./include/uapi/linux/resource.h", directory: "/home/lizy2001/genbc/linux")
!3773 = !{!3774, !3775}
!3774 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_cur", scope: !3771, file: !3772, line: 44, baseType: !1042, size: 64)
!3775 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_max", scope: !3771, file: !3772, line: 45, baseType: !1042, size: 64, offset: 64)
!3776 = !DIDerivedType(tag: DW_TAG_member, name: "oom_flag_origin", scope: !3688, file: !3689, line: 220, baseType: !771, size: 8, offset: 6784)
!3777 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj", scope: !3688, file: !3689, line: 221, baseType: !625, size: 16, offset: 6800)
!3778 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj_min", scope: !3688, file: !3689, line: 222, baseType: !625, size: 16, offset: 6816)
!3779 = !DIDerivedType(tag: DW_TAG_member, name: "oom_mm", scope: !3688, file: !3689, line: 224, baseType: !2091, size: 64, offset: 6848)
!3780 = !DIDerivedType(tag: DW_TAG_member, name: "cred_guard_mutex", scope: !3688, file: !3689, line: 227, baseType: !1665, size: 192, offset: 6912)
!3781 = !DIDerivedType(tag: DW_TAG_member, name: "exec_update_mutex", scope: !3688, file: !3689, line: 233, baseType: !1665, size: 192, offset: 7104)
!3782 = !DIDerivedType(tag: DW_TAG_member, name: "sighand", scope: !2327, file: !2328, line: 970, baseType: !3783, size: 64, offset: 9280)
!3783 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3784, size: 64)
!3784 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sighand_struct", file: !3689, line: 20, size: 16576, elements: !3785)
!3785 = !{!3786, !3787, !3788, !3789}
!3786 = !DIDerivedType(tag: DW_TAG_member, name: "siglock", scope: !3784, file: !3689, line: 21, baseType: !1670)
!3787 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3784, file: !3689, line: 22, baseType: !568, size: 32)
!3788 = !DIDerivedType(tag: DW_TAG_member, name: "signalfd_wqh", scope: !3784, file: !3689, line: 23, baseType: !1889, size: 128, offset: 64)
!3789 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !3784, file: !3689, line: 24, baseType: !3790, size: 16384, offset: 192)
!3790 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3791, size: 16384, elements: !3811)
!3791 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_sigaction", file: !3699, line: 49, size: 256, elements: !3792)
!3792 = !{!3793}
!3793 = !DIDerivedType(tag: DW_TAG_member, name: "sa", scope: !3791, file: !3699, line: 50, baseType: !3794, size: 256)
!3794 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigaction", file: !3699, line: 35, size: 256, elements: !3795)
!3795 = !{!3796, !3803, !3804, !3810}
!3796 = !DIDerivedType(tag: DW_TAG_member, name: "sa_handler", scope: !3794, file: !3699, line: 37, baseType: !3797, size: 64)
!3797 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sighandler_t", file: !3798, line: 19, baseType: !3799)
!3798 = !DIFile(filename: "./include/uapi/asm-generic/signal-defs.h", directory: "/home/lizy2001/genbc/linux")
!3799 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3800, size: 64)
!3800 = !DIDerivedType(tag: DW_TAG_typedef, name: "__signalfn_t", file: !3798, line: 18, baseType: !3801)
!3801 = !DISubroutineType(types: !3802)
!3802 = !{null, !32}
!3803 = !DIDerivedType(tag: DW_TAG_member, name: "sa_flags", scope: !3794, file: !3699, line: 38, baseType: !312, size: 64, offset: 64)
!3804 = !DIDerivedType(tag: DW_TAG_member, name: "sa_restorer", scope: !3794, file: !3699, line: 44, baseType: !3805, size: 64, offset: 128)
!3805 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sigrestore_t", file: !3798, line: 22, baseType: !3806)
!3806 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3807, size: 64)
!3807 = !DIDerivedType(tag: DW_TAG_typedef, name: "__restorefn_t", file: !3798, line: 21, baseType: !3808)
!3808 = !DISubroutineType(types: !3809)
!3809 = !{null}
!3810 = !DIDerivedType(tag: DW_TAG_member, name: "sa_mask", scope: !3794, file: !3699, line: 46, baseType: !3703, size: 64, offset: 192)
!3811 = !{!3812}
!3812 = !DISubrange(count: 64)
!3813 = !DIDerivedType(tag: DW_TAG_member, name: "blocked", scope: !2327, file: !2328, line: 971, baseType: !3703, size: 64, offset: 9344)
!3814 = !DIDerivedType(tag: DW_TAG_member, name: "real_blocked", scope: !2327, file: !2328, line: 972, baseType: !3703, size: 64, offset: 9408)
!3815 = !DIDerivedType(tag: DW_TAG_member, name: "saved_sigmask", scope: !2327, file: !2328, line: 974, baseType: !3703, size: 64, offset: 9472)
!3816 = !DIDerivedType(tag: DW_TAG_member, name: "pending", scope: !2327, file: !2328, line: 975, baseType: !3698, size: 192, offset: 9536)
!3817 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_sp", scope: !2327, file: !2328, line: 976, baseType: !312, size: 64, offset: 9728)
!3818 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_size", scope: !2327, file: !2328, line: 977, baseType: !1039, size: 64, offset: 9792)
!3819 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_flags", scope: !2327, file: !2328, line: 978, baseType: !7, size: 32, offset: 9856)
!3820 = !DIDerivedType(tag: DW_TAG_member, name: "task_works", scope: !2327, file: !2328, line: 980, baseType: !302, size: 64, offset: 9920)
!3821 = !DIDerivedType(tag: DW_TAG_member, name: "seccomp", scope: !2327, file: !2328, line: 989, baseType: !3822, size: 128, offset: 9984)
!3822 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp", file: !3823, line: 35, size: 128, elements: !3824)
!3823 = !DIFile(filename: "./include/linux/seccomp.h", directory: "/home/lizy2001/genbc/linux")
!3824 = !{!3825, !3826, !3827}
!3825 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !3822, file: !3823, line: 36, baseType: !32, size: 32)
!3826 = !DIDerivedType(tag: DW_TAG_member, name: "filter_count", scope: !3822, file: !3823, line: 37, baseType: !383, size: 32, offset: 32)
!3827 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !3822, file: !3823, line: 38, baseType: !3828, size: 64, offset: 64)
!3828 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3829, size: 64)
!3829 = !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp_filter", file: !3823, line: 23, flags: DIFlagFwdDecl)
!3830 = !DIDerivedType(tag: DW_TAG_member, name: "parent_exec_id", scope: !2327, file: !2328, line: 992, baseType: !331, size: 64, offset: 10112)
!3831 = !DIDerivedType(tag: DW_TAG_member, name: "self_exec_id", scope: !2327, file: !2328, line: 993, baseType: !331, size: 64, offset: 10176)
!3832 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_lock", scope: !2327, file: !2328, line: 996, baseType: !1670, offset: 10240)
!3833 = !DIDerivedType(tag: DW_TAG_member, name: "pi_lock", scope: !2327, file: !2328, line: 999, baseType: !1761, offset: 10240)
!3834 = !DIDerivedType(tag: DW_TAG_member, name: "wake_q", scope: !2327, file: !2328, line: 1001, baseType: !3835, size: 64, offset: 10240)
!3835 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wake_q_node", file: !2328, line: 636, size: 64, elements: !3836)
!3836 = !{!3837}
!3837 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3835, file: !2328, line: 637, baseType: !3838, size: 64)
!3838 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3835, size: 64)
!3839 = !DIDerivedType(tag: DW_TAG_member, name: "pi_waiters", scope: !2327, file: !2328, line: 1005, baseType: !1747, size: 128, offset: 10304)
!3840 = !DIDerivedType(tag: DW_TAG_member, name: "pi_top_task", scope: !2327, file: !2328, line: 1007, baseType: !2326, size: 64, offset: 10432)
!3841 = !DIDerivedType(tag: DW_TAG_member, name: "pi_blocked_on", scope: !2327, file: !2328, line: 1009, baseType: !3842, size: 64, offset: 10496)
!3842 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3843, size: 64)
!3843 = !DICompositeType(tag: DW_TAG_structure_type, name: "rt_mutex_waiter", file: !2328, line: 1009, flags: DIFlagFwdDecl)
!3844 = !DIDerivedType(tag: DW_TAG_member, name: "journal_info", scope: !2327, file: !2328, line: 1043, baseType: !591, size: 64, offset: 10560)
!3845 = !DIDerivedType(tag: DW_TAG_member, name: "bio_list", scope: !2327, file: !2328, line: 1046, baseType: !3846, size: 64, offset: 10624)
!3846 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3847, size: 64)
!3847 = !DICompositeType(tag: DW_TAG_structure_type, name: "bio_list", file: !2328, line: 41, flags: DIFlagFwdDecl)
!3848 = !DIDerivedType(tag: DW_TAG_member, name: "plug", scope: !2327, file: !2328, line: 1050, baseType: !3849, size: 64, offset: 10688)
!3849 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3850, size: 64)
!3850 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_plug", file: !2328, line: 42, flags: DIFlagFwdDecl)
!3851 = !DIDerivedType(tag: DW_TAG_member, name: "reclaim_state", scope: !2327, file: !2328, line: 1054, baseType: !3852, size: 64, offset: 10752)
!3852 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3853, size: 64)
!3853 = !DICompositeType(tag: DW_TAG_structure_type, name: "reclaim_state", file: !2328, line: 55, flags: DIFlagFwdDecl)
!3854 = !DIDerivedType(tag: DW_TAG_member, name: "backing_dev_info", scope: !2327, file: !2328, line: 1056, baseType: !3855, size: 64, offset: 10816)
!3855 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3856, size: 64)
!3856 = !DICompositeType(tag: DW_TAG_structure_type, name: "backing_dev_info", file: !2328, line: 40, flags: DIFlagFwdDecl)
!3857 = !DIDerivedType(tag: DW_TAG_member, name: "io_context", scope: !2327, file: !2328, line: 1058, baseType: !3858, size: 64, offset: 10880)
!3858 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3859, size: 64)
!3859 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_context", file: !3860, line: 99, size: 704, elements: !3861)
!3860 = !DIFile(filename: "./include/linux/iocontext.h", directory: "/home/lizy2001/genbc/linux")
!3861 = !{!3862, !3863, !3864, !3865, !3866, !3867, !3868, !3887, !3888}
!3862 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !3859, file: !3860, line: 100, baseType: !371, size: 64)
!3863 = !DIDerivedType(tag: DW_TAG_member, name: "active_ref", scope: !3859, file: !3860, line: 101, baseType: !383, size: 32, offset: 64)
!3864 = !DIDerivedType(tag: DW_TAG_member, name: "nr_tasks", scope: !3859, file: !3860, line: 102, baseType: !383, size: 32, offset: 96)
!3865 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3859, file: !3860, line: 105, baseType: !1670, offset: 128)
!3866 = !DIDerivedType(tag: DW_TAG_member, name: "ioprio", scope: !3859, file: !3860, line: 107, baseType: !476, size: 16, offset: 128)
!3867 = !DIDerivedType(tag: DW_TAG_member, name: "icq_tree", scope: !3859, file: !3860, line: 109, baseType: !1737, size: 128, offset: 192)
!3868 = !DIDerivedType(tag: DW_TAG_member, name: "icq_hint", scope: !3859, file: !3860, line: 110, baseType: !3869, size: 64, offset: 320)
!3869 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3870, size: 64)
!3870 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_cq", file: !3860, line: 73, size: 448, elements: !3871)
!3871 = !{!3872, !3875, !3876, !3881, !3886}
!3872 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !3870, file: !3860, line: 74, baseType: !3873, size: 64)
!3873 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3874, size: 64)
!3874 = !DICompositeType(tag: DW_TAG_structure_type, name: "request_queue", file: !3860, line: 74, flags: DIFlagFwdDecl)
!3875 = !DIDerivedType(tag: DW_TAG_member, name: "ioc", scope: !3870, file: !3860, line: 75, baseType: !3858, size: 64, offset: 64)
!3876 = !DIDerivedType(tag: DW_TAG_member, scope: !3870, file: !3860, line: 83, baseType: !3877, size: 128, offset: 128)
!3877 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3870, file: !3860, line: 83, size: 128, elements: !3878)
!3878 = !{!3879, !3880}
!3879 = !DIDerivedType(tag: DW_TAG_member, name: "q_node", scope: !3877, file: !3860, line: 84, baseType: !284, size: 128)
!3880 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_icq_cache", scope: !3877, file: !3860, line: 85, baseType: !2051, size: 64)
!3881 = !DIDerivedType(tag: DW_TAG_member, scope: !3870, file: !3860, line: 87, baseType: !3882, size: 128, offset: 256)
!3882 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3870, file: !3860, line: 87, size: 128, elements: !3883)
!3883 = !{!3884, !3885}
!3884 = !DIDerivedType(tag: DW_TAG_member, name: "ioc_node", scope: !3882, file: !3860, line: 88, baseType: !276, size: 128)
!3885 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_head", scope: !3882, file: !3860, line: 89, baseType: !299, size: 128, align: 64)
!3886 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3870, file: !3860, line: 92, baseType: !7, size: 32, offset: 384)
!3887 = !DIDerivedType(tag: DW_TAG_member, name: "icq_list", scope: !3859, file: !3860, line: 111, baseType: !1581, size: 64, offset: 384)
!3888 = !DIDerivedType(tag: DW_TAG_member, name: "release_work", scope: !3859, file: !3860, line: 113, baseType: !2829, size: 256, offset: 448)
!3889 = !DIDerivedType(tag: DW_TAG_member, name: "capture_control", scope: !2327, file: !2328, line: 1061, baseType: !3890, size: 64, offset: 10944)
!3890 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3891, size: 64)
!3891 = !DICompositeType(tag: DW_TAG_structure_type, name: "capture_control", file: !2328, line: 43, flags: DIFlagFwdDecl)
!3892 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_message", scope: !2327, file: !2328, line: 1064, baseType: !312, size: 64, offset: 11008)
!3893 = !DIDerivedType(tag: DW_TAG_member, name: "last_siginfo", scope: !2327, file: !2328, line: 1065, baseType: !3894, size: 64, offset: 11072)
!3894 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3895, size: 64)
!3895 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_siginfo_t", file: !3699, line: 14, baseType: !3896)
!3896 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_siginfo", file: !3699, line: 12, size: 384, elements: !3897)
!3897 = !{!3898}
!3898 = !DIDerivedType(tag: DW_TAG_member, scope: !3896, file: !3699, line: 13, baseType: !3899, size: 384)
!3899 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3896, file: !3699, line: 13, size: 384, elements: !3900)
!3900 = !{!3901, !3902, !3903, !3904}
!3901 = !DIDerivedType(tag: DW_TAG_member, name: "si_signo", scope: !3899, file: !3699, line: 13, baseType: !32, size: 32)
!3902 = !DIDerivedType(tag: DW_TAG_member, name: "si_errno", scope: !3899, file: !3699, line: 13, baseType: !32, size: 32, offset: 32)
!3903 = !DIDerivedType(tag: DW_TAG_member, name: "si_code", scope: !3899, file: !3699, line: 13, baseType: !32, size: 32, offset: 64)
!3904 = !DIDerivedType(tag: DW_TAG_member, name: "_sifields", scope: !3899, file: !3699, line: 13, baseType: !3905, size: 256, offset: 128)
!3905 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "__sifields", file: !3906, line: 32, size: 256, elements: !3907)
!3906 = !DIFile(filename: "./include/uapi/asm-generic/siginfo.h", directory: "/home/lizy2001/genbc/linux")
!3907 = !{!3908, !3913, !3926, !3932, !3941, !3961, !3966}
!3908 = !DIDerivedType(tag: DW_TAG_member, name: "_kill", scope: !3905, file: !3906, line: 37, baseType: !3909, size: 64)
!3909 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3905, file: !3906, line: 34, size: 64, elements: !3910)
!3910 = !{!3911, !3912}
!3911 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !3909, file: !3906, line: 35, baseType: !2560, size: 32)
!3912 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !3909, file: !3906, line: 36, baseType: !1388, size: 32, offset: 32)
!3913 = !DIDerivedType(tag: DW_TAG_member, name: "_timer", scope: !3905, file: !3906, line: 45, baseType: !3914, size: 192)
!3914 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3905, file: !3906, line: 40, size: 192, elements: !3915)
!3915 = !{!3916, !3918, !3919, !3925}
!3916 = !DIDerivedType(tag: DW_TAG_member, name: "_tid", scope: !3914, file: !3906, line: 41, baseType: !3917, size: 32)
!3917 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_timer_t", file: !1041, line: 95, baseType: !32)
!3918 = !DIDerivedType(tag: DW_TAG_member, name: "_overrun", scope: !3914, file: !3906, line: 42, baseType: !32, size: 32, offset: 32)
!3919 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !3914, file: !3906, line: 43, baseType: !3920, size: 64, offset: 64)
!3920 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigval_t", file: !3906, line: 11, baseType: !3921)
!3921 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "sigval", file: !3906, line: 8, size: 64, elements: !3922)
!3922 = !{!3923, !3924}
!3923 = !DIDerivedType(tag: DW_TAG_member, name: "sival_int", scope: !3921, file: !3906, line: 9, baseType: !32, size: 32)
!3924 = !DIDerivedType(tag: DW_TAG_member, name: "sival_ptr", scope: !3921, file: !3906, line: 10, baseType: !591, size: 64)
!3925 = !DIDerivedType(tag: DW_TAG_member, name: "_sys_private", scope: !3914, file: !3906, line: 44, baseType: !32, size: 32, offset: 128)
!3926 = !DIDerivedType(tag: DW_TAG_member, name: "_rt", scope: !3905, file: !3906, line: 52, baseType: !3927, size: 128)
!3927 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3905, file: !3906, line: 48, size: 128, elements: !3928)
!3928 = !{!3929, !3930, !3931}
!3929 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !3927, file: !3906, line: 49, baseType: !2560, size: 32)
!3930 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !3927, file: !3906, line: 50, baseType: !1388, size: 32, offset: 32)
!3931 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !3927, file: !3906, line: 51, baseType: !3920, size: 64, offset: 64)
!3932 = !DIDerivedType(tag: DW_TAG_member, name: "_sigchld", scope: !3905, file: !3906, line: 61, baseType: !3933, size: 256)
!3933 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3905, file: !3906, line: 55, size: 256, elements: !3934)
!3934 = !{!3935, !3936, !3937, !3938, !3940}
!3935 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !3933, file: !3906, line: 56, baseType: !2560, size: 32)
!3936 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !3933, file: !3906, line: 57, baseType: !1388, size: 32, offset: 32)
!3937 = !DIDerivedType(tag: DW_TAG_member, name: "_status", scope: !3933, file: !3906, line: 58, baseType: !32, size: 32, offset: 64)
!3938 = !DIDerivedType(tag: DW_TAG_member, name: "_utime", scope: !3933, file: !3906, line: 59, baseType: !3939, size: 64, offset: 128)
!3939 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clock_t", file: !1041, line: 94, baseType: !1523)
!3940 = !DIDerivedType(tag: DW_TAG_member, name: "_stime", scope: !3933, file: !3906, line: 60, baseType: !3939, size: 64, offset: 192)
!3941 = !DIDerivedType(tag: DW_TAG_member, name: "_sigfault", scope: !3905, file: !3906, line: 95, baseType: !3942, size: 256)
!3942 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3905, file: !3906, line: 64, size: 256, elements: !3943)
!3943 = !{!3944, !3945}
!3944 = !DIDerivedType(tag: DW_TAG_member, name: "_addr", scope: !3942, file: !3906, line: 65, baseType: !591, size: 64)
!3945 = !DIDerivedType(tag: DW_TAG_member, scope: !3942, file: !3906, line: 77, baseType: !3946, size: 192, offset: 64)
!3946 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3942, file: !3906, line: 77, size: 192, elements: !3947)
!3947 = !{!3948, !3949, !3956}
!3948 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_lsb", scope: !3946, file: !3906, line: 82, baseType: !625, size: 16)
!3949 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_bnd", scope: !3946, file: !3906, line: 88, baseType: !3950, size: 192)
!3950 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3946, file: !3906, line: 84, size: 192, elements: !3951)
!3951 = !{!3952, !3954, !3955}
!3952 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_bnd", scope: !3950, file: !3906, line: 85, baseType: !3953, size: 64)
!3953 = !DICompositeType(tag: DW_TAG_array_type, baseType: !268, size: 64, elements: !2433)
!3954 = !DIDerivedType(tag: DW_TAG_member, name: "_lower", scope: !3950, file: !3906, line: 86, baseType: !591, size: 64, offset: 64)
!3955 = !DIDerivedType(tag: DW_TAG_member, name: "_upper", scope: !3950, file: !3906, line: 87, baseType: !591, size: 64, offset: 128)
!3956 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_pkey", scope: !3946, file: !3906, line: 93, baseType: !3957, size: 96)
!3957 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3946, file: !3906, line: 90, size: 96, elements: !3958)
!3958 = !{!3959, !3960}
!3959 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_pkey", scope: !3957, file: !3906, line: 91, baseType: !3953, size: 64)
!3960 = !DIDerivedType(tag: DW_TAG_member, name: "_pkey", scope: !3957, file: !3906, line: 92, baseType: !493, size: 32, offset: 64)
!3961 = !DIDerivedType(tag: DW_TAG_member, name: "_sigpoll", scope: !3905, file: !3906, line: 101, baseType: !3962, size: 128)
!3962 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3905, file: !3906, line: 98, size: 128, elements: !3963)
!3963 = !{!3964, !3965}
!3964 = !DIDerivedType(tag: DW_TAG_member, name: "_band", scope: !3962, file: !3906, line: 99, baseType: !998, size: 64)
!3965 = !DIDerivedType(tag: DW_TAG_member, name: "_fd", scope: !3962, file: !3906, line: 100, baseType: !32, size: 32, offset: 64)
!3966 = !DIDerivedType(tag: DW_TAG_member, name: "_sigsys", scope: !3905, file: !3906, line: 108, baseType: !3967, size: 128)
!3967 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3905, file: !3906, line: 104, size: 128, elements: !3968)
!3968 = !{!3969, !3970, !3971}
!3969 = !DIDerivedType(tag: DW_TAG_member, name: "_call_addr", scope: !3967, file: !3906, line: 105, baseType: !591, size: 64)
!3970 = !DIDerivedType(tag: DW_TAG_member, name: "_syscall", scope: !3967, file: !3906, line: 106, baseType: !32, size: 32, offset: 64)
!3971 = !DIDerivedType(tag: DW_TAG_member, name: "_arch", scope: !3967, file: !3906, line: 107, baseType: !7, size: 32, offset: 96)
!3972 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !2327, file: !2328, line: 1067, baseType: !3766, offset: 11136)
!3973 = !DIDerivedType(tag: DW_TAG_member, name: "robust_list", scope: !2327, file: !2328, line: 1099, baseType: !3974, size: 64, offset: 11136)
!3974 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3975, size: 64)
!3975 = !DICompositeType(tag: DW_TAG_structure_type, name: "robust_list_head", file: !2328, line: 56, flags: DIFlagFwdDecl)
!3976 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_list", scope: !2327, file: !2328, line: 1103, baseType: !284, size: 128, offset: 11200)
!3977 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_cache", scope: !2327, file: !2328, line: 1104, baseType: !3978, size: 64, offset: 11328)
!3978 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3979, size: 64)
!3979 = !DICompositeType(tag: DW_TAG_structure_type, name: "futex_pi_state", file: !2328, line: 46, flags: DIFlagFwdDecl)
!3980 = !DIDerivedType(tag: DW_TAG_member, name: "futex_exit_mutex", scope: !2327, file: !2328, line: 1105, baseType: !1665, size: 192, offset: 11392)
!3981 = !DIDerivedType(tag: DW_TAG_member, name: "futex_state", scope: !2327, file: !2328, line: 1106, baseType: !7, size: 32, offset: 11584)
!3982 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_ctxp", scope: !2327, file: !2328, line: 1109, baseType: !3983, size: 128, offset: 11648)
!3983 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3984, size: 128, elements: !2664)
!3984 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3985, size: 64)
!3985 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event_context", file: !2328, line: 51, flags: DIFlagFwdDecl)
!3986 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_mutex", scope: !2327, file: !2328, line: 1110, baseType: !1665, size: 192, offset: 11776)
!3987 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_list", scope: !2327, file: !2328, line: 1111, baseType: !284, size: 128, offset: 11968)
!3988 = !DIDerivedType(tag: DW_TAG_member, name: "rseq", scope: !2327, file: !2328, line: 1173, baseType: !3989, size: 64, offset: 12096)
!3989 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3990, size: 64)
!3990 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rseq", file: !3991, line: 62, size: 256, align: 256, elements: !3992)
!3991 = !DIFile(filename: "./include/uapi/linux/rseq.h", directory: "/home/lizy2001/genbc/linux")
!3992 = !{!3993, !3994, !3995, !4000}
!3993 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id_start", scope: !3990, file: !3991, line: 75, baseType: !493, size: 32)
!3994 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id", scope: !3990, file: !3991, line: 90, baseType: !493, size: 32, offset: 32)
!3995 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_cs", scope: !3990, file: !3991, line: 124, baseType: !3996, size: 64, offset: 64)
!3996 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3990, file: !3991, line: 109, size: 64, elements: !3997)
!3997 = !{!3998, !3999}
!3998 = !DIDerivedType(tag: DW_TAG_member, name: "ptr64", scope: !3996, file: !3991, line: 110, baseType: !333, size: 64)
!3999 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !3996, file: !3991, line: 112, baseType: !333, size: 64)
!4000 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3990, file: !3991, line: 144, baseType: !493, size: 32, offset: 128)
!4001 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_sig", scope: !2327, file: !2328, line: 1174, baseType: !987, size: 32, offset: 12160)
!4002 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_event_mask", scope: !2327, file: !2328, line: 1179, baseType: !312, size: 64, offset: 12224)
!4003 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_ubc", scope: !2327, file: !2328, line: 1182, baseType: !4004, size: 128, offset: 12288)
!4004 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tlbflush_unmap_batch", file: !2268, line: 76, size: 128, elements: !4005)
!4005 = !{!4006, !4011, !4012}
!4006 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !4004, file: !2268, line: 85, baseType: !4007, size: 64)
!4007 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arch_tlbflush_unmap_batch", file: !4008, line: 7, size: 64, elements: !4009)
!4008 = !DIFile(filename: "./arch/x86/include/asm/tlbbatch.h", directory: "/home/lizy2001/genbc/linux")
!4009 = !{!4010}
!4010 = !DIDerivedType(tag: DW_TAG_member, name: "cpumask", scope: !4007, file: !4008, line: 12, baseType: !2468, size: 64)
!4011 = !DIDerivedType(tag: DW_TAG_member, name: "flush_required", scope: !4004, file: !2268, line: 88, baseType: !771, size: 8, offset: 64)
!4012 = !DIDerivedType(tag: DW_TAG_member, name: "writable", scope: !4004, file: !2268, line: 95, baseType: !771, size: 8, offset: 72)
!4013 = !DIDerivedType(tag: DW_TAG_member, scope: !2327, file: !2328, line: 1184, baseType: !4014, size: 128, offset: 12416)
!4014 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2327, file: !2328, line: 1184, size: 128, elements: !4015)
!4015 = !{!4016, !4017}
!4016 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_users", scope: !4014, file: !2328, line: 1185, baseType: !568, size: 32)
!4017 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !4014, file: !2328, line: 1186, baseType: !299, size: 128, align: 64)
!4018 = !DIDerivedType(tag: DW_TAG_member, name: "splice_pipe", scope: !2327, file: !2328, line: 1190, baseType: !1883, size: 64, offset: 12544)
!4019 = !DIDerivedType(tag: DW_TAG_member, name: "task_frag", scope: !2327, file: !2328, line: 1192, baseType: !4020, size: 128, offset: 12608)
!4020 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page_frag", file: !2268, line: 64, size: 128, elements: !4021)
!4021 = !{!4022, !4023, !4024}
!4022 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !4020, file: !2268, line: 65, baseType: !1719, size: 64)
!4023 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !4020, file: !2268, line: 67, baseType: !493, size: 32, offset: 64)
!4024 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4020, file: !2268, line: 68, baseType: !493, size: 32, offset: 96)
!4025 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied", scope: !2327, file: !2328, line: 1206, baseType: !32, size: 32, offset: 12736)
!4026 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied_pause", scope: !2327, file: !2328, line: 1207, baseType: !32, size: 32, offset: 12768)
!4027 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_paused_when", scope: !2327, file: !2328, line: 1209, baseType: !312, size: 64, offset: 12800)
!4028 = !DIDerivedType(tag: DW_TAG_member, name: "timer_slack_ns", scope: !2327, file: !2328, line: 1219, baseType: !331, size: 64, offset: 12864)
!4029 = !DIDerivedType(tag: DW_TAG_member, name: "default_timer_slack_ns", scope: !2327, file: !2328, line: 1220, baseType: !331, size: 64, offset: 12928)
!4030 = !DIDerivedType(tag: DW_TAG_member, name: "pagefault_disabled", scope: !2327, file: !2328, line: 1317, baseType: !32, size: 32, offset: 12992)
!4031 = !DIDerivedType(tag: DW_TAG_member, name: "oom_reaper_list", scope: !2327, file: !2328, line: 1319, baseType: !2326, size: 64, offset: 13056)
!4032 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm_area", scope: !2327, file: !2328, line: 1322, baseType: !4033, size: 64, offset: 13120)
!4033 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4034, size: 64)
!4034 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_struct", file: !4035, line: 56, size: 512, elements: !4036)
!4035 = !DIFile(filename: "./include/linux/vmalloc.h", directory: "/home/lizy2001/genbc/linux")
!4036 = !{!4037, !4038, !4039, !4040, !4041, !4042, !4043, !4045}
!4037 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4034, file: !4035, line: 57, baseType: !4033, size: 64)
!4038 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !4034, file: !4035, line: 58, baseType: !591, size: 64, offset: 64)
!4039 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4034, file: !4035, line: 59, baseType: !312, size: 64, offset: 128)
!4040 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4034, file: !4035, line: 60, baseType: !312, size: 64, offset: 192)
!4041 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !4034, file: !4035, line: 61, baseType: !1801, size: 64, offset: 256)
!4042 = !DIDerivedType(tag: DW_TAG_member, name: "nr_pages", scope: !4034, file: !4035, line: 62, baseType: !7, size: 32, offset: 320)
!4043 = !DIDerivedType(tag: DW_TAG_member, name: "phys_addr", scope: !4034, file: !4035, line: 63, baseType: !4044, size: 64, offset: 384)
!4044 = !DIDerivedType(tag: DW_TAG_typedef, name: "phys_addr_t", file: !277, line: 153, baseType: !331)
!4045 = !DIDerivedType(tag: DW_TAG_member, name: "caller", scope: !4034, file: !4035, line: 64, baseType: !3257, size: 64, offset: 448)
!4046 = !DIDerivedType(tag: DW_TAG_member, name: "stack_refcount", scope: !2327, file: !2328, line: 1326, baseType: !568, size: 32, offset: 13184)
!4047 = !DIDerivedType(tag: DW_TAG_member, name: "mce_vaddr", scope: !2327, file: !2328, line: 1342, baseType: !591, size: 64, offset: 13248)
!4048 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kflags", scope: !2327, file: !2328, line: 1343, baseType: !333, size: 64, offset: 13312)
!4049 = !DIDerivedType(tag: DW_TAG_member, name: "mce_addr", scope: !2327, file: !2328, line: 1344, baseType: !331, size: 64, offset: 13376)
!4050 = !DIDerivedType(tag: DW_TAG_member, name: "mce_ripv", scope: !2327, file: !2328, line: 1345, baseType: !333, size: 1, offset: 13440, flags: DIFlagBitField, extraData: i64 13440)
!4051 = !DIDerivedType(tag: DW_TAG_member, name: "mce_whole_page", scope: !2327, file: !2328, line: 1346, baseType: !333, size: 1, offset: 13441, flags: DIFlagBitField, extraData: i64 13440)
!4052 = !DIDerivedType(tag: DW_TAG_member, name: "__mce_reserved", scope: !2327, file: !2328, line: 1347, baseType: !333, size: 62, offset: 13442, flags: DIFlagBitField, extraData: i64 13440)
!4053 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kill_me", scope: !2327, file: !2328, line: 1348, baseType: !299, size: 128, align: 64, offset: 13504)
!4054 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !2327, file: !2328, line: 1358, baseType: !4055, size: 34816, offset: 13824)
!4055 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_struct", file: !4056, line: 485, size: 34816, elements: !4057)
!4056 = !DIFile(filename: "./arch/x86/include/asm/processor.h", directory: "/home/lizy2001/genbc/linux")
!4057 = !{!4058, !4076, !4077, !4078, !4079, !4080, !4081, !4082, !4083, !4087, !4088, !4089, !4090, !4091, !4092, !4095, !4096, !4097}
!4058 = !DIDerivedType(tag: DW_TAG_member, name: "tls_array", scope: !4055, file: !4056, line: 487, baseType: !4059, size: 192)
!4059 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4060, size: 192, elements: !1592)
!4060 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "desc_struct", file: !4061, line: 16, size: 64, elements: !4062)
!4061 = !DIFile(filename: "./arch/x86/include/asm/desc_defs.h", directory: "/home/lizy2001/genbc/linux")
!4062 = !{!4063, !4064, !4065, !4066, !4067, !4068, !4069, !4070, !4071, !4072, !4073, !4074, !4075}
!4063 = !DIDerivedType(tag: DW_TAG_member, name: "limit0", scope: !4060, file: !4061, line: 17, baseType: !581, size: 16)
!4064 = !DIDerivedType(tag: DW_TAG_member, name: "base0", scope: !4060, file: !4061, line: 18, baseType: !581, size: 16, offset: 16)
!4065 = !DIDerivedType(tag: DW_TAG_member, name: "base1", scope: !4060, file: !4061, line: 19, baseType: !581, size: 8, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!4066 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4060, file: !4061, line: 19, baseType: !581, size: 4, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!4067 = !DIDerivedType(tag: DW_TAG_member, name: "s", scope: !4060, file: !4061, line: 19, baseType: !581, size: 1, offset: 44, flags: DIFlagBitField, extraData: i64 32)
!4068 = !DIDerivedType(tag: DW_TAG_member, name: "dpl", scope: !4060, file: !4061, line: 19, baseType: !581, size: 2, offset: 45, flags: DIFlagBitField, extraData: i64 32)
!4069 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !4060, file: !4061, line: 19, baseType: !581, size: 1, offset: 47, flags: DIFlagBitField, extraData: i64 32)
!4070 = !DIDerivedType(tag: DW_TAG_member, name: "limit1", scope: !4060, file: !4061, line: 20, baseType: !581, size: 4, offset: 48, flags: DIFlagBitField, extraData: i64 32)
!4071 = !DIDerivedType(tag: DW_TAG_member, name: "avl", scope: !4060, file: !4061, line: 20, baseType: !581, size: 1, offset: 52, flags: DIFlagBitField, extraData: i64 32)
!4072 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !4060, file: !4061, line: 20, baseType: !581, size: 1, offset: 53, flags: DIFlagBitField, extraData: i64 32)
!4073 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !4060, file: !4061, line: 20, baseType: !581, size: 1, offset: 54, flags: DIFlagBitField, extraData: i64 32)
!4074 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !4060, file: !4061, line: 20, baseType: !581, size: 1, offset: 55, flags: DIFlagBitField, extraData: i64 32)
!4075 = !DIDerivedType(tag: DW_TAG_member, name: "base2", scope: !4060, file: !4061, line: 20, baseType: !581, size: 8, offset: 56, flags: DIFlagBitField, extraData: i64 32)
!4076 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !4055, file: !4056, line: 491, baseType: !312, size: 64, offset: 192)
!4077 = !DIDerivedType(tag: DW_TAG_member, name: "es", scope: !4055, file: !4056, line: 495, baseType: !476, size: 16, offset: 256)
!4078 = !DIDerivedType(tag: DW_TAG_member, name: "ds", scope: !4055, file: !4056, line: 496, baseType: !476, size: 16, offset: 272)
!4079 = !DIDerivedType(tag: DW_TAG_member, name: "fsindex", scope: !4055, file: !4056, line: 497, baseType: !476, size: 16, offset: 288)
!4080 = !DIDerivedType(tag: DW_TAG_member, name: "gsindex", scope: !4055, file: !4056, line: 498, baseType: !476, size: 16, offset: 304)
!4081 = !DIDerivedType(tag: DW_TAG_member, name: "fsbase", scope: !4055, file: !4056, line: 502, baseType: !312, size: 64, offset: 320)
!4082 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !4055, file: !4056, line: 503, baseType: !312, size: 64, offset: 384)
!4083 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_bps", scope: !4055, file: !4056, line: 514, baseType: !4084, size: 256, offset: 448)
!4084 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4085, size: 256, elements: !2272)
!4085 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4086, size: 64)
!4086 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event", file: !4056, line: 483, flags: DIFlagFwdDecl)
!4087 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_dr6", scope: !4055, file: !4056, line: 516, baseType: !312, size: 64, offset: 704)
!4088 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_dr7", scope: !4055, file: !4056, line: 518, baseType: !312, size: 64, offset: 768)
!4089 = !DIDerivedType(tag: DW_TAG_member, name: "cr2", scope: !4055, file: !4056, line: 520, baseType: !312, size: 64, offset: 832)
!4090 = !DIDerivedType(tag: DW_TAG_member, name: "trap_nr", scope: !4055, file: !4056, line: 521, baseType: !312, size: 64, offset: 896)
!4091 = !DIDerivedType(tag: DW_TAG_member, name: "error_code", scope: !4055, file: !4056, line: 522, baseType: !312, size: 64, offset: 960)
!4092 = !DIDerivedType(tag: DW_TAG_member, name: "io_bitmap", scope: !4055, file: !4056, line: 528, baseType: !4093, size: 64, offset: 1024)
!4093 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4094, size: 64)
!4094 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_bitmap", file: !4056, line: 10, flags: DIFlagFwdDecl)
!4095 = !DIDerivedType(tag: DW_TAG_member, name: "iopl_emul", scope: !4055, file: !4056, line: 535, baseType: !312, size: 64, offset: 1088)
!4096 = !DIDerivedType(tag: DW_TAG_member, name: "sig_on_uaccess_err", scope: !4055, file: !4056, line: 537, baseType: !7, size: 1, offset: 1152, flags: DIFlagBitField, extraData: i64 1152)
!4097 = !DIDerivedType(tag: DW_TAG_member, name: "fpu", scope: !4055, file: !4056, line: 540, baseType: !4098, size: 33280, offset: 1536)
!4098 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fpu", file: !4099, line: 317, size: 33280, elements: !4100)
!4099 = !DIFile(filename: "./arch/x86/include/asm/fpu/types.h", directory: "/home/lizy2001/genbc/linux")
!4100 = !{!4101, !4102, !4103}
!4101 = !DIDerivedType(tag: DW_TAG_member, name: "last_cpu", scope: !4098, file: !4099, line: 330, baseType: !7, size: 32)
!4102 = !DIDerivedType(tag: DW_TAG_member, name: "avx512_timestamp", scope: !4098, file: !4099, line: 337, baseType: !312, size: 64, offset: 64)
!4103 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !4098, file: !4099, line: 348, baseType: !4104, size: 32768, offset: 512)
!4104 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "fpregs_state", file: !4099, line: 304, size: 32768, elements: !4105)
!4105 = !{!4106, !4119, !4156, !4206, !4219}
!4106 = !DIDerivedType(tag: DW_TAG_member, name: "fsave", scope: !4104, file: !4099, line: 305, baseType: !4107, size: 896)
!4107 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fregs_state", file: !4099, line: 12, size: 896, elements: !4108)
!4108 = !{!4109, !4110, !4111, !4112, !4113, !4114, !4115, !4116, !4118}
!4109 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !4107, file: !4099, line: 13, baseType: !987, size: 32)
!4110 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !4107, file: !4099, line: 14, baseType: !987, size: 32, offset: 32)
!4111 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !4107, file: !4099, line: 15, baseType: !987, size: 32, offset: 64)
!4112 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !4107, file: !4099, line: 16, baseType: !987, size: 32, offset: 96)
!4113 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !4107, file: !4099, line: 17, baseType: !987, size: 32, offset: 128)
!4114 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !4107, file: !4099, line: 18, baseType: !987, size: 32, offset: 160)
!4115 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !4107, file: !4099, line: 19, baseType: !987, size: 32, offset: 192)
!4116 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !4107, file: !4099, line: 22, baseType: !4117, size: 640, offset: 224)
!4117 = !DICompositeType(tag: DW_TAG_array_type, baseType: !987, size: 640, elements: !900)
!4118 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !4107, file: !4099, line: 25, baseType: !987, size: 32, offset: 864)
!4119 = !DIDerivedType(tag: DW_TAG_member, name: "fxsave", scope: !4104, file: !4099, line: 306, baseType: !4120, size: 4096, align: 128)
!4120 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fxregs_state", file: !4099, line: 34, size: 4096, align: 128, elements: !4121)
!4121 = !{!4122, !4123, !4124, !4125, !4126, !4141, !4142, !4143, !4145, !4147, !4151}
!4122 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !4120, file: !4099, line: 35, baseType: !581, size: 16)
!4123 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !4120, file: !4099, line: 36, baseType: !581, size: 16, offset: 16)
!4124 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !4120, file: !4099, line: 37, baseType: !581, size: 16, offset: 32)
!4125 = !DIDerivedType(tag: DW_TAG_member, name: "fop", scope: !4120, file: !4099, line: 38, baseType: !581, size: 16, offset: 48)
!4126 = !DIDerivedType(tag: DW_TAG_member, scope: !4120, file: !4099, line: 39, baseType: !4127, size: 128, offset: 64)
!4127 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4120, file: !4099, line: 39, size: 128, elements: !4128)
!4128 = !{!4129, !4134}
!4129 = !DIDerivedType(tag: DW_TAG_member, scope: !4127, file: !4099, line: 40, baseType: !4130, size: 128)
!4130 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4127, file: !4099, line: 40, size: 128, elements: !4131)
!4131 = !{!4132, !4133}
!4132 = !DIDerivedType(tag: DW_TAG_member, name: "rip", scope: !4130, file: !4099, line: 41, baseType: !331, size: 64)
!4133 = !DIDerivedType(tag: DW_TAG_member, name: "rdp", scope: !4130, file: !4099, line: 42, baseType: !331, size: 64, offset: 64)
!4134 = !DIDerivedType(tag: DW_TAG_member, scope: !4127, file: !4099, line: 44, baseType: !4135, size: 128)
!4135 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4127, file: !4099, line: 44, size: 128, elements: !4136)
!4136 = !{!4137, !4138, !4139, !4140}
!4137 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !4135, file: !4099, line: 45, baseType: !987, size: 32)
!4138 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !4135, file: !4099, line: 46, baseType: !987, size: 32, offset: 32)
!4139 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !4135, file: !4099, line: 47, baseType: !987, size: 32, offset: 64)
!4140 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !4135, file: !4099, line: 48, baseType: !987, size: 32, offset: 96)
!4141 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr", scope: !4120, file: !4099, line: 51, baseType: !987, size: 32, offset: 192)
!4142 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr_mask", scope: !4120, file: !4099, line: 52, baseType: !987, size: 32, offset: 224)
!4143 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !4120, file: !4099, line: 55, baseType: !4144, size: 1024, offset: 256)
!4144 = !DICompositeType(tag: DW_TAG_array_type, baseType: !987, size: 1024, elements: !819)
!4145 = !DIDerivedType(tag: DW_TAG_member, name: "xmm_space", scope: !4120, file: !4099, line: 58, baseType: !4146, size: 2048, offset: 1280)
!4146 = !DICompositeType(tag: DW_TAG_array_type, baseType: !987, size: 2048, elements: !3811)
!4147 = !DIDerivedType(tag: DW_TAG_member, name: "padding", scope: !4120, file: !4099, line: 60, baseType: !4148, size: 384, offset: 3328)
!4148 = !DICompositeType(tag: DW_TAG_array_type, baseType: !987, size: 384, elements: !4149)
!4149 = !{!4150}
!4150 = !DISubrange(count: 12)
!4151 = !DIDerivedType(tag: DW_TAG_member, scope: !4120, file: !4099, line: 62, baseType: !4152, size: 384, offset: 3712)
!4152 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4120, file: !4099, line: 62, size: 384, elements: !4153)
!4153 = !{!4154, !4155}
!4154 = !DIDerivedType(tag: DW_TAG_member, name: "padding1", scope: !4152, file: !4099, line: 63, baseType: !4148, size: 384)
!4155 = !DIDerivedType(tag: DW_TAG_member, name: "sw_reserved", scope: !4152, file: !4099, line: 64, baseType: !4148, size: 384)
!4156 = !DIDerivedType(tag: DW_TAG_member, name: "soft", scope: !4104, file: !4099, line: 307, baseType: !4157, size: 1088)
!4157 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swregs_state", file: !4099, line: 79, size: 1088, elements: !4158)
!4158 = !{!4159, !4160, !4161, !4162, !4163, !4164, !4165, !4166, !4167, !4168, !4169, !4170, !4171, !4172, !4173, !4205}
!4159 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !4157, file: !4099, line: 80, baseType: !987, size: 32)
!4160 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !4157, file: !4099, line: 81, baseType: !987, size: 32, offset: 32)
!4161 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !4157, file: !4099, line: 82, baseType: !987, size: 32, offset: 64)
!4162 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !4157, file: !4099, line: 83, baseType: !987, size: 32, offset: 96)
!4163 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !4157, file: !4099, line: 84, baseType: !987, size: 32, offset: 128)
!4164 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !4157, file: !4099, line: 85, baseType: !987, size: 32, offset: 160)
!4165 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !4157, file: !4099, line: 86, baseType: !987, size: 32, offset: 192)
!4166 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !4157, file: !4099, line: 88, baseType: !4117, size: 640, offset: 224)
!4167 = !DIDerivedType(tag: DW_TAG_member, name: "ftop", scope: !4157, file: !4099, line: 89, baseType: !794, size: 8, offset: 864)
!4168 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !4157, file: !4099, line: 90, baseType: !794, size: 8, offset: 872)
!4169 = !DIDerivedType(tag: DW_TAG_member, name: "lookahead", scope: !4157, file: !4099, line: 91, baseType: !794, size: 8, offset: 880)
!4170 = !DIDerivedType(tag: DW_TAG_member, name: "no_update", scope: !4157, file: !4099, line: 92, baseType: !794, size: 8, offset: 888)
!4171 = !DIDerivedType(tag: DW_TAG_member, name: "rm", scope: !4157, file: !4099, line: 93, baseType: !794, size: 8, offset: 896)
!4172 = !DIDerivedType(tag: DW_TAG_member, name: "alimit", scope: !4157, file: !4099, line: 94, baseType: !794, size: 8, offset: 904)
!4173 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !4157, file: !4099, line: 95, baseType: !4174, size: 64, offset: 960)
!4174 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4175, size: 64)
!4175 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "math_emu_info", file: !4176, line: 11, size: 128, elements: !4177)
!4176 = !DIFile(filename: "./arch/x86/include/asm/math_emu.h", directory: "/home/lizy2001/genbc/linux")
!4177 = !{!4178, !4179}
!4178 = !DIDerivedType(tag: DW_TAG_member, name: "___orig_eip", scope: !4175, file: !4176, line: 12, baseType: !998, size: 64)
!4179 = !DIDerivedType(tag: DW_TAG_member, name: "regs", scope: !4175, file: !4176, line: 13, baseType: !4180, size: 64, offset: 64)
!4180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4181, size: 64)
!4181 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pt_regs", file: !4182, line: 56, size: 1344, elements: !4183)
!4182 = !DIFile(filename: "./arch/x86/include/asm/ptrace.h", directory: "/home/lizy2001/genbc/linux")
!4183 = !{!4184, !4185, !4186, !4187, !4188, !4189, !4190, !4191, !4192, !4193, !4194, !4195, !4196, !4197, !4198, !4199, !4200, !4201, !4202, !4203, !4204}
!4184 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !4181, file: !4182, line: 61, baseType: !312, size: 64)
!4185 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !4181, file: !4182, line: 62, baseType: !312, size: 64, offset: 64)
!4186 = !DIDerivedType(tag: DW_TAG_member, name: "r13", scope: !4181, file: !4182, line: 63, baseType: !312, size: 64, offset: 128)
!4187 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !4181, file: !4182, line: 64, baseType: !312, size: 64, offset: 192)
!4188 = !DIDerivedType(tag: DW_TAG_member, name: "bp", scope: !4181, file: !4182, line: 65, baseType: !312, size: 64, offset: 256)
!4189 = !DIDerivedType(tag: DW_TAG_member, name: "bx", scope: !4181, file: !4182, line: 66, baseType: !312, size: 64, offset: 320)
!4190 = !DIDerivedType(tag: DW_TAG_member, name: "r11", scope: !4181, file: !4182, line: 68, baseType: !312, size: 64, offset: 384)
!4191 = !DIDerivedType(tag: DW_TAG_member, name: "r10", scope: !4181, file: !4182, line: 69, baseType: !312, size: 64, offset: 448)
!4192 = !DIDerivedType(tag: DW_TAG_member, name: "r9", scope: !4181, file: !4182, line: 70, baseType: !312, size: 64, offset: 512)
!4193 = !DIDerivedType(tag: DW_TAG_member, name: "r8", scope: !4181, file: !4182, line: 71, baseType: !312, size: 64, offset: 576)
!4194 = !DIDerivedType(tag: DW_TAG_member, name: "ax", scope: !4181, file: !4182, line: 72, baseType: !312, size: 64, offset: 640)
!4195 = !DIDerivedType(tag: DW_TAG_member, name: "cx", scope: !4181, file: !4182, line: 73, baseType: !312, size: 64, offset: 704)
!4196 = !DIDerivedType(tag: DW_TAG_member, name: "dx", scope: !4181, file: !4182, line: 74, baseType: !312, size: 64, offset: 768)
!4197 = !DIDerivedType(tag: DW_TAG_member, name: "si", scope: !4181, file: !4182, line: 75, baseType: !312, size: 64, offset: 832)
!4198 = !DIDerivedType(tag: DW_TAG_member, name: "di", scope: !4181, file: !4182, line: 76, baseType: !312, size: 64, offset: 896)
!4199 = !DIDerivedType(tag: DW_TAG_member, name: "orig_ax", scope: !4181, file: !4182, line: 81, baseType: !312, size: 64, offset: 960)
!4200 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !4181, file: !4182, line: 83, baseType: !312, size: 64, offset: 1024)
!4201 = !DIDerivedType(tag: DW_TAG_member, name: "cs", scope: !4181, file: !4182, line: 84, baseType: !312, size: 64, offset: 1088)
!4202 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4181, file: !4182, line: 85, baseType: !312, size: 64, offset: 1152)
!4203 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !4181, file: !4182, line: 86, baseType: !312, size: 64, offset: 1216)
!4204 = !DIDerivedType(tag: DW_TAG_member, name: "ss", scope: !4181, file: !4182, line: 87, baseType: !312, size: 64, offset: 1280)
!4205 = !DIDerivedType(tag: DW_TAG_member, name: "entry_eip", scope: !4157, file: !4099, line: 96, baseType: !987, size: 32, offset: 1024)
!4206 = !DIDerivedType(tag: DW_TAG_member, name: "xsave", scope: !4104, file: !4099, line: 308, baseType: !4207, size: 4608, align: 512)
!4207 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xregs_state", file: !4099, line: 289, size: 4608, align: 512, elements: !4208)
!4208 = !{!4209, !4210, !4217}
!4209 = !DIDerivedType(tag: DW_TAG_member, name: "i387", scope: !4207, file: !4099, line: 290, baseType: !4120, size: 4096, align: 128)
!4210 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !4207, file: !4099, line: 291, baseType: !4211, size: 512, offset: 4096)
!4211 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xstate_header", file: !4099, line: 268, size: 512, elements: !4212)
!4212 = !{!4213, !4214, !4215}
!4213 = !DIDerivedType(tag: DW_TAG_member, name: "xfeatures", scope: !4211, file: !4099, line: 269, baseType: !331, size: 64)
!4214 = !DIDerivedType(tag: DW_TAG_member, name: "xcomp_bv", scope: !4211, file: !4099, line: 270, baseType: !331, size: 64, offset: 64)
!4215 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !4211, file: !4099, line: 271, baseType: !4216, size: 384, offset: 128)
!4216 = !DICompositeType(tag: DW_TAG_array_type, baseType: !331, size: 384, elements: !999)
!4217 = !DIDerivedType(tag: DW_TAG_member, name: "extended_state_area", scope: !4207, file: !4099, line: 292, baseType: !4218, offset: 4608)
!4218 = !DICompositeType(tag: DW_TAG_array_type, baseType: !794, elements: !483)
!4219 = !DIDerivedType(tag: DW_TAG_member, name: "__padding", scope: !4104, file: !4099, line: 309, baseType: !4220, size: 32768)
!4220 = !DICompositeType(tag: DW_TAG_array_type, baseType: !794, size: 32768, elements: !4221)
!4221 = !{!4222}
!4222 = !DISubrange(count: 4096)
!4223 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2323, file: !1721, line: 378, baseType: !4224, size: 64, offset: 64)
!4224 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2323, size: 64)
!4225 = !DIDerivedType(tag: DW_TAG_member, name: "startup", scope: !2319, file: !1721, line: 384, baseType: !2597, size: 192, offset: 192)
!4226 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_lock", scope: !2095, file: !1721, line: 500, baseType: !1670, offset: 6656)
!4227 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_table", scope: !2095, file: !1721, line: 501, baseType: !4228, size: 64, offset: 6656)
!4228 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4229, size: 64)
!4229 = !DICompositeType(tag: DW_TAG_structure_type, name: "kioctx_table", file: !1721, line: 387, flags: DIFlagFwdDecl)
!4230 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !2095, file: !1721, line: 516, baseType: !2781, size: 64, offset: 6720)
!4231 = !DIDerivedType(tag: DW_TAG_member, name: "exe_file", scope: !2095, file: !1721, line: 519, baseType: !1315, size: 64, offset: 6784)
!4232 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_subscriptions", scope: !2095, file: !1721, line: 521, baseType: !4233, size: 64, offset: 6848)
!4233 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4234, size: 64)
!4234 = !DICompositeType(tag: DW_TAG_structure_type, name: "mmu_notifier_subscriptions", file: !1721, line: 521, flags: DIFlagFwdDecl)
!4235 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_pending", scope: !2095, file: !1721, line: 545, baseType: !383, size: 32, offset: 6912)
!4236 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_batched", scope: !2095, file: !1721, line: 548, baseType: !771, size: 8, offset: 6944)
!4237 = !DIDerivedType(tag: DW_TAG_member, name: "uprobes_state", scope: !2095, file: !1721, line: 550, baseType: !4238, offset: 6952)
!4238 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uprobes_state", file: !4239, line: 142, elements: !1587)
!4239 = !DIFile(filename: "./include/linux/uprobes.h", directory: "/home/lizy2001/genbc/linux")
!4240 = !DIDerivedType(tag: DW_TAG_member, name: "async_put_work", scope: !2095, file: !1721, line: 554, baseType: !2829, size: 256, offset: 6976)
!4241 = !DIDerivedType(tag: DW_TAG_member, name: "pasid", scope: !2095, file: !1721, line: 557, baseType: !987, size: 32, offset: 7232)
!4242 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_bitmap", scope: !2092, file: !1721, line: 565, baseType: !4243, offset: 7296)
!4243 = !DICompositeType(tag: DW_TAG_array_type, baseType: !312, elements: !309)
!4244 = !DIDerivedType(tag: DW_TAG_member, name: "pt_frag_refcount", scope: !2088, file: !1721, line: 151, baseType: !383, size: 32)
!4245 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !2080, file: !1721, line: 156, baseType: !1670, offset: 256)
!4246 = !DIDerivedType(tag: DW_TAG_member, scope: !1725, file: !1721, line: 159, baseType: !4247, size: 128)
!4247 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1725, file: !1721, line: 159, size: 128, elements: !4248)
!4248 = !{!4249, !4320}
!4249 = !DIDerivedType(tag: DW_TAG_member, name: "pgmap", scope: !4247, file: !1721, line: 161, baseType: !4250, size: 64)
!4250 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4251, size: 64)
!4251 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pagemap", file: !4252, line: 110, size: 1152, elements: !4253)
!4252 = !DIFile(filename: "./include/linux/memremap.h", directory: "/home/lizy2001/genbc/linux")
!4253 = !{!4254, !4264, !4285, !4286, !4287, !4294, !4295, !4307, !4308, !4309}
!4254 = !DIDerivedType(tag: DW_TAG_member, name: "altmap", scope: !4251, file: !4252, line: 111, baseType: !4255, size: 384)
!4255 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vmem_altmap", file: !4252, line: 19, size: 384, elements: !4256)
!4256 = !{!4257, !4259, !4260, !4261, !4262, !4263}
!4257 = !DIDerivedType(tag: DW_TAG_member, name: "base_pfn", scope: !4255, file: !4252, line: 20, baseType: !4258, size: 64)
!4258 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !312)
!4259 = !DIDerivedType(tag: DW_TAG_member, name: "end_pfn", scope: !4255, file: !4252, line: 21, baseType: !4258, size: 64, offset: 64)
!4260 = !DIDerivedType(tag: DW_TAG_member, name: "reserve", scope: !4255, file: !4252, line: 22, baseType: !4258, size: 64, offset: 128)
!4261 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !4255, file: !4252, line: 23, baseType: !312, size: 64, offset: 192)
!4262 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !4255, file: !4252, line: 24, baseType: !312, size: 64, offset: 256)
!4263 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !4255, file: !4252, line: 25, baseType: !312, size: 64, offset: 320)
!4264 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !4251, file: !4252, line: 112, baseType: !4265, size: 64, offset: 384)
!4265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4266, size: 64)
!4266 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_ref", file: !4267, line: 105, size: 128, elements: !4268)
!4267 = !DIFile(filename: "./include/linux/percpu-refcount.h", directory: "/home/lizy2001/genbc/linux")
!4268 = !{!4269, !4270}
!4269 = !DIDerivedType(tag: DW_TAG_member, name: "percpu_count_ptr", scope: !4266, file: !4267, line: 110, baseType: !312, size: 64)
!4270 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !4266, file: !4267, line: 118, baseType: !4271, size: 64, offset: 64)
!4271 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4272, size: 64)
!4272 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_ref_data", file: !4267, line: 95, size: 448, elements: !4273)
!4273 = !{!4274, !4275, !4280, !4281, !4282, !4283, !4284}
!4274 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !4272, file: !4267, line: 96, baseType: !371, size: 64)
!4275 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !4272, file: !4267, line: 97, baseType: !4276, size: 64, offset: 64)
!4276 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4277, size: 64)
!4277 = !DIDerivedType(tag: DW_TAG_typedef, name: "percpu_ref_func_t", file: !4267, line: 60, baseType: !4278)
!4278 = !DISubroutineType(types: !4279)
!4279 = !{null, !4265}
!4280 = !DIDerivedType(tag: DW_TAG_member, name: "confirm_switch", scope: !4272, file: !4267, line: 98, baseType: !4276, size: 64, offset: 128)
!4281 = !DIDerivedType(tag: DW_TAG_member, name: "force_atomic", scope: !4272, file: !4267, line: 99, baseType: !771, size: 1, offset: 192, flags: DIFlagBitField, extraData: i64 192)
!4282 = !DIDerivedType(tag: DW_TAG_member, name: "allow_reinit", scope: !4272, file: !4267, line: 100, baseType: !771, size: 1, offset: 193, flags: DIFlagBitField, extraData: i64 192)
!4283 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !4272, file: !4267, line: 101, baseType: !299, size: 128, align: 64, offset: 256)
!4284 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !4272, file: !4267, line: 102, baseType: !4265, size: 64, offset: 384)
!4285 = !DIDerivedType(tag: DW_TAG_member, name: "internal_ref", scope: !4251, file: !4252, line: 113, baseType: !4266, size: 128, offset: 448)
!4286 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !4251, file: !4252, line: 114, baseType: !2597, size: 192, offset: 576)
!4287 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4251, file: !4252, line: 115, baseType: !4288, size: 32, offset: 768)
!4288 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "memory_type", file: !4252, line: 59, baseType: !7, size: 32, elements: !4289)
!4289 = !{!4290, !4291, !4292, !4293}
!4290 = !DIEnumerator(name: "MEMORY_DEVICE_PRIVATE", value: 1, isUnsigned: true)
!4291 = !DIEnumerator(name: "MEMORY_DEVICE_FS_DAX", value: 2, isUnsigned: true)
!4292 = !DIEnumerator(name: "MEMORY_DEVICE_GENERIC", value: 3, isUnsigned: true)
!4293 = !DIEnumerator(name: "MEMORY_DEVICE_PCI_P2PDMA", value: 4, isUnsigned: true)
!4294 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4251, file: !4252, line: 116, baseType: !7, size: 32, offset: 800)
!4295 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4251, file: !4252, line: 117, baseType: !4296, size: 64, offset: 832)
!4296 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4297, size: 64)
!4297 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4298)
!4298 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pagemap_ops", file: !4252, line: 67, size: 256, elements: !4299)
!4299 = !{!4300, !4301, !4305, !4306}
!4300 = !DIDerivedType(tag: DW_TAG_member, name: "page_free", scope: !4298, file: !4252, line: 73, baseType: !1821, size: 64)
!4301 = !DIDerivedType(tag: DW_TAG_member, name: "kill", scope: !4298, file: !4252, line: 78, baseType: !4302, size: 64, offset: 64)
!4302 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4303, size: 64)
!4303 = !DISubroutineType(types: !4304)
!4304 = !{null, !4250}
!4305 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !4298, file: !4252, line: 83, baseType: !4302, size: 64, offset: 128)
!4306 = !DIDerivedType(tag: DW_TAG_member, name: "migrate_to_ram", scope: !4298, file: !4252, line: 89, baseType: !2144, size: 64, offset: 192)
!4307 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4251, file: !4252, line: 118, baseType: !591, size: 64, offset: 896)
!4308 = !DIDerivedType(tag: DW_TAG_member, name: "nr_range", scope: !4251, file: !4252, line: 119, baseType: !32, size: 32, offset: 960)
!4309 = !DIDerivedType(tag: DW_TAG_member, scope: !4251, file: !4252, line: 120, baseType: !4310, size: 128, offset: 1024)
!4310 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4251, file: !4252, line: 120, size: 128, elements: !4311)
!4311 = !{!4312, !4318}
!4312 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !4310, file: !4252, line: 121, baseType: !4313, size: 128)
!4313 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "range", file: !4314, line: 6, size: 128, elements: !4315)
!4314 = !DIFile(filename: "./include/linux/range.h", directory: "/home/lizy2001/genbc/linux")
!4315 = !{!4316, !4317}
!4316 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !4313, file: !4314, line: 7, baseType: !331, size: 64)
!4317 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !4313, file: !4314, line: 8, baseType: !331, size: 64, offset: 64)
!4318 = !DIDerivedType(tag: DW_TAG_member, name: "ranges", scope: !4310, file: !4252, line: 122, baseType: !4319)
!4319 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4313, elements: !483)
!4320 = !DIDerivedType(tag: DW_TAG_member, name: "zone_device_data", scope: !4247, file: !1721, line: 162, baseType: !591, size: 64, offset: 64)
!4321 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !1725, file: !1721, line: 176, baseType: !299, size: 128, align: 64)
!4322 = !DIDerivedType(tag: DW_TAG_member, scope: !1720, file: !1721, line: 179, baseType: !4323, size: 32, offset: 384)
!4323 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1720, file: !1721, line: 179, size: 32, elements: !4324)
!4324 = !{!4325, !4326, !4327, !4328}
!4325 = !DIDerivedType(tag: DW_TAG_member, name: "_mapcount", scope: !4323, file: !1721, line: 184, baseType: !383, size: 32)
!4326 = !DIDerivedType(tag: DW_TAG_member, name: "page_type", scope: !4323, file: !1721, line: 192, baseType: !7, size: 32)
!4327 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !4323, file: !1721, line: 194, baseType: !7, size: 32)
!4328 = !DIDerivedType(tag: DW_TAG_member, name: "units", scope: !4323, file: !1721, line: 195, baseType: !32, size: 32)
!4329 = !DIDerivedType(tag: DW_TAG_member, name: "_refcount", scope: !1720, file: !1721, line: 199, baseType: !383, size: 32, offset: 416)
!4330 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cached_objects", scope: !1600, file: !1317, line: 1964, baseType: !4331, size: 64, offset: 1344)
!4331 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4332, size: 64)
!4332 = !DISubroutineType(types: !4333)
!4333 = !{!998, !1545, !4334}
!4334 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4335, size: 64)
!4335 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrink_control", file: !4336, line: 12, size: 256, elements: !4337)
!4336 = !DIFile(filename: "./include/linux/shrinker.h", directory: "/home/lizy2001/genbc/linux")
!4337 = !{!4338, !4339, !4340, !4341, !4342}
!4338 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !4335, file: !4336, line: 13, baseType: !1742, size: 32)
!4339 = !DIDerivedType(tag: DW_TAG_member, name: "nid", scope: !4335, file: !4336, line: 16, baseType: !32, size: 32, offset: 32)
!4340 = !DIDerivedType(tag: DW_TAG_member, name: "nr_to_scan", scope: !4335, file: !4336, line: 23, baseType: !312, size: 64, offset: 64)
!4341 = !DIDerivedType(tag: DW_TAG_member, name: "nr_scanned", scope: !4335, file: !4336, line: 30, baseType: !312, size: 64, offset: 128)
!4342 = !DIDerivedType(tag: DW_TAG_member, name: "memcg", scope: !4335, file: !4336, line: 33, baseType: !4343, size: 64, offset: 192)
!4343 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4344, size: 64)
!4344 = !DICompositeType(tag: DW_TAG_structure_type, name: "mem_cgroup", file: !1721, line: 27, flags: DIFlagFwdDecl)
!4345 = !DIDerivedType(tag: DW_TAG_member, name: "free_cached_objects", scope: !1600, file: !1317, line: 1966, baseType: !4331, size: 64, offset: 1408)
!4346 = !DIDerivedType(tag: DW_TAG_member, name: "dq_op", scope: !1546, file: !1317, line: 1424, baseType: !4347, size: 64, offset: 448)
!4347 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4348, size: 64)
!4348 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4349)
!4349 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot_operations", file: !4350, line: 322, size: 704, elements: !4351)
!4350 = !DIFile(filename: "./include/linux/quota.h", directory: "/home/lizy2001/genbc/linux")
!4351 = !{!4352, !4403, !4407, !4411, !4412, !4413, !4414, !4415, !4420, !4425, !4429}
!4352 = !DIDerivedType(tag: DW_TAG_member, name: "write_dquot", scope: !4349, file: !4350, line: 323, baseType: !4353, size: 64)
!4353 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4354, size: 64)
!4354 = !DISubroutineType(types: !4355)
!4355 = !{!32, !4356}
!4356 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4357, size: 64)
!4357 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot", file: !4350, line: 294, size: 1600, elements: !4358)
!4358 = !{!4359, !4360, !4361, !4362, !4363, !4364, !4365, !4366, !4367, !4388, !4389, !4390}
!4359 = !DIDerivedType(tag: DW_TAG_member, name: "dq_hash", scope: !4357, file: !4350, line: 295, baseType: !276, size: 128)
!4360 = !DIDerivedType(tag: DW_TAG_member, name: "dq_inuse", scope: !4357, file: !4350, line: 296, baseType: !284, size: 128, offset: 128)
!4361 = !DIDerivedType(tag: DW_TAG_member, name: "dq_free", scope: !4357, file: !4350, line: 297, baseType: !284, size: 128, offset: 256)
!4362 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dirty", scope: !4357, file: !4350, line: 298, baseType: !284, size: 128, offset: 384)
!4363 = !DIDerivedType(tag: DW_TAG_member, name: "dq_lock", scope: !4357, file: !4350, line: 299, baseType: !1665, size: 192, offset: 512)
!4364 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb_lock", scope: !4357, file: !4350, line: 300, baseType: !1670, offset: 704)
!4365 = !DIDerivedType(tag: DW_TAG_member, name: "dq_count", scope: !4357, file: !4350, line: 301, baseType: !383, size: 32, offset: 704)
!4366 = !DIDerivedType(tag: DW_TAG_member, name: "dq_sb", scope: !4357, file: !4350, line: 302, baseType: !1545, size: 64, offset: 768)
!4367 = !DIDerivedType(tag: DW_TAG_member, name: "dq_id", scope: !4357, file: !4350, line: 303, baseType: !4368, size: 64, offset: 832)
!4368 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kqid", file: !4350, line: 68, size: 64, elements: !4369)
!4369 = !{!4370, !4382}
!4370 = !DIDerivedType(tag: DW_TAG_member, scope: !4368, file: !4350, line: 69, baseType: !4371, size: 32)
!4371 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4368, file: !4350, line: 69, size: 32, elements: !4372)
!4372 = !{!4373, !4374, !4375}
!4373 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !4371, file: !4350, line: 70, baseType: !1382, size: 32)
!4374 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !4371, file: !4350, line: 71, baseType: !1390, size: 32)
!4375 = !DIDerivedType(tag: DW_TAG_member, name: "projid", scope: !4371, file: !4350, line: 72, baseType: !4376, size: 32)
!4376 = !DIDerivedType(tag: DW_TAG_typedef, name: "kprojid_t", file: !4377, line: 24, baseType: !4378)
!4377 = !DIFile(filename: "./include/linux/projid.h", directory: "/home/lizy2001/genbc/linux")
!4378 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !4377, line: 22, size: 32, elements: !4379)
!4379 = !{!4380}
!4380 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !4378, file: !4377, line: 23, baseType: !4381, size: 32)
!4381 = !DIDerivedType(tag: DW_TAG_typedef, name: "projid_t", file: !4377, line: 20, baseType: !1388)
!4382 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4368, file: !4350, line: 74, baseType: !4383, size: 32, offset: 32)
!4383 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "quota_type", file: !4350, line: 54, baseType: !7, size: 32, elements: !4384)
!4384 = !{!4385, !4386, !4387}
!4385 = !DIEnumerator(name: "USRQUOTA", value: 0, isUnsigned: true)
!4386 = !DIEnumerator(name: "GRPQUOTA", value: 1, isUnsigned: true)
!4387 = !DIEnumerator(name: "PRJQUOTA", value: 2, isUnsigned: true)
!4388 = !DIDerivedType(tag: DW_TAG_member, name: "dq_off", scope: !4357, file: !4350, line: 304, baseType: !1476, size: 64, offset: 896)
!4389 = !DIDerivedType(tag: DW_TAG_member, name: "dq_flags", scope: !4357, file: !4350, line: 305, baseType: !312, size: 64, offset: 960)
!4390 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb", scope: !4357, file: !4350, line: 306, baseType: !4391, size: 576, offset: 1024)
!4391 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqblk", file: !4350, line: 205, size: 576, elements: !4392)
!4392 = !{!4393, !4395, !4396, !4397, !4398, !4399, !4400, !4401, !4402}
!4393 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bhardlimit", scope: !4391, file: !4350, line: 206, baseType: !4394, size: 64)
!4394 = !DIDerivedType(tag: DW_TAG_typedef, name: "qsize_t", file: !4350, line: 66, baseType: !379)
!4395 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bsoftlimit", scope: !4391, file: !4350, line: 207, baseType: !4394, size: 64, offset: 64)
!4396 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curspace", scope: !4391, file: !4350, line: 208, baseType: !4394, size: 64, offset: 128)
!4397 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_rsvspace", scope: !4391, file: !4350, line: 209, baseType: !4394, size: 64, offset: 192)
!4398 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_ihardlimit", scope: !4391, file: !4350, line: 210, baseType: !4394, size: 64, offset: 256)
!4399 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_isoftlimit", scope: !4391, file: !4350, line: 211, baseType: !4394, size: 64, offset: 320)
!4400 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curinodes", scope: !4391, file: !4350, line: 212, baseType: !4394, size: 64, offset: 384)
!4401 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_btime", scope: !4391, file: !4350, line: 213, baseType: !1483, size: 64, offset: 448)
!4402 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_itime", scope: !4391, file: !4350, line: 214, baseType: !1483, size: 64, offset: 512)
!4403 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_dquot", scope: !4349, file: !4350, line: 324, baseType: !4404, size: 64, offset: 64)
!4404 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4405, size: 64)
!4405 = !DISubroutineType(types: !4406)
!4406 = !{!4356, !1545, !32}
!4407 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_dquot", scope: !4349, file: !4350, line: 325, baseType: !4408, size: 64, offset: 128)
!4408 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4409, size: 64)
!4409 = !DISubroutineType(types: !4410)
!4410 = !{null, !4356}
!4411 = !DIDerivedType(tag: DW_TAG_member, name: "acquire_dquot", scope: !4349, file: !4350, line: 326, baseType: !4353, size: 64, offset: 192)
!4412 = !DIDerivedType(tag: DW_TAG_member, name: "release_dquot", scope: !4349, file: !4350, line: 327, baseType: !4353, size: 64, offset: 256)
!4413 = !DIDerivedType(tag: DW_TAG_member, name: "mark_dirty", scope: !4349, file: !4350, line: 328, baseType: !4353, size: 64, offset: 320)
!4414 = !DIDerivedType(tag: DW_TAG_member, name: "write_info", scope: !4349, file: !4350, line: 329, baseType: !1628, size: 64, offset: 384)
!4415 = !DIDerivedType(tag: DW_TAG_member, name: "get_reserved_space", scope: !4349, file: !4350, line: 332, baseType: !4416, size: 64, offset: 448)
!4416 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4417, size: 64)
!4417 = !DISubroutineType(types: !4418)
!4418 = !{!4419, !1375}
!4419 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4394, size: 64)
!4420 = !DIDerivedType(tag: DW_TAG_member, name: "get_projid", scope: !4349, file: !4350, line: 333, baseType: !4421, size: 64, offset: 512)
!4421 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4422, size: 64)
!4422 = !DISubroutineType(types: !4423)
!4423 = !{!32, !1375, !4424}
!4424 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4376, size: 64)
!4425 = !DIDerivedType(tag: DW_TAG_member, name: "get_inode_usage", scope: !4349, file: !4350, line: 335, baseType: !4426, size: 64, offset: 576)
!4426 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4427, size: 64)
!4427 = !DISubroutineType(types: !4428)
!4428 = !{!32, !1375, !4419}
!4429 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !4349, file: !4350, line: 337, baseType: !4430, size: 64, offset: 640)
!4430 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4431, size: 64)
!4431 = !DISubroutineType(types: !4432)
!4432 = !{!32, !1545, !4433}
!4433 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4368, size: 64)
!4434 = !DIDerivedType(tag: DW_TAG_member, name: "s_qcop", scope: !1546, file: !1317, line: 1425, baseType: !4435, size: 64, offset: 512)
!4435 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4436, size: 64)
!4436 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4437)
!4437 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quotactl_ops", file: !4350, line: 428, size: 704, elements: !4438)
!4438 = !{!4439, !4443, !4444, !4448, !4449, !4450, !4465, !4488, !4492, !4493, !4516}
!4439 = !DIDerivedType(tag: DW_TAG_member, name: "quota_on", scope: !4437, file: !4350, line: 429, baseType: !4440, size: 64)
!4440 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4441, size: 64)
!4441 = !DISubroutineType(types: !4442)
!4442 = !{!32, !1545, !32, !32, !1492}
!4443 = !DIDerivedType(tag: DW_TAG_member, name: "quota_off", scope: !4437, file: !4350, line: 430, baseType: !1628, size: 64, offset: 64)
!4444 = !DIDerivedType(tag: DW_TAG_member, name: "quota_enable", scope: !4437, file: !4350, line: 431, baseType: !4445, size: 64, offset: 128)
!4445 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4446, size: 64)
!4446 = !DISubroutineType(types: !4447)
!4447 = !{!32, !1545, !7}
!4448 = !DIDerivedType(tag: DW_TAG_member, name: "quota_disable", scope: !4437, file: !4350, line: 432, baseType: !4445, size: 64, offset: 192)
!4449 = !DIDerivedType(tag: DW_TAG_member, name: "quota_sync", scope: !4437, file: !4350, line: 433, baseType: !1628, size: 64, offset: 256)
!4450 = !DIDerivedType(tag: DW_TAG_member, name: "set_info", scope: !4437, file: !4350, line: 434, baseType: !4451, size: 64, offset: 320)
!4451 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4452, size: 64)
!4452 = !DISubroutineType(types: !4453)
!4453 = !{!32, !1545, !32, !4454}
!4454 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4455, size: 64)
!4455 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_info", file: !4350, line: 415, size: 256, elements: !4456)
!4456 = !{!4457, !4458, !4459, !4460, !4461, !4462, !4463, !4464}
!4457 = !DIDerivedType(tag: DW_TAG_member, name: "i_fieldmask", scope: !4455, file: !4350, line: 416, baseType: !32, size: 32)
!4458 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !4455, file: !4350, line: 417, baseType: !7, size: 32, offset: 32)
!4459 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_timelimit", scope: !4455, file: !4350, line: 418, baseType: !7, size: 32, offset: 64)
!4460 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_timelimit", scope: !4455, file: !4350, line: 420, baseType: !7, size: 32, offset: 96)
!4461 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_timelimit", scope: !4455, file: !4350, line: 421, baseType: !7, size: 32, offset: 128)
!4462 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_warnlimit", scope: !4455, file: !4350, line: 422, baseType: !7, size: 32, offset: 160)
!4463 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_warnlimit", scope: !4455, file: !4350, line: 423, baseType: !7, size: 32, offset: 192)
!4464 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_warnlimit", scope: !4455, file: !4350, line: 424, baseType: !7, size: 32, offset: 224)
!4465 = !DIDerivedType(tag: DW_TAG_member, name: "get_dqblk", scope: !4437, file: !4350, line: 435, baseType: !4466, size: 64, offset: 384)
!4466 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4467, size: 64)
!4467 = !DISubroutineType(types: !4468)
!4468 = !{!32, !1545, !4368, !4469}
!4469 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4470, size: 64)
!4470 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_dqblk", file: !4350, line: 343, size: 960, elements: !4471)
!4471 = !{!4472, !4473, !4474, !4475, !4476, !4477, !4478, !4479, !4480, !4481, !4482, !4483, !4484, !4485, !4486, !4487}
!4472 = !DIDerivedType(tag: DW_TAG_member, name: "d_fieldmask", scope: !4470, file: !4350, line: 344, baseType: !32, size: 32)
!4473 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_hardlimit", scope: !4470, file: !4350, line: 345, baseType: !331, size: 64, offset: 64)
!4474 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_softlimit", scope: !4470, file: !4350, line: 346, baseType: !331, size: 64, offset: 128)
!4475 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_hardlimit", scope: !4470, file: !4350, line: 347, baseType: !331, size: 64, offset: 192)
!4476 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_softlimit", scope: !4470, file: !4350, line: 348, baseType: !331, size: 64, offset: 256)
!4477 = !DIDerivedType(tag: DW_TAG_member, name: "d_space", scope: !4470, file: !4350, line: 349, baseType: !331, size: 64, offset: 320)
!4478 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_count", scope: !4470, file: !4350, line: 350, baseType: !331, size: 64, offset: 384)
!4479 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_timer", scope: !4470, file: !4350, line: 351, baseType: !377, size: 64, offset: 448)
!4480 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_timer", scope: !4470, file: !4350, line: 353, baseType: !377, size: 64, offset: 512)
!4481 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_warns", scope: !4470, file: !4350, line: 354, baseType: !32, size: 32, offset: 576)
!4482 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_warns", scope: !4470, file: !4350, line: 355, baseType: !32, size: 32, offset: 608)
!4483 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_hardlimit", scope: !4470, file: !4350, line: 356, baseType: !331, size: 64, offset: 640)
!4484 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_softlimit", scope: !4470, file: !4350, line: 357, baseType: !331, size: 64, offset: 704)
!4485 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_space", scope: !4470, file: !4350, line: 358, baseType: !331, size: 64, offset: 768)
!4486 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_timer", scope: !4470, file: !4350, line: 359, baseType: !377, size: 64, offset: 832)
!4487 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_warns", scope: !4470, file: !4350, line: 360, baseType: !32, size: 32, offset: 896)
!4488 = !DIDerivedType(tag: DW_TAG_member, name: "get_nextdqblk", scope: !4437, file: !4350, line: 436, baseType: !4489, size: 64, offset: 448)
!4489 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4490, size: 64)
!4490 = !DISubroutineType(types: !4491)
!4491 = !{!32, !1545, !4433, !4469}
!4492 = !DIDerivedType(tag: DW_TAG_member, name: "set_dqblk", scope: !4437, file: !4350, line: 438, baseType: !4466, size: 64, offset: 512)
!4493 = !DIDerivedType(tag: DW_TAG_member, name: "get_state", scope: !4437, file: !4350, line: 439, baseType: !4494, size: 64, offset: 576)
!4494 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4495, size: 64)
!4495 = !DISubroutineType(types: !4496)
!4496 = !{!32, !1545, !4497}
!4497 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4498, size: 64)
!4498 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_state", file: !4350, line: 409, size: 1408, elements: !4499)
!4499 = !{!4500, !4501}
!4500 = !DIDerivedType(tag: DW_TAG_member, name: "s_incoredqs", scope: !4498, file: !4350, line: 410, baseType: !7, size: 32)
!4501 = !DIDerivedType(tag: DW_TAG_member, name: "s_state", scope: !4498, file: !4350, line: 411, baseType: !4502, size: 1344, offset: 64)
!4502 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4503, size: 1344, elements: !1592)
!4503 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_type_state", file: !4350, line: 395, size: 448, elements: !4504)
!4504 = !{!4505, !4506, !4507, !4508, !4509, !4510, !4511, !4512, !4513, !4515}
!4505 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4503, file: !4350, line: 396, baseType: !7, size: 32)
!4506 = !DIDerivedType(tag: DW_TAG_member, name: "spc_timelimit", scope: !4503, file: !4350, line: 397, baseType: !7, size: 32, offset: 32)
!4507 = !DIDerivedType(tag: DW_TAG_member, name: "ino_timelimit", scope: !4503, file: !4350, line: 399, baseType: !7, size: 32, offset: 64)
!4508 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_timelimit", scope: !4503, file: !4350, line: 400, baseType: !7, size: 32, offset: 96)
!4509 = !DIDerivedType(tag: DW_TAG_member, name: "spc_warnlimit", scope: !4503, file: !4350, line: 401, baseType: !7, size: 32, offset: 128)
!4510 = !DIDerivedType(tag: DW_TAG_member, name: "ino_warnlimit", scope: !4503, file: !4350, line: 402, baseType: !7, size: 32, offset: 160)
!4511 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_warnlimit", scope: !4503, file: !4350, line: 403, baseType: !7, size: 32, offset: 192)
!4512 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !4503, file: !4350, line: 404, baseType: !335, size: 64, offset: 256)
!4513 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !4503, file: !4350, line: 405, baseType: !4514, size: 64, offset: 320)
!4514 = !DIDerivedType(tag: DW_TAG_typedef, name: "blkcnt_t", file: !277, line: 126, baseType: !331)
!4515 = !DIDerivedType(tag: DW_TAG_member, name: "nextents", scope: !4503, file: !4350, line: 406, baseType: !4514, size: 64, offset: 384)
!4516 = !DIDerivedType(tag: DW_TAG_member, name: "rm_xquota", scope: !4437, file: !4350, line: 440, baseType: !4445, size: 64, offset: 640)
!4517 = !DIDerivedType(tag: DW_TAG_member, name: "s_export_op", scope: !1546, file: !1317, line: 1426, baseType: !4518, size: 64, offset: 576)
!4518 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4519, size: 64)
!4519 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4520)
!4520 = !DICompositeType(tag: DW_TAG_structure_type, name: "export_operations", file: !1317, line: 49, flags: DIFlagFwdDecl)
!4521 = !DIDerivedType(tag: DW_TAG_member, name: "s_flags", scope: !1546, file: !1317, line: 1427, baseType: !312, size: 64, offset: 640)
!4522 = !DIDerivedType(tag: DW_TAG_member, name: "s_iflags", scope: !1546, file: !1317, line: 1428, baseType: !312, size: 64, offset: 704)
!4523 = !DIDerivedType(tag: DW_TAG_member, name: "s_magic", scope: !1546, file: !1317, line: 1429, baseType: !312, size: 64, offset: 768)
!4524 = !DIDerivedType(tag: DW_TAG_member, name: "s_root", scope: !1546, file: !1317, line: 1430, baseType: !1338, size: 64, offset: 832)
!4525 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount", scope: !1546, file: !1317, line: 1431, baseType: !1755, size: 256, offset: 896)
!4526 = !DIDerivedType(tag: DW_TAG_member, name: "s_count", scope: !1546, file: !1317, line: 1432, baseType: !32, size: 32, offset: 1152)
!4527 = !DIDerivedType(tag: DW_TAG_member, name: "s_active", scope: !1546, file: !1317, line: 1433, baseType: !383, size: 32, offset: 1184)
!4528 = !DIDerivedType(tag: DW_TAG_member, name: "s_xattr", scope: !1546, file: !1317, line: 1437, baseType: !4529, size: 64, offset: 1216)
!4529 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4530, size: 64)
!4530 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4531, size: 64)
!4531 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4532)
!4532 = !DICompositeType(tag: DW_TAG_structure_type, name: "xattr_handler", file: !1317, line: 1437, flags: DIFlagFwdDecl)
!4533 = !DIDerivedType(tag: DW_TAG_member, name: "s_roots", scope: !1546, file: !1317, line: 1449, baseType: !4534, size: 64, offset: 1280)
!4534 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_head", file: !1354, line: 34, size: 64, elements: !4535)
!4535 = !{!4536}
!4536 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !4534, file: !1354, line: 35, baseType: !1357, size: 64)
!4537 = !DIDerivedType(tag: DW_TAG_member, name: "s_mounts", scope: !1546, file: !1317, line: 1450, baseType: !284, size: 128, offset: 1344)
!4538 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdev", scope: !1546, file: !1317, line: 1451, baseType: !4539, size: 64, offset: 1472)
!4539 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4540, size: 64)
!4540 = !DICompositeType(tag: DW_TAG_structure_type, name: "block_device", file: !1317, line: 699, flags: DIFlagFwdDecl)
!4541 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdi", scope: !1546, file: !1317, line: 1452, baseType: !3855, size: 64, offset: 1536)
!4542 = !DIDerivedType(tag: DW_TAG_member, name: "s_mtd", scope: !1546, file: !1317, line: 1453, baseType: !4543, size: 64, offset: 1600)
!4543 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4544, size: 64)
!4544 = !DICompositeType(tag: DW_TAG_structure_type, name: "mtd_info", file: !1317, line: 1453, flags: DIFlagFwdDecl)
!4545 = !DIDerivedType(tag: DW_TAG_member, name: "s_instances", scope: !1546, file: !1317, line: 1454, baseType: !276, size: 128, offset: 1664)
!4546 = !DIDerivedType(tag: DW_TAG_member, name: "s_quota_types", scope: !1546, file: !1317, line: 1455, baseType: !7, size: 32, offset: 1792)
!4547 = !DIDerivedType(tag: DW_TAG_member, name: "s_dquot", scope: !1546, file: !1317, line: 1456, baseType: !4548, size: 2432, offset: 1856)
!4548 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_info", file: !4350, line: 518, size: 2432, elements: !4549)
!4549 = !{!4550, !4551, !4552, !4554, !4586}
!4550 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4548, file: !4350, line: 519, baseType: !7, size: 32)
!4551 = !DIDerivedType(tag: DW_TAG_member, name: "dqio_sem", scope: !4548, file: !4350, line: 520, baseType: !1755, size: 256, offset: 64)
!4552 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !4548, file: !4350, line: 521, baseType: !4553, size: 192, offset: 320)
!4553 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1375, size: 192, elements: !1592)
!4554 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !4548, file: !4350, line: 522, baseType: !4555, size: 1728, offset: 512)
!4555 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4556, size: 1728, elements: !1592)
!4556 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqinfo", file: !4350, line: 222, size: 576, elements: !4557)
!4557 = !{!4558, !4578, !4579, !4580, !4581, !4582, !4583, !4584, !4585}
!4558 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_format", scope: !4556, file: !4350, line: 223, baseType: !4559, size: 64)
!4559 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4560, size: 64)
!4560 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_type", file: !4350, line: 443, size: 256, elements: !4561)
!4561 = !{!4562, !4563, !4576, !4577}
!4562 = !DIDerivedType(tag: DW_TAG_member, name: "qf_fmt_id", scope: !4560, file: !4350, line: 444, baseType: !32, size: 32)
!4563 = !DIDerivedType(tag: DW_TAG_member, name: "qf_ops", scope: !4560, file: !4350, line: 445, baseType: !4564, size: 64, offset: 64)
!4564 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4565, size: 64)
!4565 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4566)
!4566 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_ops", file: !4350, line: 310, size: 512, elements: !4567)
!4567 = !{!4568, !4569, !4570, !4571, !4572, !4573, !4574, !4575}
!4568 = !DIDerivedType(tag: DW_TAG_member, name: "check_quota_file", scope: !4566, file: !4350, line: 311, baseType: !1628, size: 64)
!4569 = !DIDerivedType(tag: DW_TAG_member, name: "read_file_info", scope: !4566, file: !4350, line: 312, baseType: !1628, size: 64, offset: 64)
!4570 = !DIDerivedType(tag: DW_TAG_member, name: "write_file_info", scope: !4566, file: !4350, line: 313, baseType: !1628, size: 64, offset: 128)
!4571 = !DIDerivedType(tag: DW_TAG_member, name: "free_file_info", scope: !4566, file: !4350, line: 314, baseType: !1628, size: 64, offset: 192)
!4572 = !DIDerivedType(tag: DW_TAG_member, name: "read_dqblk", scope: !4566, file: !4350, line: 315, baseType: !4353, size: 64, offset: 256)
!4573 = !DIDerivedType(tag: DW_TAG_member, name: "commit_dqblk", scope: !4566, file: !4350, line: 316, baseType: !4353, size: 64, offset: 320)
!4574 = !DIDerivedType(tag: DW_TAG_member, name: "release_dqblk", scope: !4566, file: !4350, line: 317, baseType: !4353, size: 64, offset: 384)
!4575 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !4566, file: !4350, line: 318, baseType: !4430, size: 64, offset: 448)
!4576 = !DIDerivedType(tag: DW_TAG_member, name: "qf_owner", scope: !4560, file: !4350, line: 446, baseType: !980, size: 64, offset: 128)
!4577 = !DIDerivedType(tag: DW_TAG_member, name: "qf_next", scope: !4560, file: !4350, line: 447, baseType: !4559, size: 64, offset: 192)
!4578 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_fmt_id", scope: !4556, file: !4350, line: 224, baseType: !32, size: 32, offset: 64)
!4579 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_dirty_list", scope: !4556, file: !4350, line: 226, baseType: !284, size: 128, offset: 128)
!4580 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_flags", scope: !4556, file: !4350, line: 227, baseType: !312, size: 64, offset: 256)
!4581 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_bgrace", scope: !4556, file: !4350, line: 228, baseType: !7, size: 32, offset: 320)
!4582 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_igrace", scope: !4556, file: !4350, line: 229, baseType: !7, size: 32, offset: 352)
!4583 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_spc_limit", scope: !4556, file: !4350, line: 230, baseType: !4394, size: 64, offset: 384)
!4584 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_ino_limit", scope: !4556, file: !4350, line: 231, baseType: !4394, size: 64, offset: 448)
!4585 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_priv", scope: !4556, file: !4350, line: 232, baseType: !591, size: 64, offset: 512)
!4586 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4548, file: !4350, line: 523, baseType: !4587, size: 192, offset: 2240)
!4587 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4564, size: 192, elements: !1592)
!4588 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers", scope: !1546, file: !1317, line: 1458, baseType: !4589, size: 2112, offset: 4288)
!4589 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sb_writers", file: !1317, line: 1410, size: 2112, elements: !4590)
!4590 = !{!4591, !4592, !4593}
!4591 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !4589, file: !1317, line: 1411, baseType: !32, size: 32)
!4592 = !DIDerivedType(tag: DW_TAG_member, name: "wait_unfrozen", scope: !4589, file: !1317, line: 1412, baseType: !1889, size: 128, offset: 64)
!4593 = !DIDerivedType(tag: DW_TAG_member, name: "rw_sem", scope: !4589, file: !1317, line: 1413, baseType: !4594, size: 1920, offset: 192)
!4594 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4595, size: 1920, elements: !1592)
!4595 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_rw_semaphore", file: !4596, line: 12, size: 640, elements: !4597)
!4596 = !DIFile(filename: "./include/linux/percpu-rwsem.h", directory: "/home/lizy2001/genbc/linux")
!4597 = !{!4598, !4606, !4608, !4613, !4614}
!4598 = !DIDerivedType(tag: DW_TAG_member, name: "rss", scope: !4595, file: !4596, line: 13, baseType: !4599, size: 320)
!4599 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcu_sync", file: !4600, line: 17, size: 320, elements: !4601)
!4600 = !DIFile(filename: "./include/linux/rcu_sync.h", directory: "/home/lizy2001/genbc/linux")
!4601 = !{!4602, !4603, !4604, !4605}
!4602 = !DIDerivedType(tag: DW_TAG_member, name: "gp_state", scope: !4599, file: !4600, line: 18, baseType: !32, size: 32)
!4603 = !DIDerivedType(tag: DW_TAG_member, name: "gp_count", scope: !4599, file: !4600, line: 19, baseType: !32, size: 32, offset: 32)
!4604 = !DIDerivedType(tag: DW_TAG_member, name: "gp_wait", scope: !4599, file: !4600, line: 20, baseType: !1889, size: 128, offset: 64)
!4605 = !DIDerivedType(tag: DW_TAG_member, name: "cb_head", scope: !4599, file: !4600, line: 22, baseType: !299, size: 128, align: 64, offset: 192)
!4606 = !DIDerivedType(tag: DW_TAG_member, name: "read_count", scope: !4595, file: !4596, line: 14, baseType: !4607, size: 64, offset: 320)
!4607 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!4608 = !DIDerivedType(tag: DW_TAG_member, name: "writer", scope: !4595, file: !4596, line: 15, baseType: !4609, size: 64, offset: 384)
!4609 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcuwait", file: !4610, line: 16, size: 64, elements: !4611)
!4610 = !DIFile(filename: "./include/linux/rcuwait.h", directory: "/home/lizy2001/genbc/linux")
!4611 = !{!4612}
!4612 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !4609, file: !4610, line: 17, baseType: !2326, size: 64)
!4613 = !DIDerivedType(tag: DW_TAG_member, name: "waiters", scope: !4595, file: !4596, line: 16, baseType: !1889, size: 128, offset: 448)
!4614 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !4595, file: !4596, line: 17, baseType: !383, size: 32, offset: 576)
!4615 = !DIDerivedType(tag: DW_TAG_member, name: "s_fs_info", scope: !1546, file: !1317, line: 1465, baseType: !591, size: 64, offset: 6400)
!4616 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_gran", scope: !1546, file: !1317, line: 1468, baseType: !987, size: 32, offset: 6464)
!4617 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_min", scope: !1546, file: !1317, line: 1470, baseType: !1483, size: 64, offset: 6528)
!4618 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_max", scope: !1546, file: !1317, line: 1471, baseType: !1483, size: 64, offset: 6592)
!4619 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_mask", scope: !1546, file: !1317, line: 1473, baseType: !493, size: 32, offset: 6656)
!4620 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_marks", scope: !1546, file: !1317, line: 1474, baseType: !4621, size: 64, offset: 6720)
!4621 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4622, size: 64)
!4622 = !DICompositeType(tag: DW_TAG_structure_type, name: "fsnotify_mark_connector", file: !1317, line: 603, flags: DIFlagFwdDecl)
!4623 = !DIDerivedType(tag: DW_TAG_member, name: "s_id", scope: !1546, file: !1317, line: 1477, baseType: !4624, size: 256, offset: 6784)
!4624 = !DICompositeType(tag: DW_TAG_array_type, baseType: !268, size: 256, elements: !819)
!4625 = !DIDerivedType(tag: DW_TAG_member, name: "s_uuid", scope: !1546, file: !1317, line: 1478, baseType: !4626, size: 128, offset: 7040)
!4626 = !DIDerivedType(tag: DW_TAG_typedef, name: "uuid_t", file: !4627, line: 18, baseType: !4628)
!4627 = !DIFile(filename: "./include/linux/uuid.h", directory: "/home/lizy2001/genbc/linux")
!4628 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !4627, line: 16, size: 128, elements: !4629)
!4629 = !{!4630}
!4630 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !4628, file: !4627, line: 17, baseType: !3224, size: 128)
!4631 = !DIDerivedType(tag: DW_TAG_member, name: "s_max_links", scope: !1546, file: !1317, line: 1480, baseType: !7, size: 32, offset: 7168)
!4632 = !DIDerivedType(tag: DW_TAG_member, name: "s_mode", scope: !1546, file: !1317, line: 1481, baseType: !4633, size: 32, offset: 7200)
!4633 = !DIDerivedType(tag: DW_TAG_typedef, name: "fmode_t", file: !277, line: 150, baseType: !7)
!4634 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_mutex", scope: !1546, file: !1317, line: 1487, baseType: !1665, size: 192, offset: 7232)
!4635 = !DIDerivedType(tag: DW_TAG_member, name: "s_subtype", scope: !1546, file: !1317, line: 1493, baseType: !292, size: 64, offset: 7424)
!4636 = !DIDerivedType(tag: DW_TAG_member, name: "s_d_op", scope: !1546, file: !1317, line: 1495, baseType: !4637, size: 64, offset: 7488)
!4637 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4638, size: 64)
!4638 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4639)
!4639 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry_operations", file: !1336, line: 135, size: 1024, align: 512, elements: !4640)
!4640 = !{!4641, !4645, !4646, !4653, !4659, !4663, !4667, !4671, !4672, !4676, !4680, !4685, !4689}
!4641 = !DIDerivedType(tag: DW_TAG_member, name: "d_revalidate", scope: !4639, file: !1336, line: 136, baseType: !4642, size: 64)
!4642 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4643, size: 64)
!4643 = !DISubroutineType(types: !4644)
!4644 = !{!32, !1338, !7}
!4645 = !DIDerivedType(tag: DW_TAG_member, name: "d_weak_revalidate", scope: !4639, file: !1336, line: 137, baseType: !4642, size: 64, offset: 64)
!4646 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !4639, file: !1336, line: 138, baseType: !4647, size: 64, offset: 128)
!4647 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4648, size: 64)
!4648 = !DISubroutineType(types: !4649)
!4649 = !{!32, !4650, !4652}
!4650 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4651, size: 64)
!4651 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1339)
!4652 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1362, size: 64)
!4653 = !DIDerivedType(tag: DW_TAG_member, name: "d_compare", scope: !4639, file: !1336, line: 139, baseType: !4654, size: 64, offset: 192)
!4654 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4655, size: 64)
!4655 = !DISubroutineType(types: !4656)
!4656 = !{!32, !4650, !7, !292, !4657}
!4657 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4658, size: 64)
!4658 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1362)
!4659 = !DIDerivedType(tag: DW_TAG_member, name: "d_delete", scope: !4639, file: !1336, line: 141, baseType: !4660, size: 64, offset: 256)
!4660 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4661, size: 64)
!4661 = !DISubroutineType(types: !4662)
!4662 = !{!32, !4650}
!4663 = !DIDerivedType(tag: DW_TAG_member, name: "d_init", scope: !4639, file: !1336, line: 142, baseType: !4664, size: 64, offset: 320)
!4664 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4665, size: 64)
!4665 = !DISubroutineType(types: !4666)
!4666 = !{!32, !1338}
!4667 = !DIDerivedType(tag: DW_TAG_member, name: "d_release", scope: !4639, file: !1336, line: 143, baseType: !4668, size: 64, offset: 384)
!4668 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4669, size: 64)
!4669 = !DISubroutineType(types: !4670)
!4670 = !{null, !1338}
!4671 = !DIDerivedType(tag: DW_TAG_member, name: "d_prune", scope: !4639, file: !1336, line: 144, baseType: !4668, size: 64, offset: 448)
!4672 = !DIDerivedType(tag: DW_TAG_member, name: "d_iput", scope: !4639, file: !1336, line: 145, baseType: !4673, size: 64, offset: 512)
!4673 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4674, size: 64)
!4674 = !DISubroutineType(types: !4675)
!4675 = !{null, !1338, !1375}
!4676 = !DIDerivedType(tag: DW_TAG_member, name: "d_dname", scope: !4639, file: !1336, line: 146, baseType: !4677, size: 64, offset: 576)
!4677 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4678, size: 64)
!4678 = !DISubroutineType(types: !4679)
!4679 = !{!1038, !1338, !1038, !32}
!4680 = !DIDerivedType(tag: DW_TAG_member, name: "d_automount", scope: !4639, file: !1336, line: 147, baseType: !4681, size: 64, offset: 640)
!4681 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4682, size: 64)
!4682 = !DISubroutineType(types: !4683)
!4683 = !{!1334, !4684}
!4684 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1330, size: 64)
!4685 = !DIDerivedType(tag: DW_TAG_member, name: "d_manage", scope: !4639, file: !1336, line: 148, baseType: !4686, size: 64, offset: 704)
!4686 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4687, size: 64)
!4687 = !DISubroutineType(types: !4688)
!4688 = !{!32, !1492, !771}
!4689 = !DIDerivedType(tag: DW_TAG_member, name: "d_real", scope: !4639, file: !1336, line: 149, baseType: !4690, size: 64, offset: 768)
!4690 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4691, size: 64)
!4691 = !DISubroutineType(types: !4692)
!4692 = !{!1338, !1338, !4693}
!4693 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4694, size: 64)
!4694 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1376)
!4695 = !DIDerivedType(tag: DW_TAG_member, name: "cleancache_poolid", scope: !1546, file: !1317, line: 1500, baseType: !32, size: 32, offset: 7552)
!4696 = !DIDerivedType(tag: DW_TAG_member, name: "s_shrink", scope: !1546, file: !1317, line: 1502, baseType: !4697, size: 448, offset: 7616)
!4697 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrinker", file: !4336, line: 60, size: 448, elements: !4698)
!4698 = !{!4699, !4704, !4705, !4706, !4707, !4708, !4709}
!4699 = !DIDerivedType(tag: DW_TAG_member, name: "count_objects", scope: !4697, file: !4336, line: 61, baseType: !4700, size: 64)
!4700 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4701, size: 64)
!4701 = !DISubroutineType(types: !4702)
!4702 = !{!312, !4703, !4334}
!4703 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4697, size: 64)
!4704 = !DIDerivedType(tag: DW_TAG_member, name: "scan_objects", scope: !4697, file: !4336, line: 63, baseType: !4700, size: 64, offset: 64)
!4705 = !DIDerivedType(tag: DW_TAG_member, name: "batch", scope: !4697, file: !4336, line: 66, baseType: !998, size: 64, offset: 128)
!4706 = !DIDerivedType(tag: DW_TAG_member, name: "seeks", scope: !4697, file: !4336, line: 67, baseType: !32, size: 32, offset: 192)
!4707 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4697, file: !4336, line: 68, baseType: !7, size: 32, offset: 224)
!4708 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !4697, file: !4336, line: 71, baseType: !284, size: 128, offset: 256)
!4709 = !DIDerivedType(tag: DW_TAG_member, name: "nr_deferred", scope: !4697, file: !4336, line: 77, baseType: !4710, size: 64, offset: 384)
!4710 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !371, size: 64)
!4711 = !DIDerivedType(tag: DW_TAG_member, name: "s_remove_count", scope: !1546, file: !1317, line: 1505, baseType: !371, size: 64, offset: 8064)
!4712 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_inode_refs", scope: !1546, file: !1317, line: 1508, baseType: !371, size: 64, offset: 8128)
!4713 = !DIDerivedType(tag: DW_TAG_member, name: "s_readonly_remount", scope: !1546, file: !1317, line: 1511, baseType: !32, size: 32, offset: 8192)
!4714 = !DIDerivedType(tag: DW_TAG_member, name: "s_wb_err", scope: !1546, file: !1317, line: 1514, baseType: !2025, size: 32, offset: 8224)
!4715 = !DIDerivedType(tag: DW_TAG_member, name: "s_dio_done_wq", scope: !1546, file: !1317, line: 1517, baseType: !4716, size: 64, offset: 8256)
!4716 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4717, size: 64)
!4717 = !DICompositeType(tag: DW_TAG_structure_type, name: "workqueue_struct", file: !2830, line: 18, flags: DIFlagFwdDecl)
!4718 = !DIDerivedType(tag: DW_TAG_member, name: "s_pins", scope: !1546, file: !1317, line: 1518, baseType: !1581, size: 64, offset: 8320)
!4719 = !DIDerivedType(tag: DW_TAG_member, name: "s_user_ns", scope: !1546, file: !1317, line: 1525, baseType: !2781, size: 64, offset: 8384)
!4720 = !DIDerivedType(tag: DW_TAG_member, name: "s_dentry_lru", scope: !1546, file: !1317, line: 1532, baseType: !4721, size: 64, offset: 8448)
!4721 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru", file: !4722, line: 52, size: 64, elements: !4723)
!4722 = !DIFile(filename: "./include/linux/list_lru.h", directory: "/home/lizy2001/genbc/linux")
!4723 = !{!4724}
!4724 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !4721, file: !4722, line: 53, baseType: !4725, size: 64)
!4725 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4726, size: 64)
!4726 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_node", file: !4722, line: 40, size: 256, elements: !4727)
!4727 = !{!4728, !4729, !4734}
!4728 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4726, file: !4722, line: 42, baseType: !1670)
!4729 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !4726, file: !4722, line: 44, baseType: !4730, size: 192)
!4730 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_one", file: !4722, line: 28, size: 192, elements: !4731)
!4731 = !{!4732, !4733}
!4732 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !4730, file: !4722, line: 29, baseType: !284, size: 128)
!4733 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !4730, file: !4722, line: 31, baseType: !998, size: 64, offset: 128)
!4734 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !4726, file: !4722, line: 49, baseType: !998, size: 64, offset: 192)
!4735 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_lru", scope: !1546, file: !1317, line: 1533, baseType: !4721, size: 64, offset: 8512)
!4736 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1546, file: !1317, line: 1534, baseType: !299, size: 128, align: 64, offset: 8576)
!4737 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_work", scope: !1546, file: !1317, line: 1535, baseType: !2829, size: 256, offset: 8704)
!4738 = !DIDerivedType(tag: DW_TAG_member, name: "s_sync_lock", scope: !1546, file: !1317, line: 1537, baseType: !1665, size: 192, offset: 8960)
!4739 = !DIDerivedType(tag: DW_TAG_member, name: "s_stack_depth", scope: !1546, file: !1317, line: 1542, baseType: !32, size: 32, offset: 9152)
!4740 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_list_lock", scope: !1546, file: !1317, line: 1545, baseType: !1670, offset: 9184)
!4741 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes", scope: !1546, file: !1317, line: 1546, baseType: !284, size: 128, offset: 9216)
!4742 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_wblist_lock", scope: !1546, file: !1317, line: 1548, baseType: !1670, offset: 9344)
!4743 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes_wb", scope: !1546, file: !1317, line: 1549, baseType: !284, size: 128, offset: 9344)
!4744 = !DIDerivedType(tag: DW_TAG_member, name: "i_mapping", scope: !1376, file: !1317, line: 624, baseType: !1732, size: 64, offset: 256)
!4745 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino", scope: !1376, file: !1317, line: 631, baseType: !312, size: 64, offset: 320)
!4746 = !DIDerivedType(tag: DW_TAG_member, scope: !1376, file: !1317, line: 639, baseType: !4747, size: 32, offset: 384)
!4747 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1376, file: !1317, line: 639, size: 32, elements: !4748)
!4748 = !{!4749, !4751}
!4749 = !DIDerivedType(tag: DW_TAG_member, name: "i_nlink", scope: !4747, file: !1317, line: 640, baseType: !4750, size: 32)
!4750 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7)
!4751 = !DIDerivedType(tag: DW_TAG_member, name: "__i_nlink", scope: !4747, file: !1317, line: 641, baseType: !7, size: 32)
!4752 = !DIDerivedType(tag: DW_TAG_member, name: "i_rdev", scope: !1376, file: !1317, line: 643, baseType: !1458, size: 32, offset: 416)
!4753 = !DIDerivedType(tag: DW_TAG_member, name: "i_size", scope: !1376, file: !1317, line: 644, baseType: !1476, size: 64, offset: 448)
!4754 = !DIDerivedType(tag: DW_TAG_member, name: "i_atime", scope: !1376, file: !1317, line: 645, baseType: !1479, size: 128, offset: 512)
!4755 = !DIDerivedType(tag: DW_TAG_member, name: "i_mtime", scope: !1376, file: !1317, line: 646, baseType: !1479, size: 128, offset: 640)
!4756 = !DIDerivedType(tag: DW_TAG_member, name: "i_ctime", scope: !1376, file: !1317, line: 647, baseType: !1479, size: 128, offset: 768)
!4757 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock", scope: !1376, file: !1317, line: 648, baseType: !1670, offset: 896)
!4758 = !DIDerivedType(tag: DW_TAG_member, name: "i_bytes", scope: !1376, file: !1317, line: 649, baseType: !476, size: 16, offset: 896)
!4759 = !DIDerivedType(tag: DW_TAG_member, name: "i_blkbits", scope: !1376, file: !1317, line: 650, baseType: !794, size: 8, offset: 912)
!4760 = !DIDerivedType(tag: DW_TAG_member, name: "i_write_hint", scope: !1376, file: !1317, line: 651, baseType: !794, size: 8, offset: 920)
!4761 = !DIDerivedType(tag: DW_TAG_member, name: "i_blocks", scope: !1376, file: !1317, line: 652, baseType: !4514, size: 64, offset: 960)
!4762 = !DIDerivedType(tag: DW_TAG_member, name: "i_state", scope: !1376, file: !1317, line: 659, baseType: !312, size: 64, offset: 1024)
!4763 = !DIDerivedType(tag: DW_TAG_member, name: "i_rwsem", scope: !1376, file: !1317, line: 660, baseType: !1755, size: 256, offset: 1088)
!4764 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_when", scope: !1376, file: !1317, line: 662, baseType: !312, size: 64, offset: 1344)
!4765 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_time_when", scope: !1376, file: !1317, line: 663, baseType: !312, size: 64, offset: 1408)
!4766 = !DIDerivedType(tag: DW_TAG_member, name: "i_hash", scope: !1376, file: !1317, line: 665, baseType: !276, size: 128, offset: 1472)
!4767 = !DIDerivedType(tag: DW_TAG_member, name: "i_io_list", scope: !1376, file: !1317, line: 666, baseType: !284, size: 128, offset: 1600)
!4768 = !DIDerivedType(tag: DW_TAG_member, name: "i_lru", scope: !1376, file: !1317, line: 675, baseType: !284, size: 128, offset: 1728)
!4769 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb_list", scope: !1376, file: !1317, line: 676, baseType: !284, size: 128, offset: 1856)
!4770 = !DIDerivedType(tag: DW_TAG_member, name: "i_wb_list", scope: !1376, file: !1317, line: 677, baseType: !284, size: 128, offset: 1984)
!4771 = !DIDerivedType(tag: DW_TAG_member, scope: !1376, file: !1317, line: 678, baseType: !4772, size: 128, offset: 2112)
!4772 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1376, file: !1317, line: 678, size: 128, elements: !4773)
!4773 = !{!4774, !4775}
!4774 = !DIDerivedType(tag: DW_TAG_member, name: "i_dentry", scope: !4772, file: !1317, line: 679, baseType: !1581, size: 64)
!4775 = !DIDerivedType(tag: DW_TAG_member, name: "i_rcu", scope: !4772, file: !1317, line: 680, baseType: !299, size: 128, align: 64)
!4776 = !DIDerivedType(tag: DW_TAG_member, name: "i_version", scope: !1376, file: !1317, line: 682, baseType: !373, size: 64, offset: 2240)
!4777 = !DIDerivedType(tag: DW_TAG_member, name: "i_sequence", scope: !1376, file: !1317, line: 683, baseType: !373, size: 64, offset: 2304)
!4778 = !DIDerivedType(tag: DW_TAG_member, name: "i_count", scope: !1376, file: !1317, line: 684, baseType: !383, size: 32, offset: 2368)
!4779 = !DIDerivedType(tag: DW_TAG_member, name: "i_dio_count", scope: !1376, file: !1317, line: 685, baseType: !383, size: 32, offset: 2400)
!4780 = !DIDerivedType(tag: DW_TAG_member, name: "i_writecount", scope: !1376, file: !1317, line: 686, baseType: !383, size: 32, offset: 2432)
!4781 = !DIDerivedType(tag: DW_TAG_member, name: "i_readcount", scope: !1376, file: !1317, line: 688, baseType: !383, size: 32, offset: 2464)
!4782 = !DIDerivedType(tag: DW_TAG_member, scope: !1376, file: !1317, line: 690, baseType: !4783, size: 64, offset: 2496)
!4783 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1376, file: !1317, line: 690, size: 64, elements: !4784)
!4784 = !{!4785, !4990}
!4785 = !DIDerivedType(tag: DW_TAG_member, name: "i_fop", scope: !4783, file: !1317, line: 691, baseType: !4786, size: 64)
!4786 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4787, size: 64)
!4787 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4788)
!4788 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_operations", file: !1317, line: 1822, size: 2048, elements: !4789)
!4789 = !{!4790, !4791, !4795, !4799, !4803, !4804, !4805, !4809, !4822, !4823, !4830, !4834, !4835, !4839, !4840, !4844, !4849, !4850, !4854, !4858, !4950, !4954, !4955, !4959, !4960, !4964, !4968, !4973, !4977, !4981, !4985, !4989}
!4790 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4788, file: !1317, line: 1823, baseType: !980, size: 64)
!4791 = !DIDerivedType(tag: DW_TAG_member, name: "llseek", scope: !4788, file: !1317, line: 1824, baseType: !4792, size: 64, offset: 64)
!4792 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4793, size: 64)
!4793 = !DISubroutineType(types: !4794)
!4794 = !{!1476, !1315, !1476, !32}
!4795 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !4788, file: !1317, line: 1825, baseType: !4796, size: 64, offset: 128)
!4796 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4797, size: 64)
!4797 = !DISubroutineType(types: !4798)
!4798 = !{!1521, !1315, !1038, !1039, !1694}
!4799 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !4788, file: !1317, line: 1826, baseType: !4800, size: 64, offset: 192)
!4800 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4801, size: 64)
!4801 = !DISubroutineType(types: !4802)
!4802 = !{!1521, !1315, !292, !1039, !1694}
!4803 = !DIDerivedType(tag: DW_TAG_member, name: "read_iter", scope: !4788, file: !1317, line: 1827, baseType: !1825, size: 64, offset: 256)
!4804 = !DIDerivedType(tag: DW_TAG_member, name: "write_iter", scope: !4788, file: !1317, line: 1828, baseType: !1825, size: 64, offset: 320)
!4805 = !DIDerivedType(tag: DW_TAG_member, name: "iopoll", scope: !4788, file: !1317, line: 1829, baseType: !4806, size: 64, offset: 384)
!4806 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4807, size: 64)
!4807 = !DISubroutineType(types: !4808)
!4808 = !{!32, !1828, !771}
!4809 = !DIDerivedType(tag: DW_TAG_member, name: "iterate", scope: !4788, file: !1317, line: 1830, baseType: !4810, size: 64, offset: 448)
!4810 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4811, size: 64)
!4811 = !DISubroutineType(types: !4812)
!4812 = !{!32, !1315, !4813}
!4813 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4814, size: 64)
!4814 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dir_context", file: !1317, line: 1776, size: 128, elements: !4815)
!4815 = !{!4816, !4821}
!4816 = !DIDerivedType(tag: DW_TAG_member, name: "actor", scope: !4814, file: !1317, line: 1777, baseType: !4817, size: 64)
!4817 = !DIDerivedType(tag: DW_TAG_typedef, name: "filldir_t", file: !1317, line: 1773, baseType: !4818)
!4818 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4819, size: 64)
!4819 = !DISubroutineType(types: !4820)
!4820 = !{!32, !4813, !292, !32, !1476, !331, !7}
!4821 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !4814, file: !1317, line: 1778, baseType: !1476, size: 64, offset: 64)
!4822 = !DIDerivedType(tag: DW_TAG_member, name: "iterate_shared", scope: !4788, file: !1317, line: 1831, baseType: !4810, size: 64, offset: 512)
!4823 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !4788, file: !1317, line: 1832, baseType: !4824, size: 64, offset: 576)
!4824 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4825, size: 64)
!4825 = !DISubroutineType(types: !4826)
!4826 = !{!4827, !1315, !4828}
!4827 = !DIDerivedType(tag: DW_TAG_typedef, name: "__poll_t", file: !525, line: 52, baseType: !7)
!4828 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4829, size: 64)
!4829 = !DICompositeType(tag: DW_TAG_structure_type, name: "poll_table_struct", file: !1565, line: 27, flags: DIFlagFwdDecl)
!4830 = !DIDerivedType(tag: DW_TAG_member, name: "unlocked_ioctl", scope: !4788, file: !1317, line: 1833, baseType: !4831, size: 64, offset: 640)
!4831 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4832, size: 64)
!4832 = !DISubroutineType(types: !4833)
!4833 = !{!998, !1315, !7, !312}
!4834 = !DIDerivedType(tag: DW_TAG_member, name: "compat_ioctl", scope: !4788, file: !1317, line: 1834, baseType: !4831, size: 64, offset: 704)
!4835 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !4788, file: !1317, line: 1835, baseType: !4836, size: 64, offset: 768)
!4836 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4837, size: 64)
!4837 = !DISubroutineType(types: !4838)
!4838 = !{!32, !1315, !2098}
!4839 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_supported_flags", scope: !4788, file: !1317, line: 1836, baseType: !312, size: 64, offset: 832)
!4840 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !4788, file: !1317, line: 1837, baseType: !4841, size: 64, offset: 896)
!4841 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4842, size: 64)
!4842 = !DISubroutineType(types: !4843)
!4843 = !{!32, !1375, !1315}
!4844 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !4788, file: !1317, line: 1838, baseType: !4845, size: 64, offset: 960)
!4845 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4846, size: 64)
!4846 = !DISubroutineType(types: !4847)
!4847 = !{!32, !1315, !4848}
!4848 = !DIDerivedType(tag: DW_TAG_typedef, name: "fl_owner_t", file: !1317, line: 1007, baseType: !591)
!4849 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !4788, file: !1317, line: 1839, baseType: !4841, size: 64, offset: 1024)
!4850 = !DIDerivedType(tag: DW_TAG_member, name: "fsync", scope: !4788, file: !1317, line: 1840, baseType: !4851, size: 64, offset: 1088)
!4851 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4852, size: 64)
!4852 = !DISubroutineType(types: !4853)
!4853 = !{!32, !1315, !1476, !1476, !32}
!4854 = !DIDerivedType(tag: DW_TAG_member, name: "fasync", scope: !4788, file: !1317, line: 1841, baseType: !4855, size: 64, offset: 1152)
!4855 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4856, size: 64)
!4856 = !DISubroutineType(types: !4857)
!4857 = !{!32, !32, !1315, !32}
!4858 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4788, file: !1317, line: 1842, baseType: !4859, size: 64, offset: 1216)
!4859 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4860, size: 64)
!4860 = !DISubroutineType(types: !4861)
!4861 = !{!32, !1315, !32, !4862}
!4862 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4863, size: 64)
!4863 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock", file: !1317, line: 1062, size: 1664, elements: !4864)
!4864 = !{!4865, !4866, !4867, !4868, !4869, !4870, !4871, !4872, !4873, !4874, !4875, !4876, !4877, !4878, !4879, !4880, !4881, !4882, !4895, !4926}
!4865 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocker", scope: !4863, file: !1317, line: 1063, baseType: !4862, size: 64)
!4866 = !DIDerivedType(tag: DW_TAG_member, name: "fl_list", scope: !4863, file: !1317, line: 1064, baseType: !284, size: 128, offset: 64)
!4867 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link", scope: !4863, file: !1317, line: 1065, baseType: !276, size: 128, offset: 192)
!4868 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_requests", scope: !4863, file: !1317, line: 1066, baseType: !284, size: 128, offset: 320)
!4869 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_member", scope: !4863, file: !1317, line: 1069, baseType: !284, size: 128, offset: 448)
!4870 = !DIDerivedType(tag: DW_TAG_member, name: "fl_owner", scope: !4863, file: !1317, line: 1072, baseType: !4848, size: 64, offset: 576)
!4871 = !DIDerivedType(tag: DW_TAG_member, name: "fl_flags", scope: !4863, file: !1317, line: 1073, baseType: !7, size: 32, offset: 640)
!4872 = !DIDerivedType(tag: DW_TAG_member, name: "fl_type", scope: !4863, file: !1317, line: 1074, baseType: !482, size: 8, offset: 672)
!4873 = !DIDerivedType(tag: DW_TAG_member, name: "fl_pid", scope: !4863, file: !1317, line: 1075, baseType: !7, size: 32, offset: 704)
!4874 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link_cpu", scope: !4863, file: !1317, line: 1076, baseType: !32, size: 32, offset: 736)
!4875 = !DIDerivedType(tag: DW_TAG_member, name: "fl_wait", scope: !4863, file: !1317, line: 1077, baseType: !1889, size: 128, offset: 768)
!4876 = !DIDerivedType(tag: DW_TAG_member, name: "fl_file", scope: !4863, file: !1317, line: 1078, baseType: !1315, size: 64, offset: 896)
!4877 = !DIDerivedType(tag: DW_TAG_member, name: "fl_start", scope: !4863, file: !1317, line: 1079, baseType: !1476, size: 64, offset: 960)
!4878 = !DIDerivedType(tag: DW_TAG_member, name: "fl_end", scope: !4863, file: !1317, line: 1080, baseType: !1476, size: 64, offset: 1024)
!4879 = !DIDerivedType(tag: DW_TAG_member, name: "fl_fasync", scope: !4863, file: !1317, line: 1082, baseType: !1908, size: 64, offset: 1088)
!4880 = !DIDerivedType(tag: DW_TAG_member, name: "fl_break_time", scope: !4863, file: !1317, line: 1084, baseType: !312, size: 64, offset: 1152)
!4881 = !DIDerivedType(tag: DW_TAG_member, name: "fl_downgrade_time", scope: !4863, file: !1317, line: 1085, baseType: !312, size: 64, offset: 1216)
!4882 = !DIDerivedType(tag: DW_TAG_member, name: "fl_ops", scope: !4863, file: !1317, line: 1087, baseType: !4883, size: 64, offset: 1280)
!4883 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4884, size: 64)
!4884 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4885)
!4885 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_operations", file: !1317, line: 1011, size: 128, elements: !4886)
!4886 = !{!4887, !4891}
!4887 = !DIDerivedType(tag: DW_TAG_member, name: "fl_copy_lock", scope: !4885, file: !1317, line: 1012, baseType: !4888, size: 64)
!4888 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4889, size: 64)
!4889 = !DISubroutineType(types: !4890)
!4890 = !{null, !4862, !4862}
!4891 = !DIDerivedType(tag: DW_TAG_member, name: "fl_release_private", scope: !4885, file: !1317, line: 1013, baseType: !4892, size: 64, offset: 64)
!4892 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4893, size: 64)
!4893 = !DISubroutineType(types: !4894)
!4894 = !{null, !4862}
!4895 = !DIDerivedType(tag: DW_TAG_member, name: "fl_lmops", scope: !4863, file: !1317, line: 1088, baseType: !4896, size: 64, offset: 1344)
!4896 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4897, size: 64)
!4897 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4898)
!4898 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_manager_operations", file: !1317, line: 1016, size: 512, elements: !4899)
!4899 = !{!4900, !4904, !4908, !4909, !4913, !4917, !4921, !4925}
!4900 = !DIDerivedType(tag: DW_TAG_member, name: "lm_get_owner", scope: !4898, file: !1317, line: 1017, baseType: !4901, size: 64)
!4901 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4902, size: 64)
!4902 = !DISubroutineType(types: !4903)
!4903 = !{!4848, !4848}
!4904 = !DIDerivedType(tag: DW_TAG_member, name: "lm_put_owner", scope: !4898, file: !1317, line: 1018, baseType: !4905, size: 64, offset: 64)
!4905 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4906, size: 64)
!4906 = !DISubroutineType(types: !4907)
!4907 = !{null, !4848}
!4908 = !DIDerivedType(tag: DW_TAG_member, name: "lm_notify", scope: !4898, file: !1317, line: 1019, baseType: !4892, size: 64, offset: 128)
!4909 = !DIDerivedType(tag: DW_TAG_member, name: "lm_grant", scope: !4898, file: !1317, line: 1020, baseType: !4910, size: 64, offset: 192)
!4910 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4911, size: 64)
!4911 = !DISubroutineType(types: !4912)
!4912 = !{!32, !4862, !32}
!4913 = !DIDerivedType(tag: DW_TAG_member, name: "lm_break", scope: !4898, file: !1317, line: 1021, baseType: !4914, size: 64, offset: 256)
!4914 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4915, size: 64)
!4915 = !DISubroutineType(types: !4916)
!4916 = !{!771, !4862}
!4917 = !DIDerivedType(tag: DW_TAG_member, name: "lm_change", scope: !4898, file: !1317, line: 1022, baseType: !4918, size: 64, offset: 320)
!4918 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4919, size: 64)
!4919 = !DISubroutineType(types: !4920)
!4920 = !{!32, !4862, !32, !287}
!4921 = !DIDerivedType(tag: DW_TAG_member, name: "lm_setup", scope: !4898, file: !1317, line: 1023, baseType: !4922, size: 64, offset: 384)
!4922 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4923, size: 64)
!4923 = !DISubroutineType(types: !4924)
!4924 = !{null, !4862, !1802}
!4925 = !DIDerivedType(tag: DW_TAG_member, name: "lm_breaker_owns_lease", scope: !4898, file: !1317, line: 1024, baseType: !4914, size: 64, offset: 448)
!4926 = !DIDerivedType(tag: DW_TAG_member, name: "fl_u", scope: !4863, file: !1317, line: 1097, baseType: !4927, size: 256, offset: 1408)
!4927 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4863, file: !1317, line: 1089, size: 256, elements: !4928)
!4928 = !{!4929, !4938, !4944}
!4929 = !DIDerivedType(tag: DW_TAG_member, name: "nfs_fl", scope: !4927, file: !1317, line: 1090, baseType: !4930, size: 256)
!4930 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs_lock_info", file: !4931, line: 10, size: 256, elements: !4932)
!4931 = !DIFile(filename: "./include/linux/nfs_fs_i.h", directory: "/home/lizy2001/genbc/linux")
!4932 = !{!4933, !4934, !4937}
!4933 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !4930, file: !4931, line: 11, baseType: !987, size: 32)
!4934 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4930, file: !4931, line: 12, baseType: !4935, size: 64, offset: 64)
!4935 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4936, size: 64)
!4936 = !DICompositeType(tag: DW_TAG_structure_type, name: "nlm_lockowner", file: !4931, line: 5, flags: DIFlagFwdDecl)
!4937 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !4930, file: !4931, line: 13, baseType: !284, size: 128, offset: 128)
!4938 = !DIDerivedType(tag: DW_TAG_member, name: "nfs4_fl", scope: !4927, file: !1317, line: 1091, baseType: !4939, size: 64)
!4939 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_info", file: !4931, line: 17, size: 64, elements: !4940)
!4940 = !{!4941}
!4941 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4939, file: !4931, line: 18, baseType: !4942, size: 64)
!4942 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4943, size: 64)
!4943 = !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_state", file: !4931, line: 16, flags: DIFlagFwdDecl)
!4944 = !DIDerivedType(tag: DW_TAG_member, name: "afs", scope: !4927, file: !1317, line: 1096, baseType: !4945, size: 192)
!4945 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4927, file: !1317, line: 1092, size: 192, elements: !4946)
!4946 = !{!4947, !4948, !4949}
!4947 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !4945, file: !1317, line: 1093, baseType: !284, size: 128)
!4948 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !4945, file: !1317, line: 1094, baseType: !32, size: 32, offset: 128)
!4949 = !DIDerivedType(tag: DW_TAG_member, name: "debug_id", scope: !4945, file: !1317, line: 1095, baseType: !7, size: 32, offset: 160)
!4950 = !DIDerivedType(tag: DW_TAG_member, name: "sendpage", scope: !4788, file: !1317, line: 1843, baseType: !4951, size: 64, offset: 1280)
!4951 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4952, size: 64)
!4952 = !DISubroutineType(types: !4953)
!4953 = !{!1521, !1315, !1719, !32, !1039, !1694, !32}
!4954 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !4788, file: !1317, line: 1844, baseType: !2218, size: 64, offset: 1344)
!4955 = !DIDerivedType(tag: DW_TAG_member, name: "check_flags", scope: !4788, file: !1317, line: 1845, baseType: !4956, size: 64, offset: 1408)
!4956 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4957, size: 64)
!4957 = !DISubroutineType(types: !4958)
!4958 = !{!32, !32}
!4959 = !DIDerivedType(tag: DW_TAG_member, name: "flock", scope: !4788, file: !1317, line: 1846, baseType: !4859, size: 64, offset: 1472)
!4960 = !DIDerivedType(tag: DW_TAG_member, name: "splice_write", scope: !4788, file: !1317, line: 1847, baseType: !4961, size: 64, offset: 1536)
!4961 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4962, size: 64)
!4962 = !DISubroutineType(types: !4963)
!4963 = !{!1521, !1883, !1315, !1694, !1039, !7}
!4964 = !DIDerivedType(tag: DW_TAG_member, name: "splice_read", scope: !4788, file: !1317, line: 1848, baseType: !4965, size: 64, offset: 1600)
!4965 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4966, size: 64)
!4966 = !DISubroutineType(types: !4967)
!4967 = !{!1521, !1315, !1694, !1883, !1039, !7}
!4968 = !DIDerivedType(tag: DW_TAG_member, name: "setlease", scope: !4788, file: !1317, line: 1849, baseType: !4969, size: 64, offset: 1664)
!4969 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4970, size: 64)
!4970 = !DISubroutineType(types: !4971)
!4971 = !{!32, !1315, !998, !4972, !1802}
!4972 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4862, size: 64)
!4973 = !DIDerivedType(tag: DW_TAG_member, name: "fallocate", scope: !4788, file: !1317, line: 1850, baseType: !4974, size: 64, offset: 1728)
!4974 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4975, size: 64)
!4975 = !DISubroutineType(types: !4976)
!4976 = !{!998, !1315, !32, !1476, !1476}
!4977 = !DIDerivedType(tag: DW_TAG_member, name: "show_fdinfo", scope: !4788, file: !1317, line: 1852, baseType: !4978, size: 64, offset: 1792)
!4978 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4979, size: 64)
!4979 = !DISubroutineType(types: !4980)
!4980 = !{null, !1653, !1315}
!4981 = !DIDerivedType(tag: DW_TAG_member, name: "copy_file_range", scope: !4788, file: !1317, line: 1856, baseType: !4982, size: 64, offset: 1856)
!4982 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4983, size: 64)
!4983 = !DISubroutineType(types: !4984)
!4984 = !{!1521, !1315, !1476, !1315, !1476, !1039, !7}
!4985 = !DIDerivedType(tag: DW_TAG_member, name: "remap_file_range", scope: !4788, file: !1317, line: 1858, baseType: !4986, size: 64, offset: 1920)
!4986 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4987, size: 64)
!4987 = !DISubroutineType(types: !4988)
!4988 = !{!1476, !1315, !1476, !1315, !1476, !1476, !7}
!4989 = !DIDerivedType(tag: DW_TAG_member, name: "fadvise", scope: !4788, file: !1317, line: 1861, baseType: !4851, size: 64, offset: 1984)
!4990 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !4783, file: !1317, line: 692, baseType: !1607, size: 64)
!4991 = !DIDerivedType(tag: DW_TAG_member, name: "i_flctx", scope: !1376, file: !1317, line: 694, baseType: !4992, size: 64, offset: 2560)
!4992 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4993, size: 64)
!4993 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_context", file: !1317, line: 1100, size: 384, elements: !4994)
!4994 = !{!4995, !4996, !4997, !4998}
!4995 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lock", scope: !4993, file: !1317, line: 1101, baseType: !1670)
!4996 = !DIDerivedType(tag: DW_TAG_member, name: "flc_flock", scope: !4993, file: !1317, line: 1102, baseType: !284, size: 128)
!4997 = !DIDerivedType(tag: DW_TAG_member, name: "flc_posix", scope: !4993, file: !1317, line: 1103, baseType: !284, size: 128, offset: 128)
!4998 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lease", scope: !4993, file: !1317, line: 1104, baseType: !284, size: 128, offset: 256)
!4999 = !DIDerivedType(tag: DW_TAG_member, name: "i_data", scope: !1376, file: !1317, line: 695, baseType: !1733, size: 1216, align: 64, offset: 2624)
!5000 = !DIDerivedType(tag: DW_TAG_member, name: "i_devices", scope: !1376, file: !1317, line: 696, baseType: !284, size: 128, offset: 3840)
!5001 = !DIDerivedType(tag: DW_TAG_member, scope: !1376, file: !1317, line: 697, baseType: !5002, size: 64, offset: 3968)
!5002 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1376, file: !1317, line: 697, size: 64, elements: !5003)
!5003 = !{!5004, !5005, !5006, !5009, !5010}
!5004 = !DIDerivedType(tag: DW_TAG_member, name: "i_pipe", scope: !5002, file: !1317, line: 698, baseType: !1883, size: 64)
!5005 = !DIDerivedType(tag: DW_TAG_member, name: "i_bdev", scope: !5002, file: !1317, line: 699, baseType: !4539, size: 64)
!5006 = !DIDerivedType(tag: DW_TAG_member, name: "i_cdev", scope: !5002, file: !1317, line: 700, baseType: !5007, size: 64)
!5007 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5008, size: 64)
!5008 = !DICompositeType(tag: DW_TAG_structure_type, name: "cdev", file: !1317, line: 700, flags: DIFlagFwdDecl)
!5009 = !DIDerivedType(tag: DW_TAG_member, name: "i_link", scope: !5002, file: !1317, line: 701, baseType: !1038, size: 64)
!5010 = !DIDerivedType(tag: DW_TAG_member, name: "i_dir_seq", scope: !5002, file: !1317, line: 702, baseType: !7, size: 32)
!5011 = !DIDerivedType(tag: DW_TAG_member, name: "i_generation", scope: !1376, file: !1317, line: 705, baseType: !493, size: 32, offset: 4032)
!5012 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_mask", scope: !1376, file: !1317, line: 708, baseType: !493, size: 32, offset: 4064)
!5013 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_marks", scope: !1376, file: !1317, line: 709, baseType: !4621, size: 64, offset: 4096)
!5014 = !DIDerivedType(tag: DW_TAG_member, name: "i_private", scope: !1376, file: !1317, line: 720, baseType: !591, size: 64, offset: 4160)
!5015 = !DIDerivedType(tag: DW_TAG_member, name: "d_iname", scope: !1339, file: !1336, line: 98, baseType: !1031, size: 256, offset: 448)
!5016 = !DIDerivedType(tag: DW_TAG_member, name: "d_lockref", scope: !1339, file: !1336, line: 101, baseType: !5017, size: 32, offset: 704)
!5017 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lockref", file: !5018, line: 25, size: 32, elements: !5019)
!5018 = !DIFile(filename: "./include/linux/lockref.h", directory: "/home/lizy2001/genbc/linux")
!5019 = !{!5020}
!5020 = !DIDerivedType(tag: DW_TAG_member, scope: !5017, file: !5018, line: 26, baseType: !5021, size: 32)
!5021 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5017, file: !5018, line: 26, size: 32, elements: !5022)
!5022 = !{!5023}
!5023 = !DIDerivedType(tag: DW_TAG_member, scope: !5021, file: !5018, line: 30, baseType: !5024, size: 32)
!5024 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5021, file: !5018, line: 30, size: 32, elements: !5025)
!5025 = !{!5026, !5027}
!5026 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !5024, file: !5018, line: 31, baseType: !1670)
!5027 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !5024, file: !5018, line: 32, baseType: !32, size: 32)
!5028 = !DIDerivedType(tag: DW_TAG_member, name: "d_op", scope: !1339, file: !1336, line: 102, baseType: !4637, size: 64, offset: 768)
!5029 = !DIDerivedType(tag: DW_TAG_member, name: "d_sb", scope: !1339, file: !1336, line: 103, baseType: !1545, size: 64, offset: 832)
!5030 = !DIDerivedType(tag: DW_TAG_member, name: "d_time", scope: !1339, file: !1336, line: 104, baseType: !312, size: 64, offset: 896)
!5031 = !DIDerivedType(tag: DW_TAG_member, name: "d_fsdata", scope: !1339, file: !1336, line: 105, baseType: !591, size: 64, offset: 960)
!5032 = !DIDerivedType(tag: DW_TAG_member, scope: !1339, file: !1336, line: 107, baseType: !5033, size: 128, offset: 1024)
!5033 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1339, file: !1336, line: 107, size: 128, elements: !5034)
!5034 = !{!5035, !5036}
!5035 = !DIDerivedType(tag: DW_TAG_member, name: "d_lru", scope: !5033, file: !1336, line: 108, baseType: !284, size: 128)
!5036 = !DIDerivedType(tag: DW_TAG_member, name: "d_wait", scope: !5033, file: !1336, line: 109, baseType: !5037, size: 64)
!5037 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1889, size: 64)
!5038 = !DIDerivedType(tag: DW_TAG_member, name: "d_child", scope: !1339, file: !1336, line: 111, baseType: !284, size: 128, offset: 1152)
!5039 = !DIDerivedType(tag: DW_TAG_member, name: "d_subdirs", scope: !1339, file: !1336, line: 112, baseType: !284, size: 128, offset: 1280)
!5040 = !DIDerivedType(tag: DW_TAG_member, name: "d_u", scope: !1339, file: !1336, line: 120, baseType: !5041, size: 128, offset: 1408)
!5041 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1339, file: !1336, line: 116, size: 128, elements: !5042)
!5042 = !{!5043, !5044, !5045}
!5043 = !DIDerivedType(tag: DW_TAG_member, name: "d_alias", scope: !5041, file: !1336, line: 117, baseType: !276, size: 128)
!5044 = !DIDerivedType(tag: DW_TAG_member, name: "d_in_lookup_hash", scope: !5041, file: !1336, line: 118, baseType: !1353, size: 128)
!5045 = !DIDerivedType(tag: DW_TAG_member, name: "d_rcu", scope: !5041, file: !1336, line: 119, baseType: !299, size: 128, align: 64)
!5046 = !DIDerivedType(tag: DW_TAG_member, name: "f_inode", scope: !1316, file: !1317, line: 922, baseType: !1375, size: 64, offset: 256)
!5047 = !DIDerivedType(tag: DW_TAG_member, name: "f_op", scope: !1316, file: !1317, line: 923, baseType: !4786, size: 64, offset: 320)
!5048 = !DIDerivedType(tag: DW_TAG_member, name: "f_lock", scope: !1316, file: !1317, line: 929, baseType: !1670, offset: 384)
!5049 = !DIDerivedType(tag: DW_TAG_member, name: "f_write_hint", scope: !1316, file: !1317, line: 930, baseType: !5050, size: 32, offset: 384)
!5050 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rw_hint", file: !1317, line: 296, baseType: !7, size: 32, elements: !5051)
!5051 = !{!5052, !5053, !5054, !5055, !5056, !5057}
!5052 = !DIEnumerator(name: "WRITE_LIFE_NOT_SET", value: 0, isUnsigned: true)
!5053 = !DIEnumerator(name: "WRITE_LIFE_NONE", value: 1, isUnsigned: true)
!5054 = !DIEnumerator(name: "WRITE_LIFE_SHORT", value: 2, isUnsigned: true)
!5055 = !DIEnumerator(name: "WRITE_LIFE_MEDIUM", value: 3, isUnsigned: true)
!5056 = !DIEnumerator(name: "WRITE_LIFE_LONG", value: 4, isUnsigned: true)
!5057 = !DIEnumerator(name: "WRITE_LIFE_EXTREME", value: 5, isUnsigned: true)
!5058 = !DIDerivedType(tag: DW_TAG_member, name: "f_count", scope: !1316, file: !1317, line: 931, baseType: !371, size: 64, offset: 448)
!5059 = !DIDerivedType(tag: DW_TAG_member, name: "f_flags", scope: !1316, file: !1317, line: 932, baseType: !7, size: 32, offset: 512)
!5060 = !DIDerivedType(tag: DW_TAG_member, name: "f_mode", scope: !1316, file: !1317, line: 933, baseType: !4633, size: 32, offset: 544)
!5061 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos_lock", scope: !1316, file: !1317, line: 934, baseType: !1665, size: 192, offset: 576)
!5062 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos", scope: !1316, file: !1317, line: 935, baseType: !1476, size: 64, offset: 768)
!5063 = !DIDerivedType(tag: DW_TAG_member, name: "f_owner", scope: !1316, file: !1317, line: 936, baseType: !5064, size: 192, offset: 832)
!5064 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fown_struct", file: !1317, line: 885, size: 192, elements: !5065)
!5065 = !{!5066, !5067, !5068, !5076, !5077, !5078}
!5066 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !5064, file: !1317, line: 886, baseType: !1912)
!5067 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !5064, file: !1317, line: 887, baseType: !2571, size: 64)
!5068 = !DIDerivedType(tag: DW_TAG_member, name: "pid_type", scope: !5064, file: !1317, line: 888, baseType: !5069, size: 32, offset: 64)
!5069 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "pid_type", file: !2573, line: 9, baseType: !7, size: 32, elements: !5070)
!5070 = !{!5071, !5072, !5073, !5074, !5075}
!5071 = !DIEnumerator(name: "PIDTYPE_PID", value: 0, isUnsigned: true)
!5072 = !DIEnumerator(name: "PIDTYPE_TGID", value: 1, isUnsigned: true)
!5073 = !DIEnumerator(name: "PIDTYPE_PGID", value: 2, isUnsigned: true)
!5074 = !DIEnumerator(name: "PIDTYPE_SID", value: 3, isUnsigned: true)
!5075 = !DIEnumerator(name: "PIDTYPE_MAX", value: 4, isUnsigned: true)
!5076 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !5064, file: !1317, line: 889, baseType: !1382, size: 32, offset: 96)
!5077 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !5064, file: !1317, line: 889, baseType: !1382, size: 32, offset: 128)
!5078 = !DIDerivedType(tag: DW_TAG_member, name: "signum", scope: !5064, file: !1317, line: 890, baseType: !32, size: 32, offset: 160)
!5079 = !DIDerivedType(tag: DW_TAG_member, name: "f_cred", scope: !1316, file: !1317, line: 937, baseType: !2642, size: 64, offset: 1024)
!5080 = !DIDerivedType(tag: DW_TAG_member, name: "f_ra", scope: !1316, file: !1317, line: 938, baseType: !5081, size: 256, offset: 1088)
!5081 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_ra_state", file: !1317, line: 896, size: 256, elements: !5082)
!5082 = !{!5083, !5084, !5085, !5086, !5087, !5088}
!5083 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !5081, file: !1317, line: 897, baseType: !312, size: 64)
!5084 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !5081, file: !1317, line: 898, baseType: !7, size: 32, offset: 64)
!5085 = !DIDerivedType(tag: DW_TAG_member, name: "async_size", scope: !5081, file: !1317, line: 899, baseType: !7, size: 32, offset: 96)
!5086 = !DIDerivedType(tag: DW_TAG_member, name: "ra_pages", scope: !5081, file: !1317, line: 902, baseType: !7, size: 32, offset: 128)
!5087 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_miss", scope: !5081, file: !1317, line: 903, baseType: !7, size: 32, offset: 160)
!5088 = !DIDerivedType(tag: DW_TAG_member, name: "prev_pos", scope: !5081, file: !1317, line: 904, baseType: !1476, size: 64, offset: 192)
!5089 = !DIDerivedType(tag: DW_TAG_member, name: "f_version", scope: !1316, file: !1317, line: 940, baseType: !331, size: 64, offset: 1344)
!5090 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !1316, file: !1317, line: 945, baseType: !591, size: 64, offset: 1408)
!5091 = !DIDerivedType(tag: DW_TAG_member, name: "f_ep_links", scope: !1316, file: !1317, line: 949, baseType: !284, size: 128, offset: 1472)
!5092 = !DIDerivedType(tag: DW_TAG_member, name: "f_tfile_llink", scope: !1316, file: !1317, line: 950, baseType: !284, size: 128, offset: 1600)
!5093 = !DIDerivedType(tag: DW_TAG_member, name: "f_mapping", scope: !1316, file: !1317, line: 952, baseType: !1732, size: 64, offset: 1728)
!5094 = !DIDerivedType(tag: DW_TAG_member, name: "f_wb_err", scope: !1316, file: !1317, line: 953, baseType: !2025, size: 32, offset: 1792)
!5095 = !DIDerivedType(tag: DW_TAG_member, name: "f_sb_err", scope: !1316, file: !1317, line: 954, baseType: !2025, size: 32, offset: 1824)
!5096 = !DIDerivedType(tag: DW_TAG_member, name: "map_free", scope: !1105, file: !65, line: 59, baseType: !5097, size: 64, offset: 192)
!5097 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5098, size: 64)
!5098 = !DISubroutineType(types: !5099)
!5099 = !{null, !1310}
!5100 = !DIDerivedType(tag: DW_TAG_member, name: "map_get_next_key", scope: !1105, file: !65, line: 60, baseType: !5101, size: 64, offset: 256)
!5101 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5102, size: 64)
!5102 = !DISubroutineType(types: !5103)
!5103 = !{!32, !1310, !591, !591}
!5104 = !DIDerivedType(tag: DW_TAG_member, name: "map_release_uref", scope: !1105, file: !65, line: 61, baseType: !5097, size: 64, offset: 320)
!5105 = !DIDerivedType(tag: DW_TAG_member, name: "map_lookup_elem_sys_only", scope: !1105, file: !65, line: 62, baseType: !5106, size: 64, offset: 384)
!5106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5107, size: 64)
!5107 = !DISubroutineType(types: !5108)
!5108 = !{!591, !1310, !591}
!5109 = !DIDerivedType(tag: DW_TAG_member, name: "map_lookup_batch", scope: !1105, file: !65, line: 63, baseType: !5110, size: 64, offset: 448)
!5110 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5111, size: 64)
!5111 = !DISubroutineType(types: !5112)
!5112 = !{!32, !1310, !5113, !1111}
!5113 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5114, size: 64)
!5114 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1112)
!5115 = !DIDerivedType(tag: DW_TAG_member, name: "map_lookup_and_delete_batch", scope: !1105, file: !65, line: 65, baseType: !5110, size: 64, offset: 512)
!5116 = !DIDerivedType(tag: DW_TAG_member, name: "map_update_batch", scope: !1105, file: !65, line: 68, baseType: !5110, size: 64, offset: 576)
!5117 = !DIDerivedType(tag: DW_TAG_member, name: "map_delete_batch", scope: !1105, file: !65, line: 70, baseType: !5110, size: 64, offset: 640)
!5118 = !DIDerivedType(tag: DW_TAG_member, name: "map_lookup_elem", scope: !1105, file: !65, line: 74, baseType: !5106, size: 64, offset: 704)
!5119 = !DIDerivedType(tag: DW_TAG_member, name: "map_update_elem", scope: !1105, file: !65, line: 75, baseType: !5120, size: 64, offset: 768)
!5120 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5121, size: 64)
!5121 = !DISubroutineType(types: !5122)
!5122 = !{!32, !1310, !591, !591, !331}
!5123 = !DIDerivedType(tag: DW_TAG_member, name: "map_delete_elem", scope: !1105, file: !65, line: 76, baseType: !5124, size: 64, offset: 832)
!5124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5125, size: 64)
!5125 = !DISubroutineType(types: !5126)
!5126 = !{!32, !1310, !591}
!5127 = !DIDerivedType(tag: DW_TAG_member, name: "map_push_elem", scope: !1105, file: !65, line: 77, baseType: !5128, size: 64, offset: 896)
!5128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5129, size: 64)
!5129 = !DISubroutineType(types: !5130)
!5130 = !{!32, !1310, !591, !331}
!5131 = !DIDerivedType(tag: DW_TAG_member, name: "map_pop_elem", scope: !1105, file: !65, line: 78, baseType: !5124, size: 64, offset: 960)
!5132 = !DIDerivedType(tag: DW_TAG_member, name: "map_peek_elem", scope: !1105, file: !65, line: 79, baseType: !5124, size: 64, offset: 1024)
!5133 = !DIDerivedType(tag: DW_TAG_member, name: "map_fd_get_ptr", scope: !1105, file: !65, line: 82, baseType: !5134, size: 64, offset: 1088)
!5134 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5135, size: 64)
!5135 = !DISubroutineType(types: !5136)
!5136 = !{!591, !1310, !1315, !32}
!5137 = !DIDerivedType(tag: DW_TAG_member, name: "map_fd_put_ptr", scope: !1105, file: !65, line: 84, baseType: !1415, size: 64, offset: 1152)
!5138 = !DIDerivedType(tag: DW_TAG_member, name: "map_gen_lookup", scope: !1105, file: !65, line: 85, baseType: !5139, size: 64, offset: 1216)
!5139 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5140, size: 64)
!5140 = !DISubroutineType(types: !5141)
!5141 = !{!32, !1310, !5142}
!5142 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5143, size: 64)
!5143 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_insn", file: !96, line: 65, size: 64, elements: !5144)
!5144 = !{!5145, !5146, !5147, !5148, !5149}
!5145 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !5143, file: !96, line: 66, baseType: !481, size: 8)
!5146 = !DIDerivedType(tag: DW_TAG_member, name: "dst_reg", scope: !5143, file: !96, line: 67, baseType: !481, size: 4, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!5147 = !DIDerivedType(tag: DW_TAG_member, name: "src_reg", scope: !5143, file: !96, line: 68, baseType: !481, size: 4, offset: 12, flags: DIFlagBitField, extraData: i64 8)
!5148 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !5143, file: !96, line: 69, baseType: !2315, size: 16, offset: 16)
!5149 = !DIDerivedType(tag: DW_TAG_member, name: "imm", scope: !5143, file: !96, line: 70, baseType: !942, size: 32, offset: 32)
!5150 = !DIDerivedType(tag: DW_TAG_member, name: "map_fd_sys_lookup_elem", scope: !1105, file: !65, line: 86, baseType: !5151, size: 64, offset: 1280)
!5151 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5152, size: 64)
!5152 = !DISubroutineType(types: !5153)
!5153 = !{!987, !591}
!5154 = !DIDerivedType(tag: DW_TAG_member, name: "map_seq_show_elem", scope: !1105, file: !65, line: 87, baseType: !5155, size: 64, offset: 1344)
!5155 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5156, size: 64)
!5156 = !DISubroutineType(types: !5157)
!5157 = !{null, !1310, !591, !1653}
!5158 = !DIDerivedType(tag: DW_TAG_member, name: "map_check_btf", scope: !1105, file: !65, line: 89, baseType: !5159, size: 64, offset: 1408)
!5159 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5160, size: 64)
!5160 = !DISubroutineType(types: !5161)
!5161 = !{!32, !5162, !5164, !5167, !5167}
!5162 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5163, size: 64)
!5163 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1100)
!5164 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5165, size: 64)
!5165 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5166)
!5166 = !DICompositeType(tag: DW_TAG_structure_type, name: "btf", file: !65, line: 32, flags: DIFlagFwdDecl)
!5167 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5168, size: 64)
!5168 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5169)
!5169 = !DICompositeType(tag: DW_TAG_structure_type, name: "btf_type", file: !65, line: 33, flags: DIFlagFwdDecl)
!5170 = !DIDerivedType(tag: DW_TAG_member, name: "map_poke_track", scope: !1105, file: !65, line: 95, baseType: !5171, size: 64, offset: 1472)
!5171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5172, size: 64)
!5172 = !DISubroutineType(types: !5173)
!5173 = !{!32, !1310, !5174}
!5174 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5175, size: 64)
!5175 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_prog_aux", file: !65, line: 757, size: 4928, elements: !5176)
!5176 = !{!5177, !5178, !5179, !5180, !5181, !5182, !5183, !5184, !5185, !5186, !5187, !5188, !5189, !5190, !5198, !5199, !5200, !5243, !5244, !5245, !5246, !5247, !5248, !5249, !5250, !5251, !5252, !5253, !5254, !5255, !5257, !5258, !5277, !5278, !5279, !5288, !5290, !5291, !5292, !5293, !5294, !5296, !5297, !5312, !5314, !5320, !5326, !5334, !5335, !5336, !5337, !5338, !5339, !5347, !5354}
!5177 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !5175, file: !65, line: 758, baseType: !373, size: 64)
!5178 = !DIDerivedType(tag: DW_TAG_member, name: "used_map_cnt", scope: !5175, file: !65, line: 759, baseType: !987, size: 32, offset: 64)
!5179 = !DIDerivedType(tag: DW_TAG_member, name: "max_ctx_offset", scope: !5175, file: !65, line: 760, baseType: !987, size: 32, offset: 96)
!5180 = !DIDerivedType(tag: DW_TAG_member, name: "max_pkt_offset", scope: !5175, file: !65, line: 761, baseType: !987, size: 32, offset: 128)
!5181 = !DIDerivedType(tag: DW_TAG_member, name: "max_tp_access", scope: !5175, file: !65, line: 762, baseType: !987, size: 32, offset: 160)
!5182 = !DIDerivedType(tag: DW_TAG_member, name: "stack_depth", scope: !5175, file: !65, line: 763, baseType: !987, size: 32, offset: 192)
!5183 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !5175, file: !65, line: 764, baseType: !987, size: 32, offset: 224)
!5184 = !DIDerivedType(tag: DW_TAG_member, name: "func_cnt", scope: !5175, file: !65, line: 765, baseType: !987, size: 32, offset: 256)
!5185 = !DIDerivedType(tag: DW_TAG_member, name: "func_idx", scope: !5175, file: !65, line: 766, baseType: !987, size: 32, offset: 288)
!5186 = !DIDerivedType(tag: DW_TAG_member, name: "attach_btf_id", scope: !5175, file: !65, line: 767, baseType: !987, size: 32, offset: 320)
!5187 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_arg_info_size", scope: !5175, file: !65, line: 768, baseType: !987, size: 32, offset: 352)
!5188 = !DIDerivedType(tag: DW_TAG_member, name: "max_rdonly_access", scope: !5175, file: !65, line: 769, baseType: !987, size: 32, offset: 384)
!5189 = !DIDerivedType(tag: DW_TAG_member, name: "max_rdwr_access", scope: !5175, file: !65, line: 770, baseType: !987, size: 32, offset: 416)
!5190 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_arg_info", scope: !5175, file: !65, line: 771, baseType: !5191, size: 64, offset: 448)
!5191 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5192, size: 64)
!5192 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5193)
!5193 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_ctx_arg_aux", file: !65, line: 751, size: 96, elements: !5194)
!5194 = !{!5195, !5196, !5197}
!5195 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !5193, file: !65, line: 752, baseType: !987, size: 32)
!5196 = !DIDerivedType(tag: DW_TAG_member, name: "reg_type", scope: !5193, file: !65, line: 753, baseType: !64, size: 32, offset: 32)
!5197 = !DIDerivedType(tag: DW_TAG_member, name: "btf_id", scope: !5193, file: !65, line: 754, baseType: !987, size: 32, offset: 64)
!5198 = !DIDerivedType(tag: DW_TAG_member, name: "dst_mutex", scope: !5175, file: !65, line: 772, baseType: !1665, size: 192, offset: 512)
!5199 = !DIDerivedType(tag: DW_TAG_member, name: "dst_prog", scope: !5175, file: !65, line: 773, baseType: !1088, size: 64, offset: 704)
!5200 = !DIDerivedType(tag: DW_TAG_member, name: "dst_trampoline", scope: !5175, file: !65, line: 774, baseType: !5201, size: 64, offset: 768)
!5201 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5202, size: 64)
!5202 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_trampoline", file: !65, line: 586, size: 2944, elements: !5203)
!5203 = !{!5204, !5205, !5206, !5207, !5208, !5220, !5221, !5223, !5224, !5225, !5226}
!5204 = !DIDerivedType(tag: DW_TAG_member, name: "hlist", scope: !5202, file: !65, line: 588, baseType: !276, size: 128)
!5205 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !5202, file: !65, line: 590, baseType: !1665, size: 192, offset: 128)
!5206 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !5202, file: !65, line: 591, baseType: !568, size: 32, offset: 320)
!5207 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !5202, file: !65, line: 592, baseType: !331, size: 64, offset: 384)
!5208 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !5202, file: !65, line: 597, baseType: !5209, size: 256, offset: 448)
!5209 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5202, file: !65, line: 593, size: 256, elements: !5210)
!5210 = !{!5211, !5218, !5219}
!5211 = !DIDerivedType(tag: DW_TAG_member, name: "model", scope: !5209, file: !65, line: 594, baseType: !5212, size: 112)
!5212 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "btf_func_model", file: !65, line: 509, size: 112, elements: !5213)
!5213 = !{!5214, !5215, !5216}
!5214 = !DIDerivedType(tag: DW_TAG_member, name: "ret_size", scope: !5212, file: !65, line: 510, baseType: !794, size: 8)
!5215 = !DIDerivedType(tag: DW_TAG_member, name: "nr_args", scope: !5212, file: !65, line: 511, baseType: !794, size: 8, offset: 8)
!5216 = !DIDerivedType(tag: DW_TAG_member, name: "arg_size", scope: !5212, file: !65, line: 512, baseType: !5217, size: 96, offset: 16)
!5217 = !DICompositeType(tag: DW_TAG_array_type, baseType: !794, size: 96, elements: !4149)
!5218 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !5209, file: !65, line: 595, baseType: !591, size: 64, offset: 128)
!5219 = !DIDerivedType(tag: DW_TAG_member, name: "ftrace_managed", scope: !5209, file: !65, line: 596, baseType: !771, size: 8, offset: 192)
!5220 = !DIDerivedType(tag: DW_TAG_member, name: "extension_prog", scope: !5202, file: !65, line: 602, baseType: !1088, size: 64, offset: 704)
!5221 = !DIDerivedType(tag: DW_TAG_member, name: "progs_hlist", scope: !5202, file: !65, line: 604, baseType: !5222, size: 192, offset: 768)
!5222 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1581, size: 192, elements: !1592)
!5223 = !DIDerivedType(tag: DW_TAG_member, name: "progs_cnt", scope: !5202, file: !65, line: 606, baseType: !3397, size: 96, offset: 960)
!5224 = !DIDerivedType(tag: DW_TAG_member, name: "image", scope: !5202, file: !65, line: 608, baseType: !591, size: 64, offset: 1088)
!5225 = !DIDerivedType(tag: DW_TAG_member, name: "selector", scope: !5202, file: !65, line: 609, baseType: !331, size: 64, offset: 1152)
!5226 = !DIDerivedType(tag: DW_TAG_member, name: "ksym", scope: !5202, file: !65, line: 610, baseType: !5227, size: 1728, offset: 1216)
!5227 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_ksym", file: !65, line: 569, size: 1728, elements: !5228)
!5228 = !{!5229, !5230, !5231, !5235, !5236, !5242}
!5229 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !5227, file: !65, line: 570, baseType: !312, size: 64)
!5230 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !5227, file: !65, line: 571, baseType: !312, size: 64, offset: 64)
!5231 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5227, file: !65, line: 572, baseType: !5232, size: 1024, offset: 128)
!5232 = !DICompositeType(tag: DW_TAG_array_type, baseType: !268, size: 1024, elements: !5233)
!5233 = !{!5234}
!5234 = !DISubrange(count: 128)
!5235 = !DIDerivedType(tag: DW_TAG_member, name: "lnode", scope: !5227, file: !65, line: 573, baseType: !284, size: 128, offset: 1152)
!5236 = !DIDerivedType(tag: DW_TAG_member, name: "tnode", scope: !5227, file: !65, line: 574, baseType: !5237, size: 384, offset: 1280)
!5237 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "latch_tree_node", file: !5238, line: 40, size: 384, elements: !5239)
!5238 = !DIFile(filename: "./include/linux/rbtree_latch.h", directory: "/home/lizy2001/genbc/linux")
!5239 = !{!5240}
!5240 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !5237, file: !5238, line: 41, baseType: !5241, size: 384)
!5241 = !DICompositeType(tag: DW_TAG_array_type, baseType: !433, size: 384, elements: !2664)
!5242 = !DIDerivedType(tag: DW_TAG_member, name: "prog", scope: !5227, file: !65, line: 575, baseType: !771, size: 8, offset: 1664)
!5243 = !DIDerivedType(tag: DW_TAG_member, name: "saved_dst_prog_type", scope: !5175, file: !65, line: 775, baseType: !95, size: 32, offset: 832)
!5244 = !DIDerivedType(tag: DW_TAG_member, name: "saved_dst_attach_type", scope: !5175, file: !65, line: 776, baseType: !129, size: 32, offset: 864)
!5245 = !DIDerivedType(tag: DW_TAG_member, name: "verifier_zext", scope: !5175, file: !65, line: 777, baseType: !771, size: 8, offset: 896)
!5246 = !DIDerivedType(tag: DW_TAG_member, name: "offload_requested", scope: !5175, file: !65, line: 778, baseType: !771, size: 8, offset: 904)
!5247 = !DIDerivedType(tag: DW_TAG_member, name: "attach_btf_trace", scope: !5175, file: !65, line: 779, baseType: !771, size: 8, offset: 912)
!5248 = !DIDerivedType(tag: DW_TAG_member, name: "func_proto_unreliable", scope: !5175, file: !65, line: 780, baseType: !771, size: 8, offset: 920)
!5249 = !DIDerivedType(tag: DW_TAG_member, name: "sleepable", scope: !5175, file: !65, line: 781, baseType: !771, size: 8, offset: 928)
!5250 = !DIDerivedType(tag: DW_TAG_member, name: "tail_call_reachable", scope: !5175, file: !65, line: 782, baseType: !771, size: 8, offset: 936)
!5251 = !DIDerivedType(tag: DW_TAG_member, name: "trampoline_prog_type", scope: !5175, file: !65, line: 783, baseType: !170, size: 32, offset: 960)
!5252 = !DIDerivedType(tag: DW_TAG_member, name: "tramp_hlist", scope: !5175, file: !65, line: 784, baseType: !276, size: 128, offset: 1024)
!5253 = !DIDerivedType(tag: DW_TAG_member, name: "attach_func_proto", scope: !5175, file: !65, line: 786, baseType: !5167, size: 64, offset: 1152)
!5254 = !DIDerivedType(tag: DW_TAG_member, name: "attach_func_name", scope: !5175, file: !65, line: 788, baseType: !292, size: 64, offset: 1216)
!5255 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !5175, file: !65, line: 789, baseType: !5256, size: 64, offset: 1280)
!5256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1088, size: 64)
!5257 = !DIDerivedType(tag: DW_TAG_member, name: "jit_data", scope: !5175, file: !65, line: 790, baseType: !591, size: 64, offset: 1344)
!5258 = !DIDerivedType(tag: DW_TAG_member, name: "poke_tab", scope: !5175, file: !65, line: 791, baseType: !5259, size: 64, offset: 1408)
!5259 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5260, size: 64)
!5260 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_jit_poke_descriptor", file: !65, line: 734, size: 384, elements: !5261)
!5261 = !{!5262, !5263, !5264, !5265, !5273, !5274, !5275, !5276}
!5262 = !DIDerivedType(tag: DW_TAG_member, name: "tailcall_target", scope: !5260, file: !65, line: 735, baseType: !591, size: 64)
!5263 = !DIDerivedType(tag: DW_TAG_member, name: "tailcall_bypass", scope: !5260, file: !65, line: 736, baseType: !591, size: 64, offset: 64)
!5264 = !DIDerivedType(tag: DW_TAG_member, name: "bypass_addr", scope: !5260, file: !65, line: 737, baseType: !591, size: 64, offset: 128)
!5265 = !DIDerivedType(tag: DW_TAG_member, scope: !5260, file: !65, line: 738, baseType: !5266, size: 128, offset: 192)
!5266 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5260, file: !65, line: 738, size: 128, elements: !5267)
!5267 = !{!5268}
!5268 = !DIDerivedType(tag: DW_TAG_member, name: "tail_call", scope: !5266, file: !65, line: 742, baseType: !5269, size: 128)
!5269 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5266, file: !65, line: 739, size: 128, elements: !5270)
!5270 = !{!5271, !5272}
!5271 = !DIDerivedType(tag: DW_TAG_member, name: "map", scope: !5269, file: !65, line: 740, baseType: !1310, size: 64)
!5272 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !5269, file: !65, line: 741, baseType: !987, size: 32, offset: 64)
!5273 = !DIDerivedType(tag: DW_TAG_member, name: "tailcall_target_stable", scope: !5260, file: !65, line: 744, baseType: !771, size: 8, offset: 320)
!5274 = !DIDerivedType(tag: DW_TAG_member, name: "adj_off", scope: !5260, file: !65, line: 745, baseType: !794, size: 8, offset: 328)
!5275 = !DIDerivedType(tag: DW_TAG_member, name: "reason", scope: !5260, file: !65, line: 746, baseType: !581, size: 16, offset: 336)
!5276 = !DIDerivedType(tag: DW_TAG_member, name: "insn_idx", scope: !5260, file: !65, line: 747, baseType: !987, size: 32, offset: 352)
!5277 = !DIDerivedType(tag: DW_TAG_member, name: "size_poke_tab", scope: !5175, file: !65, line: 792, baseType: !987, size: 32, offset: 1472)
!5278 = !DIDerivedType(tag: DW_TAG_member, name: "ksym", scope: !5175, file: !65, line: 793, baseType: !5227, size: 1728, offset: 1536)
!5279 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !5175, file: !65, line: 794, baseType: !5280, size: 64, offset: 3264)
!5280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5281, size: 64)
!5281 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5282)
!5282 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_prog_ops", file: !65, line: 432, size: 64, elements: !5283)
!5283 = !{!5284}
!5284 = !DIDerivedType(tag: DW_TAG_member, name: "test_run", scope: !5282, file: !65, line: 433, baseType: !5285, size: 64)
!5285 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5286, size: 64)
!5286 = !DISubroutineType(types: !5287)
!5287 = !{!32, !1088, !5113, !1111}
!5288 = !DIDerivedType(tag: DW_TAG_member, name: "used_maps", scope: !5175, file: !65, line: 795, baseType: !5289, size: 64, offset: 3328)
!5289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1310, size: 64)
!5290 = !DIDerivedType(tag: DW_TAG_member, name: "used_maps_mutex", scope: !5175, file: !65, line: 796, baseType: !1665, size: 192, offset: 3392)
!5291 = !DIDerivedType(tag: DW_TAG_member, name: "prog", scope: !5175, file: !65, line: 797, baseType: !1088, size: 64, offset: 3584)
!5292 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !5175, file: !65, line: 798, baseType: !1953, size: 64, offset: 3648)
!5293 = !DIDerivedType(tag: DW_TAG_member, name: "load_time", scope: !5175, file: !65, line: 799, baseType: !331, size: 64, offset: 3712)
!5294 = !DIDerivedType(tag: DW_TAG_member, name: "cgroup_storage", scope: !5175, file: !65, line: 800, baseType: !5295, size: 128, offset: 3776)
!5295 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1310, size: 128, elements: !2664)
!5296 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5175, file: !65, line: 801, baseType: !267, size: 128, offset: 3904)
!5297 = !DIDerivedType(tag: DW_TAG_member, name: "offload", scope: !5175, file: !65, line: 805, baseType: !5298, size: 64, offset: 4032)
!5298 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5299, size: 64)
!5299 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_prog_offload", file: !65, line: 478, size: 576, elements: !5300)
!5300 = !{!5301, !5302, !5303, !5306, !5307, !5308, !5309, !5310, !5311}
!5301 = !DIDerivedType(tag: DW_TAG_member, name: "prog", scope: !5299, file: !65, line: 479, baseType: !1088, size: 64)
!5302 = !DIDerivedType(tag: DW_TAG_member, name: "netdev", scope: !5299, file: !65, line: 480, baseType: !290, size: 64, offset: 64)
!5303 = !DIDerivedType(tag: DW_TAG_member, name: "offdev", scope: !5299, file: !65, line: 481, baseType: !5304, size: 64, offset: 128)
!5304 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5305, size: 64)
!5305 = !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_offload_dev", file: !65, line: 209, flags: DIFlagFwdDecl)
!5306 = !DIDerivedType(tag: DW_TAG_member, name: "dev_priv", scope: !5299, file: !65, line: 482, baseType: !591, size: 64, offset: 192)
!5307 = !DIDerivedType(tag: DW_TAG_member, name: "offloads", scope: !5299, file: !65, line: 483, baseType: !284, size: 128, offset: 256)
!5308 = !DIDerivedType(tag: DW_TAG_member, name: "dev_state", scope: !5299, file: !65, line: 484, baseType: !771, size: 8, offset: 384)
!5309 = !DIDerivedType(tag: DW_TAG_member, name: "opt_failed", scope: !5299, file: !65, line: 485, baseType: !771, size: 8, offset: 392)
!5310 = !DIDerivedType(tag: DW_TAG_member, name: "jited_image", scope: !5299, file: !65, line: 486, baseType: !591, size: 64, offset: 448)
!5311 = !DIDerivedType(tag: DW_TAG_member, name: "jited_len", scope: !5299, file: !65, line: 487, baseType: !987, size: 32, offset: 512)
!5312 = !DIDerivedType(tag: DW_TAG_member, name: "btf", scope: !5175, file: !65, line: 806, baseType: !5313, size: 64, offset: 4096)
!5313 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5166, size: 64)
!5314 = !DIDerivedType(tag: DW_TAG_member, name: "func_info", scope: !5175, file: !65, line: 807, baseType: !5315, size: 64, offset: 4160)
!5315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5316, size: 64)
!5316 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_func_info", file: !96, line: 4963, size: 64, elements: !5317)
!5317 = !{!5318, !5319}
!5318 = !DIDerivedType(tag: DW_TAG_member, name: "insn_off", scope: !5316, file: !96, line: 4964, baseType: !493, size: 32)
!5319 = !DIDerivedType(tag: DW_TAG_member, name: "type_id", scope: !5316, file: !96, line: 4965, baseType: !493, size: 32, offset: 32)
!5320 = !DIDerivedType(tag: DW_TAG_member, name: "func_info_aux", scope: !5175, file: !65, line: 808, baseType: !5321, size: 64, offset: 4224)
!5321 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5322, size: 64)
!5322 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_func_info_aux", file: !65, line: 724, size: 32, elements: !5323)
!5323 = !{!5324, !5325}
!5324 = !DIDerivedType(tag: DW_TAG_member, name: "linkage", scope: !5322, file: !65, line: 725, baseType: !581, size: 16)
!5325 = !DIDerivedType(tag: DW_TAG_member, name: "unreliable", scope: !5322, file: !65, line: 726, baseType: !771, size: 8, offset: 16)
!5326 = !DIDerivedType(tag: DW_TAG_member, name: "linfo", scope: !5175, file: !65, line: 815, baseType: !5327, size: 64, offset: 4288)
!5327 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5328, size: 64)
!5328 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_line_info", file: !96, line: 4971, size: 128, elements: !5329)
!5329 = !{!5330, !5331, !5332, !5333}
!5330 = !DIDerivedType(tag: DW_TAG_member, name: "insn_off", scope: !5328, file: !96, line: 4972, baseType: !493, size: 32)
!5331 = !DIDerivedType(tag: DW_TAG_member, name: "file_name_off", scope: !5328, file: !96, line: 4973, baseType: !493, size: 32, offset: 32)
!5332 = !DIDerivedType(tag: DW_TAG_member, name: "line_off", scope: !5328, file: !96, line: 4974, baseType: !493, size: 32, offset: 64)
!5333 = !DIDerivedType(tag: DW_TAG_member, name: "line_col", scope: !5328, file: !96, line: 4975, baseType: !493, size: 32, offset: 96)
!5334 = !DIDerivedType(tag: DW_TAG_member, name: "jited_linfo", scope: !5175, file: !65, line: 823, baseType: !1802, size: 64, offset: 4352)
!5335 = !DIDerivedType(tag: DW_TAG_member, name: "func_info_cnt", scope: !5175, file: !65, line: 824, baseType: !987, size: 32, offset: 4416)
!5336 = !DIDerivedType(tag: DW_TAG_member, name: "nr_linfo", scope: !5175, file: !65, line: 825, baseType: !987, size: 32, offset: 4448)
!5337 = !DIDerivedType(tag: DW_TAG_member, name: "linfo_idx", scope: !5175, file: !65, line: 830, baseType: !987, size: 32, offset: 4480)
!5338 = !DIDerivedType(tag: DW_TAG_member, name: "num_exentries", scope: !5175, file: !65, line: 831, baseType: !987, size: 32, offset: 4512)
!5339 = !DIDerivedType(tag: DW_TAG_member, name: "extable", scope: !5175, file: !65, line: 832, baseType: !5340, size: 64, offset: 4544)
!5340 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5341, size: 64)
!5341 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "exception_table_entry", file: !5342, line: 17, size: 96, elements: !5343)
!5342 = !DIFile(filename: "./arch/x86/include/asm/extable.h", directory: "/home/lizy2001/genbc/linux")
!5343 = !{!5344, !5345, !5346}
!5344 = !DIDerivedType(tag: DW_TAG_member, name: "insn", scope: !5341, file: !5342, line: 18, baseType: !32, size: 32)
!5345 = !DIDerivedType(tag: DW_TAG_member, name: "fixup", scope: !5341, file: !5342, line: 18, baseType: !32, size: 32, offset: 32)
!5346 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !5341, file: !5342, line: 18, baseType: !32, size: 32, offset: 64)
!5347 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !5175, file: !65, line: 833, baseType: !5348, size: 64, offset: 4608)
!5348 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5349, size: 64)
!5349 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_prog_stats", file: !65, line: 503, size: 128, align: 128, elements: !5350)
!5350 = !{!5351, !5352, !5353}
!5351 = !DIDerivedType(tag: DW_TAG_member, name: "cnt", scope: !5349, file: !65, line: 504, baseType: !331, size: 64)
!5352 = !DIDerivedType(tag: DW_TAG_member, name: "nsecs", scope: !5349, file: !65, line: 505, baseType: !331, size: 64, offset: 64)
!5353 = !DIDerivedType(tag: DW_TAG_member, name: "syncp", scope: !5349, file: !65, line: 506, baseType: !3070, offset: 128)
!5354 = !DIDerivedType(tag: DW_TAG_member, scope: !5175, file: !65, line: 834, baseType: !5355, size: 256, offset: 4672)
!5355 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5175, file: !65, line: 834, size: 256, elements: !5356)
!5356 = !{!5357, !5358}
!5357 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !5355, file: !65, line: 835, baseType: !2829, size: 256)
!5358 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !5355, file: !65, line: 836, baseType: !299, size: 128, align: 64)
!5359 = !DIDerivedType(tag: DW_TAG_member, name: "map_poke_untrack", scope: !1105, file: !65, line: 96, baseType: !5360, size: 64, offset: 1536)
!5360 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5361, size: 64)
!5361 = !DISubroutineType(types: !5362)
!5362 = !{null, !1310, !5174}
!5363 = !DIDerivedType(tag: DW_TAG_member, name: "map_poke_run", scope: !1105, file: !65, line: 97, baseType: !5364, size: 64, offset: 1600)
!5364 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5365, size: 64)
!5365 = !DISubroutineType(types: !5366)
!5366 = !{null, !1310, !987, !1088, !1088}
!5367 = !DIDerivedType(tag: DW_TAG_member, name: "map_direct_value_addr", scope: !1105, file: !65, line: 101, baseType: !5368, size: 64, offset: 1664)
!5368 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5369, size: 64)
!5369 = !DISubroutineType(types: !5370)
!5370 = !{!32, !5162, !5371, !987}
!5371 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !331, size: 64)
!5372 = !DIDerivedType(tag: DW_TAG_member, name: "map_direct_value_meta", scope: !1105, file: !65, line: 103, baseType: !5373, size: 64, offset: 1728)
!5373 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5374, size: 64)
!5374 = !DISubroutineType(types: !5375)
!5375 = !{!32, !5162, !331, !2516}
!5376 = !DIDerivedType(tag: DW_TAG_member, name: "map_mmap", scope: !1105, file: !65, line: 105, baseType: !5377, size: 64, offset: 1792)
!5377 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5378, size: 64)
!5378 = !DISubroutineType(types: !5379)
!5379 = !{!32, !1310, !2098}
!5380 = !DIDerivedType(tag: DW_TAG_member, name: "map_poll", scope: !1105, file: !65, line: 106, baseType: !5381, size: 64, offset: 1856)
!5381 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5382, size: 64)
!5382 = !DISubroutineType(types: !5383)
!5383 = !{!4827, !1310, !1315, !4828}
!5384 = !DIDerivedType(tag: DW_TAG_member, name: "map_local_storage_charge", scope: !1105, file: !65, line: 110, baseType: !5385, size: 64, offset: 1920)
!5385 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5386, size: 64)
!5386 = !DISubroutineType(types: !5387)
!5387 = !{!32, !5388, !591, !987}
!5388 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5389, size: 64)
!5389 = !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_local_storage_map", file: !65, line: 38, flags: DIFlagFwdDecl)
!5390 = !DIDerivedType(tag: DW_TAG_member, name: "map_local_storage_uncharge", scope: !1105, file: !65, line: 112, baseType: !5391, size: 64, offset: 1984)
!5391 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5392, size: 64)
!5392 = !DISubroutineType(types: !5393)
!5393 = !{null, !5388, !591, !987}
!5394 = !DIDerivedType(tag: DW_TAG_member, name: "map_owner_storage_ptr", scope: !1105, file: !65, line: 114, baseType: !5395, size: 64, offset: 2048)
!5395 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5396, size: 64)
!5396 = !DISubroutineType(types: !5397)
!5397 = !{!5398, !591}
!5398 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5399, size: 64)
!5399 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5400, size: 64)
!5400 = !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_local_storage", file: !65, line: 37, flags: DIFlagFwdDecl)
!5401 = !DIDerivedType(tag: DW_TAG_member, name: "map_meta_equal", scope: !1105, file: !65, line: 125, baseType: !5402, size: 64, offset: 2112)
!5402 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5403, size: 64)
!5403 = !DISubroutineType(types: !5404)
!5404 = !{!771, !5162, !5162}
!5405 = !DIDerivedType(tag: DW_TAG_member, name: "map_btf_name", scope: !1105, file: !65, line: 129, baseType: !5406, size: 64, offset: 2176)
!5406 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !292)
!5407 = !DIDerivedType(tag: DW_TAG_member, name: "map_btf_id", scope: !1105, file: !65, line: 130, baseType: !1001, size: 64, offset: 2240)
!5408 = !DIDerivedType(tag: DW_TAG_member, name: "iter_seq_info", scope: !1105, file: !65, line: 133, baseType: !5409, size: 64, offset: 2304)
!5409 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5410, size: 64)
!5410 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5411)
!5411 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_iter_seq_info", file: !65, line: 46, size: 256, elements: !5412)
!5412 = !{!5413, !5414, !5421, !5423}
!5413 = !DIDerivedType(tag: DW_TAG_member, name: "seq_ops", scope: !5411, file: !65, line: 47, baseType: !1686, size: 64)
!5414 = !DIDerivedType(tag: DW_TAG_member, name: "init_seq_private", scope: !5411, file: !65, line: 48, baseType: !5415, size: 64, offset: 64)
!5415 = !DIDerivedType(tag: DW_TAG_typedef, name: "bpf_iter_init_seq_priv_t", file: !65, line: 43, baseType: !5416)
!5416 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5417, size: 64)
!5417 = !DISubroutineType(types: !5418)
!5418 = !{!32, !591, !5419}
!5419 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5420, size: 64)
!5420 = !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_iter_aux_info", file: !65, line: 36, flags: DIFlagFwdDecl)
!5421 = !DIDerivedType(tag: DW_TAG_member, name: "fini_seq_private", scope: !5411, file: !65, line: 49, baseType: !5422, size: 64, offset: 128)
!5422 = !DIDerivedType(tag: DW_TAG_typedef, name: "bpf_iter_fini_seq_priv_t", file: !65, line: 45, baseType: !1415)
!5423 = !DIDerivedType(tag: DW_TAG_member, name: "seq_priv_size", scope: !5411, file: !65, line: 50, baseType: !987, size: 32, offset: 192)
!5424 = !DIDerivedType(tag: DW_TAG_member, name: "inner_map_meta", scope: !1100, file: !65, line: 146, baseType: !1310, size: 64, offset: 64)
!5425 = !DIDerivedType(tag: DW_TAG_member, name: "map_type", scope: !1100, file: !65, line: 150, baseType: !177, size: 32, offset: 128)
!5426 = !DIDerivedType(tag: DW_TAG_member, name: "key_size", scope: !1100, file: !65, line: 151, baseType: !987, size: 32, offset: 160)
!5427 = !DIDerivedType(tag: DW_TAG_member, name: "value_size", scope: !1100, file: !65, line: 152, baseType: !987, size: 32, offset: 192)
!5428 = !DIDerivedType(tag: DW_TAG_member, name: "max_entries", scope: !1100, file: !65, line: 153, baseType: !987, size: 32, offset: 224)
!5429 = !DIDerivedType(tag: DW_TAG_member, name: "map_flags", scope: !1100, file: !65, line: 154, baseType: !987, size: 32, offset: 256)
!5430 = !DIDerivedType(tag: DW_TAG_member, name: "spin_lock_off", scope: !1100, file: !65, line: 155, baseType: !32, size: 32, offset: 288)
!5431 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1100, file: !65, line: 156, baseType: !987, size: 32, offset: 320)
!5432 = !DIDerivedType(tag: DW_TAG_member, name: "numa_node", scope: !1100, file: !65, line: 157, baseType: !32, size: 32, offset: 352)
!5433 = !DIDerivedType(tag: DW_TAG_member, name: "btf_key_type_id", scope: !1100, file: !65, line: 158, baseType: !987, size: 32, offset: 384)
!5434 = !DIDerivedType(tag: DW_TAG_member, name: "btf_value_type_id", scope: !1100, file: !65, line: 159, baseType: !987, size: 32, offset: 416)
!5435 = !DIDerivedType(tag: DW_TAG_member, name: "btf", scope: !1100, file: !65, line: 160, baseType: !5313, size: 64, offset: 448)
!5436 = !DIDerivedType(tag: DW_TAG_member, name: "memory", scope: !1100, file: !65, line: 161, baseType: !5437, size: 128, offset: 512)
!5437 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_map_memory", file: !65, line: 136, size: 128, elements: !5438)
!5438 = !{!5439, !5440}
!5439 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !5437, file: !65, line: 137, baseType: !987, size: 32)
!5440 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !5437, file: !65, line: 138, baseType: !1953, size: 64, offset: 64)
!5441 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1100, file: !65, line: 162, baseType: !267, size: 128, offset: 640)
!5442 = !DIDerivedType(tag: DW_TAG_member, name: "btf_vmlinux_value_type_id", scope: !1100, file: !65, line: 163, baseType: !987, size: 32, offset: 768)
!5443 = !DIDerivedType(tag: DW_TAG_member, name: "bypass_spec_v1", scope: !1100, file: !65, line: 164, baseType: !771, size: 8, offset: 800)
!5444 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !1100, file: !65, line: 165, baseType: !771, size: 8, offset: 808)
!5445 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !1100, file: !65, line: 171, baseType: !373, size: 64, align: 512, offset: 1024)
!5446 = !DIDerivedType(tag: DW_TAG_member, name: "usercnt", scope: !1100, file: !65, line: 172, baseType: !373, size: 64, offset: 1088)
!5447 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !1100, file: !65, line: 173, baseType: !2829, size: 256, offset: 1152)
!5448 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_mutex", scope: !1100, file: !65, line: 174, baseType: !1665, size: 192, offset: 1408)
!5449 = !DIDerivedType(tag: DW_TAG_member, name: "writecnt", scope: !1100, file: !65, line: 175, baseType: !331, size: 64, offset: 1600)
!5450 = !DIDerivedType(tag: DW_TAG_member, name: "netdev", scope: !1097, file: !65, line: 224, baseType: !290, size: 64, offset: 2048)
!5451 = !DIDerivedType(tag: DW_TAG_member, name: "dev_ops", scope: !1097, file: !65, line: 225, baseType: !5452, size: 64, offset: 2112)
!5452 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5453, size: 64)
!5453 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5454)
!5454 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_map_dev_ops", file: !65, line: 212, size: 256, elements: !5455)
!5455 = !{!5456, !5460, !5461, !5465}
!5456 = !DIDerivedType(tag: DW_TAG_member, name: "map_get_next_key", scope: !5454, file: !65, line: 213, baseType: !5457, size: 64)
!5457 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5458, size: 64)
!5458 = !DISubroutineType(types: !5459)
!5459 = !{!32, !1096, !591, !591}
!5460 = !DIDerivedType(tag: DW_TAG_member, name: "map_lookup_elem", scope: !5454, file: !65, line: 215, baseType: !5457, size: 64, offset: 64)
!5461 = !DIDerivedType(tag: DW_TAG_member, name: "map_update_elem", scope: !5454, file: !65, line: 217, baseType: !5462, size: 64, offset: 128)
!5462 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5463, size: 64)
!5463 = !DISubroutineType(types: !5464)
!5464 = !{!32, !1096, !591, !591, !331}
!5465 = !DIDerivedType(tag: DW_TAG_member, name: "map_delete_elem", scope: !5454, file: !65, line: 219, baseType: !5466, size: 64, offset: 192)
!5466 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5467, size: 64)
!5467 = !DISubroutineType(types: !5468)
!5468 = !{!32, !1096, !591}
!5469 = !DIDerivedType(tag: DW_TAG_member, name: "dev_priv", scope: !1097, file: !65, line: 226, baseType: !591, size: 64, offset: 2176)
!5470 = !DIDerivedType(tag: DW_TAG_member, name: "offloads", scope: !1097, file: !65, line: 227, baseType: !284, size: 128, offset: 2240)
!5471 = !DIDerivedType(tag: DW_TAG_member, name: "xsk", scope: !1081, file: !31, line: 911, baseType: !5472, size: 128)
!5472 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1081, file: !31, line: 908, size: 128, elements: !5473)
!5473 = !{!5474, !5477}
!5474 = !DIDerivedType(tag: DW_TAG_member, name: "pool", scope: !5472, file: !31, line: 909, baseType: !5475, size: 64)
!5475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5476, size: 64)
!5476 = !DICompositeType(tag: DW_TAG_structure_type, name: "xsk_buff_pool", file: !31, line: 909, flags: DIFlagFwdDecl)
!5477 = !DIDerivedType(tag: DW_TAG_member, name: "queue_id", scope: !5472, file: !31, line: 910, baseType: !581, size: 16, offset: 64)
!5478 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_xdp_xmit", scope: !398, file: !31, line: 1481, baseType: !5479, size: 64, offset: 4096)
!5479 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5480, size: 64)
!5480 = !DISubroutineType(types: !5481)
!5481 = !{!32, !290, !32, !5482, !987}
!5482 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5483, size: 64)
!5483 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5484, size: 64)
!5484 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xdp_frame", file: !5485, line: 94, size: 256, elements: !5486)
!5485 = !DIFile(filename: "./include/net/xdp.h", directory: "/home/lizy2001/genbc/linux")
!5486 = !{!5487, !5488, !5489, !5490, !5491, !5492, !5497}
!5487 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !5484, file: !5485, line: 95, baseType: !591, size: 64)
!5488 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !5484, file: !5485, line: 96, baseType: !581, size: 16, offset: 64)
!5489 = !DIDerivedType(tag: DW_TAG_member, name: "headroom", scope: !5484, file: !5485, line: 97, baseType: !581, size: 16, offset: 80)
!5490 = !DIDerivedType(tag: DW_TAG_member, name: "metasize", scope: !5484, file: !5485, line: 98, baseType: !987, size: 8, offset: 96, flags: DIFlagBitField, extraData: i64 96)
!5491 = !DIDerivedType(tag: DW_TAG_member, name: "frame_sz", scope: !5484, file: !5485, line: 99, baseType: !987, size: 24, offset: 104, flags: DIFlagBitField, extraData: i64 96)
!5492 = !DIDerivedType(tag: DW_TAG_member, name: "mem", scope: !5484, file: !5485, line: 103, baseType: !5493, size: 64, offset: 128)
!5493 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xdp_mem_info", file: !5485, line: 50, size: 64, elements: !5494)
!5494 = !{!5495, !5496}
!5495 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !5493, file: !5485, line: 51, baseType: !987, size: 32)
!5496 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !5493, file: !5485, line: 52, baseType: !987, size: 32, offset: 32)
!5497 = !DIDerivedType(tag: DW_TAG_member, name: "dev_rx", scope: !5484, file: !5485, line: 104, baseType: !290, size: 64, offset: 192)
!5498 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_xsk_wakeup", scope: !398, file: !31, line: 1484, baseType: !5499, size: 64, offset: 4160)
!5499 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5500, size: 64)
!5500 = !DISubroutineType(types: !5501)
!5501 = !{!32, !290, !987, !987}
!5502 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_devlink_port", scope: !398, file: !31, line: 1486, baseType: !5503, size: 64, offset: 4224)
!5503 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5504, size: 64)
!5504 = !DISubroutineType(types: !5505)
!5505 = !{!5506, !290}
!5506 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5507, size: 64)
!5507 = !DICompositeType(tag: DW_TAG_structure_type, name: "devlink_port", file: !31, line: 1486, flags: DIFlagFwdDecl)
!5508 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_tunnel_ctl", scope: !398, file: !31, line: 1487, baseType: !5509, size: 64, offset: 4288)
!5509 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5510, size: 64)
!5510 = !DISubroutineType(types: !5511)
!5511 = !{!32, !290, !5512, !32}
!5512 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5513, size: 64)
!5513 = !DICompositeType(tag: DW_TAG_structure_type, name: "ip_tunnel_parm", file: !31, line: 56, flags: DIFlagFwdDecl)
!5514 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_peer_dev", scope: !398, file: !31, line: 1489, baseType: !5515, size: 64, offset: 4352)
!5515 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5516, size: 64)
!5516 = !DISubroutineType(types: !5517)
!5517 = !{!290, !290}
!5518 = !DIDerivedType(tag: DW_TAG_member, name: "ethtool_ops", scope: !264, file: !31, line: 1917, baseType: !5519, size: 64, offset: 4032)
!5519 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5520, size: 64)
!5520 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5521)
!5521 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_ops", file: !251, line: 421, size: 3904, elements: !5522)
!5522 = !{!5523, !5524, !5544, !5545, !5556, !5568, !5572, !5576, !5580, !5581, !5582, !5599, !5600, !5612, !5613, !5643, !5644, !5660, !5664, !5673, !5684, !5688, !5701, !5705, !5709, !5719, !5720, !5721, !5722, !5726, !5727, !5829, !5833, !5843, !5847, !5848, !5849, !5853, !5861, !5865, !5869, !5885, !5889, !5901, !5905, !5906, !5921, !5933, !5934, !5950, !5951, !5965, !5969, !5973, !5974, !6013, !6019, !6030, !6031, !6032, !6033}
!5523 = !DIDerivedType(tag: DW_TAG_member, name: "supported_coalesce_params", scope: !5521, file: !251, line: 422, baseType: !987, size: 32)
!5524 = !DIDerivedType(tag: DW_TAG_member, name: "get_drvinfo", scope: !5521, file: !251, line: 423, baseType: !5525, size: 64, offset: 64)
!5525 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5526, size: 64)
!5526 = !DISubroutineType(types: !5527)
!5527 = !{null, !290, !5528}
!5528 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5529, size: 64)
!5529 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_drvinfo", file: !209, line: 177, size: 1568, elements: !5530)
!5530 = !{!5531, !5532, !5533, !5534, !5535, !5536, !5537, !5539, !5540, !5541, !5542, !5543}
!5531 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !5529, file: !209, line: 178, baseType: !493, size: 32)
!5532 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !5529, file: !209, line: 179, baseType: !4624, size: 256, offset: 32)
!5533 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !5529, file: !209, line: 180, baseType: !4624, size: 256, offset: 288)
!5534 = !DIDerivedType(tag: DW_TAG_member, name: "fw_version", scope: !5529, file: !209, line: 181, baseType: !4624, size: 256, offset: 544)
!5535 = !DIDerivedType(tag: DW_TAG_member, name: "bus_info", scope: !5529, file: !209, line: 182, baseType: !4624, size: 256, offset: 800)
!5536 = !DIDerivedType(tag: DW_TAG_member, name: "erom_version", scope: !5529, file: !209, line: 183, baseType: !4624, size: 256, offset: 1056)
!5537 = !DIDerivedType(tag: DW_TAG_member, name: "reserved2", scope: !5529, file: !209, line: 184, baseType: !5538, size: 96, offset: 1312)
!5538 = !DICompositeType(tag: DW_TAG_array_type, baseType: !268, size: 96, elements: !4149)
!5539 = !DIDerivedType(tag: DW_TAG_member, name: "n_priv_flags", scope: !5529, file: !209, line: 185, baseType: !493, size: 32, offset: 1408)
!5540 = !DIDerivedType(tag: DW_TAG_member, name: "n_stats", scope: !5529, file: !209, line: 186, baseType: !493, size: 32, offset: 1440)
!5541 = !DIDerivedType(tag: DW_TAG_member, name: "testinfo_len", scope: !5529, file: !209, line: 187, baseType: !493, size: 32, offset: 1472)
!5542 = !DIDerivedType(tag: DW_TAG_member, name: "eedump_len", scope: !5529, file: !209, line: 188, baseType: !493, size: 32, offset: 1504)
!5543 = !DIDerivedType(tag: DW_TAG_member, name: "regdump_len", scope: !5529, file: !209, line: 189, baseType: !493, size: 32, offset: 1536)
!5544 = !DIDerivedType(tag: DW_TAG_member, name: "get_regs_len", scope: !5521, file: !251, line: 424, baseType: !401, size: 64, offset: 128)
!5545 = !DIDerivedType(tag: DW_TAG_member, name: "get_regs", scope: !5521, file: !251, line: 425, baseType: !5546, size: 64, offset: 192)
!5546 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5547, size: 64)
!5547 = !DISubroutineType(types: !5548)
!5548 = !{null, !290, !5549, !591}
!5549 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5550, size: 64)
!5550 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_regs", file: !209, line: 310, size: 96, elements: !5551)
!5551 = !{!5552, !5553, !5554, !5555}
!5552 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !5550, file: !209, line: 311, baseType: !493, size: 32)
!5553 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !5550, file: !209, line: 312, baseType: !493, size: 32, offset: 32)
!5554 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !5550, file: !209, line: 313, baseType: !493, size: 32, offset: 64)
!5555 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !5550, file: !209, line: 314, baseType: !480, offset: 96)
!5556 = !DIDerivedType(tag: DW_TAG_member, name: "get_wol", scope: !5521, file: !251, line: 426, baseType: !5557, size: 64, offset: 256)
!5557 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5558, size: 64)
!5558 = !DISubroutineType(types: !5559)
!5559 = !{null, !290, !5560}
!5560 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5561, size: 64)
!5561 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_wolinfo", file: !209, line: 203, size: 160, elements: !5562)
!5562 = !{!5563, !5564, !5565, !5566}
!5563 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !5561, file: !209, line: 204, baseType: !493, size: 32)
!5564 = !DIDerivedType(tag: DW_TAG_member, name: "supported", scope: !5561, file: !209, line: 205, baseType: !493, size: 32, offset: 32)
!5565 = !DIDerivedType(tag: DW_TAG_member, name: "wolopts", scope: !5561, file: !209, line: 206, baseType: !493, size: 32, offset: 64)
!5566 = !DIDerivedType(tag: DW_TAG_member, name: "sopass", scope: !5561, file: !209, line: 207, baseType: !5567, size: 48, offset: 96)
!5567 = !DICompositeType(tag: DW_TAG_array_type, baseType: !481, size: 48, elements: !999)
!5568 = !DIDerivedType(tag: DW_TAG_member, name: "set_wol", scope: !5521, file: !251, line: 427, baseType: !5569, size: 64, offset: 320)
!5569 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5570, size: 64)
!5570 = !DISubroutineType(types: !5571)
!5571 = !{!32, !290, !5560}
!5572 = !DIDerivedType(tag: DW_TAG_member, name: "get_msglevel", scope: !5521, file: !251, line: 428, baseType: !5573, size: 64, offset: 384)
!5573 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5574, size: 64)
!5574 = !DISubroutineType(types: !5575)
!5575 = !{!987, !290}
!5576 = !DIDerivedType(tag: DW_TAG_member, name: "set_msglevel", scope: !5521, file: !251, line: 429, baseType: !5577, size: 64, offset: 448)
!5577 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5578, size: 64)
!5578 = !DISubroutineType(types: !5579)
!5579 = !{null, !290, !987}
!5580 = !DIDerivedType(tag: DW_TAG_member, name: "nway_reset", scope: !5521, file: !251, line: 430, baseType: !401, size: 64, offset: 512)
!5581 = !DIDerivedType(tag: DW_TAG_member, name: "get_link", scope: !5521, file: !251, line: 431, baseType: !5573, size: 64, offset: 576)
!5582 = !DIDerivedType(tag: DW_TAG_member, name: "get_link_ext_state", scope: !5521, file: !251, line: 432, baseType: !5583, size: 64, offset: 640)
!5583 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5584, size: 64)
!5584 = !DISubroutineType(types: !5585)
!5585 = !{!32, !290, !5586}
!5586 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5587, size: 64)
!5587 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_link_ext_state_info", file: !251, line: 93, size: 64, elements: !5588)
!5588 = !{!5589, !5590}
!5589 = !DIDerivedType(tag: DW_TAG_member, name: "link_ext_state", scope: !5587, file: !251, line: 94, baseType: !208, size: 32)
!5590 = !DIDerivedType(tag: DW_TAG_member, scope: !5587, file: !251, line: 95, baseType: !5591, size: 32, offset: 32)
!5591 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5587, file: !251, line: 95, size: 32, elements: !5592)
!5592 = !{!5593, !5594, !5595, !5596, !5597, !5598}
!5593 = !DIDerivedType(tag: DW_TAG_member, name: "autoneg", scope: !5591, file: !251, line: 96, baseType: !221, size: 32)
!5594 = !DIDerivedType(tag: DW_TAG_member, name: "link_training", scope: !5591, file: !251, line: 97, baseType: !229, size: 32)
!5595 = !DIDerivedType(tag: DW_TAG_member, name: "link_logical_mismatch", scope: !5591, file: !251, line: 98, baseType: !235, size: 32)
!5596 = !DIDerivedType(tag: DW_TAG_member, name: "bad_signal_integrity", scope: !5591, file: !251, line: 99, baseType: !242, size: 32)
!5597 = !DIDerivedType(tag: DW_TAG_member, name: "cable_issue", scope: !5591, file: !251, line: 100, baseType: !246, size: 32)
!5598 = !DIDerivedType(tag: DW_TAG_member, name: "__link_ext_substate", scope: !5591, file: !251, line: 101, baseType: !794, size: 8)
!5599 = !DIDerivedType(tag: DW_TAG_member, name: "get_eeprom_len", scope: !5521, file: !251, line: 434, baseType: !401, size: 64, offset: 704)
!5600 = !DIDerivedType(tag: DW_TAG_member, name: "get_eeprom", scope: !5521, file: !251, line: 435, baseType: !5601, size: 64, offset: 768)
!5601 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5602, size: 64)
!5602 = !DISubroutineType(types: !5603)
!5603 = !{!32, !290, !5604, !793}
!5604 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5605, size: 64)
!5605 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_eeprom", file: !209, line: 335, size: 128, elements: !5606)
!5606 = !{!5607, !5608, !5609, !5610, !5611}
!5607 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !5605, file: !209, line: 336, baseType: !493, size: 32)
!5608 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !5605, file: !209, line: 337, baseType: !493, size: 32, offset: 32)
!5609 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !5605, file: !209, line: 338, baseType: !493, size: 32, offset: 64)
!5610 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !5605, file: !209, line: 339, baseType: !493, size: 32, offset: 96)
!5611 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !5605, file: !209, line: 340, baseType: !480, offset: 128)
!5612 = !DIDerivedType(tag: DW_TAG_member, name: "set_eeprom", scope: !5521, file: !251, line: 437, baseType: !5601, size: 64, offset: 832)
!5613 = !DIDerivedType(tag: DW_TAG_member, name: "get_coalesce", scope: !5521, file: !251, line: 439, baseType: !5614, size: 64, offset: 896)
!5614 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5615, size: 64)
!5615 = !DISubroutineType(types: !5616)
!5616 = !{!32, !290, !5617}
!5617 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5618, size: 64)
!5618 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_coalesce", file: !209, line: 462, size: 736, elements: !5619)
!5619 = !{!5620, !5621, !5622, !5623, !5624, !5625, !5626, !5627, !5628, !5629, !5630, !5631, !5632, !5633, !5634, !5635, !5636, !5637, !5638, !5639, !5640, !5641, !5642}
!5620 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !5618, file: !209, line: 463, baseType: !493, size: 32)
!5621 = !DIDerivedType(tag: DW_TAG_member, name: "rx_coalesce_usecs", scope: !5618, file: !209, line: 464, baseType: !493, size: 32, offset: 32)
!5622 = !DIDerivedType(tag: DW_TAG_member, name: "rx_max_coalesced_frames", scope: !5618, file: !209, line: 465, baseType: !493, size: 32, offset: 64)
!5623 = !DIDerivedType(tag: DW_TAG_member, name: "rx_coalesce_usecs_irq", scope: !5618, file: !209, line: 466, baseType: !493, size: 32, offset: 96)
!5624 = !DIDerivedType(tag: DW_TAG_member, name: "rx_max_coalesced_frames_irq", scope: !5618, file: !209, line: 467, baseType: !493, size: 32, offset: 128)
!5625 = !DIDerivedType(tag: DW_TAG_member, name: "tx_coalesce_usecs", scope: !5618, file: !209, line: 468, baseType: !493, size: 32, offset: 160)
!5626 = !DIDerivedType(tag: DW_TAG_member, name: "tx_max_coalesced_frames", scope: !5618, file: !209, line: 469, baseType: !493, size: 32, offset: 192)
!5627 = !DIDerivedType(tag: DW_TAG_member, name: "tx_coalesce_usecs_irq", scope: !5618, file: !209, line: 470, baseType: !493, size: 32, offset: 224)
!5628 = !DIDerivedType(tag: DW_TAG_member, name: "tx_max_coalesced_frames_irq", scope: !5618, file: !209, line: 471, baseType: !493, size: 32, offset: 256)
!5629 = !DIDerivedType(tag: DW_TAG_member, name: "stats_block_coalesce_usecs", scope: !5618, file: !209, line: 472, baseType: !493, size: 32, offset: 288)
!5630 = !DIDerivedType(tag: DW_TAG_member, name: "use_adaptive_rx_coalesce", scope: !5618, file: !209, line: 473, baseType: !493, size: 32, offset: 320)
!5631 = !DIDerivedType(tag: DW_TAG_member, name: "use_adaptive_tx_coalesce", scope: !5618, file: !209, line: 474, baseType: !493, size: 32, offset: 352)
!5632 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_rate_low", scope: !5618, file: !209, line: 475, baseType: !493, size: 32, offset: 384)
!5633 = !DIDerivedType(tag: DW_TAG_member, name: "rx_coalesce_usecs_low", scope: !5618, file: !209, line: 476, baseType: !493, size: 32, offset: 416)
!5634 = !DIDerivedType(tag: DW_TAG_member, name: "rx_max_coalesced_frames_low", scope: !5618, file: !209, line: 477, baseType: !493, size: 32, offset: 448)
!5635 = !DIDerivedType(tag: DW_TAG_member, name: "tx_coalesce_usecs_low", scope: !5618, file: !209, line: 478, baseType: !493, size: 32, offset: 480)
!5636 = !DIDerivedType(tag: DW_TAG_member, name: "tx_max_coalesced_frames_low", scope: !5618, file: !209, line: 479, baseType: !493, size: 32, offset: 512)
!5637 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_rate_high", scope: !5618, file: !209, line: 480, baseType: !493, size: 32, offset: 544)
!5638 = !DIDerivedType(tag: DW_TAG_member, name: "rx_coalesce_usecs_high", scope: !5618, file: !209, line: 481, baseType: !493, size: 32, offset: 576)
!5639 = !DIDerivedType(tag: DW_TAG_member, name: "rx_max_coalesced_frames_high", scope: !5618, file: !209, line: 482, baseType: !493, size: 32, offset: 608)
!5640 = !DIDerivedType(tag: DW_TAG_member, name: "tx_coalesce_usecs_high", scope: !5618, file: !209, line: 483, baseType: !493, size: 32, offset: 640)
!5641 = !DIDerivedType(tag: DW_TAG_member, name: "tx_max_coalesced_frames_high", scope: !5618, file: !209, line: 484, baseType: !493, size: 32, offset: 672)
!5642 = !DIDerivedType(tag: DW_TAG_member, name: "rate_sample_interval", scope: !5618, file: !209, line: 485, baseType: !493, size: 32, offset: 704)
!5643 = !DIDerivedType(tag: DW_TAG_member, name: "set_coalesce", scope: !5521, file: !251, line: 440, baseType: !5614, size: 64, offset: 960)
!5644 = !DIDerivedType(tag: DW_TAG_member, name: "get_ringparam", scope: !5521, file: !251, line: 441, baseType: !5645, size: 64, offset: 1024)
!5645 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5646, size: 64)
!5646 = !DISubroutineType(types: !5647)
!5647 = !{null, !290, !5648}
!5648 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5649, size: 64)
!5649 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_ringparam", file: !209, line: 513, size: 288, elements: !5650)
!5650 = !{!5651, !5652, !5653, !5654, !5655, !5656, !5657, !5658, !5659}
!5651 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !5649, file: !209, line: 514, baseType: !493, size: 32)
!5652 = !DIDerivedType(tag: DW_TAG_member, name: "rx_max_pending", scope: !5649, file: !209, line: 515, baseType: !493, size: 32, offset: 32)
!5653 = !DIDerivedType(tag: DW_TAG_member, name: "rx_mini_max_pending", scope: !5649, file: !209, line: 516, baseType: !493, size: 32, offset: 64)
!5654 = !DIDerivedType(tag: DW_TAG_member, name: "rx_jumbo_max_pending", scope: !5649, file: !209, line: 517, baseType: !493, size: 32, offset: 96)
!5655 = !DIDerivedType(tag: DW_TAG_member, name: "tx_max_pending", scope: !5649, file: !209, line: 518, baseType: !493, size: 32, offset: 128)
!5656 = !DIDerivedType(tag: DW_TAG_member, name: "rx_pending", scope: !5649, file: !209, line: 519, baseType: !493, size: 32, offset: 160)
!5657 = !DIDerivedType(tag: DW_TAG_member, name: "rx_mini_pending", scope: !5649, file: !209, line: 520, baseType: !493, size: 32, offset: 192)
!5658 = !DIDerivedType(tag: DW_TAG_member, name: "rx_jumbo_pending", scope: !5649, file: !209, line: 521, baseType: !493, size: 32, offset: 224)
!5659 = !DIDerivedType(tag: DW_TAG_member, name: "tx_pending", scope: !5649, file: !209, line: 522, baseType: !493, size: 32, offset: 256)
!5660 = !DIDerivedType(tag: DW_TAG_member, name: "set_ringparam", scope: !5521, file: !251, line: 443, baseType: !5661, size: 64, offset: 1088)
!5661 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5662, size: 64)
!5662 = !DISubroutineType(types: !5663)
!5663 = !{!32, !290, !5648}
!5664 = !DIDerivedType(tag: DW_TAG_member, name: "get_pause_stats", scope: !5521, file: !251, line: 445, baseType: !5665, size: 64, offset: 1152)
!5665 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5666, size: 64)
!5666 = !DISubroutineType(types: !5667)
!5667 = !{null, !290, !5668}
!5668 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5669, size: 64)
!5669 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_pause_stats", file: !251, line: 260, size: 128, elements: !5670)
!5670 = !{!5671, !5672}
!5671 = !DIDerivedType(tag: DW_TAG_member, name: "tx_pause_frames", scope: !5669, file: !251, line: 261, baseType: !331, size: 64)
!5672 = !DIDerivedType(tag: DW_TAG_member, name: "rx_pause_frames", scope: !5669, file: !251, line: 262, baseType: !331, size: 64, offset: 64)
!5673 = !DIDerivedType(tag: DW_TAG_member, name: "get_pauseparam", scope: !5521, file: !251, line: 447, baseType: !5674, size: 64, offset: 1216)
!5674 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5675, size: 64)
!5675 = !DISubroutineType(types: !5676)
!5676 = !{null, !290, !5677}
!5677 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5678, size: 64)
!5678 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_pauseparam", file: !209, line: 575, size: 128, elements: !5679)
!5679 = !{!5680, !5681, !5682, !5683}
!5680 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !5678, file: !209, line: 576, baseType: !493, size: 32)
!5681 = !DIDerivedType(tag: DW_TAG_member, name: "autoneg", scope: !5678, file: !209, line: 577, baseType: !493, size: 32, offset: 32)
!5682 = !DIDerivedType(tag: DW_TAG_member, name: "rx_pause", scope: !5678, file: !209, line: 578, baseType: !493, size: 32, offset: 64)
!5683 = !DIDerivedType(tag: DW_TAG_member, name: "tx_pause", scope: !5678, file: !209, line: 579, baseType: !493, size: 32, offset: 96)
!5684 = !DIDerivedType(tag: DW_TAG_member, name: "set_pauseparam", scope: !5521, file: !251, line: 449, baseType: !5685, size: 64, offset: 1280)
!5685 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5686, size: 64)
!5686 = !DISubroutineType(types: !5687)
!5687 = !{!32, !290, !5677}
!5688 = !DIDerivedType(tag: DW_TAG_member, name: "self_test", scope: !5521, file: !251, line: 451, baseType: !5689, size: 64, offset: 1344)
!5689 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5690, size: 64)
!5690 = !DISubroutineType(types: !5691)
!5691 = !{null, !290, !5692, !5371}
!5692 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5693, size: 64)
!5693 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_test", file: !209, line: 770, size: 128, elements: !5694)
!5694 = !{!5695, !5696, !5697, !5698, !5699}
!5695 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !5693, file: !209, line: 771, baseType: !493, size: 32)
!5696 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5693, file: !209, line: 772, baseType: !493, size: 32, offset: 32)
!5697 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !5693, file: !209, line: 773, baseType: !493, size: 32, offset: 64)
!5698 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !5693, file: !209, line: 774, baseType: !493, size: 32, offset: 96)
!5699 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !5693, file: !209, line: 775, baseType: !5700, offset: 128)
!5700 = !DICompositeType(tag: DW_TAG_array_type, baseType: !333, elements: !483)
!5701 = !DIDerivedType(tag: DW_TAG_member, name: "get_strings", scope: !5521, file: !251, line: 452, baseType: !5702, size: 64, offset: 1408)
!5702 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5703, size: 64)
!5703 = !DISubroutineType(types: !5704)
!5704 = !{null, !290, !987, !793}
!5705 = !DIDerivedType(tag: DW_TAG_member, name: "set_phys_id", scope: !5521, file: !251, line: 453, baseType: !5706, size: 64, offset: 1472)
!5706 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5707, size: 64)
!5707 = !DISubroutineType(types: !5708)
!5708 = !{!32, !290, !250}
!5709 = !DIDerivedType(tag: DW_TAG_member, name: "get_ethtool_stats", scope: !5521, file: !251, line: 454, baseType: !5710, size: 64, offset: 1536)
!5710 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5711, size: 64)
!5711 = !DISubroutineType(types: !5712)
!5712 = !{null, !290, !5713, !5371}
!5713 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5714, size: 64)
!5714 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_stats", file: !209, line: 789, size: 64, elements: !5715)
!5715 = !{!5716, !5717, !5718}
!5716 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !5714, file: !209, line: 790, baseType: !493, size: 32)
!5717 = !DIDerivedType(tag: DW_TAG_member, name: "n_stats", scope: !5714, file: !209, line: 791, baseType: !493, size: 32, offset: 32)
!5718 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !5714, file: !209, line: 792, baseType: !5700, offset: 64)
!5719 = !DIDerivedType(tag: DW_TAG_member, name: "begin", scope: !5521, file: !251, line: 456, baseType: !401, size: 64, offset: 1600)
!5720 = !DIDerivedType(tag: DW_TAG_member, name: "complete", scope: !5521, file: !251, line: 457, baseType: !405, size: 64, offset: 1664)
!5721 = !DIDerivedType(tag: DW_TAG_member, name: "get_priv_flags", scope: !5521, file: !251, line: 458, baseType: !5573, size: 64, offset: 1728)
!5722 = !DIDerivedType(tag: DW_TAG_member, name: "set_priv_flags", scope: !5521, file: !251, line: 459, baseType: !5723, size: 64, offset: 1792)
!5723 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5724, size: 64)
!5724 = !DISubroutineType(types: !5725)
!5725 = !{!32, !290, !987}
!5726 = !DIDerivedType(tag: DW_TAG_member, name: "get_sset_count", scope: !5521, file: !251, line: 460, baseType: !722, size: 64, offset: 1856)
!5727 = !DIDerivedType(tag: DW_TAG_member, name: "get_rxnfc", scope: !5521, file: !251, line: 461, baseType: !5728, size: 64, offset: 1920)
!5728 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5729, size: 64)
!5729 = !DISubroutineType(types: !5730)
!5730 = !{!32, !290, !5731, !2516}
!5731 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5732, size: 64)
!5732 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_rxnfc", file: !209, line: 1088, size: 1536, elements: !5733)
!5733 = !{!5734, !5735, !5736, !5737, !5823, !5828}
!5734 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !5732, file: !209, line: 1089, baseType: !493, size: 32)
!5735 = !DIDerivedType(tag: DW_TAG_member, name: "flow_type", scope: !5732, file: !209, line: 1090, baseType: !493, size: 32, offset: 32)
!5736 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !5732, file: !209, line: 1091, baseType: !333, size: 64, offset: 64)
!5737 = !DIDerivedType(tag: DW_TAG_member, name: "fs", scope: !5732, file: !209, line: 1092, baseType: !5738, size: 1344, offset: 128)
!5738 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_rx_flow_spec", file: !209, line: 992, size: 1344, elements: !5739)
!5739 = !{!5740, !5741, !5809, !5819, !5820, !5821, !5822}
!5740 = !DIDerivedType(tag: DW_TAG_member, name: "flow_type", scope: !5738, file: !209, line: 993, baseType: !493, size: 32)
!5741 = !DIDerivedType(tag: DW_TAG_member, name: "h_u", scope: !5738, file: !209, line: 994, baseType: !5742, size: 416, offset: 32)
!5742 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "ethtool_flow_union", file: !209, line: 939, size: 416, elements: !5743)
!5743 = !{!5744, !5752, !5753, !5754, !5761, !5762, !5771, !5779, !5780, !5781, !5788, !5789, !5797, !5805}
!5744 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_ip4_spec", scope: !5742, file: !209, line: 940, baseType: !5745, size: 128)
!5745 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_tcpip4_spec", file: !209, line: 845, size: 128, elements: !5746)
!5746 = !{!5747, !5748, !5749, !5750, !5751}
!5747 = !DIDerivedType(tag: DW_TAG_member, name: "ip4src", scope: !5745, file: !209, line: 846, baseType: !3207, size: 32)
!5748 = !DIDerivedType(tag: DW_TAG_member, name: "ip4dst", scope: !5745, file: !209, line: 847, baseType: !3207, size: 32, offset: 32)
!5749 = !DIDerivedType(tag: DW_TAG_member, name: "psrc", scope: !5745, file: !209, line: 848, baseType: !535, size: 16, offset: 64)
!5750 = !DIDerivedType(tag: DW_TAG_member, name: "pdst", scope: !5745, file: !209, line: 849, baseType: !535, size: 16, offset: 80)
!5751 = !DIDerivedType(tag: DW_TAG_member, name: "tos", scope: !5745, file: !209, line: 850, baseType: !481, size: 8, offset: 96)
!5752 = !DIDerivedType(tag: DW_TAG_member, name: "udp_ip4_spec", scope: !5742, file: !209, line: 941, baseType: !5745, size: 128)
!5753 = !DIDerivedType(tag: DW_TAG_member, name: "sctp_ip4_spec", scope: !5742, file: !209, line: 942, baseType: !5745, size: 128)
!5754 = !DIDerivedType(tag: DW_TAG_member, name: "ah_ip4_spec", scope: !5742, file: !209, line: 943, baseType: !5755, size: 128)
!5755 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_ah_espip4_spec", file: !209, line: 862, size: 128, elements: !5756)
!5756 = !{!5757, !5758, !5759, !5760}
!5757 = !DIDerivedType(tag: DW_TAG_member, name: "ip4src", scope: !5755, file: !209, line: 863, baseType: !3207, size: 32)
!5758 = !DIDerivedType(tag: DW_TAG_member, name: "ip4dst", scope: !5755, file: !209, line: 864, baseType: !3207, size: 32, offset: 32)
!5759 = !DIDerivedType(tag: DW_TAG_member, name: "spi", scope: !5755, file: !209, line: 865, baseType: !3207, size: 32, offset: 64)
!5760 = !DIDerivedType(tag: DW_TAG_member, name: "tos", scope: !5755, file: !209, line: 866, baseType: !481, size: 8, offset: 96)
!5761 = !DIDerivedType(tag: DW_TAG_member, name: "esp_ip4_spec", scope: !5742, file: !209, line: 944, baseType: !5755, size: 128)
!5762 = !DIDerivedType(tag: DW_TAG_member, name: "usr_ip4_spec", scope: !5742, file: !209, line: 945, baseType: !5763, size: 128)
!5763 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_usrip4_spec", file: !209, line: 880, size: 128, elements: !5764)
!5764 = !{!5765, !5766, !5767, !5768, !5769, !5770}
!5765 = !DIDerivedType(tag: DW_TAG_member, name: "ip4src", scope: !5763, file: !209, line: 881, baseType: !3207, size: 32)
!5766 = !DIDerivedType(tag: DW_TAG_member, name: "ip4dst", scope: !5763, file: !209, line: 882, baseType: !3207, size: 32, offset: 32)
!5767 = !DIDerivedType(tag: DW_TAG_member, name: "l4_4_bytes", scope: !5763, file: !209, line: 883, baseType: !3207, size: 32, offset: 64)
!5768 = !DIDerivedType(tag: DW_TAG_member, name: "tos", scope: !5763, file: !209, line: 884, baseType: !481, size: 8, offset: 96)
!5769 = !DIDerivedType(tag: DW_TAG_member, name: "ip_ver", scope: !5763, file: !209, line: 885, baseType: !481, size: 8, offset: 104)
!5770 = !DIDerivedType(tag: DW_TAG_member, name: "proto", scope: !5763, file: !209, line: 886, baseType: !481, size: 8, offset: 112)
!5771 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_ip6_spec", scope: !5742, file: !209, line: 946, baseType: !5772, size: 320)
!5772 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_tcpip6_spec", file: !209, line: 899, size: 320, elements: !5773)
!5773 = !{!5774, !5775, !5776, !5777, !5778}
!5774 = !DIDerivedType(tag: DW_TAG_member, name: "ip6src", scope: !5772, file: !209, line: 900, baseType: !3228, size: 128)
!5775 = !DIDerivedType(tag: DW_TAG_member, name: "ip6dst", scope: !5772, file: !209, line: 901, baseType: !3228, size: 128, offset: 128)
!5776 = !DIDerivedType(tag: DW_TAG_member, name: "psrc", scope: !5772, file: !209, line: 902, baseType: !535, size: 16, offset: 256)
!5777 = !DIDerivedType(tag: DW_TAG_member, name: "pdst", scope: !5772, file: !209, line: 903, baseType: !535, size: 16, offset: 272)
!5778 = !DIDerivedType(tag: DW_TAG_member, name: "tclass", scope: !5772, file: !209, line: 904, baseType: !481, size: 8, offset: 288)
!5779 = !DIDerivedType(tag: DW_TAG_member, name: "udp_ip6_spec", scope: !5742, file: !209, line: 947, baseType: !5772, size: 320)
!5780 = !DIDerivedType(tag: DW_TAG_member, name: "sctp_ip6_spec", scope: !5742, file: !209, line: 948, baseType: !5772, size: 320)
!5781 = !DIDerivedType(tag: DW_TAG_member, name: "ah_ip6_spec", scope: !5742, file: !209, line: 949, baseType: !5782, size: 320)
!5782 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_ah_espip6_spec", file: !209, line: 916, size: 320, elements: !5783)
!5783 = !{!5784, !5785, !5786, !5787}
!5784 = !DIDerivedType(tag: DW_TAG_member, name: "ip6src", scope: !5782, file: !209, line: 917, baseType: !3228, size: 128)
!5785 = !DIDerivedType(tag: DW_TAG_member, name: "ip6dst", scope: !5782, file: !209, line: 918, baseType: !3228, size: 128, offset: 128)
!5786 = !DIDerivedType(tag: DW_TAG_member, name: "spi", scope: !5782, file: !209, line: 919, baseType: !3207, size: 32, offset: 256)
!5787 = !DIDerivedType(tag: DW_TAG_member, name: "tclass", scope: !5782, file: !209, line: 920, baseType: !481, size: 8, offset: 288)
!5788 = !DIDerivedType(tag: DW_TAG_member, name: "esp_ip6_spec", scope: !5742, file: !209, line: 950, baseType: !5782, size: 320)
!5789 = !DIDerivedType(tag: DW_TAG_member, name: "usr_ip6_spec", scope: !5742, file: !209, line: 951, baseType: !5790, size: 320)
!5790 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_usrip6_spec", file: !209, line: 931, size: 320, elements: !5791)
!5791 = !{!5792, !5793, !5794, !5795, !5796}
!5792 = !DIDerivedType(tag: DW_TAG_member, name: "ip6src", scope: !5790, file: !209, line: 932, baseType: !3228, size: 128)
!5793 = !DIDerivedType(tag: DW_TAG_member, name: "ip6dst", scope: !5790, file: !209, line: 933, baseType: !3228, size: 128, offset: 128)
!5794 = !DIDerivedType(tag: DW_TAG_member, name: "l4_4_bytes", scope: !5790, file: !209, line: 934, baseType: !3207, size: 32, offset: 256)
!5795 = !DIDerivedType(tag: DW_TAG_member, name: "tclass", scope: !5790, file: !209, line: 935, baseType: !481, size: 8, offset: 288)
!5796 = !DIDerivedType(tag: DW_TAG_member, name: "l4_proto", scope: !5790, file: !209, line: 936, baseType: !481, size: 8, offset: 296)
!5797 = !DIDerivedType(tag: DW_TAG_member, name: "ether_spec", scope: !5742, file: !209, line: 952, baseType: !5798, size: 112)
!5798 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethhdr", file: !5799, line: 164, size: 112, elements: !5800)
!5799 = !DIFile(filename: "./include/uapi/linux/if_ether.h", directory: "/home/lizy2001/genbc/linux")
!5800 = !{!5801, !5803, !5804}
!5801 = !DIDerivedType(tag: DW_TAG_member, name: "h_dest", scope: !5798, file: !5799, line: 165, baseType: !5802, size: 48)
!5802 = !DICompositeType(tag: DW_TAG_array_type, baseType: !482, size: 48, elements: !999)
!5803 = !DIDerivedType(tag: DW_TAG_member, name: "h_source", scope: !5798, file: !5799, line: 166, baseType: !5802, size: 48, offset: 48)
!5804 = !DIDerivedType(tag: DW_TAG_member, name: "h_proto", scope: !5798, file: !5799, line: 167, baseType: !535, size: 16, offset: 96)
!5805 = !DIDerivedType(tag: DW_TAG_member, name: "hdata", scope: !5742, file: !209, line: 953, baseType: !5806, size: 416)
!5806 = !DICompositeType(tag: DW_TAG_array_type, baseType: !481, size: 416, elements: !5807)
!5807 = !{!5808}
!5808 = !DISubrange(count: 52)
!5809 = !DIDerivedType(tag: DW_TAG_member, name: "h_ext", scope: !5738, file: !209, line: 995, baseType: !5810, size: 160, offset: 448)
!5810 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_flow_ext", file: !209, line: 967, size: 160, elements: !5811)
!5811 = !{!5812, !5814, !5815, !5816, !5817}
!5812 = !DIDerivedType(tag: DW_TAG_member, name: "padding", scope: !5810, file: !209, line: 968, baseType: !5813, size: 16)
!5813 = !DICompositeType(tag: DW_TAG_array_type, baseType: !481, size: 16, elements: !2664)
!5814 = !DIDerivedType(tag: DW_TAG_member, name: "h_dest", scope: !5810, file: !209, line: 969, baseType: !5802, size: 48, offset: 16)
!5815 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_etype", scope: !5810, file: !209, line: 970, baseType: !535, size: 16, offset: 64)
!5816 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_tci", scope: !5810, file: !209, line: 971, baseType: !535, size: 16, offset: 80)
!5817 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !5810, file: !209, line: 972, baseType: !5818, size: 64, offset: 96)
!5818 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3207, size: 64, elements: !2664)
!5819 = !DIDerivedType(tag: DW_TAG_member, name: "m_u", scope: !5738, file: !209, line: 996, baseType: !5742, size: 416, offset: 608)
!5820 = !DIDerivedType(tag: DW_TAG_member, name: "m_ext", scope: !5738, file: !209, line: 997, baseType: !5810, size: 160, offset: 1024)
!5821 = !DIDerivedType(tag: DW_TAG_member, name: "ring_cookie", scope: !5738, file: !209, line: 998, baseType: !333, size: 64, offset: 1216)
!5822 = !DIDerivedType(tag: DW_TAG_member, name: "location", scope: !5738, file: !209, line: 999, baseType: !493, size: 32, offset: 1280)
!5823 = !DIDerivedType(tag: DW_TAG_member, scope: !5732, file: !209, line: 1093, baseType: !5824, size: 32, offset: 1472)
!5824 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5732, file: !209, line: 1093, size: 32, elements: !5825)
!5825 = !{!5826, !5827}
!5826 = !DIDerivedType(tag: DW_TAG_member, name: "rule_cnt", scope: !5824, file: !209, line: 1094, baseType: !493, size: 32)
!5827 = !DIDerivedType(tag: DW_TAG_member, name: "rss_context", scope: !5824, file: !209, line: 1095, baseType: !493, size: 32)
!5828 = !DIDerivedType(tag: DW_TAG_member, name: "rule_locs", scope: !5732, file: !209, line: 1097, baseType: !492, offset: 1504)
!5829 = !DIDerivedType(tag: DW_TAG_member, name: "set_rxnfc", scope: !5521, file: !251, line: 463, baseType: !5830, size: 64, offset: 1984)
!5830 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5831, size: 64)
!5831 = !DISubroutineType(types: !5832)
!5832 = !{!32, !290, !5731}
!5833 = !DIDerivedType(tag: DW_TAG_member, name: "flash_device", scope: !5521, file: !251, line: 464, baseType: !5834, size: 64, offset: 2048)
!5834 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5835, size: 64)
!5835 = !DISubroutineType(types: !5836)
!5836 = !{!32, !290, !5837}
!5837 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5838, size: 64)
!5838 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_flash", file: !209, line: 1217, size: 1088, elements: !5839)
!5839 = !{!5840, !5841, !5842}
!5840 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !5838, file: !209, line: 1218, baseType: !493, size: 32)
!5841 = !DIDerivedType(tag: DW_TAG_member, name: "region", scope: !5838, file: !209, line: 1219, baseType: !493, size: 32, offset: 32)
!5842 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !5838, file: !209, line: 1220, baseType: !5232, size: 1024, offset: 64)
!5843 = !DIDerivedType(tag: DW_TAG_member, name: "reset", scope: !5521, file: !251, line: 465, baseType: !5844, size: 64, offset: 2112)
!5844 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5845, size: 64)
!5845 = !DISubroutineType(types: !5846)
!5846 = !{!32, !290, !2516}
!5847 = !DIDerivedType(tag: DW_TAG_member, name: "get_rxfh_key_size", scope: !5521, file: !251, line: 466, baseType: !5573, size: 64, offset: 2176)
!5848 = !DIDerivedType(tag: DW_TAG_member, name: "get_rxfh_indir_size", scope: !5521, file: !251, line: 467, baseType: !5573, size: 64, offset: 2240)
!5849 = !DIDerivedType(tag: DW_TAG_member, name: "get_rxfh", scope: !5521, file: !251, line: 468, baseType: !5850, size: 64, offset: 2304)
!5850 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5851, size: 64)
!5851 = !DISubroutineType(types: !5852)
!5852 = !{!32, !290, !2516, !793, !793}
!5853 = !DIDerivedType(tag: DW_TAG_member, name: "set_rxfh", scope: !5521, file: !251, line: 470, baseType: !5854, size: 64, offset: 2368)
!5854 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5855, size: 64)
!5855 = !DISubroutineType(types: !5856)
!5856 = !{!32, !290, !5857, !5859, !5860}
!5857 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5858, size: 64)
!5858 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !987)
!5859 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5860, size: 64)
!5860 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !794)
!5861 = !DIDerivedType(tag: DW_TAG_member, name: "get_rxfh_context", scope: !5521, file: !251, line: 472, baseType: !5862, size: 64, offset: 2432)
!5862 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5863, size: 64)
!5863 = !DISubroutineType(types: !5864)
!5864 = !{!32, !290, !2516, !793, !793, !987}
!5865 = !DIDerivedType(tag: DW_TAG_member, name: "set_rxfh_context", scope: !5521, file: !251, line: 474, baseType: !5866, size: 64, offset: 2496)
!5866 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5867, size: 64)
!5867 = !DISubroutineType(types: !5868)
!5868 = !{!32, !290, !5857, !5859, !5860, !2516, !771}
!5869 = !DIDerivedType(tag: DW_TAG_member, name: "get_channels", scope: !5521, file: !251, line: 477, baseType: !5870, size: 64, offset: 2560)
!5870 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5871, size: 64)
!5871 = !DISubroutineType(types: !5872)
!5872 = !{null, !290, !5873}
!5873 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5874, size: 64)
!5874 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_channels", file: !209, line: 541, size: 288, elements: !5875)
!5875 = !{!5876, !5877, !5878, !5879, !5880, !5881, !5882, !5883, !5884}
!5876 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !5874, file: !209, line: 542, baseType: !493, size: 32)
!5877 = !DIDerivedType(tag: DW_TAG_member, name: "max_rx", scope: !5874, file: !209, line: 543, baseType: !493, size: 32, offset: 32)
!5878 = !DIDerivedType(tag: DW_TAG_member, name: "max_tx", scope: !5874, file: !209, line: 544, baseType: !493, size: 32, offset: 64)
!5879 = !DIDerivedType(tag: DW_TAG_member, name: "max_other", scope: !5874, file: !209, line: 545, baseType: !493, size: 32, offset: 96)
!5880 = !DIDerivedType(tag: DW_TAG_member, name: "max_combined", scope: !5874, file: !209, line: 546, baseType: !493, size: 32, offset: 128)
!5881 = !DIDerivedType(tag: DW_TAG_member, name: "rx_count", scope: !5874, file: !209, line: 547, baseType: !493, size: 32, offset: 160)
!5882 = !DIDerivedType(tag: DW_TAG_member, name: "tx_count", scope: !5874, file: !209, line: 548, baseType: !493, size: 32, offset: 192)
!5883 = !DIDerivedType(tag: DW_TAG_member, name: "other_count", scope: !5874, file: !209, line: 549, baseType: !493, size: 32, offset: 224)
!5884 = !DIDerivedType(tag: DW_TAG_member, name: "combined_count", scope: !5874, file: !209, line: 550, baseType: !493, size: 32, offset: 256)
!5885 = !DIDerivedType(tag: DW_TAG_member, name: "set_channels", scope: !5521, file: !251, line: 478, baseType: !5886, size: 64, offset: 2624)
!5886 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5887, size: 64)
!5887 = !DISubroutineType(types: !5888)
!5888 = !{!32, !290, !5873}
!5889 = !DIDerivedType(tag: DW_TAG_member, name: "get_dump_flag", scope: !5521, file: !251, line: 479, baseType: !5890, size: 64, offset: 2688)
!5890 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5891, size: 64)
!5891 = !DISubroutineType(types: !5892)
!5892 = !{!32, !290, !5893}
!5893 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5894, size: 64)
!5894 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_dump", file: !209, line: 1237, size: 128, elements: !5895)
!5895 = !{!5896, !5897, !5898, !5899, !5900}
!5896 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !5894, file: !209, line: 1238, baseType: !493, size: 32)
!5897 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !5894, file: !209, line: 1239, baseType: !493, size: 32, offset: 32)
!5898 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !5894, file: !209, line: 1240, baseType: !493, size: 32, offset: 64)
!5899 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !5894, file: !209, line: 1241, baseType: !493, size: 32, offset: 96)
!5900 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !5894, file: !209, line: 1242, baseType: !480, offset: 128)
!5901 = !DIDerivedType(tag: DW_TAG_member, name: "get_dump_data", scope: !5521, file: !251, line: 480, baseType: !5902, size: 64, offset: 2752)
!5902 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5903, size: 64)
!5903 = !DISubroutineType(types: !5904)
!5904 = !{!32, !290, !5893, !591}
!5905 = !DIDerivedType(tag: DW_TAG_member, name: "set_dump", scope: !5521, file: !251, line: 482, baseType: !5890, size: 64, offset: 2816)
!5906 = !DIDerivedType(tag: DW_TAG_member, name: "get_ts_info", scope: !5521, file: !251, line: 483, baseType: !5907, size: 64, offset: 2880)
!5907 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5908, size: 64)
!5908 = !DISubroutineType(types: !5909)
!5909 = !{!32, !290, !5910}
!5910 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5911, size: 64)
!5911 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_ts_info", file: !209, line: 1317, size: 352, elements: !5912)
!5912 = !{!5913, !5914, !5915, !5916, !5917, !5919, !5920}
!5913 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !5911, file: !209, line: 1318, baseType: !493, size: 32)
!5914 = !DIDerivedType(tag: DW_TAG_member, name: "so_timestamping", scope: !5911, file: !209, line: 1319, baseType: !493, size: 32, offset: 32)
!5915 = !DIDerivedType(tag: DW_TAG_member, name: "phc_index", scope: !5911, file: !209, line: 1320, baseType: !942, size: 32, offset: 64)
!5916 = !DIDerivedType(tag: DW_TAG_member, name: "tx_types", scope: !5911, file: !209, line: 1321, baseType: !493, size: 32, offset: 96)
!5917 = !DIDerivedType(tag: DW_TAG_member, name: "tx_reserved", scope: !5911, file: !209, line: 1322, baseType: !5918, size: 96, offset: 128)
!5918 = !DICompositeType(tag: DW_TAG_array_type, baseType: !493, size: 96, elements: !1592)
!5919 = !DIDerivedType(tag: DW_TAG_member, name: "rx_filters", scope: !5911, file: !209, line: 1323, baseType: !493, size: 32, offset: 224)
!5920 = !DIDerivedType(tag: DW_TAG_member, name: "rx_reserved", scope: !5911, file: !209, line: 1324, baseType: !5918, size: 96, offset: 256)
!5921 = !DIDerivedType(tag: DW_TAG_member, name: "get_module_info", scope: !5521, file: !251, line: 484, baseType: !5922, size: 64, offset: 2944)
!5922 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5923, size: 64)
!5923 = !DISubroutineType(types: !5924)
!5924 = !{!32, !290, !5925}
!5925 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5926, size: 64)
!5926 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_modinfo", file: !209, line: 382, size: 352, elements: !5927)
!5927 = !{!5928, !5929, !5930, !5931}
!5928 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !5926, file: !209, line: 383, baseType: !493, size: 32)
!5929 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !5926, file: !209, line: 384, baseType: !493, size: 32, offset: 32)
!5930 = !DIDerivedType(tag: DW_TAG_member, name: "eeprom_len", scope: !5926, file: !209, line: 385, baseType: !493, size: 32, offset: 64)
!5931 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !5926, file: !209, line: 386, baseType: !5932, size: 256, offset: 96)
!5932 = !DICompositeType(tag: DW_TAG_array_type, baseType: !493, size: 256, elements: !2433)
!5933 = !DIDerivedType(tag: DW_TAG_member, name: "get_module_eeprom", scope: !5521, file: !251, line: 486, baseType: !5601, size: 64, offset: 3008)
!5934 = !DIDerivedType(tag: DW_TAG_member, name: "get_eee", scope: !5521, file: !251, line: 488, baseType: !5935, size: 64, offset: 3072)
!5935 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5936, size: 64)
!5936 = !DISubroutineType(types: !5937)
!5937 = !{!32, !290, !5938}
!5938 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5939, size: 64)
!5939 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_eee", file: !209, line: 360, size: 320, elements: !5940)
!5940 = !{!5941, !5942, !5943, !5944, !5945, !5946, !5947, !5948, !5949}
!5941 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !5939, file: !209, line: 361, baseType: !493, size: 32)
!5942 = !DIDerivedType(tag: DW_TAG_member, name: "supported", scope: !5939, file: !209, line: 362, baseType: !493, size: 32, offset: 32)
!5943 = !DIDerivedType(tag: DW_TAG_member, name: "advertised", scope: !5939, file: !209, line: 363, baseType: !493, size: 32, offset: 64)
!5944 = !DIDerivedType(tag: DW_TAG_member, name: "lp_advertised", scope: !5939, file: !209, line: 364, baseType: !493, size: 32, offset: 96)
!5945 = !DIDerivedType(tag: DW_TAG_member, name: "eee_active", scope: !5939, file: !209, line: 365, baseType: !493, size: 32, offset: 128)
!5946 = !DIDerivedType(tag: DW_TAG_member, name: "eee_enabled", scope: !5939, file: !209, line: 366, baseType: !493, size: 32, offset: 160)
!5947 = !DIDerivedType(tag: DW_TAG_member, name: "tx_lpi_enabled", scope: !5939, file: !209, line: 367, baseType: !493, size: 32, offset: 192)
!5948 = !DIDerivedType(tag: DW_TAG_member, name: "tx_lpi_timer", scope: !5939, file: !209, line: 368, baseType: !493, size: 32, offset: 224)
!5949 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !5939, file: !209, line: 369, baseType: !2663, size: 64, offset: 256)
!5950 = !DIDerivedType(tag: DW_TAG_member, name: "set_eee", scope: !5521, file: !251, line: 489, baseType: !5935, size: 64, offset: 3136)
!5951 = !DIDerivedType(tag: DW_TAG_member, name: "get_tunable", scope: !5521, file: !251, line: 490, baseType: !5952, size: 64, offset: 3200)
!5952 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5953, size: 64)
!5953 = !DISubroutineType(types: !5954)
!5954 = !{!32, !290, !5955, !591}
!5955 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5956, size: 64)
!5956 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5957)
!5957 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_tunable", file: !209, line: 244, size: 128, elements: !5958)
!5958 = !{!5959, !5960, !5961, !5962, !5963}
!5959 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !5957, file: !209, line: 245, baseType: !493, size: 32)
!5960 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !5957, file: !209, line: 246, baseType: !493, size: 32, offset: 32)
!5961 = !DIDerivedType(tag: DW_TAG_member, name: "type_id", scope: !5957, file: !209, line: 247, baseType: !493, size: 32, offset: 64)
!5962 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !5957, file: !209, line: 248, baseType: !493, size: 32, offset: 96)
!5963 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !5957, file: !209, line: 249, baseType: !5964, offset: 128)
!5964 = !DICompositeType(tag: DW_TAG_array_type, baseType: !591, elements: !483)
!5965 = !DIDerivedType(tag: DW_TAG_member, name: "set_tunable", scope: !5521, file: !251, line: 492, baseType: !5966, size: 64, offset: 3264)
!5966 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5967, size: 64)
!5967 = !DISubroutineType(types: !5968)
!5968 = !{!32, !290, !5955, !3257}
!5969 = !DIDerivedType(tag: DW_TAG_member, name: "get_per_queue_coalesce", scope: !5521, file: !251, line: 494, baseType: !5970, size: 64, offset: 3328)
!5970 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5971, size: 64)
!5971 = !DISubroutineType(types: !5972)
!5972 = !{!32, !290, !987, !5617}
!5973 = !DIDerivedType(tag: DW_TAG_member, name: "set_per_queue_coalesce", scope: !5521, file: !251, line: 496, baseType: !5970, size: 64, offset: 3392)
!5974 = !DIDerivedType(tag: DW_TAG_member, name: "get_link_ksettings", scope: !5521, file: !251, line: 498, baseType: !5975, size: 64, offset: 3456)
!5975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5976, size: 64)
!5976 = !DISubroutineType(types: !5977)
!5977 = !{!32, !290, !5978}
!5978 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5979, size: 64)
!5979 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_link_ksettings", file: !251, line: 124, size: 768, elements: !5980)
!5980 = !{!5981, !6006}
!5981 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !5979, file: !251, line: 125, baseType: !5982, size: 384)
!5982 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_link_settings", file: !209, line: 1996, size: 384, elements: !5983)
!5983 = !{!5984, !5985, !5986, !5987, !5988, !5989, !5990, !5991, !5992, !5993, !5996, !5997, !5998, !5999, !6001, !6005}
!5984 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !5982, file: !209, line: 1997, baseType: !493, size: 32)
!5985 = !DIDerivedType(tag: DW_TAG_member, name: "speed", scope: !5982, file: !209, line: 1998, baseType: !493, size: 32, offset: 32)
!5986 = !DIDerivedType(tag: DW_TAG_member, name: "duplex", scope: !5982, file: !209, line: 1999, baseType: !481, size: 8, offset: 64)
!5987 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !5982, file: !209, line: 2000, baseType: !481, size: 8, offset: 72)
!5988 = !DIDerivedType(tag: DW_TAG_member, name: "phy_address", scope: !5982, file: !209, line: 2001, baseType: !481, size: 8, offset: 80)
!5989 = !DIDerivedType(tag: DW_TAG_member, name: "autoneg", scope: !5982, file: !209, line: 2002, baseType: !481, size: 8, offset: 88)
!5990 = !DIDerivedType(tag: DW_TAG_member, name: "mdio_support", scope: !5982, file: !209, line: 2003, baseType: !481, size: 8, offset: 96)
!5991 = !DIDerivedType(tag: DW_TAG_member, name: "eth_tp_mdix", scope: !5982, file: !209, line: 2004, baseType: !481, size: 8, offset: 104)
!5992 = !DIDerivedType(tag: DW_TAG_member, name: "eth_tp_mdix_ctrl", scope: !5982, file: !209, line: 2005, baseType: !481, size: 8, offset: 112)
!5993 = !DIDerivedType(tag: DW_TAG_member, name: "link_mode_masks_nwords", scope: !5982, file: !209, line: 2006, baseType: !5994, size: 8, offset: 120)
!5994 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s8", file: !334, line: 20, baseType: !5995)
!5995 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!5996 = !DIDerivedType(tag: DW_TAG_member, name: "transceiver", scope: !5982, file: !209, line: 2007, baseType: !481, size: 8, offset: 128)
!5997 = !DIDerivedType(tag: DW_TAG_member, name: "master_slave_cfg", scope: !5982, file: !209, line: 2008, baseType: !481, size: 8, offset: 136)
!5998 = !DIDerivedType(tag: DW_TAG_member, name: "master_slave_state", scope: !5982, file: !209, line: 2009, baseType: !481, size: 8, offset: 144)
!5999 = !DIDerivedType(tag: DW_TAG_member, name: "reserved1", scope: !5982, file: !209, line: 2010, baseType: !6000, size: 8, offset: 152)
!6000 = !DICompositeType(tag: DW_TAG_array_type, baseType: !481, size: 8, elements: !2472)
!6001 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !5982, file: !209, line: 2011, baseType: !6002, size: 224, offset: 160)
!6002 = !DICompositeType(tag: DW_TAG_array_type, baseType: !493, size: 224, elements: !6003)
!6003 = !{!6004}
!6004 = !DISubrange(count: 7)
!6005 = !DIDerivedType(tag: DW_TAG_member, name: "link_mode_masks", scope: !5982, file: !209, line: 2012, baseType: !492, offset: 384)
!6006 = !DIDerivedType(tag: DW_TAG_member, name: "link_modes", scope: !5979, file: !251, line: 130, baseType: !6007, size: 384, offset: 384)
!6007 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5979, file: !251, line: 126, size: 384, elements: !6008)
!6008 = !{!6009, !6011, !6012}
!6009 = !DIDerivedType(tag: DW_TAG_member, name: "supported", scope: !6007, file: !251, line: 127, baseType: !6010, size: 128)
!6010 = !DICompositeType(tag: DW_TAG_array_type, baseType: !312, size: 128, elements: !2664)
!6011 = !DIDerivedType(tag: DW_TAG_member, name: "advertising", scope: !6007, file: !251, line: 128, baseType: !6010, size: 128, offset: 128)
!6012 = !DIDerivedType(tag: DW_TAG_member, name: "lp_advertising", scope: !6007, file: !251, line: 129, baseType: !6010, size: 128, offset: 256)
!6013 = !DIDerivedType(tag: DW_TAG_member, name: "set_link_ksettings", scope: !5521, file: !251, line: 500, baseType: !6014, size: 64, offset: 3520)
!6014 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6015, size: 64)
!6015 = !DISubroutineType(types: !6016)
!6016 = !{!32, !290, !6017}
!6017 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6018, size: 64)
!6018 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5979)
!6019 = !DIDerivedType(tag: DW_TAG_member, name: "get_fecparam", scope: !5521, file: !251, line: 502, baseType: !6020, size: 64, offset: 3584)
!6020 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6021, size: 64)
!6021 = !DISubroutineType(types: !6022)
!6022 = !{!32, !290, !6023}
!6023 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6024, size: 64)
!6024 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_fecparam", file: !209, line: 1389, size: 128, elements: !6025)
!6025 = !{!6026, !6027, !6028, !6029}
!6026 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !6024, file: !209, line: 1390, baseType: !493, size: 32)
!6027 = !DIDerivedType(tag: DW_TAG_member, name: "active_fec", scope: !6024, file: !209, line: 1392, baseType: !493, size: 32, offset: 32)
!6028 = !DIDerivedType(tag: DW_TAG_member, name: "fec", scope: !6024, file: !209, line: 1393, baseType: !493, size: 32, offset: 64)
!6029 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !6024, file: !209, line: 1394, baseType: !493, size: 32, offset: 96)
!6030 = !DIDerivedType(tag: DW_TAG_member, name: "set_fecparam", scope: !5521, file: !251, line: 504, baseType: !6020, size: 64, offset: 3648)
!6031 = !DIDerivedType(tag: DW_TAG_member, name: "get_ethtool_phy_stats", scope: !5521, file: !251, line: 506, baseType: !5710, size: 64, offset: 3712)
!6032 = !DIDerivedType(tag: DW_TAG_member, name: "get_phy_tunable", scope: !5521, file: !251, line: 508, baseType: !5952, size: 64, offset: 3776)
!6033 = !DIDerivedType(tag: DW_TAG_member, name: "set_phy_tunable", scope: !5521, file: !251, line: 510, baseType: !5966, size: 64, offset: 3840)
!6034 = !DIDerivedType(tag: DW_TAG_member, name: "ndisc_ops", scope: !264, file: !31, line: 1922, baseType: !6035, size: 64, offset: 4096)
!6035 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6036, size: 64)
!6036 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6037)
!6037 = !DICompositeType(tag: DW_TAG_structure_type, name: "ndisc_ops", file: !31, line: 1922, flags: DIFlagFwdDecl)
!6038 = !DIDerivedType(tag: DW_TAG_member, name: "header_ops", scope: !264, file: !31, line: 1933, baseType: !6039, size: 64, offset: 4160)
!6039 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6040, size: 64)
!6040 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6041)
!6041 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "header_ops", file: !31, line: 270, size: 384, elements: !6042)
!6042 = !{!6043, !6047, !6053, !6066, !6070, !6074}
!6043 = !DIDerivedType(tag: DW_TAG_member, name: "create", scope: !6041, file: !31, line: 271, baseType: !6044, size: 64)
!6044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6045, size: 64)
!6045 = !DISubroutineType(types: !6046)
!6046 = !{!32, !415, !290, !476, !3257, !3257, !7}
!6047 = !DIDerivedType(tag: DW_TAG_member, name: "parse", scope: !6041, file: !31, line: 274, baseType: !6048, size: 64, offset: 64)
!6048 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6049, size: 64)
!6049 = !DISubroutineType(types: !6050)
!6050 = !{!32, !6051, !564}
!6051 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6052, size: 64)
!6052 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !416)
!6053 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !6041, file: !31, line: 275, baseType: !6054, size: 64, offset: 128)
!6054 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6055, size: 64)
!6055 = !DISubroutineType(types: !6056)
!6056 = !{!32, !6057, !6059, !535}
!6057 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6058, size: 64)
!6058 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !924)
!6059 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6060, size: 64)
!6060 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hh_cache", file: !31, line: 244, size: 832, elements: !6061)
!6061 = !{!6062, !6063, !6064}
!6062 = !DIDerivedType(tag: DW_TAG_member, name: "hh_len", scope: !6060, file: !31, line: 245, baseType: !7, size: 32)
!6063 = !DIDerivedType(tag: DW_TAG_member, name: "hh_lock", scope: !6060, file: !31, line: 246, baseType: !3324, size: 32, offset: 32)
!6064 = !DIDerivedType(tag: DW_TAG_member, name: "hh_data", scope: !6060, file: !31, line: 254, baseType: !6065, size: 768, offset: 64)
!6065 = !DICompositeType(tag: DW_TAG_array_type, baseType: !312, size: 768, elements: !4149)
!6066 = !DIDerivedType(tag: DW_TAG_member, name: "cache_update", scope: !6041, file: !31, line: 276, baseType: !6067, size: 64, offset: 192)
!6067 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6068, size: 64)
!6068 = !DISubroutineType(types: !6069)
!6069 = !{null, !6059, !773, !946}
!6070 = !DIDerivedType(tag: DW_TAG_member, name: "validate", scope: !6041, file: !31, line: 279, baseType: !6071, size: 64, offset: 256)
!6071 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6072, size: 64)
!6072 = !DISubroutineType(types: !6073)
!6073 = !{!771, !292, !7}
!6074 = !DIDerivedType(tag: DW_TAG_member, name: "parse_protocol", scope: !6041, file: !31, line: 280, baseType: !6075, size: 64, offset: 320)
!6075 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6076, size: 64)
!6076 = !DISubroutineType(types: !6077)
!6077 = !{!535, !6051}
!6078 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !264, file: !31, line: 1935, baseType: !7, size: 32, offset: 4224)
!6079 = !DIDerivedType(tag: DW_TAG_member, name: "priv_flags", scope: !264, file: !31, line: 1936, baseType: !7, size: 32, offset: 4256)
!6080 = !DIDerivedType(tag: DW_TAG_member, name: "gflags", scope: !264, file: !31, line: 1938, baseType: !476, size: 16, offset: 4288)
!6081 = !DIDerivedType(tag: DW_TAG_member, name: "padded", scope: !264, file: !31, line: 1939, baseType: !476, size: 16, offset: 4304)
!6082 = !DIDerivedType(tag: DW_TAG_member, name: "operstate", scope: !264, file: !31, line: 1941, baseType: !482, size: 8, offset: 4320)
!6083 = !DIDerivedType(tag: DW_TAG_member, name: "link_mode", scope: !264, file: !31, line: 1942, baseType: !482, size: 8, offset: 4328)
!6084 = !DIDerivedType(tag: DW_TAG_member, name: "if_port", scope: !264, file: !31, line: 1944, baseType: !482, size: 8, offset: 4336)
!6085 = !DIDerivedType(tag: DW_TAG_member, name: "dma", scope: !264, file: !31, line: 1945, baseType: !482, size: 8, offset: 4344)
!6086 = !DIDerivedType(tag: DW_TAG_member, name: "mtu", scope: !264, file: !31, line: 1952, baseType: !7, size: 32, offset: 4352)
!6087 = !DIDerivedType(tag: DW_TAG_member, name: "min_mtu", scope: !264, file: !31, line: 1953, baseType: !7, size: 32, offset: 4384)
!6088 = !DIDerivedType(tag: DW_TAG_member, name: "max_mtu", scope: !264, file: !31, line: 1954, baseType: !7, size: 32, offset: 4416)
!6089 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !264, file: !31, line: 1955, baseType: !476, size: 16, offset: 4448)
!6090 = !DIDerivedType(tag: DW_TAG_member, name: "hard_header_len", scope: !264, file: !31, line: 1956, baseType: !476, size: 16, offset: 4464)
!6091 = !DIDerivedType(tag: DW_TAG_member, name: "min_header_len", scope: !264, file: !31, line: 1957, baseType: !482, size: 8, offset: 4480)
!6092 = !DIDerivedType(tag: DW_TAG_member, name: "name_assign_type", scope: !264, file: !31, line: 1958, baseType: !482, size: 8, offset: 4488)
!6093 = !DIDerivedType(tag: DW_TAG_member, name: "needed_headroom", scope: !264, file: !31, line: 1960, baseType: !476, size: 16, offset: 4496)
!6094 = !DIDerivedType(tag: DW_TAG_member, name: "needed_tailroom", scope: !264, file: !31, line: 1961, baseType: !476, size: 16, offset: 4512)
!6095 = !DIDerivedType(tag: DW_TAG_member, name: "perm_addr", scope: !264, file: !31, line: 1964, baseType: !1031, size: 256, offset: 4528)
!6096 = !DIDerivedType(tag: DW_TAG_member, name: "addr_assign_type", scope: !264, file: !31, line: 1965, baseType: !482, size: 8, offset: 4784)
!6097 = !DIDerivedType(tag: DW_TAG_member, name: "addr_len", scope: !264, file: !31, line: 1966, baseType: !482, size: 8, offset: 4792)
!6098 = !DIDerivedType(tag: DW_TAG_member, name: "upper_level", scope: !264, file: !31, line: 1967, baseType: !482, size: 8, offset: 4800)
!6099 = !DIDerivedType(tag: DW_TAG_member, name: "lower_level", scope: !264, file: !31, line: 1968, baseType: !482, size: 8, offset: 4808)
!6100 = !DIDerivedType(tag: DW_TAG_member, name: "neigh_priv_len", scope: !264, file: !31, line: 1970, baseType: !476, size: 16, offset: 4816)
!6101 = !DIDerivedType(tag: DW_TAG_member, name: "dev_id", scope: !264, file: !31, line: 1971, baseType: !476, size: 16, offset: 4832)
!6102 = !DIDerivedType(tag: DW_TAG_member, name: "dev_port", scope: !264, file: !31, line: 1972, baseType: !476, size: 16, offset: 4848)
!6103 = !DIDerivedType(tag: DW_TAG_member, name: "addr_list_lock", scope: !264, file: !31, line: 1973, baseType: !1670, offset: 4864)
!6104 = !DIDerivedType(tag: DW_TAG_member, name: "uc", scope: !264, file: !31, line: 1975, baseType: !6105, size: 192, offset: 4864)
!6105 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netdev_hw_addr_list", file: !31, line: 224, size: 192, elements: !6106)
!6106 = !{!6107, !6108}
!6107 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !6105, file: !31, line: 225, baseType: !284, size: 128)
!6108 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !6105, file: !31, line: 226, baseType: !32, size: 32, offset: 128)
!6109 = !DIDerivedType(tag: DW_TAG_member, name: "mc", scope: !264, file: !31, line: 1976, baseType: !6105, size: 192, offset: 5056)
!6110 = !DIDerivedType(tag: DW_TAG_member, name: "dev_addrs", scope: !264, file: !31, line: 1977, baseType: !6105, size: 192, offset: 5248)
!6111 = !DIDerivedType(tag: DW_TAG_member, name: "queues_kset", scope: !264, file: !31, line: 1980, baseType: !6112, size: 64, offset: 5440)
!6112 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6113, size: 64)
!6113 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset", file: !6114, line: 192, size: 704, elements: !6115)
!6114 = !DIFile(filename: "./include/linux/kobject.h", directory: "/home/lizy2001/genbc/linux")
!6115 = !{!6116, !6117, !6118, !6358}
!6116 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !6113, file: !6114, line: 193, baseType: !284, size: 128)
!6117 = !DIDerivedType(tag: DW_TAG_member, name: "list_lock", scope: !6113, file: !6114, line: 194, baseType: !1670, offset: 128)
!6118 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !6113, file: !6114, line: 195, baseType: !6119, size: 512, offset: 128)
!6119 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobject", file: !6114, line: 64, size: 512, elements: !6120)
!6120 = !{!6121, !6122, !6123, !6125, !6126, !6227, !6348, !6353, !6354, !6355, !6356, !6357}
!6121 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !6119, file: !6114, line: 65, baseType: !292, size: 64)
!6122 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !6119, file: !6114, line: 66, baseType: !284, size: 128, offset: 64)
!6123 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !6119, file: !6114, line: 67, baseType: !6124, size: 64, offset: 192)
!6124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6119, size: 64)
!6125 = !DIDerivedType(tag: DW_TAG_member, name: "kset", scope: !6119, file: !6114, line: 68, baseType: !6112, size: 64, offset: 256)
!6126 = !DIDerivedType(tag: DW_TAG_member, name: "ktype", scope: !6119, file: !6114, line: 69, baseType: !6127, size: 64, offset: 320)
!6127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6128, size: 64)
!6128 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_type", file: !6114, line: 138, size: 448, elements: !6129)
!6129 = !{!6130, !6134, !6153, !6155, !6188, !6219, !6223}
!6130 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !6128, file: !6114, line: 139, baseType: !6131, size: 64)
!6131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6132, size: 64)
!6132 = !DISubroutineType(types: !6133)
!6133 = !{null, !6124}
!6134 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_ops", scope: !6128, file: !6114, line: 140, baseType: !6135, size: 64, offset: 64)
!6135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6136, size: 64)
!6136 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6137)
!6137 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sysfs_ops", file: !6138, line: 230, size: 128, elements: !6139)
!6138 = !DIFile(filename: "./include/linux/sysfs.h", directory: "/home/lizy2001/genbc/linux")
!6139 = !{!6140, !6149}
!6140 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !6137, file: !6138, line: 231, baseType: !6141, size: 64)
!6141 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6142, size: 64)
!6142 = !DISubroutineType(types: !6143)
!6143 = !{!1521, !6124, !6144, !1038}
!6144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6145, size: 64)
!6145 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute", file: !6138, line: 30, size: 128, elements: !6146)
!6146 = !{!6147, !6148}
!6147 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !6145, file: !6138, line: 31, baseType: !292, size: 64)
!6148 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !6145, file: !6138, line: 32, baseType: !1379, size: 16, offset: 64)
!6149 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !6137, file: !6138, line: 232, baseType: !6150, size: 64, offset: 64)
!6150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6151, size: 64)
!6151 = !DISubroutineType(types: !6152)
!6152 = !{!1521, !6124, !6144, !292, !1039}
!6153 = !DIDerivedType(tag: DW_TAG_member, name: "default_attrs", scope: !6128, file: !6114, line: 141, baseType: !6154, size: 64, offset: 128)
!6154 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6144, size: 64)
!6155 = !DIDerivedType(tag: DW_TAG_member, name: "default_groups", scope: !6128, file: !6114, line: 142, baseType: !6156, size: 64, offset: 192)
!6156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6157, size: 64)
!6157 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6158, size: 64)
!6158 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6159)
!6159 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute_group", file: !6138, line: 84, size: 320, elements: !6160)
!6160 = !{!6161, !6162, !6166, !6185, !6186}
!6161 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !6159, file: !6138, line: 85, baseType: !292, size: 64)
!6162 = !DIDerivedType(tag: DW_TAG_member, name: "is_visible", scope: !6159, file: !6138, line: 86, baseType: !6163, size: 64, offset: 64)
!6163 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6164, size: 64)
!6164 = !DISubroutineType(types: !6165)
!6165 = !{!1379, !6124, !6144, !32}
!6166 = !DIDerivedType(tag: DW_TAG_member, name: "is_bin_visible", scope: !6159, file: !6138, line: 88, baseType: !6167, size: 64, offset: 128)
!6167 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6168, size: 64)
!6168 = !DISubroutineType(types: !6169)
!6169 = !{!1379, !6124, !6170, !32}
!6170 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6171, size: 64)
!6171 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bin_attribute", file: !6138, line: 168, size: 448, elements: !6172)
!6172 = !{!6173, !6174, !6175, !6176, !6180, !6181}
!6173 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !6171, file: !6138, line: 169, baseType: !6145, size: 128)
!6174 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !6171, file: !6138, line: 170, baseType: !1039, size: 64, offset: 128)
!6175 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !6171, file: !6138, line: 171, baseType: !591, size: 64, offset: 192)
!6176 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !6171, file: !6138, line: 172, baseType: !6177, size: 64, offset: 256)
!6177 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6178, size: 64)
!6178 = !DISubroutineType(types: !6179)
!6179 = !{!1521, !1315, !6124, !6170, !1038, !1476, !1039}
!6180 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !6171, file: !6138, line: 174, baseType: !6177, size: 64, offset: 320)
!6181 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !6171, file: !6138, line: 176, baseType: !6182, size: 64, offset: 384)
!6182 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6183, size: 64)
!6183 = !DISubroutineType(types: !6184)
!6184 = !{!32, !1315, !6124, !6170, !2098}
!6185 = !DIDerivedType(tag: DW_TAG_member, name: "attrs", scope: !6159, file: !6138, line: 90, baseType: !6154, size: 64, offset: 192)
!6186 = !DIDerivedType(tag: DW_TAG_member, name: "bin_attrs", scope: !6159, file: !6138, line: 91, baseType: !6187, size: 64, offset: 256)
!6187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6170, size: 64)
!6188 = !DIDerivedType(tag: DW_TAG_member, name: "child_ns_type", scope: !6128, file: !6114, line: 143, baseType: !6189, size: 64, offset: 256)
!6189 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6190, size: 64)
!6190 = !DISubroutineType(types: !6191)
!6191 = !{!6192, !6124}
!6192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6193, size: 64)
!6193 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6194)
!6194 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_ns_type_operations", file: !447, line: 39, size: 384, elements: !6195)
!6195 = !{!6196, !6202, !6206, !6210, !6214, !6218}
!6196 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !6194, file: !447, line: 40, baseType: !6197, size: 32)
!6197 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kobj_ns_type", file: !447, line: 26, baseType: !7, size: 32, elements: !6198)
!6198 = !{!6199, !6200, !6201}
!6199 = !DIEnumerator(name: "KOBJ_NS_TYPE_NONE", value: 0, isUnsigned: true)
!6200 = !DIEnumerator(name: "KOBJ_NS_TYPE_NET", value: 1, isUnsigned: true)
!6201 = !DIEnumerator(name: "KOBJ_NS_TYPES", value: 2, isUnsigned: true)
!6202 = !DIDerivedType(tag: DW_TAG_member, name: "current_may_mount", scope: !6194, file: !447, line: 41, baseType: !6203, size: 64, offset: 64)
!6203 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6204, size: 64)
!6204 = !DISubroutineType(types: !6205)
!6205 = !{!771}
!6206 = !DIDerivedType(tag: DW_TAG_member, name: "grab_current_ns", scope: !6194, file: !447, line: 42, baseType: !6207, size: 64, offset: 128)
!6207 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6208, size: 64)
!6208 = !DISubroutineType(types: !6209)
!6209 = !{!591}
!6210 = !DIDerivedType(tag: DW_TAG_member, name: "netlink_ns", scope: !6194, file: !447, line: 43, baseType: !6211, size: 64, offset: 192)
!6211 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6212, size: 64)
!6212 = !DISubroutineType(types: !6213)
!6213 = !{!3257, !445}
!6214 = !DIDerivedType(tag: DW_TAG_member, name: "initial_ns", scope: !6194, file: !447, line: 44, baseType: !6215, size: 64, offset: 256)
!6215 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6216, size: 64)
!6216 = !DISubroutineType(types: !6217)
!6217 = !{!3257}
!6218 = !DIDerivedType(tag: DW_TAG_member, name: "drop_ns", scope: !6194, file: !447, line: 45, baseType: !1415, size: 64, offset: 320)
!6219 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !6128, file: !6114, line: 144, baseType: !6220, size: 64, offset: 320)
!6220 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6221, size: 64)
!6221 = !DISubroutineType(types: !6222)
!6222 = !{!3257, !6124}
!6223 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !6128, file: !6114, line: 145, baseType: !6224, size: 64, offset: 384)
!6224 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6225, size: 64)
!6225 = !DISubroutineType(types: !6226)
!6226 = !{null, !6124, !2904, !2905}
!6227 = !DIDerivedType(tag: DW_TAG_member, name: "sd", scope: !6119, file: !6114, line: 70, baseType: !6228, size: 64, offset: 384)
!6228 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6229, size: 64)
!6229 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_node", file: !1565, line: 123, size: 1024, elements: !6230)
!6230 = !{!6231, !6232, !6233, !6234, !6235, !6236, !6237, !6238, !6341, !6342, !6343, !6344, !6345}
!6231 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !6229, file: !1565, line: 124, baseType: !383, size: 32)
!6232 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !6229, file: !1565, line: 125, baseType: !383, size: 32, offset: 32)
!6233 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !6229, file: !1565, line: 135, baseType: !6228, size: 64, offset: 64)
!6234 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !6229, file: !1565, line: 136, baseType: !292, size: 64, offset: 128)
!6235 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !6229, file: !1565, line: 138, baseType: !433, size: 192, align: 64, offset: 192)
!6236 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !6229, file: !1565, line: 140, baseType: !3257, size: 64, offset: 384)
!6237 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !6229, file: !1565, line: 141, baseType: !7, size: 32, offset: 448)
!6238 = !DIDerivedType(tag: DW_TAG_member, scope: !6229, file: !1565, line: 142, baseType: !6239, size: 256, offset: 512)
!6239 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6229, file: !1565, line: 142, size: 256, elements: !6240)
!6240 = !{!6241, !6281, !6285}
!6241 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !6239, file: !1565, line: 143, baseType: !6242, size: 192)
!6242 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_dir", file: !1565, line: 91, size: 192, elements: !6243)
!6243 = !{!6244, !6245, !6246}
!6244 = !DIDerivedType(tag: DW_TAG_member, name: "subdirs", scope: !6242, file: !1565, line: 92, baseType: !312, size: 64)
!6245 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !6242, file: !1565, line: 94, baseType: !1750, size: 64, offset: 64)
!6246 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !6242, file: !1565, line: 100, baseType: !6247, size: 64, offset: 128)
!6247 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6248, size: 64)
!6248 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_root", file: !1565, line: 180, size: 704, elements: !6249)
!6249 = !{!6250, !6251, !6252, !6253, !6254, !6255, !6279, !6280}
!6250 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !6248, file: !1565, line: 182, baseType: !6228, size: 64)
!6251 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !6248, file: !1565, line: 183, baseType: !7, size: 32, offset: 64)
!6252 = !DIDerivedType(tag: DW_TAG_member, name: "ino_idr", scope: !6248, file: !1565, line: 186, baseType: !3001, size: 192, offset: 128)
!6253 = !DIDerivedType(tag: DW_TAG_member, name: "last_id_lowbits", scope: !6248, file: !1565, line: 187, baseType: !987, size: 32, offset: 320)
!6254 = !DIDerivedType(tag: DW_TAG_member, name: "id_highbits", scope: !6248, file: !1565, line: 188, baseType: !987, size: 32, offset: 352)
!6255 = !DIDerivedType(tag: DW_TAG_member, name: "syscall_ops", scope: !6248, file: !1565, line: 189, baseType: !6256, size: 64, offset: 384)
!6256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6257, size: 64)
!6257 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_syscall_ops", file: !1565, line: 168, size: 320, elements: !6258)
!6258 = !{!6259, !6263, !6267, !6271, !6275}
!6259 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !6257, file: !1565, line: 169, baseType: !6260, size: 64)
!6260 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6261, size: 64)
!6261 = !DISubroutineType(types: !6262)
!6262 = !{!32, !1653, !6247}
!6263 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !6257, file: !1565, line: 171, baseType: !6264, size: 64, offset: 64)
!6264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6265, size: 64)
!6265 = !DISubroutineType(types: !6266)
!6266 = !{!32, !6228, !292, !1379}
!6267 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !6257, file: !1565, line: 173, baseType: !6268, size: 64, offset: 128)
!6268 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6269, size: 64)
!6269 = !DISubroutineType(types: !6270)
!6270 = !{!32, !6228}
!6271 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !6257, file: !1565, line: 174, baseType: !6272, size: 64, offset: 192)
!6272 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6273, size: 64)
!6273 = !DISubroutineType(types: !6274)
!6274 = !{!32, !6228, !6228, !292}
!6275 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !6257, file: !1565, line: 176, baseType: !6276, size: 64, offset: 256)
!6276 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6277, size: 64)
!6277 = !DISubroutineType(types: !6278)
!6278 = !{!32, !1653, !6228, !6247}
!6279 = !DIDerivedType(tag: DW_TAG_member, name: "supers", scope: !6248, file: !1565, line: 192, baseType: !284, size: 128, offset: 448)
!6280 = !DIDerivedType(tag: DW_TAG_member, name: "deactivate_waitq", scope: !6248, file: !1565, line: 194, baseType: !1889, size: 128, offset: 576)
!6281 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !6239, file: !1565, line: 144, baseType: !6282, size: 64)
!6282 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_symlink", file: !1565, line: 103, size: 64, elements: !6283)
!6283 = !{!6284}
!6284 = !DIDerivedType(tag: DW_TAG_member, name: "target_kn", scope: !6282, file: !1565, line: 104, baseType: !6228, size: 64)
!6285 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !6239, file: !1565, line: 145, baseType: !6286, size: 256)
!6286 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_attr", file: !1565, line: 107, size: 256, elements: !6287)
!6287 = !{!6288, !6336, !6339, !6340}
!6288 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !6286, file: !1565, line: 108, baseType: !6289, size: 64)
!6289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6290, size: 64)
!6290 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6291)
!6291 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_ops", file: !1565, line: 217, size: 768, elements: !6292)
!6292 = !{!6293, !6313, !6317, !6318, !6319, !6320, !6321, !6325, !6326, !6327, !6328, !6332}
!6293 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !6291, file: !1565, line: 222, baseType: !6294, size: 64)
!6294 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6295, size: 64)
!6295 = !DISubroutineType(types: !6296)
!6296 = !{!32, !6297}
!6297 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6298, size: 64)
!6298 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_file", file: !1565, line: 197, size: 1088, elements: !6299)
!6299 = !{!6300, !6301, !6302, !6303, !6304, !6305, !6306, !6307, !6308, !6309, !6310, !6311, !6312}
!6300 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !6298, file: !1565, line: 199, baseType: !6228, size: 64)
!6301 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !6298, file: !1565, line: 200, baseType: !1315, size: 64, offset: 64)
!6302 = !DIDerivedType(tag: DW_TAG_member, name: "seq_file", scope: !6298, file: !1565, line: 201, baseType: !1653, size: 64, offset: 128)
!6303 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !6298, file: !1565, line: 202, baseType: !591, size: 64, offset: 192)
!6304 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !6298, file: !1565, line: 205, baseType: !1665, size: 192, offset: 256)
!6305 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_mutex", scope: !6298, file: !1565, line: 206, baseType: !1665, size: 192, offset: 448)
!6306 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !6298, file: !1565, line: 207, baseType: !32, size: 32, offset: 640)
!6307 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !6298, file: !1565, line: 208, baseType: !284, size: 128, offset: 704)
!6308 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_buf", scope: !6298, file: !1565, line: 209, baseType: !1038, size: 64, offset: 832)
!6309 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !6298, file: !1565, line: 211, baseType: !1039, size: 64, offset: 896)
!6310 = !DIDerivedType(tag: DW_TAG_member, name: "mmapped", scope: !6298, file: !1565, line: 212, baseType: !771, size: 1, offset: 960, flags: DIFlagBitField, extraData: i64 960)
!6311 = !DIDerivedType(tag: DW_TAG_member, name: "released", scope: !6298, file: !1565, line: 213, baseType: !771, size: 1, offset: 961, flags: DIFlagBitField, extraData: i64 960)
!6312 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !6298, file: !1565, line: 214, baseType: !2126, size: 64, offset: 1024)
!6313 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !6291, file: !1565, line: 223, baseType: !6314, size: 64, offset: 64)
!6314 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6315, size: 64)
!6315 = !DISubroutineType(types: !6316)
!6316 = !{null, !6297}
!6317 = !DIDerivedType(tag: DW_TAG_member, name: "seq_show", scope: !6291, file: !1565, line: 236, baseType: !1704, size: 64, offset: 128)
!6318 = !DIDerivedType(tag: DW_TAG_member, name: "seq_start", scope: !6291, file: !1565, line: 238, baseType: !1691, size: 64, offset: 192)
!6319 = !DIDerivedType(tag: DW_TAG_member, name: "seq_next", scope: !6291, file: !1565, line: 239, baseType: !1700, size: 64, offset: 256)
!6320 = !DIDerivedType(tag: DW_TAG_member, name: "seq_stop", scope: !6291, file: !1565, line: 240, baseType: !1696, size: 64, offset: 320)
!6321 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !6291, file: !1565, line: 242, baseType: !6322, size: 64, offset: 384)
!6322 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6323, size: 64)
!6323 = !DISubroutineType(types: !6324)
!6324 = !{!1521, !6297, !1038, !1039, !1476}
!6325 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !6291, file: !1565, line: 252, baseType: !1039, size: 64, offset: 448)
!6326 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc", scope: !6291, file: !1565, line: 259, baseType: !771, size: 8, offset: 512)
!6327 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !6291, file: !1565, line: 260, baseType: !6322, size: 64, offset: 576)
!6328 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !6291, file: !1565, line: 263, baseType: !6329, size: 64, offset: 640)
!6329 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6330, size: 64)
!6330 = !DISubroutineType(types: !6331)
!6331 = !{!4827, !6297, !4828}
!6332 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !6291, file: !1565, line: 266, baseType: !6333, size: 64, offset: 704)
!6333 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6334, size: 64)
!6334 = !DISubroutineType(types: !6335)
!6335 = !{!32, !6297, !2098}
!6336 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !6286, file: !1565, line: 109, baseType: !6337, size: 64, offset: 64)
!6337 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6338, size: 64)
!6338 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_node", file: !1565, line: 31, flags: DIFlagFwdDecl)
!6339 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !6286, file: !1565, line: 110, baseType: !1476, size: 64, offset: 128)
!6340 = !DIDerivedType(tag: DW_TAG_member, name: "notify_next", scope: !6286, file: !1565, line: 111, baseType: !6228, size: 64, offset: 192)
!6341 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !6229, file: !1565, line: 148, baseType: !591, size: 64, offset: 768)
!6342 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !6229, file: !1565, line: 154, baseType: !331, size: 64, offset: 832)
!6343 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !6229, file: !1565, line: 156, baseType: !476, size: 16, offset: 896)
!6344 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !6229, file: !1565, line: 157, baseType: !1379, size: 16, offset: 912)
!6345 = !DIDerivedType(tag: DW_TAG_member, name: "iattr", scope: !6229, file: !1565, line: 158, baseType: !6346, size: 64, offset: 960)
!6346 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6347, size: 64)
!6347 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_iattrs", file: !1565, line: 32, flags: DIFlagFwdDecl)
!6348 = !DIDerivedType(tag: DW_TAG_member, name: "kref", scope: !6119, file: !6114, line: 71, baseType: !6349, size: 32, offset: 448)
!6349 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kref", file: !6350, line: 19, size: 32, elements: !6351)
!6350 = !DIFile(filename: "./include/linux/kref.h", directory: "/home/lizy2001/genbc/linux")
!6351 = !{!6352}
!6352 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !6349, file: !6350, line: 20, baseType: !568, size: 32)
!6353 = !DIDerivedType(tag: DW_TAG_member, name: "state_initialized", scope: !6119, file: !6114, line: 75, baseType: !7, size: 1, offset: 480, flags: DIFlagBitField, extraData: i64 480)
!6354 = !DIDerivedType(tag: DW_TAG_member, name: "state_in_sysfs", scope: !6119, file: !6114, line: 76, baseType: !7, size: 1, offset: 481, flags: DIFlagBitField, extraData: i64 480)
!6355 = !DIDerivedType(tag: DW_TAG_member, name: "state_add_uevent_sent", scope: !6119, file: !6114, line: 77, baseType: !7, size: 1, offset: 482, flags: DIFlagBitField, extraData: i64 480)
!6356 = !DIDerivedType(tag: DW_TAG_member, name: "state_remove_uevent_sent", scope: !6119, file: !6114, line: 78, baseType: !7, size: 1, offset: 483, flags: DIFlagBitField, extraData: i64 480)
!6357 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_suppress", scope: !6119, file: !6114, line: 79, baseType: !7, size: 1, offset: 484, flags: DIFlagBitField, extraData: i64 480)
!6358 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_ops", scope: !6113, file: !6114, line: 196, baseType: !6359, size: 64, offset: 640)
!6359 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6360, size: 64)
!6360 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6361)
!6361 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset_uevent_ops", file: !6114, line: 156, size: 192, elements: !6362)
!6362 = !{!6363, !6368, !6373}
!6363 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !6361, file: !6114, line: 157, baseType: !6364, size: 64)
!6364 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6365)
!6365 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6366, size: 64)
!6366 = !DISubroutineType(types: !6367)
!6367 = !{!32, !6112, !6124}
!6368 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !6361, file: !6114, line: 158, baseType: !6369, size: 64, offset: 64)
!6369 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6370)
!6370 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6371, size: 64)
!6371 = !DISubroutineType(types: !6372)
!6372 = !{!292, !6112, !6124}
!6373 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !6361, file: !6114, line: 159, baseType: !6374, size: 64, offset: 128)
!6374 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6375)
!6375 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6376, size: 64)
!6376 = !DISubroutineType(types: !6377)
!6377 = !{!32, !6112, !6124, !6378}
!6378 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6379, size: 64)
!6379 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_uevent_env", file: !6114, line: 148, size: 20736, elements: !6380)
!6380 = !{!6381, !6383, !6385, !6386, !6390}
!6381 = !DIDerivedType(tag: DW_TAG_member, name: "argv", scope: !6379, file: !6114, line: 149, baseType: !6382, size: 192)
!6382 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1038, size: 192, elements: !1592)
!6383 = !DIDerivedType(tag: DW_TAG_member, name: "envp", scope: !6379, file: !6114, line: 150, baseType: !6384, size: 4096, offset: 192)
!6384 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1038, size: 4096, elements: !3811)
!6385 = !DIDerivedType(tag: DW_TAG_member, name: "envp_idx", scope: !6379, file: !6114, line: 151, baseType: !32, size: 32, offset: 4288)
!6386 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !6379, file: !6114, line: 152, baseType: !6387, size: 16384, offset: 4320)
!6387 = !DICompositeType(tag: DW_TAG_array_type, baseType: !268, size: 16384, elements: !6388)
!6388 = !{!6389}
!6389 = !DISubrange(count: 2048)
!6390 = !DIDerivedType(tag: DW_TAG_member, name: "buflen", scope: !6379, file: !6114, line: 153, baseType: !32, size: 32, offset: 20704)
!6391 = !DIDerivedType(tag: DW_TAG_member, name: "promiscuity", scope: !264, file: !31, line: 1985, baseType: !7, size: 32, offset: 5504)
!6392 = !DIDerivedType(tag: DW_TAG_member, name: "allmulti", scope: !264, file: !31, line: 1986, baseType: !7, size: 32, offset: 5536)
!6393 = !DIDerivedType(tag: DW_TAG_member, name: "uc_promisc", scope: !264, file: !31, line: 1987, baseType: !771, size: 8, offset: 5568)
!6394 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_info", scope: !264, file: !31, line: 1996, baseType: !6395, size: 64, offset: 5632)
!6395 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6396, size: 64)
!6396 = !DICompositeType(tag: DW_TAG_structure_type, name: "vlan_info", file: !31, line: 1996, flags: DIFlagFwdDecl)
!6397 = !DIDerivedType(tag: DW_TAG_member, name: "ip_ptr", scope: !264, file: !31, line: 2007, baseType: !6398, size: 64, offset: 5696)
!6398 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6399, size: 64)
!6399 = !DICompositeType(tag: DW_TAG_structure_type, name: "in_device", file: !31, line: 2007, flags: DIFlagFwdDecl)
!6400 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_ptr", scope: !264, file: !31, line: 2011, baseType: !6401, size: 64, offset: 5760)
!6401 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6402, size: 64)
!6402 = !DICompositeType(tag: DW_TAG_structure_type, name: "inet6_dev", file: !31, line: 2011, flags: DIFlagFwdDecl)
!6403 = !DIDerivedType(tag: DW_TAG_member, name: "ieee80211_ptr", scope: !264, file: !31, line: 2015, baseType: !6404, size: 64, offset: 5824)
!6404 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6405, size: 64)
!6405 = !DICompositeType(tag: DW_TAG_structure_type, name: "wireless_dev", file: !31, line: 62, flags: DIFlagFwdDecl)
!6406 = !DIDerivedType(tag: DW_TAG_member, name: "ieee802154_ptr", scope: !264, file: !31, line: 2016, baseType: !6407, size: 64, offset: 5888)
!6407 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6408, size: 64)
!6408 = !DICompositeType(tag: DW_TAG_structure_type, name: "wpan_dev", file: !31, line: 64, flags: DIFlagFwdDecl)
!6409 = !DIDerivedType(tag: DW_TAG_member, name: "dev_addr", scope: !264, file: !31, line: 2025, baseType: !564, size: 64, offset: 5952)
!6410 = !DIDerivedType(tag: DW_TAG_member, name: "_rx", scope: !264, file: !31, line: 2027, baseType: !6411, size: 64, offset: 6016)
!6411 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6412, size: 64)
!6412 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netdev_rx_queue", file: !31, line: 736, size: 1536, elements: !6413)
!6413 = !{!6414, !6415, !6416}
!6414 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !6412, file: !31, line: 741, baseType: !6119, size: 512)
!6415 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !6412, file: !31, line: 742, baseType: !290, size: 64, offset: 512)
!6416 = !DIDerivedType(tag: DW_TAG_member, name: "xdp_rxq", scope: !6412, file: !31, line: 743, baseType: !6417, size: 512, align: 512, offset: 1024)
!6417 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xdp_rxq_info", file: !5485, line: 57, size: 512, align: 512, elements: !6418)
!6418 = !{!6419, !6420, !6421, !6422}
!6419 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !6417, file: !5485, line: 58, baseType: !290, size: 64)
!6420 = !DIDerivedType(tag: DW_TAG_member, name: "queue_index", scope: !6417, file: !5485, line: 59, baseType: !987, size: 32, offset: 64)
!6421 = !DIDerivedType(tag: DW_TAG_member, name: "reg_state", scope: !6417, file: !5485, line: 60, baseType: !987, size: 32, offset: 96)
!6422 = !DIDerivedType(tag: DW_TAG_member, name: "mem", scope: !6417, file: !5485, line: 61, baseType: !5493, size: 64, offset: 128)
!6423 = !DIDerivedType(tag: DW_TAG_member, name: "num_rx_queues", scope: !264, file: !31, line: 2028, baseType: !7, size: 32, offset: 6080)
!6424 = !DIDerivedType(tag: DW_TAG_member, name: "real_num_rx_queues", scope: !264, file: !31, line: 2029, baseType: !7, size: 32, offset: 6112)
!6425 = !DIDerivedType(tag: DW_TAG_member, name: "xdp_prog", scope: !264, file: !31, line: 2031, baseType: !1088, size: 64, offset: 6144)
!6426 = !DIDerivedType(tag: DW_TAG_member, name: "gro_flush_timeout", scope: !264, file: !31, line: 2032, baseType: !312, size: 64, offset: 6208)
!6427 = !DIDerivedType(tag: DW_TAG_member, name: "napi_defer_hard_irqs", scope: !264, file: !31, line: 2033, baseType: !32, size: 32, offset: 6272)
!6428 = !DIDerivedType(tag: DW_TAG_member, name: "rx_handler", scope: !264, file: !31, line: 2034, baseType: !6429, size: 64, offset: 6336)
!6429 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6430, size: 64)
!6430 = !DIDerivedType(tag: DW_TAG_typedef, name: "rx_handler_func_t", file: !31, line: 430, baseType: !6431)
!6431 = !DISubroutineType(types: !6432)
!6432 = !{!6433, !6434}
!6433 = !DIDerivedType(tag: DW_TAG_typedef, name: "rx_handler_result_t", file: !31, line: 429, baseType: !257)
!6434 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !415, size: 64)
!6435 = !DIDerivedType(tag: DW_TAG_member, name: "rx_handler_data", scope: !264, file: !31, line: 2035, baseType: !591, size: 64, offset: 6400)
!6436 = !DIDerivedType(tag: DW_TAG_member, name: "ingress_queue", scope: !264, file: !31, line: 2040, baseType: !6437, size: 64, offset: 6464)
!6437 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6438, size: 64)
!6438 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netdev_queue", file: !31, line: 584, size: 1600, elements: !6439)
!6439 = !{!6440, !6441, !6444, !6445, !6446, !6447, !6448, !6449, !6450, !6451, !6452, !6453}
!6440 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !6438, file: !31, line: 588, baseType: !290, size: 64)
!6441 = !DIDerivedType(tag: DW_TAG_member, name: "qdisc", scope: !6438, file: !31, line: 589, baseType: !6442, size: 64, offset: 64)
!6442 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6443, size: 64)
!6443 = !DICompositeType(tag: DW_TAG_structure_type, name: "Qdisc", file: !31, line: 589, flags: DIFlagFwdDecl)
!6444 = !DIDerivedType(tag: DW_TAG_member, name: "qdisc_sleeping", scope: !6438, file: !31, line: 590, baseType: !6442, size: 64, offset: 128)
!6445 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !6438, file: !31, line: 592, baseType: !6119, size: 512, offset: 192)
!6446 = !DIDerivedType(tag: DW_TAG_member, name: "tx_maxrate", scope: !6438, file: !31, line: 597, baseType: !312, size: 64, offset: 704)
!6447 = !DIDerivedType(tag: DW_TAG_member, name: "trans_timeout", scope: !6438, file: !31, line: 602, baseType: !312, size: 64, offset: 768)
!6448 = !DIDerivedType(tag: DW_TAG_member, name: "sb_dev", scope: !6438, file: !31, line: 605, baseType: !290, size: 64, offset: 832)
!6449 = !DIDerivedType(tag: DW_TAG_member, name: "_xmit_lock", scope: !6438, file: !31, line: 612, baseType: !1670, offset: 896)
!6450 = !DIDerivedType(tag: DW_TAG_member, name: "xmit_lock_owner", scope: !6438, file: !31, line: 613, baseType: !32, size: 32, offset: 896)
!6451 = !DIDerivedType(tag: DW_TAG_member, name: "trans_start", scope: !6438, file: !31, line: 617, baseType: !312, size: 64, offset: 960)
!6452 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !6438, file: !31, line: 619, baseType: !312, size: 64, offset: 1024)
!6453 = !DIDerivedType(tag: DW_TAG_member, name: "dql", scope: !6438, file: !31, line: 622, baseType: !6454, size: 512, offset: 1088)
!6454 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dql", file: !6455, line: 43, size: 512, elements: !6456)
!6455 = !DIFile(filename: "./include/linux/dynamic_queue_limits.h", directory: "/home/lizy2001/genbc/linux")
!6456 = !{!6457, !6458, !6459, !6460, !6461, !6462, !6463, !6464, !6465, !6466, !6467, !6468, !6469}
!6457 = !DIDerivedType(tag: DW_TAG_member, name: "num_queued", scope: !6454, file: !6455, line: 45, baseType: !7, size: 32)
!6458 = !DIDerivedType(tag: DW_TAG_member, name: "adj_limit", scope: !6454, file: !6455, line: 46, baseType: !7, size: 32, offset: 32)
!6459 = !DIDerivedType(tag: DW_TAG_member, name: "last_obj_cnt", scope: !6454, file: !6455, line: 47, baseType: !7, size: 32, offset: 64)
!6460 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !6454, file: !6455, line: 51, baseType: !7, size: 32, offset: 96)
!6461 = !DIDerivedType(tag: DW_TAG_member, name: "num_completed", scope: !6454, file: !6455, line: 52, baseType: !7, size: 32, offset: 128)
!6462 = !DIDerivedType(tag: DW_TAG_member, name: "prev_ovlimit", scope: !6454, file: !6455, line: 54, baseType: !7, size: 32, offset: 160)
!6463 = !DIDerivedType(tag: DW_TAG_member, name: "prev_num_queued", scope: !6454, file: !6455, line: 55, baseType: !7, size: 32, offset: 192)
!6464 = !DIDerivedType(tag: DW_TAG_member, name: "prev_last_obj_cnt", scope: !6454, file: !6455, line: 56, baseType: !7, size: 32, offset: 224)
!6465 = !DIDerivedType(tag: DW_TAG_member, name: "lowest_slack", scope: !6454, file: !6455, line: 58, baseType: !7, size: 32, offset: 256)
!6466 = !DIDerivedType(tag: DW_TAG_member, name: "slack_start_time", scope: !6454, file: !6455, line: 59, baseType: !312, size: 64, offset: 320)
!6467 = !DIDerivedType(tag: DW_TAG_member, name: "max_limit", scope: !6454, file: !6455, line: 62, baseType: !7, size: 32, offset: 384)
!6468 = !DIDerivedType(tag: DW_TAG_member, name: "min_limit", scope: !6454, file: !6455, line: 63, baseType: !7, size: 32, offset: 416)
!6469 = !DIDerivedType(tag: DW_TAG_member, name: "slack_hold_time", scope: !6454, file: !6455, line: 64, baseType: !7, size: 32, offset: 448)
!6470 = !DIDerivedType(tag: DW_TAG_member, name: "broadcast", scope: !264, file: !31, line: 2045, baseType: !1031, size: 256, offset: 6528)
!6471 = !DIDerivedType(tag: DW_TAG_member, name: "index_hlist", scope: !264, file: !31, line: 2049, baseType: !276, size: 128, offset: 6784)
!6472 = !DIDerivedType(tag: DW_TAG_member, name: "_tx", scope: !264, file: !31, line: 2054, baseType: !6437, size: 64, offset: 6912)
!6473 = !DIDerivedType(tag: DW_TAG_member, name: "num_tx_queues", scope: !264, file: !31, line: 2055, baseType: !7, size: 32, offset: 6976)
!6474 = !DIDerivedType(tag: DW_TAG_member, name: "real_num_tx_queues", scope: !264, file: !31, line: 2056, baseType: !7, size: 32, offset: 7008)
!6475 = !DIDerivedType(tag: DW_TAG_member, name: "qdisc", scope: !264, file: !31, line: 2057, baseType: !6442, size: 64, offset: 7040)
!6476 = !DIDerivedType(tag: DW_TAG_member, name: "tx_queue_len", scope: !264, file: !31, line: 2058, baseType: !7, size: 32, offset: 7104)
!6477 = !DIDerivedType(tag: DW_TAG_member, name: "tx_global_lock", scope: !264, file: !31, line: 2059, baseType: !1670, offset: 7136)
!6478 = !DIDerivedType(tag: DW_TAG_member, name: "xdp_bulkq", scope: !264, file: !31, line: 2061, baseType: !6479, size: 64, offset: 7168)
!6479 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6480, size: 64)
!6480 = !DICompositeType(tag: DW_TAG_structure_type, name: "xdp_dev_bulk_queue", file: !31, line: 879, flags: DIFlagFwdDecl)
!6481 = !DIDerivedType(tag: DW_TAG_member, name: "watchdog_timer", scope: !264, file: !31, line: 2075, baseType: !3234, size: 320, offset: 7232)
!6482 = !DIDerivedType(tag: DW_TAG_member, name: "watchdog_timeo", scope: !264, file: !31, line: 2076, baseType: !32, size: 32, offset: 7552)
!6483 = !DIDerivedType(tag: DW_TAG_member, name: "proto_down_reason", scope: !264, file: !31, line: 2078, baseType: !987, size: 32, offset: 7584)
!6484 = !DIDerivedType(tag: DW_TAG_member, name: "todo_list", scope: !264, file: !31, line: 2080, baseType: !284, size: 128, offset: 7616)
!6485 = !DIDerivedType(tag: DW_TAG_member, name: "pcpu_refcnt", scope: !264, file: !31, line: 2081, baseType: !1001, size: 64, offset: 7744)
!6486 = !DIDerivedType(tag: DW_TAG_member, name: "link_watch_list", scope: !264, file: !31, line: 2083, baseType: !284, size: 128, offset: 7808)
!6487 = !DIDerivedType(tag: DW_TAG_member, name: "reg_state", scope: !264, file: !31, line: 2091, baseType: !263, size: 8, offset: 7936, flags: DIFlagBitField, extraData: i64 7936)
!6488 = !DIDerivedType(tag: DW_TAG_member, name: "dismantle", scope: !264, file: !31, line: 2093, baseType: !771, size: 8, offset: 7944)
!6489 = !DIDerivedType(tag: DW_TAG_member, name: "rtnl_link_state", scope: !264, file: !31, line: 2098, baseType: !6490, size: 16, offset: 7952, flags: DIFlagBitField, extraData: i64 7952)
!6490 = !DICompositeType(tag: DW_TAG_enumeration_type, scope: !264, file: !31, line: 2095, baseType: !7, size: 32, elements: !6491)
!6491 = !{!6492, !6493}
!6492 = !DIEnumerator(name: "RTNL_LINK_INITIALIZED", value: 0, isUnsigned: true)
!6493 = !DIEnumerator(name: "RTNL_LINK_INITIALIZING", value: 1, isUnsigned: true)
!6494 = !DIDerivedType(tag: DW_TAG_member, name: "needs_free_netdev", scope: !264, file: !31, line: 2100, baseType: !771, size: 8, offset: 7968)
!6495 = !DIDerivedType(tag: DW_TAG_member, name: "priv_destructor", scope: !264, file: !31, line: 2101, baseType: !405, size: 64, offset: 8000)
!6496 = !DIDerivedType(tag: DW_TAG_member, name: "nd_net", scope: !264, file: !31, line: 2107, baseType: !6497, size: 64, offset: 8064)
!6497 = !DIDerivedType(tag: DW_TAG_typedef, name: "possible_net_t", file: !2984, line: 318, baseType: !6498)
!6498 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2984, line: 314, size: 64, elements: !6499)
!6499 = !{!6500}
!6500 = !DIDerivedType(tag: DW_TAG_member, name: "net", scope: !6498, file: !2984, line: 316, baseType: !2982, size: 64)
!6501 = !DIDerivedType(tag: DW_TAG_member, scope: !264, file: !31, line: 2110, baseType: !6502, size: 64, offset: 8128)
!6502 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !264, file: !31, line: 2110, size: 64, elements: !6503)
!6503 = !{!6504, !6505, !6526, !6535}
!6504 = !DIDerivedType(tag: DW_TAG_member, name: "ml_priv", scope: !6502, file: !31, line: 2111, baseType: !591, size: 64)
!6505 = !DIDerivedType(tag: DW_TAG_member, name: "lstats", scope: !6502, file: !31, line: 2112, baseType: !6506, size: 64)
!6506 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6507, size: 64)
!6507 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pcpu_lstats", file: !31, line: 2542, size: 128, align: 128, elements: !6508)
!6508 = !{!6509, !6524, !6525}
!6509 = !DIDerivedType(tag: DW_TAG_member, name: "packets", scope: !6507, file: !31, line: 2543, baseType: !6510, size: 64)
!6510 = !DIDerivedType(tag: DW_TAG_typedef, name: "u64_stats_t", file: !3071, line: 79, baseType: !6511)
!6511 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3071, line: 77, size: 64, elements: !6512)
!6512 = !{!6513}
!6513 = !DIDerivedType(tag: DW_TAG_member, name: "v", scope: !6511, file: !3071, line: 78, baseType: !6514, size: 64)
!6514 = !DIDerivedType(tag: DW_TAG_typedef, name: "local64_t", file: !6515, line: 26, baseType: !6516)
!6515 = !DIFile(filename: "./include/asm-generic/local64.h", directory: "/home/lizy2001/genbc/linux")
!6516 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !6515, line: 24, size: 64, elements: !6517)
!6517 = !{!6518}
!6518 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !6516, file: !6515, line: 25, baseType: !6519, size: 64)
!6519 = !DIDerivedType(tag: DW_TAG_typedef, name: "local_t", file: !6520, line: 12, baseType: !6521)
!6520 = !DIFile(filename: "./arch/x86/include/asm/local.h", directory: "/home/lizy2001/genbc/linux")
!6521 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !6520, line: 10, size: 64, elements: !6522)
!6522 = !{!6523}
!6523 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !6521, file: !6520, line: 11, baseType: !371, size: 64)
!6524 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !6507, file: !31, line: 2544, baseType: !6510, size: 64, offset: 64)
!6525 = !DIDerivedType(tag: DW_TAG_member, name: "syncp", scope: !6507, file: !31, line: 2545, baseType: !3070, offset: 128)
!6526 = !DIDerivedType(tag: DW_TAG_member, name: "tstats", scope: !6502, file: !31, line: 2113, baseType: !6527, size: 64)
!6527 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6528, size: 64)
!6528 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pcpu_sw_netstats", file: !31, line: 2534, size: 256, align: 256, elements: !6529)
!6529 = !{!6530, !6531, !6532, !6533, !6534}
!6530 = !DIDerivedType(tag: DW_TAG_member, name: "rx_packets", scope: !6528, file: !31, line: 2535, baseType: !331, size: 64)
!6531 = !DIDerivedType(tag: DW_TAG_member, name: "rx_bytes", scope: !6528, file: !31, line: 2536, baseType: !331, size: 64, offset: 64)
!6532 = !DIDerivedType(tag: DW_TAG_member, name: "tx_packets", scope: !6528, file: !31, line: 2537, baseType: !331, size: 64, offset: 128)
!6533 = !DIDerivedType(tag: DW_TAG_member, name: "tx_bytes", scope: !6528, file: !31, line: 2538, baseType: !331, size: 64, offset: 192)
!6534 = !DIDerivedType(tag: DW_TAG_member, name: "syncp", scope: !6528, file: !31, line: 2539, baseType: !3070, offset: 256)
!6535 = !DIDerivedType(tag: DW_TAG_member, name: "dstats", scope: !6502, file: !31, line: 2114, baseType: !6536, size: 64)
!6536 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6537, size: 64)
!6537 = !DICompositeType(tag: DW_TAG_structure_type, name: "pcpu_dstats", file: !31, line: 2114, flags: DIFlagFwdDecl)
!6538 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !264, file: !31, line: 2124, baseType: !6539, size: 5568, offset: 8192)
!6539 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !6540, line: 461, size: 5568, elements: !6541)
!6540 = !DIFile(filename: "./include/linux/device.h", directory: "/home/lizy2001/genbc/linux")
!6541 = !{!6542, !6543, !6545, !6548, !6549, !6601, !6693, !6694, !6695, !6696, !6697, !6712, !6819, !6832, !6836, !6837, !6841, !6842, !6843, !6844, !6848, !6854, !6855, !6858, !6862, !6952, !6953, !6954, !6955, !6956, !6988, !6989, !6990, !6993, !6996, !6997, !6998, !6999}
!6542 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !6539, file: !6540, line: 462, baseType: !6119, size: 512)
!6543 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !6539, file: !6540, line: 463, baseType: !6544, size: 64, offset: 512)
!6544 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6539, size: 64)
!6545 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !6539, file: !6540, line: 465, baseType: !6546, size: 64, offset: 576)
!6546 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6547, size: 64)
!6547 = !DICompositeType(tag: DW_TAG_structure_type, name: "device_private", file: !6540, line: 36, flags: DIFlagFwdDecl)
!6548 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !6539, file: !6540, line: 467, baseType: !292, size: 64, offset: 640)
!6549 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !6539, file: !6540, line: 468, baseType: !6550, size: 64, offset: 704)
!6550 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6551, size: 64)
!6551 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6552)
!6552 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_type", file: !6540, line: 87, size: 384, elements: !6553)
!6553 = !{!6554, !6555, !6556, !6560, !6565, !6569}
!6554 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !6552, file: !6540, line: 88, baseType: !292, size: 64)
!6555 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !6552, file: !6540, line: 89, baseType: !6156, size: 64, offset: 64)
!6556 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !6552, file: !6540, line: 90, baseType: !6557, size: 64, offset: 128)
!6557 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6558, size: 64)
!6558 = !DISubroutineType(types: !6559)
!6559 = !{!32, !6544, !6378}
!6560 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !6552, file: !6540, line: 91, baseType: !6561, size: 64, offset: 192)
!6561 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6562, size: 64)
!6562 = !DISubroutineType(types: !6563)
!6563 = !{!1038, !6544, !6564, !2904, !2905}
!6564 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1379, size: 64)
!6565 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !6552, file: !6540, line: 93, baseType: !6566, size: 64, offset: 256)
!6566 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6567, size: 64)
!6567 = !DISubroutineType(types: !6568)
!6568 = !{null, !6544}
!6569 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !6552, file: !6540, line: 95, baseType: !6570, size: 64, offset: 320)
!6570 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6571, size: 64)
!6571 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6572)
!6572 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_ops", file: !6573, line: 278, size: 1472, elements: !6574)
!6573 = !DIFile(filename: "./include/linux/pm.h", directory: "/home/lizy2001/genbc/linux")
!6574 = !{!6575, !6579, !6580, !6581, !6582, !6583, !6584, !6585, !6586, !6587, !6588, !6589, !6590, !6591, !6592, !6593, !6594, !6595, !6596, !6597, !6598, !6599, !6600}
!6575 = !DIDerivedType(tag: DW_TAG_member, name: "prepare", scope: !6572, file: !6573, line: 279, baseType: !6576, size: 64)
!6576 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6577, size: 64)
!6577 = !DISubroutineType(types: !6578)
!6578 = !{!32, !6544}
!6579 = !DIDerivedType(tag: DW_TAG_member, name: "complete", scope: !6572, file: !6573, line: 280, baseType: !6566, size: 64, offset: 64)
!6580 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !6572, file: !6573, line: 281, baseType: !6576, size: 64, offset: 128)
!6581 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !6572, file: !6573, line: 282, baseType: !6576, size: 64, offset: 192)
!6582 = !DIDerivedType(tag: DW_TAG_member, name: "freeze", scope: !6572, file: !6573, line: 283, baseType: !6576, size: 64, offset: 256)
!6583 = !DIDerivedType(tag: DW_TAG_member, name: "thaw", scope: !6572, file: !6573, line: 284, baseType: !6576, size: 64, offset: 320)
!6584 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff", scope: !6572, file: !6573, line: 285, baseType: !6576, size: 64, offset: 384)
!6585 = !DIDerivedType(tag: DW_TAG_member, name: "restore", scope: !6572, file: !6573, line: 286, baseType: !6576, size: 64, offset: 448)
!6586 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_late", scope: !6572, file: !6573, line: 287, baseType: !6576, size: 64, offset: 512)
!6587 = !DIDerivedType(tag: DW_TAG_member, name: "resume_early", scope: !6572, file: !6573, line: 288, baseType: !6576, size: 64, offset: 576)
!6588 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_late", scope: !6572, file: !6573, line: 289, baseType: !6576, size: 64, offset: 640)
!6589 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_early", scope: !6572, file: !6573, line: 290, baseType: !6576, size: 64, offset: 704)
!6590 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_late", scope: !6572, file: !6573, line: 291, baseType: !6576, size: 64, offset: 768)
!6591 = !DIDerivedType(tag: DW_TAG_member, name: "restore_early", scope: !6572, file: !6573, line: 292, baseType: !6576, size: 64, offset: 832)
!6592 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_noirq", scope: !6572, file: !6573, line: 293, baseType: !6576, size: 64, offset: 896)
!6593 = !DIDerivedType(tag: DW_TAG_member, name: "resume_noirq", scope: !6572, file: !6573, line: 294, baseType: !6576, size: 64, offset: 960)
!6594 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_noirq", scope: !6572, file: !6573, line: 295, baseType: !6576, size: 64, offset: 1024)
!6595 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_noirq", scope: !6572, file: !6573, line: 296, baseType: !6576, size: 64, offset: 1088)
!6596 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_noirq", scope: !6572, file: !6573, line: 297, baseType: !6576, size: 64, offset: 1152)
!6597 = !DIDerivedType(tag: DW_TAG_member, name: "restore_noirq", scope: !6572, file: !6573, line: 298, baseType: !6576, size: 64, offset: 1216)
!6598 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_suspend", scope: !6572, file: !6573, line: 299, baseType: !6576, size: 64, offset: 1280)
!6599 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_resume", scope: !6572, file: !6573, line: 300, baseType: !6576, size: 64, offset: 1344)
!6600 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_idle", scope: !6572, file: !6573, line: 301, baseType: !6576, size: 64, offset: 1408)
!6601 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !6539, file: !6540, line: 470, baseType: !6602, size: 64, offset: 768)
!6602 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6603, size: 64)
!6603 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bus_type", file: !6604, line: 82, size: 1408, elements: !6605)
!6604 = !DIFile(filename: "./include/linux/device/bus.h", directory: "/home/lizy2001/genbc/linux")
!6605 = !{!6606, !6607, !6608, !6609, !6610, !6611, !6612, !6672, !6673, !6674, !6675, !6676, !6677, !6678, !6679, !6680, !6681, !6682, !6683, !6684, !6688, !6691, !6692}
!6606 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !6603, file: !6604, line: 83, baseType: !292, size: 64)
!6607 = !DIDerivedType(tag: DW_TAG_member, name: "dev_name", scope: !6603, file: !6604, line: 84, baseType: !292, size: 64, offset: 64)
!6608 = !DIDerivedType(tag: DW_TAG_member, name: "dev_root", scope: !6603, file: !6604, line: 85, baseType: !6544, size: 64, offset: 128)
!6609 = !DIDerivedType(tag: DW_TAG_member, name: "bus_groups", scope: !6603, file: !6604, line: 86, baseType: !6156, size: 64, offset: 192)
!6610 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !6603, file: !6604, line: 87, baseType: !6156, size: 64, offset: 256)
!6611 = !DIDerivedType(tag: DW_TAG_member, name: "drv_groups", scope: !6603, file: !6604, line: 88, baseType: !6156, size: 64, offset: 320)
!6612 = !DIDerivedType(tag: DW_TAG_member, name: "match", scope: !6603, file: !6604, line: 90, baseType: !6613, size: 64, offset: 384)
!6613 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6614, size: 64)
!6614 = !DISubroutineType(types: !6615)
!6615 = !{!32, !6544, !6616}
!6616 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6617, size: 64)
!6617 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_driver", file: !6618, line: 95, size: 1152, elements: !6619)
!6618 = !DIFile(filename: "./include/linux/device/driver.h", directory: "/home/lizy2001/genbc/linux")
!6619 = !{!6620, !6621, !6622, !6623, !6624, !6625, !6631, !6641, !6652, !6653, !6654, !6655, !6656, !6664, !6665, !6666, !6667, !6668, !6669}
!6620 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !6617, file: !6618, line: 96, baseType: !292, size: 64)
!6621 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !6617, file: !6618, line: 97, baseType: !6602, size: 64, offset: 64)
!6622 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !6617, file: !6618, line: 99, baseType: !980, size: 64, offset: 128)
!6623 = !DIDerivedType(tag: DW_TAG_member, name: "mod_name", scope: !6617, file: !6618, line: 100, baseType: !292, size: 64, offset: 192)
!6624 = !DIDerivedType(tag: DW_TAG_member, name: "suppress_bind_attrs", scope: !6617, file: !6618, line: 102, baseType: !771, size: 8, offset: 256)
!6625 = !DIDerivedType(tag: DW_TAG_member, name: "probe_type", scope: !6617, file: !6618, line: 103, baseType: !6626, size: 32, offset: 288)
!6626 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "probe_type", file: !6618, line: 44, baseType: !7, size: 32, elements: !6627)
!6627 = !{!6628, !6629, !6630}
!6628 = !DIEnumerator(name: "PROBE_DEFAULT_STRATEGY", value: 0, isUnsigned: true)
!6629 = !DIEnumerator(name: "PROBE_PREFER_ASYNCHRONOUS", value: 1, isUnsigned: true)
!6630 = !DIEnumerator(name: "PROBE_FORCE_SYNCHRONOUS", value: 2, isUnsigned: true)
!6631 = !DIDerivedType(tag: DW_TAG_member, name: "of_match_table", scope: !6617, file: !6618, line: 105, baseType: !6632, size: 64, offset: 320)
!6632 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6633, size: 64)
!6633 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6634)
!6634 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "of_device_id", file: !6635, line: 262, size: 1600, elements: !6636)
!6635 = !DIFile(filename: "./include/linux/mod_devicetable.h", directory: "/home/lizy2001/genbc/linux")
!6636 = !{!6637, !6638, !6639, !6640}
!6637 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !6634, file: !6635, line: 263, baseType: !4624, size: 256)
!6638 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !6634, file: !6635, line: 264, baseType: !4624, size: 256, offset: 256)
!6639 = !DIDerivedType(tag: DW_TAG_member, name: "compatible", scope: !6634, file: !6635, line: 265, baseType: !5232, size: 1024, offset: 512)
!6640 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !6634, file: !6635, line: 266, baseType: !3257, size: 64, offset: 1536)
!6641 = !DIDerivedType(tag: DW_TAG_member, name: "acpi_match_table", scope: !6617, file: !6618, line: 106, baseType: !6642, size: 64, offset: 384)
!6642 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6643, size: 64)
!6643 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6644)
!6644 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_id", file: !6635, line: 210, size: 256, elements: !6645)
!6645 = !{!6646, !6648, !6650, !6651}
!6646 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !6644, file: !6635, line: 211, baseType: !6647, size: 72)
!6647 = !DICompositeType(tag: DW_TAG_array_type, baseType: !481, size: 72, elements: !3086)
!6648 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !6644, file: !6635, line: 212, baseType: !6649, size: 64, offset: 128)
!6649 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_ulong_t", file: !6635, line: 14, baseType: !312)
!6650 = !DIDerivedType(tag: DW_TAG_member, name: "cls", scope: !6644, file: !6635, line: 213, baseType: !493, size: 32, offset: 192)
!6651 = !DIDerivedType(tag: DW_TAG_member, name: "cls_msk", scope: !6644, file: !6635, line: 214, baseType: !493, size: 32, offset: 224)
!6652 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !6617, file: !6618, line: 108, baseType: !6576, size: 64, offset: 448)
!6653 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !6617, file: !6618, line: 109, baseType: !6566, size: 64, offset: 512)
!6654 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !6617, file: !6618, line: 110, baseType: !6576, size: 64, offset: 576)
!6655 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !6617, file: !6618, line: 111, baseType: !6566, size: 64, offset: 640)
!6656 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !6617, file: !6618, line: 112, baseType: !6657, size: 64, offset: 704)
!6657 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6658, size: 64)
!6658 = !DISubroutineType(types: !6659)
!6659 = !{!32, !6544, !6660}
!6660 = !DIDerivedType(tag: DW_TAG_typedef, name: "pm_message_t", file: !6573, line: 52, baseType: !6661)
!6661 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_message", file: !6573, line: 50, size: 32, elements: !6662)
!6662 = !{!6663}
!6663 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !6661, file: !6573, line: 51, baseType: !32, size: 32)
!6664 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !6617, file: !6618, line: 113, baseType: !6576, size: 64, offset: 768)
!6665 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !6617, file: !6618, line: 114, baseType: !6156, size: 64, offset: 832)
!6666 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !6617, file: !6618, line: 115, baseType: !6156, size: 64, offset: 896)
!6667 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !6617, file: !6618, line: 117, baseType: !6570, size: 64, offset: 960)
!6668 = !DIDerivedType(tag: DW_TAG_member, name: "coredump", scope: !6617, file: !6618, line: 118, baseType: !6566, size: 64, offset: 1024)
!6669 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !6617, file: !6618, line: 120, baseType: !6670, size: 64, offset: 1088)
!6670 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6671, size: 64)
!6671 = !DICompositeType(tag: DW_TAG_structure_type, name: "driver_private", file: !6618, line: 120, flags: DIFlagFwdDecl)
!6672 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !6603, file: !6604, line: 91, baseType: !6557, size: 64, offset: 448)
!6673 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !6603, file: !6604, line: 92, baseType: !6576, size: 64, offset: 512)
!6674 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !6603, file: !6604, line: 93, baseType: !6566, size: 64, offset: 576)
!6675 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !6603, file: !6604, line: 94, baseType: !6576, size: 64, offset: 640)
!6676 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !6603, file: !6604, line: 95, baseType: !6566, size: 64, offset: 704)
!6677 = !DIDerivedType(tag: DW_TAG_member, name: "online", scope: !6603, file: !6604, line: 97, baseType: !6576, size: 64, offset: 768)
!6678 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !6603, file: !6604, line: 98, baseType: !6576, size: 64, offset: 832)
!6679 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !6603, file: !6604, line: 100, baseType: !6657, size: 64, offset: 896)
!6680 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !6603, file: !6604, line: 101, baseType: !6576, size: 64, offset: 960)
!6681 = !DIDerivedType(tag: DW_TAG_member, name: "num_vf", scope: !6603, file: !6604, line: 103, baseType: !6576, size: 64, offset: 1024)
!6682 = !DIDerivedType(tag: DW_TAG_member, name: "dma_configure", scope: !6603, file: !6604, line: 105, baseType: !6576, size: 64, offset: 1088)
!6683 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !6603, file: !6604, line: 107, baseType: !6570, size: 64, offset: 1152)
!6684 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_ops", scope: !6603, file: !6604, line: 109, baseType: !6685, size: 64, offset: 1216)
!6685 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6686, size: 64)
!6686 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6687)
!6687 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_ops", file: !6604, line: 109, flags: DIFlagFwdDecl)
!6688 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !6603, file: !6604, line: 111, baseType: !6689, size: 64, offset: 1280)
!6689 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6690, size: 64)
!6690 = !DICompositeType(tag: DW_TAG_structure_type, name: "subsys_private", file: !6604, line: 111, flags: DIFlagFwdDecl)
!6691 = !DIDerivedType(tag: DW_TAG_member, name: "lock_key", scope: !6603, file: !6604, line: 112, baseType: !1585, offset: 1344)
!6692 = !DIDerivedType(tag: DW_TAG_member, name: "need_parent_lock", scope: !6603, file: !6604, line: 114, baseType: !771, size: 8, offset: 1344)
!6693 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !6539, file: !6540, line: 471, baseType: !6616, size: 64, offset: 832)
!6694 = !DIDerivedType(tag: DW_TAG_member, name: "platform_data", scope: !6539, file: !6540, line: 473, baseType: !591, size: 64, offset: 896)
!6695 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !6539, file: !6540, line: 475, baseType: !591, size: 64, offset: 960)
!6696 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !6539, file: !6540, line: 480, baseType: !1665, size: 192, offset: 1024)
!6697 = !DIDerivedType(tag: DW_TAG_member, name: "links", scope: !6539, file: !6540, line: 484, baseType: !6698, size: 576, offset: 1216)
!6698 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_links_info", file: !6540, line: 361, size: 576, elements: !6699)
!6699 = !{!6700, !6701, !6702, !6703, !6704, !6705}
!6700 = !DIDerivedType(tag: DW_TAG_member, name: "suppliers", scope: !6698, file: !6540, line: 362, baseType: !284, size: 128)
!6701 = !DIDerivedType(tag: DW_TAG_member, name: "consumers", scope: !6698, file: !6540, line: 363, baseType: !284, size: 128, offset: 128)
!6702 = !DIDerivedType(tag: DW_TAG_member, name: "needs_suppliers", scope: !6698, file: !6540, line: 364, baseType: !284, size: 128, offset: 256)
!6703 = !DIDerivedType(tag: DW_TAG_member, name: "defer_hook", scope: !6698, file: !6540, line: 365, baseType: !284, size: 128, offset: 384)
!6704 = !DIDerivedType(tag: DW_TAG_member, name: "need_for_probe", scope: !6698, file: !6540, line: 366, baseType: !771, size: 8, offset: 512)
!6705 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !6698, file: !6540, line: 367, baseType: !6706, size: 32, offset: 544)
!6706 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dl_dev_state", file: !6540, line: 343, baseType: !7, size: 32, elements: !6707)
!6707 = !{!6708, !6709, !6710, !6711}
!6708 = !DIEnumerator(name: "DL_DEV_NO_DRIVER", value: 0, isUnsigned: true)
!6709 = !DIEnumerator(name: "DL_DEV_PROBING", value: 1, isUnsigned: true)
!6710 = !DIEnumerator(name: "DL_DEV_DRIVER_BOUND", value: 2, isUnsigned: true)
!6711 = !DIEnumerator(name: "DL_DEV_UNBINDING", value: 3, isUnsigned: true)
!6712 = !DIDerivedType(tag: DW_TAG_member, name: "power", scope: !6539, file: !6540, line: 485, baseType: !6713, size: 2304, offset: 1792)
!6713 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_info", file: !6573, line: 565, size: 2304, elements: !6714)
!6714 = !{!6715, !6716, !6717, !6718, !6719, !6720, !6721, !6722, !6723, !6724, !6725, !6726, !6727, !6728, !6729, !6730, !6757, !6758, !6759, !6760, !6761, !6762, !6763, !6764, !6765, !6766, !6767, !6768, !6769, !6770, !6771, !6772, !6773, !6774, !6775, !6776, !6777, !6778, !6779, !6780, !6781, !6789, !6796, !6797, !6798, !6799, !6800, !6801, !6802, !6812, !6816}
!6715 = !DIDerivedType(tag: DW_TAG_member, name: "power_state", scope: !6713, file: !6573, line: 566, baseType: !6660, size: 32)
!6716 = !DIDerivedType(tag: DW_TAG_member, name: "can_wakeup", scope: !6713, file: !6573, line: 567, baseType: !7, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!6717 = !DIDerivedType(tag: DW_TAG_member, name: "async_suspend", scope: !6713, file: !6573, line: 568, baseType: !7, size: 1, offset: 33, flags: DIFlagBitField, extraData: i64 32)
!6718 = !DIDerivedType(tag: DW_TAG_member, name: "in_dpm_list", scope: !6713, file: !6573, line: 569, baseType: !771, size: 1, offset: 34, flags: DIFlagBitField, extraData: i64 32)
!6719 = !DIDerivedType(tag: DW_TAG_member, name: "is_prepared", scope: !6713, file: !6573, line: 570, baseType: !771, size: 1, offset: 35, flags: DIFlagBitField, extraData: i64 32)
!6720 = !DIDerivedType(tag: DW_TAG_member, name: "is_suspended", scope: !6713, file: !6573, line: 571, baseType: !771, size: 1, offset: 36, flags: DIFlagBitField, extraData: i64 32)
!6721 = !DIDerivedType(tag: DW_TAG_member, name: "is_noirq_suspended", scope: !6713, file: !6573, line: 572, baseType: !771, size: 1, offset: 37, flags: DIFlagBitField, extraData: i64 32)
!6722 = !DIDerivedType(tag: DW_TAG_member, name: "is_late_suspended", scope: !6713, file: !6573, line: 573, baseType: !771, size: 1, offset: 38, flags: DIFlagBitField, extraData: i64 32)
!6723 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm", scope: !6713, file: !6573, line: 574, baseType: !771, size: 1, offset: 39, flags: DIFlagBitField, extraData: i64 32)
!6724 = !DIDerivedType(tag: DW_TAG_member, name: "early_init", scope: !6713, file: !6573, line: 575, baseType: !771, size: 1, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!6725 = !DIDerivedType(tag: DW_TAG_member, name: "direct_complete", scope: !6713, file: !6573, line: 576, baseType: !771, size: 1, offset: 41, flags: DIFlagBitField, extraData: i64 32)
!6726 = !DIDerivedType(tag: DW_TAG_member, name: "driver_flags", scope: !6713, file: !6573, line: 577, baseType: !987, size: 32, offset: 64)
!6727 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !6713, file: !6573, line: 578, baseType: !1670, offset: 96)
!6728 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !6713, file: !6573, line: 580, baseType: !284, size: 128, offset: 128)
!6729 = !DIDerivedType(tag: DW_TAG_member, name: "completion", scope: !6713, file: !6573, line: 581, baseType: !2597, size: 192, offset: 256)
!6730 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup", scope: !6713, file: !6573, line: 582, baseType: !6731, size: 64, offset: 448)
!6731 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6732, size: 64)
!6732 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wakeup_source", file: !6733, line: 43, size: 1472, elements: !6734)
!6733 = !DIFile(filename: "./include/linux/pm_wakeup.h", directory: "/home/lizy2001/genbc/linux")
!6734 = !{!6735, !6736, !6737, !6738, !6739, !6742, !6743, !6744, !6745, !6746, !6747, !6748, !6749, !6750, !6751, !6752, !6753, !6754, !6755, !6756}
!6735 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !6732, file: !6733, line: 44, baseType: !292, size: 64)
!6736 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !6732, file: !6733, line: 45, baseType: !32, size: 32, offset: 64)
!6737 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !6732, file: !6733, line: 46, baseType: !284, size: 128, offset: 128)
!6738 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !6732, file: !6733, line: 47, baseType: !1670, offset: 256)
!6739 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !6732, file: !6733, line: 48, baseType: !6740, size: 64, offset: 256)
!6740 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6741, size: 64)
!6741 = !DICompositeType(tag: DW_TAG_structure_type, name: "wake_irq", file: !6573, line: 533, flags: DIFlagFwdDecl)
!6742 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !6732, file: !6733, line: 49, baseType: !3234, size: 320, offset: 320)
!6743 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !6732, file: !6733, line: 50, baseType: !312, size: 64, offset: 640)
!6744 = !DIDerivedType(tag: DW_TAG_member, name: "total_time", scope: !6732, file: !6733, line: 51, baseType: !453, size: 64, offset: 704)
!6745 = !DIDerivedType(tag: DW_TAG_member, name: "max_time", scope: !6732, file: !6733, line: 52, baseType: !453, size: 64, offset: 768)
!6746 = !DIDerivedType(tag: DW_TAG_member, name: "last_time", scope: !6732, file: !6733, line: 53, baseType: !453, size: 64, offset: 832)
!6747 = !DIDerivedType(tag: DW_TAG_member, name: "start_prevent_time", scope: !6732, file: !6733, line: 54, baseType: !453, size: 64, offset: 896)
!6748 = !DIDerivedType(tag: DW_TAG_member, name: "prevent_sleep_time", scope: !6732, file: !6733, line: 55, baseType: !453, size: 64, offset: 960)
!6749 = !DIDerivedType(tag: DW_TAG_member, name: "event_count", scope: !6732, file: !6733, line: 56, baseType: !312, size: 64, offset: 1024)
!6750 = !DIDerivedType(tag: DW_TAG_member, name: "active_count", scope: !6732, file: !6733, line: 57, baseType: !312, size: 64, offset: 1088)
!6751 = !DIDerivedType(tag: DW_TAG_member, name: "relax_count", scope: !6732, file: !6733, line: 58, baseType: !312, size: 64, offset: 1152)
!6752 = !DIDerivedType(tag: DW_TAG_member, name: "expire_count", scope: !6732, file: !6733, line: 59, baseType: !312, size: 64, offset: 1216)
!6753 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_count", scope: !6732, file: !6733, line: 60, baseType: !312, size: 64, offset: 1280)
!6754 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !6732, file: !6733, line: 61, baseType: !6544, size: 64, offset: 1344)
!6755 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !6732, file: !6733, line: 62, baseType: !771, size: 1, offset: 1408, flags: DIFlagBitField, extraData: i64 1408)
!6756 = !DIDerivedType(tag: DW_TAG_member, name: "autosleep_enabled", scope: !6732, file: !6733, line: 63, baseType: !771, size: 1, offset: 1409, flags: DIFlagBitField, extraData: i64 1408)
!6757 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_path", scope: !6713, file: !6573, line: 583, baseType: !771, size: 1, offset: 512, flags: DIFlagBitField, extraData: i64 512)
!6758 = !DIDerivedType(tag: DW_TAG_member, name: "syscore", scope: !6713, file: !6573, line: 584, baseType: !771, size: 1, offset: 513, flags: DIFlagBitField, extraData: i64 512)
!6759 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm_callbacks", scope: !6713, file: !6573, line: 585, baseType: !771, size: 1, offset: 514, flags: DIFlagBitField, extraData: i64 512)
!6760 = !DIDerivedType(tag: DW_TAG_member, name: "must_resume", scope: !6713, file: !6573, line: 586, baseType: !7, size: 1, offset: 515, flags: DIFlagBitField, extraData: i64 512)
!6761 = !DIDerivedType(tag: DW_TAG_member, name: "may_skip_resume", scope: !6713, file: !6573, line: 587, baseType: !7, size: 1, offset: 516, flags: DIFlagBitField, extraData: i64 512)
!6762 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_timer", scope: !6713, file: !6573, line: 592, baseType: !2397, size: 512, offset: 576)
!6763 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !6713, file: !6573, line: 593, baseType: !331, size: 64, offset: 1088)
!6764 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !6713, file: !6573, line: 594, baseType: !2829, size: 256, offset: 1152)
!6765 = !DIDerivedType(tag: DW_TAG_member, name: "wait_queue", scope: !6713, file: !6573, line: 595, baseType: !1889, size: 128, offset: 1408)
!6766 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !6713, file: !6573, line: 596, baseType: !6740, size: 64, offset: 1536)
!6767 = !DIDerivedType(tag: DW_TAG_member, name: "usage_count", scope: !6713, file: !6573, line: 597, baseType: !383, size: 32, offset: 1600)
!6768 = !DIDerivedType(tag: DW_TAG_member, name: "child_count", scope: !6713, file: !6573, line: 598, baseType: !383, size: 32, offset: 1632)
!6769 = !DIDerivedType(tag: DW_TAG_member, name: "disable_depth", scope: !6713, file: !6573, line: 599, baseType: !7, size: 3, offset: 1664, flags: DIFlagBitField, extraData: i64 1664)
!6770 = !DIDerivedType(tag: DW_TAG_member, name: "idle_notification", scope: !6713, file: !6573, line: 600, baseType: !7, size: 1, offset: 1667, flags: DIFlagBitField, extraData: i64 1664)
!6771 = !DIDerivedType(tag: DW_TAG_member, name: "request_pending", scope: !6713, file: !6573, line: 601, baseType: !7, size: 1, offset: 1668, flags: DIFlagBitField, extraData: i64 1664)
!6772 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_resume", scope: !6713, file: !6573, line: 602, baseType: !7, size: 1, offset: 1669, flags: DIFlagBitField, extraData: i64 1664)
!6773 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_auto", scope: !6713, file: !6573, line: 603, baseType: !7, size: 1, offset: 1670, flags: DIFlagBitField, extraData: i64 1664)
!6774 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_children", scope: !6713, file: !6573, line: 604, baseType: !771, size: 1, offset: 1671, flags: DIFlagBitField, extraData: i64 1664)
!6775 = !DIDerivedType(tag: DW_TAG_member, name: "no_callbacks", scope: !6713, file: !6573, line: 605, baseType: !7, size: 1, offset: 1672, flags: DIFlagBitField, extraData: i64 1664)
!6776 = !DIDerivedType(tag: DW_TAG_member, name: "irq_safe", scope: !6713, file: !6573, line: 606, baseType: !7, size: 1, offset: 1673, flags: DIFlagBitField, extraData: i64 1664)
!6777 = !DIDerivedType(tag: DW_TAG_member, name: "use_autosuspend", scope: !6713, file: !6573, line: 607, baseType: !7, size: 1, offset: 1674, flags: DIFlagBitField, extraData: i64 1664)
!6778 = !DIDerivedType(tag: DW_TAG_member, name: "timer_autosuspends", scope: !6713, file: !6573, line: 608, baseType: !7, size: 1, offset: 1675, flags: DIFlagBitField, extraData: i64 1664)
!6779 = !DIDerivedType(tag: DW_TAG_member, name: "memalloc_noio", scope: !6713, file: !6573, line: 609, baseType: !7, size: 1, offset: 1676, flags: DIFlagBitField, extraData: i64 1664)
!6780 = !DIDerivedType(tag: DW_TAG_member, name: "links_count", scope: !6713, file: !6573, line: 610, baseType: !7, size: 32, offset: 1696)
!6781 = !DIDerivedType(tag: DW_TAG_member, name: "request", scope: !6713, file: !6573, line: 611, baseType: !6782, size: 32, offset: 1728)
!6782 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_request", file: !6573, line: 524, baseType: !7, size: 32, elements: !6783)
!6783 = !{!6784, !6785, !6786, !6787, !6788}
!6784 = !DIEnumerator(name: "RPM_REQ_NONE", value: 0, isUnsigned: true)
!6785 = !DIEnumerator(name: "RPM_REQ_IDLE", value: 1, isUnsigned: true)
!6786 = !DIEnumerator(name: "RPM_REQ_SUSPEND", value: 2, isUnsigned: true)
!6787 = !DIEnumerator(name: "RPM_REQ_AUTOSUSPEND", value: 3, isUnsigned: true)
!6788 = !DIEnumerator(name: "RPM_REQ_RESUME", value: 4, isUnsigned: true)
!6789 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_status", scope: !6713, file: !6573, line: 612, baseType: !6790, size: 32, offset: 1760)
!6790 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_status", file: !6573, line: 502, baseType: !7, size: 32, elements: !6791)
!6791 = !{!6792, !6793, !6794, !6795}
!6792 = !DIEnumerator(name: "RPM_ACTIVE", value: 0, isUnsigned: true)
!6793 = !DIEnumerator(name: "RPM_RESUMING", value: 1, isUnsigned: true)
!6794 = !DIEnumerator(name: "RPM_SUSPENDED", value: 2, isUnsigned: true)
!6795 = !DIEnumerator(name: "RPM_SUSPENDING", value: 3, isUnsigned: true)
!6796 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_error", scope: !6713, file: !6573, line: 613, baseType: !32, size: 32, offset: 1792)
!6797 = !DIDerivedType(tag: DW_TAG_member, name: "autosuspend_delay", scope: !6713, file: !6573, line: 614, baseType: !32, size: 32, offset: 1824)
!6798 = !DIDerivedType(tag: DW_TAG_member, name: "last_busy", scope: !6713, file: !6573, line: 615, baseType: !331, size: 64, offset: 1856)
!6799 = !DIDerivedType(tag: DW_TAG_member, name: "active_time", scope: !6713, file: !6573, line: 616, baseType: !331, size: 64, offset: 1920)
!6800 = !DIDerivedType(tag: DW_TAG_member, name: "suspended_time", scope: !6713, file: !6573, line: 617, baseType: !331, size: 64, offset: 1984)
!6801 = !DIDerivedType(tag: DW_TAG_member, name: "accounting_timestamp", scope: !6713, file: !6573, line: 618, baseType: !331, size: 64, offset: 2048)
!6802 = !DIDerivedType(tag: DW_TAG_member, name: "subsys_data", scope: !6713, file: !6573, line: 620, baseType: !6803, size: 64, offset: 2112)
!6803 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6804, size: 64)
!6804 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_subsys_data", file: !6573, line: 536, size: 256, elements: !6805)
!6805 = !{!6806, !6807, !6808, !6809}
!6806 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !6804, file: !6573, line: 537, baseType: !1670)
!6807 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !6804, file: !6573, line: 538, baseType: !7, size: 32)
!6808 = !DIDerivedType(tag: DW_TAG_member, name: "clock_list", scope: !6804, file: !6573, line: 540, baseType: !284, size: 128, offset: 64)
!6809 = !DIDerivedType(tag: DW_TAG_member, name: "domain_data", scope: !6804, file: !6573, line: 543, baseType: !6810, size: 64, offset: 192)
!6810 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6811, size: 64)
!6811 = !DICompositeType(tag: DW_TAG_structure_type, name: "pm_domain_data", file: !6573, line: 534, flags: DIFlagFwdDecl)
!6812 = !DIDerivedType(tag: DW_TAG_member, name: "set_latency_tolerance", scope: !6713, file: !6573, line: 621, baseType: !6813, size: 64, offset: 2176)
!6813 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6814, size: 64)
!6814 = !DISubroutineType(types: !6815)
!6815 = !{null, !6544, !2545}
!6816 = !DIDerivedType(tag: DW_TAG_member, name: "qos", scope: !6713, file: !6573, line: 622, baseType: !6817, size: 64, offset: 2240)
!6817 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6818, size: 64)
!6818 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_qos", file: !6573, line: 622, flags: DIFlagFwdDecl)
!6819 = !DIDerivedType(tag: DW_TAG_member, name: "pm_domain", scope: !6539, file: !6540, line: 486, baseType: !6820, size: 64, offset: 4096)
!6820 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6821, size: 64)
!6821 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_domain", file: !6573, line: 642, size: 1792, elements: !6822)
!6822 = !{!6823, !6824, !6825, !6829, !6830, !6831}
!6823 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !6821, file: !6573, line: 643, baseType: !6572, size: 1472)
!6824 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !6821, file: !6573, line: 644, baseType: !6576, size: 64, offset: 1472)
!6825 = !DIDerivedType(tag: DW_TAG_member, name: "detach", scope: !6821, file: !6573, line: 645, baseType: !6826, size: 64, offset: 1536)
!6826 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6827, size: 64)
!6827 = !DISubroutineType(types: !6828)
!6828 = !{null, !6544, !771}
!6829 = !DIDerivedType(tag: DW_TAG_member, name: "activate", scope: !6821, file: !6573, line: 646, baseType: !6576, size: 64, offset: 1600)
!6830 = !DIDerivedType(tag: DW_TAG_member, name: "sync", scope: !6821, file: !6573, line: 647, baseType: !6566, size: 64, offset: 1664)
!6831 = !DIDerivedType(tag: DW_TAG_member, name: "dismiss", scope: !6821, file: !6573, line: 648, baseType: !6566, size: 64, offset: 1728)
!6832 = !DIDerivedType(tag: DW_TAG_member, name: "msi_domain", scope: !6539, file: !6540, line: 493, baseType: !6833, size: 64, offset: 4160)
!6833 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6834, size: 64)
!6834 = !DICompositeType(tag: DW_TAG_structure_type, name: "irq_domain", file: !6835, line: 13, flags: DIFlagFwdDecl)
!6835 = !DIFile(filename: "./arch/x86/include/asm/x86_init.h", directory: "/home/lizy2001/genbc/linux")
!6836 = !DIDerivedType(tag: DW_TAG_member, name: "msi_list", scope: !6539, file: !6540, line: 499, baseType: !284, size: 128, offset: 4224)
!6837 = !DIDerivedType(tag: DW_TAG_member, name: "dma_ops", scope: !6539, file: !6540, line: 502, baseType: !6838, size: 64, offset: 4352)
!6838 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6839, size: 64)
!6839 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6840)
!6840 = !DICompositeType(tag: DW_TAG_structure_type, name: "dma_map_ops", file: !6540, line: 502, flags: DIFlagFwdDecl)
!6841 = !DIDerivedType(tag: DW_TAG_member, name: "dma_mask", scope: !6539, file: !6540, line: 504, baseType: !5371, size: 64, offset: 4416)
!6842 = !DIDerivedType(tag: DW_TAG_member, name: "coherent_dma_mask", scope: !6539, file: !6540, line: 505, baseType: !331, size: 64, offset: 4480)
!6843 = !DIDerivedType(tag: DW_TAG_member, name: "bus_dma_limit", scope: !6539, file: !6540, line: 510, baseType: !331, size: 64, offset: 4544)
!6844 = !DIDerivedType(tag: DW_TAG_member, name: "dma_range_map", scope: !6539, file: !6540, line: 511, baseType: !6845, size: 64, offset: 4608)
!6845 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6846, size: 64)
!6846 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6847)
!6847 = !DICompositeType(tag: DW_TAG_structure_type, name: "bus_dma_region", file: !6540, line: 511, flags: DIFlagFwdDecl)
!6848 = !DIDerivedType(tag: DW_TAG_member, name: "dma_parms", scope: !6539, file: !6540, line: 513, baseType: !6849, size: 64, offset: 4672)
!6849 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6850, size: 64)
!6850 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_dma_parameters", file: !6540, line: 288, size: 128, elements: !6851)
!6851 = !{!6852, !6853}
!6852 = !DIDerivedType(tag: DW_TAG_member, name: "max_segment_size", scope: !6850, file: !6540, line: 293, baseType: !7, size: 32)
!6853 = !DIDerivedType(tag: DW_TAG_member, name: "segment_boundary_mask", scope: !6850, file: !6540, line: 294, baseType: !312, size: 64, offset: 64)
!6854 = !DIDerivedType(tag: DW_TAG_member, name: "dma_pools", scope: !6539, file: !6540, line: 515, baseType: !284, size: 128, offset: 4736)
!6855 = !DIDerivedType(tag: DW_TAG_member, name: "archdata", scope: !6539, file: !6540, line: 526, baseType: !6856, offset: 4864)
!6856 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_archdata", file: !6857, line: 5, elements: !1587)
!6857 = !DIFile(filename: "./arch/x86/include/asm/device.h", directory: "/home/lizy2001/genbc/linux")
!6858 = !DIDerivedType(tag: DW_TAG_member, name: "of_node", scope: !6539, file: !6540, line: 528, baseType: !6859, size: 64, offset: 4864)
!6859 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6860, size: 64)
!6860 = !DICompositeType(tag: DW_TAG_structure_type, name: "device_node", file: !6861, line: 14, flags: DIFlagFwdDecl)
!6861 = !DIFile(filename: "./include/linux/arch_topology.h", directory: "/home/lizy2001/genbc/linux")
!6862 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !6539, file: !6540, line: 529, baseType: !6863, size: 64, offset: 4928)
!6863 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6864, size: 64)
!6864 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_handle", file: !6865, line: 17, size: 192, elements: !6866)
!6865 = !DIFile(filename: "./include/linux/fwnode.h", directory: "/home/lizy2001/genbc/linux")
!6866 = !{!6867, !6868, !6951}
!6867 = !DIDerivedType(tag: DW_TAG_member, name: "secondary", scope: !6864, file: !6865, line: 18, baseType: !6863, size: 64)
!6868 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !6864, file: !6865, line: 19, baseType: !6869, size: 64, offset: 64)
!6869 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6870, size: 64)
!6870 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6871)
!6871 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_operations", file: !6865, line: 110, size: 1152, elements: !6872)
!6872 = !{!6873, !6877, !6881, !6887, !6893, !6897, !6901, !6906, !6910, !6911, !6915, !6919, !6923, !6934, !6935, !6936, !6937, !6947}
!6873 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !6871, file: !6865, line: 111, baseType: !6874, size: 64)
!6874 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6875, size: 64)
!6875 = !DISubroutineType(types: !6876)
!6876 = !{!6863, !6863}
!6877 = !DIDerivedType(tag: DW_TAG_member, name: "put", scope: !6871, file: !6865, line: 112, baseType: !6878, size: 64, offset: 64)
!6878 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6879, size: 64)
!6879 = !DISubroutineType(types: !6880)
!6880 = !{null, !6863}
!6881 = !DIDerivedType(tag: DW_TAG_member, name: "device_is_available", scope: !6871, file: !6865, line: 113, baseType: !6882, size: 64, offset: 128)
!6882 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6883, size: 64)
!6883 = !DISubroutineType(types: !6884)
!6884 = !{!771, !6885}
!6885 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6886, size: 64)
!6886 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6864)
!6887 = !DIDerivedType(tag: DW_TAG_member, name: "device_get_match_data", scope: !6871, file: !6865, line: 114, baseType: !6888, size: 64, offset: 192)
!6888 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6889, size: 64)
!6889 = !DISubroutineType(types: !6890)
!6890 = !{!3257, !6885, !6891}
!6891 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6892, size: 64)
!6892 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6539)
!6893 = !DIDerivedType(tag: DW_TAG_member, name: "property_present", scope: !6871, file: !6865, line: 116, baseType: !6894, size: 64, offset: 256)
!6894 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6895, size: 64)
!6895 = !DISubroutineType(types: !6896)
!6896 = !{!771, !6885, !292}
!6897 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_int_array", scope: !6871, file: !6865, line: 118, baseType: !6898, size: 64, offset: 320)
!6898 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6899, size: 64)
!6899 = !DISubroutineType(types: !6900)
!6900 = !{!32, !6885, !292, !7, !591, !1039}
!6901 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_string_array", scope: !6871, file: !6865, line: 123, baseType: !6902, size: 64, offset: 384)
!6902 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6903, size: 64)
!6903 = !DISubroutineType(types: !6904)
!6904 = !{!32, !6885, !292, !6905, !1039}
!6905 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !292, size: 64)
!6906 = !DIDerivedType(tag: DW_TAG_member, name: "get_name", scope: !6871, file: !6865, line: 126, baseType: !6907, size: 64, offset: 448)
!6907 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6908, size: 64)
!6908 = !DISubroutineType(types: !6909)
!6909 = !{!292, !6885}
!6910 = !DIDerivedType(tag: DW_TAG_member, name: "get_name_prefix", scope: !6871, file: !6865, line: 127, baseType: !6907, size: 64, offset: 512)
!6911 = !DIDerivedType(tag: DW_TAG_member, name: "get_parent", scope: !6871, file: !6865, line: 128, baseType: !6912, size: 64, offset: 576)
!6912 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6913, size: 64)
!6913 = !DISubroutineType(types: !6914)
!6914 = !{!6863, !6885}
!6915 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_child_node", scope: !6871, file: !6865, line: 130, baseType: !6916, size: 64, offset: 640)
!6916 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6917, size: 64)
!6917 = !DISubroutineType(types: !6918)
!6918 = !{!6863, !6885, !6863}
!6919 = !DIDerivedType(tag: DW_TAG_member, name: "get_named_child_node", scope: !6871, file: !6865, line: 133, baseType: !6920, size: 64, offset: 704)
!6920 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6921, size: 64)
!6921 = !DISubroutineType(types: !6922)
!6922 = !{!6863, !6885, !292}
!6923 = !DIDerivedType(tag: DW_TAG_member, name: "get_reference_args", scope: !6871, file: !6865, line: 135, baseType: !6924, size: 64, offset: 768)
!6924 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6925, size: 64)
!6925 = !DISubroutineType(types: !6926)
!6926 = !{!32, !6885, !292, !292, !7, !7, !6927}
!6927 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6928, size: 64)
!6928 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_reference_args", file: !6865, line: 43, size: 640, elements: !6929)
!6929 = !{!6930, !6931, !6932}
!6930 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !6928, file: !6865, line: 44, baseType: !6863, size: 64)
!6931 = !DIDerivedType(tag: DW_TAG_member, name: "nargs", scope: !6928, file: !6865, line: 45, baseType: !7, size: 32, offset: 64)
!6932 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !6928, file: !6865, line: 46, baseType: !6933, size: 512, offset: 128)
!6933 = !DICompositeType(tag: DW_TAG_array_type, baseType: !331, size: 512, elements: !2433)
!6934 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_next_endpoint", scope: !6871, file: !6865, line: 140, baseType: !6916, size: 64, offset: 832)
!6935 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_remote_endpoint", scope: !6871, file: !6865, line: 143, baseType: !6912, size: 64, offset: 896)
!6936 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_port_parent", scope: !6871, file: !6865, line: 145, baseType: !6874, size: 64, offset: 960)
!6937 = !DIDerivedType(tag: DW_TAG_member, name: "graph_parse_endpoint", scope: !6871, file: !6865, line: 146, baseType: !6938, size: 64, offset: 1024)
!6938 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6939, size: 64)
!6939 = !DISubroutineType(types: !6940)
!6940 = !{!32, !6885, !6941}
!6941 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6942, size: 64)
!6942 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_endpoint", file: !6865, line: 29, size: 128, elements: !6943)
!6943 = !{!6944, !6945, !6946}
!6944 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !6942, file: !6865, line: 30, baseType: !7, size: 32)
!6945 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !6942, file: !6865, line: 31, baseType: !7, size: 32, offset: 32)
!6946 = !DIDerivedType(tag: DW_TAG_member, name: "local_fwnode", scope: !6942, file: !6865, line: 32, baseType: !6885, size: 64, offset: 64)
!6947 = !DIDerivedType(tag: DW_TAG_member, name: "add_links", scope: !6871, file: !6865, line: 148, baseType: !6948, size: 64, offset: 1088)
!6948 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6949, size: 64)
!6949 = !DISubroutineType(types: !6950)
!6950 = !{!32, !6885, !6544}
!6951 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !6864, file: !6865, line: 20, baseType: !6544, size: 64, offset: 128)
!6952 = !DIDerivedType(tag: DW_TAG_member, name: "devt", scope: !6539, file: !6540, line: 534, baseType: !1458, size: 32, offset: 4992)
!6953 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !6539, file: !6540, line: 535, baseType: !987, size: 32, offset: 5024)
!6954 = !DIDerivedType(tag: DW_TAG_member, name: "devres_lock", scope: !6539, file: !6540, line: 537, baseType: !1670, offset: 5056)
!6955 = !DIDerivedType(tag: DW_TAG_member, name: "devres_head", scope: !6539, file: !6540, line: 538, baseType: !284, size: 128, offset: 5056)
!6956 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !6539, file: !6540, line: 540, baseType: !6957, size: 64, offset: 5184)
!6957 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6958, size: 64)
!6958 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "class", file: !6959, line: 54, size: 960, elements: !6960)
!6959 = !DIFile(filename: "./include/linux/device/class.h", directory: "/home/lizy2001/genbc/linux")
!6960 = !{!6961, !6962, !6963, !6964, !6965, !6966, !6967, !6971, !6975, !6976, !6977, !6978, !6982, !6986, !6987}
!6961 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !6958, file: !6959, line: 55, baseType: !292, size: 64)
!6962 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !6958, file: !6959, line: 56, baseType: !980, size: 64, offset: 64)
!6963 = !DIDerivedType(tag: DW_TAG_member, name: "class_groups", scope: !6958, file: !6959, line: 58, baseType: !6156, size: 64, offset: 128)
!6964 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !6958, file: !6959, line: 59, baseType: !6156, size: 64, offset: 192)
!6965 = !DIDerivedType(tag: DW_TAG_member, name: "dev_kobj", scope: !6958, file: !6959, line: 60, baseType: !6124, size: 64, offset: 256)
!6966 = !DIDerivedType(tag: DW_TAG_member, name: "dev_uevent", scope: !6958, file: !6959, line: 62, baseType: !6557, size: 64, offset: 320)
!6967 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !6958, file: !6959, line: 63, baseType: !6968, size: 64, offset: 384)
!6968 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6969, size: 64)
!6969 = !DISubroutineType(types: !6970)
!6970 = !{!1038, !6544, !6564}
!6971 = !DIDerivedType(tag: DW_TAG_member, name: "class_release", scope: !6958, file: !6959, line: 65, baseType: !6972, size: 64, offset: 448)
!6972 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6973, size: 64)
!6973 = !DISubroutineType(types: !6974)
!6974 = !{null, !6957}
!6975 = !DIDerivedType(tag: DW_TAG_member, name: "dev_release", scope: !6958, file: !6959, line: 66, baseType: !6566, size: 64, offset: 512)
!6976 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown_pre", scope: !6958, file: !6959, line: 68, baseType: !6576, size: 64, offset: 576)
!6977 = !DIDerivedType(tag: DW_TAG_member, name: "ns_type", scope: !6958, file: !6959, line: 70, baseType: !6192, size: 64, offset: 640)
!6978 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !6958, file: !6959, line: 71, baseType: !6979, size: 64, offset: 704)
!6979 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6980, size: 64)
!6980 = !DISubroutineType(types: !6981)
!6981 = !{!3257, !6544}
!6982 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !6958, file: !6959, line: 73, baseType: !6983, size: 64, offset: 768)
!6983 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6984, size: 64)
!6984 = !DISubroutineType(types: !6985)
!6985 = !{null, !6544, !2904, !2905}
!6986 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !6958, file: !6959, line: 75, baseType: !6570, size: 64, offset: 832)
!6987 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !6958, file: !6959, line: 77, baseType: !6689, size: 64, offset: 896)
!6988 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !6539, file: !6540, line: 541, baseType: !6156, size: 64, offset: 5248)
!6989 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !6539, file: !6540, line: 543, baseType: !6566, size: 64, offset: 5312)
!6990 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_group", scope: !6539, file: !6540, line: 544, baseType: !6991, size: 64, offset: 5376)
!6991 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6992, size: 64)
!6992 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_group", file: !6540, line: 45, flags: DIFlagFwdDecl)
!6993 = !DIDerivedType(tag: DW_TAG_member, name: "iommu", scope: !6539, file: !6540, line: 545, baseType: !6994, size: 64, offset: 5440)
!6994 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6995, size: 64)
!6995 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_iommu", file: !6540, line: 47, flags: DIFlagFwdDecl)
!6996 = !DIDerivedType(tag: DW_TAG_member, name: "offline_disabled", scope: !6539, file: !6540, line: 547, baseType: !771, size: 1, offset: 5504, flags: DIFlagBitField, extraData: i64 5504)
!6997 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !6539, file: !6540, line: 548, baseType: !771, size: 1, offset: 5505, flags: DIFlagBitField, extraData: i64 5504)
!6998 = !DIDerivedType(tag: DW_TAG_member, name: "of_node_reused", scope: !6539, file: !6540, line: 549, baseType: !771, size: 1, offset: 5506, flags: DIFlagBitField, extraData: i64 5504)
!6999 = !DIDerivedType(tag: DW_TAG_member, name: "state_synced", scope: !6539, file: !6540, line: 550, baseType: !771, size: 1, offset: 5507, flags: DIFlagBitField, extraData: i64 5504)
!7000 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_groups", scope: !264, file: !31, line: 2125, baseType: !7001, size: 256, offset: 13760)
!7001 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6157, size: 256, elements: !2272)
!7002 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_rx_queue_group", scope: !264, file: !31, line: 2126, baseType: !6157, size: 64, offset: 14016)
!7003 = !DIDerivedType(tag: DW_TAG_member, name: "rtnl_link_ops", scope: !264, file: !31, line: 2128, baseType: !7004, size: 64, offset: 14080)
!7004 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7005, size: 64)
!7005 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7006)
!7006 = !DICompositeType(tag: DW_TAG_structure_type, name: "rtnl_link_ops", file: !31, line: 2128, flags: DIFlagFwdDecl)
!7007 = !DIDerivedType(tag: DW_TAG_member, name: "gso_max_size", scope: !264, file: !31, line: 2132, baseType: !7, size: 32, offset: 14144)
!7008 = !DIDerivedType(tag: DW_TAG_member, name: "gso_max_segs", scope: !264, file: !31, line: 2134, baseType: !581, size: 16, offset: 14176)
!7009 = !DIDerivedType(tag: DW_TAG_member, name: "num_tc", scope: !264, file: !31, line: 2139, baseType: !2314, size: 16, offset: 14192)
!7010 = !DIDerivedType(tag: DW_TAG_member, name: "tc_to_txq", scope: !264, file: !31, line: 2140, baseType: !7011, size: 512, offset: 14208)
!7011 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7012, size: 512, elements: !269)
!7012 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netdev_tc_txq", file: !31, line: 793, size: 32, elements: !7013)
!7013 = !{!7014, !7015}
!7014 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !7012, file: !31, line: 794, baseType: !581, size: 16)
!7015 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !7012, file: !31, line: 795, baseType: !581, size: 16, offset: 16)
!7016 = !DIDerivedType(tag: DW_TAG_member, name: "prio_tc_map", scope: !264, file: !31, line: 2141, baseType: !7017, size: 128, offset: 14720)
!7017 = !DICompositeType(tag: DW_TAG_array_type, baseType: !794, size: 128, elements: !269)
!7018 = !DIDerivedType(tag: DW_TAG_member, name: "phydev", scope: !264, file: !31, line: 2149, baseType: !7019, size: 64, offset: 14848)
!7019 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7020, size: 64)
!7020 = !DICompositeType(tag: DW_TAG_structure_type, name: "phy_device", file: !251, line: 536, flags: DIFlagFwdDecl)
!7021 = !DIDerivedType(tag: DW_TAG_member, name: "sfp_bus", scope: !264, file: !31, line: 2150, baseType: !7022, size: 64, offset: 14912)
!7022 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7023, size: 64)
!7023 = !DICompositeType(tag: DW_TAG_structure_type, name: "sfp_bus", file: !31, line: 60, flags: DIFlagFwdDecl)
!7024 = !DIDerivedType(tag: DW_TAG_member, name: "qdisc_tx_busylock", scope: !264, file: !31, line: 2151, baseType: !7025, size: 64, offset: 14976)
!7025 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1585, size: 64)
!7026 = !DIDerivedType(tag: DW_TAG_member, name: "qdisc_running_key", scope: !264, file: !31, line: 2152, baseType: !7025, size: 64, offset: 15040)
!7027 = !DIDerivedType(tag: DW_TAG_member, name: "proto_down", scope: !264, file: !31, line: 2153, baseType: !771, size: 8, offset: 15104)
!7028 = !DIDerivedType(tag: DW_TAG_member, name: "wol_enabled", scope: !264, file: !31, line: 2154, baseType: !7, size: 1, offset: 15112, flags: DIFlagBitField, extraData: i64 15112)
!7029 = !DIDerivedType(tag: DW_TAG_member, name: "net_notifier_list", scope: !264, file: !31, line: 2156, baseType: !284, size: 128, offset: 15168)
!7030 = !DIDerivedType(tag: DW_TAG_member, name: "udp_tunnel_nic_info", scope: !264, file: !31, line: 2162, baseType: !7031, size: 64, offset: 15296)
!7031 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7032, size: 64)
!7032 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7033)
!7033 = !DICompositeType(tag: DW_TAG_structure_type, name: "udp_tunnel_nic_info", file: !31, line: 68, flags: DIFlagFwdDecl)
!7034 = !DIDerivedType(tag: DW_TAG_member, name: "udp_tunnel_nic", scope: !264, file: !31, line: 2163, baseType: !7035, size: 64, offset: 15360)
!7035 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7036, size: 64)
!7036 = !DICompositeType(tag: DW_TAG_structure_type, name: "udp_tunnel_nic", file: !31, line: 69, flags: DIFlagFwdDecl)
!7037 = !DIDerivedType(tag: DW_TAG_member, name: "xdp_state", scope: !264, file: !31, line: 2166, baseType: !7038, size: 384, offset: 15424)
!7038 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7039, size: 384, elements: !1592)
!7039 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_xdp_entity", file: !31, line: 889, size: 128, elements: !7040)
!7040 = !{!7041, !7042}
!7041 = !DIDerivedType(tag: DW_TAG_member, name: "prog", scope: !7039, file: !31, line: 890, baseType: !1088, size: 64)
!7042 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !7039, file: !31, line: 891, baseType: !7043, size: 64, offset: 64)
!7043 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7044, size: 64)
!7044 = !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_xdp_link", file: !31, line: 880, flags: DIFlagFwdDecl)
!7045 = !{!7046, !7047, !7048, !7049, !7050, !7051}
!7046 = !DIEnumerator(name: "NETREG_UNINITIALIZED", value: 0, isUnsigned: true)
!7047 = !DIEnumerator(name: "NETREG_REGISTERED", value: 1, isUnsigned: true)
!7048 = !DIEnumerator(name: "NETREG_UNREGISTERING", value: 2, isUnsigned: true)
!7049 = !DIEnumerator(name: "NETREG_UNREGISTERED", value: 3, isUnsigned: true)
!7050 = !DIEnumerator(name: "NETREG_RELEASED", value: 4, isUnsigned: true)
!7051 = !DIEnumerator(name: "NETREG_DUMMY", value: 5, isUnsigned: true)
!7052 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "csr_regs", file: !7053, line: 18, baseType: !7, size: 32, elements: !7054)
!7053 = !DIFile(filename: "drivers/net/ethernet/marvell/skge.h", directory: "/home/lizy2001/genbc/linux")
!7054 = !{!7055, !7056, !7057, !7058, !7059, !7060, !7061, !7062, !7063, !7064, !7065, !7066, !7067, !7068, !7069, !7070, !7071, !7072, !7073, !7074, !7075, !7076, !7077, !7078, !7079, !7080, !7081, !7082, !7083, !7084, !7085, !7086, !7087, !7088, !7089, !7090, !7091, !7092, !7093, !7094, !7095, !7096, !7097, !7098, !7099, !7100, !7101, !7102, !7103, !7104, !7105, !7106, !7107, !7108, !7109, !7110, !7111, !7112, !7113, !7114, !7115, !7116, !7117, !7118, !7119, !7120, !7121, !7122, !7123, !7124, !7125, !7126, !7127, !7128, !7129, !7130, !7131, !7132, !7133, !7134, !7135, !7136, !7137, !7138, !7139, !7140, !7141, !7142, !7143, !7144, !7145, !7146, !7147, !7148, !7149, !7150, !7151, !7152, !7153, !7154, !7155, !7156, !7157, !7158, !7159, !7160, !7161, !7162}
!7055 = !DIEnumerator(name: "B0_RAP", value: 0, isUnsigned: true)
!7056 = !DIEnumerator(name: "B0_CTST", value: 4, isUnsigned: true)
!7057 = !DIEnumerator(name: "B0_LED", value: 6, isUnsigned: true)
!7058 = !DIEnumerator(name: "B0_POWER_CTRL", value: 7, isUnsigned: true)
!7059 = !DIEnumerator(name: "B0_ISRC", value: 8, isUnsigned: true)
!7060 = !DIEnumerator(name: "B0_IMSK", value: 12, isUnsigned: true)
!7061 = !DIEnumerator(name: "B0_HWE_ISRC", value: 16, isUnsigned: true)
!7062 = !DIEnumerator(name: "B0_HWE_IMSK", value: 20, isUnsigned: true)
!7063 = !DIEnumerator(name: "B0_SP_ISRC", value: 24, isUnsigned: true)
!7064 = !DIEnumerator(name: "B0_XM1_IMSK", value: 32, isUnsigned: true)
!7065 = !DIEnumerator(name: "B0_XM1_ISRC", value: 40, isUnsigned: true)
!7066 = !DIEnumerator(name: "B0_XM1_PHY_ADDR", value: 48, isUnsigned: true)
!7067 = !DIEnumerator(name: "B0_XM1_PHY_DATA", value: 52, isUnsigned: true)
!7068 = !DIEnumerator(name: "B0_XM2_IMSK", value: 64, isUnsigned: true)
!7069 = !DIEnumerator(name: "B0_XM2_ISRC", value: 72, isUnsigned: true)
!7070 = !DIEnumerator(name: "B0_XM2_PHY_ADDR", value: 80, isUnsigned: true)
!7071 = !DIEnumerator(name: "B0_XM2_PHY_DATA", value: 84, isUnsigned: true)
!7072 = !DIEnumerator(name: "B0_R1_CSR", value: 96, isUnsigned: true)
!7073 = !DIEnumerator(name: "B0_R2_CSR", value: 100, isUnsigned: true)
!7074 = !DIEnumerator(name: "B0_XS1_CSR", value: 104, isUnsigned: true)
!7075 = !DIEnumerator(name: "B0_XA1_CSR", value: 108, isUnsigned: true)
!7076 = !DIEnumerator(name: "B0_XS2_CSR", value: 112, isUnsigned: true)
!7077 = !DIEnumerator(name: "B0_XA2_CSR", value: 116, isUnsigned: true)
!7078 = !DIEnumerator(name: "B2_MAC_1", value: 256, isUnsigned: true)
!7079 = !DIEnumerator(name: "B2_MAC_2", value: 264, isUnsigned: true)
!7080 = !DIEnumerator(name: "B2_MAC_3", value: 272, isUnsigned: true)
!7081 = !DIEnumerator(name: "B2_CONN_TYP", value: 280, isUnsigned: true)
!7082 = !DIEnumerator(name: "B2_PMD_TYP", value: 281, isUnsigned: true)
!7083 = !DIEnumerator(name: "B2_MAC_CFG", value: 282, isUnsigned: true)
!7084 = !DIEnumerator(name: "B2_CHIP_ID", value: 283, isUnsigned: true)
!7085 = !DIEnumerator(name: "B2_E_0", value: 284, isUnsigned: true)
!7086 = !DIEnumerator(name: "B2_E_1", value: 285, isUnsigned: true)
!7087 = !DIEnumerator(name: "B2_E_2", value: 286, isUnsigned: true)
!7088 = !DIEnumerator(name: "B2_E_3", value: 287, isUnsigned: true)
!7089 = !DIEnumerator(name: "B2_FAR", value: 288, isUnsigned: true)
!7090 = !DIEnumerator(name: "B2_FDP", value: 292, isUnsigned: true)
!7091 = !DIEnumerator(name: "B2_LD_CTRL", value: 296, isUnsigned: true)
!7092 = !DIEnumerator(name: "B2_LD_TEST", value: 297, isUnsigned: true)
!7093 = !DIEnumerator(name: "B2_TI_INI", value: 304, isUnsigned: true)
!7094 = !DIEnumerator(name: "B2_TI_VAL", value: 308, isUnsigned: true)
!7095 = !DIEnumerator(name: "B2_TI_CTRL", value: 312, isUnsigned: true)
!7096 = !DIEnumerator(name: "B2_TI_TEST", value: 313, isUnsigned: true)
!7097 = !DIEnumerator(name: "B2_IRQM_INI", value: 320, isUnsigned: true)
!7098 = !DIEnumerator(name: "B2_IRQM_VAL", value: 324, isUnsigned: true)
!7099 = !DIEnumerator(name: "B2_IRQM_CTRL", value: 328, isUnsigned: true)
!7100 = !DIEnumerator(name: "B2_IRQM_TEST", value: 329, isUnsigned: true)
!7101 = !DIEnumerator(name: "B2_IRQM_MSK", value: 332, isUnsigned: true)
!7102 = !DIEnumerator(name: "B2_IRQM_HWE_MSK", value: 336, isUnsigned: true)
!7103 = !DIEnumerator(name: "B2_TST_CTRL1", value: 344, isUnsigned: true)
!7104 = !DIEnumerator(name: "B2_TST_CTRL2", value: 345, isUnsigned: true)
!7105 = !DIEnumerator(name: "B2_GP_IO", value: 348, isUnsigned: true)
!7106 = !DIEnumerator(name: "B2_I2C_CTRL", value: 352, isUnsigned: true)
!7107 = !DIEnumerator(name: "B2_I2C_DATA", value: 356, isUnsigned: true)
!7108 = !DIEnumerator(name: "B2_I2C_IRQ", value: 360, isUnsigned: true)
!7109 = !DIEnumerator(name: "B2_I2C_SW", value: 364, isUnsigned: true)
!7110 = !DIEnumerator(name: "B2_BSC_INI", value: 368, isUnsigned: true)
!7111 = !DIEnumerator(name: "B2_BSC_VAL", value: 372, isUnsigned: true)
!7112 = !DIEnumerator(name: "B2_BSC_CTRL", value: 376, isUnsigned: true)
!7113 = !DIEnumerator(name: "B2_BSC_STAT", value: 377, isUnsigned: true)
!7114 = !DIEnumerator(name: "B2_BSC_TST", value: 378, isUnsigned: true)
!7115 = !DIEnumerator(name: "B3_RAM_ADDR", value: 384, isUnsigned: true)
!7116 = !DIEnumerator(name: "B3_RAM_DATA_LO", value: 388, isUnsigned: true)
!7117 = !DIEnumerator(name: "B3_RAM_DATA_HI", value: 392, isUnsigned: true)
!7118 = !DIEnumerator(name: "B3_RI_WTO_R1", value: 400, isUnsigned: true)
!7119 = !DIEnumerator(name: "B3_RI_WTO_XA1", value: 401, isUnsigned: true)
!7120 = !DIEnumerator(name: "B3_RI_WTO_XS1", value: 402, isUnsigned: true)
!7121 = !DIEnumerator(name: "B3_RI_RTO_R1", value: 403, isUnsigned: true)
!7122 = !DIEnumerator(name: "B3_RI_RTO_XA1", value: 404, isUnsigned: true)
!7123 = !DIEnumerator(name: "B3_RI_RTO_XS1", value: 405, isUnsigned: true)
!7124 = !DIEnumerator(name: "B3_RI_WTO_R2", value: 406, isUnsigned: true)
!7125 = !DIEnumerator(name: "B3_RI_WTO_XA2", value: 407, isUnsigned: true)
!7126 = !DIEnumerator(name: "B3_RI_WTO_XS2", value: 408, isUnsigned: true)
!7127 = !DIEnumerator(name: "B3_RI_RTO_R2", value: 409, isUnsigned: true)
!7128 = !DIEnumerator(name: "B3_RI_RTO_XA2", value: 410, isUnsigned: true)
!7129 = !DIEnumerator(name: "B3_RI_RTO_XS2", value: 411, isUnsigned: true)
!7130 = !DIEnumerator(name: "B3_RI_TO_VAL", value: 412, isUnsigned: true)
!7131 = !DIEnumerator(name: "B3_RI_CTRL", value: 416, isUnsigned: true)
!7132 = !DIEnumerator(name: "B3_RI_TEST", value: 418, isUnsigned: true)
!7133 = !DIEnumerator(name: "B3_MA_TOINI_RX1", value: 432, isUnsigned: true)
!7134 = !DIEnumerator(name: "B3_MA_TOINI_RX2", value: 433, isUnsigned: true)
!7135 = !DIEnumerator(name: "B3_MA_TOINI_TX1", value: 434, isUnsigned: true)
!7136 = !DIEnumerator(name: "B3_MA_TOINI_TX2", value: 435, isUnsigned: true)
!7137 = !DIEnumerator(name: "B3_MA_TOVAL_RX1", value: 436, isUnsigned: true)
!7138 = !DIEnumerator(name: "B3_MA_TOVAL_RX2", value: 437, isUnsigned: true)
!7139 = !DIEnumerator(name: "B3_MA_TOVAL_TX1", value: 438, isUnsigned: true)
!7140 = !DIEnumerator(name: "B3_MA_TOVAL_TX2", value: 439, isUnsigned: true)
!7141 = !DIEnumerator(name: "B3_MA_TO_CTRL", value: 440, isUnsigned: true)
!7142 = !DIEnumerator(name: "B3_MA_TO_TEST", value: 442, isUnsigned: true)
!7143 = !DIEnumerator(name: "B3_MA_RCINI_RX1", value: 448, isUnsigned: true)
!7144 = !DIEnumerator(name: "B3_MA_RCINI_RX2", value: 449, isUnsigned: true)
!7145 = !DIEnumerator(name: "B3_MA_RCINI_TX1", value: 450, isUnsigned: true)
!7146 = !DIEnumerator(name: "B3_MA_RCINI_TX2", value: 451, isUnsigned: true)
!7147 = !DIEnumerator(name: "B3_MA_RCVAL_RX1", value: 452, isUnsigned: true)
!7148 = !DIEnumerator(name: "B3_MA_RCVAL_RX2", value: 453, isUnsigned: true)
!7149 = !DIEnumerator(name: "B3_MA_RCVAL_TX1", value: 454, isUnsigned: true)
!7150 = !DIEnumerator(name: "B3_MA_RCVAL_TX2", value: 455, isUnsigned: true)
!7151 = !DIEnumerator(name: "B3_MA_RC_CTRL", value: 456, isUnsigned: true)
!7152 = !DIEnumerator(name: "B3_MA_RC_TEST", value: 458, isUnsigned: true)
!7153 = !DIEnumerator(name: "B3_PA_TOINI_RX1", value: 464, isUnsigned: true)
!7154 = !DIEnumerator(name: "B3_PA_TOINI_RX2", value: 468, isUnsigned: true)
!7155 = !DIEnumerator(name: "B3_PA_TOINI_TX1", value: 472, isUnsigned: true)
!7156 = !DIEnumerator(name: "B3_PA_TOINI_TX2", value: 476, isUnsigned: true)
!7157 = !DIEnumerator(name: "B3_PA_TOVAL_RX1", value: 480, isUnsigned: true)
!7158 = !DIEnumerator(name: "B3_PA_TOVAL_RX2", value: 484, isUnsigned: true)
!7159 = !DIEnumerator(name: "B3_PA_TOVAL_TX1", value: 488, isUnsigned: true)
!7160 = !DIEnumerator(name: "B3_PA_TOVAL_TX2", value: 492, isUnsigned: true)
!7161 = !DIEnumerator(name: "B3_PA_CTRL", value: 496, isUnsigned: true)
!7162 = !DIEnumerator(name: "B3_PA_TEST", value: 498, isUnsigned: true)
!7163 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !7053, line: 132, baseType: !7, size: 32, elements: !7164)
!7164 = !{!7165, !7166, !7167, !7168, !7169, !7170, !7171, !7172, !7173, !7174, !7175, !7176, !7177, !7178, !7179, !7180, !7181, !7182, !7183, !7184, !7185, !7186, !7187, !7188}
!7165 = !DIEnumerator(name: "CS_CLK_RUN_HOT", value: 8192, isUnsigned: true)
!7166 = !DIEnumerator(name: "CS_CLK_RUN_RST", value: 4096, isUnsigned: true)
!7167 = !DIEnumerator(name: "CS_CLK_RUN_ENA", value: 2048, isUnsigned: true)
!7168 = !DIEnumerator(name: "CS_VAUX_AVAIL", value: 1024, isUnsigned: true)
!7169 = !DIEnumerator(name: "CS_BUS_CLOCK", value: 512, isUnsigned: true)
!7170 = !DIEnumerator(name: "CS_BUS_SLOT_SZ", value: 256, isUnsigned: true)
!7171 = !DIEnumerator(name: "CS_ST_SW_IRQ", value: 128, isUnsigned: true)
!7172 = !DIEnumerator(name: "CS_CL_SW_IRQ", value: 64, isUnsigned: true)
!7173 = !DIEnumerator(name: "CS_STOP_DONE", value: 32, isUnsigned: true)
!7174 = !DIEnumerator(name: "CS_STOP_MAST", value: 16, isUnsigned: true)
!7175 = !DIEnumerator(name: "CS_MRST_CLR", value: 8, isUnsigned: true)
!7176 = !DIEnumerator(name: "CS_MRST_SET", value: 4, isUnsigned: true)
!7177 = !DIEnumerator(name: "CS_RST_CLR", value: 2, isUnsigned: true)
!7178 = !DIEnumerator(name: "CS_RST_SET", value: 1, isUnsigned: true)
!7179 = !DIEnumerator(name: "LED_STAT_ON", value: 2, isUnsigned: true)
!7180 = !DIEnumerator(name: "LED_STAT_OFF", value: 1, isUnsigned: true)
!7181 = !DIEnumerator(name: "PC_VAUX_ENA", value: 128, isUnsigned: true)
!7182 = !DIEnumerator(name: "PC_VAUX_DIS", value: 64, isUnsigned: true)
!7183 = !DIEnumerator(name: "PC_VCC_ENA", value: 32, isUnsigned: true)
!7184 = !DIEnumerator(name: "PC_VCC_DIS", value: 16, isUnsigned: true)
!7185 = !DIEnumerator(name: "PC_VAUX_ON", value: 8, isUnsigned: true)
!7186 = !DIEnumerator(name: "PC_VAUX_OFF", value: 4, isUnsigned: true)
!7187 = !DIEnumerator(name: "PC_VCC_ON", value: 2, isUnsigned: true)
!7188 = !DIEnumerator(name: "PC_VCC_OFF", value: 1, isUnsigned: true)
!7189 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kmalloc_cache_type", file: !7190, line: 305, baseType: !7, size: 32, elements: !7191)
!7190 = !DIFile(filename: "./include/linux/slab.h", directory: "/home/lizy2001/genbc/linux")
!7191 = !{!7192, !7193, !7194, !7195}
!7192 = !DIEnumerator(name: "KMALLOC_NORMAL", value: 0, isUnsigned: true)
!7193 = !DIEnumerator(name: "KMALLOC_RECLAIM", value: 1, isUnsigned: true)
!7194 = !DIEnumerator(name: "KMALLOC_DMA", value: 2, isUnsigned: true)
!7195 = !DIEnumerator(name: "NR_KMALLOC_TYPES", value: 3, isUnsigned: true)
!7196 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "pause_control", file: !7053, line: 2426, baseType: !7, size: 32, elements: !7197)
!7197 = !{!7198, !7199, !7200, !7201}
!7198 = !DIEnumerator(name: "FLOW_MODE_NONE", value: 1, isUnsigned: true)
!7199 = !DIEnumerator(name: "FLOW_MODE_LOC_SEND", value: 2, isUnsigned: true)
!7200 = !DIEnumerator(name: "FLOW_MODE_SYMMETRIC", value: 3, isUnsigned: true)
!7201 = !DIEnumerator(name: "FLOW_MODE_SYM_OR_REM", value: 4, isUnsigned: true)
!7202 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "pause_status", file: !7053, line: 2435, baseType: !7, size: 32, elements: !7203)
!7203 = !{!7204, !7205, !7206, !7207, !7208}
!7204 = !DIEnumerator(name: "FLOW_STAT_INDETERMINATED", value: 0, isUnsigned: true)
!7205 = !DIEnumerator(name: "FLOW_STAT_NONE", value: 1, isUnsigned: true)
!7206 = !DIEnumerator(name: "FLOW_STAT_REM_SEND", value: 2, isUnsigned: true)
!7207 = !DIEnumerator(name: "FLOW_STAT_LOC_SEND", value: 3, isUnsigned: true)
!7208 = !DIEnumerator(name: "FLOW_STAT_SYMMETRIC", value: 4, isUnsigned: true)
!7209 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !7053, line: 514, baseType: !7, size: 32, elements: !7210)
!7210 = !{!7211, !7212, !7213, !7214, !7215, !7216}
!7211 = !DIEnumerator(name: "SK_PHY_XMAC", value: 0, isUnsigned: true)
!7212 = !DIEnumerator(name: "SK_PHY_BCOM", value: 1, isUnsigned: true)
!7213 = !DIEnumerator(name: "SK_PHY_LONE", value: 2, isUnsigned: true)
!7214 = !DIEnumerator(name: "SK_PHY_NAT", value: 3, isUnsigned: true)
!7215 = !DIEnumerator(name: "SK_PHY_MARV_COPPER", value: 4, isUnsigned: true)
!7216 = !DIEnumerator(name: "SK_PHY_MARV_FIBER", value: 5, isUnsigned: true)
!7217 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !7053, line: 165, baseType: !998, size: 64, elements: !7218)
!7218 = !{!7219, !7220, !7221, !7222, !7223, !7224, !7225, !7226, !7227, !7228, !7229, !7230, !7231, !7232, !7233, !7234, !7235, !7236, !7237, !7238, !7239, !7240, !7241, !7242, !7243, !7244, !7245, !7246, !7247, !7248, !7249, !7250, !7251, !7252, !7253, !7254}
!7219 = !DIEnumerator(name: "IS_ALL_MSK", value: 3221225471)
!7220 = !DIEnumerator(name: "IS_HW_ERR", value: -2147483648)
!7221 = !DIEnumerator(name: "IS_PA_TO_RX1", value: 536870912)
!7222 = !DIEnumerator(name: "IS_PA_TO_RX2", value: 268435456)
!7223 = !DIEnumerator(name: "IS_PA_TO_TX1", value: 134217728)
!7224 = !DIEnumerator(name: "IS_PA_TO_TX2", value: 67108864)
!7225 = !DIEnumerator(name: "IS_I2C_READY", value: 33554432)
!7226 = !DIEnumerator(name: "IS_IRQ_SW", value: 16777216)
!7227 = !DIEnumerator(name: "IS_EXT_REG", value: 8388608)
!7228 = !DIEnumerator(name: "IS_TIMINT", value: 4194304)
!7229 = !DIEnumerator(name: "IS_MAC1", value: 2097152)
!7230 = !DIEnumerator(name: "IS_LNK_SYNC_M1", value: 1048576)
!7231 = !DIEnumerator(name: "IS_MAC2", value: 524288)
!7232 = !DIEnumerator(name: "IS_LNK_SYNC_M2", value: 262144)
!7233 = !DIEnumerator(name: "IS_R1_B", value: 131072)
!7234 = !DIEnumerator(name: "IS_R1_F", value: 65536)
!7235 = !DIEnumerator(name: "IS_R1_C", value: 32768)
!7236 = !DIEnumerator(name: "IS_R2_B", value: 16384)
!7237 = !DIEnumerator(name: "IS_R2_F", value: 8192)
!7238 = !DIEnumerator(name: "IS_R2_C", value: 4096)
!7239 = !DIEnumerator(name: "IS_XS1_B", value: 2048)
!7240 = !DIEnumerator(name: "IS_XS1_F", value: 1024)
!7241 = !DIEnumerator(name: "IS_XS1_C", value: 512)
!7242 = !DIEnumerator(name: "IS_XA1_B", value: 256)
!7243 = !DIEnumerator(name: "IS_XA1_F", value: 128)
!7244 = !DIEnumerator(name: "IS_XA1_C", value: 64)
!7245 = !DIEnumerator(name: "IS_XS2_B", value: 32)
!7246 = !DIEnumerator(name: "IS_XS2_F", value: 16)
!7247 = !DIEnumerator(name: "IS_XS2_C", value: 8)
!7248 = !DIEnumerator(name: "IS_XA2_B", value: 4)
!7249 = !DIEnumerator(name: "IS_XA2_F", value: 2)
!7250 = !DIEnumerator(name: "IS_XA2_C", value: 1)
!7251 = !DIEnumerator(name: "IS_TO_PORT1", value: 671088640)
!7252 = !DIEnumerator(name: "IS_TO_PORT2", value: 335544320)
!7253 = !DIEnumerator(name: "IS_PORT_1", value: 673251456)
!7254 = !DIEnumerator(name: "IS_PORT_2", value: 336076802)
!7255 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "netdev_state_t", file: !31, line: 288, baseType: !7, size: 32, elements: !7256)
!7256 = !{!7257, !7258, !7259, !7260, !7261, !7262}
!7257 = !DIEnumerator(name: "__LINK_STATE_START", value: 0, isUnsigned: true)
!7258 = !DIEnumerator(name: "__LINK_STATE_PRESENT", value: 1, isUnsigned: true)
!7259 = !DIEnumerator(name: "__LINK_STATE_NOCARRIER", value: 2, isUnsigned: true)
!7260 = !DIEnumerator(name: "__LINK_STATE_LINKWATCH_PENDING", value: 3, isUnsigned: true)
!7261 = !DIEnumerator(name: "__LINK_STATE_DORMANT", value: 4, isUnsigned: true)
!7262 = !DIEnumerator(name: "__LINK_STATE_TESTING", value: 5, isUnsigned: true)
!7263 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !7264, line: 10, baseType: !7, size: 32, elements: !7265)
!7264 = !DIFile(filename: "./include/linux/stddef.h", directory: "/home/lizy2001/genbc/linux")
!7265 = !{!7266, !7267}
!7266 = !DIEnumerator(name: "false", value: 0, isUnsigned: true)
!7267 = !DIEnumerator(name: "true", value: 1, isUnsigned: true)
!7268 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !7053, line: 975, baseType: !7, size: 32, elements: !7269)
!7269 = !{!7270, !7271, !7272, !7273, !7274, !7275, !7276, !7277, !7278, !7279, !7280, !7281, !7282, !7283, !7284, !7285, !7286, !7287, !7288, !7289, !7290, !7291, !7292, !7293, !7294, !7295, !7296, !7297, !7298, !7299, !7300, !7301}
!7270 = !DIEnumerator(name: "PHY_MARV_CTRL", value: 0, isUnsigned: true)
!7271 = !DIEnumerator(name: "PHY_MARV_STAT", value: 1, isUnsigned: true)
!7272 = !DIEnumerator(name: "PHY_MARV_ID0", value: 2, isUnsigned: true)
!7273 = !DIEnumerator(name: "PHY_MARV_ID1", value: 3, isUnsigned: true)
!7274 = !DIEnumerator(name: "PHY_MARV_AUNE_ADV", value: 4, isUnsigned: true)
!7275 = !DIEnumerator(name: "PHY_MARV_AUNE_LP", value: 5, isUnsigned: true)
!7276 = !DIEnumerator(name: "PHY_MARV_AUNE_EXP", value: 6, isUnsigned: true)
!7277 = !DIEnumerator(name: "PHY_MARV_NEPG", value: 7, isUnsigned: true)
!7278 = !DIEnumerator(name: "PHY_MARV_NEPG_LP", value: 8, isUnsigned: true)
!7279 = !DIEnumerator(name: "PHY_MARV_1000T_CTRL", value: 9, isUnsigned: true)
!7280 = !DIEnumerator(name: "PHY_MARV_1000T_STAT", value: 10, isUnsigned: true)
!7281 = !DIEnumerator(name: "PHY_MARV_EXT_STAT", value: 15, isUnsigned: true)
!7282 = !DIEnumerator(name: "PHY_MARV_PHY_CTRL", value: 16, isUnsigned: true)
!7283 = !DIEnumerator(name: "PHY_MARV_PHY_STAT", value: 17, isUnsigned: true)
!7284 = !DIEnumerator(name: "PHY_MARV_INT_MASK", value: 18, isUnsigned: true)
!7285 = !DIEnumerator(name: "PHY_MARV_INT_STAT", value: 19, isUnsigned: true)
!7286 = !DIEnumerator(name: "PHY_MARV_EXT_CTRL", value: 20, isUnsigned: true)
!7287 = !DIEnumerator(name: "PHY_MARV_RXE_CNT", value: 21, isUnsigned: true)
!7288 = !DIEnumerator(name: "PHY_MARV_EXT_ADR", value: 22, isUnsigned: true)
!7289 = !DIEnumerator(name: "PHY_MARV_PORT_IRQ", value: 23, isUnsigned: true)
!7290 = !DIEnumerator(name: "PHY_MARV_LED_CTRL", value: 24, isUnsigned: true)
!7291 = !DIEnumerator(name: "PHY_MARV_LED_OVER", value: 25, isUnsigned: true)
!7292 = !DIEnumerator(name: "PHY_MARV_EXT_CTRL_2", value: 26, isUnsigned: true)
!7293 = !DIEnumerator(name: "PHY_MARV_EXT_P_STAT", value: 27, isUnsigned: true)
!7294 = !DIEnumerator(name: "PHY_MARV_CABLE_DIAG", value: 28, isUnsigned: true)
!7295 = !DIEnumerator(name: "PHY_MARV_PAGE_ADDR", value: 29, isUnsigned: true)
!7296 = !DIEnumerator(name: "PHY_MARV_PAGE_DATA", value: 30, isUnsigned: true)
!7297 = !DIEnumerator(name: "PHY_MARV_FE_LED_PAR", value: 22, isUnsigned: true)
!7298 = !DIEnumerator(name: "PHY_MARV_FE_LED_SER", value: 23, isUnsigned: true)
!7299 = !DIEnumerator(name: "PHY_MARV_FE_VCT_TX", value: 26, isUnsigned: true)
!7300 = !DIEnumerator(name: "PHY_MARV_FE_VCT_RX", value: 27, isUnsigned: true)
!7301 = !DIEnumerator(name: "PHY_MARV_FE_SPEC_2", value: 28, isUnsigned: true)
!7302 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !31, line: 4102, baseType: !7, size: 32, elements: !7303)
!7303 = !{!7304, !7305, !7306, !7307, !7308, !7309, !7310, !7311, !7312, !7313, !7314, !7315, !7316, !7317, !7318, !7319}
!7304 = !DIEnumerator(name: "NETIF_MSG_DRV_BIT", value: 0, isUnsigned: true)
!7305 = !DIEnumerator(name: "NETIF_MSG_PROBE_BIT", value: 1, isUnsigned: true)
!7306 = !DIEnumerator(name: "NETIF_MSG_LINK_BIT", value: 2, isUnsigned: true)
!7307 = !DIEnumerator(name: "NETIF_MSG_TIMER_BIT", value: 3, isUnsigned: true)
!7308 = !DIEnumerator(name: "NETIF_MSG_IFDOWN_BIT", value: 4, isUnsigned: true)
!7309 = !DIEnumerator(name: "NETIF_MSG_IFUP_BIT", value: 5, isUnsigned: true)
!7310 = !DIEnumerator(name: "NETIF_MSG_RX_ERR_BIT", value: 6, isUnsigned: true)
!7311 = !DIEnumerator(name: "NETIF_MSG_TX_ERR_BIT", value: 7, isUnsigned: true)
!7312 = !DIEnumerator(name: "NETIF_MSG_TX_QUEUED_BIT", value: 8, isUnsigned: true)
!7313 = !DIEnumerator(name: "NETIF_MSG_INTR_BIT", value: 9, isUnsigned: true)
!7314 = !DIEnumerator(name: "NETIF_MSG_TX_DONE_BIT", value: 10, isUnsigned: true)
!7315 = !DIEnumerator(name: "NETIF_MSG_RX_STATUS_BIT", value: 11, isUnsigned: true)
!7316 = !DIEnumerator(name: "NETIF_MSG_PKTDATA_BIT", value: 12, isUnsigned: true)
!7317 = !DIEnumerator(name: "NETIF_MSG_HW_BIT", value: 13, isUnsigned: true)
!7318 = !DIEnumerator(name: "NETIF_MSG_WOL_BIT", value: 14, isUnsigned: true)
!7319 = !DIEnumerator(name: "NETIF_MSG_CLASS_COUNT", value: 15, isUnsigned: true)
!7320 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !7053, line: 1401, baseType: !7, size: 32, elements: !7321)
!7321 = !{!7322, !7323, !7324, !7325, !7326, !7327, !7328, !7329, !7330, !7331, !7332, !7333, !7334, !7335, !7336, !7337, !7338}
!7322 = !DIEnumerator(name: "PHY_M_IS_AN_ERROR", value: 32768, isUnsigned: true)
!7323 = !DIEnumerator(name: "PHY_M_IS_LSP_CHANGE", value: 16384, isUnsigned: true)
!7324 = !DIEnumerator(name: "PHY_M_IS_DUP_CHANGE", value: 8192, isUnsigned: true)
!7325 = !DIEnumerator(name: "PHY_M_IS_AN_PR", value: 4096, isUnsigned: true)
!7326 = !DIEnumerator(name: "PHY_M_IS_AN_COMPL", value: 2048, isUnsigned: true)
!7327 = !DIEnumerator(name: "PHY_M_IS_LST_CHANGE", value: 1024, isUnsigned: true)
!7328 = !DIEnumerator(name: "PHY_M_IS_SYMB_ERROR", value: 512, isUnsigned: true)
!7329 = !DIEnumerator(name: "PHY_M_IS_FALSE_CARR", value: 256, isUnsigned: true)
!7330 = !DIEnumerator(name: "PHY_M_IS_FIFO_ERROR", value: 128, isUnsigned: true)
!7331 = !DIEnumerator(name: "PHY_M_IS_MDI_CHANGE", value: 64, isUnsigned: true)
!7332 = !DIEnumerator(name: "PHY_M_IS_DOWNSH_DET", value: 32, isUnsigned: true)
!7333 = !DIEnumerator(name: "PHY_M_IS_END_CHANGE", value: 16, isUnsigned: true)
!7334 = !DIEnumerator(name: "PHY_M_IS_DTE_CHANGE", value: 4, isUnsigned: true)
!7335 = !DIEnumerator(name: "PHY_M_IS_POL_CHANGE", value: 2, isUnsigned: true)
!7336 = !DIEnumerator(name: "PHY_M_IS_JABBER", value: 1, isUnsigned: true)
!7337 = !DIEnumerator(name: "PHY_M_IS_DEF_MSK", value: 50304, isUnsigned: true)
!7338 = !DIEnumerator(name: "PHY_M_IS_AN_MSK", value: 34816, isUnsigned: true)
!7339 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !7053, line: 1290, baseType: !7, size: 32, elements: !7340)
!7340 = !{!7341, !7342, !7343, !7344, !7345, !7346, !7347, !7348, !7349, !7350, !7351}
!7341 = !DIEnumerator(name: "PHY_M_AN_NXT_PG", value: 32768, isUnsigned: true)
!7342 = !DIEnumerator(name: "PHY_M_AN_ACK", value: 16384, isUnsigned: true)
!7343 = !DIEnumerator(name: "PHY_M_AN_RF", value: 8192, isUnsigned: true)
!7344 = !DIEnumerator(name: "PHY_M_AN_ASP", value: 2048, isUnsigned: true)
!7345 = !DIEnumerator(name: "PHY_M_AN_PC", value: 1024, isUnsigned: true)
!7346 = !DIEnumerator(name: "PHY_M_AN_100_T4", value: 512, isUnsigned: true)
!7347 = !DIEnumerator(name: "PHY_M_AN_100_FD", value: 256, isUnsigned: true)
!7348 = !DIEnumerator(name: "PHY_M_AN_100_HD", value: 128, isUnsigned: true)
!7349 = !DIEnumerator(name: "PHY_M_AN_10_FD", value: 64, isUnsigned: true)
!7350 = !DIEnumerator(name: "PHY_M_AN_10_HD", value: 32, isUnsigned: true)
!7351 = !DIEnumerator(name: "PHY_M_AN_SEL_MSK", value: 496, isUnsigned: true)
!7352 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !7053, line: 1143, baseType: !7, size: 32, elements: !7353)
!7353 = !{!7354, !7355, !7356, !7357, !7358, !7359, !7360}
!7354 = !DIEnumerator(name: "PHY_B_1000S_MSF", value: 32768, isUnsigned: true)
!7355 = !DIEnumerator(name: "PHY_B_1000S_MSR", value: 16384, isUnsigned: true)
!7356 = !DIEnumerator(name: "PHY_B_1000S_LRS", value: 8192, isUnsigned: true)
!7357 = !DIEnumerator(name: "PHY_B_1000S_RRS", value: 4096, isUnsigned: true)
!7358 = !DIEnumerator(name: "PHY_B_1000S_LP_FD", value: 2048, isUnsigned: true)
!7359 = !DIEnumerator(name: "PHY_B_1000S_LP_HD", value: 1024, isUnsigned: true)
!7360 = !DIEnumerator(name: "PHY_B_1000S_IEC", value: 255, isUnsigned: true)
!7361 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !7053, line: 1374, baseType: !7, size: 32, elements: !7362)
!7362 = !{!7363, !7364, !7365, !7366, !7367, !7368, !7369, !7370, !7371, !7372, !7373, !7374, !7375, !7376, !7377, !7378}
!7363 = !DIEnumerator(name: "PHY_M_PS_SPEED_MSK", value: 49152, isUnsigned: true)
!7364 = !DIEnumerator(name: "PHY_M_PS_SPEED_1000", value: 32768, isUnsigned: true)
!7365 = !DIEnumerator(name: "PHY_M_PS_SPEED_100", value: 16384, isUnsigned: true)
!7366 = !DIEnumerator(name: "PHY_M_PS_SPEED_10", value: 0, isUnsigned: true)
!7367 = !DIEnumerator(name: "PHY_M_PS_FULL_DUP", value: 8192, isUnsigned: true)
!7368 = !DIEnumerator(name: "PHY_M_PS_PAGE_REC", value: 4096, isUnsigned: true)
!7369 = !DIEnumerator(name: "PHY_M_PS_SPDUP_RES", value: 2048, isUnsigned: true)
!7370 = !DIEnumerator(name: "PHY_M_PS_LINK_UP", value: 1024, isUnsigned: true)
!7371 = !DIEnumerator(name: "PHY_M_PS_CABLE_MSK", value: 896, isUnsigned: true)
!7372 = !DIEnumerator(name: "PHY_M_PS_MDI_X_STAT", value: 64, isUnsigned: true)
!7373 = !DIEnumerator(name: "PHY_M_PS_DOWNS_STAT", value: 32, isUnsigned: true)
!7374 = !DIEnumerator(name: "PHY_M_PS_ENDET_STAT", value: 16, isUnsigned: true)
!7375 = !DIEnumerator(name: "PHY_M_PS_TX_P_EN", value: 8, isUnsigned: true)
!7376 = !DIEnumerator(name: "PHY_M_PS_RX_P_EN", value: 4, isUnsigned: true)
!7377 = !DIEnumerator(name: "PHY_M_PS_POL_REV", value: 2, isUnsigned: true)
!7378 = !DIEnumerator(name: "PHY_M_PS_JABBER", value: 1, isUnsigned: true)
!7379 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !7053, line: 849, baseType: !7, size: 32, elements: !7380)
!7380 = !{!7381, !7382, !7383, !7384, !7385, !7386, !7387, !7388, !7389, !7390, !7391, !7392, !7393, !7394, !7395}
!7381 = !DIEnumerator(name: "GMAC_CTRL", value: 3840, isUnsigned: true)
!7382 = !DIEnumerator(name: "GPHY_CTRL", value: 3844, isUnsigned: true)
!7383 = !DIEnumerator(name: "GMAC_IRQ_SRC", value: 3848, isUnsigned: true)
!7384 = !DIEnumerator(name: "GMAC_IRQ_MSK", value: 3852, isUnsigned: true)
!7385 = !DIEnumerator(name: "GMAC_LINK_CTRL", value: 3856, isUnsigned: true)
!7386 = !DIEnumerator(name: "WOL_REG_OFFS", value: 32, isUnsigned: true)
!7387 = !DIEnumerator(name: "WOL_CTRL_STAT", value: 3872, isUnsigned: true)
!7388 = !DIEnumerator(name: "WOL_MATCH_CTL", value: 3874, isUnsigned: true)
!7389 = !DIEnumerator(name: "WOL_MATCH_RES", value: 3875, isUnsigned: true)
!7390 = !DIEnumerator(name: "WOL_MAC_ADDR", value: 3876, isUnsigned: true)
!7391 = !DIEnumerator(name: "WOL_PATT_RPTR", value: 3884, isUnsigned: true)
!7392 = !DIEnumerator(name: "WOL_PATT_LEN_LO", value: 3888, isUnsigned: true)
!7393 = !DIEnumerator(name: "WOL_PATT_LEN_HI", value: 3892, isUnsigned: true)
!7394 = !DIEnumerator(name: "WOL_PATT_CNT_0", value: 3896, isUnsigned: true)
!7395 = !DIEnumerator(name: "WOL_PATT_CNT_4", value: 3900, isUnsigned: true)
!7396 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !7053, line: 1891, baseType: !7, size: 32, elements: !7397)
!7397 = !{!7398, !7399, !7400, !7401, !7402, !7403, !7404, !7405}
!7398 = !DIEnumerator(name: "GMC_H_BURST_ON", value: 128, isUnsigned: true)
!7399 = !DIEnumerator(name: "GMC_H_BURST_OFF", value: 64, isUnsigned: true)
!7400 = !DIEnumerator(name: "GMC_F_LOOPB_ON", value: 32, isUnsigned: true)
!7401 = !DIEnumerator(name: "GMC_F_LOOPB_OFF", value: 16, isUnsigned: true)
!7402 = !DIEnumerator(name: "GMC_PAUSE_ON", value: 8, isUnsigned: true)
!7403 = !DIEnumerator(name: "GMC_PAUSE_OFF", value: 4, isUnsigned: true)
!7404 = !DIEnumerator(name: "GMC_RST_CLR", value: 2, isUnsigned: true)
!7405 = !DIEnumerator(name: "GMC_RST_SET", value: 1, isUnsigned: true)
!7406 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !7053, line: 1618, baseType: !7, size: 32, elements: !7407)
!7407 = !{!7408, !7409, !7410, !7411, !7412, !7413, !7414, !7415, !7416, !7417, !7418, !7419, !7420, !7421, !7422, !7423, !7424, !7425, !7426, !7427, !7428, !7429, !7430, !7431, !7432, !7433}
!7408 = !DIEnumerator(name: "GM_GP_STAT", value: 0, isUnsigned: true)
!7409 = !DIEnumerator(name: "GM_GP_CTRL", value: 4, isUnsigned: true)
!7410 = !DIEnumerator(name: "GM_TX_CTRL", value: 8, isUnsigned: true)
!7411 = !DIEnumerator(name: "GM_RX_CTRL", value: 12, isUnsigned: true)
!7412 = !DIEnumerator(name: "GM_TX_FLOW_CTRL", value: 16, isUnsigned: true)
!7413 = !DIEnumerator(name: "GM_TX_PARAM", value: 20, isUnsigned: true)
!7414 = !DIEnumerator(name: "GM_SERIAL_MODE", value: 24, isUnsigned: true)
!7415 = !DIEnumerator(name: "GM_SRC_ADDR_1L", value: 28, isUnsigned: true)
!7416 = !DIEnumerator(name: "GM_SRC_ADDR_1M", value: 32, isUnsigned: true)
!7417 = !DIEnumerator(name: "GM_SRC_ADDR_1H", value: 36, isUnsigned: true)
!7418 = !DIEnumerator(name: "GM_SRC_ADDR_2L", value: 40, isUnsigned: true)
!7419 = !DIEnumerator(name: "GM_SRC_ADDR_2M", value: 44, isUnsigned: true)
!7420 = !DIEnumerator(name: "GM_SRC_ADDR_2H", value: 48, isUnsigned: true)
!7421 = !DIEnumerator(name: "GM_MC_ADDR_H1", value: 52, isUnsigned: true)
!7422 = !DIEnumerator(name: "GM_MC_ADDR_H2", value: 56, isUnsigned: true)
!7423 = !DIEnumerator(name: "GM_MC_ADDR_H3", value: 60, isUnsigned: true)
!7424 = !DIEnumerator(name: "GM_MC_ADDR_H4", value: 64, isUnsigned: true)
!7425 = !DIEnumerator(name: "GM_TX_IRQ_SRC", value: 68, isUnsigned: true)
!7426 = !DIEnumerator(name: "GM_RX_IRQ_SRC", value: 72, isUnsigned: true)
!7427 = !DIEnumerator(name: "GM_TR_IRQ_SRC", value: 76, isUnsigned: true)
!7428 = !DIEnumerator(name: "GM_TX_IRQ_MSK", value: 80, isUnsigned: true)
!7429 = !DIEnumerator(name: "GM_RX_IRQ_MSK", value: 84, isUnsigned: true)
!7430 = !DIEnumerator(name: "GM_TR_IRQ_MSK", value: 88, isUnsigned: true)
!7431 = !DIEnumerator(name: "GM_SMI_CTRL", value: 128, isUnsigned: true)
!7432 = !DIEnumerator(name: "GM_SMI_DATA", value: 132, isUnsigned: true)
!7433 = !DIEnumerator(name: "GM_PHY_ADDR", value: 136, isUnsigned: true)
!7434 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !7053, line: 1803, baseType: !7, size: 32, elements: !7435)
!7435 = !{!7436, !7437, !7438, !7439, !7440}
!7436 = !DIEnumerator(name: "GM_SMI_CT_PHY_A_MSK", value: 63488, isUnsigned: true)
!7437 = !DIEnumerator(name: "GM_SMI_CT_REG_A_MSK", value: 1984, isUnsigned: true)
!7438 = !DIEnumerator(name: "GM_SMI_CT_OP_RD", value: 32, isUnsigned: true)
!7439 = !DIEnumerator(name: "GM_SMI_CT_RD_VAL", value: 16, isUnsigned: true)
!7440 = !DIEnumerator(name: "GM_SMI_CT_BUSY", value: 8, isUnsigned: true)
!7441 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !7053, line: 884, baseType: !7, size: 32, elements: !7442)
!7442 = !{!7443, !7444, !7445, !7446}
!7443 = !DIEnumerator(name: "BASE_XMAC_1", value: 8192, isUnsigned: true)
!7444 = !DIEnumerator(name: "BASE_GMAC_1", value: 10240, isUnsigned: true)
!7445 = !DIEnumerator(name: "BASE_XMAC_2", value: 12288, isUnsigned: true)
!7446 = !DIEnumerator(name: "BASE_GMAC_2", value: 14336, isUnsigned: true)
!7447 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !7053, line: 1955, baseType: !7, size: 32, elements: !7448)
!7448 = !{!7449, !7450, !7451, !7452, !7453, !7454, !7455, !7456, !7457, !7458, !7459, !7460, !7461, !7462, !7463, !7464, !7465, !7466, !7467, !7468, !7469, !7470, !7471, !7472}
!7449 = !DIEnumerator(name: "GM_IS_TX_CO_OV", value: 32, isUnsigned: true)
!7450 = !DIEnumerator(name: "GM_IS_RX_CO_OV", value: 16, isUnsigned: true)
!7451 = !DIEnumerator(name: "GM_IS_TX_FF_UR", value: 8, isUnsigned: true)
!7452 = !DIEnumerator(name: "GM_IS_TX_COMPL", value: 4, isUnsigned: true)
!7453 = !DIEnumerator(name: "GM_IS_RX_FF_OR", value: 2, isUnsigned: true)
!7454 = !DIEnumerator(name: "GM_IS_RX_COMPL", value: 1, isUnsigned: true)
!7455 = !DIEnumerator(name: "GMLC_RST_CLR", value: 2, isUnsigned: true)
!7456 = !DIEnumerator(name: "GMLC_RST_SET", value: 1, isUnsigned: true)
!7457 = !DIEnumerator(name: "WOL_CTL_LINK_CHG_OCC", value: 32768, isUnsigned: true)
!7458 = !DIEnumerator(name: "WOL_CTL_MAGIC_PKT_OCC", value: 16384, isUnsigned: true)
!7459 = !DIEnumerator(name: "WOL_CTL_PATTERN_OCC", value: 8192, isUnsigned: true)
!7460 = !DIEnumerator(name: "WOL_CTL_CLEAR_RESULT", value: 4096, isUnsigned: true)
!7461 = !DIEnumerator(name: "WOL_CTL_ENA_PME_ON_LINK_CHG", value: 2048, isUnsigned: true)
!7462 = !DIEnumerator(name: "WOL_CTL_DIS_PME_ON_LINK_CHG", value: 1024, isUnsigned: true)
!7463 = !DIEnumerator(name: "WOL_CTL_ENA_PME_ON_MAGIC_PKT", value: 512, isUnsigned: true)
!7464 = !DIEnumerator(name: "WOL_CTL_DIS_PME_ON_MAGIC_PKT", value: 256, isUnsigned: true)
!7465 = !DIEnumerator(name: "WOL_CTL_ENA_PME_ON_PATTERN", value: 128, isUnsigned: true)
!7466 = !DIEnumerator(name: "WOL_CTL_DIS_PME_ON_PATTERN", value: 64, isUnsigned: true)
!7467 = !DIEnumerator(name: "WOL_CTL_ENA_LINK_CHG_UNIT", value: 32, isUnsigned: true)
!7468 = !DIEnumerator(name: "WOL_CTL_DIS_LINK_CHG_UNIT", value: 16, isUnsigned: true)
!7469 = !DIEnumerator(name: "WOL_CTL_ENA_MAGIC_PKT_UNIT", value: 8, isUnsigned: true)
!7470 = !DIEnumerator(name: "WOL_CTL_DIS_MAGIC_PKT_UNIT", value: 4, isUnsigned: true)
!7471 = !DIEnumerator(name: "WOL_CTL_ENA_PATTERN_UNIT", value: 2, isUnsigned: true)
!7472 = !DIEnumerator(name: "WOL_CTL_DIS_PATTERN_UNIT", value: 1, isUnsigned: true)
!7473 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !7053, line: 1731, baseType: !7, size: 32, elements: !7474)
!7474 = !{!7475, !7476, !7477, !7478, !7479, !7480, !7481, !7482, !7483, !7484, !7485, !7486, !7487, !7488, !7489}
!7475 = !DIEnumerator(name: "GM_GPCR_PROM_ENA", value: 16384, isUnsigned: true)
!7476 = !DIEnumerator(name: "GM_GPCR_FC_TX_DIS", value: 8192, isUnsigned: true)
!7477 = !DIEnumerator(name: "GM_GPCR_TX_ENA", value: 4096, isUnsigned: true)
!7478 = !DIEnumerator(name: "GM_GPCR_RX_ENA", value: 2048, isUnsigned: true)
!7479 = !DIEnumerator(name: "GM_GPCR_BURST_ENA", value: 1024, isUnsigned: true)
!7480 = !DIEnumerator(name: "GM_GPCR_LOOP_ENA", value: 512, isUnsigned: true)
!7481 = !DIEnumerator(name: "GM_GPCR_PART_ENA", value: 256, isUnsigned: true)
!7482 = !DIEnumerator(name: "GM_GPCR_GIGS_ENA", value: 128, isUnsigned: true)
!7483 = !DIEnumerator(name: "GM_GPCR_FL_PASS", value: 64, isUnsigned: true)
!7484 = !DIEnumerator(name: "GM_GPCR_DUP_FULL", value: 32, isUnsigned: true)
!7485 = !DIEnumerator(name: "GM_GPCR_FC_RX_DIS", value: 16, isUnsigned: true)
!7486 = !DIEnumerator(name: "GM_GPCR_SPEED_100", value: 8, isUnsigned: true)
!7487 = !DIEnumerator(name: "GM_GPCR_AU_DUP_DIS", value: 4, isUnsigned: true)
!7488 = !DIEnumerator(name: "GM_GPCR_AU_FCT_DIS", value: 2, isUnsigned: true)
!7489 = !DIEnumerator(name: "GM_GPCR_AU_SPD_DIS", value: 1, isUnsigned: true)
!7490 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !7053, line: 535, baseType: !7, size: 32, elements: !7491)
!7491 = !{!7492, !7493, !7494, !7495, !7496, !7497, !7498, !7499, !7500, !7501, !7502, !7503, !7504, !7505, !7506, !7507, !7508, !7509, !7510, !7511}
!7492 = !DIEnumerator(name: "RX_MFF_EA", value: 3072, isUnsigned: true)
!7493 = !DIEnumerator(name: "RX_MFF_WP", value: 3076, isUnsigned: true)
!7494 = !DIEnumerator(name: "RX_MFF_RP", value: 3084, isUnsigned: true)
!7495 = !DIEnumerator(name: "RX_MFF_PC", value: 3088, isUnsigned: true)
!7496 = !DIEnumerator(name: "RX_MFF_LEV", value: 3092, isUnsigned: true)
!7497 = !DIEnumerator(name: "RX_MFF_CTRL1", value: 3096, isUnsigned: true)
!7498 = !DIEnumerator(name: "RX_MFF_STAT_TO", value: 3098, isUnsigned: true)
!7499 = !DIEnumerator(name: "RX_MFF_TIST_TO", value: 3099, isUnsigned: true)
!7500 = !DIEnumerator(name: "RX_MFF_CTRL2", value: 3100, isUnsigned: true)
!7501 = !DIEnumerator(name: "RX_MFF_TST1", value: 3101, isUnsigned: true)
!7502 = !DIEnumerator(name: "RX_MFF_TST2", value: 3102, isUnsigned: true)
!7503 = !DIEnumerator(name: "RX_LED_INI", value: 3104, isUnsigned: true)
!7504 = !DIEnumerator(name: "RX_LED_VAL", value: 3108, isUnsigned: true)
!7505 = !DIEnumerator(name: "RX_LED_CTRL", value: 3112, isUnsigned: true)
!7506 = !DIEnumerator(name: "RX_LED_TST", value: 3113, isUnsigned: true)
!7507 = !DIEnumerator(name: "LNK_SYNC_INI", value: 3120, isUnsigned: true)
!7508 = !DIEnumerator(name: "LNK_SYNC_VAL", value: 3124, isUnsigned: true)
!7509 = !DIEnumerator(name: "LNK_SYNC_CTRL", value: 3128, isUnsigned: true)
!7510 = !DIEnumerator(name: "LNK_SYNC_TST", value: 3129, isUnsigned: true)
!7511 = !DIEnumerator(name: "LNK_LED_REG", value: 3132, isUnsigned: true)
!7512 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !7053, line: 655, baseType: !7, size: 32, elements: !7513)
!7513 = !{!7514, !7515, !7516, !7517, !7518, !7519}
!7514 = !DIEnumerator(name: "LED_BLK_ON", value: 32, isUnsigned: true)
!7515 = !DIEnumerator(name: "LED_BLK_OFF", value: 16, isUnsigned: true)
!7516 = !DIEnumerator(name: "LED_SYNC_ON", value: 8, isUnsigned: true)
!7517 = !DIEnumerator(name: "LED_SYNC_OFF", value: 4, isUnsigned: true)
!7518 = !DIEnumerator(name: "LED_REG_ON", value: 2, isUnsigned: true)
!7519 = !DIEnumerator(name: "LED_REG_OFF", value: 1, isUnsigned: true)
!7520 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "netdev_queue_state_t", file: !31, line: 558, baseType: !7, size: 32, elements: !7521)
!7521 = !{!7522, !7523, !7524}
!7522 = !DIEnumerator(name: "__QUEUE_STATE_DRV_XOFF", value: 0, isUnsigned: true)
!7523 = !DIEnumerator(name: "__QUEUE_STATE_STACK_XOFF", value: 1, isUnsigned: true)
!7524 = !DIEnumerator(name: "__QUEUE_STATE_FROZEN", value: 2, isUnsigned: true)
!7525 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !7053, line: 1426, baseType: !7, size: 32, elements: !7526)
!7526 = !{!7527, !7528, !7529, !7530, !7531, !7532, !7533, !7534, !7535, !7536, !7537, !7538, !7539}
!7527 = !DIEnumerator(name: "PHY_M_EC_ENA_BC_EXT", value: 32768, isUnsigned: true)
!7528 = !DIEnumerator(name: "PHY_M_EC_ENA_LIN_LB", value: 16384, isUnsigned: true)
!7529 = !DIEnumerator(name: "PHY_M_EC_DIS_LINK_P", value: 4096, isUnsigned: true)
!7530 = !DIEnumerator(name: "PHY_M_EC_M_DSC_MSK", value: 3072, isUnsigned: true)
!7531 = !DIEnumerator(name: "PHY_M_EC_S_DSC_MSK", value: 768, isUnsigned: true)
!7532 = !DIEnumerator(name: "PHY_M_EC_M_DSC_MSK2", value: 3584, isUnsigned: true)
!7533 = !DIEnumerator(name: "PHY_M_EC_DOWN_S_ENA", value: 256, isUnsigned: true)
!7534 = !DIEnumerator(name: "PHY_M_EC_RX_TIM_CT", value: 128, isUnsigned: true)
!7535 = !DIEnumerator(name: "PHY_M_EC_MAC_S_MSK", value: 112, isUnsigned: true)
!7536 = !DIEnumerator(name: "PHY_M_EC_FIB_AN_ENA", value: 8, isUnsigned: true)
!7537 = !DIEnumerator(name: "PHY_M_EC_DTE_D_ENA", value: 4, isUnsigned: true)
!7538 = !DIEnumerator(name: "PHY_M_EC_TX_TIM_CT", value: 2, isUnsigned: true)
!7539 = !DIEnumerator(name: "PHY_M_EC_TRANS_DIS", value: 1, isUnsigned: true)
!7540 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !7053, line: 1452, baseType: !7, size: 32, elements: !7541)
!7541 = !{!7542, !7543, !7544}
!7542 = !DIEnumerator(name: "MAC_TX_CLK_0_MHZ", value: 2, isUnsigned: true)
!7543 = !DIEnumerator(name: "MAC_TX_CLK_2_5_MHZ", value: 6, isUnsigned: true)
!7544 = !DIEnumerator(name: "MAC_TX_CLK_25_MHZ", value: 7, isUnsigned: true)
!7545 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !7053, line: 1013, baseType: !7, size: 32, elements: !7546)
!7546 = !{!7547, !7548, !7549, !7550, !7551, !7552, !7553, !7554, !7555, !7556}
!7547 = !DIEnumerator(name: "PHY_CT_RESET", value: 32768, isUnsigned: true)
!7548 = !DIEnumerator(name: "PHY_CT_LOOP", value: 16384, isUnsigned: true)
!7549 = !DIEnumerator(name: "PHY_CT_SPS_LSB", value: 8192, isUnsigned: true)
!7550 = !DIEnumerator(name: "PHY_CT_ANE", value: 4096, isUnsigned: true)
!7551 = !DIEnumerator(name: "PHY_CT_PDOWN", value: 2048, isUnsigned: true)
!7552 = !DIEnumerator(name: "PHY_CT_ISOL", value: 1024, isUnsigned: true)
!7553 = !DIEnumerator(name: "PHY_CT_RE_CFG", value: 512, isUnsigned: true)
!7554 = !DIEnumerator(name: "PHY_CT_DUP_MD", value: 256, isUnsigned: true)
!7555 = !DIEnumerator(name: "PHY_CT_COL_TST", value: 128, isUnsigned: true)
!7556 = !DIEnumerator(name: "PHY_CT_SPS_MSB", value: 64, isUnsigned: true)
!7557 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !7053, line: 1068, baseType: !7, size: 32, elements: !7558)
!7558 = !{!7559, !7560, !7561, !7562, !7563, !7564, !7565, !7566, !7567, !7568, !7569, !7570, !7571, !7572}
!7559 = !DIEnumerator(name: "PHY_AN_NXT_PG", value: 32768, isUnsigned: true)
!7560 = !DIEnumerator(name: "PHY_AN_ACK", value: 16384, isUnsigned: true)
!7561 = !DIEnumerator(name: "PHY_AN_RF", value: 8192, isUnsigned: true)
!7562 = !DIEnumerator(name: "PHY_AN_PAUSE_ASYM", value: 2048, isUnsigned: true)
!7563 = !DIEnumerator(name: "PHY_AN_PAUSE_CAP", value: 1024, isUnsigned: true)
!7564 = !DIEnumerator(name: "PHY_AN_100BASE4", value: 512, isUnsigned: true)
!7565 = !DIEnumerator(name: "PHY_AN_100FULL", value: 256, isUnsigned: true)
!7566 = !DIEnumerator(name: "PHY_AN_100HALF", value: 128, isUnsigned: true)
!7567 = !DIEnumerator(name: "PHY_AN_10FULL", value: 64, isUnsigned: true)
!7568 = !DIEnumerator(name: "PHY_AN_10HALF", value: 32, isUnsigned: true)
!7569 = !DIEnumerator(name: "PHY_AN_CSMA", value: 1, isUnsigned: true)
!7570 = !DIEnumerator(name: "PHY_AN_SEL", value: 31, isUnsigned: true)
!7571 = !DIEnumerator(name: "PHY_AN_FULL", value: 321, isUnsigned: true)
!7572 = !DIEnumerator(name: "PHY_AN_ALL", value: 480, isUnsigned: true)
!7573 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ethtool_link_mode_bit_indices", file: !209, line: 1521, baseType: !7, size: 32, elements: !7574)
!7574 = !{!7575, !7576, !7577, !7578, !7579, !7580, !7581, !7582, !7583, !7584, !7585, !7586, !7587, !7588, !7589, !7590, !7591, !7592, !7593, !7594, !7595, !7596, !7597, !7598, !7599, !7600, !7601, !7602, !7603, !7604, !7605, !7606, !7607, !7608, !7609, !7610, !7611, !7612, !7613, !7614, !7615, !7616, !7617, !7618, !7619, !7620, !7621, !7622, !7623, !7624, !7625, !7626, !7627, !7628, !7629, !7630, !7631, !7632, !7633, !7634, !7635, !7636, !7637, !7638, !7639, !7640, !7641, !7642, !7643, !7644, !7645, !7646, !7647, !7648, !7649, !7650, !7651, !7652, !7653, !7654, !7655, !7656, !7657, !7658, !7659, !7660, !7661, !7662, !7663, !7664, !7665, !7666, !7667}
!7575 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_10baseT_Half_BIT", value: 0, isUnsigned: true)
!7576 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_10baseT_Full_BIT", value: 1, isUnsigned: true)
!7577 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100baseT_Half_BIT", value: 2, isUnsigned: true)
!7578 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100baseT_Full_BIT", value: 3, isUnsigned: true)
!7579 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_1000baseT_Half_BIT", value: 4, isUnsigned: true)
!7580 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_1000baseT_Full_BIT", value: 5, isUnsigned: true)
!7581 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_Autoneg_BIT", value: 6, isUnsigned: true)
!7582 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_TP_BIT", value: 7, isUnsigned: true)
!7583 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_AUI_BIT", value: 8, isUnsigned: true)
!7584 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_MII_BIT", value: 9, isUnsigned: true)
!7585 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_FIBRE_BIT", value: 10, isUnsigned: true)
!7586 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_BNC_BIT", value: 11, isUnsigned: true)
!7587 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_10000baseT_Full_BIT", value: 12, isUnsigned: true)
!7588 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_Pause_BIT", value: 13, isUnsigned: true)
!7589 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_Asym_Pause_BIT", value: 14, isUnsigned: true)
!7590 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_2500baseX_Full_BIT", value: 15, isUnsigned: true)
!7591 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_Backplane_BIT", value: 16, isUnsigned: true)
!7592 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_1000baseKX_Full_BIT", value: 17, isUnsigned: true)
!7593 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_10000baseKX4_Full_BIT", value: 18, isUnsigned: true)
!7594 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_10000baseKR_Full_BIT", value: 19, isUnsigned: true)
!7595 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_10000baseR_FEC_BIT", value: 20, isUnsigned: true)
!7596 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_20000baseMLD2_Full_BIT", value: 21, isUnsigned: true)
!7597 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_20000baseKR2_Full_BIT", value: 22, isUnsigned: true)
!7598 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_40000baseKR4_Full_BIT", value: 23, isUnsigned: true)
!7599 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_40000baseCR4_Full_BIT", value: 24, isUnsigned: true)
!7600 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_40000baseSR4_Full_BIT", value: 25, isUnsigned: true)
!7601 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_40000baseLR4_Full_BIT", value: 26, isUnsigned: true)
!7602 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_56000baseKR4_Full_BIT", value: 27, isUnsigned: true)
!7603 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_56000baseCR4_Full_BIT", value: 28, isUnsigned: true)
!7604 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_56000baseSR4_Full_BIT", value: 29, isUnsigned: true)
!7605 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_56000baseLR4_Full_BIT", value: 30, isUnsigned: true)
!7606 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_25000baseCR_Full_BIT", value: 31, isUnsigned: true)
!7607 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_25000baseKR_Full_BIT", value: 32, isUnsigned: true)
!7608 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_25000baseSR_Full_BIT", value: 33, isUnsigned: true)
!7609 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_50000baseCR2_Full_BIT", value: 34, isUnsigned: true)
!7610 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_50000baseKR2_Full_BIT", value: 35, isUnsigned: true)
!7611 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100000baseKR4_Full_BIT", value: 36, isUnsigned: true)
!7612 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100000baseSR4_Full_BIT", value: 37, isUnsigned: true)
!7613 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100000baseCR4_Full_BIT", value: 38, isUnsigned: true)
!7614 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100000baseLR4_ER4_Full_BIT", value: 39, isUnsigned: true)
!7615 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_50000baseSR2_Full_BIT", value: 40, isUnsigned: true)
!7616 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_1000baseX_Full_BIT", value: 41, isUnsigned: true)
!7617 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_10000baseCR_Full_BIT", value: 42, isUnsigned: true)
!7618 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_10000baseSR_Full_BIT", value: 43, isUnsigned: true)
!7619 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_10000baseLR_Full_BIT", value: 44, isUnsigned: true)
!7620 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_10000baseLRM_Full_BIT", value: 45, isUnsigned: true)
!7621 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_10000baseER_Full_BIT", value: 46, isUnsigned: true)
!7622 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_2500baseT_Full_BIT", value: 47, isUnsigned: true)
!7623 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_5000baseT_Full_BIT", value: 48, isUnsigned: true)
!7624 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_FEC_NONE_BIT", value: 49, isUnsigned: true)
!7625 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_FEC_RS_BIT", value: 50, isUnsigned: true)
!7626 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_FEC_BASER_BIT", value: 51, isUnsigned: true)
!7627 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_50000baseKR_Full_BIT", value: 52, isUnsigned: true)
!7628 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_50000baseSR_Full_BIT", value: 53, isUnsigned: true)
!7629 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_50000baseCR_Full_BIT", value: 54, isUnsigned: true)
!7630 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_50000baseLR_ER_FR_Full_BIT", value: 55, isUnsigned: true)
!7631 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_50000baseDR_Full_BIT", value: 56, isUnsigned: true)
!7632 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100000baseKR2_Full_BIT", value: 57, isUnsigned: true)
!7633 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100000baseSR2_Full_BIT", value: 58, isUnsigned: true)
!7634 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100000baseCR2_Full_BIT", value: 59, isUnsigned: true)
!7635 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100000baseLR2_ER2_FR2_Full_BIT", value: 60, isUnsigned: true)
!7636 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100000baseDR2_Full_BIT", value: 61, isUnsigned: true)
!7637 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_200000baseKR4_Full_BIT", value: 62, isUnsigned: true)
!7638 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_200000baseSR4_Full_BIT", value: 63, isUnsigned: true)
!7639 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_200000baseLR4_ER4_FR4_Full_BIT", value: 64, isUnsigned: true)
!7640 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_200000baseDR4_Full_BIT", value: 65, isUnsigned: true)
!7641 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_200000baseCR4_Full_BIT", value: 66, isUnsigned: true)
!7642 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100baseT1_Full_BIT", value: 67, isUnsigned: true)
!7643 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_1000baseT1_Full_BIT", value: 68, isUnsigned: true)
!7644 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_400000baseKR8_Full_BIT", value: 69, isUnsigned: true)
!7645 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_400000baseSR8_Full_BIT", value: 70, isUnsigned: true)
!7646 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_400000baseLR8_ER8_FR8_Full_BIT", value: 71, isUnsigned: true)
!7647 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_400000baseDR8_Full_BIT", value: 72, isUnsigned: true)
!7648 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_400000baseCR8_Full_BIT", value: 73, isUnsigned: true)
!7649 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_FEC_LLRS_BIT", value: 74, isUnsigned: true)
!7650 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100000baseKR_Full_BIT", value: 75, isUnsigned: true)
!7651 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100000baseSR_Full_BIT", value: 76, isUnsigned: true)
!7652 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100000baseLR_ER_FR_Full_BIT", value: 77, isUnsigned: true)
!7653 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100000baseCR_Full_BIT", value: 78, isUnsigned: true)
!7654 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100000baseDR_Full_BIT", value: 79, isUnsigned: true)
!7655 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_200000baseKR2_Full_BIT", value: 80, isUnsigned: true)
!7656 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_200000baseSR2_Full_BIT", value: 81, isUnsigned: true)
!7657 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_200000baseLR2_ER2_FR2_Full_BIT", value: 82, isUnsigned: true)
!7658 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_200000baseDR2_Full_BIT", value: 83, isUnsigned: true)
!7659 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_200000baseCR2_Full_BIT", value: 84, isUnsigned: true)
!7660 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_400000baseKR4_Full_BIT", value: 85, isUnsigned: true)
!7661 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_400000baseSR4_Full_BIT", value: 86, isUnsigned: true)
!7662 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_400000baseLR4_ER4_FR4_Full_BIT", value: 87, isUnsigned: true)
!7663 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_400000baseDR4_Full_BIT", value: 88, isUnsigned: true)
!7664 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_400000baseCR4_Full_BIT", value: 89, isUnsigned: true)
!7665 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100baseFX_Half_BIT", value: 90, isUnsigned: true)
!7666 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100baseFX_Full_BIT", value: 91, isUnsigned: true)
!7667 = !DIEnumerator(name: "__ETHTOOL_LINK_MODE_MASK_NBITS", value: 92, isUnsigned: true)
!7668 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !7053, line: 1322, baseType: !7, size: 32, elements: !7669)
!7669 = !{!7670, !7671, !7672, !7673, !7674, !7675}
!7670 = !DIEnumerator(name: "PHY_M_1000C_TEST", value: 57344, isUnsigned: true)
!7671 = !DIEnumerator(name: "PHY_M_1000C_MSE", value: 4096, isUnsigned: true)
!7672 = !DIEnumerator(name: "PHY_M_1000C_MSC", value: 2048, isUnsigned: true)
!7673 = !DIEnumerator(name: "PHY_M_1000C_MPD", value: 1024, isUnsigned: true)
!7674 = !DIEnumerator(name: "PHY_M_1000C_AFD", value: 512, isUnsigned: true)
!7675 = !DIEnumerator(name: "PHY_M_1000C_AHD", value: 256, isUnsigned: true)
!7676 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !7053, line: 1306, baseType: !7, size: 32, elements: !7677)
!7677 = !{!7678, !7679, !7680, !7681}
!7678 = !DIEnumerator(name: "PHY_M_AN_ASP_X", value: 256, isUnsigned: true)
!7679 = !DIEnumerator(name: "PHY_M_AN_PC_X", value: 128, isUnsigned: true)
!7680 = !DIEnumerator(name: "PHY_M_AN_1000X_AHD", value: 64, isUnsigned: true)
!7681 = !DIEnumerator(name: "PHY_M_AN_1000X_AFD", value: 32, isUnsigned: true)
!7682 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !7053, line: 1026, baseType: !7, size: 32, elements: !7683)
!7683 = !{!7684, !7685, !7686}
!7684 = !DIEnumerator(name: "PHY_CT_SP1000", value: 64, isUnsigned: true)
!7685 = !DIEnumerator(name: "PHY_CT_SP100", value: 8192, isUnsigned: true)
!7686 = !DIEnumerator(name: "PHY_CT_SP10", value: 0, isUnsigned: true)
!7687 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !7053, line: 946, baseType: !7, size: 32, elements: !7688)
!7688 = !{!7689, !7690, !7691, !7692, !7693, !7694, !7695, !7696, !7697, !7698, !7699, !7700, !7701, !7702, !7703, !7704, !7705, !7706, !7707, !7708, !7709}
!7689 = !DIEnumerator(name: "PHY_BCOM_CTRL", value: 0, isUnsigned: true)
!7690 = !DIEnumerator(name: "PHY_BCOM_STAT", value: 1, isUnsigned: true)
!7691 = !DIEnumerator(name: "PHY_BCOM_ID0", value: 2, isUnsigned: true)
!7692 = !DIEnumerator(name: "PHY_BCOM_ID1", value: 3, isUnsigned: true)
!7693 = !DIEnumerator(name: "PHY_BCOM_AUNE_ADV", value: 4, isUnsigned: true)
!7694 = !DIEnumerator(name: "PHY_BCOM_AUNE_LP", value: 5, isUnsigned: true)
!7695 = !DIEnumerator(name: "PHY_BCOM_AUNE_EXP", value: 6, isUnsigned: true)
!7696 = !DIEnumerator(name: "PHY_BCOM_NEPG", value: 7, isUnsigned: true)
!7697 = !DIEnumerator(name: "PHY_BCOM_NEPG_LP", value: 8, isUnsigned: true)
!7698 = !DIEnumerator(name: "PHY_BCOM_1000T_CTRL", value: 9, isUnsigned: true)
!7699 = !DIEnumerator(name: "PHY_BCOM_1000T_STAT", value: 10, isUnsigned: true)
!7700 = !DIEnumerator(name: "PHY_BCOM_EXT_STAT", value: 15, isUnsigned: true)
!7701 = !DIEnumerator(name: "PHY_BCOM_P_EXT_CTRL", value: 16, isUnsigned: true)
!7702 = !DIEnumerator(name: "PHY_BCOM_P_EXT_STAT", value: 17, isUnsigned: true)
!7703 = !DIEnumerator(name: "PHY_BCOM_RE_CTR", value: 18, isUnsigned: true)
!7704 = !DIEnumerator(name: "PHY_BCOM_FC_CTR", value: 19, isUnsigned: true)
!7705 = !DIEnumerator(name: "PHY_BCOM_RNO_CTR", value: 20, isUnsigned: true)
!7706 = !DIEnumerator(name: "PHY_BCOM_AUX_CTRL", value: 24, isUnsigned: true)
!7707 = !DIEnumerator(name: "PHY_BCOM_AUX_STAT", value: 25, isUnsigned: true)
!7708 = !DIEnumerator(name: "PHY_BCOM_INT_STAT", value: 26, isUnsigned: true)
!7709 = !DIEnumerator(name: "PHY_BCOM_INT_MASK", value: 27, isUnsigned: true)
!7710 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !7053, line: 1253, baseType: !7, size: 32, elements: !7711)
!7711 = !{!7712, !7713, !7714, !7715, !7716, !7717, !7718, !7719, !7720, !7721, !7722, !7723, !7724, !7725, !7726}
!7712 = !DIEnumerator(name: "PHY_B_IS_PSE", value: 16384, isUnsigned: true)
!7713 = !DIEnumerator(name: "PHY_B_IS_MDXI_SC", value: 8192, isUnsigned: true)
!7714 = !DIEnumerator(name: "PHY_B_IS_HCT", value: 4096, isUnsigned: true)
!7715 = !DIEnumerator(name: "PHY_B_IS_LCT", value: 2048, isUnsigned: true)
!7716 = !DIEnumerator(name: "PHY_B_IS_AN_PR", value: 1024, isUnsigned: true)
!7717 = !DIEnumerator(name: "PHY_B_IS_NO_HDCL", value: 512, isUnsigned: true)
!7718 = !DIEnumerator(name: "PHY_B_IS_NO_HDC", value: 256, isUnsigned: true)
!7719 = !DIEnumerator(name: "PHY_B_IS_NEG_USHDC", value: 128, isUnsigned: true)
!7720 = !DIEnumerator(name: "PHY_B_IS_SCR_S_ER", value: 64, isUnsigned: true)
!7721 = !DIEnumerator(name: "PHY_B_IS_RRS_CHANGE", value: 32, isUnsigned: true)
!7722 = !DIEnumerator(name: "PHY_B_IS_LRS_CHANGE", value: 16, isUnsigned: true)
!7723 = !DIEnumerator(name: "PHY_B_IS_DUP_CHANGE", value: 8, isUnsigned: true)
!7724 = !DIEnumerator(name: "PHY_B_IS_LSP_CHANGE", value: 4, isUnsigned: true)
!7725 = !DIEnumerator(name: "PHY_B_IS_LST_CHANGE", value: 2, isUnsigned: true)
!7726 = !DIEnumerator(name: "PHY_B_IS_CRC_ER", value: 1, isUnsigned: true)
!7727 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !7053, line: 2003, baseType: !7, size: 32, elements: !7728)
!7728 = !{!7729, !7730, !7731, !7732, !7733, !7734, !7735, !7736, !7737, !7738, !7739, !7740, !7741, !7742, !7743, !7744, !7745, !7746, !7747, !7748, !7749, !7750, !7751, !7752, !7753, !7754}
!7729 = !DIEnumerator(name: "XM_MMU_CMD", value: 0, isUnsigned: true)
!7730 = !DIEnumerator(name: "XM_POFF", value: 8, isUnsigned: true)
!7731 = !DIEnumerator(name: "XM_BURST", value: 12, isUnsigned: true)
!7732 = !DIEnumerator(name: "XM_1L_VLAN_TAG", value: 16, isUnsigned: true)
!7733 = !DIEnumerator(name: "XM_2L_VLAN_TAG", value: 20, isUnsigned: true)
!7734 = !DIEnumerator(name: "XM_TX_CMD", value: 32, isUnsigned: true)
!7735 = !DIEnumerator(name: "XM_TX_RT_LIM", value: 36, isUnsigned: true)
!7736 = !DIEnumerator(name: "XM_TX_STIME", value: 40, isUnsigned: true)
!7737 = !DIEnumerator(name: "XM_TX_IPG", value: 44, isUnsigned: true)
!7738 = !DIEnumerator(name: "XM_RX_CMD", value: 48, isUnsigned: true)
!7739 = !DIEnumerator(name: "XM_PHY_ADDR", value: 52, isUnsigned: true)
!7740 = !DIEnumerator(name: "XM_PHY_DATA", value: 56, isUnsigned: true)
!7741 = !DIEnumerator(name: "XM_GP_PORT", value: 64, isUnsigned: true)
!7742 = !DIEnumerator(name: "XM_IMSK", value: 68, isUnsigned: true)
!7743 = !DIEnumerator(name: "XM_ISRC", value: 72, isUnsigned: true)
!7744 = !DIEnumerator(name: "XM_HW_CFG", value: 76, isUnsigned: true)
!7745 = !DIEnumerator(name: "XM_TX_LO_WM", value: 96, isUnsigned: true)
!7746 = !DIEnumerator(name: "XM_TX_HI_WM", value: 98, isUnsigned: true)
!7747 = !DIEnumerator(name: "XM_TX_THR", value: 100, isUnsigned: true)
!7748 = !DIEnumerator(name: "XM_HT_THR", value: 102, isUnsigned: true)
!7749 = !DIEnumerator(name: "XM_PAUSE_DA", value: 104, isUnsigned: true)
!7750 = !DIEnumerator(name: "XM_CTL_PARA", value: 112, isUnsigned: true)
!7751 = !DIEnumerator(name: "XM_MAC_OPCODE", value: 116, isUnsigned: true)
!7752 = !DIEnumerator(name: "XM_MAC_PTIME", value: 118, isUnsigned: true)
!7753 = !DIEnumerator(name: "XM_TX_STAT", value: 120, isUnsigned: true)
!7754 = !DIEnumerator(name: "XM_EXM_START", value: 128, isUnsigned: true)
!7755 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !7053, line: 2109, baseType: !7, size: 32, elements: !7756)
!7756 = !{!7757, !7758, !7759, !7760, !7761, !7762, !7763, !7764, !7765, !7766, !7767, !7768}
!7757 = !DIEnumerator(name: "XM_MMU_PHY_RDY", value: 4096, isUnsigned: true)
!7758 = !DIEnumerator(name: "XM_MMU_PHY_BUSY", value: 2048, isUnsigned: true)
!7759 = !DIEnumerator(name: "XM_MMU_IGN_PF", value: 1024, isUnsigned: true)
!7760 = !DIEnumerator(name: "XM_MMU_MAC_LB", value: 512, isUnsigned: true)
!7761 = !DIEnumerator(name: "XM_MMU_FRC_COL", value: 128, isUnsigned: true)
!7762 = !DIEnumerator(name: "XM_MMU_SIM_COL", value: 64, isUnsigned: true)
!7763 = !DIEnumerator(name: "XM_MMU_NO_PRE", value: 32, isUnsigned: true)
!7764 = !DIEnumerator(name: "XM_MMU_GMII_FD", value: 16, isUnsigned: true)
!7765 = !DIEnumerator(name: "XM_MMU_RAT_CTRL", value: 8, isUnsigned: true)
!7766 = !DIEnumerator(name: "XM_MMU_GMII_LOOP", value: 4, isUnsigned: true)
!7767 = !DIEnumerator(name: "XM_MMU_ENA_RX", value: 2, isUnsigned: true)
!7768 = !DIEnumerator(name: "XM_MMU_ENA_TX", value: 1, isUnsigned: true)
!7769 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !7053, line: 1032, baseType: !7, size: 32, elements: !7770)
!7770 = !{!7771, !7772, !7773, !7774, !7775, !7776, !7777, !7778}
!7771 = !DIEnumerator(name: "PHY_ST_EXT_ST", value: 256, isUnsigned: true)
!7772 = !DIEnumerator(name: "PHY_ST_PRE_SUP", value: 64, isUnsigned: true)
!7773 = !DIEnumerator(name: "PHY_ST_AN_OVER", value: 32, isUnsigned: true)
!7774 = !DIEnumerator(name: "PHY_ST_REM_FLT", value: 16, isUnsigned: true)
!7775 = !DIEnumerator(name: "PHY_ST_AN_CAP", value: 8, isUnsigned: true)
!7776 = !DIEnumerator(name: "PHY_ST_LSYNC", value: 4, isUnsigned: true)
!7777 = !DIEnumerator(name: "PHY_ST_JAB_DET", value: 2, isUnsigned: true)
!7778 = !DIEnumerator(name: "PHY_ST_EXT_REG", value: 1, isUnsigned: true)
!7779 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !7053, line: 929, baseType: !7, size: 32, elements: !7780)
!7780 = !{!7781, !7782, !7783, !7784, !7785, !7786, !7787, !7788, !7789, !7790, !7791}
!7781 = !DIEnumerator(name: "PHY_XMAC_CTRL", value: 0, isUnsigned: true)
!7782 = !DIEnumerator(name: "PHY_XMAC_STAT", value: 1, isUnsigned: true)
!7783 = !DIEnumerator(name: "PHY_XMAC_ID0", value: 2, isUnsigned: true)
!7784 = !DIEnumerator(name: "PHY_XMAC_ID1", value: 3, isUnsigned: true)
!7785 = !DIEnumerator(name: "PHY_XMAC_AUNE_ADV", value: 4, isUnsigned: true)
!7786 = !DIEnumerator(name: "PHY_XMAC_AUNE_LP", value: 5, isUnsigned: true)
!7787 = !DIEnumerator(name: "PHY_XMAC_AUNE_EXP", value: 6, isUnsigned: true)
!7788 = !DIEnumerator(name: "PHY_XMAC_NEPG", value: 7, isUnsigned: true)
!7789 = !DIEnumerator(name: "PHY_XMAC_NEPG_LP", value: 8, isUnsigned: true)
!7790 = !DIEnumerator(name: "PHY_XMAC_EXT_STAT", value: 15, isUnsigned: true)
!7791 = !DIEnumerator(name: "PHY_XMAC_RES_ABI", value: 16, isUnsigned: true)
!7792 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !7053, line: 1202, baseType: !7, size: 32, elements: !7793)
!7793 = !{!7794, !7795, !7796}
!7794 = !DIEnumerator(name: "PHY_B_AN_RF", value: 8192, isUnsigned: true)
!7795 = !DIEnumerator(name: "PHY_B_AN_ASP", value: 2048, isUnsigned: true)
!7796 = !DIEnumerator(name: "PHY_B_AN_PC", value: 1024, isUnsigned: true)
!7797 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !7053, line: 1233, baseType: !7, size: 32, elements: !7798)
!7798 = !{!7799, !7800, !7801, !7802, !7803, !7804, !7805, !7806, !7807, !7808, !7809, !7810, !7811, !7812}
!7799 = !DIEnumerator(name: "PHY_B_AS_AN_C", value: 32768, isUnsigned: true)
!7800 = !DIEnumerator(name: "PHY_B_AS_AN_CA", value: 16384, isUnsigned: true)
!7801 = !DIEnumerator(name: "PHY_B_AS_ANACK_D", value: 8192, isUnsigned: true)
!7802 = !DIEnumerator(name: "PHY_B_AS_ANAB_D", value: 4096, isUnsigned: true)
!7803 = !DIEnumerator(name: "PHY_B_AS_NPW", value: 2048, isUnsigned: true)
!7804 = !DIEnumerator(name: "PHY_B_AS_AN_RES_MSK", value: 1792, isUnsigned: true)
!7805 = !DIEnumerator(name: "PHY_B_AS_PDF", value: 128, isUnsigned: true)
!7806 = !DIEnumerator(name: "PHY_B_AS_RF", value: 64, isUnsigned: true)
!7807 = !DIEnumerator(name: "PHY_B_AS_ANP_R", value: 32, isUnsigned: true)
!7808 = !DIEnumerator(name: "PHY_B_AS_LP_ANAB", value: 16, isUnsigned: true)
!7809 = !DIEnumerator(name: "PHY_B_AS_LP_NPAB", value: 8, isUnsigned: true)
!7810 = !DIEnumerator(name: "PHY_B_AS_LS", value: 4, isUnsigned: true)
!7811 = !DIEnumerator(name: "PHY_B_AS_PRR", value: 2, isUnsigned: true)
!7812 = !DIEnumerator(name: "PHY_B_AS_PRT", value: 1, isUnsigned: true)
!7813 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !7053, line: 2176, baseType: !7, size: 32, elements: !7814)
!7814 = !{!7815, !7816, !7817, !7818, !7819, !7820, !7821, !7822, !7823, !7824, !7825, !7826, !7827, !7828, !7829, !7830}
!7815 = !DIEnumerator(name: "XM_IS_LNK_AE", value: 16384, isUnsigned: true)
!7816 = !DIEnumerator(name: "XM_IS_TX_ABORT", value: 8192, isUnsigned: true)
!7817 = !DIEnumerator(name: "XM_IS_FRC_INT", value: 4096, isUnsigned: true)
!7818 = !DIEnumerator(name: "XM_IS_INP_ASS", value: 2048, isUnsigned: true)
!7819 = !DIEnumerator(name: "XM_IS_LIPA_RC", value: 1024, isUnsigned: true)
!7820 = !DIEnumerator(name: "XM_IS_RX_PAGE", value: 512, isUnsigned: true)
!7821 = !DIEnumerator(name: "XM_IS_TX_PAGE", value: 256, isUnsigned: true)
!7822 = !DIEnumerator(name: "XM_IS_AND", value: 128, isUnsigned: true)
!7823 = !DIEnumerator(name: "XM_IS_TSC_OV", value: 64, isUnsigned: true)
!7824 = !DIEnumerator(name: "XM_IS_RXC_OV", value: 32, isUnsigned: true)
!7825 = !DIEnumerator(name: "XM_IS_TXC_OV", value: 16, isUnsigned: true)
!7826 = !DIEnumerator(name: "XM_IS_RXF_OV", value: 8, isUnsigned: true)
!7827 = !DIEnumerator(name: "XM_IS_TXF_UR", value: 4, isUnsigned: true)
!7828 = !DIEnumerator(name: "XM_IS_TX_COMP", value: 2, isUnsigned: true)
!7829 = !DIEnumerator(name: "XM_IS_RX_COMP", value: 1, isUnsigned: true)
!7830 = !DIEnumerator(name: "XM_IMSK_DISABLE", value: 65535, isUnsigned: true)
!7831 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !7053, line: 2034, baseType: !7, size: 32, elements: !7832)
!7832 = !{!7833, !7834, !7835, !7836, !7837, !7838, !7839, !7840, !7841, !7842, !7843, !7844, !7845, !7846, !7847, !7848, !7849, !7850, !7851, !7852, !7853, !7854, !7855, !7856, !7857, !7858, !7859, !7860, !7861, !7862, !7863, !7864, !7865, !7866, !7867, !7868, !7869, !7870, !7871, !7872, !7873, !7874, !7875, !7876, !7877, !7878, !7879, !7880, !7881, !7882, !7883, !7884, !7885, !7886, !7887, !7888, !7889, !7890, !7891, !7892, !7893, !7894, !7895, !7896, !7897, !7898, !7899, !7900, !7901, !7902, !7903}
!7833 = !DIEnumerator(name: "XM_SRC_CHK", value: 256, isUnsigned: true)
!7834 = !DIEnumerator(name: "XM_SA", value: 264, isUnsigned: true)
!7835 = !DIEnumerator(name: "XM_HSM", value: 272, isUnsigned: true)
!7836 = !DIEnumerator(name: "XM_RX_LO_WM", value: 280, isUnsigned: true)
!7837 = !DIEnumerator(name: "XM_RX_HI_WM", value: 282, isUnsigned: true)
!7838 = !DIEnumerator(name: "XM_RX_THR", value: 284, isUnsigned: true)
!7839 = !DIEnumerator(name: "XM_DEV_ID", value: 288, isUnsigned: true)
!7840 = !DIEnumerator(name: "XM_MODE", value: 292, isUnsigned: true)
!7841 = !DIEnumerator(name: "XM_LSA", value: 296, isUnsigned: true)
!7842 = !DIEnumerator(name: "XM_TS_READ", value: 304, isUnsigned: true)
!7843 = !DIEnumerator(name: "XM_TS_LOAD", value: 308, isUnsigned: true)
!7844 = !DIEnumerator(name: "XM_STAT_CMD", value: 512, isUnsigned: true)
!7845 = !DIEnumerator(name: "XM_RX_CNT_EV", value: 516, isUnsigned: true)
!7846 = !DIEnumerator(name: "XM_TX_CNT_EV", value: 520, isUnsigned: true)
!7847 = !DIEnumerator(name: "XM_RX_EV_MSK", value: 524, isUnsigned: true)
!7848 = !DIEnumerator(name: "XM_TX_EV_MSK", value: 528, isUnsigned: true)
!7849 = !DIEnumerator(name: "XM_TXF_OK", value: 640, isUnsigned: true)
!7850 = !DIEnumerator(name: "XM_TXO_OK_HI", value: 644, isUnsigned: true)
!7851 = !DIEnumerator(name: "XM_TXO_OK_LO", value: 648, isUnsigned: true)
!7852 = !DIEnumerator(name: "XM_TXF_BC_OK", value: 652, isUnsigned: true)
!7853 = !DIEnumerator(name: "XM_TXF_MC_OK", value: 656, isUnsigned: true)
!7854 = !DIEnumerator(name: "XM_TXF_UC_OK", value: 660, isUnsigned: true)
!7855 = !DIEnumerator(name: "XM_TXF_LONG", value: 664, isUnsigned: true)
!7856 = !DIEnumerator(name: "XM_TXE_BURST", value: 668, isUnsigned: true)
!7857 = !DIEnumerator(name: "XM_TXF_MPAUSE", value: 672, isUnsigned: true)
!7858 = !DIEnumerator(name: "XM_TXF_MCTRL", value: 676, isUnsigned: true)
!7859 = !DIEnumerator(name: "XM_TXF_SNG_COL", value: 680, isUnsigned: true)
!7860 = !DIEnumerator(name: "XM_TXF_MUL_COL", value: 684, isUnsigned: true)
!7861 = !DIEnumerator(name: "XM_TXF_ABO_COL", value: 688, isUnsigned: true)
!7862 = !DIEnumerator(name: "XM_TXF_LAT_COL", value: 692, isUnsigned: true)
!7863 = !DIEnumerator(name: "XM_TXF_DEF", value: 696, isUnsigned: true)
!7864 = !DIEnumerator(name: "XM_TXF_EX_DEF", value: 700, isUnsigned: true)
!7865 = !DIEnumerator(name: "XM_TXE_FIFO_UR", value: 704, isUnsigned: true)
!7866 = !DIEnumerator(name: "XM_TXE_CS_ERR", value: 708, isUnsigned: true)
!7867 = !DIEnumerator(name: "XM_TXP_UTIL", value: 712, isUnsigned: true)
!7868 = !DIEnumerator(name: "XM_TXF_64B", value: 720, isUnsigned: true)
!7869 = !DIEnumerator(name: "XM_TXF_127B", value: 724, isUnsigned: true)
!7870 = !DIEnumerator(name: "XM_TXF_255B", value: 728, isUnsigned: true)
!7871 = !DIEnumerator(name: "XM_TXF_511B", value: 732, isUnsigned: true)
!7872 = !DIEnumerator(name: "XM_TXF_1023B", value: 736, isUnsigned: true)
!7873 = !DIEnumerator(name: "XM_TXF_MAX_SZ", value: 740, isUnsigned: true)
!7874 = !DIEnumerator(name: "XM_RXF_OK", value: 768, isUnsigned: true)
!7875 = !DIEnumerator(name: "XM_RXO_OK_HI", value: 772, isUnsigned: true)
!7876 = !DIEnumerator(name: "XM_RXO_OK_LO", value: 776, isUnsigned: true)
!7877 = !DIEnumerator(name: "XM_RXF_BC_OK", value: 780, isUnsigned: true)
!7878 = !DIEnumerator(name: "XM_RXF_MC_OK", value: 784, isUnsigned: true)
!7879 = !DIEnumerator(name: "XM_RXF_UC_OK", value: 788, isUnsigned: true)
!7880 = !DIEnumerator(name: "XM_RXF_MPAUSE", value: 792, isUnsigned: true)
!7881 = !DIEnumerator(name: "XM_RXF_MCTRL", value: 796, isUnsigned: true)
!7882 = !DIEnumerator(name: "XM_RXF_INV_MP", value: 800, isUnsigned: true)
!7883 = !DIEnumerator(name: "XM_RXF_INV_MOC", value: 804, isUnsigned: true)
!7884 = !DIEnumerator(name: "XM_RXE_BURST", value: 808, isUnsigned: true)
!7885 = !DIEnumerator(name: "XM_RXE_FMISS", value: 812, isUnsigned: true)
!7886 = !DIEnumerator(name: "XM_RXF_FRA_ERR", value: 816, isUnsigned: true)
!7887 = !DIEnumerator(name: "XM_RXE_FIFO_OV", value: 820, isUnsigned: true)
!7888 = !DIEnumerator(name: "XM_RXF_JAB_PKT", value: 824, isUnsigned: true)
!7889 = !DIEnumerator(name: "XM_RXE_CAR_ERR", value: 828, isUnsigned: true)
!7890 = !DIEnumerator(name: "XM_RXF_LEN_ERR", value: 832, isUnsigned: true)
!7891 = !DIEnumerator(name: "XM_RXE_SYM_ERR", value: 836, isUnsigned: true)
!7892 = !DIEnumerator(name: "XM_RXE_SHT_ERR", value: 840, isUnsigned: true)
!7893 = !DIEnumerator(name: "XM_RXE_RUNT", value: 844, isUnsigned: true)
!7894 = !DIEnumerator(name: "XM_RXF_LNG_ERR", value: 848, isUnsigned: true)
!7895 = !DIEnumerator(name: "XM_RXF_FCS_ERR", value: 852, isUnsigned: true)
!7896 = !DIEnumerator(name: "XM_RXF_CEX_ERR", value: 860, isUnsigned: true)
!7897 = !DIEnumerator(name: "XM_RXP_UTIL", value: 864, isUnsigned: true)
!7898 = !DIEnumerator(name: "XM_RXF_64B", value: 872, isUnsigned: true)
!7899 = !DIEnumerator(name: "XM_RXF_127B", value: 876, isUnsigned: true)
!7900 = !DIEnumerator(name: "XM_RXF_255B", value: 880, isUnsigned: true)
!7901 = !DIEnumerator(name: "XM_RXF_511B", value: 884, isUnsigned: true)
!7902 = !DIEnumerator(name: "XM_RXF_1023B", value: 888, isUnsigned: true)
!7903 = !DIEnumerator(name: "XM_RXF_MAX_SZ", value: 892, isUnsigned: true)
!7904 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !7053, line: 2244, baseType: !7, size: 32, elements: !7905)
!7905 = !{!7906, !7907, !7908, !7909, !7910, !7911, !7912, !7913, !7914, !7915, !7916, !7917, !7918, !7919, !7920, !7921, !7922, !7923, !7924, !7925, !7926, !7927, !7928, !7929, !7930, !7931, !7932}
!7906 = !DIEnumerator(name: "XM_MD_ENA_REJ", value: 67108864, isUnsigned: true)
!7907 = !DIEnumerator(name: "XM_MD_SPOE_E", value: 33554432, isUnsigned: true)
!7908 = !DIEnumerator(name: "XM_MD_TX_REP", value: 16777216, isUnsigned: true)
!7909 = !DIEnumerator(name: "XM_MD_SPOFF_I", value: 8388608, isUnsigned: true)
!7910 = !DIEnumerator(name: "XM_MD_LE_STW", value: 4194304, isUnsigned: true)
!7911 = !DIEnumerator(name: "XM_MD_TX_CONT", value: 2097152, isUnsigned: true)
!7912 = !DIEnumerator(name: "XM_MD_TX_PAUSE", value: 1048576, isUnsigned: true)
!7913 = !DIEnumerator(name: "XM_MD_ATS", value: 524288, isUnsigned: true)
!7914 = !DIEnumerator(name: "XM_MD_SPOL_I", value: 262144, isUnsigned: true)
!7915 = !DIEnumerator(name: "XM_MD_SPOH_I", value: 131072, isUnsigned: true)
!7916 = !DIEnumerator(name: "XM_MD_CAP", value: 65536, isUnsigned: true)
!7917 = !DIEnumerator(name: "XM_MD_ENA_HASH", value: 32768, isUnsigned: true)
!7918 = !DIEnumerator(name: "XM_MD_CSA", value: 16384, isUnsigned: true)
!7919 = !DIEnumerator(name: "XM_MD_CAA", value: 8192, isUnsigned: true)
!7920 = !DIEnumerator(name: "XM_MD_RX_MCTRL", value: 4096, isUnsigned: true)
!7921 = !DIEnumerator(name: "XM_MD_RX_RUNT", value: 2048, isUnsigned: true)
!7922 = !DIEnumerator(name: "XM_MD_RX_IRLE", value: 1024, isUnsigned: true)
!7923 = !DIEnumerator(name: "XM_MD_RX_LONG", value: 512, isUnsigned: true)
!7924 = !DIEnumerator(name: "XM_MD_RX_CRCE", value: 256, isUnsigned: true)
!7925 = !DIEnumerator(name: "XM_MD_RX_ERR", value: 128, isUnsigned: true)
!7926 = !DIEnumerator(name: "XM_MD_DIS_UC", value: 64, isUnsigned: true)
!7927 = !DIEnumerator(name: "XM_MD_DIS_MC", value: 32, isUnsigned: true)
!7928 = !DIEnumerator(name: "XM_MD_DIS_BC", value: 16, isUnsigned: true)
!7929 = !DIEnumerator(name: "XM_MD_ENA_PROM", value: 8, isUnsigned: true)
!7930 = !DIEnumerator(name: "XM_MD_ENA_BE", value: 4, isUnsigned: true)
!7931 = !DIEnumerator(name: "XM_MD_FTF", value: 2, isUnsigned: true)
!7932 = !DIEnumerator(name: "XM_MD_FRF", value: 1, isUnsigned: true)
!7933 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !7053, line: 563, baseType: !7, size: 32, elements: !7934)
!7934 = !{!7935, !7936, !7937, !7938, !7939, !7940, !7941, !7942, !7943, !7944, !7945, !7946, !7947, !7948, !7949}
!7935 = !DIEnumerator(name: "MFF_ENA_RDY_PAT", value: 8192, isUnsigned: true)
!7936 = !DIEnumerator(name: "MFF_DIS_RDY_PAT", value: 4096, isUnsigned: true)
!7937 = !DIEnumerator(name: "MFF_ENA_TIM_PAT", value: 2048, isUnsigned: true)
!7938 = !DIEnumerator(name: "MFF_DIS_TIM_PAT", value: 1024, isUnsigned: true)
!7939 = !DIEnumerator(name: "MFF_ENA_ALM_FUL", value: 512, isUnsigned: true)
!7940 = !DIEnumerator(name: "MFF_DIS_ALM_FUL", value: 256, isUnsigned: true)
!7941 = !DIEnumerator(name: "MFF_ENA_PAUSE", value: 128, isUnsigned: true)
!7942 = !DIEnumerator(name: "MFF_DIS_PAUSE", value: 64, isUnsigned: true)
!7943 = !DIEnumerator(name: "MFF_ENA_FLUSH", value: 32, isUnsigned: true)
!7944 = !DIEnumerator(name: "MFF_DIS_FLUSH", value: 16, isUnsigned: true)
!7945 = !DIEnumerator(name: "MFF_ENA_TIST", value: 8, isUnsigned: true)
!7946 = !DIEnumerator(name: "MFF_DIS_TIST", value: 4, isUnsigned: true)
!7947 = !DIEnumerator(name: "MFF_CLR_INTIST", value: 2, isUnsigned: true)
!7948 = !DIEnumerator(name: "MFF_CLR_INSTAT", value: 1, isUnsigned: true)
!7949 = !DIEnumerator(name: "MFF_RX_CTRL_DEF", value: 2048, isUnsigned: true)
!7950 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !7053, line: 1211, baseType: !7, size: 32, elements: !7951)
!7951 = !{!7952, !7953, !7954, !7955, !7956, !7957, !7958, !7959, !7960, !7961}
!7952 = !DIEnumerator(name: "PHY_B_FC_CTR", value: 255, isUnsigned: true)
!7953 = !DIEnumerator(name: "PHY_B_RC_LOC_MSK", value: 65280, isUnsigned: true)
!7954 = !DIEnumerator(name: "PHY_B_RC_REM_MSK", value: 255, isUnsigned: true)
!7955 = !DIEnumerator(name: "PHY_B_AC_L_SQE", value: 32768, isUnsigned: true)
!7956 = !DIEnumerator(name: "PHY_B_AC_LONG_PACK", value: 16384, isUnsigned: true)
!7957 = !DIEnumerator(name: "PHY_B_AC_ER_CTRL", value: 12288, isUnsigned: true)
!7958 = !DIEnumerator(name: "PHY_B_AC_TX_TST", value: 1024, isUnsigned: true)
!7959 = !DIEnumerator(name: "PHY_B_AC_DIS_PRF", value: 128, isUnsigned: true)
!7960 = !DIEnumerator(name: "PHY_B_AC_DIS_PM", value: 32, isUnsigned: true)
!7961 = !DIEnumerator(name: "PHY_B_AC_DIAG", value: 8, isUnsigned: true)
!7962 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !7053, line: 239, baseType: !7, size: 32, elements: !7963)
!7963 = !{!7964, !7965, !7966, !7967, !7968, !7969, !7970, !7971}
!7964 = !DIEnumerator(name: "TST_FRC_DPERR_MR", value: 128, isUnsigned: true)
!7965 = !DIEnumerator(name: "TST_FRC_DPERR_MW", value: 64, isUnsigned: true)
!7966 = !DIEnumerator(name: "TST_FRC_DPERR_TR", value: 32, isUnsigned: true)
!7967 = !DIEnumerator(name: "TST_FRC_DPERR_TW", value: 16, isUnsigned: true)
!7968 = !DIEnumerator(name: "TST_FRC_APERR_M", value: 8, isUnsigned: true)
!7969 = !DIEnumerator(name: "TST_FRC_APERR_T", value: 4, isUnsigned: true)
!7970 = !DIEnumerator(name: "TST_CFG_WRITE_ON", value: 2, isUnsigned: true)
!7971 = !DIEnumerator(name: "TST_CFG_WRITE_OFF", value: 1, isUnsigned: true)
!7972 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !7053, line: 524, baseType: !7, size: 32, elements: !7973)
!7973 = !{!7974, !7975, !7976}
!7974 = !DIEnumerator(name: "PHY_ADDR_XMAC", value: 0, isUnsigned: true)
!7975 = !DIEnumerator(name: "PHY_ADDR_BCOM", value: 256, isUnsigned: true)
!7976 = !DIEnumerator(name: "PHY_ADDR_MARV", value: 0, isUnsigned: true)
!7977 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !7053, line: 251, baseType: !7, size: 32, elements: !7978)
!7978 = !{!7979, !7980, !7981}
!7979 = !DIEnumerator(name: "CFG_CHIP_R_MSK", value: 240, isUnsigned: true)
!7980 = !DIEnumerator(name: "CFG_DIS_M2_CLK", value: 2, isUnsigned: true)
!7981 = !DIEnumerator(name: "CFG_SNG_MAC", value: 1, isUnsigned: true)
!7982 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !7053, line: 216, baseType: !7, size: 32, elements: !7983)
!7983 = !{!7984, !7985, !7986, !7987, !7988, !7989, !7990, !7991, !7992, !7993, !7994, !7995, !7996, !7997, !7998}
!7984 = !DIEnumerator(name: "IS_IRQ_TIST_OV", value: 8192, isUnsigned: true)
!7985 = !DIEnumerator(name: "IS_IRQ_SENSOR", value: 4096, isUnsigned: true)
!7986 = !DIEnumerator(name: "IS_IRQ_MST_ERR", value: 2048, isUnsigned: true)
!7987 = !DIEnumerator(name: "IS_IRQ_STAT", value: 1024, isUnsigned: true)
!7988 = !DIEnumerator(name: "IS_NO_STAT_M1", value: 512, isUnsigned: true)
!7989 = !DIEnumerator(name: "IS_NO_STAT_M2", value: 256, isUnsigned: true)
!7990 = !DIEnumerator(name: "IS_NO_TIST_M1", value: 128, isUnsigned: true)
!7991 = !DIEnumerator(name: "IS_NO_TIST_M2", value: 64, isUnsigned: true)
!7992 = !DIEnumerator(name: "IS_RAM_RD_PAR", value: 32, isUnsigned: true)
!7993 = !DIEnumerator(name: "IS_RAM_WR_PAR", value: 16, isUnsigned: true)
!7994 = !DIEnumerator(name: "IS_M1_PAR_ERR", value: 8, isUnsigned: true)
!7995 = !DIEnumerator(name: "IS_M2_PAR_ERR", value: 4, isUnsigned: true)
!7996 = !DIEnumerator(name: "IS_R1_PAR_ERR", value: 2, isUnsigned: true)
!7997 = !DIEnumerator(name: "IS_R2_PAR_ERR", value: 1, isUnsigned: true)
!7998 = !DIEnumerator(name: "IS_ERR_MSK", value: 3135, isUnsigned: true)
!7999 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !7053, line: 274, baseType: !7, size: 32, elements: !8000)
!8000 = !{!8001, !8002, !8003}
!8001 = !DIEnumerator(name: "TIM_START", value: 4, isUnsigned: true)
!8002 = !DIEnumerator(name: "TIM_STOP", value: 2, isUnsigned: true)
!8003 = !DIEnumerator(name: "TIM_CLR_IRQ", value: 1, isUnsigned: true)
!8004 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !7053, line: 433, baseType: !7, size: 32, elements: !8005)
!8005 = !{!8006, !8007, !8008, !8009, !8010, !8011, !8012}
!8006 = !DIEnumerator(name: "TXA_ITI_INI", value: 512, isUnsigned: true)
!8007 = !DIEnumerator(name: "TXA_ITI_VAL", value: 516, isUnsigned: true)
!8008 = !DIEnumerator(name: "TXA_LIM_INI", value: 520, isUnsigned: true)
!8009 = !DIEnumerator(name: "TXA_LIM_VAL", value: 524, isUnsigned: true)
!8010 = !DIEnumerator(name: "TXA_CTRL", value: 528, isUnsigned: true)
!8011 = !DIEnumerator(name: "TXA_TEST", value: 529, isUnsigned: true)
!8012 = !DIEnumerator(name: "TXA_STAT", value: 530, isUnsigned: true)
!8013 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !7053, line: 418, baseType: !7, size: 32, elements: !8014)
!8014 = !{!8015, !8016, !8017, !8018, !8019, !8020, !8021, !8022}
!8015 = !DIEnumerator(name: "TXA_ENA_FSYNC", value: 128, isUnsigned: true)
!8016 = !DIEnumerator(name: "TXA_DIS_FSYNC", value: 64, isUnsigned: true)
!8017 = !DIEnumerator(name: "TXA_ENA_ALLOC", value: 32, isUnsigned: true)
!8018 = !DIEnumerator(name: "TXA_DIS_ALLOC", value: 16, isUnsigned: true)
!8019 = !DIEnumerator(name: "TXA_START_RC", value: 8, isUnsigned: true)
!8020 = !DIEnumerator(name: "TXA_STOP_RC", value: 4, isUnsigned: true)
!8021 = !DIEnumerator(name: "TXA_ENA_ARB", value: 2, isUnsigned: true)
!8022 = !DIEnumerator(name: "TXA_DIS_ARB", value: 1, isUnsigned: true)
!8023 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !7053, line: 362, baseType: !7, size: 32, elements: !8024)
!8024 = !{!8025, !8026, !8027, !8028}
!8025 = !DIEnumerator(name: "RI_CLR_RD_PERR", value: 512, isUnsigned: true)
!8026 = !DIEnumerator(name: "RI_CLR_WR_PERR", value: 256, isUnsigned: true)
!8027 = !DIEnumerator(name: "RI_RST_CLR", value: 2, isUnsigned: true)
!8028 = !DIEnumerator(name: "RI_RST_SET", value: 1, isUnsigned: true)
!8029 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !7053, line: 339, baseType: !7, size: 32, elements: !8030)
!8030 = !{!8031, !8032}
!8031 = !DIEnumerator(name: "BSC_START", value: 2, isUnsigned: true)
!8032 = !DIEnumerator(name: "BSC_STOP", value: 1, isUnsigned: true)
!8033 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !7053, line: 372, baseType: !7, size: 32, elements: !8034)
!8034 = !{!8035, !8036, !8037, !8038}
!8035 = !DIEnumerator(name: "MA_FOE_ON", value: 8, isUnsigned: true)
!8036 = !DIEnumerator(name: "MA_FOE_OFF", value: 4, isUnsigned: true)
!8037 = !DIEnumerator(name: "MA_RST_CLR", value: 2, isUnsigned: true)
!8038 = !DIEnumerator(name: "MA_RST_SET", value: 1, isUnsigned: true)
!8039 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !7053, line: 388, baseType: !7, size: 32, elements: !8040)
!8040 = !{!8041, !8042, !8043, !8044, !8045, !8046, !8047, !8048, !8049, !8050, !8051, !8052, !8053, !8054}
!8041 = !DIEnumerator(name: "PA_CLR_TO_TX2", value: 8192, isUnsigned: true)
!8042 = !DIEnumerator(name: "PA_CLR_TO_TX1", value: 4096, isUnsigned: true)
!8043 = !DIEnumerator(name: "PA_CLR_TO_RX2", value: 2048, isUnsigned: true)
!8044 = !DIEnumerator(name: "PA_CLR_TO_RX1", value: 1024, isUnsigned: true)
!8045 = !DIEnumerator(name: "PA_ENA_TO_TX2", value: 512, isUnsigned: true)
!8046 = !DIEnumerator(name: "PA_DIS_TO_TX2", value: 256, isUnsigned: true)
!8047 = !DIEnumerator(name: "PA_ENA_TO_TX1", value: 128, isUnsigned: true)
!8048 = !DIEnumerator(name: "PA_DIS_TO_TX1", value: 64, isUnsigned: true)
!8049 = !DIEnumerator(name: "PA_ENA_TO_RX2", value: 32, isUnsigned: true)
!8050 = !DIEnumerator(name: "PA_DIS_TO_RX2", value: 16, isUnsigned: true)
!8051 = !DIEnumerator(name: "PA_ENA_TO_RX1", value: 8, isUnsigned: true)
!8052 = !DIEnumerator(name: "PA_DIS_TO_RX1", value: 4, isUnsigned: true)
!8053 = !DIEnumerator(name: "PA_RST_CLR", value: 2, isUnsigned: true)
!8054 = !DIEnumerator(name: "PA_RST_SET", value: 1, isUnsigned: true)
!8055 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !7053, line: 2165, baseType: !7, size: 32, elements: !8056)
!8056 = !{!8057, !8058, !8059, !8060, !8061}
!8057 = !DIEnumerator(name: "XM_GP_ANIP", value: 64, isUnsigned: true)
!8058 = !DIEnumerator(name: "XM_GP_FRC_INT", value: 32, isUnsigned: true)
!8059 = !DIEnumerator(name: "XM_GP_RES_MAC", value: 8, isUnsigned: true)
!8060 = !DIEnumerator(name: "XM_GP_RES_STAT", value: 4, isUnsigned: true)
!8061 = !DIEnumerator(name: "XM_GP_INP_ASS", value: 1, isUnsigned: true)
!8062 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !7053, line: 1764, baseType: !7, size: 32, elements: !8063)
!8063 = !{!8064, !8065, !8066, !8067}
!8064 = !DIEnumerator(name: "GM_RXCR_UCF_ENA", value: 32768, isUnsigned: true)
!8065 = !DIEnumerator(name: "GM_RXCR_MCF_ENA", value: 16384, isUnsigned: true)
!8066 = !DIEnumerator(name: "GM_RXCR_CRC_DIS", value: 8192, isUnsigned: true)
!8067 = !DIEnumerator(name: "GM_RXCR_PASS_FC", value: 4096, isUnsigned: true)
!8068 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !330, line: 14, baseType: !7, size: 32, elements: !8069)
!8069 = !{!8070, !8071, !8072, !8073, !8074, !8075, !8076, !8077, !8078, !8079, !8080, !8081, !8082, !8083, !8084, !8085, !8086, !8087, !8088, !8089, !8090, !8091, !8092, !8093, !8094, !8095, !8096, !8097, !8098, !8099, !8100, !8101, !8102, !8103, !8104, !8105, !8106, !8107, !8108, !8109, !8110, !8111, !8112, !8113, !8114, !8115, !8116, !8117, !8118, !8119, !8120, !8121, !8122, !8123, !8124, !8125, !8126, !8127, !8128, !8129, !8130, !8131}
!8070 = !DIEnumerator(name: "NETIF_F_SG_BIT", value: 0, isUnsigned: true)
!8071 = !DIEnumerator(name: "NETIF_F_IP_CSUM_BIT", value: 1, isUnsigned: true)
!8072 = !DIEnumerator(name: "__UNUSED_NETIF_F_1", value: 2, isUnsigned: true)
!8073 = !DIEnumerator(name: "NETIF_F_HW_CSUM_BIT", value: 3, isUnsigned: true)
!8074 = !DIEnumerator(name: "NETIF_F_IPV6_CSUM_BIT", value: 4, isUnsigned: true)
!8075 = !DIEnumerator(name: "NETIF_F_HIGHDMA_BIT", value: 5, isUnsigned: true)
!8076 = !DIEnumerator(name: "NETIF_F_FRAGLIST_BIT", value: 6, isUnsigned: true)
!8077 = !DIEnumerator(name: "NETIF_F_HW_VLAN_CTAG_TX_BIT", value: 7, isUnsigned: true)
!8078 = !DIEnumerator(name: "NETIF_F_HW_VLAN_CTAG_RX_BIT", value: 8, isUnsigned: true)
!8079 = !DIEnumerator(name: "NETIF_F_HW_VLAN_CTAG_FILTER_BIT", value: 9, isUnsigned: true)
!8080 = !DIEnumerator(name: "NETIF_F_VLAN_CHALLENGED_BIT", value: 10, isUnsigned: true)
!8081 = !DIEnumerator(name: "NETIF_F_GSO_BIT", value: 11, isUnsigned: true)
!8082 = !DIEnumerator(name: "NETIF_F_LLTX_BIT", value: 12, isUnsigned: true)
!8083 = !DIEnumerator(name: "NETIF_F_NETNS_LOCAL_BIT", value: 13, isUnsigned: true)
!8084 = !DIEnumerator(name: "NETIF_F_GRO_BIT", value: 14, isUnsigned: true)
!8085 = !DIEnumerator(name: "NETIF_F_LRO_BIT", value: 15, isUnsigned: true)
!8086 = !DIEnumerator(name: "NETIF_F_GSO_SHIFT", value: 16, isUnsigned: true)
!8087 = !DIEnumerator(name: "NETIF_F_TSO_BIT", value: 16, isUnsigned: true)
!8088 = !DIEnumerator(name: "NETIF_F_GSO_ROBUST_BIT", value: 17, isUnsigned: true)
!8089 = !DIEnumerator(name: "NETIF_F_TSO_ECN_BIT", value: 18, isUnsigned: true)
!8090 = !DIEnumerator(name: "NETIF_F_TSO_MANGLEID_BIT", value: 19, isUnsigned: true)
!8091 = !DIEnumerator(name: "NETIF_F_TSO6_BIT", value: 20, isUnsigned: true)
!8092 = !DIEnumerator(name: "NETIF_F_FSO_BIT", value: 21, isUnsigned: true)
!8093 = !DIEnumerator(name: "NETIF_F_GSO_GRE_BIT", value: 22, isUnsigned: true)
!8094 = !DIEnumerator(name: "NETIF_F_GSO_GRE_CSUM_BIT", value: 23, isUnsigned: true)
!8095 = !DIEnumerator(name: "NETIF_F_GSO_IPXIP4_BIT", value: 24, isUnsigned: true)
!8096 = !DIEnumerator(name: "NETIF_F_GSO_IPXIP6_BIT", value: 25, isUnsigned: true)
!8097 = !DIEnumerator(name: "NETIF_F_GSO_UDP_TUNNEL_BIT", value: 26, isUnsigned: true)
!8098 = !DIEnumerator(name: "NETIF_F_GSO_UDP_TUNNEL_CSUM_BIT", value: 27, isUnsigned: true)
!8099 = !DIEnumerator(name: "NETIF_F_GSO_PARTIAL_BIT", value: 28, isUnsigned: true)
!8100 = !DIEnumerator(name: "NETIF_F_GSO_TUNNEL_REMCSUM_BIT", value: 29, isUnsigned: true)
!8101 = !DIEnumerator(name: "NETIF_F_GSO_SCTP_BIT", value: 30, isUnsigned: true)
!8102 = !DIEnumerator(name: "NETIF_F_GSO_ESP_BIT", value: 31, isUnsigned: true)
!8103 = !DIEnumerator(name: "NETIF_F_GSO_UDP_BIT", value: 32, isUnsigned: true)
!8104 = !DIEnumerator(name: "NETIF_F_GSO_UDP_L4_BIT", value: 33, isUnsigned: true)
!8105 = !DIEnumerator(name: "NETIF_F_GSO_FRAGLIST_BIT", value: 34, isUnsigned: true)
!8106 = !DIEnumerator(name: "NETIF_F_GSO_LAST", value: 34, isUnsigned: true)
!8107 = !DIEnumerator(name: "NETIF_F_FCOE_CRC_BIT", value: 35, isUnsigned: true)
!8108 = !DIEnumerator(name: "NETIF_F_SCTP_CRC_BIT", value: 36, isUnsigned: true)
!8109 = !DIEnumerator(name: "NETIF_F_FCOE_MTU_BIT", value: 37, isUnsigned: true)
!8110 = !DIEnumerator(name: "NETIF_F_NTUPLE_BIT", value: 38, isUnsigned: true)
!8111 = !DIEnumerator(name: "NETIF_F_RXHASH_BIT", value: 39, isUnsigned: true)
!8112 = !DIEnumerator(name: "NETIF_F_RXCSUM_BIT", value: 40, isUnsigned: true)
!8113 = !DIEnumerator(name: "NETIF_F_NOCACHE_COPY_BIT", value: 41, isUnsigned: true)
!8114 = !DIEnumerator(name: "NETIF_F_LOOPBACK_BIT", value: 42, isUnsigned: true)
!8115 = !DIEnumerator(name: "NETIF_F_RXFCS_BIT", value: 43, isUnsigned: true)
!8116 = !DIEnumerator(name: "NETIF_F_RXALL_BIT", value: 44, isUnsigned: true)
!8117 = !DIEnumerator(name: "NETIF_F_HW_VLAN_STAG_TX_BIT", value: 45, isUnsigned: true)
!8118 = !DIEnumerator(name: "NETIF_F_HW_VLAN_STAG_RX_BIT", value: 46, isUnsigned: true)
!8119 = !DIEnumerator(name: "NETIF_F_HW_VLAN_STAG_FILTER_BIT", value: 47, isUnsigned: true)
!8120 = !DIEnumerator(name: "NETIF_F_HW_L2FW_DOFFLOAD_BIT", value: 48, isUnsigned: true)
!8121 = !DIEnumerator(name: "NETIF_F_HW_TC_BIT", value: 49, isUnsigned: true)
!8122 = !DIEnumerator(name: "NETIF_F_HW_ESP_BIT", value: 50, isUnsigned: true)
!8123 = !DIEnumerator(name: "NETIF_F_HW_ESP_TX_CSUM_BIT", value: 51, isUnsigned: true)
!8124 = !DIEnumerator(name: "NETIF_F_RX_UDP_TUNNEL_PORT_BIT", value: 52, isUnsigned: true)
!8125 = !DIEnumerator(name: "NETIF_F_HW_TLS_TX_BIT", value: 53, isUnsigned: true)
!8126 = !DIEnumerator(name: "NETIF_F_HW_TLS_RX_BIT", value: 54, isUnsigned: true)
!8127 = !DIEnumerator(name: "NETIF_F_GRO_HW_BIT", value: 55, isUnsigned: true)
!8128 = !DIEnumerator(name: "NETIF_F_HW_TLS_RECORD_BIT", value: 56, isUnsigned: true)
!8129 = !DIEnumerator(name: "NETIF_F_GRO_FRAGLIST_BIT", value: 57, isUnsigned: true)
!8130 = !DIEnumerator(name: "NETIF_F_HW_MACSEC_BIT", value: 58, isUnsigned: true)
!8131 = !DIEnumerator(name: "NETDEV_FEATURE_COUNT", value: 59, isUnsigned: true)
!8132 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !7053, line: 457, baseType: !7, size: 32, elements: !8133)
!8133 = !{!8134, !8135, !8136, !8137, !8138, !8139, !8140, !8141, !8142, !8143, !8144, !8145, !8146, !8147, !8148, !8149}
!8134 = !DIEnumerator(name: "B8_Q_REGS", value: 1024, isUnsigned: true)
!8135 = !DIEnumerator(name: "Q_D", value: 0, isUnsigned: true)
!8136 = !DIEnumerator(name: "Q_DA_L", value: 32, isUnsigned: true)
!8137 = !DIEnumerator(name: "Q_DA_H", value: 36, isUnsigned: true)
!8138 = !DIEnumerator(name: "Q_AC_L", value: 40, isUnsigned: true)
!8139 = !DIEnumerator(name: "Q_AC_H", value: 44, isUnsigned: true)
!8140 = !DIEnumerator(name: "Q_BC", value: 48, isUnsigned: true)
!8141 = !DIEnumerator(name: "Q_CSR", value: 52, isUnsigned: true)
!8142 = !DIEnumerator(name: "Q_F", value: 56, isUnsigned: true)
!8143 = !DIEnumerator(name: "Q_T1", value: 60, isUnsigned: true)
!8144 = !DIEnumerator(name: "Q_T1_TR", value: 60, isUnsigned: true)
!8145 = !DIEnumerator(name: "Q_T1_WR", value: 61, isUnsigned: true)
!8146 = !DIEnumerator(name: "Q_T1_RD", value: 62, isUnsigned: true)
!8147 = !DIEnumerator(name: "Q_T1_SV", value: 63, isUnsigned: true)
!8148 = !DIEnumerator(name: "Q_T2", value: 64, isUnsigned: true)
!8149 = !DIEnumerator(name: "Q_T3", value: 68, isUnsigned: true)
!8150 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !7053, line: 705, baseType: !7, size: 32, elements: !8151)
!8151 = !{!8152, !8153, !8154, !8155, !8156, !8157, !8158, !8159, !8160, !8161, !8162, !8163, !8164, !8165, !8166, !8167, !8168, !8169, !8170, !8171, !8172, !8173, !8174}
!8152 = !DIEnumerator(name: "CSR_SV_IDLE", value: 16777216, isUnsigned: true)
!8153 = !DIEnumerator(name: "CSR_DESC_CLR", value: 2097152, isUnsigned: true)
!8154 = !DIEnumerator(name: "CSR_DESC_SET", value: 1048576, isUnsigned: true)
!8155 = !DIEnumerator(name: "CSR_FIFO_CLR", value: 524288, isUnsigned: true)
!8156 = !DIEnumerator(name: "CSR_FIFO_SET", value: 262144, isUnsigned: true)
!8157 = !DIEnumerator(name: "CSR_HPI_RUN", value: 131072, isUnsigned: true)
!8158 = !DIEnumerator(name: "CSR_HPI_RST", value: 65536, isUnsigned: true)
!8159 = !DIEnumerator(name: "CSR_SV_RUN", value: 32768, isUnsigned: true)
!8160 = !DIEnumerator(name: "CSR_SV_RST", value: 16384, isUnsigned: true)
!8161 = !DIEnumerator(name: "CSR_DREAD_RUN", value: 8192, isUnsigned: true)
!8162 = !DIEnumerator(name: "CSR_DREAD_RST", value: 4096, isUnsigned: true)
!8163 = !DIEnumerator(name: "CSR_DWRITE_RUN", value: 2048, isUnsigned: true)
!8164 = !DIEnumerator(name: "CSR_DWRITE_RST", value: 1024, isUnsigned: true)
!8165 = !DIEnumerator(name: "CSR_TRANS_RUN", value: 512, isUnsigned: true)
!8166 = !DIEnumerator(name: "CSR_TRANS_RST", value: 256, isUnsigned: true)
!8167 = !DIEnumerator(name: "CSR_ENA_POL", value: 128, isUnsigned: true)
!8168 = !DIEnumerator(name: "CSR_DIS_POL", value: 64, isUnsigned: true)
!8169 = !DIEnumerator(name: "CSR_STOP", value: 32, isUnsigned: true)
!8170 = !DIEnumerator(name: "CSR_START", value: 16, isUnsigned: true)
!8171 = !DIEnumerator(name: "CSR_IRQ_CL_P", value: 8, isUnsigned: true)
!8172 = !DIEnumerator(name: "CSR_IRQ_CL_B", value: 4, isUnsigned: true)
!8173 = !DIEnumerator(name: "CSR_IRQ_CL_F", value: 2, isUnsigned: true)
!8174 = !DIEnumerator(name: "CSR_IRQ_CL_C", value: 1, isUnsigned: true)
!8175 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "led_mode", file: !3, line: 680, baseType: !7, size: 32, elements: !8176)
!8176 = !{!8177, !8178, !8179}
!8177 = !DIEnumerator(name: "LED_MODE_OFF", value: 0, isUnsigned: true)
!8178 = !DIEnumerator(name: "LED_MODE_ON", value: 1, isUnsigned: true)
!8179 = !DIEnumerator(name: "LED_MODE_TST", value: 2, isUnsigned: true)
!8180 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dma_data_direction", file: !8181, line: 5, baseType: !7, size: 32, elements: !8182)
!8181 = !DIFile(filename: "./include/linux/dma-direction.h", directory: "/home/lizy2001/genbc/linux")
!8182 = !{!8183, !8184, !8185, !8186}
!8183 = !DIEnumerator(name: "DMA_BIDIRECTIONAL", value: 0, isUnsigned: true)
!8184 = !DIEnumerator(name: "DMA_TO_DEVICE", value: 1, isUnsigned: true)
!8185 = !DIEnumerator(name: "DMA_FROM_DEVICE", value: 2, isUnsigned: true)
!8186 = !DIEnumerator(name: "DMA_NONE", value: 3, isUnsigned: true)
!8187 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !7053, line: 317, baseType: !32, size: 32, elements: !8188)
!8188 = !{!8189, !8190, !8191, !8192, !8193, !8194, !8195, !8196, !8197, !8198, !8199, !8200, !8201, !8202, !8203}
!8189 = !DIEnumerator(name: "BMU_OWN", value: -2147483648)
!8190 = !DIEnumerator(name: "BMU_STF", value: 1073741824)
!8191 = !DIEnumerator(name: "BMU_EOF", value: 536870912)
!8192 = !DIEnumerator(name: "BMU_IRQ_EOB", value: 268435456)
!8193 = !DIEnumerator(name: "BMU_IRQ_EOF", value: 134217728)
!8194 = !DIEnumerator(name: "BMU_STFWD", value: 67108864)
!8195 = !DIEnumerator(name: "BMU_NO_FCS", value: 33554432)
!8196 = !DIEnumerator(name: "BMU_SW", value: 16777216)
!8197 = !DIEnumerator(name: "BMU_DEV_0", value: 67108864)
!8198 = !DIEnumerator(name: "BMU_STAT_VAL", value: 33554432)
!8199 = !DIEnumerator(name: "BMU_TIST_VAL", value: 16777216)
!8200 = !DIEnumerator(name: "BMU_CHECK", value: 5570560)
!8201 = !DIEnumerator(name: "BMU_TCP_CHECK", value: 5636096)
!8202 = !DIEnumerator(name: "BMU_UDP_CHECK", value: 5701632)
!8203 = !DIEnumerator(name: "BMU_BBC", value: 65535)
!8204 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !7053, line: 777, baseType: !7, size: 32, elements: !8205)
!8205 = !{!8206, !8207, !8208, !8209, !8210, !8211, !8212, !8213, !8214, !8215, !8216, !8217, !8218, !8219, !8220}
!8206 = !DIEnumerator(name: "TX_MFF_EA", value: 3328, isUnsigned: true)
!8207 = !DIEnumerator(name: "TX_MFF_WP", value: 3332, isUnsigned: true)
!8208 = !DIEnumerator(name: "TX_MFF_WSP", value: 3336, isUnsigned: true)
!8209 = !DIEnumerator(name: "TX_MFF_RP", value: 3340, isUnsigned: true)
!8210 = !DIEnumerator(name: "TX_MFF_PC", value: 3344, isUnsigned: true)
!8211 = !DIEnumerator(name: "TX_MFF_LEV", value: 3348, isUnsigned: true)
!8212 = !DIEnumerator(name: "TX_MFF_CTRL1", value: 3352, isUnsigned: true)
!8213 = !DIEnumerator(name: "TX_MFF_WAF", value: 3354, isUnsigned: true)
!8214 = !DIEnumerator(name: "TX_MFF_CTRL2", value: 3356, isUnsigned: true)
!8215 = !DIEnumerator(name: "TX_MFF_TST1", value: 3357, isUnsigned: true)
!8216 = !DIEnumerator(name: "TX_MFF_TST2", value: 3358, isUnsigned: true)
!8217 = !DIEnumerator(name: "TX_LED_INI", value: 3360, isUnsigned: true)
!8218 = !DIEnumerator(name: "TX_LED_VAL", value: 3364, isUnsigned: true)
!8219 = !DIEnumerator(name: "TX_LED_CTRL", value: 3368, isUnsigned: true)
!8220 = !DIEnumerator(name: "TX_LED_TST", value: 3369, isUnsigned: true)
!8221 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !7053, line: 582, baseType: !7, size: 32, elements: !8222)
!8222 = !{!8223, !8224, !8225, !8226, !8227, !8228, !8229, !8230, !8231, !8232}
!8223 = !DIEnumerator(name: "MFF_CLR_PERR", value: 32768, isUnsigned: true)
!8224 = !DIEnumerator(name: "MFF_ENA_PKT_REC", value: 8192, isUnsigned: true)
!8225 = !DIEnumerator(name: "MFF_DIS_PKT_REC", value: 4096, isUnsigned: true)
!8226 = !DIEnumerator(name: "MFF_ENA_W4E", value: 128, isUnsigned: true)
!8227 = !DIEnumerator(name: "MFF_DIS_W4E", value: 64, isUnsigned: true)
!8228 = !DIEnumerator(name: "MFF_ENA_LOOPB", value: 8, isUnsigned: true)
!8229 = !DIEnumerator(name: "MFF_DIS_LOOPB", value: 4, isUnsigned: true)
!8230 = !DIEnumerator(name: "MFF_CLR_MAC_RST", value: 2, isUnsigned: true)
!8231 = !DIEnumerator(name: "MFF_SET_MAC_RST", value: 1, isUnsigned: true)
!8232 = !DIEnumerator(name: "MFF_TX_CTRL_DEF", value: 10272, isUnsigned: true)
!8233 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !7053, line: 290, baseType: !7, size: 32, elements: !8234)
!8234 = !{!8235, !8236, !8237, !8238, !8239, !8240, !8241, !8242, !8243, !8244, !8245, !8246, !8247, !8248, !8249, !8250, !8251, !8252, !8253, !8254}
!8235 = !DIEnumerator(name: "GP_DIR_9", value: 33554432, isUnsigned: true)
!8236 = !DIEnumerator(name: "GP_DIR_8", value: 16777216, isUnsigned: true)
!8237 = !DIEnumerator(name: "GP_DIR_7", value: 8388608, isUnsigned: true)
!8238 = !DIEnumerator(name: "GP_DIR_6", value: 4194304, isUnsigned: true)
!8239 = !DIEnumerator(name: "GP_DIR_5", value: 2097152, isUnsigned: true)
!8240 = !DIEnumerator(name: "GP_DIR_4", value: 1048576, isUnsigned: true)
!8241 = !DIEnumerator(name: "GP_DIR_3", value: 524288, isUnsigned: true)
!8242 = !DIEnumerator(name: "GP_DIR_2", value: 262144, isUnsigned: true)
!8243 = !DIEnumerator(name: "GP_DIR_1", value: 131072, isUnsigned: true)
!8244 = !DIEnumerator(name: "GP_DIR_0", value: 65536, isUnsigned: true)
!8245 = !DIEnumerator(name: "GP_IO_9", value: 512, isUnsigned: true)
!8246 = !DIEnumerator(name: "GP_IO_8", value: 256, isUnsigned: true)
!8247 = !DIEnumerator(name: "GP_IO_7", value: 128, isUnsigned: true)
!8248 = !DIEnumerator(name: "GP_IO_6", value: 64, isUnsigned: true)
!8249 = !DIEnumerator(name: "GP_IO_5", value: 32, isUnsigned: true)
!8250 = !DIEnumerator(name: "GP_IO_4", value: 16, isUnsigned: true)
!8251 = !DIEnumerator(name: "GP_IO_3", value: 8, isUnsigned: true)
!8252 = !DIEnumerator(name: "GP_IO_2", value: 4, isUnsigned: true)
!8253 = !DIEnumerator(name: "GP_IO_1", value: 2, isUnsigned: true)
!8254 = !DIEnumerator(name: "GP_IO_0", value: 1, isUnsigned: true)
!8255 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !7053, line: 2197, baseType: !7, size: 32, elements: !8256)
!8256 = !{!8257, !8258, !8259}
!8257 = !DIEnumerator(name: "XM_HW_GEN_EOP", value: 8, isUnsigned: true)
!8258 = !DIEnumerator(name: "XM_HW_COM4SIG", value: 4, isUnsigned: true)
!8259 = !DIEnumerator(name: "XM_HW_GMII_MD", value: 1, isUnsigned: true)
!8260 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !7053, line: 2283, baseType: !7, size: 32, elements: !8261)
!8261 = !{!8262, !8263, !8264, !8265, !8266, !8267}
!8262 = !DIEnumerator(name: "XM_SC_SNP_RXC", value: 32, isUnsigned: true)
!8263 = !DIEnumerator(name: "XM_SC_SNP_TXC", value: 16, isUnsigned: true)
!8264 = !DIEnumerator(name: "XM_SC_CP_RXC", value: 8, isUnsigned: true)
!8265 = !DIEnumerator(name: "XM_SC_CP_TXC", value: 4, isUnsigned: true)
!8266 = !DIEnumerator(name: "XM_SC_CLR_RXC", value: 2, isUnsigned: true)
!8267 = !DIEnumerator(name: "XM_SC_CLR_TXC", value: 1, isUnsigned: true)
!8268 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !7053, line: 2149, baseType: !7, size: 32, elements: !8269)
!8269 = !{!8270, !8271, !8272, !8273, !8274, !8275, !8276, !8277, !8278}
!8270 = !DIEnumerator(name: "XM_RX_LENERR_OK", value: 256, isUnsigned: true)
!8271 = !DIEnumerator(name: "XM_RX_BIG_PK_OK", value: 128, isUnsigned: true)
!8272 = !DIEnumerator(name: "XM_RX_IPG_CAP", value: 64, isUnsigned: true)
!8273 = !DIEnumerator(name: "XM_RX_TP_MD", value: 32, isUnsigned: true)
!8274 = !DIEnumerator(name: "XM_RX_STRIP_FCS", value: 16, isUnsigned: true)
!8275 = !DIEnumerator(name: "XM_RX_SELF_RX", value: 8, isUnsigned: true)
!8276 = !DIEnumerator(name: "XM_RX_SAM_LINE", value: 4, isUnsigned: true)
!8277 = !DIEnumerator(name: "XM_RX_STRIP_PAD", value: 2, isUnsigned: true)
!8278 = !DIEnumerator(name: "XM_RX_DIS_CEXT", value: 1, isUnsigned: true)
!8279 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !7053, line: 2126, baseType: !7, size: 32, elements: !8280)
!8280 = !{!8281, !8282, !8283, !8284, !8285, !8286, !8287}
!8281 = !DIEnumerator(name: "XM_TX_BK2BK", value: 64, isUnsigned: true)
!8282 = !DIEnumerator(name: "XM_TX_ENC_BYP", value: 32, isUnsigned: true)
!8283 = !DIEnumerator(name: "XM_TX_SAM_LINE", value: 16, isUnsigned: true)
!8284 = !DIEnumerator(name: "XM_TX_NO_GIG_MD", value: 8, isUnsigned: true)
!8285 = !DIEnumerator(name: "XM_TX_NO_PRE", value: 4, isUnsigned: true)
!8286 = !DIEnumerator(name: "XM_TX_NO_CRC", value: 2, isUnsigned: true)
!8287 = !DIEnumerator(name: "XM_TX_AUTO_PAD", value: 1, isUnsigned: true)
!8288 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !7053, line: 2295, baseType: !32, size: 32, elements: !8289)
!8289 = !{!8290, !8291, !8292, !8293, !8294, !8295, !8296, !8297, !8298, !8299, !8300, !8301, !8302, !8303, !8304, !8305, !8306, !8307, !8308, !8309, !8310, !8311, !8312, !8313, !8314, !8315, !8316, !8317, !8318, !8319}
!8290 = !DIEnumerator(name: "XMR_MAX_SZ_OV", value: -2147483648)
!8291 = !DIEnumerator(name: "XMR_1023B_OV", value: 1073741824)
!8292 = !DIEnumerator(name: "XMR_511B_OV", value: 536870912)
!8293 = !DIEnumerator(name: "XMR_255B_OV", value: 268435456)
!8294 = !DIEnumerator(name: "XMR_127B_OV", value: 134217728)
!8295 = !DIEnumerator(name: "XMR_64B_OV", value: 67108864)
!8296 = !DIEnumerator(name: "XMR_UTIL_OV", value: 33554432)
!8297 = !DIEnumerator(name: "XMR_UTIL_UR", value: 16777216)
!8298 = !DIEnumerator(name: "XMR_CEX_ERR_OV", value: 8388608)
!8299 = !DIEnumerator(name: "XMR_FCS_ERR_OV", value: 2097152)
!8300 = !DIEnumerator(name: "XMR_LNG_ERR_OV", value: 1048576)
!8301 = !DIEnumerator(name: "XMR_RUNT_OV", value: 524288)
!8302 = !DIEnumerator(name: "XMR_SHT_ERR_OV", value: 262144)
!8303 = !DIEnumerator(name: "XMR_SYM_ERR_OV", value: 131072)
!8304 = !DIEnumerator(name: "XMR_CAR_ERR_OV", value: 32768)
!8305 = !DIEnumerator(name: "XMR_JAB_PKT_OV", value: 16384)
!8306 = !DIEnumerator(name: "XMR_FIFO_OV", value: 8192)
!8307 = !DIEnumerator(name: "XMR_FRA_ERR_OV", value: 4096)
!8308 = !DIEnumerator(name: "XMR_FMISS_OV", value: 2048)
!8309 = !DIEnumerator(name: "XMR_BURST", value: 1024)
!8310 = !DIEnumerator(name: "XMR_INV_MOC", value: 512)
!8311 = !DIEnumerator(name: "XMR_INV_MP", value: 256)
!8312 = !DIEnumerator(name: "XMR_MCTRL_OV", value: 128)
!8313 = !DIEnumerator(name: "XMR_MPAUSE_OV", value: 64)
!8314 = !DIEnumerator(name: "XMR_UC_OK_OV", value: 32)
!8315 = !DIEnumerator(name: "XMR_MC_OK_OV", value: 16)
!8316 = !DIEnumerator(name: "XMR_BC_OK_OV", value: 8)
!8317 = !DIEnumerator(name: "XMR_OK_LO_OV", value: 4)
!8318 = !DIEnumerator(name: "XMR_OK_HI_OV", value: 2)
!8319 = !DIEnumerator(name: "XMR_OK_OV", value: 1)
!8320 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !7053, line: 2332, baseType: !7, size: 32, elements: !8321)
!8321 = !{!8322, !8323, !8324, !8325, !8326, !8327, !8328, !8329, !8330, !8331, !8332, !8333, !8334, !8335, !8336, !8337, !8338, !8339, !8340, !8341, !8342, !8343, !8344, !8345, !8346, !8347}
!8322 = !DIEnumerator(name: "XMT_MAX_SZ_OV", value: 33554432, isUnsigned: true)
!8323 = !DIEnumerator(name: "XMT_1023B_OV", value: 16777216, isUnsigned: true)
!8324 = !DIEnumerator(name: "XMT_511B_OV", value: 8388608, isUnsigned: true)
!8325 = !DIEnumerator(name: "XMT_255B_OV", value: 4194304, isUnsigned: true)
!8326 = !DIEnumerator(name: "XMT_127B_OV", value: 2097152, isUnsigned: true)
!8327 = !DIEnumerator(name: "XMT_64B_OV", value: 1048576, isUnsigned: true)
!8328 = !DIEnumerator(name: "XMT_UTIL_OV", value: 524288, isUnsigned: true)
!8329 = !DIEnumerator(name: "XMT_UTIL_UR", value: 262144, isUnsigned: true)
!8330 = !DIEnumerator(name: "XMT_CS_ERR_OV", value: 131072, isUnsigned: true)
!8331 = !DIEnumerator(name: "XMT_FIFO_UR_OV", value: 65536, isUnsigned: true)
!8332 = !DIEnumerator(name: "XMT_EX_DEF_OV", value: 32768, isUnsigned: true)
!8333 = !DIEnumerator(name: "XMT_DEF", value: 16384, isUnsigned: true)
!8334 = !DIEnumerator(name: "XMT_LAT_COL_OV", value: 8192, isUnsigned: true)
!8335 = !DIEnumerator(name: "XMT_ABO_COL_OV", value: 4096, isUnsigned: true)
!8336 = !DIEnumerator(name: "XMT_MUL_COL_OV", value: 2048, isUnsigned: true)
!8337 = !DIEnumerator(name: "XMT_SNG_COL", value: 1024, isUnsigned: true)
!8338 = !DIEnumerator(name: "XMT_MCTRL_OV", value: 512, isUnsigned: true)
!8339 = !DIEnumerator(name: "XMT_MPAUSE", value: 256, isUnsigned: true)
!8340 = !DIEnumerator(name: "XMT_BURST", value: 128, isUnsigned: true)
!8341 = !DIEnumerator(name: "XMT_LONG", value: 64, isUnsigned: true)
!8342 = !DIEnumerator(name: "XMT_UC_OK_OV", value: 32, isUnsigned: true)
!8343 = !DIEnumerator(name: "XMT_MC_OK_OV", value: 16, isUnsigned: true)
!8344 = !DIEnumerator(name: "XMT_BC_OK_OV", value: 8, isUnsigned: true)
!8345 = !DIEnumerator(name: "XMT_OK_LO_OV", value: 4, isUnsigned: true)
!8346 = !DIEnumerator(name: "XMT_OK_HI_OV", value: 2, isUnsigned: true)
!8347 = !DIEnumerator(name: "XMT_OK_OV", value: 1, isUnsigned: true)
!8348 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !7053, line: 626, baseType: !7, size: 32, elements: !8349)
!8349 = !{!8350, !8351, !8352, !8353}
!8350 = !DIEnumerator(name: "MFF_ENA_OP_MD", value: 8, isUnsigned: true)
!8351 = !DIEnumerator(name: "MFF_DIS_OP_MD", value: 4, isUnsigned: true)
!8352 = !DIEnumerator(name: "MFF_RST_CLR", value: 2, isUnsigned: true)
!8353 = !DIEnumerator(name: "MFF_RST_SET", value: 1, isUnsigned: true)
!8354 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !7053, line: 1088, baseType: !7, size: 32, elements: !8355)
!8355 = !{!8356, !8357, !8358, !8359, !8360, !8361}
!8356 = !DIEnumerator(name: "PHY_X_AN_NXT_PG", value: 32768, isUnsigned: true)
!8357 = !DIEnumerator(name: "PHY_X_AN_ACK", value: 16384, isUnsigned: true)
!8358 = !DIEnumerator(name: "PHY_X_AN_RFB", value: 12288, isUnsigned: true)
!8359 = !DIEnumerator(name: "PHY_X_AN_PAUSE", value: 384, isUnsigned: true)
!8360 = !DIEnumerator(name: "PHY_X_AN_HD", value: 64, isUnsigned: true)
!8361 = !DIEnumerator(name: "PHY_X_AN_FD", value: 32, isUnsigned: true)
!8362 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !7053, line: 1163, baseType: !7, size: 32, elements: !8363)
!8363 = !{!8364, !8365, !8366, !8367, !8368, !8369, !8370, !8371, !8372, !8373, !8374, !8375, !8376, !8377, !8378, !8379}
!8364 = !DIEnumerator(name: "PHY_B_PEC_MAC_PHY", value: 32768, isUnsigned: true)
!8365 = !DIEnumerator(name: "PHY_B_PEC_DIS_CROSS", value: 16384, isUnsigned: true)
!8366 = !DIEnumerator(name: "PHY_B_PEC_TX_DIS", value: 8192, isUnsigned: true)
!8367 = !DIEnumerator(name: "PHY_B_PEC_INT_DIS", value: 4096, isUnsigned: true)
!8368 = !DIEnumerator(name: "PHY_B_PEC_F_INT", value: 2048, isUnsigned: true)
!8369 = !DIEnumerator(name: "PHY_B_PEC_BY_45", value: 1024, isUnsigned: true)
!8370 = !DIEnumerator(name: "PHY_B_PEC_BY_SCR", value: 512, isUnsigned: true)
!8371 = !DIEnumerator(name: "PHY_B_PEC_BY_MLT3", value: 256, isUnsigned: true)
!8372 = !DIEnumerator(name: "PHY_B_PEC_BY_RXA", value: 128, isUnsigned: true)
!8373 = !DIEnumerator(name: "PHY_B_PEC_RES_SCR", value: 64, isUnsigned: true)
!8374 = !DIEnumerator(name: "PHY_B_PEC_EN_LTR", value: 32, isUnsigned: true)
!8375 = !DIEnumerator(name: "PHY_B_PEC_LED_ON", value: 16, isUnsigned: true)
!8376 = !DIEnumerator(name: "PHY_B_PEC_LED_OFF", value: 8, isUnsigned: true)
!8377 = !DIEnumerator(name: "PHY_B_PEC_EX_IPG", value: 4, isUnsigned: true)
!8378 = !DIEnumerator(name: "PHY_B_PEC_3_LED", value: 2, isUnsigned: true)
!8379 = !DIEnumerator(name: "PHY_B_PEC_HIGH_LA", value: 1, isUnsigned: true)
!8380 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !7053, line: 1132, baseType: !7, size: 32, elements: !8381)
!8381 = !{!8382, !8383, !8384, !8385, !8386, !8387}
!8382 = !DIEnumerator(name: "PHY_B_1000C_TEST", value: 57344, isUnsigned: true)
!8383 = !DIEnumerator(name: "PHY_B_1000C_MSE", value: 4096, isUnsigned: true)
!8384 = !DIEnumerator(name: "PHY_B_1000C_MSC", value: 2048, isUnsigned: true)
!8385 = !DIEnumerator(name: "PHY_B_1000C_RD", value: 1024, isUnsigned: true)
!8386 = !DIEnumerator(name: "PHY_B_1000C_AFD", value: 512, isUnsigned: true)
!8387 = !DIEnumerator(name: "PHY_B_1000C_AHD", value: 256, isUnsigned: true)
!8388 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !7053, line: 259, baseType: !7, size: 32, elements: !8389)
!8389 = !{!8390, !8391, !8392, !8393, !8394, !8395, !8396, !8397, !8398}
!8390 = !DIEnumerator(name: "CHIP_ID_GENESIS", value: 10, isUnsigned: true)
!8391 = !DIEnumerator(name: "CHIP_ID_YUKON", value: 176, isUnsigned: true)
!8392 = !DIEnumerator(name: "CHIP_ID_YUKON_LITE", value: 177, isUnsigned: true)
!8393 = !DIEnumerator(name: "CHIP_ID_YUKON_LP", value: 178, isUnsigned: true)
!8394 = !DIEnumerator(name: "CHIP_ID_YUKON_XL", value: 179, isUnsigned: true)
!8395 = !DIEnumerator(name: "CHIP_ID_YUKON_EC", value: 182, isUnsigned: true)
!8396 = !DIEnumerator(name: "CHIP_ID_YUKON_FE", value: 183, isUnsigned: true)
!8397 = !DIEnumerator(name: "CHIP_REV_YU_LITE_A1", value: 3, isUnsigned: true)
!8398 = !DIEnumerator(name: "CHIP_REV_YU_LITE_A3", value: 7, isUnsigned: true)
!8399 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !7053, line: 1903, baseType: !7, size: 32, elements: !8400)
!8400 = !{!8401, !8402, !8403, !8404, !8405, !8406, !8407, !8408, !8409, !8410, !8411, !8412, !8413, !8414, !8415, !8416, !8417, !8418, !8419, !8420, !8421, !8422, !8423}
!8401 = !DIEnumerator(name: "GPC_SEL_BDT", value: 268435456, isUnsigned: true)
!8402 = !DIEnumerator(name: "GPC_INT_POL_HI", value: 134217728, isUnsigned: true)
!8403 = !DIEnumerator(name: "GPC_75_OHM", value: 67108864, isUnsigned: true)
!8404 = !DIEnumerator(name: "GPC_DIS_FC", value: 33554432, isUnsigned: true)
!8405 = !DIEnumerator(name: "GPC_DIS_SLEEP", value: 16777216, isUnsigned: true)
!8406 = !DIEnumerator(name: "GPC_HWCFG_M_3", value: 8388608, isUnsigned: true)
!8407 = !DIEnumerator(name: "GPC_HWCFG_M_2", value: 4194304, isUnsigned: true)
!8408 = !DIEnumerator(name: "GPC_HWCFG_M_1", value: 2097152, isUnsigned: true)
!8409 = !DIEnumerator(name: "GPC_HWCFG_M_0", value: 1048576, isUnsigned: true)
!8410 = !DIEnumerator(name: "GPC_ANEG_0", value: 524288, isUnsigned: true)
!8411 = !DIEnumerator(name: "GPC_ENA_XC", value: 262144, isUnsigned: true)
!8412 = !DIEnumerator(name: "GPC_DIS_125", value: 131072, isUnsigned: true)
!8413 = !DIEnumerator(name: "GPC_ANEG_3", value: 65536, isUnsigned: true)
!8414 = !DIEnumerator(name: "GPC_ANEG_2", value: 32768, isUnsigned: true)
!8415 = !DIEnumerator(name: "GPC_ANEG_1", value: 16384, isUnsigned: true)
!8416 = !DIEnumerator(name: "GPC_ENA_PAUSE", value: 8192, isUnsigned: true)
!8417 = !DIEnumerator(name: "GPC_PHYADDR_4", value: 4096, isUnsigned: true)
!8418 = !DIEnumerator(name: "GPC_PHYADDR_3", value: 2048, isUnsigned: true)
!8419 = !DIEnumerator(name: "GPC_PHYADDR_2", value: 1024, isUnsigned: true)
!8420 = !DIEnumerator(name: "GPC_PHYADDR_1", value: 512, isUnsigned: true)
!8421 = !DIEnumerator(name: "GPC_PHYADDR_0", value: 256, isUnsigned: true)
!8422 = !DIEnumerator(name: "GPC_RST_CLR", value: 2, isUnsigned: true)
!8423 = !DIEnumerator(name: "GPC_RST_SET", value: 1, isUnsigned: true)
!8424 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !7053, line: 1815, baseType: !7, size: 32, elements: !8425)
!8425 = !{!8426, !8427}
!8426 = !DIEnumerator(name: "GM_PAR_MIB_CLR", value: 32, isUnsigned: true)
!8427 = !DIEnumerator(name: "GM_PAR_MIB_TST", value: 16, isUnsigned: true)
!8428 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !7053, line: 1753, baseType: !7, size: 32, elements: !8429)
!8429 = !{!8430, !8431, !8432, !8433}
!8430 = !DIEnumerator(name: "GM_TXCR_FORCE_JAM", value: 32768, isUnsigned: true)
!8431 = !DIEnumerator(name: "GM_TXCR_CRC_DIS", value: 16384, isUnsigned: true)
!8432 = !DIEnumerator(name: "GM_TXCR_PAD_DIS", value: 8192, isUnsigned: true)
!8433 = !DIEnumerator(name: "GM_TXCR_COL_THR_MSK", value: 7168, isUnsigned: true)
!8434 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !7053, line: 1772, baseType: !7, size: 32, elements: !8435)
!8435 = !{!8436, !8437, !8438, !8439, !8440, !8441}
!8436 = !DIEnumerator(name: "GM_TXPA_JAMLEN_MSK", value: 49152, isUnsigned: true)
!8437 = !DIEnumerator(name: "GM_TXPA_JAMIPG_MSK", value: 15872, isUnsigned: true)
!8438 = !DIEnumerator(name: "GM_TXPA_JAMDAT_MSK", value: 496, isUnsigned: true)
!8439 = !DIEnumerator(name: "TX_JAM_LEN_DEF", value: 3, isUnsigned: true)
!8440 = !DIEnumerator(name: "TX_JAM_IPG_DEF", value: 11, isUnsigned: true)
!8441 = !DIEnumerator(name: "TX_IPG_JAM_DEF", value: 28, isUnsigned: true)
!8442 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !7053, line: 1788, baseType: !7, size: 32, elements: !8443)
!8443 = !{!8444, !8445, !8446, !8447, !8448}
!8444 = !DIEnumerator(name: "GM_SMOD_DATABL_MSK", value: 63488, isUnsigned: true)
!8445 = !DIEnumerator(name: "GM_SMOD_LIMIT_4", value: 1024, isUnsigned: true)
!8446 = !DIEnumerator(name: "GM_SMOD_VLAN_ENA", value: 512, isUnsigned: true)
!8447 = !DIEnumerator(name: "GM_SMOD_JUMBO_ENA", value: 256, isUnsigned: true)
!8448 = !DIEnumerator(name: "GM_SMOD_IPG_MSK", value: 31, isUnsigned: true)
!8449 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !7053, line: 665, baseType: !7, size: 32, elements: !8450)
!8450 = !{!8451, !8452, !8453, !8454, !8455, !8456, !8457, !8458, !8459}
!8451 = !DIEnumerator(name: "RX_GMF_EA", value: 3136, isUnsigned: true)
!8452 = !DIEnumerator(name: "RX_GMF_AF_THR", value: 3140, isUnsigned: true)
!8453 = !DIEnumerator(name: "RX_GMF_CTRL_T", value: 3144, isUnsigned: true)
!8454 = !DIEnumerator(name: "RX_GMF_FL_MSK", value: 3148, isUnsigned: true)
!8455 = !DIEnumerator(name: "RX_GMF_FL_THR", value: 3152, isUnsigned: true)
!8456 = !DIEnumerator(name: "RX_GMF_WP", value: 3168, isUnsigned: true)
!8457 = !DIEnumerator(name: "RX_GMF_WLEV", value: 3176, isUnsigned: true)
!8458 = !DIEnumerator(name: "RX_GMF_RP", value: 3184, isUnsigned: true)
!8459 = !DIEnumerator(name: "RX_GMF_RLEV", value: 3192, isUnsigned: true)
!8460 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !7053, line: 1821, baseType: !32, size: 32, elements: !8461)
!8461 = !{!8462, !8463, !8464, !8465, !8466, !8467, !8468, !8469, !8470, !8471, !8472, !8473, !8474, !8475, !8476, !8477, !8478}
!8462 = !DIEnumerator(name: "GMR_FS_LEN", value: -65536)
!8463 = !DIEnumerator(name: "GMR_FS_LEN_SHIFT", value: 16)
!8464 = !DIEnumerator(name: "GMR_FS_VLAN", value: 8192)
!8465 = !DIEnumerator(name: "GMR_FS_JABBER", value: 4096)
!8466 = !DIEnumerator(name: "GMR_FS_UN_SIZE", value: 2048)
!8467 = !DIEnumerator(name: "GMR_FS_MC", value: 1024)
!8468 = !DIEnumerator(name: "GMR_FS_BC", value: 512)
!8469 = !DIEnumerator(name: "GMR_FS_RX_OK", value: 256)
!8470 = !DIEnumerator(name: "GMR_FS_GOOD_FC", value: 128)
!8471 = !DIEnumerator(name: "GMR_FS_BAD_FC", value: 64)
!8472 = !DIEnumerator(name: "GMR_FS_MII_ERR", value: 32)
!8473 = !DIEnumerator(name: "GMR_FS_LONG_ERR", value: 16)
!8474 = !DIEnumerator(name: "GMR_FS_FRAGMENT", value: 8)
!8475 = !DIEnumerator(name: "GMR_FS_CRC_ERR", value: 2)
!8476 = !DIEnumerator(name: "GMR_FS_RX_FF_OV", value: 1)
!8477 = !DIEnumerator(name: "GMR_FS_ANY_ERR", value: 4338)
!8478 = !DIEnumerator(name: "RX_FF_FL_DEF_MSK", value: 6243)
!8479 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !7053, line: 1851, baseType: !7, size: 32, elements: !8480)
!8480 = !{!8481, !8482, !8483, !8484, !8485, !8486, !8487, !8488, !8489, !8490, !8491, !8492, !8493, !8494, !8495}
!8481 = !DIEnumerator(name: "GMF_WP_TST_ON", value: 16384, isUnsigned: true)
!8482 = !DIEnumerator(name: "GMF_WP_TST_OFF", value: 8192, isUnsigned: true)
!8483 = !DIEnumerator(name: "GMF_WP_STEP", value: 4096, isUnsigned: true)
!8484 = !DIEnumerator(name: "GMF_RP_TST_ON", value: 1024, isUnsigned: true)
!8485 = !DIEnumerator(name: "GMF_RP_TST_OFF", value: 512, isUnsigned: true)
!8486 = !DIEnumerator(name: "GMF_RP_STEP", value: 256, isUnsigned: true)
!8487 = !DIEnumerator(name: "GMF_RX_F_FL_ON", value: 128, isUnsigned: true)
!8488 = !DIEnumerator(name: "GMF_RX_F_FL_OFF", value: 64, isUnsigned: true)
!8489 = !DIEnumerator(name: "GMF_CLI_RX_FO", value: 32, isUnsigned: true)
!8490 = !DIEnumerator(name: "GMF_CLI_RX_FC", value: 16, isUnsigned: true)
!8491 = !DIEnumerator(name: "GMF_OPER_ON", value: 8, isUnsigned: true)
!8492 = !DIEnumerator(name: "GMF_OPER_OFF", value: 4, isUnsigned: true)
!8493 = !DIEnumerator(name: "GMF_RST_CLR", value: 2, isUnsigned: true)
!8494 = !DIEnumerator(name: "GMF_RST_SET", value: 1, isUnsigned: true)
!8495 = !DIEnumerator(name: "RX_GMF_FL_THR_DEF", value: 10, isUnsigned: true)
!8496 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !7053, line: 812, baseType: !7, size: 32, elements: !8497)
!8497 = !{!8498, !8499, !8500, !8501, !8502, !8503, !8504, !8505, !8506, !8507, !8508, !8509, !8510, !8511, !8512, !8513}
!8498 = !DIEnumerator(name: "TX_GMF_EA", value: 3392, isUnsigned: true)
!8499 = !DIEnumerator(name: "TX_GMF_AE_THR", value: 3396, isUnsigned: true)
!8500 = !DIEnumerator(name: "TX_GMF_CTRL_T", value: 3400, isUnsigned: true)
!8501 = !DIEnumerator(name: "TX_GMF_WP", value: 3424, isUnsigned: true)
!8502 = !DIEnumerator(name: "TX_GMF_WSP", value: 3428, isUnsigned: true)
!8503 = !DIEnumerator(name: "TX_GMF_WLEV", value: 3432, isUnsigned: true)
!8504 = !DIEnumerator(name: "TX_GMF_RP", value: 3440, isUnsigned: true)
!8505 = !DIEnumerator(name: "TX_GMF_RSTP", value: 3444, isUnsigned: true)
!8506 = !DIEnumerator(name: "TX_GMF_RLEV", value: 3448, isUnsigned: true)
!8507 = !DIEnumerator(name: "B28_DPT_INI", value: 3584, isUnsigned: true)
!8508 = !DIEnumerator(name: "B28_DPT_VAL", value: 3588, isUnsigned: true)
!8509 = !DIEnumerator(name: "B28_DPT_CTRL", value: 3592, isUnsigned: true)
!8510 = !DIEnumerator(name: "B28_DPT_TST", value: 3594, isUnsigned: true)
!8511 = !DIEnumerator(name: "GMAC_TI_ST_VAL", value: 3604, isUnsigned: true)
!8512 = !DIEnumerator(name: "GMAC_TI_ST_CTRL", value: 3608, isUnsigned: true)
!8513 = !DIEnumerator(name: "GMAC_TI_ST_TST", value: 3610, isUnsigned: true)
!8514 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !7053, line: 444, baseType: !7, size: 32, elements: !8515)
!8515 = !{!8516, !8517, !8518, !8519, !8520, !8521, !8522, !8523, !8524}
!8516 = !DIEnumerator(name: "B6_EXT_REG", value: 768, isUnsigned: true)
!8517 = !DIEnumerator(name: "B7_CFG_SPC", value: 896, isUnsigned: true)
!8518 = !DIEnumerator(name: "B8_RQ1_REGS", value: 1024, isUnsigned: true)
!8519 = !DIEnumerator(name: "B8_RQ2_REGS", value: 1152, isUnsigned: true)
!8520 = !DIEnumerator(name: "B8_TS1_REGS", value: 1536, isUnsigned: true)
!8521 = !DIEnumerator(name: "B8_TA1_REGS", value: 1664, isUnsigned: true)
!8522 = !DIEnumerator(name: "B8_TS2_REGS", value: 1792, isUnsigned: true)
!8523 = !DIEnumerator(name: "B8_TA2_REGS", value: 1920, isUnsigned: true)
!8524 = !DIEnumerator(name: "B16_RAM_REGS", value: 2048, isUnsigned: true)
!8525 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !7053, line: 479, baseType: !7, size: 32, elements: !8526)
!8526 = !{!8527, !8528, !8529, !8530, !8531, !8532, !8533, !8534, !8535, !8536, !8537, !8538, !8539}
!8527 = !DIEnumerator(name: "RB_START", value: 0, isUnsigned: true)
!8528 = !DIEnumerator(name: "RB_END", value: 4, isUnsigned: true)
!8529 = !DIEnumerator(name: "RB_WP", value: 8, isUnsigned: true)
!8530 = !DIEnumerator(name: "RB_RP", value: 12, isUnsigned: true)
!8531 = !DIEnumerator(name: "RB_RX_UTPP", value: 16, isUnsigned: true)
!8532 = !DIEnumerator(name: "RB_RX_LTPP", value: 20, isUnsigned: true)
!8533 = !DIEnumerator(name: "RB_RX_UTHP", value: 24, isUnsigned: true)
!8534 = !DIEnumerator(name: "RB_RX_LTHP", value: 28, isUnsigned: true)
!8535 = !DIEnumerator(name: "RB_PC", value: 32, isUnsigned: true)
!8536 = !DIEnumerator(name: "RB_LEV", value: 36, isUnsigned: true)
!8537 = !DIEnumerator(name: "RB_CTRL", value: 40, isUnsigned: true)
!8538 = !DIEnumerator(name: "RB_TST1", value: 41, isUnsigned: true)
!8539 = !DIEnumerator(name: "RB_TST2", value: 42, isUnsigned: true)
!8540 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !7053, line: 767, baseType: !7, size: 32, elements: !8541)
!8541 = !{!8542, !8543, !8544, !8545, !8546, !8547}
!8542 = !DIEnumerator(name: "RB_ENA_STFWD", value: 32, isUnsigned: true)
!8543 = !DIEnumerator(name: "RB_DIS_STFWD", value: 16, isUnsigned: true)
!8544 = !DIEnumerator(name: "RB_ENA_OP_MD", value: 8, isUnsigned: true)
!8545 = !DIEnumerator(name: "RB_DIS_OP_MD", value: 4, isUnsigned: true)
!8546 = !DIEnumerator(name: "RB_RST_CLR", value: 2, isUnsigned: true)
!8547 = !DIEnumerator(name: "RB_RST_SET", value: 1, isUnsigned: true)
!8548 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !7053, line: 498, baseType: !7, size: 32, elements: !8549)
!8549 = !{!8550, !8551, !8552, !8553, !8554, !8555}
!8550 = !DIEnumerator(name: "Q_R1", value: 0, isUnsigned: true)
!8551 = !DIEnumerator(name: "Q_R2", value: 128, isUnsigned: true)
!8552 = !DIEnumerator(name: "Q_XS1", value: 512, isUnsigned: true)
!8553 = !DIEnumerator(name: "Q_XA1", value: 640, isUnsigned: true)
!8554 = !DIEnumerator(name: "Q_XS2", value: 768, isUnsigned: true)
!8555 = !DIEnumerator(name: "Q_XA2", value: 896, isUnsigned: true)
!8556 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !7053, line: 648, baseType: !7, size: 32, elements: !8557)
!8557 = !{!8558, !8559, !8560}
!8558 = !DIEnumerator(name: "LED_T_ON", value: 4, isUnsigned: true)
!8559 = !DIEnumerator(name: "LED_T_OFF", value: 2, isUnsigned: true)
!8560 = !DIEnumerator(name: "LED_T_STEP", value: 1, isUnsigned: true)
!8561 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !7053, line: 839, baseType: !7, size: 32, elements: !8562)
!8562 = !{!8563, !8564, !8565, !8566, !8567, !8568}
!8563 = !DIEnumerator(name: "LINKLED_OFF", value: 1, isUnsigned: true)
!8564 = !DIEnumerator(name: "LINKLED_ON", value: 2, isUnsigned: true)
!8565 = !DIEnumerator(name: "LINKLED_LINKSYNC_OFF", value: 4, isUnsigned: true)
!8566 = !DIEnumerator(name: "LINKLED_LINKSYNC_ON", value: 8, isUnsigned: true)
!8567 = !DIEnumerator(name: "LINKLED_BLINK_OFF", value: 16, isUnsigned: true)
!8568 = !DIEnumerator(name: "LINKLED_BLINK_ON", value: 32, isUnsigned: true)
!8569 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !7053, line: 639, baseType: !7, size: 32, elements: !8570)
!8570 = !{!8571, !8572, !8573}
!8571 = !DIEnumerator(name: "LED_START", value: 4, isUnsigned: true)
!8572 = !DIEnumerator(name: "LED_STOP", value: 2, isUnsigned: true)
!8573 = !DIEnumerator(name: "LED_STATE", value: 1, isUnsigned: true)
!8574 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !7053, line: 1512, baseType: !7, size: 32, elements: !8575)
!8575 = !{!8576, !8577, !8578, !8579}
!8576 = !DIEnumerator(name: "MO_LED_NORM", value: 0, isUnsigned: true)
!8577 = !DIEnumerator(name: "MO_LED_BLINK", value: 1, isUnsigned: true)
!8578 = !DIEnumerator(name: "MO_LED_OFF", value: 2, isUnsigned: true)
!8579 = !DIEnumerator(name: "MO_LED_ON", value: 3, isUnsigned: true)
!8580 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !7053, line: 1482, baseType: !7, size: 32, elements: !8581)
!8581 = !{!8582, !8583, !8584, !8585, !8586, !8587, !8588, !8589}
!8582 = !DIEnumerator(name: "PULS_NO_STR", value: 0, isUnsigned: true)
!8583 = !DIEnumerator(name: "PULS_21MS", value: 1, isUnsigned: true)
!8584 = !DIEnumerator(name: "PULS_42MS", value: 2, isUnsigned: true)
!8585 = !DIEnumerator(name: "PULS_84MS", value: 3, isUnsigned: true)
!8586 = !DIEnumerator(name: "PULS_170MS", value: 4, isUnsigned: true)
!8587 = !DIEnumerator(name: "PULS_340MS", value: 5, isUnsigned: true)
!8588 = !DIEnumerator(name: "PULS_670MS", value: 6, isUnsigned: true)
!8589 = !DIEnumerator(name: "PULS_1300MS", value: 7, isUnsigned: true)
!8590 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !7053, line: 1459, baseType: !7, size: 32, elements: !8591)
!8591 = !{!8592, !8593, !8594, !8595, !8596, !8597, !8598}
!8592 = !DIEnumerator(name: "PHY_M_LEDC_DIS_LED", value: 32768, isUnsigned: true)
!8593 = !DIEnumerator(name: "PHY_M_LEDC_PULS_MSK", value: 28672, isUnsigned: true)
!8594 = !DIEnumerator(name: "PHY_M_LEDC_F_INT", value: 2048, isUnsigned: true)
!8595 = !DIEnumerator(name: "PHY_M_LEDC_BL_R_MSK", value: 1792, isUnsigned: true)
!8596 = !DIEnumerator(name: "PHY_M_LEDC_DP_C_LSB", value: 128, isUnsigned: true)
!8597 = !DIEnumerator(name: "PHY_M_LEDC_TX_C_LSB", value: 64, isUnsigned: true)
!8598 = !DIEnumerator(name: "PHY_M_LEDC_LK_C_MSK", value: 56, isUnsigned: true)
!8599 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !7053, line: 1494, baseType: !7, size: 32, elements: !8600)
!8600 = !{!8601, !8602, !8603, !8604, !8605}
!8601 = !DIEnumerator(name: "BLINK_42MS", value: 0, isUnsigned: true)
!8602 = !DIEnumerator(name: "BLINK_84MS", value: 1, isUnsigned: true)
!8603 = !DIEnumerator(name: "BLINK_170MS", value: 2, isUnsigned: true)
!8604 = !DIEnumerator(name: "BLINK_340MS", value: 3, isUnsigned: true)
!8605 = !DIEnumerator(name: "BLINK_670MS", value: 4, isUnsigned: true)
!8606 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !7053, line: 1472, baseType: !7, size: 32, elements: !8607)
!8607 = !{!8608, !8609, !8610, !8611, !8612, !8613}
!8608 = !DIEnumerator(name: "PHY_M_LEDC_LINK_MSK", value: 24, isUnsigned: true)
!8609 = !DIEnumerator(name: "PHY_M_LEDC_DP_CTRL", value: 4, isUnsigned: true)
!8610 = !DIEnumerator(name: "PHY_M_LEDC_DP_C_MSB", value: 4, isUnsigned: true)
!8611 = !DIEnumerator(name: "PHY_M_LEDC_RX_CTRL", value: 2, isUnsigned: true)
!8612 = !DIEnumerator(name: "PHY_M_LEDC_TX_CTRL", value: 1, isUnsigned: true)
!8613 = !DIEnumerator(name: "PHY_M_LEDC_TX_C_MSB", value: 1, isUnsigned: true)
!8614 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !31, line: 352, baseType: !7, size: 32, elements: !8615)
!8615 = !{!8616, !8617, !8618, !8619, !8620, !8621, !8622}
!8616 = !DIEnumerator(name: "NAPI_STATE_SCHED", value: 0, isUnsigned: true)
!8617 = !DIEnumerator(name: "NAPI_STATE_MISSED", value: 1, isUnsigned: true)
!8618 = !DIEnumerator(name: "NAPI_STATE_DISABLE", value: 2, isUnsigned: true)
!8619 = !DIEnumerator(name: "NAPI_STATE_NPSVC", value: 3, isUnsigned: true)
!8620 = !DIEnumerator(name: "NAPI_STATE_LISTED", value: 4, isUnsigned: true)
!8621 = !DIEnumerator(name: "NAPI_STATE_NO_BUSY_POLL", value: 5, isUnsigned: true)
!8622 = !DIEnumerator(name: "NAPI_STATE_IN_BUSY_POLL", value: 6, isUnsigned: true)
!8623 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !7053, line: 1332, baseType: !7, size: 32, elements: !8624)
!8624 = !{!8625, !8626, !8627, !8628, !8629, !8630, !8631, !8632, !8633, !8634, !8635, !8636}
!8625 = !DIEnumerator(name: "PHY_M_PC_TX_FFD_MSK", value: 49152, isUnsigned: true)
!8626 = !DIEnumerator(name: "PHY_M_PC_RX_FFD_MSK", value: 12288, isUnsigned: true)
!8627 = !DIEnumerator(name: "PHY_M_PC_ASS_CRS_TX", value: 2048, isUnsigned: true)
!8628 = !DIEnumerator(name: "PHY_M_PC_FL_GOOD", value: 1024, isUnsigned: true)
!8629 = !DIEnumerator(name: "PHY_M_PC_EN_DET_MSK", value: 768, isUnsigned: true)
!8630 = !DIEnumerator(name: "PHY_M_PC_ENA_EXT_D", value: 128, isUnsigned: true)
!8631 = !DIEnumerator(name: "PHY_M_PC_MDIX_MSK", value: 96, isUnsigned: true)
!8632 = !DIEnumerator(name: "PHY_M_PC_DIS_125CLK", value: 16, isUnsigned: true)
!8633 = !DIEnumerator(name: "PHY_M_PC_MAC_POW_UP", value: 8, isUnsigned: true)
!8634 = !DIEnumerator(name: "PHY_M_PC_SQE_T_ENA", value: 4, isUnsigned: true)
!8635 = !DIEnumerator(name: "PHY_M_PC_POL_R_DIS", value: 2, isUnsigned: true)
!8636 = !DIEnumerator(name: "PHY_M_PC_DIS_JABBER", value: 1, isUnsigned: true)
!8637 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !8638, line: 28, baseType: !7, size: 32, elements: !8639)
!8638 = !DIFile(filename: "./include/uapi/linux/in.h", directory: "/home/lizy2001/genbc/linux")
!8639 = !{!8640, !8641, !8642, !8643, !8644, !8645, !8646, !8647, !8648, !8649, !8650, !8651, !8652, !8653, !8654, !8655, !8656, !8657, !8658, !8659, !8660, !8661, !8662, !8663, !8664, !8665, !8666, !8667}
!8640 = !DIEnumerator(name: "IPPROTO_IP", value: 0, isUnsigned: true)
!8641 = !DIEnumerator(name: "IPPROTO_ICMP", value: 1, isUnsigned: true)
!8642 = !DIEnumerator(name: "IPPROTO_IGMP", value: 2, isUnsigned: true)
!8643 = !DIEnumerator(name: "IPPROTO_IPIP", value: 4, isUnsigned: true)
!8644 = !DIEnumerator(name: "IPPROTO_TCP", value: 6, isUnsigned: true)
!8645 = !DIEnumerator(name: "IPPROTO_EGP", value: 8, isUnsigned: true)
!8646 = !DIEnumerator(name: "IPPROTO_PUP", value: 12, isUnsigned: true)
!8647 = !DIEnumerator(name: "IPPROTO_UDP", value: 17, isUnsigned: true)
!8648 = !DIEnumerator(name: "IPPROTO_IDP", value: 22, isUnsigned: true)
!8649 = !DIEnumerator(name: "IPPROTO_TP", value: 29, isUnsigned: true)
!8650 = !DIEnumerator(name: "IPPROTO_DCCP", value: 33, isUnsigned: true)
!8651 = !DIEnumerator(name: "IPPROTO_IPV6", value: 41, isUnsigned: true)
!8652 = !DIEnumerator(name: "IPPROTO_RSVP", value: 46, isUnsigned: true)
!8653 = !DIEnumerator(name: "IPPROTO_GRE", value: 47, isUnsigned: true)
!8654 = !DIEnumerator(name: "IPPROTO_ESP", value: 50, isUnsigned: true)
!8655 = !DIEnumerator(name: "IPPROTO_AH", value: 51, isUnsigned: true)
!8656 = !DIEnumerator(name: "IPPROTO_MTP", value: 92, isUnsigned: true)
!8657 = !DIEnumerator(name: "IPPROTO_BEETPH", value: 94, isUnsigned: true)
!8658 = !DIEnumerator(name: "IPPROTO_ENCAP", value: 98, isUnsigned: true)
!8659 = !DIEnumerator(name: "IPPROTO_PIM", value: 103, isUnsigned: true)
!8660 = !DIEnumerator(name: "IPPROTO_COMP", value: 108, isUnsigned: true)
!8661 = !DIEnumerator(name: "IPPROTO_SCTP", value: 132, isUnsigned: true)
!8662 = !DIEnumerator(name: "IPPROTO_UDPLITE", value: 136, isUnsigned: true)
!8663 = !DIEnumerator(name: "IPPROTO_MPLS", value: 137, isUnsigned: true)
!8664 = !DIEnumerator(name: "IPPROTO_ETHERNET", value: 143, isUnsigned: true)
!8665 = !DIEnumerator(name: "IPPROTO_RAW", value: 255, isUnsigned: true)
!8666 = !DIEnumerator(name: "IPPROTO_MPTCP", value: 262, isUnsigned: true)
!8667 = !DIEnumerator(name: "IPPROTO_MAX", value: 263, isUnsigned: true)
!8668 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "skb_free_reason", file: !31, line: 3780, baseType: !7, size: 32, elements: !8669)
!8669 = !{!8670, !8671}
!8670 = !DIEnumerator(name: "SKB_REASON_CONSUMED", value: 0, isUnsigned: true)
!8671 = !DIEnumerator(name: "SKB_REASON_DROPPED", value: 1, isUnsigned: true)
!8672 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "net_device_flags", file: !599, line: 82, baseType: !7, size: 32, elements: !8673)
!8673 = !{!8674, !8675, !8676, !8677, !8678, !8679, !8680, !8681, !8682, !8683, !8684, !8685, !8686, !8687, !8688, !8689, !8690, !8691, !8692}
!8674 = !DIEnumerator(name: "IFF_UP", value: 1, isUnsigned: true)
!8675 = !DIEnumerator(name: "IFF_BROADCAST", value: 2, isUnsigned: true)
!8676 = !DIEnumerator(name: "IFF_DEBUG", value: 4, isUnsigned: true)
!8677 = !DIEnumerator(name: "IFF_LOOPBACK", value: 8, isUnsigned: true)
!8678 = !DIEnumerator(name: "IFF_POINTOPOINT", value: 16, isUnsigned: true)
!8679 = !DIEnumerator(name: "IFF_NOTRAILERS", value: 32, isUnsigned: true)
!8680 = !DIEnumerator(name: "IFF_RUNNING", value: 64, isUnsigned: true)
!8681 = !DIEnumerator(name: "IFF_NOARP", value: 128, isUnsigned: true)
!8682 = !DIEnumerator(name: "IFF_PROMISC", value: 256, isUnsigned: true)
!8683 = !DIEnumerator(name: "IFF_ALLMULTI", value: 512, isUnsigned: true)
!8684 = !DIEnumerator(name: "IFF_MASTER", value: 1024, isUnsigned: true)
!8685 = !DIEnumerator(name: "IFF_SLAVE", value: 2048, isUnsigned: true)
!8686 = !DIEnumerator(name: "IFF_MULTICAST", value: 4096, isUnsigned: true)
!8687 = !DIEnumerator(name: "IFF_PORTSEL", value: 8192, isUnsigned: true)
!8688 = !DIEnumerator(name: "IFF_AUTOMEDIA", value: 16384, isUnsigned: true)
!8689 = !DIEnumerator(name: "IFF_DYNAMIC", value: 32768, isUnsigned: true)
!8690 = !DIEnumerator(name: "IFF_LOWER_UP", value: 65536, isUnsigned: true)
!8691 = !DIEnumerator(name: "IFF_DORMANT", value: 131072, isUnsigned: true)
!8692 = !DIEnumerator(name: "IFF_ECHO", value: 262144, isUnsigned: true)
!8693 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !7053, line: 1664, baseType: !7, size: 32, elements: !8694)
!8694 = !{!8695, !8696, !8697, !8698, !8699, !8700, !8701, !8702, !8703, !8704, !8705, !8706, !8707, !8708, !8709, !8710, !8711, !8712, !8713, !8714, !8715, !8716, !8717, !8718, !8719, !8720, !8721, !8722, !8723, !8724, !8725, !8726, !8727, !8728, !8729, !8730, !8731, !8732, !8733, !8734}
!8695 = !DIEnumerator(name: "GM_RXF_UC_OK", value: 256, isUnsigned: true)
!8696 = !DIEnumerator(name: "GM_RXF_BC_OK", value: 264, isUnsigned: true)
!8697 = !DIEnumerator(name: "GM_RXF_MPAUSE", value: 272, isUnsigned: true)
!8698 = !DIEnumerator(name: "GM_RXF_MC_OK", value: 280, isUnsigned: true)
!8699 = !DIEnumerator(name: "GM_RXF_FCS_ERR", value: 288, isUnsigned: true)
!8700 = !DIEnumerator(name: "GM_RXO_OK_LO", value: 304, isUnsigned: true)
!8701 = !DIEnumerator(name: "GM_RXO_OK_HI", value: 312, isUnsigned: true)
!8702 = !DIEnumerator(name: "GM_RXO_ERR_LO", value: 320, isUnsigned: true)
!8703 = !DIEnumerator(name: "GM_RXO_ERR_HI", value: 328, isUnsigned: true)
!8704 = !DIEnumerator(name: "GM_RXF_SHT", value: 336, isUnsigned: true)
!8705 = !DIEnumerator(name: "GM_RXE_FRAG", value: 344, isUnsigned: true)
!8706 = !DIEnumerator(name: "GM_RXF_64B", value: 352, isUnsigned: true)
!8707 = !DIEnumerator(name: "GM_RXF_127B", value: 360, isUnsigned: true)
!8708 = !DIEnumerator(name: "GM_RXF_255B", value: 368, isUnsigned: true)
!8709 = !DIEnumerator(name: "GM_RXF_511B", value: 376, isUnsigned: true)
!8710 = !DIEnumerator(name: "GM_RXF_1023B", value: 384, isUnsigned: true)
!8711 = !DIEnumerator(name: "GM_RXF_1518B", value: 392, isUnsigned: true)
!8712 = !DIEnumerator(name: "GM_RXF_MAX_SZ", value: 400, isUnsigned: true)
!8713 = !DIEnumerator(name: "GM_RXF_LNG_ERR", value: 408, isUnsigned: true)
!8714 = !DIEnumerator(name: "GM_RXF_JAB_PKT", value: 416, isUnsigned: true)
!8715 = !DIEnumerator(name: "GM_RXE_FIFO_OV", value: 432, isUnsigned: true)
!8716 = !DIEnumerator(name: "GM_TXF_UC_OK", value: 448, isUnsigned: true)
!8717 = !DIEnumerator(name: "GM_TXF_BC_OK", value: 456, isUnsigned: true)
!8718 = !DIEnumerator(name: "GM_TXF_MPAUSE", value: 464, isUnsigned: true)
!8719 = !DIEnumerator(name: "GM_TXF_MC_OK", value: 472, isUnsigned: true)
!8720 = !DIEnumerator(name: "GM_TXO_OK_LO", value: 480, isUnsigned: true)
!8721 = !DIEnumerator(name: "GM_TXO_OK_HI", value: 488, isUnsigned: true)
!8722 = !DIEnumerator(name: "GM_TXF_64B", value: 496, isUnsigned: true)
!8723 = !DIEnumerator(name: "GM_TXF_127B", value: 504, isUnsigned: true)
!8724 = !DIEnumerator(name: "GM_TXF_255B", value: 512, isUnsigned: true)
!8725 = !DIEnumerator(name: "GM_TXF_511B", value: 520, isUnsigned: true)
!8726 = !DIEnumerator(name: "GM_TXF_1023B", value: 528, isUnsigned: true)
!8727 = !DIEnumerator(name: "GM_TXF_1518B", value: 536, isUnsigned: true)
!8728 = !DIEnumerator(name: "GM_TXF_MAX_SZ", value: 544, isUnsigned: true)
!8729 = !DIEnumerator(name: "GM_TXF_COL", value: 560, isUnsigned: true)
!8730 = !DIEnumerator(name: "GM_TXF_LAT_COL", value: 568, isUnsigned: true)
!8731 = !DIEnumerator(name: "GM_TXF_ABO_COL", value: 576, isUnsigned: true)
!8732 = !DIEnumerator(name: "GM_TXF_MUL_COL", value: 584, isUnsigned: true)
!8733 = !DIEnumerator(name: "GM_TXF_SNG_COL", value: 592, isUnsigned: true)
!8734 = !DIEnumerator(name: "GM_TXE_FIFO_UR", value: 600, isUnsigned: true)
!8735 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !7053, line: 894, baseType: !32, size: 32, elements: !8736)
!8736 = !{!8737, !8738, !8739, !8740, !8741, !8742, !8743, !8744, !8745, !8746, !8747, !8748, !8749, !8750, !8751, !8752, !8753, !8754, !8755}
!8737 = !DIEnumerator(name: "XMR_FS_LEN", value: -262144)
!8738 = !DIEnumerator(name: "XMR_FS_LEN_SHIFT", value: 18)
!8739 = !DIEnumerator(name: "XMR_FS_2L_VLAN", value: 131072)
!8740 = !DIEnumerator(name: "XMR_FS_1_VLAN", value: 65536)
!8741 = !DIEnumerator(name: "XMR_FS_BC", value: 32768)
!8742 = !DIEnumerator(name: "XMR_FS_MC", value: 16384)
!8743 = !DIEnumerator(name: "XMR_FS_UC", value: 8192)
!8744 = !DIEnumerator(name: "XMR_FS_BURST", value: 2048)
!8745 = !DIEnumerator(name: "XMR_FS_CEX_ERR", value: 1024)
!8746 = !DIEnumerator(name: "XMR_FS_802_3", value: 512)
!8747 = !DIEnumerator(name: "XMR_FS_COL_ERR", value: 256)
!8748 = !DIEnumerator(name: "XMR_FS_CAR_ERR", value: 128)
!8749 = !DIEnumerator(name: "XMR_FS_LEN_ERR", value: 64)
!8750 = !DIEnumerator(name: "XMR_FS_FRA_ERR", value: 32)
!8751 = !DIEnumerator(name: "XMR_FS_RUNT", value: 16)
!8752 = !DIEnumerator(name: "XMR_FS_LNG_ERR", value: 8)
!8753 = !DIEnumerator(name: "XMR_FS_FCS_ERR", value: 4)
!8754 = !DIEnumerator(name: "XMR_FS_ERR", value: 2)
!8755 = !DIEnumerator(name: "XMR_FS_MCTRL", value: 1)
!8756 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !7053, line: 1114, baseType: !7, size: 32, elements: !8757)
!8757 = !{!8758, !8759, !8760, !8761, !8762}
!8758 = !DIEnumerator(name: "PHY_X_RS_PAUSE", value: 384, isUnsigned: true)
!8759 = !DIEnumerator(name: "PHY_X_RS_HD", value: 64, isUnsigned: true)
!8760 = !DIEnumerator(name: "PHY_X_RS_FD", value: 32, isUnsigned: true)
!8761 = !DIEnumerator(name: "PHY_X_RS_ABLMIS", value: 16, isUnsigned: true)
!8762 = !DIEnumerator(name: "PHY_X_RS_PAUMIS", value: 8, isUnsigned: true)
!8763 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !7053, line: 1099, baseType: !7, size: 32, elements: !8764)
!8764 = !{!8765, !8766, !8767, !8768}
!8765 = !DIEnumerator(name: "PHY_X_P_NO_PAUSE", value: 0, isUnsigned: true)
!8766 = !DIEnumerator(name: "PHY_X_P_SYM_MD", value: 128, isUnsigned: true)
!8767 = !DIEnumerator(name: "PHY_X_P_ASYM_MD", value: 256, isUnsigned: true)
!8768 = !DIEnumerator(name: "PHY_X_P_BOTH_MD", value: 384, isUnsigned: true)
!8769 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "irqreturn", file: !8770, line: 11, baseType: !7, size: 32, elements: !8771)
!8770 = !DIFile(filename: "./include/linux/irqreturn.h", directory: "/home/lizy2001/genbc/linux")
!8771 = !{!8772, !8773, !8774}
!8772 = !DIEnumerator(name: "IRQ_NONE", value: 0, isUnsigned: true)
!8773 = !DIEnumerator(name: "IRQ_HANDLED", value: 1, isUnsigned: true)
!8774 = !DIEnumerator(name: "IRQ_WAKE_THREAD", value: 2, isUnsigned: true)
!8775 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !8776, line: 651, baseType: !7, size: 32, elements: !8777)
!8776 = !DIFile(filename: "./include/linux/interrupt.h", directory: "/home/lizy2001/genbc/linux")
!8777 = !{!8778, !8779}
!8778 = !DIEnumerator(name: "TASKLET_STATE_SCHED", value: 0, isUnsigned: true)
!8779 = !DIEnumerator(name: "TASKLET_STATE_RUN", value: 1, isUnsigned: true)
!8780 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !7053, line: 1873, baseType: !7, size: 32, elements: !8781)
!8781 = !{!8782, !8783, !8784, !8785, !8786, !8787}
!8782 = !DIEnumerator(name: "GMF_WSP_TST_ON", value: 262144, isUnsigned: true)
!8783 = !DIEnumerator(name: "GMF_WSP_TST_OFF", value: 131072, isUnsigned: true)
!8784 = !DIEnumerator(name: "GMF_WSP_STEP", value: 65536, isUnsigned: true)
!8785 = !DIEnumerator(name: "GMF_CLI_TX_FU", value: 64, isUnsigned: true)
!8786 = !DIEnumerator(name: "GMF_CLI_TX_FC", value: 32, isUnsigned: true)
!8787 = !DIEnumerator(name: "GMF_CLI_TX_PE", value: 16, isUnsigned: true)
!8788 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !7053, line: 1884, baseType: !7, size: 32, elements: !8789)
!8789 = !{!8790, !8791, !8792}
!8790 = !DIEnumerator(name: "GMT_ST_START", value: 4, isUnsigned: true)
!8791 = !DIEnumerator(name: "GMT_ST_STOP", value: 2, isUnsigned: true)
!8792 = !DIEnumerator(name: "GMT_ST_CLR_IRQ", value: 1, isUnsigned: true)
!8793 = !{!1742, !335, !591, !8794, !3438, !1038, !312, !987, !581, !9105, !9107, !9109, !9111, !9112, !32, !329, !2036, !1719, !9114, !9135, !9151, !9153, !9164, !998, !331, !9172, !9235, !475, !9248, !5857, !9249, !8971, !980}
!8794 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8795, size: 64)
!8795 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "skge_hw", file: !7053, line: 2404, size: 832, elements: !8796)
!8796 = !{!8797, !8798, !9071, !9072, !9073, !9075, !9076, !9077, !9078, !9079, !9080, !9081, !9082, !9083, !9084, !9104}
!8797 = !DIDerivedType(tag: DW_TAG_member, name: "regs", scope: !8795, file: !7053, line: 2405, baseType: !591, size: 64)
!8798 = !DIDerivedType(tag: DW_TAG_member, name: "pdev", scope: !8795, file: !7053, line: 2406, baseType: !8799, size: 64, offset: 64)
!8799 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8800, size: 64)
!8800 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_dev", file: !8801, line: 309, size: 19264, elements: !8802)
!8801 = !DIFile(filename: "./include/linux/pci.h", directory: "/home/lizy2001/genbc/linux")
!8802 = !{!8803, !8804, !8873, !8874, !8875, !8876, !8887, !8888, !8889, !8890, !8891, !8892, !8893, !8894, !8895, !8896, !8897, !8898, !8899, !8900, !8901, !8902, !8903, !8968, !8969, !8970, !8972, !8973, !8974, !8975, !8976, !8977, !8978, !8979, !8980, !8981, !8982, !8983, !8984, !8985, !8986, !8987, !8988, !8989, !8990, !8991, !8994, !8995, !8996, !8997, !8998, !8999, !9000, !9001, !9005, !9006, !9007, !9008, !9009, !9010, !9011, !9012, !9013, !9014, !9015, !9016, !9017, !9018, !9019, !9020, !9021, !9022, !9023, !9024, !9025, !9026, !9027, !9028, !9029, !9030, !9031, !9032, !9033, !9034, !9035, !9036, !9037, !9038, !9039, !9040, !9041, !9042, !9044, !9045, !9047, !9048, !9049, !9050, !9052, !9053, !9054, !9057, !9064, !9065, !9066, !9067, !9068, !9069, !9070}
!8803 = !DIDerivedType(tag: DW_TAG_member, name: "bus_list", scope: !8800, file: !8801, line: 310, baseType: !284, size: 128)
!8804 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !8800, file: !8801, line: 311, baseType: !8805, size: 64, offset: 128)
!8805 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8806, size: 64)
!8806 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_bus", file: !8801, line: 605, size: 8064, elements: !8807)
!8807 = !{!8808, !8809, !8810, !8811, !8812, !8813, !8814, !8829, !8830, !8831, !8855, !8858, !8859, !8860, !8861, !8862, !8863, !8864, !8865, !8866, !8868, !8869, !8870, !8871, !8872}
!8808 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !8806, file: !8801, line: 606, baseType: !284, size: 128)
!8809 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !8806, file: !8801, line: 607, baseType: !8805, size: 64, offset: 128)
!8810 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !8806, file: !8801, line: 608, baseType: !284, size: 128, offset: 192)
!8811 = !DIDerivedType(tag: DW_TAG_member, name: "devices", scope: !8806, file: !8801, line: 609, baseType: !284, size: 128, offset: 320)
!8812 = !DIDerivedType(tag: DW_TAG_member, name: "self", scope: !8806, file: !8801, line: 610, baseType: !8799, size: 64, offset: 448)
!8813 = !DIDerivedType(tag: DW_TAG_member, name: "slots", scope: !8806, file: !8801, line: 611, baseType: !284, size: 128, offset: 512)
!8814 = !DIDerivedType(tag: DW_TAG_member, name: "resource", scope: !8806, file: !8801, line: 613, baseType: !8815, size: 256, offset: 640)
!8815 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8816, size: 256, elements: !2272)
!8816 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8817, size: 64)
!8817 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "resource", file: !8818, line: 20, size: 512, elements: !8819)
!8818 = !DIFile(filename: "./include/linux/ioport.h", directory: "/home/lizy2001/genbc/linux")
!8819 = !{!8820, !8822, !8823, !8824, !8825, !8826, !8827, !8828}
!8820 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !8817, file: !8818, line: 21, baseType: !8821, size: 64)
!8821 = !DIDerivedType(tag: DW_TAG_typedef, name: "resource_size_t", file: !277, line: 158, baseType: !4044)
!8822 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !8817, file: !8818, line: 22, baseType: !8821, size: 64, offset: 64)
!8823 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !8817, file: !8818, line: 23, baseType: !292, size: 64, offset: 128)
!8824 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !8817, file: !8818, line: 24, baseType: !312, size: 64, offset: 192)
!8825 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !8817, file: !8818, line: 25, baseType: !312, size: 64, offset: 256)
!8826 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !8817, file: !8818, line: 26, baseType: !8816, size: 64, offset: 320)
!8827 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !8817, file: !8818, line: 26, baseType: !8816, size: 64, offset: 384)
!8828 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !8817, file: !8818, line: 26, baseType: !8816, size: 64, offset: 448)
!8829 = !DIDerivedType(tag: DW_TAG_member, name: "resources", scope: !8806, file: !8801, line: 614, baseType: !284, size: 128, offset: 896)
!8830 = !DIDerivedType(tag: DW_TAG_member, name: "busn_res", scope: !8806, file: !8801, line: 615, baseType: !8817, size: 512, offset: 1024)
!8831 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !8806, file: !8801, line: 617, baseType: !8832, size: 64, offset: 1536)
!8832 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8833, size: 64)
!8833 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_ops", file: !8801, line: 731, size: 320, elements: !8834)
!8834 = !{!8835, !8839, !8843, !8847, !8851}
!8835 = !DIDerivedType(tag: DW_TAG_member, name: "add_bus", scope: !8833, file: !8801, line: 732, baseType: !8836, size: 64)
!8836 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8837, size: 64)
!8837 = !DISubroutineType(types: !8838)
!8838 = !{!32, !8805}
!8839 = !DIDerivedType(tag: DW_TAG_member, name: "remove_bus", scope: !8833, file: !8801, line: 733, baseType: !8840, size: 64, offset: 64)
!8840 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8841, size: 64)
!8841 = !DISubroutineType(types: !8842)
!8842 = !{null, !8805}
!8843 = !DIDerivedType(tag: DW_TAG_member, name: "map_bus", scope: !8833, file: !8801, line: 734, baseType: !8844, size: 64, offset: 128)
!8844 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8845, size: 64)
!8845 = !DISubroutineType(types: !8846)
!8846 = !{!591, !8805, !7, !32}
!8847 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !8833, file: !8801, line: 735, baseType: !8848, size: 64, offset: 192)
!8848 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8849, size: 64)
!8849 = !DISubroutineType(types: !8850)
!8850 = !{!32, !8805, !7, !32, !32, !2516}
!8851 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !8833, file: !8801, line: 736, baseType: !8852, size: 64, offset: 256)
!8852 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8853, size: 64)
!8853 = !DISubroutineType(types: !8854)
!8854 = !{!32, !8805, !7, !32, !32, !987}
!8855 = !DIDerivedType(tag: DW_TAG_member, name: "msi", scope: !8806, file: !8801, line: 618, baseType: !8856, size: 64, offset: 1600)
!8856 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8857, size: 64)
!8857 = !DICompositeType(tag: DW_TAG_structure_type, name: "msi_controller", file: !8801, line: 537, flags: DIFlagFwdDecl)
!8858 = !DIDerivedType(tag: DW_TAG_member, name: "sysdata", scope: !8806, file: !8801, line: 619, baseType: !591, size: 64, offset: 1664)
!8859 = !DIDerivedType(tag: DW_TAG_member, name: "procdir", scope: !8806, file: !8801, line: 620, baseType: !3010, size: 64, offset: 1728)
!8860 = !DIDerivedType(tag: DW_TAG_member, name: "number", scope: !8806, file: !8801, line: 622, baseType: !482, size: 8, offset: 1792)
!8861 = !DIDerivedType(tag: DW_TAG_member, name: "primary", scope: !8806, file: !8801, line: 623, baseType: !482, size: 8, offset: 1800)
!8862 = !DIDerivedType(tag: DW_TAG_member, name: "max_bus_speed", scope: !8806, file: !8801, line: 624, baseType: !482, size: 8, offset: 1808)
!8863 = !DIDerivedType(tag: DW_TAG_member, name: "cur_bus_speed", scope: !8806, file: !8801, line: 625, baseType: !482, size: 8, offset: 1816)
!8864 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !8806, file: !8801, line: 630, baseType: !457, size: 384, offset: 1824)
!8865 = !DIDerivedType(tag: DW_TAG_member, name: "bridge_ctl", scope: !8806, file: !8801, line: 632, baseType: !476, size: 16, offset: 2208)
!8866 = !DIDerivedType(tag: DW_TAG_member, name: "bus_flags", scope: !8806, file: !8801, line: 633, baseType: !8867, size: 16, offset: 2224)
!8867 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_bus_flags_t", file: !8801, line: 237, baseType: !476)
!8868 = !DIDerivedType(tag: DW_TAG_member, name: "bridge", scope: !8806, file: !8801, line: 634, baseType: !6544, size: 64, offset: 2240)
!8869 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !8806, file: !8801, line: 635, baseType: !6539, size: 5568, offset: 2304)
!8870 = !DIDerivedType(tag: DW_TAG_member, name: "legacy_io", scope: !8806, file: !8801, line: 636, baseType: !6170, size: 64, offset: 7872)
!8871 = !DIDerivedType(tag: DW_TAG_member, name: "legacy_mem", scope: !8806, file: !8801, line: 637, baseType: !6170, size: 64, offset: 7936)
!8872 = !DIDerivedType(tag: DW_TAG_member, name: "is_added", scope: !8806, file: !8801, line: 638, baseType: !7, size: 1, offset: 8000, flags: DIFlagBitField, extraData: i64 8000)
!8873 = !DIDerivedType(tag: DW_TAG_member, name: "subordinate", scope: !8800, file: !8801, line: 312, baseType: !8805, size: 64, offset: 192)
!8874 = !DIDerivedType(tag: DW_TAG_member, name: "sysdata", scope: !8800, file: !8801, line: 314, baseType: !591, size: 64, offset: 256)
!8875 = !DIDerivedType(tag: DW_TAG_member, name: "procent", scope: !8800, file: !8801, line: 315, baseType: !3010, size: 64, offset: 320)
!8876 = !DIDerivedType(tag: DW_TAG_member, name: "slot", scope: !8800, file: !8801, line: 316, baseType: !8877, size: 64, offset: 384)
!8877 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8878, size: 64)
!8878 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_slot", file: !8801, line: 69, size: 832, elements: !8879)
!8879 = !{!8880, !8881, !8882, !8885, !8886}
!8880 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !8878, file: !8801, line: 70, baseType: !8805, size: 64)
!8881 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !8878, file: !8801, line: 71, baseType: !284, size: 128, offset: 64)
!8882 = !DIDerivedType(tag: DW_TAG_member, name: "hotplug", scope: !8878, file: !8801, line: 72, baseType: !8883, size: 64, offset: 192)
!8883 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8884, size: 64)
!8884 = !DICompositeType(tag: DW_TAG_structure_type, name: "hotplug_slot", file: !8801, line: 72, flags: DIFlagFwdDecl)
!8885 = !DIDerivedType(tag: DW_TAG_member, name: "number", scope: !8878, file: !8801, line: 73, baseType: !482, size: 8, offset: 256)
!8886 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !8878, file: !8801, line: 74, baseType: !6119, size: 512, offset: 320)
!8887 = !DIDerivedType(tag: DW_TAG_member, name: "devfn", scope: !8800, file: !8801, line: 318, baseType: !7, size: 32, offset: 448)
!8888 = !DIDerivedType(tag: DW_TAG_member, name: "vendor", scope: !8800, file: !8801, line: 319, baseType: !476, size: 16, offset: 480)
!8889 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !8800, file: !8801, line: 320, baseType: !476, size: 16, offset: 496)
!8890 = !DIDerivedType(tag: DW_TAG_member, name: "subsystem_vendor", scope: !8800, file: !8801, line: 321, baseType: !476, size: 16, offset: 512)
!8891 = !DIDerivedType(tag: DW_TAG_member, name: "subsystem_device", scope: !8800, file: !8801, line: 322, baseType: !476, size: 16, offset: 528)
!8892 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !8800, file: !8801, line: 323, baseType: !7, size: 32, offset: 544)
!8893 = !DIDerivedType(tag: DW_TAG_member, name: "revision", scope: !8800, file: !8801, line: 324, baseType: !794, size: 8, offset: 576)
!8894 = !DIDerivedType(tag: DW_TAG_member, name: "hdr_type", scope: !8800, file: !8801, line: 325, baseType: !794, size: 8, offset: 584)
!8895 = !DIDerivedType(tag: DW_TAG_member, name: "pcie_cap", scope: !8800, file: !8801, line: 330, baseType: !794, size: 8, offset: 592)
!8896 = !DIDerivedType(tag: DW_TAG_member, name: "msi_cap", scope: !8800, file: !8801, line: 331, baseType: !794, size: 8, offset: 600)
!8897 = !DIDerivedType(tag: DW_TAG_member, name: "msix_cap", scope: !8800, file: !8801, line: 332, baseType: !794, size: 8, offset: 608)
!8898 = !DIDerivedType(tag: DW_TAG_member, name: "pcie_mpss", scope: !8800, file: !8801, line: 333, baseType: !794, size: 3, offset: 616, flags: DIFlagBitField, extraData: i64 616)
!8899 = !DIDerivedType(tag: DW_TAG_member, name: "rom_base_reg", scope: !8800, file: !8801, line: 334, baseType: !794, size: 8, offset: 624)
!8900 = !DIDerivedType(tag: DW_TAG_member, name: "pin", scope: !8800, file: !8801, line: 335, baseType: !794, size: 8, offset: 632)
!8901 = !DIDerivedType(tag: DW_TAG_member, name: "pcie_flags_reg", scope: !8800, file: !8801, line: 336, baseType: !581, size: 16, offset: 640)
!8902 = !DIDerivedType(tag: DW_TAG_member, name: "dma_alias_mask", scope: !8800, file: !8801, line: 337, baseType: !3438, size: 64, offset: 704)
!8903 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !8800, file: !8801, line: 339, baseType: !8904, size: 64, offset: 768)
!8904 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8905, size: 64)
!8905 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_driver", file: !8801, line: 858, size: 2048, elements: !8906)
!8906 = !{!8907, !8908, !8909, !8921, !8925, !8929, !8933, !8937, !8938, !8942, !8961, !8962, !8963}
!8907 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !8905, file: !8801, line: 859, baseType: !284, size: 128)
!8908 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !8905, file: !8801, line: 860, baseType: !292, size: 64, offset: 128)
!8909 = !DIDerivedType(tag: DW_TAG_member, name: "id_table", scope: !8905, file: !8801, line: 861, baseType: !8910, size: 64, offset: 192)
!8910 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8911, size: 64)
!8911 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8912)
!8912 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_device_id", file: !6635, line: 38, size: 256, elements: !8913)
!8913 = !{!8914, !8915, !8916, !8917, !8918, !8919, !8920}
!8914 = !DIDerivedType(tag: DW_TAG_member, name: "vendor", scope: !8912, file: !6635, line: 39, baseType: !493, size: 32)
!8915 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !8912, file: !6635, line: 39, baseType: !493, size: 32, offset: 32)
!8916 = !DIDerivedType(tag: DW_TAG_member, name: "subvendor", scope: !8912, file: !6635, line: 40, baseType: !493, size: 32, offset: 64)
!8917 = !DIDerivedType(tag: DW_TAG_member, name: "subdevice", scope: !8912, file: !6635, line: 40, baseType: !493, size: 32, offset: 96)
!8918 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !8912, file: !6635, line: 41, baseType: !493, size: 32, offset: 128)
!8919 = !DIDerivedType(tag: DW_TAG_member, name: "class_mask", scope: !8912, file: !6635, line: 41, baseType: !493, size: 32, offset: 160)
!8920 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !8912, file: !6635, line: 42, baseType: !6649, size: 64, offset: 192)
!8921 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !8905, file: !8801, line: 862, baseType: !8922, size: 64, offset: 256)
!8922 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8923, size: 64)
!8923 = !DISubroutineType(types: !8924)
!8924 = !{!32, !8799, !8910}
!8925 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !8905, file: !8801, line: 863, baseType: !8926, size: 64, offset: 320)
!8926 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8927, size: 64)
!8927 = !DISubroutineType(types: !8928)
!8928 = !{null, !8799}
!8929 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !8905, file: !8801, line: 864, baseType: !8930, size: 64, offset: 384)
!8930 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8931, size: 64)
!8931 = !DISubroutineType(types: !8932)
!8932 = !{!32, !8799, !6660}
!8933 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !8905, file: !8801, line: 865, baseType: !8934, size: 64, offset: 448)
!8934 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8935, size: 64)
!8935 = !DISubroutineType(types: !8936)
!8936 = !{!32, !8799}
!8937 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !8905, file: !8801, line: 866, baseType: !8926, size: 64, offset: 512)
!8938 = !DIDerivedType(tag: DW_TAG_member, name: "sriov_configure", scope: !8905, file: !8801, line: 867, baseType: !8939, size: 64, offset: 576)
!8939 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8940, size: 64)
!8940 = !DISubroutineType(types: !8941)
!8941 = !{!32, !8799, !32}
!8942 = !DIDerivedType(tag: DW_TAG_member, name: "err_handler", scope: !8905, file: !8801, line: 868, baseType: !8943, size: 64, offset: 640)
!8943 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8944, size: 64)
!8944 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8945)
!8945 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_error_handlers", file: !8801, line: 795, size: 384, elements: !8946)
!8946 = !{!8947, !8953, !8957, !8958, !8959, !8960}
!8947 = !DIDerivedType(tag: DW_TAG_member, name: "error_detected", scope: !8945, file: !8801, line: 797, baseType: !8948, size: 64)
!8948 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8949, size: 64)
!8949 = !DISubroutineType(types: !8950)
!8950 = !{!8951, !8799, !8952}
!8951 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_ers_result_t", file: !8801, line: 772, baseType: !7)
!8952 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_channel_state_t", file: !8801, line: 180, baseType: !7)
!8953 = !DIDerivedType(tag: DW_TAG_member, name: "mmio_enabled", scope: !8945, file: !8801, line: 801, baseType: !8954, size: 64, offset: 64)
!8954 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8955, size: 64)
!8955 = !DISubroutineType(types: !8956)
!8956 = !{!8951, !8799}
!8957 = !DIDerivedType(tag: DW_TAG_member, name: "slot_reset", scope: !8945, file: !8801, line: 804, baseType: !8954, size: 64, offset: 128)
!8958 = !DIDerivedType(tag: DW_TAG_member, name: "reset_prepare", scope: !8945, file: !8801, line: 807, baseType: !8926, size: 64, offset: 192)
!8959 = !DIDerivedType(tag: DW_TAG_member, name: "reset_done", scope: !8945, file: !8801, line: 808, baseType: !8926, size: 64, offset: 256)
!8960 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !8945, file: !8801, line: 811, baseType: !8926, size: 64, offset: 320)
!8961 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !8905, file: !8801, line: 869, baseType: !6156, size: 64, offset: 704)
!8962 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !8905, file: !8801, line: 870, baseType: !6617, size: 1152, offset: 768)
!8963 = !DIDerivedType(tag: DW_TAG_member, name: "dynids", scope: !8905, file: !8801, line: 871, baseType: !8964, size: 128, offset: 1920)
!8964 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_dynids", file: !8801, line: 759, size: 128, elements: !8965)
!8965 = !{!8966, !8967}
!8966 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !8964, file: !8801, line: 760, baseType: !1670)
!8967 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !8964, file: !8801, line: 761, baseType: !284, size: 128)
!8968 = !DIDerivedType(tag: DW_TAG_member, name: "dma_mask", scope: !8800, file: !8801, line: 340, baseType: !331, size: 64, offset: 832)
!8969 = !DIDerivedType(tag: DW_TAG_member, name: "dma_parms", scope: !8800, file: !8801, line: 346, baseType: !6850, size: 128, offset: 896)
!8970 = !DIDerivedType(tag: DW_TAG_member, name: "current_state", scope: !8800, file: !8801, line: 348, baseType: !8971, size: 32, offset: 1024)
!8971 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_power_t", file: !8801, line: 155, baseType: !32)
!8972 = !DIDerivedType(tag: DW_TAG_member, name: "imm_ready", scope: !8800, file: !8801, line: 351, baseType: !7, size: 1, offset: 1056, flags: DIFlagBitField, extraData: i64 1056)
!8973 = !DIDerivedType(tag: DW_TAG_member, name: "pm_cap", scope: !8800, file: !8801, line: 352, baseType: !794, size: 8, offset: 1064)
!8974 = !DIDerivedType(tag: DW_TAG_member, name: "pme_support", scope: !8800, file: !8801, line: 353, baseType: !7, size: 5, offset: 1072, flags: DIFlagBitField, extraData: i64 1072)
!8975 = !DIDerivedType(tag: DW_TAG_member, name: "pme_poll", scope: !8800, file: !8801, line: 355, baseType: !7, size: 1, offset: 1077, flags: DIFlagBitField, extraData: i64 1072)
!8976 = !DIDerivedType(tag: DW_TAG_member, name: "d1_support", scope: !8800, file: !8801, line: 356, baseType: !7, size: 1, offset: 1078, flags: DIFlagBitField, extraData: i64 1072)
!8977 = !DIDerivedType(tag: DW_TAG_member, name: "d2_support", scope: !8800, file: !8801, line: 357, baseType: !7, size: 1, offset: 1079, flags: DIFlagBitField, extraData: i64 1072)
!8978 = !DIDerivedType(tag: DW_TAG_member, name: "no_d1d2", scope: !8800, file: !8801, line: 358, baseType: !7, size: 1, offset: 1080, flags: DIFlagBitField, extraData: i64 1072)
!8979 = !DIDerivedType(tag: DW_TAG_member, name: "no_d3cold", scope: !8800, file: !8801, line: 359, baseType: !7, size: 1, offset: 1081, flags: DIFlagBitField, extraData: i64 1072)
!8980 = !DIDerivedType(tag: DW_TAG_member, name: "bridge_d3", scope: !8800, file: !8801, line: 360, baseType: !7, size: 1, offset: 1082, flags: DIFlagBitField, extraData: i64 1072)
!8981 = !DIDerivedType(tag: DW_TAG_member, name: "d3cold_allowed", scope: !8800, file: !8801, line: 361, baseType: !7, size: 1, offset: 1083, flags: DIFlagBitField, extraData: i64 1072)
!8982 = !DIDerivedType(tag: DW_TAG_member, name: "mmio_always_on", scope: !8800, file: !8801, line: 362, baseType: !7, size: 1, offset: 1084, flags: DIFlagBitField, extraData: i64 1072)
!8983 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_prepared", scope: !8800, file: !8801, line: 364, baseType: !7, size: 1, offset: 1085, flags: DIFlagBitField, extraData: i64 1072)
!8984 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_d3cold", scope: !8800, file: !8801, line: 365, baseType: !7, size: 1, offset: 1086, flags: DIFlagBitField, extraData: i64 1072)
!8985 = !DIDerivedType(tag: DW_TAG_member, name: "skip_bus_pm", scope: !8800, file: !8801, line: 369, baseType: !7, size: 1, offset: 1087, flags: DIFlagBitField, extraData: i64 1072)
!8986 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_hotplug", scope: !8800, file: !8801, line: 370, baseType: !7, size: 1, offset: 1088, flags: DIFlagBitField, extraData: i64 1072)
!8987 = !DIDerivedType(tag: DW_TAG_member, name: "hotplug_user_indicators", scope: !8800, file: !8801, line: 371, baseType: !7, size: 1, offset: 1089, flags: DIFlagBitField, extraData: i64 1072)
!8988 = !DIDerivedType(tag: DW_TAG_member, name: "clear_retrain_link", scope: !8800, file: !8801, line: 374, baseType: !7, size: 1, offset: 1090, flags: DIFlagBitField, extraData: i64 1072)
!8989 = !DIDerivedType(tag: DW_TAG_member, name: "d3hot_delay", scope: !8800, file: !8801, line: 376, baseType: !7, size: 32, offset: 1120)
!8990 = !DIDerivedType(tag: DW_TAG_member, name: "d3cold_delay", scope: !8800, file: !8801, line: 377, baseType: !7, size: 32, offset: 1152)
!8991 = !DIDerivedType(tag: DW_TAG_member, name: "link_state", scope: !8800, file: !8801, line: 380, baseType: !8992, size: 64, offset: 1216)
!8992 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8993, size: 64)
!8993 = !DICompositeType(tag: DW_TAG_structure_type, name: "pcie_link_state", file: !8801, line: 303, flags: DIFlagFwdDecl)
!8994 = !DIDerivedType(tag: DW_TAG_member, name: "ltr_path", scope: !8800, file: !8801, line: 381, baseType: !7, size: 1, offset: 1280, flags: DIFlagBitField, extraData: i64 1280)
!8995 = !DIDerivedType(tag: DW_TAG_member, name: "l1ss", scope: !8800, file: !8801, line: 383, baseType: !32, size: 32, offset: 1312)
!8996 = !DIDerivedType(tag: DW_TAG_member, name: "eetlp_prefix_path", scope: !8800, file: !8801, line: 385, baseType: !7, size: 1, offset: 1344, flags: DIFlagBitField, extraData: i64 1344)
!8997 = !DIDerivedType(tag: DW_TAG_member, name: "error_state", scope: !8800, file: !8801, line: 387, baseType: !8952, size: 32, offset: 1376)
!8998 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !8800, file: !8801, line: 388, baseType: !6539, size: 5568, offset: 1408)
!8999 = !DIDerivedType(tag: DW_TAG_member, name: "cfg_size", scope: !8800, file: !8801, line: 390, baseType: !32, size: 32, offset: 6976)
!9000 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !8800, file: !8801, line: 396, baseType: !7, size: 32, offset: 7008)
!9001 = !DIDerivedType(tag: DW_TAG_member, name: "resource", scope: !8800, file: !8801, line: 397, baseType: !9002, size: 8704, offset: 7040)
!9002 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8817, size: 8704, elements: !9003)
!9003 = !{!9004}
!9004 = !DISubrange(count: 17)
!9005 = !DIDerivedType(tag: DW_TAG_member, name: "match_driver", scope: !8800, file: !8801, line: 399, baseType: !771, size: 8, offset: 15744)
!9006 = !DIDerivedType(tag: DW_TAG_member, name: "transparent", scope: !8800, file: !8801, line: 401, baseType: !7, size: 1, offset: 15752, flags: DIFlagBitField, extraData: i64 15752)
!9007 = !DIDerivedType(tag: DW_TAG_member, name: "io_window", scope: !8800, file: !8801, line: 402, baseType: !7, size: 1, offset: 15753, flags: DIFlagBitField, extraData: i64 15752)
!9008 = !DIDerivedType(tag: DW_TAG_member, name: "pref_window", scope: !8800, file: !8801, line: 403, baseType: !7, size: 1, offset: 15754, flags: DIFlagBitField, extraData: i64 15752)
!9009 = !DIDerivedType(tag: DW_TAG_member, name: "pref_64_window", scope: !8800, file: !8801, line: 404, baseType: !7, size: 1, offset: 15755, flags: DIFlagBitField, extraData: i64 15752)
!9010 = !DIDerivedType(tag: DW_TAG_member, name: "multifunction", scope: !8800, file: !8801, line: 405, baseType: !7, size: 1, offset: 15756, flags: DIFlagBitField, extraData: i64 15752)
!9011 = !DIDerivedType(tag: DW_TAG_member, name: "is_busmaster", scope: !8800, file: !8801, line: 407, baseType: !7, size: 1, offset: 15757, flags: DIFlagBitField, extraData: i64 15752)
!9012 = !DIDerivedType(tag: DW_TAG_member, name: "no_msi", scope: !8800, file: !8801, line: 408, baseType: !7, size: 1, offset: 15758, flags: DIFlagBitField, extraData: i64 15752)
!9013 = !DIDerivedType(tag: DW_TAG_member, name: "no_64bit_msi", scope: !8800, file: !8801, line: 409, baseType: !7, size: 1, offset: 15759, flags: DIFlagBitField, extraData: i64 15752)
!9014 = !DIDerivedType(tag: DW_TAG_member, name: "block_cfg_access", scope: !8800, file: !8801, line: 410, baseType: !7, size: 1, offset: 15760, flags: DIFlagBitField, extraData: i64 15752)
!9015 = !DIDerivedType(tag: DW_TAG_member, name: "broken_parity_status", scope: !8800, file: !8801, line: 411, baseType: !7, size: 1, offset: 15761, flags: DIFlagBitField, extraData: i64 15752)
!9016 = !DIDerivedType(tag: DW_TAG_member, name: "irq_reroute_variant", scope: !8800, file: !8801, line: 412, baseType: !7, size: 2, offset: 15762, flags: DIFlagBitField, extraData: i64 15752)
!9017 = !DIDerivedType(tag: DW_TAG_member, name: "msi_enabled", scope: !8800, file: !8801, line: 413, baseType: !7, size: 1, offset: 15764, flags: DIFlagBitField, extraData: i64 15752)
!9018 = !DIDerivedType(tag: DW_TAG_member, name: "msix_enabled", scope: !8800, file: !8801, line: 414, baseType: !7, size: 1, offset: 15765, flags: DIFlagBitField, extraData: i64 15752)
!9019 = !DIDerivedType(tag: DW_TAG_member, name: "ari_enabled", scope: !8800, file: !8801, line: 415, baseType: !7, size: 1, offset: 15766, flags: DIFlagBitField, extraData: i64 15752)
!9020 = !DIDerivedType(tag: DW_TAG_member, name: "ats_enabled", scope: !8800, file: !8801, line: 416, baseType: !7, size: 1, offset: 15767, flags: DIFlagBitField, extraData: i64 15752)
!9021 = !DIDerivedType(tag: DW_TAG_member, name: "pasid_enabled", scope: !8800, file: !8801, line: 417, baseType: !7, size: 1, offset: 15768, flags: DIFlagBitField, extraData: i64 15752)
!9022 = !DIDerivedType(tag: DW_TAG_member, name: "pri_enabled", scope: !8800, file: !8801, line: 418, baseType: !7, size: 1, offset: 15769, flags: DIFlagBitField, extraData: i64 15752)
!9023 = !DIDerivedType(tag: DW_TAG_member, name: "is_managed", scope: !8800, file: !8801, line: 419, baseType: !7, size: 1, offset: 15770, flags: DIFlagBitField, extraData: i64 15752)
!9024 = !DIDerivedType(tag: DW_TAG_member, name: "needs_freset", scope: !8800, file: !8801, line: 420, baseType: !7, size: 1, offset: 15771, flags: DIFlagBitField, extraData: i64 15752)
!9025 = !DIDerivedType(tag: DW_TAG_member, name: "state_saved", scope: !8800, file: !8801, line: 421, baseType: !7, size: 1, offset: 15772, flags: DIFlagBitField, extraData: i64 15752)
!9026 = !DIDerivedType(tag: DW_TAG_member, name: "is_physfn", scope: !8800, file: !8801, line: 422, baseType: !7, size: 1, offset: 15773, flags: DIFlagBitField, extraData: i64 15752)
!9027 = !DIDerivedType(tag: DW_TAG_member, name: "is_virtfn", scope: !8800, file: !8801, line: 423, baseType: !7, size: 1, offset: 15774, flags: DIFlagBitField, extraData: i64 15752)
!9028 = !DIDerivedType(tag: DW_TAG_member, name: "reset_fn", scope: !8800, file: !8801, line: 424, baseType: !7, size: 1, offset: 15775, flags: DIFlagBitField, extraData: i64 15752)
!9029 = !DIDerivedType(tag: DW_TAG_member, name: "is_hotplug_bridge", scope: !8800, file: !8801, line: 425, baseType: !7, size: 1, offset: 15776, flags: DIFlagBitField, extraData: i64 15752)
!9030 = !DIDerivedType(tag: DW_TAG_member, name: "shpc_managed", scope: !8800, file: !8801, line: 426, baseType: !7, size: 1, offset: 15777, flags: DIFlagBitField, extraData: i64 15752)
!9031 = !DIDerivedType(tag: DW_TAG_member, name: "is_thunderbolt", scope: !8800, file: !8801, line: 427, baseType: !7, size: 1, offset: 15778, flags: DIFlagBitField, extraData: i64 15752)
!9032 = !DIDerivedType(tag: DW_TAG_member, name: "untrusted", scope: !8800, file: !8801, line: 435, baseType: !7, size: 1, offset: 15779, flags: DIFlagBitField, extraData: i64 15752)
!9033 = !DIDerivedType(tag: DW_TAG_member, name: "external_facing", scope: !8800, file: !8801, line: 441, baseType: !7, size: 1, offset: 15780, flags: DIFlagBitField, extraData: i64 15752)
!9034 = !DIDerivedType(tag: DW_TAG_member, name: "broken_intx_masking", scope: !8800, file: !8801, line: 442, baseType: !7, size: 1, offset: 15781, flags: DIFlagBitField, extraData: i64 15752)
!9035 = !DIDerivedType(tag: DW_TAG_member, name: "io_window_1k", scope: !8800, file: !8801, line: 443, baseType: !7, size: 1, offset: 15782, flags: DIFlagBitField, extraData: i64 15752)
!9036 = !DIDerivedType(tag: DW_TAG_member, name: "irq_managed", scope: !8800, file: !8801, line: 444, baseType: !7, size: 1, offset: 15783, flags: DIFlagBitField, extraData: i64 15752)
!9037 = !DIDerivedType(tag: DW_TAG_member, name: "non_compliant_bars", scope: !8800, file: !8801, line: 445, baseType: !7, size: 1, offset: 15784, flags: DIFlagBitField, extraData: i64 15752)
!9038 = !DIDerivedType(tag: DW_TAG_member, name: "is_probed", scope: !8800, file: !8801, line: 446, baseType: !7, size: 1, offset: 15785, flags: DIFlagBitField, extraData: i64 15752)
!9039 = !DIDerivedType(tag: DW_TAG_member, name: "link_active_reporting", scope: !8800, file: !8801, line: 447, baseType: !7, size: 1, offset: 15786, flags: DIFlagBitField, extraData: i64 15752)
!9040 = !DIDerivedType(tag: DW_TAG_member, name: "no_vf_scan", scope: !8800, file: !8801, line: 448, baseType: !7, size: 1, offset: 15787, flags: DIFlagBitField, extraData: i64 15752)
!9041 = !DIDerivedType(tag: DW_TAG_member, name: "no_command_memory", scope: !8800, file: !8801, line: 449, baseType: !7, size: 1, offset: 15788, flags: DIFlagBitField, extraData: i64 15752)
!9042 = !DIDerivedType(tag: DW_TAG_member, name: "dev_flags", scope: !8800, file: !8801, line: 450, baseType: !9043, size: 16, offset: 15792)
!9043 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_dev_flags_t", file: !8801, line: 206, baseType: !476)
!9044 = !DIDerivedType(tag: DW_TAG_member, name: "enable_cnt", scope: !8800, file: !8801, line: 451, baseType: !383, size: 32, offset: 15808)
!9045 = !DIDerivedType(tag: DW_TAG_member, name: "saved_config_space", scope: !8800, file: !8801, line: 453, baseType: !9046, size: 512, offset: 15840)
!9046 = !DICompositeType(tag: DW_TAG_array_type, baseType: !987, size: 512, elements: !269)
!9047 = !DIDerivedType(tag: DW_TAG_member, name: "saved_cap_space", scope: !8800, file: !8801, line: 454, baseType: !1581, size: 64, offset: 16384)
!9048 = !DIDerivedType(tag: DW_TAG_member, name: "rom_attr", scope: !8800, file: !8801, line: 455, baseType: !6170, size: 64, offset: 16448)
!9049 = !DIDerivedType(tag: DW_TAG_member, name: "rom_attr_enabled", scope: !8800, file: !8801, line: 456, baseType: !32, size: 32, offset: 16512)
!9050 = !DIDerivedType(tag: DW_TAG_member, name: "res_attr", scope: !8800, file: !8801, line: 457, baseType: !9051, size: 1088, offset: 16576)
!9051 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6170, size: 1088, elements: !9003)
!9052 = !DIDerivedType(tag: DW_TAG_member, name: "res_attr_wc", scope: !8800, file: !8801, line: 458, baseType: !9051, size: 1088, offset: 17664)
!9053 = !DIDerivedType(tag: DW_TAG_member, name: "msi_irq_groups", scope: !8800, file: !8801, line: 469, baseType: !6156, size: 64, offset: 18752)
!9054 = !DIDerivedType(tag: DW_TAG_member, name: "vpd", scope: !8800, file: !8801, line: 471, baseType: !9055, size: 64, offset: 18816)
!9055 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9056, size: 64)
!9056 = !DICompositeType(tag: DW_TAG_structure_type, name: "pci_vpd", file: !8801, line: 304, flags: DIFlagFwdDecl)
!9057 = !DIDerivedType(tag: DW_TAG_member, scope: !8800, file: !8801, line: 478, baseType: !9058, size: 64, offset: 18880)
!9058 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8800, file: !8801, line: 478, size: 64, elements: !9059)
!9059 = !{!9060, !9063}
!9060 = !DIDerivedType(tag: DW_TAG_member, name: "sriov", scope: !9058, file: !8801, line: 479, baseType: !9061, size: 64)
!9061 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9062, size: 64)
!9062 = !DICompositeType(tag: DW_TAG_structure_type, name: "pci_sriov", file: !8801, line: 305, flags: DIFlagFwdDecl)
!9063 = !DIDerivedType(tag: DW_TAG_member, name: "physfn", scope: !9058, file: !8801, line: 480, baseType: !8799, size: 64)
!9064 = !DIDerivedType(tag: DW_TAG_member, name: "ats_cap", scope: !8800, file: !8801, line: 482, baseType: !581, size: 16, offset: 18944)
!9065 = !DIDerivedType(tag: DW_TAG_member, name: "ats_stu", scope: !8800, file: !8801, line: 483, baseType: !794, size: 8, offset: 18960)
!9066 = !DIDerivedType(tag: DW_TAG_member, name: "acs_cap", scope: !8800, file: !8801, line: 497, baseType: !581, size: 16, offset: 18976)
!9067 = !DIDerivedType(tag: DW_TAG_member, name: "rom", scope: !8800, file: !8801, line: 498, baseType: !4044, size: 64, offset: 19008)
!9068 = !DIDerivedType(tag: DW_TAG_member, name: "romlen", scope: !8800, file: !8801, line: 499, baseType: !1039, size: 64, offset: 19072)
!9069 = !DIDerivedType(tag: DW_TAG_member, name: "driver_override", scope: !8800, file: !8801, line: 500, baseType: !1038, size: 64, offset: 19136)
!9070 = !DIDerivedType(tag: DW_TAG_member, name: "priv_flags", scope: !8800, file: !8801, line: 502, baseType: !312, size: 64, offset: 19200)
!9071 = !DIDerivedType(tag: DW_TAG_member, name: "hw_lock", scope: !8795, file: !7053, line: 2407, baseType: !1670, offset: 128)
!9072 = !DIDerivedType(tag: DW_TAG_member, name: "intr_mask", scope: !8795, file: !7053, line: 2408, baseType: !987, size: 32, offset: 128)
!9073 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !8795, file: !7053, line: 2409, baseType: !9074, size: 128, offset: 192)
!9074 = !DICompositeType(tag: DW_TAG_array_type, baseType: !290, size: 128, elements: !2664)
!9075 = !DIDerivedType(tag: DW_TAG_member, name: "chip_id", scope: !8795, file: !7053, line: 2411, baseType: !794, size: 8, offset: 320)
!9076 = !DIDerivedType(tag: DW_TAG_member, name: "chip_rev", scope: !8795, file: !7053, line: 2412, baseType: !794, size: 8, offset: 328)
!9077 = !DIDerivedType(tag: DW_TAG_member, name: "copper", scope: !8795, file: !7053, line: 2413, baseType: !794, size: 8, offset: 336)
!9078 = !DIDerivedType(tag: DW_TAG_member, name: "ports", scope: !8795, file: !7053, line: 2414, baseType: !794, size: 8, offset: 344)
!9079 = !DIDerivedType(tag: DW_TAG_member, name: "phy_type", scope: !8795, file: !7053, line: 2415, baseType: !794, size: 8, offset: 352)
!9080 = !DIDerivedType(tag: DW_TAG_member, name: "ram_size", scope: !8795, file: !7053, line: 2417, baseType: !987, size: 32, offset: 384)
!9081 = !DIDerivedType(tag: DW_TAG_member, name: "ram_offset", scope: !8795, file: !7053, line: 2418, baseType: !987, size: 32, offset: 416)
!9082 = !DIDerivedType(tag: DW_TAG_member, name: "phy_addr", scope: !8795, file: !7053, line: 2419, baseType: !581, size: 16, offset: 448)
!9083 = !DIDerivedType(tag: DW_TAG_member, name: "phy_lock", scope: !8795, file: !7053, line: 2420, baseType: !1670, offset: 464)
!9084 = !DIDerivedType(tag: DW_TAG_member, name: "phy_task", scope: !8795, file: !7053, line: 2421, baseType: !9085, size: 320, offset: 512)
!9085 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tasklet_struct", file: !8776, line: 609, size: 320, elements: !9086)
!9086 = !{!9087, !9089, !9090, !9091, !9092, !9103}
!9087 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !9085, file: !8776, line: 611, baseType: !9088, size: 64)
!9088 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9085, size: 64)
!9089 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !9085, file: !8776, line: 612, baseType: !312, size: 64, offset: 64)
!9090 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !9085, file: !8776, line: 613, baseType: !383, size: 32, offset: 128)
!9091 = !DIDerivedType(tag: DW_TAG_member, name: "use_callback", scope: !9085, file: !8776, line: 614, baseType: !771, size: 8, offset: 160)
!9092 = !DIDerivedType(tag: DW_TAG_member, scope: !9085, file: !8776, line: 615, baseType: !9093, size: 64, offset: 192)
!9093 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9085, file: !8776, line: 615, size: 64, elements: !9094)
!9094 = !{!9095, !9099}
!9095 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !9093, file: !8776, line: 616, baseType: !9096, size: 64)
!9096 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9097, size: 64)
!9097 = !DISubroutineType(types: !9098)
!9098 = !{null, !312}
!9099 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !9093, file: !8776, line: 617, baseType: !9100, size: 64)
!9100 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9101, size: 64)
!9101 = !DISubroutineType(types: !9102)
!9102 = !{null, !9088}
!9103 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !9085, file: !8776, line: 619, baseType: !312, size: 64, offset: 256)
!9104 = !DIDerivedType(tag: DW_TAG_member, name: "irq_name", scope: !8795, file: !7053, line: 2423, baseType: !308, offset: 832)
!9105 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9106, size: 64)
!9106 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !476)
!9107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9108, size: 64)
!9108 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !482)
!9109 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9110, size: 64)
!9110 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !268)
!9111 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2337, size: 64)
!9112 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9113, size: 64)
!9113 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !7)
!9114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9115, size: 64)
!9115 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "skb_shared_info", file: !417, line: 512, size: 2560, elements: !9116)
!9116 = !{!9117, !9118, !9119, !9120, !9121, !9122, !9123, !9124, !9128, !9129, !9130, !9131, !9132}
!9117 = !DIDerivedType(tag: DW_TAG_member, name: "__unused", scope: !9115, file: !417, line: 513, baseType: !481, size: 8)
!9118 = !DIDerivedType(tag: DW_TAG_member, name: "meta_len", scope: !9115, file: !417, line: 514, baseType: !481, size: 8, offset: 8)
!9119 = !DIDerivedType(tag: DW_TAG_member, name: "nr_frags", scope: !9115, file: !417, line: 515, baseType: !481, size: 8, offset: 16)
!9120 = !DIDerivedType(tag: DW_TAG_member, name: "tx_flags", scope: !9115, file: !417, line: 516, baseType: !481, size: 8, offset: 24)
!9121 = !DIDerivedType(tag: DW_TAG_member, name: "gso_size", scope: !9115, file: !417, line: 517, baseType: !476, size: 16, offset: 32)
!9122 = !DIDerivedType(tag: DW_TAG_member, name: "gso_segs", scope: !9115, file: !417, line: 519, baseType: !476, size: 16, offset: 48)
!9123 = !DIDerivedType(tag: DW_TAG_member, name: "frag_list", scope: !9115, file: !417, line: 520, baseType: !415, size: 64, offset: 64)
!9124 = !DIDerivedType(tag: DW_TAG_member, name: "hwtstamps", scope: !9115, file: !417, line: 521, baseType: !9125, size: 64, offset: 128)
!9125 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "skb_shared_hwtstamps", file: !417, line: 418, size: 64, elements: !9126)
!9126 = !{!9127}
!9127 = !DIDerivedType(tag: DW_TAG_member, name: "hwtstamp", scope: !9125, file: !417, line: 419, baseType: !453, size: 64)
!9128 = !DIDerivedType(tag: DW_TAG_member, name: "gso_type", scope: !9115, file: !417, line: 522, baseType: !7, size: 32, offset: 192)
!9129 = !DIDerivedType(tag: DW_TAG_member, name: "tskey", scope: !9115, file: !417, line: 523, baseType: !987, size: 32, offset: 224)
!9130 = !DIDerivedType(tag: DW_TAG_member, name: "dataref", scope: !9115, file: !417, line: 528, baseType: !383, size: 32, offset: 256)
!9131 = !DIDerivedType(tag: DW_TAG_member, name: "destructor_arg", scope: !9115, file: !417, line: 532, baseType: !591, size: 64, offset: 320)
!9132 = !DIDerivedType(tag: DW_TAG_member, name: "frags", scope: !9115, file: !417, line: 535, baseType: !9133, size: 2176, offset: 384)
!9133 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9134, size: 2176, elements: !9003)
!9134 = !DIDerivedType(tag: DW_TAG_typedef, name: "skb_frag_t", file: !417, line: 321, baseType: !1876)
!9135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9136, size: 64)
!9136 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iphdr", file: !9137, line: 86, size: 160, elements: !9138)
!9137 = !DIFile(filename: "./include/uapi/linux/ip.h", directory: "/home/lizy2001/genbc/linux")
!9138 = !{!9139, !9140, !9141, !9142, !9143, !9144, !9145, !9146, !9147, !9149, !9150}
!9139 = !DIDerivedType(tag: DW_TAG_member, name: "ihl", scope: !9136, file: !9137, line: 88, baseType: !481, size: 4, flags: DIFlagBitField, extraData: i64 0)
!9140 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !9136, file: !9137, line: 89, baseType: !481, size: 4, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!9141 = !DIDerivedType(tag: DW_TAG_member, name: "tos", scope: !9136, file: !9137, line: 96, baseType: !481, size: 8, offset: 8)
!9142 = !DIDerivedType(tag: DW_TAG_member, name: "tot_len", scope: !9136, file: !9137, line: 97, baseType: !535, size: 16, offset: 16)
!9143 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !9136, file: !9137, line: 98, baseType: !535, size: 16, offset: 32)
!9144 = !DIDerivedType(tag: DW_TAG_member, name: "frag_off", scope: !9136, file: !9137, line: 99, baseType: !535, size: 16, offset: 48)
!9145 = !DIDerivedType(tag: DW_TAG_member, name: "ttl", scope: !9136, file: !9137, line: 100, baseType: !481, size: 8, offset: 64)
!9146 = !DIDerivedType(tag: DW_TAG_member, name: "protocol", scope: !9136, file: !9137, line: 101, baseType: !481, size: 8, offset: 72)
!9147 = !DIDerivedType(tag: DW_TAG_member, name: "check", scope: !9136, file: !9137, line: 102, baseType: !9148, size: 16, offset: 80)
!9148 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sum16", file: !525, line: 36, baseType: !475)
!9149 = !DIDerivedType(tag: DW_TAG_member, name: "saddr", scope: !9136, file: !9137, line: 103, baseType: !3207, size: 32, offset: 96)
!9150 = !DIDerivedType(tag: DW_TAG_member, name: "daddr", scope: !9136, file: !9137, line: 104, baseType: !3207, size: 32, offset: 128)
!9151 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9152, size: 64)
!9152 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9113)
!9153 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9154, size: 64)
!9154 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netdev_hw_addr", file: !31, line: 209, size: 640, elements: !9155)
!9155 = !{!9156, !9157, !9158, !9159, !9160, !9161, !9162, !9163}
!9156 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !9154, file: !31, line: 210, baseType: !284, size: 128)
!9157 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !9154, file: !31, line: 211, baseType: !1031, size: 256, offset: 128)
!9158 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !9154, file: !31, line: 212, baseType: !482, size: 8, offset: 384)
!9159 = !DIDerivedType(tag: DW_TAG_member, name: "global_use", scope: !9154, file: !31, line: 217, baseType: !771, size: 8, offset: 392)
!9160 = !DIDerivedType(tag: DW_TAG_member, name: "sync_cnt", scope: !9154, file: !31, line: 218, baseType: !32, size: 32, offset: 416)
!9161 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !9154, file: !31, line: 219, baseType: !32, size: 32, offset: 448)
!9162 = !DIDerivedType(tag: DW_TAG_member, name: "synced", scope: !9154, file: !31, line: 220, baseType: !32, size: 32, offset: 480)
!9163 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !9154, file: !31, line: 221, baseType: !299, size: 128, align: 64, offset: 512)
!9164 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9165, size: 64)
!9165 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mii_ioctl_data", file: !9166, line: 178, size: 64, elements: !9167)
!9166 = !DIFile(filename: "./include/uapi/linux/mii.h", directory: "/home/lizy2001/genbc/linux")
!9167 = !{!9168, !9169, !9170, !9171}
!9168 = !DIDerivedType(tag: DW_TAG_member, name: "phy_id", scope: !9165, file: !9166, line: 179, baseType: !475, size: 16)
!9169 = !DIDerivedType(tag: DW_TAG_member, name: "reg_num", scope: !9165, file: !9166, line: 180, baseType: !475, size: 16, offset: 16)
!9170 = !DIDerivedType(tag: DW_TAG_member, name: "val_in", scope: !9165, file: !9166, line: 181, baseType: !475, size: 16, offset: 32)
!9171 = !DIDerivedType(tag: DW_TAG_member, name: "val_out", scope: !9165, file: !9166, line: 182, baseType: !475, size: 16, offset: 48)
!9172 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9173, size: 64)
!9173 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "skge_port", file: !7053, line: 2444, size: 4544, elements: !9174)
!9174 = !{!9175, !9176, !9177, !9204, !9205, !9206, !9221, !9222, !9223, !9224, !9225, !9226, !9227, !9228, !9229, !9230, !9231, !9232, !9233, !9234}
!9175 = !DIDerivedType(tag: DW_TAG_member, name: "hw", scope: !9173, file: !7053, line: 2445, baseType: !8794, size: 64)
!9176 = !DIDerivedType(tag: DW_TAG_member, name: "netdev", scope: !9173, file: !7053, line: 2446, baseType: !290, size: 64, offset: 64)
!9177 = !DIDerivedType(tag: DW_TAG_member, name: "napi", scope: !9173, file: !7053, line: 2447, baseType: !9178, size: 3072, offset: 128)
!9178 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "napi_struct", file: !31, line: 324, size: 3072, elements: !9179)
!9179 = !{!9180, !9181, !9182, !9183, !9184, !9185, !9190, !9191, !9197, !9198, !9199, !9200, !9201, !9202, !9203}
!9180 = !DIDerivedType(tag: DW_TAG_member, name: "poll_list", scope: !9178, file: !31, line: 331, baseType: !284, size: 128)
!9181 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !9178, file: !31, line: 333, baseType: !312, size: 64, offset: 128)
!9182 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !9178, file: !31, line: 334, baseType: !32, size: 32, offset: 192)
!9183 = !DIDerivedType(tag: DW_TAG_member, name: "defer_hard_irqs_count", scope: !9178, file: !31, line: 335, baseType: !32, size: 32, offset: 224)
!9184 = !DIDerivedType(tag: DW_TAG_member, name: "gro_bitmask", scope: !9178, file: !31, line: 336, baseType: !312, size: 64, offset: 256)
!9185 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !9178, file: !31, line: 337, baseType: !9186, size: 64, offset: 320)
!9186 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9187, size: 64)
!9187 = !DISubroutineType(types: !9188)
!9188 = !{!32, !9189, !32}
!9189 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9178, size: 64)
!9190 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !9178, file: !31, line: 341, baseType: !290, size: 64, offset: 384)
!9191 = !DIDerivedType(tag: DW_TAG_member, name: "gro_hash", scope: !9178, file: !31, line: 342, baseType: !9192, size: 1536, offset: 448)
!9192 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9193, size: 1536, elements: !2433)
!9193 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gro_list", file: !31, line: 310, size: 192, elements: !9194)
!9194 = !{!9195, !9196}
!9195 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !9193, file: !31, line: 311, baseType: !284, size: 128)
!9196 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !9193, file: !31, line: 312, baseType: !32, size: 32, offset: 128)
!9197 = !DIDerivedType(tag: DW_TAG_member, name: "skb", scope: !9178, file: !31, line: 343, baseType: !415, size: 64, offset: 1984)
!9198 = !DIDerivedType(tag: DW_TAG_member, name: "rx_list", scope: !9178, file: !31, line: 344, baseType: !284, size: 128, offset: 2048)
!9199 = !DIDerivedType(tag: DW_TAG_member, name: "rx_count", scope: !9178, file: !31, line: 345, baseType: !32, size: 32, offset: 2176)
!9200 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !9178, file: !31, line: 346, baseType: !2397, size: 512, offset: 2240)
!9201 = !DIDerivedType(tag: DW_TAG_member, name: "dev_list", scope: !9178, file: !31, line: 347, baseType: !284, size: 128, offset: 2752)
!9202 = !DIDerivedType(tag: DW_TAG_member, name: "napi_hash_node", scope: !9178, file: !31, line: 348, baseType: !276, size: 128, offset: 2880)
!9203 = !DIDerivedType(tag: DW_TAG_member, name: "napi_id", scope: !9178, file: !31, line: 349, baseType: !7, size: 32, offset: 3008)
!9204 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !9173, file: !7053, line: 2448, baseType: !32, size: 32, offset: 3200)
!9205 = !DIDerivedType(tag: DW_TAG_member, name: "msg_enable", scope: !9173, file: !7053, line: 2449, baseType: !987, size: 32, offset: 3232)
!9206 = !DIDerivedType(tag: DW_TAG_member, name: "tx_ring", scope: !9173, file: !7053, line: 2451, baseType: !9207, size: 256, offset: 3264)
!9207 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "skge_ring", file: !7053, line: 2396, size: 256, elements: !9208)
!9208 = !{!9209, !9218, !9219, !9220}
!9209 = !DIDerivedType(tag: DW_TAG_member, name: "to_clean", scope: !9207, file: !7053, line: 2397, baseType: !9210, size: 64)
!9210 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9211, size: 64)
!9211 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "skge_element", file: !7053, line: 2388, size: 320, elements: !9212)
!9212 = !{!9213, !9214, !9215, !9216, !9217}
!9213 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !9211, file: !7053, line: 2389, baseType: !9210, size: 64)
!9214 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !9211, file: !7053, line: 2390, baseType: !591, size: 64, offset: 64)
!9215 = !DIDerivedType(tag: DW_TAG_member, name: "skb", scope: !9211, file: !7053, line: 2391, baseType: !415, size: 64, offset: 128)
!9216 = !DIDerivedType(tag: DW_TAG_member, name: "mapaddr", scope: !9211, file: !7053, line: 2392, baseType: !2036, size: 64, offset: 192)
!9217 = !DIDerivedType(tag: DW_TAG_member, name: "maplen", scope: !9211, file: !7053, line: 2393, baseType: !493, size: 32, offset: 256)
!9218 = !DIDerivedType(tag: DW_TAG_member, name: "to_use", scope: !9207, file: !7053, line: 2398, baseType: !9210, size: 64, offset: 64)
!9219 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !9207, file: !7053, line: 2399, baseType: !9210, size: 64, offset: 128)
!9220 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !9207, file: !7053, line: 2400, baseType: !312, size: 64, offset: 192)
!9221 = !DIDerivedType(tag: DW_TAG_member, name: "rx_ring", scope: !9173, file: !7053, line: 2453, baseType: !9207, size: 256, offset: 3520)
!9222 = !DIDerivedType(tag: DW_TAG_member, name: "rx_buf_size", scope: !9173, file: !7053, line: 2454, baseType: !7, size: 32, offset: 3776)
!9223 = !DIDerivedType(tag: DW_TAG_member, name: "link_timer", scope: !9173, file: !7053, line: 2456, baseType: !3234, size: 320, offset: 3840)
!9224 = !DIDerivedType(tag: DW_TAG_member, name: "flow_control", scope: !9173, file: !7053, line: 2457, baseType: !7196, size: 32, offset: 4160)
!9225 = !DIDerivedType(tag: DW_TAG_member, name: "flow_status", scope: !9173, file: !7053, line: 2458, baseType: !7202, size: 32, offset: 4192)
!9226 = !DIDerivedType(tag: DW_TAG_member, name: "blink_on", scope: !9173, file: !7053, line: 2459, baseType: !794, size: 8, offset: 4224)
!9227 = !DIDerivedType(tag: DW_TAG_member, name: "wol", scope: !9173, file: !7053, line: 2460, baseType: !794, size: 8, offset: 4232)
!9228 = !DIDerivedType(tag: DW_TAG_member, name: "autoneg", scope: !9173, file: !7053, line: 2461, baseType: !794, size: 8, offset: 4240)
!9229 = !DIDerivedType(tag: DW_TAG_member, name: "duplex", scope: !9173, file: !7053, line: 2462, baseType: !794, size: 8, offset: 4248)
!9230 = !DIDerivedType(tag: DW_TAG_member, name: "speed", scope: !9173, file: !7053, line: 2463, baseType: !581, size: 16, offset: 4256)
!9231 = !DIDerivedType(tag: DW_TAG_member, name: "advertising", scope: !9173, file: !7053, line: 2464, baseType: !987, size: 32, offset: 4288)
!9232 = !DIDerivedType(tag: DW_TAG_member, name: "mem", scope: !9173, file: !7053, line: 2466, baseType: !591, size: 64, offset: 4352)
!9233 = !DIDerivedType(tag: DW_TAG_member, name: "dma", scope: !9173, file: !7053, line: 2467, baseType: !2036, size: 64, offset: 4416)
!9234 = !DIDerivedType(tag: DW_TAG_member, name: "mem_size", scope: !9173, file: !7053, line: 2468, baseType: !312, size: 64, offset: 4480)
!9235 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9236, size: 64)
!9236 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9237)
!9237 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "skge_tx_desc", file: !7053, line: 2376, size: 256, elements: !9238)
!9238 = !{!9239, !9240, !9241, !9242, !9243, !9244, !9245, !9246, !9247}
!9239 = !DIDerivedType(tag: DW_TAG_member, name: "control", scope: !9237, file: !7053, line: 2377, baseType: !987, size: 32)
!9240 = !DIDerivedType(tag: DW_TAG_member, name: "next_offset", scope: !9237, file: !7053, line: 2378, baseType: !987, size: 32, offset: 32)
!9241 = !DIDerivedType(tag: DW_TAG_member, name: "dma_lo", scope: !9237, file: !7053, line: 2379, baseType: !987, size: 32, offset: 64)
!9242 = !DIDerivedType(tag: DW_TAG_member, name: "dma_hi", scope: !9237, file: !7053, line: 2380, baseType: !987, size: 32, offset: 96)
!9243 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !9237, file: !7053, line: 2381, baseType: !987, size: 32, offset: 128)
!9244 = !DIDerivedType(tag: DW_TAG_member, name: "csum_offs", scope: !9237, file: !7053, line: 2382, baseType: !987, size: 32, offset: 160)
!9245 = !DIDerivedType(tag: DW_TAG_member, name: "csum_write", scope: !9237, file: !7053, line: 2383, baseType: !581, size: 16, offset: 192)
!9246 = !DIDerivedType(tag: DW_TAG_member, name: "csum_start", scope: !9237, file: !7053, line: 2384, baseType: !581, size: 16, offset: 208)
!9247 = !DIDerivedType(tag: DW_TAG_member, name: "rsvd", scope: !9237, file: !7053, line: 2385, baseType: !987, size: 32, offset: 224)
!9248 = !DIDerivedType(tag: DW_TAG_typedef, name: "__le16", file: !525, line: 29, baseType: !475)
!9249 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9250, size: 64)
!9250 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !581)
!9251 = !{!0, !9252, !9255, !9258, !9261, !9266, !9311, !9360, !9365, !9368, !9370, !9375, !9377, !9382, !9384, !9386, !9389, !9391, !9394, !9396, !9402, !9409, !9417, !9419, !9421, !9427, !9431, !9442, !9445, !9449, !9451, !9454, !9456, !9467, !9469, !9471, !9473, !9475, !9477}
!9252 = !DIGlobalVariableExpression(var: !9253, expr: !DIExpression())
!9253 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_author326", scope: !2, file: !3, line: 61, type: !9254, isLocal: true, isDefinition: true, align: 8)
!9254 = !DICompositeType(tag: DW_TAG_array_type, baseType: !293, size: 512, elements: !3811)
!9255 = !DIGlobalVariableExpression(var: !9256, expr: !DIExpression())
!9256 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_file327", scope: !2, file: !3, line: 62, type: !9257, isLocal: true, isDefinition: true, align: 8)
!9257 = !DICompositeType(tag: DW_TAG_array_type, baseType: !293, size: 352, elements: !2264)
!9258 = !DIGlobalVariableExpression(var: !9259, expr: !DIExpression())
!9259 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_license328", scope: !2, file: !3, line: 62, type: !9260, isLocal: true, isDefinition: true, align: 8)
!9260 = !DICompositeType(tag: DW_TAG_array_type, baseType: !293, size: 136, elements: !9003)
!9261 = !DIGlobalVariableExpression(var: !9262, expr: !DIExpression())
!9262 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_version329", scope: !2, file: !3, line: 63, type: !9263, isLocal: true, isDefinition: true, align: 8)
!9263 = !DICompositeType(tag: DW_TAG_array_type, baseType: !293, size: 144, elements: !9264)
!9264 = !{!9265}
!9265 = !DISubrange(count: 18)
!9266 = !DIGlobalVariableExpression(var: !9267, expr: !DIExpression())
!9267 = distinct !DIGlobalVariable(name: "__modver_attr", scope: !2, file: !3, line: 63, type: !9268, isLocal: true, isDefinition: true)
!9268 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9269)
!9269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9270, size: 64)
!9270 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9271)
!9271 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "module_version_attribute", file: !9272, line: 65, size: 576, align: 64, elements: !9273)
!9272 = !DIFile(filename: "./include/linux/module.h", directory: "/home/lizy2001/genbc/linux")
!9273 = !{!9274, !9309, !9310}
!9274 = !DIDerivedType(tag: DW_TAG_member, name: "mattr", scope: !9271, file: !9272, line: 66, baseType: !9275, size: 448)
!9275 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "module_attribute", file: !9272, line: 54, size: 448, elements: !9276)
!9276 = !{!9277, !9278, !9293, !9297, !9301, !9305}
!9277 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !9275, file: !9272, line: 55, baseType: !6145, size: 128)
!9278 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !9275, file: !9272, line: 56, baseType: !9279, size: 64, offset: 128)
!9279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9280, size: 64)
!9280 = !DISubroutineType(types: !9281)
!9281 = !{!1521, !9282, !9283, !1038}
!9282 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9275, size: 64)
!9283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9284, size: 64)
!9284 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "module_kobject", file: !9272, line: 46, size: 768, elements: !9285)
!9285 = !{!9286, !9287, !9288, !9289, !9292}
!9286 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !9284, file: !9272, line: 47, baseType: !6119, size: 512)
!9287 = !DIDerivedType(tag: DW_TAG_member, name: "mod", scope: !9284, file: !9272, line: 48, baseType: !980, size: 64, offset: 512)
!9288 = !DIDerivedType(tag: DW_TAG_member, name: "drivers_dir", scope: !9284, file: !9272, line: 49, baseType: !6124, size: 64, offset: 576)
!9289 = !DIDerivedType(tag: DW_TAG_member, name: "mp", scope: !9284, file: !9272, line: 50, baseType: !9290, size: 64, offset: 640)
!9290 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9291, size: 64)
!9291 = !DICompositeType(tag: DW_TAG_structure_type, name: "module_param_attrs", file: !9272, line: 50, flags: DIFlagFwdDecl)
!9292 = !DIDerivedType(tag: DW_TAG_member, name: "kobj_completion", scope: !9284, file: !9272, line: 51, baseType: !2596, size: 64, offset: 704)
!9293 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !9275, file: !9272, line: 58, baseType: !9294, size: 64, offset: 192)
!9294 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9295, size: 64)
!9295 = !DISubroutineType(types: !9296)
!9296 = !{!1521, !9282, !9283, !292, !1039}
!9297 = !DIDerivedType(tag: DW_TAG_member, name: "setup", scope: !9275, file: !9272, line: 60, baseType: !9298, size: 64, offset: 256)
!9298 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9299, size: 64)
!9299 = !DISubroutineType(types: !9300)
!9300 = !{null, !980, !292}
!9301 = !DIDerivedType(tag: DW_TAG_member, name: "test", scope: !9275, file: !9272, line: 61, baseType: !9302, size: 64, offset: 320)
!9302 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9303, size: 64)
!9303 = !DISubroutineType(types: !9304)
!9304 = !{!32, !980}
!9305 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !9275, file: !9272, line: 62, baseType: !9306, size: 64, offset: 384)
!9306 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9307, size: 64)
!9307 = !DISubroutineType(types: !9308)
!9308 = !{null, !980}
!9309 = !DIDerivedType(tag: DW_TAG_member, name: "module_name", scope: !9271, file: !9272, line: 67, baseType: !292, size: 64, offset: 448)
!9310 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !9271, file: !9272, line: 68, baseType: !292, size: 64, offset: 512)
!9311 = !DIGlobalVariableExpression(var: !9312, expr: !DIExpression())
!9312 = distinct !DIGlobalVariable(name: "__param_debug", scope: !2, file: !3, line: 70, type: !9313, isLocal: true, isDefinition: true, align: 64)
!9313 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9314)
!9314 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_param", file: !9315, line: 69, size: 320, elements: !9316)
!9315 = !DIFile(filename: "./include/linux/moduleparam.h", directory: "/home/lizy2001/genbc/linux")
!9316 = !{!9317, !9318, !9319, !9335, !9336, !9338, !9339}
!9317 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !9314, file: !9315, line: 70, baseType: !292, size: 64)
!9318 = !DIDerivedType(tag: DW_TAG_member, name: "mod", scope: !9314, file: !9315, line: 71, baseType: !980, size: 64, offset: 64)
!9319 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !9314, file: !9315, line: 72, baseType: !9320, size: 64, offset: 128)
!9320 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9321, size: 64)
!9321 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9322)
!9322 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_param_ops", file: !9315, line: 47, size: 256, elements: !9323)
!9323 = !{!9324, !9325, !9330, !9334}
!9324 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !9322, file: !9315, line: 49, baseType: !7, size: 32)
!9325 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !9322, file: !9315, line: 51, baseType: !9326, size: 64, offset: 64)
!9326 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9327, size: 64)
!9327 = !DISubroutineType(types: !9328)
!9328 = !{!32, !292, !9329}
!9329 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9313, size: 64)
!9330 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !9322, file: !9315, line: 53, baseType: !9331, size: 64, offset: 128)
!9331 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9332, size: 64)
!9332 = !DISubroutineType(types: !9333)
!9333 = !{!32, !1038, !9329}
!9334 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !9322, file: !9315, line: 55, baseType: !1415, size: 64, offset: 192)
!9335 = !DIDerivedType(tag: DW_TAG_member, name: "perm", scope: !9314, file: !9315, line: 73, baseType: !9250, size: 16, offset: 192)
!9336 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !9314, file: !9315, line: 74, baseType: !9337, size: 8, offset: 208)
!9337 = !DIDerivedType(tag: DW_TAG_typedef, name: "s8", file: !332, line: 16, baseType: !5994)
!9338 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !9314, file: !9315, line: 75, baseType: !794, size: 8, offset: 216)
!9339 = !DIDerivedType(tag: DW_TAG_member, scope: !9314, file: !9315, line: 76, baseType: !9340, size: 64, offset: 256)
!9340 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9314, file: !9315, line: 76, size: 64, elements: !9341)
!9341 = !{!9342, !9343, !9350}
!9342 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !9340, file: !9315, line: 77, baseType: !591, size: 64)
!9343 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !9340, file: !9315, line: 78, baseType: !9344, size: 64)
!9344 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9345, size: 64)
!9345 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9346)
!9346 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kparam_string", file: !9315, line: 86, size: 128, elements: !9347)
!9347 = !{!9348, !9349}
!9348 = !DIDerivedType(tag: DW_TAG_member, name: "maxlen", scope: !9346, file: !9315, line: 87, baseType: !7, size: 32)
!9349 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !9346, file: !9315, line: 88, baseType: !1038, size: 64, offset: 64)
!9350 = !DIDerivedType(tag: DW_TAG_member, name: "arr", scope: !9340, file: !9315, line: 79, baseType: !9351, size: 64)
!9351 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9352, size: 64)
!9352 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9353)
!9353 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kparam_array", file: !9315, line: 92, size: 256, elements: !9354)
!9354 = !{!9355, !9356, !9357, !9358, !9359}
!9355 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !9353, file: !9315, line: 94, baseType: !7, size: 32)
!9356 = !DIDerivedType(tag: DW_TAG_member, name: "elemsize", scope: !9353, file: !9315, line: 95, baseType: !7, size: 32, offset: 32)
!9357 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !9353, file: !9315, line: 96, baseType: !4607, size: 64, offset: 64)
!9358 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !9353, file: !9315, line: 97, baseType: !9320, size: 64, offset: 128)
!9359 = !DIDerivedType(tag: DW_TAG_member, name: "elem", scope: !9353, file: !9315, line: 98, baseType: !591, size: 64, offset: 192)
!9360 = !DIGlobalVariableExpression(var: !9361, expr: !DIExpression())
!9361 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_debugtype330", scope: !2, file: !3, line: 70, type: !9362, isLocal: true, isDefinition: true, align: 8)
!9362 = !DICompositeType(tag: DW_TAG_array_type, baseType: !293, size: 192, elements: !9363)
!9363 = !{!9364}
!9364 = !DISubrange(count: 24)
!9365 = !DIGlobalVariableExpression(var: !9366, expr: !DIExpression())
!9366 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_debug331", scope: !2, file: !3, line: 71, type: !9367, isLocal: true, isDefinition: true, align: 8)
!9367 = !DICompositeType(tag: DW_TAG_array_type, baseType: !293, size: 384, elements: !458)
!9368 = !DIGlobalVariableExpression(var: !9369, expr: !DIExpression())
!9369 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_skge_init_module349", scope: !2, file: !3, line: 4184, type: !591, isLocal: true, isDefinition: true)
!9370 = !DIGlobalVariableExpression(var: !9371, expr: !DIExpression())
!9371 = distinct !DIGlobalVariable(name: "__exitcall_skge_cleanup_module", scope: !2, file: !3, line: 4185, type: !9372, isLocal: true, isDefinition: true)
!9372 = !DIDerivedType(tag: DW_TAG_typedef, name: "exitcall_t", file: !9373, line: 117, baseType: !9374)
!9373 = !DIFile(filename: "./include/linux/init.h", directory: "/home/lizy2001/genbc/linux")
!9374 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3808, size: 64)
!9375 = !DIGlobalVariableExpression(var: !9376, expr: !DIExpression())
!9376 = distinct !DIGlobalVariable(name: "___modver_attr", scope: !2, file: !3, line: 63, type: !9271, isLocal: true, isDefinition: true)
!9377 = !DIGlobalVariableExpression(var: !9378, expr: !DIExpression())
!9378 = distinct !DIGlobalVariable(name: "__param_str_debug", scope: !2, file: !3, line: 70, type: !9379, isLocal: true, isDefinition: true)
!9379 = !DICompositeType(tag: DW_TAG_array_type, baseType: !293, size: 88, elements: !9380)
!9380 = !{!9381}
!9381 = !DISubrange(count: 11)
!9382 = !DIGlobalVariableExpression(var: !9383, expr: !DIExpression())
!9383 = distinct !DIGlobalVariable(name: "debug", scope: !2, file: !3, line: 69, type: !32, isLocal: true, isDefinition: true)
!9384 = !DIGlobalVariableExpression(var: !9385, expr: !DIExpression())
!9385 = distinct !DIGlobalVariable(name: "skge_driver", scope: !2, file: !3, line: 4136, type: !8905, isLocal: true, isDefinition: true)
!9386 = !DIGlobalVariableExpression(var: !9387, expr: !DIExpression())
!9387 = distinct !DIGlobalVariable(name: "skge_id_table", scope: !2, file: !3, line: 73, type: !9388, isLocal: true, isDefinition: true)
!9388 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8911, size: 3072, elements: !4149)
!9389 = !DIGlobalVariableExpression(var: !9390, expr: !DIExpression())
!9390 = distinct !DIGlobalVariable(name: "only_32bit_dma", scope: !2, file: !3, line: 3872, type: !32, isLocal: true, isDefinition: true)
!9391 = !DIGlobalVariableExpression(var: !9392, expr: !DIExpression())
!9392 = distinct !DIGlobalVariable(name: "phy_pause_map", scope: !2, file: !3, line: 1193, type: !9393, isLocal: true, isDefinition: true)
!9393 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9250, size: 80, elements: !2799)
!9394 = !DIGlobalVariableExpression(var: !9395, expr: !DIExpression())
!9395 = distinct !DIGlobalVariable(name: "fiber_pause_map", scope: !2, file: !3, line: 1201, type: !9393, isLocal: true, isDefinition: true)
!9396 = !DIGlobalVariableExpression(var: !9397, expr: !DIExpression())
!9397 = distinct !DIGlobalVariable(name: "zero", scope: !9398, file: !3, line: 1168, type: !9401, isLocal: true, isDefinition: true)
!9398 = distinct !DISubprogram(name: "genesis_reset", scope: !3, file: !3, line: 1166, type: !9399, scopeLine: 1167, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!9399 = !DISubroutineType(types: !9400)
!9400 = !{null, !8794, !32}
!9401 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5860, size: 64, elements: !2433)
!9402 = !DIGlobalVariableExpression(var: !9403, expr: !DIExpression())
!9403 = distinct !DIGlobalVariable(name: "buf", scope: !9404, file: !3, line: 3498, type: !267, isLocal: true, isDefinition: true)
!9404 = distinct !DISubprogram(name: "skge_board_name", scope: !3, file: !3, line: 3495, type: !9405, scopeLine: 3496, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!9405 = !DISubroutineType(types: !9406)
!9406 = !{!292, !9407}
!9407 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9408, size: 64)
!9408 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8795)
!9409 = !DIGlobalVariableExpression(var: !9410, expr: !DIExpression())
!9410 = distinct !DIGlobalVariable(name: "skge_chips", scope: !2, file: !3, line: 3488, type: !9411, isLocal: true, isDefinition: true)
!9411 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9412, size: 512, elements: !2272)
!9412 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9413)
!9413 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3, line: 3485, size: 128, elements: !9414)
!9414 = !{!9415, !9416}
!9415 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !9413, file: !3, line: 3486, baseType: !794, size: 8)
!9416 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !9413, file: !3, line: 3487, baseType: !292, size: 64, offset: 64)
!9417 = !DIGlobalVariableExpression(var: !9418, expr: !DIExpression(DW_OP_constu, 55, DW_OP_stack_value))
!9418 = distinct !DIGlobalVariable(name: "default_msg", scope: !2, file: !3, line: 65, type: !5858, isLocal: true, isDefinition: true)
!9419 = !DIGlobalVariableExpression(var: !9420, expr: !DIExpression())
!9420 = distinct !DIGlobalVariable(name: "skge_netdev_ops", scope: !2, file: !3, line: 3785, type: !397, isLocal: true, isDefinition: true)
!9421 = !DIGlobalVariableExpression(var: !9422, expr: !DIExpression())
!9422 = distinct !DIGlobalVariable(name: "__warned", scope: !9423, file: !9424, line: 275, type: !771, isLocal: true, isDefinition: true)
!9423 = distinct !DISubprogram(name: "dma_map_single_attrs", scope: !9424, file: !9424, line: 271, type: !9425, scopeLine: 273, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!9424 = !DIFile(filename: "./include/linux/dma-mapping.h", directory: "/home/lizy2001/genbc/linux")
!9425 = !DISubroutineType(types: !9426)
!9426 = !{!2036, !6544, !591, !1039, !8180, !312}
!9427 = !DIGlobalVariableExpression(var: !9428, expr: !DIExpression())
!9428 = distinct !DIGlobalVariable(name: "zero", scope: !9429, file: !3, line: 1533, type: !9430, isLocal: true, isDefinition: true)
!9429 = distinct !DISubprogram(name: "genesis_mac_init", scope: !3, file: !3, line: 1526, type: !9399, scopeLine: 1527, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!9430 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5860, size: 48, elements: !999)
!9431 = !DIGlobalVariableExpression(var: !9432, expr: !DIExpression())
!9432 = distinct !DIGlobalVariable(name: "A1hack", scope: !9433, file: !3, line: 1287, type: !9436, isLocal: true, isDefinition: true)
!9433 = distinct !DISubprogram(name: "bcom_phy_init", scope: !3, file: !3, line: 1276, type: !9434, scopeLine: 1277, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!9434 = !DISubroutineType(types: !9435)
!9435 = !{null, !9172}
!9436 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9437, size: 384, elements: !4149)
!9437 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9438)
!9438 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !9433, file: !3, line: 1284, size: 32, elements: !9439)
!9439 = !{!9440, !9441}
!9440 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !9438, file: !3, line: 1285, baseType: !581, size: 16)
!9441 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !9438, file: !3, line: 1286, baseType: !581, size: 16, offset: 16)
!9442 = !DIGlobalVariableExpression(var: !9443, expr: !DIExpression())
!9443 = distinct !DIGlobalVariable(name: "C0hack", scope: !9433, file: !3, line: 1292, type: !9444, isLocal: true, isDefinition: true)
!9444 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9437, size: 192, elements: !999)
!9445 = !DIGlobalVariableExpression(var: !9446, expr: !DIExpression())
!9446 = distinct !DIGlobalVariable(name: "rxqaddr", scope: !2, file: !3, line: 108, type: !9447, isLocal: true, isDefinition: true)
!9447 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9448, size: 64, elements: !2664)
!9448 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !32)
!9449 = !DIGlobalVariableExpression(var: !9450, expr: !DIExpression())
!9450 = distinct !DIGlobalVariable(name: "txqaddr", scope: !2, file: !3, line: 107, type: !9447, isLocal: true, isDefinition: true)
!9451 = !DIGlobalVariableExpression(var: !9452, expr: !DIExpression())
!9452 = distinct !DIGlobalVariable(name: "portmask", scope: !2, file: !3, line: 112, type: !9453, isLocal: true, isDefinition: true)
!9453 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5858, size: 64, elements: !2664)
!9454 = !DIGlobalVariableExpression(var: !9455, expr: !DIExpression())
!9455 = distinct !DIGlobalVariable(name: "pause_mc_addr", scope: !2, file: !3, line: 2916, type: !9430, isLocal: true, isDefinition: true)
!9456 = !DIGlobalVariableExpression(var: !9457, expr: !DIExpression())
!9457 = distinct !DIGlobalVariable(name: "skge_stats", scope: !2, file: !3, line: 408, type: !9458, isLocal: true, isDefinition: true)
!9458 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9459, size: 6048, elements: !9465)
!9459 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9460)
!9460 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "skge_stat", file: !3, line: 404, size: 288, elements: !9461)
!9461 = !{!9462, !9463, !9464}
!9462 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !9460, file: !3, line: 405, baseType: !4624, size: 256)
!9463 = !DIDerivedType(tag: DW_TAG_member, name: "xmac_offset", scope: !9460, file: !3, line: 406, baseType: !581, size: 16, offset: 256)
!9464 = !DIDerivedType(tag: DW_TAG_member, name: "gma_offset", scope: !9460, file: !3, line: 407, baseType: !581, size: 16, offset: 272)
!9465 = !{!9466}
!9466 = !DISubrange(count: 21)
!9467 = !DIGlobalVariableExpression(var: !9468, expr: !DIExpression())
!9468 = distinct !DIGlobalVariable(name: "skge_ethtool_ops", scope: !2, file: !3, line: 878, type: !5520, isLocal: true, isDefinition: true)
!9469 = !DIGlobalVariableExpression(var: !9470, expr: !DIExpression())
!9470 = distinct !DIGlobalVariable(name: "rxirqmask", scope: !2, file: !3, line: 109, type: !9453, isLocal: true, isDefinition: true)
!9471 = !DIGlobalVariableExpression(var: !9472, expr: !DIExpression())
!9472 = distinct !DIGlobalVariable(name: "txirqmask", scope: !2, file: !3, line: 110, type: !9453, isLocal: true, isDefinition: true)
!9473 = !DIGlobalVariableExpression(var: !9474, expr: !DIExpression())
!9474 = distinct !DIGlobalVariable(name: "napimask", scope: !2, file: !3, line: 111, type: !9453, isLocal: true, isDefinition: true)
!9475 = !DIGlobalVariableExpression(var: !9476, expr: !DIExpression())
!9476 = distinct !DIGlobalVariable(name: "skge_pm_ops", scope: !2, file: !3, line: 4108, type: !6571, isLocal: true, isDefinition: true)
!9477 = !DIGlobalVariableExpression(var: !9478, expr: !DIExpression())
!9478 = distinct !DIGlobalVariable(name: "skge_32bit_dma_boards", scope: !2, file: !3, line: 4145, type: !9479, isLocal: true, isDefinition: true)
!9479 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9480, size: 11008, elements: !2272)
!9480 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9481)
!9481 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dmi_system_id", file: !6635, line: 566, size: 2752, elements: !9482)
!9482 = !{!9483, !9488, !9489, !9499}
!9483 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !9481, file: !6635, line: 567, baseType: !9484, size: 64)
!9484 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9485, size: 64)
!9485 = !DISubroutineType(types: !9486)
!9486 = !{!32, !9487}
!9487 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9480, size: 64)
!9488 = !DIDerivedType(tag: DW_TAG_member, name: "ident", scope: !9481, file: !6635, line: 568, baseType: !292, size: 64, offset: 64)
!9489 = !DIDerivedType(tag: DW_TAG_member, name: "matches", scope: !9481, file: !6635, line: 569, baseType: !9490, size: 2560, offset: 128)
!9490 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9491, size: 2560, elements: !2272)
!9491 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dmi_strmatch", file: !6635, line: 560, size: 640, elements: !9492)
!9492 = !{!9493, !9494, !9495}
!9493 = !DIDerivedType(tag: DW_TAG_member, name: "slot", scope: !9491, file: !6635, line: 561, baseType: !482, size: 7, flags: DIFlagBitField, extraData: i64 0)
!9494 = !DIDerivedType(tag: DW_TAG_member, name: "exact_match", scope: !9491, file: !6635, line: 562, baseType: !482, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!9495 = !DIDerivedType(tag: DW_TAG_member, name: "substr", scope: !9491, file: !6635, line: 563, baseType: !9496, size: 632, offset: 8)
!9496 = !DICompositeType(tag: DW_TAG_array_type, baseType: !268, size: 632, elements: !9497)
!9497 = !{!9498}
!9498 = !DISubrange(count: 79)
!9499 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !9481, file: !6635, line: 570, baseType: !591, size: 64, offset: 2688)
!9500 = !DICompositeType(tag: DW_TAG_array_type, baseType: !293, size: 416, elements: !5807)
!9501 = !{!"rsp"}
!9502 = !{i32 7, !"Dwarf Version", i32 4}
!9503 = !{i32 2, !"Debug Info Version", i32 3}
!9504 = !{i32 1, !"wchar_size", i32 2}
!9505 = !{i32 1, !"Code Model", i32 2}
!9506 = !{!"clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)"}
!9507 = distinct !DISubprogram(name: "skge_cleanup_module", scope: !3, file: !3, line: 4178, type: !3808, scopeLine: 4179, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!9508 = !DILocation(line: 4180, column: 2, scope: !9507)
!9509 = !DILocation(line: 4182, column: 1, scope: !9507)
!9510 = distinct !DISubprogram(name: "skge_init_module", scope: !3, file: !3, line: 4170, type: !9511, scopeLine: 4171, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!9511 = !DISubroutineType(types: !9512)
!9512 = !{!32}
!9513 = !DILocation(line: 4172, column: 6, scope: !9514)
!9514 = distinct !DILexicalBlock(scope: !9510, file: !3, line: 4172, column: 6)
!9515 = !DILocation(line: 4172, column: 6, scope: !9510)
!9516 = !DILocation(line: 4173, column: 18, scope: !9514)
!9517 = !DILocation(line: 4173, column: 3, scope: !9514)
!9518 = !DILocation(line: 4175, column: 9, scope: !9510)
!9519 = !DILocation(line: 4175, column: 2, scope: !9510)
!9520 = distinct !DISubprogram(name: "skge_probe", scope: !3, file: !3, line: 3874, type: !8923, scopeLine: 3875, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!9521 = !DILocalVariable(name: "lock", arg: 1, scope: !9522, file: !9523, line: 327, type: !2181)
!9522 = distinct !DISubprogram(name: "spinlock_check", scope: !9523, file: !9523, line: 327, type: !9524, scopeLine: 328, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!9523 = !DIFile(filename: "./include/linux/spinlock.h", directory: "/home/lizy2001/genbc/linux")
!9524 = !DISubroutineType(types: !9525)
!9525 = !{!9526, !2181}
!9526 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1761, size: 64)
!9527 = !DILocation(line: 327, column: 67, scope: !9522, inlinedAt: !9528)
!9528 = distinct !DILocation(line: 3929, column: 2, scope: !9529)
!9529 = distinct !DILexicalBlock(scope: !9520, file: !3, line: 3929, column: 2)
!9530 = !DILocation(line: 327, column: 67, scope: !9522, inlinedAt: !9531)
!9531 = distinct !DILocation(line: 3928, column: 2, scope: !9532)
!9532 = distinct !DILexicalBlock(scope: !9520, file: !3, line: 3928, column: 2)
!9533 = !DILocalVariable(name: "pdev", arg: 1, scope: !9520, file: !3, line: 3874, type: !8799)
!9534 = !DILocation(line: 3874, column: 39, scope: !9520)
!9535 = !DILocalVariable(name: "ent", arg: 2, scope: !9520, file: !3, line: 3874, type: !8910)
!9536 = !DILocation(line: 3874, column: 73, scope: !9520)
!9537 = !DILocalVariable(name: "dev", scope: !9520, file: !3, line: 3876, type: !290)
!9538 = !DILocation(line: 3876, column: 21, scope: !9520)
!9539 = !DILocalVariable(name: "dev1", scope: !9520, file: !3, line: 3876, type: !290)
!9540 = !DILocation(line: 3876, column: 27, scope: !9520)
!9541 = !DILocalVariable(name: "hw", scope: !9520, file: !3, line: 3877, type: !8794)
!9542 = !DILocation(line: 3877, column: 18, scope: !9520)
!9543 = !DILocalVariable(name: "err", scope: !9520, file: !3, line: 3878, type: !32)
!9544 = !DILocation(line: 3878, column: 6, scope: !9520)
!9545 = !DILocalVariable(name: "using_dac", scope: !9520, file: !3, line: 3878, type: !32)
!9546 = !DILocation(line: 3878, column: 11, scope: !9520)
!9547 = !DILocation(line: 3880, column: 26, scope: !9520)
!9548 = !DILocation(line: 3880, column: 8, scope: !9520)
!9549 = !DILocation(line: 3880, column: 6, scope: !9520)
!9550 = !DILocation(line: 3881, column: 6, scope: !9551)
!9551 = distinct !DILexicalBlock(scope: !9520, file: !3, line: 3881, column: 6)
!9552 = !DILocation(line: 3881, column: 6, scope: !9520)
!9553 = !DILocation(line: 3882, column: 3, scope: !9554)
!9554 = distinct !DILexicalBlock(scope: !9551, file: !3, line: 3881, column: 11)
!9555 = !DILocation(line: 3883, column: 3, scope: !9554)
!9556 = !DILocation(line: 3886, column: 28, scope: !9520)
!9557 = !DILocation(line: 3886, column: 8, scope: !9520)
!9558 = !DILocation(line: 3886, column: 6, scope: !9520)
!9559 = !DILocation(line: 3887, column: 6, scope: !9560)
!9560 = distinct !DILexicalBlock(scope: !9520, file: !3, line: 3887, column: 6)
!9561 = !DILocation(line: 3887, column: 6, scope: !9520)
!9562 = !DILocation(line: 3888, column: 3, scope: !9563)
!9563 = distinct !DILexicalBlock(scope: !9560, file: !3, line: 3887, column: 11)
!9564 = !DILocation(line: 3889, column: 3, scope: !9563)
!9565 = !DILocation(line: 3892, column: 17, scope: !9520)
!9566 = !DILocation(line: 3892, column: 2, scope: !9520)
!9567 = !DILocation(line: 3894, column: 7, scope: !9568)
!9568 = distinct !DILexicalBlock(scope: !9520, file: !3, line: 3894, column: 6)
!9569 = !DILocation(line: 3894, column: 22, scope: !9568)
!9570 = !DILocation(line: 3894, column: 40, scope: !9568)
!9571 = !DILocation(line: 3894, column: 46, scope: !9568)
!9572 = !DILocation(line: 3894, column: 26, scope: !9568)
!9573 = !DILocation(line: 3894, column: 6, scope: !9520)
!9574 = !DILocation(line: 3895, column: 13, scope: !9575)
!9575 = distinct !DILexicalBlock(scope: !9568, file: !3, line: 3894, column: 70)
!9576 = !DILocation(line: 3896, column: 32, scope: !9575)
!9577 = !DILocation(line: 3896, column: 38, scope: !9575)
!9578 = !DILocation(line: 3896, column: 9, scope: !9575)
!9579 = !DILocation(line: 3896, column: 7, scope: !9575)
!9580 = !DILocation(line: 3897, column: 2, scope: !9575)
!9581 = !DILocation(line: 3897, column: 35, scope: !9582)
!9582 = distinct !DILexicalBlock(scope: !9568, file: !3, line: 3897, column: 13)
!9583 = !DILocation(line: 3897, column: 41, scope: !9582)
!9584 = !DILocation(line: 3897, column: 21, scope: !9582)
!9585 = !DILocation(line: 3897, column: 19, scope: !9582)
!9586 = !DILocation(line: 3897, column: 13, scope: !9568)
!9587 = !DILocation(line: 3898, column: 13, scope: !9588)
!9588 = distinct !DILexicalBlock(scope: !9582, file: !3, line: 3897, column: 66)
!9589 = !DILocation(line: 3899, column: 32, scope: !9588)
!9590 = !DILocation(line: 3899, column: 38, scope: !9588)
!9591 = !DILocation(line: 3899, column: 9, scope: !9588)
!9592 = !DILocation(line: 3899, column: 7, scope: !9588)
!9593 = !DILocation(line: 3900, column: 2, scope: !9588)
!9594 = !DILocation(line: 3902, column: 6, scope: !9595)
!9595 = distinct !DILexicalBlock(scope: !9520, file: !3, line: 3902, column: 6)
!9596 = !DILocation(line: 3902, column: 6, scope: !9520)
!9597 = !DILocation(line: 3903, column: 3, scope: !9598)
!9598 = distinct !DILexicalBlock(scope: !9595, file: !3, line: 3902, column: 11)
!9599 = !DILocation(line: 3904, column: 3, scope: !9598)
!9600 = !DILocation(line: 3918, column: 6, scope: !9520)
!9601 = !DILocation(line: 3921, column: 26, scope: !9520)
!9602 = !DILocation(line: 3921, column: 17, scope: !9520)
!9603 = !DILocation(line: 3921, column: 10, scope: !9520)
!9604 = !DILocation(line: 3921, column: 8, scope: !9520)
!9605 = !DILocation(line: 3921, column: 33, scope: !9520)
!9606 = !DILocation(line: 3920, column: 7, scope: !9520)
!9607 = !DILocation(line: 3920, column: 5, scope: !9520)
!9608 = !DILocation(line: 3922, column: 7, scope: !9609)
!9609 = distinct !DILexicalBlock(scope: !9520, file: !3, line: 3922, column: 6)
!9610 = !DILocation(line: 3922, column: 6, scope: !9520)
!9611 = !DILocation(line: 3923, column: 3, scope: !9609)
!9612 = !DILocation(line: 3925, column: 10, scope: !9520)
!9613 = !DILocation(line: 3925, column: 14, scope: !9520)
!9614 = !DILocation(line: 3925, column: 53, scope: !9520)
!9615 = !DILocation(line: 3925, column: 44, scope: !9520)
!9616 = !DILocation(line: 3925, column: 2, scope: !9520)
!9617 = !DILocation(line: 3927, column: 13, scope: !9520)
!9618 = !DILocation(line: 3927, column: 2, scope: !9520)
!9619 = !DILocation(line: 3927, column: 6, scope: !9520)
!9620 = !DILocation(line: 3927, column: 11, scope: !9520)
!9621 = !DILocation(line: 3928, column: 2, scope: !9520)
!9622 = !DILocation(line: 3928, column: 2, scope: !9532)
!9623 = !DILocation(line: 329, column: 10, scope: !9522, inlinedAt: !9531)
!9624 = !DILocation(line: 329, column: 16, scope: !9522, inlinedAt: !9531)
!9625 = !DILocation(line: 3929, column: 2, scope: !9520)
!9626 = !DILocation(line: 3929, column: 2, scope: !9529)
!9627 = !DILocation(line: 329, column: 10, scope: !9522, inlinedAt: !9528)
!9628 = !DILocation(line: 329, column: 16, scope: !9522, inlinedAt: !9528)
!9629 = !DILocation(line: 3930, column: 17, scope: !9520)
!9630 = !DILocation(line: 3930, column: 21, scope: !9520)
!9631 = !DILocation(line: 3930, column: 2, scope: !9520)
!9632 = !DILocation(line: 3932, column: 21, scope: !9520)
!9633 = !DILocation(line: 3932, column: 13, scope: !9520)
!9634 = !DILocation(line: 3932, column: 2, scope: !9520)
!9635 = !DILocation(line: 3932, column: 6, scope: !9520)
!9636 = !DILocation(line: 3932, column: 11, scope: !9520)
!9637 = !DILocation(line: 3933, column: 7, scope: !9638)
!9638 = distinct !DILexicalBlock(scope: !9520, file: !3, line: 3933, column: 6)
!9639 = !DILocation(line: 3933, column: 11, scope: !9638)
!9640 = !DILocation(line: 3933, column: 6, scope: !9520)
!9641 = !DILocation(line: 3934, column: 3, scope: !9642)
!9642 = distinct !DILexicalBlock(scope: !9638, file: !3, line: 3933, column: 17)
!9643 = !DILocation(line: 3935, column: 3, scope: !9642)
!9644 = !DILocation(line: 3938, column: 19, scope: !9520)
!9645 = !DILocation(line: 3938, column: 8, scope: !9520)
!9646 = !DILocation(line: 3938, column: 6, scope: !9520)
!9647 = !DILocation(line: 3939, column: 6, scope: !9648)
!9648 = distinct !DILexicalBlock(scope: !9520, file: !3, line: 3939, column: 6)
!9649 = !DILocation(line: 3939, column: 6, scope: !9520)
!9650 = !DILocation(line: 3940, column: 3, scope: !9648)
!9651 = !DILocation(line: 3942, column: 2, scope: !9520)
!9652 = !DILocation(line: 3947, column: 21, scope: !9520)
!9653 = !DILocation(line: 3947, column: 28, scope: !9520)
!9654 = !DILocation(line: 3947, column: 8, scope: !9520)
!9655 = !DILocation(line: 3947, column: 6, scope: !9520)
!9656 = !DILocation(line: 3948, column: 7, scope: !9657)
!9657 = distinct !DILexicalBlock(scope: !9520, file: !3, line: 3948, column: 6)
!9658 = !DILocation(line: 3948, column: 6, scope: !9520)
!9659 = !DILocation(line: 3949, column: 7, scope: !9660)
!9660 = distinct !DILexicalBlock(scope: !9657, file: !3, line: 3948, column: 12)
!9661 = !DILocation(line: 3950, column: 3, scope: !9660)
!9662 = !DILocation(line: 3954, column: 27, scope: !9663)
!9663 = distinct !DILexicalBlock(scope: !9520, file: !3, line: 3954, column: 6)
!9664 = !DILocation(line: 3954, column: 32, scope: !9663)
!9665 = !DILocation(line: 3954, column: 7, scope: !9663)
!9666 = !DILocation(line: 3954, column: 6, scope: !9520)
!9667 = !DILocation(line: 3955, column: 3, scope: !9663)
!9668 = !DILocation(line: 3957, column: 24, scope: !9520)
!9669 = !DILocation(line: 3957, column: 8, scope: !9520)
!9670 = !DILocation(line: 3957, column: 6, scope: !9520)
!9671 = !DILocation(line: 3958, column: 6, scope: !9672)
!9672 = distinct !DILexicalBlock(scope: !9520, file: !3, line: 3958, column: 6)
!9673 = !DILocation(line: 3958, column: 6, scope: !9520)
!9674 = !DILocation(line: 3959, column: 3, scope: !9675)
!9675 = distinct !DILexicalBlock(scope: !9672, file: !3, line: 3958, column: 11)
!9676 = !DILocation(line: 3960, column: 3, scope: !9675)
!9677 = !DILocation(line: 3963, column: 17, scope: !9520)
!9678 = !DILocation(line: 3963, column: 2, scope: !9520)
!9679 = !DILocation(line: 3965, column: 6, scope: !9680)
!9680 = distinct !DILexicalBlock(scope: !9520, file: !3, line: 3965, column: 6)
!9681 = !DILocation(line: 3965, column: 10, scope: !9680)
!9682 = !DILocation(line: 3965, column: 16, scope: !9680)
!9683 = !DILocation(line: 3965, column: 6, scope: !9520)
!9684 = !DILocation(line: 3966, column: 23, scope: !9685)
!9685 = distinct !DILexicalBlock(scope: !9680, file: !3, line: 3965, column: 21)
!9686 = !DILocation(line: 3966, column: 30, scope: !9685)
!9687 = !DILocation(line: 3966, column: 10, scope: !9685)
!9688 = !DILocation(line: 3966, column: 8, scope: !9685)
!9689 = !DILocation(line: 3967, column: 8, scope: !9690)
!9690 = distinct !DILexicalBlock(scope: !9685, file: !3, line: 3967, column: 7)
!9691 = !DILocation(line: 3967, column: 7, scope: !9685)
!9692 = !DILocation(line: 3968, column: 8, scope: !9693)
!9693 = distinct !DILexicalBlock(scope: !9690, file: !3, line: 3967, column: 14)
!9694 = !DILocation(line: 3969, column: 4, scope: !9693)
!9695 = !DILocation(line: 3972, column: 25, scope: !9685)
!9696 = !DILocation(line: 3972, column: 9, scope: !9685)
!9697 = !DILocation(line: 3972, column: 7, scope: !9685)
!9698 = !DILocation(line: 3973, column: 7, scope: !9699)
!9699 = distinct !DILexicalBlock(scope: !9685, file: !3, line: 3973, column: 7)
!9700 = !DILocation(line: 3973, column: 7, scope: !9685)
!9701 = !DILocation(line: 3974, column: 4, scope: !9702)
!9702 = distinct !DILexicalBlock(scope: !9699, file: !3, line: 3973, column: 12)
!9703 = !DILocation(line: 3975, column: 4, scope: !9702)
!9704 = !DILocation(line: 3978, column: 21, scope: !9685)
!9705 = !DILocation(line: 3978, column: 27, scope: !9685)
!9706 = !DILocation(line: 3979, column: 7, scope: !9685)
!9707 = !DILocation(line: 3979, column: 11, scope: !9685)
!9708 = !DILocation(line: 3979, column: 21, scope: !9685)
!9709 = !DILocation(line: 3978, column: 9, scope: !9685)
!9710 = !DILocation(line: 3978, column: 7, scope: !9685)
!9711 = !DILocation(line: 3980, column: 7, scope: !9712)
!9712 = distinct !DILexicalBlock(scope: !9685, file: !3, line: 3980, column: 7)
!9713 = !DILocation(line: 3980, column: 7, scope: !9685)
!9714 = !DILocation(line: 3981, column: 4, scope: !9715)
!9715 = distinct !DILexicalBlock(scope: !9712, file: !3, line: 3980, column: 12)
!9716 = !DILocation(line: 3983, column: 4, scope: !9715)
!9717 = !DILocation(line: 3986, column: 18, scope: !9685)
!9718 = !DILocation(line: 3986, column: 3, scope: !9685)
!9719 = !DILocation(line: 3987, column: 2, scope: !9685)
!9720 = !DILocation(line: 3988, column: 18, scope: !9520)
!9721 = !DILocation(line: 3988, column: 24, scope: !9520)
!9722 = !DILocation(line: 3988, column: 2, scope: !9520)
!9723 = !DILocation(line: 3990, column: 2, scope: !9520)
!9724 = !DILabel(scope: !9520, name: "err_out_unregister_dev1", file: !3, line: 3992)
!9725 = !DILocation(line: 3992, column: 1, scope: !9520)
!9726 = !DILocation(line: 3993, column: 20, scope: !9520)
!9727 = !DILocation(line: 3993, column: 2, scope: !9520)
!9728 = !DILabel(scope: !9520, name: "err_out_free_dev1", file: !3, line: 3994)
!9729 = !DILocation(line: 3994, column: 1, scope: !9520)
!9730 = !DILocation(line: 3995, column: 14, scope: !9520)
!9731 = !DILocation(line: 3995, column: 2, scope: !9520)
!9732 = !DILabel(scope: !9520, name: "err_out_unregister", file: !3, line: 3996)
!9733 = !DILocation(line: 3996, column: 1, scope: !9520)
!9734 = !DILocation(line: 3997, column: 20, scope: !9520)
!9735 = !DILocation(line: 3997, column: 2, scope: !9520)
!9736 = !DILabel(scope: !9520, name: "err_out_free_netdev", file: !3, line: 3998)
!9737 = !DILocation(line: 3998, column: 1, scope: !9520)
!9738 = !DILocation(line: 3999, column: 14, scope: !9520)
!9739 = !DILocation(line: 3999, column: 2, scope: !9520)
!9740 = !DILabel(scope: !9520, name: "err_out_led_off", file: !3, line: 4000)
!9741 = !DILocation(line: 4000, column: 1, scope: !9520)
!9742 = !DILocation(line: 4001, column: 15, scope: !9520)
!9743 = !DILocation(line: 4001, column: 2, scope: !9520)
!9744 = !DILabel(scope: !9520, name: "err_out_iounmap", file: !3, line: 4002)
!9745 = !DILocation(line: 4002, column: 1, scope: !9520)
!9746 = !DILocation(line: 4003, column: 10, scope: !9520)
!9747 = !DILocation(line: 4003, column: 14, scope: !9520)
!9748 = !DILocation(line: 4003, column: 2, scope: !9520)
!9749 = !DILabel(scope: !9520, name: "err_out_free_hw", file: !3, line: 4004)
!9750 = !DILocation(line: 4004, column: 1, scope: !9520)
!9751 = !DILocation(line: 4005, column: 8, scope: !9520)
!9752 = !DILocation(line: 4005, column: 2, scope: !9520)
!9753 = !DILabel(scope: !9520, name: "err_out_free_regions", file: !3, line: 4006)
!9754 = !DILocation(line: 4006, column: 1, scope: !9520)
!9755 = !DILocation(line: 4007, column: 22, scope: !9520)
!9756 = !DILocation(line: 4007, column: 2, scope: !9520)
!9757 = !DILabel(scope: !9520, name: "err_out_disable_pdev", file: !3, line: 4008)
!9758 = !DILocation(line: 4008, column: 1, scope: !9520)
!9759 = !DILocation(line: 4009, column: 21, scope: !9520)
!9760 = !DILocation(line: 4009, column: 2, scope: !9520)
!9761 = !DILabel(scope: !9520, name: "err_out", file: !3, line: 4010)
!9762 = !DILocation(line: 4010, column: 1, scope: !9520)
!9763 = !DILocation(line: 4011, column: 9, scope: !9520)
!9764 = !DILocation(line: 4011, column: 2, scope: !9520)
!9765 = !DILocation(line: 4012, column: 1, scope: !9520)
!9766 = distinct !DISubprogram(name: "skge_remove", scope: !3, file: !3, line: 4014, type: !8927, scopeLine: 4015, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!9767 = !DILocalVariable(name: "lock", arg: 1, scope: !9768, file: !9523, line: 402, type: !2181)
!9768 = distinct !DISubprogram(name: "spin_unlock_irq", scope: !9523, file: !9523, line: 402, type: !9769, scopeLine: 403, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!9769 = !DISubroutineType(types: !9770)
!9770 = !{null, !2181}
!9771 = !DILocation(line: 402, column: 57, scope: !9768, inlinedAt: !9772)
!9772 = distinct !DILocation(line: 4037, column: 2, scope: !9766)
!9773 = !DILocalVariable(name: "lock", arg: 1, scope: !9774, file: !9523, line: 377, type: !2181)
!9774 = distinct !DISubprogram(name: "spin_lock_irq", scope: !9523, file: !9523, line: 377, type: !9769, scopeLine: 378, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!9775 = !DILocation(line: 377, column: 55, scope: !9774, inlinedAt: !9776)
!9776 = distinct !DILocation(line: 4030, column: 2, scope: !9766)
!9777 = !DILocalVariable(name: "pdev", arg: 1, scope: !9766, file: !3, line: 4014, type: !8799)
!9778 = !DILocation(line: 4014, column: 41, scope: !9766)
!9779 = !DILocalVariable(name: "hw", scope: !9766, file: !3, line: 4016, type: !8794)
!9780 = !DILocation(line: 4016, column: 18, scope: !9766)
!9781 = !DILocation(line: 4016, column: 40, scope: !9766)
!9782 = !DILocation(line: 4016, column: 24, scope: !9766)
!9783 = !DILocalVariable(name: "dev0", scope: !9766, file: !3, line: 4017, type: !290)
!9784 = !DILocation(line: 4017, column: 21, scope: !9766)
!9785 = !DILocalVariable(name: "dev1", scope: !9766, file: !3, line: 4017, type: !290)
!9786 = !DILocation(line: 4017, column: 28, scope: !9766)
!9787 = !DILocation(line: 4019, column: 7, scope: !9788)
!9788 = distinct !DILexicalBlock(scope: !9766, file: !3, line: 4019, column: 6)
!9789 = !DILocation(line: 4019, column: 6, scope: !9766)
!9790 = !DILocation(line: 4020, column: 3, scope: !9788)
!9791 = !DILocation(line: 4022, column: 9, scope: !9766)
!9792 = !DILocation(line: 4022, column: 13, scope: !9766)
!9793 = !DILocation(line: 4022, column: 7, scope: !9766)
!9794 = !DILocation(line: 4023, column: 6, scope: !9795)
!9795 = distinct !DILexicalBlock(scope: !9766, file: !3, line: 4023, column: 6)
!9796 = !DILocation(line: 4023, column: 6, scope: !9766)
!9797 = !DILocation(line: 4024, column: 21, scope: !9795)
!9798 = !DILocation(line: 4024, column: 3, scope: !9795)
!9799 = !DILocation(line: 4025, column: 9, scope: !9766)
!9800 = !DILocation(line: 4025, column: 13, scope: !9766)
!9801 = !DILocation(line: 4025, column: 7, scope: !9766)
!9802 = !DILocation(line: 4026, column: 20, scope: !9766)
!9803 = !DILocation(line: 4026, column: 2, scope: !9766)
!9804 = !DILocation(line: 4028, column: 16, scope: !9766)
!9805 = !DILocation(line: 4028, column: 20, scope: !9766)
!9806 = !DILocation(line: 4028, column: 2, scope: !9766)
!9807 = !DILocation(line: 4030, column: 17, scope: !9766)
!9808 = !DILocation(line: 4030, column: 21, scope: !9766)
!9809 = !DILocation(line: 379, column: 2, scope: !9810, inlinedAt: !9776)
!9810 = distinct !DILexicalBlock(scope: !9811, file: !9523, line: 379, column: 2)
!9811 = distinct !DILexicalBlock(scope: !9774, file: !9523, line: 379, column: 2)
!9812 = !DILocation(line: 379, column: 2, scope: !9813, inlinedAt: !9776)
!9813 = distinct !DILexicalBlock(scope: !9811, file: !9523, line: 379, column: 2)
!9814 = !{i32 -2145295028}
!9815 = !DILocation(line: 379, column: 2, scope: !9816, inlinedAt: !9776)
!9816 = distinct !DILexicalBlock(scope: !9813, file: !9523, line: 379, column: 2)
!9817 = !DILocation(line: 4031, column: 2, scope: !9766)
!9818 = !DILocation(line: 4031, column: 6, scope: !9766)
!9819 = !DILocation(line: 4031, column: 16, scope: !9766)
!9820 = !DILocation(line: 4033, column: 6, scope: !9821)
!9821 = distinct !DILexicalBlock(scope: !9766, file: !3, line: 4033, column: 6)
!9822 = !DILocation(line: 4033, column: 10, scope: !9821)
!9823 = !DILocation(line: 4033, column: 16, scope: !9821)
!9824 = !DILocation(line: 4033, column: 6, scope: !9766)
!9825 = !DILocation(line: 4034, column: 16, scope: !9826)
!9826 = distinct !DILexicalBlock(scope: !9821, file: !3, line: 4033, column: 21)
!9827 = !DILocation(line: 4034, column: 3, scope: !9826)
!9828 = !DILocation(line: 4035, column: 15, scope: !9826)
!9829 = !DILocation(line: 4035, column: 3, scope: !9826)
!9830 = !DILocation(line: 4036, column: 2, scope: !9826)
!9831 = !DILocation(line: 4037, column: 19, scope: !9766)
!9832 = !DILocation(line: 4037, column: 23, scope: !9766)
!9833 = !DILocation(line: 404, column: 2, scope: !9834, inlinedAt: !9772)
!9834 = distinct !DILexicalBlock(scope: !9835, file: !9523, line: 404, column: 2)
!9835 = distinct !DILexicalBlock(scope: !9768, file: !9523, line: 404, column: 2)
!9836 = !DILocation(line: 404, column: 2, scope: !9837, inlinedAt: !9772)
!9837 = distinct !DILexicalBlock(scope: !9835, file: !9523, line: 404, column: 2)
!9838 = !{i32 -2145293280}
!9839 = !DILocation(line: 404, column: 2, scope: !9840, inlinedAt: !9772)
!9840 = distinct !DILexicalBlock(scope: !9837, file: !9523, line: 404, column: 2)
!9841 = !DILocation(line: 4039, column: 15, scope: !9766)
!9842 = !DILocation(line: 4039, column: 2, scope: !9766)
!9843 = !DILocation(line: 4040, column: 14, scope: !9766)
!9844 = !DILocation(line: 4040, column: 2, scope: !9766)
!9845 = !DILocation(line: 4042, column: 6, scope: !9846)
!9846 = distinct !DILexicalBlock(scope: !9766, file: !3, line: 4042, column: 6)
!9847 = !DILocation(line: 4042, column: 10, scope: !9846)
!9848 = !DILocation(line: 4042, column: 16, scope: !9846)
!9849 = !DILocation(line: 4042, column: 6, scope: !9766)
!9850 = !DILocation(line: 4043, column: 12, scope: !9846)
!9851 = !DILocation(line: 4043, column: 18, scope: !9846)
!9852 = !DILocation(line: 4043, column: 23, scope: !9846)
!9853 = !DILocation(line: 4043, column: 3, scope: !9846)
!9854 = !DILocation(line: 4044, column: 22, scope: !9766)
!9855 = !DILocation(line: 4044, column: 2, scope: !9766)
!9856 = !DILocation(line: 4045, column: 21, scope: !9766)
!9857 = !DILocation(line: 4045, column: 2, scope: !9766)
!9858 = !DILocation(line: 4046, column: 6, scope: !9859)
!9859 = distinct !DILexicalBlock(scope: !9766, file: !3, line: 4046, column: 6)
!9860 = !DILocation(line: 4046, column: 6, scope: !9766)
!9861 = !DILocation(line: 4047, column: 15, scope: !9859)
!9862 = !DILocation(line: 4047, column: 3, scope: !9859)
!9863 = !DILocation(line: 4048, column: 14, scope: !9766)
!9864 = !DILocation(line: 4048, column: 2, scope: !9766)
!9865 = !DILocation(line: 4050, column: 10, scope: !9766)
!9866 = !DILocation(line: 4050, column: 14, scope: !9766)
!9867 = !DILocation(line: 4050, column: 2, scope: !9766)
!9868 = !DILocation(line: 4051, column: 8, scope: !9766)
!9869 = !DILocation(line: 4051, column: 2, scope: !9766)
!9870 = !DILocation(line: 4052, column: 1, scope: !9766)
!9871 = distinct !DISubprogram(name: "skge_shutdown", scope: !3, file: !3, line: 4116, type: !8927, scopeLine: 4117, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!9872 = !DILocalVariable(name: "pdev", arg: 1, scope: !9871, file: !3, line: 4116, type: !8799)
!9873 = !DILocation(line: 4116, column: 43, scope: !9871)
!9874 = !DILocalVariable(name: "hw", scope: !9871, file: !3, line: 4118, type: !8794)
!9875 = !DILocation(line: 4118, column: 18, scope: !9871)
!9876 = !DILocation(line: 4118, column: 40, scope: !9871)
!9877 = !DILocation(line: 4118, column: 24, scope: !9871)
!9878 = !DILocalVariable(name: "i", scope: !9871, file: !3, line: 4119, type: !32)
!9879 = !DILocation(line: 4119, column: 6, scope: !9871)
!9880 = !DILocation(line: 4121, column: 7, scope: !9881)
!9881 = distinct !DILexicalBlock(scope: !9871, file: !3, line: 4121, column: 6)
!9882 = !DILocation(line: 4121, column: 6, scope: !9871)
!9883 = !DILocation(line: 4122, column: 3, scope: !9881)
!9884 = !DILocation(line: 4124, column: 9, scope: !9885)
!9885 = distinct !DILexicalBlock(scope: !9871, file: !3, line: 4124, column: 2)
!9886 = !DILocation(line: 4124, column: 7, scope: !9885)
!9887 = !DILocation(line: 4124, column: 14, scope: !9888)
!9888 = distinct !DILexicalBlock(scope: !9885, file: !3, line: 4124, column: 2)
!9889 = !DILocation(line: 4124, column: 18, scope: !9888)
!9890 = !DILocation(line: 4124, column: 22, scope: !9888)
!9891 = !DILocation(line: 4124, column: 16, scope: !9888)
!9892 = !DILocation(line: 4124, column: 2, scope: !9885)
!9893 = !DILocalVariable(name: "dev", scope: !9894, file: !3, line: 4125, type: !290)
!9894 = distinct !DILexicalBlock(scope: !9888, file: !3, line: 4124, column: 34)
!9895 = !DILocation(line: 4125, column: 22, scope: !9894)
!9896 = !DILocation(line: 4125, column: 28, scope: !9894)
!9897 = !DILocation(line: 4125, column: 32, scope: !9894)
!9898 = !DILocation(line: 4125, column: 36, scope: !9894)
!9899 = !DILocalVariable(name: "skge", scope: !9894, file: !3, line: 4126, type: !9172)
!9900 = !DILocation(line: 4126, column: 21, scope: !9894)
!9901 = !DILocation(line: 4126, column: 40, scope: !9894)
!9902 = !DILocation(line: 4126, column: 28, scope: !9894)
!9903 = !DILocation(line: 4128, column: 7, scope: !9904)
!9904 = distinct !DILexicalBlock(scope: !9894, file: !3, line: 4128, column: 7)
!9905 = !DILocation(line: 4128, column: 13, scope: !9904)
!9906 = !DILocation(line: 4128, column: 7, scope: !9894)
!9907 = !DILocation(line: 4129, column: 18, scope: !9904)
!9908 = !DILocation(line: 4129, column: 4, scope: !9904)
!9909 = !DILocation(line: 4130, column: 2, scope: !9894)
!9910 = !DILocation(line: 4124, column: 30, scope: !9888)
!9911 = !DILocation(line: 4124, column: 2, scope: !9888)
!9912 = distinct !{!9912, !9892, !9913}
!9913 = !DILocation(line: 4130, column: 2, scope: !9885)
!9914 = !DILocation(line: 4132, column: 19, scope: !9871)
!9915 = !DILocation(line: 4132, column: 44, scope: !9871)
!9916 = !DILocation(line: 4132, column: 50, scope: !9871)
!9917 = !DILocation(line: 4132, column: 25, scope: !9871)
!9918 = !DILocation(line: 4132, column: 2, scope: !9871)
!9919 = !DILocation(line: 4133, column: 22, scope: !9871)
!9920 = !DILocation(line: 4133, column: 2, scope: !9871)
!9921 = !DILocation(line: 4134, column: 1, scope: !9871)
!9922 = distinct !DISubprogram(name: "kzalloc", scope: !7190, file: !7190, line: 662, type: !9923, scopeLine: 663, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!9923 = !DISubroutineType(types: !9924)
!9924 = !{!591, !1039, !1742}
!9925 = !DILocalVariable(name: "s", arg: 1, scope: !9926, file: !7190, line: 445, type: !2051)
!9926 = distinct !DISubprogram(name: "kmem_cache_alloc_trace", scope: !7190, file: !7190, line: 445, type: !9927, scopeLine: 447, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!9927 = !DISubroutineType(types: !9928)
!9928 = !{!591, !2051, !1742, !1039}
!9929 = !DILocation(line: 445, column: 72, scope: !9926, inlinedAt: !9930)
!9930 = distinct !DILocation(line: 552, column: 10, scope: !9931, inlinedAt: !9934)
!9931 = distinct !DILexicalBlock(scope: !9932, file: !7190, line: 540, column: 34)
!9932 = distinct !DILexicalBlock(scope: !9933, file: !7190, line: 540, column: 6)
!9933 = distinct !DISubprogram(name: "kmalloc", scope: !7190, file: !7190, line: 538, type: !9923, scopeLine: 539, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!9934 = distinct !DILocation(line: 664, column: 9, scope: !9922)
!9935 = !DILocalVariable(name: "flags", arg: 2, scope: !9926, file: !7190, line: 446, type: !1742)
!9936 = !DILocation(line: 446, column: 9, scope: !9926, inlinedAt: !9930)
!9937 = !DILocalVariable(name: "size", arg: 3, scope: !9926, file: !7190, line: 446, type: !1039)
!9938 = !DILocation(line: 446, column: 23, scope: !9926, inlinedAt: !9930)
!9939 = !DILocalVariable(name: "ret", scope: !9926, file: !7190, line: 448, type: !591)
!9940 = !DILocation(line: 448, column: 8, scope: !9926, inlinedAt: !9930)
!9941 = !DILocalVariable(name: "flags", arg: 1, scope: !9942, file: !7190, line: 318, type: !1742)
!9942 = distinct !DISubprogram(name: "kmalloc_type", scope: !7190, file: !7190, line: 318, type: !9943, scopeLine: 319, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!9943 = !DISubroutineType(types: !9944)
!9944 = !{!7189, !1742}
!9945 = !DILocation(line: 318, column: 67, scope: !9942, inlinedAt: !9946)
!9946 = distinct !DILocation(line: 553, column: 20, scope: !9931, inlinedAt: !9934)
!9947 = !DILocalVariable(name: "size", arg: 1, scope: !9948, file: !7190, line: 346, type: !1039)
!9948 = distinct !DISubprogram(name: "kmalloc_index", scope: !7190, file: !7190, line: 346, type: !9949, scopeLine: 347, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!9949 = !DISubroutineType(types: !9950)
!9950 = !{!7, !1039}
!9951 = !DILocation(line: 346, column: 58, scope: !9948, inlinedAt: !9952)
!9952 = distinct !DILocation(line: 547, column: 11, scope: !9931, inlinedAt: !9934)
!9953 = !DILocalVariable(name: "size", arg: 1, scope: !9954, file: !7190, line: 472, type: !1039)
!9954 = distinct !DISubprogram(name: "kmalloc_order_trace", scope: !7190, file: !7190, line: 472, type: !9955, scopeLine: 473, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!9955 = !DISubroutineType(types: !9956)
!9956 = !{!591, !1039, !1742, !7}
!9957 = !DILocation(line: 472, column: 28, scope: !9954, inlinedAt: !9958)
!9958 = distinct !DILocation(line: 481, column: 9, scope: !9959, inlinedAt: !9960)
!9959 = distinct !DISubprogram(name: "kmalloc_large", scope: !7190, file: !7190, line: 478, type: !9923, scopeLine: 479, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!9960 = distinct !DILocation(line: 545, column: 11, scope: !9961, inlinedAt: !9934)
!9961 = distinct !DILexicalBlock(scope: !9931, file: !7190, line: 544, column: 7)
!9962 = !DILocalVariable(name: "flags", arg: 2, scope: !9954, file: !7190, line: 472, type: !1742)
!9963 = !DILocation(line: 472, column: 40, scope: !9954, inlinedAt: !9958)
!9964 = !DILocalVariable(name: "order", arg: 3, scope: !9954, file: !7190, line: 472, type: !7)
!9965 = !DILocation(line: 472, column: 60, scope: !9954, inlinedAt: !9958)
!9966 = !DILocalVariable(name: "size", arg: 1, scope: !9959, file: !7190, line: 478, type: !1039)
!9967 = !DILocation(line: 478, column: 51, scope: !9959, inlinedAt: !9960)
!9968 = !DILocalVariable(name: "flags", arg: 2, scope: !9959, file: !7190, line: 478, type: !1742)
!9969 = !DILocation(line: 478, column: 63, scope: !9959, inlinedAt: !9960)
!9970 = !DILocalVariable(name: "order", scope: !9959, file: !7190, line: 480, type: !7)
!9971 = !DILocation(line: 480, column: 15, scope: !9959, inlinedAt: !9960)
!9972 = !DILocalVariable(name: "size", arg: 1, scope: !9933, file: !7190, line: 538, type: !1039)
!9973 = !DILocation(line: 538, column: 45, scope: !9933, inlinedAt: !9934)
!9974 = !DILocalVariable(name: "flags", arg: 2, scope: !9933, file: !7190, line: 538, type: !1742)
!9975 = !DILocation(line: 538, column: 57, scope: !9933, inlinedAt: !9934)
!9976 = !DILocalVariable(name: "index", scope: !9931, file: !7190, line: 542, type: !7)
!9977 = !DILocation(line: 542, column: 16, scope: !9931, inlinedAt: !9934)
!9978 = !DILocalVariable(name: "size", arg: 1, scope: !9922, file: !7190, line: 662, type: !1039)
!9979 = !DILocation(line: 662, column: 36, scope: !9922)
!9980 = !DILocalVariable(name: "flags", arg: 2, scope: !9922, file: !7190, line: 662, type: !1742)
!9981 = !DILocation(line: 662, column: 48, scope: !9922)
!9982 = !DILocation(line: 664, column: 17, scope: !9922)
!9983 = !DILocation(line: 664, column: 23, scope: !9922)
!9984 = !DILocation(line: 664, column: 29, scope: !9922)
!9985 = !DILocation(line: 540, column: 27, scope: !9932, inlinedAt: !9934)
!9986 = !DILocation(line: 540, column: 6, scope: !9932, inlinedAt: !9934)
!9987 = !DILocation(line: 540, column: 6, scope: !9933, inlinedAt: !9934)
!9988 = !DILocation(line: 544, column: 7, scope: !9961, inlinedAt: !9934)
!9989 = !DILocation(line: 544, column: 12, scope: !9961, inlinedAt: !9934)
!9990 = !DILocation(line: 544, column: 7, scope: !9931, inlinedAt: !9934)
!9991 = !DILocation(line: 545, column: 25, scope: !9961, inlinedAt: !9934)
!9992 = !DILocation(line: 545, column: 31, scope: !9961, inlinedAt: !9934)
!9993 = !DILocation(line: 480, column: 33, scope: !9959, inlinedAt: !9960)
!9994 = !DILocation(line: 480, column: 23, scope: !9959, inlinedAt: !9960)
!9995 = !DILocation(line: 481, column: 29, scope: !9959, inlinedAt: !9960)
!9996 = !DILocation(line: 481, column: 35, scope: !9959, inlinedAt: !9960)
!9997 = !DILocation(line: 481, column: 42, scope: !9959, inlinedAt: !9960)
!9998 = !DILocation(line: 474, column: 23, scope: !9954, inlinedAt: !9958)
!9999 = !DILocation(line: 474, column: 29, scope: !9954, inlinedAt: !9958)
!10000 = !DILocation(line: 474, column: 36, scope: !9954, inlinedAt: !9958)
!10001 = !DILocation(line: 474, column: 9, scope: !9954, inlinedAt: !9958)
!10002 = !DILocation(line: 545, column: 4, scope: !9961, inlinedAt: !9934)
!10003 = !DILocation(line: 547, column: 25, scope: !9931, inlinedAt: !9934)
!10004 = !DILocation(line: 348, column: 7, scope: !10005, inlinedAt: !9952)
!10005 = distinct !DILexicalBlock(scope: !9948, file: !7190, line: 348, column: 6)
!10006 = !DILocation(line: 348, column: 6, scope: !9948, inlinedAt: !9952)
!10007 = !DILocation(line: 349, column: 3, scope: !10005, inlinedAt: !9952)
!10008 = !DILocation(line: 351, column: 6, scope: !10009, inlinedAt: !9952)
!10009 = distinct !DILexicalBlock(scope: !9948, file: !7190, line: 351, column: 6)
!10010 = !DILocation(line: 351, column: 11, scope: !10009, inlinedAt: !9952)
!10011 = !DILocation(line: 351, column: 6, scope: !9948, inlinedAt: !9952)
!10012 = !DILocation(line: 352, column: 3, scope: !10009, inlinedAt: !9952)
!10013 = !DILocation(line: 354, column: 32, scope: !10014, inlinedAt: !9952)
!10014 = distinct !DILexicalBlock(scope: !9948, file: !7190, line: 354, column: 6)
!10015 = !DILocation(line: 354, column: 37, scope: !10014, inlinedAt: !9952)
!10016 = !DILocation(line: 354, column: 42, scope: !10014, inlinedAt: !9952)
!10017 = !DILocation(line: 354, column: 45, scope: !10014, inlinedAt: !9952)
!10018 = !DILocation(line: 354, column: 50, scope: !10014, inlinedAt: !9952)
!10019 = !DILocation(line: 354, column: 6, scope: !9948, inlinedAt: !9952)
!10020 = !DILocation(line: 355, column: 3, scope: !10014, inlinedAt: !9952)
!10021 = !DILocation(line: 356, column: 32, scope: !10022, inlinedAt: !9952)
!10022 = distinct !DILexicalBlock(scope: !9948, file: !7190, line: 356, column: 6)
!10023 = !DILocation(line: 356, column: 37, scope: !10022, inlinedAt: !9952)
!10024 = !DILocation(line: 356, column: 43, scope: !10022, inlinedAt: !9952)
!10025 = !DILocation(line: 356, column: 46, scope: !10022, inlinedAt: !9952)
!10026 = !DILocation(line: 356, column: 51, scope: !10022, inlinedAt: !9952)
!10027 = !DILocation(line: 356, column: 6, scope: !9948, inlinedAt: !9952)
!10028 = !DILocation(line: 357, column: 3, scope: !10022, inlinedAt: !9952)
!10029 = !DILocation(line: 358, column: 6, scope: !10030, inlinedAt: !9952)
!10030 = distinct !DILexicalBlock(scope: !9948, file: !7190, line: 358, column: 6)
!10031 = !DILocation(line: 358, column: 11, scope: !10030, inlinedAt: !9952)
!10032 = !DILocation(line: 358, column: 6, scope: !9948, inlinedAt: !9952)
!10033 = !DILocation(line: 358, column: 26, scope: !10030, inlinedAt: !9952)
!10034 = !DILocation(line: 359, column: 6, scope: !10035, inlinedAt: !9952)
!10035 = distinct !DILexicalBlock(scope: !9948, file: !7190, line: 359, column: 6)
!10036 = !DILocation(line: 359, column: 11, scope: !10035, inlinedAt: !9952)
!10037 = !DILocation(line: 359, column: 6, scope: !9948, inlinedAt: !9952)
!10038 = !DILocation(line: 359, column: 26, scope: !10035, inlinedAt: !9952)
!10039 = !DILocation(line: 360, column: 6, scope: !10040, inlinedAt: !9952)
!10040 = distinct !DILexicalBlock(scope: !9948, file: !7190, line: 360, column: 6)
!10041 = !DILocation(line: 360, column: 11, scope: !10040, inlinedAt: !9952)
!10042 = !DILocation(line: 360, column: 6, scope: !9948, inlinedAt: !9952)
!10043 = !DILocation(line: 360, column: 26, scope: !10040, inlinedAt: !9952)
!10044 = !DILocation(line: 361, column: 6, scope: !10045, inlinedAt: !9952)
!10045 = distinct !DILexicalBlock(scope: !9948, file: !7190, line: 361, column: 6)
!10046 = !DILocation(line: 361, column: 11, scope: !10045, inlinedAt: !9952)
!10047 = !DILocation(line: 361, column: 6, scope: !9948, inlinedAt: !9952)
!10048 = !DILocation(line: 361, column: 26, scope: !10045, inlinedAt: !9952)
!10049 = !DILocation(line: 362, column: 6, scope: !10050, inlinedAt: !9952)
!10050 = distinct !DILexicalBlock(scope: !9948, file: !7190, line: 362, column: 6)
!10051 = !DILocation(line: 362, column: 11, scope: !10050, inlinedAt: !9952)
!10052 = !DILocation(line: 362, column: 6, scope: !9948, inlinedAt: !9952)
!10053 = !DILocation(line: 362, column: 26, scope: !10050, inlinedAt: !9952)
!10054 = !DILocation(line: 363, column: 6, scope: !10055, inlinedAt: !9952)
!10055 = distinct !DILexicalBlock(scope: !9948, file: !7190, line: 363, column: 6)
!10056 = !DILocation(line: 363, column: 11, scope: !10055, inlinedAt: !9952)
!10057 = !DILocation(line: 363, column: 6, scope: !9948, inlinedAt: !9952)
!10058 = !DILocation(line: 363, column: 26, scope: !10055, inlinedAt: !9952)
!10059 = !DILocation(line: 364, column: 6, scope: !10060, inlinedAt: !9952)
!10060 = distinct !DILexicalBlock(scope: !9948, file: !7190, line: 364, column: 6)
!10061 = !DILocation(line: 364, column: 11, scope: !10060, inlinedAt: !9952)
!10062 = !DILocation(line: 364, column: 6, scope: !9948, inlinedAt: !9952)
!10063 = !DILocation(line: 364, column: 26, scope: !10060, inlinedAt: !9952)
!10064 = !DILocation(line: 365, column: 6, scope: !10065, inlinedAt: !9952)
!10065 = distinct !DILexicalBlock(scope: !9948, file: !7190, line: 365, column: 6)
!10066 = !DILocation(line: 365, column: 11, scope: !10065, inlinedAt: !9952)
!10067 = !DILocation(line: 365, column: 6, scope: !9948, inlinedAt: !9952)
!10068 = !DILocation(line: 365, column: 26, scope: !10065, inlinedAt: !9952)
!10069 = !DILocation(line: 366, column: 6, scope: !10070, inlinedAt: !9952)
!10070 = distinct !DILexicalBlock(scope: !9948, file: !7190, line: 366, column: 6)
!10071 = !DILocation(line: 366, column: 11, scope: !10070, inlinedAt: !9952)
!10072 = !DILocation(line: 366, column: 6, scope: !9948, inlinedAt: !9952)
!10073 = !DILocation(line: 366, column: 26, scope: !10070, inlinedAt: !9952)
!10074 = !DILocation(line: 367, column: 6, scope: !10075, inlinedAt: !9952)
!10075 = distinct !DILexicalBlock(scope: !9948, file: !7190, line: 367, column: 6)
!10076 = !DILocation(line: 367, column: 11, scope: !10075, inlinedAt: !9952)
!10077 = !DILocation(line: 367, column: 6, scope: !9948, inlinedAt: !9952)
!10078 = !DILocation(line: 367, column: 26, scope: !10075, inlinedAt: !9952)
!10079 = !DILocation(line: 368, column: 6, scope: !10080, inlinedAt: !9952)
!10080 = distinct !DILexicalBlock(scope: !9948, file: !7190, line: 368, column: 6)
!10081 = !DILocation(line: 368, column: 11, scope: !10080, inlinedAt: !9952)
!10082 = !DILocation(line: 368, column: 6, scope: !9948, inlinedAt: !9952)
!10083 = !DILocation(line: 368, column: 26, scope: !10080, inlinedAt: !9952)
!10084 = !DILocation(line: 369, column: 6, scope: !10085, inlinedAt: !9952)
!10085 = distinct !DILexicalBlock(scope: !9948, file: !7190, line: 369, column: 6)
!10086 = !DILocation(line: 369, column: 11, scope: !10085, inlinedAt: !9952)
!10087 = !DILocation(line: 369, column: 6, scope: !9948, inlinedAt: !9952)
!10088 = !DILocation(line: 369, column: 26, scope: !10085, inlinedAt: !9952)
!10089 = !DILocation(line: 370, column: 6, scope: !10090, inlinedAt: !9952)
!10090 = distinct !DILexicalBlock(scope: !9948, file: !7190, line: 370, column: 6)
!10091 = !DILocation(line: 370, column: 11, scope: !10090, inlinedAt: !9952)
!10092 = !DILocation(line: 370, column: 6, scope: !9948, inlinedAt: !9952)
!10093 = !DILocation(line: 370, column: 26, scope: !10090, inlinedAt: !9952)
!10094 = !DILocation(line: 371, column: 6, scope: !10095, inlinedAt: !9952)
!10095 = distinct !DILexicalBlock(scope: !9948, file: !7190, line: 371, column: 6)
!10096 = !DILocation(line: 371, column: 11, scope: !10095, inlinedAt: !9952)
!10097 = !DILocation(line: 371, column: 6, scope: !9948, inlinedAt: !9952)
!10098 = !DILocation(line: 371, column: 26, scope: !10095, inlinedAt: !9952)
!10099 = !DILocation(line: 372, column: 6, scope: !10100, inlinedAt: !9952)
!10100 = distinct !DILexicalBlock(scope: !9948, file: !7190, line: 372, column: 6)
!10101 = !DILocation(line: 372, column: 11, scope: !10100, inlinedAt: !9952)
!10102 = !DILocation(line: 372, column: 6, scope: !9948, inlinedAt: !9952)
!10103 = !DILocation(line: 372, column: 26, scope: !10100, inlinedAt: !9952)
!10104 = !DILocation(line: 373, column: 6, scope: !10105, inlinedAt: !9952)
!10105 = distinct !DILexicalBlock(scope: !9948, file: !7190, line: 373, column: 6)
!10106 = !DILocation(line: 373, column: 11, scope: !10105, inlinedAt: !9952)
!10107 = !DILocation(line: 373, column: 6, scope: !9948, inlinedAt: !9952)
!10108 = !DILocation(line: 373, column: 26, scope: !10105, inlinedAt: !9952)
!10109 = !DILocation(line: 374, column: 6, scope: !10110, inlinedAt: !9952)
!10110 = distinct !DILexicalBlock(scope: !9948, file: !7190, line: 374, column: 6)
!10111 = !DILocation(line: 374, column: 11, scope: !10110, inlinedAt: !9952)
!10112 = !DILocation(line: 374, column: 6, scope: !9948, inlinedAt: !9952)
!10113 = !DILocation(line: 374, column: 26, scope: !10110, inlinedAt: !9952)
!10114 = !DILocation(line: 375, column: 6, scope: !10115, inlinedAt: !9952)
!10115 = distinct !DILexicalBlock(scope: !9948, file: !7190, line: 375, column: 6)
!10116 = !DILocation(line: 375, column: 11, scope: !10115, inlinedAt: !9952)
!10117 = !DILocation(line: 375, column: 6, scope: !9948, inlinedAt: !9952)
!10118 = !DILocation(line: 375, column: 27, scope: !10115, inlinedAt: !9952)
!10119 = !DILocation(line: 376, column: 6, scope: !10120, inlinedAt: !9952)
!10120 = distinct !DILexicalBlock(scope: !9948, file: !7190, line: 376, column: 6)
!10121 = !DILocation(line: 376, column: 11, scope: !10120, inlinedAt: !9952)
!10122 = !DILocation(line: 376, column: 6, scope: !9948, inlinedAt: !9952)
!10123 = !DILocation(line: 376, column: 32, scope: !10120, inlinedAt: !9952)
!10124 = !DILocation(line: 377, column: 6, scope: !10125, inlinedAt: !9952)
!10125 = distinct !DILexicalBlock(scope: !9948, file: !7190, line: 377, column: 6)
!10126 = !DILocation(line: 377, column: 11, scope: !10125, inlinedAt: !9952)
!10127 = !DILocation(line: 377, column: 6, scope: !9948, inlinedAt: !9952)
!10128 = !DILocation(line: 377, column: 32, scope: !10125, inlinedAt: !9952)
!10129 = !DILocation(line: 378, column: 6, scope: !10130, inlinedAt: !9952)
!10130 = distinct !DILexicalBlock(scope: !9948, file: !7190, line: 378, column: 6)
!10131 = !DILocation(line: 378, column: 11, scope: !10130, inlinedAt: !9952)
!10132 = !DILocation(line: 378, column: 6, scope: !9948, inlinedAt: !9952)
!10133 = !DILocation(line: 378, column: 32, scope: !10130, inlinedAt: !9952)
!10134 = !DILocation(line: 379, column: 6, scope: !10135, inlinedAt: !9952)
!10135 = distinct !DILexicalBlock(scope: !9948, file: !7190, line: 379, column: 6)
!10136 = !DILocation(line: 379, column: 11, scope: !10135, inlinedAt: !9952)
!10137 = !DILocation(line: 379, column: 6, scope: !9948, inlinedAt: !9952)
!10138 = !DILocation(line: 379, column: 33, scope: !10135, inlinedAt: !9952)
!10139 = !DILocation(line: 380, column: 6, scope: !10140, inlinedAt: !9952)
!10140 = distinct !DILexicalBlock(scope: !9948, file: !7190, line: 380, column: 6)
!10141 = !DILocation(line: 380, column: 11, scope: !10140, inlinedAt: !9952)
!10142 = !DILocation(line: 380, column: 6, scope: !9948, inlinedAt: !9952)
!10143 = !DILocation(line: 380, column: 33, scope: !10140, inlinedAt: !9952)
!10144 = !DILocation(line: 381, column: 6, scope: !10145, inlinedAt: !9952)
!10145 = distinct !DILexicalBlock(scope: !9948, file: !7190, line: 381, column: 6)
!10146 = !DILocation(line: 381, column: 11, scope: !10145, inlinedAt: !9952)
!10147 = !DILocation(line: 381, column: 6, scope: !9948, inlinedAt: !9952)
!10148 = !DILocation(line: 381, column: 33, scope: !10145, inlinedAt: !9952)
!10149 = !DILocation(line: 382, column: 2, scope: !10150, inlinedAt: !9952)
!10150 = distinct !DILexicalBlock(scope: !10151, file: !7190, line: 382, column: 2)
!10151 = distinct !DILexicalBlock(scope: !9948, file: !7190, line: 382, column: 2)
!10152 = !{i32 -2141699502, i32 -2141699473, i32 -2141699427, i32 -2141699369, i32 -2141699315, i32 -2141699261, i32 -2141699206, i32 -2141699175}
!10153 = !DILocation(line: 382, column: 2, scope: !10154, inlinedAt: !9952)
!10154 = distinct !DILexicalBlock(scope: !10155, file: !7190, line: 382, column: 2)
!10155 = distinct !DILexicalBlock(scope: !10151, file: !7190, line: 382, column: 2)
!10156 = !{i32 -2141698732, i32 -2141698725, i32 -2141698671, i32 -2141698640, i32 -2141698610}
!10157 = !DILocation(line: 382, column: 2, scope: !10155, inlinedAt: !9952)
!10158 = !DILocation(line: 386, column: 1, scope: !9948, inlinedAt: !9952)
!10159 = !DILocation(line: 547, column: 9, scope: !9931, inlinedAt: !9934)
!10160 = !DILocation(line: 549, column: 8, scope: !10161, inlinedAt: !9934)
!10161 = distinct !DILexicalBlock(scope: !9931, file: !7190, line: 549, column: 7)
!10162 = !DILocation(line: 549, column: 7, scope: !9931, inlinedAt: !9934)
!10163 = !DILocation(line: 550, column: 4, scope: !10161, inlinedAt: !9934)
!10164 = !DILocation(line: 553, column: 33, scope: !9931, inlinedAt: !9934)
!10165 = !DILocation(line: 325, column: 6, scope: !10166, inlinedAt: !9946)
!10166 = distinct !DILexicalBlock(scope: !9942, file: !7190, line: 325, column: 6)
!10167 = !DILocation(line: 325, column: 6, scope: !9942, inlinedAt: !9946)
!10168 = !DILocation(line: 326, column: 3, scope: !10166, inlinedAt: !9946)
!10169 = !DILocation(line: 332, column: 9, scope: !9942, inlinedAt: !9946)
!10170 = !DILocation(line: 332, column: 15, scope: !9942, inlinedAt: !9946)
!10171 = !DILocation(line: 332, column: 2, scope: !9942, inlinedAt: !9946)
!10172 = !DILocation(line: 336, column: 1, scope: !9942, inlinedAt: !9946)
!10173 = !DILocation(line: 553, column: 5, scope: !9931, inlinedAt: !9934)
!10174 = !DILocation(line: 553, column: 41, scope: !9931, inlinedAt: !9934)
!10175 = !DILocation(line: 554, column: 5, scope: !9931, inlinedAt: !9934)
!10176 = !DILocation(line: 554, column: 12, scope: !9931, inlinedAt: !9934)
!10177 = !DILocation(line: 448, column: 31, scope: !9926, inlinedAt: !9930)
!10178 = !DILocation(line: 448, column: 34, scope: !9926, inlinedAt: !9930)
!10179 = !DILocation(line: 448, column: 14, scope: !9926, inlinedAt: !9930)
!10180 = !DILocation(line: 450, column: 22, scope: !9926, inlinedAt: !9930)
!10181 = !DILocation(line: 450, column: 25, scope: !9926, inlinedAt: !9930)
!10182 = !DILocation(line: 450, column: 30, scope: !9926, inlinedAt: !9930)
!10183 = !DILocation(line: 450, column: 36, scope: !9926, inlinedAt: !9930)
!10184 = !DILocation(line: 450, column: 8, scope: !9926, inlinedAt: !9930)
!10185 = !DILocation(line: 450, column: 6, scope: !9926, inlinedAt: !9930)
!10186 = !DILocation(line: 451, column: 9, scope: !9926, inlinedAt: !9930)
!10187 = !DILocation(line: 552, column: 3, scope: !9931, inlinedAt: !9934)
!10188 = !DILocation(line: 557, column: 19, scope: !9933, inlinedAt: !9934)
!10189 = !DILocation(line: 557, column: 25, scope: !9933, inlinedAt: !9934)
!10190 = !DILocation(line: 557, column: 9, scope: !9933, inlinedAt: !9934)
!10191 = !DILocation(line: 557, column: 2, scope: !9933, inlinedAt: !9934)
!10192 = !DILocation(line: 558, column: 1, scope: !9933, inlinedAt: !9934)
!10193 = !DILocation(line: 664, column: 2, scope: !9922)
!10194 = distinct !DISubprogram(name: "pci_name", scope: !8801, file: !8801, line: 1875, type: !10195, scopeLine: 1876, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!10195 = !DISubroutineType(types: !10196)
!10196 = !{!292, !10197}
!10197 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10198, size: 64)
!10198 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8800)
!10199 = !DILocalVariable(name: "pdev", arg: 1, scope: !10194, file: !8801, line: 1875, type: !10197)
!10200 = !DILocation(line: 1875, column: 58, scope: !10194)
!10201 = !DILocation(line: 1877, column: 19, scope: !10194)
!10202 = !DILocation(line: 1877, column: 25, scope: !10194)
!10203 = !DILocation(line: 1877, column: 9, scope: !10194)
!10204 = !DILocation(line: 1877, column: 2, scope: !10194)
!10205 = distinct !DISubprogram(name: "skge_extirq", scope: !3, file: !3, line: 3341, type: !9101, scopeLine: 3342, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!10206 = !DILocation(line: 402, column: 57, scope: !9768, inlinedAt: !10207)
!10207 = distinct !DILocation(line: 3365, column: 2, scope: !10205)
!10208 = !DILocation(line: 377, column: 55, scope: !9774, inlinedAt: !10209)
!10209 = distinct !DILocation(line: 3361, column: 2, scope: !10205)
!10210 = !DILocalVariable(name: "lock", arg: 1, scope: !10211, file: !9523, line: 392, type: !2181)
!10211 = distinct !DISubprogram(name: "spin_unlock", scope: !9523, file: !9523, line: 392, type: !9769, scopeLine: 393, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!10212 = !DILocation(line: 392, column: 53, scope: !10211, inlinedAt: !10213)
!10213 = distinct !DILocation(line: 3357, column: 4, scope: !10214)
!10214 = distinct !DILexicalBlock(scope: !10215, file: !3, line: 3349, column: 27)
!10215 = distinct !DILexicalBlock(scope: !10216, file: !3, line: 3349, column: 7)
!10216 = distinct !DILexicalBlock(scope: !10217, file: !3, line: 3346, column: 43)
!10217 = distinct !DILexicalBlock(scope: !10218, file: !3, line: 3346, column: 2)
!10218 = distinct !DILexicalBlock(scope: !10205, file: !3, line: 3346, column: 2)
!10219 = !DILocalVariable(name: "lock", arg: 1, scope: !10220, file: !9523, line: 352, type: !2181)
!10220 = distinct !DISubprogram(name: "spin_lock", scope: !9523, file: !9523, line: 352, type: !9769, scopeLine: 353, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!10221 = !DILocation(line: 352, column: 51, scope: !10220, inlinedAt: !10222)
!10222 = distinct !DILocation(line: 3352, column: 4, scope: !10214)
!10223 = !DILocalVariable(name: "t", arg: 1, scope: !10205, file: !3, line: 3341, type: !9088)
!10224 = !DILocation(line: 3341, column: 48, scope: !10205)
!10225 = !DILocalVariable(name: "hw", scope: !10205, file: !3, line: 3343, type: !8794)
!10226 = !DILocation(line: 3343, column: 18, scope: !10205)
!10227 = !DILocalVariable(name: "__mptr", scope: !10228, file: !3, line: 3343, type: !591)
!10228 = distinct !DILexicalBlock(scope: !10205, file: !3, line: 3343, column: 23)
!10229 = !DILocation(line: 3343, column: 23, scope: !10228)
!10230 = !DILocation(line: 3343, column: 23, scope: !10231)
!10231 = distinct !DILexicalBlock(scope: !10228, file: !3, line: 3343, column: 23)
!10232 = !DILocalVariable(name: "port", scope: !10205, file: !3, line: 3344, type: !32)
!10233 = !DILocation(line: 3344, column: 6, scope: !10205)
!10234 = !DILocation(line: 3346, column: 12, scope: !10218)
!10235 = !DILocation(line: 3346, column: 7, scope: !10218)
!10236 = !DILocation(line: 3346, column: 17, scope: !10217)
!10237 = !DILocation(line: 3346, column: 24, scope: !10217)
!10238 = !DILocation(line: 3346, column: 28, scope: !10217)
!10239 = !DILocation(line: 3346, column: 22, scope: !10217)
!10240 = !DILocation(line: 3346, column: 2, scope: !10218)
!10241 = !DILocalVariable(name: "dev", scope: !10216, file: !3, line: 3347, type: !290)
!10242 = !DILocation(line: 3347, column: 22, scope: !10216)
!10243 = !DILocation(line: 3347, column: 28, scope: !10216)
!10244 = !DILocation(line: 3347, column: 32, scope: !10216)
!10245 = !DILocation(line: 3347, column: 36, scope: !10216)
!10246 = !DILocation(line: 3349, column: 21, scope: !10215)
!10247 = !DILocation(line: 3349, column: 7, scope: !10215)
!10248 = !DILocation(line: 3349, column: 7, scope: !10216)
!10249 = !DILocalVariable(name: "skge", scope: !10214, file: !3, line: 3350, type: !9172)
!10250 = !DILocation(line: 3350, column: 22, scope: !10214)
!10251 = !DILocation(line: 3350, column: 41, scope: !10214)
!10252 = !DILocation(line: 3350, column: 29, scope: !10214)
!10253 = !DILocation(line: 3352, column: 15, scope: !10214)
!10254 = !DILocation(line: 3352, column: 19, scope: !10214)
!10255 = !DILocation(line: 354, column: 2, scope: !10256, inlinedAt: !10222)
!10256 = distinct !DILexicalBlock(scope: !10220, file: !9523, line: 354, column: 2)
!10257 = !{i32 -2145296923}
!10258 = !DILocation(line: 354, column: 2, scope: !10259, inlinedAt: !10222)
!10259 = distinct !DILexicalBlock(scope: !10256, file: !9523, line: 354, column: 2)
!10260 = !DILocation(line: 3353, column: 20, scope: !10261)
!10261 = distinct !DILexicalBlock(scope: !10214, file: !3, line: 3353, column: 8)
!10262 = !DILocation(line: 3353, column: 9, scope: !10261)
!10263 = !DILocation(line: 3353, column: 8, scope: !10214)
!10264 = !DILocation(line: 3354, column: 20, scope: !10261)
!10265 = !DILocation(line: 3354, column: 5, scope: !10261)
!10266 = !DILocation(line: 3355, column: 13, scope: !10267)
!10267 = distinct !DILexicalBlock(scope: !10261, file: !3, line: 3355, column: 13)
!10268 = !DILocation(line: 3355, column: 17, scope: !10267)
!10269 = !DILocation(line: 3355, column: 26, scope: !10267)
!10270 = !DILocation(line: 3355, column: 13, scope: !10261)
!10271 = !DILocation(line: 3356, column: 19, scope: !10267)
!10272 = !DILocation(line: 3356, column: 5, scope: !10267)
!10273 = !DILocation(line: 3357, column: 17, scope: !10214)
!10274 = !DILocation(line: 3357, column: 21, scope: !10214)
!10275 = !DILocation(line: 394, column: 2, scope: !10276, inlinedAt: !10213)
!10276 = distinct !DILexicalBlock(scope: !10211, file: !9523, line: 394, column: 2)
!10277 = !{i32 -2145294562}
!10278 = !DILocation(line: 394, column: 2, scope: !10279, inlinedAt: !10213)
!10279 = distinct !DILexicalBlock(scope: !10276, file: !9523, line: 394, column: 2)
!10280 = !DILocation(line: 3358, column: 3, scope: !10214)
!10281 = !DILocation(line: 3359, column: 2, scope: !10216)
!10282 = !DILocation(line: 3346, column: 39, scope: !10217)
!10283 = !DILocation(line: 3346, column: 2, scope: !10217)
!10284 = distinct !{!10284, !10240, !10285}
!10285 = !DILocation(line: 3359, column: 2, scope: !10218)
!10286 = !DILocation(line: 3361, column: 17, scope: !10205)
!10287 = !DILocation(line: 3361, column: 21, scope: !10205)
!10288 = !DILocation(line: 379, column: 2, scope: !9810, inlinedAt: !10209)
!10289 = !DILocation(line: 379, column: 2, scope: !9813, inlinedAt: !10209)
!10290 = !DILocation(line: 379, column: 2, scope: !9816, inlinedAt: !10209)
!10291 = !DILocation(line: 3362, column: 2, scope: !10205)
!10292 = !DILocation(line: 3362, column: 6, scope: !10205)
!10293 = !DILocation(line: 3362, column: 16, scope: !10205)
!10294 = !DILocation(line: 3363, column: 15, scope: !10205)
!10295 = !DILocation(line: 3363, column: 28, scope: !10205)
!10296 = !DILocation(line: 3363, column: 32, scope: !10205)
!10297 = !DILocation(line: 3363, column: 2, scope: !10205)
!10298 = !DILocation(line: 3364, column: 14, scope: !10205)
!10299 = !DILocation(line: 3364, column: 2, scope: !10205)
!10300 = !DILocation(line: 3365, column: 19, scope: !10205)
!10301 = !DILocation(line: 3365, column: 23, scope: !10205)
!10302 = !DILocation(line: 404, column: 2, scope: !9834, inlinedAt: !10207)
!10303 = !DILocation(line: 404, column: 2, scope: !9837, inlinedAt: !10207)
!10304 = !DILocation(line: 404, column: 2, scope: !9840, inlinedAt: !10207)
!10305 = !DILocation(line: 3366, column: 1, scope: !10205)
!10306 = distinct !DISubprogram(name: "skge_reset", scope: !3, file: !3, line: 3513, type: !10307, scopeLine: 3514, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!10307 = !DISubroutineType(types: !10308)
!10308 = !{!32, !8794}
!10309 = !DILocalVariable(name: "hw", arg: 1, scope: !10306, file: !3, line: 3513, type: !8794)
!10310 = !DILocation(line: 3513, column: 39, scope: !10306)
!10311 = !DILocalVariable(name: "reg", scope: !10306, file: !3, line: 3515, type: !987)
!10312 = !DILocation(line: 3515, column: 6, scope: !10306)
!10313 = !DILocalVariable(name: "ctst", scope: !10306, file: !3, line: 3516, type: !581)
!10314 = !DILocation(line: 3516, column: 6, scope: !10306)
!10315 = !DILocalVariable(name: "pci_status", scope: !10306, file: !3, line: 3516, type: !581)
!10316 = !DILocation(line: 3516, column: 12, scope: !10306)
!10317 = !DILocalVariable(name: "t8", scope: !10306, file: !3, line: 3517, type: !794)
!10318 = !DILocation(line: 3517, column: 5, scope: !10306)
!10319 = !DILocalVariable(name: "mac_cfg", scope: !10306, file: !3, line: 3517, type: !794)
!10320 = !DILocation(line: 3517, column: 9, scope: !10306)
!10321 = !DILocalVariable(name: "pmd_type", scope: !10306, file: !3, line: 3517, type: !794)
!10322 = !DILocation(line: 3517, column: 18, scope: !10306)
!10323 = !DILocalVariable(name: "i", scope: !10306, file: !3, line: 3518, type: !32)
!10324 = !DILocation(line: 3518, column: 6, scope: !10306)
!10325 = !DILocation(line: 3520, column: 21, scope: !10306)
!10326 = !DILocation(line: 3520, column: 9, scope: !10306)
!10327 = !DILocation(line: 3520, column: 7, scope: !10306)
!10328 = !DILocation(line: 3523, column: 14, scope: !10306)
!10329 = !DILocation(line: 3523, column: 2, scope: !10306)
!10330 = !DILocation(line: 3524, column: 14, scope: !10306)
!10331 = !DILocation(line: 3524, column: 2, scope: !10306)
!10332 = !DILocation(line: 3527, column: 14, scope: !10306)
!10333 = !DILocation(line: 3527, column: 2, scope: !10306)
!10334 = !DILocation(line: 3528, column: 14, scope: !10306)
!10335 = !DILocation(line: 3528, column: 2, scope: !10306)
!10336 = !DILocation(line: 3530, column: 23, scope: !10306)
!10337 = !DILocation(line: 3530, column: 27, scope: !10306)
!10338 = !DILocation(line: 3530, column: 2, scope: !10306)
!10339 = !DILocation(line: 3531, column: 24, scope: !10306)
!10340 = !DILocation(line: 3531, column: 28, scope: !10306)
!10341 = !DILocation(line: 3532, column: 10, scope: !10306)
!10342 = !DILocation(line: 3532, column: 21, scope: !10306)
!10343 = !DILocation(line: 3531, column: 2, scope: !10306)
!10344 = !DILocation(line: 3533, column: 14, scope: !10306)
!10345 = !DILocation(line: 3533, column: 2, scope: !10306)
!10346 = !DILocation(line: 3534, column: 14, scope: !10306)
!10347 = !DILocation(line: 3534, column: 2, scope: !10306)
!10348 = !DILocation(line: 3537, column: 15, scope: !10306)
!10349 = !DILocation(line: 3538, column: 8, scope: !10306)
!10350 = !DILocation(line: 3538, column: 13, scope: !10306)
!10351 = !DILocation(line: 3537, column: 2, scope: !10306)
!10352 = !DILocation(line: 3540, column: 27, scope: !10306)
!10353 = !DILocation(line: 3540, column: 16, scope: !10306)
!10354 = !DILocation(line: 3540, column: 2, scope: !10306)
!10355 = !DILocation(line: 3540, column: 6, scope: !10306)
!10356 = !DILocation(line: 3540, column: 14, scope: !10306)
!10357 = !DILocation(line: 3541, column: 28, scope: !10306)
!10358 = !DILocation(line: 3541, column: 17, scope: !10306)
!10359 = !DILocation(line: 3541, column: 40, scope: !10306)
!10360 = !DILocation(line: 3541, column: 2, scope: !10306)
!10361 = !DILocation(line: 3541, column: 6, scope: !10306)
!10362 = !DILocation(line: 3541, column: 15, scope: !10306)
!10363 = !DILocation(line: 3542, column: 24, scope: !10306)
!10364 = !DILocation(line: 3542, column: 13, scope: !10306)
!10365 = !DILocation(line: 3542, column: 11, scope: !10306)
!10366 = !DILocation(line: 3543, column: 16, scope: !10306)
!10367 = !DILocation(line: 3543, column: 25, scope: !10306)
!10368 = !DILocation(line: 3543, column: 32, scope: !10306)
!10369 = !DILocation(line: 3543, column: 35, scope: !10306)
!10370 = !DILocation(line: 3543, column: 44, scope: !10306)
!10371 = !DILocation(line: 3543, column: 15, scope: !10306)
!10372 = !DILocation(line: 3543, column: 2, scope: !10306)
!10373 = !DILocation(line: 3543, column: 6, scope: !10306)
!10374 = !DILocation(line: 3543, column: 13, scope: !10306)
!10375 = !DILocation(line: 3545, column: 10, scope: !10306)
!10376 = !DILocation(line: 3545, column: 14, scope: !10306)
!10377 = !DILocation(line: 3545, column: 2, scope: !10306)
!10378 = !DILocation(line: 3562, column: 3, scope: !10379)
!10379 = distinct !DILexicalBlock(scope: !10306, file: !3, line: 3545, column: 23)
!10380 = !DILocation(line: 3563, column: 3, scope: !10379)
!10381 = !DILocation(line: 3569, column: 7, scope: !10382)
!10382 = distinct !DILexicalBlock(scope: !10379, file: !3, line: 3569, column: 7)
!10383 = !DILocation(line: 3569, column: 11, scope: !10382)
!10384 = !DILocation(line: 3569, column: 20, scope: !10382)
!10385 = !DILocation(line: 3569, column: 41, scope: !10382)
!10386 = !DILocation(line: 3569, column: 44, scope: !10382)
!10387 = !DILocation(line: 3569, column: 53, scope: !10382)
!10388 = !DILocation(line: 3569, column: 7, scope: !10379)
!10389 = !DILocation(line: 3570, column: 4, scope: !10382)
!10390 = !DILocation(line: 3570, column: 8, scope: !10382)
!10391 = !DILocation(line: 3570, column: 15, scope: !10382)
!10392 = !DILocation(line: 3572, column: 3, scope: !10379)
!10393 = !DILocation(line: 3572, column: 7, scope: !10379)
!10394 = !DILocation(line: 3572, column: 16, scope: !10379)
!10395 = !DILocation(line: 3573, column: 3, scope: !10379)
!10396 = !DILocation(line: 3576, column: 3, scope: !10379)
!10397 = !DILocation(line: 3578, column: 3, scope: !10379)
!10398 = !DILocation(line: 3581, column: 23, scope: !10306)
!10399 = !DILocation(line: 3581, column: 12, scope: !10306)
!10400 = !DILocation(line: 3581, column: 10, scope: !10306)
!10401 = !DILocation(line: 3582, column: 15, scope: !10306)
!10402 = !DILocation(line: 3582, column: 23, scope: !10306)
!10403 = !DILocation(line: 3582, column: 14, scope: !10306)
!10404 = !DILocation(line: 3582, column: 2, scope: !10306)
!10405 = !DILocation(line: 3582, column: 6, scope: !10306)
!10406 = !DILocation(line: 3582, column: 12, scope: !10306)
!10407 = !DILocation(line: 3583, column: 18, scope: !10306)
!10408 = !DILocation(line: 3583, column: 26, scope: !10306)
!10409 = !DILocation(line: 3583, column: 44, scope: !10306)
!10410 = !DILocation(line: 3583, column: 17, scope: !10306)
!10411 = !DILocation(line: 3583, column: 2, scope: !10306)
!10412 = !DILocation(line: 3583, column: 6, scope: !10306)
!10413 = !DILocation(line: 3583, column: 15, scope: !10306)
!10414 = !DILocation(line: 3586, column: 18, scope: !10306)
!10415 = !DILocation(line: 3586, column: 7, scope: !10306)
!10416 = !DILocation(line: 3586, column: 5, scope: !10306)
!10417 = !DILocation(line: 3587, column: 17, scope: !10418)
!10418 = distinct !DILexicalBlock(scope: !10306, file: !3, line: 3587, column: 6)
!10419 = !DILocation(line: 3587, column: 6, scope: !10418)
!10420 = !DILocation(line: 3587, column: 6, scope: !10306)
!10421 = !DILocation(line: 3588, column: 7, scope: !10422)
!10422 = distinct !DILexicalBlock(scope: !10423, file: !3, line: 3588, column: 7)
!10423 = distinct !DILexicalBlock(scope: !10418, file: !3, line: 3587, column: 22)
!10424 = !DILocation(line: 3588, column: 10, scope: !10422)
!10425 = !DILocation(line: 3588, column: 7, scope: !10423)
!10426 = !DILocation(line: 3590, column: 4, scope: !10427)
!10427 = distinct !DILexicalBlock(scope: !10422, file: !3, line: 3588, column: 16)
!10428 = !DILocation(line: 3590, column: 8, scope: !10427)
!10429 = !DILocation(line: 3590, column: 17, scope: !10427)
!10430 = !DILocation(line: 3591, column: 4, scope: !10427)
!10431 = !DILocation(line: 3591, column: 8, scope: !10427)
!10432 = !DILocation(line: 3591, column: 19, scope: !10427)
!10433 = !DILocation(line: 3592, column: 3, scope: !10427)
!10434 = !DILocation(line: 3593, column: 19, scope: !10422)
!10435 = !DILocation(line: 3593, column: 22, scope: !10422)
!10436 = !DILocation(line: 3593, column: 4, scope: !10422)
!10437 = !DILocation(line: 3593, column: 8, scope: !10422)
!10438 = !DILocation(line: 3593, column: 17, scope: !10422)
!10439 = !DILocation(line: 3594, column: 2, scope: !10423)
!10440 = !DILocation(line: 3594, column: 13, scope: !10441)
!10441 = distinct !DILexicalBlock(scope: !10418, file: !3, line: 3594, column: 13)
!10442 = !DILocation(line: 3594, column: 16, scope: !10441)
!10443 = !DILocation(line: 3594, column: 13, scope: !10418)
!10444 = !DILocation(line: 3595, column: 3, scope: !10441)
!10445 = !DILocation(line: 3595, column: 7, scope: !10441)
!10446 = !DILocation(line: 3595, column: 16, scope: !10441)
!10447 = !DILocation(line: 3597, column: 18, scope: !10441)
!10448 = !DILocation(line: 3597, column: 21, scope: !10441)
!10449 = !DILocation(line: 3597, column: 3, scope: !10441)
!10450 = !DILocation(line: 3597, column: 7, scope: !10441)
!10451 = !DILocation(line: 3597, column: 16, scope: !10441)
!10452 = !DILocation(line: 3599, column: 2, scope: !10306)
!10453 = !DILocation(line: 3599, column: 6, scope: !10306)
!10454 = !DILocation(line: 3599, column: 16, scope: !10306)
!10455 = !DILocation(line: 3602, column: 19, scope: !10456)
!10456 = distinct !DILexicalBlock(scope: !10306, file: !3, line: 3602, column: 6)
!10457 = !DILocation(line: 3602, column: 8, scope: !10456)
!10458 = !DILocation(line: 3602, column: 23, scope: !10456)
!10459 = !DILocation(line: 3602, column: 26, scope: !10456)
!10460 = !DILocation(line: 3602, column: 30, scope: !10456)
!10461 = !DILocation(line: 3602, column: 39, scope: !10456)
!10462 = !DILocation(line: 3602, column: 6, scope: !10306)
!10463 = !DILocation(line: 3603, column: 3, scope: !10456)
!10464 = !DILocation(line: 3603, column: 7, scope: !10456)
!10465 = !DILocation(line: 3603, column: 17, scope: !10456)
!10466 = !DILocation(line: 3605, column: 17, scope: !10467)
!10467 = distinct !DILexicalBlock(scope: !10306, file: !3, line: 3605, column: 6)
!10468 = !DILocation(line: 3605, column: 6, scope: !10467)
!10469 = !DILocation(line: 3605, column: 6, scope: !10306)
!10470 = !DILocation(line: 3606, column: 16, scope: !10467)
!10471 = !DILocation(line: 3606, column: 3, scope: !10467)
!10472 = !DILocation(line: 3609, column: 15, scope: !10473)
!10473 = distinct !DILexicalBlock(scope: !10467, file: !3, line: 3607, column: 7)
!10474 = !DILocation(line: 3609, column: 3, scope: !10473)
!10475 = !DILocation(line: 3613, column: 20, scope: !10476)
!10476 = distinct !DILexicalBlock(scope: !10473, file: !3, line: 3613, column: 7)
!10477 = !DILocation(line: 3613, column: 8, scope: !10476)
!10478 = !DILocation(line: 3613, column: 33, scope: !10476)
!10479 = !DILocation(line: 3613, column: 46, scope: !10476)
!10480 = !DILocation(line: 3614, column: 20, scope: !10476)
!10481 = !DILocation(line: 3614, column: 8, scope: !10476)
!10482 = !DILocation(line: 3614, column: 37, scope: !10476)
!10483 = !DILocation(line: 3613, column: 7, scope: !10473)
!10484 = !DILocation(line: 3615, column: 4, scope: !10485)
!10485 = distinct !DILexicalBlock(scope: !10476, file: !3, line: 3614, column: 55)
!10486 = !DILocation(line: 3616, column: 4, scope: !10485)
!10487 = !DILocation(line: 3616, column: 8, scope: !10485)
!10488 = !DILocation(line: 3616, column: 18, scope: !10485)
!10489 = !DILocation(line: 3617, column: 3, scope: !10485)
!10490 = !DILocation(line: 3620, column: 15, scope: !10473)
!10491 = !DILocation(line: 3620, column: 3, scope: !10473)
!10492 = !DILocation(line: 3621, column: 25, scope: !10473)
!10493 = !DILocation(line: 3621, column: 29, scope: !10473)
!10494 = !DILocation(line: 3621, column: 3, scope: !10473)
!10495 = !DILocation(line: 3622, column: 7, scope: !10473)
!10496 = !DILocation(line: 3623, column: 26, scope: !10473)
!10497 = !DILocation(line: 3623, column: 30, scope: !10473)
!10498 = !DILocation(line: 3623, column: 50, scope: !10473)
!10499 = !DILocation(line: 3623, column: 3, scope: !10473)
!10500 = !DILocation(line: 3624, column: 15, scope: !10473)
!10501 = !DILocation(line: 3624, column: 3, scope: !10473)
!10502 = !DILocation(line: 3627, column: 10, scope: !10503)
!10503 = distinct !DILexicalBlock(scope: !10473, file: !3, line: 3627, column: 3)
!10504 = !DILocation(line: 3627, column: 8, scope: !10503)
!10505 = !DILocation(line: 3627, column: 15, scope: !10506)
!10506 = distinct !DILexicalBlock(scope: !10503, file: !3, line: 3627, column: 3)
!10507 = !DILocation(line: 3627, column: 19, scope: !10506)
!10508 = !DILocation(line: 3627, column: 23, scope: !10506)
!10509 = !DILocation(line: 3627, column: 17, scope: !10506)
!10510 = !DILocation(line: 3627, column: 3, scope: !10503)
!10511 = !DILocation(line: 3628, column: 17, scope: !10512)
!10512 = distinct !DILexicalBlock(scope: !10506, file: !3, line: 3627, column: 35)
!10513 = !DILocation(line: 3628, column: 21, scope: !10512)
!10514 = !DILocation(line: 3628, column: 4, scope: !10512)
!10515 = !DILocation(line: 3629, column: 17, scope: !10512)
!10516 = !DILocation(line: 3629, column: 21, scope: !10512)
!10517 = !DILocation(line: 3629, column: 4, scope: !10512)
!10518 = !DILocation(line: 3630, column: 3, scope: !10512)
!10519 = !DILocation(line: 3627, column: 31, scope: !10506)
!10520 = !DILocation(line: 3627, column: 3, scope: !10506)
!10521 = distinct !{!10521, !10510, !10522}
!10522 = !DILocation(line: 3630, column: 3, scope: !10503)
!10523 = !DILocation(line: 3634, column: 14, scope: !10306)
!10524 = !DILocation(line: 3634, column: 2, scope: !10306)
!10525 = !DILocation(line: 3635, column: 14, scope: !10306)
!10526 = !DILocation(line: 3635, column: 2, scope: !10306)
!10527 = !DILocation(line: 3636, column: 14, scope: !10306)
!10528 = !DILocation(line: 3636, column: 2, scope: !10306)
!10529 = !DILocation(line: 3639, column: 9, scope: !10530)
!10530 = distinct !DILexicalBlock(scope: !10306, file: !3, line: 3639, column: 2)
!10531 = !DILocation(line: 3639, column: 7, scope: !10530)
!10532 = !DILocation(line: 3639, column: 14, scope: !10533)
!10533 = distinct !DILexicalBlock(scope: !10530, file: !3, line: 3639, column: 2)
!10534 = !DILocation(line: 3639, column: 18, scope: !10533)
!10535 = !DILocation(line: 3639, column: 22, scope: !10533)
!10536 = !DILocation(line: 3639, column: 16, scope: !10533)
!10537 = !DILocation(line: 3639, column: 2, scope: !10530)
!10538 = !DILocation(line: 3640, column: 15, scope: !10533)
!10539 = !DILocation(line: 3640, column: 19, scope: !10533)
!10540 = !DILocation(line: 3640, column: 3, scope: !10533)
!10541 = !DILocation(line: 3639, column: 30, scope: !10533)
!10542 = !DILocation(line: 3639, column: 2, scope: !10533)
!10543 = distinct !{!10543, !10537, !10544}
!10544 = !DILocation(line: 3640, column: 51, scope: !10530)
!10545 = !DILocation(line: 3643, column: 15, scope: !10306)
!10546 = !DILocation(line: 3643, column: 2, scope: !10306)
!10547 = !DILocation(line: 3645, column: 14, scope: !10306)
!10548 = !DILocation(line: 3645, column: 2, scope: !10306)
!10549 = !DILocation(line: 3646, column: 14, scope: !10306)
!10550 = !DILocation(line: 3646, column: 2, scope: !10306)
!10551 = !DILocation(line: 3647, column: 14, scope: !10306)
!10552 = !DILocation(line: 3647, column: 2, scope: !10306)
!10553 = !DILocation(line: 3648, column: 14, scope: !10306)
!10554 = !DILocation(line: 3648, column: 2, scope: !10306)
!10555 = !DILocation(line: 3649, column: 14, scope: !10306)
!10556 = !DILocation(line: 3649, column: 2, scope: !10306)
!10557 = !DILocation(line: 3650, column: 14, scope: !10306)
!10558 = !DILocation(line: 3650, column: 2, scope: !10306)
!10559 = !DILocation(line: 3651, column: 14, scope: !10306)
!10560 = !DILocation(line: 3651, column: 2, scope: !10306)
!10561 = !DILocation(line: 3652, column: 14, scope: !10306)
!10562 = !DILocation(line: 3652, column: 2, scope: !10306)
!10563 = !DILocation(line: 3653, column: 14, scope: !10306)
!10564 = !DILocation(line: 3653, column: 2, scope: !10306)
!10565 = !DILocation(line: 3654, column: 14, scope: !10306)
!10566 = !DILocation(line: 3654, column: 2, scope: !10306)
!10567 = !DILocation(line: 3655, column: 14, scope: !10306)
!10568 = !DILocation(line: 3655, column: 2, scope: !10306)
!10569 = !DILocation(line: 3656, column: 14, scope: !10306)
!10570 = !DILocation(line: 3656, column: 2, scope: !10306)
!10571 = !DILocation(line: 3658, column: 15, scope: !10306)
!10572 = !DILocation(line: 3658, column: 2, scope: !10306)
!10573 = !DILocation(line: 3663, column: 15, scope: !10306)
!10574 = !DILocation(line: 3663, column: 2, scope: !10306)
!10575 = !DILocation(line: 3664, column: 15, scope: !10306)
!10576 = !DILocation(line: 3664, column: 47, scope: !10306)
!10577 = !DILocation(line: 3664, column: 32, scope: !10306)
!10578 = !DILocation(line: 3664, column: 2, scope: !10306)
!10579 = !DILocation(line: 3665, column: 15, scope: !10306)
!10580 = !DILocation(line: 3665, column: 2, scope: !10306)
!10581 = !DILocation(line: 3668, column: 15, scope: !10306)
!10582 = !DILocation(line: 3668, column: 2, scope: !10306)
!10583 = !DILocation(line: 3670, column: 9, scope: !10584)
!10584 = distinct !DILexicalBlock(scope: !10306, file: !3, line: 3670, column: 2)
!10585 = !DILocation(line: 3670, column: 7, scope: !10584)
!10586 = !DILocation(line: 3670, column: 14, scope: !10587)
!10587 = distinct !DILexicalBlock(scope: !10584, file: !3, line: 3670, column: 2)
!10588 = !DILocation(line: 3670, column: 18, scope: !10587)
!10589 = !DILocation(line: 3670, column: 22, scope: !10587)
!10590 = !DILocation(line: 3670, column: 16, scope: !10587)
!10591 = !DILocation(line: 3670, column: 2, scope: !10584)
!10592 = !DILocation(line: 3671, column: 18, scope: !10593)
!10593 = distinct !DILexicalBlock(scope: !10594, file: !3, line: 3671, column: 7)
!10594 = distinct !DILexicalBlock(scope: !10587, file: !3, line: 3670, column: 34)
!10595 = !DILocation(line: 3671, column: 7, scope: !10593)
!10596 = !DILocation(line: 3671, column: 7, scope: !10594)
!10597 = !DILocation(line: 3672, column: 18, scope: !10593)
!10598 = !DILocation(line: 3672, column: 22, scope: !10593)
!10599 = !DILocation(line: 3672, column: 4, scope: !10593)
!10600 = !DILocation(line: 3674, column: 16, scope: !10593)
!10601 = !DILocation(line: 3674, column: 20, scope: !10593)
!10602 = !DILocation(line: 3674, column: 4, scope: !10593)
!10603 = !DILocation(line: 3675, column: 2, scope: !10594)
!10604 = !DILocation(line: 3670, column: 30, scope: !10587)
!10605 = !DILocation(line: 3670, column: 2, scope: !10587)
!10606 = distinct !{!10606, !10591, !10607}
!10607 = !DILocation(line: 3675, column: 2, scope: !10584)
!10608 = !DILocation(line: 3677, column: 2, scope: !10306)
!10609 = !DILocation(line: 3678, column: 1, scope: !10306)
!10610 = !DILocalVariable(name: "hw", arg: 1, scope: !9404, file: !3, line: 3495, type: !9407)
!10611 = !DILocation(line: 3495, column: 58, scope: !9404)
!10612 = !DILocalVariable(name: "i", scope: !9404, file: !3, line: 3497, type: !32)
!10613 = !DILocation(line: 3497, column: 6, scope: !9404)
!10614 = !DILocation(line: 3500, column: 9, scope: !10615)
!10615 = distinct !DILexicalBlock(scope: !9404, file: !3, line: 3500, column: 2)
!10616 = !DILocation(line: 3500, column: 7, scope: !10615)
!10617 = !DILocation(line: 3500, column: 14, scope: !10618)
!10618 = distinct !DILexicalBlock(scope: !10615, file: !3, line: 3500, column: 2)
!10619 = !DILocation(line: 3500, column: 16, scope: !10618)
!10620 = !DILocation(line: 3500, column: 2, scope: !10615)
!10621 = !DILocation(line: 3501, column: 18, scope: !10622)
!10622 = distinct !DILexicalBlock(scope: !10618, file: !3, line: 3501, column: 7)
!10623 = !DILocation(line: 3501, column: 7, scope: !10622)
!10624 = !DILocation(line: 3501, column: 21, scope: !10622)
!10625 = !DILocation(line: 3501, column: 27, scope: !10622)
!10626 = !DILocation(line: 3501, column: 31, scope: !10622)
!10627 = !DILocation(line: 3501, column: 24, scope: !10622)
!10628 = !DILocation(line: 3501, column: 7, scope: !10618)
!10629 = !DILocation(line: 3502, column: 22, scope: !10622)
!10630 = !DILocation(line: 3502, column: 11, scope: !10622)
!10631 = !DILocation(line: 3502, column: 25, scope: !10622)
!10632 = !DILocation(line: 3502, column: 4, scope: !10622)
!10633 = !DILocation(line: 3500, column: 43, scope: !10618)
!10634 = !DILocation(line: 3500, column: 2, scope: !10618)
!10635 = distinct !{!10635, !10620, !10636}
!10636 = !DILocation(line: 3502, column: 25, scope: !10615)
!10637 = !DILocation(line: 3504, column: 44, scope: !9404)
!10638 = !DILocation(line: 3504, column: 48, scope: !9404)
!10639 = !DILocation(line: 3504, column: 2, scope: !9404)
!10640 = !DILocation(line: 3505, column: 2, scope: !9404)
!10641 = !DILocation(line: 3506, column: 1, scope: !9404)
!10642 = distinct !DISubprogram(name: "skge_devinit", scope: !3, file: !3, line: 3803, type: !10643, scopeLine: 3805, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!10643 = !DISubroutineType(types: !10644)
!10644 = !{!290, !8794, !32, !32}
!10645 = !DILocalVariable(name: "hw", arg: 1, scope: !10642, file: !3, line: 3803, type: !8794)
!10646 = !DILocation(line: 3803, column: 56, scope: !10642)
!10647 = !DILocalVariable(name: "port", arg: 2, scope: !10642, file: !3, line: 3803, type: !32)
!10648 = !DILocation(line: 3803, column: 64, scope: !10642)
!10649 = !DILocalVariable(name: "highmem", arg: 3, scope: !10642, file: !3, line: 3804, type: !32)
!10650 = !DILocation(line: 3804, column: 16, scope: !10642)
!10651 = !DILocalVariable(name: "skge", scope: !10642, file: !3, line: 3806, type: !9172)
!10652 = !DILocation(line: 3806, column: 20, scope: !10642)
!10653 = !DILocalVariable(name: "dev", scope: !10642, file: !3, line: 3807, type: !290)
!10654 = !DILocation(line: 3807, column: 21, scope: !10642)
!10655 = !DILocation(line: 3807, column: 27, scope: !10642)
!10656 = !DILocation(line: 3809, column: 7, scope: !10657)
!10657 = distinct !DILexicalBlock(scope: !10642, file: !3, line: 3809, column: 6)
!10658 = !DILocation(line: 3809, column: 6, scope: !10642)
!10659 = !DILocation(line: 3810, column: 3, scope: !10657)
!10660 = !DILocation(line: 3812, column: 2, scope: !10642)
!10661 = !DILocation(line: 3813, column: 2, scope: !10642)
!10662 = !DILocation(line: 3813, column: 7, scope: !10642)
!10663 = !DILocation(line: 3813, column: 18, scope: !10642)
!10664 = !DILocation(line: 3814, column: 2, scope: !10642)
!10665 = !DILocation(line: 3814, column: 7, scope: !10642)
!10666 = !DILocation(line: 3814, column: 19, scope: !10642)
!10667 = !DILocation(line: 3815, column: 2, scope: !10642)
!10668 = !DILocation(line: 3815, column: 7, scope: !10642)
!10669 = !DILocation(line: 3815, column: 22, scope: !10642)
!10670 = !DILocation(line: 3816, column: 13, scope: !10642)
!10671 = !DILocation(line: 3816, column: 17, scope: !10642)
!10672 = !DILocation(line: 3816, column: 23, scope: !10642)
!10673 = !DILocation(line: 3816, column: 2, scope: !10642)
!10674 = !DILocation(line: 3816, column: 7, scope: !10642)
!10675 = !DILocation(line: 3816, column: 11, scope: !10642)
!10676 = !DILocation(line: 3819, column: 2, scope: !10642)
!10677 = !DILocation(line: 3819, column: 7, scope: !10642)
!10678 = !DILocation(line: 3819, column: 15, scope: !10642)
!10679 = !DILocation(line: 3820, column: 2, scope: !10642)
!10680 = !DILocation(line: 3820, column: 7, scope: !10642)
!10681 = !DILocation(line: 3820, column: 15, scope: !10642)
!10682 = !DILocation(line: 3822, column: 6, scope: !10683)
!10683 = distinct !DILexicalBlock(scope: !10642, file: !3, line: 3822, column: 6)
!10684 = !DILocation(line: 3822, column: 6, scope: !10642)
!10685 = !DILocation(line: 3823, column: 3, scope: !10683)
!10686 = !DILocation(line: 3823, column: 8, scope: !10683)
!10687 = !DILocation(line: 3823, column: 17, scope: !10683)
!10688 = !DILocation(line: 3825, column: 21, scope: !10642)
!10689 = !DILocation(line: 3825, column: 9, scope: !10642)
!10690 = !DILocation(line: 3825, column: 7, scope: !10642)
!10691 = !DILocation(line: 3826, column: 17, scope: !10642)
!10692 = !DILocation(line: 3826, column: 23, scope: !10642)
!10693 = !DILocation(line: 3826, column: 29, scope: !10642)
!10694 = !DILocation(line: 3826, column: 2, scope: !10642)
!10695 = !DILocation(line: 3827, column: 17, scope: !10642)
!10696 = !DILocation(line: 3827, column: 2, scope: !10642)
!10697 = !DILocation(line: 3827, column: 8, scope: !10642)
!10698 = !DILocation(line: 3827, column: 15, scope: !10642)
!10699 = !DILocation(line: 3828, column: 13, scope: !10642)
!10700 = !DILocation(line: 3828, column: 2, scope: !10642)
!10701 = !DILocation(line: 3828, column: 8, scope: !10642)
!10702 = !DILocation(line: 3828, column: 11, scope: !10642)
!10703 = !DILocation(line: 3829, column: 36, scope: !10642)
!10704 = !DILocation(line: 3829, column: 21, scope: !10642)
!10705 = !DILocation(line: 3829, column: 2, scope: !10642)
!10706 = !DILocation(line: 3829, column: 8, scope: !10642)
!10707 = !DILocation(line: 3829, column: 19, scope: !10642)
!10708 = !DILocation(line: 3831, column: 2, scope: !10642)
!10709 = !DILocation(line: 3831, column: 8, scope: !10642)
!10710 = !DILocation(line: 3831, column: 16, scope: !10642)
!10711 = !DILocation(line: 3831, column: 22, scope: !10642)
!10712 = !DILocation(line: 3832, column: 2, scope: !10642)
!10713 = !DILocation(line: 3832, column: 8, scope: !10642)
!10714 = !DILocation(line: 3832, column: 16, scope: !10642)
!10715 = !DILocation(line: 3832, column: 22, scope: !10642)
!10716 = !DILocation(line: 3835, column: 2, scope: !10642)
!10717 = !DILocation(line: 3835, column: 8, scope: !10642)
!10718 = !DILocation(line: 3835, column: 16, scope: !10642)
!10719 = !DILocation(line: 3836, column: 2, scope: !10642)
!10720 = !DILocation(line: 3836, column: 8, scope: !10642)
!10721 = !DILocation(line: 3836, column: 21, scope: !10642)
!10722 = !DILocation(line: 3837, column: 2, scope: !10642)
!10723 = !DILocation(line: 3837, column: 8, scope: !10642)
!10724 = !DILocation(line: 3837, column: 15, scope: !10642)
!10725 = !DILocation(line: 3838, column: 2, scope: !10642)
!10726 = !DILocation(line: 3838, column: 8, scope: !10642)
!10727 = !DILocation(line: 3838, column: 14, scope: !10642)
!10728 = !DILocation(line: 3839, column: 43, scope: !10642)
!10729 = !DILocation(line: 3839, column: 22, scope: !10642)
!10730 = !DILocation(line: 3839, column: 2, scope: !10642)
!10731 = !DILocation(line: 3839, column: 8, scope: !10642)
!10732 = !DILocation(line: 3839, column: 20, scope: !10642)
!10733 = !DILocation(line: 3841, column: 25, scope: !10734)
!10734 = distinct !DILexicalBlock(scope: !10642, file: !3, line: 3841, column: 6)
!10735 = !DILocation(line: 3841, column: 29, scope: !10734)
!10736 = !DILocation(line: 3841, column: 35, scope: !10734)
!10737 = !DILocation(line: 3841, column: 6, scope: !10734)
!10738 = !DILocation(line: 3841, column: 6, scope: !10642)
!10739 = !DILocation(line: 3842, column: 29, scope: !10740)
!10740 = distinct !DILexicalBlock(scope: !10734, file: !3, line: 3841, column: 41)
!10741 = !DILocation(line: 3842, column: 15, scope: !10740)
!10742 = !DILocation(line: 3842, column: 33, scope: !10740)
!10743 = !DILocation(line: 3842, column: 3, scope: !10740)
!10744 = !DILocation(line: 3842, column: 9, scope: !10740)
!10745 = !DILocation(line: 3842, column: 13, scope: !10740)
!10746 = !DILocation(line: 3843, column: 29, scope: !10740)
!10747 = !DILocation(line: 3843, column: 33, scope: !10740)
!10748 = !DILocation(line: 3843, column: 39, scope: !10740)
!10749 = !DILocation(line: 3843, column: 44, scope: !10740)
!10750 = !DILocation(line: 3843, column: 50, scope: !10740)
!10751 = !DILocation(line: 3843, column: 3, scope: !10740)
!10752 = !DILocation(line: 3844, column: 2, scope: !10740)
!10753 = !DILocation(line: 3846, column: 18, scope: !10642)
!10754 = !DILocation(line: 3846, column: 2, scope: !10642)
!10755 = !DILocation(line: 3846, column: 6, scope: !10642)
!10756 = !DILocation(line: 3846, column: 10, scope: !10642)
!10757 = !DILocation(line: 3846, column: 16, scope: !10642)
!10758 = !DILocation(line: 3848, column: 15, scope: !10642)
!10759 = !DILocation(line: 3848, column: 2, scope: !10642)
!10760 = !DILocation(line: 3848, column: 8, scope: !10642)
!10761 = !DILocation(line: 3848, column: 13, scope: !10642)
!10762 = !DILocation(line: 3851, column: 17, scope: !10763)
!10763 = distinct !DILexicalBlock(scope: !10642, file: !3, line: 3851, column: 6)
!10764 = !DILocation(line: 3851, column: 6, scope: !10763)
!10765 = !DILocation(line: 3851, column: 6, scope: !10642)
!10766 = !DILocation(line: 3852, column: 6, scope: !10763)
!10767 = !DILocation(line: 3854, column: 3, scope: !10768)
!10768 = distinct !DILexicalBlock(scope: !10763, file: !3, line: 3853, column: 7)
!10769 = !DILocation(line: 3854, column: 8, scope: !10768)
!10770 = !DILocation(line: 3854, column: 20, scope: !10768)
!10771 = !DILocation(line: 3856, column: 20, scope: !10768)
!10772 = !DILocation(line: 3856, column: 25, scope: !10768)
!10773 = !DILocation(line: 3856, column: 3, scope: !10768)
!10774 = !DILocation(line: 3856, column: 8, scope: !10768)
!10775 = !DILocation(line: 3856, column: 17, scope: !10768)
!10776 = !DILocation(line: 3860, column: 16, scope: !10642)
!10777 = !DILocation(line: 3860, column: 21, scope: !10642)
!10778 = !DILocation(line: 3860, column: 31, scope: !10642)
!10779 = !DILocation(line: 3860, column: 35, scope: !10642)
!10780 = !DILocation(line: 3860, column: 40, scope: !10642)
!10781 = !DILocation(line: 3860, column: 53, scope: !10642)
!10782 = !DILocation(line: 3860, column: 57, scope: !10642)
!10783 = !DILocation(line: 3860, column: 51, scope: !10642)
!10784 = !DILocation(line: 3860, column: 2, scope: !10642)
!10785 = !DILocation(line: 3862, column: 9, scope: !10642)
!10786 = !DILocation(line: 3862, column: 2, scope: !10642)
!10787 = !DILocation(line: 3863, column: 1, scope: !10642)
!10788 = distinct !DISubprogram(name: "is_valid_ether_addr", scope: !10789, file: !10789, line: 191, type: !10790, scopeLine: 192, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!10789 = !DIFile(filename: "./include/linux/etherdevice.h", directory: "/home/lizy2001/genbc/linux")
!10790 = !DISubroutineType(types: !10791)
!10791 = !{!771, !5859}
!10792 = !DILocalVariable(name: "addr", arg: 1, scope: !10788, file: !10789, line: 191, type: !5859)
!10793 = !DILocation(line: 191, column: 50, scope: !10788)
!10794 = !DILocation(line: 195, column: 34, scope: !10788)
!10795 = !DILocation(line: 195, column: 10, scope: !10788)
!10796 = !DILocation(line: 195, column: 40, scope: !10788)
!10797 = !DILocation(line: 195, column: 63, scope: !10788)
!10798 = !DILocation(line: 195, column: 44, scope: !10788)
!10799 = !DILocation(line: 195, column: 43, scope: !10788)
!10800 = !DILocation(line: 0, scope: !10788)
!10801 = !DILocation(line: 195, column: 2, scope: !10788)
!10802 = distinct !DISubprogram(name: "skge_show_addr", scope: !3, file: !3, line: 3865, type: !406, scopeLine: 3866, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!10803 = !DILocalVariable(name: "dev", arg: 1, scope: !10802, file: !3, line: 3865, type: !290)
!10804 = !DILocation(line: 3865, column: 47, scope: !10802)
!10805 = !DILocalVariable(name: "skge", scope: !10802, file: !3, line: 3867, type: !10806)
!10806 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10807, size: 64)
!10807 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9173)
!10808 = !DILocation(line: 3867, column: 26, scope: !10802)
!10809 = !DILocation(line: 3867, column: 45, scope: !10802)
!10810 = !DILocation(line: 3867, column: 33, scope: !10802)
!10811 = !DILocation(line: 3869, column: 2, scope: !10802)
!10812 = !DILocation(line: 3869, column: 2, scope: !10813)
!10813 = distinct !DILexicalBlock(scope: !10814, file: !3, line: 3869, column: 2)
!10814 = distinct !DILexicalBlock(scope: !10802, file: !3, line: 3869, column: 2)
!10815 = !DILocation(line: 3869, column: 2, scope: !10814)
!10816 = !DILocation(line: 3870, column: 1, scope: !10802)
!10817 = distinct !DISubprogram(name: "request_irq", scope: !8776, file: !8776, line: 157, type: !10818, scopeLine: 159, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!10818 = !DISubroutineType(types: !10819)
!10819 = !{!32, !7, !10820, !312, !292, !591}
!10820 = !DIDerivedType(tag: DW_TAG_typedef, name: "irq_handler_t", file: !8776, line: 92, baseType: !10821)
!10821 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10822, size: 64)
!10822 = !DISubroutineType(types: !10823)
!10823 = !{!10824, !32, !591}
!10824 = !DIDerivedType(tag: DW_TAG_typedef, name: "irqreturn_t", file: !8770, line: 17, baseType: !8769)
!10825 = !DILocalVariable(name: "irq", arg: 1, scope: !10817, file: !8776, line: 157, type: !7)
!10826 = !DILocation(line: 157, column: 26, scope: !10817)
!10827 = !DILocalVariable(name: "handler", arg: 2, scope: !10817, file: !8776, line: 157, type: !10820)
!10828 = !DILocation(line: 157, column: 45, scope: !10817)
!10829 = !DILocalVariable(name: "flags", arg: 3, scope: !10817, file: !8776, line: 157, type: !312)
!10830 = !DILocation(line: 157, column: 68, scope: !10817)
!10831 = !DILocalVariable(name: "name", arg: 4, scope: !10817, file: !8776, line: 158, type: !292)
!10832 = !DILocation(line: 158, column: 18, scope: !10817)
!10833 = !DILocalVariable(name: "dev", arg: 5, scope: !10817, file: !8776, line: 158, type: !591)
!10834 = !DILocation(line: 158, column: 30, scope: !10817)
!10835 = !DILocation(line: 160, column: 30, scope: !10817)
!10836 = !DILocation(line: 160, column: 35, scope: !10817)
!10837 = !DILocation(line: 160, column: 50, scope: !10817)
!10838 = !DILocation(line: 160, column: 57, scope: !10817)
!10839 = !DILocation(line: 160, column: 63, scope: !10817)
!10840 = !DILocation(line: 160, column: 9, scope: !10817)
!10841 = !DILocation(line: 160, column: 2, scope: !10817)
!10842 = distinct !DISubprogram(name: "skge_intr", scope: !3, file: !3, line: 3368, type: !10822, scopeLine: 3369, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!10843 = !DILocation(line: 392, column: 53, scope: !10211, inlinedAt: !10844)
!10844 = distinct !DILocation(line: 3430, column: 2, scope: !10842)
!10845 = !DILocation(line: 352, column: 51, scope: !10220, inlinedAt: !10846)
!10846 = distinct !DILocation(line: 3374, column: 2, scope: !10842)
!10847 = !DILocalVariable(name: "irq", arg: 1, scope: !10842, file: !3, line: 3368, type: !32)
!10848 = !DILocation(line: 3368, column: 34, scope: !10842)
!10849 = !DILocalVariable(name: "dev_id", arg: 2, scope: !10842, file: !3, line: 3368, type: !591)
!10850 = !DILocation(line: 3368, column: 45, scope: !10842)
!10851 = !DILocalVariable(name: "hw", scope: !10842, file: !3, line: 3370, type: !8794)
!10852 = !DILocation(line: 3370, column: 18, scope: !10842)
!10853 = !DILocation(line: 3370, column: 23, scope: !10842)
!10854 = !DILocalVariable(name: "status", scope: !10842, file: !3, line: 3371, type: !987)
!10855 = !DILocation(line: 3371, column: 6, scope: !10842)
!10856 = !DILocalVariable(name: "handled", scope: !10842, file: !3, line: 3372, type: !32)
!10857 = !DILocation(line: 3372, column: 6, scope: !10842)
!10858 = !DILocation(line: 3374, column: 13, scope: !10842)
!10859 = !DILocation(line: 3374, column: 17, scope: !10842)
!10860 = !DILocation(line: 354, column: 2, scope: !10256, inlinedAt: !10846)
!10861 = !DILocation(line: 354, column: 2, scope: !10259, inlinedAt: !10846)
!10862 = !DILocation(line: 3376, column: 23, scope: !10842)
!10863 = !DILocation(line: 3376, column: 11, scope: !10842)
!10864 = !DILocation(line: 3376, column: 9, scope: !10842)
!10865 = !DILocation(line: 3377, column: 6, scope: !10866)
!10866 = distinct !DILexicalBlock(scope: !10842, file: !3, line: 3377, column: 6)
!10867 = !DILocation(line: 3377, column: 13, scope: !10866)
!10868 = !DILocation(line: 3377, column: 18, scope: !10866)
!10869 = !DILocation(line: 3377, column: 21, scope: !10866)
!10870 = !DILocation(line: 3377, column: 28, scope: !10866)
!10871 = !DILocation(line: 3377, column: 6, scope: !10842)
!10872 = !DILocation(line: 3378, column: 3, scope: !10866)
!10873 = !DILocation(line: 3380, column: 10, scope: !10842)
!10874 = !DILocation(line: 3381, column: 12, scope: !10842)
!10875 = !DILocation(line: 3381, column: 16, scope: !10842)
!10876 = !DILocation(line: 3381, column: 9, scope: !10842)
!10877 = !DILocation(line: 3382, column: 6, scope: !10878)
!10878 = distinct !DILexicalBlock(scope: !10842, file: !3, line: 3382, column: 6)
!10879 = !DILocation(line: 3382, column: 13, scope: !10878)
!10880 = !DILocation(line: 3382, column: 6, scope: !10842)
!10881 = !DILocation(line: 3383, column: 3, scope: !10882)
!10882 = distinct !DILexicalBlock(scope: !10878, file: !3, line: 3382, column: 27)
!10883 = !DILocation(line: 3383, column: 7, scope: !10882)
!10884 = !DILocation(line: 3383, column: 17, scope: !10882)
!10885 = !DILocation(line: 3384, column: 21, scope: !10882)
!10886 = !DILocation(line: 3384, column: 25, scope: !10882)
!10887 = !DILocation(line: 3384, column: 3, scope: !10882)
!10888 = !DILocation(line: 3385, column: 2, scope: !10882)
!10889 = !DILocation(line: 3387, column: 6, scope: !10890)
!10890 = distinct !DILexicalBlock(scope: !10842, file: !3, line: 3387, column: 6)
!10891 = !DILocation(line: 3387, column: 13, scope: !10890)
!10892 = !DILocation(line: 3387, column: 6, scope: !10842)
!10893 = !DILocalVariable(name: "skge", scope: !10894, file: !3, line: 3388, type: !9172)
!10894 = distinct !DILexicalBlock(scope: !10890, file: !3, line: 3387, column: 35)
!10895 = !DILocation(line: 3388, column: 21, scope: !10894)
!10896 = !DILocation(line: 3388, column: 40, scope: !10894)
!10897 = !DILocation(line: 3388, column: 44, scope: !10894)
!10898 = !DILocation(line: 3388, column: 28, scope: !10894)
!10899 = !DILocation(line: 3389, column: 3, scope: !10894)
!10900 = !DILocation(line: 3389, column: 7, scope: !10894)
!10901 = !DILocation(line: 3389, column: 17, scope: !10894)
!10902 = !DILocation(line: 3390, column: 18, scope: !10894)
!10903 = !DILocation(line: 3390, column: 24, scope: !10894)
!10904 = !DILocation(line: 3390, column: 3, scope: !10894)
!10905 = !DILocation(line: 3391, column: 2, scope: !10894)
!10906 = !DILocation(line: 3393, column: 6, scope: !10907)
!10907 = distinct !DILexicalBlock(scope: !10842, file: !3, line: 3393, column: 6)
!10908 = !DILocation(line: 3393, column: 13, scope: !10907)
!10909 = !DILocation(line: 3393, column: 6, scope: !10842)
!10910 = !DILocation(line: 3394, column: 16, scope: !10907)
!10911 = !DILocation(line: 3394, column: 3, scope: !10907)
!10912 = !DILocation(line: 3396, column: 6, scope: !10913)
!10913 = distinct !DILexicalBlock(scope: !10842, file: !3, line: 3396, column: 6)
!10914 = !DILocation(line: 3396, column: 13, scope: !10913)
!10915 = !DILocation(line: 3396, column: 6, scope: !10842)
!10916 = !DILocation(line: 3397, column: 5, scope: !10917)
!10917 = distinct !DILexicalBlock(scope: !10913, file: !3, line: 3396, column: 29)
!10918 = !DILocation(line: 3397, column: 9, scope: !10917)
!10919 = !DILocation(line: 3397, column: 17, scope: !10917)
!10920 = !DILocation(line: 3397, column: 23, scope: !10917)
!10921 = !DILocation(line: 3397, column: 3, scope: !10917)
!10922 = !DILocation(line: 3398, column: 16, scope: !10917)
!10923 = !DILocation(line: 3398, column: 3, scope: !10917)
!10924 = !DILocation(line: 3399, column: 2, scope: !10917)
!10925 = !DILocation(line: 3402, column: 6, scope: !10926)
!10926 = distinct !DILexicalBlock(scope: !10842, file: !3, line: 3402, column: 6)
!10927 = !DILocation(line: 3402, column: 13, scope: !10926)
!10928 = !DILocation(line: 3402, column: 6, scope: !10842)
!10929 = !DILocation(line: 3403, column: 17, scope: !10926)
!10930 = !DILocation(line: 3403, column: 3, scope: !10926)
!10931 = !DILocation(line: 3405, column: 6, scope: !10932)
!10932 = distinct !DILexicalBlock(scope: !10842, file: !3, line: 3405, column: 6)
!10933 = !DILocation(line: 3405, column: 10, scope: !10932)
!10934 = !DILocation(line: 3405, column: 6, scope: !10842)
!10935 = !DILocalVariable(name: "skge", scope: !10936, file: !3, line: 3406, type: !9172)
!10936 = distinct !DILexicalBlock(scope: !10932, file: !3, line: 3405, column: 18)
!10937 = !DILocation(line: 3406, column: 21, scope: !10936)
!10938 = !DILocation(line: 3406, column: 40, scope: !10936)
!10939 = !DILocation(line: 3406, column: 44, scope: !10936)
!10940 = !DILocation(line: 3406, column: 28, scope: !10936)
!10941 = !DILocation(line: 3408, column: 7, scope: !10942)
!10942 = distinct !DILexicalBlock(scope: !10936, file: !3, line: 3408, column: 7)
!10943 = !DILocation(line: 3408, column: 14, scope: !10942)
!10944 = !DILocation(line: 3408, column: 7, scope: !10936)
!10945 = !DILocation(line: 3409, column: 4, scope: !10946)
!10946 = distinct !DILexicalBlock(scope: !10942, file: !3, line: 3408, column: 36)
!10947 = !DILocation(line: 3409, column: 8, scope: !10946)
!10948 = !DILocation(line: 3409, column: 18, scope: !10946)
!10949 = !DILocation(line: 3410, column: 19, scope: !10946)
!10950 = !DILocation(line: 3410, column: 25, scope: !10946)
!10951 = !DILocation(line: 3410, column: 4, scope: !10946)
!10952 = !DILocation(line: 3411, column: 3, scope: !10946)
!10953 = !DILocation(line: 3413, column: 7, scope: !10954)
!10954 = distinct !DILexicalBlock(scope: !10936, file: !3, line: 3413, column: 7)
!10955 = !DILocation(line: 3413, column: 14, scope: !10954)
!10956 = !DILocation(line: 3413, column: 7, scope: !10936)
!10957 = !DILocation(line: 3414, column: 6, scope: !10958)
!10958 = distinct !DILexicalBlock(scope: !10954, file: !3, line: 3413, column: 30)
!10959 = !DILocation(line: 3414, column: 10, scope: !10958)
!10960 = !DILocation(line: 3414, column: 18, scope: !10958)
!10961 = !DILocation(line: 3414, column: 24, scope: !10958)
!10962 = !DILocation(line: 3414, column: 4, scope: !10958)
!10963 = !DILocation(line: 3415, column: 17, scope: !10958)
!10964 = !DILocation(line: 3415, column: 4, scope: !10958)
!10965 = !DILocation(line: 3416, column: 3, scope: !10958)
!10966 = !DILocation(line: 3418, column: 7, scope: !10967)
!10967 = distinct !DILexicalBlock(scope: !10936, file: !3, line: 3418, column: 7)
!10968 = !DILocation(line: 3418, column: 14, scope: !10967)
!10969 = !DILocation(line: 3418, column: 7, scope: !10936)
!10970 = !DILocation(line: 3419, column: 17, scope: !10967)
!10971 = !DILocation(line: 3419, column: 4, scope: !10967)
!10972 = !DILocation(line: 3421, column: 7, scope: !10973)
!10973 = distinct !DILexicalBlock(scope: !10936, file: !3, line: 3421, column: 7)
!10974 = !DILocation(line: 3421, column: 14, scope: !10973)
!10975 = !DILocation(line: 3421, column: 7, scope: !10936)
!10976 = !DILocation(line: 3422, column: 18, scope: !10973)
!10977 = !DILocation(line: 3422, column: 4, scope: !10973)
!10978 = !DILocation(line: 3423, column: 2, scope: !10936)
!10979 = !DILocation(line: 3425, column: 6, scope: !10980)
!10980 = distinct !DILexicalBlock(scope: !10842, file: !3, line: 3425, column: 6)
!10981 = !DILocation(line: 3425, column: 13, scope: !10980)
!10982 = !DILocation(line: 3425, column: 6, scope: !10842)
!10983 = !DILocation(line: 3426, column: 18, scope: !10980)
!10984 = !DILocation(line: 3426, column: 3, scope: !10980)
!10985 = !DILocation(line: 3425, column: 15, scope: !10980)
!10986 = !DILabel(scope: !10842, name: "out", file: !3, line: 3427)
!10987 = !DILocation(line: 3427, column: 1, scope: !10842)
!10988 = !DILocation(line: 3428, column: 15, scope: !10842)
!10989 = !DILocation(line: 3428, column: 28, scope: !10842)
!10990 = !DILocation(line: 3428, column: 32, scope: !10842)
!10991 = !DILocation(line: 3428, column: 2, scope: !10842)
!10992 = !DILocation(line: 3429, column: 14, scope: !10842)
!10993 = !DILocation(line: 3429, column: 2, scope: !10842)
!10994 = !DILocation(line: 3430, column: 15, scope: !10842)
!10995 = !DILocation(line: 3430, column: 19, scope: !10842)
!10996 = !DILocation(line: 394, column: 2, scope: !10276, inlinedAt: !10844)
!10997 = !DILocation(line: 394, column: 2, scope: !10279, inlinedAt: !10844)
!10998 = !DILocation(line: 3432, column: 9, scope: !10842)
!10999 = !DILocation(line: 3432, column: 2, scope: !10842)
!11000 = distinct !DISubprogram(name: "pci_set_drvdata", scope: !8801, file: !8801, line: 1870, type: !11001, scopeLine: 1871, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!11001 = !DISubroutineType(types: !11002)
!11002 = !{null, !8799, !591}
!11003 = !DILocalVariable(name: "pdev", arg: 1, scope: !11000, file: !8801, line: 1870, type: !8799)
!11004 = !DILocation(line: 1870, column: 52, scope: !11000)
!11005 = !DILocalVariable(name: "data", arg: 2, scope: !11000, file: !8801, line: 1870, type: !591)
!11006 = !DILocation(line: 1870, column: 64, scope: !11000)
!11007 = !DILocation(line: 1872, column: 19, scope: !11000)
!11008 = !DILocation(line: 1872, column: 25, scope: !11000)
!11009 = !DILocation(line: 1872, column: 30, scope: !11000)
!11010 = !DILocation(line: 1872, column: 2, scope: !11000)
!11011 = !DILocation(line: 1873, column: 1, scope: !11000)
!11012 = distinct !DISubprogram(name: "skge_write16", scope: !7053, file: !7053, line: 2496, type: !11013, scopeLine: 2497, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!11013 = !DISubroutineType(types: !11014)
!11014 = !{null, !9407, !32, !581}
!11015 = !DILocalVariable(name: "hw", arg: 1, scope: !11012, file: !7053, line: 2496, type: !9407)
!11016 = !DILocation(line: 2496, column: 55, scope: !11012)
!11017 = !DILocalVariable(name: "reg", arg: 2, scope: !11012, file: !7053, line: 2496, type: !32)
!11018 = !DILocation(line: 2496, column: 63, scope: !11012)
!11019 = !DILocalVariable(name: "val", arg: 3, scope: !11012, file: !7053, line: 2496, type: !581)
!11020 = !DILocation(line: 2496, column: 72, scope: !11012)
!11021 = !DILocation(line: 2498, column: 9, scope: !11012)
!11022 = !DILocation(line: 2498, column: 14, scope: !11012)
!11023 = !DILocation(line: 2498, column: 18, scope: !11012)
!11024 = !DILocation(line: 2498, column: 25, scope: !11012)
!11025 = !DILocation(line: 2498, column: 23, scope: !11012)
!11026 = !DILocation(line: 2498, column: 2, scope: !11012)
!11027 = !DILocation(line: 2499, column: 1, scope: !11012)
!11028 = distinct !DISubprogram(name: "get_order", scope: !11029, file: !11029, line: 29, type: !11030, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!11029 = !DIFile(filename: "./include/asm-generic/getorder.h", directory: "/home/lizy2001/genbc/linux")
!11030 = !DISubroutineType(types: !11031)
!11031 = !{!32, !312}
!11032 = !DILocalVariable(name: "x", arg: 1, scope: !11033, file: !11034, line: 366, type: !333)
!11033 = distinct !DISubprogram(name: "fls64", scope: !11034, file: !11034, line: 366, type: !11035, scopeLine: 367, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!11034 = !DIFile(filename: "./arch/x86/include/asm/bitops.h", directory: "/home/lizy2001/genbc/linux")
!11035 = !DISubroutineType(types: !11036)
!11036 = !{!32, !333}
!11037 = !DILocation(line: 366, column: 40, scope: !11033, inlinedAt: !11038)
!11038 = distinct !DILocation(line: 46, column: 9, scope: !11028)
!11039 = !DILocalVariable(name: "bitpos", scope: !11033, file: !11034, line: 368, type: !32)
!11040 = !DILocation(line: 368, column: 6, scope: !11033, inlinedAt: !11038)
!11041 = !DILocalVariable(name: "size", arg: 1, scope: !11028, file: !11029, line: 29, type: !312)
!11042 = !DILocation(line: 29, column: 63, scope: !11028)
!11043 = !DILocation(line: 31, column: 27, scope: !11044)
!11044 = distinct !DILexicalBlock(scope: !11028, file: !11029, line: 31, column: 6)
!11045 = !DILocation(line: 31, column: 6, scope: !11044)
!11046 = !DILocation(line: 31, column: 6, scope: !11028)
!11047 = !DILocation(line: 32, column: 8, scope: !11048)
!11048 = distinct !DILexicalBlock(scope: !11049, file: !11029, line: 32, column: 7)
!11049 = distinct !DILexicalBlock(scope: !11044, file: !11029, line: 31, column: 34)
!11050 = !DILocation(line: 32, column: 7, scope: !11049)
!11051 = !DILocation(line: 33, column: 4, scope: !11048)
!11052 = !DILocation(line: 35, column: 7, scope: !11053)
!11053 = distinct !DILexicalBlock(scope: !11049, file: !11029, line: 35, column: 7)
!11054 = !DILocation(line: 35, column: 12, scope: !11053)
!11055 = !DILocation(line: 35, column: 7, scope: !11049)
!11056 = !DILocation(line: 36, column: 4, scope: !11053)
!11057 = !DILocation(line: 38, column: 10, scope: !11049)
!11058 = !DILocation(line: 38, column: 28, scope: !11049)
!11059 = !DILocation(line: 38, column: 41, scope: !11049)
!11060 = !DILocation(line: 38, column: 3, scope: !11049)
!11061 = !DILocation(line: 41, column: 6, scope: !11028)
!11062 = !DILocation(line: 42, column: 7, scope: !11028)
!11063 = !DILocation(line: 46, column: 15, scope: !11028)
!11064 = !DILocation(line: 374, column: 2, scope: !11033, inlinedAt: !11038)
!11065 = !DILocation(line: 376, column: 14, scope: !11033, inlinedAt: !11038)
!11066 = !{i32 411697}
!11067 = !DILocation(line: 377, column: 9, scope: !11033, inlinedAt: !11038)
!11068 = !DILocation(line: 377, column: 16, scope: !11033, inlinedAt: !11038)
!11069 = !DILocation(line: 46, column: 2, scope: !11028)
!11070 = !DILocation(line: 48, column: 1, scope: !11028)
!11071 = distinct !DISubprogram(name: "__ilog2_u64", scope: !11072, file: !11072, line: 30, type: !11073, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!11072 = !DIFile(filename: "./include/linux/log2.h", directory: "/home/lizy2001/genbc/linux")
!11073 = !DISubroutineType(types: !11074)
!11074 = !{!32, !331}
!11075 = !DILocation(line: 366, column: 40, scope: !11033, inlinedAt: !11076)
!11076 = distinct !DILocation(line: 32, column: 9, scope: !11071)
!11077 = !DILocation(line: 368, column: 6, scope: !11033, inlinedAt: !11076)
!11078 = !DILocalVariable(name: "n", arg: 1, scope: !11071, file: !11072, line: 30, type: !331)
!11079 = !DILocation(line: 30, column: 21, scope: !11071)
!11080 = !DILocation(line: 32, column: 15, scope: !11071)
!11081 = !DILocation(line: 374, column: 2, scope: !11033, inlinedAt: !11076)
!11082 = !DILocation(line: 376, column: 14, scope: !11033, inlinedAt: !11076)
!11083 = !DILocation(line: 377, column: 9, scope: !11033, inlinedAt: !11076)
!11084 = !DILocation(line: 377, column: 16, scope: !11033, inlinedAt: !11076)
!11085 = !DILocation(line: 32, column: 18, scope: !11071)
!11086 = !DILocation(line: 32, column: 2, scope: !11071)
!11087 = distinct !DISubprogram(name: "kasan_kmalloc", scope: !11088, file: !11088, line: 137, type: !11089, scopeLine: 139, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!11088 = !DIFile(filename: "./include/linux/kasan.h", directory: "/home/lizy2001/genbc/linux")
!11089 = !DISubroutineType(types: !11090)
!11090 = !{!591, !2051, !3257, !1039, !1742}
!11091 = !DILocalVariable(name: "s", arg: 1, scope: !11087, file: !11088, line: 137, type: !2051)
!11092 = !DILocation(line: 137, column: 54, scope: !11087)
!11093 = !DILocalVariable(name: "object", arg: 2, scope: !11087, file: !11088, line: 137, type: !3257)
!11094 = !DILocation(line: 137, column: 69, scope: !11087)
!11095 = !DILocalVariable(name: "size", arg: 3, scope: !11087, file: !11088, line: 138, type: !1039)
!11096 = !DILocation(line: 138, column: 12, scope: !11087)
!11097 = !DILocalVariable(name: "flags", arg: 4, scope: !11087, file: !11088, line: 138, type: !1742)
!11098 = !DILocation(line: 138, column: 24, scope: !11087)
!11099 = !DILocation(line: 140, column: 17, scope: !11087)
!11100 = !DILocation(line: 140, column: 2, scope: !11087)
!11101 = distinct !DISubprogram(name: "dev_name", scope: !6540, file: !6540, line: 609, type: !11102, scopeLine: 610, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!11102 = !DISubroutineType(types: !11103)
!11103 = !{!292, !6891}
!11104 = !DILocalVariable(name: "dev", arg: 1, scope: !11101, file: !6540, line: 609, type: !6891)
!11105 = !DILocation(line: 609, column: 57, scope: !11101)
!11106 = !DILocation(line: 612, column: 6, scope: !11107)
!11107 = distinct !DILexicalBlock(scope: !11101, file: !6540, line: 612, column: 6)
!11108 = !DILocation(line: 612, column: 11, scope: !11107)
!11109 = !DILocation(line: 612, column: 6, scope: !11101)
!11110 = !DILocation(line: 613, column: 10, scope: !11107)
!11111 = !DILocation(line: 613, column: 15, scope: !11107)
!11112 = !DILocation(line: 613, column: 3, scope: !11107)
!11113 = !DILocation(line: 615, column: 23, scope: !11101)
!11114 = !DILocation(line: 615, column: 28, scope: !11101)
!11115 = !DILocation(line: 615, column: 9, scope: !11101)
!11116 = !DILocation(line: 615, column: 2, scope: !11101)
!11117 = !DILocation(line: 616, column: 1, scope: !11101)
!11118 = distinct !DISubprogram(name: "kobject_name", scope: !6114, file: !6114, line: 88, type: !11119, scopeLine: 89, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!11119 = !DISubroutineType(types: !11120)
!11120 = !{!292, !11121}
!11121 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11122, size: 64)
!11122 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6119)
!11123 = !DILocalVariable(name: "kobj", arg: 1, scope: !11118, file: !6114, line: 88, type: !11121)
!11124 = !DILocation(line: 88, column: 62, scope: !11118)
!11125 = !DILocation(line: 90, column: 9, scope: !11118)
!11126 = !DILocation(line: 90, column: 15, scope: !11118)
!11127 = !DILocation(line: 90, column: 2, scope: !11118)
!11128 = distinct !DISubprogram(name: "netif_running", scope: !31, file: !31, line: 3556, type: !11129, scopeLine: 3557, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!11129 = !DISubroutineType(types: !11130)
!11130 = !{!771, !773}
!11131 = !DILocalVariable(name: "dev", arg: 1, scope: !11128, file: !31, line: 3556, type: !773)
!11132 = !DILocation(line: 3556, column: 59, scope: !11128)
!11133 = !DILocation(line: 3558, column: 39, scope: !11128)
!11134 = !DILocation(line: 3558, column: 44, scope: !11128)
!11135 = !DILocation(line: 3558, column: 9, scope: !11128)
!11136 = !DILocation(line: 3558, column: 2, scope: !11128)
!11137 = distinct !DISubprogram(name: "netdev_priv", scope: !31, file: !31, line: 2322, type: !11138, scopeLine: 2323, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!11138 = !DISubroutineType(types: !11139)
!11139 = !{!591, !773}
!11140 = !DILocalVariable(name: "dev", arg: 1, scope: !11137, file: !31, line: 2322, type: !773)
!11141 = !DILocation(line: 2322, column: 58, scope: !11137)
!11142 = !DILocation(line: 2324, column: 17, scope: !11137)
!11143 = !DILocation(line: 2324, column: 9, scope: !11137)
!11144 = !DILocation(line: 2324, column: 21, scope: !11137)
!11145 = !DILocation(line: 2324, column: 2, scope: !11137)
!11146 = distinct !DISubprogram(name: "is_genesis", scope: !3, file: !3, line: 114, type: !11147, scopeLine: 115, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!11147 = !DISubroutineType(types: !11148)
!11148 = !{!771, !9407}
!11149 = !DILocalVariable(name: "hw", arg: 1, scope: !11146, file: !3, line: 114, type: !9407)
!11150 = !DILocation(line: 114, column: 53, scope: !11146)
!11151 = !DILocation(line: 119, column: 2, scope: !11146)
!11152 = distinct !DISubprogram(name: "yukon_phy_intr", scope: !3, file: !3, line: 2338, type: !9434, scopeLine: 2339, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!11153 = !DILocalVariable(name: "skge", arg: 1, scope: !11152, file: !3, line: 2338, type: !9172)
!11154 = !DILocation(line: 2338, column: 46, scope: !11152)
!11155 = !DILocalVariable(name: "hw", scope: !11152, file: !3, line: 2340, type: !8794)
!11156 = !DILocation(line: 2340, column: 18, scope: !11152)
!11157 = !DILocation(line: 2340, column: 23, scope: !11152)
!11158 = !DILocation(line: 2340, column: 29, scope: !11152)
!11159 = !DILocalVariable(name: "port", scope: !11152, file: !3, line: 2341, type: !32)
!11160 = !DILocation(line: 2341, column: 6, scope: !11152)
!11161 = !DILocation(line: 2341, column: 13, scope: !11152)
!11162 = !DILocation(line: 2341, column: 19, scope: !11152)
!11163 = !DILocalVariable(name: "reason", scope: !11152, file: !3, line: 2342, type: !292)
!11164 = !DILocation(line: 2342, column: 14, scope: !11152)
!11165 = !DILocalVariable(name: "istatus", scope: !11152, file: !3, line: 2343, type: !581)
!11166 = !DILocation(line: 2343, column: 6, scope: !11152)
!11167 = !DILocalVariable(name: "phystat", scope: !11152, file: !3, line: 2343, type: !581)
!11168 = !DILocation(line: 2343, column: 15, scope: !11152)
!11169 = !DILocation(line: 2345, column: 24, scope: !11152)
!11170 = !DILocation(line: 2345, column: 28, scope: !11152)
!11171 = !DILocation(line: 2345, column: 12, scope: !11152)
!11172 = !DILocation(line: 2345, column: 10, scope: !11152)
!11173 = !DILocation(line: 2346, column: 24, scope: !11152)
!11174 = !DILocation(line: 2346, column: 28, scope: !11152)
!11175 = !DILocation(line: 2346, column: 12, scope: !11152)
!11176 = !DILocation(line: 2346, column: 10, scope: !11152)
!11177 = !DILocation(line: 2348, column: 2, scope: !11152)
!11178 = !DILocation(line: 2348, column: 2, scope: !11179)
!11179 = distinct !DILexicalBlock(scope: !11180, file: !3, line: 2348, column: 2)
!11180 = distinct !DILexicalBlock(scope: !11152, file: !3, line: 2348, column: 2)
!11181 = !DILocation(line: 2348, column: 2, scope: !11180)
!11182 = !DILocation(line: 2351, column: 6, scope: !11183)
!11183 = distinct !DILexicalBlock(scope: !11152, file: !3, line: 2351, column: 6)
!11184 = !DILocation(line: 2351, column: 14, scope: !11183)
!11185 = !DILocation(line: 2351, column: 6, scope: !11152)
!11186 = !DILocation(line: 2352, column: 19, scope: !11187)
!11187 = distinct !DILexicalBlock(scope: !11188, file: !3, line: 2352, column: 7)
!11188 = distinct !DILexicalBlock(scope: !11183, file: !3, line: 2351, column: 35)
!11189 = !DILocation(line: 2352, column: 23, scope: !11187)
!11190 = !DILocation(line: 2352, column: 7, scope: !11187)
!11191 = !DILocation(line: 2353, column: 7, scope: !11187)
!11192 = !DILocation(line: 2352, column: 7, scope: !11188)
!11193 = !DILocation(line: 2354, column: 11, scope: !11194)
!11194 = distinct !DILexicalBlock(scope: !11187, file: !3, line: 2353, column: 22)
!11195 = !DILocation(line: 2355, column: 4, scope: !11194)
!11196 = !DILocation(line: 2358, column: 19, scope: !11197)
!11197 = distinct !DILexicalBlock(scope: !11188, file: !3, line: 2358, column: 7)
!11198 = !DILocation(line: 2358, column: 23, scope: !11197)
!11199 = !DILocation(line: 2358, column: 7, scope: !11197)
!11200 = !DILocation(line: 2358, column: 50, scope: !11197)
!11201 = !DILocation(line: 2358, column: 7, scope: !11188)
!11202 = !DILocation(line: 2359, column: 11, scope: !11203)
!11203 = distinct !DILexicalBlock(scope: !11197, file: !3, line: 2358, column: 69)
!11204 = !DILocation(line: 2360, column: 4, scope: !11203)
!11205 = !DILocation(line: 2363, column: 9, scope: !11206)
!11206 = distinct !DILexicalBlock(scope: !11188, file: !3, line: 2363, column: 7)
!11207 = !DILocation(line: 2363, column: 17, scope: !11206)
!11208 = !DILocation(line: 2363, column: 7, scope: !11188)
!11209 = !DILocation(line: 2364, column: 11, scope: !11210)
!11210 = distinct !DILexicalBlock(scope: !11206, file: !3, line: 2363, column: 40)
!11211 = !DILocation(line: 2365, column: 4, scope: !11210)
!11212 = !DILocation(line: 2368, column: 19, scope: !11188)
!11213 = !DILocation(line: 2368, column: 27, scope: !11188)
!11214 = !DILocation(line: 2368, column: 18, scope: !11188)
!11215 = !DILocation(line: 2368, column: 3, scope: !11188)
!11216 = !DILocation(line: 2368, column: 9, scope: !11188)
!11217 = !DILocation(line: 2368, column: 16, scope: !11188)
!11218 = !DILocation(line: 2370, column: 29, scope: !11188)
!11219 = !DILocation(line: 2370, column: 33, scope: !11188)
!11220 = !DILocation(line: 2370, column: 17, scope: !11188)
!11221 = !DILocation(line: 2370, column: 3, scope: !11188)
!11222 = !DILocation(line: 2370, column: 9, scope: !11188)
!11223 = !DILocation(line: 2370, column: 15, scope: !11188)
!11224 = !DILocation(line: 2373, column: 11, scope: !11188)
!11225 = !DILocation(line: 2373, column: 19, scope: !11188)
!11226 = !DILocation(line: 2373, column: 3, scope: !11188)
!11227 = !DILocation(line: 2375, column: 4, scope: !11228)
!11228 = distinct !DILexicalBlock(scope: !11188, file: !3, line: 2373, column: 41)
!11229 = !DILocation(line: 2375, column: 10, scope: !11228)
!11230 = !DILocation(line: 2375, column: 22, scope: !11228)
!11231 = !DILocation(line: 2376, column: 4, scope: !11228)
!11232 = !DILocation(line: 2378, column: 4, scope: !11228)
!11233 = !DILocation(line: 2378, column: 10, scope: !11228)
!11234 = !DILocation(line: 2378, column: 22, scope: !11228)
!11235 = !DILocation(line: 2379, column: 4, scope: !11228)
!11236 = !DILocation(line: 2381, column: 4, scope: !11228)
!11237 = !DILocation(line: 2381, column: 10, scope: !11228)
!11238 = !DILocation(line: 2381, column: 22, scope: !11228)
!11239 = !DILocation(line: 2382, column: 4, scope: !11228)
!11240 = !DILocation(line: 2384, column: 4, scope: !11228)
!11241 = !DILocation(line: 2384, column: 10, scope: !11228)
!11242 = !DILocation(line: 2384, column: 22, scope: !11228)
!11243 = !DILocation(line: 2385, column: 3, scope: !11228)
!11244 = !DILocation(line: 2387, column: 7, scope: !11245)
!11245 = distinct !DILexicalBlock(scope: !11188, file: !3, line: 2387, column: 7)
!11246 = !DILocation(line: 2387, column: 13, scope: !11245)
!11247 = !DILocation(line: 2387, column: 25, scope: !11245)
!11248 = !DILocation(line: 2387, column: 43, scope: !11245)
!11249 = !DILocation(line: 2388, column: 8, scope: !11245)
!11250 = !DILocation(line: 2388, column: 14, scope: !11245)
!11251 = !DILocation(line: 2388, column: 20, scope: !11245)
!11252 = !DILocation(line: 2388, column: 33, scope: !11245)
!11253 = !DILocation(line: 2388, column: 36, scope: !11245)
!11254 = !DILocation(line: 2388, column: 42, scope: !11245)
!11255 = !DILocation(line: 2388, column: 49, scope: !11245)
!11256 = !DILocation(line: 2387, column: 7, scope: !11188)
!11257 = !DILocation(line: 2389, column: 16, scope: !11245)
!11258 = !DILocation(line: 2389, column: 20, scope: !11245)
!11259 = !DILocation(line: 2389, column: 4, scope: !11245)
!11260 = !DILocation(line: 2391, column: 16, scope: !11245)
!11261 = !DILocation(line: 2391, column: 20, scope: !11245)
!11262 = !DILocation(line: 2391, column: 4, scope: !11245)
!11263 = !DILocation(line: 2392, column: 17, scope: !11188)
!11264 = !DILocation(line: 2392, column: 3, scope: !11188)
!11265 = !DILocation(line: 2393, column: 3, scope: !11188)
!11266 = !DILocation(line: 2396, column: 6, scope: !11267)
!11267 = distinct !DILexicalBlock(scope: !11152, file: !3, line: 2396, column: 6)
!11268 = !DILocation(line: 2396, column: 14, scope: !11267)
!11269 = !DILocation(line: 2396, column: 6, scope: !11152)
!11270 = !DILocation(line: 2397, column: 29, scope: !11267)
!11271 = !DILocation(line: 2397, column: 33, scope: !11267)
!11272 = !DILocation(line: 2397, column: 17, scope: !11267)
!11273 = !DILocation(line: 2397, column: 3, scope: !11267)
!11274 = !DILocation(line: 2397, column: 9, scope: !11267)
!11275 = !DILocation(line: 2397, column: 15, scope: !11267)
!11276 = !DILocation(line: 2399, column: 6, scope: !11277)
!11277 = distinct !DILexicalBlock(scope: !11152, file: !3, line: 2399, column: 6)
!11278 = !DILocation(line: 2399, column: 14, scope: !11277)
!11279 = !DILocation(line: 2399, column: 6, scope: !11152)
!11280 = !DILocation(line: 2400, column: 19, scope: !11277)
!11281 = !DILocation(line: 2400, column: 27, scope: !11277)
!11282 = !DILocation(line: 2400, column: 18, scope: !11277)
!11283 = !DILocation(line: 2400, column: 3, scope: !11277)
!11284 = !DILocation(line: 2400, column: 9, scope: !11277)
!11285 = !DILocation(line: 2400, column: 16, scope: !11277)
!11286 = !DILocation(line: 2401, column: 6, scope: !11287)
!11287 = distinct !DILexicalBlock(scope: !11152, file: !3, line: 2401, column: 6)
!11288 = !DILocation(line: 2401, column: 14, scope: !11287)
!11289 = !DILocation(line: 2401, column: 6, scope: !11152)
!11290 = !DILocation(line: 2402, column: 7, scope: !11291)
!11291 = distinct !DILexicalBlock(scope: !11292, file: !3, line: 2402, column: 7)
!11292 = distinct !DILexicalBlock(scope: !11287, file: !3, line: 2401, column: 37)
!11293 = !DILocation(line: 2402, column: 15, scope: !11291)
!11294 = !DILocation(line: 2402, column: 7, scope: !11292)
!11295 = !DILocation(line: 2403, column: 18, scope: !11291)
!11296 = !DILocation(line: 2403, column: 4, scope: !11291)
!11297 = !DILocation(line: 2405, column: 20, scope: !11291)
!11298 = !DILocation(line: 2405, column: 4, scope: !11291)
!11299 = !DILocation(line: 2406, column: 2, scope: !11292)
!11300 = !DILocation(line: 2407, column: 2, scope: !11152)
!11301 = !DILabel(scope: !11152, name: "failed", file: !3, line: 2408)
!11302 = !DILocation(line: 2408, column: 2, scope: !11152)
!11303 = !DILocation(line: 2409, column: 2, scope: !11152)
!11304 = !DILocation(line: 2412, column: 1, scope: !11152)
!11305 = distinct !DISubprogram(name: "bcom_phy_intr", scope: !3, file: !3, line: 1864, type: !9434, scopeLine: 1865, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!11306 = !DILocalVariable(name: "skge", arg: 1, scope: !11305, file: !3, line: 1864, type: !9172)
!11307 = !DILocation(line: 1864, column: 52, scope: !11305)
!11308 = !DILocalVariable(name: "hw", scope: !11305, file: !3, line: 1866, type: !8794)
!11309 = !DILocation(line: 1866, column: 18, scope: !11305)
!11310 = !DILocation(line: 1866, column: 23, scope: !11305)
!11311 = !DILocation(line: 1866, column: 29, scope: !11305)
!11312 = !DILocalVariable(name: "port", scope: !11305, file: !3, line: 1867, type: !32)
!11313 = !DILocation(line: 1867, column: 6, scope: !11305)
!11314 = !DILocation(line: 1867, column: 13, scope: !11305)
!11315 = !DILocation(line: 1867, column: 19, scope: !11305)
!11316 = !DILocalVariable(name: "isrc", scope: !11305, file: !3, line: 1868, type: !581)
!11317 = !DILocation(line: 1868, column: 6, scope: !11305)
!11318 = !DILocation(line: 1870, column: 21, scope: !11305)
!11319 = !DILocation(line: 1870, column: 25, scope: !11305)
!11320 = !DILocation(line: 1870, column: 9, scope: !11305)
!11321 = !DILocation(line: 1870, column: 7, scope: !11305)
!11322 = !DILocation(line: 1871, column: 2, scope: !11305)
!11323 = !DILocation(line: 1871, column: 2, scope: !11324)
!11324 = distinct !DILexicalBlock(scope: !11325, file: !3, line: 1871, column: 2)
!11325 = distinct !DILexicalBlock(scope: !11305, file: !3, line: 1871, column: 2)
!11326 = !DILocation(line: 1871, column: 2, scope: !11325)
!11327 = !DILocation(line: 1874, column: 6, scope: !11328)
!11328 = distinct !DILexicalBlock(scope: !11305, file: !3, line: 1874, column: 6)
!11329 = !DILocation(line: 1874, column: 11, scope: !11328)
!11330 = !DILocation(line: 1874, column: 6, scope: !11305)
!11331 = !DILocation(line: 1875, column: 3, scope: !11328)
!11332 = !DILocation(line: 1881, column: 6, scope: !11333)
!11333 = distinct !DILexicalBlock(scope: !11305, file: !3, line: 1881, column: 6)
!11334 = !DILocation(line: 1881, column: 11, scope: !11333)
!11335 = !DILocation(line: 1881, column: 6, scope: !11305)
!11336 = !DILocalVariable(name: "ctrl", scope: !11337, file: !3, line: 1882, type: !581)
!11337 = distinct !DILexicalBlock(scope: !11333, file: !3, line: 1881, column: 31)
!11338 = !DILocation(line: 1882, column: 7, scope: !11337)
!11339 = !DILocation(line: 1882, column: 26, scope: !11337)
!11340 = !DILocation(line: 1882, column: 30, scope: !11337)
!11341 = !DILocation(line: 1882, column: 14, scope: !11337)
!11342 = !DILocation(line: 1883, column: 16, scope: !11337)
!11343 = !DILocation(line: 1883, column: 20, scope: !11337)
!11344 = !DILocation(line: 1884, column: 7, scope: !11337)
!11345 = !DILocation(line: 1884, column: 12, scope: !11337)
!11346 = !DILocation(line: 1883, column: 3, scope: !11337)
!11347 = !DILocation(line: 1885, column: 16, scope: !11337)
!11348 = !DILocation(line: 1885, column: 20, scope: !11337)
!11349 = !DILocation(line: 1886, column: 7, scope: !11337)
!11350 = !DILocation(line: 1886, column: 12, scope: !11337)
!11351 = !DILocation(line: 1885, column: 3, scope: !11337)
!11352 = !DILocation(line: 1887, column: 2, scope: !11337)
!11353 = !DILocation(line: 1889, column: 6, scope: !11354)
!11354 = distinct !DILexicalBlock(scope: !11305, file: !3, line: 1889, column: 6)
!11355 = !DILocation(line: 1889, column: 11, scope: !11354)
!11356 = !DILocation(line: 1889, column: 6, scope: !11305)
!11357 = !DILocation(line: 1890, column: 19, scope: !11354)
!11358 = !DILocation(line: 1890, column: 23, scope: !11354)
!11359 = !DILocation(line: 1890, column: 3, scope: !11354)
!11360 = !DILocation(line: 1892, column: 1, scope: !11305)
!11361 = distinct !DISubprogram(name: "skge_write32", scope: !7053, file: !7053, line: 2491, type: !11362, scopeLine: 2492, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!11362 = !DISubroutineType(types: !11363)
!11363 = !{null, !9407, !32, !987}
!11364 = !DILocalVariable(name: "hw", arg: 1, scope: !11361, file: !7053, line: 2491, type: !9407)
!11365 = !DILocation(line: 2491, column: 55, scope: !11361)
!11366 = !DILocalVariable(name: "reg", arg: 2, scope: !11361, file: !7053, line: 2491, type: !32)
!11367 = !DILocation(line: 2491, column: 63, scope: !11361)
!11368 = !DILocalVariable(name: "val", arg: 3, scope: !11361, file: !7053, line: 2491, type: !987)
!11369 = !DILocation(line: 2491, column: 72, scope: !11361)
!11370 = !DILocation(line: 2493, column: 9, scope: !11361)
!11371 = !DILocation(line: 2493, column: 14, scope: !11361)
!11372 = !DILocation(line: 2493, column: 18, scope: !11361)
!11373 = !DILocation(line: 2493, column: 25, scope: !11361)
!11374 = !DILocation(line: 2493, column: 23, scope: !11361)
!11375 = !DILocation(line: 2493, column: 2, scope: !11361)
!11376 = !DILocation(line: 2494, column: 1, scope: !11361)
!11377 = distinct !DISubprogram(name: "skge_read32", scope: !7053, file: !7053, line: 2476, type: !11378, scopeLine: 2477, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!11378 = !DISubroutineType(types: !11379)
!11379 = !{!987, !9407, !32}
!11380 = !DILocalVariable(name: "hw", arg: 1, scope: !11377, file: !7053, line: 2476, type: !9407)
!11381 = !DILocation(line: 2476, column: 53, scope: !11377)
!11382 = !DILocalVariable(name: "reg", arg: 2, scope: !11377, file: !7053, line: 2476, type: !32)
!11383 = !DILocation(line: 2476, column: 61, scope: !11377)
!11384 = !DILocation(line: 2478, column: 15, scope: !11377)
!11385 = !DILocation(line: 2478, column: 19, scope: !11377)
!11386 = !DILocation(line: 2478, column: 26, scope: !11377)
!11387 = !DILocation(line: 2478, column: 24, scope: !11377)
!11388 = !DILocation(line: 2478, column: 9, scope: !11377)
!11389 = !DILocation(line: 2478, column: 2, scope: !11377)
!11390 = distinct !DISubprogram(name: "test_bit", scope: !11391, file: !11391, line: 132, type: !11392, scopeLine: 133, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!11391 = !DIFile(filename: "./include/asm-generic/bitops/instrumented-non-atomic.h", directory: "/home/lizy2001/genbc/linux")
!11392 = !DISubroutineType(types: !11393)
!11393 = !{!771, !998, !11394}
!11394 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11395, size: 64)
!11395 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11396)
!11396 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !312)
!11397 = !DILocalVariable(name: "nr", arg: 1, scope: !11398, file: !11034, line: 210, type: !998)
!11398 = distinct !DISubprogram(name: "variable_test_bit", scope: !11034, file: !11034, line: 210, type: !11392, scopeLine: 211, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!11399 = !DILocation(line: 210, column: 52, scope: !11398, inlinedAt: !11400)
!11400 = distinct !DILocation(line: 135, column: 9, scope: !11390)
!11401 = !DILocalVariable(name: "addr", arg: 2, scope: !11398, file: !11034, line: 210, type: !11394)
!11402 = !DILocation(line: 210, column: 86, scope: !11398, inlinedAt: !11400)
!11403 = !DILocalVariable(name: "oldbit", scope: !11398, file: !11034, line: 212, type: !771)
!11404 = !DILocation(line: 212, column: 7, scope: !11398, inlinedAt: !11400)
!11405 = !DILocalVariable(name: "nr", arg: 1, scope: !11406, file: !11034, line: 204, type: !998)
!11406 = distinct !DISubprogram(name: "constant_test_bit", scope: !11034, file: !11034, line: 204, type: !11392, scopeLine: 205, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!11407 = !DILocation(line: 204, column: 52, scope: !11406, inlinedAt: !11408)
!11408 = distinct !DILocation(line: 135, column: 9, scope: !11390)
!11409 = !DILocalVariable(name: "addr", arg: 2, scope: !11406, file: !11034, line: 204, type: !11394)
!11410 = !DILocation(line: 204, column: 86, scope: !11406, inlinedAt: !11408)
!11411 = !DILocalVariable(name: "v", arg: 1, scope: !11412, file: !11413, line: 69, type: !11416)
!11412 = distinct !DISubprogram(name: "instrument_atomic_read", scope: !11413, file: !11413, line: 69, type: !11414, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!11413 = !DIFile(filename: "./include/linux/instrumented.h", directory: "/home/lizy2001/genbc/linux")
!11414 = !DISubroutineType(types: !11415)
!11415 = !{null, !11416, !1039}
!11416 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11417, size: 64)
!11417 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11418)
!11418 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: null)
!11419 = !DILocation(line: 69, column: 73, scope: !11412, inlinedAt: !11420)
!11420 = distinct !DILocation(line: 134, column: 2, scope: !11390)
!11421 = !DILocalVariable(name: "size", arg: 2, scope: !11412, file: !11413, line: 69, type: !1039)
!11422 = !DILocation(line: 69, column: 83, scope: !11412, inlinedAt: !11420)
!11423 = !DILocalVariable(name: "nr", arg: 1, scope: !11390, file: !11391, line: 132, type: !998)
!11424 = !DILocation(line: 132, column: 34, scope: !11390)
!11425 = !DILocalVariable(name: "addr", arg: 2, scope: !11390, file: !11391, line: 132, type: !11394)
!11426 = !DILocation(line: 132, column: 68, scope: !11390)
!11427 = !DILocation(line: 134, column: 25, scope: !11390)
!11428 = !DILocation(line: 134, column: 32, scope: !11390)
!11429 = !DILocation(line: 134, column: 30, scope: !11390)
!11430 = !DILocation(line: 71, column: 19, scope: !11412, inlinedAt: !11420)
!11431 = !DILocation(line: 71, column: 22, scope: !11412, inlinedAt: !11420)
!11432 = !DILocation(line: 71, column: 2, scope: !11412, inlinedAt: !11420)
!11433 = !DILocation(line: 72, column: 2, scope: !11412, inlinedAt: !11420)
!11434 = !DILocation(line: 135, column: 9, scope: !11390)
!11435 = !DILocation(line: 206, column: 19, scope: !11406, inlinedAt: !11408)
!11436 = !DILocation(line: 206, column: 22, scope: !11406, inlinedAt: !11408)
!11437 = !DILocation(line: 206, column: 15, scope: !11406, inlinedAt: !11408)
!11438 = !DILocation(line: 207, column: 4, scope: !11406, inlinedAt: !11408)
!11439 = !DILocation(line: 207, column: 9, scope: !11406, inlinedAt: !11408)
!11440 = !DILocation(line: 207, column: 12, scope: !11406, inlinedAt: !11408)
!11441 = !DILocation(line: 206, column: 44, scope: !11406, inlinedAt: !11408)
!11442 = !DILocation(line: 207, column: 37, scope: !11406, inlinedAt: !11408)
!11443 = !DILocation(line: 217, column: 33, scope: !11398, inlinedAt: !11400)
!11444 = !DILocation(line: 217, column: 46, scope: !11398, inlinedAt: !11400)
!11445 = !DILocation(line: 214, column: 2, scope: !11398, inlinedAt: !11400)
!11446 = !{i32 -2147031276, i32 -2147031216}
!11447 = !DILocation(line: 219, column: 9, scope: !11398, inlinedAt: !11400)
!11448 = !DILocation(line: 135, column: 2, scope: !11390)
!11449 = distinct !DISubprogram(name: "kasan_check_read", scope: !11450, file: !11450, line: 34, type: !11451, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!11450 = !DIFile(filename: "./include/linux/kasan-checks.h", directory: "/home/lizy2001/genbc/linux")
!11451 = !DISubroutineType(types: !11452)
!11452 = !{!771, !11416, !7}
!11453 = !DILocalVariable(name: "p", arg: 1, scope: !11449, file: !11450, line: 34, type: !11416)
!11454 = !DILocation(line: 34, column: 58, scope: !11449)
!11455 = !DILocalVariable(name: "size", arg: 2, scope: !11449, file: !11450, line: 34, type: !7)
!11456 = !DILocation(line: 34, column: 74, scope: !11449)
!11457 = !DILocation(line: 36, column: 2, scope: !11449)
!11458 = distinct !DISubprogram(name: "kcsan_check_access", scope: !11459, file: !11459, line: 178, type: !11460, scopeLine: 179, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!11459 = !DIFile(filename: "./include/linux/kcsan-checks.h", directory: "/home/lizy2001/genbc/linux")
!11460 = !DISubroutineType(types: !11461)
!11461 = !{null, !11416, !1039, !32}
!11462 = !DILocalVariable(name: "ptr", arg: 1, scope: !11458, file: !11459, line: 178, type: !11416)
!11463 = !DILocation(line: 178, column: 60, scope: !11458)
!11464 = !DILocalVariable(name: "size", arg: 2, scope: !11458, file: !11459, line: 178, type: !1039)
!11465 = !DILocation(line: 178, column: 72, scope: !11458)
!11466 = !DILocalVariable(name: "type", arg: 3, scope: !11458, file: !11459, line: 179, type: !32)
!11467 = !DILocation(line: 179, column: 15, scope: !11458)
!11468 = !DILocation(line: 179, column: 23, scope: !11458)
!11469 = distinct !DISubprogram(name: "gm_phy_read", scope: !3, file: !3, line: 1932, type: !11470, scopeLine: 1933, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!11470 = !DISubroutineType(types: !11471)
!11471 = !{!581, !8794, !32, !581}
!11472 = !DILocalVariable(name: "hw", arg: 1, scope: !11469, file: !3, line: 1932, type: !8794)
!11473 = !DILocation(line: 1932, column: 40, scope: !11469)
!11474 = !DILocalVariable(name: "port", arg: 2, scope: !11469, file: !3, line: 1932, type: !32)
!11475 = !DILocation(line: 1932, column: 48, scope: !11469)
!11476 = !DILocalVariable(name: "reg", arg: 3, scope: !11469, file: !3, line: 1932, type: !581)
!11477 = !DILocation(line: 1932, column: 58, scope: !11469)
!11478 = !DILocalVariable(name: "v", scope: !11469, file: !3, line: 1934, type: !581)
!11479 = !DILocation(line: 1934, column: 6, scope: !11469)
!11480 = !DILocation(line: 1935, column: 20, scope: !11481)
!11481 = distinct !DILexicalBlock(scope: !11469, file: !3, line: 1935, column: 6)
!11482 = !DILocation(line: 1935, column: 24, scope: !11481)
!11483 = !DILocation(line: 1935, column: 30, scope: !11481)
!11484 = !DILocation(line: 1935, column: 6, scope: !11481)
!11485 = !DILocation(line: 1935, column: 6, scope: !11469)
!11486 = !DILocation(line: 1936, column: 3, scope: !11481)
!11487 = !DILocation(line: 1937, column: 9, scope: !11469)
!11488 = !DILocation(line: 1937, column: 2, scope: !11469)
!11489 = distinct !DISubprogram(name: "yukon_speed", scope: !3, file: !3, line: 2283, type: !11490, scopeLine: 2284, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!11490 = !DISubroutineType(types: !11491)
!11491 = !{!581, !9407, !581}
!11492 = !DILocalVariable(name: "hw", arg: 1, scope: !11489, file: !3, line: 2283, type: !9407)
!11493 = !DILocation(line: 2283, column: 46, scope: !11489)
!11494 = !DILocalVariable(name: "aux", arg: 2, scope: !11489, file: !3, line: 2283, type: !581)
!11495 = !DILocation(line: 2283, column: 54, scope: !11489)
!11496 = !DILocation(line: 2285, column: 10, scope: !11489)
!11497 = !DILocation(line: 2285, column: 14, scope: !11489)
!11498 = !DILocation(line: 2285, column: 2, scope: !11489)
!11499 = !DILocation(line: 2287, column: 3, scope: !11500)
!11500 = distinct !DILexicalBlock(scope: !11489, file: !3, line: 2285, column: 36)
!11501 = !DILocation(line: 2289, column: 3, scope: !11500)
!11502 = !DILocation(line: 2291, column: 3, scope: !11500)
!11503 = !DILocation(line: 2293, column: 1, scope: !11489)
!11504 = distinct !DISubprogram(name: "skge_write8", scope: !7053, file: !7053, line: 2501, type: !11505, scopeLine: 2502, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!11505 = !DISubroutineType(types: !11506)
!11506 = !{null, !9407, !32, !794}
!11507 = !DILocalVariable(name: "hw", arg: 1, scope: !11504, file: !7053, line: 2501, type: !9407)
!11508 = !DILocation(line: 2501, column: 54, scope: !11504)
!11509 = !DILocalVariable(name: "reg", arg: 2, scope: !11504, file: !7053, line: 2501, type: !32)
!11510 = !DILocation(line: 2501, column: 62, scope: !11504)
!11511 = !DILocalVariable(name: "val", arg: 3, scope: !11504, file: !7053, line: 2501, type: !794)
!11512 = !DILocation(line: 2501, column: 70, scope: !11504)
!11513 = !DILocation(line: 2503, column: 9, scope: !11504)
!11514 = !DILocation(line: 2503, column: 14, scope: !11504)
!11515 = !DILocation(line: 2503, column: 18, scope: !11504)
!11516 = !DILocation(line: 2503, column: 25, scope: !11504)
!11517 = !DILocation(line: 2503, column: 23, scope: !11504)
!11518 = !DILocation(line: 2503, column: 2, scope: !11504)
!11519 = !DILocation(line: 2504, column: 1, scope: !11504)
!11520 = distinct !DISubprogram(name: "yukon_link_up", scope: !3, file: !3, line: 2295, type: !9434, scopeLine: 2296, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!11521 = !DILocalVariable(name: "skge", arg: 1, scope: !11520, file: !3, line: 2295, type: !9172)
!11522 = !DILocation(line: 2295, column: 45, scope: !11520)
!11523 = !DILocalVariable(name: "hw", scope: !11520, file: !3, line: 2297, type: !8794)
!11524 = !DILocation(line: 2297, column: 18, scope: !11520)
!11525 = !DILocation(line: 2297, column: 23, scope: !11520)
!11526 = !DILocation(line: 2297, column: 29, scope: !11520)
!11527 = !DILocalVariable(name: "port", scope: !11520, file: !3, line: 2298, type: !32)
!11528 = !DILocation(line: 2298, column: 6, scope: !11520)
!11529 = !DILocation(line: 2298, column: 13, scope: !11520)
!11530 = !DILocation(line: 2298, column: 19, scope: !11520)
!11531 = !DILocalVariable(name: "reg", scope: !11520, file: !3, line: 2299, type: !581)
!11532 = !DILocation(line: 2299, column: 6, scope: !11520)
!11533 = !DILocation(line: 2302, column: 14, scope: !11520)
!11534 = !DILocation(line: 2302, column: 18, scope: !11520)
!11535 = !DILocation(line: 2302, column: 2, scope: !11520)
!11536 = !DILocation(line: 2304, column: 19, scope: !11520)
!11537 = !DILocation(line: 2304, column: 23, scope: !11520)
!11538 = !DILocation(line: 2304, column: 8, scope: !11520)
!11539 = !DILocation(line: 2304, column: 6, scope: !11520)
!11540 = !DILocation(line: 2305, column: 6, scope: !11541)
!11541 = distinct !DILexicalBlock(scope: !11520, file: !3, line: 2305, column: 6)
!11542 = !DILocation(line: 2305, column: 12, scope: !11541)
!11543 = !DILocation(line: 2305, column: 19, scope: !11541)
!11544 = !DILocation(line: 2305, column: 34, scope: !11541)
!11545 = !DILocation(line: 2305, column: 37, scope: !11541)
!11546 = !DILocation(line: 2305, column: 43, scope: !11541)
!11547 = !DILocation(line: 2305, column: 51, scope: !11541)
!11548 = !DILocation(line: 2305, column: 6, scope: !11520)
!11549 = !DILocation(line: 2306, column: 7, scope: !11541)
!11550 = !DILocation(line: 2306, column: 3, scope: !11541)
!11551 = !DILocation(line: 2309, column: 6, scope: !11520)
!11552 = !DILocation(line: 2310, column: 14, scope: !11520)
!11553 = !DILocation(line: 2310, column: 18, scope: !11520)
!11554 = !DILocation(line: 2310, column: 36, scope: !11520)
!11555 = !DILocation(line: 2310, column: 2, scope: !11520)
!11556 = !DILocation(line: 2312, column: 15, scope: !11520)
!11557 = !DILocation(line: 2312, column: 19, scope: !11520)
!11558 = !DILocation(line: 2312, column: 2, scope: !11520)
!11559 = !DILocation(line: 2313, column: 15, scope: !11520)
!11560 = !DILocation(line: 2313, column: 2, scope: !11520)
!11561 = !DILocation(line: 2314, column: 1, scope: !11520)
!11562 = distinct !DISubprogram(name: "yukon_link_down", scope: !3, file: !3, line: 2316, type: !9434, scopeLine: 2317, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!11563 = !DILocalVariable(name: "skge", arg: 1, scope: !11562, file: !3, line: 2316, type: !9172)
!11564 = !DILocation(line: 2316, column: 47, scope: !11562)
!11565 = !DILocalVariable(name: "hw", scope: !11562, file: !3, line: 2318, type: !8794)
!11566 = !DILocation(line: 2318, column: 18, scope: !11562)
!11567 = !DILocation(line: 2318, column: 23, scope: !11562)
!11568 = !DILocation(line: 2318, column: 29, scope: !11562)
!11569 = !DILocalVariable(name: "port", scope: !11562, file: !3, line: 2319, type: !32)
!11570 = !DILocation(line: 2319, column: 6, scope: !11562)
!11571 = !DILocation(line: 2319, column: 13, scope: !11562)
!11572 = !DILocation(line: 2319, column: 19, scope: !11562)
!11573 = !DILocalVariable(name: "ctrl", scope: !11562, file: !3, line: 2320, type: !581)
!11574 = !DILocation(line: 2320, column: 6, scope: !11562)
!11575 = !DILocation(line: 2322, column: 20, scope: !11562)
!11576 = !DILocation(line: 2322, column: 24, scope: !11562)
!11577 = !DILocation(line: 2322, column: 9, scope: !11562)
!11578 = !DILocation(line: 2322, column: 7, scope: !11562)
!11579 = !DILocation(line: 2323, column: 7, scope: !11562)
!11580 = !DILocation(line: 2324, column: 14, scope: !11562)
!11581 = !DILocation(line: 2324, column: 18, scope: !11562)
!11582 = !DILocation(line: 2324, column: 36, scope: !11562)
!11583 = !DILocation(line: 2324, column: 2, scope: !11562)
!11584 = !DILocation(line: 2326, column: 6, scope: !11585)
!11585 = distinct !DILexicalBlock(scope: !11562, file: !3, line: 2326, column: 6)
!11586 = !DILocation(line: 2326, column: 12, scope: !11585)
!11587 = !DILocation(line: 2326, column: 24, scope: !11585)
!11588 = !DILocation(line: 2326, column: 6, scope: !11562)
!11589 = !DILocation(line: 2327, column: 22, scope: !11590)
!11590 = distinct !DILexicalBlock(scope: !11585, file: !3, line: 2326, column: 47)
!11591 = !DILocation(line: 2327, column: 26, scope: !11590)
!11592 = !DILocation(line: 2327, column: 10, scope: !11590)
!11593 = !DILocation(line: 2327, column: 8, scope: !11590)
!11594 = !DILocation(line: 2328, column: 8, scope: !11590)
!11595 = !DILocation(line: 2330, column: 16, scope: !11590)
!11596 = !DILocation(line: 2330, column: 20, scope: !11590)
!11597 = !DILocation(line: 2330, column: 45, scope: !11590)
!11598 = !DILocation(line: 2330, column: 3, scope: !11590)
!11599 = !DILocation(line: 2331, column: 2, scope: !11590)
!11600 = !DILocation(line: 2333, column: 17, scope: !11562)
!11601 = !DILocation(line: 2333, column: 2, scope: !11562)
!11602 = !DILocation(line: 2335, column: 13, scope: !11562)
!11603 = !DILocation(line: 2335, column: 17, scope: !11562)
!11604 = !DILocation(line: 2335, column: 2, scope: !11562)
!11605 = !DILocation(line: 2336, column: 1, scope: !11562)
!11606 = distinct !DISubprogram(name: "__gm_phy_read", scope: !3, file: !3, line: 1912, type: !11607, scopeLine: 1913, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!11607 = !DISubroutineType(types: !11608)
!11608 = !{!32, !8794, !32, !581, !11609}
!11609 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !581, size: 64)
!11610 = !DILocalVariable(name: "hw", arg: 1, scope: !11606, file: !3, line: 1912, type: !8794)
!11611 = !DILocation(line: 1912, column: 42, scope: !11606)
!11612 = !DILocalVariable(name: "port", arg: 2, scope: !11606, file: !3, line: 1912, type: !32)
!11613 = !DILocation(line: 1912, column: 50, scope: !11606)
!11614 = !DILocalVariable(name: "reg", arg: 3, scope: !11606, file: !3, line: 1912, type: !581)
!11615 = !DILocation(line: 1912, column: 60, scope: !11606)
!11616 = !DILocalVariable(name: "val", arg: 4, scope: !11606, file: !3, line: 1912, type: !11609)
!11617 = !DILocation(line: 1912, column: 70, scope: !11606)
!11618 = !DILocalVariable(name: "i", scope: !11606, file: !3, line: 1914, type: !32)
!11619 = !DILocation(line: 1914, column: 6, scope: !11606)
!11620 = !DILocation(line: 1916, column: 14, scope: !11606)
!11621 = !DILocation(line: 1916, column: 18, scope: !11606)
!11622 = !DILocation(line: 1917, column: 5, scope: !11606)
!11623 = !DILocation(line: 1918, column: 7, scope: !11606)
!11624 = !DILocation(line: 1918, column: 5, scope: !11606)
!11625 = !DILocation(line: 1918, column: 29, scope: !11606)
!11626 = !DILocation(line: 1916, column: 2, scope: !11606)
!11627 = !DILocation(line: 1920, column: 9, scope: !11628)
!11628 = distinct !DILexicalBlock(scope: !11606, file: !3, line: 1920, column: 2)
!11629 = !DILocation(line: 1920, column: 7, scope: !11628)
!11630 = !DILocation(line: 1920, column: 14, scope: !11631)
!11631 = distinct !DILexicalBlock(scope: !11628, file: !3, line: 1920, column: 2)
!11632 = !DILocation(line: 1920, column: 16, scope: !11631)
!11633 = !DILocation(line: 1920, column: 2, scope: !11628)
!11634 = !DILocation(line: 1921, column: 3, scope: !11635)
!11635 = distinct !DILexicalBlock(scope: !11636, file: !3, line: 1921, column: 3)
!11636 = distinct !DILexicalBlock(scope: !11637, file: !3, line: 1921, column: 3)
!11637 = distinct !DILexicalBlock(scope: !11638, file: !3, line: 1921, column: 3)
!11638 = distinct !DILexicalBlock(scope: !11639, file: !3, line: 1921, column: 3)
!11639 = distinct !DILexicalBlock(scope: !11631, file: !3, line: 1920, column: 36)
!11640 = !DILocation(line: 1922, column: 18, scope: !11641)
!11641 = distinct !DILexicalBlock(scope: !11639, file: !3, line: 1922, column: 7)
!11642 = !DILocation(line: 1922, column: 22, scope: !11641)
!11643 = !DILocation(line: 1922, column: 7, scope: !11641)
!11644 = !DILocation(line: 1922, column: 41, scope: !11641)
!11645 = !DILocation(line: 1922, column: 7, scope: !11639)
!11646 = !DILocation(line: 1923, column: 4, scope: !11641)
!11647 = !DILocation(line: 1924, column: 2, scope: !11639)
!11648 = !DILocation(line: 1920, column: 32, scope: !11631)
!11649 = !DILocation(line: 1920, column: 2, scope: !11631)
!11650 = distinct !{!11650, !11633, !11651}
!11651 = !DILocation(line: 1924, column: 2, scope: !11628)
!11652 = !DILocation(line: 1926, column: 2, scope: !11606)
!11653 = !DILabel(scope: !11606, name: "ready", file: !3, line: 1927)
!11654 = !DILocation(line: 1927, column: 2, scope: !11606)
!11655 = !DILocation(line: 1928, column: 20, scope: !11606)
!11656 = !DILocation(line: 1928, column: 24, scope: !11606)
!11657 = !DILocation(line: 1928, column: 9, scope: !11606)
!11658 = !DILocation(line: 1928, column: 3, scope: !11606)
!11659 = !DILocation(line: 1928, column: 7, scope: !11606)
!11660 = !DILocation(line: 1929, column: 2, scope: !11606)
!11661 = !DILocation(line: 1930, column: 1, scope: !11606)
!11662 = distinct !DISubprogram(name: "gma_write16", scope: !7053, file: !7053, line: 2566, type: !11663, scopeLine: 2567, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!11663 = !DISubroutineType(types: !11664)
!11664 = !{null, !9407, !32, !32, !581}
!11665 = !DILocalVariable(name: "hw", arg: 1, scope: !11662, file: !7053, line: 2566, type: !9407)
!11666 = !DILocation(line: 2566, column: 54, scope: !11662)
!11667 = !DILocalVariable(name: "port", arg: 2, scope: !11662, file: !7053, line: 2566, type: !32)
!11668 = !DILocation(line: 2566, column: 62, scope: !11662)
!11669 = !DILocalVariable(name: "r", arg: 3, scope: !11662, file: !7053, line: 2566, type: !32)
!11670 = !DILocation(line: 2566, column: 72, scope: !11662)
!11671 = !DILocalVariable(name: "v", arg: 4, scope: !11662, file: !7053, line: 2566, type: !581)
!11672 = !DILocation(line: 2566, column: 79, scope: !11662)
!11673 = !DILocation(line: 2568, column: 15, scope: !11662)
!11674 = !DILocation(line: 2568, column: 19, scope: !11662)
!11675 = !DILocation(line: 2568, column: 40, scope: !11662)
!11676 = !DILocation(line: 2568, column: 2, scope: !11662)
!11677 = !DILocation(line: 2569, column: 1, scope: !11662)
!11678 = distinct !DISubprogram(name: "gma_read16", scope: !7053, file: !7053, line: 2555, type: !11679, scopeLine: 2556, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!11679 = !DISubroutineType(types: !11680)
!11680 = !{!581, !9407, !32, !32}
!11681 = !DILocalVariable(name: "hw", arg: 1, scope: !11678, file: !7053, line: 2555, type: !9407)
!11682 = !DILocation(line: 2555, column: 52, scope: !11678)
!11683 = !DILocalVariable(name: "port", arg: 2, scope: !11678, file: !7053, line: 2555, type: !32)
!11684 = !DILocation(line: 2555, column: 60, scope: !11678)
!11685 = !DILocalVariable(name: "reg", arg: 3, scope: !11678, file: !7053, line: 2555, type: !32)
!11686 = !DILocation(line: 2555, column: 70, scope: !11678)
!11687 = !DILocation(line: 2557, column: 21, scope: !11678)
!11688 = !DILocation(line: 2557, column: 25, scope: !11678)
!11689 = !DILocation(line: 2557, column: 9, scope: !11678)
!11690 = !DILocation(line: 2557, column: 2, scope: !11678)
!11691 = distinct !DISubprogram(name: "skge_read16", scope: !7053, file: !7053, line: 2481, type: !11692, scopeLine: 2482, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!11692 = !DISubroutineType(types: !11693)
!11693 = !{!581, !9407, !32}
!11694 = !DILocalVariable(name: "hw", arg: 1, scope: !11691, file: !7053, line: 2481, type: !9407)
!11695 = !DILocation(line: 2481, column: 53, scope: !11691)
!11696 = !DILocalVariable(name: "reg", arg: 2, scope: !11691, file: !7053, line: 2481, type: !32)
!11697 = !DILocation(line: 2481, column: 61, scope: !11691)
!11698 = !DILocation(line: 2483, column: 15, scope: !11691)
!11699 = !DILocation(line: 2483, column: 19, scope: !11691)
!11700 = !DILocation(line: 2483, column: 26, scope: !11691)
!11701 = !DILocation(line: 2483, column: 24, scope: !11691)
!11702 = !DILocation(line: 2483, column: 9, scope: !11691)
!11703 = !DILocation(line: 2483, column: 2, scope: !11691)
!11704 = distinct !DISubprogram(name: "readw", scope: !11705, file: !11705, line: 58, type: !11706, scopeLine: 58, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!11705 = !DIFile(filename: "./arch/x86/include/asm/io.h", directory: "/home/lizy2001/genbc/linux")
!11706 = !DISubroutineType(types: !11707)
!11707 = !{!476, !11416}
!11708 = !DILocalVariable(name: "addr", arg: 1, scope: !11704, file: !11705, line: 58, type: !11416)
!11709 = !DILocation(line: 58, column: 1, scope: !11704)
!11710 = !DILocalVariable(name: "ret", scope: !11704, file: !11705, line: 58, type: !476)
!11711 = !{i32 -2141436743}
!11712 = distinct !DISubprogram(name: "writeb", scope: !11705, file: !11705, line: 65, type: !11713, scopeLine: 65, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!11713 = !DISubroutineType(types: !11714)
!11714 = !{null, !482, !11715}
!11715 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11418, size: 64)
!11716 = !DILocalVariable(name: "val", arg: 1, scope: !11712, file: !11705, line: 65, type: !482)
!11717 = !DILocation(line: 65, column: 1, scope: !11712)
!11718 = !DILocalVariable(name: "addr", arg: 2, scope: !11712, file: !11705, line: 65, type: !11715)
!11719 = !{i32 -2141434703}
!11720 = distinct !DISubprogram(name: "gm_phy_write", scope: !3, file: !3, line: 1894, type: !11721, scopeLine: 1895, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!11721 = !DISubroutineType(types: !11722)
!11722 = !{!32, !8794, !32, !581, !581}
!11723 = !DILocalVariable(name: "hw", arg: 1, scope: !11720, file: !3, line: 1894, type: !8794)
!11724 = !DILocation(line: 1894, column: 41, scope: !11720)
!11725 = !DILocalVariable(name: "port", arg: 2, scope: !11720, file: !3, line: 1894, type: !32)
!11726 = !DILocation(line: 1894, column: 49, scope: !11720)
!11727 = !DILocalVariable(name: "reg", arg: 3, scope: !11720, file: !3, line: 1894, type: !581)
!11728 = !DILocation(line: 1894, column: 59, scope: !11720)
!11729 = !DILocalVariable(name: "val", arg: 4, scope: !11720, file: !3, line: 1894, type: !581)
!11730 = !DILocation(line: 1894, column: 68, scope: !11720)
!11731 = !DILocalVariable(name: "i", scope: !11720, file: !3, line: 1896, type: !32)
!11732 = !DILocation(line: 1896, column: 6, scope: !11720)
!11733 = !DILocation(line: 1898, column: 14, scope: !11720)
!11734 = !DILocation(line: 1898, column: 18, scope: !11720)
!11735 = !DILocation(line: 1898, column: 37, scope: !11720)
!11736 = !DILocation(line: 1898, column: 2, scope: !11720)
!11737 = !DILocation(line: 1899, column: 14, scope: !11720)
!11738 = !DILocation(line: 1899, column: 18, scope: !11720)
!11739 = !DILocation(line: 1900, column: 5, scope: !11720)
!11740 = !DILocation(line: 1900, column: 38, scope: !11720)
!11741 = !DILocation(line: 1900, column: 36, scope: !11720)
!11742 = !DILocation(line: 1899, column: 2, scope: !11720)
!11743 = !DILocation(line: 1901, column: 9, scope: !11744)
!11744 = distinct !DILexicalBlock(scope: !11720, file: !3, line: 1901, column: 2)
!11745 = !DILocation(line: 1901, column: 7, scope: !11744)
!11746 = !DILocation(line: 1901, column: 14, scope: !11747)
!11747 = distinct !DILexicalBlock(scope: !11744, file: !3, line: 1901, column: 2)
!11748 = !DILocation(line: 1901, column: 16, scope: !11747)
!11749 = !DILocation(line: 1901, column: 2, scope: !11744)
!11750 = !DILocation(line: 1902, column: 3, scope: !11751)
!11751 = distinct !DILexicalBlock(scope: !11752, file: !3, line: 1902, column: 3)
!11752 = distinct !DILexicalBlock(scope: !11753, file: !3, line: 1902, column: 3)
!11753 = distinct !DILexicalBlock(scope: !11754, file: !3, line: 1902, column: 3)
!11754 = distinct !DILexicalBlock(scope: !11755, file: !3, line: 1902, column: 3)
!11755 = distinct !DILexicalBlock(scope: !11747, file: !3, line: 1901, column: 36)
!11756 = !DILocation(line: 1904, column: 20, scope: !11757)
!11757 = distinct !DILexicalBlock(scope: !11755, file: !3, line: 1904, column: 7)
!11758 = !DILocation(line: 1904, column: 24, scope: !11757)
!11759 = !DILocation(line: 1904, column: 9, scope: !11757)
!11760 = !DILocation(line: 1904, column: 43, scope: !11757)
!11761 = !DILocation(line: 1904, column: 7, scope: !11755)
!11762 = !DILocation(line: 1905, column: 4, scope: !11757)
!11763 = !DILocation(line: 1906, column: 2, scope: !11755)
!11764 = !DILocation(line: 1901, column: 32, scope: !11747)
!11765 = !DILocation(line: 1901, column: 2, scope: !11747)
!11766 = distinct !{!11766, !11749, !11767}
!11767 = !DILocation(line: 1906, column: 2, scope: !11744)
!11768 = !DILocation(line: 1908, column: 2, scope: !11720)
!11769 = !DILocation(line: 1909, column: 2, scope: !11720)
!11770 = !DILocation(line: 1910, column: 1, scope: !11720)
!11771 = distinct !DISubprogram(name: "skge_link_up", scope: !3, file: !3, line: 1050, type: !9434, scopeLine: 1051, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!11772 = !DILocalVariable(name: "skge", arg: 1, scope: !11771, file: !3, line: 1050, type: !9172)
!11773 = !DILocation(line: 1050, column: 44, scope: !11771)
!11774 = !DILocation(line: 1052, column: 14, scope: !11771)
!11775 = !DILocation(line: 1052, column: 20, scope: !11771)
!11776 = !DILocation(line: 1052, column: 24, scope: !11771)
!11777 = !DILocation(line: 1052, column: 2, scope: !11771)
!11778 = !DILocation(line: 1055, column: 19, scope: !11771)
!11779 = !DILocation(line: 1055, column: 25, scope: !11771)
!11780 = !DILocation(line: 1055, column: 2, scope: !11771)
!11781 = !DILocation(line: 1056, column: 19, scope: !11771)
!11782 = !DILocation(line: 1056, column: 25, scope: !11771)
!11783 = !DILocation(line: 1056, column: 2, scope: !11771)
!11784 = !DILocation(line: 1058, column: 2, scope: !11771)
!11785 = !DILocation(line: 1058, column: 2, scope: !11786)
!11786 = distinct !DILexicalBlock(scope: !11787, file: !3, line: 1058, column: 2)
!11787 = distinct !DILexicalBlock(scope: !11771, file: !3, line: 1058, column: 2)
!11788 = !DILocation(line: 1058, column: 2, scope: !11787)
!11789 = !DILocation(line: 1063, column: 1, scope: !11771)
!11790 = distinct !DISubprogram(name: "netif_wake_queue", scope: !31, file: !31, line: 3309, type: !406, scopeLine: 3310, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!11791 = !DILocalVariable(name: "dev", arg: 1, scope: !11790, file: !31, line: 3309, type: !290)
!11792 = !DILocation(line: 3309, column: 56, scope: !11790)
!11793 = !DILocation(line: 3311, column: 42, scope: !11790)
!11794 = !DILocation(line: 3311, column: 22, scope: !11790)
!11795 = !DILocation(line: 3311, column: 2, scope: !11790)
!11796 = !DILocation(line: 3312, column: 1, scope: !11790)
!11797 = distinct !DISubprogram(name: "skge_pause", scope: !3, file: !3, line: 1033, type: !11798, scopeLine: 1034, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!11798 = !DISubroutineType(types: !11799)
!11799 = !{!292, !7202}
!11800 = !DILocalVariable(name: "status", arg: 1, scope: !11797, file: !3, line: 1033, type: !7202)
!11801 = !DILocation(line: 1033, column: 49, scope: !11797)
!11802 = !DILocation(line: 1035, column: 10, scope: !11797)
!11803 = !DILocation(line: 1035, column: 2, scope: !11797)
!11804 = !DILocation(line: 1037, column: 3, scope: !11805)
!11805 = distinct !DILexicalBlock(scope: !11797, file: !3, line: 1035, column: 18)
!11806 = !DILocation(line: 1039, column: 3, scope: !11805)
!11807 = !DILocation(line: 1041, column: 3, scope: !11805)
!11808 = !DILocation(line: 1043, column: 3, scope: !11805)
!11809 = !DILocation(line: 1045, column: 3, scope: !11805)
!11810 = !DILocation(line: 1047, column: 1, scope: !11797)
!11811 = distinct !DISubprogram(name: "netdev_get_tx_queue", scope: !31, file: !31, line: 2234, type: !11812, scopeLine: 2236, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!11812 = !DISubroutineType(types: !11813)
!11813 = !{!6437, !773, !7}
!11814 = !DILocalVariable(name: "dev", arg: 1, scope: !11811, file: !31, line: 2234, type: !773)
!11815 = !DILocation(line: 2234, column: 67, scope: !11811)
!11816 = !DILocalVariable(name: "index", arg: 2, scope: !11811, file: !31, line: 2235, type: !7)
!11817 = !DILocation(line: 2235, column: 20, scope: !11811)
!11818 = !DILocation(line: 2237, column: 10, scope: !11811)
!11819 = !DILocation(line: 2237, column: 15, scope: !11811)
!11820 = !DILocation(line: 2237, column: 19, scope: !11811)
!11821 = !DILocation(line: 2237, column: 2, scope: !11811)
!11822 = distinct !DISubprogram(name: "skge_link_down", scope: !3, file: !3, line: 1065, type: !9434, scopeLine: 1066, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!11823 = !DILocalVariable(name: "skge", arg: 1, scope: !11822, file: !3, line: 1065, type: !9172)
!11824 = !DILocation(line: 1065, column: 46, scope: !11822)
!11825 = !DILocation(line: 1067, column: 14, scope: !11822)
!11826 = !DILocation(line: 1067, column: 20, scope: !11822)
!11827 = !DILocation(line: 1067, column: 24, scope: !11822)
!11828 = !DILocation(line: 1067, column: 2, scope: !11822)
!11829 = !DILocation(line: 1068, column: 20, scope: !11822)
!11830 = !DILocation(line: 1068, column: 26, scope: !11822)
!11831 = !DILocation(line: 1068, column: 2, scope: !11822)
!11832 = !DILocation(line: 1069, column: 19, scope: !11822)
!11833 = !DILocation(line: 1069, column: 25, scope: !11822)
!11834 = !DILocation(line: 1069, column: 2, scope: !11822)
!11835 = !DILocation(line: 1071, column: 2, scope: !11822)
!11836 = !DILocation(line: 1071, column: 2, scope: !11837)
!11837 = distinct !DILexicalBlock(scope: !11838, file: !3, line: 1071, column: 2)
!11838 = distinct !DILexicalBlock(scope: !11822, file: !3, line: 1071, column: 2)
!11839 = !DILocation(line: 1071, column: 2, scope: !11838)
!11840 = !DILocation(line: 1072, column: 1, scope: !11822)
!11841 = distinct !DISubprogram(name: "yukon_init", scope: !3, file: !3, line: 1941, type: !9399, scopeLine: 1942, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!11842 = !DILocalVariable(name: "hw", arg: 1, scope: !11841, file: !3, line: 1941, type: !8794)
!11843 = !DILocation(line: 1941, column: 40, scope: !11841)
!11844 = !DILocalVariable(name: "port", arg: 2, scope: !11841, file: !3, line: 1941, type: !32)
!11845 = !DILocation(line: 1941, column: 48, scope: !11841)
!11846 = !DILocalVariable(name: "skge", scope: !11841, file: !3, line: 1943, type: !9172)
!11847 = !DILocation(line: 1943, column: 20, scope: !11841)
!11848 = !DILocation(line: 1943, column: 39, scope: !11841)
!11849 = !DILocation(line: 1943, column: 43, scope: !11841)
!11850 = !DILocation(line: 1943, column: 47, scope: !11841)
!11851 = !DILocation(line: 1943, column: 27, scope: !11841)
!11852 = !DILocalVariable(name: "ctrl", scope: !11841, file: !3, line: 1944, type: !581)
!11853 = !DILocation(line: 1944, column: 6, scope: !11841)
!11854 = !DILocalVariable(name: "ct1000", scope: !11841, file: !3, line: 1944, type: !581)
!11855 = !DILocation(line: 1944, column: 12, scope: !11841)
!11856 = !DILocalVariable(name: "adv", scope: !11841, file: !3, line: 1944, type: !581)
!11857 = !DILocation(line: 1944, column: 20, scope: !11841)
!11858 = !DILocation(line: 1946, column: 6, scope: !11859)
!11859 = distinct !DILexicalBlock(scope: !11841, file: !3, line: 1946, column: 6)
!11860 = !DILocation(line: 1946, column: 12, scope: !11859)
!11861 = !DILocation(line: 1946, column: 20, scope: !11859)
!11862 = !DILocation(line: 1946, column: 6, scope: !11841)
!11863 = !DILocalVariable(name: "ectrl", scope: !11864, file: !3, line: 1947, type: !581)
!11864 = distinct !DILexicalBlock(scope: !11859, file: !3, line: 1946, column: 39)
!11865 = !DILocation(line: 1947, column: 7, scope: !11864)
!11866 = !DILocation(line: 1947, column: 27, scope: !11864)
!11867 = !DILocation(line: 1947, column: 31, scope: !11864)
!11868 = !DILocation(line: 1947, column: 15, scope: !11864)
!11869 = !DILocation(line: 1949, column: 9, scope: !11864)
!11870 = !DILocation(line: 1951, column: 9, scope: !11864)
!11871 = !DILocation(line: 1953, column: 9, scope: !11864)
!11872 = !DILocation(line: 1955, column: 16, scope: !11864)
!11873 = !DILocation(line: 1955, column: 20, scope: !11864)
!11874 = !DILocation(line: 1955, column: 45, scope: !11864)
!11875 = !DILocation(line: 1955, column: 3, scope: !11864)
!11876 = !DILocation(line: 1956, column: 2, scope: !11864)
!11877 = !DILocation(line: 1958, column: 21, scope: !11841)
!11878 = !DILocation(line: 1958, column: 25, scope: !11841)
!11879 = !DILocation(line: 1958, column: 9, scope: !11841)
!11880 = !DILocation(line: 1958, column: 7, scope: !11841)
!11881 = !DILocation(line: 1959, column: 6, scope: !11882)
!11882 = distinct !DILexicalBlock(scope: !11841, file: !3, line: 1959, column: 6)
!11883 = !DILocation(line: 1959, column: 12, scope: !11882)
!11884 = !DILocation(line: 1959, column: 20, scope: !11882)
!11885 = !DILocation(line: 1959, column: 6, scope: !11841)
!11886 = !DILocation(line: 1960, column: 8, scope: !11882)
!11887 = !DILocation(line: 1960, column: 3, scope: !11882)
!11888 = !DILocation(line: 1962, column: 7, scope: !11841)
!11889 = !DILocation(line: 1963, column: 15, scope: !11841)
!11890 = !DILocation(line: 1963, column: 19, scope: !11841)
!11891 = !DILocation(line: 1963, column: 40, scope: !11841)
!11892 = !DILocation(line: 1963, column: 2, scope: !11841)
!11893 = !DILocation(line: 1965, column: 7, scope: !11841)
!11894 = !DILocation(line: 1966, column: 9, scope: !11841)
!11895 = !DILocation(line: 1967, column: 6, scope: !11841)
!11896 = !DILocation(line: 1969, column: 6, scope: !11897)
!11897 = distinct !DILexicalBlock(scope: !11841, file: !3, line: 1969, column: 6)
!11898 = !DILocation(line: 1969, column: 12, scope: !11897)
!11899 = !DILocation(line: 1969, column: 20, scope: !11897)
!11900 = !DILocation(line: 1969, column: 6, scope: !11841)
!11901 = !DILocation(line: 1970, column: 7, scope: !11902)
!11902 = distinct !DILexicalBlock(scope: !11903, file: !3, line: 1970, column: 7)
!11903 = distinct !DILexicalBlock(scope: !11897, file: !3, line: 1969, column: 39)
!11904 = !DILocation(line: 1970, column: 11, scope: !11902)
!11905 = !DILocation(line: 1970, column: 7, scope: !11903)
!11906 = !DILocation(line: 1971, column: 8, scope: !11907)
!11907 = distinct !DILexicalBlock(scope: !11908, file: !3, line: 1971, column: 8)
!11908 = distinct !DILexicalBlock(scope: !11902, file: !3, line: 1970, column: 19)
!11909 = !DILocation(line: 1971, column: 14, scope: !11907)
!11910 = !DILocation(line: 1971, column: 26, scope: !11907)
!11911 = !DILocation(line: 1971, column: 8, scope: !11908)
!11912 = !DILocation(line: 1972, column: 12, scope: !11907)
!11913 = !DILocation(line: 1972, column: 5, scope: !11907)
!11914 = !DILocation(line: 1973, column: 8, scope: !11915)
!11915 = distinct !DILexicalBlock(scope: !11908, file: !3, line: 1973, column: 8)
!11916 = !DILocation(line: 1973, column: 14, scope: !11915)
!11917 = !DILocation(line: 1973, column: 26, scope: !11915)
!11918 = !DILocation(line: 1973, column: 8, scope: !11908)
!11919 = !DILocation(line: 1974, column: 12, scope: !11915)
!11920 = !DILocation(line: 1974, column: 5, scope: !11915)
!11921 = !DILocation(line: 1975, column: 8, scope: !11922)
!11922 = distinct !DILexicalBlock(scope: !11908, file: !3, line: 1975, column: 8)
!11923 = !DILocation(line: 1975, column: 14, scope: !11922)
!11924 = !DILocation(line: 1975, column: 26, scope: !11922)
!11925 = !DILocation(line: 1975, column: 8, scope: !11908)
!11926 = !DILocation(line: 1976, column: 9, scope: !11922)
!11927 = !DILocation(line: 1976, column: 5, scope: !11922)
!11928 = !DILocation(line: 1977, column: 8, scope: !11929)
!11929 = distinct !DILexicalBlock(scope: !11908, file: !3, line: 1977, column: 8)
!11930 = !DILocation(line: 1977, column: 14, scope: !11929)
!11931 = !DILocation(line: 1977, column: 26, scope: !11929)
!11932 = !DILocation(line: 1977, column: 8, scope: !11908)
!11933 = !DILocation(line: 1978, column: 9, scope: !11929)
!11934 = !DILocation(line: 1978, column: 5, scope: !11929)
!11935 = !DILocation(line: 1979, column: 8, scope: !11936)
!11936 = distinct !DILexicalBlock(scope: !11908, file: !3, line: 1979, column: 8)
!11937 = !DILocation(line: 1979, column: 14, scope: !11936)
!11938 = !DILocation(line: 1979, column: 26, scope: !11936)
!11939 = !DILocation(line: 1979, column: 8, scope: !11908)
!11940 = !DILocation(line: 1980, column: 9, scope: !11936)
!11941 = !DILocation(line: 1980, column: 5, scope: !11936)
!11942 = !DILocation(line: 1981, column: 8, scope: !11943)
!11943 = distinct !DILexicalBlock(scope: !11908, file: !3, line: 1981, column: 8)
!11944 = !DILocation(line: 1981, column: 14, scope: !11943)
!11945 = !DILocation(line: 1981, column: 26, scope: !11943)
!11946 = !DILocation(line: 1981, column: 8, scope: !11908)
!11947 = !DILocation(line: 1982, column: 9, scope: !11943)
!11948 = !DILocation(line: 1982, column: 5, scope: !11943)
!11949 = !DILocation(line: 1985, column: 25, scope: !11908)
!11950 = !DILocation(line: 1985, column: 31, scope: !11908)
!11951 = !DILocation(line: 1985, column: 11, scope: !11908)
!11952 = !DILocation(line: 1985, column: 8, scope: !11908)
!11953 = !DILocation(line: 1986, column: 3, scope: !11908)
!11954 = !DILocation(line: 1987, column: 8, scope: !11955)
!11955 = distinct !DILexicalBlock(scope: !11956, file: !3, line: 1987, column: 8)
!11956 = distinct !DILexicalBlock(scope: !11902, file: !3, line: 1986, column: 10)
!11957 = !DILocation(line: 1987, column: 14, scope: !11955)
!11958 = !DILocation(line: 1987, column: 26, scope: !11955)
!11959 = !DILocation(line: 1987, column: 8, scope: !11956)
!11960 = !DILocation(line: 1988, column: 9, scope: !11955)
!11961 = !DILocation(line: 1988, column: 5, scope: !11955)
!11962 = !DILocation(line: 1989, column: 8, scope: !11963)
!11963 = distinct !DILexicalBlock(scope: !11956, file: !3, line: 1989, column: 8)
!11964 = !DILocation(line: 1989, column: 14, scope: !11963)
!11965 = !DILocation(line: 1989, column: 26, scope: !11963)
!11966 = !DILocation(line: 1989, column: 8, scope: !11956)
!11967 = !DILocation(line: 1990, column: 9, scope: !11963)
!11968 = !DILocation(line: 1990, column: 5, scope: !11963)
!11969 = !DILocation(line: 1992, column: 27, scope: !11956)
!11970 = !DILocation(line: 1992, column: 33, scope: !11956)
!11971 = !DILocation(line: 1992, column: 11, scope: !11956)
!11972 = !DILocation(line: 1992, column: 8, scope: !11956)
!11973 = !DILocation(line: 1996, column: 8, scope: !11903)
!11974 = !DILocation(line: 1997, column: 2, scope: !11903)
!11975 = !DILocation(line: 1999, column: 10, scope: !11976)
!11976 = distinct !DILexicalBlock(scope: !11897, file: !3, line: 1997, column: 9)
!11977 = !DILocation(line: 2001, column: 7, scope: !11978)
!11978 = distinct !DILexicalBlock(scope: !11976, file: !3, line: 2001, column: 7)
!11979 = !DILocation(line: 2001, column: 13, scope: !11978)
!11980 = !DILocation(line: 2001, column: 20, scope: !11978)
!11981 = !DILocation(line: 2001, column: 7, scope: !11976)
!11982 = !DILocation(line: 2002, column: 9, scope: !11978)
!11983 = !DILocation(line: 2002, column: 4, scope: !11978)
!11984 = !DILocation(line: 2004, column: 11, scope: !11976)
!11985 = !DILocation(line: 2004, column: 17, scope: !11976)
!11986 = !DILocation(line: 2004, column: 3, scope: !11976)
!11987 = !DILocation(line: 2006, column: 9, scope: !11988)
!11988 = distinct !DILexicalBlock(scope: !11976, file: !3, line: 2004, column: 24)
!11989 = !DILocation(line: 2007, column: 4, scope: !11988)
!11990 = !DILocation(line: 2009, column: 9, scope: !11988)
!11991 = !DILocation(line: 2010, column: 4, scope: !11988)
!11992 = !DILocation(line: 2013, column: 8, scope: !11976)
!11993 = !DILocation(line: 2016, column: 15, scope: !11841)
!11994 = !DILocation(line: 2016, column: 19, scope: !11841)
!11995 = !DILocation(line: 2016, column: 46, scope: !11841)
!11996 = !DILocation(line: 2016, column: 2, scope: !11841)
!11997 = !DILocation(line: 2018, column: 15, scope: !11841)
!11998 = !DILocation(line: 2018, column: 19, scope: !11841)
!11999 = !DILocation(line: 2018, column: 44, scope: !11841)
!12000 = !DILocation(line: 2018, column: 2, scope: !11841)
!12001 = !DILocation(line: 2019, column: 15, scope: !11841)
!12002 = !DILocation(line: 2019, column: 19, scope: !11841)
!12003 = !DILocation(line: 2019, column: 40, scope: !11841)
!12004 = !DILocation(line: 2019, column: 2, scope: !11841)
!12005 = !DILocation(line: 2022, column: 6, scope: !12006)
!12006 = distinct !DILexicalBlock(scope: !11841, file: !3, line: 2022, column: 6)
!12007 = !DILocation(line: 2022, column: 12, scope: !12006)
!12008 = !DILocation(line: 2022, column: 20, scope: !12006)
!12009 = !DILocation(line: 2022, column: 6, scope: !11841)
!12010 = !DILocation(line: 2023, column: 16, scope: !12006)
!12011 = !DILocation(line: 2023, column: 20, scope: !12006)
!12012 = !DILocation(line: 2023, column: 3, scope: !12006)
!12013 = !DILocation(line: 2025, column: 16, scope: !12006)
!12014 = !DILocation(line: 2025, column: 20, scope: !12006)
!12015 = !DILocation(line: 2025, column: 3, scope: !12006)
!12016 = !DILocation(line: 2026, column: 1, scope: !11841)
!12017 = distinct !DISubprogram(name: "netif_stop_queue", scope: !31, file: !31, line: 3336, type: !406, scopeLine: 3337, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!12018 = !DILocalVariable(name: "dev_queue", arg: 1, scope: !12019, file: !31, line: 3324, type: !6437)
!12019 = distinct !DISubprogram(name: "netif_tx_stop_queue", scope: !31, file: !31, line: 3324, type: !12020, scopeLine: 3325, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!12020 = !DISubroutineType(types: !12021)
!12021 = !{null, !6437}
!12022 = !DILocation(line: 3324, column: 70, scope: !12019, inlinedAt: !12023)
!12023 = distinct !DILocation(line: 3338, column: 2, scope: !12017)
!12024 = !DILocalVariable(name: "dev", arg: 1, scope: !12017, file: !31, line: 3336, type: !290)
!12025 = !DILocation(line: 3336, column: 56, scope: !12017)
!12026 = !DILocation(line: 3338, column: 42, scope: !12017)
!12027 = !DILocation(line: 3338, column: 22, scope: !12017)
!12028 = !DILocation(line: 3326, column: 35, scope: !12019, inlinedAt: !12023)
!12029 = !DILocation(line: 3326, column: 46, scope: !12019, inlinedAt: !12023)
!12030 = !DILocation(line: 3326, column: 2, scope: !12019, inlinedAt: !12023)
!12031 = !DILocation(line: 3339, column: 1, scope: !12017)
!12032 = distinct !DISubprogram(name: "set_bit", scope: !12033, file: !12033, line: 26, type: !12034, scopeLine: 27, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!12033 = !DIFile(filename: "./include/asm-generic/bitops/instrumented-atomic.h", directory: "/home/lizy2001/genbc/linux")
!12034 = !DISubroutineType(types: !12035)
!12035 = !{null, !998, !12036}
!12036 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11396, size: 64)
!12037 = !DILocalVariable(name: "nr", arg: 1, scope: !12038, file: !11034, line: 52, type: !998)
!12038 = distinct !DISubprogram(name: "arch_set_bit", scope: !11034, file: !11034, line: 52, type: !12034, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!12039 = !DILocation(line: 52, column: 19, scope: !12038, inlinedAt: !12040)
!12040 = distinct !DILocation(line: 29, column: 2, scope: !12032)
!12041 = !DILocalVariable(name: "addr", arg: 2, scope: !12038, file: !11034, line: 52, type: !12036)
!12042 = !DILocation(line: 52, column: 47, scope: !12038, inlinedAt: !12040)
!12043 = !DILocalVariable(name: "v", arg: 1, scope: !12044, file: !11413, line: 84, type: !11416)
!12044 = distinct !DISubprogram(name: "instrument_atomic_write", scope: !11413, file: !11413, line: 84, type: !11414, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!12045 = !DILocation(line: 84, column: 74, scope: !12044, inlinedAt: !12046)
!12046 = distinct !DILocation(line: 28, column: 2, scope: !12032)
!12047 = !DILocalVariable(name: "size", arg: 2, scope: !12044, file: !11413, line: 84, type: !1039)
!12048 = !DILocation(line: 84, column: 84, scope: !12044, inlinedAt: !12046)
!12049 = !DILocalVariable(name: "nr", arg: 1, scope: !12032, file: !12033, line: 26, type: !998)
!12050 = !DILocation(line: 26, column: 33, scope: !12032)
!12051 = !DILocalVariable(name: "addr", arg: 2, scope: !12032, file: !12033, line: 26, type: !12036)
!12052 = !DILocation(line: 26, column: 61, scope: !12032)
!12053 = !DILocation(line: 28, column: 26, scope: !12032)
!12054 = !DILocation(line: 28, column: 33, scope: !12032)
!12055 = !DILocation(line: 28, column: 31, scope: !12032)
!12056 = !DILocation(line: 86, column: 20, scope: !12044, inlinedAt: !12046)
!12057 = !DILocation(line: 86, column: 23, scope: !12044, inlinedAt: !12046)
!12058 = !DILocation(line: 86, column: 2, scope: !12044, inlinedAt: !12046)
!12059 = !DILocation(line: 87, column: 2, scope: !12044, inlinedAt: !12046)
!12060 = !DILocation(line: 29, column: 15, scope: !12032)
!12061 = !DILocation(line: 29, column: 19, scope: !12032)
!12062 = !DILocation(line: 54, column: 27, scope: !12063, inlinedAt: !12040)
!12063 = distinct !DILexicalBlock(scope: !12038, file: !11034, line: 54, column: 6)
!12064 = !DILocation(line: 54, column: 6, scope: !12063, inlinedAt: !12040)
!12065 = !DILocation(line: 54, column: 6, scope: !12038, inlinedAt: !12040)
!12066 = !DILocation(line: 56, column: 6, scope: !12067, inlinedAt: !12040)
!12067 = distinct !DILexicalBlock(scope: !12063, file: !11034, line: 54, column: 32)
!12068 = !DILocation(line: 57, column: 12, scope: !12067, inlinedAt: !12040)
!12069 = !DILocation(line: 55, column: 3, scope: !12067, inlinedAt: !12040)
!12070 = !{i32 -2147040524}
!12071 = !DILocation(line: 59, column: 2, scope: !12067, inlinedAt: !12040)
!12072 = !DILocation(line: 61, column: 8, scope: !12073, inlinedAt: !12040)
!12073 = distinct !DILexicalBlock(scope: !12063, file: !11034, line: 59, column: 9)
!12074 = !DILocation(line: 61, column: 32, scope: !12073, inlinedAt: !12040)
!12075 = !DILocation(line: 60, column: 3, scope: !12073, inlinedAt: !12040)
!12076 = !{i32 -2147040392}
!12077 = !DILocation(line: 30, column: 1, scope: !12032)
!12078 = distinct !DISubprogram(name: "kasan_check_write", scope: !11450, file: !11450, line: 38, type: !11451, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!12079 = !DILocalVariable(name: "p", arg: 1, scope: !12078, file: !11450, line: 38, type: !11416)
!12080 = !DILocation(line: 38, column: 59, scope: !12078)
!12081 = !DILocalVariable(name: "size", arg: 2, scope: !12078, file: !11450, line: 38, type: !7)
!12082 = !DILocation(line: 38, column: 75, scope: !12078)
!12083 = !DILocation(line: 40, column: 2, scope: !12078)
!12084 = distinct !DISubprogram(name: "xm_phy_read", scope: !3, file: !3, line: 1108, type: !11470, scopeLine: 1109, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!12085 = !DILocalVariable(name: "hw", arg: 1, scope: !12084, file: !3, line: 1108, type: !8794)
!12086 = !DILocation(line: 1108, column: 40, scope: !12084)
!12087 = !DILocalVariable(name: "port", arg: 2, scope: !12084, file: !3, line: 1108, type: !32)
!12088 = !DILocation(line: 1108, column: 48, scope: !12084)
!12089 = !DILocalVariable(name: "reg", arg: 3, scope: !12084, file: !3, line: 1108, type: !581)
!12090 = !DILocation(line: 1108, column: 58, scope: !12084)
!12091 = !DILocalVariable(name: "v", scope: !12084, file: !3, line: 1110, type: !581)
!12092 = !DILocation(line: 1110, column: 6, scope: !12084)
!12093 = !DILocation(line: 1111, column: 20, scope: !12094)
!12094 = distinct !DILexicalBlock(scope: !12084, file: !3, line: 1111, column: 6)
!12095 = !DILocation(line: 1111, column: 24, scope: !12094)
!12096 = !DILocation(line: 1111, column: 30, scope: !12094)
!12097 = !DILocation(line: 1111, column: 6, scope: !12094)
!12098 = !DILocation(line: 1111, column: 6, scope: !12084)
!12099 = !DILocation(line: 1112, column: 3, scope: !12094)
!12100 = !DILocation(line: 1113, column: 9, scope: !12084)
!12101 = !DILocation(line: 1113, column: 2, scope: !12084)
!12102 = distinct !DISubprogram(name: "xm_phy_write", scope: !3, file: !3, line: 1116, type: !11721, scopeLine: 1117, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!12103 = !DILocalVariable(name: "hw", arg: 1, scope: !12102, file: !3, line: 1116, type: !8794)
!12104 = !DILocation(line: 1116, column: 41, scope: !12102)
!12105 = !DILocalVariable(name: "port", arg: 2, scope: !12102, file: !3, line: 1116, type: !32)
!12106 = !DILocation(line: 1116, column: 49, scope: !12102)
!12107 = !DILocalVariable(name: "reg", arg: 3, scope: !12102, file: !3, line: 1116, type: !581)
!12108 = !DILocation(line: 1116, column: 59, scope: !12102)
!12109 = !DILocalVariable(name: "val", arg: 4, scope: !12102, file: !3, line: 1116, type: !581)
!12110 = !DILocation(line: 1116, column: 68, scope: !12102)
!12111 = !DILocalVariable(name: "i", scope: !12102, file: !3, line: 1118, type: !32)
!12112 = !DILocation(line: 1118, column: 6, scope: !12102)
!12113 = !DILocation(line: 1120, column: 13, scope: !12102)
!12114 = !DILocation(line: 1120, column: 17, scope: !12102)
!12115 = !DILocation(line: 1120, column: 36, scope: !12102)
!12116 = !DILocation(line: 1120, column: 42, scope: !12102)
!12117 = !DILocation(line: 1120, column: 46, scope: !12102)
!12118 = !DILocation(line: 1120, column: 40, scope: !12102)
!12119 = !DILocation(line: 1120, column: 2, scope: !12102)
!12120 = !DILocation(line: 1121, column: 9, scope: !12121)
!12121 = distinct !DILexicalBlock(scope: !12102, file: !3, line: 1121, column: 2)
!12122 = !DILocation(line: 1121, column: 7, scope: !12121)
!12123 = !DILocation(line: 1121, column: 14, scope: !12124)
!12124 = distinct !DILexicalBlock(scope: !12121, file: !3, line: 1121, column: 2)
!12125 = !DILocation(line: 1121, column: 16, scope: !12124)
!12126 = !DILocation(line: 1121, column: 2, scope: !12121)
!12127 = !DILocation(line: 1122, column: 19, scope: !12128)
!12128 = distinct !DILexicalBlock(scope: !12129, file: !3, line: 1122, column: 7)
!12129 = distinct !DILexicalBlock(scope: !12124, file: !3, line: 1121, column: 36)
!12130 = !DILocation(line: 1122, column: 23, scope: !12128)
!12131 = !DILocation(line: 1122, column: 9, scope: !12128)
!12132 = !DILocation(line: 1122, column: 41, scope: !12128)
!12133 = !DILocation(line: 1122, column: 7, scope: !12129)
!12134 = !DILocation(line: 1123, column: 4, scope: !12128)
!12135 = !DILocation(line: 1124, column: 3, scope: !12136)
!12136 = distinct !DILexicalBlock(scope: !12137, file: !3, line: 1124, column: 3)
!12137 = distinct !DILexicalBlock(scope: !12138, file: !3, line: 1124, column: 3)
!12138 = distinct !DILexicalBlock(scope: !12139, file: !3, line: 1124, column: 3)
!12139 = distinct !DILexicalBlock(scope: !12129, file: !3, line: 1124, column: 3)
!12140 = !DILocation(line: 1125, column: 2, scope: !12129)
!12141 = !DILocation(line: 1121, column: 32, scope: !12124)
!12142 = !DILocation(line: 1121, column: 2, scope: !12124)
!12143 = distinct !{!12143, !12126, !12144}
!12144 = !DILocation(line: 1125, column: 2, scope: !12121)
!12145 = !DILocation(line: 1126, column: 2, scope: !12102)
!12146 = !DILabel(scope: !12102, name: "ready", file: !3, line: 1128)
!12147 = !DILocation(line: 1128, column: 2, scope: !12102)
!12148 = !DILocation(line: 1129, column: 13, scope: !12102)
!12149 = !DILocation(line: 1129, column: 17, scope: !12102)
!12150 = !DILocation(line: 1129, column: 36, scope: !12102)
!12151 = !DILocation(line: 1129, column: 2, scope: !12102)
!12152 = !DILocation(line: 1130, column: 9, scope: !12153)
!12153 = distinct !DILexicalBlock(scope: !12102, file: !3, line: 1130, column: 2)
!12154 = !DILocation(line: 1130, column: 7, scope: !12153)
!12155 = !DILocation(line: 1130, column: 14, scope: !12156)
!12156 = distinct !DILexicalBlock(scope: !12153, file: !3, line: 1130, column: 2)
!12157 = !DILocation(line: 1130, column: 16, scope: !12156)
!12158 = !DILocation(line: 1130, column: 2, scope: !12153)
!12159 = !DILocation(line: 1131, column: 19, scope: !12160)
!12160 = distinct !DILexicalBlock(scope: !12161, file: !3, line: 1131, column: 7)
!12161 = distinct !DILexicalBlock(scope: !12156, file: !3, line: 1130, column: 36)
!12162 = !DILocation(line: 1131, column: 23, scope: !12160)
!12163 = !DILocation(line: 1131, column: 9, scope: !12160)
!12164 = !DILocation(line: 1131, column: 41, scope: !12160)
!12165 = !DILocation(line: 1131, column: 7, scope: !12161)
!12166 = !DILocation(line: 1132, column: 4, scope: !12160)
!12167 = !DILocation(line: 1133, column: 3, scope: !12168)
!12168 = distinct !DILexicalBlock(scope: !12169, file: !3, line: 1133, column: 3)
!12169 = distinct !DILexicalBlock(scope: !12170, file: !3, line: 1133, column: 3)
!12170 = distinct !DILexicalBlock(scope: !12171, file: !3, line: 1133, column: 3)
!12171 = distinct !DILexicalBlock(scope: !12161, file: !3, line: 1133, column: 3)
!12172 = !DILocation(line: 1134, column: 2, scope: !12161)
!12173 = !DILocation(line: 1130, column: 32, scope: !12156)
!12174 = !DILocation(line: 1130, column: 2, scope: !12156)
!12175 = distinct !{!12175, !12158, !12176}
!12176 = !DILocation(line: 1134, column: 2, scope: !12153)
!12177 = !DILocation(line: 1135, column: 2, scope: !12102)
!12178 = !DILocation(line: 1136, column: 1, scope: !12102)
!12179 = distinct !DISubprogram(name: "bcom_check_link", scope: !3, file: !3, line: 1210, type: !9399, scopeLine: 1211, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!12180 = !DILocalVariable(name: "hw", arg: 1, scope: !12179, file: !3, line: 1210, type: !8794)
!12181 = !DILocation(line: 1210, column: 45, scope: !12179)
!12182 = !DILocalVariable(name: "port", arg: 2, scope: !12179, file: !3, line: 1210, type: !32)
!12183 = !DILocation(line: 1210, column: 53, scope: !12179)
!12184 = !DILocalVariable(name: "dev", scope: !12179, file: !3, line: 1212, type: !290)
!12185 = !DILocation(line: 1212, column: 21, scope: !12179)
!12186 = !DILocation(line: 1212, column: 27, scope: !12179)
!12187 = !DILocation(line: 1212, column: 31, scope: !12179)
!12188 = !DILocation(line: 1212, column: 35, scope: !12179)
!12189 = !DILocalVariable(name: "skge", scope: !12179, file: !3, line: 1213, type: !9172)
!12190 = !DILocation(line: 1213, column: 20, scope: !12179)
!12191 = !DILocation(line: 1213, column: 39, scope: !12179)
!12192 = !DILocation(line: 1213, column: 27, scope: !12179)
!12193 = !DILocalVariable(name: "status", scope: !12179, file: !3, line: 1214, type: !581)
!12194 = !DILocation(line: 1214, column: 6, scope: !12179)
!12195 = !DILocation(line: 1217, column: 14, scope: !12179)
!12196 = !DILocation(line: 1217, column: 18, scope: !12179)
!12197 = !DILocation(line: 1217, column: 2, scope: !12179)
!12198 = !DILocation(line: 1218, column: 23, scope: !12179)
!12199 = !DILocation(line: 1218, column: 27, scope: !12179)
!12200 = !DILocation(line: 1218, column: 11, scope: !12179)
!12201 = !DILocation(line: 1218, column: 9, scope: !12179)
!12202 = !DILocation(line: 1220, column: 7, scope: !12203)
!12203 = distinct !DILexicalBlock(scope: !12179, file: !3, line: 1220, column: 6)
!12204 = !DILocation(line: 1220, column: 14, scope: !12203)
!12205 = !DILocation(line: 1220, column: 30, scope: !12203)
!12206 = !DILocation(line: 1220, column: 6, scope: !12179)
!12207 = !DILocation(line: 1221, column: 16, scope: !12208)
!12208 = distinct !DILexicalBlock(scope: !12203, file: !3, line: 1220, column: 36)
!12209 = !DILocation(line: 1221, column: 20, scope: !12208)
!12210 = !DILocation(line: 1221, column: 3, scope: !12208)
!12211 = !DILocation(line: 1222, column: 3, scope: !12208)
!12212 = !DILocation(line: 1225, column: 6, scope: !12213)
!12213 = distinct !DILexicalBlock(scope: !12179, file: !3, line: 1225, column: 6)
!12214 = !DILocation(line: 1225, column: 12, scope: !12213)
!12215 = !DILocation(line: 1225, column: 20, scope: !12213)
!12216 = !DILocation(line: 1225, column: 6, scope: !12179)
!12217 = !DILocalVariable(name: "lpa", scope: !12218, file: !3, line: 1226, type: !581)
!12218 = distinct !DILexicalBlock(scope: !12213, file: !3, line: 1225, column: 39)
!12219 = !DILocation(line: 1226, column: 7, scope: !12218)
!12220 = !DILocalVariable(name: "aux", scope: !12218, file: !3, line: 1226, type: !581)
!12221 = !DILocation(line: 1226, column: 12, scope: !12218)
!12222 = !DILocation(line: 1228, column: 9, scope: !12223)
!12223 = distinct !DILexicalBlock(scope: !12218, file: !3, line: 1228, column: 7)
!12224 = !DILocation(line: 1228, column: 16, scope: !12223)
!12225 = !DILocation(line: 1228, column: 7, scope: !12218)
!12226 = !DILocation(line: 1229, column: 4, scope: !12223)
!12227 = !DILocation(line: 1231, column: 21, scope: !12218)
!12228 = !DILocation(line: 1231, column: 25, scope: !12218)
!12229 = !DILocation(line: 1231, column: 9, scope: !12218)
!12230 = !DILocation(line: 1231, column: 7, scope: !12218)
!12231 = !DILocation(line: 1232, column: 7, scope: !12232)
!12232 = distinct !DILexicalBlock(scope: !12218, file: !3, line: 1232, column: 7)
!12233 = !DILocation(line: 1232, column: 11, scope: !12232)
!12234 = !DILocation(line: 1232, column: 7, scope: !12218)
!12235 = !DILocation(line: 1233, column: 18, scope: !12236)
!12236 = distinct !DILexicalBlock(scope: !12232, file: !3, line: 1232, column: 26)
!12237 = !DILocation(line: 1233, column: 4, scope: !12236)
!12238 = !DILocation(line: 1234, column: 4, scope: !12236)
!12239 = !DILocation(line: 1237, column: 21, scope: !12218)
!12240 = !DILocation(line: 1237, column: 25, scope: !12218)
!12241 = !DILocation(line: 1237, column: 9, scope: !12218)
!12242 = !DILocation(line: 1237, column: 7, scope: !12218)
!12243 = !DILocation(line: 1240, column: 11, scope: !12218)
!12244 = !DILocation(line: 1240, column: 15, scope: !12218)
!12245 = !DILocation(line: 1240, column: 3, scope: !12218)
!12246 = !DILocation(line: 1242, column: 4, scope: !12247)
!12247 = distinct !DILexicalBlock(scope: !12218, file: !3, line: 1240, column: 38)
!12248 = !DILocation(line: 1242, column: 10, scope: !12247)
!12249 = !DILocation(line: 1242, column: 17, scope: !12247)
!12250 = !DILocation(line: 1243, column: 4, scope: !12247)
!12251 = !DILocation(line: 1245, column: 4, scope: !12247)
!12252 = !DILocation(line: 1245, column: 10, scope: !12247)
!12253 = !DILocation(line: 1245, column: 17, scope: !12247)
!12254 = !DILocation(line: 1246, column: 4, scope: !12247)
!12255 = !DILocation(line: 1248, column: 18, scope: !12247)
!12256 = !DILocation(line: 1248, column: 4, scope: !12247)
!12257 = !DILocation(line: 1249, column: 4, scope: !12247)
!12258 = !DILocation(line: 1253, column: 11, scope: !12218)
!12259 = !DILocation(line: 1253, column: 15, scope: !12218)
!12260 = !DILocation(line: 1253, column: 3, scope: !12218)
!12261 = !DILocation(line: 1255, column: 4, scope: !12262)
!12262 = distinct !DILexicalBlock(scope: !12218, file: !3, line: 1253, column: 37)
!12263 = !DILocation(line: 1255, column: 10, scope: !12262)
!12264 = !DILocation(line: 1255, column: 22, scope: !12262)
!12265 = !DILocation(line: 1256, column: 4, scope: !12262)
!12266 = !DILocation(line: 1258, column: 4, scope: !12262)
!12267 = !DILocation(line: 1258, column: 10, scope: !12262)
!12268 = !DILocation(line: 1258, column: 22, scope: !12262)
!12269 = !DILocation(line: 1259, column: 4, scope: !12262)
!12270 = !DILocation(line: 1261, column: 4, scope: !12262)
!12271 = !DILocation(line: 1261, column: 10, scope: !12262)
!12272 = !DILocation(line: 1261, column: 22, scope: !12262)
!12273 = !DILocation(line: 1262, column: 4, scope: !12262)
!12274 = !DILocation(line: 1264, column: 4, scope: !12262)
!12275 = !DILocation(line: 1264, column: 10, scope: !12262)
!12276 = !DILocation(line: 1264, column: 22, scope: !12262)
!12277 = !DILocation(line: 1265, column: 3, scope: !12262)
!12278 = !DILocation(line: 1266, column: 3, scope: !12218)
!12279 = !DILocation(line: 1266, column: 9, scope: !12218)
!12280 = !DILocation(line: 1266, column: 15, scope: !12218)
!12281 = !DILocation(line: 1267, column: 2, scope: !12218)
!12282 = !DILocation(line: 1269, column: 24, scope: !12283)
!12283 = distinct !DILexicalBlock(scope: !12179, file: !3, line: 1269, column: 6)
!12284 = !DILocation(line: 1269, column: 7, scope: !12283)
!12285 = !DILocation(line: 1269, column: 6, scope: !12179)
!12286 = !DILocation(line: 1270, column: 19, scope: !12283)
!12287 = !DILocation(line: 1270, column: 3, scope: !12283)
!12288 = !DILocation(line: 1271, column: 1, scope: !12179)
!12289 = distinct !DISubprogram(name: "__xm_phy_read", scope: !3, file: !3, line: 1085, type: !11607, scopeLine: 1086, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!12290 = !DILocalVariable(name: "hw", arg: 1, scope: !12289, file: !3, line: 1085, type: !8794)
!12291 = !DILocation(line: 1085, column: 42, scope: !12289)
!12292 = !DILocalVariable(name: "port", arg: 2, scope: !12289, file: !3, line: 1085, type: !32)
!12293 = !DILocation(line: 1085, column: 50, scope: !12289)
!12294 = !DILocalVariable(name: "reg", arg: 3, scope: !12289, file: !3, line: 1085, type: !581)
!12295 = !DILocation(line: 1085, column: 60, scope: !12289)
!12296 = !DILocalVariable(name: "val", arg: 4, scope: !12289, file: !3, line: 1085, type: !11609)
!12297 = !DILocation(line: 1085, column: 70, scope: !12289)
!12298 = !DILocalVariable(name: "i", scope: !12289, file: !3, line: 1087, type: !32)
!12299 = !DILocation(line: 1087, column: 6, scope: !12289)
!12300 = !DILocation(line: 1089, column: 13, scope: !12289)
!12301 = !DILocation(line: 1089, column: 17, scope: !12289)
!12302 = !DILocation(line: 1089, column: 36, scope: !12289)
!12303 = !DILocation(line: 1089, column: 42, scope: !12289)
!12304 = !DILocation(line: 1089, column: 46, scope: !12289)
!12305 = !DILocation(line: 1089, column: 40, scope: !12289)
!12306 = !DILocation(line: 1089, column: 2, scope: !12289)
!12307 = !DILocation(line: 1090, column: 19, scope: !12289)
!12308 = !DILocation(line: 1090, column: 23, scope: !12289)
!12309 = !DILocation(line: 1090, column: 9, scope: !12289)
!12310 = !DILocation(line: 1090, column: 3, scope: !12289)
!12311 = !DILocation(line: 1090, column: 7, scope: !12289)
!12312 = !DILocation(line: 1092, column: 6, scope: !12313)
!12313 = distinct !DILexicalBlock(scope: !12289, file: !3, line: 1092, column: 6)
!12314 = !DILocation(line: 1092, column: 10, scope: !12313)
!12315 = !DILocation(line: 1092, column: 19, scope: !12313)
!12316 = !DILocation(line: 1092, column: 6, scope: !12289)
!12317 = !DILocation(line: 1093, column: 3, scope: !12313)
!12318 = !DILocation(line: 1095, column: 9, scope: !12319)
!12319 = distinct !DILexicalBlock(scope: !12289, file: !3, line: 1095, column: 2)
!12320 = !DILocation(line: 1095, column: 7, scope: !12319)
!12321 = !DILocation(line: 1095, column: 14, scope: !12322)
!12322 = distinct !DILexicalBlock(scope: !12319, file: !3, line: 1095, column: 2)
!12323 = !DILocation(line: 1095, column: 16, scope: !12322)
!12324 = !DILocation(line: 1095, column: 2, scope: !12319)
!12325 = !DILocation(line: 1096, column: 17, scope: !12326)
!12326 = distinct !DILexicalBlock(scope: !12327, file: !3, line: 1096, column: 7)
!12327 = distinct !DILexicalBlock(scope: !12322, file: !3, line: 1095, column: 36)
!12328 = !DILocation(line: 1096, column: 21, scope: !12326)
!12329 = !DILocation(line: 1096, column: 7, scope: !12326)
!12330 = !DILocation(line: 1096, column: 39, scope: !12326)
!12331 = !DILocation(line: 1096, column: 7, scope: !12327)
!12332 = !DILocation(line: 1097, column: 4, scope: !12326)
!12333 = !DILocation(line: 1098, column: 3, scope: !12334)
!12334 = distinct !DILexicalBlock(scope: !12335, file: !3, line: 1098, column: 3)
!12335 = distinct !DILexicalBlock(scope: !12336, file: !3, line: 1098, column: 3)
!12336 = distinct !DILexicalBlock(scope: !12337, file: !3, line: 1098, column: 3)
!12337 = distinct !DILexicalBlock(scope: !12327, file: !3, line: 1098, column: 3)
!12338 = !DILocation(line: 1099, column: 2, scope: !12327)
!12339 = !DILocation(line: 1095, column: 32, scope: !12322)
!12340 = !DILocation(line: 1095, column: 2, scope: !12322)
!12341 = distinct !{!12341, !12324, !12342}
!12342 = !DILocation(line: 1099, column: 2, scope: !12319)
!12343 = !DILocation(line: 1101, column: 2, scope: !12289)
!12344 = !DILabel(scope: !12289, name: "ready", file: !3, line: 1102)
!12345 = !DILocation(line: 1102, column: 2, scope: !12289)
!12346 = !DILocation(line: 1103, column: 19, scope: !12289)
!12347 = !DILocation(line: 1103, column: 23, scope: !12289)
!12348 = !DILocation(line: 1103, column: 9, scope: !12289)
!12349 = !DILocation(line: 1103, column: 3, scope: !12289)
!12350 = !DILocation(line: 1103, column: 7, scope: !12289)
!12351 = !DILocation(line: 1105, column: 2, scope: !12289)
!12352 = !DILocation(line: 1106, column: 1, scope: !12289)
!12353 = distinct !DISubprogram(name: "xm_write16", scope: !7053, file: !7053, line: 2530, type: !11663, scopeLine: 2531, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!12354 = !DILocalVariable(name: "hw", arg: 1, scope: !12353, file: !7053, line: 2530, type: !9407)
!12355 = !DILocation(line: 2530, column: 53, scope: !12353)
!12356 = !DILocalVariable(name: "port", arg: 2, scope: !12353, file: !7053, line: 2530, type: !32)
!12357 = !DILocation(line: 2530, column: 61, scope: !12353)
!12358 = !DILocalVariable(name: "r", arg: 3, scope: !12353, file: !7053, line: 2530, type: !32)
!12359 = !DILocation(line: 2530, column: 71, scope: !12353)
!12360 = !DILocalVariable(name: "v", arg: 4, scope: !12353, file: !7053, line: 2530, type: !581)
!12361 = !DILocation(line: 2530, column: 78, scope: !12353)
!12362 = !DILocation(line: 2532, column: 15, scope: !12353)
!12363 = !DILocation(line: 2532, column: 19, scope: !12353)
!12364 = !DILocation(line: 2532, column: 40, scope: !12353)
!12365 = !DILocation(line: 2532, column: 2, scope: !12353)
!12366 = !DILocation(line: 2533, column: 1, scope: !12353)
!12367 = distinct !DISubprogram(name: "xm_read16", scope: !7053, file: !7053, line: 2519, type: !11679, scopeLine: 2520, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!12368 = !DILocalVariable(name: "hw", arg: 1, scope: !12367, file: !7053, line: 2519, type: !9407)
!12369 = !DILocation(line: 2519, column: 51, scope: !12367)
!12370 = !DILocalVariable(name: "port", arg: 2, scope: !12367, file: !7053, line: 2519, type: !32)
!12371 = !DILocation(line: 2519, column: 59, scope: !12367)
!12372 = !DILocalVariable(name: "reg", arg: 3, scope: !12367, file: !7053, line: 2519, type: !32)
!12373 = !DILocation(line: 2519, column: 69, scope: !12367)
!12374 = !DILocation(line: 2521, column: 21, scope: !12367)
!12375 = !DILocation(line: 2521, column: 25, scope: !12367)
!12376 = !DILocation(line: 2521, column: 9, scope: !12367)
!12377 = !DILocation(line: 2521, column: 2, scope: !12367)
!12378 = distinct !DISubprogram(name: "xm_link_down", scope: !3, file: !3, line: 1074, type: !9399, scopeLine: 1075, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!12379 = !DILocalVariable(name: "hw", arg: 1, scope: !12378, file: !3, line: 1074, type: !8794)
!12380 = !DILocation(line: 1074, column: 42, scope: !12378)
!12381 = !DILocalVariable(name: "port", arg: 2, scope: !12378, file: !3, line: 1074, type: !32)
!12382 = !DILocation(line: 1074, column: 50, scope: !12378)
!12383 = !DILocalVariable(name: "dev", scope: !12378, file: !3, line: 1076, type: !290)
!12384 = !DILocation(line: 1076, column: 21, scope: !12378)
!12385 = !DILocation(line: 1076, column: 27, scope: !12378)
!12386 = !DILocation(line: 1076, column: 31, scope: !12378)
!12387 = !DILocation(line: 1076, column: 35, scope: !12378)
!12388 = !DILocalVariable(name: "skge", scope: !12378, file: !3, line: 1077, type: !9172)
!12389 = !DILocation(line: 1077, column: 20, scope: !12378)
!12390 = !DILocation(line: 1077, column: 39, scope: !12378)
!12391 = !DILocation(line: 1077, column: 27, scope: !12378)
!12392 = !DILocation(line: 1079, column: 13, scope: !12378)
!12393 = !DILocation(line: 1079, column: 17, scope: !12378)
!12394 = !DILocation(line: 1079, column: 2, scope: !12378)
!12395 = !DILocation(line: 1081, column: 23, scope: !12396)
!12396 = distinct !DILexicalBlock(scope: !12378, file: !3, line: 1081, column: 6)
!12397 = !DILocation(line: 1081, column: 6, scope: !12396)
!12398 = !DILocation(line: 1081, column: 6, scope: !12378)
!12399 = !DILocation(line: 1082, column: 18, scope: !12396)
!12400 = !DILocation(line: 1082, column: 3, scope: !12396)
!12401 = !DILocation(line: 1083, column: 1, scope: !12378)
!12402 = distinct !DISubprogram(name: "netif_carrier_ok", scope: !31, file: !31, line: 3976, type: !11129, scopeLine: 3977, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!12403 = !DILocalVariable(name: "dev", arg: 1, scope: !12402, file: !31, line: 3976, type: !773)
!12404 = !DILocation(line: 3976, column: 62, scope: !12402)
!12405 = !DILocation(line: 3978, column: 44, scope: !12402)
!12406 = !DILocation(line: 3978, column: 49, scope: !12402)
!12407 = !DILocation(line: 3978, column: 10, scope: !12402)
!12408 = !DILocation(line: 3978, column: 9, scope: !12402)
!12409 = !DILocation(line: 3978, column: 2, scope: !12402)
!12410 = distinct !DISubprogram(name: "genesis_link_up", scope: !3, file: !3, line: 1780, type: !9434, scopeLine: 1781, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!12411 = !DILocalVariable(name: "skge", arg: 1, scope: !12410, file: !3, line: 1780, type: !9172)
!12412 = !DILocation(line: 1780, column: 47, scope: !12410)
!12413 = !DILocalVariable(name: "hw", scope: !12410, file: !3, line: 1782, type: !8794)
!12414 = !DILocation(line: 1782, column: 18, scope: !12410)
!12415 = !DILocation(line: 1782, column: 23, scope: !12410)
!12416 = !DILocation(line: 1782, column: 29, scope: !12410)
!12417 = !DILocalVariable(name: "port", scope: !12410, file: !3, line: 1783, type: !32)
!12418 = !DILocation(line: 1783, column: 6, scope: !12410)
!12419 = !DILocation(line: 1783, column: 13, scope: !12410)
!12420 = !DILocation(line: 1783, column: 19, scope: !12410)
!12421 = !DILocalVariable(name: "cmd", scope: !12410, file: !3, line: 1784, type: !581)
!12422 = !DILocation(line: 1784, column: 6, scope: !12410)
!12423 = !DILocalVariable(name: "msk", scope: !12410, file: !3, line: 1784, type: !581)
!12424 = !DILocation(line: 1784, column: 11, scope: !12410)
!12425 = !DILocalVariable(name: "mode", scope: !12410, file: !3, line: 1785, type: !987)
!12426 = !DILocation(line: 1785, column: 6, scope: !12410)
!12427 = !DILocation(line: 1787, column: 18, scope: !12410)
!12428 = !DILocation(line: 1787, column: 22, scope: !12410)
!12429 = !DILocation(line: 1787, column: 8, scope: !12410)
!12430 = !DILocation(line: 1787, column: 6, scope: !12410)
!12431 = !DILocation(line: 1793, column: 6, scope: !12432)
!12432 = distinct !DILexicalBlock(scope: !12410, file: !3, line: 1793, column: 6)
!12433 = !DILocation(line: 1793, column: 12, scope: !12432)
!12434 = !DILocation(line: 1793, column: 24, scope: !12432)
!12435 = !DILocation(line: 1793, column: 42, scope: !12432)
!12436 = !DILocation(line: 1794, column: 6, scope: !12432)
!12437 = !DILocation(line: 1794, column: 12, scope: !12432)
!12438 = !DILocation(line: 1794, column: 24, scope: !12432)
!12439 = !DILocation(line: 1793, column: 6, scope: !12410)
!12440 = !DILocation(line: 1796, column: 7, scope: !12432)
!12441 = !DILocation(line: 1796, column: 3, scope: !12432)
!12442 = !DILocation(line: 1799, column: 7, scope: !12432)
!12443 = !DILocation(line: 1801, column: 13, scope: !12410)
!12444 = !DILocation(line: 1801, column: 17, scope: !12410)
!12445 = !DILocation(line: 1801, column: 35, scope: !12410)
!12446 = !DILocation(line: 1801, column: 2, scope: !12410)
!12447 = !DILocation(line: 1803, column: 19, scope: !12410)
!12448 = !DILocation(line: 1803, column: 23, scope: !12410)
!12449 = !DILocation(line: 1803, column: 9, scope: !12410)
!12450 = !DILocation(line: 1803, column: 7, scope: !12410)
!12451 = !DILocation(line: 1804, column: 6, scope: !12452)
!12452 = distinct !DILexicalBlock(scope: !12410, file: !3, line: 1804, column: 6)
!12453 = !DILocation(line: 1804, column: 12, scope: !12452)
!12454 = !DILocation(line: 1804, column: 24, scope: !12452)
!12455 = !DILocation(line: 1804, column: 47, scope: !12452)
!12456 = !DILocation(line: 1805, column: 6, scope: !12452)
!12457 = !DILocation(line: 1805, column: 12, scope: !12452)
!12458 = !DILocation(line: 1805, column: 24, scope: !12452)
!12459 = !DILocation(line: 1804, column: 6, scope: !12410)
!12460 = !DILocation(line: 1817, column: 14, scope: !12461)
!12461 = distinct !DILexicalBlock(scope: !12452, file: !3, line: 1805, column: 47)
!12462 = !DILocation(line: 1817, column: 18, scope: !12461)
!12463 = !DILocation(line: 1817, column: 3, scope: !12461)
!12464 = !DILocation(line: 1819, column: 8, scope: !12461)
!12465 = !DILocation(line: 1820, column: 16, scope: !12461)
!12466 = !DILocation(line: 1820, column: 20, scope: !12461)
!12467 = !DILocation(line: 1820, column: 3, scope: !12461)
!12468 = !DILocation(line: 1821, column: 2, scope: !12461)
!12469 = !DILocation(line: 1827, column: 8, scope: !12470)
!12470 = distinct !DILexicalBlock(scope: !12452, file: !3, line: 1821, column: 9)
!12471 = !DILocation(line: 1829, column: 16, scope: !12470)
!12472 = !DILocation(line: 1829, column: 20, scope: !12470)
!12473 = !DILocation(line: 1829, column: 3, scope: !12470)
!12474 = !DILocation(line: 1832, column: 13, scope: !12410)
!12475 = !DILocation(line: 1832, column: 17, scope: !12410)
!12476 = !DILocation(line: 1832, column: 32, scope: !12410)
!12477 = !DILocation(line: 1832, column: 2, scope: !12410)
!12478 = !DILocation(line: 1835, column: 18, scope: !12410)
!12479 = !DILocation(line: 1835, column: 22, scope: !12410)
!12480 = !DILocation(line: 1835, column: 8, scope: !12410)
!12481 = !DILocation(line: 1835, column: 6, scope: !12410)
!12482 = !DILocation(line: 1836, column: 6, scope: !12410)
!12483 = !DILocation(line: 1837, column: 13, scope: !12410)
!12484 = !DILocation(line: 1837, column: 17, scope: !12410)
!12485 = !DILocation(line: 1837, column: 32, scope: !12410)
!12486 = !DILocation(line: 1837, column: 2, scope: !12410)
!12487 = !DILocation(line: 1839, column: 12, scope: !12410)
!12488 = !DILocation(line: 1839, column: 16, scope: !12410)
!12489 = !DILocation(line: 1839, column: 2, scope: !12410)
!12490 = !DILocation(line: 1842, column: 18, scope: !12410)
!12491 = !DILocation(line: 1842, column: 22, scope: !12410)
!12492 = !DILocation(line: 1842, column: 8, scope: !12410)
!12493 = !DILocation(line: 1842, column: 6, scope: !12410)
!12494 = !DILocation(line: 1843, column: 6, scope: !12495)
!12495 = distinct !DILexicalBlock(scope: !12410, file: !3, line: 1843, column: 6)
!12496 = !DILocation(line: 1843, column: 10, scope: !12495)
!12497 = !DILocation(line: 1843, column: 19, scope: !12495)
!12498 = !DILocation(line: 1843, column: 34, scope: !12495)
!12499 = !DILocation(line: 1843, column: 37, scope: !12495)
!12500 = !DILocation(line: 1843, column: 43, scope: !12495)
!12501 = !DILocation(line: 1843, column: 50, scope: !12495)
!12502 = !DILocation(line: 1843, column: 6, scope: !12410)
!12503 = !DILocation(line: 1844, column: 7, scope: !12495)
!12504 = !DILocation(line: 1844, column: 3, scope: !12495)
!12505 = !DILocation(line: 1850, column: 6, scope: !12506)
!12506 = distinct !DILexicalBlock(scope: !12410, file: !3, line: 1850, column: 6)
!12507 = !DILocation(line: 1850, column: 10, scope: !12506)
!12508 = !DILocation(line: 1850, column: 19, scope: !12506)
!12509 = !DILocation(line: 1850, column: 6, scope: !12410)
!12510 = !DILocation(line: 1851, column: 16, scope: !12511)
!12511 = distinct !DILexicalBlock(scope: !12506, file: !3, line: 1850, column: 35)
!12512 = !DILocation(line: 1851, column: 20, scope: !12511)
!12513 = !DILocation(line: 1852, column: 21, scope: !12511)
!12514 = !DILocation(line: 1852, column: 25, scope: !12511)
!12515 = !DILocation(line: 1852, column: 9, scope: !12511)
!12516 = !DILocation(line: 1853, column: 9, scope: !12511)
!12517 = !DILocation(line: 1851, column: 3, scope: !12511)
!12518 = !DILocation(line: 1854, column: 16, scope: !12511)
!12519 = !DILocation(line: 1854, column: 20, scope: !12511)
!12520 = !DILocation(line: 1854, column: 3, scope: !12511)
!12521 = !DILocation(line: 1855, column: 2, scope: !12511)
!12522 = !DILocation(line: 1858, column: 13, scope: !12410)
!12523 = !DILocation(line: 1858, column: 17, scope: !12410)
!12524 = !DILocation(line: 1859, column: 4, scope: !12410)
!12525 = !DILocation(line: 1859, column: 8, scope: !12410)
!12526 = !DILocation(line: 1859, column: 24, scope: !12410)
!12527 = !DILocation(line: 1858, column: 2, scope: !12410)
!12528 = !DILocation(line: 1860, column: 15, scope: !12410)
!12529 = !DILocation(line: 1860, column: 2, scope: !12410)
!12530 = !DILocation(line: 1861, column: 1, scope: !12410)
!12531 = distinct !DISubprogram(name: "xm_read32", scope: !7053, file: !7053, line: 2511, type: !12532, scopeLine: 2512, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!12532 = !DISubroutineType(types: !12533)
!12533 = !{!987, !9407, !32, !32}
!12534 = !DILocalVariable(name: "hw", arg: 1, scope: !12531, file: !7053, line: 2511, type: !9407)
!12535 = !DILocation(line: 2511, column: 51, scope: !12531)
!12536 = !DILocalVariable(name: "port", arg: 2, scope: !12531, file: !7053, line: 2511, type: !32)
!12537 = !DILocation(line: 2511, column: 59, scope: !12531)
!12538 = !DILocalVariable(name: "reg", arg: 3, scope: !12531, file: !7053, line: 2511, type: !32)
!12539 = !DILocation(line: 2511, column: 69, scope: !12531)
!12540 = !DILocalVariable(name: "v", scope: !12531, file: !7053, line: 2513, type: !987)
!12541 = !DILocation(line: 2513, column: 6, scope: !12531)
!12542 = !DILocation(line: 2514, column: 18, scope: !12531)
!12543 = !DILocation(line: 2514, column: 22, scope: !12531)
!12544 = !DILocation(line: 2514, column: 6, scope: !12531)
!12545 = !DILocation(line: 2514, column: 4, scope: !12531)
!12546 = !DILocation(line: 2515, column: 24, scope: !12531)
!12547 = !DILocation(line: 2515, column: 28, scope: !12531)
!12548 = !DILocation(line: 2515, column: 12, scope: !12531)
!12549 = !DILocation(line: 2515, column: 7, scope: !12531)
!12550 = !DILocation(line: 2515, column: 54, scope: !12531)
!12551 = !DILocation(line: 2515, column: 4, scope: !12531)
!12552 = !DILocation(line: 2516, column: 9, scope: !12531)
!12553 = !DILocation(line: 2516, column: 2, scope: !12531)
!12554 = distinct !DISubprogram(name: "xm_write32", scope: !7053, file: !7053, line: 2524, type: !12555, scopeLine: 2525, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!12555 = !DISubroutineType(types: !12556)
!12556 = !{null, !9407, !32, !32, !987}
!12557 = !DILocalVariable(name: "hw", arg: 1, scope: !12554, file: !7053, line: 2524, type: !9407)
!12558 = !DILocation(line: 2524, column: 53, scope: !12554)
!12559 = !DILocalVariable(name: "port", arg: 2, scope: !12554, file: !7053, line: 2524, type: !32)
!12560 = !DILocation(line: 2524, column: 61, scope: !12554)
!12561 = !DILocalVariable(name: "r", arg: 3, scope: !12554, file: !7053, line: 2524, type: !32)
!12562 = !DILocation(line: 2524, column: 71, scope: !12554)
!12563 = !DILocalVariable(name: "v", arg: 4, scope: !12554, file: !7053, line: 2524, type: !987)
!12564 = !DILocation(line: 2524, column: 78, scope: !12554)
!12565 = !DILocation(line: 2526, column: 15, scope: !12554)
!12566 = !DILocation(line: 2526, column: 19, scope: !12554)
!12567 = !DILocation(line: 2526, column: 40, scope: !12554)
!12568 = !DILocation(line: 2526, column: 42, scope: !12554)
!12569 = !DILocation(line: 2526, column: 2, scope: !12554)
!12570 = !DILocation(line: 2527, column: 15, scope: !12554)
!12571 = !DILocation(line: 2527, column: 19, scope: !12554)
!12572 = !DILocation(line: 2527, column: 42, scope: !12554)
!12573 = !DILocation(line: 2527, column: 44, scope: !12554)
!12574 = !DILocation(line: 2527, column: 2, scope: !12554)
!12575 = !DILocation(line: 2528, column: 1, scope: !12554)
!12576 = distinct !DISubprogram(name: "arch_local_irq_disable", scope: !12577, file: !12577, line: 656, type: !3808, scopeLine: 657, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!12577 = !DIFile(filename: "./arch/x86/include/asm/paravirt.h", directory: "/home/lizy2001/genbc/linux")
!12578 = !DILocalVariable(name: "__edi", scope: !12579, file: !12577, line: 658, type: !312)
!12579 = distinct !DILexicalBlock(scope: !12576, file: !12577, line: 658, column: 2)
!12580 = !DILocation(line: 658, column: 2, scope: !12579)
!12581 = !DILocalVariable(name: "__esi", scope: !12579, file: !12577, line: 658, type: !312)
!12582 = !DILocalVariable(name: "__edx", scope: !12579, file: !12577, line: 658, type: !312)
!12583 = !DILocalVariable(name: "__ecx", scope: !12579, file: !12577, line: 658, type: !312)
!12584 = !DILocalVariable(name: "__eax", scope: !12579, file: !12577, line: 658, type: !312)
!12585 = !{i32 -2145730926, i32 -2145730194, i32 -2145729960, i32 -2145729909, i32 -2145729881, i32 -2145729856, i32 -2145730172, i32 -2145730159, i32 -2145729721, i32 -2145729602, i32 -2145730067, i32 -2145730040, i32 -2145730012, i32 -2145729982}
!12586 = !DILocation(line: 659, column: 1, scope: !12576)
!12587 = distinct !DISubprogram(name: "writel", scope: !11705, file: !11705, line: 67, type: !12588, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!12588 = !DISubroutineType(types: !12589)
!12589 = !{null, !7, !11715}
!12590 = !DILocalVariable(name: "val", arg: 1, scope: !12587, file: !11705, line: 67, type: !7)
!12591 = !DILocation(line: 67, column: 1, scope: !12587)
!12592 = !DILocalVariable(name: "addr", arg: 2, scope: !12587, file: !11705, line: 67, type: !11715)
!12593 = !{i32 -2141433933}
!12594 = distinct !DISubprogram(name: "readl", scope: !11705, file: !11705, line: 59, type: !12595, scopeLine: 59, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!12595 = !DISubroutineType(types: !12596)
!12596 = !{!7, !11416}
!12597 = !DILocalVariable(name: "addr", arg: 1, scope: !12594, file: !11705, line: 59, type: !11416)
!12598 = !DILocation(line: 59, column: 1, scope: !12594)
!12599 = !DILocalVariable(name: "ret", scope: !12594, file: !11705, line: 59, type: !7)
!12600 = !{i32 -2141436326}
!12601 = distinct !DISubprogram(name: "arch_local_irq_enable", scope: !12577, file: !12577, line: 661, type: !3808, scopeLine: 662, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!12602 = !DILocalVariable(name: "__edi", scope: !12603, file: !12577, line: 663, type: !312)
!12603 = distinct !DILexicalBlock(scope: !12601, file: !12577, line: 663, column: 2)
!12604 = !DILocation(line: 663, column: 2, scope: !12603)
!12605 = !DILocalVariable(name: "__esi", scope: !12603, file: !12577, line: 663, type: !312)
!12606 = !DILocalVariable(name: "__edx", scope: !12603, file: !12577, line: 663, type: !312)
!12607 = !DILocalVariable(name: "__ecx", scope: !12603, file: !12577, line: 663, type: !312)
!12608 = !DILocalVariable(name: "__eax", scope: !12603, file: !12577, line: 663, type: !312)
!12609 = !{i32 -2145728342, i32 -2145727612, i32 -2145727378, i32 -2145727327, i32 -2145727299, i32 -2145727274, i32 -2145727590, i32 -2145727577, i32 -2145727139, i32 -2145727020, i32 -2145727485, i32 -2145727458, i32 -2145727430, i32 -2145727400}
!12610 = !DILocation(line: 664, column: 1, scope: !12601)
!12611 = distinct !DISubprogram(name: "skge_read8", scope: !7053, file: !7053, line: 2486, type: !12612, scopeLine: 2487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!12612 = !DISubroutineType(types: !12613)
!12613 = !{!794, !9407, !32}
!12614 = !DILocalVariable(name: "hw", arg: 1, scope: !12611, file: !7053, line: 2486, type: !9407)
!12615 = !DILocation(line: 2486, column: 51, scope: !12611)
!12616 = !DILocalVariable(name: "reg", arg: 2, scope: !12611, file: !7053, line: 2486, type: !32)
!12617 = !DILocation(line: 2486, column: 59, scope: !12611)
!12618 = !DILocation(line: 2488, column: 15, scope: !12611)
!12619 = !DILocation(line: 2488, column: 19, scope: !12611)
!12620 = !DILocation(line: 2488, column: 26, scope: !12611)
!12621 = !DILocation(line: 2488, column: 24, scope: !12611)
!12622 = !DILocation(line: 2488, column: 9, scope: !12611)
!12623 = !DILocation(line: 2488, column: 2, scope: !12611)
!12624 = distinct !DISubprogram(name: "genesis_init", scope: !3, file: !3, line: 1138, type: !12625, scopeLine: 1139, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!12625 = !DISubroutineType(types: !12626)
!12626 = !{null, !8794}
!12627 = !DILocalVariable(name: "hw", arg: 1, scope: !12624, file: !3, line: 1138, type: !8794)
!12628 = !DILocation(line: 1138, column: 42, scope: !12624)
!12629 = !DILocation(line: 1141, column: 15, scope: !12624)
!12630 = !DILocation(line: 1141, column: 2, scope: !12624)
!12631 = !DILocation(line: 1142, column: 14, scope: !12624)
!12632 = !DILocation(line: 1142, column: 2, scope: !12624)
!12633 = !DILocation(line: 1145, column: 15, scope: !12624)
!12634 = !DILocation(line: 1145, column: 2, scope: !12624)
!12635 = !DILocation(line: 1148, column: 14, scope: !12624)
!12636 = !DILocation(line: 1148, column: 2, scope: !12624)
!12637 = !DILocation(line: 1149, column: 14, scope: !12624)
!12638 = !DILocation(line: 1149, column: 2, scope: !12624)
!12639 = !DILocation(line: 1150, column: 14, scope: !12624)
!12640 = !DILocation(line: 1150, column: 2, scope: !12624)
!12641 = !DILocation(line: 1151, column: 14, scope: !12624)
!12642 = !DILocation(line: 1151, column: 2, scope: !12624)
!12643 = !DILocation(line: 1153, column: 14, scope: !12624)
!12644 = !DILocation(line: 1153, column: 2, scope: !12624)
!12645 = !DILocation(line: 1154, column: 14, scope: !12624)
!12646 = !DILocation(line: 1154, column: 2, scope: !12624)
!12647 = !DILocation(line: 1155, column: 14, scope: !12624)
!12648 = !DILocation(line: 1155, column: 2, scope: !12624)
!12649 = !DILocation(line: 1156, column: 14, scope: !12624)
!12650 = !DILocation(line: 1156, column: 2, scope: !12624)
!12651 = !DILocation(line: 1159, column: 15, scope: !12624)
!12652 = !DILocation(line: 1159, column: 2, scope: !12624)
!12653 = !DILocation(line: 1160, column: 15, scope: !12624)
!12654 = !DILocation(line: 1160, column: 2, scope: !12624)
!12655 = !DILocation(line: 1161, column: 15, scope: !12624)
!12656 = !DILocation(line: 1161, column: 2, scope: !12624)
!12657 = !DILocation(line: 1162, column: 15, scope: !12624)
!12658 = !DILocation(line: 1162, column: 2, scope: !12624)
!12659 = !DILocation(line: 1163, column: 15, scope: !12624)
!12660 = !DILocation(line: 1163, column: 2, scope: !12624)
!12661 = !DILocation(line: 1164, column: 1, scope: !12624)
!12662 = distinct !DISubprogram(name: "skge_usecs2clk", scope: !3, file: !3, line: 612, type: !12663, scopeLine: 613, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!12663 = !DISubroutineType(types: !12664)
!12664 = !{!987, !9407, !987}
!12665 = !DILocalVariable(name: "hw", arg: 1, scope: !12662, file: !3, line: 612, type: !9407)
!12666 = !DILocation(line: 612, column: 56, scope: !12662)
!12667 = !DILocalVariable(name: "usec", arg: 2, scope: !12662, file: !3, line: 612, type: !987)
!12668 = !DILocation(line: 612, column: 64, scope: !12662)
!12669 = !DILocation(line: 614, column: 15, scope: !12662)
!12670 = !DILocation(line: 614, column: 9, scope: !12662)
!12671 = !DILocation(line: 614, column: 21, scope: !12662)
!12672 = !DILocation(line: 614, column: 19, scope: !12662)
!12673 = !DILocation(line: 614, column: 26, scope: !12662)
!12674 = !DILocation(line: 614, column: 2, scope: !12662)
!12675 = !DILocalVariable(name: "hw", arg: 1, scope: !9398, file: !3, line: 1166, type: !8794)
!12676 = !DILocation(line: 1166, column: 43, scope: !9398)
!12677 = !DILocalVariable(name: "port", arg: 2, scope: !9398, file: !3, line: 1166, type: !32)
!12678 = !DILocation(line: 1166, column: 51, scope: !9398)
!12679 = !DILocalVariable(name: "reg", scope: !9398, file: !3, line: 1169, type: !987)
!12680 = !DILocation(line: 1169, column: 6, scope: !9398)
!12681 = !DILocation(line: 1171, column: 14, scope: !9398)
!12682 = !DILocation(line: 1171, column: 18, scope: !9398)
!12683 = !DILocation(line: 1171, column: 2, scope: !9398)
!12684 = !DILocation(line: 1174, column: 13, scope: !9398)
!12685 = !DILocation(line: 1174, column: 17, scope: !9398)
!12686 = !DILocation(line: 1174, column: 2, scope: !9398)
!12687 = !DILocation(line: 1175, column: 13, scope: !9398)
!12688 = !DILocation(line: 1175, column: 17, scope: !9398)
!12689 = !DILocation(line: 1175, column: 2, scope: !9398)
!12690 = !DILocation(line: 1176, column: 13, scope: !9398)
!12691 = !DILocation(line: 1176, column: 17, scope: !9398)
!12692 = !DILocation(line: 1176, column: 2, scope: !9398)
!12693 = !DILocation(line: 1177, column: 13, scope: !9398)
!12694 = !DILocation(line: 1177, column: 17, scope: !9398)
!12695 = !DILocation(line: 1177, column: 2, scope: !9398)
!12696 = !DILocation(line: 1178, column: 13, scope: !9398)
!12697 = !DILocation(line: 1178, column: 17, scope: !9398)
!12698 = !DILocation(line: 1178, column: 2, scope: !9398)
!12699 = !DILocation(line: 1181, column: 6, scope: !12700)
!12700 = distinct !DILexicalBlock(scope: !9398, file: !3, line: 1181, column: 6)
!12701 = !DILocation(line: 1181, column: 10, scope: !12700)
!12702 = !DILocation(line: 1181, column: 19, scope: !12700)
!12703 = !DILocation(line: 1181, column: 6, scope: !9398)
!12704 = !DILocation(line: 1182, column: 14, scope: !12700)
!12705 = !DILocation(line: 1182, column: 18, scope: !12700)
!12706 = !DILocation(line: 1182, column: 3, scope: !12700)
!12707 = !DILocation(line: 1184, column: 13, scope: !9398)
!12708 = !DILocation(line: 1184, column: 17, scope: !9398)
!12709 = !DILocation(line: 1184, column: 2, scope: !9398)
!12710 = !DILocation(line: 1187, column: 18, scope: !9398)
!12711 = !DILocation(line: 1187, column: 22, scope: !9398)
!12712 = !DILocation(line: 1187, column: 8, scope: !9398)
!12713 = !DILocation(line: 1187, column: 6, scope: !9398)
!12714 = !DILocation(line: 1188, column: 13, scope: !9398)
!12715 = !DILocation(line: 1188, column: 17, scope: !9398)
!12716 = !DILocation(line: 1188, column: 32, scope: !9398)
!12717 = !DILocation(line: 1188, column: 36, scope: !9398)
!12718 = !DILocation(line: 1188, column: 2, scope: !9398)
!12719 = !DILocation(line: 1189, column: 13, scope: !9398)
!12720 = !DILocation(line: 1189, column: 17, scope: !9398)
!12721 = !DILocation(line: 1189, column: 32, scope: !9398)
!12722 = !DILocation(line: 1189, column: 36, scope: !9398)
!12723 = !DILocation(line: 1189, column: 2, scope: !9398)
!12724 = !DILocation(line: 1190, column: 1, scope: !9398)
!12725 = distinct !DISubprogram(name: "yukon_reset", scope: !3, file: !3, line: 2028, type: !9399, scopeLine: 2029, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!12726 = !DILocalVariable(name: "hw", arg: 1, scope: !12725, file: !3, line: 2028, type: !8794)
!12727 = !DILocation(line: 2028, column: 41, scope: !12725)
!12728 = !DILocalVariable(name: "port", arg: 2, scope: !12725, file: !3, line: 2028, type: !32)
!12729 = !DILocation(line: 2028, column: 49, scope: !12725)
!12730 = !DILocation(line: 2030, column: 15, scope: !12725)
!12731 = !DILocation(line: 2030, column: 19, scope: !12725)
!12732 = !DILocation(line: 2030, column: 2, scope: !12725)
!12733 = !DILocation(line: 2031, column: 14, scope: !12725)
!12734 = !DILocation(line: 2031, column: 18, scope: !12725)
!12735 = !DILocation(line: 2031, column: 2, scope: !12725)
!12736 = !DILocation(line: 2032, column: 14, scope: !12725)
!12737 = !DILocation(line: 2032, column: 18, scope: !12725)
!12738 = !DILocation(line: 2032, column: 2, scope: !12725)
!12739 = !DILocation(line: 2033, column: 14, scope: !12725)
!12740 = !DILocation(line: 2033, column: 18, scope: !12725)
!12741 = !DILocation(line: 2033, column: 2, scope: !12725)
!12742 = !DILocation(line: 2034, column: 14, scope: !12725)
!12743 = !DILocation(line: 2034, column: 18, scope: !12725)
!12744 = !DILocation(line: 2034, column: 2, scope: !12725)
!12745 = !DILocation(line: 2036, column: 14, scope: !12725)
!12746 = !DILocation(line: 2036, column: 18, scope: !12725)
!12747 = !DILocation(line: 2037, column: 16, scope: !12725)
!12748 = !DILocation(line: 2037, column: 20, scope: !12725)
!12749 = !DILocation(line: 2037, column: 5, scope: !12725)
!12750 = !DILocation(line: 2038, column: 5, scope: !12725)
!12751 = !DILocation(line: 2038, column: 23, scope: !12725)
!12752 = !DILocation(line: 2036, column: 2, scope: !12725)
!12753 = !DILocation(line: 2039, column: 1, scope: !12725)
!12754 = distinct !DISubprogram(name: "readb", scope: !11705, file: !11705, line: 57, type: !12755, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!12755 = !DISubroutineType(types: !12756)
!12756 = !{!482, !11416}
!12757 = !DILocalVariable(name: "addr", arg: 1, scope: !12754, file: !11705, line: 57, type: !11416)
!12758 = !DILocation(line: 57, column: 1, scope: !12754)
!12759 = !DILocalVariable(name: "ret", scope: !12754, file: !11705, line: 57, type: !482)
!12760 = !{i32 -2141437157}
!12761 = distinct !DISubprogram(name: "hwkhz", scope: !3, file: !3, line: 600, type: !12762, scopeLine: 601, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!12762 = !DISubroutineType(types: !12763)
!12763 = !{!987, !9407}
!12764 = !DILocalVariable(name: "hw", arg: 1, scope: !12761, file: !3, line: 600, type: !9407)
!12765 = !DILocation(line: 600, column: 47, scope: !12761)
!12766 = !DILocation(line: 602, column: 20, scope: !12761)
!12767 = !DILocation(line: 602, column: 9, scope: !12761)
!12768 = !DILocation(line: 602, column: 2, scope: !12761)
!12769 = distinct !DISubprogram(name: "xm_outhash", scope: !7053, file: !7053, line: 2535, type: !12770, scopeLine: 2537, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!12770 = !DISubroutineType(types: !12771)
!12771 = !{null, !9407, !32, !32, !5859}
!12772 = !DILocalVariable(name: "hw", arg: 1, scope: !12769, file: !7053, line: 2535, type: !9407)
!12773 = !DILocation(line: 2535, column: 53, scope: !12769)
!12774 = !DILocalVariable(name: "port", arg: 2, scope: !12769, file: !7053, line: 2535, type: !32)
!12775 = !DILocation(line: 2535, column: 61, scope: !12769)
!12776 = !DILocalVariable(name: "reg", arg: 3, scope: !12769, file: !7053, line: 2535, type: !32)
!12777 = !DILocation(line: 2535, column: 71, scope: !12769)
!12778 = !DILocalVariable(name: "hash", arg: 4, scope: !12769, file: !7053, line: 2536, type: !5859)
!12779 = !DILocation(line: 2536, column: 18, scope: !12769)
!12780 = !DILocation(line: 2538, column: 13, scope: !12769)
!12781 = !DILocation(line: 2538, column: 17, scope: !12769)
!12782 = !DILocation(line: 2538, column: 23, scope: !12769)
!12783 = !DILocation(line: 2538, column: 35, scope: !12769)
!12784 = !DILocation(line: 2538, column: 30, scope: !12769)
!12785 = !DILocation(line: 2538, column: 51, scope: !12769)
!12786 = !DILocation(line: 2538, column: 46, scope: !12769)
!12787 = !DILocation(line: 2538, column: 59, scope: !12769)
!12788 = !DILocation(line: 2538, column: 43, scope: !12769)
!12789 = !DILocation(line: 2538, column: 2, scope: !12769)
!12790 = !DILocation(line: 2539, column: 13, scope: !12769)
!12791 = !DILocation(line: 2539, column: 17, scope: !12769)
!12792 = !DILocation(line: 2539, column: 23, scope: !12769)
!12793 = !DILocation(line: 2539, column: 26, scope: !12769)
!12794 = !DILocation(line: 2539, column: 35, scope: !12769)
!12795 = !DILocation(line: 2539, column: 30, scope: !12769)
!12796 = !DILocation(line: 2539, column: 51, scope: !12769)
!12797 = !DILocation(line: 2539, column: 46, scope: !12769)
!12798 = !DILocation(line: 2539, column: 59, scope: !12769)
!12799 = !DILocation(line: 2539, column: 43, scope: !12769)
!12800 = !DILocation(line: 2539, column: 2, scope: !12769)
!12801 = !DILocation(line: 2540, column: 13, scope: !12769)
!12802 = !DILocation(line: 2540, column: 17, scope: !12769)
!12803 = !DILocation(line: 2540, column: 23, scope: !12769)
!12804 = !DILocation(line: 2540, column: 26, scope: !12769)
!12805 = !DILocation(line: 2540, column: 35, scope: !12769)
!12806 = !DILocation(line: 2540, column: 30, scope: !12769)
!12807 = !DILocation(line: 2540, column: 51, scope: !12769)
!12808 = !DILocation(line: 2540, column: 46, scope: !12769)
!12809 = !DILocation(line: 2540, column: 59, scope: !12769)
!12810 = !DILocation(line: 2540, column: 43, scope: !12769)
!12811 = !DILocation(line: 2540, column: 2, scope: !12769)
!12812 = !DILocation(line: 2541, column: 13, scope: !12769)
!12813 = !DILocation(line: 2541, column: 17, scope: !12769)
!12814 = !DILocation(line: 2541, column: 23, scope: !12769)
!12815 = !DILocation(line: 2541, column: 26, scope: !12769)
!12816 = !DILocation(line: 2541, column: 35, scope: !12769)
!12817 = !DILocation(line: 2541, column: 30, scope: !12769)
!12818 = !DILocation(line: 2541, column: 51, scope: !12769)
!12819 = !DILocation(line: 2541, column: 46, scope: !12769)
!12820 = !DILocation(line: 2541, column: 59, scope: !12769)
!12821 = !DILocation(line: 2541, column: 43, scope: !12769)
!12822 = !DILocation(line: 2541, column: 2, scope: !12769)
!12823 = !DILocation(line: 2542, column: 1, scope: !12769)
!12824 = distinct !DISubprogram(name: "skge_poll", scope: !3, file: !3, line: 3189, type: !9187, scopeLine: 3190, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!12825 = !DILocalVariable(name: "lock", arg: 1, scope: !12826, file: !9523, line: 407, type: !2181)
!12826 = distinct !DISubprogram(name: "spin_unlock_irqrestore", scope: !9523, file: !9523, line: 407, type: !12827, scopeLine: 408, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!12827 = !DISubroutineType(types: !12828)
!12828 = !{null, !2181, !312}
!12829 = !DILocation(line: 407, column: 64, scope: !12826, inlinedAt: !12830)
!12830 = distinct !DILocation(line: 3231, column: 3, scope: !12831)
!12831 = distinct !DILexicalBlock(scope: !12832, file: !3, line: 3224, column: 65)
!12832 = distinct !DILexicalBlock(scope: !12824, file: !3, line: 3224, column: 6)
!12833 = !DILocalVariable(name: "flags", arg: 2, scope: !12826, file: !9523, line: 407, type: !312)
!12834 = !DILocation(line: 407, column: 84, scope: !12826, inlinedAt: !12830)
!12835 = !DILocation(line: 327, column: 67, scope: !9522, inlinedAt: !12836)
!12836 = distinct !DILocation(line: 3227, column: 3, scope: !12837)
!12837 = distinct !DILexicalBlock(scope: !12838, file: !3, line: 3227, column: 3)
!12838 = distinct !DILexicalBlock(scope: !12839, file: !3, line: 3227, column: 3)
!12839 = distinct !DILexicalBlock(scope: !12840, file: !3, line: 3227, column: 3)
!12840 = distinct !DILexicalBlock(scope: !12841, file: !3, line: 3227, column: 3)
!12841 = distinct !DILexicalBlock(scope: !12831, file: !3, line: 3227, column: 3)
!12842 = !DILocalVariable(name: "napi", arg: 1, scope: !12824, file: !3, line: 3189, type: !9189)
!12843 = !DILocation(line: 3189, column: 42, scope: !12824)
!12844 = !DILocalVariable(name: "budget", arg: 2, scope: !12824, file: !3, line: 3189, type: !32)
!12845 = !DILocation(line: 3189, column: 52, scope: !12824)
!12846 = !DILocalVariable(name: "skge", scope: !12824, file: !3, line: 3191, type: !9172)
!12847 = !DILocation(line: 3191, column: 20, scope: !12824)
!12848 = !DILocalVariable(name: "__mptr", scope: !12849, file: !3, line: 3191, type: !591)
!12849 = distinct !DILexicalBlock(scope: !12824, file: !3, line: 3191, column: 27)
!12850 = !DILocation(line: 3191, column: 27, scope: !12849)
!12851 = !DILocation(line: 3191, column: 27, scope: !12852)
!12852 = distinct !DILexicalBlock(scope: !12849, file: !3, line: 3191, column: 27)
!12853 = !DILocalVariable(name: "dev", scope: !12824, file: !3, line: 3192, type: !290)
!12854 = !DILocation(line: 3192, column: 21, scope: !12824)
!12855 = !DILocation(line: 3192, column: 27, scope: !12824)
!12856 = !DILocation(line: 3192, column: 33, scope: !12824)
!12857 = !DILocalVariable(name: "hw", scope: !12824, file: !3, line: 3193, type: !8794)
!12858 = !DILocation(line: 3193, column: 18, scope: !12824)
!12859 = !DILocation(line: 3193, column: 23, scope: !12824)
!12860 = !DILocation(line: 3193, column: 29, scope: !12824)
!12861 = !DILocalVariable(name: "ring", scope: !12824, file: !3, line: 3194, type: !12862)
!12862 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9207, size: 64)
!12863 = !DILocation(line: 3194, column: 20, scope: !12824)
!12864 = !DILocation(line: 3194, column: 28, scope: !12824)
!12865 = !DILocation(line: 3194, column: 34, scope: !12824)
!12866 = !DILocalVariable(name: "e", scope: !12824, file: !3, line: 3195, type: !9210)
!12867 = !DILocation(line: 3195, column: 23, scope: !12824)
!12868 = !DILocalVariable(name: "work_done", scope: !12824, file: !3, line: 3196, type: !32)
!12869 = !DILocation(line: 3196, column: 6, scope: !12824)
!12870 = !DILocation(line: 3198, column: 15, scope: !12824)
!12871 = !DILocation(line: 3198, column: 2, scope: !12824)
!12872 = !DILocation(line: 3200, column: 14, scope: !12824)
!12873 = !DILocation(line: 3200, column: 18, scope: !12824)
!12874 = !DILocation(line: 3200, column: 2, scope: !12824)
!12875 = !DILocation(line: 3202, column: 11, scope: !12876)
!12876 = distinct !DILexicalBlock(scope: !12824, file: !3, line: 3202, column: 2)
!12877 = !DILocation(line: 3202, column: 17, scope: !12876)
!12878 = !DILocation(line: 3202, column: 9, scope: !12876)
!12879 = !DILocation(line: 3202, column: 7, scope: !12876)
!12880 = !DILocation(line: 3202, column: 27, scope: !12881)
!12881 = distinct !DILexicalBlock(scope: !12876, file: !3, line: 3202, column: 2)
!12882 = !DILocation(line: 3202, column: 46, scope: !12881)
!12883 = !DILocation(line: 3202, column: 58, scope: !12881)
!12884 = !DILocation(line: 3202, column: 56, scope: !12881)
!12885 = !DILocation(line: 3202, column: 2, scope: !12876)
!12886 = !DILocalVariable(name: "rd", scope: !12887, file: !3, line: 3203, type: !12888)
!12887 = distinct !DILexicalBlock(scope: !12881, file: !3, line: 3202, column: 79)
!12888 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12889, size: 64)
!12889 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "skge_rx_desc", file: !7053, line: 2363, size: 256, elements: !12890)
!12890 = !{!12891, !12892, !12893, !12894, !12895, !12896, !12897, !12898, !12899, !12900}
!12891 = !DIDerivedType(tag: DW_TAG_member, name: "control", scope: !12889, file: !7053, line: 2364, baseType: !987, size: 32)
!12892 = !DIDerivedType(tag: DW_TAG_member, name: "next_offset", scope: !12889, file: !7053, line: 2365, baseType: !987, size: 32, offset: 32)
!12893 = !DIDerivedType(tag: DW_TAG_member, name: "dma_lo", scope: !12889, file: !7053, line: 2366, baseType: !987, size: 32, offset: 64)
!12894 = !DIDerivedType(tag: DW_TAG_member, name: "dma_hi", scope: !12889, file: !7053, line: 2367, baseType: !987, size: 32, offset: 96)
!12895 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !12889, file: !7053, line: 2368, baseType: !987, size: 32, offset: 128)
!12896 = !DIDerivedType(tag: DW_TAG_member, name: "timestamp", scope: !12889, file: !7053, line: 2369, baseType: !987, size: 32, offset: 160)
!12897 = !DIDerivedType(tag: DW_TAG_member, name: "csum2", scope: !12889, file: !7053, line: 2370, baseType: !581, size: 16, offset: 192)
!12898 = !DIDerivedType(tag: DW_TAG_member, name: "csum1", scope: !12889, file: !7053, line: 2371, baseType: !581, size: 16, offset: 208)
!12899 = !DIDerivedType(tag: DW_TAG_member, name: "csum2_start", scope: !12889, file: !7053, line: 2372, baseType: !581, size: 16, offset: 224)
!12900 = !DIDerivedType(tag: DW_TAG_member, name: "csum1_start", scope: !12889, file: !7053, line: 2373, baseType: !581, size: 16, offset: 240)
!12901 = !DILocation(line: 3203, column: 24, scope: !12887)
!12902 = !DILocation(line: 3203, column: 29, scope: !12887)
!12903 = !DILocation(line: 3203, column: 32, scope: !12887)
!12904 = !DILocalVariable(name: "skb", scope: !12887, file: !3, line: 3204, type: !415)
!12905 = !DILocation(line: 3204, column: 19, scope: !12887)
!12906 = !DILocalVariable(name: "control", scope: !12887, file: !3, line: 3205, type: !987)
!12907 = !DILocation(line: 3205, column: 7, scope: !12887)
!12908 = !DILocation(line: 3207, column: 3, scope: !12887)
!12909 = !{i32 -2139409847}
!12910 = !DILocation(line: 3208, column: 13, scope: !12887)
!12911 = !DILocation(line: 3208, column: 17, scope: !12887)
!12912 = !DILocation(line: 3208, column: 11, scope: !12887)
!12913 = !DILocation(line: 3209, column: 7, scope: !12914)
!12914 = distinct !DILexicalBlock(scope: !12887, file: !3, line: 3209, column: 7)
!12915 = !DILocation(line: 3209, column: 15, scope: !12914)
!12916 = !DILocation(line: 3209, column: 7, scope: !12887)
!12917 = !DILocation(line: 3210, column: 4, scope: !12914)
!12918 = !DILocation(line: 3212, column: 21, scope: !12887)
!12919 = !DILocation(line: 3212, column: 26, scope: !12887)
!12920 = !DILocation(line: 3212, column: 29, scope: !12887)
!12921 = !DILocation(line: 3212, column: 38, scope: !12887)
!12922 = !DILocation(line: 3212, column: 42, scope: !12887)
!12923 = !DILocation(line: 3212, column: 50, scope: !12887)
!12924 = !DILocation(line: 3212, column: 54, scope: !12887)
!12925 = !DILocation(line: 3212, column: 9, scope: !12887)
!12926 = !DILocation(line: 3212, column: 7, scope: !12887)
!12927 = !DILocation(line: 3213, column: 7, scope: !12928)
!12928 = distinct !DILexicalBlock(scope: !12887, file: !3, line: 3213, column: 7)
!12929 = !DILocation(line: 3213, column: 7, scope: !12887)
!12930 = !DILocation(line: 3214, column: 21, scope: !12931)
!12931 = distinct !DILexicalBlock(scope: !12928, file: !3, line: 3213, column: 20)
!12932 = !DILocation(line: 3214, column: 27, scope: !12931)
!12933 = !DILocation(line: 3214, column: 4, scope: !12931)
!12934 = !DILocation(line: 3215, column: 4, scope: !12931)
!12935 = !DILocation(line: 3216, column: 3, scope: !12931)
!12936 = !DILocation(line: 3217, column: 2, scope: !12887)
!12937 = !DILocation(line: 3202, column: 70, scope: !12881)
!12938 = !DILocation(line: 3202, column: 73, scope: !12881)
!12939 = !DILocation(line: 3202, column: 68, scope: !12881)
!12940 = !DILocation(line: 3202, column: 2, scope: !12881)
!12941 = distinct !{!12941, !12885, !12942}
!12942 = !DILocation(line: 3217, column: 2, scope: !12876)
!12943 = !DILocation(line: 3218, column: 19, scope: !12824)
!12944 = !DILocation(line: 3218, column: 2, scope: !12824)
!12945 = !DILocation(line: 3218, column: 8, scope: !12824)
!12946 = !DILocation(line: 3218, column: 17, scope: !12824)
!12947 = !DILocation(line: 3221, column: 2, scope: !12824)
!12948 = !{i32 -2139409782}
!12949 = !DILocation(line: 3222, column: 14, scope: !12824)
!12950 = !DILocation(line: 3222, column: 18, scope: !12824)
!12951 = !DILocation(line: 3222, column: 2, scope: !12824)
!12952 = !DILocation(line: 3224, column: 6, scope: !12832)
!12953 = !DILocation(line: 3224, column: 18, scope: !12832)
!12954 = !DILocation(line: 3224, column: 16, scope: !12832)
!12955 = !DILocation(line: 3224, column: 25, scope: !12832)
!12956 = !DILocation(line: 3224, column: 47, scope: !12832)
!12957 = !DILocation(line: 3224, column: 53, scope: !12832)
!12958 = !DILocation(line: 3224, column: 28, scope: !12832)
!12959 = !DILocation(line: 3224, column: 6, scope: !12824)
!12960 = !DILocalVariable(name: "flags", scope: !12831, file: !3, line: 3225, type: !312)
!12961 = !DILocation(line: 3225, column: 17, scope: !12831)
!12962 = !DILocation(line: 3227, column: 3, scope: !12831)
!12963 = !DILocation(line: 3227, column: 3, scope: !12841)
!12964 = !DILocalVariable(name: "__dummy", scope: !12965, file: !3, line: 3227, type: !312)
!12965 = distinct !DILexicalBlock(scope: !12840, file: !3, line: 3227, column: 3)
!12966 = !DILocation(line: 3227, column: 3, scope: !12965)
!12967 = !DILocalVariable(name: "__dummy2", scope: !12965, file: !3, line: 3227, type: !312)
!12968 = !DILocation(line: 3227, column: 3, scope: !12840)
!12969 = !DILocation(line: 3227, column: 3, scope: !12839)
!12970 = !DILocation(line: 3227, column: 3, scope: !12971)
!12971 = distinct !DILexicalBlock(scope: !12839, file: !3, line: 3227, column: 3)
!12972 = !DILocalVariable(name: "__dummy", scope: !12973, file: !3, line: 3227, type: !312)
!12973 = distinct !DILexicalBlock(scope: !12974, file: !3, line: 3227, column: 3)
!12974 = distinct !DILexicalBlock(scope: !12971, file: !3, line: 3227, column: 3)
!12975 = !DILocation(line: 3227, column: 3, scope: !12973)
!12976 = !DILocalVariable(name: "__dummy2", scope: !12973, file: !3, line: 3227, type: !312)
!12977 = !DILocation(line: 3227, column: 3, scope: !12974)
!12978 = !DILocation(line: 3227, column: 3, scope: !12838)
!12979 = !{i32 -2139408813}
!12980 = !DILocation(line: 3227, column: 3, scope: !12837)
!12981 = !DILocation(line: 329, column: 10, scope: !9522, inlinedAt: !12836)
!12982 = !DILocation(line: 329, column: 16, scope: !9522, inlinedAt: !12836)
!12983 = !DILocation(line: 3228, column: 29, scope: !12831)
!12984 = !DILocation(line: 3228, column: 35, scope: !12831)
!12985 = !DILocation(line: 3228, column: 20, scope: !12831)
!12986 = !DILocation(line: 3228, column: 3, scope: !12831)
!12987 = !DILocation(line: 3228, column: 7, scope: !12831)
!12988 = !DILocation(line: 3228, column: 17, scope: !12831)
!12989 = !DILocation(line: 3229, column: 16, scope: !12831)
!12990 = !DILocation(line: 3229, column: 29, scope: !12831)
!12991 = !DILocation(line: 3229, column: 33, scope: !12831)
!12992 = !DILocation(line: 3229, column: 3, scope: !12831)
!12993 = !DILocation(line: 3230, column: 15, scope: !12831)
!12994 = !DILocation(line: 3230, column: 3, scope: !12831)
!12995 = !DILocation(line: 3231, column: 27, scope: !12831)
!12996 = !DILocation(line: 3231, column: 31, scope: !12831)
!12997 = !DILocation(line: 3231, column: 40, scope: !12831)
!12998 = !DILocalVariable(name: "__dummy", scope: !12999, file: !9523, line: 409, type: !312)
!12999 = distinct !DILexicalBlock(scope: !13000, file: !9523, line: 409, column: 2)
!13000 = distinct !DILexicalBlock(scope: !12826, file: !9523, line: 409, column: 2)
!13001 = !DILocation(line: 409, column: 2, scope: !12999, inlinedAt: !12830)
!13002 = !DILocalVariable(name: "__dummy2", scope: !12999, file: !9523, line: 409, type: !312)
!13003 = !DILocalVariable(name: "__dummy", scope: !13004, file: !9523, line: 409, type: !312)
!13004 = distinct !DILexicalBlock(scope: !13005, file: !9523, line: 409, column: 2)
!13005 = distinct !DILexicalBlock(scope: !13006, file: !9523, line: 409, column: 2)
!13006 = distinct !DILexicalBlock(scope: !13007, file: !9523, line: 409, column: 2)
!13007 = distinct !DILexicalBlock(scope: !13000, file: !9523, line: 409, column: 2)
!13008 = !DILocation(line: 409, column: 2, scope: !13004, inlinedAt: !12830)
!13009 = !DILocalVariable(name: "__dummy2", scope: !13004, file: !9523, line: 409, type: !312)
!13010 = !DILocation(line: 409, column: 2, scope: !13005, inlinedAt: !12830)
!13011 = !DILocation(line: 409, column: 2, scope: !13012, inlinedAt: !12830)
!13012 = distinct !DILexicalBlock(scope: !13007, file: !9523, line: 409, column: 2)
!13013 = !{i32 -2145292236}
!13014 = !DILocation(line: 409, column: 2, scope: !13015, inlinedAt: !12830)
!13015 = distinct !DILexicalBlock(scope: !13012, file: !9523, line: 409, column: 2)
!13016 = !DILocation(line: 3232, column: 2, scope: !12831)
!13017 = !DILocation(line: 3234, column: 9, scope: !12824)
!13018 = !DILocation(line: 3234, column: 2, scope: !12824)
!13019 = distinct !DISubprogram(name: "netif_msg_init", scope: !31, file: !31, line: 4162, type: !13020, scopeLine: 4163, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!13020 = !DISubroutineType(types: !13021)
!13021 = !{!987, !32, !32}
!13022 = !DILocalVariable(name: "debug_value", arg: 1, scope: !13019, file: !31, line: 4162, type: !32)
!13023 = !DILocation(line: 4162, column: 38, scope: !13019)
!13024 = !DILocalVariable(name: "default_msg_enable_bits", arg: 2, scope: !13019, file: !31, line: 4162, type: !32)
!13025 = !DILocation(line: 4162, column: 55, scope: !13019)
!13026 = !DILocation(line: 4165, column: 6, scope: !13027)
!13027 = distinct !DILexicalBlock(scope: !13019, file: !31, line: 4165, column: 6)
!13028 = !DILocation(line: 4165, column: 18, scope: !13027)
!13029 = !DILocation(line: 4165, column: 22, scope: !13027)
!13030 = !DILocation(line: 4165, column: 25, scope: !13027)
!13031 = !DILocation(line: 4165, column: 37, scope: !13027)
!13032 = !DILocation(line: 4165, column: 6, scope: !13019)
!13033 = !DILocation(line: 4166, column: 10, scope: !13027)
!13034 = !DILocation(line: 4166, column: 3, scope: !13027)
!13035 = !DILocation(line: 4167, column: 6, scope: !13036)
!13036 = distinct !DILexicalBlock(scope: !13019, file: !31, line: 4167, column: 6)
!13037 = !DILocation(line: 4167, column: 18, scope: !13036)
!13038 = !DILocation(line: 4167, column: 6, scope: !13019)
!13039 = !DILocation(line: 4168, column: 3, scope: !13036)
!13040 = !DILocation(line: 4170, column: 16, scope: !13019)
!13041 = !DILocation(line: 4170, column: 13, scope: !13019)
!13042 = !DILocation(line: 4170, column: 29, scope: !13019)
!13043 = !DILocation(line: 4170, column: 2, scope: !13019)
!13044 = !DILocation(line: 4171, column: 1, scope: !13019)
!13045 = distinct !DISubprogram(name: "skge_supported_modes", scope: !3, file: !3, line: 262, type: !12762, scopeLine: 263, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!13046 = !DILocalVariable(name: "hw", arg: 1, scope: !13045, file: !3, line: 262, type: !9407)
!13047 = !DILocation(line: 262, column: 55, scope: !13045)
!13048 = !DILocalVariable(name: "supported", scope: !13045, file: !3, line: 264, type: !987)
!13049 = !DILocation(line: 264, column: 6, scope: !13045)
!13050 = !DILocation(line: 266, column: 6, scope: !13051)
!13051 = distinct !DILexicalBlock(scope: !13045, file: !3, line: 266, column: 6)
!13052 = !DILocation(line: 266, column: 10, scope: !13051)
!13053 = !DILocation(line: 266, column: 6, scope: !13045)
!13054 = !DILocation(line: 267, column: 13, scope: !13055)
!13055 = distinct !DILexicalBlock(scope: !13051, file: !3, line: 266, column: 18)
!13056 = !DILocation(line: 276, column: 18, scope: !13057)
!13057 = distinct !DILexicalBlock(scope: !13055, file: !3, line: 276, column: 7)
!13058 = !DILocation(line: 276, column: 7, scope: !13057)
!13059 = !DILocation(line: 276, column: 7, scope: !13055)
!13060 = !DILocation(line: 277, column: 14, scope: !13057)
!13061 = !DILocation(line: 277, column: 4, scope: !13057)
!13062 = !DILocation(line: 282, column: 12, scope: !13063)
!13063 = distinct !DILexicalBlock(scope: !13057, file: !3, line: 282, column: 12)
!13064 = !DILocation(line: 282, column: 16, scope: !13063)
!13065 = !DILocation(line: 282, column: 24, scope: !13063)
!13066 = !DILocation(line: 282, column: 12, scope: !13057)
!13067 = !DILocation(line: 283, column: 14, scope: !13063)
!13068 = !DILocation(line: 283, column: 4, scope: !13063)
!13069 = !DILocation(line: 284, column: 2, scope: !13055)
!13070 = !DILocation(line: 285, column: 13, scope: !13051)
!13071 = !DILocation(line: 290, column: 9, scope: !13045)
!13072 = !DILocation(line: 290, column: 2, scope: !13045)
!13073 = distinct !DISubprogram(name: "device_can_wakeup", scope: !6733, file: !6733, line: 77, type: !13074, scopeLine: 78, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!13074 = !DISubroutineType(types: !13075)
!13075 = !{!771, !6544}
!13076 = !DILocalVariable(name: "dev", arg: 1, scope: !13073, file: !6733, line: 77, type: !6544)
!13077 = !DILocation(line: 77, column: 53, scope: !13073)
!13078 = !DILocation(line: 79, column: 9, scope: !13073)
!13079 = !DILocation(line: 79, column: 14, scope: !13073)
!13080 = !DILocation(line: 79, column: 20, scope: !13073)
!13081 = !DILocation(line: 79, column: 2, scope: !13073)
!13082 = distinct !DISubprogram(name: "wol_supported", scope: !3, file: !3, line: 150, type: !12762, scopeLine: 151, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!13083 = !DILocalVariable(name: "hw", arg: 1, scope: !13082, file: !3, line: 150, type: !9407)
!13084 = !DILocation(line: 150, column: 48, scope: !13082)
!13085 = !DILocation(line: 152, column: 17, scope: !13086)
!13086 = distinct !DILexicalBlock(scope: !13082, file: !3, line: 152, column: 6)
!13087 = !DILocation(line: 152, column: 6, scope: !13086)
!13088 = !DILocation(line: 152, column: 6, scope: !13082)
!13089 = !DILocation(line: 153, column: 3, scope: !13086)
!13090 = !DILocation(line: 155, column: 6, scope: !13091)
!13091 = distinct !DILexicalBlock(scope: !13082, file: !3, line: 155, column: 6)
!13092 = !DILocation(line: 155, column: 10, scope: !13091)
!13093 = !DILocation(line: 155, column: 18, scope: !13091)
!13094 = !DILocation(line: 155, column: 35, scope: !13091)
!13095 = !DILocation(line: 155, column: 38, scope: !13091)
!13096 = !DILocation(line: 155, column: 42, scope: !13091)
!13097 = !DILocation(line: 155, column: 51, scope: !13091)
!13098 = !DILocation(line: 155, column: 6, scope: !13082)
!13099 = !DILocation(line: 156, column: 3, scope: !13091)
!13100 = !DILocation(line: 158, column: 2, scope: !13082)
!13101 = !DILocation(line: 159, column: 1, scope: !13082)
!13102 = distinct !DISubprogram(name: "xm_link_timer", scope: !3, file: !3, line: 1489, type: !3241, scopeLine: 1490, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!13103 = !DILocation(line: 407, column: 64, scope: !12826, inlinedAt: !13104)
!13104 = distinct !DILocation(line: 1523, column: 2, scope: !13102)
!13105 = !DILocation(line: 407, column: 84, scope: !12826, inlinedAt: !13104)
!13106 = !DILocation(line: 327, column: 67, scope: !9522, inlinedAt: !13107)
!13107 = distinct !DILocation(line: 1501, column: 2, scope: !13108)
!13108 = distinct !DILexicalBlock(scope: !13109, file: !3, line: 1501, column: 2)
!13109 = distinct !DILexicalBlock(scope: !13110, file: !3, line: 1501, column: 2)
!13110 = distinct !DILexicalBlock(scope: !13111, file: !3, line: 1501, column: 2)
!13111 = distinct !DILexicalBlock(scope: !13112, file: !3, line: 1501, column: 2)
!13112 = distinct !DILexicalBlock(scope: !13102, file: !3, line: 1501, column: 2)
!13113 = !DILocalVariable(name: "t", arg: 1, scope: !13102, file: !3, line: 1489, type: !3243)
!13114 = !DILocation(line: 1489, column: 46, scope: !13102)
!13115 = !DILocalVariable(name: "skge", scope: !13102, file: !3, line: 1491, type: !9172)
!13116 = !DILocation(line: 1491, column: 20, scope: !13102)
!13117 = !DILocalVariable(name: "__mptr", scope: !13118, file: !3, line: 1491, type: !591)
!13118 = distinct !DILexicalBlock(scope: !13102, file: !3, line: 1491, column: 27)
!13119 = !DILocation(line: 1491, column: 27, scope: !13118)
!13120 = !DILocation(line: 1491, column: 27, scope: !13121)
!13121 = distinct !DILexicalBlock(scope: !13118, file: !3, line: 1491, column: 27)
!13122 = !DILocalVariable(name: "dev", scope: !13102, file: !3, line: 1492, type: !290)
!13123 = !DILocation(line: 1492, column: 21, scope: !13102)
!13124 = !DILocation(line: 1492, column: 27, scope: !13102)
!13125 = !DILocation(line: 1492, column: 33, scope: !13102)
!13126 = !DILocalVariable(name: "hw", scope: !13102, file: !3, line: 1493, type: !8794)
!13127 = !DILocation(line: 1493, column: 18, scope: !13102)
!13128 = !DILocation(line: 1493, column: 23, scope: !13102)
!13129 = !DILocation(line: 1493, column: 29, scope: !13102)
!13130 = !DILocalVariable(name: "port", scope: !13102, file: !3, line: 1494, type: !32)
!13131 = !DILocation(line: 1494, column: 6, scope: !13102)
!13132 = !DILocation(line: 1494, column: 13, scope: !13102)
!13133 = !DILocation(line: 1494, column: 19, scope: !13102)
!13134 = !DILocalVariable(name: "i", scope: !13102, file: !3, line: 1495, type: !32)
!13135 = !DILocation(line: 1495, column: 6, scope: !13102)
!13136 = !DILocalVariable(name: "flags", scope: !13102, file: !3, line: 1496, type: !312)
!13137 = !DILocation(line: 1496, column: 16, scope: !13102)
!13138 = !DILocation(line: 1498, column: 21, scope: !13139)
!13139 = distinct !DILexicalBlock(scope: !13102, file: !3, line: 1498, column: 6)
!13140 = !DILocation(line: 1498, column: 7, scope: !13139)
!13141 = !DILocation(line: 1498, column: 6, scope: !13102)
!13142 = !DILocation(line: 1499, column: 3, scope: !13139)
!13143 = !DILocation(line: 1501, column: 2, scope: !13102)
!13144 = !DILocation(line: 1501, column: 2, scope: !13112)
!13145 = !DILocalVariable(name: "__dummy", scope: !13146, file: !3, line: 1501, type: !312)
!13146 = distinct !DILexicalBlock(scope: !13111, file: !3, line: 1501, column: 2)
!13147 = !DILocation(line: 1501, column: 2, scope: !13146)
!13148 = !DILocalVariable(name: "__dummy2", scope: !13146, file: !3, line: 1501, type: !312)
!13149 = !DILocation(line: 1501, column: 2, scope: !13111)
!13150 = !DILocation(line: 1501, column: 2, scope: !13110)
!13151 = !DILocation(line: 1501, column: 2, scope: !13152)
!13152 = distinct !DILexicalBlock(scope: !13110, file: !3, line: 1501, column: 2)
!13153 = !DILocalVariable(name: "__dummy", scope: !13154, file: !3, line: 1501, type: !312)
!13154 = distinct !DILexicalBlock(scope: !13155, file: !3, line: 1501, column: 2)
!13155 = distinct !DILexicalBlock(scope: !13152, file: !3, line: 1501, column: 2)
!13156 = !DILocation(line: 1501, column: 2, scope: !13154)
!13157 = !DILocalVariable(name: "__dummy2", scope: !13154, file: !3, line: 1501, type: !312)
!13158 = !DILocation(line: 1501, column: 2, scope: !13155)
!13159 = !DILocation(line: 1501, column: 2, scope: !13109)
!13160 = !{i32 -2139447407}
!13161 = !DILocation(line: 1501, column: 2, scope: !13108)
!13162 = !DILocation(line: 329, column: 10, scope: !9522, inlinedAt: !13107)
!13163 = !DILocation(line: 329, column: 16, scope: !9522, inlinedAt: !13107)
!13164 = !DILocation(line: 1507, column: 9, scope: !13165)
!13165 = distinct !DILexicalBlock(scope: !13102, file: !3, line: 1507, column: 2)
!13166 = !DILocation(line: 1507, column: 7, scope: !13165)
!13167 = !DILocation(line: 1507, column: 14, scope: !13168)
!13168 = distinct !DILexicalBlock(scope: !13165, file: !3, line: 1507, column: 2)
!13169 = !DILocation(line: 1507, column: 16, scope: !13168)
!13170 = !DILocation(line: 1507, column: 2, scope: !13165)
!13171 = !DILocation(line: 1508, column: 17, scope: !13172)
!13172 = distinct !DILexicalBlock(scope: !13173, file: !3, line: 1508, column: 7)
!13173 = distinct !DILexicalBlock(scope: !13168, file: !3, line: 1507, column: 26)
!13174 = !DILocation(line: 1508, column: 21, scope: !13172)
!13175 = !DILocation(line: 1508, column: 7, scope: !13172)
!13176 = !DILocation(line: 1508, column: 39, scope: !13172)
!13177 = !DILocation(line: 1508, column: 7, scope: !13173)
!13178 = !DILocation(line: 1509, column: 4, scope: !13172)
!13179 = !DILocation(line: 1510, column: 2, scope: !13173)
!13180 = !DILocation(line: 1507, column: 22, scope: !13168)
!13181 = !DILocation(line: 1507, column: 2, scope: !13168)
!13182 = distinct !{!13182, !13170, !13183}
!13183 = !DILocation(line: 1510, column: 2, scope: !13165)
!13184 = !DILocation(line: 1513, column: 20, scope: !13185)
!13185 = distinct !DILexicalBlock(scope: !13102, file: !3, line: 1513, column: 6)
!13186 = !DILocation(line: 1513, column: 6, scope: !13185)
!13187 = !DILocation(line: 1513, column: 6, scope: !13102)
!13188 = !DILocalVariable(name: "msk", scope: !13189, file: !3, line: 1514, type: !581)
!13189 = distinct !DILexicalBlock(scope: !13185, file: !3, line: 1513, column: 26)
!13190 = !DILocation(line: 1514, column: 7, scope: !13189)
!13191 = !DILocation(line: 1514, column: 23, scope: !13189)
!13192 = !DILocation(line: 1514, column: 27, scope: !13189)
!13193 = !DILocation(line: 1514, column: 13, scope: !13189)
!13194 = !DILocation(line: 1515, column: 7, scope: !13189)
!13195 = !DILocation(line: 1516, column: 14, scope: !13189)
!13196 = !DILocation(line: 1516, column: 18, scope: !13189)
!13197 = !DILocation(line: 1516, column: 33, scope: !13189)
!13198 = !DILocation(line: 1516, column: 3, scope: !13189)
!13199 = !DILocation(line: 1517, column: 13, scope: !13189)
!13200 = !DILocation(line: 1517, column: 17, scope: !13189)
!13201 = !DILocation(line: 1517, column: 3, scope: !13189)
!13202 = !DILocation(line: 1518, column: 2, scope: !13189)
!13203 = !DILocation(line: 1518, column: 9, scope: !13185)
!13204 = !DILabel(scope: !13205, name: "link_down", file: !3, line: 1519)
!13205 = distinct !DILexicalBlock(scope: !13185, file: !3, line: 1518, column: 9)
!13206 = !DILocation(line: 1519, column: 1, scope: !13205)
!13207 = !DILocation(line: 1520, column: 14, scope: !13205)
!13208 = !DILocation(line: 1520, column: 20, scope: !13205)
!13209 = !DILocation(line: 1521, column: 20, scope: !13205)
!13210 = !DILocation(line: 1521, column: 28, scope: !13205)
!13211 = !DILocation(line: 1521, column: 6, scope: !13205)
!13212 = !DILocation(line: 1520, column: 3, scope: !13205)
!13213 = !DILocation(line: 1523, column: 26, scope: !13102)
!13214 = !DILocation(line: 1523, column: 30, scope: !13102)
!13215 = !DILocation(line: 1523, column: 40, scope: !13102)
!13216 = !DILocation(line: 409, column: 2, scope: !12999, inlinedAt: !13104)
!13217 = !DILocation(line: 409, column: 2, scope: !13004, inlinedAt: !13104)
!13218 = !DILocation(line: 409, column: 2, scope: !13005, inlinedAt: !13104)
!13219 = !DILocation(line: 409, column: 2, scope: !13012, inlinedAt: !13104)
!13220 = !DILocation(line: 409, column: 2, scope: !13015, inlinedAt: !13104)
!13221 = !DILocation(line: 1524, column: 1, scope: !13102)
!13222 = distinct !DISubprogram(name: "skge_up", scope: !3, file: !3, line: 2527, type: !402, scopeLine: 2528, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!13223 = !DILocation(line: 402, column: 57, scope: !9768, inlinedAt: !13224)
!13224 = distinct !DILocation(line: 2615, column: 2, scope: !13222)
!13225 = !DILocation(line: 377, column: 55, scope: !9774, inlinedAt: !13226)
!13226 = distinct !DILocation(line: 2611, column: 2, scope: !13222)
!13227 = !DILocalVariable(name: "dev", arg: 1, scope: !13222, file: !3, line: 2527, type: !290)
!13228 = !DILocation(line: 2527, column: 39, scope: !13222)
!13229 = !DILocalVariable(name: "skge", scope: !13222, file: !3, line: 2529, type: !9172)
!13230 = !DILocation(line: 2529, column: 20, scope: !13222)
!13231 = !DILocation(line: 2529, column: 39, scope: !13222)
!13232 = !DILocation(line: 2529, column: 27, scope: !13222)
!13233 = !DILocalVariable(name: "hw", scope: !13222, file: !3, line: 2530, type: !8794)
!13234 = !DILocation(line: 2530, column: 18, scope: !13222)
!13235 = !DILocation(line: 2530, column: 23, scope: !13222)
!13236 = !DILocation(line: 2530, column: 29, scope: !13222)
!13237 = !DILocalVariable(name: "port", scope: !13222, file: !3, line: 2531, type: !32)
!13238 = !DILocation(line: 2531, column: 6, scope: !13222)
!13239 = !DILocation(line: 2531, column: 13, scope: !13222)
!13240 = !DILocation(line: 2531, column: 19, scope: !13222)
!13241 = !DILocalVariable(name: "chunk", scope: !13222, file: !3, line: 2532, type: !987)
!13242 = !DILocation(line: 2532, column: 6, scope: !13222)
!13243 = !DILocalVariable(name: "ram_addr", scope: !13222, file: !3, line: 2532, type: !987)
!13244 = !DILocation(line: 2532, column: 13, scope: !13222)
!13245 = !DILocalVariable(name: "rx_size", scope: !13222, file: !3, line: 2533, type: !1039)
!13246 = !DILocation(line: 2533, column: 9, scope: !13222)
!13247 = !DILocalVariable(name: "tx_size", scope: !13222, file: !3, line: 2533, type: !1039)
!13248 = !DILocation(line: 2533, column: 18, scope: !13222)
!13249 = !DILocalVariable(name: "err", scope: !13222, file: !3, line: 2534, type: !32)
!13250 = !DILocation(line: 2534, column: 6, scope: !13222)
!13251 = !DILocation(line: 2536, column: 27, scope: !13252)
!13252 = distinct !DILexicalBlock(scope: !13222, file: !3, line: 2536, column: 6)
!13253 = !DILocation(line: 2536, column: 32, scope: !13252)
!13254 = !DILocation(line: 2536, column: 7, scope: !13252)
!13255 = !DILocation(line: 2536, column: 6, scope: !13222)
!13256 = !DILocation(line: 2537, column: 3, scope: !13252)
!13257 = !DILocation(line: 2539, column: 2, scope: !13222)
!13258 = !DILocation(line: 2539, column: 2, scope: !13259)
!13259 = distinct !DILexicalBlock(scope: !13260, file: !3, line: 2539, column: 2)
!13260 = distinct !DILexicalBlock(scope: !13222, file: !3, line: 2539, column: 2)
!13261 = !DILocation(line: 2539, column: 2, scope: !13260)
!13262 = !DILocation(line: 2541, column: 6, scope: !13263)
!13263 = distinct !DILexicalBlock(scope: !13222, file: !3, line: 2541, column: 6)
!13264 = !DILocation(line: 2541, column: 11, scope: !13263)
!13265 = !DILocation(line: 2541, column: 15, scope: !13263)
!13266 = !DILocation(line: 2541, column: 6, scope: !13222)
!13267 = !DILocation(line: 2542, column: 23, scope: !13263)
!13268 = !DILocation(line: 2542, column: 28, scope: !13263)
!13269 = !DILocation(line: 2542, column: 32, scope: !13263)
!13270 = !DILocation(line: 2542, column: 3, scope: !13263)
!13271 = !DILocation(line: 2542, column: 9, scope: !13263)
!13272 = !DILocation(line: 2542, column: 21, scope: !13263)
!13273 = !DILocation(line: 2544, column: 3, scope: !13263)
!13274 = !DILocation(line: 2544, column: 9, scope: !13263)
!13275 = !DILocation(line: 2544, column: 21, scope: !13263)
!13276 = !DILocation(line: 2547, column: 12, scope: !13222)
!13277 = !DILocation(line: 2547, column: 18, scope: !13222)
!13278 = !DILocation(line: 2547, column: 26, scope: !13222)
!13279 = !DILocation(line: 2547, column: 32, scope: !13222)
!13280 = !DILocation(line: 2547, column: 10, scope: !13222)
!13281 = !DILocation(line: 2548, column: 12, scope: !13222)
!13282 = !DILocation(line: 2548, column: 18, scope: !13222)
!13283 = !DILocation(line: 2548, column: 26, scope: !13222)
!13284 = !DILocation(line: 2548, column: 32, scope: !13222)
!13285 = !DILocation(line: 2548, column: 10, scope: !13222)
!13286 = !DILocation(line: 2549, column: 19, scope: !13222)
!13287 = !DILocation(line: 2549, column: 29, scope: !13222)
!13288 = !DILocation(line: 2549, column: 27, scope: !13222)
!13289 = !DILocation(line: 2549, column: 2, scope: !13222)
!13290 = !DILocation(line: 2549, column: 8, scope: !13222)
!13291 = !DILocation(line: 2549, column: 17, scope: !13222)
!13292 = !DILocation(line: 2550, column: 34, scope: !13222)
!13293 = !DILocation(line: 2550, column: 38, scope: !13222)
!13294 = !DILocation(line: 2550, column: 44, scope: !13222)
!13295 = !DILocation(line: 2550, column: 49, scope: !13222)
!13296 = !DILocation(line: 2550, column: 55, scope: !13222)
!13297 = !DILocation(line: 2551, column: 13, scope: !13222)
!13298 = !DILocation(line: 2551, column: 19, scope: !13222)
!13299 = !DILocation(line: 2550, column: 14, scope: !13222)
!13300 = !DILocation(line: 2550, column: 2, scope: !13222)
!13301 = !DILocation(line: 2550, column: 8, scope: !13222)
!13302 = !DILocation(line: 2550, column: 12, scope: !13222)
!13303 = !DILocation(line: 2552, column: 7, scope: !13304)
!13304 = distinct !DILexicalBlock(scope: !13222, file: !3, line: 2552, column: 6)
!13305 = !DILocation(line: 2552, column: 13, scope: !13304)
!13306 = !DILocation(line: 2552, column: 6, scope: !13222)
!13307 = !DILocation(line: 2553, column: 3, scope: !13304)
!13308 = !DILocation(line: 2555, column: 2, scope: !13222)
!13309 = !DILocation(line: 2555, column: 2, scope: !13310)
!13310 = distinct !DILexicalBlock(scope: !13311, file: !3, line: 2555, column: 2)
!13311 = distinct !DILexicalBlock(scope: !13222, file: !3, line: 2555, column: 2)
!13312 = !DILocation(line: 2555, column: 2, scope: !13311)
!13313 = !DILocation(line: 2555, column: 2, scope: !13314)
!13314 = distinct !DILexicalBlock(scope: !13310, file: !3, line: 2555, column: 2)
!13315 = !DILocation(line: 2555, column: 2, scope: !13316)
!13316 = distinct !DILexicalBlock(scope: !13314, file: !3, line: 2555, column: 2)
!13317 = !DILocation(line: 2555, column: 2, scope: !13318)
!13318 = distinct !DILexicalBlock(scope: !13314, file: !3, line: 2555, column: 2)
!13319 = !{i32 -2139432768, i32 -2139432739, i32 -2139432693, i32 -2139432635, i32 -2139432581, i32 -2139432527, i32 -2139432472, i32 -2139432441}
!13320 = !DILocation(line: 2555, column: 2, scope: !13321)
!13321 = distinct !DILexicalBlock(scope: !13322, file: !3, line: 2555, column: 2)
!13322 = distinct !DILexicalBlock(scope: !13314, file: !3, line: 2555, column: 2)
!13323 = !{i32 -2139431982, i32 -2139431975, i32 -2139431921, i32 -2139431890, i32 -2139431860}
!13324 = !DILocation(line: 2555, column: 2, scope: !13322)
!13325 = !DILocation(line: 2557, column: 6, scope: !13326)
!13326 = distinct !DILexicalBlock(scope: !13222, file: !3, line: 2557, column: 6)
!13327 = !DILocation(line: 2557, column: 34, scope: !13326)
!13328 = !DILocation(line: 2557, column: 31, scope: !13326)
!13329 = !DILocation(line: 2557, column: 6, scope: !13222)
!13330 = !DILocation(line: 2558, column: 3, scope: !13331)
!13331 = distinct !DILexicalBlock(scope: !13326, file: !3, line: 2557, column: 77)
!13332 = !DILocation(line: 2559, column: 7, scope: !13331)
!13333 = !DILocation(line: 2560, column: 3, scope: !13331)
!13334 = !DILocation(line: 2563, column: 25, scope: !13222)
!13335 = !DILocation(line: 2563, column: 31, scope: !13222)
!13336 = !DILocation(line: 2563, column: 40, scope: !13222)
!13337 = !DILocation(line: 2563, column: 46, scope: !13222)
!13338 = !DILocation(line: 2563, column: 51, scope: !13222)
!13339 = !DILocation(line: 2563, column: 57, scope: !13222)
!13340 = !DILocation(line: 2563, column: 8, scope: !13222)
!13341 = !DILocation(line: 2563, column: 6, scope: !13222)
!13342 = !DILocation(line: 2564, column: 6, scope: !13343)
!13343 = distinct !DILexicalBlock(scope: !13222, file: !3, line: 2564, column: 6)
!13344 = !DILocation(line: 2564, column: 6, scope: !13222)
!13345 = !DILocation(line: 2565, column: 3, scope: !13343)
!13346 = !DILocation(line: 2567, column: 21, scope: !13222)
!13347 = !DILocation(line: 2567, column: 8, scope: !13222)
!13348 = !DILocation(line: 2567, column: 6, scope: !13222)
!13349 = !DILocation(line: 2568, column: 6, scope: !13350)
!13350 = distinct !DILexicalBlock(scope: !13222, file: !3, line: 2568, column: 6)
!13351 = !DILocation(line: 2568, column: 6, scope: !13222)
!13352 = !DILocation(line: 2569, column: 3, scope: !13350)
!13353 = !DILocation(line: 2571, column: 25, scope: !13222)
!13354 = !DILocation(line: 2571, column: 31, scope: !13222)
!13355 = !DILocation(line: 2571, column: 40, scope: !13222)
!13356 = !DILocation(line: 2571, column: 46, scope: !13222)
!13357 = !DILocation(line: 2571, column: 52, scope: !13222)
!13358 = !DILocation(line: 2571, column: 50, scope: !13222)
!13359 = !DILocation(line: 2572, column: 10, scope: !13222)
!13360 = !DILocation(line: 2572, column: 16, scope: !13222)
!13361 = !DILocation(line: 2572, column: 22, scope: !13222)
!13362 = !DILocation(line: 2572, column: 20, scope: !13222)
!13363 = !DILocation(line: 2571, column: 8, scope: !13222)
!13364 = !DILocation(line: 2571, column: 6, scope: !13222)
!13365 = !DILocation(line: 2573, column: 6, scope: !13366)
!13366 = distinct !DILexicalBlock(scope: !13222, file: !3, line: 2573, column: 6)
!13367 = !DILocation(line: 2573, column: 6, scope: !13222)
!13368 = !DILocation(line: 2574, column: 3, scope: !13366)
!13369 = !DILocation(line: 2576, column: 6, scope: !13370)
!13370 = distinct !DILexicalBlock(scope: !13222, file: !3, line: 2576, column: 6)
!13371 = !DILocation(line: 2576, column: 10, scope: !13370)
!13372 = !DILocation(line: 2576, column: 16, scope: !13370)
!13373 = !DILocation(line: 2576, column: 6, scope: !13222)
!13374 = !DILocation(line: 2577, column: 21, scope: !13375)
!13375 = distinct !DILexicalBlock(scope: !13370, file: !3, line: 2576, column: 22)
!13376 = !DILocation(line: 2577, column: 25, scope: !13375)
!13377 = !DILocation(line: 2577, column: 31, scope: !13375)
!13378 = !DILocation(line: 2578, column: 7, scope: !13375)
!13379 = !DILocation(line: 2578, column: 12, scope: !13375)
!13380 = !DILocation(line: 2578, column: 18, scope: !13375)
!13381 = !DILocation(line: 2577, column: 9, scope: !13375)
!13382 = !DILocation(line: 2577, column: 7, scope: !13375)
!13383 = !DILocation(line: 2579, column: 7, scope: !13384)
!13384 = distinct !DILexicalBlock(scope: !13375, file: !3, line: 2579, column: 7)
!13385 = !DILocation(line: 2579, column: 7, scope: !13375)
!13386 = !DILocation(line: 2580, column: 15, scope: !13387)
!13387 = distinct !DILexicalBlock(scope: !13384, file: !3, line: 2579, column: 12)
!13388 = !DILocation(line: 2581, column: 8, scope: !13387)
!13389 = !DILocation(line: 2581, column: 12, scope: !13387)
!13390 = !DILocation(line: 2581, column: 18, scope: !13387)
!13391 = !DILocation(line: 2581, column: 23, scope: !13387)
!13392 = !DILocation(line: 2580, column: 4, scope: !13387)
!13393 = !DILocation(line: 2582, column: 4, scope: !13387)
!13394 = !DILocation(line: 2584, column: 2, scope: !13375)
!13395 = !DILocation(line: 2587, column: 20, scope: !13222)
!13396 = !DILocation(line: 2587, column: 2, scope: !13222)
!13397 = !DILocation(line: 2588, column: 16, scope: !13222)
!13398 = !DILocation(line: 2588, column: 20, scope: !13222)
!13399 = !DILocation(line: 2588, column: 2, scope: !13222)
!13400 = !DILocation(line: 2589, column: 17, scope: !13401)
!13401 = distinct !DILexicalBlock(scope: !13222, file: !3, line: 2589, column: 6)
!13402 = !DILocation(line: 2589, column: 6, scope: !13401)
!13403 = !DILocation(line: 2589, column: 6, scope: !13222)
!13404 = !DILocation(line: 2590, column: 20, scope: !13401)
!13405 = !DILocation(line: 2590, column: 24, scope: !13401)
!13406 = !DILocation(line: 2590, column: 3, scope: !13401)
!13407 = !DILocation(line: 2592, column: 18, scope: !13401)
!13408 = !DILocation(line: 2592, column: 22, scope: !13401)
!13409 = !DILocation(line: 2592, column: 3, scope: !13401)
!13410 = !DILocation(line: 2593, column: 18, scope: !13222)
!13411 = !DILocation(line: 2593, column: 22, scope: !13222)
!13412 = !DILocation(line: 2593, column: 2, scope: !13222)
!13413 = !DILocation(line: 2596, column: 11, scope: !13222)
!13414 = !DILocation(line: 2596, column: 15, scope: !13222)
!13415 = !DILocation(line: 2596, column: 27, scope: !13222)
!13416 = !DILocation(line: 2596, column: 31, scope: !13222)
!13417 = !DILocation(line: 2596, column: 25, scope: !13222)
!13418 = !DILocation(line: 2596, column: 46, scope: !13222)
!13419 = !DILocation(line: 2596, column: 50, scope: !13222)
!13420 = !DILocation(line: 2596, column: 56, scope: !13222)
!13421 = !DILocation(line: 2596, column: 43, scope: !13222)
!13422 = !DILocation(line: 2596, column: 8, scope: !13222)
!13423 = !DILocation(line: 2597, column: 13, scope: !13222)
!13424 = !DILocation(line: 2597, column: 17, scope: !13222)
!13425 = !DILocation(line: 2597, column: 34, scope: !13222)
!13426 = !DILocation(line: 2597, column: 32, scope: !13222)
!13427 = !DILocation(line: 2597, column: 42, scope: !13222)
!13428 = !DILocation(line: 2597, column: 40, scope: !13222)
!13429 = !DILocation(line: 2597, column: 28, scope: !13222)
!13430 = !DILocation(line: 2597, column: 11, scope: !13222)
!13431 = !DILocation(line: 2599, column: 14, scope: !13222)
!13432 = !DILocation(line: 2599, column: 26, scope: !13222)
!13433 = !DILocation(line: 2599, column: 18, scope: !13222)
!13434 = !DILocation(line: 2599, column: 33, scope: !13222)
!13435 = !DILocation(line: 2599, column: 43, scope: !13222)
!13436 = !DILocation(line: 2599, column: 2, scope: !13222)
!13437 = !DILocation(line: 2600, column: 12, scope: !13222)
!13438 = !DILocation(line: 2600, column: 26, scope: !13222)
!13439 = !DILocation(line: 2600, column: 18, scope: !13222)
!13440 = !DILocation(line: 2600, column: 33, scope: !13222)
!13441 = !DILocation(line: 2600, column: 39, scope: !13222)
!13442 = !DILocation(line: 2600, column: 47, scope: !13222)
!13443 = !DILocation(line: 2600, column: 2, scope: !13222)
!13444 = !DILocation(line: 2602, column: 2, scope: !13222)
!13445 = !DILocation(line: 2602, column: 2, scope: !13446)
!13446 = distinct !DILexicalBlock(scope: !13447, file: !3, line: 2602, column: 2)
!13447 = distinct !DILexicalBlock(scope: !13222, file: !3, line: 2602, column: 2)
!13448 = !DILocation(line: 2602, column: 2, scope: !13447)
!13449 = !DILocation(line: 2602, column: 2, scope: !13450)
!13450 = distinct !DILexicalBlock(scope: !13446, file: !3, line: 2602, column: 2)
!13451 = !DILocation(line: 2602, column: 2, scope: !13452)
!13452 = distinct !DILexicalBlock(scope: !13450, file: !3, line: 2602, column: 2)
!13453 = !DILocation(line: 2602, column: 2, scope: !13454)
!13454 = distinct !DILexicalBlock(scope: !13450, file: !3, line: 2602, column: 2)
!13455 = !{i32 -2139431218, i32 -2139431189, i32 -2139431143, i32 -2139431085, i32 -2139431031, i32 -2139430977, i32 -2139430922, i32 -2139430891}
!13456 = !DILocation(line: 2602, column: 2, scope: !13457)
!13457 = distinct !DILexicalBlock(scope: !13458, file: !3, line: 2602, column: 2)
!13458 = distinct !DILexicalBlock(scope: !13450, file: !3, line: 2602, column: 2)
!13459 = !{i32 -2139430432, i32 -2139430425, i32 -2139430371, i32 -2139430340, i32 -2139430310}
!13460 = !DILocation(line: 2602, column: 2, scope: !13458)
!13461 = !DILocation(line: 2603, column: 14, scope: !13222)
!13462 = !DILocation(line: 2603, column: 26, scope: !13222)
!13463 = !DILocation(line: 2603, column: 18, scope: !13222)
!13464 = !DILocation(line: 2603, column: 33, scope: !13222)
!13465 = !DILocation(line: 2603, column: 42, scope: !13222)
!13466 = !DILocation(line: 2603, column: 41, scope: !13222)
!13467 = !DILocation(line: 2603, column: 49, scope: !13222)
!13468 = !DILocation(line: 2603, column: 2, scope: !13222)
!13469 = !DILocation(line: 2604, column: 12, scope: !13222)
!13470 = !DILocation(line: 2604, column: 26, scope: !13222)
!13471 = !DILocation(line: 2604, column: 18, scope: !13222)
!13472 = !DILocation(line: 2604, column: 33, scope: !13222)
!13473 = !DILocation(line: 2604, column: 39, scope: !13222)
!13474 = !DILocation(line: 2604, column: 47, scope: !13222)
!13475 = !DILocation(line: 2604, column: 2, scope: !13222)
!13476 = !DILocation(line: 2607, column: 2, scope: !13222)
!13477 = !{i32 -2139430259}
!13478 = !DILocation(line: 2608, column: 14, scope: !13222)
!13479 = !DILocation(line: 2608, column: 18, scope: !13222)
!13480 = !DILocation(line: 2608, column: 2, scope: !13222)
!13481 = !DILocation(line: 2609, column: 11, scope: !13222)
!13482 = !DILocation(line: 2609, column: 2, scope: !13222)
!13483 = !DILocation(line: 2611, column: 17, scope: !13222)
!13484 = !DILocation(line: 2611, column: 21, scope: !13222)
!13485 = !DILocation(line: 379, column: 2, scope: !9810, inlinedAt: !13226)
!13486 = !DILocation(line: 379, column: 2, scope: !9813, inlinedAt: !13226)
!13487 = !DILocation(line: 379, column: 2, scope: !9816, inlinedAt: !13226)
!13488 = !DILocation(line: 2612, column: 28, scope: !13222)
!13489 = !DILocation(line: 2612, column: 19, scope: !13222)
!13490 = !DILocation(line: 2612, column: 2, scope: !13222)
!13491 = !DILocation(line: 2612, column: 6, scope: !13222)
!13492 = !DILocation(line: 2612, column: 16, scope: !13222)
!13493 = !DILocation(line: 2613, column: 15, scope: !13222)
!13494 = !DILocation(line: 2613, column: 28, scope: !13222)
!13495 = !DILocation(line: 2613, column: 32, scope: !13222)
!13496 = !DILocation(line: 2613, column: 2, scope: !13222)
!13497 = !DILocation(line: 2614, column: 14, scope: !13222)
!13498 = !DILocation(line: 2614, column: 2, scope: !13222)
!13499 = !DILocation(line: 2615, column: 19, scope: !13222)
!13500 = !DILocation(line: 2615, column: 23, scope: !13222)
!13501 = !DILocation(line: 404, column: 2, scope: !9834, inlinedAt: !13224)
!13502 = !DILocation(line: 404, column: 2, scope: !9837, inlinedAt: !13224)
!13503 = !DILocation(line: 404, column: 2, scope: !9840, inlinedAt: !13224)
!13504 = !DILocation(line: 2617, column: 15, scope: !13222)
!13505 = !DILocation(line: 2617, column: 21, scope: !13222)
!13506 = !DILocation(line: 2617, column: 2, scope: !13222)
!13507 = !DILocation(line: 2619, column: 21, scope: !13222)
!13508 = !DILocation(line: 2619, column: 2, scope: !13222)
!13509 = !DILocation(line: 2621, column: 2, scope: !13222)
!13510 = !DILabel(scope: !13222, name: "free_tx_ring", file: !3, line: 2623)
!13511 = !DILocation(line: 2623, column: 2, scope: !13222)
!13512 = !DILocation(line: 2624, column: 8, scope: !13222)
!13513 = !DILocation(line: 2624, column: 14, scope: !13222)
!13514 = !DILocation(line: 2624, column: 22, scope: !13222)
!13515 = !DILocation(line: 2624, column: 2, scope: !13222)
!13516 = !DILabel(scope: !13222, name: "free_rx_ring", file: !3, line: 2625)
!13517 = !DILocation(line: 2625, column: 2, scope: !13222)
!13518 = !DILocation(line: 2626, column: 16, scope: !13222)
!13519 = !DILocation(line: 2626, column: 2, scope: !13222)
!13520 = !DILocation(line: 2627, column: 8, scope: !13222)
!13521 = !DILocation(line: 2627, column: 14, scope: !13222)
!13522 = !DILocation(line: 2627, column: 22, scope: !13222)
!13523 = !DILocation(line: 2627, column: 2, scope: !13222)
!13524 = !DILabel(scope: !13222, name: "free_pci_mem", file: !3, line: 2628)
!13525 = !DILocation(line: 2628, column: 2, scope: !13222)
!13526 = !DILocation(line: 2629, column: 21, scope: !13222)
!13527 = !DILocation(line: 2629, column: 25, scope: !13222)
!13528 = !DILocation(line: 2629, column: 31, scope: !13222)
!13529 = !DILocation(line: 2629, column: 36, scope: !13222)
!13530 = !DILocation(line: 2629, column: 42, scope: !13222)
!13531 = !DILocation(line: 2629, column: 52, scope: !13222)
!13532 = !DILocation(line: 2629, column: 58, scope: !13222)
!13533 = !DILocation(line: 2630, column: 6, scope: !13222)
!13534 = !DILocation(line: 2630, column: 12, scope: !13222)
!13535 = !DILocation(line: 2629, column: 2, scope: !13222)
!13536 = !DILocation(line: 2631, column: 2, scope: !13222)
!13537 = !DILocation(line: 2631, column: 8, scope: !13222)
!13538 = !DILocation(line: 2631, column: 12, scope: !13222)
!13539 = !DILocation(line: 2633, column: 9, scope: !13222)
!13540 = !DILocation(line: 2633, column: 2, scope: !13222)
!13541 = !DILocation(line: 2634, column: 1, scope: !13222)
!13542 = distinct !DISubprogram(name: "skge_down", scope: !3, file: !3, line: 2645, type: !402, scopeLine: 2646, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!13543 = !DILocation(line: 402, column: 57, scope: !9768, inlinedAt: !13544)
!13544 = distinct !DILocation(line: 2668, column: 2, scope: !13542)
!13545 = !DILocation(line: 377, column: 55, scope: !9774, inlinedAt: !13546)
!13546 = distinct !DILocation(line: 2664, column: 2, scope: !13542)
!13547 = !DILocalVariable(name: "dev", arg: 1, scope: !13542, file: !3, line: 2645, type: !290)
!13548 = !DILocation(line: 2645, column: 41, scope: !13542)
!13549 = !DILocalVariable(name: "skge", scope: !13542, file: !3, line: 2647, type: !9172)
!13550 = !DILocation(line: 2647, column: 20, scope: !13542)
!13551 = !DILocation(line: 2647, column: 39, scope: !13542)
!13552 = !DILocation(line: 2647, column: 27, scope: !13542)
!13553 = !DILocalVariable(name: "hw", scope: !13542, file: !3, line: 2648, type: !8794)
!13554 = !DILocation(line: 2648, column: 18, scope: !13542)
!13555 = !DILocation(line: 2648, column: 23, scope: !13542)
!13556 = !DILocation(line: 2648, column: 29, scope: !13542)
!13557 = !DILocalVariable(name: "port", scope: !13542, file: !3, line: 2649, type: !32)
!13558 = !DILocation(line: 2649, column: 6, scope: !13542)
!13559 = !DILocation(line: 2649, column: 13, scope: !13542)
!13560 = !DILocation(line: 2649, column: 19, scope: !13542)
!13561 = !DILocation(line: 2651, column: 7, scope: !13562)
!13562 = distinct !DILexicalBlock(scope: !13542, file: !3, line: 2651, column: 6)
!13563 = !DILocation(line: 2651, column: 13, scope: !13562)
!13564 = !DILocation(line: 2651, column: 6, scope: !13542)
!13565 = !DILocation(line: 2652, column: 3, scope: !13562)
!13566 = !DILocation(line: 2654, column: 2, scope: !13542)
!13567 = !DILocation(line: 2654, column: 2, scope: !13568)
!13568 = distinct !DILexicalBlock(scope: !13569, file: !3, line: 2654, column: 2)
!13569 = distinct !DILexicalBlock(scope: !13542, file: !3, line: 2654, column: 2)
!13570 = !DILocation(line: 2654, column: 2, scope: !13569)
!13571 = !DILocation(line: 2656, column: 19, scope: !13542)
!13572 = !DILocation(line: 2656, column: 2, scope: !13542)
!13573 = !DILocation(line: 2658, column: 17, scope: !13574)
!13574 = distinct !DILexicalBlock(scope: !13542, file: !3, line: 2658, column: 6)
!13575 = !DILocation(line: 2658, column: 6, scope: !13574)
!13576 = !DILocation(line: 2658, column: 21, scope: !13574)
!13577 = !DILocation(line: 2658, column: 24, scope: !13574)
!13578 = !DILocation(line: 2658, column: 28, scope: !13574)
!13579 = !DILocation(line: 2658, column: 37, scope: !13574)
!13580 = !DILocation(line: 2658, column: 6, scope: !13542)
!13581 = !DILocation(line: 2659, column: 3, scope: !13574)
!13582 = !DILocation(line: 2661, column: 16, scope: !13542)
!13583 = !DILocation(line: 2661, column: 22, scope: !13542)
!13584 = !DILocation(line: 2661, column: 2, scope: !13542)
!13585 = !DILocation(line: 2662, column: 20, scope: !13542)
!13586 = !DILocation(line: 2662, column: 2, scope: !13542)
!13587 = !DILocation(line: 2664, column: 17, scope: !13542)
!13588 = !DILocation(line: 2664, column: 21, scope: !13542)
!13589 = !DILocation(line: 379, column: 2, scope: !9810, inlinedAt: !13546)
!13590 = !DILocation(line: 379, column: 2, scope: !9813, inlinedAt: !13546)
!13591 = !DILocation(line: 379, column: 2, scope: !9816, inlinedAt: !13546)
!13592 = !DILocation(line: 2665, column: 29, scope: !13542)
!13593 = !DILocation(line: 2665, column: 20, scope: !13542)
!13594 = !DILocation(line: 2665, column: 19, scope: !13542)
!13595 = !DILocation(line: 2665, column: 2, scope: !13542)
!13596 = !DILocation(line: 2665, column: 6, scope: !13542)
!13597 = !DILocation(line: 2665, column: 16, scope: !13542)
!13598 = !DILocation(line: 2666, column: 15, scope: !13542)
!13599 = !DILocation(line: 2666, column: 29, scope: !13542)
!13600 = !DILocation(line: 2666, column: 33, scope: !13542)
!13601 = !DILocation(line: 2666, column: 39, scope: !13542)
!13602 = !DILocation(line: 2666, column: 28, scope: !13542)
!13603 = !DILocation(line: 2666, column: 51, scope: !13542)
!13604 = !DILocation(line: 2666, column: 55, scope: !13542)
!13605 = !DILocation(line: 2666, column: 2, scope: !13542)
!13606 = !DILocation(line: 2667, column: 14, scope: !13542)
!13607 = !DILocation(line: 2667, column: 2, scope: !13542)
!13608 = !DILocation(line: 2668, column: 19, scope: !13542)
!13609 = !DILocation(line: 2668, column: 23, scope: !13542)
!13610 = !DILocation(line: 404, column: 2, scope: !9834, inlinedAt: !13544)
!13611 = !DILocation(line: 404, column: 2, scope: !9837, inlinedAt: !13544)
!13612 = !DILocation(line: 404, column: 2, scope: !9840, inlinedAt: !13544)
!13613 = !DILocation(line: 2670, column: 6, scope: !13614)
!13614 = distinct !DILexicalBlock(scope: !13542, file: !3, line: 2670, column: 6)
!13615 = !DILocation(line: 2670, column: 10, scope: !13614)
!13616 = !DILocation(line: 2670, column: 16, scope: !13614)
!13617 = !DILocation(line: 2670, column: 6, scope: !13542)
!13618 = !DILocation(line: 2671, column: 12, scope: !13614)
!13619 = !DILocation(line: 2671, column: 16, scope: !13614)
!13620 = !DILocation(line: 2671, column: 22, scope: !13614)
!13621 = !DILocation(line: 2671, column: 27, scope: !13614)
!13622 = !DILocation(line: 2671, column: 3, scope: !13614)
!13623 = !DILocation(line: 2673, column: 14, scope: !13542)
!13624 = !DILocation(line: 2673, column: 20, scope: !13542)
!13625 = !DILocation(line: 2673, column: 24, scope: !13542)
!13626 = !DILocation(line: 2673, column: 2, scope: !13542)
!13627 = !DILocation(line: 2674, column: 17, scope: !13628)
!13628 = distinct !DILexicalBlock(scope: !13542, file: !3, line: 2674, column: 6)
!13629 = !DILocation(line: 2674, column: 6, scope: !13628)
!13630 = !DILocation(line: 2674, column: 6, scope: !13542)
!13631 = !DILocation(line: 2675, column: 16, scope: !13628)
!13632 = !DILocation(line: 2675, column: 3, scope: !13628)
!13633 = !DILocation(line: 2677, column: 14, scope: !13628)
!13634 = !DILocation(line: 2677, column: 3, scope: !13628)
!13635 = !DILocation(line: 2680, column: 14, scope: !13542)
!13636 = !DILocation(line: 2680, column: 18, scope: !13542)
!13637 = !DILocation(line: 2680, column: 2, scope: !13542)
!13638 = !DILocation(line: 2681, column: 15, scope: !13542)
!13639 = !DILocation(line: 2681, column: 19, scope: !13542)
!13640 = !DILocation(line: 2681, column: 2, scope: !13542)
!13641 = !DILocation(line: 2686, column: 14, scope: !13542)
!13642 = !DILocation(line: 2686, column: 18, scope: !13542)
!13643 = !DILocation(line: 2686, column: 2, scope: !13542)
!13644 = !DILocation(line: 2690, column: 15, scope: !13542)
!13645 = !DILocation(line: 2690, column: 19, scope: !13542)
!13646 = !DILocation(line: 2690, column: 2, scope: !13542)
!13647 = !DILocation(line: 2691, column: 15, scope: !13542)
!13648 = !DILocation(line: 2691, column: 19, scope: !13542)
!13649 = !DILocation(line: 2691, column: 2, scope: !13542)
!13650 = !DILocation(line: 2694, column: 15, scope: !13542)
!13651 = !DILocation(line: 2694, column: 19, scope: !13542)
!13652 = !DILocation(line: 2694, column: 2, scope: !13542)
!13653 = !DILocation(line: 2695, column: 15, scope: !13542)
!13654 = !DILocation(line: 2695, column: 19, scope: !13542)
!13655 = !DILocation(line: 2695, column: 2, scope: !13542)
!13656 = !DILocation(line: 2698, column: 14, scope: !13542)
!13657 = !DILocation(line: 2698, column: 18, scope: !13542)
!13658 = !DILocation(line: 2698, column: 2, scope: !13542)
!13659 = !DILocation(line: 2700, column: 15, scope: !13542)
!13660 = !DILocation(line: 2700, column: 19, scope: !13542)
!13661 = !DILocation(line: 2700, column: 2, scope: !13542)
!13662 = !DILocation(line: 2702, column: 17, scope: !13663)
!13663 = distinct !DILexicalBlock(scope: !13542, file: !3, line: 2702, column: 6)
!13664 = !DILocation(line: 2702, column: 6, scope: !13663)
!13665 = !DILocation(line: 2702, column: 6, scope: !13542)
!13666 = !DILocation(line: 2703, column: 15, scope: !13667)
!13667 = distinct !DILexicalBlock(scope: !13663, file: !3, line: 2702, column: 22)
!13668 = !DILocation(line: 2703, column: 19, scope: !13667)
!13669 = !DILocation(line: 2703, column: 3, scope: !13667)
!13670 = !DILocation(line: 2704, column: 15, scope: !13667)
!13671 = !DILocation(line: 2704, column: 19, scope: !13667)
!13672 = !DILocation(line: 2704, column: 3, scope: !13667)
!13673 = !DILocation(line: 2705, column: 2, scope: !13667)
!13674 = !DILocation(line: 2706, column: 15, scope: !13675)
!13675 = distinct !DILexicalBlock(scope: !13663, file: !3, line: 2705, column: 9)
!13676 = !DILocation(line: 2706, column: 19, scope: !13675)
!13677 = !DILocation(line: 2706, column: 3, scope: !13675)
!13678 = !DILocation(line: 2707, column: 15, scope: !13675)
!13679 = !DILocation(line: 2707, column: 19, scope: !13675)
!13680 = !DILocation(line: 2707, column: 3, scope: !13675)
!13681 = !DILocation(line: 2710, column: 11, scope: !13542)
!13682 = !DILocation(line: 2710, column: 2, scope: !13542)
!13683 = !DILocation(line: 2712, column: 19, scope: !13542)
!13684 = !DILocation(line: 2712, column: 2, scope: !13542)
!13685 = !DILocation(line: 2713, column: 16, scope: !13542)
!13686 = !DILocation(line: 2713, column: 2, scope: !13542)
!13687 = !DILocation(line: 2714, column: 21, scope: !13542)
!13688 = !DILocation(line: 2714, column: 2, scope: !13542)
!13689 = !DILocation(line: 2716, column: 16, scope: !13542)
!13690 = !DILocation(line: 2716, column: 2, scope: !13542)
!13691 = !DILocation(line: 2718, column: 8, scope: !13542)
!13692 = !DILocation(line: 2718, column: 14, scope: !13542)
!13693 = !DILocation(line: 2718, column: 22, scope: !13542)
!13694 = !DILocation(line: 2718, column: 2, scope: !13542)
!13695 = !DILocation(line: 2719, column: 8, scope: !13542)
!13696 = !DILocation(line: 2719, column: 14, scope: !13542)
!13697 = !DILocation(line: 2719, column: 22, scope: !13542)
!13698 = !DILocation(line: 2719, column: 2, scope: !13542)
!13699 = !DILocation(line: 2720, column: 21, scope: !13542)
!13700 = !DILocation(line: 2720, column: 25, scope: !13542)
!13701 = !DILocation(line: 2720, column: 31, scope: !13542)
!13702 = !DILocation(line: 2720, column: 36, scope: !13542)
!13703 = !DILocation(line: 2720, column: 42, scope: !13542)
!13704 = !DILocation(line: 2720, column: 52, scope: !13542)
!13705 = !DILocation(line: 2720, column: 58, scope: !13542)
!13706 = !DILocation(line: 2721, column: 6, scope: !13542)
!13707 = !DILocation(line: 2721, column: 12, scope: !13542)
!13708 = !DILocation(line: 2720, column: 2, scope: !13542)
!13709 = !DILocation(line: 2722, column: 2, scope: !13542)
!13710 = !DILocation(line: 2722, column: 8, scope: !13542)
!13711 = !DILocation(line: 2722, column: 12, scope: !13542)
!13712 = !DILocation(line: 2723, column: 2, scope: !13542)
!13713 = !DILocation(line: 2724, column: 1, scope: !13542)
!13714 = distinct !DISubprogram(name: "skge_xmit_frame", scope: !3, file: !3, line: 2733, type: !412, scopeLine: 2735, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!13715 = !DILocalVariable(name: "skb", arg: 1, scope: !13714, file: !3, line: 2733, type: !415)
!13716 = !DILocation(line: 2733, column: 52, scope: !13714)
!13717 = !DILocalVariable(name: "dev", arg: 2, scope: !13714, file: !3, line: 2734, type: !290)
!13718 = !DILocation(line: 2734, column: 27, scope: !13714)
!13719 = !DILocalVariable(name: "skge", scope: !13714, file: !3, line: 2736, type: !9172)
!13720 = !DILocation(line: 2736, column: 20, scope: !13714)
!13721 = !DILocation(line: 2736, column: 39, scope: !13714)
!13722 = !DILocation(line: 2736, column: 27, scope: !13714)
!13723 = !DILocalVariable(name: "hw", scope: !13714, file: !3, line: 2737, type: !8794)
!13724 = !DILocation(line: 2737, column: 18, scope: !13714)
!13725 = !DILocation(line: 2737, column: 23, scope: !13714)
!13726 = !DILocation(line: 2737, column: 29, scope: !13714)
!13727 = !DILocalVariable(name: "e", scope: !13714, file: !3, line: 2738, type: !9210)
!13728 = !DILocation(line: 2738, column: 23, scope: !13714)
!13729 = !DILocalVariable(name: "td", scope: !13714, file: !3, line: 2739, type: !13730)
!13730 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9237, size: 64)
!13731 = !DILocation(line: 2739, column: 23, scope: !13714)
!13732 = !DILocalVariable(name: "i", scope: !13714, file: !3, line: 2740, type: !32)
!13733 = !DILocation(line: 2740, column: 6, scope: !13714)
!13734 = !DILocalVariable(name: "control", scope: !13714, file: !3, line: 2741, type: !987)
!13735 = !DILocation(line: 2741, column: 6, scope: !13714)
!13736 = !DILocalVariable(name: "len", scope: !13714, file: !3, line: 2741, type: !987)
!13737 = !DILocation(line: 2741, column: 15, scope: !13714)
!13738 = !DILocalVariable(name: "map", scope: !13714, file: !3, line: 2742, type: !2036)
!13739 = !DILocation(line: 2742, column: 13, scope: !13714)
!13740 = !DILocation(line: 2744, column: 16, scope: !13741)
!13741 = distinct !DILexicalBlock(scope: !13714, file: !3, line: 2744, column: 6)
!13742 = !DILocation(line: 2744, column: 6, scope: !13741)
!13743 = !DILocation(line: 2744, column: 6, scope: !13714)
!13744 = !DILocation(line: 2745, column: 3, scope: !13741)
!13745 = !DILocation(line: 2747, column: 6, scope: !13746)
!13746 = distinct !DILexicalBlock(scope: !13714, file: !3, line: 2747, column: 6)
!13747 = !DILocation(line: 2747, column: 6, scope: !13714)
!13748 = !DILocation(line: 2748, column: 3, scope: !13746)
!13749 = !DILocation(line: 2750, column: 6, scope: !13714)
!13750 = !DILocation(line: 2750, column: 12, scope: !13714)
!13751 = !DILocation(line: 2750, column: 20, scope: !13714)
!13752 = !DILocation(line: 2750, column: 4, scope: !13714)
!13753 = !DILocation(line: 2751, column: 7, scope: !13714)
!13754 = !DILocation(line: 2751, column: 10, scope: !13714)
!13755 = !DILocation(line: 2751, column: 5, scope: !13714)
!13756 = !DILocation(line: 2752, column: 2, scope: !13714)
!13757 = !DILocation(line: 2752, column: 2, scope: !13758)
!13758 = distinct !DILexicalBlock(scope: !13759, file: !3, line: 2752, column: 2)
!13759 = distinct !DILexicalBlock(scope: !13714, file: !3, line: 2752, column: 2)
!13760 = !DILocation(line: 2752, column: 2, scope: !13759)
!13761 = !DILocation(line: 2752, column: 2, scope: !13762)
!13762 = distinct !DILexicalBlock(scope: !13758, file: !3, line: 2752, column: 2)
!13763 = !DILocation(line: 2752, column: 2, scope: !13764)
!13764 = distinct !DILexicalBlock(scope: !13762, file: !3, line: 2752, column: 2)
!13765 = !DILocation(line: 2752, column: 2, scope: !13766)
!13766 = distinct !DILexicalBlock(scope: !13762, file: !3, line: 2752, column: 2)
!13767 = !{i32 -2139427946, i32 -2139427917, i32 -2139427871, i32 -2139427813, i32 -2139427759, i32 -2139427705, i32 -2139427650, i32 -2139427619}
!13768 = !DILocation(line: 2752, column: 2, scope: !13769)
!13769 = distinct !DILexicalBlock(scope: !13770, file: !3, line: 2752, column: 2)
!13770 = distinct !DILexicalBlock(scope: !13762, file: !3, line: 2752, column: 2)
!13771 = !{i32 -2139427160, i32 -2139427153, i32 -2139427099, i32 -2139427068, i32 -2139427038}
!13772 = !DILocation(line: 2752, column: 2, scope: !13770)
!13773 = !DILocation(line: 2753, column: 11, scope: !13714)
!13774 = !DILocation(line: 2753, column: 2, scope: !13714)
!13775 = !DILocation(line: 2753, column: 5, scope: !13714)
!13776 = !DILocation(line: 2753, column: 9, scope: !13714)
!13777 = !DILocation(line: 2754, column: 20, scope: !13714)
!13778 = !DILocation(line: 2754, column: 8, scope: !13714)
!13779 = !DILocation(line: 2754, column: 6, scope: !13714)
!13780 = !DILocation(line: 2755, column: 8, scope: !13714)
!13781 = !DILocation(line: 2755, column: 6, scope: !13714)
!13782 = !DILocation(line: 2756, column: 25, scope: !13783)
!13783 = distinct !DILexicalBlock(scope: !13714, file: !3, line: 2756, column: 6)
!13784 = !DILocation(line: 2756, column: 29, scope: !13783)
!13785 = !DILocation(line: 2756, column: 35, scope: !13783)
!13786 = !DILocation(line: 2756, column: 40, scope: !13783)
!13787 = !DILocation(line: 2756, column: 6, scope: !13783)
!13788 = !DILocation(line: 2756, column: 6, scope: !13714)
!13789 = !DILocation(line: 2757, column: 3, scope: !13783)
!13790 = !DILocation(line: 2759, column: 2, scope: !13714)
!13791 = !DILocation(line: 2760, column: 2, scope: !13714)
!13792 = !DILocation(line: 2762, column: 15, scope: !13714)
!13793 = !DILocation(line: 2762, column: 2, scope: !13714)
!13794 = !DILocation(line: 2762, column: 6, scope: !13714)
!13795 = !DILocation(line: 2762, column: 13, scope: !13714)
!13796 = !DILocation(line: 2763, column: 15, scope: !13714)
!13797 = !DILocation(line: 2763, column: 2, scope: !13714)
!13798 = !DILocation(line: 2763, column: 6, scope: !13714)
!13799 = !DILocation(line: 2763, column: 13, scope: !13714)
!13800 = !DILocation(line: 2765, column: 6, scope: !13801)
!13801 = distinct !DILexicalBlock(scope: !13714, file: !3, line: 2765, column: 6)
!13802 = !DILocation(line: 2765, column: 11, scope: !13801)
!13803 = !DILocation(line: 2765, column: 21, scope: !13801)
!13804 = !DILocation(line: 2765, column: 6, scope: !13714)
!13805 = !DILocalVariable(name: "offset", scope: !13806, file: !3, line: 2766, type: !9448)
!13806 = distinct !DILexicalBlock(scope: !13801, file: !3, line: 2765, column: 42)
!13807 = !DILocation(line: 2766, column: 13, scope: !13806)
!13808 = !DILocation(line: 2766, column: 48, scope: !13806)
!13809 = !DILocation(line: 2766, column: 22, scope: !13806)
!13810 = !DILocation(line: 2771, column: 16, scope: !13811)
!13811 = distinct !DILexicalBlock(scope: !13806, file: !3, line: 2771, column: 7)
!13812 = !DILocation(line: 2771, column: 7, scope: !13811)
!13813 = !DILocation(line: 2771, column: 22, scope: !13811)
!13814 = !DILocation(line: 2771, column: 31, scope: !13811)
!13815 = !DILocation(line: 2771, column: 46, scope: !13811)
!13816 = !DILocation(line: 2772, column: 7, scope: !13811)
!13817 = !DILocation(line: 2772, column: 11, scope: !13811)
!13818 = !DILocation(line: 2772, column: 20, scope: !13811)
!13819 = !DILocation(line: 2772, column: 25, scope: !13811)
!13820 = !DILocation(line: 2772, column: 28, scope: !13811)
!13821 = !DILocation(line: 2772, column: 32, scope: !13811)
!13822 = !DILocation(line: 2772, column: 40, scope: !13811)
!13823 = !DILocation(line: 2771, column: 7, scope: !13806)
!13824 = !DILocation(line: 2773, column: 12, scope: !13811)
!13825 = !DILocation(line: 2773, column: 4, scope: !13811)
!13826 = !DILocation(line: 2775, column: 12, scope: !13811)
!13827 = !DILocation(line: 2777, column: 3, scope: !13806)
!13828 = !DILocation(line: 2777, column: 7, scope: !13806)
!13829 = !DILocation(line: 2777, column: 17, scope: !13806)
!13830 = !DILocation(line: 2778, column: 20, scope: !13806)
!13831 = !DILocation(line: 2778, column: 3, scope: !13806)
!13832 = !DILocation(line: 2778, column: 7, scope: !13806)
!13833 = !DILocation(line: 2778, column: 18, scope: !13806)
!13834 = !DILocation(line: 2779, column: 20, scope: !13806)
!13835 = !DILocation(line: 2779, column: 29, scope: !13806)
!13836 = !DILocation(line: 2779, column: 34, scope: !13806)
!13837 = !DILocation(line: 2779, column: 27, scope: !13806)
!13838 = !DILocation(line: 2779, column: 3, scope: !13806)
!13839 = !DILocation(line: 2779, column: 7, scope: !13806)
!13840 = !DILocation(line: 2779, column: 18, scope: !13806)
!13841 = !DILocation(line: 2780, column: 2, scope: !13806)
!13842 = !DILocation(line: 2781, column: 11, scope: !13801)
!13843 = !DILocation(line: 2783, column: 7, scope: !13844)
!13844 = distinct !DILexicalBlock(scope: !13714, file: !3, line: 2783, column: 6)
!13845 = !DILocation(line: 2783, column: 24, scope: !13844)
!13846 = !DILocation(line: 2783, column: 6, scope: !13714)
!13847 = !DILocation(line: 2784, column: 11, scope: !13844)
!13848 = !DILocation(line: 2784, column: 3, scope: !13844)
!13849 = !DILocalVariable(name: "tf", scope: !13850, file: !3, line: 2786, type: !13730)
!13850 = distinct !DILexicalBlock(scope: !13844, file: !3, line: 2785, column: 7)
!13851 = !DILocation(line: 2786, column: 24, scope: !13850)
!13852 = !DILocation(line: 2786, column: 29, scope: !13850)
!13853 = !DILocation(line: 2788, column: 11, scope: !13850)
!13854 = !DILocation(line: 2789, column: 10, scope: !13855)
!13855 = distinct !DILexicalBlock(scope: !13850, file: !3, line: 2789, column: 3)
!13856 = !DILocation(line: 2789, column: 8, scope: !13855)
!13857 = !DILocation(line: 2789, column: 15, scope: !13858)
!13858 = distinct !DILexicalBlock(scope: !13855, file: !3, line: 2789, column: 3)
!13859 = !DILocation(line: 2789, column: 19, scope: !13858)
!13860 = !DILocation(line: 2789, column: 36, scope: !13858)
!13861 = !DILocation(line: 2789, column: 17, scope: !13858)
!13862 = !DILocation(line: 2789, column: 3, scope: !13855)
!13863 = !DILocalVariable(name: "frag", scope: !13864, file: !3, line: 2790, type: !13865)
!13864 = distinct !DILexicalBlock(scope: !13858, file: !3, line: 2789, column: 51)
!13865 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13866, size: 64)
!13866 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9134)
!13867 = !DILocation(line: 2790, column: 22, scope: !13864)
!13868 = !DILocation(line: 2790, column: 30, scope: !13864)
!13869 = !DILocation(line: 2790, column: 47, scope: !13864)
!13870 = !DILocation(line: 2790, column: 53, scope: !13864)
!13871 = !DILocation(line: 2792, column: 28, scope: !13864)
!13872 = !DILocation(line: 2792, column: 32, scope: !13864)
!13873 = !DILocation(line: 2792, column: 38, scope: !13864)
!13874 = !DILocation(line: 2792, column: 43, scope: !13864)
!13875 = !DILocation(line: 2793, column: 27, scope: !13864)
!13876 = !DILocation(line: 2793, column: 13, scope: !13864)
!13877 = !DILocation(line: 2792, column: 10, scope: !13864)
!13878 = !DILocation(line: 2792, column: 8, scope: !13864)
!13879 = !DILocation(line: 2794, column: 27, scope: !13880)
!13880 = distinct !DILexicalBlock(scope: !13864, file: !3, line: 2794, column: 8)
!13881 = !DILocation(line: 2794, column: 31, scope: !13880)
!13882 = !DILocation(line: 2794, column: 37, scope: !13880)
!13883 = !DILocation(line: 2794, column: 42, scope: !13880)
!13884 = !DILocation(line: 2794, column: 8, scope: !13880)
!13885 = !DILocation(line: 2794, column: 8, scope: !13864)
!13886 = !DILocation(line: 2795, column: 5, scope: !13880)
!13887 = !DILocation(line: 2797, column: 8, scope: !13864)
!13888 = !DILocation(line: 2797, column: 11, scope: !13864)
!13889 = !DILocation(line: 2797, column: 6, scope: !13864)
!13890 = !DILocation(line: 2798, column: 13, scope: !13864)
!13891 = !DILocation(line: 2798, column: 4, scope: !13864)
!13892 = !DILocation(line: 2798, column: 7, scope: !13864)
!13893 = !DILocation(line: 2798, column: 11, scope: !13864)
!13894 = !DILocation(line: 2799, column: 9, scope: !13864)
!13895 = !DILocation(line: 2799, column: 12, scope: !13864)
!13896 = !DILocation(line: 2799, column: 7, scope: !13864)
!13897 = !DILocation(line: 2800, column: 4, scope: !13864)
!13898 = !DILocation(line: 2800, column: 4, scope: !13899)
!13899 = distinct !DILexicalBlock(scope: !13900, file: !3, line: 2800, column: 4)
!13900 = distinct !DILexicalBlock(scope: !13864, file: !3, line: 2800, column: 4)
!13901 = !DILocation(line: 2800, column: 4, scope: !13900)
!13902 = !DILocation(line: 2800, column: 4, scope: !13903)
!13903 = distinct !DILexicalBlock(scope: !13899, file: !3, line: 2800, column: 4)
!13904 = !DILocation(line: 2800, column: 4, scope: !13905)
!13905 = distinct !DILexicalBlock(scope: !13903, file: !3, line: 2800, column: 4)
!13906 = !DILocation(line: 2800, column: 4, scope: !13907)
!13907 = distinct !DILexicalBlock(scope: !13903, file: !3, line: 2800, column: 4)
!13908 = !{i32 -2139426310, i32 -2139426281, i32 -2139426235, i32 -2139426177, i32 -2139426123, i32 -2139426069, i32 -2139426014, i32 -2139425983}
!13909 = !DILocation(line: 2800, column: 4, scope: !13910)
!13910 = distinct !DILexicalBlock(scope: !13911, file: !3, line: 2800, column: 4)
!13911 = distinct !DILexicalBlock(scope: !13903, file: !3, line: 2800, column: 4)
!13912 = !{i32 -2139425524, i32 -2139425517, i32 -2139425463, i32 -2139425432, i32 -2139425402}
!13913 = !DILocation(line: 2800, column: 4, scope: !13911)
!13914 = !DILocation(line: 2802, column: 17, scope: !13864)
!13915 = !DILocation(line: 2802, column: 4, scope: !13864)
!13916 = !DILocation(line: 2802, column: 8, scope: !13864)
!13917 = !DILocation(line: 2802, column: 15, scope: !13864)
!13918 = !DILocation(line: 2803, column: 17, scope: !13864)
!13919 = !DILocation(line: 2803, column: 4, scope: !13864)
!13920 = !DILocation(line: 2803, column: 8, scope: !13864)
!13921 = !DILocation(line: 2803, column: 15, scope: !13864)
!13922 = !DILocation(line: 2804, column: 4, scope: !13864)
!13923 = !DILocation(line: 2805, column: 4, scope: !13864)
!13924 = !DILocation(line: 2807, column: 37, scope: !13864)
!13925 = !DILocation(line: 2807, column: 35, scope: !13864)
!13926 = !DILocation(line: 2807, column: 61, scope: !13864)
!13927 = !DILocation(line: 2807, column: 47, scope: !13864)
!13928 = !DILocation(line: 2807, column: 45, scope: !13864)
!13929 = !DILocation(line: 2807, column: 4, scope: !13864)
!13930 = !DILocation(line: 2807, column: 8, scope: !13864)
!13931 = !DILocation(line: 2807, column: 16, scope: !13864)
!13932 = !DILocation(line: 2808, column: 3, scope: !13864)
!13933 = !DILocation(line: 2789, column: 47, scope: !13858)
!13934 = !DILocation(line: 2789, column: 3, scope: !13858)
!13935 = distinct !{!13935, !13862, !13936}
!13936 = !DILocation(line: 2808, column: 3, scope: !13855)
!13937 = !DILocation(line: 2809, column: 3, scope: !13850)
!13938 = !DILocation(line: 2809, column: 7, scope: !13850)
!13939 = !DILocation(line: 2809, column: 15, scope: !13850)
!13940 = !DILocation(line: 2812, column: 2, scope: !13714)
!13941 = !{i32 -2139425190}
!13942 = !DILocation(line: 2813, column: 45, scope: !13714)
!13943 = !DILocation(line: 2813, column: 43, scope: !13714)
!13944 = !DILocation(line: 2813, column: 55, scope: !13714)
!13945 = !DILocation(line: 2813, column: 53, scope: !13714)
!13946 = !DILocation(line: 2813, column: 2, scope: !13714)
!13947 = !DILocation(line: 2813, column: 6, scope: !13714)
!13948 = !DILocation(line: 2813, column: 14, scope: !13714)
!13949 = !DILocation(line: 2814, column: 2, scope: !13714)
!13950 = !{i32 -2139425154}
!13951 = !DILocation(line: 2816, column: 20, scope: !13714)
!13952 = !DILocation(line: 2816, column: 25, scope: !13714)
!13953 = !DILocation(line: 2816, column: 30, scope: !13714)
!13954 = !DILocation(line: 2816, column: 2, scope: !13714)
!13955 = !DILocation(line: 2818, column: 14, scope: !13714)
!13956 = !DILocation(line: 2818, column: 18, scope: !13714)
!13957 = !DILocation(line: 2818, column: 2, scope: !13714)
!13958 = !DILocation(line: 2820, column: 2, scope: !13714)
!13959 = !DILocation(line: 2820, column: 2, scope: !13960)
!13960 = distinct !DILexicalBlock(scope: !13961, file: !3, line: 2820, column: 2)
!13961 = distinct !DILexicalBlock(scope: !13714, file: !3, line: 2820, column: 2)
!13962 = !DILocation(line: 2820, column: 2, scope: !13961)
!13963 = !DILocation(line: 2824, column: 25, scope: !13714)
!13964 = !DILocation(line: 2824, column: 28, scope: !13714)
!13965 = !DILocation(line: 2824, column: 2, scope: !13714)
!13966 = !DILocation(line: 2824, column: 8, scope: !13714)
!13967 = !DILocation(line: 2824, column: 16, scope: !13714)
!13968 = !DILocation(line: 2824, column: 23, scope: !13714)
!13969 = !DILocation(line: 2825, column: 2, scope: !13714)
!13970 = !{i32 -2139424602}
!13971 = !DILocation(line: 2827, column: 18, scope: !13972)
!13972 = distinct !DILexicalBlock(scope: !13714, file: !3, line: 2827, column: 6)
!13973 = !DILocation(line: 2827, column: 24, scope: !13972)
!13974 = !DILocation(line: 2827, column: 6, scope: !13972)
!13975 = !DILocation(line: 2827, column: 33, scope: !13972)
!13976 = !DILocation(line: 2827, column: 6, scope: !13714)
!13977 = !DILocation(line: 2829, column: 20, scope: !13978)
!13978 = distinct !DILexicalBlock(scope: !13972, file: !3, line: 2827, column: 50)
!13979 = !DILocation(line: 2829, column: 3, scope: !13978)
!13980 = !DILocation(line: 2830, column: 2, scope: !13978)
!13981 = !DILocation(line: 2832, column: 2, scope: !13714)
!13982 = !DILabel(scope: !13714, name: "mapping_unwind", file: !3, line: 2834)
!13983 = !DILocation(line: 2834, column: 1, scope: !13714)
!13984 = !DILocation(line: 2835, column: 6, scope: !13714)
!13985 = !DILocation(line: 2835, column: 12, scope: !13714)
!13986 = !DILocation(line: 2835, column: 20, scope: !13714)
!13987 = !DILocation(line: 2835, column: 4, scope: !13714)
!13988 = !DILocation(line: 2836, column: 2, scope: !13714)
!13989 = !DILocation(line: 2838, column: 2, scope: !13714)
!13990 = !DILocation(line: 2838, column: 10, scope: !13714)
!13991 = !DILocation(line: 2838, column: 13, scope: !13714)
!13992 = !DILocation(line: 2839, column: 7, scope: !13993)
!13993 = distinct !DILexicalBlock(scope: !13714, file: !3, line: 2838, column: 18)
!13994 = !DILocation(line: 2839, column: 10, scope: !13993)
!13995 = !DILocation(line: 2839, column: 5, scope: !13993)
!13996 = !DILocation(line: 2840, column: 3, scope: !13993)
!13997 = distinct !{!13997, !13989, !13998}
!13998 = !DILocation(line: 2842, column: 2, scope: !13714)
!13999 = !DILabel(scope: !13714, name: "mapping_error", file: !3, line: 2844)
!14000 = !DILocation(line: 2844, column: 1, scope: !13714)
!14001 = !DILocation(line: 2845, column: 6, scope: !14002)
!14002 = distinct !DILexicalBlock(scope: !13714, file: !3, line: 2845, column: 6)
!14003 = !DILocation(line: 2845, column: 6, scope: !13714)
!14004 = !DILocation(line: 2846, column: 3, scope: !14002)
!14005 = !DILocation(line: 2847, column: 20, scope: !13714)
!14006 = !DILocation(line: 2847, column: 2, scope: !13714)
!14007 = !DILocation(line: 2848, column: 2, scope: !13714)
!14008 = !DILocation(line: 2849, column: 1, scope: !13714)
!14009 = distinct !DISubprogram(name: "skge_set_multicast", scope: !3, file: !3, line: 3028, type: !406, scopeLine: 3029, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!14010 = !DILocalVariable(name: "dev", arg: 1, scope: !14009, file: !3, line: 3028, type: !290)
!14011 = !DILocation(line: 3028, column: 51, scope: !14009)
!14012 = !DILocalVariable(name: "skge", scope: !14009, file: !3, line: 3030, type: !9172)
!14013 = !DILocation(line: 3030, column: 20, scope: !14009)
!14014 = !DILocation(line: 3030, column: 39, scope: !14009)
!14015 = !DILocation(line: 3030, column: 27, scope: !14009)
!14016 = !DILocation(line: 3032, column: 17, scope: !14017)
!14017 = distinct !DILexicalBlock(scope: !14009, file: !3, line: 3032, column: 6)
!14018 = !DILocation(line: 3032, column: 23, scope: !14017)
!14019 = !DILocation(line: 3032, column: 6, scope: !14017)
!14020 = !DILocation(line: 3032, column: 6, scope: !14009)
!14021 = !DILocation(line: 3033, column: 25, scope: !14017)
!14022 = !DILocation(line: 3033, column: 3, scope: !14017)
!14023 = !DILocation(line: 3035, column: 23, scope: !14017)
!14024 = !DILocation(line: 3035, column: 3, scope: !14017)
!14025 = !DILocation(line: 3037, column: 1, scope: !14009)
!14026 = distinct !DISubprogram(name: "skge_set_mac_address", scope: !3, file: !3, line: 3446, type: !589, scopeLine: 3447, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!14027 = !DILocalVariable(name: "dev", arg: 1, scope: !14026, file: !3, line: 3446, type: !290)
!14028 = !DILocation(line: 3446, column: 52, scope: !14026)
!14029 = !DILocalVariable(name: "p", arg: 2, scope: !14026, file: !3, line: 3446, type: !591)
!14030 = !DILocation(line: 3446, column: 63, scope: !14026)
!14031 = !DILocalVariable(name: "skge", scope: !14026, file: !3, line: 3448, type: !9172)
!14032 = !DILocation(line: 3448, column: 20, scope: !14026)
!14033 = !DILocation(line: 3448, column: 39, scope: !14026)
!14034 = !DILocation(line: 3448, column: 27, scope: !14026)
!14035 = !DILocalVariable(name: "hw", scope: !14026, file: !3, line: 3449, type: !8794)
!14036 = !DILocation(line: 3449, column: 18, scope: !14026)
!14037 = !DILocation(line: 3449, column: 23, scope: !14026)
!14038 = !DILocation(line: 3449, column: 29, scope: !14026)
!14039 = !DILocalVariable(name: "port", scope: !14026, file: !3, line: 3450, type: !7)
!14040 = !DILocation(line: 3450, column: 11, scope: !14026)
!14041 = !DILocation(line: 3450, column: 18, scope: !14026)
!14042 = !DILocation(line: 3450, column: 24, scope: !14026)
!14043 = !DILocalVariable(name: "addr", scope: !14026, file: !3, line: 3451, type: !14044)
!14044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14045, size: 64)
!14045 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !609)
!14046 = !DILocation(line: 3451, column: 25, scope: !14026)
!14047 = !DILocation(line: 3451, column: 32, scope: !14026)
!14048 = !DILocalVariable(name: "ctrl", scope: !14026, file: !3, line: 3452, type: !581)
!14049 = !DILocation(line: 3452, column: 6, scope: !14026)
!14050 = !DILocation(line: 3454, column: 27, scope: !14051)
!14051 = distinct !DILexicalBlock(scope: !14026, file: !3, line: 3454, column: 6)
!14052 = !DILocation(line: 3454, column: 33, scope: !14051)
!14053 = !DILocation(line: 3454, column: 7, scope: !14051)
!14054 = !DILocation(line: 3454, column: 6, scope: !14026)
!14055 = !DILocation(line: 3455, column: 3, scope: !14051)
!14056 = !DILocation(line: 3457, column: 9, scope: !14026)
!14057 = !DILocation(line: 3457, column: 14, scope: !14026)
!14058 = !DILocation(line: 3457, column: 24, scope: !14026)
!14059 = !DILocation(line: 3457, column: 30, scope: !14026)
!14060 = !DILocation(line: 3457, column: 2, scope: !14026)
!14061 = !DILocation(line: 3459, column: 21, scope: !14062)
!14062 = distinct !DILexicalBlock(scope: !14026, file: !3, line: 3459, column: 6)
!14063 = !DILocation(line: 3459, column: 7, scope: !14062)
!14064 = !DILocation(line: 3459, column: 6, scope: !14026)
!14065 = !DILocation(line: 3460, column: 15, scope: !14066)
!14066 = distinct !DILexicalBlock(scope: !14062, file: !3, line: 3459, column: 27)
!14067 = !DILocation(line: 3460, column: 19, scope: !14066)
!14068 = !DILocation(line: 3460, column: 24, scope: !14066)
!14069 = !DILocation(line: 3460, column: 37, scope: !14066)
!14070 = !DILocation(line: 3460, column: 41, scope: !14066)
!14071 = !DILocation(line: 3460, column: 35, scope: !14066)
!14072 = !DILocation(line: 3460, column: 45, scope: !14066)
!14073 = !DILocation(line: 3460, column: 50, scope: !14066)
!14074 = !DILocation(line: 3460, column: 3, scope: !14066)
!14075 = !DILocation(line: 3461, column: 15, scope: !14066)
!14076 = !DILocation(line: 3461, column: 19, scope: !14066)
!14077 = !DILocation(line: 3461, column: 24, scope: !14066)
!14078 = !DILocation(line: 3461, column: 37, scope: !14066)
!14079 = !DILocation(line: 3461, column: 41, scope: !14066)
!14080 = !DILocation(line: 3461, column: 35, scope: !14066)
!14081 = !DILocation(line: 3461, column: 45, scope: !14066)
!14082 = !DILocation(line: 3461, column: 50, scope: !14066)
!14083 = !DILocation(line: 3461, column: 3, scope: !14066)
!14084 = !DILocation(line: 3462, column: 2, scope: !14066)
!14085 = !DILocation(line: 3464, column: 17, scope: !14086)
!14086 = distinct !DILexicalBlock(scope: !14062, file: !3, line: 3462, column: 9)
!14087 = !DILocation(line: 3464, column: 21, scope: !14086)
!14088 = !DILocation(line: 3464, column: 3, scope: !14086)
!14089 = !DILocation(line: 3465, column: 21, scope: !14086)
!14090 = !DILocation(line: 3465, column: 25, scope: !14086)
!14091 = !DILocation(line: 3465, column: 10, scope: !14086)
!14092 = !DILocation(line: 3465, column: 8, scope: !14086)
!14093 = !DILocation(line: 3466, column: 15, scope: !14086)
!14094 = !DILocation(line: 3466, column: 19, scope: !14086)
!14095 = !DILocation(line: 3466, column: 37, scope: !14086)
!14096 = !DILocation(line: 3466, column: 42, scope: !14086)
!14097 = !DILocation(line: 3466, column: 3, scope: !14086)
!14098 = !DILocation(line: 3468, column: 15, scope: !14086)
!14099 = !DILocation(line: 3468, column: 19, scope: !14086)
!14100 = !DILocation(line: 3468, column: 24, scope: !14086)
!14101 = !DILocation(line: 3468, column: 37, scope: !14086)
!14102 = !DILocation(line: 3468, column: 41, scope: !14086)
!14103 = !DILocation(line: 3468, column: 35, scope: !14086)
!14104 = !DILocation(line: 3468, column: 45, scope: !14086)
!14105 = !DILocation(line: 3468, column: 50, scope: !14086)
!14106 = !DILocation(line: 3468, column: 3, scope: !14086)
!14107 = !DILocation(line: 3469, column: 15, scope: !14086)
!14108 = !DILocation(line: 3469, column: 19, scope: !14086)
!14109 = !DILocation(line: 3469, column: 24, scope: !14086)
!14110 = !DILocation(line: 3469, column: 37, scope: !14086)
!14111 = !DILocation(line: 3469, column: 41, scope: !14086)
!14112 = !DILocation(line: 3469, column: 35, scope: !14086)
!14113 = !DILocation(line: 3469, column: 45, scope: !14086)
!14114 = !DILocation(line: 3469, column: 50, scope: !14086)
!14115 = !DILocation(line: 3469, column: 3, scope: !14086)
!14116 = !DILocation(line: 3471, column: 18, scope: !14117)
!14117 = distinct !DILexicalBlock(scope: !14086, file: !3, line: 3471, column: 7)
!14118 = !DILocation(line: 3471, column: 7, scope: !14117)
!14119 = !DILocation(line: 3471, column: 7, scope: !14086)
!14120 = !DILocation(line: 3472, column: 15, scope: !14117)
!14121 = !DILocation(line: 3472, column: 19, scope: !14117)
!14122 = !DILocation(line: 3472, column: 32, scope: !14117)
!14123 = !DILocation(line: 3472, column: 37, scope: !14117)
!14124 = !DILocation(line: 3472, column: 4, scope: !14117)
!14125 = !DILocation(line: 3474, column: 17, scope: !14126)
!14126 = distinct !DILexicalBlock(scope: !14117, file: !3, line: 3473, column: 8)
!14127 = !DILocation(line: 3474, column: 21, scope: !14126)
!14128 = !DILocation(line: 3474, column: 43, scope: !14126)
!14129 = !DILocation(line: 3474, column: 48, scope: !14126)
!14130 = !DILocation(line: 3474, column: 4, scope: !14126)
!14131 = !DILocation(line: 3475, column: 17, scope: !14126)
!14132 = !DILocation(line: 3475, column: 21, scope: !14126)
!14133 = !DILocation(line: 3475, column: 43, scope: !14126)
!14134 = !DILocation(line: 3475, column: 48, scope: !14126)
!14135 = !DILocation(line: 3475, column: 4, scope: !14126)
!14136 = !DILocation(line: 3478, column: 15, scope: !14086)
!14137 = !DILocation(line: 3478, column: 19, scope: !14086)
!14138 = !DILocation(line: 3478, column: 37, scope: !14086)
!14139 = !DILocation(line: 3478, column: 3, scope: !14086)
!14140 = !DILocation(line: 3479, column: 19, scope: !14086)
!14141 = !DILocation(line: 3479, column: 23, scope: !14086)
!14142 = !DILocation(line: 3479, column: 3, scope: !14086)
!14143 = !DILocation(line: 3482, column: 2, scope: !14026)
!14144 = !DILocation(line: 3483, column: 1, scope: !14026)
!14145 = distinct !DISubprogram(name: "skge_ioctl", scope: !3, file: !3, line: 2437, type: !595, scopeLine: 2438, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!14146 = !DILocalVariable(name: "dev", arg: 1, scope: !14145, file: !3, line: 2437, type: !290)
!14147 = !DILocation(line: 2437, column: 42, scope: !14145)
!14148 = !DILocalVariable(name: "ifr", arg: 2, scope: !14145, file: !3, line: 2437, type: !597)
!14149 = !DILocation(line: 2437, column: 61, scope: !14145)
!14150 = !DILocalVariable(name: "cmd", arg: 3, scope: !14145, file: !3, line: 2437, type: !32)
!14151 = !DILocation(line: 2437, column: 70, scope: !14145)
!14152 = !DILocalVariable(name: "data", scope: !14145, file: !3, line: 2439, type: !9164)
!14153 = !DILocation(line: 2439, column: 25, scope: !14145)
!14154 = !DILocation(line: 2439, column: 39, scope: !14145)
!14155 = !DILocation(line: 2439, column: 32, scope: !14145)
!14156 = !DILocalVariable(name: "skge", scope: !14145, file: !3, line: 2440, type: !9172)
!14157 = !DILocation(line: 2440, column: 20, scope: !14145)
!14158 = !DILocation(line: 2440, column: 39, scope: !14145)
!14159 = !DILocation(line: 2440, column: 27, scope: !14145)
!14160 = !DILocalVariable(name: "hw", scope: !14145, file: !3, line: 2441, type: !8794)
!14161 = !DILocation(line: 2441, column: 18, scope: !14145)
!14162 = !DILocation(line: 2441, column: 23, scope: !14145)
!14163 = !DILocation(line: 2441, column: 29, scope: !14145)
!14164 = !DILocalVariable(name: "err", scope: !14145, file: !3, line: 2442, type: !32)
!14165 = !DILocation(line: 2442, column: 6, scope: !14145)
!14166 = !DILocation(line: 2444, column: 21, scope: !14167)
!14167 = distinct !DILexicalBlock(scope: !14145, file: !3, line: 2444, column: 6)
!14168 = !DILocation(line: 2444, column: 7, scope: !14167)
!14169 = !DILocation(line: 2444, column: 6, scope: !14145)
!14170 = !DILocation(line: 2445, column: 3, scope: !14167)
!14171 = !DILocation(line: 2447, column: 10, scope: !14145)
!14172 = !DILocation(line: 2447, column: 2, scope: !14145)
!14173 = !DILocation(line: 2449, column: 18, scope: !14174)
!14174 = distinct !DILexicalBlock(scope: !14145, file: !3, line: 2447, column: 15)
!14175 = !DILocation(line: 2449, column: 22, scope: !14174)
!14176 = !DILocation(line: 2449, column: 3, scope: !14174)
!14177 = !DILocation(line: 2449, column: 9, scope: !14174)
!14178 = !DILocation(line: 2449, column: 16, scope: !14174)
!14179 = !DILocalVariable(name: "val", scope: !14180, file: !3, line: 2453, type: !581)
!14180 = distinct !DILexicalBlock(scope: !14174, file: !3, line: 2452, column: 20)
!14181 = !DILocation(line: 2453, column: 7, scope: !14180)
!14182 = !DILocation(line: 2454, column: 17, scope: !14180)
!14183 = !DILocation(line: 2454, column: 21, scope: !14180)
!14184 = !DILocation(line: 2454, column: 3, scope: !14180)
!14185 = !DILocation(line: 2456, column: 18, scope: !14186)
!14186 = distinct !DILexicalBlock(scope: !14180, file: !3, line: 2456, column: 7)
!14187 = !DILocation(line: 2456, column: 7, scope: !14186)
!14188 = !DILocation(line: 2456, column: 7, scope: !14180)
!14189 = !DILocation(line: 2457, column: 24, scope: !14186)
!14190 = !DILocation(line: 2457, column: 28, scope: !14186)
!14191 = !DILocation(line: 2457, column: 34, scope: !14186)
!14192 = !DILocation(line: 2457, column: 40, scope: !14186)
!14193 = !DILocation(line: 2457, column: 46, scope: !14186)
!14194 = !DILocation(line: 2457, column: 54, scope: !14186)
!14195 = !DILocation(line: 2457, column: 10, scope: !14186)
!14196 = !DILocation(line: 2457, column: 8, scope: !14186)
!14197 = !DILocation(line: 2457, column: 4, scope: !14186)
!14198 = !DILocation(line: 2459, column: 24, scope: !14186)
!14199 = !DILocation(line: 2459, column: 28, scope: !14186)
!14200 = !DILocation(line: 2459, column: 34, scope: !14186)
!14201 = !DILocation(line: 2459, column: 40, scope: !14186)
!14202 = !DILocation(line: 2459, column: 46, scope: !14186)
!14203 = !DILocation(line: 2459, column: 54, scope: !14186)
!14204 = !DILocation(line: 2459, column: 10, scope: !14186)
!14205 = !DILocation(line: 2459, column: 8, scope: !14186)
!14206 = !DILocation(line: 2460, column: 19, scope: !14180)
!14207 = !DILocation(line: 2460, column: 23, scope: !14180)
!14208 = !DILocation(line: 2460, column: 3, scope: !14180)
!14209 = !DILocation(line: 2461, column: 19, scope: !14180)
!14210 = !DILocation(line: 2461, column: 3, scope: !14180)
!14211 = !DILocation(line: 2461, column: 9, scope: !14180)
!14212 = !DILocation(line: 2461, column: 17, scope: !14180)
!14213 = !DILocation(line: 2462, column: 3, scope: !14180)
!14214 = !DILocation(line: 2466, column: 17, scope: !14174)
!14215 = !DILocation(line: 2466, column: 21, scope: !14174)
!14216 = !DILocation(line: 2466, column: 3, scope: !14174)
!14217 = !DILocation(line: 2467, column: 18, scope: !14218)
!14218 = distinct !DILexicalBlock(scope: !14174, file: !3, line: 2467, column: 7)
!14219 = !DILocation(line: 2467, column: 7, scope: !14218)
!14220 = !DILocation(line: 2467, column: 7, scope: !14174)
!14221 = !DILocation(line: 2468, column: 23, scope: !14218)
!14222 = !DILocation(line: 2468, column: 27, scope: !14218)
!14223 = !DILocation(line: 2468, column: 33, scope: !14218)
!14224 = !DILocation(line: 2468, column: 39, scope: !14218)
!14225 = !DILocation(line: 2468, column: 45, scope: !14218)
!14226 = !DILocation(line: 2468, column: 53, scope: !14218)
!14227 = !DILocation(line: 2469, column: 8, scope: !14218)
!14228 = !DILocation(line: 2469, column: 14, scope: !14218)
!14229 = !DILocation(line: 2468, column: 10, scope: !14218)
!14230 = !DILocation(line: 2468, column: 8, scope: !14218)
!14231 = !DILocation(line: 2468, column: 4, scope: !14218)
!14232 = !DILocation(line: 2471, column: 23, scope: !14218)
!14233 = !DILocation(line: 2471, column: 27, scope: !14218)
!14234 = !DILocation(line: 2471, column: 33, scope: !14218)
!14235 = !DILocation(line: 2471, column: 39, scope: !14218)
!14236 = !DILocation(line: 2471, column: 45, scope: !14218)
!14237 = !DILocation(line: 2471, column: 53, scope: !14218)
!14238 = !DILocation(line: 2472, column: 8, scope: !14218)
!14239 = !DILocation(line: 2472, column: 14, scope: !14218)
!14240 = !DILocation(line: 2471, column: 10, scope: !14218)
!14241 = !DILocation(line: 2471, column: 8, scope: !14218)
!14242 = !DILocation(line: 2473, column: 19, scope: !14174)
!14243 = !DILocation(line: 2473, column: 23, scope: !14174)
!14244 = !DILocation(line: 2473, column: 3, scope: !14174)
!14245 = !DILocation(line: 2474, column: 3, scope: !14174)
!14246 = !DILocation(line: 2476, column: 9, scope: !14145)
!14247 = !DILocation(line: 2476, column: 2, scope: !14145)
!14248 = !DILocation(line: 2477, column: 1, scope: !14145)
!14249 = distinct !DISubprogram(name: "skge_change_mtu", scope: !3, file: !3, line: 2896, type: !723, scopeLine: 2897, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!14250 = !DILocalVariable(name: "dev", arg: 1, scope: !14249, file: !3, line: 2896, type: !290)
!14251 = !DILocation(line: 2896, column: 47, scope: !14249)
!14252 = !DILocalVariable(name: "new_mtu", arg: 2, scope: !14249, file: !3, line: 2896, type: !32)
!14253 = !DILocation(line: 2896, column: 56, scope: !14249)
!14254 = !DILocalVariable(name: "err", scope: !14249, file: !3, line: 2898, type: !32)
!14255 = !DILocation(line: 2898, column: 6, scope: !14249)
!14256 = !DILocation(line: 2900, column: 21, scope: !14257)
!14257 = distinct !DILexicalBlock(scope: !14249, file: !3, line: 2900, column: 6)
!14258 = !DILocation(line: 2900, column: 7, scope: !14257)
!14259 = !DILocation(line: 2900, column: 6, scope: !14249)
!14260 = !DILocation(line: 2901, column: 14, scope: !14261)
!14261 = distinct !DILexicalBlock(scope: !14257, file: !3, line: 2900, column: 27)
!14262 = !DILocation(line: 2901, column: 3, scope: !14261)
!14263 = !DILocation(line: 2901, column: 8, scope: !14261)
!14264 = !DILocation(line: 2901, column: 12, scope: !14261)
!14265 = !DILocation(line: 2902, column: 3, scope: !14261)
!14266 = !DILocation(line: 2905, column: 12, scope: !14249)
!14267 = !DILocation(line: 2905, column: 2, scope: !14249)
!14268 = !DILocation(line: 2907, column: 13, scope: !14249)
!14269 = !DILocation(line: 2907, column: 2, scope: !14249)
!14270 = !DILocation(line: 2907, column: 7, scope: !14249)
!14271 = !DILocation(line: 2907, column: 11, scope: !14249)
!14272 = !DILocation(line: 2909, column: 16, scope: !14249)
!14273 = !DILocation(line: 2909, column: 8, scope: !14249)
!14274 = !DILocation(line: 2909, column: 6, scope: !14249)
!14275 = !DILocation(line: 2910, column: 6, scope: !14276)
!14276 = distinct !DILexicalBlock(scope: !14249, file: !3, line: 2910, column: 6)
!14277 = !DILocation(line: 2910, column: 6, scope: !14249)
!14278 = !DILocation(line: 2911, column: 13, scope: !14276)
!14279 = !DILocation(line: 2911, column: 3, scope: !14276)
!14280 = !DILocation(line: 2913, column: 9, scope: !14249)
!14281 = !DILocation(line: 2913, column: 2, scope: !14249)
!14282 = !DILocation(line: 2914, column: 1, scope: !14249)
!14283 = distinct !DISubprogram(name: "skge_tx_timeout", scope: !3, file: !3, line: 2885, type: !733, scopeLine: 2886, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!14284 = !DILocalVariable(name: "dev", arg: 1, scope: !14283, file: !3, line: 2885, type: !290)
!14285 = !DILocation(line: 2885, column: 48, scope: !14283)
!14286 = !DILocalVariable(name: "txqueue", arg: 2, scope: !14283, file: !3, line: 2885, type: !7)
!14287 = !DILocation(line: 2885, column: 66, scope: !14283)
!14288 = !DILocalVariable(name: "skge", scope: !14283, file: !3, line: 2887, type: !9172)
!14289 = !DILocation(line: 2887, column: 20, scope: !14283)
!14290 = !DILocation(line: 2887, column: 39, scope: !14283)
!14291 = !DILocation(line: 2887, column: 27, scope: !14283)
!14292 = !DILocation(line: 2889, column: 2, scope: !14283)
!14293 = !DILocation(line: 2889, column: 2, scope: !14294)
!14294 = distinct !DILexicalBlock(scope: !14295, file: !3, line: 2889, column: 2)
!14295 = distinct !DILexicalBlock(scope: !14283, file: !3, line: 2889, column: 2)
!14296 = !DILocation(line: 2889, column: 2, scope: !14295)
!14297 = !DILocation(line: 2891, column: 14, scope: !14283)
!14298 = !DILocation(line: 2891, column: 20, scope: !14283)
!14299 = !DILocation(line: 2891, column: 24, scope: !14283)
!14300 = !DILocation(line: 2891, column: 2, scope: !14283)
!14301 = !DILocation(line: 2892, column: 16, scope: !14283)
!14302 = !DILocation(line: 2892, column: 2, scope: !14283)
!14303 = !DILocation(line: 2893, column: 19, scope: !14283)
!14304 = !DILocation(line: 2893, column: 2, scope: !14283)
!14305 = !DILocation(line: 2894, column: 1, scope: !14283)
!14306 = distinct !DISubprogram(name: "skge_get_stats", scope: !3, file: !3, line: 460, type: !781, scopeLine: 461, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!14307 = !DILocalVariable(name: "dev", arg: 1, scope: !14306, file: !3, line: 460, type: !290)
!14308 = !DILocation(line: 460, column: 67, scope: !14306)
!14309 = !DILocalVariable(name: "skge", scope: !14306, file: !3, line: 462, type: !9172)
!14310 = !DILocation(line: 462, column: 20, scope: !14306)
!14311 = !DILocation(line: 462, column: 39, scope: !14306)
!14312 = !DILocation(line: 462, column: 27, scope: !14306)
!14313 = !DILocalVariable(name: "data", scope: !14306, file: !3, line: 463, type: !14314)
!14314 = !DICompositeType(tag: DW_TAG_array_type, baseType: !331, size: 1344, elements: !9465)
!14315 = !DILocation(line: 463, column: 6, scope: !14306)
!14316 = !DILocation(line: 465, column: 17, scope: !14317)
!14317 = distinct !DILexicalBlock(scope: !14306, file: !3, line: 465, column: 6)
!14318 = !DILocation(line: 465, column: 23, scope: !14317)
!14319 = !DILocation(line: 465, column: 6, scope: !14317)
!14320 = !DILocation(line: 465, column: 6, scope: !14306)
!14321 = !DILocation(line: 466, column: 21, scope: !14317)
!14322 = !DILocation(line: 466, column: 27, scope: !14317)
!14323 = !DILocation(line: 466, column: 3, scope: !14317)
!14324 = !DILocation(line: 468, column: 19, scope: !14317)
!14325 = !DILocation(line: 468, column: 25, scope: !14317)
!14326 = !DILocation(line: 468, column: 3, scope: !14317)
!14327 = !DILocation(line: 470, column: 24, scope: !14306)
!14328 = !DILocation(line: 470, column: 2, scope: !14306)
!14329 = !DILocation(line: 470, column: 7, scope: !14306)
!14330 = !DILocation(line: 470, column: 13, scope: !14306)
!14331 = !DILocation(line: 470, column: 22, scope: !14306)
!14332 = !DILocation(line: 471, column: 24, scope: !14306)
!14333 = !DILocation(line: 471, column: 2, scope: !14306)
!14334 = !DILocation(line: 471, column: 7, scope: !14306)
!14335 = !DILocation(line: 471, column: 13, scope: !14306)
!14336 = !DILocation(line: 471, column: 22, scope: !14306)
!14337 = !DILocation(line: 472, column: 26, scope: !14306)
!14338 = !DILocation(line: 472, column: 36, scope: !14306)
!14339 = !DILocation(line: 472, column: 34, scope: !14306)
!14340 = !DILocation(line: 472, column: 46, scope: !14306)
!14341 = !DILocation(line: 472, column: 44, scope: !14306)
!14342 = !DILocation(line: 472, column: 2, scope: !14306)
!14343 = !DILocation(line: 472, column: 7, scope: !14306)
!14344 = !DILocation(line: 472, column: 13, scope: !14306)
!14345 = !DILocation(line: 472, column: 24, scope: !14306)
!14346 = !DILocation(line: 473, column: 26, scope: !14306)
!14347 = !DILocation(line: 473, column: 36, scope: !14306)
!14348 = !DILocation(line: 473, column: 34, scope: !14306)
!14349 = !DILocation(line: 473, column: 46, scope: !14306)
!14350 = !DILocation(line: 473, column: 44, scope: !14306)
!14351 = !DILocation(line: 473, column: 2, scope: !14306)
!14352 = !DILocation(line: 473, column: 7, scope: !14306)
!14353 = !DILocation(line: 473, column: 13, scope: !14306)
!14354 = !DILocation(line: 473, column: 24, scope: !14306)
!14355 = !DILocation(line: 474, column: 25, scope: !14306)
!14356 = !DILocation(line: 474, column: 35, scope: !14306)
!14357 = !DILocation(line: 474, column: 33, scope: !14306)
!14358 = !DILocation(line: 474, column: 2, scope: !14306)
!14359 = !DILocation(line: 474, column: 7, scope: !14306)
!14360 = !DILocation(line: 474, column: 13, scope: !14306)
!14361 = !DILocation(line: 474, column: 23, scope: !14306)
!14362 = !DILocation(line: 475, column: 26, scope: !14306)
!14363 = !DILocation(line: 475, column: 2, scope: !14306)
!14364 = !DILocation(line: 475, column: 7, scope: !14306)
!14365 = !DILocation(line: 475, column: 13, scope: !14306)
!14366 = !DILocation(line: 475, column: 24, scope: !14306)
!14367 = !DILocation(line: 476, column: 33, scope: !14306)
!14368 = !DILocation(line: 476, column: 2, scope: !14306)
!14369 = !DILocation(line: 476, column: 7, scope: !14306)
!14370 = !DILocation(line: 476, column: 13, scope: !14306)
!14371 = !DILocation(line: 476, column: 31, scope: !14306)
!14372 = !DILocation(line: 478, column: 10, scope: !14306)
!14373 = !DILocation(line: 478, column: 15, scope: !14306)
!14374 = !DILocation(line: 478, column: 2, scope: !14306)
!14375 = distinct !DISubprogram(name: "dma_alloc_coherent", scope: !9424, file: !9424, line: 392, type: !14376, scopeLine: 394, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!14376 = !DISubroutineType(types: !14377)
!14377 = !{!591, !6544, !1039, !14378, !1742}
!14378 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2036, size: 64)
!14379 = !DILocalVariable(name: "dev", arg: 1, scope: !14375, file: !9424, line: 392, type: !6544)
!14380 = !DILocation(line: 392, column: 55, scope: !14375)
!14381 = !DILocalVariable(name: "size", arg: 2, scope: !14375, file: !9424, line: 392, type: !1039)
!14382 = !DILocation(line: 392, column: 67, scope: !14375)
!14383 = !DILocalVariable(name: "dma_handle", arg: 3, scope: !14375, file: !9424, line: 393, type: !14378)
!14384 = !DILocation(line: 393, column: 15, scope: !14375)
!14385 = !DILocalVariable(name: "gfp", arg: 4, scope: !14375, file: !9424, line: 393, type: !1742)
!14386 = !DILocation(line: 393, column: 33, scope: !14375)
!14387 = !DILocation(line: 396, column: 25, scope: !14375)
!14388 = !DILocation(line: 396, column: 30, scope: !14375)
!14389 = !DILocation(line: 396, column: 36, scope: !14375)
!14390 = !DILocation(line: 396, column: 48, scope: !14375)
!14391 = !DILocation(line: 397, column: 5, scope: !14375)
!14392 = !DILocation(line: 397, column: 9, scope: !14375)
!14393 = !DILocation(line: 397, column: 4, scope: !14375)
!14394 = !DILocation(line: 396, column: 9, scope: !14375)
!14395 = !DILocation(line: 396, column: 2, scope: !14375)
!14396 = distinct !DISubprogram(name: "skge_ring_alloc", scope: !3, file: !3, line: 910, type: !14397, scopeLine: 911, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!14397 = !DISubroutineType(types: !14398)
!14398 = !{!32, !12862, !591, !987}
!14399 = !DILocalVariable(name: "ring", arg: 1, scope: !14396, file: !3, line: 910, type: !12862)
!14400 = !DILocation(line: 910, column: 46, scope: !14396)
!14401 = !DILocalVariable(name: "vaddr", arg: 2, scope: !14396, file: !3, line: 910, type: !591)
!14402 = !DILocation(line: 910, column: 58, scope: !14396)
!14403 = !DILocalVariable(name: "base", arg: 3, scope: !14396, file: !3, line: 910, type: !987)
!14404 = !DILocation(line: 910, column: 69, scope: !14396)
!14405 = !DILocalVariable(name: "d", scope: !14396, file: !3, line: 912, type: !13730)
!14406 = !DILocation(line: 912, column: 23, scope: !14396)
!14407 = !DILocalVariable(name: "e", scope: !14396, file: !3, line: 913, type: !9210)
!14408 = !DILocation(line: 913, column: 23, scope: !14396)
!14409 = !DILocalVariable(name: "i", scope: !14396, file: !3, line: 914, type: !32)
!14410 = !DILocation(line: 914, column: 6, scope: !14396)
!14411 = !DILocation(line: 916, column: 24, scope: !14396)
!14412 = !DILocation(line: 916, column: 30, scope: !14396)
!14413 = !DILocation(line: 916, column: 16, scope: !14396)
!14414 = !DILocation(line: 916, column: 2, scope: !14396)
!14415 = !DILocation(line: 916, column: 8, scope: !14396)
!14416 = !DILocation(line: 916, column: 14, scope: !14396)
!14417 = !DILocation(line: 917, column: 7, scope: !14418)
!14418 = distinct !DILexicalBlock(scope: !14396, file: !3, line: 917, column: 6)
!14419 = !DILocation(line: 917, column: 13, scope: !14418)
!14420 = !DILocation(line: 917, column: 6, scope: !14396)
!14421 = !DILocation(line: 918, column: 3, scope: !14418)
!14422 = !DILocation(line: 920, column: 9, scope: !14423)
!14423 = distinct !DILexicalBlock(scope: !14396, file: !3, line: 920, column: 2)
!14424 = !DILocation(line: 920, column: 18, scope: !14423)
!14425 = !DILocation(line: 920, column: 24, scope: !14423)
!14426 = !DILocation(line: 920, column: 16, scope: !14423)
!14427 = !DILocation(line: 920, column: 35, scope: !14423)
!14428 = !DILocation(line: 920, column: 33, scope: !14423)
!14429 = !DILocation(line: 920, column: 7, scope: !14423)
!14430 = !DILocation(line: 920, column: 42, scope: !14431)
!14431 = distinct !DILexicalBlock(scope: !14423, file: !3, line: 920, column: 2)
!14432 = !DILocation(line: 920, column: 46, scope: !14431)
!14433 = !DILocation(line: 920, column: 52, scope: !14431)
!14434 = !DILocation(line: 920, column: 44, scope: !14431)
!14435 = !DILocation(line: 920, column: 2, scope: !14423)
!14436 = !DILocation(line: 921, column: 13, scope: !14437)
!14437 = distinct !DILexicalBlock(scope: !14431, file: !3, line: 920, column: 74)
!14438 = !DILocation(line: 921, column: 3, scope: !14437)
!14439 = !DILocation(line: 921, column: 6, scope: !14437)
!14440 = !DILocation(line: 921, column: 11, scope: !14437)
!14441 = !DILocation(line: 922, column: 7, scope: !14442)
!14442 = distinct !DILexicalBlock(scope: !14437, file: !3, line: 922, column: 7)
!14443 = !DILocation(line: 922, column: 12, scope: !14442)
!14444 = !DILocation(line: 922, column: 18, scope: !14442)
!14445 = !DILocation(line: 922, column: 24, scope: !14442)
!14446 = !DILocation(line: 922, column: 9, scope: !14442)
!14447 = !DILocation(line: 922, column: 7, scope: !14437)
!14448 = !DILocation(line: 923, column: 14, scope: !14449)
!14449 = distinct !DILexicalBlock(scope: !14442, file: !3, line: 922, column: 29)
!14450 = !DILocation(line: 923, column: 20, scope: !14449)
!14451 = !DILocation(line: 923, column: 4, scope: !14449)
!14452 = !DILocation(line: 923, column: 7, scope: !14449)
!14453 = !DILocation(line: 923, column: 12, scope: !14449)
!14454 = !DILocation(line: 924, column: 21, scope: !14449)
!14455 = !DILocation(line: 924, column: 4, scope: !14449)
!14456 = !DILocation(line: 924, column: 7, scope: !14449)
!14457 = !DILocation(line: 924, column: 19, scope: !14449)
!14458 = !DILocation(line: 925, column: 3, scope: !14449)
!14459 = !DILocation(line: 926, column: 14, scope: !14460)
!14460 = distinct !DILexicalBlock(scope: !14442, file: !3, line: 925, column: 10)
!14461 = !DILocation(line: 926, column: 16, scope: !14460)
!14462 = !DILocation(line: 926, column: 4, scope: !14460)
!14463 = !DILocation(line: 926, column: 7, scope: !14460)
!14464 = !DILocation(line: 926, column: 12, scope: !14460)
!14465 = !DILocation(line: 927, column: 21, scope: !14460)
!14466 = !DILocation(line: 927, column: 29, scope: !14460)
!14467 = !DILocation(line: 927, column: 30, scope: !14460)
!14468 = !DILocation(line: 927, column: 28, scope: !14460)
!14469 = !DILocation(line: 927, column: 34, scope: !14460)
!14470 = !DILocation(line: 927, column: 26, scope: !14460)
!14471 = !DILocation(line: 927, column: 4, scope: !14460)
!14472 = !DILocation(line: 927, column: 7, scope: !14460)
!14473 = !DILocation(line: 927, column: 19, scope: !14460)
!14474 = !DILocation(line: 929, column: 2, scope: !14437)
!14475 = !DILocation(line: 920, column: 60, scope: !14431)
!14476 = !DILocation(line: 920, column: 65, scope: !14431)
!14477 = !DILocation(line: 920, column: 70, scope: !14431)
!14478 = !DILocation(line: 920, column: 2, scope: !14431)
!14479 = distinct !{!14479, !14435, !14480}
!14480 = !DILocation(line: 929, column: 2, scope: !14423)
!14481 = !DILocation(line: 930, column: 34, scope: !14396)
!14482 = !DILocation(line: 930, column: 40, scope: !14396)
!14483 = !DILocation(line: 930, column: 17, scope: !14396)
!14484 = !DILocation(line: 930, column: 23, scope: !14396)
!14485 = !DILocation(line: 930, column: 32, scope: !14396)
!14486 = !DILocation(line: 930, column: 2, scope: !14396)
!14487 = !DILocation(line: 930, column: 8, scope: !14396)
!14488 = !DILocation(line: 930, column: 15, scope: !14396)
!14489 = !DILocation(line: 932, column: 2, scope: !14396)
!14490 = !DILocation(line: 933, column: 1, scope: !14396)
!14491 = distinct !DISubprogram(name: "skge_rx_fill", scope: !3, file: !3, line: 1007, type: !402, scopeLine: 1008, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!14492 = !DILocalVariable(name: "dev", arg: 1, scope: !14491, file: !3, line: 1007, type: !290)
!14493 = !DILocation(line: 1007, column: 44, scope: !14491)
!14494 = !DILocalVariable(name: "skge", scope: !14491, file: !3, line: 1009, type: !9172)
!14495 = !DILocation(line: 1009, column: 20, scope: !14491)
!14496 = !DILocation(line: 1009, column: 39, scope: !14491)
!14497 = !DILocation(line: 1009, column: 27, scope: !14491)
!14498 = !DILocalVariable(name: "ring", scope: !14491, file: !3, line: 1010, type: !12862)
!14499 = !DILocation(line: 1010, column: 20, scope: !14491)
!14500 = !DILocation(line: 1010, column: 28, scope: !14491)
!14501 = !DILocation(line: 1010, column: 34, scope: !14491)
!14502 = !DILocalVariable(name: "e", scope: !14491, file: !3, line: 1011, type: !9210)
!14503 = !DILocation(line: 1011, column: 23, scope: !14491)
!14504 = !DILocation(line: 1013, column: 6, scope: !14491)
!14505 = !DILocation(line: 1013, column: 12, scope: !14491)
!14506 = !DILocation(line: 1013, column: 4, scope: !14491)
!14507 = !DILocation(line: 1014, column: 2, scope: !14491)
!14508 = !DILocalVariable(name: "skb", scope: !14509, file: !3, line: 1015, type: !415)
!14509 = distinct !DILexicalBlock(scope: !14491, file: !3, line: 1014, column: 5)
!14510 = !DILocation(line: 1015, column: 19, scope: !14509)
!14511 = !DILocation(line: 1017, column: 28, scope: !14509)
!14512 = !DILocation(line: 1017, column: 33, scope: !14509)
!14513 = !DILocation(line: 1017, column: 39, scope: !14509)
!14514 = !DILocation(line: 1017, column: 51, scope: !14509)
!14515 = !DILocation(line: 1017, column: 9, scope: !14509)
!14516 = !DILocation(line: 1017, column: 7, scope: !14509)
!14517 = !DILocation(line: 1019, column: 8, scope: !14518)
!14518 = distinct !DILexicalBlock(scope: !14509, file: !3, line: 1019, column: 7)
!14519 = !DILocation(line: 1019, column: 7, scope: !14509)
!14520 = !DILocation(line: 1020, column: 4, scope: !14518)
!14521 = !DILocation(line: 1022, column: 15, scope: !14509)
!14522 = !DILocation(line: 1022, column: 3, scope: !14509)
!14523 = !DILocation(line: 1023, column: 21, scope: !14524)
!14524 = distinct !DILexicalBlock(scope: !14509, file: !3, line: 1023, column: 7)
!14525 = !DILocation(line: 1023, column: 27, scope: !14524)
!14526 = !DILocation(line: 1023, column: 30, scope: !14524)
!14527 = !DILocation(line: 1023, column: 35, scope: !14524)
!14528 = !DILocation(line: 1023, column: 41, scope: !14524)
!14529 = !DILocation(line: 1023, column: 7, scope: !14524)
!14530 = !DILocation(line: 1023, column: 54, scope: !14524)
!14531 = !DILocation(line: 1023, column: 7, scope: !14509)
!14532 = !DILocation(line: 1024, column: 4, scope: !14533)
!14533 = distinct !DILexicalBlock(scope: !14524, file: !3, line: 1023, column: 59)
!14534 = !DILocation(line: 1025, column: 4, scope: !14533)
!14535 = !DILocation(line: 1027, column: 2, scope: !14509)
!14536 = !DILocation(line: 1027, column: 16, scope: !14491)
!14537 = !DILocation(line: 1027, column: 19, scope: !14491)
!14538 = !DILocation(line: 1027, column: 14, scope: !14491)
!14539 = !DILocation(line: 1027, column: 28, scope: !14491)
!14540 = !DILocation(line: 1027, column: 34, scope: !14491)
!14541 = !DILocation(line: 1027, column: 25, scope: !14491)
!14542 = distinct !{!14542, !14507, !14543}
!14543 = !DILocation(line: 1027, column: 39, scope: !14491)
!14544 = !DILocation(line: 1029, column: 19, scope: !14491)
!14545 = !DILocation(line: 1029, column: 25, scope: !14491)
!14546 = !DILocation(line: 1029, column: 2, scope: !14491)
!14547 = !DILocation(line: 1029, column: 8, scope: !14491)
!14548 = !DILocation(line: 1029, column: 17, scope: !14491)
!14549 = !DILocation(line: 1030, column: 2, scope: !14491)
!14550 = !DILocation(line: 1031, column: 1, scope: !14491)
!14551 = distinct !DISubprogram(name: "spin_lock_bh", scope: !9523, file: !9523, line: 357, type: !9769, scopeLine: 358, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!14552 = !DILocalVariable(name: "val", arg: 1, scope: !14553, file: !14554, line: 77, type: !32)
!14553 = distinct !DISubprogram(name: "__preempt_count_add", scope: !14554, file: !14554, line: 77, type: !3801, scopeLine: 78, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!14554 = !DIFile(filename: "./arch/x86/include/asm/preempt.h", directory: "/home/lizy2001/genbc/linux")
!14555 = !DILocation(line: 77, column: 53, scope: !14553, inlinedAt: !14556)
!14556 = distinct !DILocation(line: 12, column: 2, scope: !14557, inlinedAt: !14561)
!14557 = distinct !DISubprogram(name: "__local_bh_disable_ip", scope: !14558, file: !14558, line: 10, type: !14559, scopeLine: 11, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!14558 = !DIFile(filename: "./include/linux/bottom_half.h", directory: "/home/lizy2001/genbc/linux")
!14559 = !DISubroutineType(types: !14560)
!14560 = !{null, !312, !7}
!14561 = distinct !DILocation(line: 359, column: 2, scope: !14562)
!14562 = distinct !DILexicalBlock(scope: !14551, file: !9523, line: 359, column: 2)
!14563 = !DILocalVariable(name: "pao_ID__", scope: !14564, file: !14554, line: 79, type: !9448)
!14564 = distinct !DILexicalBlock(scope: !14553, file: !14554, line: 79, column: 2)
!14565 = !DILocation(line: 79, column: 2, scope: !14564, inlinedAt: !14556)
!14566 = !DILocalVariable(name: "pto_val__", scope: !14567, file: !14554, line: 79, type: !987)
!14567 = distinct !DILexicalBlock(scope: !14568, file: !14554, line: 79, column: 2)
!14568 = distinct !DILexicalBlock(scope: !14569, file: !14554, line: 79, column: 2)
!14569 = distinct !DILexicalBlock(scope: !14564, file: !14554, line: 79, column: 2)
!14570 = !DILocation(line: 79, column: 2, scope: !14567, inlinedAt: !14556)
!14571 = !DILocalVariable(name: "ip", arg: 1, scope: !14557, file: !14558, line: 10, type: !312)
!14572 = !DILocation(line: 10, column: 65, scope: !14557, inlinedAt: !14561)
!14573 = !DILocalVariable(name: "cnt", arg: 2, scope: !14557, file: !14558, line: 10, type: !7)
!14574 = !DILocation(line: 10, column: 82, scope: !14557, inlinedAt: !14561)
!14575 = !DILocalVariable(name: "lock", arg: 1, scope: !14551, file: !9523, line: 357, type: !2181)
!14576 = !DILocation(line: 357, column: 54, scope: !14551)
!14577 = !DILocation(line: 359, column: 2, scope: !14551)
!14578 = !DILocation(line: 359, column: 2, scope: !14579)
!14579 = distinct !DILexicalBlock(scope: !14562, file: !9523, line: 359, column: 2)
!14580 = !DILabel(scope: !14579, name: "__here", file: !9523, line: 359)
!14581 = !DILocation(line: 12, column: 2, scope: !14557, inlinedAt: !14561)
!14582 = !{i32 -2145361191}
!14583 = !DILocation(line: 13, column: 2, scope: !14557, inlinedAt: !14561)
!14584 = !{i32 -2145355650}
!14585 = !DILocation(line: 359, column: 2, scope: !14562)
!14586 = !DILocation(line: 359, column: 2, scope: !14587)
!14587 = distinct !DILexicalBlock(scope: !14562, file: !9523, line: 359, column: 2)
!14588 = !DILocation(line: 360, column: 1, scope: !14551)
!14589 = !DILocalVariable(name: "hw", arg: 1, scope: !9429, file: !3, line: 1526, type: !8794)
!14590 = !DILocation(line: 1526, column: 46, scope: !9429)
!14591 = !DILocalVariable(name: "port", arg: 2, scope: !9429, file: !3, line: 1526, type: !32)
!14592 = !DILocation(line: 1526, column: 54, scope: !9429)
!14593 = !DILocalVariable(name: "dev", scope: !9429, file: !3, line: 1528, type: !290)
!14594 = !DILocation(line: 1528, column: 21, scope: !9429)
!14595 = !DILocation(line: 1528, column: 27, scope: !9429)
!14596 = !DILocation(line: 1528, column: 31, scope: !9429)
!14597 = !DILocation(line: 1528, column: 35, scope: !9429)
!14598 = !DILocalVariable(name: "skge", scope: !9429, file: !3, line: 1529, type: !9172)
!14599 = !DILocation(line: 1529, column: 20, scope: !9429)
!14600 = !DILocation(line: 1529, column: 39, scope: !9429)
!14601 = !DILocation(line: 1529, column: 27, scope: !9429)
!14602 = !DILocalVariable(name: "jumbo", scope: !9429, file: !3, line: 1530, type: !32)
!14603 = !DILocation(line: 1530, column: 6, scope: !9429)
!14604 = !DILocation(line: 1530, column: 14, scope: !9429)
!14605 = !DILocation(line: 1530, column: 18, scope: !9429)
!14606 = !DILocation(line: 1530, column: 22, scope: !9429)
!14607 = !DILocation(line: 1530, column: 29, scope: !9429)
!14608 = !DILocation(line: 1530, column: 33, scope: !9429)
!14609 = !DILocalVariable(name: "i", scope: !9429, file: !3, line: 1531, type: !32)
!14610 = !DILocation(line: 1531, column: 6, scope: !9429)
!14611 = !DILocalVariable(name: "r", scope: !9429, file: !3, line: 1532, type: !987)
!14612 = !DILocation(line: 1532, column: 6, scope: !9429)
!14613 = !DILocation(line: 1535, column: 9, scope: !14614)
!14614 = distinct !DILexicalBlock(scope: !9429, file: !3, line: 1535, column: 2)
!14615 = !DILocation(line: 1535, column: 7, scope: !14614)
!14616 = !DILocation(line: 1535, column: 14, scope: !14617)
!14617 = distinct !DILexicalBlock(scope: !14614, file: !3, line: 1535, column: 2)
!14618 = !DILocation(line: 1535, column: 16, scope: !14617)
!14619 = !DILocation(line: 1535, column: 2, scope: !14614)
!14620 = !DILocation(line: 1536, column: 16, scope: !14621)
!14621 = distinct !DILexicalBlock(scope: !14617, file: !3, line: 1535, column: 27)
!14622 = !DILocation(line: 1536, column: 20, scope: !14621)
!14623 = !DILocation(line: 1536, column: 3, scope: !14621)
!14624 = !DILocation(line: 1538, column: 19, scope: !14625)
!14625 = distinct !DILexicalBlock(scope: !14621, file: !3, line: 1538, column: 7)
!14626 = !DILocation(line: 1538, column: 23, scope: !14625)
!14627 = !DILocation(line: 1538, column: 7, scope: !14625)
!14628 = !DILocation(line: 1538, column: 51, scope: !14625)
!14629 = !DILocation(line: 1538, column: 7, scope: !14621)
!14630 = !DILocation(line: 1539, column: 4, scope: !14625)
!14631 = !DILocation(line: 1540, column: 3, scope: !14632)
!14632 = distinct !DILexicalBlock(scope: !14633, file: !3, line: 1540, column: 3)
!14633 = distinct !DILexicalBlock(scope: !14634, file: !3, line: 1540, column: 3)
!14634 = distinct !DILexicalBlock(scope: !14635, file: !3, line: 1540, column: 3)
!14635 = distinct !DILexicalBlock(scope: !14621, file: !3, line: 1540, column: 3)
!14636 = !DILocation(line: 1541, column: 2, scope: !14621)
!14637 = !DILocation(line: 1535, column: 23, scope: !14617)
!14638 = !DILocation(line: 1535, column: 2, scope: !14617)
!14639 = distinct !{!14639, !14619, !14640}
!14640 = !DILocation(line: 1541, column: 2, scope: !14614)
!14641 = !DILocation(line: 1543, column: 14, scope: !9429)
!14642 = !DILocation(line: 1543, column: 2, scope: !9429)
!14643 = !DILabel(scope: !9429, name: "reset_ok", file: !3, line: 1545)
!14644 = !DILocation(line: 1545, column: 2, scope: !9429)
!14645 = !DILocation(line: 1547, column: 15, scope: !9429)
!14646 = !DILocation(line: 1547, column: 19, scope: !9429)
!14647 = !DILocation(line: 1547, column: 2, scope: !9429)
!14648 = !DILocation(line: 1554, column: 6, scope: !14649)
!14649 = distinct !DILexicalBlock(scope: !9429, file: !3, line: 1554, column: 6)
!14650 = !DILocation(line: 1554, column: 10, scope: !14649)
!14651 = !DILocation(line: 1554, column: 19, scope: !14649)
!14652 = !DILocation(line: 1554, column: 6, scope: !9429)
!14653 = !DILocation(line: 1556, column: 19, scope: !14654)
!14654 = distinct !DILexicalBlock(scope: !14649, file: !3, line: 1554, column: 35)
!14655 = !DILocation(line: 1556, column: 7, scope: !14654)
!14656 = !DILocation(line: 1556, column: 5, scope: !14654)
!14657 = !DILocation(line: 1557, column: 7, scope: !14658)
!14658 = distinct !DILexicalBlock(scope: !14654, file: !3, line: 1557, column: 7)
!14659 = !DILocation(line: 1557, column: 12, scope: !14658)
!14660 = !DILocation(line: 1557, column: 7, scope: !14654)
!14661 = !DILocation(line: 1558, column: 6, scope: !14658)
!14662 = !DILocation(line: 1558, column: 4, scope: !14658)
!14663 = !DILocation(line: 1560, column: 6, scope: !14658)
!14664 = !DILocation(line: 1562, column: 16, scope: !14654)
!14665 = !DILocation(line: 1562, column: 30, scope: !14654)
!14666 = !DILocation(line: 1562, column: 3, scope: !14654)
!14667 = !DILocation(line: 1565, column: 14, scope: !14654)
!14668 = !DILocation(line: 1565, column: 18, scope: !14654)
!14669 = !DILocation(line: 1565, column: 3, scope: !14654)
!14670 = !DILocation(line: 1566, column: 2, scope: !14654)
!14671 = !DILocation(line: 1569, column: 10, scope: !9429)
!14672 = !DILocation(line: 1569, column: 14, scope: !9429)
!14673 = !DILocation(line: 1569, column: 2, scope: !9429)
!14674 = !DILocation(line: 1571, column: 15, scope: !14675)
!14675 = distinct !DILexicalBlock(scope: !9429, file: !3, line: 1569, column: 24)
!14676 = !DILocation(line: 1571, column: 3, scope: !14675)
!14677 = !DILocation(line: 1572, column: 3, scope: !14675)
!14678 = !DILocation(line: 1574, column: 17, scope: !14675)
!14679 = !DILocation(line: 1574, column: 3, scope: !14675)
!14680 = !DILocation(line: 1575, column: 19, scope: !14675)
!14681 = !DILocation(line: 1575, column: 23, scope: !14675)
!14682 = !DILocation(line: 1575, column: 3, scope: !14675)
!14683 = !DILocation(line: 1576, column: 2, scope: !14675)
!14684 = !DILocation(line: 1579, column: 13, scope: !9429)
!14685 = !DILocation(line: 1579, column: 17, scope: !9429)
!14686 = !DILocation(line: 1579, column: 30, scope: !9429)
!14687 = !DILocation(line: 1579, column: 35, scope: !9429)
!14688 = !DILocation(line: 1579, column: 2, scope: !9429)
!14689 = !DILocation(line: 1582, column: 9, scope: !14690)
!14690 = distinct !DILexicalBlock(scope: !9429, file: !3, line: 1582, column: 2)
!14691 = !DILocation(line: 1582, column: 7, scope: !14690)
!14692 = !DILocation(line: 1582, column: 14, scope: !14693)
!14693 = distinct !DILexicalBlock(scope: !14690, file: !3, line: 1582, column: 2)
!14694 = !DILocation(line: 1582, column: 16, scope: !14693)
!14695 = !DILocation(line: 1582, column: 2, scope: !14690)
!14696 = !DILocation(line: 1583, column: 14, scope: !14693)
!14697 = !DILocation(line: 1583, column: 18, scope: !14693)
!14698 = !DILocation(line: 1583, column: 24, scope: !14693)
!14699 = !DILocation(line: 1583, column: 3, scope: !14693)
!14700 = !DILocation(line: 1582, column: 23, scope: !14693)
!14701 = !DILocation(line: 1582, column: 2, scope: !14693)
!14702 = distinct !{!14702, !14695, !14703}
!14703 = !DILocation(line: 1583, column: 39, scope: !14690)
!14704 = !DILocation(line: 1586, column: 13, scope: !9429)
!14705 = !DILocation(line: 1586, column: 17, scope: !9429)
!14706 = !DILocation(line: 1586, column: 2, scope: !9429)
!14707 = !DILocation(line: 1589, column: 13, scope: !9429)
!14708 = !DILocation(line: 1589, column: 17, scope: !9429)
!14709 = !DILocation(line: 1589, column: 2, scope: !9429)
!14710 = !DILocation(line: 1593, column: 13, scope: !9429)
!14711 = !DILocation(line: 1593, column: 17, scope: !9429)
!14712 = !DILocation(line: 1593, column: 2, scope: !9429)
!14713 = !DILocation(line: 1596, column: 4, scope: !9429)
!14714 = !DILocation(line: 1597, column: 6, scope: !14715)
!14715 = distinct !DILexicalBlock(scope: !9429, file: !3, line: 1597, column: 6)
!14716 = !DILocation(line: 1597, column: 6, scope: !9429)
!14717 = !DILocation(line: 1598, column: 5, scope: !14715)
!14718 = !DILocation(line: 1598, column: 3, scope: !14715)
!14719 = !DILocation(line: 1600, column: 6, scope: !14720)
!14720 = distinct !DILexicalBlock(scope: !9429, file: !3, line: 1600, column: 6)
!14721 = !DILocation(line: 1600, column: 12, scope: !14720)
!14722 = !DILocation(line: 1600, column: 19, scope: !14720)
!14723 = !DILocation(line: 1600, column: 6, scope: !9429)
!14724 = !DILocation(line: 1606, column: 5, scope: !14725)
!14725 = distinct !DILexicalBlock(scope: !14720, file: !3, line: 1600, column: 35)
!14726 = !DILocation(line: 1607, column: 2, scope: !14725)
!14727 = !DILocation(line: 1608, column: 13, scope: !9429)
!14728 = !DILocation(line: 1608, column: 17, scope: !9429)
!14729 = !DILocation(line: 1608, column: 34, scope: !9429)
!14730 = !DILocation(line: 1608, column: 2, scope: !9429)
!14731 = !DILocation(line: 1611, column: 13, scope: !9429)
!14732 = !DILocation(line: 1611, column: 17, scope: !9429)
!14733 = !DILocation(line: 1611, column: 2, scope: !9429)
!14734 = !DILocation(line: 1614, column: 6, scope: !14735)
!14735 = distinct !DILexicalBlock(scope: !9429, file: !3, line: 1614, column: 6)
!14736 = !DILocation(line: 1614, column: 10, scope: !14735)
!14737 = !DILocation(line: 1614, column: 16, scope: !14735)
!14738 = !DILocation(line: 1614, column: 20, scope: !14735)
!14739 = !DILocation(line: 1614, column: 23, scope: !14735)
!14740 = !DILocation(line: 1614, column: 6, scope: !9429)
!14741 = !DILocation(line: 1615, column: 14, scope: !14735)
!14742 = !DILocation(line: 1615, column: 18, scope: !14735)
!14743 = !DILocation(line: 1615, column: 3, scope: !14735)
!14744 = !DILocation(line: 1617, column: 14, scope: !14735)
!14745 = !DILocation(line: 1617, column: 18, scope: !14735)
!14746 = !DILocation(line: 1617, column: 3, scope: !14735)
!14747 = !DILocation(line: 1633, column: 13, scope: !9429)
!14748 = !DILocation(line: 1633, column: 17, scope: !9429)
!14749 = !DILocation(line: 1633, column: 2, scope: !9429)
!14750 = !DILocation(line: 1641, column: 13, scope: !9429)
!14751 = !DILocation(line: 1641, column: 17, scope: !9429)
!14752 = !DILocation(line: 1641, column: 2, scope: !9429)
!14753 = !DILocation(line: 1648, column: 13, scope: !9429)
!14754 = !DILocation(line: 1648, column: 17, scope: !9429)
!14755 = !DILocation(line: 1648, column: 2, scope: !9429)
!14756 = !DILocation(line: 1651, column: 15, scope: !9429)
!14757 = !DILocation(line: 1651, column: 2, scope: !9429)
!14758 = !DILocation(line: 1654, column: 14, scope: !9429)
!14759 = !DILocation(line: 1654, column: 2, scope: !9429)
!14760 = !DILocation(line: 1655, column: 14, scope: !9429)
!14761 = !DILocation(line: 1655, column: 2, scope: !9429)
!14762 = !DILocation(line: 1656, column: 14, scope: !9429)
!14763 = !DILocation(line: 1656, column: 2, scope: !9429)
!14764 = !DILocation(line: 1657, column: 14, scope: !9429)
!14765 = !DILocation(line: 1657, column: 2, scope: !9429)
!14766 = !DILocation(line: 1659, column: 14, scope: !9429)
!14767 = !DILocation(line: 1659, column: 2, scope: !9429)
!14768 = !DILocation(line: 1660, column: 14, scope: !9429)
!14769 = !DILocation(line: 1660, column: 2, scope: !9429)
!14770 = !DILocation(line: 1661, column: 14, scope: !9429)
!14771 = !DILocation(line: 1661, column: 2, scope: !9429)
!14772 = !DILocation(line: 1662, column: 14, scope: !9429)
!14773 = !DILocation(line: 1662, column: 2, scope: !9429)
!14774 = !DILocation(line: 1665, column: 14, scope: !9429)
!14775 = !DILocation(line: 1665, column: 18, scope: !9429)
!14776 = !DILocation(line: 1665, column: 2, scope: !9429)
!14777 = !DILocation(line: 1666, column: 15, scope: !9429)
!14778 = !DILocation(line: 1666, column: 19, scope: !9429)
!14779 = !DILocation(line: 1666, column: 2, scope: !9429)
!14780 = !DILocation(line: 1667, column: 14, scope: !9429)
!14781 = !DILocation(line: 1667, column: 18, scope: !9429)
!14782 = !DILocation(line: 1667, column: 2, scope: !9429)
!14783 = !DILocation(line: 1670, column: 14, scope: !9429)
!14784 = !DILocation(line: 1670, column: 18, scope: !9429)
!14785 = !DILocation(line: 1670, column: 2, scope: !9429)
!14786 = !DILocation(line: 1671, column: 15, scope: !9429)
!14787 = !DILocation(line: 1671, column: 19, scope: !9429)
!14788 = !DILocation(line: 1671, column: 2, scope: !9429)
!14789 = !DILocation(line: 1672, column: 14, scope: !9429)
!14790 = !DILocation(line: 1672, column: 18, scope: !9429)
!14791 = !DILocation(line: 1672, column: 2, scope: !9429)
!14792 = !DILocation(line: 1674, column: 6, scope: !14793)
!14793 = distinct !DILexicalBlock(scope: !9429, file: !3, line: 1674, column: 6)
!14794 = !DILocation(line: 1674, column: 6, scope: !9429)
!14795 = !DILocation(line: 1676, column: 16, scope: !14796)
!14796 = distinct !DILexicalBlock(scope: !14793, file: !3, line: 1674, column: 13)
!14797 = !DILocation(line: 1676, column: 20, scope: !14796)
!14798 = !DILocation(line: 1676, column: 3, scope: !14796)
!14799 = !DILocation(line: 1677, column: 2, scope: !14796)
!14800 = !DILocation(line: 1679, column: 16, scope: !14801)
!14801 = distinct !DILexicalBlock(scope: !14793, file: !3, line: 1677, column: 9)
!14802 = !DILocation(line: 1680, column: 10, scope: !14801)
!14803 = !DILocation(line: 1680, column: 15, scope: !14801)
!14804 = !DILocation(line: 1680, column: 9, scope: !14801)
!14805 = !DILocation(line: 1679, column: 3, scope: !14801)
!14806 = !DILocation(line: 1682, column: 1, scope: !9429)
!14807 = distinct !DISubprogram(name: "yukon_mac_init", scope: !3, file: !3, line: 2057, type: !9399, scopeLine: 2058, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!14808 = !DILocalVariable(name: "hw", arg: 1, scope: !14807, file: !3, line: 2057, type: !8794)
!14809 = !DILocation(line: 2057, column: 44, scope: !14807)
!14810 = !DILocalVariable(name: "port", arg: 2, scope: !14807, file: !3, line: 2057, type: !32)
!14811 = !DILocation(line: 2057, column: 52, scope: !14807)
!14812 = !DILocalVariable(name: "skge", scope: !14807, file: !3, line: 2059, type: !9172)
!14813 = !DILocation(line: 2059, column: 20, scope: !14807)
!14814 = !DILocation(line: 2059, column: 39, scope: !14807)
!14815 = !DILocation(line: 2059, column: 43, scope: !14807)
!14816 = !DILocation(line: 2059, column: 47, scope: !14807)
!14817 = !DILocation(line: 2059, column: 27, scope: !14807)
!14818 = !DILocalVariable(name: "i", scope: !14807, file: !3, line: 2060, type: !32)
!14819 = !DILocation(line: 2060, column: 6, scope: !14807)
!14820 = !DILocalVariable(name: "reg", scope: !14807, file: !3, line: 2061, type: !987)
!14821 = !DILocation(line: 2061, column: 6, scope: !14807)
!14822 = !DILocalVariable(name: "addr", scope: !14807, file: !3, line: 2062, type: !5859)
!14823 = !DILocation(line: 2062, column: 12, scope: !14807)
!14824 = !DILocation(line: 2062, column: 19, scope: !14807)
!14825 = !DILocation(line: 2062, column: 23, scope: !14807)
!14826 = !DILocation(line: 2062, column: 27, scope: !14807)
!14827 = !DILocation(line: 2062, column: 34, scope: !14807)
!14828 = !DILocation(line: 2065, column: 6, scope: !14829)
!14829 = distinct !DILexicalBlock(scope: !14807, file: !3, line: 2065, column: 6)
!14830 = !DILocation(line: 2065, column: 10, scope: !14829)
!14831 = !DILocation(line: 2065, column: 18, scope: !14829)
!14832 = !DILocation(line: 2065, column: 40, scope: !14829)
!14833 = !DILocation(line: 2066, column: 6, scope: !14829)
!14834 = !DILocation(line: 2066, column: 10, scope: !14829)
!14835 = !DILocation(line: 2066, column: 19, scope: !14829)
!14836 = !DILocation(line: 2065, column: 6, scope: !14807)
!14837 = !DILocation(line: 2067, column: 21, scope: !14838)
!14838 = distinct !DILexicalBlock(scope: !14829, file: !3, line: 2066, column: 43)
!14839 = !DILocation(line: 2067, column: 9, scope: !14838)
!14840 = !DILocation(line: 2067, column: 7, scope: !14838)
!14841 = !DILocation(line: 2068, column: 7, scope: !14838)
!14842 = !DILocation(line: 2069, column: 16, scope: !14838)
!14843 = !DILocation(line: 2069, column: 30, scope: !14838)
!14844 = !DILocation(line: 2069, column: 3, scope: !14838)
!14845 = !DILocation(line: 2070, column: 2, scope: !14838)
!14846 = !DILocation(line: 2073, column: 15, scope: !14807)
!14847 = !DILocation(line: 2073, column: 19, scope: !14807)
!14848 = !DILocation(line: 2073, column: 2, scope: !14807)
!14849 = !DILocation(line: 2074, column: 15, scope: !14807)
!14850 = !DILocation(line: 2074, column: 19, scope: !14807)
!14851 = !DILocation(line: 2074, column: 2, scope: !14807)
!14852 = !DILocation(line: 2077, column: 6, scope: !14853)
!14853 = distinct !DILexicalBlock(scope: !14807, file: !3, line: 2077, column: 6)
!14854 = !DILocation(line: 2077, column: 10, scope: !14853)
!14855 = !DILocation(line: 2077, column: 18, scope: !14853)
!14856 = !DILocation(line: 2077, column: 40, scope: !14853)
!14857 = !DILocation(line: 2078, column: 6, scope: !14853)
!14858 = !DILocation(line: 2078, column: 10, scope: !14853)
!14859 = !DILocation(line: 2078, column: 19, scope: !14853)
!14860 = !DILocation(line: 2077, column: 6, scope: !14807)
!14861 = !DILocation(line: 2079, column: 21, scope: !14862)
!14862 = distinct !DILexicalBlock(scope: !14853, file: !3, line: 2078, column: 43)
!14863 = !DILocation(line: 2079, column: 9, scope: !14862)
!14864 = !DILocation(line: 2079, column: 7, scope: !14862)
!14865 = !DILocation(line: 2080, column: 7, scope: !14862)
!14866 = !DILocation(line: 2081, column: 7, scope: !14862)
!14867 = !DILocation(line: 2082, column: 16, scope: !14862)
!14868 = !DILocation(line: 2082, column: 30, scope: !14862)
!14869 = !DILocation(line: 2082, column: 3, scope: !14862)
!14870 = !DILocation(line: 2083, column: 2, scope: !14862)
!14871 = !DILocation(line: 2086, column: 6, scope: !14807)
!14872 = !DILocation(line: 2088, column: 9, scope: !14807)
!14873 = !DILocation(line: 2088, column: 13, scope: !14807)
!14874 = !DILocation(line: 2088, column: 6, scope: !14807)
!14875 = !DILocation(line: 2091, column: 15, scope: !14807)
!14876 = !DILocation(line: 2091, column: 19, scope: !14807)
!14877 = !DILocation(line: 2091, column: 44, scope: !14807)
!14878 = !DILocation(line: 2091, column: 48, scope: !14807)
!14879 = !DILocation(line: 2091, column: 2, scope: !14807)
!14880 = !DILocation(line: 2092, column: 15, scope: !14807)
!14881 = !DILocation(line: 2092, column: 19, scope: !14807)
!14882 = !DILocation(line: 2092, column: 44, scope: !14807)
!14883 = !DILocation(line: 2092, column: 48, scope: !14807)
!14884 = !DILocation(line: 2092, column: 2, scope: !14807)
!14885 = !DILocation(line: 2093, column: 15, scope: !14807)
!14886 = !DILocation(line: 2093, column: 19, scope: !14807)
!14887 = !DILocation(line: 2093, column: 2, scope: !14807)
!14888 = !DILocation(line: 2095, column: 6, scope: !14889)
!14889 = distinct !DILexicalBlock(scope: !14807, file: !3, line: 2095, column: 6)
!14890 = !DILocation(line: 2095, column: 12, scope: !14889)
!14891 = !DILocation(line: 2095, column: 20, scope: !14889)
!14892 = !DILocation(line: 2095, column: 6, scope: !14807)
!14893 = !DILocation(line: 2096, column: 7, scope: !14894)
!14894 = distinct !DILexicalBlock(scope: !14889, file: !3, line: 2095, column: 40)
!14895 = !DILocation(line: 2097, column: 15, scope: !14894)
!14896 = !DILocation(line: 2097, column: 19, scope: !14894)
!14897 = !DILocation(line: 2098, column: 17, scope: !14894)
!14898 = !DILocation(line: 2098, column: 21, scope: !14894)
!14899 = !DILocation(line: 2098, column: 6, scope: !14894)
!14900 = !DILocation(line: 2098, column: 41, scope: !14894)
!14901 = !DILocation(line: 2098, column: 39, scope: !14894)
!14902 = !DILocation(line: 2097, column: 3, scope: !14894)
!14903 = !DILocation(line: 2100, column: 11, scope: !14894)
!14904 = !DILocation(line: 2100, column: 17, scope: !14894)
!14905 = !DILocation(line: 2100, column: 3, scope: !14894)
!14906 = !DILocation(line: 2102, column: 8, scope: !14907)
!14907 = distinct !DILexicalBlock(scope: !14894, file: !3, line: 2100, column: 24)
!14908 = !DILocation(line: 2103, column: 8, scope: !14907)
!14909 = !DILocation(line: 2104, column: 4, scope: !14907)
!14910 = !DILocation(line: 2106, column: 8, scope: !14907)
!14911 = !DILocation(line: 2107, column: 8, scope: !14907)
!14912 = !DILocation(line: 2108, column: 4, scope: !14907)
!14913 = !DILocation(line: 2110, column: 8, scope: !14907)
!14914 = !DILocation(line: 2111, column: 4, scope: !14907)
!14915 = !DILocation(line: 2114, column: 7, scope: !14916)
!14916 = distinct !DILexicalBlock(scope: !14894, file: !3, line: 2114, column: 7)
!14917 = !DILocation(line: 2114, column: 13, scope: !14916)
!14918 = !DILocation(line: 2114, column: 20, scope: !14916)
!14919 = !DILocation(line: 2114, column: 7, scope: !14894)
!14920 = !DILocation(line: 2115, column: 8, scope: !14916)
!14921 = !DILocation(line: 2115, column: 4, scope: !14916)
!14922 = !DILocation(line: 2116, column: 2, scope: !14894)
!14923 = !DILocation(line: 2117, column: 7, scope: !14889)
!14924 = !DILocation(line: 2119, column: 10, scope: !14807)
!14925 = !DILocation(line: 2119, column: 16, scope: !14807)
!14926 = !DILocation(line: 2119, column: 2, scope: !14807)
!14927 = !DILocation(line: 2121, column: 16, scope: !14928)
!14928 = distinct !DILexicalBlock(scope: !14807, file: !3, line: 2119, column: 30)
!14929 = !DILocation(line: 2121, column: 20, scope: !14928)
!14930 = !DILocation(line: 2121, column: 3, scope: !14928)
!14931 = !DILocation(line: 2122, column: 7, scope: !14928)
!14932 = !DILocation(line: 2123, column: 3, scope: !14928)
!14933 = !DILocation(line: 2126, column: 7, scope: !14928)
!14934 = !DILocation(line: 2127, column: 3, scope: !14928)
!14935 = !DILocation(line: 2131, column: 3, scope: !14928)
!14936 = !DILocation(line: 2134, column: 14, scope: !14807)
!14937 = !DILocation(line: 2134, column: 18, scope: !14807)
!14938 = !DILocation(line: 2134, column: 36, scope: !14807)
!14939 = !DILocation(line: 2134, column: 2, scope: !14807)
!14940 = !DILocation(line: 2135, column: 14, scope: !14807)
!14941 = !DILocation(line: 2135, column: 18, scope: !14807)
!14942 = !DILocation(line: 2135, column: 2, scope: !14807)
!14943 = !DILocation(line: 2137, column: 13, scope: !14807)
!14944 = !DILocation(line: 2137, column: 17, scope: !14807)
!14945 = !DILocation(line: 2137, column: 2, scope: !14807)
!14946 = !DILocation(line: 2140, column: 19, scope: !14807)
!14947 = !DILocation(line: 2140, column: 23, scope: !14807)
!14948 = !DILocation(line: 2140, column: 8, scope: !14807)
!14949 = !DILocation(line: 2140, column: 6, scope: !14807)
!14950 = !DILocation(line: 2141, column: 14, scope: !14807)
!14951 = !DILocation(line: 2141, column: 18, scope: !14807)
!14952 = !DILocation(line: 2141, column: 37, scope: !14807)
!14953 = !DILocation(line: 2141, column: 41, scope: !14807)
!14954 = !DILocation(line: 2141, column: 2, scope: !14807)
!14955 = !DILocation(line: 2143, column: 9, scope: !14956)
!14956 = distinct !DILexicalBlock(scope: !14807, file: !3, line: 2143, column: 2)
!14957 = !DILocation(line: 2143, column: 7, scope: !14956)
!14958 = !DILocation(line: 2143, column: 14, scope: !14959)
!14959 = distinct !DILexicalBlock(scope: !14956, file: !3, line: 2143, column: 2)
!14960 = !DILocation(line: 2143, column: 16, scope: !14959)
!14961 = !DILocation(line: 2143, column: 2, scope: !14956)
!14962 = !DILocation(line: 2144, column: 14, scope: !14959)
!14963 = !DILocation(line: 2144, column: 18, scope: !14959)
!14964 = !DILocation(line: 2144, column: 44, scope: !14959)
!14965 = !DILocation(line: 2144, column: 43, scope: !14959)
!14966 = !DILocation(line: 2144, column: 40, scope: !14959)
!14967 = !DILocation(line: 2144, column: 3, scope: !14959)
!14968 = !DILocation(line: 2143, column: 36, scope: !14959)
!14969 = !DILocation(line: 2143, column: 2, scope: !14959)
!14970 = distinct !{!14970, !14961, !14971}
!14971 = !DILocation(line: 2144, column: 45, scope: !14956)
!14972 = !DILocation(line: 2145, column: 14, scope: !14807)
!14973 = !DILocation(line: 2145, column: 18, scope: !14807)
!14974 = !DILocation(line: 2145, column: 37, scope: !14807)
!14975 = !DILocation(line: 2145, column: 2, scope: !14807)
!14976 = !DILocation(line: 2148, column: 14, scope: !14807)
!14977 = !DILocation(line: 2148, column: 18, scope: !14807)
!14978 = !DILocation(line: 2148, column: 2, scope: !14807)
!14979 = !DILocation(line: 2151, column: 14, scope: !14807)
!14980 = !DILocation(line: 2151, column: 18, scope: !14807)
!14981 = !DILocation(line: 2151, column: 2, scope: !14807)
!14982 = !DILocation(line: 2155, column: 14, scope: !14807)
!14983 = !DILocation(line: 2155, column: 18, scope: !14807)
!14984 = !DILocation(line: 2155, column: 2, scope: !14807)
!14985 = !DILocation(line: 2158, column: 14, scope: !14807)
!14986 = !DILocation(line: 2158, column: 18, scope: !14807)
!14987 = !DILocation(line: 2158, column: 2, scope: !14807)
!14988 = !DILocation(line: 2164, column: 6, scope: !14807)
!14989 = !DILocation(line: 2168, column: 6, scope: !14990)
!14990 = distinct !DILexicalBlock(scope: !14807, file: !3, line: 2168, column: 6)
!14991 = !DILocation(line: 2168, column: 10, scope: !14990)
!14992 = !DILocation(line: 2168, column: 14, scope: !14990)
!14993 = !DILocation(line: 2168, column: 21, scope: !14990)
!14994 = !DILocation(line: 2168, column: 25, scope: !14990)
!14995 = !DILocation(line: 2168, column: 6, scope: !14807)
!14996 = !DILocation(line: 2169, column: 7, scope: !14990)
!14997 = !DILocation(line: 2169, column: 3, scope: !14990)
!14998 = !DILocation(line: 2171, column: 14, scope: !14807)
!14999 = !DILocation(line: 2171, column: 18, scope: !14807)
!15000 = !DILocation(line: 2171, column: 40, scope: !14807)
!15001 = !DILocation(line: 2171, column: 2, scope: !14807)
!15002 = !DILocation(line: 2174, column: 15, scope: !14807)
!15003 = !DILocation(line: 2174, column: 19, scope: !14807)
!15004 = !DILocation(line: 2174, column: 41, scope: !14807)
!15005 = !DILocation(line: 2174, column: 2, scope: !14807)
!15006 = !DILocation(line: 2176, column: 15, scope: !14807)
!15007 = !DILocation(line: 2176, column: 19, scope: !14807)
!15008 = !DILocation(line: 2176, column: 41, scope: !14807)
!15009 = !DILocation(line: 2176, column: 2, scope: !14807)
!15010 = !DILocation(line: 2179, column: 14, scope: !14807)
!15011 = !DILocation(line: 2179, column: 18, scope: !14807)
!15012 = !DILocation(line: 2179, column: 2, scope: !14807)
!15013 = !DILocation(line: 2180, column: 14, scope: !14807)
!15014 = !DILocation(line: 2180, column: 18, scope: !14807)
!15015 = !DILocation(line: 2180, column: 2, scope: !14807)
!15016 = !DILocation(line: 2181, column: 14, scope: !14807)
!15017 = !DILocation(line: 2181, column: 18, scope: !14807)
!15018 = !DILocation(line: 2181, column: 2, scope: !14807)
!15019 = !DILocation(line: 2186, column: 15, scope: !14807)
!15020 = !DILocation(line: 2186, column: 19, scope: !14807)
!15021 = !DILocation(line: 2186, column: 2, scope: !14807)
!15022 = !DILocation(line: 2187, column: 6, scope: !14807)
!15023 = !DILocation(line: 2190, column: 23, scope: !15024)
!15024 = distinct !DILexicalBlock(scope: !14807, file: !3, line: 2190, column: 6)
!15025 = !DILocation(line: 2190, column: 6, scope: !15024)
!15026 = !DILocation(line: 2190, column: 6, scope: !14807)
!15027 = !DILocation(line: 2191, column: 7, scope: !15024)
!15028 = !DILocation(line: 2191, column: 3, scope: !15024)
!15029 = !DILocation(line: 2193, column: 14, scope: !14807)
!15030 = !DILocation(line: 2193, column: 18, scope: !14807)
!15031 = !DILocation(line: 2193, column: 2, scope: !14807)
!15032 = !DILocation(line: 2194, column: 15, scope: !14807)
!15033 = !DILocation(line: 2194, column: 19, scope: !14807)
!15034 = !DILocation(line: 2194, column: 48, scope: !14807)
!15035 = !DILocation(line: 2194, column: 2, scope: !14807)
!15036 = !DILocation(line: 2200, column: 15, scope: !14807)
!15037 = !DILocation(line: 2200, column: 19, scope: !14807)
!15038 = !DILocation(line: 2200, column: 2, scope: !14807)
!15039 = !DILocation(line: 2203, column: 14, scope: !14807)
!15040 = !DILocation(line: 2203, column: 18, scope: !14807)
!15041 = !DILocation(line: 2203, column: 2, scope: !14807)
!15042 = !DILocation(line: 2204, column: 15, scope: !14807)
!15043 = !DILocation(line: 2204, column: 19, scope: !14807)
!15044 = !DILocation(line: 2204, column: 2, scope: !14807)
!15045 = !DILocation(line: 2205, column: 1, scope: !14807)
!15046 = distinct !DISubprogram(name: "spin_unlock_bh", scope: !9523, file: !9523, line: 397, type: !9769, scopeLine: 398, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!15047 = !DILocalVariable(name: "lock", arg: 1, scope: !15046, file: !9523, line: 397, type: !2181)
!15048 = !DILocation(line: 397, column: 56, scope: !15046)
!15049 = !DILocation(line: 399, column: 2, scope: !15046)
!15050 = !DILocation(line: 399, column: 2, scope: !15051)
!15051 = distinct !DILexicalBlock(scope: !15052, file: !9523, line: 399, column: 2)
!15052 = distinct !DILexicalBlock(scope: !15046, file: !9523, line: 399, column: 2)
!15053 = !DILabel(scope: !15051, name: "__here", file: !9523, line: 399)
!15054 = !DILocation(line: 399, column: 2, scope: !15052)
!15055 = !DILocation(line: 399, column: 2, scope: !15056)
!15056 = distinct !DILexicalBlock(scope: !15052, file: !9523, line: 399, column: 2)
!15057 = !DILocation(line: 400, column: 1, scope: !15046)
!15058 = distinct !DISubprogram(name: "skge_ramset", scope: !3, file: !3, line: 2479, type: !15059, scopeLine: 2480, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!15059 = !DISubroutineType(types: !15060)
!15060 = !{null, !8794, !581, !987, !1039}
!15061 = !DILocalVariable(name: "hw", arg: 1, scope: !15058, file: !3, line: 2479, type: !8794)
!15062 = !DILocation(line: 2479, column: 41, scope: !15058)
!15063 = !DILocalVariable(name: "q", arg: 2, scope: !15058, file: !3, line: 2479, type: !581)
!15064 = !DILocation(line: 2479, column: 49, scope: !15058)
!15065 = !DILocalVariable(name: "start", arg: 3, scope: !15058, file: !3, line: 2479, type: !987)
!15066 = !DILocation(line: 2479, column: 56, scope: !15058)
!15067 = !DILocalVariable(name: "len", arg: 4, scope: !15058, file: !3, line: 2479, type: !1039)
!15068 = !DILocation(line: 2479, column: 70, scope: !15058)
!15069 = !DILocalVariable(name: "end", scope: !15058, file: !3, line: 2481, type: !987)
!15070 = !DILocation(line: 2481, column: 6, scope: !15058)
!15071 = !DILocation(line: 2483, column: 8, scope: !15058)
!15072 = !DILocation(line: 2484, column: 6, scope: !15058)
!15073 = !DILocation(line: 2485, column: 8, scope: !15058)
!15074 = !DILocation(line: 2485, column: 16, scope: !15058)
!15075 = !DILocation(line: 2485, column: 14, scope: !15058)
!15076 = !DILocation(line: 2485, column: 20, scope: !15058)
!15077 = !DILocation(line: 2485, column: 6, scope: !15058)
!15078 = !DILocation(line: 2487, column: 14, scope: !15058)
!15079 = !DILocation(line: 2487, column: 18, scope: !15058)
!15080 = !DILocation(line: 2487, column: 2, scope: !15058)
!15081 = !DILocation(line: 2488, column: 15, scope: !15058)
!15082 = !DILocation(line: 2488, column: 19, scope: !15058)
!15083 = !DILocation(line: 2488, column: 41, scope: !15058)
!15084 = !DILocation(line: 2488, column: 2, scope: !15058)
!15085 = !DILocation(line: 2489, column: 15, scope: !15058)
!15086 = !DILocation(line: 2489, column: 19, scope: !15058)
!15087 = !DILocation(line: 2489, column: 38, scope: !15058)
!15088 = !DILocation(line: 2489, column: 2, scope: !15058)
!15089 = !DILocation(line: 2490, column: 15, scope: !15058)
!15090 = !DILocation(line: 2490, column: 19, scope: !15058)
!15091 = !DILocation(line: 2490, column: 38, scope: !15058)
!15092 = !DILocation(line: 2490, column: 2, scope: !15058)
!15093 = !DILocation(line: 2491, column: 15, scope: !15058)
!15094 = !DILocation(line: 2491, column: 19, scope: !15058)
!15095 = !DILocation(line: 2491, column: 39, scope: !15058)
!15096 = !DILocation(line: 2491, column: 2, scope: !15058)
!15097 = !DILocation(line: 2493, column: 6, scope: !15098)
!15098 = distinct !DILexicalBlock(scope: !15058, file: !3, line: 2493, column: 6)
!15099 = !DILocation(line: 2493, column: 8, scope: !15098)
!15100 = !DILocation(line: 2493, column: 16, scope: !15098)
!15101 = !DILocation(line: 2493, column: 19, scope: !15098)
!15102 = !DILocation(line: 2493, column: 21, scope: !15098)
!15103 = !DILocation(line: 2493, column: 6, scope: !15058)
!15104 = !DILocation(line: 2495, column: 16, scope: !15105)
!15105 = distinct !DILexicalBlock(scope: !15098, file: !3, line: 2493, column: 30)
!15106 = !DILocation(line: 2495, column: 20, scope: !15105)
!15107 = !DILocation(line: 2496, column: 9, scope: !15105)
!15108 = !DILocation(line: 2496, column: 20, scope: !15105)
!15109 = !DILocation(line: 2496, column: 19, scope: !15105)
!15110 = !DILocation(line: 2496, column: 24, scope: !15105)
!15111 = !DILocation(line: 2496, column: 15, scope: !15105)
!15112 = !DILocation(line: 2495, column: 3, scope: !15105)
!15113 = !DILocation(line: 2497, column: 16, scope: !15105)
!15114 = !DILocation(line: 2497, column: 20, scope: !15105)
!15115 = !DILocation(line: 2498, column: 9, scope: !15105)
!15116 = !DILocation(line: 2498, column: 18, scope: !15105)
!15117 = !DILocation(line: 2498, column: 21, scope: !15105)
!15118 = !DILocation(line: 2498, column: 15, scope: !15105)
!15119 = !DILocation(line: 2497, column: 3, scope: !15105)
!15120 = !DILocation(line: 2499, column: 2, scope: !15105)
!15121 = !DILocation(line: 2503, column: 15, scope: !15122)
!15122 = distinct !DILexicalBlock(scope: !15098, file: !3, line: 2499, column: 9)
!15123 = !DILocation(line: 2503, column: 19, scope: !15122)
!15124 = !DILocation(line: 2503, column: 3, scope: !15122)
!15125 = !DILocation(line: 2506, column: 14, scope: !15058)
!15126 = !DILocation(line: 2506, column: 18, scope: !15058)
!15127 = !DILocation(line: 2506, column: 2, scope: !15058)
!15128 = !DILocation(line: 2507, column: 1, scope: !15058)
!15129 = distinct !DISubprogram(name: "skge_qset", scope: !3, file: !3, line: 2510, type: !15130, scopeLine: 2512, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!15130 = !DISubroutineType(types: !15131)
!15131 = !{null, !9172, !581, !15132}
!15132 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15133, size: 64)
!15133 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9211)
!15134 = !DILocalVariable(name: "skge", arg: 1, scope: !15129, file: !3, line: 2510, type: !9172)
!15135 = !DILocation(line: 2510, column: 41, scope: !15129)
!15136 = !DILocalVariable(name: "q", arg: 2, scope: !15129, file: !3, line: 2510, type: !581)
!15137 = !DILocation(line: 2510, column: 51, scope: !15129)
!15138 = !DILocalVariable(name: "e", arg: 3, scope: !15129, file: !3, line: 2511, type: !15132)
!15139 = !DILocation(line: 2511, column: 36, scope: !15129)
!15140 = !DILocalVariable(name: "hw", scope: !15129, file: !3, line: 2513, type: !8794)
!15141 = !DILocation(line: 2513, column: 18, scope: !15129)
!15142 = !DILocation(line: 2513, column: 23, scope: !15129)
!15143 = !DILocation(line: 2513, column: 29, scope: !15129)
!15144 = !DILocalVariable(name: "watermark", scope: !15129, file: !3, line: 2514, type: !987)
!15145 = !DILocation(line: 2514, column: 6, scope: !15129)
!15146 = !DILocalVariable(name: "base", scope: !15129, file: !3, line: 2515, type: !331)
!15147 = !DILocation(line: 2515, column: 6, scope: !15129)
!15148 = !DILocation(line: 2515, column: 13, scope: !15129)
!15149 = !DILocation(line: 2515, column: 19, scope: !15129)
!15150 = !DILocation(line: 2515, column: 26, scope: !15129)
!15151 = !DILocation(line: 2515, column: 29, scope: !15129)
!15152 = !DILocation(line: 2515, column: 36, scope: !15129)
!15153 = !DILocation(line: 2515, column: 42, scope: !15129)
!15154 = !DILocation(line: 2515, column: 34, scope: !15129)
!15155 = !DILocation(line: 2515, column: 23, scope: !15129)
!15156 = !DILocation(line: 2518, column: 19, scope: !15157)
!15157 = distinct !DILexicalBlock(scope: !15129, file: !3, line: 2518, column: 6)
!15158 = !DILocation(line: 2518, column: 7, scope: !15157)
!15159 = !DILocation(line: 2518, column: 32, scope: !15157)
!15160 = !DILocation(line: 2518, column: 67, scope: !15157)
!15161 = !DILocation(line: 2518, column: 6, scope: !15129)
!15162 = !DILocation(line: 2519, column: 13, scope: !15157)
!15163 = !DILocation(line: 2519, column: 3, scope: !15157)
!15164 = !DILocation(line: 2521, column: 15, scope: !15129)
!15165 = !DILocation(line: 2521, column: 19, scope: !15129)
!15166 = !DILocation(line: 2521, column: 2, scope: !15129)
!15167 = !DILocation(line: 2522, column: 15, scope: !15129)
!15168 = !DILocation(line: 2522, column: 19, scope: !15129)
!15169 = !DILocation(line: 2522, column: 35, scope: !15129)
!15170 = !DILocation(line: 2522, column: 2, scope: !15129)
!15171 = !DILocation(line: 2523, column: 15, scope: !15129)
!15172 = !DILocation(line: 2523, column: 19, scope: !15129)
!15173 = !DILocation(line: 2523, column: 44, scope: !15129)
!15174 = !DILocation(line: 2523, column: 49, scope: !15129)
!15175 = !DILocation(line: 2523, column: 38, scope: !15129)
!15176 = !DILocation(line: 2523, column: 2, scope: !15129)
!15177 = !DILocation(line: 2524, column: 15, scope: !15129)
!15178 = !DILocation(line: 2524, column: 19, scope: !15129)
!15179 = !DILocation(line: 2524, column: 43, scope: !15129)
!15180 = !DILocation(line: 2524, column: 38, scope: !15129)
!15181 = !DILocation(line: 2524, column: 2, scope: !15129)
!15182 = !DILocation(line: 2525, column: 1, scope: !15129)
!15183 = distinct !DISubprogram(name: "skge_led", scope: !3, file: !3, line: 681, type: !15184, scopeLine: 682, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!15184 = !DISubroutineType(types: !15185)
!15185 = !{null, !9172, !8175}
!15186 = !DILocalVariable(name: "skge", arg: 1, scope: !15183, file: !3, line: 681, type: !9172)
!15187 = !DILocation(line: 681, column: 40, scope: !15183)
!15188 = !DILocalVariable(name: "mode", arg: 2, scope: !15183, file: !3, line: 681, type: !8175)
!15189 = !DILocation(line: 681, column: 60, scope: !15183)
!15190 = !DILocalVariable(name: "hw", scope: !15183, file: !3, line: 683, type: !8794)
!15191 = !DILocation(line: 683, column: 18, scope: !15183)
!15192 = !DILocation(line: 683, column: 23, scope: !15183)
!15193 = !DILocation(line: 683, column: 29, scope: !15183)
!15194 = !DILocalVariable(name: "port", scope: !15183, file: !3, line: 684, type: !32)
!15195 = !DILocation(line: 684, column: 6, scope: !15183)
!15196 = !DILocation(line: 684, column: 13, scope: !15183)
!15197 = !DILocation(line: 684, column: 19, scope: !15183)
!15198 = !DILocation(line: 686, column: 16, scope: !15183)
!15199 = !DILocation(line: 686, column: 20, scope: !15183)
!15200 = !DILocation(line: 686, column: 2, scope: !15183)
!15201 = !DILocation(line: 687, column: 17, scope: !15202)
!15202 = distinct !DILexicalBlock(scope: !15183, file: !3, line: 687, column: 6)
!15203 = !DILocation(line: 687, column: 6, scope: !15202)
!15204 = !DILocation(line: 687, column: 6, scope: !15183)
!15205 = !DILocation(line: 688, column: 11, scope: !15206)
!15206 = distinct !DILexicalBlock(scope: !15202, file: !3, line: 687, column: 22)
!15207 = !DILocation(line: 688, column: 3, scope: !15206)
!15208 = !DILocation(line: 690, column: 8, scope: !15209)
!15209 = distinct !DILexicalBlock(scope: !15210, file: !3, line: 690, column: 8)
!15210 = distinct !DILexicalBlock(scope: !15206, file: !3, line: 688, column: 17)
!15211 = !DILocation(line: 690, column: 12, scope: !15209)
!15212 = !DILocation(line: 690, column: 21, scope: !15209)
!15213 = !DILocation(line: 690, column: 8, scope: !15210)
!15214 = !DILocation(line: 691, column: 18, scope: !15209)
!15215 = !DILocation(line: 691, column: 22, scope: !15209)
!15216 = !DILocation(line: 691, column: 5, scope: !15209)
!15217 = !DILocation(line: 693, column: 18, scope: !15218)
!15218 = distinct !DILexicalBlock(scope: !15209, file: !3, line: 692, column: 9)
!15219 = !DILocation(line: 693, column: 22, scope: !15218)
!15220 = !DILocation(line: 693, column: 5, scope: !15218)
!15221 = !DILocation(line: 694, column: 17, scope: !15218)
!15222 = !DILocation(line: 694, column: 21, scope: !15218)
!15223 = !DILocation(line: 694, column: 5, scope: !15218)
!15224 = !DILocation(line: 696, column: 16, scope: !15210)
!15225 = !DILocation(line: 696, column: 20, scope: !15210)
!15226 = !DILocation(line: 696, column: 4, scope: !15210)
!15227 = !DILocation(line: 697, column: 17, scope: !15210)
!15228 = !DILocation(line: 697, column: 21, scope: !15210)
!15229 = !DILocation(line: 697, column: 4, scope: !15210)
!15230 = !DILocation(line: 698, column: 16, scope: !15210)
!15231 = !DILocation(line: 698, column: 20, scope: !15210)
!15232 = !DILocation(line: 698, column: 4, scope: !15210)
!15233 = !DILocation(line: 699, column: 4, scope: !15210)
!15234 = !DILocation(line: 702, column: 16, scope: !15210)
!15235 = !DILocation(line: 702, column: 20, scope: !15210)
!15236 = !DILocation(line: 702, column: 4, scope: !15210)
!15237 = !DILocation(line: 703, column: 16, scope: !15210)
!15238 = !DILocation(line: 703, column: 20, scope: !15210)
!15239 = !DILocation(line: 703, column: 4, scope: !15210)
!15240 = !DILocation(line: 705, column: 16, scope: !15210)
!15241 = !DILocation(line: 705, column: 20, scope: !15210)
!15242 = !DILocation(line: 705, column: 4, scope: !15210)
!15243 = !DILocation(line: 706, column: 16, scope: !15210)
!15244 = !DILocation(line: 706, column: 20, scope: !15210)
!15245 = !DILocation(line: 706, column: 4, scope: !15210)
!15246 = !DILocation(line: 708, column: 4, scope: !15210)
!15247 = !DILocation(line: 711, column: 16, scope: !15210)
!15248 = !DILocation(line: 711, column: 20, scope: !15210)
!15249 = !DILocation(line: 711, column: 4, scope: !15210)
!15250 = !DILocation(line: 712, column: 17, scope: !15210)
!15251 = !DILocation(line: 712, column: 21, scope: !15210)
!15252 = !DILocation(line: 712, column: 4, scope: !15210)
!15253 = !DILocation(line: 713, column: 16, scope: !15210)
!15254 = !DILocation(line: 713, column: 20, scope: !15210)
!15255 = !DILocation(line: 713, column: 4, scope: !15210)
!15256 = !DILocation(line: 715, column: 8, scope: !15257)
!15257 = distinct !DILexicalBlock(scope: !15210, file: !3, line: 715, column: 8)
!15258 = !DILocation(line: 715, column: 12, scope: !15257)
!15259 = !DILocation(line: 715, column: 21, scope: !15257)
!15260 = !DILocation(line: 715, column: 8, scope: !15210)
!15261 = !DILocation(line: 716, column: 18, scope: !15257)
!15262 = !DILocation(line: 716, column: 22, scope: !15257)
!15263 = !DILocation(line: 716, column: 5, scope: !15257)
!15264 = !DILocation(line: 718, column: 17, scope: !15265)
!15265 = distinct !DILexicalBlock(scope: !15257, file: !3, line: 717, column: 9)
!15266 = !DILocation(line: 718, column: 21, scope: !15265)
!15267 = !DILocation(line: 718, column: 5, scope: !15265)
!15268 = !DILocation(line: 719, column: 18, scope: !15265)
!15269 = !DILocation(line: 719, column: 22, scope: !15265)
!15270 = !DILocation(line: 719, column: 5, scope: !15265)
!15271 = !DILocation(line: 720, column: 17, scope: !15265)
!15272 = !DILocation(line: 720, column: 21, scope: !15265)
!15273 = !DILocation(line: 720, column: 5, scope: !15265)
!15274 = !DILocation(line: 723, column: 3, scope: !15210)
!15275 = !DILocation(line: 724, column: 2, scope: !15206)
!15276 = !DILocation(line: 725, column: 11, scope: !15277)
!15277 = distinct !DILexicalBlock(scope: !15202, file: !3, line: 724, column: 9)
!15278 = !DILocation(line: 725, column: 3, scope: !15277)
!15279 = !DILocation(line: 727, column: 17, scope: !15280)
!15280 = distinct !DILexicalBlock(scope: !15277, file: !3, line: 725, column: 17)
!15281 = !DILocation(line: 727, column: 21, scope: !15280)
!15282 = !DILocation(line: 727, column: 4, scope: !15280)
!15283 = !DILocation(line: 728, column: 17, scope: !15280)
!15284 = !DILocation(line: 728, column: 21, scope: !15280)
!15285 = !DILocation(line: 728, column: 4, scope: !15280)
!15286 = !DILocation(line: 734, column: 4, scope: !15280)
!15287 = !DILocation(line: 736, column: 17, scope: !15280)
!15288 = !DILocation(line: 736, column: 21, scope: !15280)
!15289 = !DILocation(line: 736, column: 4, scope: !15280)
!15290 = !DILocation(line: 742, column: 17, scope: !15280)
!15291 = !DILocation(line: 742, column: 21, scope: !15280)
!15292 = !DILocation(line: 744, column: 11, scope: !15280)
!15293 = !DILocation(line: 744, column: 17, scope: !15280)
!15294 = !DILocation(line: 744, column: 23, scope: !15280)
!15295 = !DILocation(line: 743, column: 38, scope: !15280)
!15296 = !DILocation(line: 743, column: 10, scope: !15280)
!15297 = !DILocation(line: 742, column: 4, scope: !15280)
!15298 = !DILocation(line: 746, column: 4, scope: !15280)
!15299 = !DILocation(line: 748, column: 17, scope: !15280)
!15300 = !DILocation(line: 748, column: 21, scope: !15280)
!15301 = !DILocation(line: 748, column: 4, scope: !15280)
!15302 = !DILocation(line: 749, column: 17, scope: !15280)
!15303 = !DILocation(line: 749, column: 21, scope: !15280)
!15304 = !DILocation(line: 749, column: 4, scope: !15280)
!15305 = !DILocation(line: 755, column: 3, scope: !15280)
!15306 = !DILocation(line: 757, column: 18, scope: !15183)
!15307 = !DILocation(line: 757, column: 22, scope: !15183)
!15308 = !DILocation(line: 757, column: 2, scope: !15183)
!15309 = !DILocation(line: 758, column: 1, scope: !15183)
!15310 = distinct !DISubprogram(name: "napi_enable", scope: !31, file: !31, line: 507, type: !15311, scopeLine: 508, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!15311 = !DISubroutineType(types: !15312)
!15312 = !{null, !9189}
!15313 = !DILocalVariable(name: "n", arg: 1, scope: !15310, file: !31, line: 507, type: !9189)
!15314 = !DILocation(line: 507, column: 52, scope: !15310)
!15315 = !DILocation(line: 509, column: 2, scope: !15310)
!15316 = !DILocation(line: 509, column: 2, scope: !15317)
!15317 = distinct !DILexicalBlock(scope: !15318, file: !31, line: 509, column: 2)
!15318 = distinct !DILexicalBlock(scope: !15310, file: !31, line: 509, column: 2)
!15319 = !DILocation(line: 509, column: 2, scope: !15318)
!15320 = !DILocation(line: 509, column: 2, scope: !15321)
!15321 = distinct !DILexicalBlock(scope: !15317, file: !31, line: 509, column: 2)
!15322 = !DILocation(line: 509, column: 2, scope: !15323)
!15323 = distinct !DILexicalBlock(scope: !15321, file: !31, line: 509, column: 2)
!15324 = !DILocation(line: 509, column: 2, scope: !15325)
!15325 = distinct !DILexicalBlock(scope: !15321, file: !31, line: 509, column: 2)
!15326 = !{i32 -2140287505, i32 -2140287476, i32 -2140287430, i32 -2140287372, i32 -2140287318, i32 -2140287264, i32 -2140287209, i32 -2140287178}
!15327 = !DILocation(line: 509, column: 2, scope: !15328)
!15328 = distinct !DILexicalBlock(scope: !15329, file: !31, line: 509, column: 2)
!15329 = distinct !DILexicalBlock(scope: !15321, file: !31, line: 509, column: 2)
!15330 = !{i32 -2140286730, i32 -2140286723, i32 -2140286669, i32 -2140286638, i32 -2140286608}
!15331 = !DILocation(line: 509, column: 2, scope: !15329)
!15332 = !DILocation(line: 510, column: 2, scope: !15310)
!15333 = !{i32 -2140286539}
!15334 = !DILocation(line: 511, column: 31, scope: !15310)
!15335 = !DILocation(line: 511, column: 34, scope: !15310)
!15336 = !DILocation(line: 511, column: 2, scope: !15310)
!15337 = !DILocation(line: 512, column: 31, scope: !15310)
!15338 = !DILocation(line: 512, column: 34, scope: !15310)
!15339 = !DILocation(line: 512, column: 2, scope: !15310)
!15340 = !DILocation(line: 513, column: 1, scope: !15310)
!15341 = distinct !DISubprogram(name: "skge_rx_clean", scope: !3, file: !3, line: 982, type: !9434, scopeLine: 983, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!15342 = !DILocalVariable(name: "skge", arg: 1, scope: !15341, file: !3, line: 982, type: !9172)
!15343 = !DILocation(line: 982, column: 45, scope: !15341)
!15344 = !DILocalVariable(name: "hw", scope: !15341, file: !3, line: 984, type: !8794)
!15345 = !DILocation(line: 984, column: 18, scope: !15341)
!15346 = !DILocation(line: 984, column: 23, scope: !15341)
!15347 = !DILocation(line: 984, column: 29, scope: !15341)
!15348 = !DILocalVariable(name: "ring", scope: !15341, file: !3, line: 985, type: !12862)
!15349 = !DILocation(line: 985, column: 20, scope: !15341)
!15350 = !DILocation(line: 985, column: 28, scope: !15341)
!15351 = !DILocation(line: 985, column: 34, scope: !15341)
!15352 = !DILocalVariable(name: "e", scope: !15341, file: !3, line: 986, type: !9210)
!15353 = !DILocation(line: 986, column: 23, scope: !15341)
!15354 = !DILocation(line: 988, column: 6, scope: !15341)
!15355 = !DILocation(line: 988, column: 12, scope: !15341)
!15356 = !DILocation(line: 988, column: 4, scope: !15341)
!15357 = !DILocation(line: 989, column: 2, scope: !15341)
!15358 = !DILocalVariable(name: "rd", scope: !15359, file: !3, line: 990, type: !12888)
!15359 = distinct !DILexicalBlock(scope: !15341, file: !3, line: 989, column: 5)
!15360 = !DILocation(line: 990, column: 24, scope: !15359)
!15361 = !DILocation(line: 990, column: 29, scope: !15359)
!15362 = !DILocation(line: 990, column: 32, scope: !15359)
!15363 = !DILocation(line: 991, column: 3, scope: !15359)
!15364 = !DILocation(line: 991, column: 7, scope: !15359)
!15365 = !DILocation(line: 991, column: 15, scope: !15359)
!15366 = !DILocation(line: 992, column: 7, scope: !15367)
!15367 = distinct !DILexicalBlock(scope: !15359, file: !3, line: 992, column: 7)
!15368 = !DILocation(line: 992, column: 10, scope: !15367)
!15369 = !DILocation(line: 992, column: 7, scope: !15359)
!15370 = !DILocation(line: 993, column: 4, scope: !15371)
!15371 = distinct !DILexicalBlock(scope: !15367, file: !3, line: 992, column: 15)
!15372 = !DILocation(line: 997, column: 4, scope: !15371)
!15373 = !DILocation(line: 998, column: 4, scope: !15371)
!15374 = !DILocation(line: 998, column: 7, scope: !15371)
!15375 = !DILocation(line: 998, column: 11, scope: !15371)
!15376 = !DILocation(line: 999, column: 3, scope: !15371)
!15377 = !DILocation(line: 1000, column: 2, scope: !15359)
!15378 = !DILocation(line: 1000, column: 16, scope: !15341)
!15379 = !DILocation(line: 1000, column: 19, scope: !15341)
!15380 = !DILocation(line: 1000, column: 14, scope: !15341)
!15381 = !DILocation(line: 1000, column: 28, scope: !15341)
!15382 = !DILocation(line: 1000, column: 34, scope: !15341)
!15383 = !DILocation(line: 1000, column: 25, scope: !15341)
!15384 = distinct !{!15384, !15357, !15385}
!15385 = !DILocation(line: 1000, column: 39, scope: !15341)
!15386 = !DILocation(line: 1001, column: 1, scope: !15341)
!15387 = distinct !DISubprogram(name: "dma_free_coherent", scope: !9424, file: !9424, line: 400, type: !15388, scopeLine: 402, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!15388 = !DISubroutineType(types: !15389)
!15389 = !{null, !6544, !1039, !591, !2036}
!15390 = !DILocalVariable(name: "dev", arg: 1, scope: !15387, file: !9424, line: 400, type: !6544)
!15391 = !DILocation(line: 400, column: 53, scope: !15387)
!15392 = !DILocalVariable(name: "size", arg: 2, scope: !15387, file: !9424, line: 400, type: !1039)
!15393 = !DILocation(line: 400, column: 65, scope: !15387)
!15394 = !DILocalVariable(name: "cpu_addr", arg: 3, scope: !15387, file: !9424, line: 401, type: !591)
!15395 = !DILocation(line: 401, column: 9, scope: !15387)
!15396 = !DILocalVariable(name: "dma_handle", arg: 4, scope: !15387, file: !9424, line: 401, type: !2036)
!15397 = !DILocation(line: 401, column: 30, scope: !15387)
!15398 = !DILocation(line: 403, column: 24, scope: !15387)
!15399 = !DILocation(line: 403, column: 29, scope: !15387)
!15400 = !DILocation(line: 403, column: 35, scope: !15387)
!15401 = !DILocation(line: 403, column: 45, scope: !15387)
!15402 = !DILocation(line: 403, column: 9, scope: !15387)
!15403 = !DILocation(line: 403, column: 2, scope: !15387)
!15404 = distinct !DISubprogram(name: "kcalloc", scope: !7190, file: !7190, line: 601, type: !15405, scopeLine: 602, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!15405 = !DISubroutineType(types: !15406)
!15406 = !{!591, !1039, !1039, !1742}
!15407 = !DILocalVariable(name: "n", arg: 1, scope: !15404, file: !7190, line: 601, type: !1039)
!15408 = !DILocation(line: 601, column: 36, scope: !15404)
!15409 = !DILocalVariable(name: "size", arg: 2, scope: !15404, file: !7190, line: 601, type: !1039)
!15410 = !DILocation(line: 601, column: 46, scope: !15404)
!15411 = !DILocalVariable(name: "flags", arg: 3, scope: !15404, file: !7190, line: 601, type: !1742)
!15412 = !DILocation(line: 601, column: 58, scope: !15404)
!15413 = !DILocation(line: 603, column: 23, scope: !15404)
!15414 = !DILocation(line: 603, column: 26, scope: !15404)
!15415 = !DILocation(line: 603, column: 32, scope: !15404)
!15416 = !DILocation(line: 603, column: 38, scope: !15404)
!15417 = !DILocation(line: 603, column: 9, scope: !15404)
!15418 = !DILocation(line: 603, column: 2, scope: !15404)
!15419 = distinct !DISubprogram(name: "kmalloc_array", scope: !7190, file: !7190, line: 584, type: !15405, scopeLine: 585, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!15420 = !DILocation(line: 445, column: 72, scope: !9926, inlinedAt: !15421)
!15421 = distinct !DILocation(line: 552, column: 10, scope: !9931, inlinedAt: !15422)
!15422 = distinct !DILocation(line: 591, column: 10, scope: !15423)
!15423 = distinct !DILexicalBlock(scope: !15419, file: !7190, line: 590, column: 6)
!15424 = !DILocation(line: 446, column: 9, scope: !9926, inlinedAt: !15421)
!15425 = !DILocation(line: 446, column: 23, scope: !9926, inlinedAt: !15421)
!15426 = !DILocation(line: 448, column: 8, scope: !9926, inlinedAt: !15421)
!15427 = !DILocation(line: 318, column: 67, scope: !9942, inlinedAt: !15428)
!15428 = distinct !DILocation(line: 553, column: 20, scope: !9931, inlinedAt: !15422)
!15429 = !DILocation(line: 346, column: 58, scope: !9948, inlinedAt: !15430)
!15430 = distinct !DILocation(line: 547, column: 11, scope: !9931, inlinedAt: !15422)
!15431 = !DILocation(line: 472, column: 28, scope: !9954, inlinedAt: !15432)
!15432 = distinct !DILocation(line: 481, column: 9, scope: !9959, inlinedAt: !15433)
!15433 = distinct !DILocation(line: 545, column: 11, scope: !9961, inlinedAt: !15422)
!15434 = !DILocation(line: 472, column: 40, scope: !9954, inlinedAt: !15432)
!15435 = !DILocation(line: 472, column: 60, scope: !9954, inlinedAt: !15432)
!15436 = !DILocation(line: 478, column: 51, scope: !9959, inlinedAt: !15433)
!15437 = !DILocation(line: 478, column: 63, scope: !9959, inlinedAt: !15433)
!15438 = !DILocation(line: 480, column: 15, scope: !9959, inlinedAt: !15433)
!15439 = !DILocation(line: 538, column: 45, scope: !9933, inlinedAt: !15422)
!15440 = !DILocation(line: 538, column: 57, scope: !9933, inlinedAt: !15422)
!15441 = !DILocation(line: 542, column: 16, scope: !9931, inlinedAt: !15422)
!15442 = !DILocalVariable(name: "n", arg: 1, scope: !15419, file: !7190, line: 584, type: !1039)
!15443 = !DILocation(line: 584, column: 42, scope: !15419)
!15444 = !DILocalVariable(name: "size", arg: 2, scope: !15419, file: !7190, line: 584, type: !1039)
!15445 = !DILocation(line: 584, column: 52, scope: !15419)
!15446 = !DILocalVariable(name: "flags", arg: 3, scope: !15419, file: !7190, line: 584, type: !1742)
!15447 = !DILocation(line: 584, column: 64, scope: !15419)
!15448 = !DILocalVariable(name: "bytes", scope: !15419, file: !7190, line: 586, type: !1039)
!15449 = !DILocation(line: 586, column: 9, scope: !15419)
!15450 = !DILocalVariable(name: "__a", scope: !15451, file: !7190, line: 588, type: !1039)
!15451 = distinct !DILexicalBlock(scope: !15452, file: !7190, line: 588, column: 6)
!15452 = distinct !DILexicalBlock(scope: !15419, file: !7190, line: 588, column: 6)
!15453 = !DILocation(line: 588, column: 6, scope: !15451)
!15454 = !DILocalVariable(name: "__b", scope: !15451, file: !7190, line: 588, type: !1039)
!15455 = !DILocalVariable(name: "__d", scope: !15451, file: !7190, line: 588, type: !2875)
!15456 = !DILocation(line: 588, column: 6, scope: !15452)
!15457 = !DILocation(line: 588, column: 6, scope: !15419)
!15458 = !DILocation(line: 589, column: 3, scope: !15452)
!15459 = !DILocation(line: 590, column: 27, scope: !15423)
!15460 = !DILocation(line: 590, column: 6, scope: !15423)
!15461 = !DILocation(line: 590, column: 30, scope: !15423)
!15462 = !DILocation(line: 590, column: 54, scope: !15423)
!15463 = !DILocation(line: 590, column: 33, scope: !15423)
!15464 = !DILocation(line: 590, column: 6, scope: !15419)
!15465 = !DILocation(line: 591, column: 18, scope: !15423)
!15466 = !DILocation(line: 591, column: 25, scope: !15423)
!15467 = !DILocation(line: 540, column: 27, scope: !9932, inlinedAt: !15422)
!15468 = !DILocation(line: 540, column: 6, scope: !9932, inlinedAt: !15422)
!15469 = !DILocation(line: 540, column: 6, scope: !9933, inlinedAt: !15422)
!15470 = !DILocation(line: 544, column: 7, scope: !9961, inlinedAt: !15422)
!15471 = !DILocation(line: 544, column: 12, scope: !9961, inlinedAt: !15422)
!15472 = !DILocation(line: 544, column: 7, scope: !9931, inlinedAt: !15422)
!15473 = !DILocation(line: 545, column: 25, scope: !9961, inlinedAt: !15422)
!15474 = !DILocation(line: 545, column: 31, scope: !9961, inlinedAt: !15422)
!15475 = !DILocation(line: 480, column: 33, scope: !9959, inlinedAt: !15433)
!15476 = !DILocation(line: 480, column: 23, scope: !9959, inlinedAt: !15433)
!15477 = !DILocation(line: 481, column: 29, scope: !9959, inlinedAt: !15433)
!15478 = !DILocation(line: 481, column: 35, scope: !9959, inlinedAt: !15433)
!15479 = !DILocation(line: 481, column: 42, scope: !9959, inlinedAt: !15433)
!15480 = !DILocation(line: 474, column: 23, scope: !9954, inlinedAt: !15432)
!15481 = !DILocation(line: 474, column: 29, scope: !9954, inlinedAt: !15432)
!15482 = !DILocation(line: 474, column: 36, scope: !9954, inlinedAt: !15432)
!15483 = !DILocation(line: 474, column: 9, scope: !9954, inlinedAt: !15432)
!15484 = !DILocation(line: 545, column: 4, scope: !9961, inlinedAt: !15422)
!15485 = !DILocation(line: 547, column: 25, scope: !9931, inlinedAt: !15422)
!15486 = !DILocation(line: 348, column: 7, scope: !10005, inlinedAt: !15430)
!15487 = !DILocation(line: 348, column: 6, scope: !9948, inlinedAt: !15430)
!15488 = !DILocation(line: 349, column: 3, scope: !10005, inlinedAt: !15430)
!15489 = !DILocation(line: 351, column: 6, scope: !10009, inlinedAt: !15430)
!15490 = !DILocation(line: 351, column: 11, scope: !10009, inlinedAt: !15430)
!15491 = !DILocation(line: 351, column: 6, scope: !9948, inlinedAt: !15430)
!15492 = !DILocation(line: 352, column: 3, scope: !10009, inlinedAt: !15430)
!15493 = !DILocation(line: 354, column: 32, scope: !10014, inlinedAt: !15430)
!15494 = !DILocation(line: 354, column: 37, scope: !10014, inlinedAt: !15430)
!15495 = !DILocation(line: 354, column: 42, scope: !10014, inlinedAt: !15430)
!15496 = !DILocation(line: 354, column: 45, scope: !10014, inlinedAt: !15430)
!15497 = !DILocation(line: 354, column: 50, scope: !10014, inlinedAt: !15430)
!15498 = !DILocation(line: 354, column: 6, scope: !9948, inlinedAt: !15430)
!15499 = !DILocation(line: 355, column: 3, scope: !10014, inlinedAt: !15430)
!15500 = !DILocation(line: 356, column: 32, scope: !10022, inlinedAt: !15430)
!15501 = !DILocation(line: 356, column: 37, scope: !10022, inlinedAt: !15430)
!15502 = !DILocation(line: 356, column: 43, scope: !10022, inlinedAt: !15430)
!15503 = !DILocation(line: 356, column: 46, scope: !10022, inlinedAt: !15430)
!15504 = !DILocation(line: 356, column: 51, scope: !10022, inlinedAt: !15430)
!15505 = !DILocation(line: 356, column: 6, scope: !9948, inlinedAt: !15430)
!15506 = !DILocation(line: 357, column: 3, scope: !10022, inlinedAt: !15430)
!15507 = !DILocation(line: 358, column: 6, scope: !10030, inlinedAt: !15430)
!15508 = !DILocation(line: 358, column: 11, scope: !10030, inlinedAt: !15430)
!15509 = !DILocation(line: 358, column: 6, scope: !9948, inlinedAt: !15430)
!15510 = !DILocation(line: 358, column: 26, scope: !10030, inlinedAt: !15430)
!15511 = !DILocation(line: 359, column: 6, scope: !10035, inlinedAt: !15430)
!15512 = !DILocation(line: 359, column: 11, scope: !10035, inlinedAt: !15430)
!15513 = !DILocation(line: 359, column: 6, scope: !9948, inlinedAt: !15430)
!15514 = !DILocation(line: 359, column: 26, scope: !10035, inlinedAt: !15430)
!15515 = !DILocation(line: 360, column: 6, scope: !10040, inlinedAt: !15430)
!15516 = !DILocation(line: 360, column: 11, scope: !10040, inlinedAt: !15430)
!15517 = !DILocation(line: 360, column: 6, scope: !9948, inlinedAt: !15430)
!15518 = !DILocation(line: 360, column: 26, scope: !10040, inlinedAt: !15430)
!15519 = !DILocation(line: 361, column: 6, scope: !10045, inlinedAt: !15430)
!15520 = !DILocation(line: 361, column: 11, scope: !10045, inlinedAt: !15430)
!15521 = !DILocation(line: 361, column: 6, scope: !9948, inlinedAt: !15430)
!15522 = !DILocation(line: 361, column: 26, scope: !10045, inlinedAt: !15430)
!15523 = !DILocation(line: 362, column: 6, scope: !10050, inlinedAt: !15430)
!15524 = !DILocation(line: 362, column: 11, scope: !10050, inlinedAt: !15430)
!15525 = !DILocation(line: 362, column: 6, scope: !9948, inlinedAt: !15430)
!15526 = !DILocation(line: 362, column: 26, scope: !10050, inlinedAt: !15430)
!15527 = !DILocation(line: 363, column: 6, scope: !10055, inlinedAt: !15430)
!15528 = !DILocation(line: 363, column: 11, scope: !10055, inlinedAt: !15430)
!15529 = !DILocation(line: 363, column: 6, scope: !9948, inlinedAt: !15430)
!15530 = !DILocation(line: 363, column: 26, scope: !10055, inlinedAt: !15430)
!15531 = !DILocation(line: 364, column: 6, scope: !10060, inlinedAt: !15430)
!15532 = !DILocation(line: 364, column: 11, scope: !10060, inlinedAt: !15430)
!15533 = !DILocation(line: 364, column: 6, scope: !9948, inlinedAt: !15430)
!15534 = !DILocation(line: 364, column: 26, scope: !10060, inlinedAt: !15430)
!15535 = !DILocation(line: 365, column: 6, scope: !10065, inlinedAt: !15430)
!15536 = !DILocation(line: 365, column: 11, scope: !10065, inlinedAt: !15430)
!15537 = !DILocation(line: 365, column: 6, scope: !9948, inlinedAt: !15430)
!15538 = !DILocation(line: 365, column: 26, scope: !10065, inlinedAt: !15430)
!15539 = !DILocation(line: 366, column: 6, scope: !10070, inlinedAt: !15430)
!15540 = !DILocation(line: 366, column: 11, scope: !10070, inlinedAt: !15430)
!15541 = !DILocation(line: 366, column: 6, scope: !9948, inlinedAt: !15430)
!15542 = !DILocation(line: 366, column: 26, scope: !10070, inlinedAt: !15430)
!15543 = !DILocation(line: 367, column: 6, scope: !10075, inlinedAt: !15430)
!15544 = !DILocation(line: 367, column: 11, scope: !10075, inlinedAt: !15430)
!15545 = !DILocation(line: 367, column: 6, scope: !9948, inlinedAt: !15430)
!15546 = !DILocation(line: 367, column: 26, scope: !10075, inlinedAt: !15430)
!15547 = !DILocation(line: 368, column: 6, scope: !10080, inlinedAt: !15430)
!15548 = !DILocation(line: 368, column: 11, scope: !10080, inlinedAt: !15430)
!15549 = !DILocation(line: 368, column: 6, scope: !9948, inlinedAt: !15430)
!15550 = !DILocation(line: 368, column: 26, scope: !10080, inlinedAt: !15430)
!15551 = !DILocation(line: 369, column: 6, scope: !10085, inlinedAt: !15430)
!15552 = !DILocation(line: 369, column: 11, scope: !10085, inlinedAt: !15430)
!15553 = !DILocation(line: 369, column: 6, scope: !9948, inlinedAt: !15430)
!15554 = !DILocation(line: 369, column: 26, scope: !10085, inlinedAt: !15430)
!15555 = !DILocation(line: 370, column: 6, scope: !10090, inlinedAt: !15430)
!15556 = !DILocation(line: 370, column: 11, scope: !10090, inlinedAt: !15430)
!15557 = !DILocation(line: 370, column: 6, scope: !9948, inlinedAt: !15430)
!15558 = !DILocation(line: 370, column: 26, scope: !10090, inlinedAt: !15430)
!15559 = !DILocation(line: 371, column: 6, scope: !10095, inlinedAt: !15430)
!15560 = !DILocation(line: 371, column: 11, scope: !10095, inlinedAt: !15430)
!15561 = !DILocation(line: 371, column: 6, scope: !9948, inlinedAt: !15430)
!15562 = !DILocation(line: 371, column: 26, scope: !10095, inlinedAt: !15430)
!15563 = !DILocation(line: 372, column: 6, scope: !10100, inlinedAt: !15430)
!15564 = !DILocation(line: 372, column: 11, scope: !10100, inlinedAt: !15430)
!15565 = !DILocation(line: 372, column: 6, scope: !9948, inlinedAt: !15430)
!15566 = !DILocation(line: 372, column: 26, scope: !10100, inlinedAt: !15430)
!15567 = !DILocation(line: 373, column: 6, scope: !10105, inlinedAt: !15430)
!15568 = !DILocation(line: 373, column: 11, scope: !10105, inlinedAt: !15430)
!15569 = !DILocation(line: 373, column: 6, scope: !9948, inlinedAt: !15430)
!15570 = !DILocation(line: 373, column: 26, scope: !10105, inlinedAt: !15430)
!15571 = !DILocation(line: 374, column: 6, scope: !10110, inlinedAt: !15430)
!15572 = !DILocation(line: 374, column: 11, scope: !10110, inlinedAt: !15430)
!15573 = !DILocation(line: 374, column: 6, scope: !9948, inlinedAt: !15430)
!15574 = !DILocation(line: 374, column: 26, scope: !10110, inlinedAt: !15430)
!15575 = !DILocation(line: 375, column: 6, scope: !10115, inlinedAt: !15430)
!15576 = !DILocation(line: 375, column: 11, scope: !10115, inlinedAt: !15430)
!15577 = !DILocation(line: 375, column: 6, scope: !9948, inlinedAt: !15430)
!15578 = !DILocation(line: 375, column: 27, scope: !10115, inlinedAt: !15430)
!15579 = !DILocation(line: 376, column: 6, scope: !10120, inlinedAt: !15430)
!15580 = !DILocation(line: 376, column: 11, scope: !10120, inlinedAt: !15430)
!15581 = !DILocation(line: 376, column: 6, scope: !9948, inlinedAt: !15430)
!15582 = !DILocation(line: 376, column: 32, scope: !10120, inlinedAt: !15430)
!15583 = !DILocation(line: 377, column: 6, scope: !10125, inlinedAt: !15430)
!15584 = !DILocation(line: 377, column: 11, scope: !10125, inlinedAt: !15430)
!15585 = !DILocation(line: 377, column: 6, scope: !9948, inlinedAt: !15430)
!15586 = !DILocation(line: 377, column: 32, scope: !10125, inlinedAt: !15430)
!15587 = !DILocation(line: 378, column: 6, scope: !10130, inlinedAt: !15430)
!15588 = !DILocation(line: 378, column: 11, scope: !10130, inlinedAt: !15430)
!15589 = !DILocation(line: 378, column: 6, scope: !9948, inlinedAt: !15430)
!15590 = !DILocation(line: 378, column: 32, scope: !10130, inlinedAt: !15430)
!15591 = !DILocation(line: 379, column: 6, scope: !10135, inlinedAt: !15430)
!15592 = !DILocation(line: 379, column: 11, scope: !10135, inlinedAt: !15430)
!15593 = !DILocation(line: 379, column: 6, scope: !9948, inlinedAt: !15430)
!15594 = !DILocation(line: 379, column: 33, scope: !10135, inlinedAt: !15430)
!15595 = !DILocation(line: 380, column: 6, scope: !10140, inlinedAt: !15430)
!15596 = !DILocation(line: 380, column: 11, scope: !10140, inlinedAt: !15430)
!15597 = !DILocation(line: 380, column: 6, scope: !9948, inlinedAt: !15430)
!15598 = !DILocation(line: 380, column: 33, scope: !10140, inlinedAt: !15430)
!15599 = !DILocation(line: 381, column: 6, scope: !10145, inlinedAt: !15430)
!15600 = !DILocation(line: 381, column: 11, scope: !10145, inlinedAt: !15430)
!15601 = !DILocation(line: 381, column: 6, scope: !9948, inlinedAt: !15430)
!15602 = !DILocation(line: 381, column: 33, scope: !10145, inlinedAt: !15430)
!15603 = !DILocation(line: 382, column: 2, scope: !10150, inlinedAt: !15430)
!15604 = !DILocation(line: 382, column: 2, scope: !10154, inlinedAt: !15430)
!15605 = !DILocation(line: 382, column: 2, scope: !10155, inlinedAt: !15430)
!15606 = !DILocation(line: 386, column: 1, scope: !9948, inlinedAt: !15430)
!15607 = !DILocation(line: 547, column: 9, scope: !9931, inlinedAt: !15422)
!15608 = !DILocation(line: 549, column: 8, scope: !10161, inlinedAt: !15422)
!15609 = !DILocation(line: 549, column: 7, scope: !9931, inlinedAt: !15422)
!15610 = !DILocation(line: 550, column: 4, scope: !10161, inlinedAt: !15422)
!15611 = !DILocation(line: 553, column: 33, scope: !9931, inlinedAt: !15422)
!15612 = !DILocation(line: 325, column: 6, scope: !10166, inlinedAt: !15428)
!15613 = !DILocation(line: 325, column: 6, scope: !9942, inlinedAt: !15428)
!15614 = !DILocation(line: 326, column: 3, scope: !10166, inlinedAt: !15428)
!15615 = !DILocation(line: 332, column: 9, scope: !9942, inlinedAt: !15428)
!15616 = !DILocation(line: 332, column: 15, scope: !9942, inlinedAt: !15428)
!15617 = !DILocation(line: 332, column: 2, scope: !9942, inlinedAt: !15428)
!15618 = !DILocation(line: 336, column: 1, scope: !9942, inlinedAt: !15428)
!15619 = !DILocation(line: 553, column: 5, scope: !9931, inlinedAt: !15422)
!15620 = !DILocation(line: 553, column: 41, scope: !9931, inlinedAt: !15422)
!15621 = !DILocation(line: 554, column: 5, scope: !9931, inlinedAt: !15422)
!15622 = !DILocation(line: 554, column: 12, scope: !9931, inlinedAt: !15422)
!15623 = !DILocation(line: 448, column: 31, scope: !9926, inlinedAt: !15421)
!15624 = !DILocation(line: 448, column: 34, scope: !9926, inlinedAt: !15421)
!15625 = !DILocation(line: 448, column: 14, scope: !9926, inlinedAt: !15421)
!15626 = !DILocation(line: 450, column: 22, scope: !9926, inlinedAt: !15421)
!15627 = !DILocation(line: 450, column: 25, scope: !9926, inlinedAt: !15421)
!15628 = !DILocation(line: 450, column: 30, scope: !9926, inlinedAt: !15421)
!15629 = !DILocation(line: 450, column: 36, scope: !9926, inlinedAt: !15421)
!15630 = !DILocation(line: 450, column: 8, scope: !9926, inlinedAt: !15421)
!15631 = !DILocation(line: 450, column: 6, scope: !9926, inlinedAt: !15421)
!15632 = !DILocation(line: 451, column: 9, scope: !9926, inlinedAt: !15421)
!15633 = !DILocation(line: 552, column: 3, scope: !9931, inlinedAt: !15422)
!15634 = !DILocation(line: 557, column: 19, scope: !9933, inlinedAt: !15422)
!15635 = !DILocation(line: 557, column: 25, scope: !9933, inlinedAt: !15422)
!15636 = !DILocation(line: 557, column: 9, scope: !9933, inlinedAt: !15422)
!15637 = !DILocation(line: 557, column: 2, scope: !9933, inlinedAt: !15422)
!15638 = !DILocation(line: 558, column: 1, scope: !9933, inlinedAt: !15422)
!15639 = !DILocation(line: 591, column: 3, scope: !15423)
!15640 = !DILocation(line: 592, column: 19, scope: !15419)
!15641 = !DILocation(line: 592, column: 26, scope: !15419)
!15642 = !DILocation(line: 592, column: 9, scope: !15419)
!15643 = !DILocation(line: 592, column: 2, scope: !15419)
!15644 = !DILocation(line: 593, column: 1, scope: !15419)
!15645 = distinct !DISubprogram(name: "__must_check_overflow", scope: !15646, file: !15646, line: 52, type: !15647, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!15646 = !DIFile(filename: "./include/linux/overflow.h", directory: "/home/lizy2001/genbc/linux")
!15647 = !DISubroutineType(types: !15648)
!15648 = !{!771, !771}
!15649 = !DILocalVariable(name: "overflow", arg: 1, scope: !15645, file: !15646, line: 52, type: !771)
!15650 = !DILocation(line: 52, column: 60, scope: !15645)
!15651 = !DILocation(line: 54, column: 9, scope: !15645)
!15652 = !DILocation(line: 54, column: 2, scope: !15645)
!15653 = distinct !DISubprogram(name: "skb_reserve", scope: !417, file: !417, line: 2378, type: !15654, scopeLine: 2379, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!15654 = !DISubroutineType(types: !15655)
!15655 = !{null, !415, !32}
!15656 = !DILocalVariable(name: "skb", arg: 1, scope: !15653, file: !417, line: 2378, type: !415)
!15657 = !DILocation(line: 2378, column: 48, scope: !15653)
!15658 = !DILocalVariable(name: "len", arg: 2, scope: !15653, file: !417, line: 2378, type: !32)
!15659 = !DILocation(line: 2378, column: 57, scope: !15653)
!15660 = !DILocation(line: 2380, column: 15, scope: !15653)
!15661 = !DILocation(line: 2380, column: 2, scope: !15653)
!15662 = !DILocation(line: 2380, column: 7, scope: !15653)
!15663 = !DILocation(line: 2380, column: 12, scope: !15653)
!15664 = !DILocation(line: 2381, column: 15, scope: !15653)
!15665 = !DILocation(line: 2381, column: 2, scope: !15653)
!15666 = !DILocation(line: 2381, column: 7, scope: !15653)
!15667 = !DILocation(line: 2381, column: 12, scope: !15653)
!15668 = !DILocation(line: 2382, column: 1, scope: !15653)
!15669 = distinct !DISubprogram(name: "skge_rx_setup", scope: !3, file: !3, line: 936, type: !15670, scopeLine: 938, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!15670 = !DISubroutineType(types: !15671)
!15671 = !{!32, !9172, !9210, !415, !7}
!15672 = !DILocalVariable(name: "skge", arg: 1, scope: !15669, file: !3, line: 936, type: !9172)
!15673 = !DILocation(line: 936, column: 44, scope: !15669)
!15674 = !DILocalVariable(name: "e", arg: 2, scope: !15669, file: !3, line: 936, type: !9210)
!15675 = !DILocation(line: 936, column: 71, scope: !15669)
!15676 = !DILocalVariable(name: "skb", arg: 3, scope: !15669, file: !3, line: 937, type: !415)
!15677 = !DILocation(line: 937, column: 21, scope: !15669)
!15678 = !DILocalVariable(name: "bufsize", arg: 4, scope: !15669, file: !3, line: 937, type: !7)
!15679 = !DILocation(line: 937, column: 39, scope: !15669)
!15680 = !DILocalVariable(name: "rd", scope: !15669, file: !3, line: 939, type: !12888)
!15681 = !DILocation(line: 939, column: 23, scope: !15669)
!15682 = !DILocation(line: 939, column: 28, scope: !15669)
!15683 = !DILocation(line: 939, column: 31, scope: !15669)
!15684 = !DILocalVariable(name: "map", scope: !15669, file: !3, line: 940, type: !2036)
!15685 = !DILocation(line: 940, column: 13, scope: !15669)
!15686 = !DILocation(line: 942, column: 8, scope: !15669)
!15687 = !DILocation(line: 942, column: 6, scope: !15669)
!15688 = !DILocation(line: 945, column: 25, scope: !15689)
!15689 = distinct !DILexicalBlock(scope: !15669, file: !3, line: 945, column: 6)
!15690 = !DILocation(line: 945, column: 31, scope: !15689)
!15691 = !DILocation(line: 945, column: 35, scope: !15689)
!15692 = !DILocation(line: 945, column: 41, scope: !15689)
!15693 = !DILocation(line: 945, column: 46, scope: !15689)
!15694 = !DILocation(line: 945, column: 6, scope: !15689)
!15695 = !DILocation(line: 945, column: 6, scope: !15669)
!15696 = !DILocation(line: 946, column: 3, scope: !15689)
!15697 = !DILocation(line: 948, column: 15, scope: !15669)
!15698 = !DILocation(line: 948, column: 2, scope: !15669)
!15699 = !DILocation(line: 948, column: 6, scope: !15669)
!15700 = !DILocation(line: 948, column: 13, scope: !15669)
!15701 = !DILocation(line: 949, column: 15, scope: !15669)
!15702 = !DILocation(line: 949, column: 2, scope: !15669)
!15703 = !DILocation(line: 949, column: 6, scope: !15669)
!15704 = !DILocation(line: 949, column: 13, scope: !15669)
!15705 = !DILocation(line: 950, column: 11, scope: !15669)
!15706 = !DILocation(line: 950, column: 2, scope: !15669)
!15707 = !DILocation(line: 950, column: 5, scope: !15669)
!15708 = !DILocation(line: 950, column: 9, scope: !15669)
!15709 = !DILocation(line: 951, column: 2, scope: !15669)
!15710 = !DILocation(line: 951, column: 6, scope: !15669)
!15711 = !DILocation(line: 951, column: 18, scope: !15669)
!15712 = !DILocation(line: 952, column: 2, scope: !15669)
!15713 = !DILocation(line: 952, column: 6, scope: !15669)
!15714 = !DILocation(line: 952, column: 18, scope: !15669)
!15715 = !DILocation(line: 953, column: 2, scope: !15669)
!15716 = !DILocation(line: 953, column: 6, scope: !15669)
!15717 = !DILocation(line: 953, column: 12, scope: !15669)
!15718 = !DILocation(line: 954, column: 2, scope: !15669)
!15719 = !DILocation(line: 954, column: 6, scope: !15669)
!15720 = !DILocation(line: 954, column: 12, scope: !15669)
!15721 = !DILocation(line: 956, column: 2, scope: !15669)
!15722 = !{i32 -2139454254}
!15723 = !DILocation(line: 958, column: 66, scope: !15669)
!15724 = !DILocation(line: 958, column: 64, scope: !15669)
!15725 = !DILocation(line: 958, column: 2, scope: !15669)
!15726 = !DILocation(line: 958, column: 6, scope: !15669)
!15727 = !DILocation(line: 958, column: 14, scope: !15669)
!15728 = !DILocation(line: 959, column: 2, scope: !15669)
!15729 = !DILocation(line: 960, column: 2, scope: !15669)
!15730 = !DILocation(line: 961, column: 2, scope: !15669)
!15731 = !DILocation(line: 962, column: 1, scope: !15669)
!15732 = distinct !DISubprogram(name: "consume_skb", scope: !417, file: !417, line: 1063, type: !469, scopeLine: 1064, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!15733 = !DILocalVariable(name: "skb", arg: 1, scope: !15732, file: !417, line: 1063, type: !415)
!15734 = !DILocation(line: 1063, column: 48, scope: !15732)
!15735 = !DILocation(line: 1065, column: 19, scope: !15732)
!15736 = !DILocation(line: 1065, column: 9, scope: !15732)
!15737 = !DILocation(line: 1065, column: 2, scope: !15732)
!15738 = !DILocalVariable(name: "dev", arg: 1, scope: !9423, file: !9424, line: 271, type: !6544)
!15739 = !DILocation(line: 271, column: 62, scope: !9423)
!15740 = !DILocalVariable(name: "ptr", arg: 2, scope: !9423, file: !9424, line: 271, type: !591)
!15741 = !DILocation(line: 271, column: 73, scope: !9423)
!15742 = !DILocalVariable(name: "size", arg: 3, scope: !9423, file: !9424, line: 272, type: !1039)
!15743 = !DILocation(line: 272, column: 10, scope: !9423)
!15744 = !DILocalVariable(name: "dir", arg: 4, scope: !9423, file: !9424, line: 272, type: !8180)
!15745 = !DILocation(line: 272, column: 40, scope: !9423)
!15746 = !DILocalVariable(name: "attrs", arg: 5, scope: !9423, file: !9424, line: 272, type: !312)
!15747 = !DILocation(line: 272, column: 59, scope: !9423)
!15748 = !DILocalVariable(name: "__ret_warn_once", scope: !15749, file: !9424, line: 275, type: !32)
!15749 = distinct !DILexicalBlock(scope: !15750, file: !9424, line: 275, column: 6)
!15750 = distinct !DILexicalBlock(scope: !9423, file: !9424, line: 275, column: 6)
!15751 = !DILocation(line: 275, column: 6, scope: !15749)
!15752 = !DILocation(line: 275, column: 6, scope: !15753)
!15753 = distinct !DILexicalBlock(scope: !15749, file: !9424, line: 275, column: 6)
!15754 = !DILocation(line: 0, scope: !15753)
!15755 = !DILocation(line: 275, column: 6, scope: !15756)
!15756 = distinct !DILexicalBlock(scope: !15753, file: !9424, line: 275, column: 6)
!15757 = !DILocalVariable(name: "__ret_warn_on", scope: !15758, file: !9424, line: 275, type: !32)
!15758 = distinct !DILexicalBlock(scope: !15756, file: !9424, line: 275, column: 6)
!15759 = !DILocation(line: 275, column: 6, scope: !15758)
!15760 = !DILocation(line: 275, column: 6, scope: !15761)
!15761 = distinct !DILexicalBlock(scope: !15758, file: !9424, line: 275, column: 6)
!15762 = !DILocation(line: 275, column: 6, scope: !15763)
!15763 = distinct !DILexicalBlock(scope: !15761, file: !9424, line: 275, column: 6)
!15764 = !DILocation(line: 275, column: 6, scope: !15765)
!15765 = distinct !DILexicalBlock(scope: !15763, file: !9424, line: 275, column: 6)
!15766 = !DILocation(line: 275, column: 6, scope: !15767)
!15767 = distinct !DILexicalBlock(scope: !15763, file: !9424, line: 275, column: 6)
!15768 = !DILocation(line: 275, column: 6, scope: !15769)
!15769 = distinct !DILexicalBlock(scope: !15767, file: !9424, line: 275, column: 6)
!15770 = !DILocation(line: 275, column: 6, scope: !15771)
!15771 = distinct !DILexicalBlock(scope: !15767, file: !9424, line: 275, column: 6)
!15772 = !{i32 -2141363134, i32 -2141363105, i32 -2141363059, i32 -2141363001, i32 -2141362947, i32 -2141362893, i32 -2141362838, i32 -2141362807}
!15773 = !DILocation(line: 275, column: 6, scope: !15774)
!15774 = distinct !DILexicalBlock(scope: !15767, file: !9424, line: 275, column: 6)
!15775 = !{i32 -2141362387, i32 -2141362380, i32 -2141362328, i32 -2141362297, i32 -2141362267}
!15776 = !DILocation(line: 275, column: 6, scope: !15777)
!15777 = distinct !DILexicalBlock(scope: !15767, file: !9424, line: 275, column: 6)
!15778 = !DILocation(line: 275, column: 6, scope: !15779)
!15779 = distinct !DILexicalBlock(scope: !15763, file: !9424, line: 275, column: 6)
!15780 = !DILocation(line: 275, column: 6, scope: !15750)
!15781 = !DILocation(line: 275, column: 6, scope: !9423)
!15782 = !DILocation(line: 277, column: 3, scope: !15750)
!15783 = !DILocation(line: 278, column: 23, scope: !9423)
!15784 = !DILocation(line: 278, column: 28, scope: !9423)
!15785 = !DILocation(line: 278, column: 33, scope: !9423)
!15786 = !DILocation(line: 278, column: 2, scope: !9423)
!15787 = !DILocation(line: 279, column: 28, scope: !9423)
!15788 = !DILocation(line: 279, column: 33, scope: !9423)
!15789 = !DILocation(line: 279, column: 52, scope: !9423)
!15790 = !DILocation(line: 280, column: 4, scope: !9423)
!15791 = !DILocation(line: 280, column: 10, scope: !9423)
!15792 = !DILocation(line: 280, column: 15, scope: !9423)
!15793 = !DILocation(line: 279, column: 9, scope: !9423)
!15794 = !DILocation(line: 279, column: 2, scope: !9423)
!15795 = !DILocation(line: 281, column: 1, scope: !9423)
!15796 = distinct !DISubprogram(name: "dma_mapping_error", scope: !9424, file: !9424, line: 94, type: !15797, scopeLine: 95, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!15797 = !DISubroutineType(types: !15798)
!15798 = !{!32, !6544, !2036}
!15799 = !DILocalVariable(name: "dev", arg: 1, scope: !15796, file: !9424, line: 94, type: !6544)
!15800 = !DILocation(line: 94, column: 52, scope: !15796)
!15801 = !DILocalVariable(name: "dma_addr", arg: 2, scope: !15796, file: !9424, line: 94, type: !2036)
!15802 = !DILocation(line: 94, column: 68, scope: !15796)
!15803 = !DILocation(line: 96, column: 26, scope: !15796)
!15804 = !DILocation(line: 96, column: 31, scope: !15796)
!15805 = !DILocation(line: 96, column: 2, scope: !15796)
!15806 = !DILocation(line: 98, column: 6, scope: !15807)
!15807 = distinct !DILexicalBlock(scope: !15796, file: !9424, line: 98, column: 6)
!15808 = !DILocation(line: 98, column: 15, scope: !15807)
!15809 = !DILocation(line: 98, column: 6, scope: !15796)
!15810 = !DILocation(line: 99, column: 3, scope: !15807)
!15811 = !DILocation(line: 100, column: 2, scope: !15796)
!15812 = !DILocation(line: 101, column: 1, scope: !15796)
!15813 = distinct !DISubprogram(name: "debug_dma_map_single", scope: !9424, file: !9424, line: 87, type: !15814, scopeLine: 89, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!15814 = !DISubroutineType(types: !15815)
!15815 = !{null, !6544, !3257, !312}
!15816 = !DILocalVariable(name: "dev", arg: 1, scope: !15813, file: !9424, line: 87, type: !6544)
!15817 = !DILocation(line: 87, column: 56, scope: !15813)
!15818 = !DILocalVariable(name: "addr", arg: 2, scope: !15813, file: !9424, line: 87, type: !3257)
!15819 = !DILocation(line: 87, column: 73, scope: !15813)
!15820 = !DILocalVariable(name: "len", arg: 3, scope: !15813, file: !9424, line: 88, type: !312)
!15821 = !DILocation(line: 88, column: 17, scope: !15813)
!15822 = !DILocation(line: 90, column: 1, scope: !15813)
!15823 = distinct !DISubprogram(name: "__phys_addr_nodebug", scope: !15824, file: !15824, line: 18, type: !15825, scopeLine: 19, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!15824 = !DIFile(filename: "./arch/x86/include/asm/page_64.h", directory: "/home/lizy2001/genbc/linux")
!15825 = !DISubroutineType(types: !15826)
!15826 = !{!312, !312}
!15827 = !DILocalVariable(name: "x", arg: 1, scope: !15823, file: !15824, line: 18, type: !312)
!15828 = !DILocation(line: 18, column: 63, scope: !15823)
!15829 = !DILocalVariable(name: "y", scope: !15823, file: !15824, line: 20, type: !312)
!15830 = !DILocation(line: 20, column: 16, scope: !15823)
!15831 = !DILocation(line: 20, column: 20, scope: !15823)
!15832 = !DILocation(line: 20, column: 22, scope: !15823)
!15833 = !DILocation(line: 23, column: 6, scope: !15823)
!15834 = !DILocation(line: 23, column: 12, scope: !15823)
!15835 = !DILocation(line: 23, column: 16, scope: !15823)
!15836 = !DILocation(line: 23, column: 14, scope: !15823)
!15837 = !DILocation(line: 23, column: 11, scope: !15823)
!15838 = !DILocation(line: 23, column: 21, scope: !15823)
!15839 = !DILocation(line: 23, column: 55, scope: !15823)
!15840 = !DILocation(line: 23, column: 53, scope: !15823)
!15841 = !DILocation(line: 23, column: 8, scope: !15823)
!15842 = !DILocation(line: 23, column: 4, scope: !15823)
!15843 = !DILocation(line: 25, column: 9, scope: !15823)
!15844 = !DILocation(line: 25, column: 2, scope: !15823)
!15845 = distinct !DISubprogram(name: "debug_dma_mapping_error", scope: !9424, file: !9424, line: 83, type: !15846, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!15846 = !DISubroutineType(types: !15847)
!15847 = !{null, !6544, !2036}
!15848 = !DILocalVariable(name: "dev", arg: 1, scope: !15845, file: !9424, line: 83, type: !6544)
!15849 = !DILocation(line: 83, column: 59, scope: !15845)
!15850 = !DILocalVariable(name: "dma_addr", arg: 2, scope: !15845, file: !9424, line: 84, type: !2036)
!15851 = !DILocation(line: 84, column: 14, scope: !15845)
!15852 = !DILocation(line: 86, column: 1, scope: !15845)
!15853 = distinct !DISubprogram(name: "xm_phy_init", scope: !3, file: !3, line: 1382, type: !9434, scopeLine: 1383, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!15854 = !DILocalVariable(name: "skge", arg: 1, scope: !15853, file: !3, line: 1382, type: !9172)
!15855 = !DILocation(line: 1382, column: 43, scope: !15853)
!15856 = !DILocalVariable(name: "hw", scope: !15853, file: !3, line: 1384, type: !8794)
!15857 = !DILocation(line: 1384, column: 18, scope: !15853)
!15858 = !DILocation(line: 1384, column: 23, scope: !15853)
!15859 = !DILocation(line: 1384, column: 29, scope: !15853)
!15860 = !DILocalVariable(name: "port", scope: !15853, file: !3, line: 1385, type: !32)
!15861 = !DILocation(line: 1385, column: 6, scope: !15853)
!15862 = !DILocation(line: 1385, column: 13, scope: !15853)
!15863 = !DILocation(line: 1385, column: 19, scope: !15853)
!15864 = !DILocalVariable(name: "ctrl", scope: !15853, file: !3, line: 1386, type: !581)
!15865 = !DILocation(line: 1386, column: 6, scope: !15853)
!15866 = !DILocation(line: 1388, column: 6, scope: !15867)
!15867 = distinct !DILexicalBlock(scope: !15853, file: !3, line: 1388, column: 6)
!15868 = !DILocation(line: 1388, column: 12, scope: !15867)
!15869 = !DILocation(line: 1388, column: 20, scope: !15867)
!15870 = !DILocation(line: 1388, column: 6, scope: !15853)
!15871 = !DILocation(line: 1389, column: 7, scope: !15872)
!15872 = distinct !DILexicalBlock(scope: !15873, file: !3, line: 1389, column: 7)
!15873 = distinct !DILexicalBlock(scope: !15867, file: !3, line: 1388, column: 39)
!15874 = !DILocation(line: 1389, column: 13, scope: !15872)
!15875 = !DILocation(line: 1389, column: 25, scope: !15872)
!15876 = !DILocation(line: 1389, column: 7, scope: !15873)
!15877 = !DILocation(line: 1390, column: 9, scope: !15872)
!15878 = !DILocation(line: 1390, column: 4, scope: !15872)
!15879 = !DILocation(line: 1391, column: 7, scope: !15880)
!15880 = distinct !DILexicalBlock(scope: !15873, file: !3, line: 1391, column: 7)
!15881 = !DILocation(line: 1391, column: 13, scope: !15880)
!15882 = !DILocation(line: 1391, column: 25, scope: !15880)
!15883 = !DILocation(line: 1391, column: 7, scope: !15873)
!15884 = !DILocation(line: 1392, column: 9, scope: !15880)
!15885 = !DILocation(line: 1392, column: 4, scope: !15880)
!15886 = !DILocation(line: 1394, column: 27, scope: !15873)
!15887 = !DILocation(line: 1394, column: 33, scope: !15873)
!15888 = !DILocation(line: 1394, column: 11, scope: !15873)
!15889 = !DILocation(line: 1394, column: 8, scope: !15873)
!15890 = !DILocation(line: 1396, column: 16, scope: !15873)
!15891 = !DILocation(line: 1396, column: 20, scope: !15873)
!15892 = !DILocation(line: 1396, column: 45, scope: !15873)
!15893 = !DILocation(line: 1396, column: 3, scope: !15873)
!15894 = !DILocation(line: 1399, column: 8, scope: !15873)
!15895 = !DILocation(line: 1400, column: 2, scope: !15873)
!15896 = !DILocation(line: 1402, column: 7, scope: !15897)
!15897 = distinct !DILexicalBlock(scope: !15898, file: !3, line: 1402, column: 7)
!15898 = distinct !DILexicalBlock(scope: !15867, file: !3, line: 1400, column: 9)
!15899 = !DILocation(line: 1402, column: 13, scope: !15897)
!15900 = !DILocation(line: 1402, column: 20, scope: !15897)
!15901 = !DILocation(line: 1402, column: 7, scope: !15898)
!15902 = !DILocation(line: 1403, column: 9, scope: !15897)
!15903 = !DILocation(line: 1403, column: 4, scope: !15897)
!15904 = !DILocation(line: 1410, column: 15, scope: !15853)
!15905 = !DILocation(line: 1410, column: 19, scope: !15853)
!15906 = !DILocation(line: 1410, column: 40, scope: !15853)
!15907 = !DILocation(line: 1410, column: 2, scope: !15853)
!15908 = !DILocation(line: 1413, column: 13, scope: !15853)
!15909 = !DILocation(line: 1413, column: 19, scope: !15853)
!15910 = !DILocation(line: 1413, column: 31, scope: !15853)
!15911 = !DILocation(line: 1413, column: 39, scope: !15853)
!15912 = !DILocation(line: 1413, column: 2, scope: !15853)
!15913 = !DILocation(line: 1414, column: 1, scope: !15853)
!15914 = !DILocalVariable(name: "skge", arg: 1, scope: !9433, file: !3, line: 1276, type: !9172)
!15915 = !DILocation(line: 1276, column: 45, scope: !9433)
!15916 = !DILocalVariable(name: "hw", scope: !9433, file: !3, line: 1278, type: !8794)
!15917 = !DILocation(line: 1278, column: 18, scope: !9433)
!15918 = !DILocation(line: 1278, column: 23, scope: !9433)
!15919 = !DILocation(line: 1278, column: 29, scope: !9433)
!15920 = !DILocalVariable(name: "port", scope: !9433, file: !3, line: 1279, type: !32)
!15921 = !DILocation(line: 1279, column: 6, scope: !9433)
!15922 = !DILocation(line: 1279, column: 13, scope: !9433)
!15923 = !DILocation(line: 1279, column: 19, scope: !9433)
!15924 = !DILocalVariable(name: "i", scope: !9433, file: !3, line: 1280, type: !32)
!15925 = !DILocation(line: 1280, column: 6, scope: !9433)
!15926 = !DILocalVariable(name: "id1", scope: !9433, file: !3, line: 1281, type: !581)
!15927 = !DILocation(line: 1281, column: 6, scope: !9433)
!15928 = !DILocalVariable(name: "r", scope: !9433, file: !3, line: 1281, type: !581)
!15929 = !DILocation(line: 1281, column: 11, scope: !9433)
!15930 = !DILocalVariable(name: "ext", scope: !9433, file: !3, line: 1281, type: !581)
!15931 = !DILocation(line: 1281, column: 14, scope: !9433)
!15932 = !DILocalVariable(name: "ctl", scope: !9433, file: !3, line: 1281, type: !581)
!15933 = !DILocation(line: 1281, column: 19, scope: !9433)
!15934 = !DILocation(line: 1298, column: 20, scope: !9433)
!15935 = !DILocation(line: 1298, column: 24, scope: !9433)
!15936 = !DILocation(line: 1298, column: 8, scope: !9433)
!15937 = !DILocation(line: 1298, column: 6, scope: !9433)
!15938 = !DILocation(line: 1301, column: 16, scope: !9433)
!15939 = !DILocation(line: 1301, column: 20, scope: !9433)
!15940 = !DILocation(line: 1301, column: 6, scope: !9433)
!15941 = !DILocation(line: 1301, column: 4, scope: !9433)
!15942 = !DILocation(line: 1302, column: 4, scope: !9433)
!15943 = !DILocation(line: 1303, column: 13, scope: !9433)
!15944 = !DILocation(line: 1303, column: 17, scope: !9433)
!15945 = !DILocation(line: 1303, column: 35, scope: !9433)
!15946 = !DILocation(line: 1303, column: 2, scope: !9433)
!15947 = !DILocation(line: 1305, column: 10, scope: !9433)
!15948 = !DILocation(line: 1305, column: 2, scope: !9433)
!15949 = !DILocation(line: 1311, column: 10, scope: !15950)
!15950 = distinct !DILexicalBlock(scope: !15951, file: !3, line: 1311, column: 3)
!15951 = distinct !DILexicalBlock(scope: !9433, file: !3, line: 1305, column: 15)
!15952 = !DILocation(line: 1311, column: 8, scope: !15950)
!15953 = !DILocation(line: 1311, column: 15, scope: !15954)
!15954 = distinct !DILexicalBlock(scope: !15950, file: !3, line: 1311, column: 3)
!15955 = !DILocation(line: 1311, column: 17, scope: !15954)
!15956 = !DILocation(line: 1311, column: 3, scope: !15950)
!15957 = !DILocation(line: 1312, column: 17, scope: !15954)
!15958 = !DILocation(line: 1312, column: 21, scope: !15954)
!15959 = !DILocation(line: 1313, column: 17, scope: !15954)
!15960 = !DILocation(line: 1313, column: 10, scope: !15954)
!15961 = !DILocation(line: 1313, column: 20, scope: !15954)
!15962 = !DILocation(line: 1313, column: 32, scope: !15954)
!15963 = !DILocation(line: 1313, column: 25, scope: !15954)
!15964 = !DILocation(line: 1313, column: 35, scope: !15954)
!15965 = !DILocation(line: 1312, column: 4, scope: !15954)
!15966 = !DILocation(line: 1311, column: 40, scope: !15954)
!15967 = !DILocation(line: 1311, column: 3, scope: !15954)
!15968 = distinct !{!15968, !15956, !15969}
!15969 = !DILocation(line: 1313, column: 38, scope: !15950)
!15970 = !DILocation(line: 1315, column: 3, scope: !15951)
!15971 = !DILocation(line: 1321, column: 10, scope: !15972)
!15972 = distinct !DILexicalBlock(scope: !15951, file: !3, line: 1321, column: 3)
!15973 = !DILocation(line: 1321, column: 8, scope: !15972)
!15974 = !DILocation(line: 1321, column: 15, scope: !15975)
!15975 = distinct !DILexicalBlock(scope: !15972, file: !3, line: 1321, column: 3)
!15976 = !DILocation(line: 1321, column: 17, scope: !15975)
!15977 = !DILocation(line: 1321, column: 3, scope: !15972)
!15978 = !DILocation(line: 1322, column: 17, scope: !15975)
!15979 = !DILocation(line: 1322, column: 21, scope: !15975)
!15980 = !DILocation(line: 1323, column: 17, scope: !15975)
!15981 = !DILocation(line: 1323, column: 10, scope: !15975)
!15982 = !DILocation(line: 1323, column: 20, scope: !15975)
!15983 = !DILocation(line: 1323, column: 32, scope: !15975)
!15984 = !DILocation(line: 1323, column: 25, scope: !15975)
!15985 = !DILocation(line: 1323, column: 35, scope: !15975)
!15986 = !DILocation(line: 1322, column: 4, scope: !15975)
!15987 = !DILocation(line: 1321, column: 40, scope: !15975)
!15988 = !DILocation(line: 1321, column: 3, scope: !15975)
!15989 = distinct !{!15989, !15977, !15990}
!15990 = !DILocation(line: 1323, column: 38, scope: !15972)
!15991 = !DILocation(line: 1324, column: 3, scope: !15951)
!15992 = !DILocation(line: 1331, column: 18, scope: !9433)
!15993 = !DILocation(line: 1331, column: 22, scope: !9433)
!15994 = !DILocation(line: 1331, column: 6, scope: !9433)
!15995 = !DILocation(line: 1331, column: 4, scope: !9433)
!15996 = !DILocation(line: 1332, column: 4, scope: !9433)
!15997 = !DILocation(line: 1333, column: 15, scope: !9433)
!15998 = !DILocation(line: 1333, column: 19, scope: !9433)
!15999 = !DILocation(line: 1333, column: 44, scope: !9433)
!16000 = !DILocation(line: 1333, column: 2, scope: !9433)
!16001 = !DILocation(line: 1336, column: 12, scope: !9433)
!16002 = !DILocation(line: 1336, column: 16, scope: !9433)
!16003 = !DILocation(line: 1336, column: 2, scope: !9433)
!16004 = !DILocation(line: 1338, column: 6, scope: !9433)
!16005 = !DILocation(line: 1339, column: 6, scope: !9433)
!16006 = !DILocation(line: 1341, column: 6, scope: !16007)
!16007 = distinct !DILexicalBlock(scope: !9433, file: !3, line: 1341, column: 6)
!16008 = !DILocation(line: 1341, column: 12, scope: !16007)
!16009 = !DILocation(line: 1341, column: 20, scope: !16007)
!16010 = !DILocation(line: 1341, column: 6, scope: !9433)
!16011 = !DILocalVariable(name: "adv", scope: !16012, file: !3, line: 1347, type: !581)
!16012 = distinct !DILexicalBlock(scope: !16007, file: !3, line: 1341, column: 39)
!16013 = !DILocation(line: 1347, column: 7, scope: !16012)
!16014 = !DILocation(line: 1348, column: 7, scope: !16015)
!16015 = distinct !DILexicalBlock(scope: !16012, file: !3, line: 1348, column: 7)
!16016 = !DILocation(line: 1348, column: 13, scope: !16015)
!16017 = !DILocation(line: 1348, column: 25, scope: !16015)
!16018 = !DILocation(line: 1348, column: 7, scope: !16012)
!16019 = !DILocation(line: 1349, column: 8, scope: !16015)
!16020 = !DILocation(line: 1349, column: 4, scope: !16015)
!16021 = !DILocation(line: 1350, column: 7, scope: !16022)
!16022 = distinct !DILexicalBlock(scope: !16012, file: !3, line: 1350, column: 7)
!16023 = !DILocation(line: 1350, column: 13, scope: !16022)
!16024 = !DILocation(line: 1350, column: 25, scope: !16022)
!16025 = !DILocation(line: 1350, column: 7, scope: !16012)
!16026 = !DILocation(line: 1351, column: 8, scope: !16022)
!16027 = !DILocation(line: 1351, column: 4, scope: !16022)
!16028 = !DILocation(line: 1352, column: 16, scope: !16012)
!16029 = !DILocation(line: 1352, column: 20, scope: !16012)
!16030 = !DILocation(line: 1352, column: 47, scope: !16012)
!16031 = !DILocation(line: 1352, column: 3, scope: !16012)
!16032 = !DILocation(line: 1354, column: 7, scope: !16012)
!16033 = !DILocation(line: 1355, column: 2, scope: !16012)
!16034 = !DILocation(line: 1356, column: 7, scope: !16035)
!16035 = distinct !DILexicalBlock(scope: !16036, file: !3, line: 1356, column: 7)
!16036 = distinct !DILexicalBlock(scope: !16007, file: !3, line: 1355, column: 9)
!16037 = !DILocation(line: 1356, column: 13, scope: !16035)
!16038 = !DILocation(line: 1356, column: 20, scope: !16035)
!16039 = !DILocation(line: 1356, column: 7, scope: !16036)
!16040 = !DILocation(line: 1357, column: 8, scope: !16035)
!16041 = !DILocation(line: 1357, column: 4, scope: !16035)
!16042 = !DILocation(line: 1359, column: 16, scope: !16036)
!16043 = !DILocation(line: 1359, column: 20, scope: !16036)
!16044 = !DILocation(line: 1359, column: 3, scope: !16036)
!16045 = !DILocation(line: 1363, column: 15, scope: !9433)
!16046 = !DILocation(line: 1363, column: 19, scope: !9433)
!16047 = !DILocation(line: 1364, column: 22, scope: !9433)
!16048 = !DILocation(line: 1364, column: 28, scope: !9433)
!16049 = !DILocation(line: 1364, column: 8, scope: !9433)
!16050 = !DILocation(line: 1364, column: 42, scope: !9433)
!16051 = !DILocation(line: 1363, column: 2, scope: !9433)
!16052 = !DILocation(line: 1367, column: 6, scope: !16053)
!16053 = distinct !DILexicalBlock(scope: !9433, file: !3, line: 1367, column: 6)
!16054 = !DILocation(line: 1367, column: 10, scope: !16053)
!16055 = !DILocation(line: 1367, column: 14, scope: !16053)
!16056 = !DILocation(line: 1367, column: 21, scope: !16053)
!16057 = !DILocation(line: 1367, column: 25, scope: !16053)
!16058 = !DILocation(line: 1367, column: 6, scope: !9433)
!16059 = !DILocation(line: 1368, column: 16, scope: !16060)
!16060 = distinct !DILexicalBlock(scope: !16053, file: !3, line: 1367, column: 41)
!16061 = !DILocation(line: 1368, column: 20, scope: !16060)
!16062 = !DILocation(line: 1368, column: 3, scope: !16060)
!16063 = !DILocation(line: 1371, column: 7, scope: !16060)
!16064 = !DILocation(line: 1373, column: 2, scope: !16060)
!16065 = !DILocation(line: 1375, column: 15, scope: !9433)
!16066 = !DILocation(line: 1375, column: 19, scope: !9433)
!16067 = !DILocation(line: 1375, column: 46, scope: !9433)
!16068 = !DILocation(line: 1375, column: 2, scope: !9433)
!16069 = !DILocation(line: 1376, column: 15, scope: !9433)
!16070 = !DILocation(line: 1376, column: 19, scope: !9433)
!16071 = !DILocation(line: 1376, column: 40, scope: !9433)
!16072 = !DILocation(line: 1376, column: 2, scope: !9433)
!16073 = !DILocation(line: 1379, column: 15, scope: !9433)
!16074 = !DILocation(line: 1379, column: 19, scope: !9433)
!16075 = !DILocation(line: 1379, column: 2, scope: !9433)
!16076 = !DILocation(line: 1380, column: 1, scope: !9433)
!16077 = distinct !DISubprogram(name: "xm_outaddr", scope: !7053, file: !7053, line: 2544, type: !12770, scopeLine: 2546, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!16078 = !DILocalVariable(name: "hw", arg: 1, scope: !16077, file: !7053, line: 2544, type: !9407)
!16079 = !DILocation(line: 2544, column: 53, scope: !16077)
!16080 = !DILocalVariable(name: "port", arg: 2, scope: !16077, file: !7053, line: 2544, type: !32)
!16081 = !DILocation(line: 2544, column: 61, scope: !16077)
!16082 = !DILocalVariable(name: "reg", arg: 3, scope: !16077, file: !7053, line: 2544, type: !32)
!16083 = !DILocation(line: 2544, column: 71, scope: !16077)
!16084 = !DILocalVariable(name: "addr", arg: 4, scope: !16077, file: !7053, line: 2545, type: !5859)
!16085 = !DILocation(line: 2545, column: 18, scope: !16077)
!16086 = !DILocation(line: 2547, column: 13, scope: !16077)
!16087 = !DILocation(line: 2547, column: 17, scope: !16077)
!16088 = !DILocation(line: 2547, column: 23, scope: !16077)
!16089 = !DILocation(line: 2547, column: 35, scope: !16077)
!16090 = !DILocation(line: 2547, column: 30, scope: !16077)
!16091 = !DILocation(line: 2547, column: 51, scope: !16077)
!16092 = !DILocation(line: 2547, column: 46, scope: !16077)
!16093 = !DILocation(line: 2547, column: 59, scope: !16077)
!16094 = !DILocation(line: 2547, column: 43, scope: !16077)
!16095 = !DILocation(line: 2547, column: 2, scope: !16077)
!16096 = !DILocation(line: 2548, column: 13, scope: !16077)
!16097 = !DILocation(line: 2548, column: 17, scope: !16077)
!16098 = !DILocation(line: 2548, column: 23, scope: !16077)
!16099 = !DILocation(line: 2548, column: 26, scope: !16077)
!16100 = !DILocation(line: 2548, column: 35, scope: !16077)
!16101 = !DILocation(line: 2548, column: 30, scope: !16077)
!16102 = !DILocation(line: 2548, column: 51, scope: !16077)
!16103 = !DILocation(line: 2548, column: 46, scope: !16077)
!16104 = !DILocation(line: 2548, column: 59, scope: !16077)
!16105 = !DILocation(line: 2548, column: 43, scope: !16077)
!16106 = !DILocation(line: 2548, column: 2, scope: !16077)
!16107 = !DILocation(line: 2549, column: 13, scope: !16077)
!16108 = !DILocation(line: 2549, column: 17, scope: !16077)
!16109 = !DILocation(line: 2549, column: 23, scope: !16077)
!16110 = !DILocation(line: 2549, column: 26, scope: !16077)
!16111 = !DILocation(line: 2549, column: 35, scope: !16077)
!16112 = !DILocation(line: 2549, column: 30, scope: !16077)
!16113 = !DILocation(line: 2549, column: 51, scope: !16077)
!16114 = !DILocation(line: 2549, column: 46, scope: !16077)
!16115 = !DILocation(line: 2549, column: 59, scope: !16077)
!16116 = !DILocation(line: 2549, column: 43, scope: !16077)
!16117 = !DILocation(line: 2549, column: 2, scope: !16077)
!16118 = !DILocation(line: 2550, column: 1, scope: !16077)
!16119 = distinct !DISubprogram(name: "gma_set_addr", scope: !7053, file: !7053, line: 2571, type: !16120, scopeLine: 2573, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!16120 = !DISubroutineType(types: !16121)
!16121 = !{null, !8794, !32, !32, !5859}
!16122 = !DILocalVariable(name: "hw", arg: 1, scope: !16119, file: !7053, line: 2571, type: !8794)
!16123 = !DILocation(line: 2571, column: 49, scope: !16119)
!16124 = !DILocalVariable(name: "port", arg: 2, scope: !16119, file: !7053, line: 2571, type: !32)
!16125 = !DILocation(line: 2571, column: 57, scope: !16119)
!16126 = !DILocalVariable(name: "reg", arg: 3, scope: !16119, file: !7053, line: 2571, type: !32)
!16127 = !DILocation(line: 2571, column: 67, scope: !16119)
!16128 = !DILocalVariable(name: "addr", arg: 4, scope: !16119, file: !7053, line: 2572, type: !5859)
!16129 = !DILocation(line: 2572, column: 19, scope: !16119)
!16130 = !DILocation(line: 2574, column: 14, scope: !16119)
!16131 = !DILocation(line: 2574, column: 18, scope: !16119)
!16132 = !DILocation(line: 2574, column: 24, scope: !16119)
!16133 = !DILocation(line: 2574, column: 36, scope: !16119)
!16134 = !DILocation(line: 2574, column: 30, scope: !16119)
!16135 = !DILocation(line: 2574, column: 53, scope: !16119)
!16136 = !DILocation(line: 2574, column: 47, scope: !16119)
!16137 = !DILocation(line: 2574, column: 61, scope: !16119)
!16138 = !DILocation(line: 2574, column: 44, scope: !16119)
!16139 = !DILocation(line: 2574, column: 2, scope: !16119)
!16140 = !DILocation(line: 2575, column: 14, scope: !16119)
!16141 = !DILocation(line: 2575, column: 18, scope: !16119)
!16142 = !DILocation(line: 2575, column: 24, scope: !16119)
!16143 = !DILocation(line: 2575, column: 27, scope: !16119)
!16144 = !DILocation(line: 2575, column: 36, scope: !16119)
!16145 = !DILocation(line: 2575, column: 30, scope: !16119)
!16146 = !DILocation(line: 2575, column: 53, scope: !16119)
!16147 = !DILocation(line: 2575, column: 47, scope: !16119)
!16148 = !DILocation(line: 2575, column: 61, scope: !16119)
!16149 = !DILocation(line: 2575, column: 44, scope: !16119)
!16150 = !DILocation(line: 2575, column: 2, scope: !16119)
!16151 = !DILocation(line: 2576, column: 14, scope: !16119)
!16152 = !DILocation(line: 2576, column: 18, scope: !16119)
!16153 = !DILocation(line: 2576, column: 24, scope: !16119)
!16154 = !DILocation(line: 2576, column: 27, scope: !16119)
!16155 = !DILocation(line: 2576, column: 36, scope: !16119)
!16156 = !DILocation(line: 2576, column: 30, scope: !16119)
!16157 = !DILocation(line: 2576, column: 53, scope: !16119)
!16158 = !DILocation(line: 2576, column: 47, scope: !16119)
!16159 = !DILocation(line: 2576, column: 61, scope: !16119)
!16160 = !DILocation(line: 2576, column: 44, scope: !16119)
!16161 = !DILocation(line: 2576, column: 2, scope: !16119)
!16162 = !DILocation(line: 2577, column: 1, scope: !16119)
!16163 = distinct !DISubprogram(name: "is_yukon_lite_a0", scope: !3, file: !3, line: 2042, type: !10307, scopeLine: 2043, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!16164 = !DILocalVariable(name: "hw", arg: 1, scope: !16163, file: !3, line: 2042, type: !8794)
!16165 = !DILocation(line: 2042, column: 45, scope: !16163)
!16166 = !DILocalVariable(name: "reg", scope: !16163, file: !3, line: 2044, type: !987)
!16167 = !DILocation(line: 2044, column: 6, scope: !16163)
!16168 = !DILocalVariable(name: "ret", scope: !16163, file: !3, line: 2045, type: !32)
!16169 = !DILocation(line: 2045, column: 6, scope: !16163)
!16170 = !DILocation(line: 2047, column: 6, scope: !16171)
!16171 = distinct !DILexicalBlock(scope: !16163, file: !3, line: 2047, column: 6)
!16172 = !DILocation(line: 2047, column: 10, scope: !16171)
!16173 = !DILocation(line: 2047, column: 18, scope: !16171)
!16174 = !DILocation(line: 2047, column: 6, scope: !16163)
!16175 = !DILocation(line: 2048, column: 3, scope: !16171)
!16176 = !DILocation(line: 2050, column: 20, scope: !16163)
!16177 = !DILocation(line: 2050, column: 8, scope: !16163)
!16178 = !DILocation(line: 2050, column: 6, scope: !16163)
!16179 = !DILocation(line: 2051, column: 14, scope: !16163)
!16180 = !DILocation(line: 2051, column: 2, scope: !16163)
!16181 = !DILocation(line: 2052, column: 20, scope: !16163)
!16182 = !DILocation(line: 2052, column: 9, scope: !16163)
!16183 = !DILocation(line: 2052, column: 36, scope: !16163)
!16184 = !DILocation(line: 2052, column: 6, scope: !16163)
!16185 = !DILocation(line: 2053, column: 15, scope: !16163)
!16186 = !DILocation(line: 2053, column: 27, scope: !16163)
!16187 = !DILocation(line: 2053, column: 2, scope: !16163)
!16188 = !DILocation(line: 2054, column: 9, scope: !16163)
!16189 = !DILocation(line: 2054, column: 2, scope: !16163)
!16190 = !DILocation(line: 2055, column: 1, scope: !16163)
!16191 = distinct !DISubprogram(name: "clear_bit", scope: !12033, file: !12033, line: 39, type: !12034, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!16192 = !DILocalVariable(name: "nr", arg: 1, scope: !16193, file: !11034, line: 72, type: !998)
!16193 = distinct !DISubprogram(name: "arch_clear_bit", scope: !11034, file: !11034, line: 72, type: !12034, scopeLine: 73, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!16194 = !DILocation(line: 72, column: 21, scope: !16193, inlinedAt: !16195)
!16195 = distinct !DILocation(line: 42, column: 2, scope: !16191)
!16196 = !DILocalVariable(name: "addr", arg: 2, scope: !16193, file: !11034, line: 72, type: !12036)
!16197 = !DILocation(line: 72, column: 49, scope: !16193, inlinedAt: !16195)
!16198 = !DILocation(line: 84, column: 74, scope: !12044, inlinedAt: !16199)
!16199 = distinct !DILocation(line: 41, column: 2, scope: !16191)
!16200 = !DILocation(line: 84, column: 84, scope: !12044, inlinedAt: !16199)
!16201 = !DILocalVariable(name: "nr", arg: 1, scope: !16191, file: !12033, line: 39, type: !998)
!16202 = !DILocation(line: 39, column: 35, scope: !16191)
!16203 = !DILocalVariable(name: "addr", arg: 2, scope: !16191, file: !12033, line: 39, type: !12036)
!16204 = !DILocation(line: 39, column: 63, scope: !16191)
!16205 = !DILocation(line: 41, column: 26, scope: !16191)
!16206 = !DILocation(line: 41, column: 33, scope: !16191)
!16207 = !DILocation(line: 41, column: 31, scope: !16191)
!16208 = !DILocation(line: 86, column: 20, scope: !12044, inlinedAt: !16199)
!16209 = !DILocation(line: 86, column: 23, scope: !12044, inlinedAt: !16199)
!16210 = !DILocation(line: 86, column: 2, scope: !12044, inlinedAt: !16199)
!16211 = !DILocation(line: 87, column: 2, scope: !12044, inlinedAt: !16199)
!16212 = !DILocation(line: 42, column: 17, scope: !16191)
!16213 = !DILocation(line: 42, column: 21, scope: !16191)
!16214 = !DILocation(line: 74, column: 27, scope: !16215, inlinedAt: !16195)
!16215 = distinct !DILexicalBlock(scope: !16193, file: !11034, line: 74, column: 6)
!16216 = !DILocation(line: 74, column: 6, scope: !16215, inlinedAt: !16195)
!16217 = !DILocation(line: 74, column: 6, scope: !16193, inlinedAt: !16195)
!16218 = !DILocation(line: 76, column: 6, scope: !16219, inlinedAt: !16195)
!16219 = distinct !DILexicalBlock(scope: !16215, file: !11034, line: 74, column: 32)
!16220 = !DILocation(line: 77, column: 13, scope: !16219, inlinedAt: !16195)
!16221 = !DILocation(line: 77, column: 12, scope: !16219, inlinedAt: !16195)
!16222 = !DILocation(line: 75, column: 3, scope: !16219, inlinedAt: !16195)
!16223 = !{i32 -2147039570}
!16224 = !DILocation(line: 78, column: 2, scope: !16219, inlinedAt: !16195)
!16225 = !DILocation(line: 80, column: 8, scope: !16226, inlinedAt: !16195)
!16226 = distinct !DILexicalBlock(scope: !16215, file: !11034, line: 78, column: 9)
!16227 = !DILocation(line: 80, column: 32, scope: !16226, inlinedAt: !16195)
!16228 = !DILocation(line: 79, column: 3, scope: !16226, inlinedAt: !16195)
!16229 = !{i32 -2147039438}
!16230 = !DILocation(line: 43, column: 1, scope: !16191)
!16231 = distinct !DISubprogram(name: "dma_unmap_single_attrs", scope: !9424, file: !9424, line: 283, type: !16232, scopeLine: 285, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!16232 = !DISubroutineType(types: !16233)
!16233 = !{null, !6544, !2036, !1039, !8180, !312}
!16234 = !DILocalVariable(name: "dev", arg: 1, scope: !16231, file: !9424, line: 283, type: !6544)
!16235 = !DILocation(line: 283, column: 58, scope: !16231)
!16236 = !DILocalVariable(name: "addr", arg: 2, scope: !16231, file: !9424, line: 283, type: !2036)
!16237 = !DILocation(line: 283, column: 74, scope: !16231)
!16238 = !DILocalVariable(name: "size", arg: 3, scope: !16231, file: !9424, line: 284, type: !1039)
!16239 = !DILocation(line: 284, column: 10, scope: !16231)
!16240 = !DILocalVariable(name: "dir", arg: 4, scope: !16231, file: !9424, line: 284, type: !8180)
!16241 = !DILocation(line: 284, column: 40, scope: !16231)
!16242 = !DILocalVariable(name: "attrs", arg: 5, scope: !16231, file: !9424, line: 284, type: !312)
!16243 = !DILocation(line: 284, column: 59, scope: !16231)
!16244 = !DILocation(line: 286, column: 30, scope: !16231)
!16245 = !DILocation(line: 286, column: 35, scope: !16231)
!16246 = !DILocation(line: 286, column: 41, scope: !16231)
!16247 = !DILocation(line: 286, column: 47, scope: !16231)
!16248 = !DILocation(line: 286, column: 52, scope: !16231)
!16249 = !DILocation(line: 286, column: 9, scope: !16231)
!16250 = !DILocation(line: 286, column: 2, scope: !16231)
!16251 = distinct !DISubprogram(name: "netif_tx_disable", scope: !31, file: !31, line: 4309, type: !406, scopeLine: 4310, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!16252 = !DILocation(line: 3324, column: 70, scope: !12019, inlinedAt: !16253)
!16253 = distinct !DILocation(line: 4320, column: 3, scope: !16254)
!16254 = distinct !DILexicalBlock(scope: !16255, file: !31, line: 4316, column: 43)
!16255 = distinct !DILexicalBlock(scope: !16256, file: !31, line: 4316, column: 2)
!16256 = distinct !DILexicalBlock(scope: !16251, file: !31, line: 4316, column: 2)
!16257 = !DILocalVariable(name: "dev", arg: 1, scope: !16251, file: !31, line: 4309, type: !290)
!16258 = !DILocation(line: 4309, column: 56, scope: !16251)
!16259 = !DILocalVariable(name: "i", scope: !16251, file: !31, line: 4311, type: !7)
!16260 = !DILocation(line: 4311, column: 15, scope: !16251)
!16261 = !DILocalVariable(name: "cpu", scope: !16251, file: !31, line: 4312, type: !32)
!16262 = !DILocation(line: 4312, column: 6, scope: !16251)
!16263 = !DILocation(line: 4314, column: 2, scope: !16251)
!16264 = !DILocation(line: 4315, column: 6, scope: !16251)
!16265 = !DILocation(line: 4316, column: 9, scope: !16256)
!16266 = !DILocation(line: 4316, column: 7, scope: !16256)
!16267 = !DILocation(line: 4316, column: 14, scope: !16255)
!16268 = !DILocation(line: 4316, column: 18, scope: !16255)
!16269 = !DILocation(line: 4316, column: 23, scope: !16255)
!16270 = !DILocation(line: 4316, column: 16, scope: !16255)
!16271 = !DILocation(line: 4316, column: 2, scope: !16256)
!16272 = !DILocalVariable(name: "txq", scope: !16254, file: !31, line: 4317, type: !6437)
!16273 = !DILocation(line: 4317, column: 24, scope: !16254)
!16274 = !DILocation(line: 4317, column: 50, scope: !16254)
!16275 = !DILocation(line: 4317, column: 55, scope: !16254)
!16276 = !DILocation(line: 4317, column: 30, scope: !16254)
!16277 = !DILocation(line: 4319, column: 19, scope: !16254)
!16278 = !DILocation(line: 4319, column: 24, scope: !16254)
!16279 = !DILocation(line: 4319, column: 3, scope: !16254)
!16280 = !DILocation(line: 4320, column: 23, scope: !16254)
!16281 = !DILocation(line: 3326, column: 35, scope: !12019, inlinedAt: !16253)
!16282 = !DILocation(line: 3326, column: 46, scope: !12019, inlinedAt: !16253)
!16283 = !DILocation(line: 3326, column: 2, scope: !12019, inlinedAt: !16253)
!16284 = !DILocation(line: 4321, column: 21, scope: !16254)
!16285 = !DILocation(line: 4321, column: 3, scope: !16254)
!16286 = !DILocation(line: 4322, column: 2, scope: !16254)
!16287 = !DILocation(line: 4316, column: 39, scope: !16255)
!16288 = !DILocation(line: 4316, column: 2, scope: !16255)
!16289 = distinct !{!16289, !16271, !16290}
!16290 = !DILocation(line: 4322, column: 2, scope: !16256)
!16291 = !DILocation(line: 4323, column: 2, scope: !16251)
!16292 = !DILocation(line: 4324, column: 1, scope: !16251)
!16293 = distinct !DISubprogram(name: "genesis_stop", scope: !3, file: !3, line: 1684, type: !9434, scopeLine: 1685, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!16294 = !DILocalVariable(name: "skge", arg: 1, scope: !16293, file: !3, line: 1684, type: !9172)
!16295 = !DILocation(line: 1684, column: 44, scope: !16293)
!16296 = !DILocalVariable(name: "hw", scope: !16293, file: !3, line: 1686, type: !8794)
!16297 = !DILocation(line: 1686, column: 18, scope: !16293)
!16298 = !DILocation(line: 1686, column: 23, scope: !16293)
!16299 = !DILocation(line: 1686, column: 29, scope: !16293)
!16300 = !DILocalVariable(name: "port", scope: !16293, file: !3, line: 1687, type: !32)
!16301 = !DILocation(line: 1687, column: 6, scope: !16293)
!16302 = !DILocation(line: 1687, column: 13, scope: !16293)
!16303 = !DILocation(line: 1687, column: 19, scope: !16293)
!16304 = !DILocalVariable(name: "retries", scope: !16293, file: !3, line: 1688, type: !7)
!16305 = !DILocation(line: 1688, column: 11, scope: !16293)
!16306 = !DILocalVariable(name: "cmd", scope: !16293, file: !3, line: 1689, type: !581)
!16307 = !DILocation(line: 1689, column: 6, scope: !16293)
!16308 = !DILocation(line: 1692, column: 18, scope: !16293)
!16309 = !DILocation(line: 1692, column: 22, scope: !16293)
!16310 = !DILocation(line: 1692, column: 8, scope: !16293)
!16311 = !DILocation(line: 1692, column: 6, scope: !16293)
!16312 = !DILocation(line: 1693, column: 6, scope: !16293)
!16313 = !DILocation(line: 1694, column: 13, scope: !16293)
!16314 = !DILocation(line: 1694, column: 17, scope: !16293)
!16315 = !DILocation(line: 1694, column: 35, scope: !16293)
!16316 = !DILocation(line: 1694, column: 2, scope: !16293)
!16317 = !DILocation(line: 1696, column: 16, scope: !16293)
!16318 = !DILocation(line: 1696, column: 20, scope: !16293)
!16319 = !DILocation(line: 1696, column: 2, scope: !16293)
!16320 = !DILocation(line: 1699, column: 15, scope: !16293)
!16321 = !DILocation(line: 1700, column: 8, scope: !16293)
!16322 = !DILocation(line: 1700, column: 13, scope: !16293)
!16323 = !DILocation(line: 1699, column: 2, scope: !16293)
!16324 = !DILocation(line: 1703, column: 15, scope: !16293)
!16325 = !DILocation(line: 1703, column: 19, scope: !16293)
!16326 = !DILocation(line: 1703, column: 2, scope: !16293)
!16327 = !DILocation(line: 1704, column: 2, scope: !16293)
!16328 = !DILocation(line: 1705, column: 16, scope: !16329)
!16329 = distinct !DILexicalBlock(scope: !16293, file: !3, line: 1704, column: 5)
!16330 = !DILocation(line: 1705, column: 20, scope: !16329)
!16331 = !DILocation(line: 1705, column: 3, scope: !16329)
!16332 = !DILocation(line: 1706, column: 21, scope: !16333)
!16333 = distinct !DILexicalBlock(scope: !16329, file: !3, line: 1706, column: 7)
!16334 = !DILocation(line: 1706, column: 25, scope: !16333)
!16335 = !DILocation(line: 1706, column: 9, scope: !16333)
!16336 = !DILocation(line: 1706, column: 53, scope: !16333)
!16337 = !DILocation(line: 1706, column: 7, scope: !16329)
!16338 = !DILocation(line: 1707, column: 4, scope: !16333)
!16339 = !DILocation(line: 1708, column: 2, scope: !16329)
!16340 = !DILocation(line: 1708, column: 11, scope: !16293)
!16341 = !DILocation(line: 1708, column: 21, scope: !16293)
!16342 = distinct !{!16342, !16327, !16343}
!16343 = !DILocation(line: 1708, column: 24, scope: !16293)
!16344 = !DILocation(line: 1711, column: 6, scope: !16345)
!16345 = distinct !DILexicalBlock(scope: !16293, file: !3, line: 1711, column: 6)
!16346 = !DILocation(line: 1711, column: 10, scope: !16345)
!16347 = !DILocation(line: 1711, column: 19, scope: !16345)
!16348 = !DILocation(line: 1711, column: 6, scope: !16293)
!16349 = !DILocalVariable(name: "reg", scope: !16350, file: !3, line: 1712, type: !987)
!16350 = distinct !DILexicalBlock(scope: !16345, file: !3, line: 1711, column: 35)
!16351 = !DILocation(line: 1712, column: 7, scope: !16350)
!16352 = !DILocation(line: 1712, column: 25, scope: !16350)
!16353 = !DILocation(line: 1712, column: 13, scope: !16350)
!16354 = !DILocation(line: 1713, column: 7, scope: !16355)
!16355 = distinct !DILexicalBlock(scope: !16350, file: !3, line: 1713, column: 7)
!16356 = !DILocation(line: 1713, column: 12, scope: !16355)
!16357 = !DILocation(line: 1713, column: 7, scope: !16350)
!16358 = !DILocation(line: 1714, column: 8, scope: !16359)
!16359 = distinct !DILexicalBlock(scope: !16355, file: !3, line: 1713, column: 18)
!16360 = !DILocation(line: 1715, column: 8, scope: !16359)
!16361 = !DILocation(line: 1716, column: 3, scope: !16359)
!16362 = !DILocation(line: 1717, column: 8, scope: !16363)
!16363 = distinct !DILexicalBlock(scope: !16355, file: !3, line: 1716, column: 10)
!16364 = !DILocation(line: 1718, column: 8, scope: !16363)
!16365 = !DILocation(line: 1720, column: 16, scope: !16350)
!16366 = !DILocation(line: 1720, column: 30, scope: !16350)
!16367 = !DILocation(line: 1720, column: 3, scope: !16350)
!16368 = !DILocation(line: 1721, column: 15, scope: !16350)
!16369 = !DILocation(line: 1721, column: 3, scope: !16350)
!16370 = !DILocation(line: 1722, column: 2, scope: !16350)
!16371 = !DILocation(line: 1724, column: 13, scope: !16293)
!16372 = !DILocation(line: 1724, column: 17, scope: !16293)
!16373 = !DILocation(line: 1725, column: 14, scope: !16293)
!16374 = !DILocation(line: 1725, column: 18, scope: !16293)
!16375 = !DILocation(line: 1725, column: 4, scope: !16293)
!16376 = !DILocation(line: 1726, column: 4, scope: !16293)
!16377 = !DILocation(line: 1724, column: 2, scope: !16293)
!16378 = !DILocation(line: 1728, column: 12, scope: !16293)
!16379 = !DILocation(line: 1728, column: 16, scope: !16293)
!16380 = !DILocation(line: 1728, column: 2, scope: !16293)
!16381 = !DILocation(line: 1729, column: 1, scope: !16293)
!16382 = distinct !DISubprogram(name: "yukon_stop", scope: !3, file: !3, line: 2226, type: !9434, scopeLine: 2227, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!16383 = !DILocalVariable(name: "skge", arg: 1, scope: !16382, file: !3, line: 2226, type: !9172)
!16384 = !DILocation(line: 2226, column: 42, scope: !16382)
!16385 = !DILocalVariable(name: "hw", scope: !16382, file: !3, line: 2228, type: !8794)
!16386 = !DILocation(line: 2228, column: 18, scope: !16382)
!16387 = !DILocation(line: 2228, column: 23, scope: !16382)
!16388 = !DILocation(line: 2228, column: 29, scope: !16382)
!16389 = !DILocalVariable(name: "port", scope: !16382, file: !3, line: 2229, type: !32)
!16390 = !DILocation(line: 2229, column: 6, scope: !16382)
!16391 = !DILocation(line: 2229, column: 13, scope: !16382)
!16392 = !DILocation(line: 2229, column: 19, scope: !16382)
!16393 = !DILocation(line: 2231, column: 14, scope: !16382)
!16394 = !DILocation(line: 2231, column: 18, scope: !16382)
!16395 = !DILocation(line: 2231, column: 2, scope: !16382)
!16396 = !DILocation(line: 2232, column: 14, scope: !16382)
!16397 = !DILocation(line: 2232, column: 18, scope: !16382)
!16398 = !DILocation(line: 2232, column: 2, scope: !16382)
!16399 = !DILocation(line: 2234, column: 14, scope: !16382)
!16400 = !DILocation(line: 2234, column: 18, scope: !16382)
!16401 = !DILocation(line: 2235, column: 16, scope: !16382)
!16402 = !DILocation(line: 2235, column: 20, scope: !16382)
!16403 = !DILocation(line: 2235, column: 5, scope: !16382)
!16404 = !DILocation(line: 2236, column: 5, scope: !16382)
!16405 = !DILocation(line: 2234, column: 2, scope: !16382)
!16406 = !DILocation(line: 2237, column: 13, scope: !16382)
!16407 = !DILocation(line: 2237, column: 17, scope: !16382)
!16408 = !DILocation(line: 2237, column: 2, scope: !16382)
!16409 = !DILocation(line: 2239, column: 16, scope: !16382)
!16410 = !DILocation(line: 2239, column: 20, scope: !16382)
!16411 = !DILocation(line: 2239, column: 2, scope: !16382)
!16412 = !DILocation(line: 2242, column: 14, scope: !16382)
!16413 = !DILocation(line: 2242, column: 18, scope: !16382)
!16414 = !DILocation(line: 2242, column: 2, scope: !16382)
!16415 = !DILocation(line: 2243, column: 14, scope: !16382)
!16416 = !DILocation(line: 2243, column: 18, scope: !16382)
!16417 = !DILocation(line: 2243, column: 2, scope: !16382)
!16418 = !DILocation(line: 2244, column: 1, scope: !16382)
!16419 = distinct !DISubprogram(name: "skge_rx_stop", scope: !3, file: !3, line: 2637, type: !9399, scopeLine: 2638, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!16420 = !DILocalVariable(name: "hw", arg: 1, scope: !16419, file: !3, line: 2637, type: !8794)
!16421 = !DILocation(line: 2637, column: 42, scope: !16419)
!16422 = !DILocalVariable(name: "port", arg: 2, scope: !16419, file: !3, line: 2637, type: !32)
!16423 = !DILocation(line: 2637, column: 50, scope: !16419)
!16424 = !DILocation(line: 2639, column: 14, scope: !16419)
!16425 = !DILocation(line: 2639, column: 18, scope: !16419)
!16426 = !DILocation(line: 2639, column: 2, scope: !16419)
!16427 = !DILocation(line: 2640, column: 15, scope: !16419)
!16428 = !DILocation(line: 2640, column: 19, scope: !16419)
!16429 = !DILocation(line: 2640, column: 2, scope: !16419)
!16430 = !DILocation(line: 2642, column: 15, scope: !16419)
!16431 = !DILocation(line: 2642, column: 19, scope: !16419)
!16432 = !DILocation(line: 2642, column: 2, scope: !16419)
!16433 = !DILocation(line: 2643, column: 1, scope: !16419)
!16434 = distinct !DISubprogram(name: "netif_tx_lock_bh", scope: !31, file: !31, line: 4259, type: !406, scopeLine: 4260, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!16435 = !DILocalVariable(name: "dev", arg: 1, scope: !16434, file: !31, line: 4259, type: !290)
!16436 = !DILocation(line: 4259, column: 56, scope: !16434)
!16437 = !DILocation(line: 4261, column: 2, scope: !16434)
!16438 = !DILocation(line: 4262, column: 16, scope: !16434)
!16439 = !DILocation(line: 4262, column: 2, scope: !16434)
!16440 = !DILocation(line: 4263, column: 1, scope: !16434)
!16441 = distinct !DISubprogram(name: "skge_tx_clean", scope: !3, file: !3, line: 2866, type: !406, scopeLine: 2867, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!16442 = !DILocalVariable(name: "dev", arg: 1, scope: !16441, file: !3, line: 2866, type: !290)
!16443 = !DILocation(line: 2866, column: 46, scope: !16441)
!16444 = !DILocalVariable(name: "skge", scope: !16441, file: !3, line: 2868, type: !9172)
!16445 = !DILocation(line: 2868, column: 20, scope: !16441)
!16446 = !DILocation(line: 2868, column: 39, scope: !16441)
!16447 = !DILocation(line: 2868, column: 27, scope: !16441)
!16448 = !DILocalVariable(name: "e", scope: !16441, file: !3, line: 2869, type: !9210)
!16449 = !DILocation(line: 2869, column: 23, scope: !16441)
!16450 = !DILocation(line: 2871, column: 11, scope: !16451)
!16451 = distinct !DILexicalBlock(scope: !16441, file: !3, line: 2871, column: 2)
!16452 = !DILocation(line: 2871, column: 17, scope: !16451)
!16453 = !DILocation(line: 2871, column: 25, scope: !16451)
!16454 = !DILocation(line: 2871, column: 9, scope: !16451)
!16455 = !DILocation(line: 2871, column: 7, scope: !16451)
!16456 = !DILocation(line: 2871, column: 35, scope: !16457)
!16457 = distinct !DILexicalBlock(scope: !16451, file: !3, line: 2871, column: 2)
!16458 = !DILocation(line: 2871, column: 40, scope: !16457)
!16459 = !DILocation(line: 2871, column: 46, scope: !16457)
!16460 = !DILocation(line: 2871, column: 54, scope: !16457)
!16461 = !DILocation(line: 2871, column: 37, scope: !16457)
!16462 = !DILocation(line: 2871, column: 2, scope: !16451)
!16463 = !DILocalVariable(name: "td", scope: !16464, file: !3, line: 2872, type: !13730)
!16464 = distinct !DILexicalBlock(scope: !16457, file: !3, line: 2871, column: 75)
!16465 = !DILocation(line: 2872, column: 24, scope: !16464)
!16466 = !DILocation(line: 2872, column: 29, scope: !16464)
!16467 = !DILocation(line: 2872, column: 32, scope: !16464)
!16468 = !DILocation(line: 2874, column: 17, scope: !16464)
!16469 = !DILocation(line: 2874, column: 23, scope: !16464)
!16470 = !DILocation(line: 2874, column: 27, scope: !16464)
!16471 = !DILocation(line: 2874, column: 33, scope: !16464)
!16472 = !DILocation(line: 2874, column: 36, scope: !16464)
!16473 = !DILocation(line: 2874, column: 40, scope: !16464)
!16474 = !DILocation(line: 2874, column: 3, scope: !16464)
!16475 = !DILocation(line: 2876, column: 7, scope: !16476)
!16476 = distinct !DILexicalBlock(scope: !16464, file: !3, line: 2876, column: 7)
!16477 = !DILocation(line: 2876, column: 11, scope: !16476)
!16478 = !DILocation(line: 2876, column: 19, scope: !16476)
!16479 = !DILocation(line: 2876, column: 7, scope: !16464)
!16480 = !DILocation(line: 2877, column: 4, scope: !16476)
!16481 = !DILocation(line: 2878, column: 3, scope: !16464)
!16482 = !DILocation(line: 2878, column: 7, scope: !16464)
!16483 = !DILocation(line: 2878, column: 15, scope: !16464)
!16484 = !DILocation(line: 2879, column: 2, scope: !16464)
!16485 = !DILocation(line: 2871, column: 66, scope: !16457)
!16486 = !DILocation(line: 2871, column: 69, scope: !16457)
!16487 = !DILocation(line: 2871, column: 64, scope: !16457)
!16488 = !DILocation(line: 2871, column: 2, scope: !16457)
!16489 = distinct !{!16489, !16462, !16490}
!16490 = !DILocation(line: 2879, column: 2, scope: !16451)
!16491 = !DILocation(line: 2881, column: 21, scope: !16441)
!16492 = !DILocation(line: 2881, column: 2, scope: !16441)
!16493 = !DILocation(line: 2882, column: 27, scope: !16441)
!16494 = !DILocation(line: 2882, column: 2, scope: !16441)
!16495 = !DILocation(line: 2882, column: 8, scope: !16441)
!16496 = !DILocation(line: 2882, column: 16, scope: !16441)
!16497 = !DILocation(line: 2882, column: 25, scope: !16441)
!16498 = !DILocation(line: 2883, column: 1, scope: !16441)
!16499 = distinct !DISubprogram(name: "netif_tx_unlock_bh", scope: !31, file: !31, line: 4282, type: !406, scopeLine: 4283, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!16500 = !DILocalVariable(name: "dev", arg: 1, scope: !16499, file: !31, line: 4282, type: !290)
!16501 = !DILocation(line: 4282, column: 58, scope: !16499)
!16502 = !DILocation(line: 4284, column: 18, scope: !16499)
!16503 = !DILocation(line: 4284, column: 2, scope: !16499)
!16504 = !DILocation(line: 4285, column: 2, scope: !16499)
!16505 = !DILocation(line: 4286, column: 1, scope: !16499)
!16506 = distinct !DISubprogram(name: "local_bh_disable", scope: !14558, file: !14558, line: 17, type: !3808, scopeLine: 18, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!16507 = !DILocation(line: 77, column: 53, scope: !14553, inlinedAt: !16508)
!16508 = distinct !DILocation(line: 12, column: 2, scope: !14557, inlinedAt: !16509)
!16509 = distinct !DILocation(line: 19, column: 2, scope: !16506)
!16510 = !DILocation(line: 79, column: 2, scope: !14564, inlinedAt: !16508)
!16511 = !DILocation(line: 79, column: 2, scope: !14567, inlinedAt: !16508)
!16512 = !DILocation(line: 10, column: 65, scope: !14557, inlinedAt: !16509)
!16513 = !DILocation(line: 10, column: 82, scope: !14557, inlinedAt: !16509)
!16514 = !DILocation(line: 19, column: 24, scope: !16515)
!16515 = distinct !DILexicalBlock(scope: !16506, file: !14558, line: 19, column: 24)
!16516 = !DILabel(scope: !16515, name: "__here", file: !14558, line: 19)
!16517 = !DILocation(line: 12, column: 2, scope: !14557, inlinedAt: !16509)
!16518 = !DILocation(line: 13, column: 2, scope: !14557, inlinedAt: !16509)
!16519 = !DILocation(line: 20, column: 1, scope: !16506)
!16520 = distinct !DISubprogram(name: "__netif_tx_lock", scope: !31, file: !31, line: 4173, type: !16521, scopeLine: 4174, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!16521 = !DISubroutineType(types: !16522)
!16522 = !{null, !6437, !32}
!16523 = !DILocation(line: 352, column: 51, scope: !10220, inlinedAt: !16524)
!16524 = distinct !DILocation(line: 4175, column: 2, scope: !16520)
!16525 = !DILocalVariable(name: "txq", arg: 1, scope: !16520, file: !31, line: 4173, type: !6437)
!16526 = !DILocation(line: 4173, column: 57, scope: !16520)
!16527 = !DILocalVariable(name: "cpu", arg: 2, scope: !16520, file: !31, line: 4173, type: !32)
!16528 = !DILocation(line: 4173, column: 66, scope: !16520)
!16529 = !DILocation(line: 4175, column: 13, scope: !16520)
!16530 = !DILocation(line: 4175, column: 18, scope: !16520)
!16531 = !DILocation(line: 354, column: 2, scope: !10256, inlinedAt: !16524)
!16532 = !DILocation(line: 354, column: 2, scope: !10259, inlinedAt: !16524)
!16533 = !DILocation(line: 4176, column: 25, scope: !16520)
!16534 = !DILocation(line: 4176, column: 2, scope: !16520)
!16535 = !DILocation(line: 4176, column: 7, scope: !16520)
!16536 = !DILocation(line: 4176, column: 23, scope: !16520)
!16537 = !DILocation(line: 4177, column: 1, scope: !16520)
!16538 = distinct !DISubprogram(name: "__netif_tx_unlock", scope: !31, file: !31, line: 4204, type: !12020, scopeLine: 4205, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!16539 = !DILocation(line: 392, column: 53, scope: !10211, inlinedAt: !16540)
!16540 = distinct !DILocation(line: 4207, column: 2, scope: !16538)
!16541 = !DILocalVariable(name: "txq", arg: 1, scope: !16538, file: !31, line: 4204, type: !6437)
!16542 = !DILocation(line: 4204, column: 59, scope: !16538)
!16543 = !DILocation(line: 4206, column: 2, scope: !16538)
!16544 = !DILocation(line: 4206, column: 7, scope: !16538)
!16545 = !DILocation(line: 4206, column: 23, scope: !16538)
!16546 = !DILocation(line: 4207, column: 15, scope: !16538)
!16547 = !DILocation(line: 4207, column: 20, scope: !16538)
!16548 = !DILocation(line: 394, column: 2, scope: !10276, inlinedAt: !16540)
!16549 = !DILocation(line: 394, column: 2, scope: !10279, inlinedAt: !16540)
!16550 = !DILocation(line: 4208, column: 1, scope: !16538)
!16551 = distinct !DISubprogram(name: "local_bh_enable", scope: !14558, file: !14558, line: 30, type: !3808, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!16552 = !DILocation(line: 32, column: 23, scope: !16553)
!16553 = distinct !DILexicalBlock(scope: !16551, file: !14558, line: 32, column: 23)
!16554 = !DILabel(scope: !16553, name: "__here", file: !14558, line: 32)
!16555 = !DILocation(line: 32, column: 2, scope: !16551)
!16556 = !DILocation(line: 33, column: 1, scope: !16551)
!16557 = distinct !DISubprogram(name: "yukon_suspend", scope: !3, file: !3, line: 2208, type: !9399, scopeLine: 2209, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!16558 = !DILocalVariable(name: "hw", arg: 1, scope: !16557, file: !3, line: 2208, type: !8794)
!16559 = !DILocation(line: 2208, column: 43, scope: !16557)
!16560 = !DILocalVariable(name: "port", arg: 2, scope: !16557, file: !3, line: 2208, type: !32)
!16561 = !DILocation(line: 2208, column: 51, scope: !16557)
!16562 = !DILocalVariable(name: "ctrl", scope: !16557, file: !3, line: 2210, type: !581)
!16563 = !DILocation(line: 2210, column: 6, scope: !16557)
!16564 = !DILocation(line: 2212, column: 21, scope: !16557)
!16565 = !DILocation(line: 2212, column: 25, scope: !16557)
!16566 = !DILocation(line: 2212, column: 9, scope: !16557)
!16567 = !DILocation(line: 2212, column: 7, scope: !16557)
!16568 = !DILocation(line: 2213, column: 7, scope: !16557)
!16569 = !DILocation(line: 2214, column: 15, scope: !16557)
!16570 = !DILocation(line: 2214, column: 19, scope: !16557)
!16571 = !DILocation(line: 2214, column: 44, scope: !16557)
!16572 = !DILocation(line: 2214, column: 2, scope: !16557)
!16573 = !DILocation(line: 2216, column: 21, scope: !16557)
!16574 = !DILocation(line: 2216, column: 25, scope: !16557)
!16575 = !DILocation(line: 2216, column: 9, scope: !16557)
!16576 = !DILocation(line: 2216, column: 7, scope: !16557)
!16577 = !DILocation(line: 2217, column: 7, scope: !16557)
!16578 = !DILocation(line: 2218, column: 15, scope: !16557)
!16579 = !DILocation(line: 2218, column: 19, scope: !16557)
!16580 = !DILocation(line: 2218, column: 40, scope: !16557)
!16581 = !DILocation(line: 2218, column: 2, scope: !16557)
!16582 = !DILocation(line: 2221, column: 21, scope: !16557)
!16583 = !DILocation(line: 2221, column: 25, scope: !16557)
!16584 = !DILocation(line: 2221, column: 9, scope: !16557)
!16585 = !DILocation(line: 2221, column: 7, scope: !16557)
!16586 = !DILocation(line: 2222, column: 7, scope: !16557)
!16587 = !DILocation(line: 2223, column: 15, scope: !16557)
!16588 = !DILocation(line: 2223, column: 19, scope: !16557)
!16589 = !DILocation(line: 2223, column: 40, scope: !16557)
!16590 = !DILocation(line: 2223, column: 2, scope: !16557)
!16591 = !DILocation(line: 2224, column: 1, scope: !16557)
!16592 = distinct !DISubprogram(name: "netif_tx_lock", scope: !31, file: !31, line: 4237, type: !406, scopeLine: 4238, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!16593 = !DILocation(line: 352, column: 51, scope: !10220, inlinedAt: !16594)
!16594 = distinct !DILocation(line: 4242, column: 2, scope: !16592)
!16595 = !DILocalVariable(name: "dev", arg: 1, scope: !16592, file: !31, line: 4237, type: !290)
!16596 = !DILocation(line: 4237, column: 53, scope: !16592)
!16597 = !DILocalVariable(name: "i", scope: !16592, file: !31, line: 4239, type: !7)
!16598 = !DILocation(line: 4239, column: 15, scope: !16592)
!16599 = !DILocalVariable(name: "cpu", scope: !16592, file: !31, line: 4240, type: !32)
!16600 = !DILocation(line: 4240, column: 6, scope: !16592)
!16601 = !DILocation(line: 4242, column: 13, scope: !16592)
!16602 = !DILocation(line: 4242, column: 18, scope: !16592)
!16603 = !DILocation(line: 354, column: 2, scope: !10256, inlinedAt: !16594)
!16604 = !DILocation(line: 354, column: 2, scope: !10259, inlinedAt: !16594)
!16605 = !DILocation(line: 4243, column: 6, scope: !16592)
!16606 = !DILocation(line: 4244, column: 9, scope: !16607)
!16607 = distinct !DILexicalBlock(scope: !16592, file: !31, line: 4244, column: 2)
!16608 = !DILocation(line: 4244, column: 7, scope: !16607)
!16609 = !DILocation(line: 4244, column: 14, scope: !16610)
!16610 = distinct !DILexicalBlock(scope: !16607, file: !31, line: 4244, column: 2)
!16611 = !DILocation(line: 4244, column: 18, scope: !16610)
!16612 = !DILocation(line: 4244, column: 23, scope: !16610)
!16613 = !DILocation(line: 4244, column: 16, scope: !16610)
!16614 = !DILocation(line: 4244, column: 2, scope: !16607)
!16615 = !DILocalVariable(name: "txq", scope: !16616, file: !31, line: 4245, type: !6437)
!16616 = distinct !DILexicalBlock(scope: !16610, file: !31, line: 4244, column: 43)
!16617 = !DILocation(line: 4245, column: 24, scope: !16616)
!16618 = !DILocation(line: 4245, column: 50, scope: !16616)
!16619 = !DILocation(line: 4245, column: 55, scope: !16616)
!16620 = !DILocation(line: 4245, column: 30, scope: !16616)
!16621 = !DILocation(line: 4253, column: 19, scope: !16616)
!16622 = !DILocation(line: 4253, column: 24, scope: !16616)
!16623 = !DILocation(line: 4253, column: 3, scope: !16616)
!16624 = !DILocation(line: 4254, column: 34, scope: !16616)
!16625 = !DILocation(line: 4254, column: 39, scope: !16616)
!16626 = !DILocation(line: 4254, column: 3, scope: !16616)
!16627 = !DILocation(line: 4255, column: 21, scope: !16616)
!16628 = !DILocation(line: 4255, column: 3, scope: !16616)
!16629 = !DILocation(line: 4256, column: 2, scope: !16616)
!16630 = !DILocation(line: 4244, column: 39, scope: !16610)
!16631 = !DILocation(line: 4244, column: 2, scope: !16610)
!16632 = distinct !{!16632, !16614, !16633}
!16633 = !DILocation(line: 4256, column: 2, scope: !16607)
!16634 = !DILocation(line: 4257, column: 1, scope: !16592)
!16635 = distinct !DISubprogram(name: "skge_tx_unmap", scope: !3, file: !3, line: 2853, type: !16636, scopeLine: 2855, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!16636 = !DISubroutineType(types: !16637)
!16637 = !{null, !8799, !9210, !987}
!16638 = !DILocalVariable(name: "pdev", arg: 1, scope: !16635, file: !3, line: 2853, type: !8799)
!16639 = !DILocation(line: 2853, column: 50, scope: !16635)
!16640 = !DILocalVariable(name: "e", arg: 2, scope: !16635, file: !3, line: 2853, type: !9210)
!16641 = !DILocation(line: 2853, column: 77, scope: !16635)
!16642 = !DILocalVariable(name: "control", arg: 3, scope: !16635, file: !3, line: 2854, type: !987)
!16643 = !DILocation(line: 2854, column: 10, scope: !16635)
!16644 = !DILocation(line: 2857, column: 6, scope: !16645)
!16645 = distinct !DILexicalBlock(scope: !16635, file: !3, line: 2857, column: 6)
!16646 = !DILocation(line: 2857, column: 14, scope: !16645)
!16647 = !DILocation(line: 2857, column: 6, scope: !16635)
!16648 = !DILocation(line: 2858, column: 3, scope: !16645)
!16649 = !DILocation(line: 2861, column: 3, scope: !16645)
!16650 = !DILocation(line: 2863, column: 1, scope: !16635)
!16651 = distinct !DISubprogram(name: "netdev_reset_queue", scope: !31, file: !31, line: 3525, type: !406, scopeLine: 3526, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!16652 = !DILocalVariable(name: "dev_queue", arg: 1, scope: !16651, file: !31, line: 3525, type: !290)
!16653 = !DILocation(line: 3525, column: 58, scope: !16651)
!16654 = !DILocation(line: 3527, column: 44, scope: !16651)
!16655 = !DILocation(line: 3527, column: 24, scope: !16651)
!16656 = !DILocation(line: 3527, column: 2, scope: !16651)
!16657 = !DILocation(line: 3528, column: 1, scope: !16651)
!16658 = distinct !DISubprogram(name: "netdev_tx_reset_queue", scope: !31, file: !31, line: 3510, type: !12020, scopeLine: 3511, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!16659 = !DILocalVariable(name: "q", arg: 1, scope: !16658, file: !31, line: 3510, type: !6437)
!16660 = !DILocation(line: 3510, column: 63, scope: !16658)
!16661 = !DILocation(line: 3513, column: 39, scope: !16658)
!16662 = !DILocation(line: 3513, column: 42, scope: !16658)
!16663 = !DILocation(line: 3513, column: 2, scope: !16658)
!16664 = !DILocation(line: 3514, column: 13, scope: !16658)
!16665 = !DILocation(line: 3514, column: 16, scope: !16658)
!16666 = !DILocation(line: 3514, column: 2, scope: !16658)
!16667 = !DILocation(line: 3516, column: 1, scope: !16658)
!16668 = distinct !DISubprogram(name: "netif_tx_unlock", scope: !31, file: !31, line: 4265, type: !406, scopeLine: 4266, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!16669 = !DILocation(line: 392, column: 53, scope: !10211, inlinedAt: !16670)
!16670 = distinct !DILocation(line: 4279, column: 2, scope: !16668)
!16671 = !DILocalVariable(name: "dev", arg: 1, scope: !16668, file: !31, line: 4265, type: !290)
!16672 = !DILocation(line: 4265, column: 55, scope: !16668)
!16673 = !DILocalVariable(name: "i", scope: !16668, file: !31, line: 4267, type: !7)
!16674 = !DILocation(line: 4267, column: 15, scope: !16668)
!16675 = !DILocation(line: 4269, column: 9, scope: !16676)
!16676 = distinct !DILexicalBlock(scope: !16668, file: !31, line: 4269, column: 2)
!16677 = !DILocation(line: 4269, column: 7, scope: !16676)
!16678 = !DILocation(line: 4269, column: 14, scope: !16679)
!16679 = distinct !DILexicalBlock(scope: !16676, file: !31, line: 4269, column: 2)
!16680 = !DILocation(line: 4269, column: 18, scope: !16679)
!16681 = !DILocation(line: 4269, column: 23, scope: !16679)
!16682 = !DILocation(line: 4269, column: 16, scope: !16679)
!16683 = !DILocation(line: 4269, column: 2, scope: !16676)
!16684 = !DILocalVariable(name: "txq", scope: !16685, file: !31, line: 4270, type: !6437)
!16685 = distinct !DILexicalBlock(scope: !16679, file: !31, line: 4269, column: 43)
!16686 = !DILocation(line: 4270, column: 24, scope: !16685)
!16687 = !DILocation(line: 4270, column: 50, scope: !16685)
!16688 = !DILocation(line: 4270, column: 55, scope: !16685)
!16689 = !DILocation(line: 4270, column: 30, scope: !16685)
!16690 = !DILocation(line: 4276, column: 36, scope: !16685)
!16691 = !DILocation(line: 4276, column: 41, scope: !16685)
!16692 = !DILocation(line: 4276, column: 3, scope: !16685)
!16693 = !DILocation(line: 4277, column: 24, scope: !16685)
!16694 = !DILocation(line: 4277, column: 3, scope: !16685)
!16695 = !DILocation(line: 4278, column: 2, scope: !16685)
!16696 = !DILocation(line: 4269, column: 39, scope: !16679)
!16697 = !DILocation(line: 4269, column: 2, scope: !16679)
!16698 = distinct !{!16698, !16683, !16699}
!16699 = !DILocation(line: 4278, column: 2, scope: !16676)
!16700 = !DILocation(line: 4279, column: 15, scope: !16668)
!16701 = !DILocation(line: 4279, column: 20, scope: !16668)
!16702 = !DILocation(line: 394, column: 2, scope: !10276, inlinedAt: !16670)
!16703 = !DILocation(line: 394, column: 2, scope: !10279, inlinedAt: !16670)
!16704 = !DILocation(line: 4280, column: 1, scope: !16668)
!16705 = distinct !DISubprogram(name: "skb_padto", scope: !417, file: !417, line: 3212, type: !16706, scopeLine: 3213, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!16706 = !DISubroutineType(types: !16707)
!16707 = !{!32, !415, !7}
!16708 = !DILocalVariable(name: "skb", arg: 1, scope: !16705, file: !417, line: 3212, type: !415)
!16709 = !DILocation(line: 3212, column: 45, scope: !16705)
!16710 = !DILocalVariable(name: "len", arg: 2, scope: !16705, file: !417, line: 3212, type: !7)
!16711 = !DILocation(line: 3212, column: 63, scope: !16705)
!16712 = !DILocalVariable(name: "size", scope: !16705, file: !417, line: 3214, type: !7)
!16713 = !DILocation(line: 3214, column: 15, scope: !16705)
!16714 = !DILocation(line: 3214, column: 22, scope: !16705)
!16715 = !DILocation(line: 3214, column: 27, scope: !16705)
!16716 = !DILocation(line: 3215, column: 6, scope: !16717)
!16717 = distinct !DILexicalBlock(scope: !16705, file: !417, line: 3215, column: 6)
!16718 = !DILocation(line: 3215, column: 6, scope: !16705)
!16719 = !DILocation(line: 3216, column: 3, scope: !16717)
!16720 = !DILocation(line: 3217, column: 17, scope: !16705)
!16721 = !DILocation(line: 3217, column: 22, scope: !16705)
!16722 = !DILocation(line: 3217, column: 28, scope: !16705)
!16723 = !DILocation(line: 3217, column: 26, scope: !16705)
!16724 = !DILocation(line: 3217, column: 9, scope: !16705)
!16725 = !DILocation(line: 3217, column: 2, scope: !16705)
!16726 = !DILocation(line: 3218, column: 1, scope: !16705)
!16727 = distinct !DISubprogram(name: "skge_avail", scope: !3, file: !3, line: 2726, type: !16728, scopeLine: 2727, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!16728 = !DISubroutineType(types: !16729)
!16729 = !{!32, !16730}
!16730 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16731, size: 64)
!16731 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9207)
!16732 = !DILocalVariable(name: "ring", arg: 1, scope: !16727, file: !3, line: 2726, type: !16730)
!16733 = !DILocation(line: 2726, column: 54, scope: !16727)
!16734 = !DILocation(line: 2728, column: 2, scope: !16727)
!16735 = !{i32 -2139428432}
!16736 = !DILocation(line: 2729, column: 11, scope: !16727)
!16737 = !DILocation(line: 2729, column: 17, scope: !16727)
!16738 = !DILocation(line: 2729, column: 28, scope: !16727)
!16739 = !DILocation(line: 2729, column: 34, scope: !16727)
!16740 = !DILocation(line: 2729, column: 26, scope: !16727)
!16741 = !DILocation(line: 2729, column: 10, scope: !16727)
!16742 = !DILocation(line: 2729, column: 48, scope: !16727)
!16743 = !DILocation(line: 2729, column: 54, scope: !16727)
!16744 = !DILocation(line: 2730, column: 6, scope: !16727)
!16745 = !DILocation(line: 2730, column: 12, scope: !16727)
!16746 = !DILocation(line: 2730, column: 23, scope: !16727)
!16747 = !DILocation(line: 2730, column: 29, scope: !16727)
!16748 = !DILocation(line: 2730, column: 21, scope: !16727)
!16749 = !DILocation(line: 2730, column: 3, scope: !16727)
!16750 = !DILocation(line: 2730, column: 37, scope: !16727)
!16751 = !DILocation(line: 2729, column: 9, scope: !16727)
!16752 = !DILocation(line: 2729, column: 2, scope: !16727)
!16753 = distinct !DISubprogram(name: "skb_end_pointer", scope: !417, file: !417, line: 1404, type: !16754, scopeLine: 1405, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!16754 = !DISubroutineType(types: !16755)
!16755 = !{!564, !6051}
!16756 = !DILocalVariable(name: "skb", arg: 1, scope: !16753, file: !417, line: 1404, type: !6051)
!16757 = !DILocation(line: 1404, column: 68, scope: !16753)
!16758 = !DILocation(line: 1406, column: 9, scope: !16753)
!16759 = !DILocation(line: 1406, column: 14, scope: !16753)
!16760 = !DILocation(line: 1406, column: 21, scope: !16753)
!16761 = !DILocation(line: 1406, column: 26, scope: !16753)
!16762 = !DILocation(line: 1406, column: 19, scope: !16753)
!16763 = !DILocation(line: 1406, column: 2, scope: !16753)
!16764 = distinct !DISubprogram(name: "skb_headlen", scope: !417, file: !417, line: 2110, type: !16765, scopeLine: 2111, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!16765 = !DISubroutineType(types: !16766)
!16766 = !{!7, !6051}
!16767 = !DILocalVariable(name: "skb", arg: 1, scope: !16764, file: !417, line: 2110, type: !6051)
!16768 = !DILocation(line: 2110, column: 62, scope: !16764)
!16769 = !DILocation(line: 2112, column: 9, scope: !16764)
!16770 = !DILocation(line: 2112, column: 14, scope: !16764)
!16771 = !DILocation(line: 2112, column: 20, scope: !16764)
!16772 = !DILocation(line: 2112, column: 25, scope: !16764)
!16773 = !DILocation(line: 2112, column: 18, scope: !16764)
!16774 = !DILocation(line: 2112, column: 2, scope: !16764)
!16775 = distinct !DISubprogram(name: "skb_checksum_start_offset", scope: !417, file: !417, line: 2594, type: !16776, scopeLine: 2595, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!16776 = !DISubroutineType(types: !16777)
!16777 = !{!32, !6051}
!16778 = !DILocalVariable(name: "skb", arg: 1, scope: !16775, file: !417, line: 2594, type: !6051)
!16779 = !DILocation(line: 2594, column: 67, scope: !16775)
!16780 = !DILocation(line: 2596, column: 9, scope: !16775)
!16781 = !DILocation(line: 2596, column: 14, scope: !16775)
!16782 = !DILocation(line: 2596, column: 40, scope: !16775)
!16783 = !DILocation(line: 2596, column: 27, scope: !16775)
!16784 = !DILocation(line: 2596, column: 25, scope: !16775)
!16785 = !DILocation(line: 2596, column: 2, scope: !16775)
!16786 = distinct !DISubprogram(name: "ipip_hdr", scope: !16787, file: !16787, line: 29, type: !16788, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!16787 = !DIFile(filename: "./include/linux/ip.h", directory: "/home/lizy2001/genbc/linux")
!16788 = !DISubroutineType(types: !16789)
!16789 = !{!9135, !6051}
!16790 = !DILocalVariable(name: "skb", arg: 1, scope: !16786, file: !16787, line: 29, type: !6051)
!16791 = !DILocation(line: 29, column: 60, scope: !16786)
!16792 = !DILocation(line: 31, column: 46, scope: !16786)
!16793 = !DILocation(line: 31, column: 25, scope: !16786)
!16794 = !DILocation(line: 31, column: 9, scope: !16786)
!16795 = !DILocation(line: 31, column: 2, scope: !16786)
!16796 = distinct !DISubprogram(name: "skb_frag_dma_map", scope: !417, file: !417, line: 3112, type: !16797, scopeLine: 3116, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!16797 = !DISubroutineType(types: !16798)
!16798 = !{!2036, !6544, !13865, !1039, !1039, !8180}
!16799 = !DILocalVariable(name: "dev", arg: 1, scope: !16796, file: !417, line: 3112, type: !6544)
!16800 = !DILocation(line: 3112, column: 58, scope: !16796)
!16801 = !DILocalVariable(name: "frag", arg: 2, scope: !16796, file: !417, line: 3113, type: !13865)
!16802 = !DILocation(line: 3113, column: 26, scope: !16796)
!16803 = !DILocalVariable(name: "offset", arg: 3, scope: !16796, file: !417, line: 3114, type: !1039)
!16804 = !DILocation(line: 3114, column: 15, scope: !16796)
!16805 = !DILocalVariable(name: "size", arg: 4, scope: !16796, file: !417, line: 3114, type: !1039)
!16806 = !DILocation(line: 3114, column: 30, scope: !16796)
!16807 = !DILocalVariable(name: "dir", arg: 5, scope: !16796, file: !417, line: 3115, type: !8180)
!16808 = !DILocation(line: 3115, column: 32, scope: !16796)
!16809 = !DILocation(line: 3117, column: 9, scope: !16796)
!16810 = !DILocation(line: 3117, column: 2, scope: !16796)
!16811 = distinct !DISubprogram(name: "skb_frag_size", scope: !417, file: !417, line: 327, type: !16812, scopeLine: 328, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!16812 = !DISubroutineType(types: !16813)
!16813 = !{!7, !13865}
!16814 = !DILocalVariable(name: "frag", arg: 1, scope: !16811, file: !417, line: 327, type: !13865)
!16815 = !DILocation(line: 327, column: 60, scope: !16811)
!16816 = !DILocation(line: 329, column: 9, scope: !16811)
!16817 = !DILocation(line: 329, column: 15, scope: !16811)
!16818 = !DILocation(line: 329, column: 2, scope: !16811)
!16819 = distinct !DISubprogram(name: "netdev_sent_queue", scope: !31, file: !31, line: 3457, type: !733, scopeLine: 3458, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!16820 = !DILocalVariable(name: "dev", arg: 1, scope: !16819, file: !31, line: 3457, type: !290)
!16821 = !DILocation(line: 3457, column: 57, scope: !16819)
!16822 = !DILocalVariable(name: "bytes", arg: 2, scope: !16819, file: !31, line: 3457, type: !7)
!16823 = !DILocation(line: 3457, column: 75, scope: !16819)
!16824 = !DILocation(line: 3459, column: 43, scope: !16819)
!16825 = !DILocation(line: 3459, column: 23, scope: !16819)
!16826 = !DILocation(line: 3459, column: 52, scope: !16819)
!16827 = !DILocation(line: 3459, column: 2, scope: !16819)
!16828 = !DILocation(line: 3460, column: 1, scope: !16819)
!16829 = distinct !DISubprogram(name: "dev_kfree_skb_any", scope: !31, file: !31, line: 3817, type: !469, scopeLine: 3818, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!16830 = !DILocalVariable(name: "skb", arg: 1, scope: !16829, file: !31, line: 3817, type: !415)
!16831 = !DILocation(line: 3817, column: 54, scope: !16829)
!16832 = !DILocation(line: 3819, column: 22, scope: !16829)
!16833 = !DILocation(line: 3819, column: 2, scope: !16829)
!16834 = !DILocation(line: 3820, column: 1, scope: !16829)
!16835 = distinct !DISubprogram(name: "skb_pad", scope: !417, file: !417, line: 1184, type: !16836, scopeLine: 1185, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!16836 = !DISubroutineType(types: !16837)
!16837 = !{!32, !415, !32}
!16838 = !DILocalVariable(name: "skb", arg: 1, scope: !16835, file: !417, line: 1184, type: !415)
!16839 = !DILocation(line: 1184, column: 43, scope: !16835)
!16840 = !DILocalVariable(name: "pad", arg: 2, scope: !16835, file: !417, line: 1184, type: !32)
!16841 = !DILocation(line: 1184, column: 52, scope: !16835)
!16842 = !DILocation(line: 1186, column: 19, scope: !16835)
!16843 = !DILocation(line: 1186, column: 24, scope: !16835)
!16844 = !DILocation(line: 1186, column: 9, scope: !16835)
!16845 = !DILocation(line: 1186, column: 2, scope: !16835)
!16846 = distinct !DISubprogram(name: "skb_headroom", scope: !417, file: !417, line: 2339, type: !16765, scopeLine: 2340, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!16847 = !DILocalVariable(name: "skb", arg: 1, scope: !16846, file: !417, line: 2339, type: !6051)
!16848 = !DILocation(line: 2339, column: 63, scope: !16846)
!16849 = !DILocation(line: 2341, column: 9, scope: !16846)
!16850 = !DILocation(line: 2341, column: 14, scope: !16846)
!16851 = !DILocation(line: 2341, column: 21, scope: !16846)
!16852 = !DILocation(line: 2341, column: 26, scope: !16846)
!16853 = !DILocation(line: 2341, column: 19, scope: !16846)
!16854 = !DILocation(line: 2341, column: 2, scope: !16846)
!16855 = distinct !DISubprogram(name: "skb_transport_header", scope: !417, file: !417, line: 2498, type: !16754, scopeLine: 2499, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!16856 = !DILocalVariable(name: "skb", arg: 1, scope: !16855, file: !417, line: 2498, type: !6051)
!16857 = !DILocation(line: 2498, column: 73, scope: !16855)
!16858 = !DILocation(line: 2500, column: 9, scope: !16855)
!16859 = !DILocation(line: 2500, column: 14, scope: !16855)
!16860 = !DILocation(line: 2500, column: 21, scope: !16855)
!16861 = !DILocation(line: 2500, column: 26, scope: !16855)
!16862 = !DILocation(line: 2500, column: 19, scope: !16855)
!16863 = !DILocation(line: 2500, column: 2, scope: !16855)
!16864 = distinct !DISubprogram(name: "skb_frag_page", scope: !417, file: !417, line: 2983, type: !16865, scopeLine: 2984, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!16865 = !DISubroutineType(types: !16866)
!16866 = !{!1719, !13865}
!16867 = !DILocalVariable(name: "frag", arg: 1, scope: !16864, file: !417, line: 2983, type: !13865)
!16868 = !DILocation(line: 2983, column: 60, scope: !16864)
!16869 = !DILocation(line: 2985, column: 9, scope: !16864)
!16870 = !DILocation(line: 2985, column: 15, scope: !16864)
!16871 = !DILocation(line: 2985, column: 2, scope: !16864)
!16872 = distinct !DISubprogram(name: "skb_frag_off", scope: !417, file: !417, line: 2941, type: !16812, scopeLine: 2942, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!16873 = !DILocalVariable(name: "frag", arg: 1, scope: !16872, file: !417, line: 2941, type: !13865)
!16874 = !DILocation(line: 2941, column: 59, scope: !16872)
!16875 = !DILocation(line: 2943, column: 9, scope: !16872)
!16876 = !DILocation(line: 2943, column: 15, scope: !16872)
!16877 = !DILocation(line: 2943, column: 2, scope: !16872)
!16878 = distinct !DISubprogram(name: "netdev_tx_sent_queue", scope: !31, file: !31, line: 3404, type: !16879, scopeLine: 3406, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!16879 = !DISubroutineType(types: !16880)
!16880 = !{null, !6437, !7}
!16881 = !DILocalVariable(name: "dev_queue", arg: 1, scope: !16878, file: !31, line: 3404, type: !6437)
!16882 = !DILocation(line: 3404, column: 62, scope: !16878)
!16883 = !DILocalVariable(name: "bytes", arg: 2, scope: !16878, file: !31, line: 3405, type: !7)
!16884 = !DILocation(line: 3405, column: 19, scope: !16878)
!16885 = !DILocation(line: 3408, column: 14, scope: !16878)
!16886 = !DILocation(line: 3408, column: 25, scope: !16878)
!16887 = !DILocation(line: 3408, column: 30, scope: !16878)
!16888 = !DILocation(line: 3408, column: 2, scope: !16878)
!16889 = !DILocation(line: 3410, column: 6, scope: !16890)
!16890 = distinct !DILexicalBlock(scope: !16878, file: !31, line: 3410, column: 6)
!16891 = !DILocation(line: 3410, column: 6, scope: !16878)
!16892 = !DILocation(line: 3411, column: 3, scope: !16890)
!16893 = !DILocation(line: 3413, column: 37, scope: !16878)
!16894 = !DILocation(line: 3413, column: 48, scope: !16878)
!16895 = !DILocation(line: 3413, column: 2, scope: !16878)
!16896 = !DILocation(line: 3420, column: 2, scope: !16878)
!16897 = !{i32 -2140200828}
!16898 = !DILocation(line: 3423, column: 6, scope: !16899)
!16899 = distinct !DILexicalBlock(scope: !16878, file: !31, line: 3423, column: 6)
!16900 = !DILocation(line: 3423, column: 6, scope: !16878)
!16901 = !DILocation(line: 3424, column: 40, scope: !16899)
!16902 = !DILocation(line: 3424, column: 51, scope: !16899)
!16903 = !DILocation(line: 3424, column: 3, scope: !16899)
!16904 = !DILocation(line: 3426, column: 1, scope: !16878)
!16905 = distinct !DISubprogram(name: "dql_queued", scope: !6455, file: !6455, line: 75, type: !16906, scopeLine: 76, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!16906 = !DISubroutineType(types: !16907)
!16907 = !{null, !16908, !7}
!16908 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6454, size: 64)
!16909 = !DILocalVariable(name: "dql", arg: 1, scope: !16905, file: !6455, line: 75, type: !16908)
!16910 = !DILocation(line: 75, column: 43, scope: !16905)
!16911 = !DILocalVariable(name: "count", arg: 2, scope: !16905, file: !6455, line: 75, type: !7)
!16912 = !DILocation(line: 75, column: 61, scope: !16905)
!16913 = !DILocation(line: 77, column: 2, scope: !16905)
!16914 = !DILocation(line: 77, column: 2, scope: !16915)
!16915 = distinct !DILexicalBlock(scope: !16916, file: !6455, line: 77, column: 2)
!16916 = distinct !DILexicalBlock(scope: !16905, file: !6455, line: 77, column: 2)
!16917 = !DILocation(line: 77, column: 2, scope: !16916)
!16918 = !DILocation(line: 77, column: 2, scope: !16919)
!16919 = distinct !DILexicalBlock(scope: !16915, file: !6455, line: 77, column: 2)
!16920 = !DILocation(line: 77, column: 2, scope: !16921)
!16921 = distinct !DILexicalBlock(scope: !16919, file: !6455, line: 77, column: 2)
!16922 = !DILocation(line: 77, column: 2, scope: !16923)
!16923 = distinct !DILexicalBlock(scope: !16919, file: !6455, line: 77, column: 2)
!16924 = !{i32 -2143867075, i32 -2143867046, i32 -2143867000, i32 -2143866942, i32 -2143866888, i32 -2143866834, i32 -2143866779, i32 -2143866748}
!16925 = !DILocation(line: 77, column: 2, scope: !16926)
!16926 = distinct !DILexicalBlock(scope: !16927, file: !6455, line: 77, column: 2)
!16927 = distinct !DILexicalBlock(scope: !16919, file: !6455, line: 77, column: 2)
!16928 = !{i32 -2143866290, i32 -2143866283, i32 -2143866229, i32 -2143866198, i32 -2143866168}
!16929 = !DILocation(line: 77, column: 2, scope: !16927)
!16930 = !DILocation(line: 79, column: 22, scope: !16905)
!16931 = !DILocation(line: 79, column: 2, scope: !16905)
!16932 = !DILocation(line: 79, column: 7, scope: !16905)
!16933 = !DILocation(line: 79, column: 20, scope: !16905)
!16934 = !DILocation(line: 86, column: 2, scope: !16905)
!16935 = !{i32 -2143866109}
!16936 = !DILocation(line: 88, column: 21, scope: !16905)
!16937 = !DILocation(line: 88, column: 2, scope: !16905)
!16938 = !DILocation(line: 88, column: 7, scope: !16905)
!16939 = !DILocation(line: 88, column: 18, scope: !16905)
!16940 = !DILocation(line: 89, column: 1, scope: !16905)
!16941 = distinct !DISubprogram(name: "dql_avail", scope: !6455, file: !6455, line: 92, type: !16942, scopeLine: 93, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!16942 = !DISubroutineType(types: !16943)
!16943 = !{!32, !16944}
!16944 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16945, size: 64)
!16945 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6454)
!16946 = !DILocalVariable(name: "dql", arg: 1, scope: !16941, file: !6455, line: 92, type: !16944)
!16947 = !DILocation(line: 92, column: 47, scope: !16941)
!16948 = !DILocation(line: 94, column: 9, scope: !16949)
!16949 = distinct !DILexicalBlock(scope: !16941, file: !6455, line: 94, column: 9)
!16950 = !DILocation(line: 94, column: 9, scope: !16951)
!16951 = distinct !DILexicalBlock(scope: !16949, file: !6455, line: 94, column: 9)
!16952 = !DILocation(line: 94, column: 37, scope: !16953)
!16953 = distinct !DILexicalBlock(scope: !16941, file: !6455, line: 94, column: 37)
!16954 = !DILocation(line: 94, column: 37, scope: !16955)
!16955 = distinct !DILexicalBlock(scope: !16953, file: !6455, line: 94, column: 37)
!16956 = !DILocation(line: 94, column: 35, scope: !16941)
!16957 = !DILocation(line: 94, column: 2, scope: !16941)
!16958 = distinct !DISubprogram(name: "genesis_set_multicast", scope: !3, file: !3, line: 2927, type: !406, scopeLine: 2928, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!16959 = !DILocalVariable(name: "dev", arg: 1, scope: !16958, file: !3, line: 2927, type: !290)
!16960 = !DILocation(line: 2927, column: 54, scope: !16958)
!16961 = !DILocalVariable(name: "skge", scope: !16958, file: !3, line: 2929, type: !9172)
!16962 = !DILocation(line: 2929, column: 20, scope: !16958)
!16963 = !DILocation(line: 2929, column: 39, scope: !16958)
!16964 = !DILocation(line: 2929, column: 27, scope: !16958)
!16965 = !DILocalVariable(name: "hw", scope: !16958, file: !3, line: 2930, type: !8794)
!16966 = !DILocation(line: 2930, column: 18, scope: !16958)
!16967 = !DILocation(line: 2930, column: 23, scope: !16958)
!16968 = !DILocation(line: 2930, column: 29, scope: !16958)
!16969 = !DILocalVariable(name: "port", scope: !16958, file: !3, line: 2931, type: !32)
!16970 = !DILocation(line: 2931, column: 6, scope: !16958)
!16971 = !DILocation(line: 2931, column: 13, scope: !16958)
!16972 = !DILocation(line: 2931, column: 19, scope: !16958)
!16973 = !DILocalVariable(name: "ha", scope: !16958, file: !3, line: 2932, type: !9153)
!16974 = !DILocation(line: 2932, column: 25, scope: !16958)
!16975 = !DILocalVariable(name: "mode", scope: !16958, file: !3, line: 2933, type: !987)
!16976 = !DILocation(line: 2933, column: 6, scope: !16958)
!16977 = !DILocalVariable(name: "filter", scope: !16958, file: !3, line: 2934, type: !16978)
!16978 = !DICompositeType(tag: DW_TAG_array_type, baseType: !794, size: 64, elements: !2433)
!16979 = !DILocation(line: 2934, column: 5, scope: !16958)
!16980 = !DILocation(line: 2936, column: 19, scope: !16958)
!16981 = !DILocation(line: 2936, column: 23, scope: !16958)
!16982 = !DILocation(line: 2936, column: 9, scope: !16958)
!16983 = !DILocation(line: 2936, column: 7, scope: !16958)
!16984 = !DILocation(line: 2937, column: 7, scope: !16958)
!16985 = !DILocation(line: 2938, column: 6, scope: !16986)
!16986 = distinct !DILexicalBlock(scope: !16958, file: !3, line: 2938, column: 6)
!16987 = !DILocation(line: 2938, column: 11, scope: !16986)
!16988 = !DILocation(line: 2938, column: 17, scope: !16986)
!16989 = !DILocation(line: 2938, column: 6, scope: !16958)
!16990 = !DILocation(line: 2939, column: 8, scope: !16986)
!16991 = !DILocation(line: 2939, column: 3, scope: !16986)
!16992 = !DILocation(line: 2941, column: 8, scope: !16986)
!16993 = !DILocation(line: 2943, column: 6, scope: !16994)
!16994 = distinct !DILexicalBlock(scope: !16958, file: !3, line: 2943, column: 6)
!16995 = !DILocation(line: 2943, column: 11, scope: !16994)
!16996 = !DILocation(line: 2943, column: 17, scope: !16994)
!16997 = !DILocation(line: 2943, column: 6, scope: !16958)
!16998 = !DILocation(line: 2944, column: 3, scope: !16994)
!16999 = !DILocation(line: 2946, column: 3, scope: !17000)
!17000 = distinct !DILexicalBlock(scope: !16994, file: !3, line: 2945, column: 7)
!17001 = !DILocation(line: 2948, column: 7, scope: !17002)
!17002 = distinct !DILexicalBlock(scope: !17000, file: !3, line: 2948, column: 7)
!17003 = !DILocation(line: 2948, column: 13, scope: !17002)
!17004 = !DILocation(line: 2948, column: 25, scope: !17002)
!17005 = !DILocation(line: 2948, column: 47, scope: !17002)
!17006 = !DILocation(line: 2949, column: 7, scope: !17002)
!17007 = !DILocation(line: 2949, column: 13, scope: !17002)
!17008 = !DILocation(line: 2949, column: 25, scope: !17002)
!17009 = !DILocation(line: 2948, column: 7, scope: !17000)
!17010 = !DILocation(line: 2950, column: 23, scope: !17002)
!17011 = !DILocation(line: 2950, column: 4, scope: !17002)
!17012 = !DILocalVariable(name: "__mptr", scope: !17013, file: !3, line: 2952, type: !591)
!17013 = distinct !DILexicalBlock(scope: !17014, file: !3, line: 2952, column: 3)
!17014 = distinct !DILexicalBlock(scope: !17000, file: !3, line: 2952, column: 3)
!17015 = !DILocation(line: 2952, column: 3, scope: !17013)
!17016 = !DILocation(line: 2952, column: 3, scope: !17017)
!17017 = distinct !DILexicalBlock(scope: !17013, file: !3, line: 2952, column: 3)
!17018 = !DILocation(line: 2952, column: 3, scope: !17014)
!17019 = !DILocation(line: 2952, column: 3, scope: !17020)
!17020 = distinct !DILexicalBlock(scope: !17014, file: !3, line: 2952, column: 3)
!17021 = !DILocation(line: 2953, column: 23, scope: !17020)
!17022 = !DILocation(line: 2953, column: 31, scope: !17020)
!17023 = !DILocation(line: 2953, column: 35, scope: !17020)
!17024 = !DILocation(line: 2953, column: 4, scope: !17020)
!17025 = !DILocalVariable(name: "__mptr", scope: !17026, file: !3, line: 2952, type: !591)
!17026 = distinct !DILexicalBlock(scope: !17020, file: !3, line: 2952, column: 3)
!17027 = !DILocation(line: 2952, column: 3, scope: !17026)
!17028 = !DILocation(line: 2952, column: 3, scope: !17029)
!17029 = distinct !DILexicalBlock(scope: !17026, file: !3, line: 2952, column: 3)
!17030 = distinct !{!17030, !17018, !17031}
!17031 = !DILocation(line: 2953, column: 39, scope: !17014)
!17032 = !DILocation(line: 2956, column: 13, scope: !16958)
!17033 = !DILocation(line: 2956, column: 17, scope: !16958)
!17034 = !DILocation(line: 2956, column: 32, scope: !16958)
!17035 = !DILocation(line: 2956, column: 2, scope: !16958)
!17036 = !DILocation(line: 2957, column: 13, scope: !16958)
!17037 = !DILocation(line: 2957, column: 17, scope: !16958)
!17038 = !DILocation(line: 2957, column: 31, scope: !16958)
!17039 = !DILocation(line: 2957, column: 2, scope: !16958)
!17040 = !DILocation(line: 2958, column: 1, scope: !16958)
!17041 = distinct !DISubprogram(name: "yukon_set_multicast", scope: !3, file: !3, line: 2966, type: !406, scopeLine: 2967, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!17042 = !DILocalVariable(name: "dev", arg: 1, scope: !17041, file: !3, line: 2966, type: !290)
!17043 = !DILocation(line: 2966, column: 52, scope: !17041)
!17044 = !DILocalVariable(name: "skge", scope: !17041, file: !3, line: 2968, type: !9172)
!17045 = !DILocation(line: 2968, column: 20, scope: !17041)
!17046 = !DILocation(line: 2968, column: 39, scope: !17041)
!17047 = !DILocation(line: 2968, column: 27, scope: !17041)
!17048 = !DILocalVariable(name: "hw", scope: !17041, file: !3, line: 2969, type: !8794)
!17049 = !DILocation(line: 2969, column: 18, scope: !17041)
!17050 = !DILocation(line: 2969, column: 23, scope: !17041)
!17051 = !DILocation(line: 2969, column: 29, scope: !17041)
!17052 = !DILocalVariable(name: "port", scope: !17041, file: !3, line: 2970, type: !32)
!17053 = !DILocation(line: 2970, column: 6, scope: !17041)
!17054 = !DILocation(line: 2970, column: 13, scope: !17041)
!17055 = !DILocation(line: 2970, column: 19, scope: !17041)
!17056 = !DILocalVariable(name: "ha", scope: !17041, file: !3, line: 2971, type: !9153)
!17057 = !DILocation(line: 2971, column: 25, scope: !17041)
!17058 = !DILocalVariable(name: "rx_pause", scope: !17041, file: !3, line: 2972, type: !32)
!17059 = !DILocation(line: 2972, column: 6, scope: !17041)
!17060 = !DILocation(line: 2972, column: 18, scope: !17041)
!17061 = !DILocation(line: 2972, column: 24, scope: !17041)
!17062 = !DILocation(line: 2972, column: 36, scope: !17041)
!17063 = !DILocation(line: 2972, column: 58, scope: !17041)
!17064 = !DILocation(line: 2973, column: 4, scope: !17041)
!17065 = !DILocation(line: 2973, column: 10, scope: !17041)
!17066 = !DILocation(line: 2973, column: 22, scope: !17041)
!17067 = !DILocalVariable(name: "reg", scope: !17041, file: !3, line: 2974, type: !581)
!17068 = !DILocation(line: 2974, column: 6, scope: !17041)
!17069 = !DILocalVariable(name: "filter", scope: !17041, file: !3, line: 2975, type: !16978)
!17070 = !DILocation(line: 2975, column: 5, scope: !17041)
!17071 = !DILocation(line: 2977, column: 2, scope: !17041)
!17072 = !DILocation(line: 2979, column: 19, scope: !17041)
!17073 = !DILocation(line: 2979, column: 23, scope: !17041)
!17074 = !DILocation(line: 2979, column: 8, scope: !17041)
!17075 = !DILocation(line: 2979, column: 6, scope: !17041)
!17076 = !DILocation(line: 2980, column: 6, scope: !17041)
!17077 = !DILocation(line: 2982, column: 6, scope: !17078)
!17078 = distinct !DILexicalBlock(scope: !17041, file: !3, line: 2982, column: 6)
!17079 = !DILocation(line: 2982, column: 11, scope: !17078)
!17080 = !DILocation(line: 2982, column: 17, scope: !17078)
!17081 = !DILocation(line: 2982, column: 6, scope: !17041)
!17082 = !DILocation(line: 2983, column: 7, scope: !17078)
!17083 = !DILocation(line: 2983, column: 3, scope: !17078)
!17084 = !DILocation(line: 2984, column: 11, scope: !17085)
!17085 = distinct !DILexicalBlock(scope: !17078, file: !3, line: 2984, column: 11)
!17086 = !DILocation(line: 2984, column: 16, scope: !17085)
!17087 = !DILocation(line: 2984, column: 22, scope: !17085)
!17088 = !DILocation(line: 2984, column: 11, scope: !17078)
!17089 = !DILocation(line: 2985, column: 3, scope: !17085)
!17090 = !DILocation(line: 2986, column: 11, scope: !17091)
!17091 = distinct !DILexicalBlock(scope: !17085, file: !3, line: 2986, column: 11)
!17092 = !DILocation(line: 2986, column: 32, scope: !17091)
!17093 = !DILocation(line: 2986, column: 36, scope: !17091)
!17094 = !DILocation(line: 2986, column: 11, scope: !17085)
!17095 = !DILocation(line: 2987, column: 7, scope: !17091)
!17096 = !DILocation(line: 2987, column: 3, scope: !17091)
!17097 = !DILocation(line: 2989, column: 7, scope: !17098)
!17098 = distinct !DILexicalBlock(scope: !17091, file: !3, line: 2988, column: 7)
!17099 = !DILocation(line: 2991, column: 7, scope: !17100)
!17100 = distinct !DILexicalBlock(scope: !17098, file: !3, line: 2991, column: 7)
!17101 = !DILocation(line: 2991, column: 7, scope: !17098)
!17102 = !DILocation(line: 2992, column: 21, scope: !17100)
!17103 = !DILocation(line: 2992, column: 4, scope: !17100)
!17104 = !DILocalVariable(name: "__mptr", scope: !17105, file: !3, line: 2994, type: !591)
!17105 = distinct !DILexicalBlock(scope: !17106, file: !3, line: 2994, column: 3)
!17106 = distinct !DILexicalBlock(scope: !17098, file: !3, line: 2994, column: 3)
!17107 = !DILocation(line: 2994, column: 3, scope: !17105)
!17108 = !DILocation(line: 2994, column: 3, scope: !17109)
!17109 = distinct !DILexicalBlock(scope: !17105, file: !3, line: 2994, column: 3)
!17110 = !DILocation(line: 2994, column: 3, scope: !17106)
!17111 = !DILocation(line: 2994, column: 3, scope: !17112)
!17112 = distinct !DILexicalBlock(scope: !17106, file: !3, line: 2994, column: 3)
!17113 = !DILocation(line: 2995, column: 21, scope: !17112)
!17114 = !DILocation(line: 2995, column: 29, scope: !17112)
!17115 = !DILocation(line: 2995, column: 33, scope: !17112)
!17116 = !DILocation(line: 2995, column: 4, scope: !17112)
!17117 = !DILocalVariable(name: "__mptr", scope: !17118, file: !3, line: 2994, type: !591)
!17118 = distinct !DILexicalBlock(scope: !17112, file: !3, line: 2994, column: 3)
!17119 = !DILocation(line: 2994, column: 3, scope: !17118)
!17120 = !DILocation(line: 2994, column: 3, scope: !17121)
!17121 = distinct !DILexicalBlock(scope: !17118, file: !3, line: 2994, column: 3)
!17122 = distinct !{!17122, !17110, !17123}
!17123 = !DILocation(line: 2995, column: 37, scope: !17106)
!17124 = !DILocation(line: 2999, column: 14, scope: !17041)
!17125 = !DILocation(line: 2999, column: 18, scope: !17041)
!17126 = !DILocation(line: 3000, column: 10, scope: !17041)
!17127 = !DILocation(line: 3000, column: 5, scope: !17041)
!17128 = !DILocation(line: 3000, column: 28, scope: !17041)
!17129 = !DILocation(line: 3000, column: 23, scope: !17041)
!17130 = !DILocation(line: 3000, column: 38, scope: !17041)
!17131 = !DILocation(line: 3000, column: 20, scope: !17041)
!17132 = !DILocation(line: 2999, column: 2, scope: !17041)
!17133 = !DILocation(line: 3001, column: 14, scope: !17041)
!17134 = !DILocation(line: 3001, column: 18, scope: !17041)
!17135 = !DILocation(line: 3002, column: 10, scope: !17041)
!17136 = !DILocation(line: 3002, column: 5, scope: !17041)
!17137 = !DILocation(line: 3002, column: 28, scope: !17041)
!17138 = !DILocation(line: 3002, column: 23, scope: !17041)
!17139 = !DILocation(line: 3002, column: 38, scope: !17041)
!17140 = !DILocation(line: 3002, column: 20, scope: !17041)
!17141 = !DILocation(line: 3001, column: 2, scope: !17041)
!17142 = !DILocation(line: 3003, column: 14, scope: !17041)
!17143 = !DILocation(line: 3003, column: 18, scope: !17041)
!17144 = !DILocation(line: 3004, column: 10, scope: !17041)
!17145 = !DILocation(line: 3004, column: 5, scope: !17041)
!17146 = !DILocation(line: 3004, column: 28, scope: !17041)
!17147 = !DILocation(line: 3004, column: 23, scope: !17041)
!17148 = !DILocation(line: 3004, column: 38, scope: !17041)
!17149 = !DILocation(line: 3004, column: 20, scope: !17041)
!17150 = !DILocation(line: 3003, column: 2, scope: !17041)
!17151 = !DILocation(line: 3005, column: 14, scope: !17041)
!17152 = !DILocation(line: 3005, column: 18, scope: !17041)
!17153 = !DILocation(line: 3006, column: 10, scope: !17041)
!17154 = !DILocation(line: 3006, column: 5, scope: !17041)
!17155 = !DILocation(line: 3006, column: 28, scope: !17041)
!17156 = !DILocation(line: 3006, column: 23, scope: !17041)
!17157 = !DILocation(line: 3006, column: 38, scope: !17041)
!17158 = !DILocation(line: 3006, column: 20, scope: !17041)
!17159 = !DILocation(line: 3005, column: 2, scope: !17041)
!17160 = !DILocation(line: 3008, column: 14, scope: !17041)
!17161 = !DILocation(line: 3008, column: 18, scope: !17041)
!17162 = !DILocation(line: 3008, column: 36, scope: !17041)
!17163 = !DILocation(line: 3008, column: 2, scope: !17041)
!17164 = !DILocation(line: 3009, column: 1, scope: !17041)
!17165 = distinct !DISubprogram(name: "genesis_add_filter", scope: !3, file: !3, line: 2918, type: !17166, scopeLine: 2919, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!17166 = !DISubroutineType(types: !17167)
!17167 = !{null, !793, !5859}
!17168 = !DILocalVariable(name: "filter", arg: 1, scope: !17165, file: !3, line: 2918, type: !793)
!17169 = !DILocation(line: 2918, column: 35, scope: !17165)
!17170 = !DILocalVariable(name: "addr", arg: 2, scope: !17165, file: !3, line: 2918, type: !5859)
!17171 = !DILocation(line: 2918, column: 56, scope: !17165)
!17172 = !DILocalVariable(name: "crc", scope: !17165, file: !3, line: 2920, type: !987)
!17173 = !DILocation(line: 2920, column: 6, scope: !17165)
!17174 = !DILocalVariable(name: "bit", scope: !17165, file: !3, line: 2920, type: !987)
!17175 = !DILocation(line: 2920, column: 11, scope: !17165)
!17176 = !DILocation(line: 2922, column: 8, scope: !17165)
!17177 = !DILocation(line: 2922, column: 6, scope: !17165)
!17178 = !DILocation(line: 2923, column: 9, scope: !17165)
!17179 = !DILocation(line: 2923, column: 8, scope: !17165)
!17180 = !DILocation(line: 2923, column: 13, scope: !17165)
!17181 = !DILocation(line: 2923, column: 6, scope: !17165)
!17182 = !DILocation(line: 2924, column: 25, scope: !17165)
!17183 = !DILocation(line: 2924, column: 28, scope: !17165)
!17184 = !DILocation(line: 2924, column: 21, scope: !17165)
!17185 = !DILocation(line: 2924, column: 2, scope: !17165)
!17186 = !DILocation(line: 2924, column: 9, scope: !17165)
!17187 = !DILocation(line: 2924, column: 12, scope: !17165)
!17188 = !DILocation(line: 2924, column: 16, scope: !17165)
!17189 = !DILocation(line: 2925, column: 1, scope: !17165)
!17190 = distinct !DISubprogram(name: "yukon_add_filter", scope: !3, file: !3, line: 2960, type: !17166, scopeLine: 2961, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!17191 = !DILocalVariable(name: "filter", arg: 1, scope: !17190, file: !3, line: 2960, type: !793)
!17192 = !DILocation(line: 2960, column: 33, scope: !17190)
!17193 = !DILocalVariable(name: "addr", arg: 2, scope: !17190, file: !3, line: 2960, type: !5859)
!17194 = !DILocation(line: 2960, column: 54, scope: !17190)
!17195 = !DILocalVariable(name: "bit", scope: !17190, file: !3, line: 2962, type: !987)
!17196 = !DILocation(line: 2962, column: 7, scope: !17190)
!17197 = !DILocalVariable(name: "__x", scope: !17198, file: !3, line: 2962, type: !987)
!17198 = distinct !DILexicalBlock(scope: !17190, file: !3, line: 2962, column: 13)
!17199 = !DILocation(line: 2962, column: 13, scope: !17198)
!17200 = !DILocalVariable(name: "___x", scope: !17201, file: !3, line: 2962, type: !987)
!17201 = distinct !DILexicalBlock(scope: !17198, file: !3, line: 2962, column: 13)
!17202 = !DILocation(line: 2962, column: 13, scope: !17201)
!17203 = !DILocation(line: 2962, column: 39, scope: !17190)
!17204 = !DILocation(line: 2963, column: 26, scope: !17190)
!17205 = !DILocation(line: 2963, column: 29, scope: !17190)
!17206 = !DILocation(line: 2963, column: 22, scope: !17190)
!17207 = !DILocation(line: 2963, column: 3, scope: !17190)
!17208 = !DILocation(line: 2963, column: 10, scope: !17190)
!17209 = !DILocation(line: 2963, column: 13, scope: !17190)
!17210 = !DILocation(line: 2963, column: 17, scope: !17190)
!17211 = !DILocation(line: 2964, column: 1, scope: !17190)
!17212 = distinct !DISubprogram(name: "__bitrev32", scope: !17213, file: !17213, line: 26, type: !17214, scopeLine: 27, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!17213 = !DIFile(filename: "./include/linux/bitrev.h", directory: "/home/lizy2001/genbc/linux")
!17214 = !DISubroutineType(types: !17215)
!17215 = !{!987, !987}
!17216 = !DILocalVariable(name: "x", arg: 1, scope: !17212, file: !17213, line: 26, type: !987)
!17217 = !DILocation(line: 26, column: 34, scope: !17212)
!17218 = !DILocation(line: 28, column: 21, scope: !17212)
!17219 = !DILocation(line: 28, column: 23, scope: !17212)
!17220 = !DILocation(line: 28, column: 10, scope: !17212)
!17221 = !DILocation(line: 28, column: 33, scope: !17212)
!17222 = !DILocation(line: 28, column: 53, scope: !17212)
!17223 = !DILocation(line: 28, column: 55, scope: !17212)
!17224 = !DILocation(line: 28, column: 42, scope: !17212)
!17225 = !DILocation(line: 28, column: 40, scope: !17212)
!17226 = !DILocation(line: 28, column: 2, scope: !17212)
!17227 = distinct !DISubprogram(name: "__bitrev16", scope: !17213, file: !17213, line: 21, type: !17228, scopeLine: 22, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!17228 = !DISubroutineType(types: !17229)
!17229 = !{!581, !581}
!17230 = !DILocalVariable(name: "x", arg: 1, scope: !17227, file: !17213, line: 21, type: !581)
!17231 = !DILocation(line: 21, column: 34, scope: !17227)
!17232 = !DILocation(line: 23, column: 20, scope: !17227)
!17233 = !DILocation(line: 23, column: 22, scope: !17227)
!17234 = !DILocation(line: 23, column: 10, scope: !17227)
!17235 = !DILocation(line: 23, column: 30, scope: !17227)
!17236 = !DILocation(line: 23, column: 48, scope: !17227)
!17237 = !DILocation(line: 23, column: 50, scope: !17227)
!17238 = !DILocation(line: 23, column: 38, scope: !17227)
!17239 = !DILocation(line: 23, column: 36, scope: !17227)
!17240 = !DILocation(line: 23, column: 9, scope: !17227)
!17241 = !DILocation(line: 23, column: 2, scope: !17227)
!17242 = distinct !DISubprogram(name: "__bitrev8", scope: !17213, file: !17213, line: 16, type: !17243, scopeLine: 17, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!17243 = !DISubroutineType(types: !17244)
!17244 = !{!794, !794}
!17245 = !DILocalVariable(name: "byte", arg: 1, scope: !17242, file: !17213, line: 16, type: !794)
!17246 = !DILocation(line: 16, column: 31, scope: !17242)
!17247 = !DILocation(line: 18, column: 24, scope: !17242)
!17248 = !DILocation(line: 18, column: 9, scope: !17242)
!17249 = !DILocation(line: 18, column: 2, scope: !17242)
!17250 = distinct !DISubprogram(name: "if_mii", scope: !17251, file: !17251, line: 51, type: !17252, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!17251 = !DIFile(filename: "./include/linux/mii.h", directory: "/home/lizy2001/genbc/linux")
!17252 = !DISubroutineType(types: !17253)
!17253 = !{!9164, !597}
!17254 = !DILocalVariable(name: "rq", arg: 1, scope: !17250, file: !17251, line: 51, type: !597)
!17255 = !DILocation(line: 51, column: 59, scope: !17250)
!17256 = !DILocation(line: 53, column: 36, scope: !17250)
!17257 = !DILocation(line: 53, column: 40, scope: !17250)
!17258 = !DILocation(line: 53, column: 9, scope: !17250)
!17259 = !DILocation(line: 53, column: 2, scope: !17250)
!17260 = distinct !DISubprogram(name: "genesis_get_stats", scope: !3, file: !3, line: 1732, type: !17261, scopeLine: 1733, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!17261 = !DISubroutineType(types: !17262)
!17262 = !{null, !9172, !5371}
!17263 = !DILocalVariable(name: "skge", arg: 1, scope: !17260, file: !3, line: 1732, type: !9172)
!17264 = !DILocation(line: 1732, column: 49, scope: !17260)
!17265 = !DILocalVariable(name: "data", arg: 2, scope: !17260, file: !3, line: 1732, type: !5371)
!17266 = !DILocation(line: 1732, column: 60, scope: !17260)
!17267 = !DILocalVariable(name: "hw", scope: !17260, file: !3, line: 1734, type: !8794)
!17268 = !DILocation(line: 1734, column: 18, scope: !17260)
!17269 = !DILocation(line: 1734, column: 23, scope: !17260)
!17270 = !DILocation(line: 1734, column: 29, scope: !17260)
!17271 = !DILocalVariable(name: "port", scope: !17260, file: !3, line: 1735, type: !32)
!17272 = !DILocation(line: 1735, column: 6, scope: !17260)
!17273 = !DILocation(line: 1735, column: 13, scope: !17260)
!17274 = !DILocation(line: 1735, column: 19, scope: !17260)
!17275 = !DILocalVariable(name: "i", scope: !17260, file: !3, line: 1736, type: !32)
!17276 = !DILocation(line: 1736, column: 6, scope: !17260)
!17277 = !DILocalVariable(name: "timeout", scope: !17260, file: !3, line: 1737, type: !312)
!17278 = !DILocation(line: 1737, column: 16, scope: !17260)
!17279 = !DILocation(line: 1737, column: 26, scope: !17260)
!17280 = !DILocation(line: 1737, column: 34, scope: !17260)
!17281 = !DILocation(line: 1739, column: 13, scope: !17260)
!17282 = !DILocation(line: 1739, column: 17, scope: !17260)
!17283 = !DILocation(line: 1739, column: 2, scope: !17260)
!17284 = !DILocation(line: 1743, column: 2, scope: !17260)
!17285 = !DILocation(line: 1743, column: 19, scope: !17260)
!17286 = !DILocation(line: 1743, column: 23, scope: !17260)
!17287 = !DILocation(line: 1743, column: 9, scope: !17260)
!17288 = !DILocation(line: 1744, column: 9, scope: !17260)
!17289 = !DILocation(line: 1745, column: 7, scope: !17290)
!17290 = distinct !DILexicalBlock(scope: !17291, file: !3, line: 1745, column: 7)
!17291 = distinct !DILexicalBlock(scope: !17260, file: !3, line: 1744, column: 44)
!17292 = !DILocation(line: 1745, column: 7, scope: !17291)
!17293 = !DILocation(line: 1746, column: 4, scope: !17290)
!17294 = !DILocation(line: 1747, column: 3, scope: !17295)
!17295 = distinct !DILexicalBlock(scope: !17296, file: !3, line: 1747, column: 3)
!17296 = distinct !DILexicalBlock(scope: !17297, file: !3, line: 1747, column: 3)
!17297 = distinct !DILexicalBlock(scope: !17298, file: !3, line: 1747, column: 3)
!17298 = distinct !DILexicalBlock(scope: !17291, file: !3, line: 1747, column: 3)
!17299 = distinct !{!17299, !17284, !17300}
!17300 = !DILocation(line: 1748, column: 2, scope: !17260)
!17301 = !DILocation(line: 1751, column: 28, scope: !17260)
!17302 = !DILocation(line: 1751, column: 32, scope: !17260)
!17303 = !DILocation(line: 1751, column: 18, scope: !17260)
!17304 = !DILocation(line: 1751, column: 12, scope: !17260)
!17305 = !DILocation(line: 1751, column: 52, scope: !17260)
!17306 = !DILocation(line: 1752, column: 15, scope: !17260)
!17307 = !DILocation(line: 1752, column: 19, scope: !17260)
!17308 = !DILocation(line: 1752, column: 5, scope: !17260)
!17309 = !DILocation(line: 1752, column: 3, scope: !17260)
!17310 = !DILocation(line: 1751, column: 2, scope: !17260)
!17311 = !DILocation(line: 1751, column: 10, scope: !17260)
!17312 = !DILocation(line: 1753, column: 28, scope: !17260)
!17313 = !DILocation(line: 1753, column: 32, scope: !17260)
!17314 = !DILocation(line: 1753, column: 18, scope: !17260)
!17315 = !DILocation(line: 1753, column: 12, scope: !17260)
!17316 = !DILocation(line: 1753, column: 52, scope: !17260)
!17317 = !DILocation(line: 1754, column: 15, scope: !17260)
!17318 = !DILocation(line: 1754, column: 19, scope: !17260)
!17319 = !DILocation(line: 1754, column: 5, scope: !17260)
!17320 = !DILocation(line: 1754, column: 3, scope: !17260)
!17321 = !DILocation(line: 1753, column: 2, scope: !17260)
!17322 = !DILocation(line: 1753, column: 10, scope: !17260)
!17323 = !DILocation(line: 1756, column: 9, scope: !17324)
!17324 = distinct !DILexicalBlock(scope: !17260, file: !3, line: 1756, column: 2)
!17325 = !DILocation(line: 1756, column: 7, scope: !17324)
!17326 = !DILocation(line: 1756, column: 14, scope: !17327)
!17327 = distinct !DILexicalBlock(scope: !17324, file: !3, line: 1756, column: 2)
!17328 = !DILocation(line: 1756, column: 16, scope: !17327)
!17329 = !DILocation(line: 1756, column: 2, scope: !17324)
!17330 = !DILocation(line: 1757, column: 23, scope: !17327)
!17331 = !DILocation(line: 1757, column: 27, scope: !17327)
!17332 = !DILocation(line: 1757, column: 44, scope: !17327)
!17333 = !DILocation(line: 1757, column: 33, scope: !17327)
!17334 = !DILocation(line: 1757, column: 47, scope: !17327)
!17335 = !DILocation(line: 1757, column: 13, scope: !17327)
!17336 = !DILocation(line: 1757, column: 3, scope: !17327)
!17337 = !DILocation(line: 1757, column: 8, scope: !17327)
!17338 = !DILocation(line: 1757, column: 11, scope: !17327)
!17339 = !DILocation(line: 1756, column: 43, scope: !17327)
!17340 = !DILocation(line: 1756, column: 2, scope: !17327)
!17341 = distinct !{!17341, !17329, !17342}
!17342 = !DILocation(line: 1757, column: 58, scope: !17324)
!17343 = !DILocation(line: 1758, column: 1, scope: !17260)
!17344 = distinct !DISubprogram(name: "yukon_get_stats", scope: !3, file: !3, line: 2246, type: !17261, scopeLine: 2247, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!17345 = !DILocalVariable(name: "skge", arg: 1, scope: !17344, file: !3, line: 2246, type: !9172)
!17346 = !DILocation(line: 2246, column: 47, scope: !17344)
!17347 = !DILocalVariable(name: "data", arg: 2, scope: !17344, file: !3, line: 2246, type: !5371)
!17348 = !DILocation(line: 2246, column: 58, scope: !17344)
!17349 = !DILocalVariable(name: "hw", scope: !17344, file: !3, line: 2248, type: !8794)
!17350 = !DILocation(line: 2248, column: 18, scope: !17344)
!17351 = !DILocation(line: 2248, column: 23, scope: !17344)
!17352 = !DILocation(line: 2248, column: 29, scope: !17344)
!17353 = !DILocalVariable(name: "port", scope: !17344, file: !3, line: 2249, type: !32)
!17354 = !DILocation(line: 2249, column: 6, scope: !17344)
!17355 = !DILocation(line: 2249, column: 13, scope: !17344)
!17356 = !DILocation(line: 2249, column: 19, scope: !17344)
!17357 = !DILocalVariable(name: "i", scope: !17344, file: !3, line: 2250, type: !32)
!17358 = !DILocation(line: 2250, column: 6, scope: !17344)
!17359 = !DILocation(line: 2252, column: 29, scope: !17344)
!17360 = !DILocation(line: 2252, column: 33, scope: !17344)
!17361 = !DILocation(line: 2252, column: 18, scope: !17344)
!17362 = !DILocation(line: 2252, column: 12, scope: !17344)
!17363 = !DILocation(line: 2252, column: 53, scope: !17344)
!17364 = !DILocation(line: 2253, column: 16, scope: !17344)
!17365 = !DILocation(line: 2253, column: 20, scope: !17344)
!17366 = !DILocation(line: 2253, column: 5, scope: !17344)
!17367 = !DILocation(line: 2253, column: 3, scope: !17344)
!17368 = !DILocation(line: 2252, column: 2, scope: !17344)
!17369 = !DILocation(line: 2252, column: 10, scope: !17344)
!17370 = !DILocation(line: 2254, column: 29, scope: !17344)
!17371 = !DILocation(line: 2254, column: 33, scope: !17344)
!17372 = !DILocation(line: 2254, column: 18, scope: !17344)
!17373 = !DILocation(line: 2254, column: 12, scope: !17344)
!17374 = !DILocation(line: 2254, column: 53, scope: !17344)
!17375 = !DILocation(line: 2255, column: 16, scope: !17344)
!17376 = !DILocation(line: 2255, column: 20, scope: !17344)
!17377 = !DILocation(line: 2255, column: 5, scope: !17344)
!17378 = !DILocation(line: 2255, column: 3, scope: !17344)
!17379 = !DILocation(line: 2254, column: 2, scope: !17344)
!17380 = !DILocation(line: 2254, column: 10, scope: !17344)
!17381 = !DILocation(line: 2257, column: 9, scope: !17382)
!17382 = distinct !DILexicalBlock(scope: !17344, file: !3, line: 2257, column: 2)
!17383 = !DILocation(line: 2257, column: 7, scope: !17382)
!17384 = !DILocation(line: 2257, column: 14, scope: !17385)
!17385 = distinct !DILexicalBlock(scope: !17382, file: !3, line: 2257, column: 2)
!17386 = !DILocation(line: 2257, column: 16, scope: !17385)
!17387 = !DILocation(line: 2257, column: 2, scope: !17382)
!17388 = !DILocation(line: 2258, column: 24, scope: !17385)
!17389 = !DILocation(line: 2258, column: 28, scope: !17385)
!17390 = !DILocation(line: 2259, column: 19, scope: !17385)
!17391 = !DILocation(line: 2259, column: 8, scope: !17385)
!17392 = !DILocation(line: 2259, column: 22, scope: !17385)
!17393 = !DILocation(line: 2258, column: 13, scope: !17385)
!17394 = !DILocation(line: 2258, column: 3, scope: !17385)
!17395 = !DILocation(line: 2258, column: 8, scope: !17385)
!17396 = !DILocation(line: 2258, column: 11, scope: !17385)
!17397 = !DILocation(line: 2257, column: 43, scope: !17385)
!17398 = !DILocation(line: 2257, column: 2, scope: !17385)
!17399 = distinct !{!17399, !17387, !17400}
!17400 = !DILocation(line: 2259, column: 32, scope: !17382)
!17401 = !DILocation(line: 2260, column: 1, scope: !17344)
!17402 = distinct !DISubprogram(name: "gma_read32", scope: !7053, file: !7053, line: 2560, type: !12532, scopeLine: 2561, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!17403 = !DILocalVariable(name: "hw", arg: 1, scope: !17402, file: !7053, line: 2560, type: !9407)
!17404 = !DILocation(line: 2560, column: 52, scope: !17402)
!17405 = !DILocalVariable(name: "port", arg: 2, scope: !17402, file: !7053, line: 2560, type: !32)
!17406 = !DILocation(line: 2560, column: 60, scope: !17402)
!17407 = !DILocalVariable(name: "reg", arg: 3, scope: !17402, file: !7053, line: 2560, type: !32)
!17408 = !DILocation(line: 2560, column: 70, scope: !17402)
!17409 = !DILocation(line: 2562, column: 27, scope: !17402)
!17410 = !DILocation(line: 2562, column: 31, scope: !17402)
!17411 = !DILocation(line: 2562, column: 15, scope: !17402)
!17412 = !DILocation(line: 2562, column: 9, scope: !17402)
!17413 = !DILocation(line: 2563, column: 23, scope: !17402)
!17414 = !DILocation(line: 2563, column: 27, scope: !17402)
!17415 = !DILocation(line: 2563, column: 11, scope: !17402)
!17416 = !DILocation(line: 2563, column: 6, scope: !17402)
!17417 = !DILocation(line: 2563, column: 52, scope: !17402)
!17418 = !DILocation(line: 2563, column: 3, scope: !17402)
!17419 = !DILocation(line: 2562, column: 2, scope: !17402)
!17420 = distinct !DISubprogram(name: "skge_get_drvinfo", scope: !3, file: !3, line: 393, type: !5526, scopeLine: 395, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!17421 = !DILocalVariable(name: "dev", arg: 1, scope: !17420, file: !3, line: 393, type: !290)
!17422 = !DILocation(line: 393, column: 49, scope: !17420)
!17423 = !DILocalVariable(name: "info", arg: 2, scope: !17420, file: !3, line: 394, type: !5528)
!17424 = !DILocation(line: 394, column: 33, scope: !17420)
!17425 = !DILocalVariable(name: "skge", scope: !17420, file: !3, line: 396, type: !9172)
!17426 = !DILocation(line: 396, column: 20, scope: !17420)
!17427 = !DILocation(line: 396, column: 39, scope: !17420)
!17428 = !DILocation(line: 396, column: 27, scope: !17420)
!17429 = !DILocation(line: 398, column: 10, scope: !17420)
!17430 = !DILocation(line: 398, column: 16, scope: !17420)
!17431 = !DILocation(line: 398, column: 2, scope: !17420)
!17432 = !DILocation(line: 399, column: 10, scope: !17420)
!17433 = !DILocation(line: 399, column: 16, scope: !17420)
!17434 = !DILocation(line: 399, column: 2, scope: !17420)
!17435 = !DILocation(line: 400, column: 10, scope: !17420)
!17436 = !DILocation(line: 400, column: 16, scope: !17420)
!17437 = !DILocation(line: 400, column: 35, scope: !17420)
!17438 = !DILocation(line: 400, column: 41, scope: !17420)
!17439 = !DILocation(line: 400, column: 45, scope: !17420)
!17440 = !DILocation(line: 400, column: 26, scope: !17420)
!17441 = !DILocation(line: 400, column: 2, scope: !17420)
!17442 = !DILocation(line: 402, column: 1, scope: !17420)
!17443 = distinct !DISubprogram(name: "skge_get_regs_len", scope: !3, file: !3, line: 123, type: !402, scopeLine: 124, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!17444 = !DILocalVariable(name: "dev", arg: 1, scope: !17443, file: !3, line: 123, type: !290)
!17445 = !DILocation(line: 123, column: 49, scope: !17443)
!17446 = !DILocation(line: 125, column: 2, scope: !17443)
!17447 = distinct !DISubprogram(name: "skge_get_regs", scope: !3, file: !3, line: 133, type: !5547, scopeLine: 135, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!17448 = !DILocalVariable(name: "dev", arg: 1, scope: !17447, file: !3, line: 133, type: !290)
!17449 = !DILocation(line: 133, column: 46, scope: !17447)
!17450 = !DILocalVariable(name: "regs", arg: 2, scope: !17447, file: !3, line: 133, type: !5549)
!17451 = !DILocation(line: 133, column: 72, scope: !17447)
!17452 = !DILocalVariable(name: "p", arg: 3, scope: !17447, file: !3, line: 134, type: !591)
!17453 = !DILocation(line: 134, column: 12, scope: !17447)
!17454 = !DILocalVariable(name: "skge", scope: !17447, file: !3, line: 136, type: !10806)
!17455 = !DILocation(line: 136, column: 26, scope: !17447)
!17456 = !DILocation(line: 136, column: 45, scope: !17447)
!17457 = !DILocation(line: 136, column: 33, scope: !17447)
!17458 = !DILocalVariable(name: "io", scope: !17447, file: !3, line: 137, type: !3257)
!17459 = !DILocation(line: 137, column: 22, scope: !17447)
!17460 = !DILocation(line: 137, column: 27, scope: !17447)
!17461 = !DILocation(line: 137, column: 33, scope: !17447)
!17462 = !DILocation(line: 137, column: 37, scope: !17447)
!17463 = !DILocation(line: 139, column: 2, scope: !17447)
!17464 = !DILocation(line: 139, column: 8, scope: !17447)
!17465 = !DILocation(line: 139, column: 16, scope: !17447)
!17466 = !DILocation(line: 140, column: 9, scope: !17447)
!17467 = !DILocation(line: 140, column: 15, scope: !17447)
!17468 = !DILocation(line: 140, column: 21, scope: !17447)
!17469 = !DILocation(line: 140, column: 2, scope: !17447)
!17470 = !DILocation(line: 141, column: 16, scope: !17447)
!17471 = !DILocation(line: 141, column: 19, scope: !17447)
!17472 = !DILocation(line: 141, column: 2, scope: !17447)
!17473 = !DILocation(line: 143, column: 6, scope: !17474)
!17474 = distinct !DILexicalBlock(scope: !17447, file: !3, line: 143, column: 6)
!17475 = !DILocation(line: 143, column: 12, scope: !17474)
!17476 = !DILocation(line: 143, column: 16, scope: !17474)
!17477 = !DILocation(line: 143, column: 6, scope: !17447)
!17478 = !DILocation(line: 144, column: 17, scope: !17479)
!17479 = distinct !DILexicalBlock(scope: !17474, file: !3, line: 143, column: 32)
!17480 = !DILocation(line: 144, column: 19, scope: !17479)
!17481 = !DILocation(line: 144, column: 35, scope: !17479)
!17482 = !DILocation(line: 144, column: 38, scope: !17479)
!17483 = !DILocation(line: 145, column: 10, scope: !17479)
!17484 = !DILocation(line: 145, column: 16, scope: !17479)
!17485 = !DILocation(line: 145, column: 20, scope: !17479)
!17486 = !DILocation(line: 144, column: 3, scope: !17479)
!17487 = !DILocation(line: 146, column: 2, scope: !17479)
!17488 = !DILocation(line: 147, column: 1, scope: !17447)
!17489 = distinct !DISubprogram(name: "skge_get_wol", scope: !3, file: !3, line: 235, type: !5558, scopeLine: 236, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!17490 = !DILocalVariable(name: "dev", arg: 1, scope: !17489, file: !3, line: 235, type: !290)
!17491 = !DILocation(line: 235, column: 45, scope: !17489)
!17492 = !DILocalVariable(name: "wol", arg: 2, scope: !17489, file: !3, line: 235, type: !5560)
!17493 = !DILocation(line: 235, column: 74, scope: !17489)
!17494 = !DILocalVariable(name: "skge", scope: !17489, file: !3, line: 237, type: !9172)
!17495 = !DILocation(line: 237, column: 20, scope: !17489)
!17496 = !DILocation(line: 237, column: 39, scope: !17489)
!17497 = !DILocation(line: 237, column: 27, scope: !17489)
!17498 = !DILocation(line: 239, column: 33, scope: !17489)
!17499 = !DILocation(line: 239, column: 39, scope: !17489)
!17500 = !DILocation(line: 239, column: 19, scope: !17489)
!17501 = !DILocation(line: 239, column: 2, scope: !17489)
!17502 = !DILocation(line: 239, column: 7, scope: !17489)
!17503 = !DILocation(line: 239, column: 17, scope: !17489)
!17504 = !DILocation(line: 240, column: 17, scope: !17489)
!17505 = !DILocation(line: 240, column: 23, scope: !17489)
!17506 = !DILocation(line: 240, column: 2, scope: !17489)
!17507 = !DILocation(line: 240, column: 7, scope: !17489)
!17508 = !DILocation(line: 240, column: 15, scope: !17489)
!17509 = !DILocation(line: 241, column: 1, scope: !17489)
!17510 = distinct !DISubprogram(name: "skge_set_wol", scope: !3, file: !3, line: 243, type: !5570, scopeLine: 244, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!17511 = !DILocalVariable(name: "dev", arg: 1, scope: !17510, file: !3, line: 243, type: !290)
!17512 = !DILocation(line: 243, column: 44, scope: !17510)
!17513 = !DILocalVariable(name: "wol", arg: 2, scope: !17510, file: !3, line: 243, type: !5560)
!17514 = !DILocation(line: 243, column: 73, scope: !17510)
!17515 = !DILocalVariable(name: "skge", scope: !17510, file: !3, line: 245, type: !9172)
!17516 = !DILocation(line: 245, column: 20, scope: !17510)
!17517 = !DILocation(line: 245, column: 39, scope: !17510)
!17518 = !DILocation(line: 245, column: 27, scope: !17510)
!17519 = !DILocalVariable(name: "hw", scope: !17510, file: !3, line: 246, type: !8794)
!17520 = !DILocation(line: 246, column: 18, scope: !17510)
!17521 = !DILocation(line: 246, column: 23, scope: !17510)
!17522 = !DILocation(line: 246, column: 29, scope: !17510)
!17523 = !DILocation(line: 248, column: 7, scope: !17524)
!17524 = distinct !DILexicalBlock(scope: !17510, file: !3, line: 248, column: 6)
!17525 = !DILocation(line: 248, column: 12, scope: !17524)
!17526 = !DILocation(line: 248, column: 37, scope: !17524)
!17527 = !DILocation(line: 248, column: 23, scope: !17524)
!17528 = !DILocation(line: 248, column: 22, scope: !17524)
!17529 = !DILocation(line: 248, column: 20, scope: !17524)
!17530 = !DILocation(line: 248, column: 42, scope: !17524)
!17531 = !DILocation(line: 249, column: 26, scope: !17524)
!17532 = !DILocation(line: 249, column: 30, scope: !17524)
!17533 = !DILocation(line: 249, column: 36, scope: !17524)
!17534 = !DILocation(line: 249, column: 7, scope: !17524)
!17535 = !DILocation(line: 248, column: 6, scope: !17510)
!17536 = !DILocation(line: 250, column: 3, scope: !17524)
!17537 = !DILocation(line: 252, column: 14, scope: !17510)
!17538 = !DILocation(line: 252, column: 19, scope: !17510)
!17539 = !DILocation(line: 252, column: 2, scope: !17510)
!17540 = !DILocation(line: 252, column: 8, scope: !17510)
!17541 = !DILocation(line: 252, column: 12, scope: !17510)
!17542 = !DILocation(line: 254, column: 28, scope: !17510)
!17543 = !DILocation(line: 254, column: 32, scope: !17510)
!17544 = !DILocation(line: 254, column: 38, scope: !17510)
!17545 = !DILocation(line: 254, column: 43, scope: !17510)
!17546 = !DILocation(line: 254, column: 49, scope: !17510)
!17547 = !DILocation(line: 254, column: 2, scope: !17510)
!17548 = !DILocation(line: 256, column: 2, scope: !17510)
!17549 = !DILocation(line: 257, column: 1, scope: !17510)
!17550 = distinct !DISubprogram(name: "skge_get_msglevel", scope: !3, file: !3, line: 529, type: !5574, scopeLine: 530, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!17551 = !DILocalVariable(name: "netdev", arg: 1, scope: !17550, file: !3, line: 529, type: !290)
!17552 = !DILocation(line: 529, column: 49, scope: !17550)
!17553 = !DILocalVariable(name: "skge", scope: !17550, file: !3, line: 531, type: !9172)
!17554 = !DILocation(line: 531, column: 20, scope: !17550)
!17555 = !DILocation(line: 531, column: 39, scope: !17550)
!17556 = !DILocation(line: 531, column: 27, scope: !17550)
!17557 = !DILocation(line: 532, column: 9, scope: !17550)
!17558 = !DILocation(line: 532, column: 15, scope: !17550)
!17559 = !DILocation(line: 532, column: 2, scope: !17550)
!17560 = distinct !DISubprogram(name: "skge_set_msglevel", scope: !3, file: !3, line: 535, type: !5578, scopeLine: 536, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!17561 = !DILocalVariable(name: "netdev", arg: 1, scope: !17560, file: !3, line: 535, type: !290)
!17562 = !DILocation(line: 535, column: 50, scope: !17560)
!17563 = !DILocalVariable(name: "value", arg: 2, scope: !17560, file: !3, line: 535, type: !987)
!17564 = !DILocation(line: 535, column: 62, scope: !17560)
!17565 = !DILocalVariable(name: "skge", scope: !17560, file: !3, line: 537, type: !9172)
!17566 = !DILocation(line: 537, column: 20, scope: !17560)
!17567 = !DILocation(line: 537, column: 39, scope: !17560)
!17568 = !DILocation(line: 537, column: 27, scope: !17560)
!17569 = !DILocation(line: 538, column: 21, scope: !17560)
!17570 = !DILocation(line: 538, column: 2, scope: !17560)
!17571 = !DILocation(line: 538, column: 8, scope: !17560)
!17572 = !DILocation(line: 538, column: 19, scope: !17560)
!17573 = !DILocation(line: 539, column: 1, scope: !17560)
!17574 = distinct !DISubprogram(name: "skge_nway_reset", scope: !3, file: !3, line: 541, type: !402, scopeLine: 542, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!17575 = !DILocalVariable(name: "dev", arg: 1, scope: !17574, file: !3, line: 541, type: !290)
!17576 = !DILocation(line: 541, column: 47, scope: !17574)
!17577 = !DILocalVariable(name: "skge", scope: !17574, file: !3, line: 543, type: !9172)
!17578 = !DILocation(line: 543, column: 20, scope: !17574)
!17579 = !DILocation(line: 543, column: 39, scope: !17574)
!17580 = !DILocation(line: 543, column: 27, scope: !17574)
!17581 = !DILocation(line: 545, column: 6, scope: !17582)
!17582 = distinct !DILexicalBlock(scope: !17574, file: !3, line: 545, column: 6)
!17583 = !DILocation(line: 545, column: 12, scope: !17582)
!17584 = !DILocation(line: 545, column: 20, scope: !17582)
!17585 = !DILocation(line: 545, column: 38, scope: !17582)
!17586 = !DILocation(line: 545, column: 56, scope: !17582)
!17587 = !DILocation(line: 545, column: 42, scope: !17582)
!17588 = !DILocation(line: 545, column: 6, scope: !17574)
!17589 = !DILocation(line: 546, column: 3, scope: !17582)
!17590 = !DILocation(line: 548, column: 17, scope: !17574)
!17591 = !DILocation(line: 548, column: 2, scope: !17574)
!17592 = !DILocation(line: 549, column: 2, scope: !17574)
!17593 = !DILocation(line: 550, column: 1, scope: !17574)
!17594 = distinct !DISubprogram(name: "skge_get_eeprom_len", scope: !3, file: !3, line: 786, type: !402, scopeLine: 787, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!17595 = !DILocalVariable(name: "dev", arg: 1, scope: !17594, file: !3, line: 786, type: !290)
!17596 = !DILocation(line: 786, column: 51, scope: !17594)
!17597 = !DILocalVariable(name: "skge", scope: !17594, file: !3, line: 788, type: !9172)
!17598 = !DILocation(line: 788, column: 20, scope: !17594)
!17599 = !DILocation(line: 788, column: 39, scope: !17594)
!17600 = !DILocation(line: 788, column: 27, scope: !17594)
!17601 = !DILocalVariable(name: "reg2", scope: !17594, file: !3, line: 789, type: !987)
!17602 = !DILocation(line: 789, column: 6, scope: !17594)
!17603 = !DILocation(line: 791, column: 24, scope: !17594)
!17604 = !DILocation(line: 791, column: 30, scope: !17594)
!17605 = !DILocation(line: 791, column: 34, scope: !17594)
!17606 = !DILocation(line: 791, column: 2, scope: !17594)
!17607 = !DILocation(line: 792, column: 17, scope: !17594)
!17608 = !DILocation(line: 792, column: 22, scope: !17594)
!17609 = !DILocation(line: 792, column: 40, scope: !17594)
!17610 = !DILocation(line: 792, column: 47, scope: !17594)
!17611 = !DILocation(line: 792, column: 11, scope: !17594)
!17612 = !DILocation(line: 792, column: 2, scope: !17594)
!17613 = distinct !DISubprogram(name: "skge_get_eeprom", scope: !3, file: !3, line: 820, type: !5602, scopeLine: 822, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!17614 = !DILocalVariable(name: "dev", arg: 1, scope: !17613, file: !3, line: 820, type: !290)
!17615 = !DILocation(line: 820, column: 47, scope: !17613)
!17616 = !DILocalVariable(name: "eeprom", arg: 2, scope: !17613, file: !3, line: 820, type: !5604)
!17617 = !DILocation(line: 820, column: 75, scope: !17613)
!17618 = !DILocalVariable(name: "data", arg: 3, scope: !17613, file: !3, line: 821, type: !793)
!17619 = !DILocation(line: 821, column: 11, scope: !17613)
!17620 = !DILocalVariable(name: "skge", scope: !17613, file: !3, line: 823, type: !9172)
!17621 = !DILocation(line: 823, column: 20, scope: !17613)
!17622 = !DILocation(line: 823, column: 39, scope: !17613)
!17623 = !DILocation(line: 823, column: 27, scope: !17613)
!17624 = !DILocalVariable(name: "pdev", scope: !17613, file: !3, line: 824, type: !8799)
!17625 = !DILocation(line: 824, column: 18, scope: !17613)
!17626 = !DILocation(line: 824, column: 25, scope: !17613)
!17627 = !DILocation(line: 824, column: 31, scope: !17613)
!17628 = !DILocation(line: 824, column: 35, scope: !17613)
!17629 = !DILocalVariable(name: "cap", scope: !17613, file: !3, line: 825, type: !32)
!17630 = !DILocation(line: 825, column: 6, scope: !17613)
!17631 = !DILocation(line: 825, column: 32, scope: !17613)
!17632 = !DILocation(line: 825, column: 12, scope: !17613)
!17633 = !DILocalVariable(name: "length", scope: !17613, file: !3, line: 826, type: !32)
!17634 = !DILocation(line: 826, column: 6, scope: !17613)
!17635 = !DILocation(line: 826, column: 15, scope: !17613)
!17636 = !DILocation(line: 826, column: 23, scope: !17613)
!17637 = !DILocalVariable(name: "offset", scope: !17613, file: !3, line: 827, type: !581)
!17638 = !DILocation(line: 827, column: 6, scope: !17613)
!17639 = !DILocation(line: 827, column: 15, scope: !17613)
!17640 = !DILocation(line: 827, column: 23, scope: !17613)
!17641 = !DILocation(line: 829, column: 7, scope: !17642)
!17642 = distinct !DILexicalBlock(scope: !17613, file: !3, line: 829, column: 6)
!17643 = !DILocation(line: 829, column: 6, scope: !17613)
!17644 = !DILocation(line: 830, column: 3, scope: !17642)
!17645 = !DILocation(line: 832, column: 2, scope: !17613)
!17646 = !DILocation(line: 832, column: 10, scope: !17613)
!17647 = !DILocation(line: 832, column: 16, scope: !17613)
!17648 = !DILocation(line: 834, column: 2, scope: !17613)
!17649 = !DILocation(line: 834, column: 9, scope: !17613)
!17650 = !DILocation(line: 834, column: 16, scope: !17613)
!17651 = !DILocalVariable(name: "val", scope: !17652, file: !3, line: 835, type: !987)
!17652 = distinct !DILexicalBlock(scope: !17613, file: !3, line: 834, column: 21)
!17653 = !DILocation(line: 835, column: 7, scope: !17652)
!17654 = !DILocation(line: 835, column: 27, scope: !17652)
!17655 = !DILocation(line: 835, column: 33, scope: !17652)
!17656 = !DILocation(line: 835, column: 38, scope: !17652)
!17657 = !DILocation(line: 835, column: 13, scope: !17652)
!17658 = !DILocalVariable(name: "n", scope: !17652, file: !3, line: 836, type: !32)
!17659 = !DILocation(line: 836, column: 7, scope: !17652)
!17660 = !DILocalVariable(name: "__UNIQUE_ID___x334", scope: !17661, file: !3, line: 836, type: !32)
!17661 = distinct !DILexicalBlock(scope: !17652, file: !3, line: 836, column: 11)
!17662 = !DILocation(line: 836, column: 11, scope: !17661)
!17663 = !DILocalVariable(name: "__UNIQUE_ID___y335", scope: !17661, file: !3, line: 836, type: !32)
!17664 = !DILocation(line: 838, column: 10, scope: !17652)
!17665 = !DILocation(line: 838, column: 3, scope: !17652)
!17666 = !DILocation(line: 838, column: 22, scope: !17652)
!17667 = !DILocation(line: 839, column: 13, scope: !17652)
!17668 = !DILocation(line: 839, column: 10, scope: !17652)
!17669 = !DILocation(line: 840, column: 11, scope: !17652)
!17670 = !DILocation(line: 840, column: 8, scope: !17652)
!17671 = !DILocation(line: 841, column: 13, scope: !17652)
!17672 = !DILocation(line: 841, column: 10, scope: !17652)
!17673 = distinct !{!17673, !17648, !17674}
!17674 = !DILocation(line: 842, column: 2, scope: !17613)
!17675 = !DILocation(line: 843, column: 2, scope: !17613)
!17676 = !DILocation(line: 844, column: 1, scope: !17613)
!17677 = distinct !DISubprogram(name: "skge_set_eeprom", scope: !3, file: !3, line: 846, type: !5602, scopeLine: 848, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!17678 = !DILocalVariable(name: "dev", arg: 1, scope: !17677, file: !3, line: 846, type: !290)
!17679 = !DILocation(line: 846, column: 47, scope: !17677)
!17680 = !DILocalVariable(name: "eeprom", arg: 2, scope: !17677, file: !3, line: 846, type: !5604)
!17681 = !DILocation(line: 846, column: 75, scope: !17677)
!17682 = !DILocalVariable(name: "data", arg: 3, scope: !17677, file: !3, line: 847, type: !793)
!17683 = !DILocation(line: 847, column: 11, scope: !17677)
!17684 = !DILocalVariable(name: "skge", scope: !17677, file: !3, line: 849, type: !9172)
!17685 = !DILocation(line: 849, column: 20, scope: !17677)
!17686 = !DILocation(line: 849, column: 39, scope: !17677)
!17687 = !DILocation(line: 849, column: 27, scope: !17677)
!17688 = !DILocalVariable(name: "pdev", scope: !17677, file: !3, line: 850, type: !8799)
!17689 = !DILocation(line: 850, column: 18, scope: !17677)
!17690 = !DILocation(line: 850, column: 25, scope: !17677)
!17691 = !DILocation(line: 850, column: 31, scope: !17677)
!17692 = !DILocation(line: 850, column: 35, scope: !17677)
!17693 = !DILocalVariable(name: "cap", scope: !17677, file: !3, line: 851, type: !32)
!17694 = !DILocation(line: 851, column: 6, scope: !17677)
!17695 = !DILocation(line: 851, column: 32, scope: !17677)
!17696 = !DILocation(line: 851, column: 12, scope: !17677)
!17697 = !DILocalVariable(name: "length", scope: !17677, file: !3, line: 852, type: !32)
!17698 = !DILocation(line: 852, column: 6, scope: !17677)
!17699 = !DILocation(line: 852, column: 15, scope: !17677)
!17700 = !DILocation(line: 852, column: 23, scope: !17677)
!17701 = !DILocalVariable(name: "offset", scope: !17677, file: !3, line: 853, type: !581)
!17702 = !DILocation(line: 853, column: 6, scope: !17677)
!17703 = !DILocation(line: 853, column: 15, scope: !17677)
!17704 = !DILocation(line: 853, column: 23, scope: !17677)
!17705 = !DILocation(line: 855, column: 7, scope: !17706)
!17706 = distinct !DILexicalBlock(scope: !17677, file: !3, line: 855, column: 6)
!17707 = !DILocation(line: 855, column: 6, scope: !17677)
!17708 = !DILocation(line: 856, column: 3, scope: !17706)
!17709 = !DILocation(line: 858, column: 6, scope: !17710)
!17710 = distinct !DILexicalBlock(scope: !17677, file: !3, line: 858, column: 6)
!17711 = !DILocation(line: 858, column: 14, scope: !17710)
!17712 = !DILocation(line: 858, column: 20, scope: !17710)
!17713 = !DILocation(line: 858, column: 6, scope: !17677)
!17714 = !DILocation(line: 859, column: 3, scope: !17710)
!17715 = !DILocation(line: 861, column: 2, scope: !17677)
!17716 = !DILocation(line: 861, column: 9, scope: !17677)
!17717 = !DILocation(line: 861, column: 16, scope: !17677)
!17718 = !DILocalVariable(name: "val", scope: !17719, file: !3, line: 862, type: !987)
!17719 = distinct !DILexicalBlock(scope: !17677, file: !3, line: 861, column: 21)
!17720 = !DILocation(line: 862, column: 7, scope: !17719)
!17721 = !DILocalVariable(name: "n", scope: !17719, file: !3, line: 863, type: !32)
!17722 = !DILocation(line: 863, column: 7, scope: !17719)
!17723 = !DILocalVariable(name: "__UNIQUE_ID___x336", scope: !17724, file: !3, line: 863, type: !32)
!17724 = distinct !DILexicalBlock(scope: !17719, file: !3, line: 863, column: 11)
!17725 = !DILocation(line: 863, column: 11, scope: !17724)
!17726 = !DILocalVariable(name: "__UNIQUE_ID___y337", scope: !17724, file: !3, line: 863, type: !32)
!17727 = !DILocation(line: 865, column: 7, scope: !17728)
!17728 = distinct !DILexicalBlock(scope: !17719, file: !3, line: 865, column: 7)
!17729 = !DILocation(line: 865, column: 9, scope: !17728)
!17730 = !DILocation(line: 865, column: 7, scope: !17719)
!17731 = !DILocation(line: 866, column: 24, scope: !17728)
!17732 = !DILocation(line: 866, column: 30, scope: !17728)
!17733 = !DILocation(line: 866, column: 35, scope: !17728)
!17734 = !DILocation(line: 866, column: 10, scope: !17728)
!17735 = !DILocation(line: 866, column: 8, scope: !17728)
!17736 = !DILocation(line: 866, column: 4, scope: !17728)
!17737 = !DILocation(line: 867, column: 3, scope: !17719)
!17738 = !DILocation(line: 867, column: 16, scope: !17719)
!17739 = !DILocation(line: 867, column: 22, scope: !17719)
!17740 = !DILocation(line: 869, column: 18, scope: !17719)
!17741 = !DILocation(line: 869, column: 24, scope: !17719)
!17742 = !DILocation(line: 869, column: 29, scope: !17719)
!17743 = !DILocation(line: 869, column: 37, scope: !17719)
!17744 = !DILocation(line: 869, column: 3, scope: !17719)
!17745 = !DILocation(line: 871, column: 13, scope: !17719)
!17746 = !DILocation(line: 871, column: 10, scope: !17719)
!17747 = !DILocation(line: 872, column: 11, scope: !17719)
!17748 = !DILocation(line: 872, column: 8, scope: !17719)
!17749 = !DILocation(line: 873, column: 13, scope: !17719)
!17750 = !DILocation(line: 873, column: 10, scope: !17719)
!17751 = distinct !{!17751, !17715, !17752}
!17752 = !DILocation(line: 874, column: 2, scope: !17677)
!17753 = !DILocation(line: 875, column: 2, scope: !17677)
!17754 = !DILocation(line: 876, column: 1, scope: !17677)
!17755 = distinct !DISubprogram(name: "skge_get_coalesce", scope: !3, file: !3, line: 617, type: !5615, scopeLine: 619, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!17756 = !DILocalVariable(name: "dev", arg: 1, scope: !17755, file: !3, line: 617, type: !290)
!17757 = !DILocation(line: 617, column: 49, scope: !17755)
!17758 = !DILocalVariable(name: "ecmd", arg: 2, scope: !17755, file: !3, line: 618, type: !5617)
!17759 = !DILocation(line: 618, column: 34, scope: !17755)
!17760 = !DILocalVariable(name: "skge", scope: !17755, file: !3, line: 620, type: !9172)
!17761 = !DILocation(line: 620, column: 20, scope: !17755)
!17762 = !DILocation(line: 620, column: 39, scope: !17755)
!17763 = !DILocation(line: 620, column: 27, scope: !17755)
!17764 = !DILocalVariable(name: "hw", scope: !17755, file: !3, line: 621, type: !8794)
!17765 = !DILocation(line: 621, column: 18, scope: !17755)
!17766 = !DILocation(line: 621, column: 23, scope: !17755)
!17767 = !DILocation(line: 621, column: 29, scope: !17755)
!17768 = !DILocalVariable(name: "port", scope: !17755, file: !3, line: 622, type: !32)
!17769 = !DILocation(line: 622, column: 6, scope: !17755)
!17770 = !DILocation(line: 622, column: 13, scope: !17755)
!17771 = !DILocation(line: 622, column: 19, scope: !17755)
!17772 = !DILocation(line: 624, column: 2, scope: !17755)
!17773 = !DILocation(line: 624, column: 8, scope: !17755)
!17774 = !DILocation(line: 624, column: 26, scope: !17755)
!17775 = !DILocation(line: 625, column: 2, scope: !17755)
!17776 = !DILocation(line: 625, column: 8, scope: !17755)
!17777 = !DILocation(line: 625, column: 26, scope: !17755)
!17778 = !DILocation(line: 627, column: 18, scope: !17779)
!17779 = distinct !DILexicalBlock(scope: !17755, file: !3, line: 627, column: 6)
!17780 = !DILocation(line: 627, column: 6, scope: !17779)
!17781 = !DILocation(line: 627, column: 36, scope: !17779)
!17782 = !DILocation(line: 627, column: 6, scope: !17755)
!17783 = !DILocalVariable(name: "delay", scope: !17784, file: !3, line: 628, type: !987)
!17784 = distinct !DILexicalBlock(scope: !17779, file: !3, line: 627, column: 49)
!17785 = !DILocation(line: 628, column: 7, scope: !17784)
!17786 = !DILocation(line: 628, column: 29, scope: !17784)
!17787 = !DILocation(line: 628, column: 45, scope: !17784)
!17788 = !DILocation(line: 628, column: 33, scope: !17784)
!17789 = !DILocation(line: 628, column: 15, scope: !17784)
!17790 = !DILocalVariable(name: "msk", scope: !17784, file: !3, line: 629, type: !987)
!17791 = !DILocation(line: 629, column: 7, scope: !17784)
!17792 = !DILocation(line: 629, column: 25, scope: !17784)
!17793 = !DILocation(line: 629, column: 13, scope: !17784)
!17794 = !DILocation(line: 631, column: 7, scope: !17795)
!17795 = distinct !DILexicalBlock(scope: !17784, file: !3, line: 631, column: 7)
!17796 = !DILocation(line: 631, column: 23, scope: !17795)
!17797 = !DILocation(line: 631, column: 13, scope: !17795)
!17798 = !DILocation(line: 631, column: 11, scope: !17795)
!17799 = !DILocation(line: 631, column: 7, scope: !17784)
!17800 = !DILocation(line: 632, column: 30, scope: !17795)
!17801 = !DILocation(line: 632, column: 4, scope: !17795)
!17802 = !DILocation(line: 632, column: 10, scope: !17795)
!17803 = !DILocation(line: 632, column: 28, scope: !17795)
!17804 = !DILocation(line: 633, column: 7, scope: !17805)
!17805 = distinct !DILexicalBlock(scope: !17784, file: !3, line: 633, column: 7)
!17806 = !DILocation(line: 633, column: 23, scope: !17805)
!17807 = !DILocation(line: 633, column: 13, scope: !17805)
!17808 = !DILocation(line: 633, column: 11, scope: !17805)
!17809 = !DILocation(line: 633, column: 7, scope: !17784)
!17810 = !DILocation(line: 634, column: 30, scope: !17805)
!17811 = !DILocation(line: 634, column: 4, scope: !17805)
!17812 = !DILocation(line: 634, column: 10, scope: !17805)
!17813 = !DILocation(line: 634, column: 28, scope: !17805)
!17814 = !DILocation(line: 635, column: 2, scope: !17784)
!17815 = !DILocation(line: 637, column: 2, scope: !17755)
!17816 = distinct !DISubprogram(name: "skge_set_coalesce", scope: !3, file: !3, line: 641, type: !5615, scopeLine: 643, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!17817 = !DILocalVariable(name: "dev", arg: 1, scope: !17816, file: !3, line: 641, type: !290)
!17818 = !DILocation(line: 641, column: 49, scope: !17816)
!17819 = !DILocalVariable(name: "ecmd", arg: 2, scope: !17816, file: !3, line: 642, type: !5617)
!17820 = !DILocation(line: 642, column: 34, scope: !17816)
!17821 = !DILocalVariable(name: "skge", scope: !17816, file: !3, line: 644, type: !9172)
!17822 = !DILocation(line: 644, column: 20, scope: !17816)
!17823 = !DILocation(line: 644, column: 39, scope: !17816)
!17824 = !DILocation(line: 644, column: 27, scope: !17816)
!17825 = !DILocalVariable(name: "hw", scope: !17816, file: !3, line: 645, type: !8794)
!17826 = !DILocation(line: 645, column: 18, scope: !17816)
!17827 = !DILocation(line: 645, column: 23, scope: !17816)
!17828 = !DILocation(line: 645, column: 29, scope: !17816)
!17829 = !DILocalVariable(name: "port", scope: !17816, file: !3, line: 646, type: !32)
!17830 = !DILocation(line: 646, column: 6, scope: !17816)
!17831 = !DILocation(line: 646, column: 13, scope: !17816)
!17832 = !DILocation(line: 646, column: 19, scope: !17816)
!17833 = !DILocalVariable(name: "msk", scope: !17816, file: !3, line: 647, type: !987)
!17834 = !DILocation(line: 647, column: 6, scope: !17816)
!17835 = !DILocation(line: 647, column: 24, scope: !17816)
!17836 = !DILocation(line: 647, column: 12, scope: !17816)
!17837 = !DILocalVariable(name: "delay", scope: !17816, file: !3, line: 648, type: !987)
!17838 = !DILocation(line: 648, column: 6, scope: !17816)
!17839 = !DILocation(line: 650, column: 6, scope: !17840)
!17840 = distinct !DILexicalBlock(scope: !17816, file: !3, line: 650, column: 6)
!17841 = !DILocation(line: 650, column: 12, scope: !17840)
!17842 = !DILocation(line: 650, column: 30, scope: !17840)
!17843 = !DILocation(line: 650, column: 6, scope: !17816)
!17844 = !DILocation(line: 651, column: 21, scope: !17840)
!17845 = !DILocation(line: 651, column: 11, scope: !17840)
!17846 = !DILocation(line: 651, column: 10, scope: !17840)
!17847 = !DILocation(line: 651, column: 7, scope: !17840)
!17848 = !DILocation(line: 651, column: 3, scope: !17840)
!17849 = !DILocation(line: 652, column: 11, scope: !17850)
!17850 = distinct !DILexicalBlock(scope: !17840, file: !3, line: 652, column: 11)
!17851 = !DILocation(line: 652, column: 17, scope: !17850)
!17852 = !DILocation(line: 652, column: 35, scope: !17850)
!17853 = !DILocation(line: 652, column: 40, scope: !17850)
!17854 = !DILocation(line: 653, column: 4, scope: !17850)
!17855 = !DILocation(line: 653, column: 10, scope: !17850)
!17856 = !DILocation(line: 653, column: 28, scope: !17850)
!17857 = !DILocation(line: 652, column: 11, scope: !17840)
!17858 = !DILocation(line: 654, column: 3, scope: !17850)
!17859 = !DILocation(line: 656, column: 20, scope: !17860)
!17860 = distinct !DILexicalBlock(scope: !17850, file: !3, line: 655, column: 7)
!17861 = !DILocation(line: 656, column: 10, scope: !17860)
!17862 = !DILocation(line: 656, column: 7, scope: !17860)
!17863 = !DILocation(line: 657, column: 11, scope: !17860)
!17864 = !DILocation(line: 657, column: 17, scope: !17860)
!17865 = !DILocation(line: 657, column: 9, scope: !17860)
!17866 = !DILocation(line: 660, column: 6, scope: !17867)
!17867 = distinct !DILexicalBlock(scope: !17816, file: !3, line: 660, column: 6)
!17868 = !DILocation(line: 660, column: 12, scope: !17867)
!17869 = !DILocation(line: 660, column: 30, scope: !17867)
!17870 = !DILocation(line: 660, column: 6, scope: !17816)
!17871 = !DILocation(line: 661, column: 21, scope: !17867)
!17872 = !DILocation(line: 661, column: 11, scope: !17867)
!17873 = !DILocation(line: 661, column: 10, scope: !17867)
!17874 = !DILocation(line: 661, column: 7, scope: !17867)
!17875 = !DILocation(line: 661, column: 3, scope: !17867)
!17876 = !DILocation(line: 662, column: 11, scope: !17877)
!17877 = distinct !DILexicalBlock(scope: !17867, file: !3, line: 662, column: 11)
!17878 = !DILocation(line: 662, column: 17, scope: !17877)
!17879 = !DILocation(line: 662, column: 35, scope: !17877)
!17880 = !DILocation(line: 662, column: 40, scope: !17877)
!17881 = !DILocation(line: 663, column: 4, scope: !17877)
!17882 = !DILocation(line: 663, column: 10, scope: !17877)
!17883 = !DILocation(line: 663, column: 28, scope: !17877)
!17884 = !DILocation(line: 662, column: 11, scope: !17867)
!17885 = !DILocation(line: 664, column: 3, scope: !17877)
!17886 = !DILocation(line: 666, column: 20, scope: !17887)
!17887 = distinct !DILexicalBlock(scope: !17877, file: !3, line: 665, column: 7)
!17888 = !DILocation(line: 666, column: 10, scope: !17887)
!17889 = !DILocation(line: 666, column: 7, scope: !17887)
!17890 = !DILocalVariable(name: "__UNIQUE_ID___x332", scope: !17891, file: !3, line: 667, type: !987)
!17891 = distinct !DILexicalBlock(scope: !17887, file: !3, line: 667, column: 11)
!17892 = !DILocation(line: 667, column: 11, scope: !17891)
!17893 = !DILocalVariable(name: "__UNIQUE_ID___y333", scope: !17891, file: !3, line: 667, type: !493)
!17894 = !DILocation(line: 667, column: 9, scope: !17887)
!17895 = !DILocation(line: 670, column: 15, scope: !17816)
!17896 = !DILocation(line: 670, column: 32, scope: !17816)
!17897 = !DILocation(line: 670, column: 2, scope: !17816)
!17898 = !DILocation(line: 671, column: 6, scope: !17899)
!17899 = distinct !DILexicalBlock(scope: !17816, file: !3, line: 671, column: 6)
!17900 = !DILocation(line: 671, column: 10, scope: !17899)
!17901 = !DILocation(line: 671, column: 6, scope: !17816)
!17902 = !DILocation(line: 672, column: 16, scope: !17899)
!17903 = !DILocation(line: 672, column: 3, scope: !17899)
!17904 = !DILocation(line: 674, column: 16, scope: !17905)
!17905 = distinct !DILexicalBlock(scope: !17899, file: !3, line: 673, column: 7)
!17906 = !DILocation(line: 674, column: 48, scope: !17905)
!17907 = !DILocation(line: 674, column: 52, scope: !17905)
!17908 = !DILocation(line: 674, column: 33, scope: !17905)
!17909 = !DILocation(line: 674, column: 3, scope: !17905)
!17910 = !DILocation(line: 675, column: 16, scope: !17905)
!17911 = !DILocation(line: 675, column: 3, scope: !17905)
!17912 = !DILocation(line: 677, column: 2, scope: !17816)
!17913 = !DILocation(line: 678, column: 1, scope: !17816)
!17914 = distinct !DISubprogram(name: "skge_get_ring_param", scope: !3, file: !3, line: 494, type: !5646, scopeLine: 496, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!17915 = !DILocalVariable(name: "dev", arg: 1, scope: !17914, file: !3, line: 494, type: !290)
!17916 = !DILocation(line: 494, column: 52, scope: !17914)
!17917 = !DILocalVariable(name: "p", arg: 2, scope: !17914, file: !3, line: 495, type: !5648)
!17918 = !DILocation(line: 495, column: 31, scope: !17914)
!17919 = !DILocalVariable(name: "skge", scope: !17914, file: !3, line: 497, type: !9172)
!17920 = !DILocation(line: 497, column: 20, scope: !17914)
!17921 = !DILocation(line: 497, column: 39, scope: !17914)
!17922 = !DILocation(line: 497, column: 27, scope: !17914)
!17923 = !DILocation(line: 499, column: 2, scope: !17914)
!17924 = !DILocation(line: 499, column: 5, scope: !17914)
!17925 = !DILocation(line: 499, column: 20, scope: !17914)
!17926 = !DILocation(line: 500, column: 2, scope: !17914)
!17927 = !DILocation(line: 500, column: 5, scope: !17914)
!17928 = !DILocation(line: 500, column: 20, scope: !17914)
!17929 = !DILocation(line: 502, column: 18, scope: !17914)
!17930 = !DILocation(line: 502, column: 24, scope: !17914)
!17931 = !DILocation(line: 502, column: 32, scope: !17914)
!17932 = !DILocation(line: 502, column: 2, scope: !17914)
!17933 = !DILocation(line: 502, column: 5, scope: !17914)
!17934 = !DILocation(line: 502, column: 16, scope: !17914)
!17935 = !DILocation(line: 503, column: 18, scope: !17914)
!17936 = !DILocation(line: 503, column: 24, scope: !17914)
!17937 = !DILocation(line: 503, column: 32, scope: !17914)
!17938 = !DILocation(line: 503, column: 2, scope: !17914)
!17939 = !DILocation(line: 503, column: 5, scope: !17914)
!17940 = !DILocation(line: 503, column: 16, scope: !17914)
!17941 = !DILocation(line: 504, column: 1, scope: !17914)
!17942 = distinct !DISubprogram(name: "skge_set_ring_param", scope: !3, file: !3, line: 506, type: !5662, scopeLine: 508, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!17943 = !DILocalVariable(name: "dev", arg: 1, scope: !17942, file: !3, line: 506, type: !290)
!17944 = !DILocation(line: 506, column: 51, scope: !17942)
!17945 = !DILocalVariable(name: "p", arg: 2, scope: !17942, file: !3, line: 507, type: !5648)
!17946 = !DILocation(line: 507, column: 37, scope: !17942)
!17947 = !DILocalVariable(name: "skge", scope: !17942, file: !3, line: 509, type: !9172)
!17948 = !DILocation(line: 509, column: 20, scope: !17942)
!17949 = !DILocation(line: 509, column: 39, scope: !17942)
!17950 = !DILocation(line: 509, column: 27, scope: !17942)
!17951 = !DILocalVariable(name: "err", scope: !17942, file: !3, line: 510, type: !32)
!17952 = !DILocation(line: 510, column: 6, scope: !17942)
!17953 = !DILocation(line: 512, column: 6, scope: !17954)
!17954 = distinct !DILexicalBlock(scope: !17942, file: !3, line: 512, column: 6)
!17955 = !DILocation(line: 512, column: 9, scope: !17954)
!17956 = !DILocation(line: 512, column: 20, scope: !17954)
!17957 = !DILocation(line: 512, column: 25, scope: !17954)
!17958 = !DILocation(line: 512, column: 28, scope: !17954)
!17959 = !DILocation(line: 512, column: 31, scope: !17954)
!17960 = !DILocation(line: 512, column: 42, scope: !17954)
!17961 = !DILocation(line: 512, column: 61, scope: !17954)
!17962 = !DILocation(line: 513, column: 6, scope: !17954)
!17963 = !DILocation(line: 513, column: 9, scope: !17954)
!17964 = !DILocation(line: 513, column: 20, scope: !17954)
!17965 = !DILocation(line: 513, column: 35, scope: !17954)
!17966 = !DILocation(line: 513, column: 38, scope: !17954)
!17967 = !DILocation(line: 513, column: 41, scope: !17954)
!17968 = !DILocation(line: 513, column: 52, scope: !17954)
!17969 = !DILocation(line: 512, column: 6, scope: !17942)
!17970 = !DILocation(line: 514, column: 3, scope: !17954)
!17971 = !DILocation(line: 516, column: 24, scope: !17942)
!17972 = !DILocation(line: 516, column: 27, scope: !17942)
!17973 = !DILocation(line: 516, column: 2, scope: !17942)
!17974 = !DILocation(line: 516, column: 8, scope: !17942)
!17975 = !DILocation(line: 516, column: 16, scope: !17942)
!17976 = !DILocation(line: 516, column: 22, scope: !17942)
!17977 = !DILocation(line: 517, column: 24, scope: !17942)
!17978 = !DILocation(line: 517, column: 27, scope: !17942)
!17979 = !DILocation(line: 517, column: 2, scope: !17942)
!17980 = !DILocation(line: 517, column: 8, scope: !17942)
!17981 = !DILocation(line: 517, column: 16, scope: !17942)
!17982 = !DILocation(line: 517, column: 22, scope: !17942)
!17983 = !DILocation(line: 519, column: 20, scope: !17984)
!17984 = distinct !DILexicalBlock(scope: !17942, file: !3, line: 519, column: 6)
!17985 = !DILocation(line: 519, column: 6, scope: !17984)
!17986 = !DILocation(line: 519, column: 6, scope: !17942)
!17987 = !DILocation(line: 520, column: 13, scope: !17988)
!17988 = distinct !DILexicalBlock(scope: !17984, file: !3, line: 519, column: 26)
!17989 = !DILocation(line: 520, column: 3, scope: !17988)
!17990 = !DILocation(line: 521, column: 17, scope: !17988)
!17991 = !DILocation(line: 521, column: 9, scope: !17988)
!17992 = !DILocation(line: 521, column: 7, scope: !17988)
!17993 = !DILocation(line: 522, column: 7, scope: !17994)
!17994 = distinct !DILexicalBlock(scope: !17988, file: !3, line: 522, column: 7)
!17995 = !DILocation(line: 522, column: 7, scope: !17988)
!17996 = !DILocation(line: 523, column: 14, scope: !17994)
!17997 = !DILocation(line: 523, column: 4, scope: !17994)
!17998 = !DILocation(line: 524, column: 2, scope: !17988)
!17999 = !DILocation(line: 526, column: 9, scope: !17942)
!18000 = !DILocation(line: 526, column: 2, scope: !17942)
!18001 = !DILocation(line: 527, column: 1, scope: !17942)
!18002 = distinct !DISubprogram(name: "skge_get_pauseparam", scope: !3, file: !3, line: 552, type: !5675, scopeLine: 554, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!18003 = !DILocalVariable(name: "dev", arg: 1, scope: !18002, file: !3, line: 552, type: !290)
!18004 = !DILocation(line: 552, column: 52, scope: !18002)
!18005 = !DILocalVariable(name: "ecmd", arg: 2, scope: !18002, file: !3, line: 553, type: !5677)
!18006 = !DILocation(line: 553, column: 32, scope: !18002)
!18007 = !DILocalVariable(name: "skge", scope: !18002, file: !3, line: 555, type: !9172)
!18008 = !DILocation(line: 555, column: 20, scope: !18002)
!18009 = !DILocation(line: 555, column: 39, scope: !18002)
!18010 = !DILocation(line: 555, column: 27, scope: !18002)
!18011 = !DILocation(line: 557, column: 21, scope: !18002)
!18012 = !DILocation(line: 557, column: 27, scope: !18002)
!18013 = !DILocation(line: 557, column: 40, scope: !18002)
!18014 = !DILocation(line: 557, column: 64, scope: !18002)
!18015 = !DILocation(line: 558, column: 7, scope: !18002)
!18016 = !DILocation(line: 558, column: 13, scope: !18002)
!18017 = !DILocation(line: 558, column: 26, scope: !18002)
!18018 = !DILocation(line: 557, column: 2, scope: !18002)
!18019 = !DILocation(line: 557, column: 8, scope: !18002)
!18020 = !DILocation(line: 557, column: 17, scope: !18002)
!18021 = !DILocation(line: 559, column: 20, scope: !18002)
!18022 = !DILocation(line: 559, column: 26, scope: !18002)
!18023 = !DILocation(line: 559, column: 35, scope: !18002)
!18024 = !DILocation(line: 560, column: 7, scope: !18002)
!18025 = !DILocation(line: 560, column: 13, scope: !18002)
!18026 = !DILocation(line: 560, column: 26, scope: !18002)
!18027 = !DILocation(line: 559, column: 2, scope: !18002)
!18028 = !DILocation(line: 559, column: 8, scope: !18002)
!18029 = !DILocation(line: 559, column: 17, scope: !18002)
!18030 = !DILocation(line: 562, column: 18, scope: !18002)
!18031 = !DILocation(line: 562, column: 24, scope: !18002)
!18032 = !DILocation(line: 562, column: 33, scope: !18002)
!18033 = !DILocation(line: 562, column: 36, scope: !18002)
!18034 = !DILocation(line: 562, column: 42, scope: !18002)
!18035 = !DILocation(line: 562, column: 2, scope: !18002)
!18036 = !DILocation(line: 562, column: 8, scope: !18002)
!18037 = !DILocation(line: 562, column: 16, scope: !18002)
!18038 = !DILocation(line: 563, column: 1, scope: !18002)
!18039 = distinct !DISubprogram(name: "skge_set_pauseparam", scope: !3, file: !3, line: 565, type: !5686, scopeLine: 567, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!18040 = !DILocalVariable(name: "dev", arg: 1, scope: !18039, file: !3, line: 565, type: !290)
!18041 = !DILocation(line: 565, column: 51, scope: !18039)
!18042 = !DILocalVariable(name: "ecmd", arg: 2, scope: !18039, file: !3, line: 566, type: !5677)
!18043 = !DILocation(line: 566, column: 38, scope: !18039)
!18044 = !DILocalVariable(name: "skge", scope: !18039, file: !3, line: 568, type: !9172)
!18045 = !DILocation(line: 568, column: 20, scope: !18039)
!18046 = !DILocation(line: 568, column: 39, scope: !18039)
!18047 = !DILocation(line: 568, column: 27, scope: !18039)
!18048 = !DILocalVariable(name: "old", scope: !18039, file: !3, line: 569, type: !5678)
!18049 = !DILocation(line: 569, column: 28, scope: !18039)
!18050 = !DILocalVariable(name: "err", scope: !18039, file: !3, line: 570, type: !32)
!18051 = !DILocation(line: 570, column: 6, scope: !18039)
!18052 = !DILocation(line: 572, column: 22, scope: !18039)
!18053 = !DILocation(line: 572, column: 2, scope: !18039)
!18054 = !DILocation(line: 574, column: 6, scope: !18055)
!18055 = distinct !DILexicalBlock(scope: !18039, file: !3, line: 574, column: 6)
!18056 = !DILocation(line: 574, column: 12, scope: !18055)
!18057 = !DILocation(line: 574, column: 27, scope: !18055)
!18058 = !DILocation(line: 574, column: 20, scope: !18055)
!18059 = !DILocation(line: 574, column: 6, scope: !18039)
!18060 = !DILocation(line: 575, column: 24, scope: !18055)
!18061 = !DILocation(line: 575, column: 30, scope: !18055)
!18062 = !DILocation(line: 575, column: 3, scope: !18055)
!18063 = !DILocation(line: 575, column: 9, scope: !18055)
!18064 = !DILocation(line: 575, column: 22, scope: !18055)
!18065 = !DILocation(line: 577, column: 7, scope: !18066)
!18066 = distinct !DILexicalBlock(scope: !18067, file: !3, line: 577, column: 7)
!18067 = distinct !DILexicalBlock(scope: !18055, file: !3, line: 576, column: 7)
!18068 = !DILocation(line: 577, column: 13, scope: !18066)
!18069 = !DILocation(line: 577, column: 22, scope: !18066)
!18070 = !DILocation(line: 577, column: 25, scope: !18066)
!18071 = !DILocation(line: 577, column: 31, scope: !18066)
!18072 = !DILocation(line: 577, column: 7, scope: !18067)
!18073 = !DILocation(line: 578, column: 4, scope: !18066)
!18074 = !DILocation(line: 578, column: 10, scope: !18066)
!18075 = !DILocation(line: 578, column: 23, scope: !18066)
!18076 = !DILocation(line: 579, column: 12, scope: !18077)
!18077 = distinct !DILexicalBlock(scope: !18066, file: !3, line: 579, column: 12)
!18078 = !DILocation(line: 579, column: 18, scope: !18077)
!18079 = !DILocation(line: 579, column: 27, scope: !18077)
!18080 = !DILocation(line: 579, column: 31, scope: !18077)
!18081 = !DILocation(line: 579, column: 37, scope: !18077)
!18082 = !DILocation(line: 579, column: 12, scope: !18066)
!18083 = !DILocation(line: 580, column: 4, scope: !18077)
!18084 = !DILocation(line: 580, column: 10, scope: !18077)
!18085 = !DILocation(line: 580, column: 23, scope: !18077)
!18086 = !DILocation(line: 581, column: 13, scope: !18087)
!18087 = distinct !DILexicalBlock(scope: !18077, file: !3, line: 581, column: 12)
!18088 = !DILocation(line: 581, column: 19, scope: !18087)
!18089 = !DILocation(line: 581, column: 28, scope: !18087)
!18090 = !DILocation(line: 581, column: 31, scope: !18087)
!18091 = !DILocation(line: 581, column: 37, scope: !18087)
!18092 = !DILocation(line: 581, column: 12, scope: !18077)
!18093 = !DILocation(line: 582, column: 4, scope: !18087)
!18094 = !DILocation(line: 582, column: 10, scope: !18087)
!18095 = !DILocation(line: 582, column: 23, scope: !18087)
!18096 = !DILocation(line: 584, column: 4, scope: !18087)
!18097 = !DILocation(line: 584, column: 10, scope: !18087)
!18098 = !DILocation(line: 584, column: 23, scope: !18087)
!18099 = !DILocation(line: 587, column: 20, scope: !18100)
!18100 = distinct !DILexicalBlock(scope: !18039, file: !3, line: 587, column: 6)
!18101 = !DILocation(line: 587, column: 6, scope: !18100)
!18102 = !DILocation(line: 587, column: 6, scope: !18039)
!18103 = !DILocation(line: 588, column: 13, scope: !18104)
!18104 = distinct !DILexicalBlock(scope: !18100, file: !3, line: 587, column: 26)
!18105 = !DILocation(line: 588, column: 3, scope: !18104)
!18106 = !DILocation(line: 589, column: 17, scope: !18104)
!18107 = !DILocation(line: 589, column: 9, scope: !18104)
!18108 = !DILocation(line: 589, column: 7, scope: !18104)
!18109 = !DILocation(line: 590, column: 7, scope: !18110)
!18110 = distinct !DILexicalBlock(scope: !18104, file: !3, line: 590, column: 7)
!18111 = !DILocation(line: 590, column: 7, scope: !18104)
!18112 = !DILocation(line: 591, column: 14, scope: !18113)
!18113 = distinct !DILexicalBlock(scope: !18110, file: !3, line: 590, column: 12)
!18114 = !DILocation(line: 591, column: 4, scope: !18113)
!18115 = !DILocation(line: 592, column: 11, scope: !18113)
!18116 = !DILocation(line: 592, column: 4, scope: !18113)
!18117 = !DILocation(line: 594, column: 2, scope: !18104)
!18118 = !DILocation(line: 596, column: 2, scope: !18039)
!18119 = !DILocation(line: 597, column: 1, scope: !18039)
!18120 = distinct !DISubprogram(name: "skge_get_strings", scope: !3, file: !3, line: 481, type: !5703, scopeLine: 482, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!18121 = !DILocalVariable(name: "dev", arg: 1, scope: !18120, file: !3, line: 481, type: !290)
!18122 = !DILocation(line: 481, column: 49, scope: !18120)
!18123 = !DILocalVariable(name: "stringset", arg: 2, scope: !18120, file: !3, line: 481, type: !987)
!18124 = !DILocation(line: 481, column: 58, scope: !18120)
!18125 = !DILocalVariable(name: "data", arg: 3, scope: !18120, file: !3, line: 481, type: !793)
!18126 = !DILocation(line: 481, column: 73, scope: !18120)
!18127 = !DILocalVariable(name: "i", scope: !18120, file: !3, line: 483, type: !32)
!18128 = !DILocation(line: 483, column: 6, scope: !18120)
!18129 = !DILocation(line: 485, column: 10, scope: !18120)
!18130 = !DILocation(line: 485, column: 2, scope: !18120)
!18131 = !DILocation(line: 487, column: 10, scope: !18132)
!18132 = distinct !DILexicalBlock(scope: !18133, file: !3, line: 487, column: 3)
!18133 = distinct !DILexicalBlock(scope: !18120, file: !3, line: 485, column: 21)
!18134 = !DILocation(line: 487, column: 8, scope: !18132)
!18135 = !DILocation(line: 487, column: 15, scope: !18136)
!18136 = distinct !DILexicalBlock(scope: !18132, file: !3, line: 487, column: 3)
!18137 = !DILocation(line: 487, column: 17, scope: !18136)
!18138 = !DILocation(line: 487, column: 3, scope: !18132)
!18139 = !DILocation(line: 488, column: 11, scope: !18136)
!18140 = !DILocation(line: 488, column: 18, scope: !18136)
!18141 = !DILocation(line: 488, column: 20, scope: !18136)
!18142 = !DILocation(line: 488, column: 16, scope: !18136)
!18143 = !DILocation(line: 489, column: 22, scope: !18136)
!18144 = !DILocation(line: 489, column: 11, scope: !18136)
!18145 = !DILocation(line: 489, column: 25, scope: !18136)
!18146 = !DILocation(line: 488, column: 4, scope: !18136)
!18147 = !DILocation(line: 487, column: 44, scope: !18136)
!18148 = !DILocation(line: 487, column: 3, scope: !18136)
!18149 = distinct !{!18149, !18138, !18150}
!18150 = !DILocation(line: 489, column: 46, scope: !18132)
!18151 = !DILocation(line: 490, column: 3, scope: !18133)
!18152 = !DILocation(line: 492, column: 1, scope: !18120)
!18153 = distinct !DISubprogram(name: "skge_set_phys_id", scope: !3, file: !3, line: 761, type: !5707, scopeLine: 763, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!18154 = !DILocalVariable(name: "dev", arg: 1, scope: !18153, file: !3, line: 761, type: !290)
!18155 = !DILocation(line: 761, column: 48, scope: !18153)
!18156 = !DILocalVariable(name: "state", arg: 2, scope: !18153, file: !3, line: 762, type: !250)
!18157 = !DILocation(line: 762, column: 35, scope: !18153)
!18158 = !DILocalVariable(name: "skge", scope: !18153, file: !3, line: 764, type: !9172)
!18159 = !DILocation(line: 764, column: 20, scope: !18153)
!18160 = !DILocation(line: 764, column: 39, scope: !18153)
!18161 = !DILocation(line: 764, column: 27, scope: !18153)
!18162 = !DILocation(line: 766, column: 10, scope: !18153)
!18163 = !DILocation(line: 766, column: 2, scope: !18153)
!18164 = !DILocation(line: 768, column: 3, scope: !18165)
!18165 = distinct !DILexicalBlock(scope: !18153, file: !3, line: 766, column: 17)
!18166 = !DILocation(line: 771, column: 12, scope: !18165)
!18167 = !DILocation(line: 771, column: 3, scope: !18165)
!18168 = !DILocation(line: 772, column: 3, scope: !18165)
!18169 = !DILocation(line: 775, column: 12, scope: !18165)
!18170 = !DILocation(line: 775, column: 3, scope: !18165)
!18171 = !DILocation(line: 776, column: 3, scope: !18165)
!18172 = !DILocation(line: 780, column: 12, scope: !18165)
!18173 = !DILocation(line: 780, column: 32, scope: !18165)
!18174 = !DILocation(line: 780, column: 18, scope: !18165)
!18175 = !DILocation(line: 780, column: 3, scope: !18165)
!18176 = !DILocation(line: 781, column: 2, scope: !18165)
!18177 = !DILocation(line: 783, column: 2, scope: !18153)
!18178 = !DILocation(line: 784, column: 1, scope: !18153)
!18179 = distinct !DISubprogram(name: "skge_get_ethtool_stats", scope: !3, file: !3, line: 445, type: !5711, scopeLine: 447, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!18180 = !DILocalVariable(name: "dev", arg: 1, scope: !18179, file: !3, line: 445, type: !290)
!18181 = !DILocation(line: 445, column: 55, scope: !18179)
!18182 = !DILocalVariable(name: "stats", arg: 2, scope: !18179, file: !3, line: 446, type: !5713)
!18183 = !DILocation(line: 446, column: 30, scope: !18179)
!18184 = !DILocalVariable(name: "data", arg: 3, scope: !18179, file: !3, line: 446, type: !5371)
!18185 = !DILocation(line: 446, column: 42, scope: !18179)
!18186 = !DILocalVariable(name: "skge", scope: !18179, file: !3, line: 448, type: !9172)
!18187 = !DILocation(line: 448, column: 20, scope: !18179)
!18188 = !DILocation(line: 448, column: 39, scope: !18179)
!18189 = !DILocation(line: 448, column: 27, scope: !18179)
!18190 = !DILocation(line: 450, column: 17, scope: !18191)
!18191 = distinct !DILexicalBlock(scope: !18179, file: !3, line: 450, column: 6)
!18192 = !DILocation(line: 450, column: 23, scope: !18191)
!18193 = !DILocation(line: 450, column: 6, scope: !18191)
!18194 = !DILocation(line: 450, column: 6, scope: !18179)
!18195 = !DILocation(line: 451, column: 21, scope: !18191)
!18196 = !DILocation(line: 451, column: 27, scope: !18191)
!18197 = !DILocation(line: 451, column: 3, scope: !18191)
!18198 = !DILocation(line: 453, column: 19, scope: !18191)
!18199 = !DILocation(line: 453, column: 25, scope: !18191)
!18200 = !DILocation(line: 453, column: 3, scope: !18191)
!18201 = !DILocation(line: 454, column: 1, scope: !18179)
!18202 = distinct !DISubprogram(name: "skge_get_sset_count", scope: !3, file: !3, line: 435, type: !723, scopeLine: 436, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!18203 = !DILocalVariable(name: "dev", arg: 1, scope: !18202, file: !3, line: 435, type: !290)
!18204 = !DILocation(line: 435, column: 51, scope: !18202)
!18205 = !DILocalVariable(name: "sset", arg: 2, scope: !18202, file: !3, line: 435, type: !32)
!18206 = !DILocation(line: 435, column: 60, scope: !18202)
!18207 = !DILocation(line: 437, column: 10, scope: !18202)
!18208 = !DILocation(line: 437, column: 2, scope: !18202)
!18209 = !DILocation(line: 439, column: 3, scope: !18210)
!18210 = distinct !DILexicalBlock(scope: !18202, file: !3, line: 437, column: 16)
!18211 = !DILocation(line: 441, column: 3, scope: !18210)
!18212 = !DILocation(line: 443, column: 1, scope: !18202)
!18213 = distinct !DISubprogram(name: "skge_get_link_ksettings", scope: !3, file: !3, line: 293, type: !5976, scopeLine: 295, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!18214 = !DILocalVariable(name: "dev", arg: 1, scope: !18213, file: !3, line: 293, type: !290)
!18215 = !DILocation(line: 293, column: 55, scope: !18213)
!18216 = !DILocalVariable(name: "cmd", arg: 2, scope: !18213, file: !3, line: 294, type: !5978)
!18217 = !DILocation(line: 294, column: 39, scope: !18213)
!18218 = !DILocalVariable(name: "skge", scope: !18213, file: !3, line: 296, type: !9172)
!18219 = !DILocation(line: 296, column: 20, scope: !18213)
!18220 = !DILocation(line: 296, column: 39, scope: !18213)
!18221 = !DILocation(line: 296, column: 27, scope: !18213)
!18222 = !DILocalVariable(name: "hw", scope: !18213, file: !3, line: 297, type: !8794)
!18223 = !DILocation(line: 297, column: 18, scope: !18213)
!18224 = !DILocation(line: 297, column: 23, scope: !18213)
!18225 = !DILocation(line: 297, column: 29, scope: !18213)
!18226 = !DILocalVariable(name: "supported", scope: !18213, file: !3, line: 298, type: !987)
!18227 = !DILocation(line: 298, column: 6, scope: !18213)
!18228 = !DILocalVariable(name: "advertising", scope: !18213, file: !3, line: 298, type: !987)
!18229 = !DILocation(line: 298, column: 17, scope: !18213)
!18230 = !DILocation(line: 300, column: 35, scope: !18213)
!18231 = !DILocation(line: 300, column: 14, scope: !18213)
!18232 = !DILocation(line: 300, column: 12, scope: !18213)
!18233 = !DILocation(line: 302, column: 6, scope: !18234)
!18234 = distinct !DILexicalBlock(scope: !18213, file: !3, line: 302, column: 6)
!18235 = !DILocation(line: 302, column: 10, scope: !18234)
!18236 = !DILocation(line: 302, column: 6, scope: !18213)
!18237 = !DILocation(line: 303, column: 3, scope: !18238)
!18238 = distinct !DILexicalBlock(scope: !18234, file: !3, line: 302, column: 18)
!18239 = !DILocation(line: 303, column: 8, scope: !18238)
!18240 = !DILocation(line: 303, column: 13, scope: !18238)
!18241 = !DILocation(line: 303, column: 18, scope: !18238)
!18242 = !DILocation(line: 304, column: 27, scope: !18238)
!18243 = !DILocation(line: 304, column: 31, scope: !18238)
!18244 = !DILocation(line: 304, column: 3, scope: !18238)
!18245 = !DILocation(line: 304, column: 8, scope: !18238)
!18246 = !DILocation(line: 304, column: 13, scope: !18238)
!18247 = !DILocation(line: 304, column: 25, scope: !18238)
!18248 = !DILocation(line: 305, column: 2, scope: !18238)
!18249 = !DILocation(line: 306, column: 3, scope: !18234)
!18250 = !DILocation(line: 306, column: 8, scope: !18234)
!18251 = !DILocation(line: 306, column: 13, scope: !18234)
!18252 = !DILocation(line: 306, column: 18, scope: !18234)
!18253 = !DILocation(line: 308, column: 16, scope: !18213)
!18254 = !DILocation(line: 308, column: 22, scope: !18213)
!18255 = !DILocation(line: 308, column: 14, scope: !18213)
!18256 = !DILocation(line: 309, column: 22, scope: !18213)
!18257 = !DILocation(line: 309, column: 28, scope: !18213)
!18258 = !DILocation(line: 309, column: 2, scope: !18213)
!18259 = !DILocation(line: 309, column: 7, scope: !18213)
!18260 = !DILocation(line: 309, column: 12, scope: !18213)
!18261 = !DILocation(line: 309, column: 20, scope: !18213)
!18262 = !DILocation(line: 310, column: 20, scope: !18213)
!18263 = !DILocation(line: 310, column: 26, scope: !18213)
!18264 = !DILocation(line: 310, column: 2, scope: !18213)
!18265 = !DILocation(line: 310, column: 7, scope: !18213)
!18266 = !DILocation(line: 310, column: 12, scope: !18213)
!18267 = !DILocation(line: 310, column: 18, scope: !18213)
!18268 = !DILocation(line: 311, column: 21, scope: !18213)
!18269 = !DILocation(line: 311, column: 27, scope: !18213)
!18270 = !DILocation(line: 311, column: 2, scope: !18213)
!18271 = !DILocation(line: 311, column: 7, scope: !18213)
!18272 = !DILocation(line: 311, column: 12, scope: !18213)
!18273 = !DILocation(line: 311, column: 19, scope: !18213)
!18274 = !DILocation(line: 313, column: 42, scope: !18213)
!18275 = !DILocation(line: 313, column: 47, scope: !18213)
!18276 = !DILocation(line: 313, column: 58, scope: !18213)
!18277 = !DILocation(line: 314, column: 7, scope: !18213)
!18278 = !DILocation(line: 313, column: 2, scope: !18213)
!18279 = !DILocation(line: 315, column: 42, scope: !18213)
!18280 = !DILocation(line: 315, column: 47, scope: !18213)
!18281 = !DILocation(line: 315, column: 58, scope: !18213)
!18282 = !DILocation(line: 316, column: 7, scope: !18213)
!18283 = !DILocation(line: 315, column: 2, scope: !18213)
!18284 = !DILocation(line: 318, column: 2, scope: !18213)
!18285 = distinct !DISubprogram(name: "skge_set_link_ksettings", scope: !3, file: !3, line: 321, type: !6015, scopeLine: 323, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!18286 = !DILocalVariable(name: "dev", arg: 1, scope: !18285, file: !3, line: 321, type: !290)
!18287 = !DILocation(line: 321, column: 55, scope: !18285)
!18288 = !DILocalVariable(name: "cmd", arg: 2, scope: !18285, file: !3, line: 322, type: !6017)
!18289 = !DILocation(line: 322, column: 45, scope: !18285)
!18290 = !DILocalVariable(name: "skge", scope: !18285, file: !3, line: 324, type: !9172)
!18291 = !DILocation(line: 324, column: 20, scope: !18285)
!18292 = !DILocation(line: 324, column: 39, scope: !18285)
!18293 = !DILocation(line: 324, column: 27, scope: !18285)
!18294 = !DILocalVariable(name: "hw", scope: !18285, file: !3, line: 325, type: !9407)
!18295 = !DILocation(line: 325, column: 24, scope: !18285)
!18296 = !DILocation(line: 325, column: 29, scope: !18285)
!18297 = !DILocation(line: 325, column: 35, scope: !18285)
!18298 = !DILocalVariable(name: "supported", scope: !18285, file: !3, line: 326, type: !987)
!18299 = !DILocation(line: 326, column: 6, scope: !18285)
!18300 = !DILocation(line: 326, column: 39, scope: !18285)
!18301 = !DILocation(line: 326, column: 18, scope: !18285)
!18302 = !DILocalVariable(name: "err", scope: !18285, file: !3, line: 327, type: !32)
!18303 = !DILocation(line: 327, column: 6, scope: !18285)
!18304 = !DILocalVariable(name: "advertising", scope: !18285, file: !3, line: 328, type: !987)
!18305 = !DILocation(line: 328, column: 6, scope: !18285)
!18306 = !DILocation(line: 331, column: 7, scope: !18285)
!18307 = !DILocation(line: 331, column: 12, scope: !18285)
!18308 = !DILocation(line: 331, column: 23, scope: !18285)
!18309 = !DILocation(line: 330, column: 2, scope: !18285)
!18310 = !DILocation(line: 333, column: 6, scope: !18311)
!18311 = distinct !DILexicalBlock(scope: !18285, file: !3, line: 333, column: 6)
!18312 = !DILocation(line: 333, column: 11, scope: !18311)
!18313 = !DILocation(line: 333, column: 16, scope: !18311)
!18314 = !DILocation(line: 333, column: 24, scope: !18311)
!18315 = !DILocation(line: 333, column: 6, scope: !18285)
!18316 = !DILocation(line: 334, column: 17, scope: !18317)
!18317 = distinct !DILexicalBlock(scope: !18311, file: !3, line: 333, column: 43)
!18318 = !DILocation(line: 334, column: 15, scope: !18317)
!18319 = !DILocation(line: 335, column: 3, scope: !18317)
!18320 = !DILocation(line: 335, column: 9, scope: !18317)
!18321 = !DILocation(line: 335, column: 16, scope: !18317)
!18322 = !DILocation(line: 336, column: 3, scope: !18317)
!18323 = !DILocation(line: 336, column: 9, scope: !18317)
!18324 = !DILocation(line: 336, column: 15, scope: !18317)
!18325 = !DILocation(line: 337, column: 2, scope: !18317)
!18326 = !DILocalVariable(name: "setting", scope: !18327, file: !3, line: 338, type: !987)
!18327 = distinct !DILexicalBlock(scope: !18311, file: !3, line: 337, column: 9)
!18328 = !DILocation(line: 338, column: 7, scope: !18327)
!18329 = !DILocalVariable(name: "speed", scope: !18327, file: !3, line: 339, type: !987)
!18330 = !DILocation(line: 339, column: 7, scope: !18327)
!18331 = !DILocation(line: 339, column: 15, scope: !18327)
!18332 = !DILocation(line: 339, column: 20, scope: !18327)
!18333 = !DILocation(line: 339, column: 25, scope: !18327)
!18334 = !DILocation(line: 341, column: 11, scope: !18327)
!18335 = !DILocation(line: 341, column: 3, scope: !18327)
!18336 = !DILocation(line: 343, column: 8, scope: !18337)
!18337 = distinct !DILexicalBlock(scope: !18338, file: !3, line: 343, column: 8)
!18338 = distinct !DILexicalBlock(scope: !18327, file: !3, line: 341, column: 18)
!18339 = !DILocation(line: 343, column: 13, scope: !18337)
!18340 = !DILocation(line: 343, column: 18, scope: !18337)
!18341 = !DILocation(line: 343, column: 25, scope: !18337)
!18342 = !DILocation(line: 343, column: 8, scope: !18338)
!18343 = !DILocation(line: 344, column: 13, scope: !18337)
!18344 = !DILocation(line: 344, column: 5, scope: !18337)
!18345 = !DILocation(line: 345, column: 13, scope: !18346)
!18346 = distinct !DILexicalBlock(scope: !18337, file: !3, line: 345, column: 13)
!18347 = !DILocation(line: 345, column: 18, scope: !18346)
!18348 = !DILocation(line: 345, column: 23, scope: !18346)
!18349 = !DILocation(line: 345, column: 30, scope: !18346)
!18350 = !DILocation(line: 345, column: 13, scope: !18337)
!18351 = !DILocation(line: 346, column: 13, scope: !18346)
!18352 = !DILocation(line: 346, column: 5, scope: !18346)
!18353 = !DILocation(line: 348, column: 5, scope: !18346)
!18354 = !DILocation(line: 349, column: 4, scope: !18338)
!18355 = !DILocation(line: 351, column: 8, scope: !18356)
!18356 = distinct !DILexicalBlock(scope: !18338, file: !3, line: 351, column: 8)
!18357 = !DILocation(line: 351, column: 13, scope: !18356)
!18358 = !DILocation(line: 351, column: 18, scope: !18356)
!18359 = !DILocation(line: 351, column: 25, scope: !18356)
!18360 = !DILocation(line: 351, column: 8, scope: !18338)
!18361 = !DILocation(line: 352, column: 13, scope: !18356)
!18362 = !DILocation(line: 352, column: 5, scope: !18356)
!18363 = !DILocation(line: 353, column: 13, scope: !18364)
!18364 = distinct !DILexicalBlock(scope: !18356, file: !3, line: 353, column: 13)
!18365 = !DILocation(line: 353, column: 18, scope: !18364)
!18366 = !DILocation(line: 353, column: 23, scope: !18364)
!18367 = !DILocation(line: 353, column: 30, scope: !18364)
!18368 = !DILocation(line: 353, column: 13, scope: !18356)
!18369 = !DILocation(line: 354, column: 13, scope: !18364)
!18370 = !DILocation(line: 354, column: 5, scope: !18364)
!18371 = !DILocation(line: 356, column: 5, scope: !18364)
!18372 = !DILocation(line: 357, column: 4, scope: !18338)
!18373 = !DILocation(line: 360, column: 8, scope: !18374)
!18374 = distinct !DILexicalBlock(scope: !18338, file: !3, line: 360, column: 8)
!18375 = !DILocation(line: 360, column: 13, scope: !18374)
!18376 = !DILocation(line: 360, column: 18, scope: !18374)
!18377 = !DILocation(line: 360, column: 25, scope: !18374)
!18378 = !DILocation(line: 360, column: 8, scope: !18338)
!18379 = !DILocation(line: 361, column: 13, scope: !18374)
!18380 = !DILocation(line: 361, column: 5, scope: !18374)
!18381 = !DILocation(line: 362, column: 13, scope: !18382)
!18382 = distinct !DILexicalBlock(scope: !18374, file: !3, line: 362, column: 13)
!18383 = !DILocation(line: 362, column: 18, scope: !18382)
!18384 = !DILocation(line: 362, column: 23, scope: !18382)
!18385 = !DILocation(line: 362, column: 30, scope: !18382)
!18386 = !DILocation(line: 362, column: 13, scope: !18374)
!18387 = !DILocation(line: 363, column: 13, scope: !18382)
!18388 = !DILocation(line: 363, column: 5, scope: !18382)
!18389 = !DILocation(line: 365, column: 5, scope: !18382)
!18390 = !DILocation(line: 366, column: 4, scope: !18338)
!18391 = !DILocation(line: 368, column: 4, scope: !18338)
!18392 = !DILocation(line: 371, column: 8, scope: !18393)
!18393 = distinct !DILexicalBlock(scope: !18327, file: !3, line: 371, column: 7)
!18394 = !DILocation(line: 371, column: 18, scope: !18393)
!18395 = !DILocation(line: 371, column: 16, scope: !18393)
!18396 = !DILocation(line: 371, column: 29, scope: !18393)
!18397 = !DILocation(line: 371, column: 7, scope: !18327)
!18398 = !DILocation(line: 372, column: 4, scope: !18393)
!18399 = !DILocation(line: 374, column: 17, scope: !18327)
!18400 = !DILocation(line: 374, column: 3, scope: !18327)
!18401 = !DILocation(line: 374, column: 9, scope: !18327)
!18402 = !DILocation(line: 374, column: 15, scope: !18327)
!18403 = !DILocation(line: 375, column: 18, scope: !18327)
!18404 = !DILocation(line: 375, column: 23, scope: !18327)
!18405 = !DILocation(line: 375, column: 28, scope: !18327)
!18406 = !DILocation(line: 375, column: 3, scope: !18327)
!18407 = !DILocation(line: 375, column: 9, scope: !18327)
!18408 = !DILocation(line: 375, column: 16, scope: !18327)
!18409 = !DILocation(line: 378, column: 18, scope: !18285)
!18410 = !DILocation(line: 378, column: 23, scope: !18285)
!18411 = !DILocation(line: 378, column: 28, scope: !18285)
!18412 = !DILocation(line: 378, column: 2, scope: !18285)
!18413 = !DILocation(line: 378, column: 8, scope: !18285)
!18414 = !DILocation(line: 378, column: 16, scope: !18285)
!18415 = !DILocation(line: 379, column: 22, scope: !18285)
!18416 = !DILocation(line: 379, column: 2, scope: !18285)
!18417 = !DILocation(line: 379, column: 8, scope: !18285)
!18418 = !DILocation(line: 379, column: 20, scope: !18285)
!18419 = !DILocation(line: 381, column: 20, scope: !18420)
!18420 = distinct !DILexicalBlock(scope: !18285, file: !3, line: 381, column: 6)
!18421 = !DILocation(line: 381, column: 6, scope: !18420)
!18422 = !DILocation(line: 381, column: 6, scope: !18285)
!18423 = !DILocation(line: 382, column: 13, scope: !18424)
!18424 = distinct !DILexicalBlock(scope: !18420, file: !3, line: 381, column: 26)
!18425 = !DILocation(line: 382, column: 3, scope: !18424)
!18426 = !DILocation(line: 383, column: 17, scope: !18424)
!18427 = !DILocation(line: 383, column: 9, scope: !18424)
!18428 = !DILocation(line: 383, column: 7, scope: !18424)
!18429 = !DILocation(line: 384, column: 7, scope: !18430)
!18430 = distinct !DILexicalBlock(scope: !18424, file: !3, line: 384, column: 7)
!18431 = !DILocation(line: 384, column: 7, scope: !18424)
!18432 = !DILocation(line: 385, column: 14, scope: !18433)
!18433 = distinct !DILexicalBlock(scope: !18430, file: !3, line: 384, column: 12)
!18434 = !DILocation(line: 385, column: 4, scope: !18433)
!18435 = !DILocation(line: 386, column: 11, scope: !18433)
!18436 = !DILocation(line: 386, column: 4, scope: !18433)
!18437 = !DILocation(line: 388, column: 2, scope: !18424)
!18438 = !DILocation(line: 390, column: 2, scope: !18285)
!18439 = !DILocation(line: 391, column: 1, scope: !18285)
!18440 = distinct !DISubprogram(name: "skge_phy_reset", scope: !3, file: !3, line: 2414, type: !9434, scopeLine: 2415, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!18441 = !DILocalVariable(name: "skge", arg: 1, scope: !18440, file: !3, line: 2414, type: !9172)
!18442 = !DILocation(line: 2414, column: 46, scope: !18440)
!18443 = !DILocalVariable(name: "hw", scope: !18440, file: !3, line: 2416, type: !8794)
!18444 = !DILocation(line: 2416, column: 18, scope: !18440)
!18445 = !DILocation(line: 2416, column: 23, scope: !18440)
!18446 = !DILocation(line: 2416, column: 29, scope: !18440)
!18447 = !DILocalVariable(name: "port", scope: !18440, file: !3, line: 2417, type: !32)
!18448 = !DILocation(line: 2417, column: 6, scope: !18440)
!18449 = !DILocation(line: 2417, column: 13, scope: !18440)
!18450 = !DILocation(line: 2417, column: 19, scope: !18440)
!18451 = !DILocalVariable(name: "dev", scope: !18440, file: !3, line: 2418, type: !290)
!18452 = !DILocation(line: 2418, column: 21, scope: !18440)
!18453 = !DILocation(line: 2418, column: 27, scope: !18440)
!18454 = !DILocation(line: 2418, column: 31, scope: !18440)
!18455 = !DILocation(line: 2418, column: 35, scope: !18440)
!18456 = !DILocation(line: 2420, column: 19, scope: !18440)
!18457 = !DILocation(line: 2420, column: 25, scope: !18440)
!18458 = !DILocation(line: 2420, column: 2, scope: !18440)
!18459 = !DILocation(line: 2421, column: 20, scope: !18440)
!18460 = !DILocation(line: 2421, column: 26, scope: !18440)
!18461 = !DILocation(line: 2421, column: 2, scope: !18440)
!18462 = !DILocation(line: 2423, column: 16, scope: !18440)
!18463 = !DILocation(line: 2423, column: 20, scope: !18440)
!18464 = !DILocation(line: 2423, column: 2, scope: !18440)
!18465 = !DILocation(line: 2424, column: 17, scope: !18466)
!18466 = distinct !DILexicalBlock(scope: !18440, file: !3, line: 2424, column: 6)
!18467 = !DILocation(line: 2424, column: 6, scope: !18466)
!18468 = !DILocation(line: 2424, column: 6, scope: !18440)
!18469 = !DILocation(line: 2425, column: 17, scope: !18470)
!18470 = distinct !DILexicalBlock(scope: !18466, file: !3, line: 2424, column: 22)
!18471 = !DILocation(line: 2425, column: 21, scope: !18470)
!18472 = !DILocation(line: 2425, column: 3, scope: !18470)
!18473 = !DILocation(line: 2426, column: 20, scope: !18470)
!18474 = !DILocation(line: 2426, column: 24, scope: !18470)
!18475 = !DILocation(line: 2426, column: 3, scope: !18470)
!18476 = !DILocation(line: 2427, column: 2, scope: !18470)
!18477 = !DILocation(line: 2428, column: 15, scope: !18478)
!18478 = distinct !DILexicalBlock(scope: !18466, file: !3, line: 2427, column: 9)
!18479 = !DILocation(line: 2428, column: 19, scope: !18478)
!18480 = !DILocation(line: 2428, column: 3, scope: !18478)
!18481 = !DILocation(line: 2429, column: 14, scope: !18478)
!18482 = !DILocation(line: 2429, column: 18, scope: !18478)
!18483 = !DILocation(line: 2429, column: 3, scope: !18478)
!18484 = !DILocation(line: 2431, column: 18, scope: !18440)
!18485 = !DILocation(line: 2431, column: 22, scope: !18440)
!18486 = !DILocation(line: 2431, column: 2, scope: !18440)
!18487 = !DILocation(line: 2433, column: 21, scope: !18440)
!18488 = !DILocation(line: 2433, column: 2, scope: !18440)
!18489 = !DILocation(line: 2434, column: 1, scope: !18440)
!18490 = distinct !DISubprogram(name: "skge_vpd_read", scope: !3, file: !3, line: 795, type: !18491, scopeLine: 796, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!18491 = !DISubroutineType(types: !18492)
!18492 = !{!987, !8799, !32, !581}
!18493 = !DILocalVariable(name: "pdev", arg: 1, scope: !18490, file: !3, line: 795, type: !8799)
!18494 = !DILocation(line: 795, column: 42, scope: !18490)
!18495 = !DILocalVariable(name: "cap", arg: 2, scope: !18490, file: !3, line: 795, type: !32)
!18496 = !DILocation(line: 795, column: 52, scope: !18490)
!18497 = !DILocalVariable(name: "offset", arg: 3, scope: !18490, file: !3, line: 795, type: !581)
!18498 = !DILocation(line: 795, column: 61, scope: !18490)
!18499 = !DILocalVariable(name: "val", scope: !18490, file: !3, line: 797, type: !987)
!18500 = !DILocation(line: 797, column: 6, scope: !18490)
!18501 = !DILocation(line: 799, column: 24, scope: !18490)
!18502 = !DILocation(line: 799, column: 30, scope: !18490)
!18503 = !DILocation(line: 799, column: 34, scope: !18490)
!18504 = !DILocation(line: 799, column: 50, scope: !18490)
!18505 = !DILocation(line: 799, column: 2, scope: !18490)
!18506 = !DILocation(line: 801, column: 2, scope: !18490)
!18507 = !DILocation(line: 802, column: 24, scope: !18508)
!18508 = distinct !DILexicalBlock(scope: !18490, file: !3, line: 801, column: 5)
!18509 = !DILocation(line: 802, column: 30, scope: !18508)
!18510 = !DILocation(line: 802, column: 34, scope: !18508)
!18511 = !DILocation(line: 802, column: 3, scope: !18508)
!18512 = !DILocation(line: 803, column: 2, scope: !18508)
!18513 = !DILocation(line: 803, column: 13, scope: !18490)
!18514 = !DILocation(line: 803, column: 20, scope: !18490)
!18515 = !DILocation(line: 803, column: 11, scope: !18490)
!18516 = distinct !{!18516, !18506, !18517}
!18517 = !DILocation(line: 803, column: 37, scope: !18490)
!18518 = !DILocation(line: 805, column: 24, scope: !18490)
!18519 = !DILocation(line: 805, column: 30, scope: !18490)
!18520 = !DILocation(line: 805, column: 34, scope: !18490)
!18521 = !DILocation(line: 805, column: 2, scope: !18490)
!18522 = !DILocation(line: 806, column: 9, scope: !18490)
!18523 = !DILocation(line: 806, column: 2, scope: !18490)
!18524 = distinct !DISubprogram(name: "skge_vpd_write", scope: !3, file: !3, line: 809, type: !18525, scopeLine: 810, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!18525 = !DISubroutineType(types: !18526)
!18526 = !{null, !8799, !32, !581, !987}
!18527 = !DILocalVariable(name: "pdev", arg: 1, scope: !18524, file: !3, line: 809, type: !8799)
!18528 = !DILocation(line: 809, column: 44, scope: !18524)
!18529 = !DILocalVariable(name: "cap", arg: 2, scope: !18524, file: !3, line: 809, type: !32)
!18530 = !DILocation(line: 809, column: 54, scope: !18524)
!18531 = !DILocalVariable(name: "offset", arg: 3, scope: !18524, file: !3, line: 809, type: !581)
!18532 = !DILocation(line: 809, column: 63, scope: !18524)
!18533 = !DILocalVariable(name: "val", arg: 4, scope: !18524, file: !3, line: 809, type: !987)
!18534 = !DILocation(line: 809, column: 75, scope: !18524)
!18535 = !DILocation(line: 811, column: 25, scope: !18524)
!18536 = !DILocation(line: 811, column: 31, scope: !18524)
!18537 = !DILocation(line: 811, column: 35, scope: !18524)
!18538 = !DILocation(line: 811, column: 51, scope: !18524)
!18539 = !DILocation(line: 811, column: 2, scope: !18524)
!18540 = !DILocation(line: 812, column: 24, scope: !18524)
!18541 = !DILocation(line: 812, column: 30, scope: !18524)
!18542 = !DILocation(line: 812, column: 34, scope: !18524)
!18543 = !DILocation(line: 813, column: 10, scope: !18524)
!18544 = !DILocation(line: 813, column: 17, scope: !18524)
!18545 = !DILocation(line: 812, column: 2, scope: !18524)
!18546 = !DILocation(line: 815, column: 2, scope: !18524)
!18547 = !DILocation(line: 816, column: 24, scope: !18548)
!18548 = distinct !DILexicalBlock(scope: !18524, file: !3, line: 815, column: 5)
!18549 = !DILocation(line: 816, column: 30, scope: !18548)
!18550 = !DILocation(line: 816, column: 34, scope: !18548)
!18551 = !DILocation(line: 816, column: 3, scope: !18548)
!18552 = !DILocation(line: 817, column: 2, scope: !18548)
!18553 = !DILocation(line: 817, column: 11, scope: !18524)
!18554 = !DILocation(line: 817, column: 18, scope: !18524)
!18555 = distinct !{!18555, !18546, !18556}
!18556 = !DILocation(line: 817, column: 34, scope: !18524)
!18557 = !DILocation(line: 818, column: 1, scope: !18524)
!18558 = distinct !DISubprogram(name: "skge_clk2usec", scope: !3, file: !3, line: 606, type: !12663, scopeLine: 607, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!18559 = !DILocalVariable(name: "hw", arg: 1, scope: !18558, file: !3, line: 606, type: !9407)
!18560 = !DILocation(line: 606, column: 55, scope: !18558)
!18561 = !DILocalVariable(name: "ticks", arg: 2, scope: !18558, file: !3, line: 606, type: !987)
!18562 = !DILocation(line: 606, column: 63, scope: !18558)
!18563 = !DILocation(line: 608, column: 10, scope: !18558)
!18564 = !DILocation(line: 608, column: 16, scope: !18558)
!18565 = !DILocation(line: 608, column: 32, scope: !18558)
!18566 = !DILocation(line: 608, column: 26, scope: !18558)
!18567 = !DILocation(line: 608, column: 24, scope: !18558)
!18568 = !DILocation(line: 608, column: 2, scope: !18558)
!18569 = distinct !DISubprogram(name: "skge_tx_done", scope: !3, file: !3, line: 3143, type: !406, scopeLine: 3144, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!18570 = !DILocalVariable(name: "dev", arg: 1, scope: !18569, file: !3, line: 3143, type: !290)
!18571 = !DILocation(line: 3143, column: 45, scope: !18569)
!18572 = !DILocalVariable(name: "skge", scope: !18569, file: !3, line: 3145, type: !9172)
!18573 = !DILocation(line: 3145, column: 20, scope: !18569)
!18574 = !DILocation(line: 3145, column: 39, scope: !18569)
!18575 = !DILocation(line: 3145, column: 27, scope: !18569)
!18576 = !DILocalVariable(name: "ring", scope: !18569, file: !3, line: 3146, type: !12862)
!18577 = !DILocation(line: 3146, column: 20, scope: !18569)
!18578 = !DILocation(line: 3146, column: 28, scope: !18569)
!18579 = !DILocation(line: 3146, column: 34, scope: !18569)
!18580 = !DILocalVariable(name: "e", scope: !18569, file: !3, line: 3147, type: !9210)
!18581 = !DILocation(line: 3147, column: 23, scope: !18569)
!18582 = !DILocalVariable(name: "bytes_compl", scope: !18569, file: !3, line: 3148, type: !7)
!18583 = !DILocation(line: 3148, column: 15, scope: !18569)
!18584 = !DILocalVariable(name: "pkts_compl", scope: !18569, file: !3, line: 3148, type: !7)
!18585 = !DILocation(line: 3148, column: 32, scope: !18569)
!18586 = !DILocation(line: 3150, column: 14, scope: !18569)
!18587 = !DILocation(line: 3150, column: 20, scope: !18569)
!18588 = !DILocation(line: 3150, column: 24, scope: !18569)
!18589 = !DILocation(line: 3150, column: 2, scope: !18569)
!18590 = !DILocation(line: 3152, column: 11, scope: !18591)
!18591 = distinct !DILexicalBlock(scope: !18569, file: !3, line: 3152, column: 2)
!18592 = !DILocation(line: 3152, column: 17, scope: !18591)
!18593 = !DILocation(line: 3152, column: 9, scope: !18591)
!18594 = !DILocation(line: 3152, column: 7, scope: !18591)
!18595 = !DILocation(line: 3152, column: 27, scope: !18596)
!18596 = distinct !DILexicalBlock(scope: !18591, file: !3, line: 3152, column: 2)
!18597 = !DILocation(line: 3152, column: 32, scope: !18596)
!18598 = !DILocation(line: 3152, column: 38, scope: !18596)
!18599 = !DILocation(line: 3152, column: 29, scope: !18596)
!18600 = !DILocation(line: 3152, column: 2, scope: !18591)
!18601 = !DILocalVariable(name: "control", scope: !18602, file: !3, line: 3153, type: !987)
!18602 = distinct !DILexicalBlock(scope: !18596, file: !3, line: 3152, column: 59)
!18603 = !DILocation(line: 3153, column: 7, scope: !18602)
!18604 = !DILocation(line: 3153, column: 48, scope: !18602)
!18605 = !DILocation(line: 3153, column: 51, scope: !18602)
!18606 = !DILocation(line: 3153, column: 18, scope: !18602)
!18607 = !DILocation(line: 3153, column: 58, scope: !18602)
!18608 = !DILocation(line: 3155, column: 7, scope: !18609)
!18609 = distinct !DILexicalBlock(scope: !18602, file: !3, line: 3155, column: 7)
!18610 = !DILocation(line: 3155, column: 15, scope: !18609)
!18611 = !DILocation(line: 3155, column: 7, scope: !18602)
!18612 = !DILocation(line: 3156, column: 4, scope: !18609)
!18613 = !DILocation(line: 3158, column: 17, scope: !18602)
!18614 = !DILocation(line: 3158, column: 23, scope: !18602)
!18615 = !DILocation(line: 3158, column: 27, scope: !18602)
!18616 = !DILocation(line: 3158, column: 33, scope: !18602)
!18617 = !DILocation(line: 3158, column: 36, scope: !18602)
!18618 = !DILocation(line: 3158, column: 3, scope: !18602)
!18619 = !DILocation(line: 3160, column: 7, scope: !18620)
!18620 = distinct !DILexicalBlock(scope: !18602, file: !3, line: 3160, column: 7)
!18621 = !DILocation(line: 3160, column: 15, scope: !18620)
!18622 = !DILocation(line: 3160, column: 7, scope: !18602)
!18623 = !DILocation(line: 3161, column: 4, scope: !18624)
!18624 = distinct !DILexicalBlock(scope: !18620, file: !3, line: 3160, column: 26)
!18625 = !DILocation(line: 3161, column: 4, scope: !18626)
!18626 = distinct !DILexicalBlock(scope: !18627, file: !3, line: 3161, column: 4)
!18627 = distinct !DILexicalBlock(scope: !18624, file: !3, line: 3161, column: 4)
!18628 = !DILocation(line: 3161, column: 4, scope: !18627)
!18629 = !DILocation(line: 3165, column: 14, scope: !18624)
!18630 = !DILocation(line: 3166, column: 19, scope: !18624)
!18631 = !DILocation(line: 3166, column: 22, scope: !18624)
!18632 = !DILocation(line: 3166, column: 27, scope: !18624)
!18633 = !DILocation(line: 3166, column: 16, scope: !18624)
!18634 = !DILocation(line: 3168, column: 24, scope: !18624)
!18635 = !DILocation(line: 3168, column: 27, scope: !18624)
!18636 = !DILocation(line: 3168, column: 4, scope: !18624)
!18637 = !DILocation(line: 3169, column: 3, scope: !18624)
!18638 = !DILocation(line: 3170, column: 2, scope: !18602)
!18639 = !DILocation(line: 3152, column: 50, scope: !18596)
!18640 = !DILocation(line: 3152, column: 53, scope: !18596)
!18641 = !DILocation(line: 3152, column: 48, scope: !18596)
!18642 = !DILocation(line: 3152, column: 2, scope: !18596)
!18643 = distinct !{!18643, !18600, !18644}
!18644 = !DILocation(line: 3170, column: 2, scope: !18591)
!18645 = !DILocation(line: 3171, column: 25, scope: !18569)
!18646 = !DILocation(line: 3171, column: 30, scope: !18569)
!18647 = !DILocation(line: 3171, column: 42, scope: !18569)
!18648 = !DILocation(line: 3171, column: 2, scope: !18569)
!18649 = !DILocation(line: 3172, column: 27, scope: !18569)
!18650 = !DILocation(line: 3172, column: 2, scope: !18569)
!18651 = !DILocation(line: 3172, column: 8, scope: !18569)
!18652 = !DILocation(line: 3172, column: 16, scope: !18569)
!18653 = !DILocation(line: 3172, column: 25, scope: !18569)
!18654 = !DILocation(line: 3175, column: 2, scope: !18569)
!18655 = !{i32 -2139411865}
!18656 = !DILocation(line: 3177, column: 6, scope: !18657)
!18657 = distinct !DILexicalBlock(scope: !18569, file: !3, line: 3177, column: 6)
!18658 = !DILocation(line: 0, scope: !18657)
!18659 = !DILocation(line: 3177, column: 6, scope: !18569)
!18660 = !DILocation(line: 3179, column: 17, scope: !18661)
!18661 = distinct !DILexicalBlock(scope: !18657, file: !3, line: 3178, column: 52)
!18662 = !DILocation(line: 3179, column: 3, scope: !18661)
!18663 = !DILocation(line: 3180, column: 7, scope: !18664)
!18664 = distinct !DILexicalBlock(scope: !18661, file: !3, line: 3180, column: 7)
!18665 = !DILocation(line: 0, scope: !18664)
!18666 = !DILocation(line: 3180, column: 7, scope: !18661)
!18667 = !DILocation(line: 3182, column: 21, scope: !18668)
!18668 = distinct !DILexicalBlock(scope: !18664, file: !3, line: 3181, column: 53)
!18669 = !DILocation(line: 3182, column: 4, scope: !18668)
!18670 = !DILocation(line: 3184, column: 3, scope: !18668)
!18671 = !DILocation(line: 3185, column: 19, scope: !18661)
!18672 = !DILocation(line: 3185, column: 3, scope: !18661)
!18673 = !DILocation(line: 3186, column: 2, scope: !18661)
!18674 = !DILocation(line: 3187, column: 1, scope: !18569)
!18675 = distinct !DISubprogram(name: "skge_rx_get", scope: !3, file: !3, line: 3043, type: !18676, scopeLine: 3046, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!18676 = !DISubroutineType(types: !18677)
!18677 = !{!415, !290, !9210, !987, !987, !581}
!18678 = !DILocalVariable(name: "dev", arg: 1, scope: !18675, file: !3, line: 3043, type: !290)
!18679 = !DILocation(line: 3043, column: 55, scope: !18675)
!18680 = !DILocalVariable(name: "e", arg: 2, scope: !18675, file: !3, line: 3044, type: !9210)
!18681 = !DILocation(line: 3044, column: 29, scope: !18675)
!18682 = !DILocalVariable(name: "control", arg: 3, scope: !18675, file: !3, line: 3045, type: !987)
!18683 = !DILocation(line: 3045, column: 12, scope: !18675)
!18684 = !DILocalVariable(name: "status", arg: 4, scope: !18675, file: !3, line: 3045, type: !987)
!18685 = !DILocation(line: 3045, column: 25, scope: !18675)
!18686 = !DILocalVariable(name: "csum", arg: 5, scope: !18675, file: !3, line: 3045, type: !581)
!18687 = !DILocation(line: 3045, column: 37, scope: !18675)
!18688 = !DILocalVariable(name: "skge", scope: !18675, file: !3, line: 3047, type: !9172)
!18689 = !DILocation(line: 3047, column: 20, scope: !18675)
!18690 = !DILocation(line: 3047, column: 39, scope: !18675)
!18691 = !DILocation(line: 3047, column: 27, scope: !18675)
!18692 = !DILocalVariable(name: "skb", scope: !18675, file: !3, line: 3048, type: !415)
!18693 = !DILocation(line: 3048, column: 18, scope: !18675)
!18694 = !DILocalVariable(name: "len", scope: !18675, file: !3, line: 3049, type: !581)
!18695 = !DILocation(line: 3049, column: 6, scope: !18675)
!18696 = !DILocation(line: 3049, column: 12, scope: !18675)
!18697 = !DILocation(line: 3049, column: 20, scope: !18675)
!18698 = !DILocation(line: 3051, column: 2, scope: !18675)
!18699 = !DILocation(line: 3051, column: 2, scope: !18700)
!18700 = distinct !DILexicalBlock(scope: !18701, file: !3, line: 3051, column: 2)
!18701 = distinct !DILexicalBlock(scope: !18675, file: !3, line: 3051, column: 2)
!18702 = !DILocation(line: 3051, column: 2, scope: !18701)
!18703 = !DILocation(line: 3055, column: 6, scope: !18704)
!18704 = distinct !DILexicalBlock(scope: !18675, file: !3, line: 3055, column: 6)
!18705 = !DILocation(line: 3055, column: 12, scope: !18704)
!18706 = !DILocation(line: 3055, column: 18, scope: !18704)
!18707 = !DILocation(line: 3055, column: 10, scope: !18704)
!18708 = !DILocation(line: 3055, column: 6, scope: !18675)
!18709 = !DILocation(line: 3056, column: 3, scope: !18704)
!18710 = !DILocation(line: 3058, column: 7, scope: !18711)
!18711 = distinct !DILexicalBlock(scope: !18675, file: !3, line: 3058, column: 6)
!18712 = !DILocation(line: 3058, column: 15, scope: !18711)
!18713 = !DILocation(line: 3058, column: 36, scope: !18711)
!18714 = !DILocation(line: 3058, column: 6, scope: !18675)
!18715 = !DILocation(line: 3059, column: 3, scope: !18711)
!18716 = !DILocation(line: 3061, column: 21, scope: !18717)
!18717 = distinct !DILexicalBlock(scope: !18675, file: !3, line: 3061, column: 6)
!18718 = !DILocation(line: 3061, column: 27, scope: !18717)
!18719 = !DILocation(line: 3061, column: 31, scope: !18717)
!18720 = !DILocation(line: 3061, column: 6, scope: !18717)
!18721 = !DILocation(line: 3061, column: 6, scope: !18675)
!18722 = !DILocation(line: 3062, column: 3, scope: !18717)
!18723 = !DILocation(line: 3064, column: 17, scope: !18724)
!18724 = distinct !DILexicalBlock(scope: !18675, file: !3, line: 3064, column: 6)
!18725 = !DILocation(line: 3064, column: 23, scope: !18724)
!18726 = !DILocation(line: 3064, column: 27, scope: !18724)
!18727 = !DILocation(line: 3064, column: 6, scope: !18724)
!18728 = !DILocation(line: 3064, column: 38, scope: !18724)
!18729 = !DILocation(line: 3064, column: 35, scope: !18724)
!18730 = !DILocation(line: 3064, column: 6, scope: !18675)
!18731 = !DILocation(line: 3065, column: 3, scope: !18724)
!18732 = !DILocation(line: 3067, column: 6, scope: !18733)
!18733 = distinct !DILexicalBlock(scope: !18675, file: !3, line: 3067, column: 6)
!18734 = !DILocation(line: 3067, column: 10, scope: !18733)
!18735 = !DILocation(line: 3067, column: 6, scope: !18675)
!18736 = !DILocation(line: 3068, column: 35, scope: !18737)
!18737 = distinct !DILexicalBlock(scope: !18733, file: !3, line: 3067, column: 31)
!18738 = !DILocation(line: 3068, column: 40, scope: !18737)
!18739 = !DILocation(line: 3068, column: 9, scope: !18737)
!18740 = !DILocation(line: 3068, column: 7, scope: !18737)
!18741 = !DILocation(line: 3069, column: 8, scope: !18742)
!18742 = distinct !DILexicalBlock(scope: !18737, file: !3, line: 3069, column: 7)
!18743 = !DILocation(line: 3069, column: 7, scope: !18737)
!18744 = !DILocation(line: 3070, column: 4, scope: !18742)
!18745 = !DILocation(line: 3072, column: 28, scope: !18737)
!18746 = !DILocation(line: 3072, column: 34, scope: !18737)
!18747 = !DILocation(line: 3072, column: 38, scope: !18737)
!18748 = !DILocation(line: 3072, column: 44, scope: !18737)
!18749 = !DILocation(line: 3073, column: 6, scope: !18737)
!18750 = !DILocation(line: 3074, column: 6, scope: !18737)
!18751 = !DILocation(line: 3072, column: 3, scope: !18737)
!18752 = !DILocation(line: 3076, column: 29, scope: !18737)
!18753 = !DILocation(line: 3076, column: 32, scope: !18737)
!18754 = !DILocation(line: 3076, column: 37, scope: !18737)
!18755 = !DILocation(line: 3076, column: 42, scope: !18737)
!18756 = !DILocation(line: 3076, column: 48, scope: !18737)
!18757 = !DILocation(line: 3076, column: 3, scope: !18737)
!18758 = !DILocation(line: 3077, column: 31, scope: !18737)
!18759 = !DILocation(line: 3077, column: 37, scope: !18737)
!18760 = !DILocation(line: 3077, column: 41, scope: !18737)
!18761 = !DILocation(line: 3077, column: 47, scope: !18737)
!18762 = !DILocation(line: 3078, column: 9, scope: !18737)
!18763 = !DILocation(line: 3079, column: 9, scope: !18737)
!18764 = !DILocation(line: 3077, column: 3, scope: !18737)
!18765 = !DILocation(line: 3081, column: 17, scope: !18737)
!18766 = !DILocation(line: 3081, column: 20, scope: !18737)
!18767 = !DILocation(line: 3081, column: 26, scope: !18737)
!18768 = !DILocation(line: 3081, column: 3, scope: !18737)
!18769 = !DILocation(line: 3082, column: 2, scope: !18737)
!18770 = !DILocalVariable(name: "ee", scope: !18771, file: !3, line: 3083, type: !9211)
!18771 = distinct !DILexicalBlock(scope: !18733, file: !3, line: 3082, column: 9)
!18772 = !DILocation(line: 3083, column: 23, scope: !18771)
!18773 = !DILocalVariable(name: "nskb", scope: !18771, file: !3, line: 3084, type: !415)
!18774 = !DILocation(line: 3084, column: 19, scope: !18771)
!18775 = !DILocation(line: 3086, column: 36, scope: !18771)
!18776 = !DILocation(line: 3086, column: 41, scope: !18771)
!18777 = !DILocation(line: 3086, column: 47, scope: !18771)
!18778 = !DILocation(line: 3086, column: 10, scope: !18771)
!18779 = !DILocation(line: 3086, column: 8, scope: !18771)
!18780 = !DILocation(line: 3087, column: 8, scope: !18781)
!18781 = distinct !DILexicalBlock(scope: !18771, file: !3, line: 3087, column: 7)
!18782 = !DILocation(line: 3087, column: 7, scope: !18771)
!18783 = !DILocation(line: 3088, column: 4, scope: !18781)
!18784 = !DILocation(line: 3090, column: 9, scope: !18771)
!18785 = !DILocation(line: 3090, column: 8, scope: !18771)
!18786 = !DILocation(line: 3092, column: 12, scope: !18771)
!18787 = !DILocation(line: 3092, column: 7, scope: !18771)
!18788 = !DILocation(line: 3093, column: 3, scope: !18771)
!18789 = !DILocation(line: 3095, column: 21, scope: !18790)
!18790 = distinct !DILexicalBlock(scope: !18771, file: !3, line: 3095, column: 7)
!18791 = !DILocation(line: 3095, column: 27, scope: !18790)
!18792 = !DILocation(line: 3095, column: 30, scope: !18790)
!18793 = !DILocation(line: 3095, column: 36, scope: !18790)
!18794 = !DILocation(line: 3095, column: 42, scope: !18790)
!18795 = !DILocation(line: 3095, column: 7, scope: !18790)
!18796 = !DILocation(line: 3095, column: 55, scope: !18790)
!18797 = !DILocation(line: 3095, column: 7, scope: !18771)
!18798 = !DILocation(line: 3096, column: 4, scope: !18799)
!18799 = distinct !DILexicalBlock(scope: !18790, file: !3, line: 3095, column: 60)
!18800 = !DILocation(line: 3097, column: 4, scope: !18799)
!18801 = !DILocation(line: 3100, column: 3, scope: !18771)
!18802 = !DILocation(line: 3105, column: 10, scope: !18675)
!18803 = !DILocation(line: 3105, column: 15, scope: !18675)
!18804 = !DILocation(line: 3105, column: 2, scope: !18675)
!18805 = !DILocation(line: 3107, column: 6, scope: !18806)
!18806 = distinct !DILexicalBlock(scope: !18675, file: !3, line: 3107, column: 6)
!18807 = !DILocation(line: 3107, column: 11, scope: !18806)
!18808 = !DILocation(line: 3107, column: 20, scope: !18806)
!18809 = !DILocation(line: 3107, column: 6, scope: !18675)
!18810 = !DILocation(line: 3108, column: 15, scope: !18811)
!18811 = distinct !DILexicalBlock(scope: !18806, file: !3, line: 3107, column: 38)
!18812 = !DILocation(line: 3108, column: 3, scope: !18811)
!18813 = !DILocation(line: 3108, column: 8, scope: !18811)
!18814 = !DILocation(line: 3108, column: 13, scope: !18811)
!18815 = !DILocation(line: 3109, column: 3, scope: !18811)
!18816 = !DILocation(line: 3109, column: 8, scope: !18811)
!18817 = !DILocation(line: 3109, column: 18, scope: !18811)
!18818 = !DILocation(line: 3110, column: 2, scope: !18811)
!18819 = !DILocation(line: 3112, column: 33, scope: !18675)
!18820 = !DILocation(line: 3112, column: 38, scope: !18675)
!18821 = !DILocation(line: 3112, column: 18, scope: !18675)
!18822 = !DILocation(line: 3112, column: 2, scope: !18675)
!18823 = !DILocation(line: 3112, column: 7, scope: !18675)
!18824 = !DILocation(line: 3112, column: 16, scope: !18675)
!18825 = !DILocation(line: 3114, column: 9, scope: !18675)
!18826 = !DILocation(line: 3114, column: 2, scope: !18675)
!18827 = !DILabel(scope: !18675, name: "error", file: !3, line: 3115)
!18828 = !DILocation(line: 3115, column: 1, scope: !18675)
!18829 = !DILocation(line: 3117, column: 2, scope: !18675)
!18830 = !DILocation(line: 3117, column: 2, scope: !18831)
!18831 = distinct !DILexicalBlock(scope: !18832, file: !3, line: 3117, column: 2)
!18832 = distinct !DILexicalBlock(scope: !18675, file: !3, line: 3117, column: 2)
!18833 = !DILocation(line: 3117, column: 2, scope: !18832)
!18834 = !DILocation(line: 3121, column: 17, scope: !18835)
!18835 = distinct !DILexicalBlock(scope: !18675, file: !3, line: 3121, column: 6)
!18836 = !DILocation(line: 3121, column: 23, scope: !18835)
!18837 = !DILocation(line: 3121, column: 6, scope: !18835)
!18838 = !DILocation(line: 3121, column: 6, scope: !18675)
!18839 = !DILocation(line: 3122, column: 7, scope: !18840)
!18840 = distinct !DILexicalBlock(scope: !18841, file: !3, line: 3122, column: 7)
!18841 = distinct !DILexicalBlock(scope: !18835, file: !3, line: 3121, column: 28)
!18842 = !DILocation(line: 3122, column: 14, scope: !18840)
!18843 = !DILocation(line: 3122, column: 7, scope: !18841)
!18844 = !DILocation(line: 3123, column: 4, scope: !18840)
!18845 = !DILocation(line: 3123, column: 9, scope: !18840)
!18846 = !DILocation(line: 3123, column: 15, scope: !18840)
!18847 = !DILocation(line: 3123, column: 31, scope: !18840)
!18848 = !DILocation(line: 3124, column: 7, scope: !18849)
!18849 = distinct !DILexicalBlock(scope: !18841, file: !3, line: 3124, column: 7)
!18850 = !DILocation(line: 3124, column: 14, scope: !18849)
!18851 = !DILocation(line: 3124, column: 7, scope: !18841)
!18852 = !DILocation(line: 3125, column: 4, scope: !18849)
!18853 = !DILocation(line: 3125, column: 9, scope: !18849)
!18854 = !DILocation(line: 3125, column: 15, scope: !18849)
!18855 = !DILocation(line: 3125, column: 30, scope: !18849)
!18856 = !DILocation(line: 3126, column: 7, scope: !18857)
!18857 = distinct !DILexicalBlock(scope: !18841, file: !3, line: 3126, column: 7)
!18858 = !DILocation(line: 3126, column: 14, scope: !18857)
!18859 = !DILocation(line: 3126, column: 7, scope: !18841)
!18860 = !DILocation(line: 3127, column: 4, scope: !18857)
!18861 = !DILocation(line: 3127, column: 9, scope: !18857)
!18862 = !DILocation(line: 3127, column: 15, scope: !18857)
!18863 = !DILocation(line: 3127, column: 28, scope: !18857)
!18864 = !DILocation(line: 3128, column: 2, scope: !18841)
!18865 = !DILocation(line: 3129, column: 7, scope: !18866)
!18866 = distinct !DILexicalBlock(scope: !18867, file: !3, line: 3129, column: 7)
!18867 = distinct !DILexicalBlock(scope: !18835, file: !3, line: 3128, column: 9)
!18868 = !DILocation(line: 3129, column: 14, scope: !18866)
!18869 = !DILocation(line: 3129, column: 7, scope: !18867)
!18870 = !DILocation(line: 3130, column: 4, scope: !18866)
!18871 = !DILocation(line: 3130, column: 9, scope: !18866)
!18872 = !DILocation(line: 3130, column: 15, scope: !18866)
!18873 = !DILocation(line: 3130, column: 31, scope: !18866)
!18874 = !DILocation(line: 3131, column: 7, scope: !18875)
!18875 = distinct !DILexicalBlock(scope: !18867, file: !3, line: 3131, column: 7)
!18876 = !DILocation(line: 3131, column: 14, scope: !18875)
!18877 = !DILocation(line: 3131, column: 7, scope: !18867)
!18878 = !DILocation(line: 3132, column: 4, scope: !18875)
!18879 = !DILocation(line: 3132, column: 9, scope: !18875)
!18880 = !DILocation(line: 3132, column: 15, scope: !18875)
!18881 = !DILocation(line: 3132, column: 30, scope: !18875)
!18882 = !DILocation(line: 3133, column: 7, scope: !18883)
!18883 = distinct !DILexicalBlock(scope: !18867, file: !3, line: 3133, column: 7)
!18884 = !DILocation(line: 3133, column: 14, scope: !18883)
!18885 = !DILocation(line: 3133, column: 7, scope: !18867)
!18886 = !DILocation(line: 3134, column: 4, scope: !18883)
!18887 = !DILocation(line: 3134, column: 9, scope: !18883)
!18888 = !DILocation(line: 3134, column: 15, scope: !18883)
!18889 = !DILocation(line: 3134, column: 28, scope: !18883)
!18890 = !DILocation(line: 3121, column: 25, scope: !18835)
!18891 = !DILabel(scope: !18675, name: "resubmit", file: !3, line: 3137)
!18892 = !DILocation(line: 3137, column: 1, scope: !18675)
!18893 = !DILocation(line: 3138, column: 16, scope: !18675)
!18894 = !DILocation(line: 3138, column: 19, scope: !18675)
!18895 = !DILocation(line: 3138, column: 25, scope: !18675)
!18896 = !DILocation(line: 3138, column: 2, scope: !18675)
!18897 = !DILocation(line: 3139, column: 2, scope: !18675)
!18898 = !DILocation(line: 3140, column: 1, scope: !18675)
!18899 = distinct !DISubprogram(name: "arch_local_irq_save", scope: !12577, file: !12577, line: 666, type: !18900, scopeLine: 667, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!18900 = !DISubroutineType(types: !18901)
!18901 = !{!312}
!18902 = !DILocalVariable(name: "f", scope: !18899, file: !12577, line: 668, type: !312)
!18903 = !DILocation(line: 668, column: 16, scope: !18899)
!18904 = !DILocation(line: 670, column: 6, scope: !18899)
!18905 = !DILocation(line: 670, column: 4, scope: !18899)
!18906 = !DILocation(line: 671, column: 2, scope: !18899)
!18907 = !DILocation(line: 672, column: 9, scope: !18899)
!18908 = !DILocation(line: 672, column: 2, scope: !18899)
!18909 = distinct !DISubprogram(name: "dev_consume_skb_any", scope: !31, file: !31, line: 3822, type: !469, scopeLine: 3823, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!18910 = !DILocalVariable(name: "skb", arg: 1, scope: !18909, file: !31, line: 3822, type: !415)
!18911 = !DILocation(line: 3822, column: 56, scope: !18909)
!18912 = !DILocation(line: 3824, column: 22, scope: !18909)
!18913 = !DILocation(line: 3824, column: 2, scope: !18909)
!18914 = !DILocation(line: 3825, column: 1, scope: !18909)
!18915 = distinct !DISubprogram(name: "netdev_completed_queue", scope: !31, file: !31, line: 3504, type: !18916, scopeLine: 3506, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!18916 = !DISubroutineType(types: !18917)
!18917 = !{null, !290, !7, !7}
!18918 = !DILocalVariable(name: "dev", arg: 1, scope: !18915, file: !31, line: 3504, type: !290)
!18919 = !DILocation(line: 3504, column: 62, scope: !18915)
!18920 = !DILocalVariable(name: "pkts", arg: 2, scope: !18915, file: !31, line: 3505, type: !7)
!18921 = !DILocation(line: 3505, column: 21, scope: !18915)
!18922 = !DILocalVariable(name: "bytes", arg: 3, scope: !18915, file: !31, line: 3505, type: !7)
!18923 = !DILocation(line: 3505, column: 40, scope: !18915)
!18924 = !DILocation(line: 3507, column: 48, scope: !18915)
!18925 = !DILocation(line: 3507, column: 28, scope: !18915)
!18926 = !DILocation(line: 3507, column: 57, scope: !18915)
!18927 = !DILocation(line: 3507, column: 63, scope: !18915)
!18928 = !DILocation(line: 3507, column: 2, scope: !18915)
!18929 = !DILocation(line: 3508, column: 1, scope: !18915)
!18930 = distinct !DISubprogram(name: "netif_queue_stopped", scope: !31, file: !31, line: 3354, type: !11129, scopeLine: 3355, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!18931 = !DILocalVariable(name: "dev", arg: 1, scope: !18930, file: !31, line: 3354, type: !773)
!18932 = !DILocation(line: 3354, column: 65, scope: !18930)
!18933 = !DILocation(line: 3356, column: 52, scope: !18930)
!18934 = !DILocation(line: 3356, column: 32, scope: !18930)
!18935 = !DILocation(line: 3356, column: 9, scope: !18930)
!18936 = !DILocation(line: 3356, column: 2, scope: !18930)
!18937 = distinct !DISubprogram(name: "netdev_tx_completed_queue", scope: !31, file: !31, line: 3470, type: !18938, scopeLine: 3472, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!18938 = !DISubroutineType(types: !18939)
!18939 = !{null, !6437, !7, !7}
!18940 = !DILocalVariable(name: "dev_queue", arg: 1, scope: !18937, file: !31, line: 3470, type: !6437)
!18941 = !DILocation(line: 3470, column: 67, scope: !18937)
!18942 = !DILocalVariable(name: "pkts", arg: 2, scope: !18937, file: !31, line: 3471, type: !7)
!18943 = !DILocation(line: 3471, column: 24, scope: !18937)
!18944 = !DILocalVariable(name: "bytes", arg: 3, scope: !18937, file: !31, line: 3471, type: !7)
!18945 = !DILocation(line: 3471, column: 43, scope: !18937)
!18946 = !DILocation(line: 3474, column: 6, scope: !18947)
!18947 = distinct !DILexicalBlock(scope: !18937, file: !31, line: 3474, column: 6)
!18948 = !DILocation(line: 3474, column: 6, scope: !18937)
!18949 = !DILocation(line: 3475, column: 3, scope: !18947)
!18950 = !DILocation(line: 3477, column: 17, scope: !18937)
!18951 = !DILocation(line: 3477, column: 28, scope: !18937)
!18952 = !DILocation(line: 3477, column: 33, scope: !18937)
!18953 = !DILocation(line: 3477, column: 2, scope: !18937)
!18954 = !DILocation(line: 3484, column: 2, scope: !18937)
!18955 = !{i32 -2140200027}
!18956 = !DILocation(line: 3486, column: 6, scope: !18957)
!18957 = distinct !DILexicalBlock(scope: !18937, file: !31, line: 3486, column: 6)
!18958 = !DILocation(line: 3486, column: 6, scope: !18937)
!18959 = !DILocation(line: 3487, column: 3, scope: !18957)
!18960 = !DILocation(line: 3489, column: 52, scope: !18961)
!18961 = distinct !DILexicalBlock(scope: !18937, file: !31, line: 3489, column: 6)
!18962 = !DILocation(line: 3489, column: 63, scope: !18961)
!18963 = !DILocation(line: 3489, column: 6, scope: !18961)
!18964 = !DILocation(line: 3489, column: 6, scope: !18937)
!18965 = !DILocation(line: 3490, column: 24, scope: !18961)
!18966 = !DILocation(line: 3490, column: 3, scope: !18961)
!18967 = !DILocation(line: 3492, column: 1, scope: !18937)
!18968 = distinct !DISubprogram(name: "test_and_clear_bit", scope: !12033, file: !12033, line: 81, type: !18969, scopeLine: 82, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!18969 = !DISubroutineType(types: !18970)
!18970 = !{!771, !998, !12036}
!18971 = !DILocalVariable(name: "nr", arg: 1, scope: !18972, file: !11034, line: 160, type: !998)
!18972 = distinct !DISubprogram(name: "arch_test_and_clear_bit", scope: !11034, file: !11034, line: 160, type: !18969, scopeLine: 161, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!18973 = !DILocation(line: 160, column: 30, scope: !18972, inlinedAt: !18974)
!18974 = distinct !DILocation(line: 84, column: 9, scope: !18968)
!18975 = !DILocalVariable(name: "addr", arg: 2, scope: !18972, file: !11034, line: 160, type: !12036)
!18976 = !DILocation(line: 160, column: 58, scope: !18972, inlinedAt: !18974)
!18977 = !DILocalVariable(name: "c", scope: !18978, file: !11034, line: 162, type: !771)
!18978 = distinct !DILexicalBlock(scope: !18972, file: !11034, line: 162, column: 9)
!18979 = !DILocation(line: 162, column: 9, scope: !18978, inlinedAt: !18974)
!18980 = !DILocalVariable(name: "v", arg: 1, scope: !18981, file: !11413, line: 99, type: !11416)
!18981 = distinct !DISubprogram(name: "instrument_atomic_read_write", scope: !11413, file: !11413, line: 99, type: !11414, scopeLine: 100, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!18982 = !DILocation(line: 99, column: 79, scope: !18981, inlinedAt: !18983)
!18983 = distinct !DILocation(line: 83, column: 2, scope: !18968)
!18984 = !DILocalVariable(name: "size", arg: 2, scope: !18981, file: !11413, line: 99, type: !1039)
!18985 = !DILocation(line: 99, column: 89, scope: !18981, inlinedAt: !18983)
!18986 = !DILocalVariable(name: "nr", arg: 1, scope: !18968, file: !12033, line: 81, type: !998)
!18987 = !DILocation(line: 81, column: 44, scope: !18968)
!18988 = !DILocalVariable(name: "addr", arg: 2, scope: !18968, file: !12033, line: 81, type: !12036)
!18989 = !DILocation(line: 81, column: 72, scope: !18968)
!18990 = !DILocation(line: 83, column: 31, scope: !18968)
!18991 = !DILocation(line: 83, column: 38, scope: !18968)
!18992 = !DILocation(line: 83, column: 36, scope: !18968)
!18993 = !DILocation(line: 101, column: 20, scope: !18981, inlinedAt: !18983)
!18994 = !DILocation(line: 101, column: 23, scope: !18981, inlinedAt: !18983)
!18995 = !DILocation(line: 101, column: 2, scope: !18981, inlinedAt: !18983)
!18996 = !DILocation(line: 102, column: 2, scope: !18981, inlinedAt: !18983)
!18997 = !DILocation(line: 84, column: 33, scope: !18968)
!18998 = !DILocation(line: 84, column: 37, scope: !18968)
!18999 = !{i32 -2147034126, i32 -2147034030}
!19000 = !DILocation(line: 84, column: 2, scope: !18968)
!19001 = distinct !DISubprogram(name: "netif_tx_queue_stopped", scope: !31, file: !31, line: 3343, type: !19002, scopeLine: 3344, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!19002 = !DISubroutineType(types: !19003)
!19003 = !{!771, !19004}
!19004 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !19005, size: 64)
!19005 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6438)
!19006 = !DILocalVariable(name: "dev_queue", arg: 1, scope: !19001, file: !31, line: 3343, type: !19004)
!19007 = !DILocation(line: 3343, column: 70, scope: !19001)
!19008 = !DILocation(line: 3345, column: 43, scope: !19001)
!19009 = !DILocation(line: 3345, column: 54, scope: !19001)
!19010 = !DILocation(line: 3345, column: 9, scope: !19001)
!19011 = !DILocation(line: 3345, column: 2, scope: !19001)
!19012 = distinct !DISubprogram(name: "bad_phy_status", scope: !3, file: !3, line: 3019, type: !19013, scopeLine: 3020, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!19013 = !DISubroutineType(types: !19014)
!19014 = !{!32, !9407, !987}
!19015 = !DILocalVariable(name: "hw", arg: 1, scope: !19012, file: !3, line: 3019, type: !9407)
!19016 = !DILocation(line: 3019, column: 56, scope: !19012)
!19017 = !DILocalVariable(name: "status", arg: 2, scope: !19012, file: !3, line: 3019, type: !987)
!19018 = !DILocation(line: 3019, column: 64, scope: !19012)
!19019 = !DILocation(line: 3021, column: 17, scope: !19020)
!19020 = distinct !DILexicalBlock(scope: !19012, file: !3, line: 3021, column: 6)
!19021 = !DILocation(line: 3021, column: 6, scope: !19020)
!19022 = !DILocation(line: 3021, column: 6, scope: !19012)
!19023 = !DILocation(line: 3022, column: 11, scope: !19020)
!19024 = !DILocation(line: 3022, column: 18, scope: !19020)
!19025 = !DILocation(line: 3022, column: 51, scope: !19020)
!19026 = !DILocation(line: 3022, column: 3, scope: !19020)
!19027 = !DILocation(line: 3024, column: 11, scope: !19020)
!19028 = !DILocation(line: 3024, column: 18, scope: !19020)
!19029 = !DILocation(line: 3024, column: 36, scope: !19020)
!19030 = !DILocation(line: 3025, column: 5, scope: !19020)
!19031 = !DILocation(line: 3025, column: 12, scope: !19020)
!19032 = !DILocation(line: 3025, column: 28, scope: !19020)
!19033 = !DILocation(line: 3024, column: 3, scope: !19020)
!19034 = !DILocation(line: 3026, column: 1, scope: !19012)
!19035 = distinct !DISubprogram(name: "phy_length", scope: !3, file: !3, line: 3011, type: !19036, scopeLine: 3012, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!19036 = !DISubroutineType(types: !19037)
!19037 = !{!581, !9407, !987}
!19038 = !DILocalVariable(name: "hw", arg: 1, scope: !19035, file: !3, line: 3011, type: !9407)
!19039 = !DILocation(line: 3011, column: 52, scope: !19035)
!19040 = !DILocalVariable(name: "status", arg: 2, scope: !19035, file: !3, line: 3011, type: !987)
!19041 = !DILocation(line: 3011, column: 60, scope: !19035)
!19042 = !DILocation(line: 3013, column: 17, scope: !19043)
!19043 = distinct !DILexicalBlock(scope: !19035, file: !3, line: 3013, column: 6)
!19044 = !DILocation(line: 3013, column: 6, scope: !19043)
!19045 = !DILocation(line: 3013, column: 6, scope: !19035)
!19046 = !DILocation(line: 3014, column: 10, scope: !19043)
!19047 = !DILocation(line: 3014, column: 17, scope: !19043)
!19048 = !DILocation(line: 3014, column: 3, scope: !19043)
!19049 = !DILocation(line: 3016, column: 10, scope: !19043)
!19050 = !DILocation(line: 3016, column: 17, scope: !19043)
!19051 = !DILocation(line: 3016, column: 3, scope: !19043)
!19052 = !DILocation(line: 3017, column: 1, scope: !19035)
!19053 = distinct !DISubprogram(name: "netdev_alloc_skb_ip_align", scope: !417, file: !417, line: 2853, type: !19054, scopeLine: 2855, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!19054 = !DISubroutineType(types: !19055)
!19055 = !{!415, !290, !7}
!19056 = !DILocalVariable(name: "dev", arg: 1, scope: !19053, file: !417, line: 2853, type: !290)
!19057 = !DILocation(line: 2853, column: 76, scope: !19053)
!19058 = !DILocalVariable(name: "length", arg: 2, scope: !19053, file: !417, line: 2854, type: !7)
!19059 = !DILocation(line: 2854, column: 16, scope: !19053)
!19060 = !DILocation(line: 2856, column: 37, scope: !19053)
!19061 = !DILocation(line: 2856, column: 42, scope: !19053)
!19062 = !DILocation(line: 2856, column: 9, scope: !19053)
!19063 = !DILocation(line: 2856, column: 2, scope: !19053)
!19064 = distinct !DISubprogram(name: "skb_copy_from_linear_data", scope: !417, file: !417, line: 3649, type: !19065, scopeLine: 3652, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!19065 = !DISubroutineType(types: !19066)
!19066 = !{null, !6051, !591, !4750}
!19067 = !DILocalVariable(name: "skb", arg: 1, scope: !19064, file: !417, line: 3649, type: !6051)
!19068 = !DILocation(line: 3649, column: 68, scope: !19064)
!19069 = !DILocalVariable(name: "to", arg: 2, scope: !19064, file: !417, line: 3650, type: !591)
!19070 = !DILocation(line: 3650, column: 17, scope: !19064)
!19071 = !DILocalVariable(name: "len", arg: 3, scope: !19064, file: !417, line: 3651, type: !4750)
!19072 = !DILocation(line: 3651, column: 30, scope: !19064)
!19073 = !DILocation(line: 3653, column: 9, scope: !19064)
!19074 = !DILocation(line: 3653, column: 13, scope: !19064)
!19075 = !DILocation(line: 3653, column: 18, scope: !19064)
!19076 = !DILocation(line: 3653, column: 24, scope: !19064)
!19077 = !DILocation(line: 3653, column: 2, scope: !19064)
!19078 = !DILocation(line: 3654, column: 1, scope: !19064)
!19079 = distinct !DISubprogram(name: "skge_rx_reuse", scope: !3, file: !3, line: 968, type: !19080, scopeLine: 969, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!19080 = !DISubroutineType(types: !19081)
!19081 = !{null, !9210, !7}
!19082 = !DILocalVariable(name: "e", arg: 1, scope: !19079, file: !3, line: 968, type: !9210)
!19083 = !DILocation(line: 968, column: 55, scope: !19079)
!19084 = !DILocalVariable(name: "size", arg: 2, scope: !19079, file: !3, line: 968, type: !7)
!19085 = !DILocation(line: 968, column: 71, scope: !19079)
!19086 = !DILocalVariable(name: "rd", scope: !19079, file: !3, line: 970, type: !12888)
!19087 = !DILocation(line: 970, column: 23, scope: !19079)
!19088 = !DILocation(line: 970, column: 28, scope: !19079)
!19089 = !DILocation(line: 970, column: 31, scope: !19079)
!19090 = !DILocation(line: 972, column: 2, scope: !19079)
!19091 = !DILocation(line: 972, column: 6, scope: !19079)
!19092 = !DILocation(line: 972, column: 12, scope: !19079)
!19093 = !DILocation(line: 973, column: 2, scope: !19079)
!19094 = !DILocation(line: 973, column: 6, scope: !19079)
!19095 = !DILocation(line: 973, column: 18, scope: !19079)
!19096 = !DILocation(line: 975, column: 2, scope: !19079)
!19097 = !{i32 -2139453962}
!19098 = !DILocation(line: 977, column: 66, scope: !19079)
!19099 = !DILocation(line: 977, column: 64, scope: !19079)
!19100 = !DILocation(line: 977, column: 2, scope: !19079)
!19101 = !DILocation(line: 977, column: 6, scope: !19079)
!19102 = !DILocation(line: 977, column: 14, scope: !19079)
!19103 = !DILocation(line: 978, column: 1, scope: !19079)
!19104 = distinct !DISubprogram(name: "__netdev_alloc_skb_ip_align", scope: !417, file: !417, line: 2843, type: !19105, scopeLine: 2845, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!19105 = !DISubroutineType(types: !19106)
!19106 = !{!415, !290, !7, !1742}
!19107 = !DILocalVariable(name: "dev", arg: 1, scope: !19104, file: !417, line: 2843, type: !290)
!19108 = !DILocation(line: 2843, column: 78, scope: !19104)
!19109 = !DILocalVariable(name: "length", arg: 2, scope: !19104, file: !417, line: 2844, type: !7)
!19110 = !DILocation(line: 2844, column: 16, scope: !19104)
!19111 = !DILocalVariable(name: "gfp", arg: 3, scope: !19104, file: !417, line: 2844, type: !1742)
!19112 = !DILocation(line: 2844, column: 30, scope: !19104)
!19113 = !DILocalVariable(name: "skb", scope: !19104, file: !417, line: 2846, type: !415)
!19114 = !DILocation(line: 2846, column: 18, scope: !19104)
!19115 = !DILocation(line: 2846, column: 43, scope: !19104)
!19116 = !DILocation(line: 2846, column: 48, scope: !19104)
!19117 = !DILocation(line: 2846, column: 55, scope: !19104)
!19118 = !DILocation(line: 2846, column: 71, scope: !19104)
!19119 = !DILocation(line: 2846, column: 24, scope: !19104)
!19120 = !DILocation(line: 2850, column: 9, scope: !19104)
!19121 = !DILocation(line: 2850, column: 2, scope: !19104)
!19122 = distinct !DISubprogram(name: "arch_local_save_flags", scope: !12577, file: !12577, line: 646, type: !18900, scopeLine: 647, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!19123 = !DILocalVariable(name: "__ret", scope: !19124, file: !12577, line: 648, type: !312)
!19124 = distinct !DILexicalBlock(scope: !19122, file: !12577, line: 648, column: 9)
!19125 = !DILocation(line: 648, column: 9, scope: !19124)
!19126 = !DILocalVariable(name: "__edi", scope: !19124, file: !12577, line: 648, type: !312)
!19127 = !DILocalVariable(name: "__esi", scope: !19124, file: !12577, line: 648, type: !312)
!19128 = !DILocalVariable(name: "__edx", scope: !19124, file: !12577, line: 648, type: !312)
!19129 = !DILocalVariable(name: "__ecx", scope: !19124, file: !12577, line: 648, type: !312)
!19130 = !DILocalVariable(name: "__eax", scope: !19124, file: !12577, line: 648, type: !312)
!19131 = !DILocation(line: 648, column: 9, scope: !19132)
!19132 = distinct !DILexicalBlock(scope: !19133, file: !12577, line: 648, column: 9)
!19133 = distinct !DILexicalBlock(scope: !19124, file: !12577, line: 648, column: 9)
!19134 = !{i32 -2145738020, i32 -2145735705, i32 -2145735471, i32 -2145735420, i32 -2145735392, i32 -2145735367, i32 -2145735683, i32 -2145735670, i32 -2145735232, i32 -2145735113, i32 -2145735578, i32 -2145735551, i32 -2145735523, i32 -2145735493}
!19135 = !DILocalVariable(name: "__mask", scope: !19136, file: !12577, line: 648, type: !312)
!19136 = distinct !DILexicalBlock(scope: !19132, file: !12577, line: 648, column: 9)
!19137 = !DILocation(line: 648, column: 9, scope: !19136)
!19138 = !DILocation(line: 648, column: 9, scope: !19133)
!19139 = !DILocation(line: 648, column: 2, scope: !19122)
!19140 = distinct !DISubprogram(name: "arch_local_irq_restore", scope: !12577, file: !12577, line: 651, type: !9097, scopeLine: 652, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!19141 = !DILocalVariable(name: "f", arg: 1, scope: !19140, file: !12577, line: 651, type: !312)
!19142 = !DILocation(line: 651, column: 65, scope: !19140)
!19143 = !DILocalVariable(name: "__edi", scope: !19144, file: !12577, line: 653, type: !312)
!19144 = distinct !DILexicalBlock(scope: !19140, file: !12577, line: 653, column: 2)
!19145 = !DILocation(line: 653, column: 2, scope: !19144)
!19146 = !DILocalVariable(name: "__esi", scope: !19144, file: !12577, line: 653, type: !312)
!19147 = !DILocalVariable(name: "__edx", scope: !19144, file: !12577, line: 653, type: !312)
!19148 = !DILocalVariable(name: "__ecx", scope: !19144, file: !12577, line: 653, type: !312)
!19149 = !DILocalVariable(name: "__eax", scope: !19144, file: !12577, line: 653, type: !312)
!19150 = !{i32 -2145733553, i32 -2145732803, i32 -2145732569, i32 -2145732518, i32 -2145732490, i32 -2145732465, i32 -2145732781, i32 -2145732768, i32 -2145732330, i32 -2145732211, i32 -2145732676, i32 -2145732649, i32 -2145732621, i32 -2145732591}
!19151 = !DILocation(line: 654, column: 1, scope: !19140)
!19152 = distinct !DISubprogram(name: "xm_check_link", scope: !3, file: !3, line: 1416, type: !402, scopeLine: 1417, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!19153 = !DILocalVariable(name: "dev", arg: 1, scope: !19152, file: !3, line: 1416, type: !290)
!19154 = !DILocation(line: 1416, column: 45, scope: !19152)
!19155 = !DILocalVariable(name: "skge", scope: !19152, file: !3, line: 1418, type: !9172)
!19156 = !DILocation(line: 1418, column: 20, scope: !19152)
!19157 = !DILocation(line: 1418, column: 39, scope: !19152)
!19158 = !DILocation(line: 1418, column: 27, scope: !19152)
!19159 = !DILocalVariable(name: "hw", scope: !19152, file: !3, line: 1419, type: !8794)
!19160 = !DILocation(line: 1419, column: 18, scope: !19152)
!19161 = !DILocation(line: 1419, column: 23, scope: !19152)
!19162 = !DILocation(line: 1419, column: 29, scope: !19152)
!19163 = !DILocalVariable(name: "port", scope: !19152, file: !3, line: 1420, type: !32)
!19164 = !DILocation(line: 1420, column: 6, scope: !19152)
!19165 = !DILocation(line: 1420, column: 13, scope: !19152)
!19166 = !DILocation(line: 1420, column: 19, scope: !19152)
!19167 = !DILocalVariable(name: "status", scope: !19152, file: !3, line: 1421, type: !581)
!19168 = !DILocation(line: 1421, column: 6, scope: !19152)
!19169 = !DILocation(line: 1424, column: 14, scope: !19152)
!19170 = !DILocation(line: 1424, column: 18, scope: !19152)
!19171 = !DILocation(line: 1424, column: 2, scope: !19152)
!19172 = !DILocation(line: 1425, column: 23, scope: !19152)
!19173 = !DILocation(line: 1425, column: 27, scope: !19152)
!19174 = !DILocation(line: 1425, column: 11, scope: !19152)
!19175 = !DILocation(line: 1425, column: 9, scope: !19152)
!19176 = !DILocation(line: 1427, column: 7, scope: !19177)
!19177 = distinct !DILexicalBlock(scope: !19152, file: !3, line: 1427, column: 6)
!19178 = !DILocation(line: 1427, column: 14, scope: !19177)
!19179 = !DILocation(line: 1427, column: 30, scope: !19177)
!19180 = !DILocation(line: 1427, column: 6, scope: !19152)
!19181 = !DILocation(line: 1428, column: 16, scope: !19182)
!19182 = distinct !DILexicalBlock(scope: !19177, file: !3, line: 1427, column: 36)
!19183 = !DILocation(line: 1428, column: 20, scope: !19182)
!19184 = !DILocation(line: 1428, column: 3, scope: !19182)
!19185 = !DILocation(line: 1429, column: 3, scope: !19182)
!19186 = !DILocation(line: 1432, column: 6, scope: !19187)
!19187 = distinct !DILexicalBlock(scope: !19152, file: !3, line: 1432, column: 6)
!19188 = !DILocation(line: 1432, column: 12, scope: !19187)
!19189 = !DILocation(line: 1432, column: 20, scope: !19187)
!19190 = !DILocation(line: 1432, column: 6, scope: !19152)
!19191 = !DILocalVariable(name: "lpa", scope: !19192, file: !3, line: 1433, type: !581)
!19192 = distinct !DILexicalBlock(scope: !19187, file: !3, line: 1432, column: 39)
!19193 = !DILocation(line: 1433, column: 7, scope: !19192)
!19194 = !DILocalVariable(name: "res", scope: !19192, file: !3, line: 1433, type: !581)
!19195 = !DILocation(line: 1433, column: 12, scope: !19192)
!19196 = !DILocation(line: 1435, column: 9, scope: !19197)
!19197 = distinct !DILexicalBlock(scope: !19192, file: !3, line: 1435, column: 7)
!19198 = !DILocation(line: 1435, column: 16, scope: !19197)
!19199 = !DILocation(line: 1435, column: 7, scope: !19192)
!19200 = !DILocation(line: 1436, column: 4, scope: !19197)
!19201 = !DILocation(line: 1438, column: 21, scope: !19192)
!19202 = !DILocation(line: 1438, column: 25, scope: !19192)
!19203 = !DILocation(line: 1438, column: 9, scope: !19192)
!19204 = !DILocation(line: 1438, column: 7, scope: !19192)
!19205 = !DILocation(line: 1439, column: 7, scope: !19206)
!19206 = distinct !DILexicalBlock(scope: !19192, file: !3, line: 1439, column: 7)
!19207 = !DILocation(line: 1439, column: 11, scope: !19206)
!19208 = !DILocation(line: 1439, column: 7, scope: !19192)
!19209 = !DILocation(line: 1440, column: 18, scope: !19210)
!19210 = distinct !DILexicalBlock(scope: !19206, file: !3, line: 1439, column: 26)
!19211 = !DILocation(line: 1440, column: 4, scope: !19210)
!19212 = !DILocation(line: 1441, column: 4, scope: !19210)
!19213 = !DILocation(line: 1444, column: 21, scope: !19192)
!19214 = !DILocation(line: 1444, column: 25, scope: !19192)
!19215 = !DILocation(line: 1444, column: 9, scope: !19192)
!19216 = !DILocation(line: 1444, column: 7, scope: !19192)
!19217 = !DILocation(line: 1447, column: 11, scope: !19192)
!19218 = !DILocation(line: 1447, column: 15, scope: !19192)
!19219 = !DILocation(line: 1447, column: 3, scope: !19192)
!19220 = !DILocation(line: 1449, column: 4, scope: !19221)
!19221 = distinct !DILexicalBlock(scope: !19192, file: !3, line: 1447, column: 46)
!19222 = !DILocation(line: 1449, column: 10, scope: !19221)
!19223 = !DILocation(line: 1449, column: 17, scope: !19221)
!19224 = !DILocation(line: 1450, column: 4, scope: !19221)
!19225 = !DILocation(line: 1452, column: 4, scope: !19221)
!19226 = !DILocation(line: 1452, column: 10, scope: !19221)
!19227 = !DILocation(line: 1452, column: 17, scope: !19221)
!19228 = !DILocation(line: 1453, column: 4, scope: !19221)
!19229 = !DILocation(line: 1455, column: 18, scope: !19221)
!19230 = !DILocation(line: 1455, column: 4, scope: !19221)
!19231 = !DILocation(line: 1456, column: 4, scope: !19221)
!19232 = !DILocation(line: 1460, column: 8, scope: !19233)
!19233 = distinct !DILexicalBlock(scope: !19192, file: !3, line: 1460, column: 7)
!19234 = !DILocation(line: 1460, column: 14, scope: !19233)
!19235 = !DILocation(line: 1460, column: 27, scope: !19233)
!19236 = !DILocation(line: 1460, column: 50, scope: !19233)
!19237 = !DILocation(line: 1461, column: 8, scope: !19233)
!19238 = !DILocation(line: 1461, column: 14, scope: !19233)
!19239 = !DILocation(line: 1461, column: 27, scope: !19233)
!19240 = !DILocation(line: 1461, column: 52, scope: !19233)
!19241 = !DILocation(line: 1462, column: 8, scope: !19233)
!19242 = !DILocation(line: 1462, column: 12, scope: !19233)
!19243 = !DILocation(line: 1460, column: 7, scope: !19192)
!19244 = !DILocation(line: 1463, column: 4, scope: !19233)
!19245 = !DILocation(line: 1463, column: 10, scope: !19233)
!19246 = !DILocation(line: 1463, column: 22, scope: !19233)
!19247 = !DILocation(line: 1464, column: 12, scope: !19248)
!19248 = distinct !DILexicalBlock(scope: !19233, file: !3, line: 1464, column: 12)
!19249 = !DILocation(line: 1464, column: 18, scope: !19248)
!19250 = !DILocation(line: 1464, column: 31, scope: !19248)
!19251 = !DILocation(line: 1464, column: 55, scope: !19248)
!19252 = !DILocation(line: 1465, column: 6, scope: !19248)
!19253 = !DILocation(line: 1465, column: 10, scope: !19248)
!19254 = !DILocation(line: 1465, column: 28, scope: !19248)
!19255 = !DILocation(line: 1464, column: 12, scope: !19233)
!19256 = !DILocation(line: 1467, column: 4, scope: !19248)
!19257 = !DILocation(line: 1467, column: 10, scope: !19248)
!19258 = !DILocation(line: 1467, column: 23, scope: !19248)
!19259 = !DILocation(line: 1468, column: 12, scope: !19260)
!19260 = distinct !DILexicalBlock(scope: !19248, file: !3, line: 1468, column: 12)
!19261 = !DILocation(line: 1468, column: 18, scope: !19260)
!19262 = !DILocation(line: 1468, column: 31, scope: !19260)
!19263 = !DILocation(line: 1468, column: 53, scope: !19260)
!19264 = !DILocation(line: 1469, column: 6, scope: !19260)
!19265 = !DILocation(line: 1469, column: 10, scope: !19260)
!19266 = !DILocation(line: 1469, column: 28, scope: !19260)
!19267 = !DILocation(line: 1468, column: 12, scope: !19248)
!19268 = !DILocation(line: 1471, column: 4, scope: !19260)
!19269 = !DILocation(line: 1471, column: 10, scope: !19260)
!19270 = !DILocation(line: 1471, column: 22, scope: !19260)
!19271 = !DILocation(line: 1473, column: 4, scope: !19260)
!19272 = !DILocation(line: 1473, column: 10, scope: !19260)
!19273 = !DILocation(line: 1473, column: 22, scope: !19260)
!19274 = !DILocation(line: 1475, column: 3, scope: !19192)
!19275 = !DILocation(line: 1475, column: 9, scope: !19192)
!19276 = !DILocation(line: 1475, column: 15, scope: !19192)
!19277 = !DILocation(line: 1476, column: 2, scope: !19192)
!19278 = !DILocation(line: 1478, column: 24, scope: !19279)
!19279 = distinct !DILexicalBlock(scope: !19152, file: !3, line: 1478, column: 6)
!19280 = !DILocation(line: 1478, column: 7, scope: !19279)
!19281 = !DILocation(line: 1478, column: 6, scope: !19152)
!19282 = !DILocation(line: 1479, column: 19, scope: !19279)
!19283 = !DILocation(line: 1479, column: 3, scope: !19279)
!19284 = !DILocation(line: 1480, column: 2, scope: !19152)
!19285 = !DILocation(line: 1481, column: 1, scope: !19152)
!19286 = distinct !DISubprogram(name: "is_multicast_ether_addr", scope: !10789, file: !10789, line: 116, type: !10790, scopeLine: 117, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!19287 = !DILocalVariable(name: "addr", arg: 1, scope: !19286, file: !10789, line: 116, type: !5859)
!19288 = !DILocation(line: 116, column: 54, scope: !19286)
!19289 = !DILocalVariable(name: "a", scope: !19286, file: !10789, line: 119, type: !987)
!19290 = !DILocation(line: 119, column: 6, scope: !19286)
!19291 = !DILocation(line: 119, column: 24, scope: !19286)
!19292 = !DILocation(line: 119, column: 10, scope: !19286)
!19293 = !DILocation(line: 126, column: 16, scope: !19286)
!19294 = !DILocation(line: 126, column: 14, scope: !19286)
!19295 = !DILocation(line: 126, column: 9, scope: !19286)
!19296 = !DILocation(line: 126, column: 2, scope: !19286)
!19297 = distinct !DISubprogram(name: "is_zero_ether_addr", scope: !10789, file: !10789, line: 98, type: !10790, scopeLine: 99, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!19298 = !DILocalVariable(name: "addr", arg: 1, scope: !19297, file: !10789, line: 98, type: !5859)
!19299 = !DILocation(line: 98, column: 49, scope: !19297)
!19300 = !DILocation(line: 101, column: 25, scope: !19297)
!19301 = !DILocation(line: 101, column: 11, scope: !19297)
!19302 = !DILocation(line: 101, column: 49, scope: !19297)
!19303 = !DILocation(line: 101, column: 54, scope: !19297)
!19304 = !DILocation(line: 101, column: 34, scope: !19297)
!19305 = !DILocation(line: 101, column: 33, scope: !19297)
!19306 = !DILocation(line: 101, column: 31, scope: !19297)
!19307 = !DILocation(line: 101, column: 61, scope: !19297)
!19308 = !DILocation(line: 101, column: 2, scope: !19297)
!19309 = distinct !DISubprogram(name: "tasklet_schedule", scope: !8776, file: !8776, line: 681, type: !9101, scopeLine: 682, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!19310 = !DILocalVariable(name: "t", arg: 1, scope: !19309, file: !8776, line: 681, type: !9088)
!19311 = !DILocation(line: 681, column: 60, scope: !19309)
!19312 = !DILocation(line: 683, column: 46, scope: !19313)
!19313 = distinct !DILexicalBlock(scope: !19309, file: !8776, line: 683, column: 6)
!19314 = !DILocation(line: 683, column: 49, scope: !19313)
!19315 = !DILocation(line: 683, column: 7, scope: !19313)
!19316 = !DILocation(line: 683, column: 6, scope: !19309)
!19317 = !DILocation(line: 684, column: 22, scope: !19313)
!19318 = !DILocation(line: 684, column: 3, scope: !19313)
!19319 = !DILocation(line: 685, column: 1, scope: !19309)
!19320 = distinct !DISubprogram(name: "napi_schedule", scope: !31, file: !31, line: 449, type: !15311, scopeLine: 450, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!19321 = !DILocalVariable(name: "n", arg: 1, scope: !19320, file: !31, line: 449, type: !9189)
!19322 = !DILocation(line: 449, column: 54, scope: !19320)
!19323 = !DILocation(line: 451, column: 25, scope: !19324)
!19324 = distinct !DILexicalBlock(scope: !19320, file: !31, line: 451, column: 6)
!19325 = !DILocation(line: 451, column: 6, scope: !19324)
!19326 = !DILocation(line: 451, column: 6, scope: !19320)
!19327 = !DILocation(line: 452, column: 19, scope: !19324)
!19328 = !DILocation(line: 452, column: 3, scope: !19324)
!19329 = !DILocation(line: 453, column: 1, scope: !19320)
!19330 = distinct !DISubprogram(name: "skge_mac_intr", scope: !3, file: !3, line: 3256, type: !9399, scopeLine: 3257, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!19331 = !DILocalVariable(name: "hw", arg: 1, scope: !19330, file: !3, line: 3256, type: !8794)
!19332 = !DILocation(line: 3256, column: 43, scope: !19330)
!19333 = !DILocalVariable(name: "port", arg: 2, scope: !19330, file: !3, line: 3256, type: !32)
!19334 = !DILocation(line: 3256, column: 51, scope: !19330)
!19335 = !DILocation(line: 3258, column: 17, scope: !19336)
!19336 = distinct !DILexicalBlock(scope: !19330, file: !3, line: 3258, column: 6)
!19337 = !DILocation(line: 3258, column: 6, scope: !19336)
!19338 = !DILocation(line: 3258, column: 6, scope: !19330)
!19339 = !DILocation(line: 3259, column: 20, scope: !19336)
!19340 = !DILocation(line: 3259, column: 24, scope: !19336)
!19341 = !DILocation(line: 3259, column: 3, scope: !19336)
!19342 = !DILocation(line: 3261, column: 18, scope: !19336)
!19343 = !DILocation(line: 3261, column: 22, scope: !19336)
!19344 = !DILocation(line: 3261, column: 3, scope: !19336)
!19345 = !DILocation(line: 3262, column: 1, scope: !19330)
!19346 = distinct !DISubprogram(name: "skge_error_irq", scope: !3, file: !3, line: 3265, type: !12625, scopeLine: 3266, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!19347 = !DILocalVariable(name: "hw", arg: 1, scope: !19346, file: !3, line: 3265, type: !8794)
!19348 = !DILocation(line: 3265, column: 44, scope: !19346)
!19349 = !DILocalVariable(name: "pdev", scope: !19346, file: !3, line: 3267, type: !8799)
!19350 = !DILocation(line: 3267, column: 18, scope: !19346)
!19351 = !DILocation(line: 3267, column: 25, scope: !19346)
!19352 = !DILocation(line: 3267, column: 29, scope: !19346)
!19353 = !DILocalVariable(name: "hwstatus", scope: !19346, file: !3, line: 3268, type: !987)
!19354 = !DILocation(line: 3268, column: 6, scope: !19346)
!19355 = !DILocation(line: 3268, column: 29, scope: !19346)
!19356 = !DILocation(line: 3268, column: 17, scope: !19346)
!19357 = !DILocation(line: 3270, column: 17, scope: !19358)
!19358 = distinct !DILexicalBlock(scope: !19346, file: !3, line: 3270, column: 6)
!19359 = !DILocation(line: 3270, column: 6, scope: !19358)
!19360 = !DILocation(line: 3270, column: 6, scope: !19346)
!19361 = !DILocation(line: 3272, column: 7, scope: !19362)
!19362 = distinct !DILexicalBlock(scope: !19363, file: !3, line: 3272, column: 7)
!19363 = distinct !DILexicalBlock(scope: !19358, file: !3, line: 3270, column: 22)
!19364 = !DILocation(line: 3272, column: 16, scope: !19362)
!19365 = !DILocation(line: 3272, column: 7, scope: !19363)
!19366 = !DILocation(line: 3273, column: 17, scope: !19362)
!19367 = !DILocation(line: 3273, column: 4, scope: !19362)
!19368 = !DILocation(line: 3274, column: 7, scope: !19369)
!19369 = distinct !DILexicalBlock(scope: !19363, file: !3, line: 3274, column: 7)
!19370 = !DILocation(line: 3274, column: 16, scope: !19369)
!19371 = !DILocation(line: 3274, column: 7, scope: !19363)
!19372 = !DILocation(line: 3275, column: 17, scope: !19369)
!19373 = !DILocation(line: 3275, column: 4, scope: !19369)
!19374 = !DILocation(line: 3276, column: 2, scope: !19363)
!19375 = !DILocation(line: 3278, column: 7, scope: !19376)
!19376 = distinct !DILexicalBlock(scope: !19377, file: !3, line: 3278, column: 7)
!19377 = distinct !DILexicalBlock(scope: !19358, file: !3, line: 3276, column: 9)
!19378 = !DILocation(line: 3278, column: 16, scope: !19376)
!19379 = !DILocation(line: 3278, column: 7, scope: !19377)
!19380 = !DILocation(line: 3279, column: 16, scope: !19376)
!19381 = !DILocation(line: 3279, column: 4, scope: !19376)
!19382 = !DILocation(line: 3282, column: 6, scope: !19383)
!19383 = distinct !DILexicalBlock(scope: !19346, file: !3, line: 3282, column: 6)
!19384 = !DILocation(line: 3282, column: 15, scope: !19383)
!19385 = !DILocation(line: 3282, column: 6, scope: !19346)
!19386 = !DILocation(line: 3283, column: 3, scope: !19387)
!19387 = distinct !DILexicalBlock(scope: !19383, file: !3, line: 3282, column: 32)
!19388 = !DILocation(line: 3284, column: 16, scope: !19387)
!19389 = !DILocation(line: 3284, column: 3, scope: !19387)
!19390 = !DILocation(line: 3285, column: 2, scope: !19387)
!19391 = !DILocation(line: 3287, column: 6, scope: !19392)
!19392 = distinct !DILexicalBlock(scope: !19346, file: !3, line: 3287, column: 6)
!19393 = !DILocation(line: 3287, column: 15, scope: !19392)
!19394 = !DILocation(line: 3287, column: 6, scope: !19346)
!19395 = !DILocation(line: 3288, column: 3, scope: !19396)
!19396 = distinct !DILexicalBlock(scope: !19392, file: !3, line: 3287, column: 32)
!19397 = !DILocation(line: 3289, column: 16, scope: !19396)
!19398 = !DILocation(line: 3289, column: 3, scope: !19396)
!19399 = !DILocation(line: 3290, column: 2, scope: !19396)
!19400 = !DILocation(line: 3292, column: 6, scope: !19401)
!19401 = distinct !DILexicalBlock(scope: !19346, file: !3, line: 3292, column: 6)
!19402 = !DILocation(line: 3292, column: 15, scope: !19401)
!19403 = !DILocation(line: 3292, column: 6, scope: !19346)
!19404 = !DILocation(line: 3293, column: 19, scope: !19401)
!19405 = !DILocation(line: 3293, column: 3, scope: !19401)
!19406 = !DILocation(line: 3295, column: 6, scope: !19407)
!19407 = distinct !DILexicalBlock(scope: !19346, file: !3, line: 3295, column: 6)
!19408 = !DILocation(line: 3295, column: 15, scope: !19407)
!19409 = !DILocation(line: 3295, column: 6, scope: !19346)
!19410 = !DILocation(line: 3296, column: 19, scope: !19407)
!19411 = !DILocation(line: 3296, column: 3, scope: !19407)
!19412 = !DILocation(line: 3298, column: 6, scope: !19413)
!19413 = distinct !DILexicalBlock(scope: !19346, file: !3, line: 3298, column: 6)
!19414 = !DILocation(line: 3298, column: 15, scope: !19413)
!19415 = !DILocation(line: 3298, column: 6, scope: !19346)
!19416 = !DILocation(line: 3299, column: 3, scope: !19417)
!19417 = distinct !DILexicalBlock(scope: !19413, file: !3, line: 3298, column: 32)
!19418 = !DILocation(line: 3301, column: 16, scope: !19417)
!19419 = !DILocation(line: 3301, column: 3, scope: !19417)
!19420 = !DILocation(line: 3302, column: 2, scope: !19417)
!19421 = !DILocation(line: 3304, column: 6, scope: !19422)
!19422 = distinct !DILexicalBlock(scope: !19346, file: !3, line: 3304, column: 6)
!19423 = !DILocation(line: 3304, column: 15, scope: !19422)
!19424 = !DILocation(line: 3304, column: 6, scope: !19346)
!19425 = !DILocation(line: 3305, column: 3, scope: !19426)
!19426 = distinct !DILexicalBlock(scope: !19422, file: !3, line: 3304, column: 32)
!19427 = !DILocation(line: 3307, column: 16, scope: !19426)
!19428 = !DILocation(line: 3307, column: 3, scope: !19426)
!19429 = !DILocation(line: 3308, column: 2, scope: !19426)
!19430 = !DILocation(line: 3310, column: 6, scope: !19431)
!19431 = distinct !DILexicalBlock(scope: !19346, file: !3, line: 3310, column: 6)
!19432 = !DILocation(line: 3310, column: 15, scope: !19431)
!19433 = !DILocation(line: 3310, column: 6, scope: !19346)
!19434 = !DILocalVariable(name: "pci_status", scope: !19435, file: !3, line: 3311, type: !581)
!19435 = distinct !DILexicalBlock(scope: !19431, file: !3, line: 3310, column: 47)
!19436 = !DILocation(line: 3311, column: 7, scope: !19435)
!19437 = !DILocalVariable(name: "pci_cmd", scope: !19435, file: !3, line: 3311, type: !581)
!19438 = !DILocation(line: 3311, column: 19, scope: !19435)
!19439 = !DILocation(line: 3313, column: 24, scope: !19435)
!19440 = !DILocation(line: 3313, column: 3, scope: !19435)
!19441 = !DILocation(line: 3314, column: 24, scope: !19435)
!19442 = !DILocation(line: 3314, column: 3, scope: !19435)
!19443 = !DILocation(line: 3316, column: 3, scope: !19435)
!19444 = !DILocation(line: 3320, column: 14, scope: !19435)
!19445 = !DILocation(line: 3321, column: 15, scope: !19435)
!19446 = !DILocation(line: 3321, column: 3, scope: !19435)
!19447 = !DILocation(line: 3322, column: 25, scope: !19435)
!19448 = !DILocation(line: 3323, column: 11, scope: !19435)
!19449 = !DILocation(line: 3323, column: 19, scope: !19435)
!19450 = !DILocation(line: 3323, column: 38, scope: !19435)
!19451 = !DILocation(line: 3322, column: 3, scope: !19435)
!19452 = !DILocation(line: 3324, column: 25, scope: !19435)
!19453 = !DILocation(line: 3324, column: 43, scope: !19435)
!19454 = !DILocation(line: 3324, column: 3, scope: !19435)
!19455 = !DILocation(line: 3325, column: 15, scope: !19435)
!19456 = !DILocation(line: 3325, column: 3, scope: !19435)
!19457 = !DILocation(line: 3328, column: 26, scope: !19435)
!19458 = !DILocation(line: 3328, column: 14, scope: !19435)
!19459 = !DILocation(line: 3328, column: 12, scope: !19435)
!19460 = !DILocation(line: 3329, column: 7, scope: !19461)
!19461 = distinct !DILexicalBlock(scope: !19435, file: !3, line: 3329, column: 7)
!19462 = !DILocation(line: 3329, column: 16, scope: !19461)
!19463 = !DILocation(line: 3329, column: 7, scope: !19435)
!19464 = !DILocation(line: 3330, column: 4, scope: !19465)
!19465 = distinct !DILexicalBlock(scope: !19461, file: !3, line: 3329, column: 31)
!19466 = !DILocation(line: 3331, column: 4, scope: !19465)
!19467 = !DILocation(line: 3331, column: 8, scope: !19465)
!19468 = !DILocation(line: 3331, column: 18, scope: !19465)
!19469 = !DILocation(line: 3332, column: 3, scope: !19465)
!19470 = !DILocation(line: 3333, column: 2, scope: !19435)
!19471 = !DILocation(line: 3334, column: 1, scope: !19346)
!19472 = distinct !DISubprogram(name: "test_and_set_bit", scope: !12033, file: !12033, line: 68, type: !18969, scopeLine: 69, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!19473 = !DILocalVariable(name: "nr", arg: 1, scope: !19474, file: !11034, line: 136, type: !998)
!19474 = distinct !DISubprogram(name: "arch_test_and_set_bit", scope: !11034, file: !11034, line: 136, type: !18969, scopeLine: 137, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!19475 = !DILocation(line: 136, column: 28, scope: !19474, inlinedAt: !19476)
!19476 = distinct !DILocation(line: 71, column: 9, scope: !19472)
!19477 = !DILocalVariable(name: "addr", arg: 2, scope: !19474, file: !11034, line: 136, type: !12036)
!19478 = !DILocation(line: 136, column: 56, scope: !19474, inlinedAt: !19476)
!19479 = !DILocalVariable(name: "c", scope: !19480, file: !11034, line: 138, type: !771)
!19480 = distinct !DILexicalBlock(scope: !19474, file: !11034, line: 138, column: 9)
!19481 = !DILocation(line: 138, column: 9, scope: !19480, inlinedAt: !19476)
!19482 = !DILocation(line: 99, column: 79, scope: !18981, inlinedAt: !19483)
!19483 = distinct !DILocation(line: 70, column: 2, scope: !19472)
!19484 = !DILocation(line: 99, column: 89, scope: !18981, inlinedAt: !19483)
!19485 = !DILocalVariable(name: "nr", arg: 1, scope: !19472, file: !12033, line: 68, type: !998)
!19486 = !DILocation(line: 68, column: 42, scope: !19472)
!19487 = !DILocalVariable(name: "addr", arg: 2, scope: !19472, file: !12033, line: 68, type: !12036)
!19488 = !DILocation(line: 68, column: 70, scope: !19472)
!19489 = !DILocation(line: 70, column: 31, scope: !19472)
!19490 = !DILocation(line: 70, column: 38, scope: !19472)
!19491 = !DILocation(line: 70, column: 36, scope: !19472)
!19492 = !DILocation(line: 101, column: 20, scope: !18981, inlinedAt: !19483)
!19493 = !DILocation(line: 101, column: 23, scope: !18981, inlinedAt: !19483)
!19494 = !DILocation(line: 101, column: 2, scope: !18981, inlinedAt: !19483)
!19495 = !DILocation(line: 102, column: 2, scope: !18981, inlinedAt: !19483)
!19496 = !DILocation(line: 71, column: 31, scope: !19472)
!19497 = !DILocation(line: 71, column: 35, scope: !19472)
!19498 = !{i32 -2147036038, i32 -2147035942}
!19499 = !DILocation(line: 71, column: 2, scope: !19472)
!19500 = distinct !DISubprogram(name: "genesis_mac_intr", scope: !3, file: !3, line: 1760, type: !9399, scopeLine: 1761, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!19501 = !DILocalVariable(name: "hw", arg: 1, scope: !19500, file: !3, line: 1760, type: !8794)
!19502 = !DILocation(line: 1760, column: 46, scope: !19500)
!19503 = !DILocalVariable(name: "port", arg: 2, scope: !19500, file: !3, line: 1760, type: !32)
!19504 = !DILocation(line: 1760, column: 54, scope: !19500)
!19505 = !DILocalVariable(name: "dev", scope: !19500, file: !3, line: 1762, type: !290)
!19506 = !DILocation(line: 1762, column: 21, scope: !19500)
!19507 = !DILocation(line: 1762, column: 27, scope: !19500)
!19508 = !DILocation(line: 1762, column: 31, scope: !19500)
!19509 = !DILocation(line: 1762, column: 35, scope: !19500)
!19510 = !DILocalVariable(name: "skge", scope: !19500, file: !3, line: 1763, type: !9172)
!19511 = !DILocation(line: 1763, column: 20, scope: !19500)
!19512 = !DILocation(line: 1763, column: 39, scope: !19500)
!19513 = !DILocation(line: 1763, column: 27, scope: !19500)
!19514 = !DILocalVariable(name: "status", scope: !19500, file: !3, line: 1764, type: !581)
!19515 = !DILocation(line: 1764, column: 6, scope: !19500)
!19516 = !DILocation(line: 1764, column: 25, scope: !19500)
!19517 = !DILocation(line: 1764, column: 29, scope: !19500)
!19518 = !DILocation(line: 1764, column: 15, scope: !19500)
!19519 = !DILocation(line: 1766, column: 2, scope: !19500)
!19520 = !DILocation(line: 1766, column: 2, scope: !19521)
!19521 = distinct !DILexicalBlock(scope: !19522, file: !3, line: 1766, column: 2)
!19522 = distinct !DILexicalBlock(scope: !19500, file: !3, line: 1766, column: 2)
!19523 = !DILocation(line: 1766, column: 2, scope: !19522)
!19524 = !DILocation(line: 1769, column: 6, scope: !19525)
!19525 = distinct !DILexicalBlock(scope: !19500, file: !3, line: 1769, column: 6)
!19526 = !DILocation(line: 1769, column: 10, scope: !19525)
!19527 = !DILocation(line: 1769, column: 19, scope: !19525)
!19528 = !DILocation(line: 1769, column: 34, scope: !19525)
!19529 = !DILocation(line: 1769, column: 38, scope: !19525)
!19530 = !DILocation(line: 1769, column: 45, scope: !19525)
!19531 = !DILocation(line: 1769, column: 6, scope: !19500)
!19532 = !DILocation(line: 1770, column: 16, scope: !19533)
!19533 = distinct !DILexicalBlock(scope: !19525, file: !3, line: 1769, column: 63)
!19534 = !DILocation(line: 1770, column: 20, scope: !19533)
!19535 = !DILocation(line: 1770, column: 3, scope: !19533)
!19536 = !DILocation(line: 1771, column: 14, scope: !19533)
!19537 = !DILocation(line: 1771, column: 20, scope: !19533)
!19538 = !DILocation(line: 1771, column: 32, scope: !19533)
!19539 = !DILocation(line: 1771, column: 40, scope: !19533)
!19540 = !DILocation(line: 1771, column: 3, scope: !19533)
!19541 = !DILocation(line: 1772, column: 2, scope: !19533)
!19542 = !DILocation(line: 1774, column: 6, scope: !19543)
!19543 = distinct !DILexicalBlock(scope: !19500, file: !3, line: 1774, column: 6)
!19544 = !DILocation(line: 1774, column: 13, scope: !19543)
!19545 = !DILocation(line: 1774, column: 6, scope: !19500)
!19546 = !DILocation(line: 1775, column: 14, scope: !19547)
!19547 = distinct !DILexicalBlock(scope: !19543, file: !3, line: 1774, column: 29)
!19548 = !DILocation(line: 1775, column: 18, scope: !19547)
!19549 = !DILocation(line: 1775, column: 3, scope: !19547)
!19550 = !DILocation(line: 1776, column: 5, scope: !19547)
!19551 = !DILocation(line: 1776, column: 10, scope: !19547)
!19552 = !DILocation(line: 1776, column: 16, scope: !19547)
!19553 = !DILocation(line: 1776, column: 3, scope: !19547)
!19554 = !DILocation(line: 1777, column: 2, scope: !19547)
!19555 = !DILocation(line: 1778, column: 1, scope: !19500)
!19556 = distinct !DISubprogram(name: "yukon_mac_intr", scope: !3, file: !3, line: 2262, type: !9399, scopeLine: 2263, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!19557 = !DILocalVariable(name: "hw", arg: 1, scope: !19556, file: !3, line: 2262, type: !8794)
!19558 = !DILocation(line: 2262, column: 44, scope: !19556)
!19559 = !DILocalVariable(name: "port", arg: 2, scope: !19556, file: !3, line: 2262, type: !32)
!19560 = !DILocation(line: 2262, column: 52, scope: !19556)
!19561 = !DILocalVariable(name: "dev", scope: !19556, file: !3, line: 2264, type: !290)
!19562 = !DILocation(line: 2264, column: 21, scope: !19556)
!19563 = !DILocation(line: 2264, column: 27, scope: !19556)
!19564 = !DILocation(line: 2264, column: 31, scope: !19556)
!19565 = !DILocation(line: 2264, column: 35, scope: !19556)
!19566 = !DILocalVariable(name: "skge", scope: !19556, file: !3, line: 2265, type: !9172)
!19567 = !DILocation(line: 2265, column: 20, scope: !19556)
!19568 = !DILocation(line: 2265, column: 39, scope: !19556)
!19569 = !DILocation(line: 2265, column: 27, scope: !19556)
!19570 = !DILocalVariable(name: "status", scope: !19556, file: !3, line: 2266, type: !794)
!19571 = !DILocation(line: 2266, column: 5, scope: !19556)
!19572 = !DILocation(line: 2266, column: 25, scope: !19556)
!19573 = !DILocation(line: 2266, column: 29, scope: !19556)
!19574 = !DILocation(line: 2266, column: 14, scope: !19556)
!19575 = !DILocation(line: 2268, column: 2, scope: !19556)
!19576 = !DILocation(line: 2268, column: 2, scope: !19577)
!19577 = distinct !DILexicalBlock(scope: !19578, file: !3, line: 2268, column: 2)
!19578 = distinct !DILexicalBlock(scope: !19556, file: !3, line: 2268, column: 2)
!19579 = !DILocation(line: 2268, column: 2, scope: !19578)
!19580 = !DILocation(line: 2271, column: 6, scope: !19581)
!19581 = distinct !DILexicalBlock(scope: !19556, file: !3, line: 2271, column: 6)
!19582 = !DILocation(line: 2271, column: 13, scope: !19581)
!19583 = !DILocation(line: 2271, column: 6, scope: !19556)
!19584 = !DILocation(line: 2272, column: 5, scope: !19585)
!19585 = distinct !DILexicalBlock(scope: !19581, file: !3, line: 2271, column: 31)
!19586 = !DILocation(line: 2272, column: 10, scope: !19585)
!19587 = !DILocation(line: 2272, column: 16, scope: !19585)
!19588 = !DILocation(line: 2272, column: 3, scope: !19585)
!19589 = !DILocation(line: 2273, column: 15, scope: !19585)
!19590 = !DILocation(line: 2273, column: 19, scope: !19585)
!19591 = !DILocation(line: 2273, column: 3, scope: !19585)
!19592 = !DILocation(line: 2274, column: 2, scope: !19585)
!19593 = !DILocation(line: 2276, column: 6, scope: !19594)
!19594 = distinct !DILexicalBlock(scope: !19556, file: !3, line: 2276, column: 6)
!19595 = !DILocation(line: 2276, column: 13, scope: !19594)
!19596 = !DILocation(line: 2276, column: 6, scope: !19556)
!19597 = !DILocation(line: 2277, column: 5, scope: !19598)
!19598 = distinct !DILexicalBlock(scope: !19594, file: !3, line: 2276, column: 31)
!19599 = !DILocation(line: 2277, column: 10, scope: !19598)
!19600 = !DILocation(line: 2277, column: 16, scope: !19598)
!19601 = !DILocation(line: 2277, column: 3, scope: !19598)
!19602 = !DILocation(line: 2278, column: 15, scope: !19598)
!19603 = !DILocation(line: 2278, column: 19, scope: !19598)
!19604 = !DILocation(line: 2278, column: 3, scope: !19598)
!19605 = !DILocation(line: 2279, column: 2, scope: !19598)
!19606 = !DILocation(line: 2281, column: 1, scope: !19556)
!19607 = distinct !DISubprogram(name: "skge_mac_parity", scope: !3, file: !3, line: 3240, type: !9399, scopeLine: 3241, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!19608 = !DILocalVariable(name: "hw", arg: 1, scope: !19607, file: !3, line: 3240, type: !8794)
!19609 = !DILocation(line: 3240, column: 45, scope: !19607)
!19610 = !DILocalVariable(name: "port", arg: 2, scope: !19607, file: !3, line: 3240, type: !32)
!19611 = !DILocation(line: 3240, column: 53, scope: !19607)
!19612 = !DILocalVariable(name: "dev", scope: !19607, file: !3, line: 3242, type: !290)
!19613 = !DILocation(line: 3242, column: 21, scope: !19607)
!19614 = !DILocation(line: 3242, column: 27, scope: !19607)
!19615 = !DILocation(line: 3242, column: 31, scope: !19607)
!19616 = !DILocation(line: 3242, column: 35, scope: !19607)
!19617 = !DILocation(line: 3244, column: 4, scope: !19607)
!19618 = !DILocation(line: 3244, column: 9, scope: !19607)
!19619 = !DILocation(line: 3244, column: 15, scope: !19607)
!19620 = !DILocation(line: 3244, column: 2, scope: !19607)
!19621 = !DILocation(line: 3246, column: 17, scope: !19622)
!19622 = distinct !DILexicalBlock(scope: !19607, file: !3, line: 3246, column: 6)
!19623 = !DILocation(line: 3246, column: 6, scope: !19622)
!19624 = !DILocation(line: 3246, column: 6, scope: !19607)
!19625 = !DILocation(line: 3247, column: 16, scope: !19622)
!19626 = !DILocation(line: 3247, column: 20, scope: !19622)
!19627 = !DILocation(line: 3247, column: 3, scope: !19622)
!19628 = !DILocation(line: 3251, column: 15, scope: !19622)
!19629 = !DILocation(line: 3251, column: 19, scope: !19622)
!19630 = !DILocation(line: 3252, column: 9, scope: !19622)
!19631 = !DILocation(line: 3252, column: 13, scope: !19622)
!19632 = !DILocation(line: 3252, column: 21, scope: !19622)
!19633 = !DILocation(line: 3252, column: 38, scope: !19622)
!19634 = !DILocation(line: 3252, column: 41, scope: !19622)
!19635 = !DILocation(line: 3252, column: 45, scope: !19622)
!19636 = !DILocation(line: 3252, column: 54, scope: !19622)
!19637 = !DILocation(line: 0, scope: !19622)
!19638 = !DILocation(line: 3252, column: 8, scope: !19622)
!19639 = !DILocation(line: 3251, column: 3, scope: !19622)
!19640 = !DILocation(line: 3254, column: 1, scope: !19607)
!19641 = distinct !DISubprogram(name: "dev_set_drvdata", scope: !6540, file: !6540, line: 660, type: !19642, scopeLine: 661, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!19642 = !DISubroutineType(types: !19643)
!19643 = !{null, !6544, !591}
!19644 = !DILocalVariable(name: "dev", arg: 1, scope: !19641, file: !6540, line: 660, type: !6544)
!19645 = !DILocation(line: 660, column: 51, scope: !19641)
!19646 = !DILocalVariable(name: "data", arg: 2, scope: !19641, file: !6540, line: 660, type: !591)
!19647 = !DILocation(line: 660, column: 62, scope: !19641)
!19648 = !DILocation(line: 662, column: 21, scope: !19641)
!19649 = !DILocation(line: 662, column: 2, scope: !19641)
!19650 = !DILocation(line: 662, column: 7, scope: !19641)
!19651 = !DILocation(line: 662, column: 19, scope: !19641)
!19652 = !DILocation(line: 663, column: 1, scope: !19641)
!19653 = distinct !DISubprogram(name: "writew", scope: !11705, file: !11705, line: 66, type: !19654, scopeLine: 66, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!19654 = !DISubroutineType(types: !19655)
!19655 = !{null, !476, !11715}
!19656 = !DILocalVariable(name: "val", arg: 1, scope: !19653, file: !11705, line: 66, type: !476)
!19657 = !DILocation(line: 66, column: 1, scope: !19653)
!19658 = !DILocalVariable(name: "addr", arg: 2, scope: !19653, file: !11705, line: 66, type: !11715)
!19659 = !{i32 -2141434319}
!19660 = distinct !DISubprogram(name: "pci_get_drvdata", scope: !8801, file: !8801, line: 1865, type: !19661, scopeLine: 1866, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!19661 = !DISubroutineType(types: !19662)
!19662 = !{!591, !8799}
!19663 = !DILocalVariable(name: "pdev", arg: 1, scope: !19660, file: !8801, line: 1865, type: !8799)
!19664 = !DILocation(line: 1865, column: 53, scope: !19660)
!19665 = !DILocation(line: 1867, column: 26, scope: !19660)
!19666 = !DILocation(line: 1867, column: 32, scope: !19660)
!19667 = !DILocation(line: 1867, column: 9, scope: !19660)
!19668 = !DILocation(line: 1867, column: 2, scope: !19660)
!19669 = distinct !DISubprogram(name: "dev_get_drvdata", scope: !6540, file: !6540, line: 655, type: !19670, scopeLine: 656, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!19670 = !DISubroutineType(types: !19671)
!19671 = !{!591, !6891}
!19672 = !DILocalVariable(name: "dev", arg: 1, scope: !19669, file: !6540, line: 655, type: !6891)
!19673 = !DILocation(line: 655, column: 58, scope: !19669)
!19674 = !DILocation(line: 657, column: 9, scope: !19669)
!19675 = !DILocation(line: 657, column: 14, scope: !19669)
!19676 = !DILocation(line: 657, column: 2, scope: !19669)
!19677 = distinct !DISubprogram(name: "skge_wol_init", scope: !3, file: !3, line: 161, type: !9434, scopeLine: 162, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!19678 = !DILocalVariable(name: "skge", arg: 1, scope: !19677, file: !3, line: 161, type: !9172)
!19679 = !DILocation(line: 161, column: 45, scope: !19677)
!19680 = !DILocalVariable(name: "hw", scope: !19677, file: !3, line: 163, type: !8794)
!19681 = !DILocation(line: 163, column: 18, scope: !19677)
!19682 = !DILocation(line: 163, column: 23, scope: !19677)
!19683 = !DILocation(line: 163, column: 29, scope: !19677)
!19684 = !DILocalVariable(name: "port", scope: !19677, file: !3, line: 164, type: !32)
!19685 = !DILocation(line: 164, column: 6, scope: !19677)
!19686 = !DILocation(line: 164, column: 13, scope: !19677)
!19687 = !DILocation(line: 164, column: 19, scope: !19677)
!19688 = !DILocalVariable(name: "ctrl", scope: !19677, file: !3, line: 165, type: !581)
!19689 = !DILocation(line: 165, column: 6, scope: !19677)
!19690 = !DILocation(line: 167, column: 15, scope: !19677)
!19691 = !DILocation(line: 167, column: 2, scope: !19677)
!19692 = !DILocation(line: 168, column: 15, scope: !19677)
!19693 = !DILocation(line: 168, column: 19, scope: !19677)
!19694 = !DILocation(line: 168, column: 2, scope: !19677)
!19695 = !DILocation(line: 171, column: 14, scope: !19677)
!19696 = !DILocation(line: 171, column: 2, scope: !19677)
!19697 = !DILocation(line: 175, column: 6, scope: !19698)
!19698 = distinct !DILexicalBlock(scope: !19677, file: !3, line: 175, column: 6)
!19699 = !DILocation(line: 175, column: 10, scope: !19698)
!19700 = !DILocation(line: 175, column: 18, scope: !19698)
!19701 = !DILocation(line: 175, column: 40, scope: !19698)
!19702 = !DILocation(line: 176, column: 6, scope: !19698)
!19703 = !DILocation(line: 176, column: 10, scope: !19698)
!19704 = !DILocation(line: 176, column: 19, scope: !19698)
!19705 = !DILocation(line: 175, column: 6, scope: !19677)
!19706 = !DILocalVariable(name: "reg", scope: !19707, file: !3, line: 177, type: !987)
!19707 = distinct !DILexicalBlock(scope: !19698, file: !3, line: 176, column: 43)
!19708 = !DILocation(line: 177, column: 7, scope: !19707)
!19709 = !DILocation(line: 177, column: 25, scope: !19707)
!19710 = !DILocation(line: 177, column: 13, scope: !19707)
!19711 = !DILocation(line: 178, column: 7, scope: !19707)
!19712 = !DILocation(line: 179, column: 7, scope: !19707)
!19713 = !DILocation(line: 180, column: 16, scope: !19707)
!19714 = !DILocation(line: 180, column: 30, scope: !19707)
!19715 = !DILocation(line: 180, column: 3, scope: !19707)
!19716 = !DILocation(line: 181, column: 2, scope: !19707)
!19717 = !DILocation(line: 183, column: 15, scope: !19677)
!19718 = !DILocation(line: 183, column: 19, scope: !19677)
!19719 = !DILocation(line: 183, column: 2, scope: !19677)
!19720 = !DILocation(line: 188, column: 15, scope: !19677)
!19721 = !DILocation(line: 188, column: 19, scope: !19677)
!19722 = !DILocation(line: 188, column: 2, scope: !19677)
!19723 = !DILocation(line: 193, column: 15, scope: !19677)
!19724 = !DILocation(line: 193, column: 19, scope: !19677)
!19725 = !DILocation(line: 193, column: 2, scope: !19677)
!19726 = !DILocation(line: 196, column: 15, scope: !19677)
!19727 = !DILocation(line: 196, column: 19, scope: !19677)
!19728 = !DILocation(line: 196, column: 2, scope: !19677)
!19729 = !DILocation(line: 200, column: 15, scope: !19677)
!19730 = !DILocation(line: 200, column: 19, scope: !19677)
!19731 = !DILocation(line: 200, column: 2, scope: !19677)
!19732 = !DILocation(line: 201, column: 15, scope: !19677)
!19733 = !DILocation(line: 201, column: 19, scope: !19677)
!19734 = !DILocation(line: 201, column: 2, scope: !19677)
!19735 = !DILocation(line: 207, column: 14, scope: !19677)
!19736 = !DILocation(line: 207, column: 18, scope: !19677)
!19737 = !DILocation(line: 207, column: 2, scope: !19677)
!19738 = !DILocation(line: 212, column: 14, scope: !19677)
!19739 = !DILocation(line: 212, column: 18, scope: !19677)
!19740 = !DILocation(line: 212, column: 25, scope: !19677)
!19741 = !DILocation(line: 212, column: 23, scope: !19677)
!19742 = !DILocation(line: 213, column: 7, scope: !19677)
!19743 = !DILocation(line: 213, column: 13, scope: !19677)
!19744 = !DILocation(line: 213, column: 21, scope: !19677)
!19745 = !DILocation(line: 212, column: 2, scope: !19677)
!19746 = !DILocation(line: 216, column: 15, scope: !19677)
!19747 = !DILocation(line: 216, column: 19, scope: !19677)
!19748 = !DILocation(line: 216, column: 2, scope: !19677)
!19749 = !DILocation(line: 217, column: 7, scope: !19677)
!19750 = !DILocation(line: 218, column: 6, scope: !19751)
!19751 = distinct !DILexicalBlock(scope: !19677, file: !3, line: 218, column: 6)
!19752 = !DILocation(line: 218, column: 12, scope: !19751)
!19753 = !DILocation(line: 218, column: 16, scope: !19751)
!19754 = !DILocation(line: 218, column: 6, scope: !19677)
!19755 = !DILocation(line: 219, column: 8, scope: !19751)
!19756 = !DILocation(line: 219, column: 3, scope: !19751)
!19757 = !DILocation(line: 221, column: 8, scope: !19751)
!19758 = !DILocation(line: 223, column: 6, scope: !19759)
!19759 = distinct !DILexicalBlock(scope: !19677, file: !3, line: 223, column: 6)
!19760 = !DILocation(line: 223, column: 12, scope: !19759)
!19761 = !DILocation(line: 223, column: 16, scope: !19759)
!19762 = !DILocation(line: 223, column: 6, scope: !19677)
!19763 = !DILocation(line: 224, column: 8, scope: !19759)
!19764 = !DILocation(line: 224, column: 3, scope: !19759)
!19765 = !DILocation(line: 226, column: 8, scope: !19759)
!19766 = !DILocation(line: 228, column: 7, scope: !19677)
!19767 = !DILocation(line: 229, column: 15, scope: !19677)
!19768 = !DILocation(line: 229, column: 19, scope: !19677)
!19769 = !DILocation(line: 229, column: 50, scope: !19677)
!19770 = !DILocation(line: 229, column: 2, scope: !19677)
!19771 = !DILocation(line: 232, column: 14, scope: !19677)
!19772 = !DILocation(line: 232, column: 18, scope: !19677)
!19773 = !DILocation(line: 232, column: 2, scope: !19677)
!19774 = !DILocation(line: 233, column: 1, scope: !19677)
!19775 = distinct !DISubprogram(name: "device_may_wakeup", scope: !6733, file: !6733, line: 82, type: !13074, scopeLine: 83, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!19776 = !DILocalVariable(name: "dev", arg: 1, scope: !19775, file: !6733, line: 82, type: !6544)
!19777 = !DILocation(line: 82, column: 53, scope: !19775)
!19778 = !DILocation(line: 84, column: 9, scope: !19775)
!19779 = !DILocation(line: 84, column: 14, scope: !19775)
!19780 = !DILocation(line: 84, column: 20, scope: !19775)
!19781 = !DILocation(line: 84, column: 31, scope: !19775)
!19782 = !DILocation(line: 84, column: 36, scope: !19775)
!19783 = !DILocation(line: 84, column: 41, scope: !19775)
!19784 = !DILocation(line: 84, column: 47, scope: !19775)
!19785 = !DILocation(line: 84, column: 35, scope: !19775)
!19786 = !DILocation(line: 84, column: 34, scope: !19775)
!19787 = !DILocation(line: 0, scope: !19775)
!19788 = !DILocation(line: 84, column: 2, scope: !19775)
!19789 = distinct !DISubprogram(name: "skge_suspend", scope: !3, file: !3, line: 4055, type: !6577, scopeLine: 4056, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!19790 = !DILocalVariable(name: "dev", arg: 1, scope: !19789, file: !3, line: 4055, type: !6544)
!19791 = !DILocation(line: 4055, column: 40, scope: !19789)
!19792 = !DILocalVariable(name: "hw", scope: !19789, file: !3, line: 4057, type: !8794)
!19793 = !DILocation(line: 4057, column: 18, scope: !19789)
!19794 = !DILocation(line: 4057, column: 40, scope: !19789)
!19795 = !DILocation(line: 4057, column: 24, scope: !19789)
!19796 = !DILocalVariable(name: "i", scope: !19789, file: !3, line: 4058, type: !32)
!19797 = !DILocation(line: 4058, column: 6, scope: !19789)
!19798 = !DILocation(line: 4060, column: 7, scope: !19799)
!19799 = distinct !DILexicalBlock(scope: !19789, file: !3, line: 4060, column: 6)
!19800 = !DILocation(line: 4060, column: 6, scope: !19789)
!19801 = !DILocation(line: 4061, column: 3, scope: !19799)
!19802 = !DILocation(line: 4063, column: 9, scope: !19803)
!19803 = distinct !DILexicalBlock(scope: !19789, file: !3, line: 4063, column: 2)
!19804 = !DILocation(line: 4063, column: 7, scope: !19803)
!19805 = !DILocation(line: 4063, column: 14, scope: !19806)
!19806 = distinct !DILexicalBlock(scope: !19803, file: !3, line: 4063, column: 2)
!19807 = !DILocation(line: 4063, column: 18, scope: !19806)
!19808 = !DILocation(line: 4063, column: 22, scope: !19806)
!19809 = !DILocation(line: 4063, column: 16, scope: !19806)
!19810 = !DILocation(line: 4063, column: 2, scope: !19803)
!19811 = !DILocalVariable(name: "dev", scope: !19812, file: !3, line: 4064, type: !290)
!19812 = distinct !DILexicalBlock(scope: !19806, file: !3, line: 4063, column: 34)
!19813 = !DILocation(line: 4064, column: 22, scope: !19812)
!19814 = !DILocation(line: 4064, column: 28, scope: !19812)
!19815 = !DILocation(line: 4064, column: 32, scope: !19812)
!19816 = !DILocation(line: 4064, column: 36, scope: !19812)
!19817 = !DILocalVariable(name: "skge", scope: !19812, file: !3, line: 4065, type: !9172)
!19818 = !DILocation(line: 4065, column: 21, scope: !19812)
!19819 = !DILocation(line: 4065, column: 40, scope: !19812)
!19820 = !DILocation(line: 4065, column: 28, scope: !19812)
!19821 = !DILocation(line: 4067, column: 21, scope: !19822)
!19822 = distinct !DILexicalBlock(scope: !19812, file: !3, line: 4067, column: 7)
!19823 = !DILocation(line: 4067, column: 7, scope: !19822)
!19824 = !DILocation(line: 4067, column: 7, scope: !19812)
!19825 = !DILocation(line: 4068, column: 14, scope: !19822)
!19826 = !DILocation(line: 4068, column: 4, scope: !19822)
!19827 = !DILocation(line: 4070, column: 7, scope: !19828)
!19828 = distinct !DILexicalBlock(scope: !19812, file: !3, line: 4070, column: 7)
!19829 = !DILocation(line: 4070, column: 13, scope: !19828)
!19830 = !DILocation(line: 4070, column: 7, scope: !19812)
!19831 = !DILocation(line: 4071, column: 18, scope: !19828)
!19832 = !DILocation(line: 4071, column: 4, scope: !19828)
!19833 = !DILocation(line: 4072, column: 2, scope: !19812)
!19834 = !DILocation(line: 4063, column: 30, scope: !19806)
!19835 = !DILocation(line: 4063, column: 2, scope: !19806)
!19836 = distinct !{!19836, !19810, !19837}
!19837 = !DILocation(line: 4072, column: 2, scope: !19803)
!19838 = !DILocation(line: 4074, column: 15, scope: !19789)
!19839 = !DILocation(line: 4074, column: 2, scope: !19789)
!19840 = !DILocation(line: 4076, column: 2, scope: !19789)
!19841 = !DILocation(line: 4077, column: 1, scope: !19789)
!19842 = distinct !DISubprogram(name: "skge_resume", scope: !3, file: !3, line: 4079, type: !6577, scopeLine: 4080, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!19843 = !DILocalVariable(name: "dev", arg: 1, scope: !19842, file: !3, line: 4079, type: !6544)
!19844 = !DILocation(line: 4079, column: 39, scope: !19842)
!19845 = !DILocalVariable(name: "hw", scope: !19842, file: !3, line: 4081, type: !8794)
!19846 = !DILocation(line: 4081, column: 18, scope: !19842)
!19847 = !DILocation(line: 4081, column: 40, scope: !19842)
!19848 = !DILocation(line: 4081, column: 24, scope: !19842)
!19849 = !DILocalVariable(name: "i", scope: !19842, file: !3, line: 4082, type: !32)
!19850 = !DILocation(line: 4082, column: 6, scope: !19842)
!19851 = !DILocalVariable(name: "err", scope: !19842, file: !3, line: 4082, type: !32)
!19852 = !DILocation(line: 4082, column: 9, scope: !19842)
!19853 = !DILocation(line: 4084, column: 7, scope: !19854)
!19854 = distinct !DILexicalBlock(scope: !19842, file: !3, line: 4084, column: 6)
!19855 = !DILocation(line: 4084, column: 6, scope: !19842)
!19856 = !DILocation(line: 4085, column: 3, scope: !19854)
!19857 = !DILocation(line: 4087, column: 19, scope: !19842)
!19858 = !DILocation(line: 4087, column: 8, scope: !19842)
!19859 = !DILocation(line: 4087, column: 6, scope: !19842)
!19860 = !DILocation(line: 4088, column: 6, scope: !19861)
!19861 = distinct !DILexicalBlock(scope: !19842, file: !3, line: 4088, column: 6)
!19862 = !DILocation(line: 4088, column: 6, scope: !19842)
!19863 = !DILocation(line: 4089, column: 3, scope: !19861)
!19864 = !DILocation(line: 4091, column: 9, scope: !19865)
!19865 = distinct !DILexicalBlock(scope: !19842, file: !3, line: 4091, column: 2)
!19866 = !DILocation(line: 4091, column: 7, scope: !19865)
!19867 = !DILocation(line: 4091, column: 14, scope: !19868)
!19868 = distinct !DILexicalBlock(scope: !19865, file: !3, line: 4091, column: 2)
!19869 = !DILocation(line: 4091, column: 18, scope: !19868)
!19870 = !DILocation(line: 4091, column: 22, scope: !19868)
!19871 = !DILocation(line: 4091, column: 16, scope: !19868)
!19872 = !DILocation(line: 4091, column: 2, scope: !19865)
!19873 = !DILocalVariable(name: "dev", scope: !19874, file: !3, line: 4092, type: !290)
!19874 = distinct !DILexicalBlock(scope: !19868, file: !3, line: 4091, column: 34)
!19875 = !DILocation(line: 4092, column: 22, scope: !19874)
!19876 = !DILocation(line: 4092, column: 28, scope: !19874)
!19877 = !DILocation(line: 4092, column: 32, scope: !19874)
!19878 = !DILocation(line: 4092, column: 36, scope: !19874)
!19879 = !DILocation(line: 4094, column: 21, scope: !19880)
!19880 = distinct !DILexicalBlock(scope: !19874, file: !3, line: 4094, column: 7)
!19881 = !DILocation(line: 4094, column: 7, scope: !19880)
!19882 = !DILocation(line: 4094, column: 7, scope: !19874)
!19883 = !DILocation(line: 4095, column: 18, scope: !19884)
!19884 = distinct !DILexicalBlock(scope: !19880, file: !3, line: 4094, column: 27)
!19885 = !DILocation(line: 4095, column: 10, scope: !19884)
!19886 = !DILocation(line: 4095, column: 8, scope: !19884)
!19887 = !DILocation(line: 4097, column: 8, scope: !19888)
!19888 = distinct !DILexicalBlock(scope: !19884, file: !3, line: 4097, column: 8)
!19889 = !DILocation(line: 4097, column: 8, scope: !19884)
!19890 = !DILocation(line: 4098, column: 16, scope: !19891)
!19891 = distinct !DILexicalBlock(scope: !19888, file: !3, line: 4097, column: 13)
!19892 = !DILocation(line: 4098, column: 43, scope: !19891)
!19893 = !DILocation(line: 4098, column: 5, scope: !19891)
!19894 = !DILocation(line: 4099, column: 15, scope: !19891)
!19895 = !DILocation(line: 4099, column: 5, scope: !19891)
!19896 = !DILocation(line: 4100, column: 5, scope: !19891)
!19897 = !DILocation(line: 4102, column: 3, scope: !19884)
!19898 = !DILocation(line: 4103, column: 2, scope: !19874)
!19899 = !DILocation(line: 4091, column: 30, scope: !19868)
!19900 = !DILocation(line: 4091, column: 2, scope: !19868)
!19901 = distinct !{!19901, !19872, !19902}
!19902 = !DILocation(line: 4103, column: 2, scope: !19865)
!19903 = !DILabel(scope: !19842, name: "out", file: !3, line: 4104)
!19904 = !DILocation(line: 4104, column: 1, scope: !19842)
!19905 = !DILocation(line: 4105, column: 9, scope: !19842)
!19906 = !DILocation(line: 4105, column: 2, scope: !19842)
!19907 = !DILocation(line: 4106, column: 1, scope: !19842)
